

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Aug 11 12:16:40 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    20                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    86                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    87  0000                     
    88                           	psect	idataCOMRAM
    89  001B0E                     __pidataCOMRAM:
    90                           	opt stack 0
    91                           
    92                           ;initializer for _q
    93  001B0E  00                 	db	0
    94  001B0F  80                 	db	128
    95  001B10  3F                 	db	63
    96  001B11  00                 	db	0
    97  001B12  00                 	db	0
    98  001B13  00                 	db	0
    99  001B14  00                 	db	0
   100  001B15  00                 	db	0
   101  001B16  00                 	db	0
   102  001B17  00                 	db	0
   103  001B18  00                 	db	0
   104  001B19  00                 	db	0
   105                           
   106                           ;initializer for _OPRMode
   107  001B1A  0C                 	db	12
   108                           
   109                           	psect	idataBANK0
   110  001B27                     __pidataBANK0:
   111                           	opt stack 0
   112                           
   113                           ;initializer for _GyroMeasError
   114  001B27  C6                 	db	198
   115  001B28  32                 	db	50
   116  001B29  3F                 	db	63
   117                           
   118                           ;initializer for _Abw
   119  001B2A  02                 	db	2
   120                           
   121                           ;initializer for _Gbw
   122  001B2B  04                 	db	4
   123                           
   124                           ;initializer for _Gscale
   125  001B2C  03                 	db	3
   126                           
   127                           ;initializer for _MOpMode
   128  001B2D  01                 	db	1
   129                           
   130                           ;initializer for _Modr
   131  001B2E  03                 	db	3
   132                           
   133                           ;initializer for _Transmit_stall
   134  001B2F  01                 	db	1
   135                           
   136                           ;initializer for _intPin
   137  001B30  08                 	db	8
   138                           
   139                           ;initializer for _myLed
   140  001B31  0D                 	db	13
   141                           
   142                           	psect	idataBANK1
   143  001B1B                     __pidataBANK1:
   144                           	opt stack 0
   145                           
   146                           ;initializer for _quat
   147  001B1B  00                 	db	0
   148  001B1C  80                 	db	128
   149  001B1D  3F                 	db	63
   150  001B1E  00                 	db	0
   151  001B1F  00                 	db	0
   152  001B20  00                 	db	0
   153  001B21  00                 	db	0
   154  001B22  00                 	db	0
   155  001B23  00                 	db	0
   156  001B24  00                 	db	0
   157  001B25  00                 	db	0
   158  001B26  00                 	db	0
   159                           
   160                           	psect	mediumconst
   161  0077B8                     __pmediumconst:
   162                           	opt stack 0
   163  0077B8  00                 	db	0
   164  0077B9                     _octpowers:
   165                           	opt stack 0
   166  0077B9  0001               	dw	1
   167  0077BB  0000               	dw	0
   168  0077BD  0008               	dw	8
   169  0077BF  0000               	dw	0
   170  0077C1  0040               	dw	64
   171  0077C3  0000               	dw	0
   172  0077C5  0200               	dw	512
   173  0077C7  0000               	dw	0
   174  0077C9  1000               	dw	4096
   175  0077CB  0000               	dw	0
   176  0077CD  8000               	dw	32768
   177  0077CF  0000               	dw	0
   178  0077D1  0000               	dw	0
   179  0077D3  0004               	dw	4
   180  0077D5  0000               	dw	0
   181  0077D7  0020               	dw	32
   182  0077D9  0000               	dw	0
   183  0077DB  0100               	dw	256
   184  0077DD  0000               	dw	0
   185  0077DF  0800               	dw	2048
   186  0077E1  0000               	dw	0
   187  0077E3  4000               	dw	16384
   188  0077E5  0000               	dw	0
   189  0077E7  0000               	dw	0
   190  0077E9                     __end_of_octpowers:
   191                           	opt stack 0
   192  0077E9                     _dpowers:
   193                           	opt stack 0
   194  0077E9  0001               	dw	1
   195  0077EB  0000               	dw	0
   196  0077ED  000A               	dw	10
   197  0077EF  0000               	dw	0
   198  0077F1  0064               	dw	100
   199  0077F3  0000               	dw	0
   200  0077F5  03E8               	dw	1000
   201  0077F7  0000               	dw	0
   202  0077F9  2710               	dw	10000
   203  0077FB  0000               	dw	0
   204  0077FD  86A0               	dw	34464
   205  0077FF  0001               	dw	1
   206  007801  4240               	dw	16960
   207  007803  000F               	dw	15
   208  007805  9680               	dw	38528
   209  007807  0098               	dw	152
   210  007809  E100               	dw	57600
   211  00780B  05F5               	dw	1525
   212  00780D  CA00               	dw	51712
   213  00780F  3B9A               	dw	15258
   214  007811                     __end_of_dpowers:
   215                           	opt stack 0
   216  007811                     __npowers_:
   217                           	opt stack 0
   218  007811  00                 	db	0
   219  007812  80                 	db	128
   220  007813  3F                 	db	63
   221  007814  CD                 	db	205
   222  007815  CC                 	db	204
   223  007816  3D                 	db	61
   224  007817  D7                 	db	215
   225  007818  23                 	db	35
   226  007819  3C                 	db	60
   227  00781A  12                 	db	18
   228  00781B  83                 	db	131
   229  00781C  3A                 	db	58
   230  00781D  B7                 	db	183
   231  00781E  D1                 	db	209
   232  00781F  38                 	db	56
   233  007820  C6                 	db	198
   234  007821  27                 	db	39
   235  007822  37                 	db	55
   236  007823  38                 	db	56
   237  007824  86                 	db	134
   238  007825  35                 	db	53
   239  007826  C0                 	db	192
   240  007827  D6                 	db	214
   241  007828  33                 	db	51
   242  007829  CC                 	db	204
   243  00782A  2B                 	db	43
   244  00782B  32                 	db	50
   245  00782C  70                 	db	112
   246  00782D  89                 	db	137
   247  00782E  30                 	db	48
   248  00782F  E7                 	db	231
   249  007830  DB                 	db	219
   250  007831  2E                 	db	46
   251  007832  E5                 	db	229
   252  007833  3C                 	db	60
   253  007834  1E                 	db	30
   254  007835  42                 	db	66
   255  007836  A2                 	db	162
   256  007837  0D                 	db	13
   257  007838                     __end_of__npowers_:
   258                           	opt stack 0
   259  007838                     __powers_:
   260                           	opt stack 0
   261  007838  00                 	db	0
   262  007839  80                 	db	128
   263  00783A  3F                 	db	63
   264  00783B  00                 	db	0
   265  00783C  20                 	db	32
   266  00783D  41                 	db	65
   267  00783E  00                 	db	0
   268  00783F  C8                 	db	200
   269  007840  42                 	db	66
   270  007841  00                 	db	0
   271  007842  7A                 	db	122
   272  007843  44                 	db	68
   273  007844  40                 	db	64
   274  007845  1C                 	db	28
   275  007846  46                 	db	70
   276  007847  50                 	db	80
   277  007848  C3                 	db	195
   278  007849  47                 	db	71
   279  00784A  24                 	db	36
   280  00784B  74                 	db	116
   281  00784C  49                 	db	73
   282  00784D  97                 	db	151
   283  00784E  18                 	db	24
   284  00784F  4B                 	db	75
   285  007850  BC                 	db	188
   286  007851  BE                 	db	190
   287  007852  4C                 	db	76
   288  007853  6B                 	db	107
   289  007854  6E                 	db	110
   290  007855  4E                 	db	78
   291  007856  03                 	db	3
   292  007857  15                 	db	21
   293  007858  50                 	db	80
   294  007859  79                 	db	121
   295  00785A  AD                 	db	173
   296  00785B  60                 	db	96
   297  00785C  F3                 	db	243
   298  00785D  49                 	db	73
   299  00785E  71                 	db	113
   300  00785F                     __end_of__powers_:
   301                           	opt stack 0
   302  00785F                     _hexpowers:
   303                           	opt stack 0
   304  00785F  0001               	dw	1
   305  007861  0000               	dw	0
   306  007863  0010               	dw	16
   307  007865  0000               	dw	0
   308  007867  0100               	dw	256
   309  007869  0000               	dw	0
   310  00786B  1000               	dw	4096
   311  00786D  0000               	dw	0
   312  00786F  0000               	dw	0
   313  007871  0001               	dw	1
   314  007873  0000               	dw	0
   315  007875  0010               	dw	16
   316  007877  0000               	dw	0
   317  007879  0100               	dw	256
   318  00787B  0000               	dw	0
   319  00787D  1000               	dw	4096
   320  00787F                     __end_of_hexpowers:
   321                           	opt stack 0
   322  00787F                     atan@coeff_a:
   323                           	opt stack 0
   324  00787F  3C                 	db	60
   325  007880  04                 	db	4
   326  007881  42                 	db	66
   327  007882  9F                 	db	159
   328  007883  6A                 	db	106
   329  007884  42                 	db	66
   330  007885  90                 	db	144
   331  007886  01                 	db	1
   332  007887  42                 	db	66
   333  007888  4D                 	db	77
   334  007889  BB                 	db	187
   335  00788A  40                 	db	64
   336  00788B  EC                 	db	236
   337  00788C  47                 	db	71
   338  00788D  3E                 	db	62
   339  00788E  8E                 	db	142
   340  00788F  1F                 	db	31
   341  007890  BB                 	db	187
   342  007891                     __end_ofatan@coeff_a:
   343                           	opt stack 0
   344  007891                     atan@coeff_b:
   345                           	opt stack 0
   346  007891  3C                 	db	60
   347  007892  04                 	db	4
   348  007893  42                 	db	66
   349  007894  5A                 	db	90
   350  007895  8B                 	db	139
   351  007896  42                 	db	66
   352  007897  04                 	db	4
   353  007898  44                 	db	68
   354  007899  42                 	db	66
   355  00789A  9C                 	db	156
   356  00789B  4F                 	db	79
   357  00789C  41                 	db	65
   358  00789D  00                 	db	0
   359  00789E  80                 	db	128
   360  00789F  3F                 	db	63
   361  0078A0                     __end_ofatan@coeff_b:
   362                           	opt stack 0
   363  0000                     _ANSELA	set	3896
   364  0000                     _ANSELB	set	3897
   365  0000                     _ANSELC	set	3898
   366  0000                     _ANSELD	set	3899
   367  0000                     _ANSELE	set	3900
   368  0000                     _CCPTMRS0bits	set	3913
   369  0000                     _TMR1	set	4046
   370  0000                     _ADCON0	set	4034
   371  0000                     _ADCON0bits	set	4034
   372  0000                     _ADCON1	set	4033
   373  0000                     _ADCON2	set	4032
   374  0000                     _ADRESH	set	4036
   375  0000                     _ADRESL	set	4035
   376  0000                     _BAUD1CON	set	4024
   377  0000                     _CCP1CON	set	4029
   378  0000                     _CCP2CON	set	3942
   379  0000                     _CCPR1H	set	4031
   380  0000                     _CCPR1L	set	4030
   381  0000                     _CCPR2H	set	3944
   382  0000                     _CCPR2L	set	3943
   383  0000                     _INTCON2bits	set	4081
   384  0000                     _INTCONbits	set	4082
   385  0000                     _IPR1bits	set	3999
   386  0000                     _IPR2bits	set	4002
   387  0000                     _LATA	set	3977
   388  0000                     _LATB	set	3978
   389  0000                     _LATC	set	3979
   390  0000                     _LATCbits	set	3979
   391  0000                     _LATD	set	3980
   392  0000                     _LATE	set	3981
   393  0000                     _OSCCON	set	4051
   394  0000                     _OSCCON2	set	4050
   395  0000                     _OSCTUNE	set	3995
   396  0000                     _PIE1bits	set	3997
   397  0000                     _PIE2bits	set	4000
   398  0000                     _PIR1bits	set	3998
   399  0000                     _PIR2bits	set	4001
   400  0000                     _PR2	set	4027
   401  0000                     _RC1STA	set	4011
   402  0000                     _RC1STAbits	set	4011
   403  0000                     _RCONbits	set	4048
   404  0000                     _RCREG1	set	4014
   405  0000                     _SPBRG1	set	4015
   406  0000                     _SPBRGH1	set	4016
   407  0000                     _SSP1ADD	set	4040
   408  0000                     _SSP1BUF	set	4041
   409  0000                     _SSP1CON1	set	4038
   410  0000                     _SSP1CON1bits	set	4038
   411  0000                     _SSP1CON2bits	set	4037
   412  0000                     _SSP1CON3	set	4043
   413  0000                     _SSP1STAT	set	4039
   414  0000                     _T1CON	set	4045
   415  0000                     _T1CONbits	set	4045
   416  0000                     _T1GCON	set	4044
   417  0000                     _T1GCONbits	set	4044
   418  0000                     _T2CON	set	4026
   419  0000                     _T2CONbits	set	4026
   420  0000                     _TMR1H	set	4047
   421  0000                     _TMR1L	set	4046
   422  0000                     _TMR2	set	4028
   423  0000                     _TRISA	set	3986
   424  0000                     _TRISB	set	3987
   425  0000                     _TRISC	set	3988
   426  0000                     _TRISD	set	3989
   427  0000                     _TRISE	set	3990
   428  0000                     _TX1STA	set	4012
   429  0000                     _TXREG1	set	4013
   430  0000                     _WPUB	set	3937
   431  0078A0  41                 	db	65	;'A'
   432  0078A1  63                 	db	99	;'c'
   433  0078A2  63                 	db	99	;'c'
   434  0078A3  65                 	db	101	;'e'
   435  0078A4  6C                 	db	108	;'l'
   436  0078A5  2F                 	db	47
   437  0078A6  47                 	db	71	;'G'
   438  0078A7  79                 	db	121	;'y'
   439  0078A8  72                 	db	114	;'r'
   440  0078A9  6F                 	db	111	;'o'
   441  0078AA  20                 	db	32
   442  0078AB  43                 	db	67	;'C'
   443  0078AC  61                 	db	97	;'a'
   444  0078AD  6C                 	db	108	;'l'
   445  0078AE  69                 	db	105	;'i'
   446  0078AF  62                 	db	98	;'b'
   447  0078B0  72                 	db	114	;'r'
   448  0078B1  61                 	db	97	;'a'
   449  0078B2  74                 	db	116	;'t'
   450  0078B3  69                 	db	105	;'i'
   451  0078B4  6F                 	db	111	;'o'
   452  0078B5  6E                 	db	110	;'n'
   453  0078B6  3A                 	db	58	;':'
   454  0078B7  20                 	db	32
   455  0078B8  50                 	db	80	;'P'
   456  0078B9  75                 	db	117	;'u'
   457  0078BA  74                 	db	116	;'t'
   458  0078BB  20                 	db	32
   459  0078BC  64                 	db	100	;'d'
   460  0078BD  65                 	db	101	;'e'
   461  0078BE  76                 	db	118	;'v'
   462  0078BF  69                 	db	105	;'i'
   463  0078C0  63                 	db	99	;'c'
   464  0078C1  65                 	db	101	;'e'
   465  0078C2  20                 	db	32
   466  0078C3  6F                 	db	111	;'o'
   467  0078C4  6E                 	db	110	;'n'
   468  0078C5  20                 	db	32
   469  0078C6  61                 	db	97	;'a'
   470  0078C7  20                 	db	32
   471  0078C8  6C                 	db	108	;'l'
   472  0078C9  65                 	db	101	;'e'
   473  0078CA  76                 	db	118	;'v'
   474  0078CB  65                 	db	101	;'e'
   475  0078CC  6C                 	db	108	;'l'
   476  0078CD  20                 	db	32
   477  0078CE  73                 	db	115	;'s'
   478  0078CF  75                 	db	117	;'u'
   479  0078D0  72                 	db	114	;'r'
   480  0078D1  66                 	db	102	;'f'
   481  0078D2  61                 	db	97	;'a'
   482  0078D3  63                 	db	99	;'c'
   483  0078D4  65                 	db	101	;'e'
   484  0078D5  20                 	db	32
   485  0078D6  61                 	db	97	;'a'
   486  0078D7  6E                 	db	110	;'n'
   487  0078D8  64                 	db	100	;'d'
   488  0078D9  20                 	db	32
   489  0078DA  6B                 	db	107	;'k'
   490  0078DB  65                 	db	101	;'e'
   491  0078DC  65                 	db	101	;'e'
   492  0078DD  70                 	db	112	;'p'
   493  0078DE  20                 	db	32
   494  0078DF  6D                 	db	109	;'m'
   495  0078E0  6F                 	db	111	;'o'
   496  0078E1  74                 	db	116	;'t'
   497  0078E2  69                 	db	105	;'i'
   498  0078E3  6F                 	db	111	;'o'
   499  0078E4  6E                 	db	110	;'n'
   500  0078E5  6C                 	db	108	;'l'
   501  0078E6  65                 	db	101	;'e'
   502  0078E7  73                 	db	115	;'s'
   503  0078E8  73                 	db	115	;'s'
   504  0078E9  21                 	db	33
   505  0078EA  20                 	db	32
   506  0078EB  57                 	db	87	;'W'
   507  0078EC  61                 	db	97	;'a'
   508  0078ED  69                 	db	105	;'i'
   509  0078EE  74                 	db	116	;'t'
   510  0078EF  2E                 	db	46
   511  0078F0  2E                 	db	46
   512  0078F1  2E                 	db	46
   513  0078F2  2E                 	db	46
   514  0078F3  2E                 	db	46
   515  0078F4  2E                 	db	46
   516  0078F5  00                 	db	0
   517  0078F6  42                 	db	66	;'B'
   518  0078F7  4E                 	db	78	;'N'
   519  0078F8  4F                 	db	79	;'O'
   520  0078F9  20                 	db	32
   521  0078FA  6C                 	db	108	;'l'
   522  0078FB  6F                 	db	111	;'o'
   523  0078FC  77                 	db	119	;'w'
   524  0078FD  20                 	db	32
   525  0078FE  70                 	db	112	;'p'
   526  0078FF  6F                 	db	111	;'o'
   527  007900  77                 	db	119	;'w'
   528  007901  65                 	db	101	;'e'
   529  007902  72                 	db	114	;'r'
   530  007903  20                 	db	32
   531  007904  6D                 	db	109	;'m'
   532  007905  6F                 	db	111	;'o'
   533  007906  64                 	db	100	;'d'
   534  007907  65                 	db	101	;'e'
   535  007908  20                 	db	32
   536  007909  6E                 	db	110	;'n'
   537  00790A  6F                 	db	111	;'o'
   538  00790B  20                 	db	32
   539  00790C  61                 	db	97	;'a'
   540  00790D  76                 	db	118	;'v'
   541  00790E  61                 	db	97	;'a'
   542  00790F  69                 	db	105	;'i'
   543  007910  6C                 	db	108	;'l'
   544  007911  61                 	db	97	;'a'
   545  007912  62                 	db	98	;'b'
   546  007913  6C                 	db	108	;'l'
   547  007914  65                 	db	101	;'e'
   548  007915  20                 	db	32
   549  007916  66                 	db	102	;'f'
   550  007917  6F                 	db	111	;'o'
   551  007918  72                 	db	114	;'r'
   552  007919  20                 	db	32
   553  00791A  73                 	db	115	;'s'
   554  00791B  65                 	db	101	;'e'
   555  00791C  6C                 	db	108	;'l'
   556  00791D  65                 	db	101	;'e'
   557  00791E  63                 	db	99	;'c'
   558  00791F  74                 	db	116	;'t'
   559  007920  65                 	db	101	;'e'
   560  007921  64                 	db	100	;'d'
   561  007922  20                 	db	32
   562  007923  6F                 	db	111	;'o'
   563  007924  70                 	db	112	;'p'
   564  007925  65                 	db	101	;'e'
   565  007926  72                 	db	114	;'r'
   566  007927  61                 	db	97	;'a'
   567  007928  74                 	db	116	;'t'
   568  007929  69                 	db	105	;'i'
   569  00792A  6F                 	db	111	;'o'
   570  00792B  6E                 	db	110	;'n'
   571  00792C  20                 	db	32
   572  00792D  6D                 	db	109	;'m'
   573  00792E  6F                 	db	111	;'o'
   574  00792F  64                 	db	100	;'d'
   575  007930  65                 	db	101	;'e'
   576  007931  00                 	db	0
   577  007932  4D                 	db	77	;'M'
   578  007933  61                 	db	97	;'a'
   579  007934  67                 	db	103	;'g'
   580  007935  20                 	db	32
   581  007936  43                 	db	67	;'C'
   582  007937  61                 	db	97	;'a'
   583  007938  6C                 	db	108	;'l'
   584  007939  69                 	db	105	;'i'
   585  00793A  62                 	db	98	;'b'
   586  00793B  72                 	db	114	;'r'
   587  00793C  61                 	db	97	;'a'
   588  00793D  74                 	db	116	;'t'
   589  00793E  69                 	db	105	;'i'
   590  00793F  6F                 	db	111	;'o'
   591  007940  6E                 	db	110	;'n'
   592  007941  3A                 	db	58	;':'
   593  007942  20                 	db	32
   594  007943  57                 	db	87	;'W'
   595  007944  61                 	db	97	;'a'
   596  007945  76                 	db	118	;'v'
   597  007946  65                 	db	101	;'e'
   598  007947  20                 	db	32
   599  007948  64                 	db	100	;'d'
   600  007949  65                 	db	101	;'e'
   601  00794A  76                 	db	118	;'v'
   602  00794B  69                 	db	105	;'i'
   603  00794C  63                 	db	99	;'c'
   604  00794D  65                 	db	101	;'e'
   605  00794E  20                 	db	32
   606  00794F  69                 	db	105	;'i'
   607  007950  6E                 	db	110	;'n'
   608  007951  20                 	db	32
   609  007952  61                 	db	97	;'a'
   610  007953  20                 	db	32
   611  007954  66                 	db	102	;'f'
   612  007955  69                 	db	105	;'i'
   613  007956  67                 	db	103	;'g'
   614  007957  75                 	db	117	;'u'
   615  007958  72                 	db	114	;'r'
   616  007959  65                 	db	101	;'e'
   617  00795A  20                 	db	32
   618  00795B  65                 	db	101	;'e'
   619  00795C  69                 	db	105	;'i'
   620  00795D  67                 	db	103	;'g'
   621  00795E  68                 	db	104	;'h'
   622  00795F  74                 	db	116	;'t'
   623  007960  20                 	db	32
   624  007961  75                 	db	117	;'u'
   625  007962  6E                 	db	110	;'n'
   626  007963  74                 	db	116	;'t'
   627  007964  69                 	db	105	;'i'
   628  007965  6C                 	db	108	;'l'
   629  007966  20                 	db	32
   630  007967  64                 	db	100	;'d'
   631  007968  6F                 	db	111	;'o'
   632  007969  6E                 	db	110	;'n'
   633  00796A  65                 	db	101	;'e'
   634  00796B  21                 	db	33
   635  00796C  00                 	db	0
   636  00796D  4E                 	db	78	;'N'
   637  00796E  6F                 	db	111	;'o'
   638  00796F  74                 	db	116	;'t'
   639  007970  20                 	db	32
   640  007971  63                 	db	99	;'c'
   641  007972  61                 	db	97	;'a'
   642  007973  6C                 	db	108	;'l'
   643  007974  69                 	db	105	;'i'
   644  007975  62                 	db	98	;'b'
   645  007976  72                 	db	114	;'r'
   646  007977  61                 	db	97	;'a'
   647  007978  74                 	db	116	;'t'
   648  007979  65                 	db	101	;'e'
   649  00797A  64                 	db	100	;'d'
   650  00797B  20                 	db	32
   651  00797C  3D                 	db	61	;'='
   652  00797D  20                 	db	32
   653  00797E  30                 	db	48	;'0'
   654  00797F  2C                 	db	44
   655  007980  20                 	db	32
   656  007981  66                 	db	102	;'f'
   657  007982  75                 	db	117	;'u'
   658  007983  6C                 	db	108	;'l'
   659  007984  6C                 	db	108	;'l'
   660  007985  79                 	db	121	;'y'
   661  007986  20                 	db	32
   662  007987  63                 	db	99	;'c'
   663  007988  61                 	db	97	;'a'
   664  007989  6C                 	db	108	;'l'
   665  00798A  69                 	db	105	;'i'
   666  00798B  62                 	db	98	;'b'
   667  00798C  72                 	db	114	;'r'
   668  00798D  61                 	db	97	;'a'
   669  00798E  74                 	db	116	;'t'
   670  00798F  65                 	db	101	;'e'
   671  007990  64                 	db	100	;'d'
   672  007991  20                 	db	32
   673  007992  3D                 	db	61	;'='
   674  007993  20                 	db	32
   675  007994  33                 	db	51	;'3'
   676  007995  00                 	db	0
   677  007996  48                 	db	72	;'H'
   678  007997  61                 	db	97	;'a'
   679  007998  72                 	db	114	;'r'
   680  007999  64                 	db	100	;'d'
   681  00799A  77                 	db	119	;'w'
   682  00799B  61                 	db	97	;'a'
   683  00799C  72                 	db	114	;'r'
   684  00799D  65                 	db	101	;'e'
   685  00799E  20                 	db	32
   686  00799F  78                 	db	120	;'x'
   687  0079A0  2C                 	db	44
   688  0079A1  20                 	db	32
   689  0079A2  79                 	db	121	;'y'
   690  0079A3  2C                 	db	44
   691  0079A4  20                 	db	32
   692  0079A5  7A                 	db	122	;'z'
   693  0079A6  20                 	db	32
   694  0079A7  6C                 	db	108	;'l'
   695  0079A8  69                 	db	105	;'i'
   696  0079A9  6E                 	db	110	;'n'
   697  0079AA  65                 	db	101	;'e'
   698  0079AB  61                 	db	97	;'a'
   699  0079AC  72                 	db	114	;'r'
   700  0079AD  20                 	db	32
   701  0079AE  61                 	db	97	;'a'
   702  0079AF  63                 	db	99	;'c'
   703  0079B0  63                 	db	99	;'c'
   704  0079B1  65                 	db	101	;'e'
   705  0079B2  6C                 	db	108	;'l'
   706  0079B3  65                 	db	101	;'e'
   707  0079B4  72                 	db	114	;'r'
   708  0079B5  61                 	db	97	;'a'
   709  0079B6  74                 	db	116	;'t'
   710  0079B7  69                 	db	105	;'i'
   711  0079B8  6F                 	db	111	;'o'
   712  0079B9  6E                 	db	110	;'n'
   713  0079BA  3A                 	db	58	;':'
   714  0079BB  0A                 	db	10
   715  0079BC  20                 	db	32
   716  0079BD  00                 	db	0
   717  0079BE  42                 	db	66	;'B'
   718  0079BF  4E                 	db	78	;'N'
   719  0079C0  4F                 	db	79	;'O'
   720  0079C1  30                 	db	48	;'0'
   721  0079C2  35                 	db	53	;'5'
   722  0079C3  35                 	db	53	;'5'
   723  0079C4  20                 	db	32
   724  0079C5  69                 	db	105	;'i'
   725  0079C6  6E                 	db	110	;'n'
   726  0079C7  69                 	db	105	;'i'
   727  0079C8  74                 	db	116	;'t'
   728  0079C9  69                 	db	105	;'i'
   729  0079CA  61                 	db	97	;'a'
   730  0079CB  6C                 	db	108	;'l'
   731  0079CC  69                 	db	105	;'i'
   732  0079CD  7A                 	db	122	;'z'
   733  0079CE  65                 	db	101	;'e'
   734  0079CF  64                 	db	100	;'d'
   735  0079D0  20                 	db	32
   736  0079D1  66                 	db	102	;'f'
   737  0079D2  6F                 	db	111	;'o'
   738  0079D3  72                 	db	114	;'r'
   739  0079D4  20                 	db	32
   740  0079D5  73                 	db	115	;'s'
   741  0079D6  65                 	db	101	;'e'
   742  0079D7  6E                 	db	110	;'n'
   743  0079D8  73                 	db	115	;'s'
   744  0079D9  6F                 	db	111	;'o'
   745  0079DA  72                 	db	114	;'r'
   746  0079DB  20                 	db	32
   747  0079DC  6D                 	db	109	;'m'
   748  0079DD  6F                 	db	111	;'o'
   749  0079DE  64                 	db	100	;'d'
   750  0079DF  65                 	db	101	;'e'
   751  0079E0  2E                 	db	46
   752  0079E1  2E                 	db	46
   753  0079E2  2E                 	db	46
   754  0079E3  2E                 	db	46
   755  0079E4  00                 	db	0
   756  0079E5  41                 	db	65	;'A'
   757  0079E6  63                 	db	99	;'c'
   758  0079E7  63                 	db	99	;'c'
   759  0079E8  65                 	db	101	;'e'
   760  0079E9  6C                 	db	108	;'l'
   761  0079EA  65                 	db	101	;'e'
   762  0079EB  72                 	db	114	;'r'
   763  0079EC  6F                 	db	111	;'o'
   764  0079ED  6D                 	db	109	;'m'
   765  0079EE  65                 	db	101	;'e'
   766  0079EF  74                 	db	116	;'t'
   767  0079F0  65                 	db	101	;'e'
   768  0079F1  72                 	db	114	;'r'
   769  0079F2  20                 	db	32
   770  0079F3  70                 	db	112	;'p'
   771  0079F4  6F                 	db	111	;'o'
   772  0079F5  77                 	db	119	;'w'
   773  0079F6  65                 	db	101	;'e'
   774  0079F7  72                 	db	114	;'r'
   775  0079F8  20                 	db	32
   776  0079F9  6D                 	db	109	;'m'
   777  0079FA  6F                 	db	111	;'o'
   778  0079FB  64                 	db	100	;'d'
   779  0079FC  65                 	db	101	;'e'
   780  0079FD  20                 	db	32
   781  0079FE  6E                 	db	110	;'n'
   782  0079FF  6F                 	db	111	;'o'
   783  007A00  74                 	db	116	;'t'
   784  007A01  20                 	db	32
   785  007A02  61                 	db	97	;'a'
   786  007A03  76                 	db	118	;'v'
   787  007A04  61                 	db	97	;'a'
   788  007A05  69                 	db	105	;'i'
   789  007A06  6C                 	db	108	;'l'
   790  007A07  61                 	db	97	;'a'
   791  007A08  62                 	db	98	;'b'
   792  007A09  6C                 	db	108	;'l'
   793  007A0A  65                 	db	101	;'e'
   794  007A0B  00                 	db	0
   795  007A0C  42                 	db	66	;'B'
   796  007A0D  4E                 	db	78	;'N'
   797  007A0E  4F                 	db	79	;'O'
   798  007A0F  30                 	db	48	;'0'
   799  007A10  35                 	db	53	;'5'
   800  007A11  35                 	db	53	;'5'
   801  007A12  20                 	db	32
   802  007A13  47                 	db	71	;'G'
   803  007A14  59                 	db	89	;'Y'
   804  007A15  52                 	db	82	;'R'
   805  007A16  4F                 	db	79	;'O'
   806  007A17  20                 	db	32
   807  007A18  49                 	db	73	;'I'
   808  007A19  20                 	db	32
   809  007A1A  41                 	db	65	;'A'
   810  007A1B  4D                 	db	77	;'M'
   811  007A1C  20                 	db	32
   812  007A1D  25                 	db	37
   813  007A1E  66                 	db	102	;'f'
   814  007A1F  20                 	db	32
   815  007A20  20                 	db	32
   816  007A21  49                 	db	73	;'I'
   817  007A22  20                 	db	32
   818  007A23  73                 	db	115	;'s'
   819  007A24  68                 	db	104	;'h'
   820  007A25  6F                 	db	111	;'o'
   821  007A26  75                 	db	117	;'u'
   822  007A27  6C                 	db	108	;'l'
   823  007A28  64                 	db	100	;'d'
   824  007A29  20                 	db	32
   825  007A2A  62                 	db	98	;'b'
   826  007A2B  65                 	db	101	;'e'
   827  007A2C  20                 	db	32
   828  007A2D  30                 	db	48	;'0'
   829  007A2E  78                 	db	120	;'x'
   830  007A2F  30                 	db	48	;'0'
   831  007A30  46                 	db	70	;'F'
   832  007A31  00                 	db	0
   833  007A32  42                 	db	66	;'B'
   834  007A33  4E                 	db	78	;'N'
   835  007A34  4F                 	db	79	;'O'
   836  007A35  30                 	db	48	;'0'
   837  007A36  35                 	db	53	;'5'
   838  007A37  35                 	db	53	;'5'
   839  007A38  20                 	db	32
   840  007A39  2D                 	db	45
   841  007A3A  20                 	db	32
   842  007A3B  49                 	db	73	;'I'
   843  007A3C  20                 	db	32
   844  007A3D  41                 	db	65	;'A'
   845  007A3E  4D                 	db	77	;'M'
   846  007A3F  20                 	db	32
   847  007A40  25                 	db	37
   848  007A41  63                 	db	99	;'c'
   849  007A42  20                 	db	32
   850  007A43  20                 	db	32
   851  007A44  2D                 	db	45
   852  007A45  20                 	db	32
   853  007A46  49                 	db	73	;'I'
   854  007A47  20                 	db	32
   855  007A48  73                 	db	115	;'s'
   856  007A49  68                 	db	104	;'h'
   857  007A4A  6F                 	db	111	;'o'
   858  007A4B  75                 	db	117	;'u'
   859  007A4C  6C                 	db	108	;'l'
   860  007A4D  64                 	db	100	;'d'
   861  007A4E  20                 	db	32
   862  007A4F  62                 	db	98	;'b'
   863  007A50  65                 	db	101	;'e'
   864  007A51  20                 	db	32
   865  007A52  30                 	db	48	;'0'
   866  007A53  78                 	db	120	;'x'
   867  007A54  41                 	db	65	;'A'
   868  007A55  30                 	db	48	;'0'
   869  007A56  00                 	db	0
   870  007A57  41                 	db	65	;'A'
   871  007A58  76                 	db	118	;'v'
   872  007A59  65                 	db	101	;'e'
   873  007A5A  72                 	db	114	;'r'
   874  007A5B  61                 	db	97	;'a'
   875  007A5C  67                 	db	103	;'g'
   876  007A5D  65                 	db	101	;'e'
   877  007A5E  20                 	db	32
   878  007A5F  61                 	db	97	;'a'
   879  007A60  63                 	db	99	;'c'
   880  007A61  63                 	db	99	;'c'
   881  007A62  65                 	db	101	;'e'
   882  007A63  6C                 	db	108	;'l'
   883  007A64  65                 	db	101	;'e'
   884  007A65  72                 	db	114	;'r'
   885  007A66  6F                 	db	111	;'o'
   886  007A67  6D                 	db	109	;'m'
   887  007A68  65                 	db	101	;'e'
   888  007A69  74                 	db	116	;'t'
   889  007A6A  65                 	db	101	;'e'
   890  007A6B  72                 	db	114	;'r'
   891  007A6C  20                 	db	32
   892  007A6D  62                 	db	98	;'b'
   893  007A6E  69                 	db	105	;'i'
   894  007A6F  61                 	db	97	;'a'
   895  007A70  73                 	db	115	;'s'
   896  007A71  20                 	db	32
   897  007A72  28                 	db	40
   898  007A73  6D                 	db	109	;'m'
   899  007A74  67                 	db	103	;'g'
   900  007A75  29                 	db	41
   901  007A76  20                 	db	32
   902  007A77  3D                 	db	61	;'='
   903  007A78  20                 	db	32
   904  007A79  25                 	db	37
   905  007A7A  66                 	db	102	;'f'
   906  007A7B  00                 	db	0
   907  007A7C  46                 	db	70	;'F'
   908  007A7D  75                 	db	117	;'u'
   909  007A7E  73                 	db	115	;'s'
   910  007A7F  69                 	db	105	;'i'
   911  007A80  6F                 	db	111	;'o'
   912  007A81  6E                 	db	110	;'n'
   913  007A82  20                 	db	32
   914  007A83  61                 	db	97	;'a'
   915  007A84  6C                 	db	108	;'l'
   916  007A85  67                 	db	103	;'g'
   917  007A86  6F                 	db	111	;'o'
   918  007A87  72                 	db	114	;'r'
   919  007A88  69                 	db	105	;'i'
   920  007A89  74                 	db	116	;'t'
   921  007A8A  68                 	db	104	;'h'
   922  007A8B  6D                 	db	109	;'m'
   923  007A8C  20                 	db	32
   924  007A8D  63                 	db	99	;'c'
   925  007A8E  6F                 	db	111	;'o'
   926  007A8F  6E                 	db	110	;'n'
   927  007A90  66                 	db	102	;'f'
   928  007A91  69                 	db	105	;'i'
   929  007A92  67                 	db	103	;'g'
   930  007A93  75                 	db	117	;'u'
   931  007A94  72                 	db	114	;'r'
   932  007A95  61                 	db	97	;'a'
   933  007A96  74                 	db	116	;'t'
   934  007A97  69                 	db	105	;'i'
   935  007A98  6F                 	db	111	;'o'
   936  007A99  6E                 	db	110	;'n'
   937  007A9A  20                 	db	32
   938  007A9B  65                 	db	101	;'e'
   939  007A9C  72                 	db	114	;'r'
   940  007A9D  72                 	db	114	;'r'
   941  007A9E  6F                 	db	111	;'o'
   942  007A9F  72                 	db	114	;'r'
   943  007AA0  00                 	db	0
   944  007AA1  42                 	db	66	;'B'
   945  007AA2  4E                 	db	78	;'N'
   946  007AA3  4F                 	db	79	;'O'
   947  007AA4  30                 	db	48	;'0'
   948  007AA5  35                 	db	53	;'5'
   949  007AA6  35                 	db	53	;'5'
   950  007AA7  20                 	db	32
   951  007AA8  4D                 	db	77	;'M'
   952  007AA9  41                 	db	65	;'A'
   953  007AAA  47                 	db	71	;'G'
   954  007AAB  20                 	db	32
   955  007AAC  49                 	db	73	;'I'
   956  007AAD  20                 	db	32
   957  007AAE  41                 	db	65	;'A'
   958  007AAF  4D                 	db	77	;'M'
   959  007AB0  20                 	db	32
   960  007AB1  25                 	db	37
   961  007AB2  63                 	db	99	;'c'
   962  007AB3  20                 	db	32
   963  007AB4  49                 	db	73	;'I'
   964  007AB5  20                 	db	32
   965  007AB6  73                 	db	115	;'s'
   966  007AB7  68                 	db	104	;'h'
   967  007AB8  6F                 	db	111	;'o'
   968  007AB9  75                 	db	117	;'u'
   969  007ABA  6C                 	db	108	;'l'
   970  007ABB  64                 	db	100	;'d'
   971  007ABC  20                 	db	32
   972  007ABD  62                 	db	98	;'b'
   973  007ABE  65                 	db	101	;'e'
   974  007ABF  20                 	db	32
   975  007AC0  30                 	db	48	;'0'
   976  007AC1  78                 	db	120	;'x'
   977  007AC2  33                 	db	51	;'3'
   978  007AC3  32                 	db	50	;'2'
   979  007AC4  00                 	db	0
   980  007AC5  42                 	db	66	;'B'
   981  007AC6  4E                 	db	78	;'N'
   982  007AC7  4F                 	db	79	;'O'
   983  007AC8  30                 	db	48	;'0'
   984  007AC9  35                 	db	53	;'5'
   985  007ACA  35                 	db	53	;'5'
   986  007ACB  20                 	db	32
   987  007ACC  41                 	db	65	;'A'
   988  007ACD  43                 	db	67	;'C'
   989  007ACE  43                 	db	67	;'C'
   990  007ACF  20                 	db	32
   991  007AD0  49                 	db	73	;'I'
   992  007AD1  20                 	db	32
   993  007AD2  41                 	db	65	;'A'
   994  007AD3  4D                 	db	77	;'M'
   995  007AD4  20                 	db	32
   996  007AD5  25                 	db	37
   997  007AD6  63                 	db	99	;'c'
   998  007AD7  20                 	db	32
   999  007AD8  49                 	db	73	;'I'
  1000  007AD9  20                 	db	32
  1001  007ADA  73                 	db	115	;'s'
  1002  007ADB  68                 	db	104	;'h'
  1003  007ADC  6F                 	db	111	;'o'
  1004  007ADD  75                 	db	117	;'u'
  1005  007ADE  6C                 	db	108	;'l'
  1006  007ADF  64                 	db	100	;'d'
  1007  007AE0  20                 	db	32
  1008  007AE1  62                 	db	98	;'b'
  1009  007AE2  65                 	db	101	;'e'
  1010  007AE3  20                 	db	32
  1011  007AE4  30                 	db	48	;'0'
  1012  007AE5  78                 	db	120	;'x'
  1013  007AE6  46                 	db	70	;'F'
  1014  007AE7  42                 	db	66	;'B'
  1015  007AE8  00                 	db	0
  1016  007AE9  41                 	db	65	;'A'
  1017  007AEA  76                 	db	118	;'v'
  1018  007AEB  65                 	db	101	;'e'
  1019  007AEC  72                 	db	114	;'r'
  1020  007AED  61                 	db	97	;'a'
  1021  007AEE  67                 	db	103	;'g'
  1022  007AEF  65                 	db	101	;'e'
  1023  007AF0  20                 	db	32
  1024  007AF1  6D                 	db	109	;'m'
  1025  007AF2  61                 	db	97	;'a'
  1026  007AF3  67                 	db	103	;'g'
  1027  007AF4  6E                 	db	110	;'n'
  1028  007AF5  65                 	db	101	;'e'
  1029  007AF6  74                 	db	116	;'t'
  1030  007AF7  6F                 	db	111	;'o'
  1031  007AF8  6D                 	db	109	;'m'
  1032  007AF9  65                 	db	101	;'e'
  1033  007AFA  74                 	db	116	;'t'
  1034  007AFB  65                 	db	101	;'e'
  1035  007AFC  72                 	db	114	;'r'
  1036  007AFD  20                 	db	32
  1037  007AFE  62                 	db	98	;'b'
  1038  007AFF  69                 	db	105	;'i'
  1039  007B00  61                 	db	97	;'a'
  1040  007B01  73                 	db	115	;'s'
  1041  007B02  20                 	db	32
  1042  007B03  28                 	db	40
  1043  007B04  6D                 	db	109	;'m'
  1044  007B05  47                 	db	71	;'G'
  1045  007B06  29                 	db	41
  1046  007B07  20                 	db	32
  1047  007B08  3D                 	db	61	;'='
  1048  007B09  20                 	db	32
  1049  007B0A  25                 	db	37
  1050  007B0B  66                 	db	102	;'f'
  1051  007B0C  00                 	db	0
  1052  007B0D  53                 	db	83	;'S'
  1053  007B0E  65                 	db	101	;'e'
  1054  007B0F  6E                 	db	110	;'n'
  1055  007B10  73                 	db	115	;'s'
  1056  007B11  6F                 	db	111	;'o'
  1057  007B12  72                 	db	114	;'r'
  1058  007B13  20                 	db	32
  1059  007B14  66                 	db	102	;'f'
  1060  007B15  75                 	db	117	;'u'
  1061  007B16  73                 	db	115	;'s'
  1062  007B17  69                 	db	105	;'i'
  1063  007B18  6F                 	db	111	;'o'
  1064  007B19  6E                 	db	110	;'n'
  1065  007B1A  20                 	db	32
  1066  007B1B  6E                 	db	110	;'n'
  1067  007B1C  6F                 	db	111	;'o'
  1068  007B1D  74                 	db	116	;'t'
  1069  007B1E  20                 	db	32
  1070  007B1F  61                 	db	97	;'a'
  1071  007B20  6C                 	db	108	;'l'
  1072  007B21  67                 	db	103	;'g'
  1073  007B22  6F                 	db	111	;'o'
  1074  007B23  72                 	db	114	;'r'
  1075  007B24  69                 	db	105	;'i'
  1076  007B25  74                 	db	116	;'t'
  1077  007B26  68                 	db	104	;'h'
  1078  007B27  6D                 	db	109	;'m'
  1079  007B28  20                 	db	32
  1080  007B29  72                 	db	114	;'r'
  1081  007B2A  75                 	db	117	;'u'
  1082  007B2B  6E                 	db	110	;'n'
  1083  007B2C  6E                 	db	110	;'n'
  1084  007B2D  69                 	db	105	;'i'
  1085  007B2E  6E                 	db	110	;'n'
  1086  007B2F  67                 	db	103	;'g'
  1087  007B30  00                 	db	0
  1088  007B31  47                 	db	71	;'G'
  1089  007B32  79                 	db	121	;'y'
  1090  007B33  72                 	db	114	;'r'
  1091  007B34  6F                 	db	111	;'o'
  1092  007B35  20                 	db	32
  1093  007B36  74                 	db	116	;'t'
  1094  007B37  65                 	db	101	;'e'
  1095  007B38  6D                 	db	109	;'m'
  1096  007B39  70                 	db	112	;'p'
  1097  007B3A  65                 	db	101	;'e'
  1098  007B3B  72                 	db	114	;'r'
  1099  007B3C  61                 	db	97	;'a'
  1100  007B3D  74                 	db	116	;'t'
  1101  007B3E  75                 	db	117	;'u'
  1102  007B3F  72                 	db	114	;'r'
  1103  007B40  65                 	db	101	;'e'
  1104  007B41  20                 	db	32
  1105  007B42  69                 	db	105	;'i'
  1106  007B43  73                 	db	115	;'s'
  1107  007B44  20                 	db	32
  1108  007B45  3D                 	db	61	;'='
  1109  007B46  20                 	db	32
  1110  007B47  25                 	db	37
  1111  007B48  66                 	db	102	;'f'
  1112  007B49  20                 	db	32
  1113  007B4A  64                 	db	100	;'d'
  1114  007B4B  65                 	db	101	;'e'
  1115  007B4C  67                 	db	103	;'g'
  1116  007B4D  72                 	db	114	;'r'
  1117  007B4E  65                 	db	101	;'e'
  1118  007B4F  65                 	db	101	;'e'
  1119  007B50  73                 	db	115	;'s'
  1120  007B51  20                 	db	32
  1121  007B52  43                 	db	67	;'C'
  1122  007B53  00                 	db	0
  1123  007B54  48                 	db	72	;'H'
  1124  007B55  61                 	db	97	;'a'
  1125  007B56  72                 	db	114	;'r'
  1126  007B57  64                 	db	100	;'d'
  1127  007B58  77                 	db	119	;'w'
  1128  007B59  61                 	db	97	;'a'
  1129  007B5A  72                 	db	114	;'r'
  1130  007B5B  65                 	db	101	;'e'
  1131  007B5C  20                 	db	32
  1132  007B5D  78                 	db	120	;'x'
  1133  007B5E  2C                 	db	44
  1134  007B5F  20                 	db	32
  1135  007B60  79                 	db	121	;'y'
  1136  007B61  2C                 	db	44
  1137  007B62  20                 	db	32
  1138  007B63  7A                 	db	122	;'z'
  1139  007B64  20                 	db	32
  1140  007B65  67                 	db	103	;'g'
  1141  007B66  72                 	db	114	;'r'
  1142  007B67  61                 	db	97	;'a'
  1143  007B68  76                 	db	118	;'v'
  1144  007B69  69                 	db	105	;'i'
  1145  007B6A  74                 	db	116	;'t'
  1146  007B6B  79                 	db	121	;'y'
  1147  007B6C  20                 	db	32
  1148  007B6D  76                 	db	118	;'v'
  1149  007B6E  65                 	db	101	;'e'
  1150  007B6F  63                 	db	99	;'c'
  1151  007B70  74                 	db	116	;'t'
  1152  007B71  6F                 	db	111	;'o'
  1153  007B72  72                 	db	114	;'r'
  1154  007B73  3A                 	db	58	;':'
  1155  007B74  20                 	db	32
  1156  007B75  00                 	db	0
  1157  007B76  43                 	db	67	;'C'
  1158  007B77  6F                 	db	111	;'o'
  1159  007B78  75                 	db	117	;'u'
  1160  007B79  6C                 	db	108	;'l'
  1161  007B7A  64                 	db	100	;'d'
  1162  007B7B  20                 	db	32
  1163  007B7C  6E                 	db	110	;'n'
  1164  007B7D  6F                 	db	111	;'o'
  1165  007B7E  74                 	db	116	;'t'
  1166  007B7F  20                 	db	32
  1167  007B80  63                 	db	99	;'c'
  1168  007B81  6F                 	db	111	;'o'
  1169  007B82  6E                 	db	110	;'n'
  1170  007B83  6E                 	db	110	;'n'
  1171  007B84  65                 	db	101	;'e'
  1172  007B85  63                 	db	99	;'c'
  1173  007B86  74                 	db	116	;'t'
  1174  007B87  20                 	db	32
  1175  007B88  74                 	db	116	;'t'
  1176  007B89  6F                 	db	111	;'o'
  1177  007B8A  20                 	db	32
  1178  007B8B  42                 	db	66	;'B'
  1179  007B8C  4E                 	db	78	;'N'
  1180  007B8D  4F                 	db	79	;'O'
  1181  007B8E  30                 	db	48	;'0'
  1182  007B8F  35                 	db	53	;'5'
  1183  007B90  35                 	db	53	;'5'
  1184  007B91  3A                 	db	58	;':'
  1185  007B92  20                 	db	32
  1186  007B93  30                 	db	48	;'0'
  1187  007B94  78                 	db	120	;'x'
  1188  007B95  25                 	db	37
  1189  007B96  63                 	db	99	;'c'
  1190  007B97  00                 	db	0
  1191  007B98  52                 	db	82	;'R'
  1192  007B99  65                 	db	101	;'e'
  1193  007B9A  67                 	db	103	;'g'
  1194  007B9B  69                 	db	105	;'i'
  1195  007B9C  73                 	db	115	;'s'
  1196  007B9D  74                 	db	116	;'t'
  1197  007B9E  65                 	db	101	;'e'
  1198  007B9F  72                 	db	114	;'r'
  1199  007BA0  20                 	db	32
  1200  007BA1  6D                 	db	109	;'m'
  1201  007BA2  61                 	db	97	;'a'
  1202  007BA3  70                 	db	112	;'p'
  1203  007BA4  20                 	db	32
  1204  007BA5  61                 	db	97	;'a'
  1205  007BA6  64                 	db	100	;'d'
  1206  007BA7  64                 	db	100	;'d'
  1207  007BA8  72                 	db	114	;'r'
  1208  007BA9  65                 	db	101	;'e'
  1209  007BAA  73                 	db	115	;'s'
  1210  007BAB  73                 	db	115	;'s'
  1211  007BAC  20                 	db	32
  1212  007BAD  6F                 	db	111	;'o'
  1213  007BAE  75                 	db	117	;'u'
  1214  007BAF  74                 	db	116	;'t'
  1215  007BB0  20                 	db	32
  1216  007BB1  6F                 	db	111	;'o'
  1217  007BB2  66                 	db	102	;'f'
  1218  007BB3  20                 	db	32
  1219  007BB4  72                 	db	114	;'r'
  1220  007BB5  61                 	db	97	;'a'
  1221  007BB6  6E                 	db	110	;'n'
  1222  007BB7  67                 	db	103	;'g'
  1223  007BB8  65                 	db	101	;'e'
  1224  007BB9  00                 	db	0
  1225  007BBA  52                 	db	82	;'R'
  1226  007BBB  65                 	db	101	;'e'
  1227  007BBC  67                 	db	103	;'g'
  1228  007BBD  69                 	db	105	;'i'
  1229  007BBE  73                 	db	115	;'s'
  1230  007BBF  74                 	db	116	;'t'
  1231  007BC0  65                 	db	101	;'e'
  1232  007BC1  72                 	db	114	;'r'
  1233  007BC2  20                 	db	32
  1234  007BC3  6D                 	db	109	;'m'
  1235  007BC4  61                 	db	97	;'a'
  1236  007BC5  70                 	db	112	;'p'
  1237  007BC6  20                 	db	32
  1238  007BC7  76                 	db	118	;'v'
  1239  007BC8  61                 	db	97	;'a'
  1240  007BC9  6C                 	db	108	;'l'
  1241  007BCA  75                 	db	117	;'u'
  1242  007BCB  65                 	db	101	;'e'
  1243  007BCC  20                 	db	32
  1244  007BCD  6F                 	db	111	;'o'
  1245  007BCE  75                 	db	117	;'u'
  1246  007BCF  74                 	db	116	;'t'
  1247  007BD0  20                 	db	32
  1248  007BD1  6F                 	db	111	;'o'
  1249  007BD2  66                 	db	102	;'f'
  1250  007BD3  20                 	db	32
  1251  007BD4  72                 	db	114	;'r'
  1252  007BD5  61                 	db	97	;'a'
  1253  007BD6  6E                 	db	110	;'n'
  1254  007BD7  67                 	db	103	;'g'
  1255  007BD8  65                 	db	101	;'e'
  1256  007BD9  00                 	db	0
  1257  007BDA  53                 	db	83	;'S'
  1258  007BDB  65                 	db	101	;'e'
  1259  007BDC  6E                 	db	110	;'n'
  1260  007BDD  73                 	db	115	;'s'
  1261  007BDE  6F                 	db	111	;'o'
  1262  007BDF  72                 	db	114	;'r'
  1263  007BE0  20                 	db	32
  1264  007BE1  66                 	db	102	;'f'
  1265  007BE2  75                 	db	117	;'u'
  1266  007BE3  73                 	db	115	;'s'
  1267  007BE4  69                 	db	105	;'i'
  1268  007BE5  6F                 	db	111	;'o'
  1269  007BE6  6E                 	db	110	;'n'
  1270  007BE7  20                 	db	32
  1271  007BE8  61                 	db	97	;'a'
  1272  007BE9  6C                 	db	108	;'l'
  1273  007BEA  67                 	db	103	;'g'
  1274  007BEB  6F                 	db	111	;'o'
  1275  007BEC  72                 	db	114	;'r'
  1276  007BED  69                 	db	105	;'i'
  1277  007BEE  74                 	db	116	;'t'
  1278  007BEF  68                 	db	104	;'h'
  1279  007BF0  6D                 	db	109	;'m'
  1280  007BF1  20                 	db	32
  1281  007BF2  72                 	db	114	;'r'
  1282  007BF3  75                 	db	117	;'u'
  1283  007BF4  6E                 	db	110	;'n'
  1284  007BF5  6E                 	db	110	;'n'
  1285  007BF6  69                 	db	105	;'i'
  1286  007BF7  6E                 	db	110	;'n'
  1287  007BF8  67                 	db	103	;'g'
  1288  007BF9  00                 	db	0
  1289  007BFA  50                 	db	80	;'P'
  1290  007BFB  65                 	db	101	;'e'
  1291  007BFC  72                 	db	114	;'r'
  1292  007BFD  69                 	db	105	;'i'
  1293  007BFE  70                 	db	112	;'p'
  1294  007BFF  68                 	db	104	;'h'
  1295  007C00  65                 	db	101	;'e'
  1296  007C01  72                 	db	114	;'r'
  1297  007C02  61                 	db	97	;'a'
  1298  007C03  6C                 	db	108	;'l'
  1299  007C04  20                 	db	32
  1300  007C05  69                 	db	105	;'i'
  1301  007C06  6E                 	db	110	;'n'
  1302  007C07  69                 	db	105	;'i'
  1303  007C08  74                 	db	116	;'t'
  1304  007C09  69                 	db	105	;'i'
  1305  007C0A  61                 	db	97	;'a'
  1306  007C0B  6C                 	db	108	;'l'
  1307  007C0C  69                 	db	105	;'i'
  1308  007C0D  7A                 	db	122	;'z'
  1309  007C0E  61                 	db	97	;'a'
  1310  007C0F  74                 	db	116	;'t'
  1311  007C10  69                 	db	105	;'i'
  1312  007C11  6F                 	db	111	;'o'
  1313  007C12  6E                 	db	110	;'n'
  1314  007C13  20                 	db	32
  1315  007C14  65                 	db	101	;'e'
  1316  007C15  72                 	db	114	;'r'
  1317  007C16  72                 	db	114	;'r'
  1318  007C17  6F                 	db	111	;'o'
  1319  007C18  72                 	db	114	;'r'
  1320  007C19  00                 	db	0
  1321  007C1A  42                 	db	66	;'B'
  1322  007C1B  4E                 	db	78	;'N'
  1323  007C1C  4F                 	db	79	;'O'
  1324  007C1D  30                 	db	48	;'0'
  1325  007C1E  35                 	db	53	;'5'
  1326  007C1F  35                 	db	53	;'5'
  1327  007C20  20                 	db	32
  1328  007C21  39                 	db	57	;'9'
  1329  007C22  2D                 	db	45
  1330  007C23  61                 	db	97	;'a'
  1331  007C24  78                 	db	120	;'x'
  1332  007C25  69                 	db	105	;'i'
  1333  007C26  73                 	db	115	;'s'
  1334  007C27  20                 	db	32
  1335  007C28  6D                 	db	109	;'m'
  1336  007C29  6F                 	db	111	;'o'
  1337  007C2A  74                 	db	116	;'t'
  1338  007C2B  69                 	db	105	;'i'
  1339  007C2C  6F                 	db	111	;'o'
  1340  007C2D  6E                 	db	110	;'n'
  1341  007C2E  20                 	db	32
  1342  007C2F  73                 	db	115	;'s'
  1343  007C30  65                 	db	101	;'e'
  1344  007C31  6E                 	db	110	;'n'
  1345  007C32  73                 	db	115	;'s'
  1346  007C33  6F                 	db	111	;'o'
  1347  007C34  72                 	db	114	;'r'
  1348  007C35  2E                 	db	46
  1349  007C36  2E                 	db	46
  1350  007C37  2E                 	db	46
  1351  007C38  00                 	db	0
  1352  007C39  4D                 	db	77	;'M'
  1353  007C3A  61                 	db	97	;'a'
  1354  007C3B  67                 	db	103	;'g'
  1355  007C3C  20                 	db	32
  1356  007C3D  20                 	db	32
  1357  007C3E  20                 	db	32
  1358  007C3F  20                 	db	32
  1359  007C40  63                 	db	99	;'c'
  1360  007C41  61                 	db	97	;'a'
  1361  007C42  6C                 	db	108	;'l'
  1362  007C43  69                 	db	105	;'i'
  1363  007C44  62                 	db	98	;'b'
  1364  007C45  72                 	db	114	;'r'
  1365  007C46  61                 	db	97	;'a'
  1366  007C47  74                 	db	116	;'t'
  1367  007C48  69                 	db	105	;'i'
  1368  007C49  6F                 	db	111	;'o'
  1369  007C4A  6E                 	db	110	;'n'
  1370  007C4B  20                 	db	32
  1371  007C4C  73                 	db	115	;'s'
  1372  007C4D  74                 	db	116	;'t'
  1373  007C4E  61                 	db	97	;'a'
  1374  007C4F  74                 	db	116	;'t'
  1375  007C50  75                 	db	117	;'u'
  1376  007C51  73                 	db	115	;'s'
  1377  007C52  20                 	db	32
  1378  007C53  3D                 	db	61	;'='
  1379  007C54  20                 	db	32
  1380  007C55  25                 	db	37
  1381  007C56  63                 	db	99	;'c'
  1382  007C57  00                 	db	0
  1383  007C58  47                 	db	71	;'G'
  1384  007C59  79                 	db	121	;'y'
  1385  007C5A  72                 	db	114	;'r'
  1386  007C5B  6F                 	db	111	;'o'
  1387  007C5C  20                 	db	32
  1388  007C5D  20                 	db	32
  1389  007C5E  20                 	db	32
  1390  007C5F  63                 	db	99	;'c'
  1391  007C60  61                 	db	97	;'a'
  1392  007C61  6C                 	db	108	;'l'
  1393  007C62  69                 	db	105	;'i'
  1394  007C63  62                 	db	98	;'b'
  1395  007C64  72                 	db	114	;'r'
  1396  007C65  61                 	db	97	;'a'
  1397  007C66  74                 	db	116	;'t'
  1398  007C67  69                 	db	105	;'i'
  1399  007C68  6F                 	db	111	;'o'
  1400  007C69  6E                 	db	110	;'n'
  1401  007C6A  20                 	db	32
  1402  007C6B  73                 	db	115	;'s'
  1403  007C6C  74                 	db	116	;'t'
  1404  007C6D  61                 	db	97	;'a'
  1405  007C6E  74                 	db	116	;'t'
  1406  007C6F  75                 	db	117	;'u'
  1407  007C70  73                 	db	115	;'s'
  1408  007C71  20                 	db	32
  1409  007C72  3D                 	db	61	;'='
  1410  007C73  20                 	db	32
  1411  007C74  25                 	db	37
  1412  007C75  63                 	db	99	;'c'
  1413  007C76  00                 	db	0
  1414  007C77  41                 	db	65	;'A'
  1415  007C78  63                 	db	99	;'c'
  1416  007C79  63                 	db	99	;'c'
  1417  007C7A  65                 	db	101	;'e'
  1418  007C7B  6C                 	db	108	;'l'
  1419  007C7C  20                 	db	32
  1420  007C7D  20                 	db	32
  1421  007C7E  63                 	db	99	;'c'
  1422  007C7F  61                 	db	97	;'a'
  1423  007C80  6C                 	db	108	;'l'
  1424  007C81  69                 	db	105	;'i'
  1425  007C82  62                 	db	98	;'b'
  1426  007C83  72                 	db	114	;'r'
  1427  007C84  61                 	db	97	;'a'
  1428  007C85  74                 	db	116	;'t'
  1429  007C86  69                 	db	105	;'i'
  1430  007C87  6F                 	db	111	;'o'
  1431  007C88  6E                 	db	110	;'n'
  1432  007C89  20                 	db	32
  1433  007C8A  73                 	db	115	;'s'
  1434  007C8B  74                 	db	116	;'t'
  1435  007C8C  61                 	db	97	;'a'
  1436  007C8D  74                 	db	116	;'t'
  1437  007C8E  75                 	db	117	;'u'
  1438  007C8F  73                 	db	115	;'s'
  1439  007C90  20                 	db	32
  1440  007C91  3D                 	db	61	;'='
  1441  007C92  20                 	db	32
  1442  007C93  25                 	db	37
  1443  007C94  63                 	db	99	;'c'
  1444  007C95  00                 	db	0
  1445  007C96  53                 	db	83	;'S'
  1446  007C97  79                 	db	121	;'y'
  1447  007C98  73                 	db	115	;'s'
  1448  007C99  74                 	db	116	;'t'
  1449  007C9A  65                 	db	101	;'e'
  1450  007C9B  6D                 	db	109	;'m'
  1451  007C9C  20                 	db	32
  1452  007C9D  63                 	db	99	;'c'
  1453  007C9E  61                 	db	97	;'a'
  1454  007C9F  6C                 	db	108	;'l'
  1455  007CA0  69                 	db	105	;'i'
  1456  007CA1  62                 	db	98	;'b'
  1457  007CA2  72                 	db	114	;'r'
  1458  007CA3  61                 	db	97	;'a'
  1459  007CA4  74                 	db	116	;'t'
  1460  007CA5  69                 	db	105	;'i'
  1461  007CA6  6F                 	db	111	;'o'
  1462  007CA7  6E                 	db	110	;'n'
  1463  007CA8  20                 	db	32
  1464  007CA9  73                 	db	115	;'s'
  1465  007CAA  74                 	db	116	;'t'
  1466  007CAB  61                 	db	97	;'a'
  1467  007CAC  74                 	db	116	;'t'
  1468  007CAD  75                 	db	117	;'u'
  1469  007CAE  73                 	db	115	;'s'
  1470  007CAF  20                 	db	32
  1471  007CB0  3D                 	db	61	;'='
  1472  007CB1  20                 	db	32
  1473  007CB2  25                 	db	37
  1474  007CB3  63                 	db	99	;'c'
  1475  007CB4  00                 	db	0
  1476  007CB5  61                 	db	97	;'a'
  1477  007CB6  63                 	db	99	;'c'
  1478  007CB7  63                 	db	99	;'c'
  1479  007CB8  65                 	db	101	;'e'
  1480  007CB9  6C                 	db	108	;'l'
  1481  007CBA  65                 	db	101	;'e'
  1482  007CBB  72                 	db	114	;'r'
  1483  007CBC  6F                 	db	111	;'o'
  1484  007CBD  6D                 	db	109	;'m'
  1485  007CBE  65                 	db	101	;'e'
  1486  007CBF  74                 	db	116	;'t'
  1487  007CC0  65                 	db	101	;'e'
  1488  007CC1  72                 	db	114	;'r'
  1489  007CC2  20                 	db	32
  1490  007CC3  66                 	db	102	;'f'
  1491  007CC4  61                 	db	97	;'a'
  1492  007CC5  69                 	db	105	;'i'
  1493  007CC6  6C                 	db	108	;'l'
  1494  007CC7  65                 	db	101	;'e'
  1495  007CC8  64                 	db	100	;'d'
  1496  007CC9  20                 	db	32
  1497  007CCA  73                 	db	115	;'s'
  1498  007CCB  65                 	db	101	;'e'
  1499  007CCC  6C                 	db	108	;'l'
  1500  007CCD  66                 	db	102	;'f'
  1501  007CCE  20                 	db	32
  1502  007CCF  74                 	db	116	;'t'
  1503  007CD0  65                 	db	101	;'e'
  1504  007CD1  73                 	db	115	;'s'
  1505  007CD2  74                 	db	116	;'t'
  1506  007CD3  00                 	db	0
  1507  007CD4  61                 	db	97	;'a'
  1508  007CD5  63                 	db	99	;'c'
  1509  007CD6  63                 	db	99	;'c'
  1510  007CD7  65                 	db	101	;'e'
  1511  007CD8  6C                 	db	108	;'l'
  1512  007CD9  65                 	db	101	;'e'
  1513  007CDA  72                 	db	114	;'r'
  1514  007CDB  6F                 	db	111	;'o'
  1515  007CDC  6D                 	db	109	;'m'
  1516  007CDD  65                 	db	101	;'e'
  1517  007CDE  74                 	db	116	;'t'
  1518  007CDF  65                 	db	101	;'e'
  1519  007CE0  72                 	db	114	;'r'
  1520  007CE1  20                 	db	32
  1521  007CE2  70                 	db	112	;'p'
  1522  007CE3  61                 	db	97	;'a'
  1523  007CE4  73                 	db	115	;'s'
  1524  007CE5  73                 	db	115	;'s'
  1525  007CE6  65                 	db	101	;'e'
  1526  007CE7  64                 	db	100	;'d'
  1527  007CE8  20                 	db	32
  1528  007CE9  73                 	db	115	;'s'
  1529  007CEA  65                 	db	101	;'e'
  1530  007CEB  6C                 	db	108	;'l'
  1531  007CEC  66                 	db	102	;'f'
  1532  007CED  20                 	db	32
  1533  007CEE  74                 	db	116	;'t'
  1534  007CEF  65                 	db	101	;'e'
  1535  007CF0  73                 	db	115	;'s'
  1536  007CF1  74                 	db	116	;'t'
  1537  007CF2  00                 	db	0
  1538  007CF3  42                 	db	66	;'B'
  1539  007CF4  4E                 	db	78	;'N'
  1540  007CF5  4F                 	db	79	;'O'
  1541  007CF6  30                 	db	48	;'0'
  1542  007CF7  35                 	db	53	;'5'
  1543  007CF8  35                 	db	53	;'5'
  1544  007CF9  20                 	db	32
  1545  007CFA  62                 	db	98	;'b'
  1546  007CFB  6F                 	db	111	;'o'
  1547  007CFC  6F                 	db	111	;'o'
  1548  007CFD  74                 	db	116	;'t'
  1549  007CFE  6C                 	db	108	;'l'
  1550  007CFF  6F                 	db	111	;'o'
  1551  007D00  61                 	db	97	;'a'
  1552  007D01  64                 	db	100	;'d'
  1553  007D02  65                 	db	101	;'e'
  1554  007D03  72                 	db	114	;'r'
  1555  007D04  20                 	db	32
  1556  007D05  56                 	db	86	;'V'
  1557  007D06  65                 	db	101	;'e'
  1558  007D07  72                 	db	114	;'r'
  1559  007D08  73                 	db	115	;'s'
  1560  007D09  69                 	db	105	;'i'
  1561  007D0A  6F                 	db	111	;'o'
  1562  007D0B  6E                 	db	110	;'n'
  1563  007D0C  3A                 	db	58	;':'
  1564  007D0D  20                 	db	32
  1565  007D0E  25                 	db	37
  1566  007D0F  63                 	db	99	;'c'
  1567  007D10  00                 	db	0
  1568  007D11  6D                 	db	109	;'m'
  1569  007D12  61                 	db	97	;'a'
  1570  007D13  67                 	db	103	;'g'
  1571  007D14  6E                 	db	110	;'n'
  1572  007D15  65                 	db	101	;'e'
  1573  007D16  74                 	db	116	;'t'
  1574  007D17  6F                 	db	111	;'o'
  1575  007D18  6D                 	db	109	;'m'
  1576  007D19  65                 	db	101	;'e'
  1577  007D1A  74                 	db	116	;'t'
  1578  007D1B  65                 	db	101	;'e'
  1579  007D1C  72                 	db	114	;'r'
  1580  007D1D  20                 	db	32
  1581  007D1E  66                 	db	102	;'f'
  1582  007D1F  61                 	db	97	;'a'
  1583  007D20  69                 	db	105	;'i'
  1584  007D21  6C                 	db	108	;'l'
  1585  007D22  65                 	db	101	;'e'
  1586  007D23  64                 	db	100	;'d'
  1587  007D24  20                 	db	32
  1588  007D25  73                 	db	115	;'s'
  1589  007D26  65                 	db	101	;'e'
  1590  007D27  6C                 	db	108	;'l'
  1591  007D28  66                 	db	102	;'f'
  1592  007D29  20                 	db	32
  1593  007D2A  74                 	db	116	;'t'
  1594  007D2B  65                 	db	101	;'e'
  1595  007D2C  73                 	db	115	;'s'
  1596  007D2D  74                 	db	116	;'t'
  1597  007D2E  00                 	db	0
  1598  007D2F  6D                 	db	109	;'m'
  1599  007D30  61                 	db	97	;'a'
  1600  007D31  67                 	db	103	;'g'
  1601  007D32  6E                 	db	110	;'n'
  1602  007D33  65                 	db	101	;'e'
  1603  007D34  74                 	db	116	;'t'
  1604  007D35  6F                 	db	111	;'o'
  1605  007D36  6D                 	db	109	;'m'
  1606  007D37  65                 	db	101	;'e'
  1607  007D38  74                 	db	116	;'t'
  1608  007D39  65                 	db	101	;'e'
  1609  007D3A  72                 	db	114	;'r'
  1610  007D3B  20                 	db	32
  1611  007D3C  70                 	db	112	;'p'
  1612  007D3D  61                 	db	97	;'a'
  1613  007D3E  73                 	db	115	;'s'
  1614  007D3F  73                 	db	115	;'s'
  1615  007D40  65                 	db	101	;'e'
  1616  007D41  64                 	db	100	;'d'
  1617  007D42  20                 	db	32
  1618  007D43  73                 	db	115	;'s'
  1619  007D44  65                 	db	101	;'e'
  1620  007D45  6C                 	db	108	;'l'
  1621  007D46  66                 	db	102	;'f'
  1622  007D47  20                 	db	32
  1623  007D48  74                 	db	116	;'t'
  1624  007D49  65                 	db	101	;'e'
  1625  007D4A  73                 	db	115	;'s'
  1626  007D4B  74                 	db	116	;'t'
  1627  007D4C  00                 	db	0
  1628  007D4D                     STR_61:
  1629  007D4D  53                 	db	83	;'S'
  1630  007D4E  6F                 	db	111	;'o'
  1631  007D4F  66                 	db	102	;'f'
  1632  007D50  74                 	db	116	;'t'
  1633  007D51  77                 	db	119	;'w'
  1634  007D52  61                 	db	97	;'a'
  1635  007D53  72                 	db	114	;'r'
  1636  007D54  65                 	db	101	;'e'
  1637  007D55  20                 	db	32
  1638  007D56  59                 	db	89	;'Y'
  1639  007D57  61                 	db	97	;'a'
  1640  007D58  77                 	db	119	;'w'
  1641  007D59  2C                 	db	44
  1642  007D5A  20                 	db	32
  1643  007D5B  50                 	db	80	;'P'
  1644  007D5C  69                 	db	105	;'i'
  1645  007D5D  74                 	db	116	;'t'
  1646  007D5E  63                 	db	99	;'c'
  1647  007D5F  68                 	db	104	;'h'
  1648  007D60  2C                 	db	44
  1649  007D61  20                 	db	32
  1650  007D62  52                 	db	82	;'R'
  1651  007D63  6F                 	db	111	;'o'
  1652  007D64  6C                 	db	108	;'l'
  1653  007D65  6C                 	db	108	;'l'
  1654  007D66  3A                 	db	58	;':'
  1655  007D67  0A                 	db	10
  1656  007D68  20                 	db	32
  1657  007D69  00                 	db	0
  1658  007D6A  41                 	db	65	;'A'
  1659  007D6B  63                 	db	99	;'c'
  1660  007D6C  63                 	db	99	;'c'
  1661  007D6D  65                 	db	101	;'e'
  1662  007D6E  6C                 	db	108	;'l'
  1663  007D6F  2F                 	db	47
  1664  007D70  47                 	db	71	;'G'
  1665  007D71  79                 	db	121	;'y'
  1666  007D72  72                 	db	114	;'r'
  1667  007D73  6F                 	db	111	;'o'
  1668  007D74  20                 	db	32
  1669  007D75  43                 	db	67	;'C'
  1670  007D76  61                 	db	97	;'a'
  1671  007D77  6C                 	db	108	;'l'
  1672  007D78  69                 	db	105	;'i'
  1673  007D79  62                 	db	98	;'b'
  1674  007D7A  72                 	db	114	;'r'
  1675  007D7B  61                 	db	97	;'a'
  1676  007D7C  74                 	db	116	;'t'
  1677  007D7D  69                 	db	105	;'i'
  1678  007D7E  6F                 	db	111	;'o'
  1679  007D7F  6E                 	db	110	;'n'
  1680  007D80  20                 	db	32
  1681  007D81  64                 	db	100	;'d'
  1682  007D82  6F                 	db	111	;'o'
  1683  007D83  6E                 	db	110	;'n'
  1684  007D84  65                 	db	101	;'e'
  1685  007D85  21                 	db	33
  1686  007D86  00                 	db	0
  1687  007D87  42                 	db	66	;'B'
  1688  007D88  4E                 	db	78	;'N'
  1689  007D89  4F                 	db	79	;'O'
  1690  007D8A  30                 	db	48	;'0'
  1691  007D8B  35                 	db	53	;'5'
  1692  007D8C  35                 	db	53	;'5'
  1693  007D8D  20                 	db	32
  1694  007D8E  53                 	db	83	;'S'
  1695  007D8F  57                 	db	87	;'W'
  1696  007D90  20                 	db	32
  1697  007D91  52                 	db	82	;'R'
  1698  007D92  65                 	db	101	;'e'
  1699  007D93  76                 	db	118	;'v'
  1700  007D94  69                 	db	105	;'i'
  1701  007D95  73                 	db	115	;'s'
  1702  007D96  69                 	db	105	;'i'
  1703  007D97  6F                 	db	111	;'o'
  1704  007D98  6E                 	db	110	;'n'
  1705  007D99  20                 	db	32
  1706  007D9A  49                 	db	73	;'I'
  1707  007D9B  44                 	db	68	;'D'
  1708  007D9C  3A                 	db	58	;':'
  1709  007D9D  20                 	db	32
  1710  007D9E  25                 	db	37
  1711  007D9F  63                 	db	99	;'c'
  1712  007DA0  2E                 	db	46
  1713  007DA1  25                 	db	37
  1714  007DA2  63                 	db	99	;'c'
  1715  007DA3  00                 	db	0
  1716  007DA4  41                 	db	65	;'A'
  1717  007DA5  76                 	db	118	;'v'
  1718  007DA6  65                 	db	101	;'e'
  1719  007DA7  72                 	db	114	;'r'
  1720  007DA8  61                 	db	97	;'a'
  1721  007DA9  67                 	db	103	;'g'
  1722  007DAA  65                 	db	101	;'e'
  1723  007DAB  20                 	db	32
  1724  007DAC  67                 	db	103	;'g'
  1725  007DAD  79                 	db	121	;'y'
  1726  007DAE  72                 	db	114	;'r'
  1727  007DAF  6F                 	db	111	;'o'
  1728  007DB0  20                 	db	32
  1729  007DB1  62                 	db	98	;'b'
  1730  007DB2  69                 	db	105	;'i'
  1731  007DB3  61                 	db	97	;'a'
  1732  007DB4  73                 	db	115	;'s'
  1733  007DB5  20                 	db	32
  1734  007DB6  28                 	db	40
  1735  007DB7  64                 	db	100	;'d'
  1736  007DB8  70                 	db	112	;'p'
  1737  007DB9  73                 	db	115	;'s'
  1738  007DBA  29                 	db	41
  1739  007DBB  20                 	db	32
  1740  007DBC  3D                 	db	61	;'='
  1741  007DBD  20                 	db	32
  1742  007DBE  25                 	db	37
  1743  007DBF  66                 	db	102	;'f'
  1744  007DC0  00                 	db	0
  1745  007DC1  53                 	db	83	;'S'
  1746  007DC2  79                 	db	121	;'y'
  1747  007DC3  73                 	db	115	;'s'
  1748  007DC4  74                 	db	116	;'t'
  1749  007DC5  65                 	db	101	;'e'
  1750  007DC6  6D                 	db	109	;'m'
  1751  007DC7  20                 	db	32
  1752  007DC8  69                 	db	105	;'i'
  1753  007DC9  6E                 	db	110	;'n'
  1754  007DCA  69                 	db	105	;'i'
  1755  007DCB  74                 	db	116	;'t'
  1756  007DCC  69                 	db	105	;'i'
  1757  007DCD  61                 	db	97	;'a'
  1758  007DCE  6C                 	db	108	;'l'
  1759  007DCF  69                 	db	105	;'i'
  1760  007DD0  7A                 	db	122	;'z'
  1761  007DD1  61                 	db	97	;'a'
  1762  007DD2  74                 	db	116	;'t'
  1763  007DD3  69                 	db	105	;'i'
  1764  007DD4  6F                 	db	111	;'o'
  1765  007DD5  6E                 	db	110	;'n'
  1766  007DD6  20                 	db	32
  1767  007DD7  65                 	db	101	;'e'
  1768  007DD8  72                 	db	114	;'r'
  1769  007DD9  72                 	db	114	;'r'
  1770  007DDA  6F                 	db	111	;'o'
  1771  007DDB  72                 	db	114	;'r'
  1772  007DDC  00                 	db	0
  1773  007DDD  53                 	db	83	;'S'
  1774  007DDE  65                 	db	101	;'e'
  1775  007DDF  6E                 	db	110	;'n'
  1776  007DE0  73                 	db	115	;'s'
  1777  007DE1  6F                 	db	111	;'o'
  1778  007DE2  72                 	db	114	;'r'
  1779  007DE3  20                 	db	32
  1780  007DE4  63                 	db	99	;'c'
  1781  007DE5  6F                 	db	111	;'o'
  1782  007DE6  6E                 	db	110	;'n'
  1783  007DE7  66                 	db	102	;'f'
  1784  007DE8  69                 	db	105	;'i'
  1785  007DE9  67                 	db	103	;'g'
  1786  007DEA  75                 	db	117	;'u'
  1787  007DEB  72                 	db	114	;'r'
  1788  007DEC  61                 	db	97	;'a'
  1789  007DED  74                 	db	116	;'t'
  1790  007DEE  69                 	db	105	;'i'
  1791  007DEF  6F                 	db	111	;'o'
  1792  007DF0  6E                 	db	110	;'n'
  1793  007DF1  20                 	db	32
  1794  007DF2  65                 	db	101	;'e'
  1795  007DF3  72                 	db	114	;'r'
  1796  007DF4  72                 	db	114	;'r'
  1797  007DF5  6F                 	db	111	;'o'
  1798  007DF6  72                 	db	114	;'r'
  1799  007DF7  00                 	db	0
  1800  007DF8  67                 	db	103	;'g'
  1801  007DF9  79                 	db	121	;'y'
  1802  007DFA  72                 	db	114	;'r'
  1803  007DFB  6F                 	db	111	;'o'
  1804  007DFC  73                 	db	115	;'s'
  1805  007DFD  63                 	db	99	;'c'
  1806  007DFE  6F                 	db	111	;'o'
  1807  007DFF  70                 	db	112	;'p'
  1808  007E00  65                 	db	101	;'e'
  1809  007E01  20                 	db	32
  1810  007E02  66                 	db	102	;'f'
  1811  007E03  61                 	db	97	;'a'
  1812  007E04  69                 	db	105	;'i'
  1813  007E05  6C                 	db	108	;'l'
  1814  007E06  65                 	db	101	;'e'
  1815  007E07  64                 	db	100	;'d'
  1816  007E08  20                 	db	32
  1817  007E09  73                 	db	115	;'s'
  1818  007E0A  65                 	db	101	;'e'
  1819  007E0B  6C                 	db	108	;'l'
  1820  007E0C  66                 	db	102	;'f'
  1821  007E0D  20                 	db	32
  1822  007E0E  74                 	db	116	;'t'
  1823  007E0F  65                 	db	101	;'e'
  1824  007E10  73                 	db	115	;'s'
  1825  007E11  74                 	db	116	;'t'
  1826  007E12  00                 	db	0
  1827  007E13  67                 	db	103	;'g'
  1828  007E14  79                 	db	121	;'y'
  1829  007E15  72                 	db	114	;'r'
  1830  007E16  6F                 	db	111	;'o'
  1831  007E17  73                 	db	115	;'s'
  1832  007E18  63                 	db	99	;'c'
  1833  007E19  6F                 	db	111	;'o'
  1834  007E1A  70                 	db	112	;'p'
  1835  007E1B  65                 	db	101	;'e'
  1836  007E1C  20                 	db	32
  1837  007E1D  70                 	db	112	;'p'
  1838  007E1E  61                 	db	97	;'a'
  1839  007E1F  73                 	db	115	;'s'
  1840  007E20  73                 	db	115	;'s'
  1841  007E21  65                 	db	101	;'e'
  1842  007E22  64                 	db	100	;'d'
  1843  007E23  20                 	db	32
  1844  007E24  73                 	db	115	;'s'
  1845  007E25  65                 	db	101	;'e'
  1846  007E26  6C                 	db	108	;'l'
  1847  007E27  66                 	db	102	;'f'
  1848  007E28  20                 	db	32
  1849  007E29  74                 	db	116	;'t'
  1850  007E2A  65                 	db	101	;'e'
  1851  007E2B  73                 	db	115	;'s'
  1852  007E2C  74                 	db	116	;'t'
  1853  007E2D  00                 	db	0
  1854  007E2E  52                 	db	82	;'R'
  1855  007E2F  65                 	db	101	;'e'
  1856  007E30  67                 	db	103	;'g'
  1857  007E31  69                 	db	105	;'i'
  1858  007E32  73                 	db	115	;'s'
  1859  007E33  74                 	db	116	;'t'
  1860  007E34  65                 	db	101	;'e'
  1861  007E35  72                 	db	114	;'r'
  1862  007E36  20                 	db	32
  1863  007E37  6D                 	db	109	;'m'
  1864  007E38  61                 	db	97	;'a'
  1865  007E39  70                 	db	112	;'p'
  1866  007E3A  20                 	db	32
  1867  007E3B  77                 	db	119	;'w'
  1868  007E3C  72                 	db	114	;'r'
  1869  007E3D  69                 	db	105	;'i'
  1870  007E3E  74                 	db	116	;'t'
  1871  007E3F  65                 	db	101	;'e'
  1872  007E40  20                 	db	32
  1873  007E41  65                 	db	101	;'e'
  1874  007E42  72                 	db	114	;'r'
  1875  007E43  72                 	db	114	;'r'
  1876  007E44  6F                 	db	111	;'o'
  1877  007E45  72                 	db	114	;'r'
  1878  007E46  00                 	db	0
  1879  007E47  42                 	db	66	;'B'
  1880  007E48  4E                 	db	78	;'N'
  1881  007E49  4F                 	db	79	;'O'
  1882  007E4A  30                 	db	48	;'0'
  1883  007E4B  35                 	db	53	;'5'
  1884  007E4C  35                 	db	53	;'5'
  1885  007E4D  20                 	db	32
  1886  007E4E  57                 	db	87	;'W'
  1887  007E4F  48                 	db	72	;'H'
  1888  007E50  4F                 	db	79	;'O'
  1889  007E51  5F                 	db	95	;'_'
  1890  007E52  41                 	db	65	;'A'
  1891  007E53  4D                 	db	77	;'M'
  1892  007E54  5F                 	db	95	;'_'
  1893  007E55  49                 	db	73	;'I'
  1894  007E56  20                 	db	32
  1895  007E57  3D                 	db	61	;'='
  1896  007E58  20                 	db	32
  1897  007E59  30                 	db	48	;'0'
  1898  007E5A  78                 	db	120	;'x'
  1899  007E5B  25                 	db	37
  1900  007E5C  63                 	db	99	;'c'
  1901  007E5D  20                 	db	32
  1902  007E5E  00                 	db	0
  1903  007E5F  53                 	db	83	;'S'
  1904  007E60  65                 	db	101	;'e'
  1905  007E61  6C                 	db	108	;'l'
  1906  007E62  66                 	db	102	;'f'
  1907  007E63  20                 	db	32
  1908  007E64  74                 	db	116	;'t'
  1909  007E65  65                 	db	101	;'e'
  1910  007E66  73                 	db	115	;'s'
  1911  007E67  74                 	db	116	;'t'
  1912  007E68  20                 	db	32
  1913  007E69  72                 	db	114	;'r'
  1914  007E6A  65                 	db	101	;'e'
  1915  007E6B  73                 	db	115	;'s'
  1916  007E6C  75                 	db	117	;'u'
  1917  007E6D  6C                 	db	108	;'l'
  1918  007E6E  74                 	db	116	;'t'
  1919  007E6F  20                 	db	32
  1920  007E70  66                 	db	102	;'f'
  1921  007E71  61                 	db	97	;'a'
  1922  007E72  69                 	db	105	;'i'
  1923  007E73  6C                 	db	108	;'l'
  1924  007E74  65                 	db	101	;'e'
  1925  007E75  64                 	db	100	;'d'
  1926  007E76  00                 	db	0
  1927  007E77                     STR_62:
  1928  007E77  20                 	db	32
  1929  007E78  20                 	db	32
  1930  007E79  20                 	db	32
  1931  007E7A  20                 	db	32
  1932  007E7B  20                 	db	32
  1933  007E7C  20                 	db	32
  1934  007E7D  20                 	db	32
  1935  007E7E  20                 	db	32
  1936  007E7F  20                 	db	32
  1937  007E80  25                 	db	37
  1938  007E81  66                 	db	102	;'f'
  1939  007E82  20                 	db	32
  1940  007E83  20                 	db	32
  1941  007E84  20                 	db	32
  1942  007E85  25                 	db	37
  1943  007E86  66                 	db	102	;'f'
  1944  007E87  20                 	db	32
  1945  007E88  20                 	db	32
  1946  007E89  20                 	db	32
  1947  007E8A  20                 	db	32
  1948  007E8B  20                 	db	32
  1949  007E8C  25                 	db	37
  1950  007E8D  66                 	db	102	;'f'
  1951  007E8E  00                 	db	0
  1952  007E8F  4D                 	db	77	;'M'
  1953  007E90  61                 	db	97	;'a'
  1954  007E91  67                 	db	103	;'g'
  1955  007E92  20                 	db	32
  1956  007E93  43                 	db	67	;'C'
  1957  007E94  61                 	db	97	;'a'
  1958  007E95  6C                 	db	108	;'l'
  1959  007E96  69                 	db	105	;'i'
  1960  007E97  62                 	db	98	;'b'
  1961  007E98  72                 	db	114	;'r'
  1962  007E99  61                 	db	97	;'a'
  1963  007E9A  74                 	db	116	;'t'
  1964  007E9B  69                 	db	105	;'i'
  1965  007E9C  6F                 	db	111	;'o'
  1966  007E9D  6E                 	db	110	;'n'
  1967  007E9E  20                 	db	32
  1968  007E9F  64                 	db	100	;'d'
  1969  007EA0  6F                 	db	111	;'o'
  1970  007EA1  6E                 	db	110	;'n'
  1971  007EA2  65                 	db	101	;'e'
  1972  007EA3  21                 	db	33
  1973  007EA4  00                 	db	0
  1974  007EA5  42                 	db	66	;'B'
  1975  007EA6  4E                 	db	78	;'N'
  1976  007EA7  4F                 	db	79	;'O'
  1977  007EA8  30                 	db	48	;'0'
  1978  007EA9  35                 	db	53	;'5'
  1979  007EAA  35                 	db	53	;'5'
  1980  007EAB  20                 	db	32
  1981  007EAC  41                 	db	65	;'A'
  1982  007EAD  64                 	db	100	;'d'
  1983  007EAE  64                 	db	100	;'d'
  1984  007EAF  72                 	db	114	;'r'
  1985  007EB0  65                 	db	101	;'e'
  1986  007EB1  73                 	db	115	;'s'
  1987  007EB2  73                 	db	115	;'s'
  1988  007EB3  20                 	db	32
  1989  007EB4  3D                 	db	61	;'='
  1990  007EB5  20                 	db	32
  1991  007EB6  30                 	db	48	;'0'
  1992  007EB7  78                 	db	120	;'x'
  1993  007EB8  25                 	db	37
  1994  007EB9  63                 	db	99	;'c'
  1995  007EBA  00                 	db	0
  1996  007EBB  53                 	db	83	;'S'
  1997  007EBC  79                 	db	121	;'y'
  1998  007EBD  73                 	db	115	;'s'
  1999  007EBE  74                 	db	116	;'t'
  2000  007EBF  65                 	db	101	;'e'
  2001  007EC0  6D                 	db	109	;'m'
  2002  007EC1  20                 	db	32
  2003  007EC2  53                 	db	83	;'S'
  2004  007EC3  74                 	db	116	;'t'
  2005  007EC4  61                 	db	97	;'a'
  2006  007EC5  74                 	db	116	;'t'
  2007  007EC6  75                 	db	117	;'u'
  2008  007EC7  73                 	db	115	;'s'
  2009  007EC8  20                 	db	32
  2010  007EC9  3D                 	db	61	;'='
  2011  007ECA  20                 	db	32
  2012  007ECB  30                 	db	48	;'0'
  2013  007ECC  78                 	db	120	;'x'
  2014  007ECD  35                 	db	53	;'5'
  2015  007ECE  63                 	db	99	;'c'
  2016  007ECF  00                 	db	0
  2017  007ED0  4D                 	db	77	;'M'
  2018  007ED1  43                 	db	67	;'C'
  2019  007ED2  55                 	db	85	;'U'
  2020  007ED3  20                 	db	32
  2021  007ED4  66                 	db	102	;'f'
  2022  007ED5  61                 	db	97	;'a'
  2023  007ED6  69                 	db	105	;'i'
  2024  007ED7  6C                 	db	108	;'l'
  2025  007ED8  65                 	db	101	;'e'
  2026  007ED9  64                 	db	100	;'d'
  2027  007EDA  20                 	db	32
  2028  007EDB  73                 	db	115	;'s'
  2029  007EDC  65                 	db	101	;'e'
  2030  007EDD  6C                 	db	108	;'l'
  2031  007EDE  66                 	db	102	;'f'
  2032  007EDF  20                 	db	32
  2033  007EE0  74                 	db	116	;'t'
  2034  007EE1  65                 	db	101	;'e'
  2035  007EE2  73                 	db	115	;'s'
  2036  007EE3  74                 	db	116	;'t'
  2037  007EE4  00                 	db	0
  2038  007EE5  4D                 	db	77	;'M'
  2039  007EE6  43                 	db	67	;'C'
  2040  007EE7  55                 	db	85	;'U'
  2041  007EE8  20                 	db	32
  2042  007EE9  70                 	db	112	;'p'
  2043  007EEA  61                 	db	97	;'a'
  2044  007EEB  73                 	db	115	;'s'
  2045  007EEC  73                 	db	115	;'s'
  2046  007EED  65                 	db	101	;'e'
  2047  007EEE  64                 	db	100	;'d'
  2048  007EEF  20                 	db	32
  2049  007EF0  73                 	db	115	;'s'
  2050  007EF1  65                 	db	101	;'e'
  2051  007EF2  6C                 	db	108	;'l'
  2052  007EF3  66                 	db	102	;'f'
  2053  007EF4  20                 	db	32
  2054  007EF5  74                 	db	116	;'t'
  2055  007EF6  65                 	db	101	;'e'
  2056  007EF7  73                 	db	115	;'s'
  2057  007EF8  74                 	db	116	;'t'
  2058  007EF9  00                 	db	0
  2059  007EFA  42                 	db	66	;'B'
  2060  007EFB  4E                 	db	78	;'N'
  2061  007EFC  4F                 	db	79	;'O'
  2062  007EFD  30                 	db	48	;'0'
  2063  007EFE  35                 	db	53	;'5'
  2064  007EFF  35                 	db	53	;'5'
  2065  007F00  20                 	db	32
  2066  007F01  69                 	db	105	;'i'
  2067  007F02  73                 	db	115	;'s'
  2068  007F03  20                 	db	32
  2069  007F04  6F                 	db	111	;'o'
  2070  007F05  6E                 	db	110	;'n'
  2071  007F06  6C                 	db	108	;'l'
  2072  007F07  69                 	db	105	;'i'
  2073  007F08  6E                 	db	110	;'n'
  2074  007F09  65                 	db	101	;'e'
  2075  007F0A  2E                 	db	46
  2076  007F0B  2E                 	db	46
  2077  007F0C  2E                 	db	46
  2078  007F0D  00                 	db	0
  2079  007F0E  30                 	db	48	;'0'
  2080  007F0F  31                 	db	49	;'1'
  2081  007F10  32                 	db	50	;'2'
  2082  007F11  33                 	db	51	;'3'
  2083  007F12  34                 	db	52	;'4'
  2084  007F13  35                 	db	53	;'5'
  2085  007F14  36                 	db	54	;'6'
  2086  007F15  37                 	db	55	;'7'
  2087  007F16  38                 	db	56	;'8'
  2088  007F17  39                 	db	57	;'9'
  2089  007F18  41                 	db	65	;'A'
  2090  007F19  42                 	db	66	;'B'
  2091  007F1A  43                 	db	67	;'C'
  2092  007F1B  44                 	db	68	;'D'
  2093  007F1C  45                 	db	69	;'E'
  2094  007F1D  46                 	db	70	;'F'
  2095  007F1E  00                 	db	0
  2096  007F1F  30                 	db	48	;'0'
  2097  007F20  31                 	db	49	;'1'
  2098  007F21  32                 	db	50	;'2'
  2099  007F22  33                 	db	51	;'3'
  2100  007F23  34                 	db	52	;'4'
  2101  007F24  35                 	db	53	;'5'
  2102  007F25  36                 	db	54	;'6'
  2103  007F26  37                 	db	55	;'7'
  2104  007F27  38                 	db	56	;'8'
  2105  007F28  39                 	db	57	;'9'
  2106  007F29  61                 	db	97	;'a'
  2107  007F2A  62                 	db	98	;'b'
  2108  007F2B  63                 	db	99	;'c'
  2109  007F2C  64                 	db	100	;'d'
  2110  007F2D  65                 	db	101	;'e'
  2111  007F2E  66                 	db	102	;'f'
  2112  007F2F  00                 	db	0
  2113  007F30  20                 	db	32
  2114  007F31  67                 	db	103	;'g'
  2115  007F32  7A                 	db	122	;'z'
  2116  007F33  20                 	db	32
  2117  007F34  3D                 	db	61	;'='
  2118  007F35  20                 	db	32
  2119  007F36  25                 	db	37
  2120  007F37  64                 	db	100	;'d'
  2121  007F38  20                 	db	32
  2122  007F39  64                 	db	100	;'d'
  2123  007F3A  65                 	db	101	;'e'
  2124  007F3B  67                 	db	103	;'g'
  2125  007F3C  2F                 	db	47
  2126  007F3D  73                 	db	115	;'s'
  2127  007F3E  0A                 	db	10
  2128  007F3F  00                 	db	0
  2129  007F40  53                 	db	83	;'S'
  2130  007F41  68                 	db	104	;'h'
  2131  007F42  6F                 	db	111	;'o'
  2132  007F43  75                 	db	117	;'u'
  2133  007F44  6C                 	db	108	;'l'
  2134  007F45  64                 	db	100	;'d'
  2135  007F46  20                 	db	32
  2136  007F47  62                 	db	98	;'b'
  2137  007F48  65                 	db	101	;'e'
  2138  007F49  20                 	db	32
  2139  007F4A  30                 	db	48	;'0'
  2140  007F4B  33                 	db	51	;'3'
  2141  007F4C  2E                 	db	46
  2142  007F4D  30                 	db	48	;'0'
  2143  007F4E  34                 	db	52	;'4'
  2144  007F4F  00                 	db	0
  2145  007F50  20                 	db	32
  2146  007F51  6D                 	db	109	;'m'
  2147  007F52  7A                 	db	122	;'z'
  2148  007F53  20                 	db	32
  2149  007F54  3D                 	db	61	;'='
  2150  007F55  20                 	db	32
  2151  007F56  25                 	db	37
  2152  007F57  64                 	db	100	;'d'
  2153  007F58  20                 	db	32
  2154  007F59  6D                 	db	109	;'m'
  2155  007F5A  47                 	db	71	;'G'
  2156  007F5B  0A                 	db	10
  2157  007F5C  00                 	db	0
  2158  007F5D  20                 	db	32
  2159  007F5E  71                 	db	113	;'q'
  2160  007F5F  75                 	db	117	;'u'
  2161  007F60  61                 	db	97	;'a'
  2162  007F61  74                 	db	116	;'t'
  2163  007F62  7A                 	db	122	;'z'
  2164  007F63  20                 	db	32
  2165  007F64  3D                 	db	61	;'='
  2166  007F65  20                 	db	32
  2167  007F66  25                 	db	37
  2168  007F67  66                 	db	102	;'f'
  2169  007F68  0A                 	db	10
  2170  007F69  00                 	db	0
  2171  007F6A  20                 	db	32
  2172  007F6B  61                 	db	97	;'a'
  2173  007F6C  7A                 	db	122	;'z'
  2174  007F6D  20                 	db	32
  2175  007F6E  3D                 	db	61	;'='
  2176  007F6F  20                 	db	32
  2177  007F70  25                 	db	37
  2178  007F71  64                 	db	100	;'d'
  2179  007F72  20                 	db	32
  2180  007F73  6D                 	db	109	;'m'
  2181  007F74  67                 	db	103	;'g'
  2182  007F75  0A                 	db	10
  2183  007F76  00                 	db	0
  2184  007F77  72                 	db	114	;'r'
  2185  007F78  61                 	db	97	;'a'
  2186  007F79  74                 	db	116	;'t'
  2187  007F7A  65                 	db	101	;'e'
  2188  007F7B  20                 	db	32
  2189  007F7C  3D                 	db	61	;'='
  2190  007F7D  20                 	db	32
  2191  007F7E  25                 	db	37
  2192  007F7F  66                 	db	102	;'f'
  2193  007F80  20                 	db	32
  2194  007F81  48                 	db	72	;'H'
  2195  007F82  7A                 	db	122	;'z'
  2196  007F83  00                 	db	0
  2197  007F84  20                 	db	32
  2198  007F85  71                 	db	113	;'q'
  2199  007F86  75                 	db	117	;'u'
  2200  007F87  61                 	db	97	;'a'
  2201  007F88  74                 	db	116	;'t'
  2202  007F89  78                 	db	120	;'x'
  2203  007F8A  20                 	db	32
  2204  007F8B  3D                 	db	61	;'='
  2205  007F8C  20                 	db	32
  2206  007F8D  25                 	db	37
  2207  007F8E  66                 	db	102	;'f'
  2208  007F8F  00                 	db	0
  2209  007F90  20                 	db	32
  2210  007F91  71                 	db	113	;'q'
  2211  007F92  75                 	db	117	;'u'
  2212  007F93  61                 	db	97	;'a'
  2213  007F94  74                 	db	116	;'t'
  2214  007F95  79                 	db	121	;'y'
  2215  007F96  20                 	db	32
  2216  007F97  3D                 	db	61	;'='
  2217  007F98  20                 	db	32
  2218  007F99  25                 	db	37
  2219  007F9A  66                 	db	102	;'f'
  2220  007F9B  00                 	db	0
  2221  007F9C  71                 	db	113	;'q'
  2222  007F9D  75                 	db	117	;'u'
  2223  007F9E  61                 	db	97	;'a'
  2224  007F9F  74                 	db	116	;'t'
  2225  007FA0  77                 	db	119	;'w'
  2226  007FA1  20                 	db	32
  2227  007FA2  3D                 	db	61	;'='
  2228  007FA3  20                 	db	32
  2229  007FA4  25                 	db	37
  2230  007FA5  66                 	db	102	;'f'
  2231  007FA6  00                 	db	0
  2232  007FA7  20                 	db	32
  2233  007FA8  71                 	db	113	;'q'
  2234  007FA9  77                 	db	119	;'w'
  2235  007FAA  20                 	db	32
  2236  007FAB  3D                 	db	61	;'='
  2237  007FAC  20                 	db	32
  2238  007FAD  25                 	db	37
  2239  007FAE  66                 	db	102	;'f'
  2240  007FAF  0A                 	db	10
  2241  007FB0  00                 	db	0
  2242  007FB1  20                 	db	32
  2243  007FB2  61                 	db	97	;'a'
  2244  007FB3  79                 	db	121	;'y'
  2245  007FB4  20                 	db	32
  2246  007FB5  3D                 	db	61	;'='
  2247  007FB6  20                 	db	32
  2248  007FB7  25                 	db	37
  2249  007FB8  64                 	db	100	;'d'
  2250  007FB9  00                 	db	0
  2251  007FBA  20                 	db	32
  2252  007FBB  67                 	db	103	;'g'
  2253  007FBC  79                 	db	121	;'y'
  2254  007FBD  20                 	db	32
  2255  007FBE  3D                 	db	61	;'='
  2256  007FBF  20                 	db	32
  2257  007FC0  25                 	db	37
  2258  007FC1  64                 	db	100	;'d'
  2259  007FC2  00                 	db	0
  2260  007FC3  20                 	db	32
  2261  007FC4  6D                 	db	109	;'m'
  2262  007FC5  79                 	db	121	;'y'
  2263  007FC6  20                 	db	32
  2264  007FC7  3D                 	db	61	;'='
  2265  007FC8  20                 	db	32
  2266  007FC9  25                 	db	37
  2267  007FCA  64                 	db	100	;'d'
  2268  007FCB  00                 	db	0
  2269  007FCC  20                 	db	32
  2270  007FCD  71                 	db	113	;'q'
  2271  007FCE  79                 	db	121	;'y'
  2272  007FCF  20                 	db	32
  2273  007FD0  3D                 	db	61	;'='
  2274  007FD1  20                 	db	32
  2275  007FD2  25                 	db	37
  2276  007FD3  66                 	db	102	;'f'
  2277  007FD4  00                 	db	0
  2278  007FD5  20                 	db	32
  2279  007FD6  71                 	db	113	;'q'
  2280  007FD7  7A                 	db	122	;'z'
  2281  007FD8  20                 	db	32
  2282  007FD9  3D                 	db	61	;'='
  2283  007FDA  20                 	db	32
  2284  007FDB  25                 	db	37
  2285  007FDC  66                 	db	102	;'f'
  2286  007FDD  00                 	db	0
  2287  007FDE  61                 	db	97	;'a'
  2288  007FDF  78                 	db	120	;'x'
  2289  007FE0  20                 	db	32
  2290  007FE1  3D                 	db	61	;'='
  2291  007FE2  20                 	db	32
  2292  007FE3  25                 	db	37
  2293  007FE4  64                 	db	100	;'d'
  2294  007FE5  00                 	db	0
  2295  007FE6  67                 	db	103	;'g'
  2296  007FE7  78                 	db	120	;'x'
  2297  007FE8  20                 	db	32
  2298  007FE9  3D                 	db	61	;'='
  2299  007FEA  20                 	db	32
  2300  007FEB  25                 	db	37
  2301  007FEC  64                 	db	100	;'d'
  2302  007FED  00                 	db	0
  2303  007FEE  6D                 	db	109	;'m'
  2304  007FEF  78                 	db	120	;'x'
  2305  007FF0  20                 	db	32
  2306  007FF1  3D                 	db	61	;'='
  2307  007FF2  20                 	db	32
  2308  007FF3  25                 	db	37
  2309  007FF4  64                 	db	100	;'d'
  2310  007FF5  00                 	db	0
  2311  007FF6  71                 	db	113	;'q'
  2312  007FF7  78                 	db	120	;'x'
  2313  007FF8  20                 	db	32
  2314  007FF9  3D                 	db	61	;'='
  2315  007FFA  20                 	db	32
  2316  007FFB  25                 	db	37
  2317  007FFC  66                 	db	102	;'f'
  2318  007FFD  00                 	db	0
  2319  0000                     
  2320                           ; #config settings
  2321  007FFE  00                 	db	0	; dummy byte at the end
  2322  0000                     
  2323                           	psect	cinit
  2324  00130A                     __pcinit:
  2325                           	opt stack 0
  2326  00130A                     start_initialization:
  2327                           	opt stack 0
  2328  00130A                     __initialization:
  2329                           	opt stack 0
  2330                           
  2331                           ; Clear objects allocated to BANK5 (206 bytes)
  2332  00130A  EE05  F000         	lfsr	0,__pbssBANK5
  2333  00130E  0ECE               	movlw	206
  2334  001310                     clear_0:
  2335  001310  6AEE               	clrf	postinc0,c
  2336  001312  06E8               	decf	wreg,f,c
  2337  001314  E1FD               	bnz	clear_0
  2338                           
  2339                           ; Clear objects allocated to BANK4 (206 bytes)
  2340  001316  EE04  F000         	lfsr	0,__pbssBANK4
  2341  00131A  0ECE               	movlw	206
  2342  00131C                     clear_1:
  2343  00131C  6AEE               	clrf	postinc0,c
  2344  00131E  06E8               	decf	wreg,f,c
  2345  001320  E1FD               	bnz	clear_1
  2346                           
  2347                           ; Clear objects allocated to BANK3 (200 bytes)
  2348  001322  EE03  F000         	lfsr	0,__pbssBANK3
  2349  001326  0EC8               	movlw	200
  2350  001328                     clear_2:
  2351  001328  6AEE               	clrf	postinc0,c
  2352  00132A  06E8               	decf	wreg,f,c
  2353  00132C  E1FD               	bnz	clear_2
  2354                           
  2355                           ; Clear objects allocated to BANK2 (256 bytes)
  2356  00132E  EE02  F000         	lfsr	0,__pbssBANK2
  2357  001332  EE11 F000          	lfsr	1,256
  2358  001336                     clear_3:
  2359  001336  6AEE               	clrf	postinc0,c
  2360  001338  50E5               	movf	postdec1,w,c
  2361  00133A  50E1               	movf	fsr1l,w,c
  2362  00133C  E1FC               	bnz	clear_3
  2363  00133E  50E2               	movf	fsr1h,w,c
  2364  001340  E1FA               	bnz	clear_3
  2365                           
  2366                           ; Clear objects allocated to BANK1 (234 bytes)
  2367  001342  EE01  F000         	lfsr	0,__pbssBANK1
  2368  001346  0EEA               	movlw	234
  2369  001348                     clear_4:
  2370  001348  6AEE               	clrf	postinc0,c
  2371  00134A  06E8               	decf	wreg,f,c
  2372  00134C  E1FD               	bnz	clear_4
  2373                           
  2374                           ; Clear objects allocated to BANK0 (149 bytes)
  2375  00134E  EE00  F060         	lfsr	0,__pbssBANK0
  2376  001352  0E95               	movlw	149
  2377  001354                     clear_5:
  2378  001354  6AEE               	clrf	postinc0,c
  2379  001356  06E8               	decf	wreg,f,c
  2380  001358  E1FD               	bnz	clear_5
  2381                           
  2382                           ; Clear objects allocated to COMRAM (18 bytes)
  2383  00135A  EE00  F026         	lfsr	0,__pbssCOMRAM
  2384  00135E  0E12               	movlw	18
  2385  001360                     clear_6:
  2386  001360  6AEE               	clrf	postinc0,c
  2387  001362  06E8               	decf	wreg,f,c
  2388  001364  E1FD               	bnz	clear_6
  2389                           
  2390                           ; Initialize objects allocated to BANK1 (12 bytes)
  2391                           ; load TBLPTR registers with __pidataBANK1
  2392  001366  0E1B               	movlw	low __pidataBANK1
  2393  001368  6EF6               	movwf	tblptrl,c
  2394  00136A  0E1B               	movlw	high __pidataBANK1
  2395  00136C  6EF7               	movwf	tblptrh,c
  2396  00136E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2397  001370  6EF8               	movwf	tblptru,c
  2398  001372  EE01  F0EA         	lfsr	0,__pdataBANK1
  2399  001376  EE10 F00C          	lfsr	1,12
  2400  00137A                     copy_data0:
  2401  00137A  0009               	tblrd		*+
  2402  00137C  CFF5 FFEE          	movff	tablat,postinc0
  2403  001380  50E5               	movf	postdec1,w,c
  2404  001382  50E1               	movf	fsr1l,w,c
  2405  001384  E1FA               	bnz	copy_data0
  2406                           
  2407                           ; Initialize objects allocated to BANK0 (11 bytes)
  2408                           ; load TBLPTR registers with __pidataBANK0
  2409  001386  0E27               	movlw	low __pidataBANK0
  2410  001388  6EF6               	movwf	tblptrl,c
  2411  00138A  0E1B               	movlw	high __pidataBANK0
  2412  00138C  6EF7               	movwf	tblptrh,c
  2413  00138E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2414  001390  6EF8               	movwf	tblptru,c
  2415  001392  EE00  F0F5         	lfsr	0,__pdataBANK0
  2416  001396  EE10 F00B          	lfsr	1,11
  2417  00139A                     copy_data1:
  2418  00139A  0009               	tblrd		*+
  2419  00139C  CFF5 FFEE          	movff	tablat,postinc0
  2420  0013A0  50E5               	movf	postdec1,w,c
  2421  0013A2  50E1               	movf	fsr1l,w,c
  2422  0013A4  E1FA               	bnz	copy_data1
  2423                           
  2424                           ; Initialize objects allocated to COMRAM (13 bytes)
  2425                           ; load TBLPTR registers with __pidataCOMRAM
  2426  0013A6  0E0E               	movlw	low __pidataCOMRAM
  2427  0013A8  6EF6               	movwf	tblptrl,c
  2428  0013AA  0E1B               	movlw	high __pidataCOMRAM
  2429  0013AC  6EF7               	movwf	tblptrh,c
  2430  0013AE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  2431  0013B0  6EF8               	movwf	tblptru,c
  2432  0013B2  EE00  F038         	lfsr	0,__pdataCOMRAM
  2433  0013B6  EE10 F00D          	lfsr	1,13
  2434  0013BA                     copy_data2:
  2435  0013BA  0009               	tblrd		*+
  2436  0013BC  CFF5 FFEE          	movff	tablat,postinc0
  2437  0013C0  50E5               	movf	postdec1,w,c
  2438  0013C2  50E1               	movf	fsr1l,w,c
  2439  0013C4  E1FA               	bnz	copy_data2
  2440  0013C6                     end_of_initialization:
  2441                           	opt stack 0
  2442  0013C6                     __end_of__initialization:
  2443                           	opt stack 0
  2444  0013C6  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2445  0013C8  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2446  0013CA  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2447  0013CC  6EF8               	movwf	tblptru,c
  2448  0013CE  0100               	movlb	0
  2449  0013D0  EF76  F00B         	goto	_main	;jump to C main() function
  2450                           tblptru	equ	0xFF8
  2451                           tblptrh	equ	0xFF7
  2452                           tblptrl	equ	0xFF6
  2453                           tablat	equ	0xFF5
  2454                           postinc0	equ	0xFEE
  2455                           wreg	equ	0xFE8
  2456                           postdec1	equ	0xFE5
  2457                           fsr1h	equ	0xFE2
  2458                           fsr1l	equ	0xFE1
  2459                           
  2460                           	psect	bssCOMRAM
  2461  000026                     __pbssCOMRAM:
  2462                           	opt stack 0
  2463  000026                     _serial_available:
  2464                           	opt stack 0
  2465  000026                     	ds	2
  2466  000028                     _serial_read:
  2467                           	opt stack 0
  2468  000028                     	ds	2
  2469  00002A                     _serial_write:
  2470                           	opt stack 0
  2471  00002A                     	ds	2
  2472  00002C                     I2C1_ISR@i2c_10bit_address_restart:
  2473                           	opt stack 0
  2474  00002C                     	ds	1
  2475  00002D                     I2C1_ISR@i2c_bytes_left:
  2476                           	opt stack 0
  2477  00002D                     	ds	1
  2478  00002E                     _AKNAKsend:
  2479                           	opt stack 0
  2480  00002E                     	ds	1
  2481  00002F                     _GPwrMode:
  2482                           	opt stack 0
  2483  00002F                     	ds	1
  2484  000030                     _i2c1_state:
  2485                           	opt stack 0
  2486  000030                     	ds	1
  2487  000031                     _i2c1_trb_count:
  2488                           	opt stack 0
  2489  000031                     	ds	1
  2490  000032                     _moduleAddress:
  2491                           	opt stack 0
  2492  000032                     	ds	1
  2493  000033                     _returnAddress:
  2494                           	opt stack 0
  2495  000033                     	ds	1
  2496  000034                     _rx_array_inx:
  2497                           	opt stack 0
  2498  000034                     	ds	1
  2499  000035                     _rx_len:
  2500                           	opt stack 0
  2501  000035                     	ds	1
  2502  000036                     I2C1_ISR@i2c_address:
  2503                           	opt stack 0
  2504  000036                     	ds	2
  2505                           tblptru	equ	0xFF8
  2506                           tblptrh	equ	0xFF7
  2507                           tblptrl	equ	0xFF6
  2508                           tablat	equ	0xFF5
  2509                           postinc0	equ	0xFEE
  2510                           wreg	equ	0xFE8
  2511                           postdec1	equ	0xFE5
  2512                           fsr1h	equ	0xFE2
  2513                           fsr1l	equ	0xFE1
  2514                           
  2515                           	psect	dataCOMRAM
  2516  000038                     __pdataCOMRAM:
  2517                           	opt stack 0
  2518  000038                     _q:
  2519                           	opt stack 0
  2520  000038                     	ds	12
  2521  000044                     _OPRMode:
  2522                           	opt stack 0
  2523  000044                     	ds	1
  2524                           tblptru	equ	0xFF8
  2525                           tblptrh	equ	0xFF7
  2526                           tblptrl	equ	0xFF6
  2527                           tablat	equ	0xFF5
  2528                           postinc0	equ	0xFEE
  2529                           wreg	equ	0xFE8
  2530                           postdec1	equ	0xFE5
  2531                           fsr1h	equ	0xFE2
  2532                           fsr1l	equ	0xFE1
  2533                           
  2534                           	psect	bssBANK0
  2535  000060                     __pbssBANK0:
  2536                           	opt stack 0
  2537  000060                     _i2c1_object:
  2538                           	opt stack 0
  2539  000060                     	ds	7
  2540  000067                     _Now:
  2541                           	opt stack 0
  2542  000067                     	ds	4
  2543  00006B                     _lastUpdate:
  2544                           	opt stack 0
  2545  00006B                     	ds	4
  2546  00006F                     _sumCount:
  2547                           	opt stack 0
  2548  00006F                     	ds	4
  2549  000073                     _GRVx:
  2550                           	opt stack 0
  2551  000073                     	ds	3
  2552  000076                     _GRVy:
  2553                           	opt stack 0
  2554  000076                     	ds	3
  2555  000079                     _GRVz:
  2556                           	opt stack 0
  2557  000079                     	ds	3
  2558  00007C                     _Gtemperature:
  2559                           	opt stack 0
  2560  00007C                     	ds	3
  2561  00007F                     _GyroMeasDrift:
  2562                           	opt stack 0
  2563  00007F                     	ds	3
  2564  000082                     _LIAx:
  2565                           	opt stack 0
  2566  000082                     	ds	3
  2567  000085                     _LIAy:
  2568                           	opt stack 0
  2569  000085                     	ds	3
  2570  000088                     _LIAz:
  2571                           	opt stack 0
  2572  000088                     	ds	3
  2573  00008B                     _aRes:
  2574                           	opt stack 0
  2575  00008B                     	ds	3
  2576  00008E                     _ax:
  2577                           	opt stack 0
  2578  00008E                     	ds	3
  2579  000091                     _ay:
  2580                           	opt stack 0
  2581  000091                     	ds	3
  2582  000094                     _az:
  2583                           	opt stack 0
  2584  000094                     	ds	3
  2585  000097                     _beta:
  2586                           	opt stack 0
  2587  000097                     	ds	3
  2588  00009A                     _deltat:
  2589                           	opt stack 0
  2590  00009A                     	ds	3
  2591  00009D                     _gx:
  2592                           	opt stack 0
  2593  00009D                     	ds	3
  2594  0000A0                     _gy:
  2595                           	opt stack 0
  2596  0000A0                     	ds	3
  2597  0000A3                     _gz:
  2598                           	opt stack 0
  2599  0000A3                     	ds	3
  2600  0000A6                     _mx:
  2601                           	opt stack 0
  2602  0000A6                     	ds	3
  2603  0000A9                     _my:
  2604                           	opt stack 0
  2605  0000A9                     	ds	3
  2606  0000AC                     _mz:
  2607                           	opt stack 0
  2608  0000AC                     	ds	3
  2609  0000AF                     _pitch:
  2610                           	opt stack 0
  2611  0000AF                     	ds	3
  2612  0000B2                     _roll:
  2613                           	opt stack 0
  2614  0000B2                     	ds	3
  2615  0000B5                     _sum:
  2616                           	opt stack 0
  2617  0000B5                     	ds	3
  2618  0000B8                     _yaw:
  2619                           	opt stack 0
  2620  0000B8                     	ds	3
  2621  0000BB                     I2C1_ISR@pi2c_buf_ptr:
  2622                           	opt stack 0
  2623  0000BB                     	ds	2
  2624  0000BD                     _TempOne:
  2625                           	opt stack 0
  2626  0000BD                     	ds	2
  2627  0000BF                     _TempTwo:
  2628                           	opt stack 0
  2629  0000BF                     	ds	2
  2630  0000C1                     _addressErrorCounter:
  2631                           	opt stack 0
  2632  0000C1                     	ds	2
  2633  0000C3                     _alignErrorCounter:
  2634                           	opt stack 0
  2635  0000C3                     	ds	2
  2636  0000C5                     _brake:
  2637                           	opt stack 0
  2638  0000C5                     	ds	2
  2639  0000C7                     _crcErrorCounter:
  2640                           	opt stack 0
  2641  0000C7                     	ds	2
  2642  0000C9                     _dataAdressErrorCounter:
  2643                           	opt stack 0
  2644  0000C9                     	ds	2
  2645  0000CB                     _errno:
  2646                           	opt stack 0
  2647  0000CB                     	ds	2
  2648  0000CD                     _group:
  2649                           	opt stack 0
  2650  0000CD                     	ds	2
  2651  0000CF                     _p_i2c1_current:
  2652                           	opt stack 0
  2653  0000CF                     	ds	2
  2654  0000D1                     _p_i2c1_trb_current:
  2655                           	opt stack 0
  2656  0000D1                     	ds	2
  2657  0000D3                     _receiveArrayAddress:
  2658                           	opt stack 0
  2659  0000D3                     	ds	2
  2660  0000D5                     _sendStructAddress:
  2661                           	opt stack 0
  2662  0000D5                     	ds	2
  2663  0000D7                     _serial_peek:
  2664                           	opt stack 0
  2665  0000D7                     	ds	2
  2666  0000D9                     _tempGCount:
  2667                           	opt stack 0
  2668  0000D9                     	ds	2
  2669  0000DB                     _tempMCount:
  2670                           	opt stack 0
  2671  0000DB                     	ds	2
  2672  0000DD                     _throttle:
  2673                           	opt stack 0
  2674  0000DD                     	ds	2
  2675  0000DF                     _timer1ReloadVal:
  2676                           	opt stack 0
  2677  0000DF                     	ds	2
  2678  0000E1                     _APwrMode:
  2679                           	opt stack 0
  2680  0000E1                     	ds	1
  2681  0000E2                     _Ascale:
  2682                           	opt stack 0
  2683  0000E2                     	ds	1
  2684  0000E3                     _MPwrMode:
  2685                           	opt stack 0
  2686  0000E3                     	ds	1
  2687  0000E4                     _PWRMode:
  2688                           	opt stack 0
  2689  0000E4                     	ds	1
  2690  0000E5                     _calc_CS:
  2691                           	opt stack 0
  2692  0000E5                     	ds	1
  2693  0000E6                     _eusart1RxCount:
  2694                           	opt stack 0
  2695  0000E6                     	ds	1
  2696  0000E7                     	ds	1
  2697  0000E8                     	ds	1
  2698  0000E9                     _eusart1TxBufferRemaining:
  2699                           	opt stack 0
  2700  0000E9                     	ds	1
  2701  0000EA                     	ds	1
  2702  0000EB                     	ds	1
  2703  0000EC                     _maxDataAddress:
  2704                           	opt stack 0
  2705  0000EC                     	ds	1
  2706  0000ED                     _rx_address:
  2707                           	opt stack 0
  2708  0000ED                     	ds	1
  2709  0000EE                     _status:
  2710                           	opt stack 0
  2711  0000EE                     	ds	1
  2712  0000EF                     _i2c1_tr_queue:
  2713                           	opt stack 0
  2714  0000EF                     	ds	6
  2715                           tblptru	equ	0xFF8
  2716                           tblptrh	equ	0xFF7
  2717                           tblptrl	equ	0xFF6
  2718                           tablat	equ	0xFF5
  2719                           postinc0	equ	0xFEE
  2720                           wreg	equ	0xFE8
  2721                           postdec1	equ	0xFE5
  2722                           fsr1h	equ	0xFE2
  2723                           fsr1l	equ	0xFE1
  2724                           
  2725                           	psect	dataBANK0
  2726  0000F5                     __pdataBANK0:
  2727                           	opt stack 0
  2728  0000F5                     _GyroMeasError:
  2729                           	opt stack 0
  2730  0000F5                     	ds	3
  2731  0000F8                     _Abw:
  2732                           	opt stack 0
  2733  0000F8                     	ds	1
  2734  0000F9                     _Gbw:
  2735                           	opt stack 0
  2736  0000F9                     	ds	1
  2737  0000FA                     _Gscale:
  2738                           	opt stack 0
  2739  0000FA                     	ds	1
  2740  0000FB                     _MOpMode:
  2741                           	opt stack 0
  2742  0000FB                     	ds	1
  2743  0000FC                     _Modr:
  2744                           	opt stack 0
  2745  0000FC                     	ds	1
  2746  0000FD                     _Transmit_stall:
  2747                           	opt stack 0
  2748  0000FD                     	ds	1
  2749  0000FE                     _intPin:
  2750                           	opt stack 0
  2751  0000FE                     	ds	1
  2752  0000FF                     _myLed:
  2753                           	opt stack 0
  2754  0000FF                     	ds	1
  2755                           tblptru	equ	0xFF8
  2756                           tblptrh	equ	0xFF7
  2757                           tblptrl	equ	0xFF6
  2758                           tablat	equ	0xFF5
  2759                           postinc0	equ	0xFEE
  2760                           wreg	equ	0xFE8
  2761                           postdec1	equ	0xFE5
  2762                           fsr1h	equ	0xFE2
  2763                           fsr1l	equ	0xFE1
  2764                           
  2765                           	psect	bssBANK1
  2766  000100                     __pbssBANK1:
  2767                           	opt stack 0
  2768  000100                     accelgyroCalBNO055@F392:
  2769                           	opt stack 0
  2770  000100                     	ds	12
  2771  00010C                     accelgyroCalBNO055@F394:
  2772                           	opt stack 0
  2773  00010C                     	ds	12
  2774  000118                     magCalBNO055@F448:
  2775                           	opt stack 0
  2776  000118                     	ds	12
  2777  000124                     _TempData:
  2778                           	opt stack 0
  2779  000124                     	ds	10
  2780  00012E                     _eInt:
  2781                           	opt stack 0
  2782  00012E                     	ds	9
  2783  000137                     	ds	8
  2784  00013F                     	ds	8
  2785  000147                     accelgyroCalBNO055@F396:
  2786                           	opt stack 0
  2787  000147                     	ds	6
  2788  00014D                     accelgyroCalBNO055@F415:
  2789                           	opt stack 0
  2790  00014D                     	ds	6
  2791  000153                     magCalBNO055@F450:
  2792                           	opt stack 0
  2793  000153                     	ds	6
  2794  000159                     magCalBNO055@F452:
  2795                           	opt stack 0
  2796  000159                     	ds	6
  2797  00015F                     magCalBNO055@F454:
  2798                           	opt stack 0
  2799  00015F                     	ds	6
  2800  000165                     _count:
  2801                           	opt stack 0
  2802  000165                     	ds	4
  2803  000169                     _delt_t:
  2804                           	opt stack 0
  2805  000169                     	ds	4
  2806  00016D                     _firstUpdate:
  2807                           	opt stack 0
  2808  00016D                     	ds	4
  2809  000171                     _Mtemperature:
  2810                           	opt stack 0
  2811  000171                     	ds	3
  2812  000174                     _Pitch:
  2813                           	opt stack 0
  2814  000174                     	ds	3
  2815  000177                     _Roll:
  2816                           	opt stack 0
  2817  000177                     	ds	3
  2818  00017A                     _Yaw:
  2819                           	opt stack 0
  2820  00017A                     	ds	3
  2821  00017D                     _gRes:
  2822                           	opt stack 0
  2823  00017D                     	ds	3
  2824  000180                     _mRes:
  2825                           	opt stack 0
  2826  000180                     	ds	3
  2827  000183                     _zeta:
  2828                           	opt stack 0
  2829  000183                     	ds	3
  2830  000186                     _crc_buffer:
  2831                           	opt stack 0
  2832  000186                     	ds	17
  2833  000197                     _accelBias:
  2834                           	opt stack 0
  2835  000197                     	ds	9
  2836  0001A0                     _gyroBias:
  2837                           	opt stack 0
  2838  0001A0                     	ds	9
  2839  0001A9                     _magBias:
  2840                           	opt stack 0
  2841  0001A9                     	ds	9
  2842  0001B2                     _quatCount:
  2843                           	opt stack 0
  2844  0001B2                     	ds	8
  2845  0001BA                     I2C1_MasterRead@trBlock:
  2846                           	opt stack 0
  2847  0001BA                     	ds	6
  2848  0001C0                     I2C1_MasterWrite@trBlock:
  2849                           	opt stack 0
  2850  0001C0                     	ds	6
  2851  0001C6                     _EulCount:
  2852                           	opt stack 0
  2853  0001C6                     	ds	6
  2854  0001CC                     _GRVCount:
  2855                           	opt stack 0
  2856  0001CC                     	ds	6
  2857  0001D2                     _LIACount:
  2858                           	opt stack 0
  2859  0001D2                     	ds	6
  2860  0001D8                     _accelCount:
  2861                           	opt stack 0
  2862  0001D8                     	ds	6
  2863  0001DE                     _gyroCount:
  2864                           	opt stack 0
  2865  0001DE                     	ds	6
  2866  0001E4                     _magCount:
  2867                           	opt stack 0
  2868  0001E4                     	ds	6
  2869                           tblptru	equ	0xFF8
  2870                           tblptrh	equ	0xFF7
  2871                           tblptrl	equ	0xFF6
  2872                           tablat	equ	0xFF5
  2873                           postinc0	equ	0xFEE
  2874                           wreg	equ	0xFE8
  2875                           postdec1	equ	0xFE5
  2876                           fsr1h	equ	0xFE2
  2877                           fsr1l	equ	0xFE1
  2878                           
  2879                           	psect	dataBANK1
  2880  0001EA                     __pdataBANK1:
  2881                           	opt stack 0
  2882  0001EA                     _quat:
  2883                           	opt stack 0
  2884  0001EA                     	ds	12
  2885                           tblptru	equ	0xFF8
  2886                           tblptrh	equ	0xFF7
  2887                           tblptrl	equ	0xFF6
  2888                           tablat	equ	0xFF5
  2889                           postinc0	equ	0xFEE
  2890                           wreg	equ	0xFE8
  2891                           postdec1	equ	0xFE5
  2892                           fsr1h	equ	0xFE2
  2893                           fsr1l	equ	0xFE1
  2894                           
  2895                           	psect	bssBANK2
  2896  000200                     __pbssBANK2:
  2897                           	opt stack 0
  2898  000200                     _ring_buffer:
  2899                           	opt stack 0
  2900  000200                     	ds	206
  2901  0002CE                     _receiveArray:
  2902                           	opt stack 0
  2903  0002CE                     	ds	50
  2904                           tblptru	equ	0xFF8
  2905                           tblptrh	equ	0xFF7
  2906                           tblptrl	equ	0xFF6
  2907                           tablat	equ	0xFF5
  2908                           postinc0	equ	0xFEE
  2909                           wreg	equ	0xFE8
  2910                           postdec1	equ	0xFE5
  2911                           fsr1h	equ	0xFE2
  2912                           fsr1l	equ	0xFE1
  2913                           
  2914                           	psect	bssBANK3
  2915  000300                     __pbssBANK3:
  2916                           	opt stack 0
  2917  000300                     _rx_buffer:
  2918                           	opt stack 0
  2919  000300                     	ds	200
  2920                           tblptru	equ	0xFF8
  2921                           tblptrh	equ	0xFF7
  2922                           tblptrl	equ	0xFF6
  2923                           tablat	equ	0xFF5
  2924                           postinc0	equ	0xFEE
  2925                           wreg	equ	0xFE8
  2926                           postdec1	equ	0xFE5
  2927                           fsr1h	equ	0xFE2
  2928                           fsr1l	equ	0xFE1
  2929                           
  2930                           	psect	bssBANK4
  2931  000400                     __pbssBANK4:
  2932                           	opt stack 0
  2933  000400                     _input_buffer:
  2934                           	opt stack 0
  2935  000400                     	ds	206
  2936                           tblptru	equ	0xFF8
  2937                           tblptrh	equ	0xFF7
  2938                           tblptrl	equ	0xFF6
  2939                           tablat	equ	0xFF5
  2940                           postinc0	equ	0xFEE
  2941                           wreg	equ	0xFE8
  2942                           postdec1	equ	0xFE5
  2943                           fsr1h	equ	0xFE2
  2944                           fsr1l	equ	0xFE1
  2945                           
  2946                           	psect	bssBANK5
  2947  000500                     __pbssBANK5:
  2948                           	opt stack 0
  2949  000500                     _output_buffer:
  2950                           	opt stack 0
  2951  000500                     	ds	206
  2952                           tblptru	equ	0xFF8
  2953                           tblptrh	equ	0xFF7
  2954                           tblptrl	equ	0xFF6
  2955                           tablat	equ	0xFF5
  2956                           postinc0	equ	0xFEE
  2957                           wreg	equ	0xFE8
  2958                           postdec1	equ	0xFE5
  2959                           fsr1h	equ	0xFE2
  2960                           fsr1l	equ	0xFE1
  2961                           
  2962                           	psect	cstackBANK3
  2963  0003C8                     __pcstackBANK3:
  2964                           	opt stack 0
  2965  0003C8                     ??_receiveData:
  2966                           
  2967                           ; 0 bytes @ 0x0
  2968  0003C8                     	ds	6
  2969  0003CE                     receiveData@holder:
  2970                           	opt stack 0
  2971                           
  2972                           ; 3 bytes @ 0x6
  2973  0003CE                     	ds	3
  2974  0003D1                     receiveData@holder_1990:
  2975                           	opt stack 0
  2976                           
  2977                           ; 3 bytes @ 0x9
  2978  0003D1                     	ds	3
  2979  0003D4                     receiveData@crcHolder:
  2980                           	opt stack 0
  2981                           
  2982                           ; 1 bytes @ 0xC
  2983  0003D4                     	ds	1
  2984  0003D5                     receiveData@crcHolder_1991:
  2985                           	opt stack 0
  2986                           
  2987                           ; 1 bytes @ 0xD
  2988  0003D5                     	ds	1
  2989  0003D6                     receiveData@u:
  2990                           	opt stack 0
  2991                           
  2992                           ; 2 bytes @ 0xE
  2993  0003D6                     	ds	2
  2994  0003D8                     receiveData@r:
  2995                           	opt stack 0
  2996                           
  2997                           ; 2 bytes @ 0x10
  2998  0003D8                     	ds	2
  2999                           tblptru	equ	0xFF8
  3000                           tblptrh	equ	0xFF7
  3001                           tblptrl	equ	0xFF6
  3002                           tablat	equ	0xFF5
  3003                           postinc0	equ	0xFEE
  3004                           wreg	equ	0xFE8
  3005                           postdec1	equ	0xFE5
  3006                           fsr1h	equ	0xFE2
  3007                           fsr1l	equ	0xFE1
  3008                           
  3009                           	psect	cstackBANK1
  3010  0001F6                     __pcstackBANK1:
  3011                           	opt stack 0
  3012  0001F6                     ??_FastTransfer_buffer_put:
  3013  0001F6                     Send_put@_data:
  3014                           	opt stack 0
  3015  0001F6                     ___lwdiv@counter:
  3016                           	opt stack 0
  3017  0001F6                     FastTransfer_buffer_flush@_this:
  3018                           	opt stack 0
  3019  0001F6                     crcBufS_get@wantedTime:
  3020                           	opt stack 0
  3021                           
  3022                           ; 2 bytes @ 0x0
  3023  0001F6                     	ds	1
  3024  0001F7                     ___lwdiv@quotient:
  3025                           	opt stack 0
  3026                           
  3027                           ; 2 bytes @ 0x1
  3028  0001F7                     	ds	1
  3029  0001F8                     CRCcheck@SentCRC:
  3030                           	opt stack 0
  3031  0001F8                     ToSend@what:
  3032                           	opt stack 0
  3033  0001F8                     FastTransfer_buffer_flush@clearBuffer:
  3034                           	opt stack 0
  3035                           
  3036                           ; 2 bytes @ 0x2
  3037  0001F8                     	ds	1
  3038  0001F9                     CRCcheck@calculatedCRC:
  3039                           	opt stack 0
  3040                           
  3041                           ; 1 bytes @ 0x3
  3042  0001F9                     	ds	1
  3043  0001FA                     ??_sendData:
  3044  0001FA                     ToSend@where:
  3045                           	opt stack 0
  3046  0001FA                     CRCcheck@arrayHolder:
  3047                           	opt stack 0
  3048                           
  3049                           ; 3 bytes @ 0x4
  3050  0001FA                     	ds	1
  3051  0001FB                     sendData@whereToSend:
  3052                           	opt stack 0
  3053                           
  3054                           ; 1 bytes @ 0x5
  3055  0001FB                     	ds	1
  3056  0001FC                     sendData@CS:
  3057                           	opt stack 0
  3058                           
  3059                           ; 1 bytes @ 0x6
  3060  0001FC                     	ds	1
  3061  0001FD                     sendData@i:
  3062                           	opt stack 0
  3063  0001FD                     CRCcheck@rt:
  3064                           	opt stack 0
  3065                           
  3066                           ; 2 bytes @ 0x7
  3067  0001FD                     	ds	2
  3068                           tblptru	equ	0xFF8
  3069                           tblptrh	equ	0xFF7
  3070                           tblptrl	equ	0xFF6
  3071                           tablat	equ	0xFF5
  3072                           postinc0	equ	0xFEE
  3073                           wreg	equ	0xFE8
  3074                           postdec1	equ	0xFE5
  3075                           fsr1h	equ	0xFE2
  3076                           fsr1l	equ	0xFE1
  3077                           
  3078                           	psect	cstackCOMRAM
  3079  000001                     __pcstackCOMRAM:
  3080                           	opt stack 0
  3081  000001                     ??_I2C1_Stop:
  3082  000001                     ?i2_UART_buff_size:
  3083                           	opt stack 0
  3084  000001                     ?i2_UART_buff_modulo_inc:
  3085                           	opt stack 0
  3086  000001                     ECCP2_CallBack@capturedValue:
  3087                           	opt stack 0
  3088  000001                     ECCP1_CallBack@capturedValue:
  3089                           	opt stack 0
  3090  000001                     i2UART_buff_size@_this:
  3091                           	opt stack 0
  3092  000001                     i2UART_buff_modulo_inc@value:
  3093                           	opt stack 0
  3094                           
  3095                           ; 2 bytes @ 0x0
  3096  000001                     	ds	2
  3097  000003                     I2C1_Stop@completion_code:
  3098                           	opt stack 0
  3099  000003                     ECCP2_CaptureISR@module:
  3100                           	opt stack 0
  3101  000003                     ECCP1_CaptureISR@module:
  3102                           	opt stack 0
  3103  000003                     i2UART_buff_modulo_inc@modulus:
  3104                           	opt stack 0
  3105                           
  3106                           ; 2 bytes @ 0x2
  3107  000003                     	ds	1
  3108  000004                     ??_I2C1_ISR:
  3109                           
  3110                           ; 0 bytes @ 0x3
  3111  000004                     	ds	1
  3112  000005                     i2UART_buff_modulo_inc@my_value:
  3113                           	opt stack 0
  3114                           
  3115                           ; 2 bytes @ 0x4
  3116  000005                     	ds	2
  3117  000007                     i2UART_buff_put@_this:
  3118                           	opt stack 0
  3119  000007                     i2UART_buff_get@_this:
  3120                           	opt stack 0
  3121                           
  3122                           ; 2 bytes @ 0x6
  3123  000007                     	ds	2
  3124  000009                     ??i2_UART_buff_get:
  3125  000009                     i2UART_buff_put@c:
  3126                           	opt stack 0
  3127                           
  3128                           ; 1 bytes @ 0x8
  3129  000009                     	ds	1
  3130  00000A                     ??i2_UART_buff_put:
  3131                           
  3132                           ; 0 bytes @ 0x9
  3133  00000A                     	ds	1
  3134  00000B                     i2UART_buff_get@c:
  3135                           	opt stack 0
  3136                           
  3137                           ; 1 bytes @ 0xA
  3138  00000B                     	ds	1
  3139  00000C                     EUSART1_Receive_ISR@data:
  3140                           	opt stack 0
  3141                           
  3142                           ; 1 bytes @ 0xB
  3143  00000C                     	ds	1
  3144  00000D                     ??_INTERRUPT_InterruptManager:
  3145                           
  3146                           ; 0 bytes @ 0xC
  3147  00000D                     	ds	14
  3148  00001B                     ?_UART_buff_modulo_inc:
  3149                           	opt stack 0
  3150  00001B                     ?_FastTransfer_buffer_modulo_inc:
  3151                           	opt stack 0
  3152  00001B                     ?_UART_buff_size:
  3153                           	opt stack 0
  3154  00001B                     ?_ADC_GetConversion:
  3155                           	opt stack 0
  3156  00001B                     UART_buff_size@_this:
  3157                           	opt stack 0
  3158  00001B                     UART_buff_modulo_inc@value:
  3159                           	opt stack 0
  3160  00001B                     UART_buff_peek@_this:
  3161                           	opt stack 0
  3162  00001B                     CRC8@data:
  3163                           	opt stack 0
  3164  00001B                     FastTransfer_buffer_modulo_inc@value:
  3165                           	opt stack 0
  3166  00001B                     crcBufS_put@_this:
  3167                           	opt stack 0
  3168  00001B                     crcBufS_status_put@_this:
  3169                           	opt stack 0
  3170  00001B                     crcBufS_get@_this:
  3171                           	opt stack 0
  3172  00001B                     TempGet@x:
  3173                           	opt stack 0
  3174  00001B                     Delay@wait:
  3175                           	opt stack 0
  3176  00001B                     memset@p1:
  3177                           	opt stack 0
  3178                           
  3179                           ; 2 bytes @ 0x1A
  3180  00001B                     	ds	2
  3181  00001D                     ??_Delay:
  3182  00001D                     ??_UART_buff_peek:
  3183  00001D                     ??_ADC_GetConversion:
  3184  00001D                     ?_Receive_available:
  3185                           	opt stack 0
  3186  00001D                     CRC8@len:
  3187                           	opt stack 0
  3188  00001D                     crcBufS_put@address:
  3189                           	opt stack 0
  3190  00001D                     crcBufS_status_put@time:
  3191                           	opt stack 0
  3192  00001D                     crcBufS_get@time:
  3193                           	opt stack 0
  3194  00001D                     UART_buff_modulo_inc@modulus:
  3195                           	opt stack 0
  3196  00001D                     FastTransfer_buffer_modulo_inc@modulus:
  3197                           	opt stack 0
  3198  00001D                     memset@c:
  3199                           	opt stack 0
  3200                           
  3201                           ; 2 bytes @ 0x1C
  3202  00001D                     	ds	1
  3203  00001E                     CRC8@sum:
  3204                           	opt stack 0
  3205  00001E                     crcBufS_put@oldCRC:
  3206                           	opt stack 0
  3207  00001E                     crcBufS_status_put@status:
  3208                           	opt stack 0
  3209  00001E                     crcBufS_get@space:
  3210                           	opt stack 0
  3211  00001E                     Delay@x:
  3212                           	opt stack 0
  3213                           
  3214                           ; 2 bytes @ 0x1D
  3215  00001E                     	ds	1
  3216  00001F                     ??_crcBufS_get:
  3217  00001F                     ??_crcBufS_status_put:
  3218  00001F                     ADC_GetConversion@channel:
  3219                           	opt stack 0
  3220  00001F                     CRC8@extract:
  3221                           	opt stack 0
  3222  00001F                     crcBufS_put@status:
  3223                           	opt stack 0
  3224  00001F                     UART_buff_modulo_inc@my_value:
  3225                           	opt stack 0
  3226  00001F                     FastTransfer_buffer_modulo_inc@my_value:
  3227                           	opt stack 0
  3228  00001F                     memset@n:
  3229                           	opt stack 0
  3230                           
  3231                           ; 2 bytes @ 0x1E
  3232  00001F                     	ds	1
  3233  000020                     ??_crcBufS_put:
  3234  000020                     ?___lwdiv:
  3235                           	opt stack 0
  3236  000020                     CRC8@tempI:
  3237                           	opt stack 0
  3238  000020                     ___lwdiv@dividend:
  3239                           	opt stack 0
  3240                           
  3241                           ; 2 bytes @ 0x1F
  3242  000020                     	ds	1
  3243  000021                     CRC8@crc:
  3244                           	opt stack 0
  3245  000021                     UART_buff_put@_this:
  3246                           	opt stack 0
  3247  000021                     UART_buff_get@_this:
  3248                           	opt stack 0
  3249  000021                     FastTransfer_buffer_put@_this:
  3250                           	opt stack 0
  3251  000021                     memset@p:
  3252                           	opt stack 0
  3253                           
  3254                           ; 2 bytes @ 0x20
  3255  000021                     	ds	1
  3256  000022                     ___lwdiv@divisor:
  3257                           	opt stack 0
  3258                           
  3259                           ; 2 bytes @ 0x21
  3260  000022                     	ds	1
  3261  000023                     ??_UART_buff_get:
  3262  000023                     UART_buff_put@c:
  3263                           	opt stack 0
  3264  000023                     FastTransfer_buffer_put@towhere:
  3265                           	opt stack 0
  3266  000023                     UART_buff_init@_this:
  3267                           	opt stack 0
  3268  000023                     crcBufS_status_put@wantedTime:
  3269                           	opt stack 0
  3270                           
  3271                           ; 2 bytes @ 0x22
  3272  000023                     	ds	1
  3273  000024                     ??_UART_buff_put:
  3274  000024                     FastTransfer_buffer_put@towhat:
  3275                           	opt stack 0
  3276  000024                     TempCalc@x:
  3277                           	opt stack 0
  3278                           
  3279                           ; 2 bytes @ 0x23
  3280  000024                     	ds	1
  3281  000025                     UART_buff_get@c:
  3282                           	opt stack 0
  3283                           
  3284                           ; 1 bytes @ 0x24
  3285  000025                     	ds	1
  3286  000026                     tblptru	equ	0xFF8
  3287                           tblptrh	equ	0xFF7
  3288                           tblptrl	equ	0xFF6
  3289                           tablat	equ	0xFF5
  3290                           postinc0	equ	0xFEE
  3291                           wreg	equ	0xFE8
  3292                           postdec1	equ	0xFE5
  3293                           fsr1h	equ	0xFE2
  3294                           fsr1l	equ	0xFE1
  3295                           
  3296                           ; 0 bytes @ 0x25
  3297 ;;
  3298 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3299 ;;
  3300 ;; *************** function _main *****************
  3301 ;; Defined at:
  3302 ;;		line 38 in file "main.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;		None
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;		None
  3307 ;; Return value:  Size  Location     Type
  3308 ;;		None               void
  3309 ;; Registers used:
  3310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3316 ;;      Params:         0       0       0       0       0       0       0
  3317 ;;      Locals:         0       0       0       0       0       0       0
  3318 ;;      Temps:          0       0       0       0       0       0       0
  3319 ;;      Totals:         0       0       0       0       0       0       0
  3320 ;;Total ram usage:        0 bytes
  3321 ;; Hardware stack levels required when called:   10
  3322 ;; This function calls:
  3323 ;;		_SYSTEM_Initialize
  3324 ;;		_TempCalc
  3325 ;;		_TempGet
  3326 ;;		_updateComms
  3327 ;; This function is called by:
  3328 ;;		Startup code after reset
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332                           	psect	text0
  3333  0016EC                     __ptext0:
  3334                           	opt stack 0
  3335  0016EC                     _main:
  3336                           	opt stack 21
  3337                           
  3338                           ;main.c: 40: SYSTEM_Initialize();
  3339                           
  3340                           ;incstack = 0
  3341  0016EC  EC89  F00C         	call	_SYSTEM_Initialize	;wreg free
  3342                           
  3343                           ;main.c: 59: (INTCONbits.GIE = 1);
  3344  0016F0  8EF2               	bsf	intcon,7,c	;volatile
  3345                           
  3346                           ;main.c: 62: (INTCONbits.PEIE = 1);
  3347  0016F2  8CF2               	bsf	intcon,6,c	;volatile
  3348                           
  3349                           ;main.c: 69: LATCbits.LATC5 = 0;
  3350  0016F4  9A8B               	bcf	3979,5,c	;volatile
  3351  0016F6                     l7072:
  3352                           
  3353                           ;main.c: 71: updateComms();
  3354  0016F6  EC6A  F00D         	call	_updateComms	;wreg free
  3355                           
  3356                           ;main.c: 72: TempCalc(1);
  3357  0016FA  0E00               	movlw	0
  3358  0016FC  6E25               	movwf	TempCalc@x+1,c
  3359  0016FE  0E01               	movlw	1
  3360  001700  6E24               	movwf	TempCalc@x,c
  3361  001702  ECE1  F00A         	call	_TempCalc	;wreg free
  3362                           
  3363                           ;main.c: 73: TempCalc(2);
  3364  001706  0E00               	movlw	0
  3365  001708  6E25               	movwf	TempCalc@x+1,c
  3366  00170A  0E02               	movlw	2
  3367  00170C  6E24               	movwf	TempCalc@x,c
  3368  00170E  ECE1  F00A         	call	_TempCalc	;wreg free
  3369                           
  3370                           ;main.c: 74: TempGet(1);
  3371  001712  0E00               	movlw	0
  3372  001714  6E1C               	movwf	TempGet@x+1,c
  3373  001716  0E01               	movlw	1
  3374  001718  6E1B               	movwf	TempGet@x,c
  3375  00171A  ECA3  F00D         	call	_TempGet	;wreg free
  3376                           
  3377                           ;main.c: 75: TempGet(2);
  3378  00171E  0E00               	movlw	0
  3379  001720  6E1C               	movwf	TempGet@x+1,c
  3380  001722  0E02               	movlw	2
  3381  001724  6E1B               	movwf	TempGet@x,c
  3382  001726  ECA3  F00D         	call	_TempGet	;wreg free
  3383  00172A  D7E5               	goto	l7072
  3384  00172C                     __end_of_main:
  3385                           	opt stack 0
  3386                           tblptru	equ	0xFF8
  3387                           tblptrh	equ	0xFF7
  3388                           tblptrl	equ	0xFF6
  3389                           tablat	equ	0xFF5
  3390                           intcon	equ	0xFF2
  3391                           postinc0	equ	0xFEE
  3392                           wreg	equ	0xFE8
  3393                           postdec1	equ	0xFE5
  3394                           fsr1h	equ	0xFE2
  3395                           fsr1l	equ	0xFE1
  3396                           
  3397 ;; *************** function _updateComms *****************
  3398 ;; Defined at:
  3399 ;;		line 15 in file "Communications.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;		None
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;		None
  3404 ;; Return value:  Size  Location     Type
  3405 ;;		None               void
  3406 ;; Registers used:
  3407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3413 ;;      Params:         0       0       0       0       0       0       0
  3414 ;;      Locals:         0       0       0       0       0       0       0
  3415 ;;      Temps:          0       0       0       0       0       0       0
  3416 ;;      Totals:         0       0       0       0       0       0       0
  3417 ;;Total ram usage:        0 bytes
  3418 ;; Hardware stack levels used:    1
  3419 ;; Hardware stack levels required when called:    9
  3420 ;; This function calls:
  3421 ;;		_receiveData
  3422 ;;		_respondTM
  3423 ;; This function is called by:
  3424 ;;		_main
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428                           	psect	text1
  3429  001AD4                     __ptext1:
  3430                           	opt stack 0
  3431  001AD4                     _updateComms:
  3432                           	opt stack 21
  3433                           
  3434                           ;Communications.c: 16: if (receiveData()) {
  3435                           
  3436                           ;incstack = 0
  3437  001AD4  EC70  F000         	call	_receiveData	;wreg free
  3438  001AD8  0900               	iorlw	0
  3439  001ADA  B4D8               	btfsc	status,2,c
  3440  001ADC  0012               	return	
  3441                           
  3442                           ;Communications.c: 18: respondTM();
  3443  001ADE  ECB4  F00B         	call	_respondTM	;wreg free
  3444  001AE2  0012               	return	
  3445  001AE4                     __end_of_updateComms:
  3446                           	opt stack 0
  3447                           tblptru	equ	0xFF8
  3448                           tblptrh	equ	0xFF7
  3449                           tblptrl	equ	0xFF6
  3450                           tablat	equ	0xFF5
  3451                           intcon	equ	0xFF2
  3452                           postinc0	equ	0xFEE
  3453                           wreg	equ	0xFE8
  3454                           postdec1	equ	0xFE5
  3455                           fsr1h	equ	0xFE2
  3456                           fsr1l	equ	0xFE1
  3457                           status	equ	0xFD8
  3458                           
  3459 ;; *************** function _respondTM *****************
  3460 ;; Defined at:
  3461 ;;		line 26 in file "Communications.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;		None
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;		None
  3466 ;; Return value:  Size  Location     Type
  3467 ;;		None               void
  3468 ;; Registers used:
  3469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3475 ;;      Params:         0       0       0       0       0       0       0
  3476 ;;      Locals:         0       0       0       0       0       0       0
  3477 ;;      Temps:          0       0       0       0       0       0       0
  3478 ;;      Totals:         0       0       0       0       0       0       0
  3479 ;;Total ram usage:        0 bytes
  3480 ;; Hardware stack levels used:    1
  3481 ;; Hardware stack levels required when called:    8
  3482 ;; This function calls:
  3483 ;;		_Delay
  3484 ;;		_ToSend
  3485 ;;		_sendData
  3486 ;; This function is called by:
  3487 ;;		_updateComms
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           	psect	text2
  3492  001768                     __ptext2:
  3493                           	opt stack 0
  3494  001768                     _respondTM:
  3495                           	opt stack 21
  3496                           
  3497                           ;Communications.c: 27: LATCbits.LATC5 = 1;
  3498                           
  3499                           ;incstack = 0
  3500  001768  8A8B               	bsf	3979,5,c	;volatile
  3501                           
  3502                           ;Communications.c: 28: ToSend(0, 3);
  3503  00176A  0E00               	movlw	0
  3504  00176C  0101               	movlb	1	; () banked
  3505  00176E  6FF9               	movwf	(ToSend@what+1)& (0+255),b
  3506  001770  0E03               	movlw	3
  3507  001772  6FF8               	movwf	ToSend@what& (0+255),b
  3508  001774  0E00               	movlw	0
  3509  001776  ECBE  F00C         	call	_ToSend
  3510                           
  3511                           ;Communications.c: 30: Delay(9);
  3512  00177A  0E00               	movlw	0
  3513  00177C  6E1C               	movwf	Delay@wait+1,c
  3514  00177E  0E09               	movlw	9
  3515  001780  6E1B               	movwf	Delay@wait,c
  3516  001782  ECCE  F00B         	call	_Delay	;wreg free
  3517                           
  3518                           ;Communications.c: 31: sendData(1);
  3519  001786  0E01               	movlw	1
  3520  001788  EC74  F006         	call	_sendData
  3521                           
  3522                           ;Communications.c: 32: Delay(3);
  3523  00178C  0E00               	movlw	0
  3524  00178E  6E1C               	movwf	Delay@wait+1,c
  3525  001790  0E03               	movlw	3
  3526  001792  6E1B               	movwf	Delay@wait,c
  3527  001794  ECCE  F00B         	call	_Delay	;wreg free
  3528                           
  3529                           ;Communications.c: 33: LATCbits.LATC5 = 0;
  3530  001798  9A8B               	bcf	3979,5,c	;volatile
  3531  00179A  0012               	return		;funcret
  3532  00179C                     __end_of_respondTM:
  3533                           	opt stack 0
  3534                           tblptru	equ	0xFF8
  3535                           tblptrh	equ	0xFF7
  3536                           tblptrl	equ	0xFF6
  3537                           tablat	equ	0xFF5
  3538                           intcon	equ	0xFF2
  3539                           postinc0	equ	0xFEE
  3540                           wreg	equ	0xFE8
  3541                           postdec1	equ	0xFE5
  3542                           fsr1h	equ	0xFE2
  3543                           fsr1l	equ	0xFE1
  3544                           status	equ	0xFD8
  3545                           
  3546 ;; *************** function _sendData *****************
  3547 ;; Defined at:
  3548 ;;		line 53 in file "FastTransfer.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;  whereToSend     1    wreg     unsigned char 
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;  whereToSend     1    5[BANK1 ] unsigned char 
  3553 ;;  i               2    7[BANK1 ] int 
  3554 ;;  CS              1    6[BANK1 ] unsigned char 
  3555 ;; Return value:  Size  Location     Type
  3556 ;;		None               void
  3557 ;; Registers used:
  3558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  3559 ;; Tracked objects:
  3560 ;;		On entry : 0/0
  3561 ;;		On exit  : 0/0
  3562 ;;		Unchanged: 0/0
  3563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3564 ;;      Params:         0       0       0       0       0       0       0
  3565 ;;      Locals:         0       0       4       0       0       0       0
  3566 ;;      Temps:          0       0       1       0       0       0       0
  3567 ;;      Totals:         0       0       5       0       0       0       0
  3568 ;;Total ram usage:        5 bytes
  3569 ;; Hardware stack levels used:    1
  3570 ;; Hardware stack levels required when called:    7
  3571 ;; This function calls:
  3572 ;;		Absolute function
  3573 ;;		_CRC8
  3574 ;;		_FastTransfer_buffer_flush
  3575 ;;		_Send_put
  3576 ;;		_crcBufS_put
  3577 ;; This function is called by:
  3578 ;;		_respondTM
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           	psect	text3
  3583  000CE8                     __ptext3:
  3584                           	opt stack 0
  3585  000CE8                     _sendData:
  3586                           	opt stack 21
  3587                           
  3588                           ;incstack = 0
  3589                           ;sendData@whereToSend stored from wreg
  3590  000CE8  0101               	movlb	1	; () banked
  3591  000CEA  6FFB               	movwf	sendData@whereToSend& (0+255),b
  3592                           
  3593                           ;FastTransfer.c: 56: unsigned char CS = CRC8(sendStructAddress, ring_buffer.count);
  3594  000CEC  C0D5  F01B         	movff	_sendStructAddress,CRC8@data
  3595  000CF0  C0D6  F01C         	movff	_sendStructAddress+1,CRC8@data+1
  3596  000CF4  C2CC  F01D         	movff	_ring_buffer+204,CRC8@len
  3597  000CF8  EC0E  F00B         	call	_CRC8	;wreg free
  3598  000CFC  0101               	movlb	1	; () banked
  3599  000CFE  6FFC               	movwf	sendData@CS& (0+255),b
  3600                           
  3601                           ; BSR set to: 1
  3602                           ;FastTransfer.c: 58: serial_write(0x06);
  3603  000D00  D801               	call	u6168
  3604  000D02  D00B               	goto	l6722
  3605  000D04                     u6168:
  3606  000D04  0005               	push	
  3607  000D06  6EFA               	movwf	pclath,c
  3608  000D08  502A               	movf	_serial_write,w,c
  3609  000D0A  6EFD               	movwf	tosl,c
  3610  000D0C  502B               	movf	_serial_write+1,w,c
  3611  000D0E  6EFE               	movwf	tosh,c
  3612  000D10  50F8               	movf	tblptru,w,c
  3613  000D12  6EFF               	movwf	tosu,c
  3614  000D14  50FA               	movf	pclath,w,c
  3615  000D16  0E06               	movlw	6
  3616  000D18  0012               	return		;indir
  3617  000D1A                     l6722:
  3618                           
  3619                           ;FastTransfer.c: 59: serial_write(0x85);
  3620  000D1A  D801               	call	u6178
  3621  000D1C  D00B               	goto	l6724
  3622  000D1E                     u6178:
  3623  000D1E  0005               	push	
  3624  000D20  6EFA               	movwf	pclath,c
  3625  000D22  502A               	movf	_serial_write,w,c
  3626  000D24  6EFD               	movwf	tosl,c
  3627  000D26  502B               	movf	_serial_write+1,w,c
  3628  000D28  6EFE               	movwf	tosh,c
  3629  000D2A  50F8               	movf	tblptru,w,c
  3630  000D2C  6EFF               	movwf	tosu,c
  3631  000D2E  50FA               	movf	pclath,w,c
  3632  000D30  0E85               	movlw	133
  3633  000D32  0012               	return		;indir
  3634  000D34                     l6724:
  3635                           
  3636                           ;FastTransfer.c: 60: serial_write(whereToSend);
  3637  000D34  D801               	call	u6188
  3638  000D36  D00C               	goto	l6726
  3639  000D38                     u6188:
  3640  000D38  0005               	push	
  3641  000D3A  6EFA               	movwf	pclath,c
  3642  000D3C  502A               	movf	_serial_write,w,c
  3643  000D3E  6EFD               	movwf	tosl,c
  3644  000D40  502B               	movf	_serial_write+1,w,c
  3645  000D42  6EFE               	movwf	tosh,c
  3646  000D44  50F8               	movf	tblptru,w,c
  3647  000D46  6EFF               	movwf	tosu,c
  3648  000D48  50FA               	movf	pclath,w,c
  3649  000D4A  0101               	movlb	1	; () banked
  3650  000D4C  51FB               	movf	sendData@whereToSend& (0+255),w,b
  3651  000D4E  0012               	return		;indir
  3652  000D50                     l6726:
  3653                           
  3654                           ;FastTransfer.c: 61: serial_write(moduleAddress);
  3655  000D50  D801               	call	u6198
  3656  000D52  D00B               	goto	l6728
  3657  000D54                     u6198:
  3658  000D54  0005               	push	
  3659  000D56  6EFA               	movwf	pclath,c
  3660  000D58  502A               	movf	_serial_write,w,c
  3661  000D5A  6EFD               	movwf	tosl,c
  3662  000D5C  502B               	movf	_serial_write+1,w,c
  3663  000D5E  6EFE               	movwf	tosh,c
  3664  000D60  50F8               	movf	tblptru,w,c
  3665  000D62  6EFF               	movwf	tosu,c
  3666  000D64  50FA               	movf	pclath,w,c
  3667  000D66  5032               	movf	_moduleAddress,w,c
  3668  000D68  0012               	return		;indir
  3669  000D6A                     l6728:
  3670                           
  3671                           ;FastTransfer.c: 62: serial_write(ring_buffer.count);
  3672  000D6A  D801               	call	u6208
  3673  000D6C  D00C               	goto	l6730
  3674  000D6E                     u6208:
  3675  000D6E  0005               	push	
  3676  000D70  6EFA               	movwf	pclath,c
  3677  000D72  502A               	movf	_serial_write,w,c
  3678  000D74  6EFD               	movwf	tosl,c
  3679  000D76  502B               	movf	_serial_write+1,w,c
  3680  000D78  6EFE               	movwf	tosh,c
  3681  000D7A  50F8               	movf	tblptru,w,c
  3682  000D7C  6EFF               	movwf	tosu,c
  3683  000D7E  50FA               	movf	pclath,w,c
  3684  000D80  0102               	movlb	2	; () banked
  3685  000D82  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  3686  000D84  0012               	return		;indir
  3687  000D86                     l6730:
  3688                           
  3689                           ;FastTransfer.c: 66: int i;
  3690                           ;FastTransfer.c: 67: for (i = 0; i < ring_buffer.count; i++) {
  3691  000D86  0E00               	movlw	0
  3692  000D88  0101               	movlb	1	; () banked
  3693  000D8A  6FFE               	movwf	(sendData@i+1)& (0+255),b
  3694  000D8C  0E00               	movlw	0
  3695  000D8E  6FFD               	movwf	sendData@i& (0+255),b
  3696  000D90  D01A               	goto	l6736
  3697  000D92                     l6732:
  3698                           
  3699                           ; BSR set to: 1
  3700                           ;FastTransfer.c: 68: serial_write(*(sendStructAddress + i));
  3701  000D92  D801               	call	u6218
  3702  000D94  D015               	goto	l6734
  3703  000D96                     u6218:
  3704  000D96  0005               	push	
  3705  000D98  6EFA               	movwf	pclath,c
  3706  000D9A  502A               	movf	_serial_write,w,c
  3707  000D9C  6EFD               	movwf	tosl,c
  3708  000D9E  502B               	movf	_serial_write+1,w,c
  3709  000DA0  6EFE               	movwf	tosh,c
  3710  000DA2  50F8               	movf	tblptru,w,c
  3711  000DA4  6EFF               	movwf	tosu,c
  3712  000DA6  50FA               	movf	pclath,w,c
  3713  000DA8  0101               	movlb	1	; () banked
  3714  000DAA  51FD               	movf	sendData@i& (0+255),w,b
  3715  000DAC  0100               	movlb	0	; () banked
  3716  000DAE  25D5               	addwf	_sendStructAddress& (0+255),w,b
  3717  000DB0  6ED9               	movwf	fsr2l,c
  3718  000DB2  0101               	movlb	1	; () banked
  3719  000DB4  51FE               	movf	(sendData@i+1)& (0+255),w,b
  3720  000DB6  0100               	movlb	0	; () banked
  3721  000DB8  21D6               	addwfc	(_sendStructAddress+1)& (0+255),w,b
  3722  000DBA  6EDA               	movwf	fsr2h,c
  3723  000DBC  50DF               	movf	indf2,w,c
  3724  000DBE  0012               	return		;indir
  3725  000DC0                     l6734:
  3726  000DC0  0101               	movlb	1	; () banked
  3727  000DC2  4BFD               	infsnz	sendData@i& (0+255),f,b
  3728  000DC4  2BFE               	incf	(sendData@i+1)& (0+255),f,b
  3729  000DC6                     l6736:
  3730                           
  3731                           ; BSR set to: 1
  3732  000DC6  0102               	movlb	2	; () banked
  3733  000DC8  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  3734  000DCA  0101               	movlb	1	; () banked
  3735  000DCC  5DFD               	subwf	sendData@i& (0+255),w,b
  3736  000DCE  0101               	movlb	1	; () banked
  3737  000DD0  51FE               	movf	(sendData@i+1)& (0+255),w,b
  3738  000DD2  0A80               	xorlw	128
  3739  000DD4  0101               	movlb	1	; () banked
  3740  000DD6  6FFA               	movwf	??_sendData& (0+255),b
  3741  000DD8  0102               	movlb	2	; () banked
  3742  000DDA  51CD               	movf	(_ring_buffer+205)& (0+255),w,b
  3743  000DDC  0A80               	xorlw	128
  3744  000DDE  0101               	movlb	1	; () banked
  3745  000DE0  59FA               	subwfb	??_sendData& (0+255),w,b
  3746  000DE2  A0D8               	btfss	status,0,c
  3747  000DE4  D7D6               	goto	l6732
  3748                           
  3749                           ; BSR set to: 1
  3750                           ;FastTransfer.c: 69: }
  3751                           ;FastTransfer.c: 72: serial_write(CS);
  3752                           
  3753                           ; BSR set to: 1
  3754  000DE6  D801               	call	u6238
  3755  000DE8  D00C               	goto	l6740
  3756  000DEA                     u6238:
  3757  000DEA  0005               	push	
  3758  000DEC  6EFA               	movwf	pclath,c
  3759  000DEE  502A               	movf	_serial_write,w,c
  3760  000DF0  6EFD               	movwf	tosl,c
  3761  000DF2  502B               	movf	_serial_write+1,w,c
  3762  000DF4  6EFE               	movwf	tosh,c
  3763  000DF6  50F8               	movf	tblptru,w,c
  3764  000DF8  6EFF               	movwf	tosu,c
  3765  000DFA  50FA               	movf	pclath,w,c
  3766  000DFC  0101               	movlb	1	; () banked
  3767  000DFE  51FC               	movf	sendData@CS& (0+255),w,b
  3768  000E00  0012               	return		;indir
  3769  000E02                     l6740:
  3770                           
  3771                           ;FastTransfer.c: 75: crcBufS_put(&crc_buffer, whereToSend, CS, 0);
  3772  000E02  0E86               	movlw	low _crc_buffer
  3773  000E04  6E1B               	movwf	crcBufS_put@_this,c
  3774  000E06  0E01               	movlw	high _crc_buffer
  3775  000E08  6E1C               	movwf	crcBufS_put@_this+1,c
  3776  000E0A  C1FB  F01D         	movff	sendData@whereToSend,crcBufS_put@address
  3777  000E0E  C1FC  F01E         	movff	sendData@CS,crcBufS_put@oldCRC
  3778  000E12  0E00               	movlw	0
  3779  000E14  6E1F               	movwf	crcBufS_put@status,c
  3780  000E16  ECAE  F008         	call	_crcBufS_put
  3781                           
  3782                           ;FastTransfer.c: 78: FastTransfer_buffer_flush(&ring_buffer, 1);
  3783  000E1A  0E00               	movlw	low _ring_buffer
  3784  000E1C  0101               	movlb	1	; () banked
  3785  000E1E  6FF6               	movwf	FastTransfer_buffer_flush@_this& (0+255),b
  3786  000E20  0E02               	movlw	high _ring_buffer
  3787  000E22  0101               	movlb	1	; () banked
  3788  000E24  6FF7               	movwf	(FastTransfer_buffer_flush@_this+1)& (0+255),b
  3789  000E26  0E00               	movlw	0
  3790  000E28  0101               	movlb	1	; () banked
  3791  000E2A  6FF9               	movwf	(FastTransfer_buffer_flush@clearBuffer+1)& (0+255),b
  3792  000E2C  0E01               	movlw	1
  3793  000E2E  6FF8               	movwf	FastTransfer_buffer_flush@clearBuffer& (0+255),b
  3794  000E30  EC7C  F00A         	call	_FastTransfer_buffer_flush	;wreg free
  3795  000E34  0012               	return		;funcret
  3796  000E36                     __end_of_sendData:
  3797                           	opt stack 0
  3798                           tosu	equ	0xFFF
  3799                           tosh	equ	0xFFE
  3800                           tosl	equ	0xFFD
  3801                           pclath	equ	0xFFA
  3802                           tblptru	equ	0xFF8
  3803                           tblptrh	equ	0xFF7
  3804                           tblptrl	equ	0xFF6
  3805                           tablat	equ	0xFF5
  3806                           intcon	equ	0xFF2
  3807                           postinc0	equ	0xFEE
  3808                           wreg	equ	0xFE8
  3809                           postdec1	equ	0xFE5
  3810                           fsr1h	equ	0xFE2
  3811                           fsr1l	equ	0xFE1
  3812                           indf2	equ	0xFDF
  3813                           fsr2h	equ	0xFDA
  3814                           fsr2l	equ	0xFD9
  3815                           status	equ	0xFD8
  3816                           
  3817 ;; *************** function _crcBufS_put *****************
  3818 ;; Defined at:
  3819 ;;		line 321 in file "FastTransfer.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  3822 ;;		 -> crc_buffer(17), 
  3823 ;;  address         1   28[COMRAM] unsigned char 
  3824 ;;  oldCRC          1   29[COMRAM] unsigned char 
  3825 ;;  status          1   30[COMRAM] unsigned char 
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;		None
  3828 ;; Return value:  Size  Location     Type
  3829 ;;		None               void
  3830 ;; Registers used:
  3831 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3837 ;;      Params:         5       0       0       0       0       0       0
  3838 ;;      Locals:         0       0       0       0       0       0       0
  3839 ;;      Temps:          2       0       0       0       0       0       0
  3840 ;;      Totals:         7       0       0       0       0       0       0
  3841 ;;Total ram usage:        7 bytes
  3842 ;; Hardware stack levels used:    1
  3843 ;; Hardware stack levels required when called:    4
  3844 ;; This function calls:
  3845 ;;		Nothing
  3846 ;; This function is called by:
  3847 ;;		_sendData
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           	psect	text4
  3852  00115C                     __ptext4:
  3853                           	opt stack 0
  3854  00115C                     _crcBufS_put:
  3855                           	opt stack 23
  3856                           
  3857                           ;FastTransfer.c: 322: _this->buf[_this->head] = address;
  3858                           
  3859                           ;incstack = 0
  3860  00115C  EE20 F00F          	lfsr	2,15
  3861  001160  501B               	movf	crcBufS_put@_this,w,c
  3862  001162  26D9               	addwf	fsr2l,f,c
  3863  001164  501C               	movf	crcBufS_put@_this+1,w,c
  3864  001166  22DA               	addwfc	fsr2h,f,c
  3865  001168  CFDE F020          	movff	postinc2,??_crcBufS_put
  3866  00116C  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  3867  001170  5020               	movf	??_crcBufS_put,w,c
  3868  001172  241B               	addwf	crcBufS_put@_this,w,c
  3869  001174  6ED9               	movwf	fsr2l,c
  3870  001176  5021               	movf	??_crcBufS_put+1,w,c
  3871  001178  201C               	addwfc	crcBufS_put@_this+1,w,c
  3872  00117A  6EDA               	movwf	fsr2h,c
  3873  00117C  C01D  FFDF         	movff	crcBufS_put@address,indf2
  3874                           
  3875                           ;FastTransfer.c: 323: _this->head++;
  3876  001180  EE20 F00F          	lfsr	2,15
  3877  001184  501B               	movf	crcBufS_put@_this,w,c
  3878  001186  26D9               	addwf	fsr2l,f,c
  3879  001188  501C               	movf	crcBufS_put@_this+1,w,c
  3880  00118A  22DA               	addwfc	fsr2h,f,c
  3881  00118C  2ADE               	incf	postinc2,f,c
  3882  00118E  0E00               	movlw	0
  3883  001190  22DD               	addwfc	postdec2,f,c
  3884                           
  3885                           ;FastTransfer.c: 324: _this->buf[_this->head] = oldCRC;
  3886  001192  EE20 F00F          	lfsr	2,15
  3887  001196  501B               	movf	crcBufS_put@_this,w,c
  3888  001198  26D9               	addwf	fsr2l,f,c
  3889  00119A  501C               	movf	crcBufS_put@_this+1,w,c
  3890  00119C  22DA               	addwfc	fsr2h,f,c
  3891  00119E  CFDE F020          	movff	postinc2,??_crcBufS_put
  3892  0011A2  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  3893  0011A6  5020               	movf	??_crcBufS_put,w,c
  3894  0011A8  241B               	addwf	crcBufS_put@_this,w,c
  3895  0011AA  6ED9               	movwf	fsr2l,c
  3896  0011AC  5021               	movf	??_crcBufS_put+1,w,c
  3897  0011AE  201C               	addwfc	crcBufS_put@_this+1,w,c
  3898  0011B0  6EDA               	movwf	fsr2h,c
  3899  0011B2  C01E  FFDF         	movff	crcBufS_put@oldCRC,indf2
  3900                           
  3901                           ;FastTransfer.c: 325: _this->head++;
  3902  0011B6  EE20 F00F          	lfsr	2,15
  3903  0011BA  501B               	movf	crcBufS_put@_this,w,c
  3904  0011BC  26D9               	addwf	fsr2l,f,c
  3905  0011BE  501C               	movf	crcBufS_put@_this+1,w,c
  3906  0011C0  22DA               	addwfc	fsr2h,f,c
  3907  0011C2  2ADE               	incf	postinc2,f,c
  3908  0011C4  0E00               	movlw	0
  3909  0011C6  22DD               	addwfc	postdec2,f,c
  3910                           
  3911                           ;FastTransfer.c: 326: _this->buf[_this->head] = status;
  3912  0011C8  EE20 F00F          	lfsr	2,15
  3913  0011CC  501B               	movf	crcBufS_put@_this,w,c
  3914  0011CE  26D9               	addwf	fsr2l,f,c
  3915  0011D0  501C               	movf	crcBufS_put@_this+1,w,c
  3916  0011D2  22DA               	addwfc	fsr2h,f,c
  3917  0011D4  CFDE F020          	movff	postinc2,??_crcBufS_put
  3918  0011D8  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  3919  0011DC  5020               	movf	??_crcBufS_put,w,c
  3920  0011DE  241B               	addwf	crcBufS_put@_this,w,c
  3921  0011E0  6ED9               	movwf	fsr2l,c
  3922  0011E2  5021               	movf	??_crcBufS_put+1,w,c
  3923  0011E4  201C               	addwfc	crcBufS_put@_this+1,w,c
  3924  0011E6  6EDA               	movwf	fsr2h,c
  3925  0011E8  C01F  FFDF         	movff	crcBufS_put@status,indf2
  3926                           
  3927                           ;FastTransfer.c: 327: _this->head++;
  3928  0011EC  EE20 F00F          	lfsr	2,15
  3929  0011F0  501B               	movf	crcBufS_put@_this,w,c
  3930  0011F2  26D9               	addwf	fsr2l,f,c
  3931  0011F4  501C               	movf	crcBufS_put@_this+1,w,c
  3932  0011F6  22DA               	addwfc	fsr2h,f,c
  3933  0011F8  2ADE               	incf	postinc2,f,c
  3934  0011FA  0E00               	movlw	0
  3935  0011FC  22DD               	addwfc	postdec2,f,c
  3936                           
  3937                           ;FastTransfer.c: 328: if (_this->head >= (5 * 3)) {
  3938  0011FE  EE20 F00F          	lfsr	2,15
  3939  001202  501B               	movf	crcBufS_put@_this,w,c
  3940  001204  26D9               	addwf	fsr2l,f,c
  3941  001206  501C               	movf	crcBufS_put@_this+1,w,c
  3942  001208  22DA               	addwfc	fsr2h,f,c
  3943  00120A  0E01               	movlw	1
  3944  00120C  BEDB               	btfsc	plusw2,7,c
  3945  00120E  0012               	return	
  3946  001210  0E01               	movlw	1
  3947  001212  50DB               	movf	plusw2,w,c
  3948  001214  E104               	bnz	u6080
  3949  001216  0E0F               	movlw	15
  3950  001218  5CDE               	subwf	postinc2,w,c
  3951  00121A  A0D8               	btfss	status,0,c
  3952  00121C  0012               	return	
  3953  00121E                     u6080:
  3954                           
  3955                           ;FastTransfer.c: 329: _this->head = 0;
  3956  00121E  EE20 F00F          	lfsr	2,15
  3957  001222  501B               	movf	crcBufS_put@_this,w,c
  3958  001224  26D9               	addwf	fsr2l,f,c
  3959  001226  501C               	movf	crcBufS_put@_this+1,w,c
  3960  001228  22DA               	addwfc	fsr2h,f,c
  3961  00122A  0E00               	movlw	0
  3962  00122C  6EDE               	movwf	postinc2,c
  3963  00122E  0E00               	movlw	0
  3964  001230  6EDD               	movwf	postdec2,c
  3965  001232  0012               	return	
  3966  001234                     __end_of_crcBufS_put:
  3967                           	opt stack 0
  3968                           tosu	equ	0xFFF
  3969                           tosh	equ	0xFFE
  3970                           tosl	equ	0xFFD
  3971                           pclath	equ	0xFFA
  3972                           tblptru	equ	0xFF8
  3973                           tblptrh	equ	0xFF7
  3974                           tblptrl	equ	0xFF6
  3975                           tablat	equ	0xFF5
  3976                           intcon	equ	0xFF2
  3977                           postinc0	equ	0xFEE
  3978                           wreg	equ	0xFE8
  3979                           postdec1	equ	0xFE5
  3980                           fsr1h	equ	0xFE2
  3981                           fsr1l	equ	0xFE1
  3982                           indf2	equ	0xFDF
  3983                           postinc2	equ	0xFDE
  3984                           postdec2	equ	0xFDD
  3985                           plusw2	equ	0xFDB
  3986                           fsr2h	equ	0xFDA
  3987                           fsr2l	equ	0xFD9
  3988                           status	equ	0xFD8
  3989                           
  3990 ;; *************** function _FastTransfer_buffer_flush *****************
  3991 ;; Defined at:
  3992 ;;		line 261 in file "FastTransfer.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;  _this           2    0[BANK1 ] PTR struct ringBufS
  3995 ;;		 -> ring_buffer(206), 
  3996 ;;  clearBuffer     2    2[BANK1 ] const int 
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;		None
  3999 ;; Return value:  Size  Location     Type
  4000 ;;		None               void
  4001 ;; Registers used:
  4002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4008 ;;      Params:         0       0       4       0       0       0       0
  4009 ;;      Locals:         0       0       0       0       0       0       0
  4010 ;;      Temps:          0       0       0       0       0       0       0
  4011 ;;      Totals:         0       0       4       0       0       0       0
  4012 ;;Total ram usage:        4 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; Hardware stack levels required when called:    5
  4015 ;; This function calls:
  4016 ;;		_memset
  4017 ;; This function is called by:
  4018 ;;		_sendData
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022                           	psect	text5
  4023  0014F8                     __ptext5:
  4024                           	opt stack 0
  4025  0014F8                     _FastTransfer_buffer_flush:
  4026                           	opt stack 22
  4027                           
  4028                           ;FastTransfer.c: 262: _this->count = 0;
  4029                           
  4030                           ;incstack = 0
  4031  0014F8  0101               	movlb	1	; () banked
  4032  0014FA  EE20 F0CC          	lfsr	2,204
  4033  0014FE  51F6               	movf	FastTransfer_buffer_flush@_this& (0+255),w,b
  4034  001500  26D9               	addwf	fsr2l,f,c
  4035  001502  51F7               	movf	(FastTransfer_buffer_flush@_this+1)& (0+255),w,b
  4036  001504  22DA               	addwfc	fsr2h,f,c
  4037  001506  0E00               	movlw	0
  4038  001508  6EDE               	movwf	postinc2,c
  4039  00150A  0E00               	movlw	0
  4040  00150C  6EDD               	movwf	postdec2,c
  4041                           
  4042                           ;FastTransfer.c: 263: _this->head = 0;
  4043  00150E  0101               	movlb	1	; () banked
  4044  001510  EE20 F0C8          	lfsr	2,200
  4045  001514  51F6               	movf	FastTransfer_buffer_flush@_this& (0+255),w,b
  4046  001516  26D9               	addwf	fsr2l,f,c
  4047  001518  51F7               	movf	(FastTransfer_buffer_flush@_this+1)& (0+255),w,b
  4048  00151A  22DA               	addwfc	fsr2h,f,c
  4049  00151C  0E00               	movlw	0
  4050  00151E  6EDE               	movwf	postinc2,c
  4051  001520  0E00               	movlw	0
  4052  001522  6EDD               	movwf	postdec2,c
  4053                           
  4054                           ;FastTransfer.c: 264: _this->tail = 0;
  4055  001524  0101               	movlb	1	; () banked
  4056  001526  EE20 F0CA          	lfsr	2,202
  4057  00152A  51F6               	movf	FastTransfer_buffer_flush@_this& (0+255),w,b
  4058  00152C  26D9               	addwf	fsr2l,f,c
  4059  00152E  51F7               	movf	(FastTransfer_buffer_flush@_this+1)& (0+255),w,b
  4060  001530  22DA               	addwfc	fsr2h,f,c
  4061  001532  0E00               	movlw	0
  4062  001534  6EDE               	movwf	postinc2,c
  4063  001536  0E00               	movlw	0
  4064  001538  6EDD               	movwf	postdec2,c
  4065                           
  4066                           ; BSR set to: 1
  4067                           ;FastTransfer.c: 265: if (clearBuffer) {
  4068  00153A  0101               	movlb	1	; () banked
  4069  00153C  51F8               	movf	FastTransfer_buffer_flush@clearBuffer& (0+255),w,b
  4070  00153E  0101               	movlb	1	; () banked
  4071  001540  11F9               	iorwf	(FastTransfer_buffer_flush@clearBuffer+1)& (0+255),w,b
  4072  001542  B4D8               	btfsc	status,2,c
  4073  001544  0012               	return	
  4074                           
  4075                           ; BSR set to: 1
  4076                           ;FastTransfer.c: 266: memset(_this->buf, 0, sizeof (_this->buf));
  4077  001546  C1F6  F01B         	movff	FastTransfer_buffer_flush@_this,memset@p1
  4078  00154A  C1F7  F01C         	movff	FastTransfer_buffer_flush@_this+1,memset@p1+1
  4079  00154E  0E00               	movlw	0
  4080  001550  6E1E               	movwf	memset@c+1,c
  4081  001552  0E00               	movlw	0
  4082  001554  6E1D               	movwf	memset@c,c
  4083  001556  0E00               	movlw	0
  4084  001558  6E20               	movwf	memset@n+1,c
  4085  00155A  0EC8               	movlw	200
  4086  00155C  6E1F               	movwf	memset@n,c
  4087  00155E  EC34  F00C         	call	_memset	;wreg free
  4088  001562  0012               	return	
  4089  001564                     __end_of_FastTransfer_buffer_flush:
  4090                           	opt stack 0
  4091                           tosu	equ	0xFFF
  4092                           tosh	equ	0xFFE
  4093                           tosl	equ	0xFFD
  4094                           pclath	equ	0xFFA
  4095                           tblptru	equ	0xFF8
  4096                           tblptrh	equ	0xFF7
  4097                           tblptrl	equ	0xFF6
  4098                           tablat	equ	0xFF5
  4099                           intcon	equ	0xFF2
  4100                           postinc0	equ	0xFEE
  4101                           wreg	equ	0xFE8
  4102                           postdec1	equ	0xFE5
  4103                           fsr1h	equ	0xFE2
  4104                           fsr1l	equ	0xFE1
  4105                           indf2	equ	0xFDF
  4106                           postinc2	equ	0xFDE
  4107                           postdec2	equ	0xFDD
  4108                           plusw2	equ	0xFDB
  4109                           fsr2h	equ	0xFDA
  4110                           fsr2l	equ	0xFD9
  4111                           status	equ	0xFD8
  4112                           
  4113 ;; *************** function _ToSend *****************
  4114 ;; Defined at:
  4115 ;;		line 216 in file "FastTransfer.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;  where           1    wreg     unsigned char 
  4118 ;;  what            2    2[BANK1 ] unsigned int 
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;  where           1    4[BANK1 ] unsigned char 
  4121 ;; Return value:  Size  Location     Type
  4122 ;;		None               void
  4123 ;; Registers used:
  4124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4130 ;;      Params:         0       0       2       0       0       0       0
  4131 ;;      Locals:         0       0       1       0       0       0       0
  4132 ;;      Temps:          0       0       0       0       0       0       0
  4133 ;;      Totals:         0       0       3       0       0       0       0
  4134 ;;Total ram usage:        3 bytes
  4135 ;; Hardware stack levels used:    1
  4136 ;; Hardware stack levels required when called:    6
  4137 ;; This function calls:
  4138 ;;		_FastTransfer_buffer_put
  4139 ;; This function is called by:
  4140 ;;		_respondTM
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144                           	psect	text6
  4145  00197C                     __ptext6:
  4146                           	opt stack 0
  4147  00197C                     _ToSend:
  4148                           	opt stack 22
  4149                           
  4150                           ;incstack = 0
  4151                           ;ToSend@where stored from wreg
  4152  00197C  0101               	movlb	1	; () banked
  4153  00197E  6FFA               	movwf	ToSend@where& (0+255),b
  4154                           
  4155                           ;FastTransfer.c: 217: FastTransfer_buffer_put(&ring_buffer, where, what);
  4156  001980  0E00               	movlw	low _ring_buffer
  4157  001982  6E21               	movwf	FastTransfer_buffer_put@_this,c
  4158  001984  0E02               	movlw	high _ring_buffer
  4159  001986  6E22               	movwf	FastTransfer_buffer_put@_this+1,c
  4160  001988  C1FA  F023         	movff	ToSend@where,FastTransfer_buffer_put@towhere
  4161  00198C  C1F8  F024         	movff	ToSend@what,FastTransfer_buffer_put@towhat
  4162  001990  C1F9  F025         	movff	ToSend@what+1,FastTransfer_buffer_put@towhat+1
  4163  001994  EC0B  F005         	call	_FastTransfer_buffer_put	;wreg free
  4164  001998  0012               	return		;funcret
  4165  00199A                     __end_of_ToSend:
  4166                           	opt stack 0
  4167                           tosu	equ	0xFFF
  4168                           tosh	equ	0xFFE
  4169                           tosl	equ	0xFFD
  4170                           pclath	equ	0xFFA
  4171                           tblptru	equ	0xFF8
  4172                           tblptrh	equ	0xFF7
  4173                           tblptrl	equ	0xFF6
  4174                           tablat	equ	0xFF5
  4175                           intcon	equ	0xFF2
  4176                           postinc0	equ	0xFEE
  4177                           wreg	equ	0xFE8
  4178                           postdec1	equ	0xFE5
  4179                           fsr1h	equ	0xFE2
  4180                           fsr1l	equ	0xFE1
  4181                           indf2	equ	0xFDF
  4182                           postinc2	equ	0xFDE
  4183                           postdec2	equ	0xFDD
  4184                           plusw2	equ	0xFDB
  4185                           fsr2h	equ	0xFDA
  4186                           fsr2l	equ	0xFD9
  4187                           status	equ	0xFD8
  4188                           
  4189 ;; *************** function _FastTransfer_buffer_put *****************
  4190 ;; Defined at:
  4191 ;;		line 223 in file "FastTransfer.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;  _this           2   32[COMRAM] PTR struct ringBufS
  4194 ;;		 -> ring_buffer(206), 
  4195 ;;  towhere         1   34[COMRAM] unsigned char 
  4196 ;;  towhat          2   35[COMRAM] unsigned int 
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;		None
  4199 ;; Return value:  Size  Location     Type
  4200 ;;		None               void
  4201 ;; Registers used:
  4202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4208 ;;      Params:         5       0       0       0       0       0       0
  4209 ;;      Locals:         0       0       0       0       0       0       0
  4210 ;;      Temps:          0       0       2       0       0       0       0
  4211 ;;      Totals:         5       0       2       0       0       0       0
  4212 ;;Total ram usage:        7 bytes
  4213 ;; Hardware stack levels used:    1
  4214 ;; Hardware stack levels required when called:    5
  4215 ;; This function calls:
  4216 ;;		_FastTransfer_buffer_modulo_inc
  4217 ;; This function is called by:
  4218 ;;		_ToSend
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222                           	psect	text7
  4223  000A16                     __ptext7:
  4224                           	opt stack 0
  4225  000A16                     _FastTransfer_buffer_put:
  4226                           	opt stack 22
  4227                           
  4228                           ;FastTransfer.c: 225: group.integer = towhat;
  4229                           
  4230                           ;incstack = 0
  4231  000A16  C024  F0CD         	movff	FastTransfer_buffer_put@towhat,_group
  4232  000A1A  C025  F0CE         	movff	FastTransfer_buffer_put@towhat+1,_group+1
  4233                           
  4234                           ;FastTransfer.c: 227: if (_this->count < (200 - 3)) {
  4235  000A1E  EE20 F0CC          	lfsr	2,204
  4236  000A22  5021               	movf	FastTransfer_buffer_put@_this,w,c
  4237  000A24  26D9               	addwf	fsr2l,f,c
  4238  000A26  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  4239  000A28  22DA               	addwfc	fsr2h,f,c
  4240  000A2A  0E01               	movlw	1
  4241  000A2C  BEDB               	btfsc	plusw2,7,c
  4242  000A2E  D007               	goto	l6658
  4243  000A30  0E01               	movlw	1
  4244  000A32  50DB               	movf	plusw2,w,c
  4245  000A34  E103               	bnz	u6101
  4246  000A36  0EC5               	movlw	197
  4247  000A38  5CDE               	subwf	postinc2,w,c
  4248  000A3A  B0D8               	btfsc	status,0,c
  4249  000A3C                     u6101:
  4250  000A3C  0012               	return	
  4251  000A3E                     l6658:
  4252                           
  4253                           ;FastTransfer.c: 228: _this->buf[_this->head] = towhere;
  4254  000A3E  EE20 F0C8          	lfsr	2,200
  4255  000A42  5021               	movf	FastTransfer_buffer_put@_this,w,c
  4256  000A44  26D9               	addwf	fsr2l,f,c
  4257  000A46  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  4258  000A48  22DA               	addwfc	fsr2h,f,c
  4259  000A4A  CFDE F1F6          	movff	postinc2,??_FastTransfer_buffer_put
  4260  000A4E  CFDD F1F7          	movff	postdec2,??_FastTransfer_buffer_put+1
  4261  000A52  0101               	movlb	1	; () banked
  4262  000A54  51F6               	movf	??_FastTransfer_buffer_put& (0+255),w,b
  4263  000A56  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  4264  000A58  6ED9               	movwf	fsr2l,c
  4265  000A5A  0101               	movlb	1	; () banked
  4266  000A5C  51F7               	movf	(??_FastTransfer_buffer_put+1)& (0+255),w,b
  4267  000A5E  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  4268  000A60  6EDA               	movwf	fsr2h,c
  4269  000A62  C023  FFDF         	movff	FastTransfer_buffer_put@towhere,indf2
  4270                           
  4271                           ; BSR set to: 1
  4272                           ;FastTransfer.c: 229: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  4273  000A66  EE20 F0C8          	lfsr	2,200
  4274  000A6A  5021               	movf	FastTransfer_buffer_put@_this,w,c
  4275  000A6C  26D9               	addwf	fsr2l,f,c
  4276  000A6E  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  4277  000A70  22DA               	addwfc	fsr2h,f,c
  4278  000A72  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  4279  000A76  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  4280  000A7A  0E00               	movlw	0
  4281  000A7C  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  4282  000A7E  0EC8               	movlw	200
  4283  000A80  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  4284  000A82  EC4A  F00C         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  4285  000A86  EE20 F0C8          	lfsr	2,200
  4286  000A8A  5021               	movf	FastTransfer_buffer_put@_this,w,c
  4287  000A8C  26D9               	addwf	fsr2l,f,c
  4288  000A8E  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  4289  000A90  22DA               	addwfc	fsr2h,f,c
  4290  000A92  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  4291  000A96  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  4292                           
  4293                           ;FastTransfer.c: 230: ++_this->count;
  4294  000A9A  EE20 F0CC          	lfsr	2,204
  4295  000A9E  5021               	movf	FastTransfer_buffer_put@_this,w,c
  4296  000AA0  26D9               	addwf	fsr2l,f,c
  4297  000AA2  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  4298  000AA4  22DA               	addwfc	fsr2h,f,c
  4299  000AA6  2ADE               	incf	postinc2,f,c
  4300  000AA8  0E00               	movlw	0
  4301  000AAA  22DD               	addwfc	postdec2,f,c
  4302                           
  4303                           ;FastTransfer.c: 231: _this->buf[_this->head] = group.parts[0];
  4304  000AAC  EE20 F0C8          	lfsr	2,200
  4305  000AB0  5021               	movf	FastTransfer_buffer_put@_this,w,c
  4306  000AB2  26D9               	addwf	fsr2l,f,c
  4307  000AB4  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  4308  000AB6  22DA               	addwfc	fsr2h,f,c
  4309  000AB8  CFDE F1F6          	movff	postinc2,??_FastTransfer_buffer_put
  4310  000ABC  CFDD F1F7          	movff	postdec2,??_FastTransfer_buffer_put+1
  4311  000AC0  0101               	movlb	1	; () banked
  4312  000AC2  51F6               	movf	??_FastTransfer_buffer_put& (0+255),w,b
  4313  000AC4  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  4314  000AC6  6ED9               	movwf	fsr2l,c
  4315  000AC8  0101               	movlb	1	; () banked
  4316  000ACA  51F7               	movf	(??_FastTransfer_buffer_put+1)& (0+255),w,b
  4317  000ACC  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  4318  000ACE  6EDA               	movwf	fsr2h,c
  4319  000AD0  C0CD  FFDF         	movff	_group,indf2
  4320                           
  4321                           ; BSR set to: 1
  4322                           ;FastTransfer.c: 232: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  4323  000AD4  EE20 F0C8          	lfsr	2,200
  4324  000AD8  5021               	movf	FastTransfer_buffer_put@_this,w,c
  4325  000ADA  26D9               	addwf	fsr2l,f,c
  4326  000ADC  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  4327  000ADE  22DA               	addwfc	fsr2h,f,c
  4328  000AE0  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  4329  000AE4  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  4330  000AE8  0E00               	movlw	0
  4331  000AEA  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  4332  000AEC  0EC8               	movlw	200
  4333  000AEE  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  4334  000AF0  EC4A  F00C         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  4335  000AF4  EE20 F0C8          	lfsr	2,200
  4336  000AF8  5021               	movf	FastTransfer_buffer_put@_this,w,c
  4337  000AFA  26D9               	addwf	fsr2l,f,c
  4338  000AFC  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  4339  000AFE  22DA               	addwfc	fsr2h,f,c
  4340  000B00  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  4341  000B04  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  4342                           
  4343                           ;FastTransfer.c: 233: ++_this->count;
  4344  000B08  EE20 F0CC          	lfsr	2,204
  4345  000B0C  5021               	movf	FastTransfer_buffer_put@_this,w,c
  4346  000B0E  26D9               	addwf	fsr2l,f,c
  4347  000B10  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  4348  000B12  22DA               	addwfc	fsr2h,f,c
  4349  000B14  2ADE               	incf	postinc2,f,c
  4350  000B16  0E00               	movlw	0
  4351  000B18  22DD               	addwfc	postdec2,f,c
  4352                           
  4353                           ;FastTransfer.c: 234: _this->buf[_this->head] = group.parts[1];
  4354  000B1A  EE20 F0C8          	lfsr	2,200
  4355  000B1E  5021               	movf	FastTransfer_buffer_put@_this,w,c
  4356  000B20  26D9               	addwf	fsr2l,f,c
  4357  000B22  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  4358  000B24  22DA               	addwfc	fsr2h,f,c
  4359  000B26  CFDE F1F6          	movff	postinc2,??_FastTransfer_buffer_put
  4360  000B2A  CFDD F1F7          	movff	postdec2,??_FastTransfer_buffer_put+1
  4361  000B2E  0101               	movlb	1	; () banked
  4362  000B30  51F6               	movf	??_FastTransfer_buffer_put& (0+255),w,b
  4363  000B32  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  4364  000B34  6ED9               	movwf	fsr2l,c
  4365  000B36  0101               	movlb	1	; () banked
  4366  000B38  51F7               	movf	(??_FastTransfer_buffer_put+1)& (0+255),w,b
  4367  000B3A  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  4368  000B3C  6EDA               	movwf	fsr2h,c
  4369  000B3E  C0CE  FFDF         	movff	_group+1,indf2
  4370                           
  4371                           ; BSR set to: 1
  4372                           ;FastTransfer.c: 235: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  4373  000B42  EE20 F0C8          	lfsr	2,200
  4374  000B46  5021               	movf	FastTransfer_buffer_put@_this,w,c
  4375  000B48  26D9               	addwf	fsr2l,f,c
  4376  000B4A  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  4377  000B4C  22DA               	addwfc	fsr2h,f,c
  4378  000B4E  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  4379  000B52  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  4380  000B56  0E00               	movlw	0
  4381  000B58  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  4382  000B5A  0EC8               	movlw	200
  4383  000B5C  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  4384  000B5E  EC4A  F00C         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  4385  000B62  EE20 F0C8          	lfsr	2,200
  4386  000B66  5021               	movf	FastTransfer_buffer_put@_this,w,c
  4387  000B68  26D9               	addwf	fsr2l,f,c
  4388  000B6A  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  4389  000B6C  22DA               	addwfc	fsr2h,f,c
  4390  000B6E  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  4391  000B72  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  4392                           
  4393                           ;FastTransfer.c: 236: ++_this->count;
  4394  000B76  EE20 F0CC          	lfsr	2,204
  4395  000B7A  5021               	movf	FastTransfer_buffer_put@_this,w,c
  4396  000B7C  26D9               	addwf	fsr2l,f,c
  4397  000B7E  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  4398  000B80  22DA               	addwfc	fsr2h,f,c
  4399  000B82  2ADE               	incf	postinc2,f,c
  4400  000B84  0E00               	movlw	0
  4401  000B86  22DD               	addwfc	postdec2,f,c
  4402  000B88  0012               	return	
  4403  000B8A                     __end_of_FastTransfer_buffer_put:
  4404                           	opt stack 0
  4405                           tosu	equ	0xFFF
  4406                           tosh	equ	0xFFE
  4407                           tosl	equ	0xFFD
  4408                           pclath	equ	0xFFA
  4409                           tblptru	equ	0xFF8
  4410                           tblptrh	equ	0xFF7
  4411                           tblptrl	equ	0xFF6
  4412                           tablat	equ	0xFF5
  4413                           intcon	equ	0xFF2
  4414                           postinc0	equ	0xFEE
  4415                           wreg	equ	0xFE8
  4416                           postdec1	equ	0xFE5
  4417                           fsr1h	equ	0xFE2
  4418                           fsr1l	equ	0xFE1
  4419                           indf2	equ	0xFDF
  4420                           postinc2	equ	0xFDE
  4421                           postdec2	equ	0xFDD
  4422                           plusw2	equ	0xFDB
  4423                           fsr2h	equ	0xFDA
  4424                           fsr2l	equ	0xFD9
  4425                           status	equ	0xFD8
  4426                           
  4427 ;; *************** function _FastTransfer_buffer_modulo_inc *****************
  4428 ;; Defined at:
  4429 ;;		line 273 in file "FastTransfer.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;  value           2   26[COMRAM] const unsigned int 
  4432 ;;  modulus         2   28[COMRAM] const unsigned int 
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;  my_value        2   30[COMRAM] unsigned int 
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  2   26[COMRAM] unsigned int 
  4437 ;; Registers used:
  4438 ;;		wreg, status,2, status,0
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4444 ;;      Params:         4       0       0       0       0       0       0
  4445 ;;      Locals:         2       0       0       0       0       0       0
  4446 ;;      Temps:          0       0       0       0       0       0       0
  4447 ;;      Totals:         6       0       0       0       0       0       0
  4448 ;;Total ram usage:        6 bytes
  4449 ;; Hardware stack levels used:    1
  4450 ;; Hardware stack levels required when called:    4
  4451 ;; This function calls:
  4452 ;;		Nothing
  4453 ;; This function is called by:
  4454 ;;		_FastTransfer_buffer_put
  4455 ;;		_FastTransfer_buffer_get
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459                           	psect	text8
  4460  001894                     __ptext8:
  4461                           	opt stack 0
  4462  001894                     _FastTransfer_buffer_modulo_inc:
  4463                           	opt stack 22
  4464                           
  4465                           ;FastTransfer.c: 274: unsigned int my_value = value + 1;
  4466                           
  4467                           ;incstack = 0
  4468  001894  0E01               	movlw	1
  4469  001896  241B               	addwf	FastTransfer_buffer_modulo_inc@value,w,c
  4470  001898  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  4471  00189A  0E00               	movlw	0
  4472  00189C  201C               	addwfc	FastTransfer_buffer_modulo_inc@value+1,w,c
  4473  00189E  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  4474                           
  4475                           ;FastTransfer.c: 275: if (my_value >= modulus) {
  4476  0018A0  501D               	movf	FastTransfer_buffer_modulo_inc@modulus,w,c
  4477  0018A2  5C1F               	subwf	FastTransfer_buffer_modulo_inc@my_value,w,c
  4478  0018A4  501E               	movf	FastTransfer_buffer_modulo_inc@modulus+1,w,c
  4479  0018A6  5820               	subwfb	FastTransfer_buffer_modulo_inc@my_value+1,w,c
  4480  0018A8  A0D8               	btfss	status,0,c
  4481  0018AA  D004               	goto	l6594
  4482                           
  4483                           ;FastTransfer.c: 276: my_value = 0;
  4484  0018AC  0E00               	movlw	0
  4485  0018AE  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  4486  0018B0  0E00               	movlw	0
  4487  0018B2  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  4488  0018B4                     l6594:
  4489                           
  4490                           ;FastTransfer.c: 277: }
  4491                           ;FastTransfer.c: 278: return (my_value);
  4492  0018B4  C01F  F01B         	movff	FastTransfer_buffer_modulo_inc@my_value,?_FastTransfer_buffer_modulo_inc
  4493  0018B8  C020  F01C         	movff	FastTransfer_buffer_modulo_inc@my_value+1,?_FastTransfer_buffer_modulo_inc+1
  4494  0018BC  0012               	return	
  4495  0018BE                     __end_of_FastTransfer_buffer_modulo_inc:
  4496                           	opt stack 0
  4497                           tosu	equ	0xFFF
  4498                           tosh	equ	0xFFE
  4499                           tosl	equ	0xFFD
  4500                           pclath	equ	0xFFA
  4501                           tblptru	equ	0xFF8
  4502                           tblptrh	equ	0xFF7
  4503                           tblptrl	equ	0xFF6
  4504                           tablat	equ	0xFF5
  4505                           intcon	equ	0xFF2
  4506                           postinc0	equ	0xFEE
  4507                           wreg	equ	0xFE8
  4508                           postdec1	equ	0xFE5
  4509                           fsr1h	equ	0xFE2
  4510                           fsr1l	equ	0xFE1
  4511                           indf2	equ	0xFDF
  4512                           postinc2	equ	0xFDE
  4513                           postdec2	equ	0xFDD
  4514                           plusw2	equ	0xFDB
  4515                           fsr2h	equ	0xFDA
  4516                           fsr2l	equ	0xFD9
  4517                           status	equ	0xFD8
  4518                           
  4519 ;; *************** function _Delay *****************
  4520 ;; Defined at:
  4521 ;;		line 18 in file "Function.c"
  4522 ;; Parameters:    Size  Location     Type
  4523 ;;  wait            2   26[COMRAM] int 
  4524 ;; Auto vars:     Size  Location     Type
  4525 ;;  x               2   29[COMRAM] int 
  4526 ;; Return value:  Size  Location     Type
  4527 ;;		None               void
  4528 ;; Registers used:
  4529 ;;		wreg, status,2, status,0
  4530 ;; Tracked objects:
  4531 ;;		On entry : 0/0
  4532 ;;		On exit  : 0/0
  4533 ;;		Unchanged: 0/0
  4534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4535 ;;      Params:         2       0       0       0       0       0       0
  4536 ;;      Locals:         2       0       0       0       0       0       0
  4537 ;;      Temps:          1       0       0       0       0       0       0
  4538 ;;      Totals:         5       0       0       0       0       0       0
  4539 ;;Total ram usage:        5 bytes
  4540 ;; Hardware stack levels used:    1
  4541 ;; Hardware stack levels required when called:    4
  4542 ;; This function calls:
  4543 ;;		Nothing
  4544 ;; This function is called by:
  4545 ;;		_respondTM
  4546 ;;		_setup
  4547 ;;		_initBNO055
  4548 ;;		_accelgyroCalBNO055
  4549 ;;		_magCalBNO055
  4550 ;; This function uses a non-reentrant model
  4551 ;;
  4552                           
  4553                           	psect	text9
  4554  00179C                     __ptext9:
  4555                           	opt stack 0
  4556  00179C                     _Delay:
  4557                           	opt stack 24
  4558                           
  4559                           ;Function.c: 19: int x;
  4560                           ;Function.c: 20: for (x = 0; x < wait; x++) {
  4561                           
  4562                           ;incstack = 0
  4563  00179C  0E00               	movlw	0
  4564  00179E  6E1F               	movwf	Delay@x+1,c
  4565  0017A0  0E00               	movlw	0
  4566  0017A2  6E1E               	movwf	Delay@x,c
  4567  0017A4  D00A               	goto	l892
  4568  0017A6                     l3838:
  4569                           
  4570                           ;Function.c: 21: _delay((unsigned long)((1)*(16000000/4000.0)));
  4571  0017A6  0E06               	movlw	6
  4572  0017A8  6E1D               	movwf	??_Delay& (0+255),c
  4573  0017AA  0E30               	movlw	48
  4574  0017AC                     u8347:
  4575  0017AC  2EE8               	decfsz	wreg,f,c
  4576  0017AE  D7FE               	goto	u8347
  4577  0017B0  2E1D               	decfsz	??_Delay& (0+255),f,c
  4578  0017B2  D7FC               	goto	u8347
  4579  0017B4  D000               	nop2	
  4580  0017B6  4A1E               	infsnz	Delay@x,f,c
  4581  0017B8  2A1F               	incf	Delay@x+1,f,c
  4582  0017BA                     l892:
  4583  0017BA  501B               	movf	Delay@wait,w,c
  4584  0017BC  5C1E               	subwf	Delay@x,w,c
  4585  0017BE  501F               	movf	Delay@x+1,w,c
  4586  0017C0  0A80               	xorlw	128
  4587  0017C2  6E1D               	movwf	??_Delay& (0+255),c
  4588  0017C4  501C               	movf	Delay@wait+1,w,c
  4589  0017C6  0A80               	xorlw	128
  4590  0017C8  581D               	subwfb	??_Delay& (0+255),w,c
  4591  0017CA  B0D8               	btfsc	status,0,c
  4592  0017CC  0012               	return	
  4593  0017CE  D7EB               	goto	l3838
  4594  0017D0                     __end_of_Delay:
  4595                           	opt stack 0
  4596                           tosu	equ	0xFFF
  4597                           tosh	equ	0xFFE
  4598                           tosl	equ	0xFFD
  4599                           pclath	equ	0xFFA
  4600                           tblptru	equ	0xFF8
  4601                           tblptrh	equ	0xFF7
  4602                           tblptrl	equ	0xFF6
  4603                           tablat	equ	0xFF5
  4604                           intcon	equ	0xFF2
  4605                           postinc0	equ	0xFEE
  4606                           wreg	equ	0xFE8
  4607                           postdec1	equ	0xFE5
  4608                           fsr1h	equ	0xFE2
  4609                           fsr1l	equ	0xFE1
  4610                           indf2	equ	0xFDF
  4611                           postinc2	equ	0xFDE
  4612                           postdec2	equ	0xFDD
  4613                           plusw2	equ	0xFDB
  4614                           fsr2h	equ	0xFDA
  4615                           fsr2l	equ	0xFD9
  4616                           status	equ	0xFD8
  4617                           
  4618 ;; *************** function _receiveData *****************
  4619 ;; Defined at:
  4620 ;;		line 82 in file "FastTransfer.c"
  4621 ;; Parameters:    Size  Location     Type
  4622 ;;		None
  4623 ;; Auto vars:     Size  Location     Type
  4624 ;;  holder          3    9[BANK3 ] unsigned char [3]
  4625 ;;  crcHolder       1   13[BANK3 ] unsigned char 
  4626 ;;  holder          3    6[BANK3 ] unsigned char [3]
  4627 ;;  crcHolder       1   12[BANK3 ] unsigned char 
  4628 ;;  u               2   14[BANK3 ] int 
  4629 ;;  r               2   16[BANK3 ] int 
  4630 ;; Return value:  Size  Location     Type
  4631 ;;                  1    wreg      unsigned char 
  4632 ;; Registers used:
  4633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4639 ;;      Params:         0       0       0       0       0       0       0
  4640 ;;      Locals:         0       0       0       0      12       0       0
  4641 ;;      Temps:          0       0       0       0       6       0       0
  4642 ;;      Totals:         0       0       0       0      18       0       0
  4643 ;;Total ram usage:       18 bytes
  4644 ;; Hardware stack levels used:    1
  4645 ;; Hardware stack levels required when called:    8
  4646 ;; This function calls:
  4647 ;;		Absolute function
  4648 ;;		_CRC8
  4649 ;;		_CRCcheck
  4650 ;;		_Receive_available
  4651 ;;		_Receive_get
  4652 ;;		_Receive_peek
  4653 ;;		_Send_put
  4654 ;; This function is called by:
  4655 ;;		_updateComms
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text10
  4660  0000E0                     __ptext10:
  4661                           	opt stack 0
  4662  0000E0                     _receiveData:
  4663                           	opt stack 21
  4664                           
  4665                           ;FastTransfer.c: 85: if (rx_len == 0) {
  4666                           
  4667                           ;incstack = 0
  4668  0000E0  5035               	movf	_rx_len,w,c
  4669  0000E2  A4D8               	btfss	status,2,c
  4670  0000E4  D0AE               	goto	l6828
  4671                           
  4672                           ;FastTransfer.c: 87: if (serial_available() > 4) {
  4673  0000E6  D801               	call	u6388
  4674  0000E8  D00A               	goto	u6389
  4675  0000EA                     u6388:
  4676  0000EA  0005               	push	
  4677  0000EC  6EFA               	movwf	pclath,c
  4678  0000EE  5026               	movf	_serial_available,w,c
  4679  0000F0  6EFD               	movwf	tosl,c
  4680  0000F2  5027               	movf	_serial_available+1,w,c
  4681  0000F4  6EFE               	movwf	tosh,c
  4682  0000F6  50F8               	movf	tblptru,w,c
  4683  0000F8  6EFF               	movwf	tosu,c
  4684  0000FA  50FA               	movf	pclath,w,c
  4685  0000FC  0012               	return		;indir
  4686  0000FE                     u6389:
  4687  0000FE  BE1E               	btfsc	?_Receive_available+1,7,c
  4688  000100  D0A0               	goto	l6828
  4689  000102  501E               	movf	?_Receive_available+1,w,c
  4690  000104  E11E               	bnz	l6804
  4691  000106  0E05               	movlw	5
  4692  000108  5C1D               	subwf	?_Receive_available,w,c
  4693  00010A  B0D8               	btfsc	status,0,c
  4694  00010C  D01A               	goto	l6804
  4695  00010E  D099               	goto	l6828
  4696  000110                     l6796:
  4697                           
  4698                           ;FastTransfer.c: 93: alignErrorCounter++;
  4699  000110  0100               	movlb	0	; () banked
  4700  000112  4BC3               	infsnz	_alignErrorCounter& (0+255),f,b
  4701  000114  2BC4               	incf	(_alignErrorCounter+1)& (0+255),f,b
  4702                           
  4703                           ; BSR set to: 0
  4704                           ;FastTransfer.c: 94: if (serial_available() < 5)
  4705  000116  D801               	call	u6408
  4706  000118  D00A               	goto	u6409
  4707  00011A                     u6408:
  4708  00011A  0005               	push	
  4709  00011C  6EFA               	movwf	pclath,c
  4710  00011E  5026               	movf	_serial_available,w,c
  4711  000120  6EFD               	movwf	tosl,c
  4712  000122  5027               	movf	_serial_available+1,w,c
  4713  000124  6EFE               	movwf	tosh,c
  4714  000126  50F8               	movf	tblptru,w,c
  4715  000128  6EFF               	movwf	tosu,c
  4716  00012A  50FA               	movf	pclath,w,c
  4717  00012C  0012               	return		;indir
  4718  00012E                     u6409:
  4719  00012E  BE1E               	btfsc	?_Receive_available+1,7,c
  4720  000130  D006               	goto	l6800
  4721  000132  501E               	movf	?_Receive_available+1,w,c
  4722  000134  E106               	bnz	l6804
  4723  000136  0E05               	movlw	5
  4724  000138  5C1D               	subwf	?_Receive_available,w,c
  4725  00013A  B0D8               	btfsc	status,0,c
  4726  00013C  D002               	goto	l6804
  4727  00013E                     l6800:
  4728                           
  4729                           ;FastTransfer.c: 95: return 0;
  4730  00013E  0E00               	movlw	0
  4731  000140  0012               	return	
  4732  000142                     l6804:
  4733  000142  D801               	call	u6428
  4734  000144  D00A               	goto	u6429
  4735  000146                     u6428:
  4736  000146  0005               	push	
  4737  000148  6EFA               	movwf	pclath,c
  4738  00014A  5028               	movf	_serial_read,w,c
  4739  00014C  6EFD               	movwf	tosl,c
  4740  00014E  5029               	movf	_serial_read+1,w,c
  4741  000150  6EFE               	movwf	tosh,c
  4742  000152  50F8               	movf	tblptru,w,c
  4743  000154  6EFF               	movwf	tosu,c
  4744  000156  50FA               	movf	pclath,w,c
  4745  000158  0012               	return		;indir
  4746  00015A                     u6429:
  4747  00015A  0A06               	xorlw	6
  4748  00015C  A4D8               	btfss	status,2,c
  4749  00015E  D7D8               	goto	l6796
  4750                           
  4751                           ;FastTransfer.c: 96: }
  4752                           ;FastTransfer.c: 97: if (serial_read() == 0x85) {
  4753  000160  D801               	call	u6448
  4754  000162  D00A               	goto	u6449
  4755  000164                     u6448:
  4756  000164  0005               	push	
  4757  000166  6EFA               	movwf	pclath,c
  4758  000168  5028               	movf	_serial_read,w,c
  4759  00016A  6EFD               	movwf	tosl,c
  4760  00016C  5029               	movf	_serial_read+1,w,c
  4761  00016E  6EFE               	movwf	tosh,c
  4762  000170  50F8               	movf	tblptru,w,c
  4763  000172  6EFF               	movwf	tosu,c
  4764  000174  50FA               	movf	pclath,w,c
  4765  000176  0012               	return		;indir
  4766  000178                     u6449:
  4767  000178  0A85               	xorlw	133
  4768  00017A  A4D8               	btfss	status,2,c
  4769  00017C  D062               	goto	l6828
  4770                           
  4771                           ;FastTransfer.c: 98: rx_address = serial_read();
  4772  00017E  D801               	call	u6468
  4773  000180  D00A               	goto	u6469
  4774  000182                     u6468:
  4775  000182  0005               	push	
  4776  000184  6EFA               	movwf	pclath,c
  4777  000186  5028               	movf	_serial_read,w,c
  4778  000188  6EFD               	movwf	tosl,c
  4779  00018A  5029               	movf	_serial_read+1,w,c
  4780  00018C  6EFE               	movwf	tosh,c
  4781  00018E  50F8               	movf	tblptru,w,c
  4782  000190  6EFF               	movwf	tosu,c
  4783  000192  50FA               	movf	pclath,w,c
  4784  000194  0012               	return		;indir
  4785  000196                     u6469:
  4786  000196  0100               	movlb	0	; () banked
  4787  000198  6FED               	movwf	_rx_address& (0+255),b
  4788                           
  4789                           ;FastTransfer.c: 99: returnAddress = serial_read();
  4790  00019A  D801               	call	u6478
  4791  00019C  D00A               	goto	u6479
  4792  00019E                     u6478:
  4793  00019E  0005               	push	
  4794  0001A0  6EFA               	movwf	pclath,c
  4795  0001A2  5028               	movf	_serial_read,w,c
  4796  0001A4  6EFD               	movwf	tosl,c
  4797  0001A6  5029               	movf	_serial_read+1,w,c
  4798  0001A8  6EFE               	movwf	tosh,c
  4799  0001AA  50F8               	movf	tblptru,w,c
  4800  0001AC  6EFF               	movwf	tosu,c
  4801  0001AE  50FA               	movf	pclath,w,c
  4802  0001B0  0012               	return		;indir
  4803  0001B2                     u6479:
  4804  0001B2  6E33               	movwf	_returnAddress,c
  4805                           
  4806                           ;FastTransfer.c: 100: rx_len = serial_read();
  4807  0001B4  D801               	call	u6488
  4808  0001B6  D00A               	goto	u6489
  4809  0001B8                     u6488:
  4810  0001B8  0005               	push	
  4811  0001BA  6EFA               	movwf	pclath,c
  4812  0001BC  5028               	movf	_serial_read,w,c
  4813  0001BE  6EFD               	movwf	tosl,c
  4814  0001C0  5029               	movf	_serial_read+1,w,c
  4815  0001C2  6EFE               	movwf	tosh,c
  4816  0001C4  50F8               	movf	tblptru,w,c
  4817  0001C6  6EFF               	movwf	tosu,c
  4818  0001C8  50FA               	movf	pclath,w,c
  4819  0001CA  0012               	return		;indir
  4820  0001CC                     u6489:
  4821  0001CC  6E35               	movwf	_rx_len,c
  4822                           
  4823                           ;FastTransfer.c: 102: if (rx_address != moduleAddress) {
  4824  0001CE  5032               	movf	_moduleAddress,w,c
  4825  0001D0  0100               	movlb	0	; () banked
  4826  0001D2  19ED               	xorwf	_rx_address& (0+255),w,b
  4827  0001D4  B4D8               	btfsc	status,2,c
  4828  0001D6  D035               	goto	l6828
  4829                           
  4830                           ; BSR set to: 0
  4831                           ;FastTransfer.c: 103: addressErrorCounter++;
  4832  0001D8  0100               	movlb	0	; () banked
  4833  0001DA  4BC1               	infsnz	_addressErrorCounter& (0+255),f,b
  4834  0001DC  2BC2               	incf	(_addressErrorCounter+1)& (0+255),f,b
  4835                           
  4836                           ; BSR set to: 0
  4837                           ;FastTransfer.c: 106: int u;
  4838                           ;FastTransfer.c: 107: for (u = 0; u <= (rx_len + 1); u++) {
  4839  0001DE  0E00               	movlw	0
  4840  0001E0  0103               	movlb	3	; () banked
  4841  0001E2  6FD7               	movwf	(receiveData@u+1)& (0+255),b
  4842  0001E4  0E00               	movlw	0
  4843  0001E6  6FD6               	movwf	receiveData@u& (0+255),b
  4844  0001E8  D00F               	goto	l6820
  4845  0001EA                     l6816:
  4846                           
  4847                           ; BSR set to: 3
  4848                           ;FastTransfer.c: 108: serial_read();
  4849  0001EA  D801               	call	u6508
  4850  0001EC  D00A               	goto	l6818
  4851  0001EE                     u6508:
  4852  0001EE  0005               	push	
  4853  0001F0  6EFA               	movwf	pclath,c
  4854  0001F2  5028               	movf	_serial_read,w,c
  4855  0001F4  6EFD               	movwf	tosl,c
  4856  0001F6  5029               	movf	_serial_read+1,w,c
  4857  0001F8  6EFE               	movwf	tosh,c
  4858  0001FA  50F8               	movf	tblptru,w,c
  4859  0001FC  6EFF               	movwf	tosu,c
  4860  0001FE  50FA               	movf	pclath,w,c
  4861  000200  0012               	return		;indir
  4862  000202                     l6818:
  4863  000202  0103               	movlb	3	; () banked
  4864  000204  4BD6               	infsnz	receiveData@u& (0+255),f,b
  4865  000206  2BD7               	incf	(receiveData@u+1)& (0+255),f,b
  4866  000208                     l6820:
  4867                           
  4868                           ; BSR set to: 3
  4869  000208  5035               	movf	_rx_len,w,c
  4870  00020A  0103               	movlb	3	; () banked
  4871  00020C  6FC8               	movwf	??_receiveData& (0+255),b
  4872  00020E  6BC9               	clrf	(??_receiveData+1)& (0+255),b
  4873  000210  0E01               	movlw	1
  4874  000212  0103               	movlb	3	; () banked
  4875  000214  27C8               	addwf	??_receiveData& (0+255),f,b
  4876  000216  0E00               	movlw	0
  4877  000218  23C9               	addwfc	(??_receiveData+1)& (0+255),f,b
  4878  00021A  0103               	movlb	3	; () banked
  4879  00021C  51D6               	movf	receiveData@u& (0+255),w,b
  4880  00021E  0103               	movlb	3	; () banked
  4881  000220  5DC8               	subwf	??_receiveData& (0+255),w,b
  4882  000222  0103               	movlb	3	; () banked
  4883  000224  51C9               	movf	(??_receiveData+1)& (0+255),w,b
  4884  000226  0A80               	xorlw	128
  4885  000228  0103               	movlb	3	; () banked
  4886  00022A  6FCA               	movwf	(??_receiveData+2)& (0+255),b
  4887  00022C  0103               	movlb	3	; () banked
  4888  00022E  51D7               	movf	(receiveData@u+1)& (0+255),w,b
  4889  000230  0A80               	xorlw	128
  4890  000232  0103               	movlb	3	; () banked
  4891  000234  59CA               	subwfb	(??_receiveData+2)& (0+255),w,b
  4892  000236  B0D8               	btfsc	status,0,c
  4893  000238  D7D8               	goto	l6816
  4894                           
  4895                           ; BSR set to: 3
  4896                           ;FastTransfer.c: 109: }
  4897                           ;FastTransfer.c: 110: rx_len = 0;
  4898                           
  4899                           ; BSR set to: 3
  4900  00023A  0E00               	movlw	0
  4901  00023C  6E35               	movwf	_rx_len,c
  4902                           
  4903                           ; BSR set to: 3
  4904                           ;FastTransfer.c: 111: return 0;
  4905  00023E  0E00               	movlw	0
  4906                           
  4907                           ; BSR set to: 3
  4908  000240  0012               	return	
  4909  000242                     l6828:
  4910                           
  4911                           ;FastTransfer.c: 112: }
  4912                           ;FastTransfer.c: 114: }
  4913                           ;FastTransfer.c: 115: }
  4914                           ;FastTransfer.c: 116: }
  4915                           ;FastTransfer.c: 119: if (rx_len != 0) {
  4916  000242  5035               	movf	_rx_len,w,c
  4917  000244  B4D8               	btfsc	status,2,c
  4918  000246  D2AB               	goto	l6952
  4919                           
  4920                           ;FastTransfer.c: 122: if (rx_array_inx == 0) {
  4921  000248  5034               	movf	_rx_array_inx,w,c
  4922  00024A  A4D8               	btfss	status,2,c
  4923  00024C  D044               	goto	l6852
  4924  00024E                     l6834:
  4925  00024E  D801               	call	u6548
  4926  000250  D00A               	goto	u6549
  4927  000252                     u6548:
  4928  000252  0005               	push	
  4929  000254  6EFA               	movwf	pclath,c
  4930  000256  5026               	movf	_serial_available,w,c
  4931  000258  6EFD               	movwf	tosl,c
  4932  00025A  5027               	movf	_serial_available+1,w,c
  4933  00025C  6EFE               	movwf	tosh,c
  4934  00025E  50F8               	movf	tblptru,w,c
  4935  000260  6EFF               	movwf	tosu,c
  4936  000262  50FA               	movf	pclath,w,c
  4937  000264  0012               	return		;indir
  4938  000266                     u6549:
  4939  000266  BE1E               	btfsc	?_Receive_available+1,7,c
  4940  000268  D7F2               	goto	l6834
  4941  00026A  501E               	movf	?_Receive_available+1,w,c
  4942  00026C  E103               	bnz	l6836
  4943  00026E  041D               	decf	?_Receive_available,w,c
  4944  000270  A0D8               	btfss	status,0,c
  4945  000272  D7ED               	goto	l6834
  4946  000274                     l6836:
  4947                           
  4948                           ;FastTransfer.c: 124: if (255 == serial_peek()) {
  4949  000274  D801               	call	u6568
  4950  000276  D00B               	goto	u6569
  4951  000278                     u6568:
  4952  000278  0005               	push	
  4953  00027A  0100               	movlb	0	; () banked
  4954  00027C  6EFA               	movwf	pclath,c
  4955  00027E  51D7               	movf	_serial_peek& (0+255),w,b
  4956  000280  6EFD               	movwf	tosl,c
  4957  000282  51D8               	movf	(_serial_peek+1)& (0+255),w,b
  4958  000284  6EFE               	movwf	tosh,c
  4959  000286  50F8               	movf	tblptru,w,c
  4960  000288  6EFF               	movwf	tosu,c
  4961  00028A  50FA               	movf	pclath,w,c
  4962  00028C  0012               	return		;indir
  4963  00028E                     u6569:
  4964  00028E  0AFF               	xorlw	255
  4965  000290  A4D8               	btfss	status,2,c
  4966  000292  D021               	goto	l6852
  4967                           
  4968                           ;FastTransfer.c: 125: CRCcheck();
  4969  000294  ECC5  F005         	call	_CRCcheck	;wreg free
  4970                           
  4971                           ;FastTransfer.c: 126: rx_len = 0;
  4972  000298  0E00               	movlw	0
  4973  00029A  6E35               	movwf	_rx_len,c
  4974                           
  4975                           ;FastTransfer.c: 127: rx_array_inx = 0;
  4976  00029C  0E00               	movlw	0
  4977  00029E  6E34               	movwf	_rx_array_inx,c
  4978                           
  4979                           ;FastTransfer.c: 128: return 0;
  4980  0002A0  0E00               	movlw	0
  4981  0002A2  0012               	return	
  4982  0002A4                     l6848:
  4983                           
  4984                           ;FastTransfer.c: 134: rx_buffer[rx_array_inx++] = serial_read();
  4985  0002A4  D801               	call	u6588
  4986  0002A6  D00A               	goto	u6589
  4987  0002A8                     u6588:
  4988  0002A8  0005               	push	
  4989  0002AA  6EFA               	movwf	pclath,c
  4990  0002AC  5028               	movf	_serial_read,w,c
  4991  0002AE  6EFD               	movwf	tosl,c
  4992  0002B0  5029               	movf	_serial_read+1,w,c
  4993  0002B2  6EFE               	movwf	tosh,c
  4994  0002B4  50F8               	movf	tblptru,w,c
  4995  0002B6  6EFF               	movwf	tosu,c
  4996  0002B8  50FA               	movf	pclath,w,c
  4997  0002BA  0012               	return		;indir
  4998  0002BC                     u6589:
  4999  0002BC  0103               	movlb	3	; () banked
  5000  0002BE  6FC8               	movwf	??_receiveData& (0+255),b
  5001  0002C0  5034               	movf	_rx_array_inx,w,c
  5002  0002C2  0D01               	mullw	1
  5003  0002C4  0E00               	movlw	low _rx_buffer
  5004  0002C6  24F3               	addwf	prodl,w,c
  5005  0002C8  6ED9               	movwf	fsr2l,c
  5006  0002CA  0E03               	movlw	high _rx_buffer
  5007  0002CC  20F4               	addwfc	prodh,w,c
  5008  0002CE  6EDA               	movwf	fsr2h,c
  5009  0002D0  C3C8  FFDF         	movff	??_receiveData,indf2
  5010                           
  5011                           ; BSR set to: 3
  5012  0002D4  2A34               	incf	_rx_array_inx,f,c
  5013  0002D6                     l6852:
  5014  0002D6  D801               	call	u6598
  5015  0002D8  D00A               	goto	u6599
  5016  0002DA                     u6598:
  5017  0002DA  0005               	push	
  5018  0002DC  6EFA               	movwf	pclath,c
  5019  0002DE  5026               	movf	_serial_available,w,c
  5020  0002E0  6EFD               	movwf	tosl,c
  5021  0002E2  5027               	movf	_serial_available+1,w,c
  5022  0002E4  6EFE               	movwf	tosh,c
  5023  0002E6  50F8               	movf	tblptru,w,c
  5024  0002E8  6EFF               	movwf	tosu,c
  5025  0002EA  50FA               	movf	pclath,w,c
  5026  0002EC  0012               	return		;indir
  5027  0002EE                     u6599:
  5028  0002EE  501D               	movf	?_Receive_available,w,c
  5029  0002F0  101E               	iorwf	?_Receive_available+1,w,c
  5030  0002F2  B4D8               	btfsc	status,2,c
  5031  0002F4  D004               	goto	l6856
  5032  0002F6  5034               	movf	_rx_array_inx,w,c
  5033  0002F8  5C35               	subwf	_rx_len,w,c
  5034  0002FA  B0D8               	btfsc	status,0,c
  5035  0002FC  D7D3               	goto	l6848
  5036  0002FE                     l6856:
  5037                           
  5038                           ;FastTransfer.c: 135: }
  5039                           ;FastTransfer.c: 137: if (rx_len == (rx_array_inx - 1)) {
  5040  0002FE  5035               	movf	_rx_len,w,c
  5041  000300  0103               	movlb	3	; () banked
  5042  000302  6FC8               	movwf	??_receiveData& (0+255),b
  5043  000304  6BC9               	clrf	(??_receiveData+1)& (0+255),b
  5044  000306  0EFF               	movlw	255
  5045  000308  0103               	movlb	3	; () banked
  5046  00030A  6FCA               	movwf	(??_receiveData+2)& (0+255),b
  5047  00030C  0EFF               	movlw	255
  5048  00030E  0103               	movlb	3	; () banked
  5049  000310  6FCB               	movwf	(??_receiveData+3)& (0+255),b
  5050  000312  5034               	movf	_rx_array_inx,w,c
  5051  000314  0103               	movlb	3	; () banked
  5052  000316  6FCC               	movwf	(??_receiveData+4)& (0+255),b
  5053  000318  6BCD               	clrf	(??_receiveData+5)& (0+255),b
  5054  00031A  0103               	movlb	3	; () banked
  5055  00031C  51CA               	movf	(??_receiveData+2)& (0+255),w,b
  5056  00031E  0103               	movlb	3	; () banked
  5057  000320  27CC               	addwf	(??_receiveData+4)& (0+255),f,b
  5058  000322  0103               	movlb	3	; () banked
  5059  000324  51CB               	movf	(??_receiveData+3)& (0+255),w,b
  5060  000326  0103               	movlb	3	; () banked
  5061  000328  23CD               	addwfc	(??_receiveData+5)& (0+255),f,b
  5062  00032A  0103               	movlb	3	; () banked
  5063  00032C  51C8               	movf	??_receiveData& (0+255),w,b
  5064  00032E  0103               	movlb	3	; () banked
  5065  000330  19CC               	xorwf	(??_receiveData+4)& (0+255),w,b
  5066  000332  E105               	bnz	u6621
  5067  000334  0103               	movlb	3	; () banked
  5068  000336  51C9               	movf	(??_receiveData+1)& (0+255),w,b
  5069  000338  0103               	movlb	3	; () banked
  5070  00033A  19CD               	xorwf	(??_receiveData+5)& (0+255),w,b
  5071  00033C  A4D8               	btfss	status,2,c
  5072  00033E                     u6621:
  5073  00033E  D22F               	goto	l6952
  5074                           
  5075                           ; BSR set to: 3
  5076                           ;FastTransfer.c: 140: calc_CS = CRC8(rx_buffer, rx_len);
  5077  000340  0E00               	movlw	low _rx_buffer
  5078  000342  6E1B               	movwf	CRC8@data,c
  5079  000344  0E03               	movlw	high _rx_buffer
  5080  000346  6E1C               	movwf	CRC8@data+1,c
  5081  000348  C035  F01D         	movff	_rx_len,CRC8@len
  5082  00034C  EC0E  F00B         	call	_CRC8	;wreg free
  5083  000350  0100               	movlb	0	; () banked
  5084  000352  6FE5               	movwf	_calc_CS& (0+255),b
  5085                           
  5086                           ; BSR set to: 0
  5087                           ;FastTransfer.c: 144: if (calc_CS == rx_buffer[rx_array_inx - 1]) {
  5088  000354  0EFF               	movlw	255
  5089  000356  0103               	movlb	3	; () banked
  5090  000358  6FC8               	movwf	??_receiveData& (0+255),b
  5091  00035A  0EFF               	movlw	255
  5092  00035C  0103               	movlb	3	; () banked
  5093  00035E  6FC9               	movwf	(??_receiveData+1)& (0+255),b
  5094  000360  5034               	movf	_rx_array_inx,w,c
  5095  000362  0103               	movlb	3	; () banked
  5096  000364  6FCA               	movwf	(??_receiveData+2)& (0+255),b
  5097  000366  6BCB               	clrf	(??_receiveData+3)& (0+255),b
  5098  000368  0103               	movlb	3	; () banked
  5099  00036A  51C8               	movf	??_receiveData& (0+255),w,b
  5100  00036C  0103               	movlb	3	; () banked
  5101  00036E  27CA               	addwf	(??_receiveData+2)& (0+255),f,b
  5102  000370  0103               	movlb	3	; () banked
  5103  000372  51C9               	movf	(??_receiveData+1)& (0+255),w,b
  5104  000374  0103               	movlb	3	; () banked
  5105  000376  23CB               	addwfc	(??_receiveData+3)& (0+255),f,b
  5106  000378  0E00               	movlw	low _rx_buffer
  5107  00037A  0103               	movlb	3	; () banked
  5108  00037C  25CA               	addwf	(??_receiveData+2)& (0+255),w,b
  5109  00037E  6ED9               	movwf	fsr2l,c
  5110  000380  0E03               	movlw	high _rx_buffer
  5111  000382  0103               	movlb	3	; () banked
  5112  000384  21CB               	addwfc	(??_receiveData+3)& (0+255),w,b
  5113  000386  6EDA               	movwf	fsr2h,c
  5114  000388  0100               	movlb	0	; () banked
  5115  00038A  51E5               	movf	_calc_CS& (0+255),w,b
  5116  00038C  18DE               	xorwf	postinc2,w,c
  5117  00038E  A4D8               	btfss	status,2,c
  5118  000390  D13E               	goto	l6914
  5119                           
  5120                           ; BSR set to: 0
  5121                           ;FastTransfer.c: 147: int r;
  5122                           ;FastTransfer.c: 148: for (r = 0; r < rx_len; r = r + 3) {
  5123  000392  0E00               	movlw	0
  5124  000394  0103               	movlb	3	; () banked
  5125  000396  6FD9               	movwf	(receiveData@r+1)& (0+255),b
  5126  000398  0E00               	movlw	0
  5127  00039A  6FD8               	movwf	receiveData@r& (0+255),b
  5128  00039C  D05F               	goto	l6874
  5129  00039E                     l6864:
  5130                           
  5131                           ; BSR set to: 3
  5132                           ;FastTransfer.c: 149: if (rx_buffer[r] < maxDataAddress) {
  5133  00039E  0E00               	movlw	low _rx_buffer
  5134  0003A0  0103               	movlb	3	; () banked
  5135  0003A2  25D8               	addwf	receiveData@r& (0+255),w,b
  5136  0003A4  6ED9               	movwf	fsr2l,c
  5137  0003A6  0E03               	movlw	high _rx_buffer
  5138  0003A8  0103               	movlb	3	; () banked
  5139  0003AA  21D9               	addwfc	(receiveData@r+1)& (0+255),w,b
  5140  0003AC  6EDA               	movwf	fsr2h,c
  5141  0003AE  0100               	movlb	0	; () banked
  5142  0003B0  51EC               	movf	_maxDataAddress& (0+255),w,b
  5143  0003B2  5CDE               	subwf	postinc2,w,c
  5144  0003B4  B0D8               	btfsc	status,0,c
  5145  0003B6  D045               	goto	l6870
  5146                           
  5147                           ; BSR set to: 0
  5148                           ;FastTransfer.c: 150: group.parts[0] = rx_buffer[r + 1];
  5149  0003B8  0E01               	movlw	1
  5150  0003BA  0103               	movlb	3	; () banked
  5151  0003BC  25D8               	addwf	receiveData@r& (0+255),w,b
  5152  0003BE  0103               	movlb	3	; () banked
  5153  0003C0  6FC8               	movwf	??_receiveData& (0+255),b
  5154  0003C2  0E00               	movlw	0
  5155  0003C4  0103               	movlb	3	; () banked
  5156  0003C6  21D9               	addwfc	(receiveData@r+1)& (0+255),w,b
  5157  0003C8  0103               	movlb	3	; () banked
  5158  0003CA  6FC9               	movwf	(??_receiveData+1)& (0+255),b
  5159  0003CC  0E00               	movlw	low _rx_buffer
  5160  0003CE  0103               	movlb	3	; () banked
  5161  0003D0  25C8               	addwf	??_receiveData& (0+255),w,b
  5162  0003D2  6ED9               	movwf	fsr2l,c
  5163  0003D4  0E03               	movlw	high _rx_buffer
  5164  0003D6  0103               	movlb	3	; () banked
  5165  0003D8  21C9               	addwfc	(??_receiveData+1)& (0+255),w,b
  5166  0003DA  6EDA               	movwf	fsr2h,c
  5167  0003DC  50DF               	movf	indf2,w,c
  5168  0003DE  0100               	movlb	0	; () banked
  5169  0003E0  6FCD               	movwf	_group& (0+255),b
  5170                           
  5171                           ;FastTransfer.c: 151: group.parts[1] = rx_buffer[r + 2];
  5172  0003E2  0E02               	movlw	2
  5173  0003E4  0103               	movlb	3	; () banked
  5174  0003E6  25D8               	addwf	receiveData@r& (0+255),w,b
  5175  0003E8  0103               	movlb	3	; () banked
  5176  0003EA  6FC8               	movwf	??_receiveData& (0+255),b
  5177  0003EC  0E00               	movlw	0
  5178  0003EE  0103               	movlb	3	; () banked
  5179  0003F0  21D9               	addwfc	(receiveData@r+1)& (0+255),w,b
  5180  0003F2  0103               	movlb	3	; () banked
  5181  0003F4  6FC9               	movwf	(??_receiveData+1)& (0+255),b
  5182  0003F6  0E00               	movlw	low _rx_buffer
  5183  0003F8  0103               	movlb	3	; () banked
  5184  0003FA  25C8               	addwf	??_receiveData& (0+255),w,b
  5185  0003FC  6ED9               	movwf	fsr2l,c
  5186  0003FE  0E03               	movlw	high _rx_buffer
  5187  000400  0103               	movlb	3	; () banked
  5188  000402  21C9               	addwfc	(??_receiveData+1)& (0+255),w,b
  5189  000404  6EDA               	movwf	fsr2h,c
  5190  000406  50DF               	movf	indf2,w,c
  5191  000408  0100               	movlb	0	; () banked
  5192  00040A  6FCE               	movwf	(_group+1)& (0+255),b
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;FastTransfer.c: 152: receiveArrayAddress[(rx_buffer[r])] = group.integer;
  5196  00040C  0E00               	movlw	low _rx_buffer
  5197  00040E  0103               	movlb	3	; () banked
  5198  000410  25D8               	addwf	receiveData@r& (0+255),w,b
  5199  000412  6ED9               	movwf	fsr2l,c
  5200  000414  0E03               	movlw	high _rx_buffer
  5201  000416  0103               	movlb	3	; () banked
  5202  000418  21D9               	addwfc	(receiveData@r+1)& (0+255),w,b
  5203  00041A  6EDA               	movwf	fsr2h,c
  5204  00041C  50DF               	movf	indf2,w,c
  5205  00041E  0103               	movlb	3	; () banked
  5206  000420  6FC8               	movwf	??_receiveData& (0+255),b
  5207  000422  0103               	movlb	3	; () banked
  5208  000424  51C8               	movf	??_receiveData& (0+255),w,b
  5209  000426  0D02               	mullw	2
  5210  000428  50F3               	movf	prodl,w,c
  5211  00042A  0100               	movlb	0	; () banked
  5212  00042C  25D3               	addwf	_receiveArrayAddress& (0+255),w,b
  5213  00042E  6ED9               	movwf	fsr2l,c
  5214  000430  50F4               	movf	prodh,w,c
  5215  000432  0100               	movlb	0	; () banked
  5216  000434  21D4               	addwfc	(_receiveArrayAddress+1)& (0+255),w,b
  5217  000436  6EDA               	movwf	fsr2h,c
  5218  000438  C0CD  FFDE         	movff	_group,postinc2
  5219  00043C  C0CE  FFDD         	movff	_group+1,postdec2
  5220                           
  5221                           ;FastTransfer.c: 153: } else {
  5222  000440  D003               	goto	l6872
  5223  000442                     l6870:
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;FastTransfer.c: 154: dataAdressErrorCounter++;
  5227  000442  0100               	movlb	0	; () banked
  5228  000444  4BC9               	infsnz	_dataAdressErrorCounter& (0+255),f,b
  5229  000446  2BCA               	incf	(_dataAdressErrorCounter+1)& (0+255),f,b
  5230  000448                     l6872:
  5231                           
  5232                           ; BSR set to: 0
  5233  000448  0E03               	movlw	3
  5234  00044A  0103               	movlb	3	; () banked
  5235  00044C  25D8               	addwf	receiveData@r& (0+255),w,b
  5236  00044E  0103               	movlb	3	; () banked
  5237  000450  6FD8               	movwf	receiveData@r& (0+255),b
  5238  000452  0E00               	movlw	0
  5239  000454  0103               	movlb	3	; () banked
  5240  000456  21D9               	addwfc	(receiveData@r+1)& (0+255),w,b
  5241  000458  0103               	movlb	3	; () banked
  5242  00045A  6FD9               	movwf	(receiveData@r+1)& (0+255),b
  5243  00045C                     l6874:
  5244                           
  5245                           ; BSR set to: 3
  5246  00045C  5035               	movf	_rx_len,w,c
  5247  00045E  0103               	movlb	3	; () banked
  5248  000460  6FC8               	movwf	??_receiveData& (0+255),b
  5249  000462  6BC9               	clrf	(??_receiveData+1)& (0+255),b
  5250  000464  0103               	movlb	3	; () banked
  5251  000466  51C8               	movf	??_receiveData& (0+255),w,b
  5252  000468  0103               	movlb	3	; () banked
  5253  00046A  5DD8               	subwf	receiveData@r& (0+255),w,b
  5254  00046C  0103               	movlb	3	; () banked
  5255  00046E  51D9               	movf	(receiveData@r+1)& (0+255),w,b
  5256  000470  0A80               	xorlw	128
  5257  000472  0103               	movlb	3	; () banked
  5258  000474  6FCA               	movwf	(??_receiveData+2)& (0+255),b
  5259  000476  0103               	movlb	3	; () banked
  5260  000478  51C9               	movf	(??_receiveData+1)& (0+255),w,b
  5261  00047A  0A80               	xorlw	128
  5262  00047C  0103               	movlb	3	; () banked
  5263  00047E  59CA               	subwfb	(??_receiveData+2)& (0+255),w,b
  5264  000480  A0D8               	btfss	status,0,c
  5265  000482  D78D               	goto	l6864
  5266                           
  5267                           ; BSR set to: 3
  5268                           ;FastTransfer.c: 155: }
  5269                           ;FastTransfer.c: 156: }
  5270                           ;FastTransfer.c: 159: if (AKNAKsend) {
  5271                           
  5272                           ; BSR set to: 3
  5273  000484  502E               	movf	_AKNAKsend,w,c
  5274  000486  B4D8               	btfsc	status,2,c
  5275  000488  D0BC               	goto	l6904
  5276                           
  5277                           ; BSR set to: 3
  5278                           ;FastTransfer.c: 160: unsigned char holder[3];
  5279                           ;FastTransfer.c: 161: holder[0] = 255;
  5280  00048A  0103               	movlb	3	; () banked
  5281  00048C  69CE               	setf	receiveData@holder& (0+255),b
  5282                           
  5283                           ; BSR set to: 3
  5284                           ;FastTransfer.c: 162: holder[1] = 1;
  5285  00048E  0E01               	movlw	1
  5286  000490  0103               	movlb	3	; () banked
  5287  000492  6FCF               	movwf	(receiveData@holder+1)& (0+255),b
  5288                           
  5289                           ; BSR set to: 3
  5290                           ;FastTransfer.c: 163: holder[2] = rx_buffer[rx_array_inx - 1];
  5291  000494  0EFF               	movlw	255
  5292  000496  0103               	movlb	3	; () banked
  5293  000498  6FC8               	movwf	??_receiveData& (0+255),b
  5294  00049A  0EFF               	movlw	255
  5295  00049C  0103               	movlb	3	; () banked
  5296  00049E  6FC9               	movwf	(??_receiveData+1)& (0+255),b
  5297  0004A0  5034               	movf	_rx_array_inx,w,c
  5298  0004A2  0103               	movlb	3	; () banked
  5299  0004A4  6FCA               	movwf	(??_receiveData+2)& (0+255),b
  5300  0004A6  6BCB               	clrf	(??_receiveData+3)& (0+255),b
  5301  0004A8  0103               	movlb	3	; () banked
  5302  0004AA  51C8               	movf	??_receiveData& (0+255),w,b
  5303  0004AC  0103               	movlb	3	; () banked
  5304  0004AE  27CA               	addwf	(??_receiveData+2)& (0+255),f,b
  5305  0004B0  0103               	movlb	3	; () banked
  5306  0004B2  51C9               	movf	(??_receiveData+1)& (0+255),w,b
  5307  0004B4  0103               	movlb	3	; () banked
  5308  0004B6  23CB               	addwfc	(??_receiveData+3)& (0+255),f,b
  5309  0004B8  0E00               	movlw	low _rx_buffer
  5310  0004BA  0103               	movlb	3	; () banked
  5311  0004BC  25CA               	addwf	(??_receiveData+2)& (0+255),w,b
  5312  0004BE  6ED9               	movwf	fsr2l,c
  5313  0004C0  0E03               	movlw	high _rx_buffer
  5314  0004C2  0103               	movlb	3	; () banked
  5315  0004C4  21CB               	addwfc	(??_receiveData+3)& (0+255),w,b
  5316  0004C6  6EDA               	movwf	fsr2h,c
  5317  0004C8  50DF               	movf	indf2,w,c
  5318  0004CA  0103               	movlb	3	; () banked
  5319  0004CC  6FD0               	movwf	(receiveData@holder+2)& (0+255),b
  5320                           
  5321                           ; BSR set to: 3
  5322                           ;FastTransfer.c: 164: unsigned char crcHolder = CRC8(holder, 3);
  5323  0004CE  0ECE               	movlw	low receiveData@holder
  5324  0004D0  6E1B               	movwf	CRC8@data,c
  5325  0004D2  0E03               	movlw	high receiveData@holder
  5326  0004D4  6E1C               	movwf	CRC8@data+1,c
  5327  0004D6  0E03               	movlw	3
  5328  0004D8  6E1D               	movwf	CRC8@len,c
  5329  0004DA  EC0E  F00B         	call	_CRC8	;wreg free
  5330  0004DE  0103               	movlb	3	; () banked
  5331  0004E0  6FD4               	movwf	receiveData@crcHolder& (0+255),b
  5332                           
  5333                           ; BSR set to: 3
  5334                           ;FastTransfer.c: 165: serial_write(0x06);
  5335  0004E2  D801               	call	u6678
  5336  0004E4  D00B               	goto	l6888
  5337  0004E6                     u6678:
  5338  0004E6  0005               	push	
  5339  0004E8  6EFA               	movwf	pclath,c
  5340  0004EA  502A               	movf	_serial_write,w,c
  5341  0004EC  6EFD               	movwf	tosl,c
  5342  0004EE  502B               	movf	_serial_write+1,w,c
  5343  0004F0  6EFE               	movwf	tosh,c
  5344  0004F2  50F8               	movf	tblptru,w,c
  5345  0004F4  6EFF               	movwf	tosu,c
  5346  0004F6  50FA               	movf	pclath,w,c
  5347  0004F8  0E06               	movlw	6
  5348  0004FA  0012               	return		;indir
  5349  0004FC                     l6888:
  5350                           
  5351                           ;FastTransfer.c: 166: serial_write(0x85);
  5352  0004FC  D801               	call	u6688
  5353  0004FE  D00B               	goto	l6890
  5354  000500                     u6688:
  5355  000500  0005               	push	
  5356  000502  6EFA               	movwf	pclath,c
  5357  000504  502A               	movf	_serial_write,w,c
  5358  000506  6EFD               	movwf	tosl,c
  5359  000508  502B               	movf	_serial_write+1,w,c
  5360  00050A  6EFE               	movwf	tosh,c
  5361  00050C  50F8               	movf	tblptru,w,c
  5362  00050E  6EFF               	movwf	tosu,c
  5363  000510  50FA               	movf	pclath,w,c
  5364  000512  0E85               	movlw	133
  5365  000514  0012               	return		;indir
  5366  000516                     l6890:
  5367                           
  5368                           ;FastTransfer.c: 167: serial_write(returnAddress);
  5369  000516  D801               	call	u6698
  5370  000518  D00B               	goto	l6892
  5371  00051A                     u6698:
  5372  00051A  0005               	push	
  5373  00051C  6EFA               	movwf	pclath,c
  5374  00051E  502A               	movf	_serial_write,w,c
  5375  000520  6EFD               	movwf	tosl,c
  5376  000522  502B               	movf	_serial_write+1,w,c
  5377  000524  6EFE               	movwf	tosh,c
  5378  000526  50F8               	movf	tblptru,w,c
  5379  000528  6EFF               	movwf	tosu,c
  5380  00052A  50FA               	movf	pclath,w,c
  5381  00052C  5033               	movf	_returnAddress,w,c
  5382  00052E  0012               	return		;indir
  5383  000530                     l6892:
  5384                           
  5385                           ;FastTransfer.c: 168: serial_write(moduleAddress);
  5386  000530  D801               	call	u6708
  5387  000532  D00B               	goto	l6894
  5388  000534                     u6708:
  5389  000534  0005               	push	
  5390  000536  6EFA               	movwf	pclath,c
  5391  000538  502A               	movf	_serial_write,w,c
  5392  00053A  6EFD               	movwf	tosl,c
  5393  00053C  502B               	movf	_serial_write+1,w,c
  5394  00053E  6EFE               	movwf	tosh,c
  5395  000540  50F8               	movf	tblptru,w,c
  5396  000542  6EFF               	movwf	tosu,c
  5397  000544  50FA               	movf	pclath,w,c
  5398  000546  5032               	movf	_moduleAddress,w,c
  5399  000548  0012               	return		;indir
  5400  00054A                     l6894:
  5401                           
  5402                           ;FastTransfer.c: 169: serial_write(3);
  5403  00054A  D801               	call	u6718
  5404  00054C  D00B               	goto	l6896
  5405  00054E                     u6718:
  5406  00054E  0005               	push	
  5407  000550  6EFA               	movwf	pclath,c
  5408  000552  502A               	movf	_serial_write,w,c
  5409  000554  6EFD               	movwf	tosl,c
  5410  000556  502B               	movf	_serial_write+1,w,c
  5411  000558  6EFE               	movwf	tosh,c
  5412  00055A  50F8               	movf	tblptru,w,c
  5413  00055C  6EFF               	movwf	tosu,c
  5414  00055E  50FA               	movf	pclath,w,c
  5415  000560  0E03               	movlw	3
  5416  000562  0012               	return		;indir
  5417  000564                     l6896:
  5418                           
  5419                           ;FastTransfer.c: 170: serial_write(255);
  5420  000564  D801               	call	u6728
  5421  000566  D00B               	goto	l6898
  5422  000568                     u6728:
  5423  000568  0005               	push	
  5424  00056A  6EFA               	movwf	pclath,c
  5425  00056C  502A               	movf	_serial_write,w,c
  5426  00056E  6EFD               	movwf	tosl,c
  5427  000570  502B               	movf	_serial_write+1,w,c
  5428  000572  6EFE               	movwf	tosh,c
  5429  000574  50F8               	movf	tblptru,w,c
  5430  000576  6EFF               	movwf	tosu,c
  5431  000578  50FA               	movf	pclath,w,c
  5432  00057A  0EFF               	movlw	255
  5433  00057C  0012               	return		;indir
  5434  00057E                     l6898:
  5435                           
  5436                           ;FastTransfer.c: 171: serial_write(1);
  5437  00057E  D801               	call	u6738
  5438  000580  D00B               	goto	l6900
  5439  000582                     u6738:
  5440  000582  0005               	push	
  5441  000584  6EFA               	movwf	pclath,c
  5442  000586  502A               	movf	_serial_write,w,c
  5443  000588  6EFD               	movwf	tosl,c
  5444  00058A  502B               	movf	_serial_write+1,w,c
  5445  00058C  6EFE               	movwf	tosh,c
  5446  00058E  50F8               	movf	tblptru,w,c
  5447  000590  6EFF               	movwf	tosu,c
  5448  000592  50FA               	movf	pclath,w,c
  5449  000594  0E01               	movlw	1
  5450  000596  0012               	return		;indir
  5451  000598                     l6900:
  5452                           
  5453                           ;FastTransfer.c: 172: serial_write(rx_buffer[rx_array_inx - 1]);
  5454  000598  D801               	call	u6748
  5455  00059A  D025               	goto	l6902
  5456  00059C                     u6748:
  5457  00059C  0005               	push	
  5458  00059E  6EFA               	movwf	pclath,c
  5459  0005A0  502A               	movf	_serial_write,w,c
  5460  0005A2  6EFD               	movwf	tosl,c
  5461  0005A4  502B               	movf	_serial_write+1,w,c
  5462  0005A6  6EFE               	movwf	tosh,c
  5463  0005A8  50F8               	movf	tblptru,w,c
  5464  0005AA  6EFF               	movwf	tosu,c
  5465  0005AC  50FA               	movf	pclath,w,c
  5466  0005AE  0EFF               	movlw	255
  5467  0005B0  0103               	movlb	3	; () banked
  5468  0005B2  6FC8               	movwf	??_receiveData& (0+255),b
  5469  0005B4  0EFF               	movlw	255
  5470  0005B6  0103               	movlb	3	; () banked
  5471  0005B8  6FC9               	movwf	(??_receiveData+1)& (0+255),b
  5472  0005BA  5034               	movf	_rx_array_inx,w,c
  5473  0005BC  0103               	movlb	3	; () banked
  5474  0005BE  6FCA               	movwf	(??_receiveData+2)& (0+255),b
  5475  0005C0  6BCB               	clrf	(??_receiveData+3)& (0+255),b
  5476  0005C2  0103               	movlb	3	; () banked
  5477  0005C4  51C8               	movf	??_receiveData& (0+255),w,b
  5478  0005C6  0103               	movlb	3	; () banked
  5479  0005C8  27CA               	addwf	(??_receiveData+2)& (0+255),f,b
  5480  0005CA  0103               	movlb	3	; () banked
  5481  0005CC  51C9               	movf	(??_receiveData+1)& (0+255),w,b
  5482  0005CE  0103               	movlb	3	; () banked
  5483  0005D0  23CB               	addwfc	(??_receiveData+3)& (0+255),f,b
  5484  0005D2  0E00               	movlw	low _rx_buffer
  5485  0005D4  0103               	movlb	3	; () banked
  5486  0005D6  25CA               	addwf	(??_receiveData+2)& (0+255),w,b
  5487  0005D8  6ED9               	movwf	fsr2l,c
  5488  0005DA  0E03               	movlw	high _rx_buffer
  5489  0005DC  0103               	movlb	3	; () banked
  5490  0005DE  21CB               	addwfc	(??_receiveData+3)& (0+255),w,b
  5491  0005E0  6EDA               	movwf	fsr2h,c
  5492  0005E2  50DF               	movf	indf2,w,c
  5493  0005E4  0012               	return		;indir
  5494  0005E6                     l6902:
  5495                           
  5496                           ;FastTransfer.c: 173: serial_write(crcHolder);
  5497  0005E6  D801               	call	u6758
  5498  0005E8  D00C               	goto	l6904
  5499  0005EA                     u6758:
  5500  0005EA  0005               	push	
  5501  0005EC  6EFA               	movwf	pclath,c
  5502  0005EE  502A               	movf	_serial_write,w,c
  5503  0005F0  6EFD               	movwf	tosl,c
  5504  0005F2  502B               	movf	_serial_write+1,w,c
  5505  0005F4  6EFE               	movwf	tosh,c
  5506  0005F6  50F8               	movf	tblptru,w,c
  5507  0005F8  6EFF               	movwf	tosu,c
  5508  0005FA  50FA               	movf	pclath,w,c
  5509  0005FC  0103               	movlb	3	; () banked
  5510  0005FE  51D4               	movf	receiveData@crcHolder& (0+255),w,b
  5511  000600  0012               	return		;indir
  5512  000602                     l6904:
  5513                           
  5514                           ;FastTransfer.c: 174: }
  5515                           ;FastTransfer.c: 178: rx_len = 0;
  5516  000602  0E00               	movlw	0
  5517  000604  6E35               	movwf	_rx_len,c
  5518                           
  5519                           ;FastTransfer.c: 179: rx_array_inx = 0;
  5520  000606  0E00               	movlw	0
  5521  000608  6E34               	movwf	_rx_array_inx,c
  5522                           
  5523                           ;FastTransfer.c: 180: return 1;
  5524  00060A  0E01               	movlw	1
  5525  00060C  0012               	return	
  5526  00060E                     l6914:
  5527                           
  5528                           ;FastTransfer.c: 182: crcErrorCounter++;
  5529  00060E  0100               	movlb	0	; () banked
  5530  000610  4BC7               	infsnz	_crcErrorCounter& (0+255),f,b
  5531  000612  2BC8               	incf	(_crcErrorCounter+1)& (0+255),f,b
  5532                           
  5533                           ; BSR set to: 0
  5534                           ;FastTransfer.c: 184: if (AKNAKsend) {
  5535  000614  502E               	movf	_AKNAKsend,w,c
  5536  000616  B4D8               	btfsc	status,2,c
  5537  000618  D0BC               	goto	l6944
  5538                           
  5539                           ; BSR set to: 0
  5540                           ;FastTransfer.c: 185: unsigned char holder[3];
  5541                           ;FastTransfer.c: 186: holder[0] = 255;
  5542  00061A  0103               	movlb	3	; () banked
  5543  00061C  69D1               	setf	receiveData@holder_1990& (0+255),b
  5544                           
  5545                           ; BSR set to: 3
  5546                           ;FastTransfer.c: 187: holder[1] = 2;
  5547  00061E  0E02               	movlw	2
  5548  000620  0103               	movlb	3	; () banked
  5549  000622  6FD2               	movwf	(receiveData@holder_1990+1)& (0+255),b
  5550                           
  5551                           ; BSR set to: 3
  5552                           ;FastTransfer.c: 188: holder[2] = rx_buffer[rx_array_inx - 1];
  5553  000624  0EFF               	movlw	255
  5554  000626  0103               	movlb	3	; () banked
  5555  000628  6FC8               	movwf	??_receiveData& (0+255),b
  5556  00062A  0EFF               	movlw	255
  5557  00062C  0103               	movlb	3	; () banked
  5558  00062E  6FC9               	movwf	(??_receiveData+1)& (0+255),b
  5559  000630  5034               	movf	_rx_array_inx,w,c
  5560  000632  0103               	movlb	3	; () banked
  5561  000634  6FCA               	movwf	(??_receiveData+2)& (0+255),b
  5562  000636  6BCB               	clrf	(??_receiveData+3)& (0+255),b
  5563  000638  0103               	movlb	3	; () banked
  5564  00063A  51C8               	movf	??_receiveData& (0+255),w,b
  5565  00063C  0103               	movlb	3	; () banked
  5566  00063E  27CA               	addwf	(??_receiveData+2)& (0+255),f,b
  5567  000640  0103               	movlb	3	; () banked
  5568  000642  51C9               	movf	(??_receiveData+1)& (0+255),w,b
  5569  000644  0103               	movlb	3	; () banked
  5570  000646  23CB               	addwfc	(??_receiveData+3)& (0+255),f,b
  5571  000648  0E00               	movlw	low _rx_buffer
  5572  00064A  0103               	movlb	3	; () banked
  5573  00064C  25CA               	addwf	(??_receiveData+2)& (0+255),w,b
  5574  00064E  6ED9               	movwf	fsr2l,c
  5575  000650  0E03               	movlw	high _rx_buffer
  5576  000652  0103               	movlb	3	; () banked
  5577  000654  21CB               	addwfc	(??_receiveData+3)& (0+255),w,b
  5578  000656  6EDA               	movwf	fsr2h,c
  5579  000658  50DF               	movf	indf2,w,c
  5580  00065A  0103               	movlb	3	; () banked
  5581  00065C  6FD3               	movwf	(receiveData@holder_1990+2)& (0+255),b
  5582                           
  5583                           ; BSR set to: 3
  5584                           ;FastTransfer.c: 189: unsigned char crcHolder = CRC8(holder, 3);
  5585  00065E  0ED1               	movlw	low receiveData@holder_1990
  5586  000660  6E1B               	movwf	CRC8@data,c
  5587  000662  0E03               	movlw	high receiveData@holder_1990
  5588  000664  6E1C               	movwf	CRC8@data+1,c
  5589  000666  0E03               	movlw	3
  5590  000668  6E1D               	movwf	CRC8@len,c
  5591  00066A  EC0E  F00B         	call	_CRC8
  5592  00066E  0103               	movlb	3	; () banked
  5593  000670  6FD5               	movwf	receiveData@crcHolder_1991& (0+255),b
  5594                           
  5595                           ; BSR set to: 3
  5596                           ;FastTransfer.c: 190: serial_write(0x06);
  5597  000672  D801               	call	u6778
  5598  000674  D00B               	goto	l6928
  5599  000676                     u6778:
  5600  000676  0005               	push	
  5601  000678  6EFA               	movwf	pclath,c
  5602  00067A  502A               	movf	_serial_write,w,c
  5603  00067C  6EFD               	movwf	tosl,c
  5604  00067E  502B               	movf	_serial_write+1,w,c
  5605  000680  6EFE               	movwf	tosh,c
  5606  000682  50F8               	movf	tblptru,w,c
  5607  000684  6EFF               	movwf	tosu,c
  5608  000686  50FA               	movf	pclath,w,c
  5609  000688  0E06               	movlw	6
  5610  00068A  0012               	return		;indir
  5611  00068C                     l6928:
  5612                           
  5613                           ;FastTransfer.c: 191: serial_write(0x85);
  5614  00068C  D801               	call	u6788
  5615  00068E  D00B               	goto	l6930
  5616  000690                     u6788:
  5617  000690  0005               	push	
  5618  000692  6EFA               	movwf	pclath,c
  5619  000694  502A               	movf	_serial_write,w,c
  5620  000696  6EFD               	movwf	tosl,c
  5621  000698  502B               	movf	_serial_write+1,w,c
  5622  00069A  6EFE               	movwf	tosh,c
  5623  00069C  50F8               	movf	tblptru,w,c
  5624  00069E  6EFF               	movwf	tosu,c
  5625  0006A0  50FA               	movf	pclath,w,c
  5626  0006A2  0E85               	movlw	133
  5627  0006A4  0012               	return		;indir
  5628  0006A6                     l6930:
  5629                           
  5630                           ;FastTransfer.c: 192: serial_write(returnAddress);
  5631  0006A6  D801               	call	u6798
  5632  0006A8  D00B               	goto	l6932
  5633  0006AA                     u6798:
  5634  0006AA  0005               	push	
  5635  0006AC  6EFA               	movwf	pclath,c
  5636  0006AE  502A               	movf	_serial_write,w,c
  5637  0006B0  6EFD               	movwf	tosl,c
  5638  0006B2  502B               	movf	_serial_write+1,w,c
  5639  0006B4  6EFE               	movwf	tosh,c
  5640  0006B6  50F8               	movf	tblptru,w,c
  5641  0006B8  6EFF               	movwf	tosu,c
  5642  0006BA  50FA               	movf	pclath,w,c
  5643  0006BC  5033               	movf	_returnAddress,w,c
  5644  0006BE  0012               	return		;indir
  5645  0006C0                     l6932:
  5646                           
  5647                           ;FastTransfer.c: 193: serial_write(moduleAddress);
  5648  0006C0  D801               	call	u6808
  5649  0006C2  D00B               	goto	l6934
  5650  0006C4                     u6808:
  5651  0006C4  0005               	push	
  5652  0006C6  6EFA               	movwf	pclath,c
  5653  0006C8  502A               	movf	_serial_write,w,c
  5654  0006CA  6EFD               	movwf	tosl,c
  5655  0006CC  502B               	movf	_serial_write+1,w,c
  5656  0006CE  6EFE               	movwf	tosh,c
  5657  0006D0  50F8               	movf	tblptru,w,c
  5658  0006D2  6EFF               	movwf	tosu,c
  5659  0006D4  50FA               	movf	pclath,w,c
  5660  0006D6  5032               	movf	_moduleAddress,w,c
  5661  0006D8  0012               	return		;indir
  5662  0006DA                     l6934:
  5663                           
  5664                           ;FastTransfer.c: 194: serial_write(3);
  5665  0006DA  D801               	call	u6818
  5666  0006DC  D00B               	goto	l6936
  5667  0006DE                     u6818:
  5668  0006DE  0005               	push	
  5669  0006E0  6EFA               	movwf	pclath,c
  5670  0006E2  502A               	movf	_serial_write,w,c
  5671  0006E4  6EFD               	movwf	tosl,c
  5672  0006E6  502B               	movf	_serial_write+1,w,c
  5673  0006E8  6EFE               	movwf	tosh,c
  5674  0006EA  50F8               	movf	tblptru,w,c
  5675  0006EC  6EFF               	movwf	tosu,c
  5676  0006EE  50FA               	movf	pclath,w,c
  5677  0006F0  0E03               	movlw	3
  5678  0006F2  0012               	return		;indir
  5679  0006F4                     l6936:
  5680                           
  5681                           ;FastTransfer.c: 195: serial_write(255);
  5682  0006F4  D801               	call	u6828
  5683  0006F6  D00B               	goto	l6938
  5684  0006F8                     u6828:
  5685  0006F8  0005               	push	
  5686  0006FA  6EFA               	movwf	pclath,c
  5687  0006FC  502A               	movf	_serial_write,w,c
  5688  0006FE  6EFD               	movwf	tosl,c
  5689  000700  502B               	movf	_serial_write+1,w,c
  5690  000702  6EFE               	movwf	tosh,c
  5691  000704  50F8               	movf	tblptru,w,c
  5692  000706  6EFF               	movwf	tosu,c
  5693  000708  50FA               	movf	pclath,w,c
  5694  00070A  0EFF               	movlw	255
  5695  00070C  0012               	return		;indir
  5696  00070E                     l6938:
  5697                           
  5698                           ;FastTransfer.c: 196: serial_write(2);
  5699  00070E  D801               	call	u6838
  5700  000710  D00B               	goto	l6940
  5701  000712                     u6838:
  5702  000712  0005               	push	
  5703  000714  6EFA               	movwf	pclath,c
  5704  000716  502A               	movf	_serial_write,w,c
  5705  000718  6EFD               	movwf	tosl,c
  5706  00071A  502B               	movf	_serial_write+1,w,c
  5707  00071C  6EFE               	movwf	tosh,c
  5708  00071E  50F8               	movf	tblptru,w,c
  5709  000720  6EFF               	movwf	tosu,c
  5710  000722  50FA               	movf	pclath,w,c
  5711  000724  0E02               	movlw	2
  5712  000726  0012               	return		;indir
  5713  000728                     l6940:
  5714                           
  5715                           ;FastTransfer.c: 197: serial_write(rx_buffer[rx_array_inx - 1]);
  5716  000728  D801               	call	u6848
  5717  00072A  D025               	goto	l6942
  5718  00072C                     u6848:
  5719  00072C  0005               	push	
  5720  00072E  6EFA               	movwf	pclath,c
  5721  000730  502A               	movf	_serial_write,w,c
  5722  000732  6EFD               	movwf	tosl,c
  5723  000734  502B               	movf	_serial_write+1,w,c
  5724  000736  6EFE               	movwf	tosh,c
  5725  000738  50F8               	movf	tblptru,w,c
  5726  00073A  6EFF               	movwf	tosu,c
  5727  00073C  50FA               	movf	pclath,w,c
  5728  00073E  0EFF               	movlw	255
  5729  000740  0103               	movlb	3	; () banked
  5730  000742  6FC8               	movwf	??_receiveData& (0+255),b
  5731  000744  0EFF               	movlw	255
  5732  000746  0103               	movlb	3	; () banked
  5733  000748  6FC9               	movwf	(??_receiveData+1)& (0+255),b
  5734  00074A  5034               	movf	_rx_array_inx,w,c
  5735  00074C  0103               	movlb	3	; () banked
  5736  00074E  6FCA               	movwf	(??_receiveData+2)& (0+255),b
  5737  000750  6BCB               	clrf	(??_receiveData+3)& (0+255),b
  5738  000752  0103               	movlb	3	; () banked
  5739  000754  51C8               	movf	??_receiveData& (0+255),w,b
  5740  000756  0103               	movlb	3	; () banked
  5741  000758  27CA               	addwf	(??_receiveData+2)& (0+255),f,b
  5742  00075A  0103               	movlb	3	; () banked
  5743  00075C  51C9               	movf	(??_receiveData+1)& (0+255),w,b
  5744  00075E  0103               	movlb	3	; () banked
  5745  000760  23CB               	addwfc	(??_receiveData+3)& (0+255),f,b
  5746  000762  0E00               	movlw	low _rx_buffer
  5747  000764  0103               	movlb	3	; () banked
  5748  000766  25CA               	addwf	(??_receiveData+2)& (0+255),w,b
  5749  000768  6ED9               	movwf	fsr2l,c
  5750  00076A  0E03               	movlw	high _rx_buffer
  5751  00076C  0103               	movlb	3	; () banked
  5752  00076E  21CB               	addwfc	(??_receiveData+3)& (0+255),w,b
  5753  000770  6EDA               	movwf	fsr2h,c
  5754  000772  50DF               	movf	indf2,w,c
  5755  000774  0012               	return		;indir
  5756  000776                     l6942:
  5757                           
  5758                           ;FastTransfer.c: 198: serial_write(crcHolder);
  5759  000776  D801               	call	u6858
  5760  000778  D00C               	goto	l6944
  5761  00077A                     u6858:
  5762  00077A  0005               	push	
  5763  00077C  6EFA               	movwf	pclath,c
  5764  00077E  502A               	movf	_serial_write,w,c
  5765  000780  6EFD               	movwf	tosl,c
  5766  000782  502B               	movf	_serial_write+1,w,c
  5767  000784  6EFE               	movwf	tosh,c
  5768  000786  50F8               	movf	tblptru,w,c
  5769  000788  6EFF               	movwf	tosu,c
  5770  00078A  50FA               	movf	pclath,w,c
  5771  00078C  0103               	movlb	3	; () banked
  5772  00078E  51D5               	movf	receiveData@crcHolder_1991& (0+255),w,b
  5773  000790  0012               	return		;indir
  5774  000792                     l6944:
  5775                           
  5776                           ;FastTransfer.c: 199: }
  5777                           ;FastTransfer.c: 202: rx_len = 0;
  5778  000792  0E00               	movlw	0
  5779  000794  6E35               	movwf	_rx_len,c
  5780                           
  5781                           ;FastTransfer.c: 203: rx_array_inx = 0;
  5782  000796  0E00               	movlw	0
  5783  000798  6E34               	movwf	_rx_array_inx,c
  5784                           
  5785                           ;FastTransfer.c: 204: return 0;
  5786  00079A  0E00               	movlw	0
  5787  00079C  0012               	return	
  5788  00079E                     l6952:
  5789                           
  5790                           ;FastTransfer.c: 205: }
  5791                           ;FastTransfer.c: 206: }
  5792                           ;FastTransfer.c: 207: }
  5793                           ;FastTransfer.c: 210: return 0;
  5794  00079E  0E00               	movlw	0
  5795  0007A0  0012               	return	
  5796  0007A2                     __end_of_receiveData:
  5797                           	opt stack 0
  5798                           tosu	equ	0xFFF
  5799                           tosh	equ	0xFFE
  5800                           tosl	equ	0xFFD
  5801                           pclath	equ	0xFFA
  5802                           tblptru	equ	0xFF8
  5803                           tblptrh	equ	0xFF7
  5804                           tblptrl	equ	0xFF6
  5805                           tablat	equ	0xFF5
  5806                           prodh	equ	0xFF4
  5807                           prodl	equ	0xFF3
  5808                           intcon	equ	0xFF2
  5809                           postinc0	equ	0xFEE
  5810                           wreg	equ	0xFE8
  5811                           postdec1	equ	0xFE5
  5812                           fsr1h	equ	0xFE2
  5813                           fsr1l	equ	0xFE1
  5814                           indf2	equ	0xFDF
  5815                           postinc2	equ	0xFDE
  5816                           postdec2	equ	0xFDD
  5817                           plusw2	equ	0xFDB
  5818                           fsr2h	equ	0xFDA
  5819                           fsr2l	equ	0xFD9
  5820                           status	equ	0xFD8
  5821                           
  5822 ;; *************** function _Send_put *****************
  5823 ;; Defined at:
  5824 ;;		line 185 in file "mcc_generated_files/eusart1.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;  _data           1    wreg     unsigned char 
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;  _data           1    0[BANK1 ] unsigned char 
  5829 ;; Return value:  Size  Location     Type
  5830 ;;		None               void
  5831 ;; Registers used:
  5832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5838 ;;      Params:         0       0       0       0       0       0       0
  5839 ;;      Locals:         0       0       1       0       0       0       0
  5840 ;;      Temps:          0       0       0       0       0       0       0
  5841 ;;      Totals:         0       0       1       0       0       0       0
  5842 ;;Total ram usage:        1 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:    6
  5845 ;; This function calls:
  5846 ;;		_UART_buff_get
  5847 ;;		_UART_buff_put
  5848 ;; This function is called by:
  5849 ;;		_putch
  5850 ;;		_CommsStart
  5851 ;;		_sendData
  5852 ;;		_receiveData
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           	psect	text11
  5857  0017D0                     __ptext11:
  5858                           	opt stack 0
  5859  0017D0                     _Send_put:
  5860                           	opt stack 21
  5861                           
  5862                           ;incstack = 0
  5863                           ;Send_put@_data stored from wreg
  5864  0017D0  0101               	movlb	1	; () banked
  5865  0017D2  6FF6               	movwf	Send_put@_data& (0+255),b
  5866                           
  5867                           ;eusart1.c: 186: UART_buff_put(&output_buffer, _data);
  5868  0017D4  0E00               	movlw	low _output_buffer
  5869  0017D6  6E21               	movwf	UART_buff_put@_this,c
  5870  0017D8  0E05               	movlw	high _output_buffer
  5871  0017DA  6E22               	movwf	UART_buff_put@_this+1,c
  5872  0017DC  C1F6  F023         	movff	Send_put@_data,UART_buff_put@c
  5873  0017E0  EC1B  F007         	call	_UART_buff_put
  5874                           
  5875                           ;eusart1.c: 187: if (Transmit_stall == 1) {
  5876  0017E4  0100               	movlb	0	; () banked
  5877  0017E6  05FD               	decf	_Transmit_stall& (0+255),w,b
  5878  0017E8  A4D8               	btfss	status,2,c
  5879  0017EA  0012               	return	
  5880                           
  5881                           ; BSR set to: 0
  5882                           ;eusart1.c: 188: Transmit_stall = 0;
  5883  0017EC  0E00               	movlw	0
  5884  0017EE  0100               	movlb	0	; () banked
  5885  0017F0  6FFD               	movwf	_Transmit_stall& (0+255),b
  5886                           
  5887                           ; BSR set to: 0
  5888                           ;eusart1.c: 189: TXREG1 = UART_buff_get(&output_buffer);
  5889  0017F2  0E00               	movlw	low _output_buffer
  5890  0017F4  6E21               	movwf	UART_buff_get@_this,c
  5891  0017F6  0E05               	movlw	high _output_buffer
  5892  0017F8  6E22               	movwf	UART_buff_get@_this+1,c
  5893  0017FA  ECEA  F009         	call	_UART_buff_get	;wreg free
  5894  0017FE  6EAD               	movwf	4013,c	;volatile
  5895                           
  5896                           ;eusart1.c: 190: PIE1bits.TX1IE = 1;
  5897  001800  889D               	bsf	3997,4,c	;volatile
  5898  001802  0012               	return	
  5899  001804                     __end_of_Send_put:
  5900                           	opt stack 0
  5901                           tosu	equ	0xFFF
  5902                           tosh	equ	0xFFE
  5903                           tosl	equ	0xFFD
  5904                           pclath	equ	0xFFA
  5905                           tblptru	equ	0xFF8
  5906                           tblptrh	equ	0xFF7
  5907                           tblptrl	equ	0xFF6
  5908                           tablat	equ	0xFF5
  5909                           prodh	equ	0xFF4
  5910                           prodl	equ	0xFF3
  5911                           intcon	equ	0xFF2
  5912                           postinc0	equ	0xFEE
  5913                           wreg	equ	0xFE8
  5914                           postdec1	equ	0xFE5
  5915                           fsr1h	equ	0xFE2
  5916                           fsr1l	equ	0xFE1
  5917                           indf2	equ	0xFDF
  5918                           postinc2	equ	0xFDE
  5919                           postdec2	equ	0xFDD
  5920                           plusw2	equ	0xFDB
  5921                           fsr2h	equ	0xFDA
  5922                           fsr2l	equ	0xFD9
  5923                           status	equ	0xFD8
  5924                           
  5925 ;; *************** function _UART_buff_put *****************
  5926 ;; Defined at:
  5927 ;;		line 123 in file "mcc_generated_files/eusart1.c"
  5928 ;; Parameters:    Size  Location     Type
  5929 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  5930 ;;		 -> output_buffer(206), input_buffer(206), 
  5931 ;;  c               1   34[COMRAM] const unsigned char 
  5932 ;; Auto vars:     Size  Location     Type
  5933 ;;		None
  5934 ;; Return value:  Size  Location     Type
  5935 ;;		None               void
  5936 ;; Registers used:
  5937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5938 ;; Tracked objects:
  5939 ;;		On entry : 0/0
  5940 ;;		On exit  : 0/0
  5941 ;;		Unchanged: 0/0
  5942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5943 ;;      Params:         3       0       0       0       0       0       0
  5944 ;;      Locals:         0       0       0       0       0       0       0
  5945 ;;      Temps:          2       0       0       0       0       0       0
  5946 ;;      Totals:         5       0       0       0       0       0       0
  5947 ;;Total ram usage:        5 bytes
  5948 ;; Hardware stack levels used:    1
  5949 ;; Hardware stack levels required when called:    5
  5950 ;; This function calls:
  5951 ;;		_UART_buff_modulo_inc
  5952 ;; This function is called by:
  5953 ;;		_Send_put
  5954 ;; This function uses a non-reentrant model
  5955 ;;
  5956                           
  5957                           	psect	text12
  5958  000E36                     __ptext12:
  5959                           	opt stack 0
  5960  000E36                     _UART_buff_put:
  5961                           	opt stack 21
  5962                           
  5963                           ;eusart1.c: 124: if (_this->count < 200) {
  5964                           
  5965                           ;incstack = 0
  5966  000E36  EE20 F0CC          	lfsr	2,204
  5967  000E3A  5021               	movf	UART_buff_put@_this,w,c
  5968  000E3C  26D9               	addwf	fsr2l,f,c
  5969  000E3E  5022               	movf	UART_buff_put@_this+1,w,c
  5970  000E40  22DA               	addwfc	fsr2h,f,c
  5971  000E42  0E01               	movlw	1
  5972  000E44  BEDB               	btfsc	plusw2,7,c
  5973  000E46  D007               	goto	l6562
  5974  000E48  0E01               	movlw	1
  5975  000E4A  50DB               	movf	plusw2,w,c
  5976  000E4C  E13A               	bnz	l6568
  5977  000E4E  0EC8               	movlw	200
  5978  000E50  5CDE               	subwf	postinc2,w,c
  5979  000E52  B0D8               	btfsc	status,0,c
  5980  000E54  D036               	goto	l6568
  5981  000E56                     l6562:
  5982                           
  5983                           ;eusart1.c: 125: _this->buf[_this->head] = c;
  5984  000E56  EE20 F0C8          	lfsr	2,200
  5985  000E5A  5021               	movf	UART_buff_put@_this,w,c
  5986  000E5C  26D9               	addwf	fsr2l,f,c
  5987  000E5E  5022               	movf	UART_buff_put@_this+1,w,c
  5988  000E60  22DA               	addwfc	fsr2h,f,c
  5989  000E62  CFDE F024          	movff	postinc2,??_UART_buff_put
  5990  000E66  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  5991  000E6A  5024               	movf	??_UART_buff_put,w,c
  5992  000E6C  2421               	addwf	UART_buff_put@_this,w,c
  5993  000E6E  6ED9               	movwf	fsr2l,c
  5994  000E70  5025               	movf	??_UART_buff_put+1,w,c
  5995  000E72  2022               	addwfc	UART_buff_put@_this+1,w,c
  5996  000E74  6EDA               	movwf	fsr2h,c
  5997  000E76  C023  FFDF         	movff	UART_buff_put@c,indf2
  5998                           
  5999                           ;eusart1.c: 126: _this->head = UART_buff_modulo_inc(_this->head, 200);
  6000  000E7A  EE20 F0C8          	lfsr	2,200
  6001  000E7E  5021               	movf	UART_buff_put@_this,w,c
  6002  000E80  26D9               	addwf	fsr2l,f,c
  6003  000E82  5022               	movf	UART_buff_put@_this+1,w,c
  6004  000E84  22DA               	addwfc	fsr2h,f,c
  6005  000E86  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  6006  000E8A  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  6007  000E8E  0E00               	movlw	0
  6008  000E90  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  6009  000E92  0EC8               	movlw	200
  6010  000E94  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  6011  000E96  EC5F  F00C         	call	_UART_buff_modulo_inc	;wreg free
  6012  000E9A  EE20 F0C8          	lfsr	2,200
  6013  000E9E  5021               	movf	UART_buff_put@_this,w,c
  6014  000EA0  26D9               	addwf	fsr2l,f,c
  6015  000EA2  5022               	movf	UART_buff_put@_this+1,w,c
  6016  000EA4  22DA               	addwfc	fsr2h,f,c
  6017  000EA6  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  6018  000EAA  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  6019                           
  6020                           ;eusart1.c: 127: ++_this->count;
  6021  000EAE  EE20 F0CC          	lfsr	2,204
  6022  000EB2  5021               	movf	UART_buff_put@_this,w,c
  6023  000EB4  26D9               	addwf	fsr2l,f,c
  6024  000EB6  5022               	movf	UART_buff_put@_this+1,w,c
  6025  000EB8  22DA               	addwfc	fsr2h,f,c
  6026  000EBA  2ADE               	incf	postinc2,f,c
  6027  000EBC  0E00               	movlw	0
  6028  000EBE  22DD               	addwfc	postdec2,f,c
  6029                           
  6030                           ;eusart1.c: 128: } else {
  6031  000EC0  0012               	return	
  6032  000EC2                     l6568:
  6033                           
  6034                           ;eusart1.c: 129: _this->buf[_this->head] = c;
  6035  000EC2  EE20 F0C8          	lfsr	2,200
  6036  000EC6  5021               	movf	UART_buff_put@_this,w,c
  6037  000EC8  26D9               	addwf	fsr2l,f,c
  6038  000ECA  5022               	movf	UART_buff_put@_this+1,w,c
  6039  000ECC  22DA               	addwfc	fsr2h,f,c
  6040  000ECE  CFDE F024          	movff	postinc2,??_UART_buff_put
  6041  000ED2  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  6042  000ED6  5024               	movf	??_UART_buff_put,w,c
  6043  000ED8  2421               	addwf	UART_buff_put@_this,w,c
  6044  000EDA  6ED9               	movwf	fsr2l,c
  6045  000EDC  5025               	movf	??_UART_buff_put+1,w,c
  6046  000EDE  2022               	addwfc	UART_buff_put@_this+1,w,c
  6047  000EE0  6EDA               	movwf	fsr2h,c
  6048  000EE2  C023  FFDF         	movff	UART_buff_put@c,indf2
  6049                           
  6050                           ;eusart1.c: 130: _this->head = UART_buff_modulo_inc(_this->head, 200);
  6051  000EE6  EE20 F0C8          	lfsr	2,200
  6052  000EEA  5021               	movf	UART_buff_put@_this,w,c
  6053  000EEC  26D9               	addwf	fsr2l,f,c
  6054  000EEE  5022               	movf	UART_buff_put@_this+1,w,c
  6055  000EF0  22DA               	addwfc	fsr2h,f,c
  6056  000EF2  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  6057  000EF6  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  6058  000EFA  0E00               	movlw	0
  6059  000EFC  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  6060  000EFE  0EC8               	movlw	200
  6061  000F00  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  6062  000F02  EC5F  F00C         	call	_UART_buff_modulo_inc	;wreg free
  6063  000F06  EE20 F0C8          	lfsr	2,200
  6064  000F0A  5021               	movf	UART_buff_put@_this,w,c
  6065  000F0C  26D9               	addwf	fsr2l,f,c
  6066  000F0E  5022               	movf	UART_buff_put@_this+1,w,c
  6067  000F10  22DA               	addwfc	fsr2h,f,c
  6068  000F12  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  6069  000F16  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  6070                           
  6071                           ;eusart1.c: 131: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  6072  000F1A  EE20 F0CA          	lfsr	2,202
  6073  000F1E  5021               	movf	UART_buff_put@_this,w,c
  6074  000F20  26D9               	addwf	fsr2l,f,c
  6075  000F22  5022               	movf	UART_buff_put@_this+1,w,c
  6076  000F24  22DA               	addwfc	fsr2h,f,c
  6077  000F26  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  6078  000F2A  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  6079  000F2E  0E00               	movlw	0
  6080  000F30  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  6081  000F32  0EC8               	movlw	200
  6082  000F34  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  6083  000F36  EC5F  F00C         	call	_UART_buff_modulo_inc	;wreg free
  6084  000F3A  EE20 F0CA          	lfsr	2,202
  6085  000F3E  5021               	movf	UART_buff_put@_this,w,c
  6086  000F40  26D9               	addwf	fsr2l,f,c
  6087  000F42  5022               	movf	UART_buff_put@_this+1,w,c
  6088  000F44  22DA               	addwfc	fsr2h,f,c
  6089  000F46  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  6090  000F4A  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  6091  000F4E  0012               	return	
  6092  000F50                     __end_of_UART_buff_put:
  6093                           	opt stack 0
  6094                           tosu	equ	0xFFF
  6095                           tosh	equ	0xFFE
  6096                           tosl	equ	0xFFD
  6097                           pclath	equ	0xFFA
  6098                           tblptru	equ	0xFF8
  6099                           tblptrh	equ	0xFF7
  6100                           tblptrl	equ	0xFF6
  6101                           tablat	equ	0xFF5
  6102                           prodh	equ	0xFF4
  6103                           prodl	equ	0xFF3
  6104                           intcon	equ	0xFF2
  6105                           postinc0	equ	0xFEE
  6106                           wreg	equ	0xFE8
  6107                           postdec1	equ	0xFE5
  6108                           fsr1h	equ	0xFE2
  6109                           fsr1l	equ	0xFE1
  6110                           indf2	equ	0xFDF
  6111                           postinc2	equ	0xFDE
  6112                           postdec2	equ	0xFDD
  6113                           plusw2	equ	0xFDB
  6114                           fsr2h	equ	0xFDA
  6115                           fsr2l	equ	0xFD9
  6116                           status	equ	0xFD8
  6117                           
  6118 ;; *************** function _Receive_peek *****************
  6119 ;; Defined at:
  6120 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  6121 ;; Parameters:    Size  Location     Type
  6122 ;;		None
  6123 ;; Auto vars:     Size  Location     Type
  6124 ;;		None
  6125 ;; Return value:  Size  Location     Type
  6126 ;;                  1    wreg      unsigned char 
  6127 ;; Registers used:
  6128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6129 ;; Tracked objects:
  6130 ;;		On entry : 0/0
  6131 ;;		On exit  : 0/0
  6132 ;;		Unchanged: 0/0
  6133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6134 ;;      Params:         0       0       0       0       0       0       0
  6135 ;;      Locals:         0       0       0       0       0       0       0
  6136 ;;      Temps:          0       0       0       0       0       0       0
  6137 ;;      Totals:         0       0       0       0       0       0       0
  6138 ;;Total ram usage:        0 bytes
  6139 ;; Hardware stack levels used:    1
  6140 ;; Hardware stack levels required when called:    5
  6141 ;; This function calls:
  6142 ;;		_UART_buff_peek
  6143 ;; This function is called by:
  6144 ;;		_CommsStart
  6145 ;;		_receiveData
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149                           	psect	text13
  6150  001AE4                     __ptext13:
  6151                           	opt stack 0
  6152  001AE4                     _Receive_peek:
  6153                           	opt stack 23
  6154                           
  6155                           ;eusart1.c: 174: return UART_buff_peek(&input_buffer);
  6156                           
  6157                           ;incstack = 0
  6158  001AE4  0E00               	movlw	low _input_buffer
  6159  001AE6  6E1B               	movwf	UART_buff_peek@_this,c
  6160  001AE8  0E04               	movlw	high _input_buffer
  6161  001AEA  6E1C               	movwf	UART_buff_peek@_this+1,c
  6162  001AEC  EC9C  F00C         	call	_UART_buff_peek	;wreg free
  6163  001AF0  0012               	return	
  6164  001AF2                     __end_of_Receive_peek:
  6165                           	opt stack 0
  6166                           tosu	equ	0xFFF
  6167                           tosh	equ	0xFFE
  6168                           tosl	equ	0xFFD
  6169                           pclath	equ	0xFFA
  6170                           tblptru	equ	0xFF8
  6171                           tblptrh	equ	0xFF7
  6172                           tblptrl	equ	0xFF6
  6173                           tablat	equ	0xFF5
  6174                           prodh	equ	0xFF4
  6175                           prodl	equ	0xFF3
  6176                           intcon	equ	0xFF2
  6177                           postinc0	equ	0xFEE
  6178                           wreg	equ	0xFE8
  6179                           postdec1	equ	0xFE5
  6180                           fsr1h	equ	0xFE2
  6181                           fsr1l	equ	0xFE1
  6182                           indf2	equ	0xFDF
  6183                           postinc2	equ	0xFDE
  6184                           postdec2	equ	0xFDD
  6185                           plusw2	equ	0xFDB
  6186                           fsr2h	equ	0xFDA
  6187                           fsr2l	equ	0xFD9
  6188                           status	equ	0xFD8
  6189                           
  6190 ;; *************** function _UART_buff_peek *****************
  6191 ;; Defined at:
  6192 ;;		line 169 in file "mcc_generated_files/eusart1.c"
  6193 ;; Parameters:    Size  Location     Type
  6194 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  6195 ;;		 -> input_buffer(206), 
  6196 ;; Auto vars:     Size  Location     Type
  6197 ;;		None
  6198 ;; Return value:  Size  Location     Type
  6199 ;;                  1    wreg      unsigned char 
  6200 ;; Registers used:
  6201 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6202 ;; Tracked objects:
  6203 ;;		On entry : 0/0
  6204 ;;		On exit  : 0/0
  6205 ;;		Unchanged: 0/0
  6206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6207 ;;      Params:         2       0       0       0       0       0       0
  6208 ;;      Locals:         0       0       0       0       0       0       0
  6209 ;;      Temps:          2       0       0       0       0       0       0
  6210 ;;      Totals:         4       0       0       0       0       0       0
  6211 ;;Total ram usage:        4 bytes
  6212 ;; Hardware stack levels used:    1
  6213 ;; Hardware stack levels required when called:    4
  6214 ;; This function calls:
  6215 ;;		Nothing
  6216 ;; This function is called by:
  6217 ;;		_Receive_peek
  6218 ;; This function uses a non-reentrant model
  6219 ;;
  6220                           
  6221                           	psect	text14
  6222  001938                     __ptext14:
  6223                           	opt stack 0
  6224  001938                     _UART_buff_peek:
  6225                           	opt stack 23
  6226                           
  6227                           ;eusart1.c: 170: return _this->buf[_this->tail];
  6228                           
  6229                           ;incstack = 0
  6230  001938  EE20 F0CA          	lfsr	2,202
  6231  00193C  501B               	movf	UART_buff_peek@_this,w,c
  6232  00193E  26D9               	addwf	fsr2l,f,c
  6233  001940  501C               	movf	UART_buff_peek@_this+1,w,c
  6234  001942  22DA               	addwfc	fsr2h,f,c
  6235  001944  CFDE F01D          	movff	postinc2,??_UART_buff_peek
  6236  001948  CFDD F01E          	movff	postdec2,??_UART_buff_peek+1
  6237  00194C  501D               	movf	??_UART_buff_peek,w,c
  6238  00194E  241B               	addwf	UART_buff_peek@_this,w,c
  6239  001950  6ED9               	movwf	fsr2l,c
  6240  001952  501E               	movf	??_UART_buff_peek+1,w,c
  6241  001954  201C               	addwfc	UART_buff_peek@_this+1,w,c
  6242  001956  6EDA               	movwf	fsr2h,c
  6243  001958  50DF               	movf	indf2,w,c
  6244  00195A  0012               	return	
  6245  00195C                     __end_of_UART_buff_peek:
  6246                           	opt stack 0
  6247                           tosu	equ	0xFFF
  6248                           tosh	equ	0xFFE
  6249                           tosl	equ	0xFFD
  6250                           pclath	equ	0xFFA
  6251                           tblptru	equ	0xFF8
  6252                           tblptrh	equ	0xFF7
  6253                           tblptrl	equ	0xFF6
  6254                           tablat	equ	0xFF5
  6255                           prodh	equ	0xFF4
  6256                           prodl	equ	0xFF3
  6257                           intcon	equ	0xFF2
  6258                           postinc0	equ	0xFEE
  6259                           wreg	equ	0xFE8
  6260                           postdec1	equ	0xFE5
  6261                           fsr1h	equ	0xFE2
  6262                           fsr1l	equ	0xFE1
  6263                           indf2	equ	0xFDF
  6264                           postinc2	equ	0xFDE
  6265                           postdec2	equ	0xFDD
  6266                           plusw2	equ	0xFDB
  6267                           fsr2h	equ	0xFDA
  6268                           fsr2l	equ	0xFD9
  6269                           status	equ	0xFD8
  6270                           
  6271 ;; *************** function _CRCcheck *****************
  6272 ;; Defined at:
  6273 ;;		line 373 in file "FastTransfer.c"
  6274 ;; Parameters:    Size  Location     Type
  6275 ;;		None
  6276 ;; Auto vars:     Size  Location     Type
  6277 ;;  rt              2    7[BANK1 ] int 
  6278 ;;  arrayHolder     3    4[BANK1 ] unsigned char [3]
  6279 ;;  calculatedCR    1    3[BANK1 ] unsigned char 
  6280 ;;  SentCRC         1    2[BANK1 ] unsigned char 
  6281 ;; Return value:  Size  Location     Type
  6282 ;;		None               void
  6283 ;; Registers used:
  6284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  6285 ;; Tracked objects:
  6286 ;;		On entry : 0/0
  6287 ;;		On exit  : 0/0
  6288 ;;		Unchanged: 0/0
  6289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6290 ;;      Params:         0       0       0       0       0       0       0
  6291 ;;      Locals:         0       0       7       0       0       0       0
  6292 ;;      Temps:          0       0       0       0       0       0       0
  6293 ;;      Totals:         0       0       7       0       0       0       0
  6294 ;;Total ram usage:        7 bytes
  6295 ;; Hardware stack levels used:    1
  6296 ;; Hardware stack levels required when called:    7
  6297 ;; This function calls:
  6298 ;;		Absolute function
  6299 ;;		_CRC8
  6300 ;;		_Receive_available
  6301 ;;		_Receive_get
  6302 ;;		_crcBufS_get
  6303 ;;		_crcBufS_status_put
  6304 ;; This function is called by:
  6305 ;;		_receiveData
  6306 ;; This function uses a non-reentrant model
  6307 ;;
  6308                           
  6309                           	psect	text15
  6310  000B8A                     __ptext15:
  6311                           	opt stack 0
  6312  000B8A                     _CRCcheck:
  6313                           	opt stack 21
  6314  000B8A                     l6746:
  6315  000B8A  D801               	call	u6248
  6316  000B8C  D00A               	goto	u6249
  6317  000B8E                     u6248:
  6318  000B8E  0005               	push	
  6319  000B90  6EFA               	movwf	pclath,c
  6320  000B92  5026               	movf	_serial_available,w,c
  6321  000B94  6EFD               	movwf	tosl,c
  6322  000B96  5027               	movf	_serial_available+1,w,c
  6323  000B98  6EFE               	movwf	tosh,c
  6324  000B9A  50F8               	movf	tblptru,w,c
  6325  000B9C  6EFF               	movwf	tosu,c
  6326  000B9E  50FA               	movf	pclath,w,c
  6327  000BA0  0012               	return		;indir
  6328  000BA2                     u6249:
  6329  000BA2  BE1E               	btfsc	?_Receive_available+1,7,c
  6330  000BA4  D7F2               	goto	l6746
  6331  000BA6  501E               	movf	?_Receive_available+1,w,c
  6332  000BA8  E104               	bnz	l6748
  6333  000BAA  0E04               	movlw	4
  6334  000BAC  5C1D               	subwf	?_Receive_available,w,c
  6335  000BAE  A0D8               	btfss	status,0,c
  6336  000BB0  D7EC               	goto	l6746
  6337  000BB2                     l6748:
  6338                           
  6339                           ;FastTransfer.c: 377: unsigned char arrayHolder[3];
  6340                           ;FastTransfer.c: 378: arrayHolder[0] = serial_read();
  6341  000BB2  D801               	call	u6268
  6342  000BB4  D00A               	goto	u6269
  6343  000BB6                     u6268:
  6344  000BB6  0005               	push	
  6345  000BB8  6EFA               	movwf	pclath,c
  6346  000BBA  5028               	movf	_serial_read,w,c
  6347  000BBC  6EFD               	movwf	tosl,c
  6348  000BBE  5029               	movf	_serial_read+1,w,c
  6349  000BC0  6EFE               	movwf	tosh,c
  6350  000BC2  50F8               	movf	tblptru,w,c
  6351  000BC4  6EFF               	movwf	tosu,c
  6352  000BC6  50FA               	movf	pclath,w,c
  6353  000BC8  0012               	return		;indir
  6354  000BCA                     u6269:
  6355  000BCA  0101               	movlb	1	; () banked
  6356  000BCC  6FFA               	movwf	CRCcheck@arrayHolder& (0+255),b
  6357                           
  6358                           ;FastTransfer.c: 379: arrayHolder[1] = serial_read();
  6359  000BCE  D801               	call	u6278
  6360  000BD0  D00A               	goto	u6279
  6361  000BD2                     u6278:
  6362  000BD2  0005               	push	
  6363  000BD4  6EFA               	movwf	pclath,c
  6364  000BD6  5028               	movf	_serial_read,w,c
  6365  000BD8  6EFD               	movwf	tosl,c
  6366  000BDA  5029               	movf	_serial_read+1,w,c
  6367  000BDC  6EFE               	movwf	tosh,c
  6368  000BDE  50F8               	movf	tblptru,w,c
  6369  000BE0  6EFF               	movwf	tosu,c
  6370  000BE2  50FA               	movf	pclath,w,c
  6371  000BE4  0012               	return		;indir
  6372  000BE6                     u6279:
  6373  000BE6  0101               	movlb	1	; () banked
  6374  000BE8  6FFB               	movwf	(CRCcheck@arrayHolder+1)& (0+255),b
  6375                           
  6376                           ;FastTransfer.c: 380: arrayHolder[2] = serial_read();
  6377  000BEA  D801               	call	u6288
  6378  000BEC  D00A               	goto	u6289
  6379  000BEE                     u6288:
  6380  000BEE  0005               	push	
  6381  000BF0  6EFA               	movwf	pclath,c
  6382  000BF2  5028               	movf	_serial_read,w,c
  6383  000BF4  6EFD               	movwf	tosl,c
  6384  000BF6  5029               	movf	_serial_read+1,w,c
  6385  000BF8  6EFE               	movwf	tosh,c
  6386  000BFA  50F8               	movf	tblptru,w,c
  6387  000BFC  6EFF               	movwf	tosu,c
  6388  000BFE  50FA               	movf	pclath,w,c
  6389  000C00  0012               	return		;indir
  6390  000C02                     u6289:
  6391  000C02  0101               	movlb	1	; () banked
  6392  000C04  6FFC               	movwf	(CRCcheck@arrayHolder+2)& (0+255),b
  6393                           
  6394                           ;FastTransfer.c: 381: unsigned char SentCRC = serial_read();
  6395  000C06  D801               	call	u6298
  6396  000C08  D00A               	goto	u6299
  6397  000C0A                     u6298:
  6398  000C0A  0005               	push	
  6399  000C0C  6EFA               	movwf	pclath,c
  6400  000C0E  5028               	movf	_serial_read,w,c
  6401  000C10  6EFD               	movwf	tosl,c
  6402  000C12  5029               	movf	_serial_read+1,w,c
  6403  000C14  6EFE               	movwf	tosh,c
  6404  000C16  50F8               	movf	tblptru,w,c
  6405  000C18  6EFF               	movwf	tosu,c
  6406  000C1A  50FA               	movf	pclath,w,c
  6407  000C1C  0012               	return		;indir
  6408  000C1E                     u6299:
  6409  000C1E  0101               	movlb	1	; () banked
  6410  000C20  6FF8               	movwf	CRCcheck@SentCRC& (0+255),b
  6411                           
  6412                           ; BSR set to: 1
  6413                           ;FastTransfer.c: 382: unsigned char calculatedCRC = CRC8(arrayHolder, 3);
  6414  000C22  0EFA               	movlw	low CRCcheck@arrayHolder
  6415  000C24  6E1B               	movwf	CRC8@data,c
  6416  000C26  0E01               	movlw	high CRCcheck@arrayHolder
  6417  000C28  6E1C               	movwf	CRC8@data+1,c
  6418  000C2A  0E03               	movlw	3
  6419  000C2C  6E1D               	movwf	CRC8@len,c
  6420  000C2E  EC0E  F00B         	call	_CRC8	;wreg free
  6421  000C32  0101               	movlb	1	; () banked
  6422  000C34  6FF9               	movwf	CRCcheck@calculatedCRC& (0+255),b
  6423                           
  6424                           ; BSR set to: 1
  6425                           ;FastTransfer.c: 385: if (SentCRC == calculatedCRC) {
  6426  000C36  0101               	movlb	1	; () banked
  6427  000C38  51F9               	movf	CRCcheck@calculatedCRC& (0+255),w,b
  6428  000C3A  0101               	movlb	1	; () banked
  6429  000C3C  19F8               	xorwf	CRCcheck@SentCRC& (0+255),w,b
  6430  000C3E  A4D8               	btfss	status,2,c
  6431  000C40  D04E               	goto	l6778
  6432                           
  6433                           ; BSR set to: 1
  6434                           ;FastTransfer.c: 387: int rt;
  6435                           ;FastTransfer.c: 388: for (rt = 0; rt < 5; rt++) {
  6436  000C42  0E00               	movlw	0
  6437  000C44  0101               	movlb	1	; () banked
  6438  000C46  6FFE               	movwf	(CRCcheck@rt+1)& (0+255),b
  6439  000C48  0E00               	movlw	0
  6440  000C4A  6FFD               	movwf	CRCcheck@rt& (0+255),b
  6441  000C4C                     l6756:
  6442                           
  6443                           ; BSR set to: 1
  6444  000C4C  0101               	movlb	1	; () banked
  6445  000C4E  BFFE               	btfsc	(CRCcheck@rt+1)& (0+255),7,b
  6446  000C50  D008               	goto	l6760
  6447  000C52  0101               	movlb	1	; () banked
  6448  000C54  51FE               	movf	(CRCcheck@rt+1)& (0+255),w,b
  6449  000C56  E147               	bnz	l826
  6450  000C58  0E05               	movlw	5
  6451  000C5A  0101               	movlb	1	; () banked
  6452  000C5C  5DFD               	subwf	CRCcheck@rt& (0+255),w,b
  6453  000C5E  B0D8               	btfsc	status,0,c
  6454  000C60  0012               	return	
  6455  000C62                     l6760:
  6456                           
  6457                           ; BSR set to: 1
  6458                           ;FastTransfer.c: 389: if (returnAddress == crcBufS_get(&crc_buffer, rt, 0)) {
  6459  000C62  0E86               	movlw	low _crc_buffer
  6460  000C64  6E1B               	movwf	crcBufS_get@_this,c
  6461  000C66  0E01               	movlw	high _crc_buffer
  6462  000C68  6E1C               	movwf	crcBufS_get@_this+1,c
  6463  000C6A  C1FD  F01D         	movff	CRCcheck@rt,crcBufS_get@time
  6464  000C6E  0E00               	movlw	0
  6465  000C70  6E1E               	movwf	crcBufS_get@space,c
  6466  000C72  EC35  F008         	call	_crcBufS_get	;wreg free
  6467  000C76  1833               	xorwf	_returnAddress,w,c
  6468  000C78  A4D8               	btfss	status,2,c
  6469  000C7A  D02D               	goto	l6774
  6470                           
  6471                           ;FastTransfer.c: 390: if (arrayHolder[2] == crcBufS_get(&crc_buffer, rt, 1)) {
  6472  000C7C  0E86               	movlw	low _crc_buffer
  6473  000C7E  6E1B               	movwf	crcBufS_get@_this,c
  6474  000C80  0E01               	movlw	high _crc_buffer
  6475  000C82  6E1C               	movwf	crcBufS_get@_this+1,c
  6476  000C84  C1FD  F01D         	movff	CRCcheck@rt,crcBufS_get@time
  6477  000C88  0E01               	movlw	1
  6478  000C8A  6E1E               	movwf	crcBufS_get@space,c
  6479  000C8C  EC35  F008         	call	_crcBufS_get	;wreg free
  6480  000C90  0101               	movlb	1	; () banked
  6481  000C92  19FC               	xorwf	(CRCcheck@arrayHolder+2)& (0+255),w,b
  6482  000C94  A4D8               	btfss	status,2,c
  6483  000C96  D01F               	goto	l6774
  6484                           
  6485                           ; BSR set to: 1
  6486                           ;FastTransfer.c: 391: if (arrayHolder[1] == 1) {
  6487  000C98  0101               	movlb	1	; () banked
  6488  000C9A  05FB               	decf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  6489  000C9C  A4D8               	btfss	status,2,c
  6490  000C9E  D00B               	goto	l6770
  6491                           
  6492                           ; BSR set to: 1
  6493                           ;FastTransfer.c: 392: crcBufS_status_put(&crc_buffer, rt, 1);
  6494  000CA0  0E86               	movlw	low _crc_buffer
  6495  000CA2  6E1B               	movwf	crcBufS_status_put@_this,c
  6496  000CA4  0E01               	movlw	high _crc_buffer
  6497  000CA6  6E1C               	movwf	crcBufS_status_put@_this+1,c
  6498  000CA8  C1FD  F01D         	movff	CRCcheck@rt,crcBufS_status_put@time
  6499  000CAC  0E01               	movlw	1
  6500  000CAE  6E1E               	movwf	crcBufS_status_put@status,c
  6501  000CB0  EC1A  F009         	call	_crcBufS_status_put	;wreg free
  6502                           
  6503                           ;FastTransfer.c: 393: break;
  6504  000CB4  0012               	return	
  6505  000CB6                     l6770:
  6506  000CB6  0E02               	movlw	2
  6507  000CB8  0101               	movlb	1	; () banked
  6508  000CBA  19FB               	xorwf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  6509  000CBC  A4D8               	btfss	status,2,c
  6510  000CBE  D00B               	goto	l6774
  6511                           
  6512                           ; BSR set to: 1
  6513                           ;FastTransfer.c: 395: crcBufS_status_put(&crc_buffer, rt, 2);
  6514  000CC0  0E86               	movlw	low _crc_buffer
  6515  000CC2  6E1B               	movwf	crcBufS_status_put@_this,c
  6516  000CC4  0E01               	movlw	high _crc_buffer
  6517  000CC6  6E1C               	movwf	crcBufS_status_put@_this+1,c
  6518  000CC8  C1FD  F01D         	movff	CRCcheck@rt,crcBufS_status_put@time
  6519  000CCC  0E02               	movlw	2
  6520  000CCE  6E1E               	movwf	crcBufS_status_put@status,c
  6521  000CD0  EC1A  F009         	call	_crcBufS_status_put	;wreg free
  6522                           
  6523                           ;FastTransfer.c: 396: break;
  6524  000CD4  0012               	return	
  6525  000CD6                     l6774:
  6526  000CD6  0101               	movlb	1	; () banked
  6527  000CD8  4BFD               	infsnz	CRCcheck@rt& (0+255),f,b
  6528  000CDA  2BFE               	incf	(CRCcheck@rt+1)& (0+255),f,b
  6529  000CDC  D7B7               	goto	l6756
  6530  000CDE                     l6778:
  6531                           
  6532                           ; BSR set to: 1
  6533                           ;FastTransfer.c: 402: crcErrorCounter++;
  6534  000CDE  0100               	movlb	0	; () banked
  6535  000CE0  4BC7               	infsnz	_crcErrorCounter& (0+255),f,b
  6536  000CE2  2BC8               	incf	(_crcErrorCounter+1)& (0+255),f,b
  6537  000CE4  0012               	return	
  6538  000CE6                     l826:
  6539  000CE6  0012               	return		;funcret
  6540  000CE8                     __end_of_CRCcheck:
  6541                           	opt stack 0
  6542                           tosu	equ	0xFFF
  6543                           tosh	equ	0xFFE
  6544                           tosl	equ	0xFFD
  6545                           pclath	equ	0xFFA
  6546                           tblptru	equ	0xFF8
  6547                           tblptrh	equ	0xFF7
  6548                           tblptrl	equ	0xFF6
  6549                           tablat	equ	0xFF5
  6550                           prodh	equ	0xFF4
  6551                           prodl	equ	0xFF3
  6552                           intcon	equ	0xFF2
  6553                           postinc0	equ	0xFEE
  6554                           wreg	equ	0xFE8
  6555                           postdec1	equ	0xFE5
  6556                           fsr1h	equ	0xFE2
  6557                           fsr1l	equ	0xFE1
  6558                           indf2	equ	0xFDF
  6559                           postinc2	equ	0xFDE
  6560                           postdec2	equ	0xFDD
  6561                           plusw2	equ	0xFDB
  6562                           fsr2h	equ	0xFDA
  6563                           fsr2l	equ	0xFD9
  6564                           status	equ	0xFD8
  6565                           
  6566 ;; *************** function _crcBufS_status_put *****************
  6567 ;; Defined at:
  6568 ;;		line 336 in file "FastTransfer.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  6571 ;;		 -> crc_buffer(17), 
  6572 ;;  time            1   28[COMRAM] unsigned char 
  6573 ;;  status          1   29[COMRAM] unsigned char 
  6574 ;; Auto vars:     Size  Location     Type
  6575 ;;  wantedTime      2   34[COMRAM] int 
  6576 ;; Return value:  Size  Location     Type
  6577 ;;		None               void
  6578 ;; Registers used:
  6579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6580 ;; Tracked objects:
  6581 ;;		On entry : 0/0
  6582 ;;		On exit  : 0/0
  6583 ;;		Unchanged: 0/0
  6584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6585 ;;      Params:         4       0       0       0       0       0       0
  6586 ;;      Locals:         2       0       0       0       0       0       0
  6587 ;;      Temps:          4       0       0       0       0       0       0
  6588 ;;      Totals:        10       0       0       0       0       0       0
  6589 ;;Total ram usage:       10 bytes
  6590 ;; Hardware stack levels used:    1
  6591 ;; Hardware stack levels required when called:    4
  6592 ;; This function calls:
  6593 ;;		Nothing
  6594 ;; This function is called by:
  6595 ;;		_CRCcheck
  6596 ;; This function uses a non-reentrant model
  6597 ;;
  6598                           
  6599                           	psect	text16
  6600  001234                     __ptext16:
  6601                           	opt stack 0
  6602  001234                     _crcBufS_status_put:
  6603                           	opt stack 23
  6604                           
  6605                           ;FastTransfer.c: 337: if (time >= 5) {
  6606                           
  6607                           ;incstack = 0
  6608  001234  0E04               	movlw	4
  6609  001236  641D               	cpfsgt	crcBufS_status_put@time,c
  6610  001238  D002               	goto	l6700
  6611                           
  6612                           ;FastTransfer.c: 338: time = 5 - 1;
  6613  00123A  0E04               	movlw	4
  6614  00123C  6E1D               	movwf	crcBufS_status_put@time,c
  6615  00123E                     l6700:
  6616                           
  6617                           ;FastTransfer.c: 339: }
  6618                           ;FastTransfer.c: 340: time = time + 1;
  6619  00123E  281D               	incf	crcBufS_status_put@time,w,c
  6620  001240  6E1D               	movwf	crcBufS_status_put@time,c
  6621                           
  6622                           ;FastTransfer.c: 341: int wantedTime = time * 3;
  6623  001242  501D               	movf	crcBufS_status_put@time,w,c
  6624  001244  0D03               	mullw	3
  6625  001246  CFF3 F023          	movff	prodl,crcBufS_status_put@wantedTime
  6626  00124A  CFF4 F024          	movff	prodh,crcBufS_status_put@wantedTime+1
  6627                           
  6628                           ;FastTransfer.c: 342: if (wantedTime > _this->head) {
  6629  00124E  EE20 F00F          	lfsr	2,15
  6630  001252  501B               	movf	crcBufS_status_put@_this,w,c
  6631  001254  26D9               	addwf	fsr2l,f,c
  6632  001256  501C               	movf	crcBufS_status_put@_this+1,w,c
  6633  001258  22DA               	addwfc	fsr2h,f,c
  6634  00125A  5023               	movf	crcBufS_status_put@wantedTime,w,c
  6635  00125C  5CDE               	subwf	postinc2,w,c
  6636  00125E  50DE               	movf	postinc2,w,c
  6637  001260  0A80               	xorlw	128
  6638  001262  6E21               	movwf	(??_crcBufS_status_put+2)& (0+255),c
  6639  001264  5024               	movf	crcBufS_status_put@wantedTime+1,w,c
  6640  001266  0A80               	xorlw	128
  6641  001268  5821               	subwfb	(??_crcBufS_status_put+2)& (0+255),w,c
  6642  00126A  B0D8               	btfsc	status,0,c
  6643  00126C  D02B               	goto	l6708
  6644                           
  6645                           ;FastTransfer.c: 343: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  6646  00126E  EE20 F00F          	lfsr	2,15
  6647  001272  501B               	movf	crcBufS_status_put@_this,w,c
  6648  001274  26D9               	addwf	fsr2l,f,c
  6649  001276  501C               	movf	crcBufS_status_put@_this+1,w,c
  6650  001278  22DA               	addwfc	fsr2h,f,c
  6651  00127A  CFDE F01F          	movff	postinc2,??_crcBufS_status_put
  6652  00127E  CFDD F020          	movff	postdec2,??_crcBufS_status_put+1
  6653  001282  1E1F               	comf	??_crcBufS_status_put,f,c
  6654  001284  1E20               	comf	??_crcBufS_status_put+1,f,c
  6655  001286  4A1F               	infsnz	??_crcBufS_status_put,f,c
  6656  001288  2A20               	incf	??_crcBufS_status_put+1,f,c
  6657  00128A  5023               	movf	crcBufS_status_put@wantedTime,w,c
  6658  00128C  261F               	addwf	??_crcBufS_status_put,f,c
  6659  00128E  5024               	movf	crcBufS_status_put@wantedTime+1,w,c
  6660  001290  2220               	addwfc	??_crcBufS_status_put+1,f,c
  6661  001292  1E1F               	comf	??_crcBufS_status_put,f,c
  6662  001294  1E20               	comf	??_crcBufS_status_put+1,f,c
  6663  001296  4A1F               	infsnz	??_crcBufS_status_put,f,c
  6664  001298  2A20               	incf	??_crcBufS_status_put+1,f,c
  6665  00129A  0E0F               	movlw	15
  6666  00129C  241F               	addwf	??_crcBufS_status_put,w,c
  6667  00129E  6E23               	movwf	crcBufS_status_put@wantedTime,c
  6668  0012A0  0E00               	movlw	0
  6669  0012A2  2020               	addwfc	??_crcBufS_status_put+1,w,c
  6670  0012A4  6E24               	movwf	crcBufS_status_put@wantedTime+1,c
  6671                           
  6672                           ;FastTransfer.c: 344: _this->buf[(wantedTime + 2)] = status;
  6673  0012A6  0E02               	movlw	2
  6674  0012A8  2423               	addwf	crcBufS_status_put@wantedTime,w,c
  6675  0012AA  6E1F               	movwf	??_crcBufS_status_put& (0+255),c
  6676  0012AC  0E00               	movlw	0
  6677  0012AE  2024               	addwfc	crcBufS_status_put@wantedTime+1,w,c
  6678  0012B0  6E20               	movwf	(??_crcBufS_status_put+1)& (0+255),c
  6679  0012B2  501F               	movf	??_crcBufS_status_put,w,c
  6680  0012B4  241B               	addwf	crcBufS_status_put@_this,w,c
  6681  0012B6  6ED9               	movwf	fsr2l,c
  6682  0012B8  5020               	movf	??_crcBufS_status_put+1,w,c
  6683  0012BA  201C               	addwfc	crcBufS_status_put@_this+1,w,c
  6684  0012BC  6EDA               	movwf	fsr2h,c
  6685  0012BE  C01E  FFDF         	movff	crcBufS_status_put@status,indf2
  6686                           
  6687                           ;FastTransfer.c: 345: } else {
  6688  0012C2  0012               	return	
  6689  0012C4                     l6708:
  6690                           
  6691                           ;FastTransfer.c: 346: _this->buf[(_this->head - wantedTime) + 2] = status;
  6692  0012C4  EE20 F00F          	lfsr	2,15
  6693  0012C8  501B               	movf	crcBufS_status_put@_this,w,c
  6694  0012CA  26D9               	addwf	fsr2l,f,c
  6695  0012CC  501C               	movf	crcBufS_status_put@_this+1,w,c
  6696  0012CE  22DA               	addwfc	fsr2h,f,c
  6697  0012D0  CFDE F01F          	movff	postinc2,??_crcBufS_status_put
  6698  0012D4  CFDD F020          	movff	postdec2,??_crcBufS_status_put+1
  6699  0012D8  C023  F021         	movff	crcBufS_status_put@wantedTime,??_crcBufS_status_put+2
  6700  0012DC  C024  F022         	movff	crcBufS_status_put@wantedTime+1,??_crcBufS_status_put+3
  6701  0012E0  1E21               	comf	??_crcBufS_status_put+2,f,c
  6702  0012E2  1E22               	comf	??_crcBufS_status_put+3,f,c
  6703  0012E4  4A21               	infsnz	??_crcBufS_status_put+2,f,c
  6704  0012E6  2A22               	incf	??_crcBufS_status_put+3,f,c
  6705  0012E8  501F               	movf	??_crcBufS_status_put,w,c
  6706  0012EA  2621               	addwf	??_crcBufS_status_put+2,f,c
  6707  0012EC  5020               	movf	??_crcBufS_status_put+1,w,c
  6708  0012EE  2222               	addwfc	??_crcBufS_status_put+3,f,c
  6709  0012F0  0E02               	movlw	2
  6710  0012F2  2621               	addwf	??_crcBufS_status_put+2,f,c
  6711  0012F4  0E00               	movlw	0
  6712  0012F6  2222               	addwfc	??_crcBufS_status_put+3,f,c
  6713  0012F8  5021               	movf	??_crcBufS_status_put+2,w,c
  6714  0012FA  241B               	addwf	crcBufS_status_put@_this,w,c
  6715  0012FC  6ED9               	movwf	fsr2l,c
  6716  0012FE  5022               	movf	??_crcBufS_status_put+3,w,c
  6717  001300  201C               	addwfc	crcBufS_status_put@_this+1,w,c
  6718  001302  6EDA               	movwf	fsr2h,c
  6719  001304  C01E  FFDF         	movff	crcBufS_status_put@status,indf2
  6720  001308  0012               	return	
  6721  00130A                     __end_of_crcBufS_status_put:
  6722                           	opt stack 0
  6723                           tosu	equ	0xFFF
  6724                           tosh	equ	0xFFE
  6725                           tosl	equ	0xFFD
  6726                           pclath	equ	0xFFA
  6727                           tblptru	equ	0xFF8
  6728                           tblptrh	equ	0xFF7
  6729                           tblptrl	equ	0xFF6
  6730                           tablat	equ	0xFF5
  6731                           prodh	equ	0xFF4
  6732                           prodl	equ	0xFF3
  6733                           intcon	equ	0xFF2
  6734                           postinc0	equ	0xFEE
  6735                           wreg	equ	0xFE8
  6736                           postdec1	equ	0xFE5
  6737                           fsr1h	equ	0xFE2
  6738                           fsr1l	equ	0xFE1
  6739                           indf2	equ	0xFDF
  6740                           postinc2	equ	0xFDE
  6741                           postdec2	equ	0xFDD
  6742                           plusw2	equ	0xFDB
  6743                           fsr2h	equ	0xFDA
  6744                           fsr2l	equ	0xFD9
  6745                           status	equ	0xFD8
  6746                           
  6747 ;; *************** function _crcBufS_get *****************
  6748 ;; Defined at:
  6749 ;;		line 353 in file "FastTransfer.c"
  6750 ;; Parameters:    Size  Location     Type
  6751 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  6752 ;;		 -> crc_buffer(17), 
  6753 ;;  time            1   28[COMRAM] unsigned char 
  6754 ;;  space           1   29[COMRAM] unsigned char 
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;  wantedTime      2    0[BANK1 ] int 
  6757 ;; Return value:  Size  Location     Type
  6758 ;;                  1    wreg      unsigned char 
  6759 ;; Registers used:
  6760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6761 ;; Tracked objects:
  6762 ;;		On entry : 0/0
  6763 ;;		On exit  : 0/0
  6764 ;;		Unchanged: 0/0
  6765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6766 ;;      Params:         4       0       0       0       0       0       0
  6767 ;;      Locals:         0       0       2       0       0       0       0
  6768 ;;      Temps:          6       0       0       0       0       0       0
  6769 ;;      Totals:        10       0       2       0       0       0       0
  6770 ;;Total ram usage:       12 bytes
  6771 ;; Hardware stack levels used:    1
  6772 ;; Hardware stack levels required when called:    4
  6773 ;; This function calls:
  6774 ;;		Nothing
  6775 ;; This function is called by:
  6776 ;;		_CRCcheck
  6777 ;;		_AKNAK
  6778 ;; This function uses a non-reentrant model
  6779 ;;
  6780                           
  6781                           	psect	text17
  6782  00106A                     __ptext17:
  6783                           	opt stack 0
  6784  00106A                     _crcBufS_get:
  6785                           	opt stack 23
  6786                           
  6787                           ;FastTransfer.c: 354: if (time >= 5) {
  6788                           
  6789                           ;incstack = 0
  6790  00106A  0E04               	movlw	4
  6791  00106C  641D               	cpfsgt	crcBufS_get@time,c
  6792  00106E  D002               	goto	l6676
  6793                           
  6794                           ;FastTransfer.c: 355: time = 5 - 1;
  6795  001070  0E04               	movlw	4
  6796  001072  6E1D               	movwf	crcBufS_get@time,c
  6797  001074                     l6676:
  6798                           
  6799                           ;FastTransfer.c: 356: }
  6800                           ;FastTransfer.c: 357: if (space >= 3) {
  6801  001074  0E02               	movlw	2
  6802  001076  641E               	cpfsgt	crcBufS_get@space,c
  6803  001078  D002               	goto	l6680
  6804                           
  6805                           ;FastTransfer.c: 358: space = 3 - 1;
  6806  00107A  0E02               	movlw	2
  6807  00107C  6E1E               	movwf	crcBufS_get@space,c
  6808  00107E                     l6680:
  6809                           
  6810                           ;FastTransfer.c: 359: }
  6811                           ;FastTransfer.c: 360: time = time + 1;
  6812  00107E  281D               	incf	crcBufS_get@time,w,c
  6813  001080  6E1D               	movwf	crcBufS_get@time,c
  6814                           
  6815                           ;FastTransfer.c: 361: int wantedTime = time * 3;
  6816  001082  501D               	movf	crcBufS_get@time,w,c
  6817  001084  0D03               	mullw	3
  6818  001086  CFF3 F1F6          	movff	prodl,crcBufS_get@wantedTime
  6819  00108A  CFF4 F1F7          	movff	prodh,crcBufS_get@wantedTime+1
  6820                           
  6821                           ;FastTransfer.c: 362: if (wantedTime > _this->head) {
  6822  00108E  EE20 F00F          	lfsr	2,15
  6823  001092  501B               	movf	crcBufS_get@_this,w,c
  6824  001094  26D9               	addwf	fsr2l,f,c
  6825  001096  501C               	movf	crcBufS_get@_this+1,w,c
  6826  001098  22DA               	addwfc	fsr2h,f,c
  6827  00109A  0101               	movlb	1	; () banked
  6828  00109C  51F6               	movf	crcBufS_get@wantedTime& (0+255),w,b
  6829  00109E  5CDE               	subwf	postinc2,w,c
  6830  0010A0  50DE               	movf	postinc2,w,c
  6831  0010A2  0A80               	xorlw	128
  6832  0010A4  6E21               	movwf	(??_crcBufS_get+2)& (0+255),c
  6833  0010A6  0101               	movlb	1	; () banked
  6834  0010A8  51F7               	movf	(crcBufS_get@wantedTime+1)& (0+255),w,b
  6835  0010AA  0A80               	xorlw	128
  6836  0010AC  5821               	subwfb	(??_crcBufS_get+2)& (0+255),w,c
  6837  0010AE  B0D8               	btfsc	status,0,c
  6838  0010B0  D030               	goto	l6692
  6839                           
  6840                           ; BSR set to: 1
  6841                           ;FastTransfer.c: 363: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  6842  0010B2  EE20 F00F          	lfsr	2,15
  6843  0010B6  501B               	movf	crcBufS_get@_this,w,c
  6844  0010B8  26D9               	addwf	fsr2l,f,c
  6845  0010BA  501C               	movf	crcBufS_get@_this+1,w,c
  6846  0010BC  22DA               	addwfc	fsr2h,f,c
  6847  0010BE  CFDE F01F          	movff	postinc2,??_crcBufS_get
  6848  0010C2  CFDD F020          	movff	postdec2,??_crcBufS_get+1
  6849  0010C6  1E1F               	comf	??_crcBufS_get,f,c
  6850  0010C8  1E20               	comf	??_crcBufS_get+1,f,c
  6851  0010CA  4A1F               	infsnz	??_crcBufS_get,f,c
  6852  0010CC  2A20               	incf	??_crcBufS_get+1,f,c
  6853  0010CE  0101               	movlb	1	; () banked
  6854  0010D0  51F6               	movf	crcBufS_get@wantedTime& (0+255),w,b
  6855  0010D2  261F               	addwf	??_crcBufS_get,f,c
  6856  0010D4  0101               	movlb	1	; () banked
  6857  0010D6  51F7               	movf	(crcBufS_get@wantedTime+1)& (0+255),w,b
  6858  0010D8  2220               	addwfc	??_crcBufS_get+1,f,c
  6859  0010DA  1E1F               	comf	??_crcBufS_get,f,c
  6860  0010DC  1E20               	comf	??_crcBufS_get+1,f,c
  6861  0010DE  4A1F               	infsnz	??_crcBufS_get,f,c
  6862  0010E0  2A20               	incf	??_crcBufS_get+1,f,c
  6863  0010E2  0E0F               	movlw	15
  6864  0010E4  241F               	addwf	??_crcBufS_get,w,c
  6865  0010E6  0101               	movlb	1	; () banked
  6866  0010E8  6FF6               	movwf	crcBufS_get@wantedTime& (0+255),b
  6867  0010EA  0E00               	movlw	0
  6868  0010EC  2020               	addwfc	??_crcBufS_get+1,w,c
  6869  0010EE  0101               	movlb	1	; () banked
  6870  0010F0  6FF7               	movwf	(crcBufS_get@wantedTime+1)& (0+255),b
  6871                           
  6872                           ;FastTransfer.c: 364: return (_this->buf[(wantedTime + space)]);
  6873  0010F2  501E               	movf	crcBufS_get@space,w,c
  6874  0010F4  0101               	movlb	1	; () banked
  6875  0010F6  25F6               	addwf	crcBufS_get@wantedTime& (0+255),w,b
  6876  0010F8  6E1F               	movwf	??_crcBufS_get& (0+255),c
  6877  0010FA  0E00               	movlw	0
  6878  0010FC  0101               	movlb	1	; () banked
  6879  0010FE  21F7               	addwfc	(crcBufS_get@wantedTime+1)& (0+255),w,b
  6880  001100  6E20               	movwf	(??_crcBufS_get+1)& (0+255),c
  6881  001102  501F               	movf	??_crcBufS_get,w,c
  6882  001104  241B               	addwf	crcBufS_get@_this,w,c
  6883  001106  6ED9               	movwf	fsr2l,c
  6884  001108  5020               	movf	??_crcBufS_get+1,w,c
  6885  00110A  201C               	addwfc	crcBufS_get@_this+1,w,c
  6886  00110C  6EDA               	movwf	fsr2h,c
  6887  00110E  50DF               	movf	indf2,w,c
  6888                           
  6889                           ; BSR set to: 1
  6890                           ;FastTransfer.c: 365: } else {
  6891                           
  6892                           ; BSR set to: 1
  6893  001110  0012               	return	
  6894  001112                     l6692:
  6895                           
  6896                           ; BSR set to: 1
  6897                           ;FastTransfer.c: 366: return (_this->buf[(_this->head - wantedTime) + space]);
  6898  001112  EE20 F00F          	lfsr	2,15
  6899  001116  501B               	movf	crcBufS_get@_this,w,c
  6900  001118  26D9               	addwf	fsr2l,f,c
  6901  00111A  501C               	movf	crcBufS_get@_this+1,w,c
  6902  00111C  22DA               	addwfc	fsr2h,f,c
  6903  00111E  CFDE F01F          	movff	postinc2,??_crcBufS_get
  6904  001122  CFDD F020          	movff	postdec2,??_crcBufS_get+1
  6905  001126  C1F6  F021         	movff	crcBufS_get@wantedTime,??_crcBufS_get+2
  6906  00112A  C1F7  F022         	movff	crcBufS_get@wantedTime+1,??_crcBufS_get+3
  6907  00112E  1E21               	comf	??_crcBufS_get+2,f,c
  6908  001130  1E22               	comf	??_crcBufS_get+3,f,c
  6909  001132  4A21               	infsnz	??_crcBufS_get+2,f,c
  6910  001134  2A22               	incf	??_crcBufS_get+3,f,c
  6911  001136  501E               	movf	crcBufS_get@space,w,c
  6912  001138  6E23               	movwf	(??_crcBufS_get+4)& (0+255),c
  6913  00113A  6A24               	clrf	(??_crcBufS_get+5)& (0+255),c
  6914  00113C  5021               	movf	??_crcBufS_get+2,w,c
  6915  00113E  2623               	addwf	??_crcBufS_get+4,f,c
  6916  001140  5022               	movf	??_crcBufS_get+3,w,c
  6917  001142  2224               	addwfc	??_crcBufS_get+5,f,c
  6918  001144  501F               	movf	??_crcBufS_get,w,c
  6919  001146  2623               	addwf	??_crcBufS_get+4,f,c
  6920  001148  5020               	movf	??_crcBufS_get+1,w,c
  6921  00114A  2224               	addwfc	??_crcBufS_get+5,f,c
  6922  00114C  5023               	movf	??_crcBufS_get+4,w,c
  6923  00114E  241B               	addwf	crcBufS_get@_this,w,c
  6924  001150  6ED9               	movwf	fsr2l,c
  6925  001152  5024               	movf	??_crcBufS_get+5,w,c
  6926  001154  201C               	addwfc	crcBufS_get@_this+1,w,c
  6927  001156  6EDA               	movwf	fsr2h,c
  6928  001158  50DF               	movf	indf2,w,c
  6929                           
  6930                           ; BSR set to: 1
  6931  00115A  0012               	return	
  6932  00115C                     __end_of_crcBufS_get:
  6933                           	opt stack 0
  6934                           tosu	equ	0xFFF
  6935                           tosh	equ	0xFFE
  6936                           tosl	equ	0xFFD
  6937                           pclath	equ	0xFFA
  6938                           tblptru	equ	0xFF8
  6939                           tblptrh	equ	0xFF7
  6940                           tblptrl	equ	0xFF6
  6941                           tablat	equ	0xFF5
  6942                           prodh	equ	0xFF4
  6943                           prodl	equ	0xFF3
  6944                           intcon	equ	0xFF2
  6945                           postinc0	equ	0xFEE
  6946                           wreg	equ	0xFE8
  6947                           postdec1	equ	0xFE5
  6948                           fsr1h	equ	0xFE2
  6949                           fsr1l	equ	0xFE1
  6950                           indf2	equ	0xFDF
  6951                           postinc2	equ	0xFDE
  6952                           postdec2	equ	0xFDD
  6953                           plusw2	equ	0xFDB
  6954                           fsr2h	equ	0xFDA
  6955                           fsr2l	equ	0xFD9
  6956                           status	equ	0xFD8
  6957                           
  6958 ;; *************** function _Receive_get *****************
  6959 ;; Defined at:
  6960 ;;		line 181 in file "mcc_generated_files/eusart1.c"
  6961 ;; Parameters:    Size  Location     Type
  6962 ;;		None
  6963 ;; Auto vars:     Size  Location     Type
  6964 ;;		None
  6965 ;; Return value:  Size  Location     Type
  6966 ;;                  1    wreg      unsigned char 
  6967 ;; Registers used:
  6968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6969 ;; Tracked objects:
  6970 ;;		On entry : 0/0
  6971 ;;		On exit  : 0/0
  6972 ;;		Unchanged: 0/0
  6973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6974 ;;      Params:         0       0       0       0       0       0       0
  6975 ;;      Locals:         0       0       0       0       0       0       0
  6976 ;;      Temps:          0       0       0       0       0       0       0
  6977 ;;      Totals:         0       0       0       0       0       0       0
  6978 ;;Total ram usage:        0 bytes
  6979 ;; Hardware stack levels used:    1
  6980 ;; Hardware stack levels required when called:    6
  6981 ;; This function calls:
  6982 ;;		_UART_buff_get
  6983 ;; This function is called by:
  6984 ;;		_getch
  6985 ;;		_CommsStart
  6986 ;;		_CRCcheck
  6987 ;;		_receiveData
  6988 ;; This function uses a non-reentrant model
  6989 ;;
  6990                           
  6991                           	psect	text18
  6992  001AF2                     __ptext18:
  6993                           	opt stack 0
  6994  001AF2                     _Receive_get:
  6995                           	opt stack 22
  6996                           
  6997                           ;eusart1.c: 182: return UART_buff_get(&input_buffer);
  6998                           
  6999                           ; BSR set to: 1
  7000                           ;incstack = 0
  7001  001AF2  0E00               	movlw	low _input_buffer
  7002  001AF4  6E21               	movwf	UART_buff_get@_this,c
  7003  001AF6  0E04               	movlw	high _input_buffer
  7004  001AF8  6E22               	movwf	UART_buff_get@_this+1,c
  7005  001AFA  ECEA  F009         	call	_UART_buff_get	;wreg free
  7006  001AFE  0012               	return	
  7007  001B00                     __end_of_Receive_get:
  7008                           	opt stack 0
  7009                           tosu	equ	0xFFF
  7010                           tosh	equ	0xFFE
  7011                           tosl	equ	0xFFD
  7012                           pclath	equ	0xFFA
  7013                           tblptru	equ	0xFF8
  7014                           tblptrh	equ	0xFF7
  7015                           tblptrl	equ	0xFF6
  7016                           tablat	equ	0xFF5
  7017                           prodh	equ	0xFF4
  7018                           prodl	equ	0xFF3
  7019                           intcon	equ	0xFF2
  7020                           postinc0	equ	0xFEE
  7021                           wreg	equ	0xFE8
  7022                           postdec1	equ	0xFE5
  7023                           fsr1h	equ	0xFE2
  7024                           fsr1l	equ	0xFE1
  7025                           indf2	equ	0xFDF
  7026                           postinc2	equ	0xFDE
  7027                           postdec2	equ	0xFDD
  7028                           plusw2	equ	0xFDB
  7029                           fsr2h	equ	0xFDA
  7030                           fsr2l	equ	0xFD9
  7031                           status	equ	0xFD8
  7032                           
  7033 ;; *************** function _UART_buff_get *****************
  7034 ;; Defined at:
  7035 ;;		line 136 in file "mcc_generated_files/eusart1.c"
  7036 ;; Parameters:    Size  Location     Type
  7037 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  7038 ;;		 -> output_buffer(206), input_buffer(206), 
  7039 ;; Auto vars:     Size  Location     Type
  7040 ;;  c               1   36[COMRAM] unsigned char 
  7041 ;; Return value:  Size  Location     Type
  7042 ;;                  1    wreg      unsigned char 
  7043 ;; Registers used:
  7044 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7045 ;; Tracked objects:
  7046 ;;		On entry : 0/0
  7047 ;;		On exit  : 0/0
  7048 ;;		Unchanged: 0/0
  7049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7050 ;;      Params:         2       0       0       0       0       0       0
  7051 ;;      Locals:         1       0       0       0       0       0       0
  7052 ;;      Temps:          2       0       0       0       0       0       0
  7053 ;;      Totals:         5       0       0       0       0       0       0
  7054 ;;Total ram usage:        5 bytes
  7055 ;; Hardware stack levels used:    1
  7056 ;; Hardware stack levels required when called:    5
  7057 ;; This function calls:
  7058 ;;		_UART_buff_modulo_inc
  7059 ;; This function is called by:
  7060 ;;		_Receive_get
  7061 ;;		_Send_put
  7062 ;; This function uses a non-reentrant model
  7063 ;;
  7064                           
  7065                           	psect	text19
  7066  0013D4                     __ptext19:
  7067                           	opt stack 0
  7068  0013D4                     _UART_buff_get:
  7069                           	opt stack 21
  7070                           
  7071                           ;eusart1.c: 137: unsigned char c;
  7072                           ;eusart1.c: 138: if (_this->count > 0) {
  7073                           
  7074                           ;incstack = 0
  7075  0013D4  EE20 F0CC          	lfsr	2,204
  7076  0013D8  5021               	movf	UART_buff_get@_this,w,c
  7077  0013DA  26D9               	addwf	fsr2l,f,c
  7078  0013DC  5022               	movf	UART_buff_get@_this+1,w,c
  7079  0013DE  22DA               	addwfc	fsr2h,f,c
  7080  0013E0  0E01               	movlw	1
  7081  0013E2  BEDB               	btfsc	plusw2,7,c
  7082  0013E4  D03C               	goto	l6582
  7083  0013E6  0E01               	movlw	1
  7084  0013E8  50DB               	movf	plusw2,w,c
  7085  0013EA  E103               	bnz	u6020
  7086  0013EC  04DE               	decf	postinc2,w,c
  7087  0013EE  A0D8               	btfss	status,0,c
  7088  0013F0  D036               	goto	l6582
  7089  0013F2                     u6020:
  7090                           
  7091                           ;eusart1.c: 139: c = _this->buf[_this->tail];
  7092  0013F2  EE20 F0CA          	lfsr	2,202
  7093  0013F6  5021               	movf	UART_buff_get@_this,w,c
  7094  0013F8  26D9               	addwf	fsr2l,f,c
  7095  0013FA  5022               	movf	UART_buff_get@_this+1,w,c
  7096  0013FC  22DA               	addwfc	fsr2h,f,c
  7097  0013FE  CFDE F023          	movff	postinc2,??_UART_buff_get
  7098  001402  CFDD F024          	movff	postdec2,??_UART_buff_get+1
  7099  001406  5023               	movf	??_UART_buff_get,w,c
  7100  001408  2421               	addwf	UART_buff_get@_this,w,c
  7101  00140A  6ED9               	movwf	fsr2l,c
  7102  00140C  5024               	movf	??_UART_buff_get+1,w,c
  7103  00140E  2022               	addwfc	UART_buff_get@_this+1,w,c
  7104  001410  6EDA               	movwf	fsr2h,c
  7105  001412  50DF               	movf	indf2,w,c
  7106  001414  6E25               	movwf	UART_buff_get@c,c
  7107                           
  7108                           ;eusart1.c: 140: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  7109  001416  EE20 F0CA          	lfsr	2,202
  7110  00141A  5021               	movf	UART_buff_get@_this,w,c
  7111  00141C  26D9               	addwf	fsr2l,f,c
  7112  00141E  5022               	movf	UART_buff_get@_this+1,w,c
  7113  001420  22DA               	addwfc	fsr2h,f,c
  7114  001422  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  7115  001426  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  7116  00142A  0E00               	movlw	0
  7117  00142C  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  7118  00142E  0EC8               	movlw	200
  7119  001430  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  7120  001432  EC5F  F00C         	call	_UART_buff_modulo_inc	;wreg free
  7121  001436  EE20 F0CA          	lfsr	2,202
  7122  00143A  5021               	movf	UART_buff_get@_this,w,c
  7123  00143C  26D9               	addwf	fsr2l,f,c
  7124  00143E  5022               	movf	UART_buff_get@_this+1,w,c
  7125  001440  22DA               	addwfc	fsr2h,f,c
  7126  001442  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  7127  001446  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  7128                           
  7129                           ;eusart1.c: 141: --_this->count;
  7130  00144A  EE20 F0CC          	lfsr	2,204
  7131  00144E  5021               	movf	UART_buff_get@_this,w,c
  7132  001450  26D9               	addwf	fsr2l,f,c
  7133  001452  5022               	movf	UART_buff_get@_this+1,w,c
  7134  001454  22DA               	addwfc	fsr2h,f,c
  7135  001456  06DE               	decf	postinc2,f,c
  7136  001458  0E00               	movlw	0
  7137  00145A  5ADD               	subwfb	postdec2,f,c
  7138                           
  7139                           ;eusart1.c: 142: } else {
  7140  00145C  D002               	goto	l303
  7141  00145E                     l6582:
  7142                           
  7143                           ;eusart1.c: 143: c = 0;
  7144  00145E  0E00               	movlw	0
  7145  001460  6E25               	movwf	UART_buff_get@c,c
  7146  001462                     l303:
  7147                           
  7148                           ;eusart1.c: 144: }
  7149                           ;eusart1.c: 145: return (c);
  7150  001462  5025               	movf	UART_buff_get@c,w,c
  7151  001464  0012               	return	
  7152  001466                     __end_of_UART_buff_get:
  7153                           	opt stack 0
  7154                           tosu	equ	0xFFF
  7155                           tosh	equ	0xFFE
  7156                           tosl	equ	0xFFD
  7157                           pclath	equ	0xFFA
  7158                           tblptru	equ	0xFF8
  7159                           tblptrh	equ	0xFF7
  7160                           tblptrl	equ	0xFF6
  7161                           tablat	equ	0xFF5
  7162                           prodh	equ	0xFF4
  7163                           prodl	equ	0xFF3
  7164                           intcon	equ	0xFF2
  7165                           postinc0	equ	0xFEE
  7166                           wreg	equ	0xFE8
  7167                           postdec1	equ	0xFE5
  7168                           fsr1h	equ	0xFE2
  7169                           fsr1l	equ	0xFE1
  7170                           indf2	equ	0xFDF
  7171                           postinc2	equ	0xFDE
  7172                           postdec2	equ	0xFDD
  7173                           plusw2	equ	0xFDB
  7174                           fsr2h	equ	0xFDA
  7175                           fsr2l	equ	0xFD9
  7176                           status	equ	0xFD8
  7177                           
  7178 ;; *************** function _UART_buff_modulo_inc *****************
  7179 ;; Defined at:
  7180 ;;		line 161 in file "mcc_generated_files/eusart1.c"
  7181 ;; Parameters:    Size  Location     Type
  7182 ;;  value           2   26[COMRAM] const unsigned int 
  7183 ;;  modulus         2   28[COMRAM] const unsigned int 
  7184 ;; Auto vars:     Size  Location     Type
  7185 ;;  my_value        2   30[COMRAM] unsigned int 
  7186 ;; Return value:  Size  Location     Type
  7187 ;;                  2   26[COMRAM] unsigned int 
  7188 ;; Registers used:
  7189 ;;		wreg, status,2, status,0
  7190 ;; Tracked objects:
  7191 ;;		On entry : 0/0
  7192 ;;		On exit  : 0/0
  7193 ;;		Unchanged: 0/0
  7194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7195 ;;      Params:         4       0       0       0       0       0       0
  7196 ;;      Locals:         2       0       0       0       0       0       0
  7197 ;;      Temps:          0       0       0       0       0       0       0
  7198 ;;      Totals:         6       0       0       0       0       0       0
  7199 ;;Total ram usage:        6 bytes
  7200 ;; Hardware stack levels used:    1
  7201 ;; Hardware stack levels required when called:    4
  7202 ;; This function calls:
  7203 ;;		Nothing
  7204 ;; This function is called by:
  7205 ;;		_UART_buff_put
  7206 ;;		_UART_buff_get
  7207 ;; This function uses a non-reentrant model
  7208 ;;
  7209                           
  7210                           	psect	text20
  7211  0018BE                     __ptext20:
  7212                           	opt stack 0
  7213  0018BE                     _UART_buff_modulo_inc:
  7214                           	opt stack 21
  7215                           
  7216                           ;eusart1.c: 162: unsigned int my_value = value + 1;
  7217                           
  7218                           ;incstack = 0
  7219  0018BE  0E01               	movlw	1
  7220  0018C0  241B               	addwf	UART_buff_modulo_inc@value,w,c
  7221  0018C2  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  7222  0018C4  0E00               	movlw	0
  7223  0018C6  201C               	addwfc	UART_buff_modulo_inc@value+1,w,c
  7224  0018C8  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  7225                           
  7226                           ;eusart1.c: 163: if (my_value >= modulus) {
  7227  0018CA  501D               	movf	UART_buff_modulo_inc@modulus,w,c
  7228  0018CC  5C1F               	subwf	UART_buff_modulo_inc@my_value,w,c
  7229  0018CE  501E               	movf	UART_buff_modulo_inc@modulus+1,w,c
  7230  0018D0  5820               	subwfb	UART_buff_modulo_inc@my_value+1,w,c
  7231  0018D2  A0D8               	btfss	status,0,c
  7232  0018D4  D004               	goto	l6548
  7233                           
  7234                           ;eusart1.c: 164: my_value = 0;
  7235  0018D6  0E00               	movlw	0
  7236  0018D8  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  7237  0018DA  0E00               	movlw	0
  7238  0018DC  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  7239  0018DE                     l6548:
  7240                           
  7241                           ;eusart1.c: 165: }
  7242                           ;eusart1.c: 166: return (my_value);
  7243  0018DE  C01F  F01B         	movff	UART_buff_modulo_inc@my_value,?_UART_buff_modulo_inc
  7244  0018E2  C020  F01C         	movff	UART_buff_modulo_inc@my_value+1,?_UART_buff_modulo_inc+1
  7245  0018E6  0012               	return	
  7246  0018E8                     __end_of_UART_buff_modulo_inc:
  7247                           	opt stack 0
  7248                           tosu	equ	0xFFF
  7249                           tosh	equ	0xFFE
  7250                           tosl	equ	0xFFD
  7251                           pclath	equ	0xFFA
  7252                           tblptru	equ	0xFF8
  7253                           tblptrh	equ	0xFF7
  7254                           tblptrl	equ	0xFF6
  7255                           tablat	equ	0xFF5
  7256                           prodh	equ	0xFF4
  7257                           prodl	equ	0xFF3
  7258                           intcon	equ	0xFF2
  7259                           postinc0	equ	0xFEE
  7260                           wreg	equ	0xFE8
  7261                           postdec1	equ	0xFE5
  7262                           fsr1h	equ	0xFE2
  7263                           fsr1l	equ	0xFE1
  7264                           indf2	equ	0xFDF
  7265                           postinc2	equ	0xFDE
  7266                           postdec2	equ	0xFDD
  7267                           plusw2	equ	0xFDB
  7268                           fsr2h	equ	0xFDA
  7269                           fsr2l	equ	0xFD9
  7270                           status	equ	0xFD8
  7271                           
  7272 ;; *************** function _Receive_available *****************
  7273 ;; Defined at:
  7274 ;;		line 177 in file "mcc_generated_files/eusart1.c"
  7275 ;; Parameters:    Size  Location     Type
  7276 ;;		None
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;		None
  7279 ;; Return value:  Size  Location     Type
  7280 ;;                  2   28[COMRAM] int 
  7281 ;; Registers used:
  7282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7283 ;; Tracked objects:
  7284 ;;		On entry : 0/0
  7285 ;;		On exit  : 0/0
  7286 ;;		Unchanged: 0/0
  7287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7288 ;;      Params:         2       0       0       0       0       0       0
  7289 ;;      Locals:         0       0       0       0       0       0       0
  7290 ;;      Temps:          0       0       0       0       0       0       0
  7291 ;;      Totals:         2       0       0       0       0       0       0
  7292 ;;Total ram usage:        2 bytes
  7293 ;; Hardware stack levels used:    1
  7294 ;; Hardware stack levels required when called:    5
  7295 ;; This function calls:
  7296 ;;		_UART_buff_size
  7297 ;; This function is called by:
  7298 ;;		_CommsStart
  7299 ;;		_CRCcheck
  7300 ;;		_receiveData
  7301 ;; This function uses a non-reentrant model
  7302 ;;
  7303                           
  7304                           	psect	text21
  7305  001A68                     __ptext21:
  7306                           	opt stack 0
  7307  001A68                     _Receive_available:
  7308                           	opt stack 23
  7309                           
  7310                           ;eusart1.c: 178: return UART_buff_size(&input_buffer);
  7311                           
  7312                           ;incstack = 0
  7313  001A68  0E00               	movlw	low _input_buffer
  7314  001A6A  6E1B               	movwf	UART_buff_size@_this,c
  7315  001A6C  0E04               	movlw	high _input_buffer
  7316  001A6E  6E1C               	movwf	UART_buff_size@_this+1,c
  7317  001A70  EC3F  F00D         	call	_UART_buff_size	;wreg free
  7318  001A74  C01B  F01D         	movff	?_UART_buff_size,?_Receive_available
  7319  001A78  C01C  F01E         	movff	?_UART_buff_size+1,?_Receive_available+1
  7320  001A7C  0012               	return	
  7321  001A7E                     __end_of_Receive_available:
  7322                           	opt stack 0
  7323                           tosu	equ	0xFFF
  7324                           tosh	equ	0xFFE
  7325                           tosl	equ	0xFFD
  7326                           pclath	equ	0xFFA
  7327                           tblptru	equ	0xFF8
  7328                           tblptrh	equ	0xFF7
  7329                           tblptrl	equ	0xFF6
  7330                           tablat	equ	0xFF5
  7331                           prodh	equ	0xFF4
  7332                           prodl	equ	0xFF3
  7333                           intcon	equ	0xFF2
  7334                           postinc0	equ	0xFEE
  7335                           wreg	equ	0xFE8
  7336                           postdec1	equ	0xFE5
  7337                           fsr1h	equ	0xFE2
  7338                           fsr1l	equ	0xFE1
  7339                           indf2	equ	0xFDF
  7340                           postinc2	equ	0xFDE
  7341                           postdec2	equ	0xFDD
  7342                           plusw2	equ	0xFDB
  7343                           fsr2h	equ	0xFDA
  7344                           fsr2l	equ	0xFD9
  7345                           status	equ	0xFD8
  7346                           
  7347 ;; *************** function _UART_buff_size *****************
  7348 ;; Defined at:
  7349 ;;		line 157 in file "mcc_generated_files/eusart1.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  7352 ;;		 -> output_buffer(206), input_buffer(206), 
  7353 ;; Auto vars:     Size  Location     Type
  7354 ;;		None
  7355 ;; Return value:  Size  Location     Type
  7356 ;;                  2   26[COMRAM] int 
  7357 ;; Registers used:
  7358 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7359 ;; Tracked objects:
  7360 ;;		On entry : 0/0
  7361 ;;		On exit  : 0/0
  7362 ;;		Unchanged: 0/0
  7363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7364 ;;      Params:         2       0       0       0       0       0       0
  7365 ;;      Locals:         0       0       0       0       0       0       0
  7366 ;;      Temps:          0       0       0       0       0       0       0
  7367 ;;      Totals:         2       0       0       0       0       0       0
  7368 ;;Total ram usage:        2 bytes
  7369 ;; Hardware stack levels used:    1
  7370 ;; Hardware stack levels required when called:    4
  7371 ;; This function calls:
  7372 ;;		Nothing
  7373 ;; This function is called by:
  7374 ;;		_Receive_available
  7375 ;; This function uses a non-reentrant model
  7376 ;;
  7377                           
  7378                           	psect	text22
  7379  001A7E                     __ptext22:
  7380                           	opt stack 0
  7381  001A7E                     _UART_buff_size:
  7382                           	opt stack 23
  7383                           
  7384                           ;eusart1.c: 158: return (_this->count);
  7385                           
  7386                           ;incstack = 0
  7387  001A7E  EE20 F0CC          	lfsr	2,204
  7388  001A82  501B               	movf	UART_buff_size@_this,w,c
  7389  001A84  26D9               	addwf	fsr2l,f,c
  7390  001A86  501C               	movf	UART_buff_size@_this+1,w,c
  7391  001A88  22DA               	addwfc	fsr2h,f,c
  7392  001A8A  CFDE F01B          	movff	postinc2,?_UART_buff_size
  7393  001A8E  CFDD F01C          	movff	postdec2,?_UART_buff_size+1
  7394  001A92  0012               	return	
  7395  001A94                     __end_of_UART_buff_size:
  7396                           	opt stack 0
  7397                           tosu	equ	0xFFF
  7398                           tosh	equ	0xFFE
  7399                           tosl	equ	0xFFD
  7400                           pclath	equ	0xFFA
  7401                           tblptru	equ	0xFF8
  7402                           tblptrh	equ	0xFF7
  7403                           tblptrl	equ	0xFF6
  7404                           tablat	equ	0xFF5
  7405                           prodh	equ	0xFF4
  7406                           prodl	equ	0xFF3
  7407                           intcon	equ	0xFF2
  7408                           postinc0	equ	0xFEE
  7409                           wreg	equ	0xFE8
  7410                           postdec1	equ	0xFE5
  7411                           fsr1h	equ	0xFE2
  7412                           fsr1l	equ	0xFE1
  7413                           indf2	equ	0xFDF
  7414                           postinc2	equ	0xFDE
  7415                           postdec2	equ	0xFDD
  7416                           plusw2	equ	0xFDB
  7417                           fsr2h	equ	0xFDA
  7418                           fsr2l	equ	0xFD9
  7419                           status	equ	0xFD8
  7420                           
  7421 ;; *************** function _CRC8 *****************
  7422 ;; Defined at:
  7423 ;;		line 34 in file "FastTransfer.c"
  7424 ;; Parameters:    Size  Location     Type
  7425 ;;  data            2   26[COMRAM] PTR const unsigned char 
  7426 ;;		 -> CRCcheck@arrayHolder(3), receiveData@holder_1990(3), receiveData@holder(3), rx_buffer(200), 
  7427 ;;		 -> ring_buffer(206), NULL(0), 
  7428 ;;  len             1   28[COMRAM] unsigned char 
  7429 ;; Auto vars:     Size  Location     Type
  7430 ;;  sum             1   29[COMRAM] unsigned char 
  7431 ;;  tempI           1   31[COMRAM] unsigned char 
  7432 ;;  extract         1   30[COMRAM] unsigned char 
  7433 ;;  crc             1   32[COMRAM] unsigned char 
  7434 ;; Return value:  Size  Location     Type
  7435 ;;                  1    wreg      unsigned char 
  7436 ;; Registers used:
  7437 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7438 ;; Tracked objects:
  7439 ;;		On entry : 0/0
  7440 ;;		On exit  : 0/0
  7441 ;;		Unchanged: 0/0
  7442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7443 ;;      Params:         3       0       0       0       0       0       0
  7444 ;;      Locals:         4       0       0       0       0       0       0
  7445 ;;      Temps:          0       0       0       0       0       0       0
  7446 ;;      Totals:         7       0       0       0       0       0       0
  7447 ;;Total ram usage:        7 bytes
  7448 ;; Hardware stack levels used:    1
  7449 ;; Hardware stack levels required when called:    4
  7450 ;; This function calls:
  7451 ;;		Nothing
  7452 ;; This function is called by:
  7453 ;;		_sendData
  7454 ;;		_receiveData
  7455 ;;		_CRCcheck
  7456 ;; This function uses a non-reentrant model
  7457 ;;
  7458                           
  7459                           	psect	text23
  7460  00161C                     __ptext23:
  7461                           	opt stack 0
  7462  00161C                     _CRC8:
  7463                           	opt stack 23
  7464                           
  7465                           ;FastTransfer.c: 35: unsigned char crc = 0x00;
  7466                           
  7467                           ;incstack = 0
  7468  00161C  0E00               	movlw	0
  7469  00161E  6E21               	movwf	CRC8@crc,c
  7470                           
  7471                           ;FastTransfer.c: 36: while (len--) {
  7472  001620  D01C               	goto	l6638
  7473  001622                     l6622:
  7474                           
  7475                           ;FastTransfer.c: 37: unsigned char extract = *data++;
  7476  001622  C01B  FFD9         	movff	CRC8@data,fsr2l
  7477  001626  C01C  FFDA         	movff	CRC8@data+1,fsr2h
  7478  00162A  50DF               	movf	indf2,w,c
  7479  00162C  6E1F               	movwf	CRC8@extract,c
  7480  00162E  4A1B               	infsnz	CRC8@data,f,c
  7481  001630  2A1C               	incf	CRC8@data+1,f,c
  7482                           
  7483                           ;FastTransfer.c: 38: unsigned char tempI;
  7484                           ;FastTransfer.c: 39: for (tempI = 8; tempI; tempI--) {
  7485  001632  0E08               	movlw	8
  7486  001634  6E20               	movwf	CRC8@tempI,c
  7487  001636  D00E               	goto	l6636
  7488  001638                     l6628:
  7489                           
  7490                           ;FastTransfer.c: 40: unsigned char sum = (crc ^ extract) & 0x01;
  7491  001638  5021               	movf	CRC8@crc,w,c
  7492  00163A  181F               	xorwf	CRC8@extract,w,c
  7493  00163C  0B01               	andlw	1
  7494  00163E  6E1E               	movwf	CRC8@sum,c
  7495                           
  7496                           ;FastTransfer.c: 41: crc >>= 1;
  7497  001640  90D8               	bcf	status,0,c
  7498  001642  3221               	rrcf	CRC8@crc,f,c
  7499                           
  7500                           ;FastTransfer.c: 42: if (sum) {
  7501  001644  501E               	movf	CRC8@sum,w,c
  7502  001646  B4D8               	btfsc	status,2,c
  7503  001648  D002               	goto	l712
  7504                           
  7505                           ;FastTransfer.c: 43: crc ^= 0x8C;
  7506  00164A  0E8C               	movlw	140
  7507  00164C  1A21               	xorwf	CRC8@crc,f,c
  7508  00164E                     l712:
  7509                           
  7510                           ;FastTransfer.c: 44: }
  7511                           ;FastTransfer.c: 45: extract >>= 1;
  7512  00164E  90D8               	bcf	status,0,c
  7513  001650  321F               	rrcf	CRC8@extract,f,c
  7514  001652  0620               	decf	CRC8@tempI,f,c
  7515  001654                     l6636:
  7516  001654  5020               	movf	CRC8@tempI,w,c
  7517  001656  A4D8               	btfss	status,2,c
  7518  001658  D7EF               	goto	l6628
  7519  00165A                     l6638:
  7520  00165A  061D               	decf	CRC8@len,f,c
  7521  00165C  281D               	incf	CRC8@len,w,c
  7522  00165E  A4D8               	btfss	status,2,c
  7523  001660  D7E0               	goto	l6622
  7524                           
  7525                           ;FastTransfer.c: 46: }
  7526                           ;FastTransfer.c: 47: }
  7527                           ;FastTransfer.c: 48: return crc;
  7528  001662  5021               	movf	CRC8@crc,w,c
  7529  001664  0012               	return	
  7530  001666                     __end_of_CRC8:
  7531                           	opt stack 0
  7532                           tosu	equ	0xFFF
  7533                           tosh	equ	0xFFE
  7534                           tosl	equ	0xFFD
  7535                           pclath	equ	0xFFA
  7536                           tblptru	equ	0xFF8
  7537                           tblptrh	equ	0xFF7
  7538                           tblptrl	equ	0xFF6
  7539                           tablat	equ	0xFF5
  7540                           prodh	equ	0xFF4
  7541                           prodl	equ	0xFF3
  7542                           intcon	equ	0xFF2
  7543                           postinc0	equ	0xFEE
  7544                           wreg	equ	0xFE8
  7545                           postdec1	equ	0xFE5
  7546                           fsr1h	equ	0xFE2
  7547                           fsr1l	equ	0xFE1
  7548                           indf2	equ	0xFDF
  7549                           postinc2	equ	0xFDE
  7550                           postdec2	equ	0xFDD
  7551                           plusw2	equ	0xFDB
  7552                           fsr2h	equ	0xFDA
  7553                           fsr2l	equ	0xFD9
  7554                           status	equ	0xFD8
  7555                           
  7556 ;; *************** function _TempGet *****************
  7557 ;; Defined at:
  7558 ;;		line 60 in file "CarTempSens.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;  x               2   26[COMRAM] int 
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;		None
  7563 ;; Return value:  Size  Location     Type
  7564 ;;                  2   26[COMRAM] int 
  7565 ;; Registers used:
  7566 ;;		wreg, status,2, status,0
  7567 ;; Tracked objects:
  7568 ;;		On entry : 0/0
  7569 ;;		On exit  : 0/0
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7572 ;;      Params:         2       0       0       0       0       0       0
  7573 ;;      Locals:         0       0       0       0       0       0       0
  7574 ;;      Temps:          0       0       0       0       0       0       0
  7575 ;;      Totals:         2       0       0       0       0       0       0
  7576 ;;Total ram usage:        2 bytes
  7577 ;; Hardware stack levels used:    1
  7578 ;; Hardware stack levels required when called:    4
  7579 ;; This function calls:
  7580 ;;		Nothing
  7581 ;; This function is called by:
  7582 ;;		_main
  7583 ;; This function uses a non-reentrant model
  7584 ;;
  7585                           
  7586                           	psect	text24
  7587  001B46                     __ptext24:
  7588                           	opt stack 0
  7589  001B46                     _TempGet:
  7590                           	opt stack 26
  7591                           
  7592                           ;CarTempSens.c: 67: else
  7593                           ;CarTempSens.c: 68: return 0;
  7594                           ;	Return value of _TempGet is never used
  7595                           
  7596                           ;CarTempSens.c: 66: }
  7597                           
  7598                           ;CarTempSens.c: 65: return TempTwo;
  7599                           ;	Return value of _TempGet is never used
  7600                           
  7601                           ;CarTempSens.c: 62: return TempOne;
  7602                           ;	Return value of _TempGet is never used
  7603                           
  7604                           ;incstack = 0
  7605  001B46  0012               	return	
  7606  001B48                     __end_of_TempGet:
  7607                           	opt stack 0
  7608                           tosu	equ	0xFFF
  7609                           tosh	equ	0xFFE
  7610                           tosl	equ	0xFFD
  7611                           pclath	equ	0xFFA
  7612                           tblptru	equ	0xFF8
  7613                           tblptrh	equ	0xFF7
  7614                           tblptrl	equ	0xFF6
  7615                           tablat	equ	0xFF5
  7616                           prodh	equ	0xFF4
  7617                           prodl	equ	0xFF3
  7618                           intcon	equ	0xFF2
  7619                           postinc0	equ	0xFEE
  7620                           wreg	equ	0xFE8
  7621                           postdec1	equ	0xFE5
  7622                           fsr1h	equ	0xFE2
  7623                           fsr1l	equ	0xFE1
  7624                           indf2	equ	0xFDF
  7625                           postinc2	equ	0xFDE
  7626                           postdec2	equ	0xFDD
  7627                           plusw2	equ	0xFDB
  7628                           fsr2h	equ	0xFDA
  7629                           fsr2l	equ	0xFD9
  7630                           status	equ	0xFD8
  7631                           
  7632 ;; *************** function _TempCalc *****************
  7633 ;; Defined at:
  7634 ;;		line 41 in file "CarTempSens.c"
  7635 ;; Parameters:    Size  Location     Type
  7636 ;;  x               2   35[COMRAM] int 
  7637 ;; Auto vars:     Size  Location     Type
  7638 ;;		None
  7639 ;; Return value:  Size  Location     Type
  7640 ;;                  1    wreg      unsigned char 
  7641 ;; Registers used:
  7642 ;;		wreg, status,2, status,0, cstack
  7643 ;; Tracked objects:
  7644 ;;		On entry : 0/0
  7645 ;;		On exit  : 0/0
  7646 ;;		Unchanged: 0/0
  7647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7648 ;;      Params:         2       0       0       0       0       0       0
  7649 ;;      Locals:         0       0       0       0       0       0       0
  7650 ;;      Temps:          0       0       0       0       0       0       0
  7651 ;;      Totals:         2       0       0       0       0       0       0
  7652 ;;Total ram usage:        2 bytes
  7653 ;; Hardware stack levels used:    1
  7654 ;; Hardware stack levels required when called:    5
  7655 ;; This function calls:
  7656 ;;		_ADC_GetConversion
  7657 ;;		___lwdiv
  7658 ;; This function is called by:
  7659 ;;		_main
  7660 ;; This function uses a non-reentrant model
  7661 ;;
  7662                           
  7663                           	psect	text25
  7664  0015C2                     __ptext25:
  7665                           	opt stack 0
  7666  0015C2                     _TempCalc:
  7667                           	opt stack 25
  7668                           
  7669                           ;CarTempSens.c: 42: if(x == 1){
  7670                           
  7671                           ;incstack = 0
  7672  0015C2  0424               	decf	TempCalc@x,w,c
  7673  0015C4  1025               	iorwf	TempCalc@x+1,w,c
  7674  0015C6  A4D8               	btfss	status,2,c
  7675  0015C8  D012               	goto	l7018
  7676                           
  7677                           ;CarTempSens.c: 43: TempOne = ADC_GetConversion(Temp1)/12;
  7678  0015CA  0E00               	movlw	0
  7679  0015CC  EC1C  F00C         	call	_ADC_GetConversion
  7680  0015D0  C01B  F020         	movff	?_ADC_GetConversion,___lwdiv@dividend
  7681  0015D4  C01C  F021         	movff	?_ADC_GetConversion+1,___lwdiv@dividend+1
  7682  0015D8  0E00               	movlw	0
  7683  0015DA  6E23               	movwf	___lwdiv@divisor+1,c
  7684  0015DC  0E0C               	movlw	12
  7685  0015DE  6E22               	movwf	___lwdiv@divisor,c
  7686  0015E0  ECB2  F00A         	call	___lwdiv	;wreg free
  7687  0015E4  C020  F0BD         	movff	?___lwdiv,_TempOne
  7688  0015E8  C021  F0BE         	movff	?___lwdiv+1,_TempOne+1
  7689                           
  7690                           ;CarTempSens.c: 44: return 1;
  7691                           ;	Return value of _TempCalc is never used
  7692  0015EC  0012               	return	
  7693  0015EE                     l7018:
  7694                           
  7695                           ;CarTempSens.c: 45: }
  7696                           ;CarTempSens.c: 46: if(x == 2){
  7697  0015EE  0E02               	movlw	2
  7698  0015F0  1824               	xorwf	TempCalc@x,w,c
  7699  0015F2  1025               	iorwf	TempCalc@x+1,w,c
  7700  0015F4  A4D8               	btfss	status,2,c
  7701  0015F6  0012               	return	
  7702                           
  7703                           ;CarTempSens.c: 47: TempTwo = ADC_GetConversion(Temp2)/12;
  7704  0015F8  0E01               	movlw	1
  7705  0015FA  EC1C  F00C         	call	_ADC_GetConversion
  7706  0015FE  C01B  F020         	movff	?_ADC_GetConversion,___lwdiv@dividend
  7707  001602  C01C  F021         	movff	?_ADC_GetConversion+1,___lwdiv@dividend+1
  7708  001606  0E00               	movlw	0
  7709  001608  6E23               	movwf	___lwdiv@divisor+1,c
  7710  00160A  0E0C               	movlw	12
  7711  00160C  6E22               	movwf	___lwdiv@divisor,c
  7712  00160E  ECB2  F00A         	call	___lwdiv	;wreg free
  7713  001612  C020  F0BF         	movff	?___lwdiv,_TempTwo
  7714  001616  C021  F0C0         	movff	?___lwdiv+1,_TempTwo+1
  7715                           
  7716                           ;CarTempSens.c: 50: else return 0;
  7717                           ;	Return value of _TempCalc is never used
  7718                           
  7719                           ;CarTempSens.c: 49: }
  7720                           
  7721                           ;CarTempSens.c: 48: return 1;
  7722                           ;	Return value of _TempCalc is never used
  7723  00161A  0012               	return	
  7724  00161C                     __end_of_TempCalc:
  7725                           	opt stack 0
  7726                           tosu	equ	0xFFF
  7727                           tosh	equ	0xFFE
  7728                           tosl	equ	0xFFD
  7729                           pclath	equ	0xFFA
  7730                           tblptru	equ	0xFF8
  7731                           tblptrh	equ	0xFF7
  7732                           tblptrl	equ	0xFF6
  7733                           tablat	equ	0xFF5
  7734                           prodh	equ	0xFF4
  7735                           prodl	equ	0xFF3
  7736                           intcon	equ	0xFF2
  7737                           postinc0	equ	0xFEE
  7738                           wreg	equ	0xFE8
  7739                           postdec1	equ	0xFE5
  7740                           fsr1h	equ	0xFE2
  7741                           fsr1l	equ	0xFE1
  7742                           indf2	equ	0xFDF
  7743                           postinc2	equ	0xFDE
  7744                           postdec2	equ	0xFDD
  7745                           plusw2	equ	0xFDB
  7746                           fsr2h	equ	0xFDA
  7747                           fsr2l	equ	0xFD9
  7748                           status	equ	0xFD8
  7749                           
  7750 ;; *************** function ___lwdiv *****************
  7751 ;; Defined at:
  7752 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  7753 ;; Parameters:    Size  Location     Type
  7754 ;;  dividend        2   31[COMRAM] unsigned int 
  7755 ;;  divisor         2   33[COMRAM] unsigned int 
  7756 ;; Auto vars:     Size  Location     Type
  7757 ;;  quotient        2    1[BANK1 ] unsigned int 
  7758 ;;  counter         1    0[BANK1 ] unsigned char 
  7759 ;; Return value:  Size  Location     Type
  7760 ;;                  2   31[COMRAM] unsigned int 
  7761 ;; Registers used:
  7762 ;;		wreg, status,2, status,0
  7763 ;; Tracked objects:
  7764 ;;		On entry : 0/0
  7765 ;;		On exit  : 0/0
  7766 ;;		Unchanged: 0/0
  7767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7768 ;;      Params:         4       0       0       0       0       0       0
  7769 ;;      Locals:         0       0       3       0       0       0       0
  7770 ;;      Temps:          0       0       0       0       0       0       0
  7771 ;;      Totals:         4       0       3       0       0       0       0
  7772 ;;Total ram usage:        7 bytes
  7773 ;; Hardware stack levels used:    1
  7774 ;; Hardware stack levels required when called:    4
  7775 ;; This function calls:
  7776 ;;		Nothing
  7777 ;; This function is called by:
  7778 ;;		_TempCalc
  7779 ;; This function uses a non-reentrant model
  7780 ;;
  7781                           
  7782                           	psect	text26
  7783  001564                     __ptext26:
  7784                           	opt stack 0
  7785  001564                     ___lwdiv:
  7786                           	opt stack 25
  7787                           
  7788                           ;incstack = 0
  7789  001564  0E00               	movlw	0
  7790  001566  0101               	movlb	1	; () banked
  7791  001568  6FF8               	movwf	(___lwdiv@quotient+1)& (0+255),b
  7792  00156A  0E00               	movlw	0
  7793  00156C  6FF7               	movwf	___lwdiv@quotient& (0+255),b
  7794                           
  7795                           ; BSR set to: 1
  7796  00156E  5022               	movf	___lwdiv@divisor,w,c
  7797  001570  1023               	iorwf	___lwdiv@divisor+1,w,c
  7798  001572  B4D8               	btfsc	status,2,c
  7799  001574  D021               	goto	l1932
  7800                           
  7801                           ; BSR set to: 1
  7802  001576  0E01               	movlw	1
  7803  001578  0101               	movlb	1	; () banked
  7804  00157A  6FF6               	movwf	___lwdiv@counter& (0+255),b
  7805  00157C  D005               	goto	l6976
  7806  00157E                     l6974:
  7807                           
  7808                           ; BSR set to: 1
  7809  00157E  90D8               	bcf	status,0,c
  7810  001580  3622               	rlcf	___lwdiv@divisor,f,c
  7811  001582  3623               	rlcf	___lwdiv@divisor+1,f,c
  7812  001584  0101               	movlb	1	; () banked
  7813  001586  2BF6               	incf	___lwdiv@counter& (0+255),f,b
  7814  001588                     l6976:
  7815                           
  7816                           ; BSR set to: 1
  7817  001588  AE23               	btfss	___lwdiv@divisor+1,7,c
  7818  00158A  D7F9               	goto	l6974
  7819  00158C                     l6978:
  7820                           
  7821                           ; BSR set to: 1
  7822  00158C  0101               	movlb	1	; () banked
  7823  00158E  90D8               	bcf	status,0,c
  7824  001590  37F7               	rlcf	___lwdiv@quotient& (0+255),f,b
  7825  001592  37F8               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  7826                           
  7827                           ; BSR set to: 1
  7828  001594  5022               	movf	___lwdiv@divisor,w,c
  7829  001596  5C20               	subwf	___lwdiv@dividend,w,c
  7830  001598  5023               	movf	___lwdiv@divisor+1,w,c
  7831  00159A  5821               	subwfb	___lwdiv@dividend+1,w,c
  7832  00159C  A0D8               	btfss	status,0,c
  7833  00159E  D006               	goto	l6986
  7834                           
  7835                           ; BSR set to: 1
  7836  0015A0  5022               	movf	___lwdiv@divisor,w,c
  7837  0015A2  5E20               	subwf	___lwdiv@dividend,f,c
  7838  0015A4  5023               	movf	___lwdiv@divisor+1,w,c
  7839  0015A6  5A21               	subwfb	___lwdiv@dividend+1,f,c
  7840                           
  7841                           ; BSR set to: 1
  7842  0015A8  0101               	movlb	1	; () banked
  7843  0015AA  81F7               	bsf	___lwdiv@quotient& (0+255),0,b
  7844  0015AC                     l6986:
  7845                           
  7846                           ; BSR set to: 1
  7847  0015AC  90D8               	bcf	status,0,c
  7848  0015AE  3223               	rrcf	___lwdiv@divisor+1,f,c
  7849  0015B0  3222               	rrcf	___lwdiv@divisor,f,c
  7850                           
  7851                           ; BSR set to: 1
  7852  0015B2  0101               	movlb	1	; () banked
  7853  0015B4  2FF6               	decfsz	___lwdiv@counter& (0+255),f,b
  7854  0015B6  D7EA               	goto	l6978
  7855  0015B8                     l1932:
  7856                           
  7857                           ; BSR set to: 1
  7858  0015B8  C1F7  F020         	movff	___lwdiv@quotient,?___lwdiv
  7859  0015BC  C1F8  F021         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7860                           
  7861                           ; BSR set to: 1
  7862  0015C0  0012               	return		;funcret
  7863  0015C2                     __end_of___lwdiv:
  7864                           	opt stack 0
  7865                           tosu	equ	0xFFF
  7866                           tosh	equ	0xFFE
  7867                           tosl	equ	0xFFD
  7868                           pclath	equ	0xFFA
  7869                           tblptru	equ	0xFF8
  7870                           tblptrh	equ	0xFF7
  7871                           tblptrl	equ	0xFF6
  7872                           tablat	equ	0xFF5
  7873                           prodh	equ	0xFF4
  7874                           prodl	equ	0xFF3
  7875                           intcon	equ	0xFF2
  7876                           postinc0	equ	0xFEE
  7877                           wreg	equ	0xFE8
  7878                           postdec1	equ	0xFE5
  7879                           fsr1h	equ	0xFE2
  7880                           fsr1l	equ	0xFE1
  7881                           indf2	equ	0xFDF
  7882                           postinc2	equ	0xFDE
  7883                           postdec2	equ	0xFDD
  7884                           plusw2	equ	0xFDB
  7885                           fsr2h	equ	0xFDA
  7886                           fsr2l	equ	0xFD9
  7887                           status	equ	0xFD8
  7888                           
  7889 ;; *************** function _ADC_GetConversion *****************
  7890 ;; Defined at:
  7891 ;;		line 102 in file "mcc_generated_files/adc.c"
  7892 ;; Parameters:    Size  Location     Type
  7893 ;;  channel         1    wreg     enum E8796
  7894 ;; Auto vars:     Size  Location     Type
  7895 ;;  channel         1   30[COMRAM] enum E8796
  7896 ;; Return value:  Size  Location     Type
  7897 ;;                  2   26[COMRAM] unsigned int 
  7898 ;; Registers used:
  7899 ;;		wreg, status,2, status,0
  7900 ;; Tracked objects:
  7901 ;;		On entry : 0/0
  7902 ;;		On exit  : 0/0
  7903 ;;		Unchanged: 0/0
  7904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7905 ;;      Params:         2       0       0       0       0       0       0
  7906 ;;      Locals:         1       0       0       0       0       0       0
  7907 ;;      Temps:          2       0       0       0       0       0       0
  7908 ;;      Totals:         5       0       0       0       0       0       0
  7909 ;;Total ram usage:        5 bytes
  7910 ;; Hardware stack levels used:    1
  7911 ;; Hardware stack levels required when called:    4
  7912 ;; This function calls:
  7913 ;;		Nothing
  7914 ;; This function is called by:
  7915 ;;		_TempCalc
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919                           	psect	text27
  7920  001838                     __ptext27:
  7921                           	opt stack 0
  7922  001838                     _ADC_GetConversion:
  7923                           	opt stack 25
  7924                           
  7925                           ; BSR set to: 1
  7926                           ;incstack = 0
  7927                           ;ADC_GetConversion@channel stored from wreg
  7928  001838  6E1F               	movwf	ADC_GetConversion@channel,c
  7929                           
  7930                           ;adc.c: 104: ADCON0bits.CHS = channel;
  7931  00183A  C01F  F01D         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  7932  00183E  461D               	rlncf	??_ADC_GetConversion,f,c
  7933  001840  461D               	rlncf	??_ADC_GetConversion,f,c
  7934  001842  50C2               	movf	4034,w,c	;volatile
  7935  001844  181D               	xorwf	??_ADC_GetConversion,w,c
  7936  001846  0B83               	andlw	-125
  7937  001848  181D               	xorwf	??_ADC_GetConversion,w,c
  7938  00184A  6EC2               	movwf	4034,c	;volatile
  7939                           
  7940                           ;adc.c: 107: ADCON0bits.ADON = 1;
  7941  00184C  80C2               	bsf	4034,0,c	;volatile
  7942                           
  7943                           ;adc.c: 111: ADCON0bits.GO_nDONE = 1;
  7944  00184E  82C2               	bsf	4034,1,c	;volatile
  7945  001850                     l548:
  7946  001850  B2C2               	btfsc	4034,1,c	;volatile
  7947  001852  D7FE               	goto	l548
  7948                           
  7949                           ;adc.c: 115: }
  7950                           ;adc.c: 118: return ((ADRESH << 8) + ADRESL);
  7951  001854  50C4               	movf	4036,w,c	;volatile
  7952  001856  6E1E               	movwf	(??_ADC_GetConversion+1)& (0+255),c
  7953  001858  6A1D               	clrf	??_ADC_GetConversion& (0+255),c
  7954  00185A  50C3               	movf	4035,w,c	;volatile
  7955  00185C  241D               	addwf	??_ADC_GetConversion,w,c
  7956  00185E  6E1B               	movwf	?_ADC_GetConversion,c
  7957  001860  0E00               	movlw	0
  7958  001862  201E               	addwfc	??_ADC_GetConversion+1,w,c
  7959  001864  6E1C               	movwf	?_ADC_GetConversion+1,c
  7960  001866  0012               	return	
  7961  001868                     __end_of_ADC_GetConversion:
  7962                           	opt stack 0
  7963                           tosu	equ	0xFFF
  7964                           tosh	equ	0xFFE
  7965                           tosl	equ	0xFFD
  7966                           pclath	equ	0xFFA
  7967                           tblptru	equ	0xFF8
  7968                           tblptrh	equ	0xFF7
  7969                           tblptrl	equ	0xFF6
  7970                           tablat	equ	0xFF5
  7971                           prodh	equ	0xFF4
  7972                           prodl	equ	0xFF3
  7973                           intcon	equ	0xFF2
  7974                           postinc0	equ	0xFEE
  7975                           wreg	equ	0xFE8
  7976                           postdec1	equ	0xFE5
  7977                           fsr1h	equ	0xFE2
  7978                           fsr1l	equ	0xFE1
  7979                           indf2	equ	0xFDF
  7980                           postinc2	equ	0xFDE
  7981                           postdec2	equ	0xFDD
  7982                           plusw2	equ	0xFDB
  7983                           fsr2h	equ	0xFDA
  7984                           fsr2l	equ	0xFD9
  7985                           status	equ	0xFD8
  7986                           
  7987 ;; *************** function _SYSTEM_Initialize *****************
  7988 ;; Defined at:
  7989 ;;		line 112 in file "mcc_generated_files/mcc.c"
  7990 ;; Parameters:    Size  Location     Type
  7991 ;;		None
  7992 ;; Auto vars:     Size  Location     Type
  7993 ;;		None
  7994 ;; Return value:  Size  Location     Type
  7995 ;;		None               void
  7996 ;; Registers used:
  7997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7998 ;; Tracked objects:
  7999 ;;		On entry : 0/0
  8000 ;;		On exit  : 0/0
  8001 ;;		Unchanged: 0/0
  8002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8003 ;;      Params:         0       0       0       0       0       0       0
  8004 ;;      Locals:         0       0       0       0       0       0       0
  8005 ;;      Temps:          0       0       0       0       0       0       0
  8006 ;;      Totals:         0       0       0       0       0       0       0
  8007 ;;Total ram usage:        0 bytes
  8008 ;; Hardware stack levels used:    1
  8009 ;; Hardware stack levels required when called:    7
  8010 ;; This function calls:
  8011 ;;		_ADC_Initialize
  8012 ;;		_ECCP1_Initialize
  8013 ;;		_ECCP2_Initialize
  8014 ;;		_EUSART1_Initialize
  8015 ;;		_INTERRUPT_Initialize
  8016 ;;		_OSCILLATOR_Initialize
  8017 ;;		_PIN_MANAGER_Initialize
  8018 ;;		_TMR1_Initialize
  8019 ;;		_TMR2_Initialize
  8020 ;; This function is called by:
  8021 ;;		_main
  8022 ;; This function uses a non-reentrant model
  8023 ;;
  8024                           
  8025                           	psect	text28
  8026  001912                     __ptext28:
  8027                           	opt stack 0
  8028  001912                     _SYSTEM_Initialize:
  8029                           	opt stack 23
  8030                           
  8031                           ;mcc.c: 113: OSCILLATOR_Initialize();
  8032                           
  8033                           ;incstack = 0
  8034  001912  EC80  F00D         	call	_OSCILLATOR_Initialize	;wreg free
  8035                           
  8036                           ;mcc.c: 114: PIN_MANAGER_Initialize();
  8037  001916  EC33  F00B         	call	_PIN_MANAGER_Initialize	;wreg free
  8038                           
  8039                           ;mcc.c: 115: INTERRUPT_Initialize();
  8040  00191A  EC60  F00D         	call	_INTERRUPT_Initialize	;wreg free
  8041                           
  8042                           ;mcc.c: 116: EUSART1_Initialize();
  8043  00191E  EC96  F00B         	call	_EUSART1_Initialize	;wreg free
  8044                           
  8045                           ;mcc.c: 117: TMR1_Initialize();
  8046  001922  ECAE  F00C         	call	_TMR1_Initialize	;wreg free
  8047                           
  8048                           ;mcc.c: 118: ECCP1_Initialize();
  8049  001926  EC04  F00D         	call	_ECCP1_Initialize	;wreg free
  8050                           
  8051                           ;mcc.c: 119: ECCP2_Initialize();
  8052  00192A  ECF8  F00C         	call	_ECCP2_Initialize	;wreg free
  8053                           
  8054                           ;mcc.c: 120: TMR2_Initialize();
  8055  00192E  EC4A  F00D         	call	_TMR2_Initialize	;wreg free
  8056                           
  8057                           ;mcc.c: 121: ADC_Initialize();
  8058  001932  EC10  F00D         	call	_ADC_Initialize	;wreg free
  8059  001936  0012               	return		;funcret
  8060  001938                     __end_of_SYSTEM_Initialize:
  8061                           	opt stack 0
  8062                           tosu	equ	0xFFF
  8063                           tosh	equ	0xFFE
  8064                           tosl	equ	0xFFD
  8065                           pclath	equ	0xFFA
  8066                           tblptru	equ	0xFF8
  8067                           tblptrh	equ	0xFF7
  8068                           tblptrl	equ	0xFF6
  8069                           tablat	equ	0xFF5
  8070                           prodh	equ	0xFF4
  8071                           prodl	equ	0xFF3
  8072                           intcon	equ	0xFF2
  8073                           postinc0	equ	0xFEE
  8074                           wreg	equ	0xFE8
  8075                           postdec1	equ	0xFE5
  8076                           fsr1h	equ	0xFE2
  8077                           fsr1l	equ	0xFE1
  8078                           indf2	equ	0xFDF
  8079                           postinc2	equ	0xFDE
  8080                           postdec2	equ	0xFDD
  8081                           plusw2	equ	0xFDB
  8082                           fsr2h	equ	0xFDA
  8083                           fsr2l	equ	0xFD9
  8084                           status	equ	0xFD8
  8085                           
  8086 ;; *************** function _TMR2_Initialize *****************
  8087 ;; Defined at:
  8088 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  8089 ;; Parameters:    Size  Location     Type
  8090 ;;		None
  8091 ;; Auto vars:     Size  Location     Type
  8092 ;;		None
  8093 ;; Return value:  Size  Location     Type
  8094 ;;		None               void
  8095 ;; Registers used:
  8096 ;;		wreg, status,2, cstack
  8097 ;; Tracked objects:
  8098 ;;		On entry : 0/0
  8099 ;;		On exit  : 0/0
  8100 ;;		Unchanged: 0/0
  8101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8102 ;;      Params:         0       0       0       0       0       0       0
  8103 ;;      Locals:         0       0       0       0       0       0       0
  8104 ;;      Temps:          0       0       0       0       0       0       0
  8105 ;;      Totals:         0       0       0       0       0       0       0
  8106 ;;Total ram usage:        0 bytes
  8107 ;; Hardware stack levels used:    1
  8108 ;; Hardware stack levels required when called:    5
  8109 ;; This function calls:
  8110 ;;		_TMR2_StartTimer
  8111 ;; This function is called by:
  8112 ;;		_SYSTEM_Initialize
  8113 ;; This function uses a non-reentrant model
  8114 ;;
  8115                           
  8116                           	psect	text29
  8117  001A94                     __ptext29:
  8118                           	opt stack 0
  8119  001A94                     _TMR2_Initialize:
  8120                           	opt stack 24
  8121                           
  8122                           ;tmr2.c: 62: T2CON = 0x7A;
  8123                           
  8124                           ;incstack = 0
  8125  001A94  0E7A               	movlw	122
  8126  001A96  6EBA               	movwf	4026,c	;volatile
  8127                           
  8128                           ;tmr2.c: 65: PR2 = 0x9B;
  8129  001A98  0E9B               	movlw	155
  8130  001A9A  6EBB               	movwf	4027,c	;volatile
  8131                           
  8132                           ;tmr2.c: 68: TMR2 = 0x00;
  8133  001A9C  0E00               	movlw	0
  8134  001A9E  6EBC               	movwf	4028,c	;volatile
  8135                           
  8136                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
  8137  001AA0  929E               	bcf	3998,1,c	;volatile
  8138                           
  8139                           ;tmr2.c: 74: PIE1bits.TMR2IE = 1;
  8140  001AA2  829D               	bsf	3997,1,c	;volatile
  8141                           
  8142                           ;tmr2.c: 77: TMR2_StartTimer();
  8143  001AA4  EC9D  F00D         	call	_TMR2_StartTimer	;wreg free
  8144  001AA8  0012               	return		;funcret
  8145  001AAA                     __end_of_TMR2_Initialize:
  8146                           	opt stack 0
  8147                           tosu	equ	0xFFF
  8148                           tosh	equ	0xFFE
  8149                           tosl	equ	0xFFD
  8150                           pclath	equ	0xFFA
  8151                           tblptru	equ	0xFF8
  8152                           tblptrh	equ	0xFF7
  8153                           tblptrl	equ	0xFF6
  8154                           tablat	equ	0xFF5
  8155                           prodh	equ	0xFF4
  8156                           prodl	equ	0xFF3
  8157                           intcon	equ	0xFF2
  8158                           postinc0	equ	0xFEE
  8159                           wreg	equ	0xFE8
  8160                           postdec1	equ	0xFE5
  8161                           fsr1h	equ	0xFE2
  8162                           fsr1l	equ	0xFE1
  8163                           indf2	equ	0xFDF
  8164                           postinc2	equ	0xFDE
  8165                           postdec2	equ	0xFDD
  8166                           plusw2	equ	0xFDB
  8167                           fsr2h	equ	0xFDA
  8168                           fsr2l	equ	0xFD9
  8169                           status	equ	0xFD8
  8170                           
  8171 ;; *************** function _TMR2_StartTimer *****************
  8172 ;; Defined at:
  8173 ;;		line 80 in file "mcc_generated_files/tmr2.c"
  8174 ;; Parameters:    Size  Location     Type
  8175 ;;		None
  8176 ;; Auto vars:     Size  Location     Type
  8177 ;;		None
  8178 ;; Return value:  Size  Location     Type
  8179 ;;		None               void
  8180 ;; Registers used:
  8181 ;;		None
  8182 ;; Tracked objects:
  8183 ;;		On entry : 0/0
  8184 ;;		On exit  : 0/0
  8185 ;;		Unchanged: 0/0
  8186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8187 ;;      Params:         0       0       0       0       0       0       0
  8188 ;;      Locals:         0       0       0       0       0       0       0
  8189 ;;      Temps:          0       0       0       0       0       0       0
  8190 ;;      Totals:         0       0       0       0       0       0       0
  8191 ;;Total ram usage:        0 bytes
  8192 ;; Hardware stack levels used:    1
  8193 ;; Hardware stack levels required when called:    4
  8194 ;; This function calls:
  8195 ;;		Nothing
  8196 ;; This function is called by:
  8197 ;;		_TMR2_Initialize
  8198 ;; This function uses a non-reentrant model
  8199 ;;
  8200                           
  8201                           	psect	text30
  8202  001B3A                     __ptext30:
  8203                           	opt stack 0
  8204  001B3A                     _TMR2_StartTimer:
  8205                           	opt stack 24
  8206                           
  8207                           ;tmr2.c: 82: T2CONbits.TMR2ON = 1;
  8208                           
  8209                           ;incstack = 0
  8210  001B3A  84BA               	bsf	4026,2,c	;volatile
  8211  001B3C  0012               	return		;funcret
  8212  001B3E                     __end_of_TMR2_StartTimer:
  8213                           	opt stack 0
  8214                           tosu	equ	0xFFF
  8215                           tosh	equ	0xFFE
  8216                           tosl	equ	0xFFD
  8217                           pclath	equ	0xFFA
  8218                           tblptru	equ	0xFF8
  8219                           tblptrh	equ	0xFF7
  8220                           tblptrl	equ	0xFF6
  8221                           tablat	equ	0xFF5
  8222                           prodh	equ	0xFF4
  8223                           prodl	equ	0xFF3
  8224                           intcon	equ	0xFF2
  8225                           postinc0	equ	0xFEE
  8226                           wreg	equ	0xFE8
  8227                           postdec1	equ	0xFE5
  8228                           fsr1h	equ	0xFE2
  8229                           fsr1l	equ	0xFE1
  8230                           indf2	equ	0xFDF
  8231                           postinc2	equ	0xFDE
  8232                           postdec2	equ	0xFDD
  8233                           plusw2	equ	0xFDB
  8234                           fsr2h	equ	0xFDA
  8235                           fsr2l	equ	0xFD9
  8236                           status	equ	0xFD8
  8237                           
  8238 ;; *************** function _TMR1_Initialize *****************
  8239 ;; Defined at:
  8240 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  8241 ;; Parameters:    Size  Location     Type
  8242 ;;		None
  8243 ;; Auto vars:     Size  Location     Type
  8244 ;;		None
  8245 ;; Return value:  Size  Location     Type
  8246 ;;		None               void
  8247 ;; Registers used:
  8248 ;;		wreg, status,2, cstack
  8249 ;; Tracked objects:
  8250 ;;		On entry : 0/0
  8251 ;;		On exit  : 0/0
  8252 ;;		Unchanged: 0/0
  8253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8254 ;;      Params:         0       0       0       0       0       0       0
  8255 ;;      Locals:         0       0       0       0       0       0       0
  8256 ;;      Temps:          0       0       0       0       0       0       0
  8257 ;;      Totals:         0       0       0       0       0       0       0
  8258 ;;Total ram usage:        0 bytes
  8259 ;; Hardware stack levels used:    1
  8260 ;; Hardware stack levels required when called:    5
  8261 ;; This function calls:
  8262 ;;		_TMR1_StartTimer
  8263 ;; This function is called by:
  8264 ;;		_SYSTEM_Initialize
  8265 ;; This function uses a non-reentrant model
  8266 ;;
  8267                           
  8268                           	psect	text31
  8269  00195C                     __ptext31:
  8270                           	opt stack 0
  8271  00195C                     _TMR1_Initialize:
  8272                           	opt stack 24
  8273                           
  8274                           ;tmr1.c: 67: T1CON = 0x40;
  8275                           
  8276                           ;incstack = 0
  8277  00195C  0E40               	movlw	64
  8278  00195E  6ECD               	movwf	4045,c	;volatile
  8279                           
  8280                           ;tmr1.c: 70: T1GCON = 0x00;
  8281  001960  0E00               	movlw	0
  8282  001962  6ECC               	movwf	4044,c	;volatile
  8283                           
  8284                           ;tmr1.c: 73: TMR1H = 0xE0;
  8285  001964  0EE0               	movlw	224
  8286  001966  6ECF               	movwf	4047,c	;volatile
  8287                           
  8288                           ;tmr1.c: 76: TMR1L = 0xC0;
  8289  001968  0EC0               	movlw	192
  8290  00196A  6ECE               	movwf	4046,c	;volatile
  8291                           
  8292                           ;tmr1.c: 79: timer1ReloadVal = TMR1;
  8293  00196C  CFCE F0DF          	movff	4046,_timer1ReloadVal	;volatile
  8294  001970  CFCF F0E0          	movff	4047,_timer1ReloadVal+1	;volatile
  8295                           
  8296                           ;tmr1.c: 82: PIR1bits.TMR1IF = 0;
  8297  001974  909E               	bcf	3998,0,c	;volatile
  8298                           
  8299                           ;tmr1.c: 85: TMR1_StartTimer();
  8300  001976  EC9F  F00D         	call	_TMR1_StartTimer	;wreg free
  8301  00197A  0012               	return		;funcret
  8302  00197C                     __end_of_TMR1_Initialize:
  8303                           	opt stack 0
  8304                           tosu	equ	0xFFF
  8305                           tosh	equ	0xFFE
  8306                           tosl	equ	0xFFD
  8307                           pclath	equ	0xFFA
  8308                           tblptru	equ	0xFF8
  8309                           tblptrh	equ	0xFF7
  8310                           tblptrl	equ	0xFF6
  8311                           tablat	equ	0xFF5
  8312                           prodh	equ	0xFF4
  8313                           prodl	equ	0xFF3
  8314                           intcon	equ	0xFF2
  8315                           postinc0	equ	0xFEE
  8316                           wreg	equ	0xFE8
  8317                           postdec1	equ	0xFE5
  8318                           fsr1h	equ	0xFE2
  8319                           fsr1l	equ	0xFE1
  8320                           indf2	equ	0xFDF
  8321                           postinc2	equ	0xFDE
  8322                           postdec2	equ	0xFDD
  8323                           plusw2	equ	0xFDB
  8324                           fsr2h	equ	0xFDA
  8325                           fsr2l	equ	0xFD9
  8326                           status	equ	0xFD8
  8327                           
  8328 ;; *************** function _TMR1_StartTimer *****************
  8329 ;; Defined at:
  8330 ;;		line 88 in file "mcc_generated_files/tmr1.c"
  8331 ;; Parameters:    Size  Location     Type
  8332 ;;		None
  8333 ;; Auto vars:     Size  Location     Type
  8334 ;;		None
  8335 ;; Return value:  Size  Location     Type
  8336 ;;		None               void
  8337 ;; Registers used:
  8338 ;;		None
  8339 ;; Tracked objects:
  8340 ;;		On entry : 0/0
  8341 ;;		On exit  : 0/0
  8342 ;;		Unchanged: 0/0
  8343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8344 ;;      Params:         0       0       0       0       0       0       0
  8345 ;;      Locals:         0       0       0       0       0       0       0
  8346 ;;      Temps:          0       0       0       0       0       0       0
  8347 ;;      Totals:         0       0       0       0       0       0       0
  8348 ;;Total ram usage:        0 bytes
  8349 ;; Hardware stack levels used:    1
  8350 ;; Hardware stack levels required when called:    4
  8351 ;; This function calls:
  8352 ;;		Nothing
  8353 ;; This function is called by:
  8354 ;;		_TMR1_Initialize
  8355 ;; This function uses a non-reentrant model
  8356 ;;
  8357                           
  8358                           	psect	text32
  8359  001B3E                     __ptext32:
  8360                           	opt stack 0
  8361  001B3E                     _TMR1_StartTimer:
  8362                           	opt stack 24
  8363                           
  8364                           ;tmr1.c: 90: T1CONbits.TMR1ON = 1;
  8365                           
  8366                           ;incstack = 0
  8367  001B3E  80CD               	bsf	4045,0,c	;volatile
  8368  001B40  0012               	return		;funcret
  8369  001B42                     __end_of_TMR1_StartTimer:
  8370                           	opt stack 0
  8371                           tosu	equ	0xFFF
  8372                           tosh	equ	0xFFE
  8373                           tosl	equ	0xFFD
  8374                           pclath	equ	0xFFA
  8375                           tblptru	equ	0xFF8
  8376                           tblptrh	equ	0xFF7
  8377                           tblptrl	equ	0xFF6
  8378                           tablat	equ	0xFF5
  8379                           prodh	equ	0xFF4
  8380                           prodl	equ	0xFF3
  8381                           intcon	equ	0xFF2
  8382                           postinc0	equ	0xFEE
  8383                           wreg	equ	0xFE8
  8384                           postdec1	equ	0xFE5
  8385                           fsr1h	equ	0xFE2
  8386                           fsr1l	equ	0xFE1
  8387                           indf2	equ	0xFDF
  8388                           postinc2	equ	0xFDE
  8389                           postdec2	equ	0xFDD
  8390                           plusw2	equ	0xFDB
  8391                           fsr2h	equ	0xFDA
  8392                           fsr2l	equ	0xFD9
  8393                           status	equ	0xFD8
  8394                           
  8395 ;; *************** function _PIN_MANAGER_Initialize *****************
  8396 ;; Defined at:
  8397 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  8398 ;; Parameters:    Size  Location     Type
  8399 ;;		None
  8400 ;; Auto vars:     Size  Location     Type
  8401 ;;		None
  8402 ;; Return value:  Size  Location     Type
  8403 ;;		None               void
  8404 ;; Registers used:
  8405 ;;		wreg, status,2
  8406 ;; Tracked objects:
  8407 ;;		On entry : 0/0
  8408 ;;		On exit  : 0/0
  8409 ;;		Unchanged: 0/0
  8410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8411 ;;      Params:         0       0       0       0       0       0       0
  8412 ;;      Locals:         0       0       0       0       0       0       0
  8413 ;;      Temps:          0       0       0       0       0       0       0
  8414 ;;      Totals:         0       0       0       0       0       0       0
  8415 ;;Total ram usage:        0 bytes
  8416 ;; Hardware stack levels used:    1
  8417 ;; Hardware stack levels required when called:    4
  8418 ;; This function calls:
  8419 ;;		Nothing
  8420 ;; This function is called by:
  8421 ;;		_SYSTEM_Initialize
  8422 ;; This function uses a non-reentrant model
  8423 ;;
  8424                           
  8425                           	psect	text33
  8426  001666                     __ptext33:
  8427                           	opt stack 0
  8428  001666                     _PIN_MANAGER_Initialize:
  8429                           	opt stack 25
  8430                           
  8431                           ;pin_manager.c: 51: LATA = 0x00;
  8432                           
  8433                           ;incstack = 0
  8434  001666  0E00               	movlw	0
  8435  001668  6E89               	movwf	3977,c	;volatile
  8436                           
  8437                           ;pin_manager.c: 52: TRISA = 0xFF;
  8438  00166A  6892               	setf	3986,c	;volatile
  8439                           
  8440                           ;pin_manager.c: 53: ANSELA = 0x2F;
  8441  00166C  0E2F               	movlw	47
  8442  00166E  010F               	movlb	15	; () banked
  8443  001670  6F38               	movwf	56,b	;volatile
  8444                           
  8445                           ;pin_manager.c: 55: LATB = 0x00;
  8446  001672  0E00               	movlw	0
  8447  001674  6E8A               	movwf	3978,c	;volatile
  8448                           
  8449                           ; BSR set to: 15
  8450                           ;pin_manager.c: 56: TRISB = 0xFF;
  8451  001676  6893               	setf	3987,c	;volatile
  8452                           
  8453                           ;pin_manager.c: 57: ANSELB = 0x3F;
  8454  001678  0E3F               	movlw	63
  8455  00167A  010F               	movlb	15	; () banked
  8456  00167C  6F39               	movwf	57,b	;volatile
  8457                           
  8458                           ;pin_manager.c: 58: WPUB = 0x00;
  8459  00167E  0E00               	movlw	0
  8460  001680  6E61               	movwf	3937,c	;volatile
  8461                           
  8462                           ;pin_manager.c: 60: LATC = 0x18;
  8463  001682  0E18               	movlw	24
  8464  001684  6E8B               	movwf	3979,c	;volatile
  8465                           
  8466                           ; BSR set to: 15
  8467                           ;pin_manager.c: 61: TRISC = 0xFF;
  8468  001686  6894               	setf	3988,c	;volatile
  8469                           
  8470                           ;pin_manager.c: 62: ANSELC = 0x20;
  8471  001688  0E20               	movlw	32
  8472  00168A  010F               	movlb	15	; () banked
  8473  00168C  6F3A               	movwf	58,b	;volatile
  8474                           
  8475                           ;pin_manager.c: 64: LATD = 0x00;
  8476  00168E  0E00               	movlw	0
  8477  001690  6E8C               	movwf	3980,c	;volatile
  8478                           
  8479                           ; BSR set to: 15
  8480                           ;pin_manager.c: 65: TRISD = 0xFF;
  8481  001692  6895               	setf	3989,c	;volatile
  8482                           
  8483                           ; BSR set to: 15
  8484                           ;pin_manager.c: 66: ANSELD = 0xFF;
  8485  001694  010F               	movlb	15	; () banked
  8486  001696  693B               	setf	59,b	;volatile
  8487                           
  8488                           ;pin_manager.c: 68: LATE = 0x00;
  8489  001698  0E00               	movlw	0
  8490  00169A  6E8D               	movwf	3981,c	;volatile
  8491                           
  8492                           ;pin_manager.c: 69: TRISE = 0x07;
  8493  00169C  0E07               	movlw	7
  8494  00169E  6E96               	movwf	3990,c	;volatile
  8495                           
  8496                           ;pin_manager.c: 70: ANSELE = 0x07;
  8497  0016A0  0E07               	movlw	7
  8498  0016A2  010F               	movlb	15	; () banked
  8499  0016A4  6F3C               	movwf	60,b	;volatile
  8500                           
  8501                           ; BSR set to: 15
  8502                           ;pin_manager.c: 72: INTCON2bits.nRBPU = 0x01;
  8503  0016A6  8EF1               	bsf	intcon2,7,c	;volatile
  8504                           
  8505                           ; BSR set to: 15
  8506  0016A8  0012               	return		;funcret
  8507  0016AA                     __end_of_PIN_MANAGER_Initialize:
  8508                           	opt stack 0
  8509                           tosu	equ	0xFFF
  8510                           tosh	equ	0xFFE
  8511                           tosl	equ	0xFFD
  8512                           pclath	equ	0xFFA
  8513                           tblptru	equ	0xFF8
  8514                           tblptrh	equ	0xFF7
  8515                           tblptrl	equ	0xFF6
  8516                           tablat	equ	0xFF5
  8517                           prodh	equ	0xFF4
  8518                           prodl	equ	0xFF3
  8519                           intcon	equ	0xFF2
  8520                           intcon2	equ	0xFF1
  8521                           postinc0	equ	0xFEE
  8522                           wreg	equ	0xFE8
  8523                           postdec1	equ	0xFE5
  8524                           fsr1h	equ	0xFE2
  8525                           fsr1l	equ	0xFE1
  8526                           indf2	equ	0xFDF
  8527                           postinc2	equ	0xFDE
  8528                           postdec2	equ	0xFDD
  8529                           plusw2	equ	0xFDB
  8530                           fsr2h	equ	0xFDA
  8531                           fsr2l	equ	0xFD9
  8532                           status	equ	0xFD8
  8533                           
  8534 ;; *************** function _OSCILLATOR_Initialize *****************
  8535 ;; Defined at:
  8536 ;;		line 124 in file "mcc_generated_files/mcc.c"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;		None
  8539 ;; Auto vars:     Size  Location     Type
  8540 ;;		None
  8541 ;; Return value:  Size  Location     Type
  8542 ;;		None               void
  8543 ;; Registers used:
  8544 ;;		wreg, status,2
  8545 ;; Tracked objects:
  8546 ;;		On entry : 0/0
  8547 ;;		On exit  : 0/0
  8548 ;;		Unchanged: 0/0
  8549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8550 ;;      Params:         0       0       0       0       0       0       0
  8551 ;;      Locals:         0       0       0       0       0       0       0
  8552 ;;      Temps:          0       0       0       0       0       0       0
  8553 ;;      Totals:         0       0       0       0       0       0       0
  8554 ;;Total ram usage:        0 bytes
  8555 ;; Hardware stack levels used:    1
  8556 ;; Hardware stack levels required when called:    4
  8557 ;; This function calls:
  8558 ;;		Nothing
  8559 ;; This function is called by:
  8560 ;;		_SYSTEM_Initialize
  8561 ;; This function uses a non-reentrant model
  8562 ;;
  8563                           
  8564                           	psect	text34
  8565  001B00                     __ptext34:
  8566                           	opt stack 0
  8567  001B00                     _OSCILLATOR_Initialize:
  8568                           	opt stack 25
  8569                           
  8570                           ;mcc.c: 126: OSCCON = 0x70;
  8571                           
  8572                           ; BSR set to: 15
  8573                           ;incstack = 0
  8574  001B00  0E70               	movlw	112
  8575  001B02  6ED3               	movwf	4051,c	;volatile
  8576                           
  8577                           ;mcc.c: 128: OSCCON2 = 0x04;
  8578  001B04  0E04               	movlw	4
  8579  001B06  6ED2               	movwf	4050,c	;volatile
  8580                           
  8581                           ;mcc.c: 130: OSCTUNE = 0x00;
  8582  001B08  0E00               	movlw	0
  8583  001B0A  6E9B               	movwf	3995,c	;volatile
  8584  001B0C  0012               	return		;funcret
  8585  001B0E                     __end_of_OSCILLATOR_Initialize:
  8586                           	opt stack 0
  8587                           tosu	equ	0xFFF
  8588                           tosh	equ	0xFFE
  8589                           tosl	equ	0xFFD
  8590                           pclath	equ	0xFFA
  8591                           tblptru	equ	0xFF8
  8592                           tblptrh	equ	0xFF7
  8593                           tblptrl	equ	0xFF6
  8594                           tablat	equ	0xFF5
  8595                           prodh	equ	0xFF4
  8596                           prodl	equ	0xFF3
  8597                           intcon	equ	0xFF2
  8598                           intcon2	equ	0xFF1
  8599                           postinc0	equ	0xFEE
  8600                           wreg	equ	0xFE8
  8601                           postdec1	equ	0xFE5
  8602                           fsr1h	equ	0xFE2
  8603                           fsr1l	equ	0xFE1
  8604                           indf2	equ	0xFDF
  8605                           postinc2	equ	0xFDE
  8606                           postdec2	equ	0xFDD
  8607                           plusw2	equ	0xFDB
  8608                           fsr2h	equ	0xFDA
  8609                           fsr2l	equ	0xFD9
  8610                           status	equ	0xFD8
  8611                           
  8612 ;; *************** function _INTERRUPT_Initialize *****************
  8613 ;; Defined at:
  8614 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8615 ;; Parameters:    Size  Location     Type
  8616 ;;		None
  8617 ;; Auto vars:     Size  Location     Type
  8618 ;;		None
  8619 ;; Return value:  Size  Location     Type
  8620 ;;		None               void
  8621 ;; Registers used:
  8622 ;;		None
  8623 ;; Tracked objects:
  8624 ;;		On entry : 0/0
  8625 ;;		On exit  : 0/0
  8626 ;;		Unchanged: 0/0
  8627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8628 ;;      Params:         0       0       0       0       0       0       0
  8629 ;;      Locals:         0       0       0       0       0       0       0
  8630 ;;      Temps:          0       0       0       0       0       0       0
  8631 ;;      Totals:         0       0       0       0       0       0       0
  8632 ;;Total ram usage:        0 bytes
  8633 ;; Hardware stack levels used:    1
  8634 ;; Hardware stack levels required when called:    4
  8635 ;; This function calls:
  8636 ;;		Nothing
  8637 ;; This function is called by:
  8638 ;;		_SYSTEM_Initialize
  8639 ;; This function uses a non-reentrant model
  8640 ;;
  8641                           
  8642                           	psect	text35
  8643  001AC0                     __ptext35:
  8644                           	opt stack 0
  8645  001AC0                     _INTERRUPT_Initialize:
  8646                           	opt stack 25
  8647                           
  8648                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  8649                           
  8650                           ;incstack = 0
  8651  001AC0  9ED0               	bcf	4048,7,c	;volatile
  8652                           
  8653                           ;interrupt_manager.c: 59: IPR1bits.SSP1IP = 0;
  8654  001AC2  969F               	bcf	3999,3,c	;volatile
  8655                           
  8656                           ;interrupt_manager.c: 61: IPR2bits.BCL1IP = 0;
  8657  001AC4  96A2               	bcf	4002,3,c	;volatile
  8658                           
  8659                           ;interrupt_manager.c: 63: IPR1bits.RC1IP = 0;
  8660  001AC6  9A9F               	bcf	3999,5,c	;volatile
  8661                           
  8662                           ;interrupt_manager.c: 65: IPR1bits.TX1IP = 0;
  8663  001AC8  989F               	bcf	3999,4,c	;volatile
  8664                           
  8665                           ;interrupt_manager.c: 67: IPR1bits.CCP1IP = 0;
  8666  001ACA  949F               	bcf	3999,2,c	;volatile
  8667                           
  8668                           ;interrupt_manager.c: 69: IPR2bits.CCP2IP = 0;
  8669  001ACC  90A2               	bcf	4002,0,c	;volatile
  8670                           
  8671                           ;interrupt_manager.c: 71: IPR1bits.TMR2IP = 0;
  8672  001ACE  929F               	bcf	3999,1,c	;volatile
  8673                           
  8674                           ;interrupt_manager.c: 73: IPR1bits.ADIP = 0;
  8675  001AD0  9C9F               	bcf	3999,6,c	;volatile
  8676  001AD2  0012               	return		;funcret
  8677  001AD4                     __end_of_INTERRUPT_Initialize:
  8678                           	opt stack 0
  8679                           tosu	equ	0xFFF
  8680                           tosh	equ	0xFFE
  8681                           tosl	equ	0xFFD
  8682                           pclath	equ	0xFFA
  8683                           tblptru	equ	0xFF8
  8684                           tblptrh	equ	0xFF7
  8685                           tblptrl	equ	0xFF6
  8686                           tablat	equ	0xFF5
  8687                           prodh	equ	0xFF4
  8688                           prodl	equ	0xFF3
  8689                           intcon	equ	0xFF2
  8690                           intcon2	equ	0xFF1
  8691                           postinc0	equ	0xFEE
  8692                           wreg	equ	0xFE8
  8693                           postdec1	equ	0xFE5
  8694                           fsr1h	equ	0xFE2
  8695                           fsr1l	equ	0xFE1
  8696                           indf2	equ	0xFDF
  8697                           postinc2	equ	0xFDE
  8698                           postdec2	equ	0xFDD
  8699                           plusw2	equ	0xFDB
  8700                           fsr2h	equ	0xFDA
  8701                           fsr2l	equ	0xFD9
  8702                           status	equ	0xFD8
  8703                           
  8704 ;; *************** function _EUSART1_Initialize *****************
  8705 ;; Defined at:
  8706 ;;		line 76 in file "mcc_generated_files/eusart1.c"
  8707 ;; Parameters:    Size  Location     Type
  8708 ;;		None
  8709 ;; Auto vars:     Size  Location     Type
  8710 ;;		None
  8711 ;; Return value:  Size  Location     Type
  8712 ;;		None               void
  8713 ;; Registers used:
  8714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8715 ;; Tracked objects:
  8716 ;;		On entry : 0/0
  8717 ;;		On exit  : 0/0
  8718 ;;		Unchanged: 0/0
  8719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8720 ;;      Params:         0       0       0       0       0       0       0
  8721 ;;      Locals:         0       0       0       0       0       0       0
  8722 ;;      Temps:          0       0       0       0       0       0       0
  8723 ;;      Totals:         0       0       0       0       0       0       0
  8724 ;;Total ram usage:        0 bytes
  8725 ;; Hardware stack levels used:    1
  8726 ;; Hardware stack levels required when called:    6
  8727 ;; This function calls:
  8728 ;;		_UART_buff_init
  8729 ;; This function is called by:
  8730 ;;		_SYSTEM_Initialize
  8731 ;;		_CommsStart
  8732 ;; This function uses a non-reentrant model
  8733 ;;
  8734                           
  8735                           	psect	text36
  8736  00172C                     __ptext36:
  8737                           	opt stack 0
  8738  00172C                     _EUSART1_Initialize:
  8739                           	opt stack 23
  8740                           
  8741                           ;eusart1.c: 78: PIE1bits.RC1IE = 0;
  8742                           
  8743                           ;incstack = 0
  8744  00172C  9A9D               	bcf	3997,5,c	;volatile
  8745                           
  8746                           ;eusart1.c: 79: PIE1bits.TX1IE = 0;
  8747  00172E  989D               	bcf	3997,4,c	;volatile
  8748                           
  8749                           ;eusart1.c: 84: BAUD1CON = 0x48;
  8750  001730  0E48               	movlw	72
  8751  001732  6EB8               	movwf	4024,c	;volatile
  8752                           
  8753                           ;eusart1.c: 87: RC1STA = 0x98;
  8754  001734  0E98               	movlw	152
  8755  001736  6EAB               	movwf	4011,c	;volatile
  8756                           
  8757                           ;eusart1.c: 90: TX1STA = 0x26;
  8758  001738  0E26               	movlw	38
  8759  00173A  6EAC               	movwf	4012,c	;volatile
  8760                           
  8761                           ;eusart1.c: 93: SPBRG1 = (((16000000/38400)/4)-1);
  8762  00173C  0E67               	movlw	103
  8763  00173E  6EAF               	movwf	4015,c	;volatile
  8764                           
  8765                           ;eusart1.c: 96: SPBRGH1 = 0x00;
  8766  001740  0E00               	movlw	0
  8767  001742  6EB0               	movwf	4016,c	;volatile
  8768                           
  8769                           ;eusart1.c: 99: TXREG1 = 0x00;
  8770  001744  0E00               	movlw	0
  8771  001746  6EAD               	movwf	4013,c	;volatile
  8772                           
  8773                           ;eusart1.c: 102: RCREG1 = 0x00;
  8774  001748  0E00               	movlw	0
  8775  00174A  6EAE               	movwf	4014,c	;volatile
  8776                           
  8777                           ;eusart1.c: 104: UART_buff_init(&input_buffer);
  8778  00174C  0E00               	movlw	low _input_buffer
  8779  00174E  6E23               	movwf	UART_buff_init@_this,c
  8780  001750  0E04               	movlw	high _input_buffer
  8781  001752  6E24               	movwf	UART_buff_init@_this+1,c
  8782  001754  ECCD  F00C         	call	_UART_buff_init	;wreg free
  8783                           
  8784                           ;eusart1.c: 105: UART_buff_init(&output_buffer);
  8785  001758  0E00               	movlw	low _output_buffer
  8786  00175A  6E23               	movwf	UART_buff_init@_this,c
  8787  00175C  0E05               	movlw	high _output_buffer
  8788  00175E  6E24               	movwf	UART_buff_init@_this+1,c
  8789  001760  ECCD  F00C         	call	_UART_buff_init	;wreg free
  8790                           
  8791                           ;eusart1.c: 107: PIE1bits.RC1IE = 1;
  8792  001764  8A9D               	bsf	3997,5,c	;volatile
  8793  001766  0012               	return		;funcret
  8794  001768                     __end_of_EUSART1_Initialize:
  8795                           	opt stack 0
  8796                           tosu	equ	0xFFF
  8797                           tosh	equ	0xFFE
  8798                           tosl	equ	0xFFD
  8799                           pclath	equ	0xFFA
  8800                           tblptru	equ	0xFF8
  8801                           tblptrh	equ	0xFF7
  8802                           tblptrl	equ	0xFF6
  8803                           tablat	equ	0xFF5
  8804                           prodh	equ	0xFF4
  8805                           prodl	equ	0xFF3
  8806                           intcon	equ	0xFF2
  8807                           intcon2	equ	0xFF1
  8808                           postinc0	equ	0xFEE
  8809                           wreg	equ	0xFE8
  8810                           postdec1	equ	0xFE5
  8811                           fsr1h	equ	0xFE2
  8812                           fsr1l	equ	0xFE1
  8813                           indf2	equ	0xFDF
  8814                           postinc2	equ	0xFDE
  8815                           postdec2	equ	0xFDD
  8816                           plusw2	equ	0xFDB
  8817                           fsr2h	equ	0xFDA
  8818                           fsr2l	equ	0xFD9
  8819                           status	equ	0xFD8
  8820                           
  8821 ;; *************** function _UART_buff_init *****************
  8822 ;; Defined at:
  8823 ;;		line 111 in file "mcc_generated_files/eusart1.c"
  8824 ;; Parameters:    Size  Location     Type
  8825 ;;  _this           2   34[COMRAM] PTR struct UART_ring_buf
  8826 ;;		 -> output_buffer(206), input_buffer(206), 
  8827 ;; Auto vars:     Size  Location     Type
  8828 ;;		None
  8829 ;; Return value:  Size  Location     Type
  8830 ;;		None               void
  8831 ;; Registers used:
  8832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8833 ;; Tracked objects:
  8834 ;;		On entry : 0/0
  8835 ;;		On exit  : 0/0
  8836 ;;		Unchanged: 0/0
  8837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8838 ;;      Params:         2       0       0       0       0       0       0
  8839 ;;      Locals:         0       0       0       0       0       0       0
  8840 ;;      Temps:          0       0       0       0       0       0       0
  8841 ;;      Totals:         2       0       0       0       0       0       0
  8842 ;;Total ram usage:        2 bytes
  8843 ;; Hardware stack levels used:    1
  8844 ;; Hardware stack levels required when called:    5
  8845 ;; This function calls:
  8846 ;;		_memset
  8847 ;; This function is called by:
  8848 ;;		_EUSART1_Initialize
  8849 ;; This function uses a non-reentrant model
  8850 ;;
  8851                           
  8852                           	psect	text37
  8853  00199A                     __ptext37:
  8854                           	opt stack 0
  8855  00199A                     _UART_buff_init:
  8856                           	opt stack 23
  8857                           
  8858                           ;eusart1.c: 120: memset(_this, 0, sizeof (*_this));
  8859                           
  8860                           ;incstack = 0
  8861  00199A  C023  F01B         	movff	UART_buff_init@_this,memset@p1
  8862  00199E  C024  F01C         	movff	UART_buff_init@_this+1,memset@p1+1
  8863  0019A2  0E00               	movlw	0
  8864  0019A4  6E1E               	movwf	memset@c+1,c
  8865  0019A6  0E00               	movlw	0
  8866  0019A8  6E1D               	movwf	memset@c,c
  8867  0019AA  0E00               	movlw	0
  8868  0019AC  6E20               	movwf	memset@n+1,c
  8869  0019AE  0ECE               	movlw	206
  8870  0019B0  6E1F               	movwf	memset@n,c
  8871  0019B2  EC34  F00C         	call	_memset	;wreg free
  8872  0019B6  0012               	return		;funcret
  8873  0019B8                     __end_of_UART_buff_init:
  8874                           	opt stack 0
  8875                           tosu	equ	0xFFF
  8876                           tosh	equ	0xFFE
  8877                           tosl	equ	0xFFD
  8878                           pclath	equ	0xFFA
  8879                           tblptru	equ	0xFF8
  8880                           tblptrh	equ	0xFF7
  8881                           tblptrl	equ	0xFF6
  8882                           tablat	equ	0xFF5
  8883                           prodh	equ	0xFF4
  8884                           prodl	equ	0xFF3
  8885                           intcon	equ	0xFF2
  8886                           intcon2	equ	0xFF1
  8887                           postinc0	equ	0xFEE
  8888                           wreg	equ	0xFE8
  8889                           postdec1	equ	0xFE5
  8890                           fsr1h	equ	0xFE2
  8891                           fsr1l	equ	0xFE1
  8892                           indf2	equ	0xFDF
  8893                           postinc2	equ	0xFDE
  8894                           postdec2	equ	0xFDD
  8895                           plusw2	equ	0xFDB
  8896                           fsr2h	equ	0xFDA
  8897                           fsr2l	equ	0xFD9
  8898                           status	equ	0xFD8
  8899                           
  8900 ;; *************** function _memset *****************
  8901 ;; Defined at:
  8902 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
  8903 ;; Parameters:    Size  Location     Type
  8904 ;;  p1              2   26[COMRAM] PTR void 
  8905 ;;		 -> ring_buffer(206), output_buffer(206), input_buffer(206), 
  8906 ;;  c               2   28[COMRAM] int 
  8907 ;;  n               2   30[COMRAM] unsigned int 
  8908 ;; Auto vars:     Size  Location     Type
  8909 ;;  p               2   32[COMRAM] PTR unsigned char 
  8910 ;;		 -> ring_buffer(206), output_buffer(206), input_buffer(206), 
  8911 ;; Return value:  Size  Location     Type
  8912 ;;                  2   26[COMRAM] PTR void 
  8913 ;; Registers used:
  8914 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8915 ;; Tracked objects:
  8916 ;;		On entry : 0/0
  8917 ;;		On exit  : 0/0
  8918 ;;		Unchanged: 0/0
  8919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8920 ;;      Params:         6       0       0       0       0       0       0
  8921 ;;      Locals:         2       0       0       0       0       0       0
  8922 ;;      Temps:          0       0       0       0       0       0       0
  8923 ;;      Totals:         8       0       0       0       0       0       0
  8924 ;;Total ram usage:        8 bytes
  8925 ;; Hardware stack levels used:    1
  8926 ;; Hardware stack levels required when called:    4
  8927 ;; This function calls:
  8928 ;;		Nothing
  8929 ;; This function is called by:
  8930 ;;		_UART_buff_init
  8931 ;;		_FastTransfer_buffer_flush
  8932 ;;		_UART_buff_flush
  8933 ;; This function uses a non-reentrant model
  8934 ;;
  8935                           
  8936                           	psect	text38
  8937  001868                     __ptext38:
  8938                           	opt stack 0
  8939  001868                     _memset:
  8940                           	opt stack 22
  8941                           
  8942                           ;incstack = 0
  8943  001868  C01B  F021         	movff	memset@p1,memset@p
  8944  00186C  C01C  F022         	movff	memset@p1+1,memset@p+1
  8945  001870  D008               	goto	l6558
  8946  001872                     l6554:
  8947  001872  C021  FFD9         	movff	memset@p,fsr2l
  8948  001876  C022  FFDA         	movff	memset@p+1,fsr2h
  8949  00187A  C01D  FFDF         	movff	memset@c,indf2
  8950  00187E  4A21               	infsnz	memset@p,f,c
  8951  001880  2A22               	incf	memset@p+1,f,c
  8952  001882                     l6558:
  8953  001882  061F               	decf	memset@n,f,c
  8954  001884  A0D8               	btfss	status,0,c
  8955  001886  0620               	decf	memset@n+1,f,c
  8956  001888  281F               	incf	memset@n,w,c
  8957  00188A  E1F3               	bnz	l6554
  8958  00188C  2820               	incf	memset@n+1,w,c
  8959  00188E  B4D8               	btfsc	status,2,c
  8960  001890  0012               	return	
  8961  001892  D7EF               	goto	l6554
  8962  001894                     __end_of_memset:
  8963                           	opt stack 0
  8964                           tosu	equ	0xFFF
  8965                           tosh	equ	0xFFE
  8966                           tosl	equ	0xFFD
  8967                           pclath	equ	0xFFA
  8968                           tblptru	equ	0xFF8
  8969                           tblptrh	equ	0xFF7
  8970                           tblptrl	equ	0xFF6
  8971                           tablat	equ	0xFF5
  8972                           prodh	equ	0xFF4
  8973                           prodl	equ	0xFF3
  8974                           intcon	equ	0xFF2
  8975                           intcon2	equ	0xFF1
  8976                           postinc0	equ	0xFEE
  8977                           wreg	equ	0xFE8
  8978                           postdec1	equ	0xFE5
  8979                           fsr1h	equ	0xFE2
  8980                           fsr1l	equ	0xFE1
  8981                           indf2	equ	0xFDF
  8982                           postinc2	equ	0xFDE
  8983                           postdec2	equ	0xFDD
  8984                           plusw2	equ	0xFDB
  8985                           fsr2h	equ	0xFDA
  8986                           fsr2l	equ	0xFD9
  8987                           status	equ	0xFD8
  8988                           
  8989 ;; *************** function _ECCP2_Initialize *****************
  8990 ;; Defined at:
  8991 ;;		line 58 in file "mcc_generated_files/eccp2.c"
  8992 ;; Parameters:    Size  Location     Type
  8993 ;;		None
  8994 ;; Auto vars:     Size  Location     Type
  8995 ;;		None
  8996 ;; Return value:  Size  Location     Type
  8997 ;;		None               void
  8998 ;; Registers used:
  8999 ;;		wreg, status,2
  9000 ;; Tracked objects:
  9001 ;;		On entry : 0/0
  9002 ;;		On exit  : 0/0
  9003 ;;		Unchanged: 0/0
  9004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9005 ;;      Params:         0       0       0       0       0       0       0
  9006 ;;      Locals:         0       0       0       0       0       0       0
  9007 ;;      Temps:          0       0       0       0       0       0       0
  9008 ;;      Totals:         0       0       0       0       0       0       0
  9009 ;;Total ram usage:        0 bytes
  9010 ;; Hardware stack levels used:    1
  9011 ;; Hardware stack levels required when called:    4
  9012 ;; This function calls:
  9013 ;;		Nothing
  9014 ;; This function is called by:
  9015 ;;		_SYSTEM_Initialize
  9016 ;; This function uses a non-reentrant model
  9017 ;;
  9018                           
  9019                           	psect	text39
  9020  0019F0                     __ptext39:
  9021                           	opt stack 0
  9022  0019F0                     _ECCP2_Initialize:
  9023                           	opt stack 25
  9024                           
  9025                           ;eccp2.c: 62: CCP2CON = 0x05;
  9026                           
  9027                           ;incstack = 0
  9028  0019F0  0E05               	movlw	5
  9029  0019F2  6E66               	movwf	3942,c	;volatile
  9030                           
  9031                           ;eccp2.c: 65: CCPR2L = 0x00;
  9032  0019F4  0E00               	movlw	0
  9033  0019F6  6E67               	movwf	3943,c	;volatile
  9034                           
  9035                           ;eccp2.c: 68: CCPR2H = 0x00;
  9036  0019F8  0E00               	movlw	0
  9037  0019FA  6E68               	movwf	3944,c	;volatile
  9038                           
  9039                           ;eccp2.c: 71: PIR2bits.CCP2IF = 0;
  9040  0019FC  90A1               	bcf	4001,0,c	;volatile
  9041                           
  9042                           ;eccp2.c: 74: PIE2bits.CCP2IE = 1;
  9043  0019FE  80A0               	bsf	4000,0,c	;volatile
  9044                           
  9045                           ;eccp2.c: 77: CCPTMRS0bits.C2TSEL = 0x0;
  9046  001A00  0EE7               	movlw	-25
  9047  001A02  010F               	movlb	15	; () banked
  9048  001A04  1749               	andwf	73,f,b	;volatile
  9049                           
  9050                           ; BSR set to: 15
  9051  001A06  0012               	return		;funcret
  9052  001A08                     __end_of_ECCP2_Initialize:
  9053                           	opt stack 0
  9054                           tosu	equ	0xFFF
  9055                           tosh	equ	0xFFE
  9056                           tosl	equ	0xFFD
  9057                           pclath	equ	0xFFA
  9058                           tblptru	equ	0xFF8
  9059                           tblptrh	equ	0xFF7
  9060                           tblptrl	equ	0xFF6
  9061                           tablat	equ	0xFF5
  9062                           prodh	equ	0xFF4
  9063                           prodl	equ	0xFF3
  9064                           intcon	equ	0xFF2
  9065                           intcon2	equ	0xFF1
  9066                           postinc0	equ	0xFEE
  9067                           wreg	equ	0xFE8
  9068                           postdec1	equ	0xFE5
  9069                           fsr1h	equ	0xFE2
  9070                           fsr1l	equ	0xFE1
  9071                           indf2	equ	0xFDF
  9072                           postinc2	equ	0xFDE
  9073                           postdec2	equ	0xFDD
  9074                           plusw2	equ	0xFDB
  9075                           fsr2h	equ	0xFDA
  9076                           fsr2l	equ	0xFD9
  9077                           status	equ	0xFD8
  9078                           
  9079 ;; *************** function _ECCP1_Initialize *****************
  9080 ;; Defined at:
  9081 ;;		line 58 in file "mcc_generated_files/eccp1.c"
  9082 ;; Parameters:    Size  Location     Type
  9083 ;;		None
  9084 ;; Auto vars:     Size  Location     Type
  9085 ;;		None
  9086 ;; Return value:  Size  Location     Type
  9087 ;;		None               void
  9088 ;; Registers used:
  9089 ;;		wreg, status,2
  9090 ;; Tracked objects:
  9091 ;;		On entry : 0/0
  9092 ;;		On exit  : 0/0
  9093 ;;		Unchanged: 0/0
  9094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9095 ;;      Params:         0       0       0       0       0       0       0
  9096 ;;      Locals:         0       0       0       0       0       0       0
  9097 ;;      Temps:          0       0       0       0       0       0       0
  9098 ;;      Totals:         0       0       0       0       0       0       0
  9099 ;;Total ram usage:        0 bytes
  9100 ;; Hardware stack levels used:    1
  9101 ;; Hardware stack levels required when called:    4
  9102 ;; This function calls:
  9103 ;;		Nothing
  9104 ;; This function is called by:
  9105 ;;		_SYSTEM_Initialize
  9106 ;; This function uses a non-reentrant model
  9107 ;;
  9108                           
  9109                           	psect	text40
  9110  001A08                     __ptext40:
  9111                           	opt stack 0
  9112  001A08                     _ECCP1_Initialize:
  9113                           	opt stack 25
  9114                           
  9115                           ;eccp1.c: 62: CCP1CON = 0x05;
  9116                           
  9117                           ; BSR set to: 15
  9118                           ;incstack = 0
  9119  001A08  0E05               	movlw	5
  9120  001A0A  6EBD               	movwf	4029,c	;volatile
  9121                           
  9122                           ;eccp1.c: 65: CCPR1L = 0x00;
  9123  001A0C  0E00               	movlw	0
  9124  001A0E  6EBE               	movwf	4030,c	;volatile
  9125                           
  9126                           ;eccp1.c: 68: CCPR1H = 0x00;
  9127  001A10  0E00               	movlw	0
  9128  001A12  6EBF               	movwf	4031,c	;volatile
  9129                           
  9130                           ;eccp1.c: 71: PIR1bits.CCP1IF = 0;
  9131  001A14  949E               	bcf	3998,2,c	;volatile
  9132                           
  9133                           ;eccp1.c: 74: PIE1bits.CCP1IE = 1;
  9134  001A16  849D               	bsf	3997,2,c	;volatile
  9135                           
  9136                           ;eccp1.c: 77: CCPTMRS0bits.C1TSEL = 0x0;
  9137  001A18  0EFC               	movlw	-4
  9138  001A1A  010F               	movlb	15	; () banked
  9139  001A1C  1749               	andwf	73,f,b	;volatile
  9140                           
  9141                           ; BSR set to: 15
  9142  001A1E  0012               	return		;funcret
  9143  001A20                     __end_of_ECCP1_Initialize:
  9144                           	opt stack 0
  9145                           tosu	equ	0xFFF
  9146                           tosh	equ	0xFFE
  9147                           tosl	equ	0xFFD
  9148                           pclath	equ	0xFFA
  9149                           tblptru	equ	0xFF8
  9150                           tblptrh	equ	0xFF7
  9151                           tblptrl	equ	0xFF6
  9152                           tablat	equ	0xFF5
  9153                           prodh	equ	0xFF4
  9154                           prodl	equ	0xFF3
  9155                           intcon	equ	0xFF2
  9156                           intcon2	equ	0xFF1
  9157                           postinc0	equ	0xFEE
  9158                           wreg	equ	0xFE8
  9159                           postdec1	equ	0xFE5
  9160                           fsr1h	equ	0xFE2
  9161                           fsr1l	equ	0xFE1
  9162                           indf2	equ	0xFDF
  9163                           postinc2	equ	0xFDE
  9164                           postdec2	equ	0xFDD
  9165                           plusw2	equ	0xFDB
  9166                           fsr2h	equ	0xFDA
  9167                           fsr2l	equ	0xFD9
  9168                           status	equ	0xFD8
  9169                           
  9170 ;; *************** function _ADC_Initialize *****************
  9171 ;; Defined at:
  9172 ;;		line 58 in file "mcc_generated_files/adc.c"
  9173 ;; Parameters:    Size  Location     Type
  9174 ;;		None
  9175 ;; Auto vars:     Size  Location     Type
  9176 ;;		None
  9177 ;; Return value:  Size  Location     Type
  9178 ;;		None               void
  9179 ;; Registers used:
  9180 ;;		wreg, status,2
  9181 ;; Tracked objects:
  9182 ;;		On entry : 0/0
  9183 ;;		On exit  : 0/0
  9184 ;;		Unchanged: 0/0
  9185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9186 ;;      Params:         0       0       0       0       0       0       0
  9187 ;;      Locals:         0       0       0       0       0       0       0
  9188 ;;      Temps:          0       0       0       0       0       0       0
  9189 ;;      Totals:         0       0       0       0       0       0       0
  9190 ;;Total ram usage:        0 bytes
  9191 ;; Hardware stack levels used:    1
  9192 ;; Hardware stack levels required when called:    4
  9193 ;; This function calls:
  9194 ;;		Nothing
  9195 ;; This function is called by:
  9196 ;;		_SYSTEM_Initialize
  9197 ;;		_TempInit
  9198 ;; This function uses a non-reentrant model
  9199 ;;
  9200                           
  9201                           	psect	text41
  9202  001A20                     __ptext41:
  9203                           	opt stack 0
  9204  001A20                     _ADC_Initialize:
  9205                           	opt stack 25
  9206                           
  9207                           ;adc.c: 62: ADCON0 = 0x01;
  9208                           
  9209                           ; BSR set to: 15
  9210                           ;incstack = 0
  9211  001A20  0E01               	movlw	1
  9212  001A22  6EC2               	movwf	4034,c	;volatile
  9213                           
  9214                           ;adc.c: 65: ADCON1 = 0x80;
  9215  001A24  0E80               	movlw	128
  9216  001A26  6EC1               	movwf	4033,c	;volatile
  9217                           
  9218                           ;adc.c: 68: ADCON2 = 0x8A;
  9219  001A28  0E8A               	movlw	138
  9220  001A2A  6EC0               	movwf	4032,c	;volatile
  9221                           
  9222                           ;adc.c: 71: ADRESL = 0x00;
  9223  001A2C  0E00               	movlw	0
  9224  001A2E  6EC3               	movwf	4035,c	;volatile
  9225                           
  9226                           ;adc.c: 74: ADRESH = 0x00;
  9227  001A30  0E00               	movlw	0
  9228  001A32  6EC4               	movwf	4036,c	;volatile
  9229                           
  9230                           ;adc.c: 77: PIE1bits.ADIE = 1;
  9231  001A34  8C9D               	bsf	3997,6,c	;volatile
  9232  001A36  0012               	return		;funcret
  9233  001A38                     __end_of_ADC_Initialize:
  9234                           	opt stack 0
  9235                           tosu	equ	0xFFF
  9236                           tosh	equ	0xFFE
  9237                           tosl	equ	0xFFD
  9238                           pclath	equ	0xFFA
  9239                           tblptru	equ	0xFF8
  9240                           tblptrh	equ	0xFF7
  9241                           tblptrl	equ	0xFF6
  9242                           tablat	equ	0xFF5
  9243                           prodh	equ	0xFF4
  9244                           prodl	equ	0xFF3
  9245                           intcon	equ	0xFF2
  9246                           intcon2	equ	0xFF1
  9247                           postinc0	equ	0xFEE
  9248                           wreg	equ	0xFE8
  9249                           postdec1	equ	0xFE5
  9250                           fsr1h	equ	0xFE2
  9251                           fsr1l	equ	0xFE1
  9252                           indf2	equ	0xFDF
  9253                           postinc2	equ	0xFDE
  9254                           postdec2	equ	0xFDD
  9255                           plusw2	equ	0xFDB
  9256                           fsr2h	equ	0xFDA
  9257                           fsr2l	equ	0xFD9
  9258                           status	equ	0xFD8
  9259                           
  9260 ;; *************** function _INTERRUPT_InterruptManager *****************
  9261 ;; Defined at:
  9262 ;;		line 76 in file "mcc_generated_files/interrupt_manager.c"
  9263 ;; Parameters:    Size  Location     Type
  9264 ;;		None
  9265 ;; Auto vars:     Size  Location     Type
  9266 ;;		None
  9267 ;; Return value:  Size  Location     Type
  9268 ;;		None               void
  9269 ;; Registers used:
  9270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9271 ;; Tracked objects:
  9272 ;;		On entry : 0/0
  9273 ;;		On exit  : 0/0
  9274 ;;		Unchanged: 0/0
  9275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9276 ;;      Params:         0       0       0       0       0       0       0
  9277 ;;      Locals:         0       0       0       0       0       0       0
  9278 ;;      Temps:         14       0       0       0       0       0       0
  9279 ;;      Totals:        14       0       0       0       0       0       0
  9280 ;;Total ram usage:       14 bytes
  9281 ;; Hardware stack levels used:    1
  9282 ;; Hardware stack levels required when called:    3
  9283 ;; This function calls:
  9284 ;;		_ADC_ISR
  9285 ;;		_ECCP1_CaptureISR
  9286 ;;		_ECCP2_CaptureISR
  9287 ;;		_EUSART1_Receive_ISR
  9288 ;;		_EUSART1_Transmit_ISR
  9289 ;;		_I2C1_BusCollisionISR
  9290 ;;		_I2C1_ISR
  9291 ;;		_TMR2_ISR
  9292 ;; This function is called by:
  9293 ;;		Interrupt level 2
  9294 ;; This function uses a non-reentrant model
  9295 ;;
  9296                           
  9297                           	psect	intcode
  9298  000008                     __pintcode:
  9299                           	opt stack 0
  9300  000008                     _INTERRUPT_InterruptManager:
  9301                           	opt stack 21
  9302                           
  9303                           ;incstack = 0
  9304  000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9305  00000A  CFFA F00D          	movff	pclath,??_INTERRUPT_InterruptManager
  9306  00000E  CFFB F00E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  9307  000012  CFE9 F00F          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  9308  000016  CFEA F010          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  9309  00001A  CFE1 F011          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  9310  00001E  CFE2 F012          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  9311  000022  CFD9 F013          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  9312  000026  CFDA F014          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  9313  00002A  CFF3 F015          	movff	prodl,??_INTERRUPT_InterruptManager+8
  9314  00002E  CFF4 F016          	movff	prodh,??_INTERRUPT_InterruptManager+9
  9315  000032  CFF6 F017          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  9316  000036  CFF7 F018          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  9317  00003A  CFF8 F019          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  9318  00003E  CFF5 F01A          	movff	tablat,??_INTERRUPT_InterruptManager+13
  9319                           
  9320                           ;interrupt_manager.c: 78: if (PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1) {
  9321  000042  B69D               	btfsc	3997,3,c	;volatile
  9322  000044  A69E               	btfss	3998,3,c	;volatile
  9323  000046  D003               	goto	i2l425
  9324                           
  9325                           ;interrupt_manager.c: 79: I2C1_ISR();
  9326  000048  ECD1  F003         	call	_I2C1_ISR	;wreg free
  9327                           
  9328                           ;interrupt_manager.c: 80: } else if (PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1) {
  9329  00004C  D029               	goto	i2l441
  9330  00004E                     i2l425:
  9331  00004E  B6A0               	btfsc	4000,3,c	;volatile
  9332  000050  A6A1               	btfss	4001,3,c	;volatile
  9333  000052  D003               	goto	i2l427
  9334                           
  9335                           ;interrupt_manager.c: 81: I2C1_BusCollisionISR();
  9336  000054  ECA5  F00D         	call	_I2C1_BusCollisionISR	;wreg free
  9337                           
  9338                           ;interrupt_manager.c: 82: } else if (PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1) {
  9339  000058  D023               	goto	i2l441
  9340  00005A                     i2l427:
  9341  00005A  BA9D               	btfsc	3997,5,c	;volatile
  9342  00005C  AA9E               	btfss	3998,5,c	;volatile
  9343  00005E  D003               	goto	i2l429
  9344                           
  9345                           ;interrupt_manager.c: 83: EUSART1_Receive_ISR();
  9346  000060  ECDC  F00C         	call	_EUSART1_Receive_ISR	;wreg free
  9347                           
  9348                           ;interrupt_manager.c: 84: } else if (PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1) {
  9349  000064  D01D               	goto	i2l441
  9350  000066                     i2l429:
  9351  000066  B89D               	btfsc	3997,4,c	;volatile
  9352  000068  A89E               	btfss	3998,4,c	;volatile
  9353  00006A  D003               	goto	i2l431
  9354                           
  9355                           ;interrupt_manager.c: 85: EUSART1_Transmit_ISR();
  9356  00006C  EC02  F00C         	call	_EUSART1_Transmit_ISR	;wreg free
  9357                           
  9358                           ;interrupt_manager.c: 86: } else if (PIE1bits.CCP1IE == 1 && PIR1bits.CCP1IF == 1) {
  9359  000070  D017               	goto	i2l441
  9360  000072                     i2l431:
  9361  000072  B49D               	btfsc	3997,2,c	;volatile
  9362  000074  A49E               	btfss	3998,2,c	;volatile
  9363  000076  D003               	goto	i2l433
  9364                           
  9365                           ;interrupt_manager.c: 87: ECCP1_CaptureISR();
  9366  000078  EC28  F00D         	call	_ECCP1_CaptureISR	;wreg free
  9367                           
  9368                           ;interrupt_manager.c: 88: } else if (PIE2bits.CCP2IE == 1 && PIR2bits.CCP2IF == 1) {
  9369  00007C  D011               	goto	i2l441
  9370  00007E                     i2l433:
  9371  00007E  B0A0               	btfsc	4000,0,c	;volatile
  9372  000080  A0A1               	btfss	4001,0,c	;volatile
  9373  000082  D003               	goto	i2l435
  9374                           
  9375                           ;interrupt_manager.c: 89: ECCP2_CaptureISR();
  9376  000084  EC1C  F00D         	call	_ECCP2_CaptureISR	;wreg free
  9377                           
  9378                           ;interrupt_manager.c: 90: } else if (PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1) {
  9379  000088  D00B               	goto	i2l441
  9380  00008A                     i2l435:
  9381  00008A  B29D               	btfsc	3997,1,c	;volatile
  9382  00008C  A29E               	btfss	3998,1,c	;volatile
  9383  00008E  D003               	goto	i2l437
  9384                           
  9385                           ;interrupt_manager.c: 91: TMR2_ISR();
  9386  000090  EC99  F00D         	call	_TMR2_ISR	;wreg free
  9387                           
  9388                           ;interrupt_manager.c: 92: } else if (PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1) {
  9389  000094  D005               	goto	i2l441
  9390  000096                     i2l437:
  9391  000096  BC9D               	btfsc	3997,6,c	;volatile
  9392  000098  AC9E               	btfss	3998,6,c	;volatile
  9393  00009A  D002               	goto	i2l441
  9394                           
  9395                           ;interrupt_manager.c: 93: ADC_ISR();
  9396  00009C  ECA1  F00D         	call	_ADC_ISR	;wreg free
  9397  0000A0                     i2l441:
  9398  0000A0  C01A  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  9399  0000A4  C019  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  9400  0000A8  C018  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  9401  0000AC  C017  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  9402  0000B0  C016  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  9403  0000B4  C015  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  9404  0000B8  C014  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  9405  0000BC  C013  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  9406  0000C0  C012  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  9407  0000C4  C011  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  9408  0000C8  C010  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  9409  0000CC  C00F  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  9410  0000D0  C00E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  9411  0000D4  C00D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  9412  0000D8  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9413  0000DA  0011               	retfie		f
  9414  0000DC                     __end_of_INTERRUPT_InterruptManager:
  9415                           	opt stack 0
  9416                           tosu	equ	0xFFF
  9417                           tosh	equ	0xFFE
  9418                           tosl	equ	0xFFD
  9419                           pclatu	equ	0xFFB
  9420                           pclath	equ	0xFFA
  9421                           tblptru	equ	0xFF8
  9422                           tblptrh	equ	0xFF7
  9423                           tblptrl	equ	0xFF6
  9424                           tablat	equ	0xFF5
  9425                           prodh	equ	0xFF4
  9426                           prodl	equ	0xFF3
  9427                           intcon	equ	0xFF2
  9428                           intcon2	equ	0xFF1
  9429                           postinc0	equ	0xFEE
  9430                           fsr0h	equ	0xFEA
  9431                           fsr0l	equ	0xFE9
  9432                           wreg	equ	0xFE8
  9433                           postdec1	equ	0xFE5
  9434                           fsr1h	equ	0xFE2
  9435                           fsr1l	equ	0xFE1
  9436                           indf2	equ	0xFDF
  9437                           postinc2	equ	0xFDE
  9438                           postdec2	equ	0xFDD
  9439                           plusw2	equ	0xFDB
  9440                           fsr2h	equ	0xFDA
  9441                           fsr2l	equ	0xFD9
  9442                           status	equ	0xFD8
  9443                           
  9444 ;; *************** function _TMR2_ISR *****************
  9445 ;; Defined at:
  9446 ;;		line 107 in file "mcc_generated_files/tmr2.c"
  9447 ;; Parameters:    Size  Location     Type
  9448 ;;		None
  9449 ;; Auto vars:     Size  Location     Type
  9450 ;;		None
  9451 ;; Return value:  Size  Location     Type
  9452 ;;		None               void
  9453 ;; Registers used:
  9454 ;;		cstack
  9455 ;; Tracked objects:
  9456 ;;		On entry : 0/0
  9457 ;;		On exit  : 0/0
  9458 ;;		Unchanged: 0/0
  9459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9460 ;;      Params:         0       0       0       0       0       0       0
  9461 ;;      Locals:         0       0       0       0       0       0       0
  9462 ;;      Temps:          0       0       0       0       0       0       0
  9463 ;;      Totals:         0       0       0       0       0       0       0
  9464 ;;Total ram usage:        0 bytes
  9465 ;; Hardware stack levels used:    1
  9466 ;; Hardware stack levels required when called:    1
  9467 ;; This function calls:
  9468 ;;		_TMR2_CallBack
  9469 ;; This function is called by:
  9470 ;;		_INTERRUPT_InterruptManager
  9471 ;; This function uses a non-reentrant model
  9472 ;;
  9473                           
  9474                           	psect	text43
  9475  001B32                     __ptext43:
  9476                           	opt stack 0
  9477  001B32                     _TMR2_ISR:
  9478                           	opt stack 22
  9479                           
  9480                           ;tmr2.c: 110: PIR1bits.TMR2IF = 0;
  9481                           
  9482                           ;incstack = 0
  9483  001B32  929E               	bcf	3998,1,c	;volatile
  9484                           
  9485                           ;tmr2.c: 114: TMR2_CallBack();
  9486  001B34  ECA4  F00D         	call	_TMR2_CallBack	;wreg free
  9487  001B38  0012               	return		;funcret
  9488  001B3A                     __end_of_TMR2_ISR:
  9489                           	opt stack 0
  9490                           tosu	equ	0xFFF
  9491                           tosh	equ	0xFFE
  9492                           tosl	equ	0xFFD
  9493                           pclatu	equ	0xFFB
  9494                           pclath	equ	0xFFA
  9495                           tblptru	equ	0xFF8
  9496                           tblptrh	equ	0xFF7
  9497                           tblptrl	equ	0xFF6
  9498                           tablat	equ	0xFF5
  9499                           prodh	equ	0xFF4
  9500                           prodl	equ	0xFF3
  9501                           intcon	equ	0xFF2
  9502                           intcon2	equ	0xFF1
  9503                           postinc0	equ	0xFEE
  9504                           fsr0h	equ	0xFEA
  9505                           fsr0l	equ	0xFE9
  9506                           wreg	equ	0xFE8
  9507                           postdec1	equ	0xFE5
  9508                           fsr1h	equ	0xFE2
  9509                           fsr1l	equ	0xFE1
  9510                           indf2	equ	0xFDF
  9511                           postinc2	equ	0xFDE
  9512                           postdec2	equ	0xFDD
  9513                           plusw2	equ	0xFDB
  9514                           fsr2h	equ	0xFDA
  9515                           fsr2l	equ	0xFD9
  9516                           status	equ	0xFD8
  9517                           
  9518 ;; *************** function _TMR2_CallBack *****************
  9519 ;; Defined at:
  9520 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  9521 ;; Parameters:    Size  Location     Type
  9522 ;;		None
  9523 ;; Auto vars:     Size  Location     Type
  9524 ;;		None
  9525 ;; Return value:  Size  Location     Type
  9526 ;;		None               void
  9527 ;; Registers used:
  9528 ;;		None
  9529 ;; Tracked objects:
  9530 ;;		On entry : 0/0
  9531 ;;		On exit  : 0/0
  9532 ;;		Unchanged: 0/0
  9533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9534 ;;      Params:         0       0       0       0       0       0       0
  9535 ;;      Locals:         0       0       0       0       0       0       0
  9536 ;;      Temps:          0       0       0       0       0       0       0
  9537 ;;      Totals:         0       0       0       0       0       0       0
  9538 ;;Total ram usage:        0 bytes
  9539 ;; Hardware stack levels used:    1
  9540 ;; This function calls:
  9541 ;;		Nothing
  9542 ;; This function is called by:
  9543 ;;		_TMR2_ISR
  9544 ;; This function uses a non-reentrant model
  9545 ;;
  9546                           
  9547                           	psect	text44
  9548  001B48                     __ptext44:
  9549                           	opt stack 0
  9550  001B48                     _TMR2_CallBack:
  9551                           	opt stack 22
  9552                           
  9553                           ;incstack = 0
  9554  001B48  0012               	return		;funcret
  9555  001B4A                     __end_of_TMR2_CallBack:
  9556                           	opt stack 0
  9557                           tosu	equ	0xFFF
  9558                           tosh	equ	0xFFE
  9559                           tosl	equ	0xFFD
  9560                           pclatu	equ	0xFFB
  9561                           pclath	equ	0xFFA
  9562                           tblptru	equ	0xFF8
  9563                           tblptrh	equ	0xFF7
  9564                           tblptrl	equ	0xFF6
  9565                           tablat	equ	0xFF5
  9566                           prodh	equ	0xFF4
  9567                           prodl	equ	0xFF3
  9568                           intcon	equ	0xFF2
  9569                           intcon2	equ	0xFF1
  9570                           postinc0	equ	0xFEE
  9571                           fsr0h	equ	0xFEA
  9572                           fsr0l	equ	0xFE9
  9573                           wreg	equ	0xFE8
  9574                           postdec1	equ	0xFE5
  9575                           fsr1h	equ	0xFE2
  9576                           fsr1l	equ	0xFE1
  9577                           indf2	equ	0xFDF
  9578                           postinc2	equ	0xFDE
  9579                           postdec2	equ	0xFDD
  9580                           plusw2	equ	0xFDB
  9581                           fsr2h	equ	0xFDA
  9582                           fsr2l	equ	0xFD9
  9583                           status	equ	0xFD8
  9584                           
  9585 ;; *************** function _I2C1_ISR *****************
  9586 ;; Defined at:
  9587 ;;		line 226 in file "mcc_generated_files/i2c1.c"
  9588 ;; Parameters:    Size  Location     Type
  9589 ;;		None
  9590 ;; Auto vars:     Size  Location     Type
  9591 ;;		None
  9592 ;; Return value:  Size  Location     Type
  9593 ;;		None               void
  9594 ;; Registers used:
  9595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9596 ;; Tracked objects:
  9597 ;;		On entry : 0/0
  9598 ;;		On exit  : 0/0
  9599 ;;		Unchanged: 0/0
  9600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9601 ;;      Params:         0       0       0       0       0       0       0
  9602 ;;      Locals:         0       0       0       0       0       0       0
  9603 ;;      Temps:          2       0       0       0       0       0       0
  9604 ;;      Totals:         2       0       0       0       0       0       0
  9605 ;;Total ram usage:        2 bytes
  9606 ;; Hardware stack levels used:    1
  9607 ;; Hardware stack levels required when called:    1
  9608 ;; This function calls:
  9609 ;;		_I2C1_FunctionComplete
  9610 ;;		_I2C1_Stop
  9611 ;; This function is called by:
  9612 ;;		_INTERRUPT_InterruptManager
  9613 ;; This function uses a non-reentrant model
  9614 ;;
  9615                           
  9616                           	psect	text45
  9617  0007A2                     __ptext45:
  9618                           	opt stack 0
  9619  0007A2                     _I2C1_ISR:
  9620                           	opt stack 22
  9621                           
  9622                           ;i2c1.c: 228: static uint8_t *pi2c_buf_ptr;
  9623                           ;i2c1.c: 229: static uint16_t i2c_address = 0;
  9624                           ;i2c1.c: 230: static uint8_t i2c_bytes_left = 0;
  9625                           ;i2c1.c: 231: static uint8_t i2c_10bit_address_restart = 0;
  9626                           ;i2c1.c: 233: PIR1bits.SSP1IF = 0;
  9627                           
  9628                           ;incstack = 0
  9629  0007A2  969E               	bcf	3998,3,c	;volatile
  9630                           
  9631                           ;i2c1.c: 237: if (SSP1CON1bits.WCOL) {
  9632  0007A4  AEC6               	btfss	4038,7,c	;volatile
  9633  0007A6  D114               	goto	i2l4428
  9634                           
  9635                           ;i2c1.c: 239: SSP1CON1bits.WCOL = 0;
  9636  0007A8  9EC6               	bcf	4038,7,c	;volatile
  9637                           
  9638                           ;i2c1.c: 240: i2c1_state = S_MASTER_IDLE;
  9639  0007AA  0E00               	movlw	0
  9640  0007AC  6E30               	movwf	_i2c1_state,c
  9641                           
  9642                           ;i2c1.c: 241: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
  9643  0007AE  0100               	movlb	0	; () banked
  9644  0007B0  EE20 F003          	lfsr	2,3
  9645  0007B4  51CF               	movf	_p_i2c1_current& (0+255),w,b
  9646  0007B6  26D9               	addwf	fsr2l,f,c
  9647  0007B8  51D0               	movf	(_p_i2c1_current+1)& (0+255),w,b
  9648  0007BA  22DA               	addwfc	fsr2h,f,c
  9649  0007BC  CFDE F004          	movff	postinc2,??_I2C1_ISR
  9650  0007C0  CFDD F005          	movff	postdec2,??_I2C1_ISR+1
  9651  0007C4  C004  FFD9         	movff	??_I2C1_ISR,fsr2l
  9652  0007C8  C005  FFDA         	movff	??_I2C1_ISR+1,fsr2h
  9653  0007CC  0E01               	movlw	1
  9654  0007CE  6EDF               	movwf	indf2,c
  9655                           
  9656                           ; BSR set to: 0
  9657                           ;i2c1.c: 244: p_i2c1_current = (0);
  9658  0007D0  0E00               	movlw	0
  9659  0007D2  0100               	movlb	0	; () banked
  9660  0007D4  6FCF               	movwf	_p_i2c1_current& (0+255),b
  9661  0007D6  0E00               	movlw	0
  9662  0007D8  0100               	movlb	0	; () banked
  9663  0007DA  6FD0               	movwf	(_p_i2c1_current+1)& (0+255),b
  9664                           
  9665                           ; BSR set to: 0
  9666                           ;i2c1.c: 246: return;
  9667  0007DC  0012               	return	
  9668  0007DE                     i2l60:
  9669                           
  9670                           ;i2c1.c: 253: if (i2c1_object.trStatus.s.empty != 1) {
  9671  0007DE  0100               	movlb	0	; () banked
  9672  0007E0  B364               	btfsc	(_i2c1_object+4)& (0+255),1,b
  9673  0007E2  0012               	return	
  9674                           
  9675                           ; BSR set to: 0
  9676                           ;i2c1.c: 255: p_i2c1_current = i2c1_object.pTrHead;
  9677  0007E4  C062  F0CF         	movff	_i2c1_object+2,_p_i2c1_current
  9678  0007E8  C063  F0D0         	movff	_i2c1_object+3,_p_i2c1_current+1
  9679                           
  9680                           ; BSR set to: 0
  9681                           ;i2c1.c: 256: i2c1_trb_count = i2c1_object.pTrHead->count;
  9682  0007EC  C062  FFD9         	movff	_i2c1_object+2,fsr2l
  9683  0007F0  C063  FFDA         	movff	_i2c1_object+3,fsr2h
  9684  0007F4  50DF               	movf	indf2,w,c
  9685  0007F6  6E31               	movwf	_i2c1_trb_count,c
  9686                           
  9687                           ; BSR set to: 0
  9688                           ;i2c1.c: 257: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
  9689  0007F8  0100               	movlb	0	; () banked
  9690  0007FA  EE20 F001          	lfsr	2,1
  9691  0007FE  5162               	movf	(_i2c1_object+2)& (0+255),w,b
  9692  000800  26D9               	addwf	fsr2l,f,c
  9693  000802  5163               	movf	(_i2c1_object+3)& (0+255),w,b
  9694  000804  22DA               	addwfc	fsr2h,f,c
  9695  000806  CFDE F0D1          	movff	postinc2,_p_i2c1_trb_current
  9696  00080A  CFDD F0D2          	movff	postdec2,_p_i2c1_trb_current+1
  9697                           
  9698                           ; BSR set to: 0
  9699                           ;i2c1.c: 259: i2c1_object.pTrHead++;
  9700  00080E  0E06               	movlw	6
  9701  000810  0100               	movlb	0	; () banked
  9702  000812  2762               	addwf	(_i2c1_object+2)& (0+255),f,b
  9703  000814  0E00               	movlw	0
  9704  000816  2363               	addwfc	(_i2c1_object+3)& (0+255),f,b
  9705                           
  9706                           ; BSR set to: 0
  9707                           ;i2c1.c: 262: if (i2c1_object.pTrHead == (i2c1_tr_queue + 1)) {
  9708  000818  0EF5               	movlw	low (_i2c1_tr_queue+6)
  9709  00081A  0100               	movlb	0	; () banked
  9710  00081C  1962               	xorwf	(_i2c1_object+2)& (0+255),w,b
  9711  00081E  E10B               	bnz	i2l4320
  9712  000820  0E00               	movlw	high (_i2c1_tr_queue+6)
  9713  000822  0100               	movlb	0	; () banked
  9714  000824  1963               	xorwf	(_i2c1_object+3)& (0+255),w,b
  9715  000826  A4D8               	btfss	status,2,c
  9716  000828  D006               	goto	i2l4320
  9717                           
  9718                           ; BSR set to: 0
  9719                           ;i2c1.c: 264: i2c1_object.pTrHead = i2c1_tr_queue;
  9720  00082A  0EEF               	movlw	low _i2c1_tr_queue
  9721  00082C  0100               	movlb	0	; () banked
  9722  00082E  6F62               	movwf	(_i2c1_object+2)& (0+255),b
  9723  000830  0E00               	movlw	high _i2c1_tr_queue
  9724  000832  0100               	movlb	0	; () banked
  9725  000834  6F63               	movwf	(_i2c1_object+3)& (0+255),b
  9726  000836                     i2l4320:
  9727                           
  9728                           ; BSR set to: 0
  9729                           ;i2c1.c: 265: }
  9730                           ;i2c1.c: 269: i2c1_object.trStatus.s.full = 0;
  9731  000836  0100               	movlb	0	; () banked
  9732  000838  9164               	bcf	(_i2c1_object+4)& (0+255),0,b
  9733                           
  9734                           ;i2c1.c: 272: if (i2c1_object.pTrHead == i2c1_object.pTrTail) {
  9735  00083A  0100               	movlb	0	; () banked
  9736  00083C  5160               	movf	_i2c1_object& (0+255),w,b
  9737  00083E  0100               	movlb	0	; () banked
  9738  000840  1962               	xorwf	(_i2c1_object+2)& (0+255),w,b
  9739  000842  E108               	bnz	i2l63
  9740  000844  0100               	movlb	0	; () banked
  9741  000846  5161               	movf	(_i2c1_object+1)& (0+255),w,b
  9742  000848  0100               	movlb	0	; () banked
  9743  00084A  1963               	xorwf	(_i2c1_object+3)& (0+255),w,b
  9744  00084C  A4D8               	btfss	status,2,c
  9745  00084E  D002               	goto	i2l63
  9746                           
  9747                           ; BSR set to: 0
  9748                           ;i2c1.c: 274: i2c1_object.trStatus.s.empty = 1;
  9749  000850  0100               	movlb	0	; () banked
  9750  000852  8364               	bsf	(_i2c1_object+4)& (0+255),1,b
  9751  000854                     i2l63:
  9752                           
  9753                           ; BSR set to: 0
  9754                           ;i2c1.c: 275: }
  9755                           ;i2c1.c: 278: SSP1CON2bits.SEN = 1;
  9756  000854  80C5               	bsf	4037,0,c	;volatile
  9757                           
  9758                           ; BSR set to: 0
  9759                           ;i2c1.c: 281: i2c1_state = S_MASTER_SEND_ADDR;
  9760  000856  0E02               	movlw	2
  9761  000858  6E30               	movwf	_i2c1_state,c
  9762                           
  9763                           ; BSR set to: 0
  9764                           ;i2c1.c: 282: }
  9765                           ;i2c1.c: 284: break;
  9766  00085A  0012               	return	
  9767  00085C                     i2l65:
  9768                           
  9769                           ;i2c1.c: 291: SSP1CON2bits.RSEN = 1;
  9770  00085C  82C5               	bsf	4037,1,c	;volatile
  9771                           
  9772                           ;i2c1.c: 294: i2c1_state = S_MASTER_SEND_ADDR;
  9773  00085E  0E02               	movlw	2
  9774  000860  6E30               	movwf	_i2c1_state,c
  9775                           
  9776                           ;i2c1.c: 296: break;
  9777  000862  0012               	return	
  9778  000864                     i2l66:
  9779                           
  9780                           ;i2c1.c: 300: if (SSP1CON2bits.ACKSTAT) {
  9781  000864  ACC5               	btfss	4037,6,c	;volatile
  9782  000866  D006               	goto	i2l4332
  9783                           
  9784                           ;i2c1.c: 301: i2c1_object.i2cErrors++;
  9785  000868  0100               	movlb	0	; () banked
  9786  00086A  2B66               	incf	(_i2c1_object+6)& (0+255),f,b
  9787                           
  9788                           ; BSR set to: 0
  9789                           ;i2c1.c: 302: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  9790  00086C  0E04               	movlw	4
  9791  00086E  EC55  F00B         	call	_I2C1_Stop
  9792                           
  9793                           ;i2c1.c: 303: } else {
  9794  000872  0012               	return	
  9795  000874                     i2l4332:
  9796                           
  9797                           ;i2c1.c: 305: SSP1BUF = (i2c_address >> 1) & 0x00FF;
  9798  000874  90D8               	bcf	status,0,c
  9799  000876  3037               	rrcf	I2C1_ISR@i2c_address+1,w,c
  9800  000878  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
  9801  00087A  3036               	rrcf	I2C1_ISR@i2c_address,w,c
  9802  00087C  6E04               	movwf	??_I2C1_ISR& (0+255),c
  9803  00087E  5004               	movf	??_I2C1_ISR,w,c
  9804  000880  6EC9               	movwf	4041,c	;volatile
  9805                           
  9806                           ;i2c1.c: 308: if (i2c_address & 0x01) {
  9807  000882  A036               	btfss	I2C1_ISR@i2c_address,0,c
  9808  000884  D003               	goto	i2l4338
  9809                           
  9810                           ;i2c1.c: 311: i2c1_state = S_MASTER_10BIT_RESTART;
  9811  000886  0E0B               	movlw	11
  9812  000888  6E30               	movwf	_i2c1_state,c
  9813                           
  9814                           ;i2c1.c: 312: } else {
  9815  00088A  0012               	return	
  9816  00088C                     i2l4338:
  9817                           
  9818                           ;i2c1.c: 314: i2c1_state = S_MASTER_SEND_DATA;
  9819  00088C  0E03               	movlw	3
  9820  00088E  6E30               	movwf	_i2c1_state,c
  9821                           
  9822                           ;i2c1.c: 315: }
  9823                           ;i2c1.c: 316: }
  9824                           ;i2c1.c: 318: break;
  9825  000890  0012               	return	
  9826  000892                     i2l71:
  9827                           
  9828                           ;i2c1.c: 322: if (SSP1CON2bits.ACKSTAT) {
  9829  000892  ACC5               	btfss	4037,6,c	;volatile
  9830  000894  D006               	goto	i2l72
  9831                           
  9832                           ;i2c1.c: 323: i2c1_object.i2cErrors++;
  9833  000896  0100               	movlb	0	; () banked
  9834  000898  2B66               	incf	(_i2c1_object+6)& (0+255),f,b
  9835                           
  9836                           ; BSR set to: 0
  9837                           ;i2c1.c: 324: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  9838  00089A  0E04               	movlw	4
  9839  00089C  EC55  F00B         	call	_I2C1_Stop
  9840                           
  9841                           ;i2c1.c: 325: } else {
  9842  0008A0  0012               	return	
  9843  0008A2                     i2l72:
  9844                           
  9845                           ;i2c1.c: 328: SSP1CON2bits.RSEN = 1;
  9846  0008A2  82C5               	bsf	4037,1,c	;volatile
  9847                           
  9848                           ;i2c1.c: 332: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  9849  0008A4  C036  F004         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
  9850  0008A8  C037  F005         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
  9851  0008AC  C005  F004         	movff	??_I2C1_ISR+1,??_I2C1_ISR
  9852  0008B0  6A05               	clrf	??_I2C1_ISR+1,c
  9853  0008B2  0E06               	movlw	6
  9854  0008B4  1604               	andwf	??_I2C1_ISR,f,c
  9855  0008B6  0E00               	movlw	0
  9856  0008B8  1605               	andwf	??_I2C1_ISR+1,f,c
  9857  0008BA  0EF0               	movlw	240
  9858  0008BC  1004               	iorwf	??_I2C1_ISR,w,c
  9859  0008BE  6E36               	movwf	I2C1_ISR@i2c_address,c
  9860  0008C0  5005               	movf	??_I2C1_ISR+1,w,c
  9861  0008C2  6E37               	movwf	I2C1_ISR@i2c_address+1,c
  9862                           
  9863                           ;i2c1.c: 335: i2c_address |= 0x0001;
  9864  0008C4  8036               	bsf	I2C1_ISR@i2c_address,0,c
  9865                           
  9866                           ;i2c1.c: 338: i2c_10bit_address_restart = 1;
  9867  0008C6  0E01               	movlw	1
  9868  0008C8  6E2C               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
  9869                           
  9870                           ;i2c1.c: 341: i2c1_state = S_MASTER_SEND_ADDR;
  9871  0008CA  0E02               	movlw	2
  9872  0008CC  6E30               	movwf	_i2c1_state,c
  9873                           
  9874                           ;i2c1.c: 342: }
  9875                           ;i2c1.c: 344: break;
  9876  0008CE  0012               	return	
  9877  0008D0                     i2l4352:
  9878                           
  9879                           ;i2c1.c: 359: if (i2c_10bit_address_restart != 1) {
  9880  0008D0  042C               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
  9881  0008D2  B4D8               	btfsc	status,2,c
  9882  0008D4  D01C               	goto	i2l76
  9883                           
  9884                           ;i2c1.c: 361: i2c_address = p_i2c1_trb_current->address;
  9885  0008D6  C0D1  FFD9         	movff	_p_i2c1_trb_current,fsr2l
  9886  0008DA  C0D2  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
  9887  0008DE  CFDE F036          	movff	postinc2,I2C1_ISR@i2c_address
  9888  0008E2  CFDD F037          	movff	postdec2,I2C1_ISR@i2c_address+1
  9889                           
  9890                           ;i2c1.c: 362: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
  9891  0008E6  0100               	movlb	0	; () banked
  9892  0008E8  EE20 F003          	lfsr	2,3
  9893  0008EC  51D1               	movf	_p_i2c1_trb_current& (0+255),w,b
  9894  0008EE  26D9               	addwf	fsr2l,f,c
  9895  0008F0  51D2               	movf	(_p_i2c1_trb_current+1)& (0+255),w,b
  9896  0008F2  22DA               	addwfc	fsr2h,f,c
  9897  0008F4  CFDE F0BB          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
  9898  0008F8  CFDD F0BC          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
  9899                           
  9900                           ; BSR set to: 0
  9901                           ;i2c1.c: 363: i2c_bytes_left = p_i2c1_trb_current->length;
  9902  0008FC  0100               	movlb	0	; () banked
  9903  0008FE  EE20 F002          	lfsr	2,2
  9904  000902  51D1               	movf	_p_i2c1_trb_current& (0+255),w,b
  9905  000904  26D9               	addwf	fsr2l,f,c
  9906  000906  51D2               	movf	(_p_i2c1_trb_current+1)& (0+255),w,b
  9907  000908  22DA               	addwfc	fsr2h,f,c
  9908  00090A  50DF               	movf	indf2,w,c
  9909  00090C  6E2D               	movwf	I2C1_ISR@i2c_bytes_left,c
  9910  00090E                     i2l76:
  9911                           
  9912                           ;i2c1.c: 383: SSP1BUF = i2c_address;
  9913  00090E  C036  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
  9914                           
  9915                           ;i2c1.c: 384: if (i2c_address & 0x01) {
  9916  000912  A036               	btfss	I2C1_ISR@i2c_address,0,c
  9917  000914  D003               	goto	i2l4372
  9918                           
  9919                           ;i2c1.c: 386: i2c1_state = S_MASTER_ACK_ADDR;
  9920  000916  0E05               	movlw	5
  9921  000918  6E30               	movwf	_i2c1_state,c
  9922                           
  9923                           ;i2c1.c: 387: } else {
  9924  00091A  0012               	return	
  9925  00091C                     i2l4372:
  9926                           
  9927                           ;i2c1.c: 389: i2c1_state = S_MASTER_SEND_DATA;
  9928  00091C  0E03               	movlw	3
  9929  00091E  6E30               	movwf	_i2c1_state,c
  9930                           
  9931                           ;i2c1.c: 390: }
  9932                           ;i2c1.c: 391: }
  9933                           ;i2c1.c: 392: break;
  9934  000920  0012               	return	
  9935  000922                     i2l82:
  9936                           
  9937                           ;i2c1.c: 397: if (SSP1CON2bits.ACKSTAT) {
  9938  000922  ACC5               	btfss	4037,6,c	;volatile
  9939  000924  D007               	goto	i2l4380
  9940                           
  9941                           ;i2c1.c: 399: i2c1_object.i2cErrors++;
  9942  000926  0100               	movlb	0	; () banked
  9943  000928  2B66               	incf	(_i2c1_object+6)& (0+255),f,b
  9944                           
  9945                           ; BSR set to: 0
  9946                           ;i2c1.c: 402: SSP1CON2bits.ACKSTAT = 0;
  9947  00092A  9CC5               	bcf	4037,6,c	;volatile
  9948                           
  9949                           ; BSR set to: 0
  9950                           ;i2c1.c: 405: I2C1_Stop(I2C1_DATA_NO_ACK);
  9951  00092C  0E05               	movlw	5
  9952  00092E  EC55  F00B         	call	_I2C1_Stop
  9953                           
  9954                           ;i2c1.c: 407: } else {
  9955  000932  0012               	return	
  9956  000934                     i2l4380:
  9957                           
  9958                           ;i2c1.c: 409: if (i2c_bytes_left-- == 0U) {
  9959  000934  062D               	decf	I2C1_ISR@i2c_bytes_left,f,c
  9960  000936  282D               	incf	I2C1_ISR@i2c_bytes_left,w,c
  9961  000938  A4D8               	btfss	status,2,c
  9962  00093A  D00F               	goto	i2l4390
  9963                           
  9964                           ;i2c1.c: 413: p_i2c1_trb_current++;
  9965  00093C  0E06               	movlw	6
  9966  00093E  0100               	movlb	0	; () banked
  9967  000940  27D1               	addwf	_p_i2c1_trb_current& (0+255),f,b
  9968  000942  0E00               	movlw	0
  9969  000944  23D2               	addwfc	(_p_i2c1_trb_current+1)& (0+255),f,b
  9970                           
  9971                           ; BSR set to: 0
  9972                           ;i2c1.c: 416: if (--i2c1_trb_count == 0) {
  9973  000946  2E31               	decfsz	_i2c1_trb_count,f,c
  9974  000948  D004               	goto	i2l86
  9975                           
  9976                           ; BSR set to: 0
  9977                           ;i2c1.c: 417: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  9978  00094A  0E00               	movlw	0
  9979  00094C  EC55  F00B         	call	_I2C1_Stop
  9980                           
  9981                           ;i2c1.c: 418: } else {
  9982  000950  0012               	return	
  9983  000952                     i2l86:
  9984                           
  9985                           ; BSR set to: 0
  9986                           ;i2c1.c: 425: SSP1CON2bits.RSEN = 1;
  9987  000952  82C5               	bsf	4037,1,c	;volatile
  9988                           
  9989                           ; BSR set to: 0
  9990                           ;i2c1.c: 428: i2c1_state = S_MASTER_SEND_ADDR;
  9991  000954  0E02               	movlw	2
  9992  000956  6E30               	movwf	_i2c1_state,c
  9993                           
  9994                           ; BSR set to: 0
  9995                           ;i2c1.c: 430: }
  9996                           ;i2c1.c: 431: } else {
  9997  000958  0012               	return	
  9998  00095A                     i2l4390:
  9999                           
 10000                           ;i2c1.c: 433: SSP1BUF = *pi2c_buf_ptr++;
 10001  00095A  C0BB  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 10002  00095E  C0BC  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 10003  000962  50DF               	movf	indf2,w,c
 10004  000964  6EC9               	movwf	4041,c	;volatile
 10005  000966  0100               	movlb	0	; () banked
 10006  000968  4BBB               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 10007  00096A  2BBC               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 10008                           
 10009                           ; BSR set to: 0
 10010                           ;i2c1.c: 434: }
 10011                           ;i2c1.c: 435: }
 10012                           ;i2c1.c: 436: break;
 10013                           
 10014                           ; BSR set to: 0
 10015  00096C  0012               	return	
 10016  00096E                     i2l89:
 10017                           
 10018                           ;i2c1.c: 441: if (SSP1CON2bits.ACKSTAT) {
 10019  00096E  ACC5               	btfss	4037,6,c	;volatile
 10020  000970  D007               	goto	i2l90
 10021                           
 10022                           ;i2c1.c: 444: i2c1_object.i2cErrors++;
 10023  000972  0100               	movlb	0	; () banked
 10024  000974  2B66               	incf	(_i2c1_object+6)& (0+255),f,b
 10025                           
 10026                           ; BSR set to: 0
 10027                           ;i2c1.c: 447: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 10028  000976  0E04               	movlw	4
 10029  000978  EC55  F00B         	call	_I2C1_Stop
 10030                           
 10031                           ;i2c1.c: 450: SSP1CON2bits.ACKSTAT = 0;
 10032  00097C  9CC5               	bcf	4037,6,c	;volatile
 10033                           
 10034                           ;i2c1.c: 451: } else {
 10035  00097E  0012               	return	
 10036  000980                     i2l90:
 10037                           
 10038                           ;i2c1.c: 452: SSP1CON2bits.RCEN = 1;
 10039  000980  86C5               	bsf	4037,3,c	;volatile
 10040                           
 10041                           ;i2c1.c: 453: i2c1_state = S_MASTER_ACK_RCV_DATA;
 10042  000982  0E08               	movlw	8
 10043  000984  6E30               	movwf	_i2c1_state,c
 10044                           
 10045                           ;i2c1.c: 454: }
 10046                           ;i2c1.c: 455: break;
 10047  000986  0012               	return	
 10048  000988                     i2l4402:
 10049                           
 10050                           ;i2c1.c: 462: i2c1_state = S_MASTER_ACK_RCV_DATA;
 10051  000988  0E08               	movlw	8
 10052  00098A  6E30               	movwf	_i2c1_state,c
 10053                           
 10054                           ;i2c1.c: 465: SSP1CON2bits.RCEN = 1;
 10055  00098C  86C5               	bsf	4037,3,c	;volatile
 10056                           
 10057                           ;i2c1.c: 467: break;
 10058  00098E  0012               	return	
 10059  000990                     i2l4406:
 10060                           
 10061                           ;i2c1.c: 472: *pi2c_buf_ptr++ = SSP1BUF;
 10062  000990  C0BB  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 10063  000994  C0BC  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 10064  000998  CFC9 FFDF          	movff	4041,indf2	;volatile
 10065  00099C  0100               	movlb	0	; () banked
 10066  00099E  4BBB               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 10067  0009A0  2BBC               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 10068                           
 10069                           ; BSR set to: 0
 10070                           ;i2c1.c: 475: if (--i2c_bytes_left) {
 10071  0009A2  0E01               	movlw	1
 10072  0009A4  5E2D               	subwf	I2C1_ISR@i2c_bytes_left,f,c
 10073  0009A6  B4D8               	btfsc	status,2,c
 10074  0009A8  D004               	goto	i2l94
 10075                           
 10076                           ; BSR set to: 0
 10077                           ;i2c1.c: 481: SSP1CON2bits.ACKDT = 0;
 10078  0009AA  9AC5               	bcf	4037,5,c	;volatile
 10079                           
 10080                           ; BSR set to: 0
 10081                           ;i2c1.c: 484: i2c1_state = S_MASTER_RCV_DATA;
 10082  0009AC  0E06               	movlw	6
 10083  0009AE  6E30               	movwf	_i2c1_state,c
 10084                           
 10085                           ;i2c1.c: 485: } else {
 10086  0009B0  D003               	goto	i2l4418
 10087  0009B2                     i2l94:
 10088                           
 10089                           ; BSR set to: 0
 10090                           ;i2c1.c: 489: SSP1CON2bits.ACKDT = 1;
 10091  0009B2  8AC5               	bsf	4037,5,c	;volatile
 10092                           
 10093                           ; BSR set to: 0
 10094                           ;i2c1.c: 491: I2C1_FunctionComplete();
 10095  0009B4  ECEB  F00C         	call	_I2C1_FunctionComplete	;wreg free
 10096  0009B8                     i2l4418:
 10097                           
 10098                           ;i2c1.c: 492: }
 10099                           ;i2c1.c: 495: SSP1CON2bits.ACKEN = 1;
 10100  0009B8  88C5               	bsf	4037,4,c	;volatile
 10101                           
 10102                           ;i2c1.c: 496: break;
 10103  0009BA  0012               	return	
 10104  0009BC                     i2l4420:
 10105                           
 10106                           ;i2c1.c: 499: case S_MASTER_SEND_STOP:
 10107                           ;i2c1.c: 502: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 10108  0009BC  0E00               	movlw	0
 10109  0009BE  EC55  F00B         	call	_I2C1_Stop
 10110                           
 10111                           ;i2c1.c: 503: break;
 10112  0009C2  0012               	return	
 10113  0009C4                     i2l4422:
 10114                           
 10115                           ;i2c1.c: 509: i2c1_object.i2cErrors++;
 10116  0009C4  0100               	movlb	0	; () banked
 10117  0009C6  2B66               	incf	(_i2c1_object+6)& (0+255),f,b
 10118                           
 10119                           ; BSR set to: 0
 10120                           ;i2c1.c: 510: I2C1_Stop(I2C1_LOST_STATE);
 10121  0009C8  0E06               	movlw	6
 10122  0009CA  EC55  F00B         	call	_I2C1_Stop
 10123                           
 10124                           ;i2c1.c: 513: }
 10125                           
 10126                           ;i2c1.c: 511: break;
 10127  0009CE  0012               	return	
 10128  0009D0                     i2l4428:
 10129  0009D0  5030               	movf	_i2c1_state,w,c
 10130                           
 10131                           ; Switch size 1, requested type "space"
 10132                           ; Number of cases is 11, Range of values is 0 to 11
 10133                           ; switch strategies available:
 10134                           ; Name         Instructions Cycles
 10135                           ; simple_byte           34    18 (average)
 10136                           ;	Chosen strategy is simple_byte
 10137  0009D2  0A00               	xorlw	0	; case 0
 10138  0009D4  B4D8               	btfsc	status,2,c
 10139  0009D6  D703               	goto	i2l60
 10140  0009D8  0A01               	xorlw	1	; case 1
 10141  0009DA  B4D8               	btfsc	status,2,c
 10142  0009DC  D73F               	goto	i2l65
 10143  0009DE  0A03               	xorlw	3	; case 2
 10144  0009E0  B4D8               	btfsc	status,2,c
 10145  0009E2  D776               	goto	i2l4352
 10146  0009E4  0A01               	xorlw	1	; case 3
 10147  0009E6  B4D8               	btfsc	status,2,c
 10148  0009E8  D79C               	goto	i2l82
 10149  0009EA  0A07               	xorlw	7	; case 4
 10150  0009EC  B4D8               	btfsc	status,2,c
 10151  0009EE  D7E6               	goto	i2l4420
 10152  0009F0  0A01               	xorlw	1	; case 5
 10153  0009F2  B4D8               	btfsc	status,2,c
 10154  0009F4  D7BC               	goto	i2l89
 10155  0009F6  0A03               	xorlw	3	; case 6
 10156  0009F8  B4D8               	btfsc	status,2,c
 10157  0009FA  D7C6               	goto	i2l4402
 10158  0009FC  0A01               	xorlw	1	; case 7
 10159  0009FE  B4D8               	btfsc	status,2,c
 10160  000A00  D7DD               	goto	i2l4420
 10161  000A02  0A0F               	xorlw	15	; case 8
 10162  000A04  B4D8               	btfsc	status,2,c
 10163  000A06  D7C4               	goto	i2l4406
 10164  000A08  0A02               	xorlw	2	; case 10
 10165  000A0A  B4D8               	btfsc	status,2,c
 10166  000A0C  D72B               	goto	i2l66
 10167  000A0E  0A01               	xorlw	1	; case 11
 10168  000A10  B4D8               	btfsc	status,2,c
 10169  000A12  D73F               	goto	i2l71
 10170  000A14  D7D7               	goto	i2l4422
 10171  000A16                     __end_of_I2C1_ISR:
 10172                           	opt stack 0
 10173                           tosu	equ	0xFFF
 10174                           tosh	equ	0xFFE
 10175                           tosl	equ	0xFFD
 10176                           pclatu	equ	0xFFB
 10177                           pclath	equ	0xFFA
 10178                           tblptru	equ	0xFF8
 10179                           tblptrh	equ	0xFF7
 10180                           tblptrl	equ	0xFF6
 10181                           tablat	equ	0xFF5
 10182                           prodh	equ	0xFF4
 10183                           prodl	equ	0xFF3
 10184                           intcon	equ	0xFF2
 10185                           intcon2	equ	0xFF1
 10186                           postinc0	equ	0xFEE
 10187                           fsr0h	equ	0xFEA
 10188                           fsr0l	equ	0xFE9
 10189                           wreg	equ	0xFE8
 10190                           postdec1	equ	0xFE5
 10191                           fsr1h	equ	0xFE2
 10192                           fsr1l	equ	0xFE1
 10193                           indf2	equ	0xFDF
 10194                           postinc2	equ	0xFDE
 10195                           postdec2	equ	0xFDD
 10196                           plusw2	equ	0xFDB
 10197                           fsr2h	equ	0xFDA
 10198                           fsr2l	equ	0xFD9
 10199                           status	equ	0xFD8
 10200                           
 10201 ;; *************** function _I2C1_Stop *****************
 10202 ;; Defined at:
 10203 ;;		line 530 in file "mcc_generated_files/i2c1.c"
 10204 ;; Parameters:    Size  Location     Type
 10205 ;;  completion_c    1    wreg     enum E8795
 10206 ;; Auto vars:     Size  Location     Type
 10207 ;;  completion_c    1    2[COMRAM] enum E8795
 10208 ;; Return value:  Size  Location     Type
 10209 ;;		None               void
 10210 ;; Registers used:
 10211 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10212 ;; Tracked objects:
 10213 ;;		On entry : 0/0
 10214 ;;		On exit  : 0/0
 10215 ;;		Unchanged: 0/0
 10216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10217 ;;      Params:         0       0       0       0       0       0       0
 10218 ;;      Locals:         1       0       0       0       0       0       0
 10219 ;;      Temps:          2       0       0       0       0       0       0
 10220 ;;      Totals:         3       0       0       0       0       0       0
 10221 ;;Total ram usage:        3 bytes
 10222 ;; Hardware stack levels used:    1
 10223 ;; This function calls:
 10224 ;;		Nothing
 10225 ;; This function is called by:
 10226 ;;		_I2C1_ISR
 10227 ;; This function uses a non-reentrant model
 10228 ;;
 10229                           
 10230                           	psect	text46
 10231  0016AA                     __ptext46:
 10232                           	opt stack 0
 10233  0016AA                     _I2C1_Stop:
 10234                           	opt stack 22
 10235                           
 10236                           ;incstack = 0
 10237                           ;I2C1_Stop@completion_code stored from wreg
 10238  0016AA  6E03               	movwf	I2C1_Stop@completion_code,c
 10239                           
 10240                           ;i2c1.c: 532: SSP1CON2bits.PEN = 1;
 10241  0016AC  84C5               	bsf	4037,2,c	;volatile
 10242                           
 10243                           ;i2c1.c: 535: if (p_i2c1_current->pTrFlag != (0)) {
 10244  0016AE  0100               	movlb	0	; () banked
 10245  0016B0  EE20 F003          	lfsr	2,3
 10246  0016B4  51CF               	movf	_p_i2c1_current& (0+255),w,b
 10247  0016B6  26D9               	addwf	fsr2l,f,c
 10248  0016B8  51D0               	movf	(_p_i2c1_current+1)& (0+255),w,b
 10249  0016BA  22DA               	addwfc	fsr2h,f,c
 10250  0016BC  50DE               	movf	postinc2,w,c
 10251  0016BE  10DE               	iorwf	postinc2,w,c
 10252  0016C0  B4D8               	btfsc	status,2,c
 10253  0016C2  D011               	goto	i2l3954
 10254                           
 10255                           ; BSR set to: 0
 10256                           ;i2c1.c: 537: *(p_i2c1_current->pTrFlag) = completion_code;
 10257  0016C4  0100               	movlb	0	; () banked
 10258  0016C6  EE20 F003          	lfsr	2,3
 10259  0016CA  51CF               	movf	_p_i2c1_current& (0+255),w,b
 10260  0016CC  26D9               	addwf	fsr2l,f,c
 10261  0016CE  51D0               	movf	(_p_i2c1_current+1)& (0+255),w,b
 10262  0016D0  22DA               	addwfc	fsr2h,f,c
 10263  0016D2  CFDE F001          	movff	postinc2,??_I2C1_Stop
 10264  0016D6  CFDD F002          	movff	postdec2,??_I2C1_Stop+1
 10265  0016DA  C001  FFD9         	movff	??_I2C1_Stop,fsr2l
 10266  0016DE  C002  FFDA         	movff	??_I2C1_Stop+1,fsr2h
 10267  0016E2  C003  FFDF         	movff	I2C1_Stop@completion_code,indf2
 10268  0016E6                     i2l3954:
 10269                           
 10270                           ; BSR set to: 0
 10271                           ;i2c1.c: 538: }
 10272                           ;i2c1.c: 541: i2c1_state = S_MASTER_IDLE;
 10273  0016E6  0E00               	movlw	0
 10274  0016E8  6E30               	movwf	_i2c1_state,c
 10275                           
 10276                           ; BSR set to: 0
 10277  0016EA  0012               	return		;funcret
 10278  0016EC                     __end_of_I2C1_Stop:
 10279                           	opt stack 0
 10280                           tosu	equ	0xFFF
 10281                           tosh	equ	0xFFE
 10282                           tosl	equ	0xFFD
 10283                           pclatu	equ	0xFFB
 10284                           pclath	equ	0xFFA
 10285                           tblptru	equ	0xFF8
 10286                           tblptrh	equ	0xFF7
 10287                           tblptrl	equ	0xFF6
 10288                           tablat	equ	0xFF5
 10289                           prodh	equ	0xFF4
 10290                           prodl	equ	0xFF3
 10291                           intcon	equ	0xFF2
 10292                           intcon2	equ	0xFF1
 10293                           postinc0	equ	0xFEE
 10294                           fsr0h	equ	0xFEA
 10295                           fsr0l	equ	0xFE9
 10296                           wreg	equ	0xFE8
 10297                           postdec1	equ	0xFE5
 10298                           fsr1h	equ	0xFE2
 10299                           fsr1l	equ	0xFE1
 10300                           indf2	equ	0xFDF
 10301                           postinc2	equ	0xFDE
 10302                           postdec2	equ	0xFDD
 10303                           plusw2	equ	0xFDB
 10304                           fsr2h	equ	0xFDA
 10305                           fsr2l	equ	0xFD9
 10306                           status	equ	0xFD8
 10307                           
 10308 ;; *************** function _I2C1_FunctionComplete *****************
 10309 ;; Defined at:
 10310 ;;		line 516 in file "mcc_generated_files/i2c1.c"
 10311 ;; Parameters:    Size  Location     Type
 10312 ;;		None
 10313 ;; Auto vars:     Size  Location     Type
 10314 ;;		None
 10315 ;; Return value:  Size  Location     Type
 10316 ;;		None               void
 10317 ;; Registers used:
 10318 ;;		wreg, status,2, status,0
 10319 ;; Tracked objects:
 10320 ;;		On entry : 0/0
 10321 ;;		On exit  : 0/0
 10322 ;;		Unchanged: 0/0
 10323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10324 ;;      Params:         0       0       0       0       0       0       0
 10325 ;;      Locals:         0       0       0       0       0       0       0
 10326 ;;      Temps:          0       0       0       0       0       0       0
 10327 ;;      Totals:         0       0       0       0       0       0       0
 10328 ;;Total ram usage:        0 bytes
 10329 ;; Hardware stack levels used:    1
 10330 ;; This function calls:
 10331 ;;		Nothing
 10332 ;; This function is called by:
 10333 ;;		_I2C1_ISR
 10334 ;; This function uses a non-reentrant model
 10335 ;;
 10336                           
 10337                           	psect	text47
 10338  0019D6                     __ptext47:
 10339                           	opt stack 0
 10340  0019D6                     _I2C1_FunctionComplete:
 10341                           	opt stack 22
 10342                           
 10343                           ;i2c1.c: 519: p_i2c1_trb_current++;
 10344                           
 10345                           ; BSR set to: 0
 10346                           ;incstack = 0
 10347  0019D6  0E06               	movlw	6
 10348  0019D8  0100               	movlb	0	; () banked
 10349  0019DA  27D1               	addwf	_p_i2c1_trb_current& (0+255),f,b
 10350  0019DC  0E00               	movlw	0
 10351  0019DE  23D2               	addwfc	(_p_i2c1_trb_current+1)& (0+255),f,b
 10352                           
 10353                           ; BSR set to: 0
 10354                           ;i2c1.c: 522: if (--i2c1_trb_count == 0) {
 10355  0019E0  2E31               	decfsz	_i2c1_trb_count,f,c
 10356  0019E2  D003               	goto	i2l3962
 10357                           
 10358                           ; BSR set to: 0
 10359                           ;i2c1.c: 523: i2c1_state = S_MASTER_SEND_STOP;
 10360  0019E4  0E04               	movlw	4
 10361  0019E6  6E30               	movwf	_i2c1_state,c
 10362                           
 10363                           ;i2c1.c: 524: } else {
 10364  0019E8  0012               	return	
 10365  0019EA                     i2l3962:
 10366                           
 10367                           ; BSR set to: 0
 10368                           ;i2c1.c: 525: i2c1_state = S_MASTER_RESTART;
 10369  0019EA  0E01               	movlw	1
 10370  0019EC  6E30               	movwf	_i2c1_state,c
 10371  0019EE  0012               	return	
 10372  0019F0                     __end_of_I2C1_FunctionComplete:
 10373                           	opt stack 0
 10374                           tosu	equ	0xFFF
 10375                           tosh	equ	0xFFE
 10376                           tosl	equ	0xFFD
 10377                           pclatu	equ	0xFFB
 10378                           pclath	equ	0xFFA
 10379                           tblptru	equ	0xFF8
 10380                           tblptrh	equ	0xFF7
 10381                           tblptrl	equ	0xFF6
 10382                           tablat	equ	0xFF5
 10383                           prodh	equ	0xFF4
 10384                           prodl	equ	0xFF3
 10385                           intcon	equ	0xFF2
 10386                           intcon2	equ	0xFF1
 10387                           postinc0	equ	0xFEE
 10388                           fsr0h	equ	0xFEA
 10389                           fsr0l	equ	0xFE9
 10390                           wreg	equ	0xFE8
 10391                           postdec1	equ	0xFE5
 10392                           fsr1h	equ	0xFE2
 10393                           fsr1l	equ	0xFE1
 10394                           indf2	equ	0xFDF
 10395                           postinc2	equ	0xFDE
 10396                           postdec2	equ	0xFDD
 10397                           plusw2	equ	0xFDB
 10398                           fsr2h	equ	0xFDA
 10399                           fsr2l	equ	0xFD9
 10400                           status	equ	0xFD8
 10401                           
 10402 ;; *************** function _I2C1_BusCollisionISR *****************
 10403 ;; Defined at:
 10404 ;;		line 656 in file "mcc_generated_files/i2c1.c"
 10405 ;; Parameters:    Size  Location     Type
 10406 ;;		None
 10407 ;; Auto vars:     Size  Location     Type
 10408 ;;		None
 10409 ;; Return value:  Size  Location     Type
 10410 ;;		None               void
 10411 ;; Registers used:
 10412 ;;		None
 10413 ;; Tracked objects:
 10414 ;;		On entry : 0/0
 10415 ;;		On exit  : 0/0
 10416 ;;		Unchanged: 0/0
 10417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10418 ;;      Params:         0       0       0       0       0       0       0
 10419 ;;      Locals:         0       0       0       0       0       0       0
 10420 ;;      Temps:          0       0       0       0       0       0       0
 10421 ;;      Totals:         0       0       0       0       0       0       0
 10422 ;;Total ram usage:        0 bytes
 10423 ;; Hardware stack levels used:    1
 10424 ;; This function calls:
 10425 ;;		Nothing
 10426 ;; This function is called by:
 10427 ;;		_INTERRUPT_InterruptManager
 10428 ;; This function uses a non-reentrant model
 10429 ;;
 10430                           
 10431                           	psect	text48
 10432  001B4A                     __ptext48:
 10433                           	opt stack 0
 10434  001B4A                     _I2C1_BusCollisionISR:
 10435                           	opt stack 23
 10436                           
 10437                           ; BSR set to: 0
 10438                           ;incstack = 0
 10439  001B4A  0012               	return		;funcret
 10440  001B4C                     __end_of_I2C1_BusCollisionISR:
 10441                           	opt stack 0
 10442                           tosu	equ	0xFFF
 10443                           tosh	equ	0xFFE
 10444                           tosl	equ	0xFFD
 10445                           pclatu	equ	0xFFB
 10446                           pclath	equ	0xFFA
 10447                           tblptru	equ	0xFF8
 10448                           tblptrh	equ	0xFF7
 10449                           tblptrl	equ	0xFF6
 10450                           tablat	equ	0xFF5
 10451                           prodh	equ	0xFF4
 10452                           prodl	equ	0xFF3
 10453                           intcon	equ	0xFF2
 10454                           intcon2	equ	0xFF1
 10455                           postinc0	equ	0xFEE
 10456                           fsr0h	equ	0xFEA
 10457                           fsr0l	equ	0xFE9
 10458                           wreg	equ	0xFE8
 10459                           postdec1	equ	0xFE5
 10460                           fsr1h	equ	0xFE2
 10461                           fsr1l	equ	0xFE1
 10462                           indf2	equ	0xFDF
 10463                           postinc2	equ	0xFDE
 10464                           postdec2	equ	0xFDD
 10465                           plusw2	equ	0xFDB
 10466                           fsr2h	equ	0xFDA
 10467                           fsr2l	equ	0xFD9
 10468                           status	equ	0xFD8
 10469                           
 10470 ;; *************** function _EUSART1_Transmit_ISR *****************
 10471 ;; Defined at:
 10472 ;;		line 213 in file "mcc_generated_files/eusart1.c"
 10473 ;; Parameters:    Size  Location     Type
 10474 ;;		None
 10475 ;; Auto vars:     Size  Location     Type
 10476 ;;		None
 10477 ;; Return value:  Size  Location     Type
 10478 ;;		None               void
 10479 ;; Registers used:
 10480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10481 ;; Tracked objects:
 10482 ;;		On entry : 0/0
 10483 ;;		On exit  : 0/0
 10484 ;;		Unchanged: 0/0
 10485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10486 ;;      Params:         0       0       0       0       0       0       0
 10487 ;;      Locals:         0       0       0       0       0       0       0
 10488 ;;      Temps:          0       0       0       0       0       0       0
 10489 ;;      Totals:         0       0       0       0       0       0       0
 10490 ;;Total ram usage:        0 bytes
 10491 ;; Hardware stack levels used:    1
 10492 ;; Hardware stack levels required when called:    2
 10493 ;; This function calls:
 10494 ;;		i2_UART_buff_get
 10495 ;;		i2_UART_buff_size
 10496 ;; This function is called by:
 10497 ;;		_INTERRUPT_InterruptManager
 10498 ;; This function uses a non-reentrant model
 10499 ;;
 10500                           
 10501                           	psect	text49
 10502  001804                     __ptext49:
 10503                           	opt stack 0
 10504  001804                     _EUSART1_Transmit_ISR:
 10505                           	opt stack 21
 10506                           
 10507                           ;eusart1.c: 215: if (UART_buff_size(&output_buffer) > 0) {
 10508                           
 10509                           ;incstack = 0
 10510  001804  0E00               	movlw	low _output_buffer
 10511  001806  6E01               	movwf	i2UART_buff_size@_this,c
 10512  001808  0E05               	movlw	high _output_buffer
 10513  00180A  6E02               	movwf	i2UART_buff_size@_this+1,c
 10514  00180C  EC55  F00D         	call	i2_UART_buff_size	;wreg free
 10515  001810  BE02               	btfsc	?i2_UART_buff_size+1,7,c
 10516  001812  D00D               	goto	i2l4450
 10517  001814  5002               	movf	?i2_UART_buff_size+1,w,c
 10518  001816  E103               	bnz	i2u327_40
 10519  001818  0401               	decf	?i2_UART_buff_size,w,c
 10520  00181A  A0D8               	btfss	status,0,c
 10521  00181C  D008               	goto	i2l4450
 10522  00181E                     i2u327_40:
 10523                           
 10524                           ;eusart1.c: 216: TXREG1 = UART_buff_get(&output_buffer);
 10525  00181E  0E00               	movlw	low _output_buffer
 10526  001820  6E07               	movwf	i2UART_buff_get@_this,c
 10527  001822  0E05               	movlw	high _output_buffer
 10528  001824  6E08               	movwf	i2UART_buff_get@_this+1,c
 10529  001826  EC33  F00A         	call	i2_UART_buff_get	;wreg free
 10530  00182A  6EAD               	movwf	4013,c	;volatile
 10531                           
 10532                           ;eusart1.c: 217: } else {
 10533  00182C  0012               	return	
 10534  00182E                     i2l4450:
 10535                           
 10536                           ;eusart1.c: 218: Transmit_stall = 1;
 10537  00182E  0E01               	movlw	1
 10538  001830  0100               	movlb	0	; () banked
 10539  001832  6FFD               	movwf	_Transmit_stall& (0+255),b
 10540                           
 10541                           ; BSR set to: 0
 10542                           ;eusart1.c: 219: PIE1bits.TX1IE = 0;
 10543  001834  989D               	bcf	3997,4,c	;volatile
 10544  001836  0012               	return	
 10545  001838                     __end_of_EUSART1_Transmit_ISR:
 10546                           	opt stack 0
 10547                           tosu	equ	0xFFF
 10548                           tosh	equ	0xFFE
 10549                           tosl	equ	0xFFD
 10550                           pclatu	equ	0xFFB
 10551                           pclath	equ	0xFFA
 10552                           tblptru	equ	0xFF8
 10553                           tblptrh	equ	0xFF7
 10554                           tblptrl	equ	0xFF6
 10555                           tablat	equ	0xFF5
 10556                           prodh	equ	0xFF4
 10557                           prodl	equ	0xFF3
 10558                           intcon	equ	0xFF2
 10559                           intcon2	equ	0xFF1
 10560                           postinc0	equ	0xFEE
 10561                           fsr0h	equ	0xFEA
 10562                           fsr0l	equ	0xFE9
 10563                           wreg	equ	0xFE8
 10564                           postdec1	equ	0xFE5
 10565                           fsr1h	equ	0xFE2
 10566                           fsr1l	equ	0xFE1
 10567                           indf2	equ	0xFDF
 10568                           postinc2	equ	0xFDE
 10569                           postdec2	equ	0xFDD
 10570                           plusw2	equ	0xFDB
 10571                           fsr2h	equ	0xFDA
 10572                           fsr2l	equ	0xFD9
 10573                           status	equ	0xFD8
 10574                           
 10575 ;; *************** function i2_UART_buff_size *****************
 10576 ;; Defined at:
 10577 ;;		line 157 in file "mcc_generated_files/eusart1.c"
 10578 ;; Parameters:    Size  Location     Type
 10579 ;;  _this           2    0[COMRAM] PTR struct UART_ring_buf
 10580 ;;		 -> output_buffer(206), input_buffer(206), 
 10581 ;; Auto vars:     Size  Location     Type
 10582 ;;		None
 10583 ;; Return value:  Size  Location     Type
 10584 ;;                  2    0[COMRAM] int 
 10585 ;; Registers used:
 10586 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10587 ;; Tracked objects:
 10588 ;;		On entry : 0/0
 10589 ;;		On exit  : 0/0
 10590 ;;		Unchanged: 0/0
 10591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10592 ;;      Params:         2       0       0       0       0       0       0
 10593 ;;      Locals:         0       0       0       0       0       0       0
 10594 ;;      Temps:          0       0       0       0       0       0       0
 10595 ;;      Totals:         2       0       0       0       0       0       0
 10596 ;;Total ram usage:        2 bytes
 10597 ;; Hardware stack levels used:    1
 10598 ;; This function calls:
 10599 ;;		Nothing
 10600 ;; This function is called by:
 10601 ;;		_EUSART1_Transmit_ISR
 10602 ;; This function uses a non-reentrant model
 10603 ;;
 10604                           
 10605                           	psect	text50
 10606  001AAA                     __ptext50:
 10607                           	opt stack 0
 10608  001AAA                     i2_UART_buff_size:
 10609                           	opt stack 22
 10610                           
 10611                           ;eusart1.c: 158: return (_this->count);
 10612                           
 10613                           ;incstack = 0
 10614  001AAA  EE20 F0CC          	lfsr	2,204
 10615  001AAE  5001               	movf	i2UART_buff_size@_this,w,c
 10616  001AB0  26D9               	addwf	fsr2l,f,c
 10617  001AB2  5002               	movf	i2UART_buff_size@_this+1,w,c
 10618  001AB4  22DA               	addwfc	fsr2h,f,c
 10619  001AB6  CFDE F001          	movff	postinc2,?i2_UART_buff_size
 10620  001ABA  CFDD F002          	movff	postdec2,?i2_UART_buff_size+1
 10621  001ABE  0012               	return	
 10622  001AC0                     __end_ofi2_UART_buff_size:
 10623                           	opt stack 0
 10624                           tosu	equ	0xFFF
 10625                           tosh	equ	0xFFE
 10626                           tosl	equ	0xFFD
 10627                           pclatu	equ	0xFFB
 10628                           pclath	equ	0xFFA
 10629                           tblptru	equ	0xFF8
 10630                           tblptrh	equ	0xFF7
 10631                           tblptrl	equ	0xFF6
 10632                           tablat	equ	0xFF5
 10633                           prodh	equ	0xFF4
 10634                           prodl	equ	0xFF3
 10635                           intcon	equ	0xFF2
 10636                           intcon2	equ	0xFF1
 10637                           postinc0	equ	0xFEE
 10638                           fsr0h	equ	0xFEA
 10639                           fsr0l	equ	0xFE9
 10640                           wreg	equ	0xFE8
 10641                           postdec1	equ	0xFE5
 10642                           fsr1h	equ	0xFE2
 10643                           fsr1l	equ	0xFE1
 10644                           indf2	equ	0xFDF
 10645                           postinc2	equ	0xFDE
 10646                           postdec2	equ	0xFDD
 10647                           plusw2	equ	0xFDB
 10648                           fsr2h	equ	0xFDA
 10649                           fsr2l	equ	0xFD9
 10650                           status	equ	0xFD8
 10651                           
 10652 ;; *************** function i2_UART_buff_get *****************
 10653 ;; Defined at:
 10654 ;;		line 136 in file "mcc_generated_files/eusart1.c"
 10655 ;; Parameters:    Size  Location     Type
 10656 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 10657 ;;		 -> output_buffer(206), input_buffer(206), 
 10658 ;; Auto vars:     Size  Location     Type
 10659 ;;  UART_buff_ge    1   10[COMRAM] unsigned char 
 10660 ;; Return value:  Size  Location     Type
 10661 ;;                  1    wreg      unsigned char 
 10662 ;; Registers used:
 10663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10664 ;; Tracked objects:
 10665 ;;		On entry : 0/0
 10666 ;;		On exit  : 0/0
 10667 ;;		Unchanged: 0/0
 10668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10669 ;;      Params:         2       0       0       0       0       0       0
 10670 ;;      Locals:         1       0       0       0       0       0       0
 10671 ;;      Temps:          2       0       0       0       0       0       0
 10672 ;;      Totals:         5       0       0       0       0       0       0
 10673 ;;Total ram usage:        5 bytes
 10674 ;; Hardware stack levels used:    1
 10675 ;; Hardware stack levels required when called:    1
 10676 ;; This function calls:
 10677 ;;		i2_UART_buff_modulo_inc
 10678 ;; This function is called by:
 10679 ;;		_EUSART1_Transmit_ISR
 10680 ;; This function uses a non-reentrant model
 10681 ;;
 10682                           
 10683                           	psect	text51
 10684  001466                     __ptext51:
 10685                           	opt stack 0
 10686  001466                     i2_UART_buff_get:
 10687                           	opt stack 21
 10688                           
 10689                           ;eusart1.c: 137: unsigned char c;
 10690                           ;eusart1.c: 138: if (_this->count > 0) {
 10691                           
 10692                           ;incstack = 0
 10693  001466  EE20 F0CC          	lfsr	2,204
 10694  00146A  5007               	movf	i2UART_buff_get@_this,w,c
 10695  00146C  26D9               	addwf	fsr2l,f,c
 10696  00146E  5008               	movf	i2UART_buff_get@_this+1,w,c
 10697  001470  22DA               	addwfc	fsr2h,f,c
 10698  001472  0E01               	movlw	1
 10699  001474  BEDB               	btfsc	plusw2,7,c
 10700  001476  D03C               	goto	i2l4288
 10701  001478  0E01               	movlw	1
 10702  00147A  50DB               	movf	plusw2,w,c
 10703  00147C  E103               	bnz	i2u310_40
 10704  00147E  04DE               	decf	postinc2,w,c
 10705  001480  A0D8               	btfss	status,0,c
 10706  001482  D036               	goto	i2l4288
 10707  001484                     i2u310_40:
 10708                           
 10709                           ;eusart1.c: 139: c = _this->buf[_this->tail];
 10710  001484  EE20 F0CA          	lfsr	2,202
 10711  001488  5007               	movf	i2UART_buff_get@_this,w,c
 10712  00148A  26D9               	addwf	fsr2l,f,c
 10713  00148C  5008               	movf	i2UART_buff_get@_this+1,w,c
 10714  00148E  22DA               	addwfc	fsr2h,f,c
 10715  001490  CFDE F009          	movff	postinc2,??i2_UART_buff_get
 10716  001494  CFDD F00A          	movff	postdec2,??i2_UART_buff_get+1
 10717  001498  5009               	movf	??i2_UART_buff_get,w,c
 10718  00149A  2407               	addwf	i2UART_buff_get@_this,w,c
 10719  00149C  6ED9               	movwf	fsr2l,c
 10720  00149E  500A               	movf	??i2_UART_buff_get+1,w,c
 10721  0014A0  2008               	addwfc	i2UART_buff_get@_this+1,w,c
 10722  0014A2  6EDA               	movwf	fsr2h,c
 10723  0014A4  50DF               	movf	indf2,w,c
 10724  0014A6  6E0B               	movwf	i2UART_buff_get@c,c
 10725                           
 10726                           ;eusart1.c: 140: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 10727  0014A8  EE20 F0CA          	lfsr	2,202
 10728  0014AC  5007               	movf	i2UART_buff_get@_this,w,c
 10729  0014AE  26D9               	addwf	fsr2l,f,c
 10730  0014B0  5008               	movf	i2UART_buff_get@_this+1,w,c
 10731  0014B2  22DA               	addwfc	fsr2h,f,c
 10732  0014B4  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 10733  0014B8  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 10734  0014BC  0E00               	movlw	0
 10735  0014BE  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 10736  0014C0  0EC8               	movlw	200
 10737  0014C2  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 10738  0014C4  EC74  F00C         	call	i2_UART_buff_modulo_inc	;wreg free
 10739  0014C8  EE20 F0CA          	lfsr	2,202
 10740  0014CC  5007               	movf	i2UART_buff_get@_this,w,c
 10741  0014CE  26D9               	addwf	fsr2l,f,c
 10742  0014D0  5008               	movf	i2UART_buff_get@_this+1,w,c
 10743  0014D2  22DA               	addwfc	fsr2h,f,c
 10744  0014D4  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 10745  0014D8  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 10746                           
 10747                           ;eusart1.c: 141: --_this->count;
 10748  0014DC  EE20 F0CC          	lfsr	2,204
 10749  0014E0  5007               	movf	i2UART_buff_get@_this,w,c
 10750  0014E2  26D9               	addwf	fsr2l,f,c
 10751  0014E4  5008               	movf	i2UART_buff_get@_this+1,w,c
 10752  0014E6  22DA               	addwfc	fsr2h,f,c
 10753  0014E8  06DE               	decf	postinc2,f,c
 10754  0014EA  0E00               	movlw	0
 10755  0014EC  5ADD               	subwfb	postdec2,f,c
 10756                           
 10757                           ;eusart1.c: 142: } else {
 10758  0014EE  D002               	goto	i2l303
 10759  0014F0                     i2l4288:
 10760                           
 10761                           ;eusart1.c: 143: c = 0;
 10762  0014F0  0E00               	movlw	0
 10763  0014F2  6E0B               	movwf	i2UART_buff_get@c,c
 10764  0014F4                     i2l303:
 10765                           
 10766                           ;eusart1.c: 144: }
 10767                           ;eusart1.c: 145: return (c);
 10768  0014F4  500B               	movf	i2UART_buff_get@c,w,c
 10769  0014F6  0012               	return	
 10770  0014F8                     __end_ofi2_UART_buff_get:
 10771                           	opt stack 0
 10772                           tosu	equ	0xFFF
 10773                           tosh	equ	0xFFE
 10774                           tosl	equ	0xFFD
 10775                           pclatu	equ	0xFFB
 10776                           pclath	equ	0xFFA
 10777                           tblptru	equ	0xFF8
 10778                           tblptrh	equ	0xFF7
 10779                           tblptrl	equ	0xFF6
 10780                           tablat	equ	0xFF5
 10781                           prodh	equ	0xFF4
 10782                           prodl	equ	0xFF3
 10783                           intcon	equ	0xFF2
 10784                           intcon2	equ	0xFF1
 10785                           postinc0	equ	0xFEE
 10786                           fsr0h	equ	0xFEA
 10787                           fsr0l	equ	0xFE9
 10788                           wreg	equ	0xFE8
 10789                           postdec1	equ	0xFE5
 10790                           fsr1h	equ	0xFE2
 10791                           fsr1l	equ	0xFE1
 10792                           indf2	equ	0xFDF
 10793                           postinc2	equ	0xFDE
 10794                           postdec2	equ	0xFDD
 10795                           plusw2	equ	0xFDB
 10796                           fsr2h	equ	0xFDA
 10797                           fsr2l	equ	0xFD9
 10798                           status	equ	0xFD8
 10799                           
 10800 ;; *************** function _EUSART1_Receive_ISR *****************
 10801 ;; Defined at:
 10802 ;;		line 202 in file "mcc_generated_files/eusart1.c"
 10803 ;; Parameters:    Size  Location     Type
 10804 ;;		None
 10805 ;; Auto vars:     Size  Location     Type
 10806 ;;  data            1   11[COMRAM] unsigned char 
 10807 ;; Return value:  Size  Location     Type
 10808 ;;		None               void
 10809 ;; Registers used:
 10810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10811 ;; Tracked objects:
 10812 ;;		On entry : 0/0
 10813 ;;		On exit  : 0/0
 10814 ;;		Unchanged: 0/0
 10815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10816 ;;      Params:         0       0       0       0       0       0       0
 10817 ;;      Locals:         1       0       0       0       0       0       0
 10818 ;;      Temps:          0       0       0       0       0       0       0
 10819 ;;      Totals:         1       0       0       0       0       0       0
 10820 ;;Total ram usage:        1 bytes
 10821 ;; Hardware stack levels used:    1
 10822 ;; Hardware stack levels required when called:    2
 10823 ;; This function calls:
 10824 ;;		i2_UART_buff_put
 10825 ;; This function is called by:
 10826 ;;		_INTERRUPT_InterruptManager
 10827 ;; This function uses a non-reentrant model
 10828 ;;
 10829                           
 10830                           	psect	text52
 10831  0019B8                     __ptext52:
 10832                           	opt stack 0
 10833  0019B8                     _EUSART1_Receive_ISR:
 10834                           	opt stack 21
 10835                           
 10836                           ;eusart1.c: 203: if (1 == RC1STAbits.OERR) {
 10837                           
 10838                           ;incstack = 0
 10839  0019B8  A2AB               	btfss	4011,1,c	;volatile
 10840  0019BA  D002               	goto	i2l340
 10841                           
 10842                           ;eusart1.c: 206: RC1STAbits.CREN = 0;
 10843  0019BC  98AB               	bcf	4011,4,c	;volatile
 10844                           
 10845                           ;eusart1.c: 207: RC1STAbits.CREN = 1;
 10846  0019BE  88AB               	bsf	4011,4,c	;volatile
 10847  0019C0                     i2l340:
 10848                           
 10849                           ;eusart1.c: 208: }
 10850                           ;eusart1.c: 209: unsigned char data = RCREG1;
 10851  0019C0  CFAE F00C          	movff	4014,EUSART1_Receive_ISR@data	;volatile
 10852                           
 10853                           ;eusart1.c: 210: UART_buff_put(&input_buffer, data);
 10854  0019C4  0E00               	movlw	low _input_buffer
 10855  0019C6  6E07               	movwf	i2UART_buff_put@_this,c
 10856  0019C8  0E04               	movlw	high _input_buffer
 10857  0019CA  6E08               	movwf	i2UART_buff_put@_this+1,c
 10858  0019CC  C00C  F009         	movff	EUSART1_Receive_ISR@data,i2UART_buff_put@c
 10859  0019D0  ECA8  F007         	call	i2_UART_buff_put	;wreg free
 10860  0019D4  0012               	return		;funcret
 10861  0019D6                     __end_of_EUSART1_Receive_ISR:
 10862                           	opt stack 0
 10863                           tosu	equ	0xFFF
 10864                           tosh	equ	0xFFE
 10865                           tosl	equ	0xFFD
 10866                           pclatu	equ	0xFFB
 10867                           pclath	equ	0xFFA
 10868                           tblptru	equ	0xFF8
 10869                           tblptrh	equ	0xFF7
 10870                           tblptrl	equ	0xFF6
 10871                           tablat	equ	0xFF5
 10872                           prodh	equ	0xFF4
 10873                           prodl	equ	0xFF3
 10874                           intcon	equ	0xFF2
 10875                           intcon2	equ	0xFF1
 10876                           postinc0	equ	0xFEE
 10877                           fsr0h	equ	0xFEA
 10878                           fsr0l	equ	0xFE9
 10879                           wreg	equ	0xFE8
 10880                           postdec1	equ	0xFE5
 10881                           fsr1h	equ	0xFE2
 10882                           fsr1l	equ	0xFE1
 10883                           indf2	equ	0xFDF
 10884                           postinc2	equ	0xFDE
 10885                           postdec2	equ	0xFDD
 10886                           plusw2	equ	0xFDB
 10887                           fsr2h	equ	0xFDA
 10888                           fsr2l	equ	0xFD9
 10889                           status	equ	0xFD8
 10890                           
 10891 ;; *************** function i2_UART_buff_put *****************
 10892 ;; Defined at:
 10893 ;;		line 123 in file "mcc_generated_files/eusart1.c"
 10894 ;; Parameters:    Size  Location     Type
 10895 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 10896 ;;		 -> output_buffer(206), input_buffer(206), 
 10897 ;;  c               1    8[COMRAM] const unsigned char 
 10898 ;; Auto vars:     Size  Location     Type
 10899 ;;		None
 10900 ;; Return value:  Size  Location     Type
 10901 ;;		None               void
 10902 ;; Registers used:
 10903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10904 ;; Tracked objects:
 10905 ;;		On entry : 0/0
 10906 ;;		On exit  : 0/0
 10907 ;;		Unchanged: 0/0
 10908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10909 ;;      Params:         3       0       0       0       0       0       0
 10910 ;;      Locals:         0       0       0       0       0       0       0
 10911 ;;      Temps:          2       0       0       0       0       0       0
 10912 ;;      Totals:         5       0       0       0       0       0       0
 10913 ;;Total ram usage:        5 bytes
 10914 ;; Hardware stack levels used:    1
 10915 ;; Hardware stack levels required when called:    1
 10916 ;; This function calls:
 10917 ;;		i2_UART_buff_modulo_inc
 10918 ;; This function is called by:
 10919 ;;		_EUSART1_Receive_ISR
 10920 ;; This function uses a non-reentrant model
 10921 ;;
 10922                           
 10923                           	psect	text53
 10924  000F50                     __ptext53:
 10925                           	opt stack 0
 10926  000F50                     i2_UART_buff_put:
 10927                           	opt stack 21
 10928                           
 10929                           ;eusart1.c: 124: if (_this->count < 200) {
 10930                           
 10931                           ;incstack = 0
 10932  000F50  EE20 F0CC          	lfsr	2,204
 10933  000F54  5007               	movf	i2UART_buff_put@_this,w,c
 10934  000F56  26D9               	addwf	fsr2l,f,c
 10935  000F58  5008               	movf	i2UART_buff_put@_this+1,w,c
 10936  000F5A  22DA               	addwfc	fsr2h,f,c
 10937  000F5C  0E01               	movlw	1
 10938  000F5E  BEDB               	btfsc	plusw2,7,c
 10939  000F60  D007               	goto	i2l4268
 10940  000F62  0E01               	movlw	1
 10941  000F64  50DB               	movf	plusw2,w,c
 10942  000F66  E13A               	bnz	i2l4274
 10943  000F68  0EC8               	movlw	200
 10944  000F6A  5CDE               	subwf	postinc2,w,c
 10945  000F6C  B0D8               	btfsc	status,0,c
 10946  000F6E  D036               	goto	i2l4274
 10947  000F70                     i2l4268:
 10948                           
 10949                           ;eusart1.c: 125: _this->buf[_this->head] = c;
 10950  000F70  EE20 F0C8          	lfsr	2,200
 10951  000F74  5007               	movf	i2UART_buff_put@_this,w,c
 10952  000F76  26D9               	addwf	fsr2l,f,c
 10953  000F78  5008               	movf	i2UART_buff_put@_this+1,w,c
 10954  000F7A  22DA               	addwfc	fsr2h,f,c
 10955  000F7C  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 10956  000F80  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 10957  000F84  500A               	movf	??i2_UART_buff_put,w,c
 10958  000F86  2407               	addwf	i2UART_buff_put@_this,w,c
 10959  000F88  6ED9               	movwf	fsr2l,c
 10960  000F8A  500B               	movf	??i2_UART_buff_put+1,w,c
 10961  000F8C  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 10962  000F8E  6EDA               	movwf	fsr2h,c
 10963  000F90  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 10964                           
 10965                           ;eusart1.c: 126: _this->head = UART_buff_modulo_inc(_this->head, 200);
 10966  000F94  EE20 F0C8          	lfsr	2,200
 10967  000F98  5007               	movf	i2UART_buff_put@_this,w,c
 10968  000F9A  26D9               	addwf	fsr2l,f,c
 10969  000F9C  5008               	movf	i2UART_buff_put@_this+1,w,c
 10970  000F9E  22DA               	addwfc	fsr2h,f,c
 10971  000FA0  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 10972  000FA4  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 10973  000FA8  0E00               	movlw	0
 10974  000FAA  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 10975  000FAC  0EC8               	movlw	200
 10976  000FAE  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 10977  000FB0  EC74  F00C         	call	i2_UART_buff_modulo_inc	;wreg free
 10978  000FB4  EE20 F0C8          	lfsr	2,200
 10979  000FB8  5007               	movf	i2UART_buff_put@_this,w,c
 10980  000FBA  26D9               	addwf	fsr2l,f,c
 10981  000FBC  5008               	movf	i2UART_buff_put@_this+1,w,c
 10982  000FBE  22DA               	addwfc	fsr2h,f,c
 10983  000FC0  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 10984  000FC4  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 10985                           
 10986                           ;eusart1.c: 127: ++_this->count;
 10987  000FC8  EE20 F0CC          	lfsr	2,204
 10988  000FCC  5007               	movf	i2UART_buff_put@_this,w,c
 10989  000FCE  26D9               	addwf	fsr2l,f,c
 10990  000FD0  5008               	movf	i2UART_buff_put@_this+1,w,c
 10991  000FD2  22DA               	addwfc	fsr2h,f,c
 10992  000FD4  2ADE               	incf	postinc2,f,c
 10993  000FD6  0E00               	movlw	0
 10994  000FD8  22DD               	addwfc	postdec2,f,c
 10995                           
 10996                           ;eusart1.c: 128: } else {
 10997  000FDA  0012               	return	
 10998  000FDC                     i2l4274:
 10999                           
 11000                           ;eusart1.c: 129: _this->buf[_this->head] = c;
 11001  000FDC  EE20 F0C8          	lfsr	2,200
 11002  000FE0  5007               	movf	i2UART_buff_put@_this,w,c
 11003  000FE2  26D9               	addwf	fsr2l,f,c
 11004  000FE4  5008               	movf	i2UART_buff_put@_this+1,w,c
 11005  000FE6  22DA               	addwfc	fsr2h,f,c
 11006  000FE8  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 11007  000FEC  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 11008  000FF0  500A               	movf	??i2_UART_buff_put,w,c
 11009  000FF2  2407               	addwf	i2UART_buff_put@_this,w,c
 11010  000FF4  6ED9               	movwf	fsr2l,c
 11011  000FF6  500B               	movf	??i2_UART_buff_put+1,w,c
 11012  000FF8  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 11013  000FFA  6EDA               	movwf	fsr2h,c
 11014  000FFC  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 11015                           
 11016                           ;eusart1.c: 130: _this->head = UART_buff_modulo_inc(_this->head, 200);
 11017  001000  EE20 F0C8          	lfsr	2,200
 11018  001004  5007               	movf	i2UART_buff_put@_this,w,c
 11019  001006  26D9               	addwf	fsr2l,f,c
 11020  001008  5008               	movf	i2UART_buff_put@_this+1,w,c
 11021  00100A  22DA               	addwfc	fsr2h,f,c
 11022  00100C  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 11023  001010  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 11024  001014  0E00               	movlw	0
 11025  001016  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 11026  001018  0EC8               	movlw	200
 11027  00101A  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 11028  00101C  EC74  F00C         	call	i2_UART_buff_modulo_inc	;wreg free
 11029  001020  EE20 F0C8          	lfsr	2,200
 11030  001024  5007               	movf	i2UART_buff_put@_this,w,c
 11031  001026  26D9               	addwf	fsr2l,f,c
 11032  001028  5008               	movf	i2UART_buff_put@_this+1,w,c
 11033  00102A  22DA               	addwfc	fsr2h,f,c
 11034  00102C  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 11035  001030  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 11036                           
 11037                           ;eusart1.c: 131: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 11038  001034  EE20 F0CA          	lfsr	2,202
 11039  001038  5007               	movf	i2UART_buff_put@_this,w,c
 11040  00103A  26D9               	addwf	fsr2l,f,c
 11041  00103C  5008               	movf	i2UART_buff_put@_this+1,w,c
 11042  00103E  22DA               	addwfc	fsr2h,f,c
 11043  001040  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 11044  001044  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 11045  001048  0E00               	movlw	0
 11046  00104A  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 11047  00104C  0EC8               	movlw	200
 11048  00104E  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 11049  001050  EC74  F00C         	call	i2_UART_buff_modulo_inc	;wreg free
 11050  001054  EE20 F0CA          	lfsr	2,202
 11051  001058  5007               	movf	i2UART_buff_put@_this,w,c
 11052  00105A  26D9               	addwf	fsr2l,f,c
 11053  00105C  5008               	movf	i2UART_buff_put@_this+1,w,c
 11054  00105E  22DA               	addwfc	fsr2h,f,c
 11055  001060  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 11056  001064  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 11057  001068  0012               	return	
 11058  00106A                     __end_ofi2_UART_buff_put:
 11059                           	opt stack 0
 11060                           tosu	equ	0xFFF
 11061                           tosh	equ	0xFFE
 11062                           tosl	equ	0xFFD
 11063                           pclatu	equ	0xFFB
 11064                           pclath	equ	0xFFA
 11065                           tblptru	equ	0xFF8
 11066                           tblptrh	equ	0xFF7
 11067                           tblptrl	equ	0xFF6
 11068                           tablat	equ	0xFF5
 11069                           prodh	equ	0xFF4
 11070                           prodl	equ	0xFF3
 11071                           intcon	equ	0xFF2
 11072                           intcon2	equ	0xFF1
 11073                           postinc0	equ	0xFEE
 11074                           fsr0h	equ	0xFEA
 11075                           fsr0l	equ	0xFE9
 11076                           wreg	equ	0xFE8
 11077                           postdec1	equ	0xFE5
 11078                           fsr1h	equ	0xFE2
 11079                           fsr1l	equ	0xFE1
 11080                           indf2	equ	0xFDF
 11081                           postinc2	equ	0xFDE
 11082                           postdec2	equ	0xFDD
 11083                           plusw2	equ	0xFDB
 11084                           fsr2h	equ	0xFDA
 11085                           fsr2l	equ	0xFD9
 11086                           status	equ	0xFD8
 11087                           
 11088 ;; *************** function i2_UART_buff_modulo_inc *****************
 11089 ;; Defined at:
 11090 ;;		line 161 in file "mcc_generated_files/eusart1.c"
 11091 ;; Parameters:    Size  Location     Type
 11092 ;;  value           2    0[COMRAM] const unsigned int 
 11093 ;;  modulus         2    2[COMRAM] const unsigned int 
 11094 ;; Auto vars:     Size  Location     Type
 11095 ;;  UART_buff_mo    2    4[COMRAM] unsigned int 
 11096 ;; Return value:  Size  Location     Type
 11097 ;;                  2    0[COMRAM] unsigned int 
 11098 ;; Registers used:
 11099 ;;		wreg, status,2, status,0
 11100 ;; Tracked objects:
 11101 ;;		On entry : 0/0
 11102 ;;		On exit  : 0/0
 11103 ;;		Unchanged: 0/0
 11104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11105 ;;      Params:         4       0       0       0       0       0       0
 11106 ;;      Locals:         2       0       0       0       0       0       0
 11107 ;;      Temps:          0       0       0       0       0       0       0
 11108 ;;      Totals:         6       0       0       0       0       0       0
 11109 ;;Total ram usage:        6 bytes
 11110 ;; Hardware stack levels used:    1
 11111 ;; This function calls:
 11112 ;;		Nothing
 11113 ;; This function is called by:
 11114 ;;		i2_UART_buff_put
 11115 ;;		i2_UART_buff_get
 11116 ;; This function uses a non-reentrant model
 11117 ;;
 11118                           
 11119                           	psect	text54
 11120  0018E8                     __ptext54:
 11121                           	opt stack 0
 11122  0018E8                     i2_UART_buff_modulo_inc:
 11123                           	opt stack 21
 11124                           
 11125                           ;eusart1.c: 162: unsigned int my_value = value + 1;
 11126                           
 11127                           ;incstack = 0
 11128  0018E8  0E01               	movlw	1
 11129  0018EA  2401               	addwf	i2UART_buff_modulo_inc@value,w,c
 11130  0018EC  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 11131  0018EE  0E00               	movlw	0
 11132  0018F0  2002               	addwfc	i2UART_buff_modulo_inc@value+1,w,c
 11133  0018F2  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 11134                           
 11135                           ;eusart1.c: 163: if (my_value >= modulus) {
 11136  0018F4  5003               	movf	i2UART_buff_modulo_inc@modulus,w,c
 11137  0018F6  5C05               	subwf	i2UART_buff_modulo_inc@my_value,w,c
 11138  0018F8  5004               	movf	i2UART_buff_modulo_inc@modulus+1,w,c
 11139  0018FA  5806               	subwfb	i2UART_buff_modulo_inc@my_value+1,w,c
 11140  0018FC  A0D8               	btfss	status,0,c
 11141  0018FE  D004               	goto	i2l3944
 11142                           
 11143                           ;eusart1.c: 164: my_value = 0;
 11144  001900  0E00               	movlw	0
 11145  001902  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 11146  001904  0E00               	movlw	0
 11147  001906  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 11148  001908                     i2l3944:
 11149                           
 11150                           ;eusart1.c: 165: }
 11151                           ;eusart1.c: 166: return (my_value);
 11152  001908  C005  F001         	movff	i2UART_buff_modulo_inc@my_value,?i2_UART_buff_modulo_inc
 11153  00190C  C006  F002         	movff	i2UART_buff_modulo_inc@my_value+1,?i2_UART_buff_modulo_inc+1
 11154  001910  0012               	return	
 11155  001912                     __end_ofi2_UART_buff_modulo_inc:
 11156                           	opt stack 0
 11157                           tosu	equ	0xFFF
 11158                           tosh	equ	0xFFE
 11159                           tosl	equ	0xFFD
 11160                           pclatu	equ	0xFFB
 11161                           pclath	equ	0xFFA
 11162                           tblptru	equ	0xFF8
 11163                           tblptrh	equ	0xFF7
 11164                           tblptrl	equ	0xFF6
 11165                           tablat	equ	0xFF5
 11166                           prodh	equ	0xFF4
 11167                           prodl	equ	0xFF3
 11168                           intcon	equ	0xFF2
 11169                           intcon2	equ	0xFF1
 11170                           postinc0	equ	0xFEE
 11171                           fsr0h	equ	0xFEA
 11172                           fsr0l	equ	0xFE9
 11173                           wreg	equ	0xFE8
 11174                           postdec1	equ	0xFE5
 11175                           fsr1h	equ	0xFE2
 11176                           fsr1l	equ	0xFE1
 11177                           indf2	equ	0xFDF
 11178                           postinc2	equ	0xFDE
 11179                           postdec2	equ	0xFDD
 11180                           plusw2	equ	0xFDB
 11181                           fsr2h	equ	0xFDA
 11182                           fsr2l	equ	0xFD9
 11183                           status	equ	0xFD8
 11184                           
 11185 ;; *************** function _ECCP2_CaptureISR *****************
 11186 ;; Defined at:
 11187 ;;		line 80 in file "mcc_generated_files/eccp2.c"
 11188 ;; Parameters:    Size  Location     Type
 11189 ;;		None
 11190 ;; Auto vars:     Size  Location     Type
 11191 ;;  module          2    2[COMRAM] struct CCPR2Reg_tag
 11192 ;; Return value:  Size  Location     Type
 11193 ;;		None               void
 11194 ;; Registers used:
 11195 ;;		cstack
 11196 ;; Tracked objects:
 11197 ;;		On entry : 0/0
 11198 ;;		On exit  : 0/0
 11199 ;;		Unchanged: 0/0
 11200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11201 ;;      Params:         0       0       0       0       0       0       0
 11202 ;;      Locals:         2       0       0       0       0       0       0
 11203 ;;      Temps:          0       0       0       0       0       0       0
 11204 ;;      Totals:         2       0       0       0       0       0       0
 11205 ;;Total ram usage:        2 bytes
 11206 ;; Hardware stack levels used:    1
 11207 ;; Hardware stack levels required when called:    1
 11208 ;; This function calls:
 11209 ;;		_ECCP2_CallBack
 11210 ;; This function is called by:
 11211 ;;		_INTERRUPT_InterruptManager
 11212 ;; This function uses a non-reentrant model
 11213 ;;
 11214                           
 11215                           	psect	text55
 11216  001A38                     __ptext55:
 11217                           	opt stack 0
 11218  001A38                     _ECCP2_CaptureISR:
 11219                           	opt stack 22
 11220                           
 11221                           ;eccp2.c: 81: CCP_PERIOD_REG_T module;
 11222                           ;eccp2.c: 84: PIR2bits.CCP2IF = 0;
 11223                           
 11224                           ;incstack = 0
 11225  001A38  90A1               	bcf	4001,0,c	;volatile
 11226                           
 11227                           ;eccp2.c: 87: module.ccpr2l = CCPR2L;
 11228  001A3A  CF67 F003          	movff	3943,ECCP2_CaptureISR@module	;volatile
 11229                           
 11230                           ;eccp2.c: 88: module.ccpr2h = CCPR2H;
 11231  001A3E  CF68 F004          	movff	3944,ECCP2_CaptureISR@module+1	;volatile
 11232                           
 11233                           ;eccp2.c: 91: ECCP2_CallBack(module.ccpr2_16Bit);
 11234  001A42  C003  F001         	movff	ECCP2_CaptureISR@module,ECCP2_CallBack@capturedValue
 11235  001A46  C004  F002         	movff	ECCP2_CaptureISR@module+1,ECCP2_CallBack@capturedValue+1
 11236  001A4A  ECA6  F00D         	call	_ECCP2_CallBack	;wreg free
 11237  001A4E  0012               	return		;funcret
 11238  001A50                     __end_of_ECCP2_CaptureISR:
 11239                           	opt stack 0
 11240                           tosu	equ	0xFFF
 11241                           tosh	equ	0xFFE
 11242                           tosl	equ	0xFFD
 11243                           pclatu	equ	0xFFB
 11244                           pclath	equ	0xFFA
 11245                           tblptru	equ	0xFF8
 11246                           tblptrh	equ	0xFF7
 11247                           tblptrl	equ	0xFF6
 11248                           tablat	equ	0xFF5
 11249                           prodh	equ	0xFF4
 11250                           prodl	equ	0xFF3
 11251                           intcon	equ	0xFF2
 11252                           intcon2	equ	0xFF1
 11253                           postinc0	equ	0xFEE
 11254                           fsr0h	equ	0xFEA
 11255                           fsr0l	equ	0xFE9
 11256                           wreg	equ	0xFE8
 11257                           postdec1	equ	0xFE5
 11258                           fsr1h	equ	0xFE2
 11259                           fsr1l	equ	0xFE1
 11260                           indf2	equ	0xFDF
 11261                           postinc2	equ	0xFDE
 11262                           postdec2	equ	0xFDD
 11263                           plusw2	equ	0xFDB
 11264                           fsr2h	equ	0xFDA
 11265                           fsr2l	equ	0xFD9
 11266                           status	equ	0xFD8
 11267                           
 11268 ;; *************** function _ECCP2_CallBack *****************
 11269 ;; Defined at:
 11270 ;;		line 94 in file "mcc_generated_files/eccp2.c"
 11271 ;; Parameters:    Size  Location     Type
 11272 ;;  capturedValu    2    0[COMRAM] unsigned int 
 11273 ;; Auto vars:     Size  Location     Type
 11274 ;;		None
 11275 ;; Return value:  Size  Location     Type
 11276 ;;		None               void
 11277 ;; Registers used:
 11278 ;;		None
 11279 ;; Tracked objects:
 11280 ;;		On entry : 0/0
 11281 ;;		On exit  : 0/0
 11282 ;;		Unchanged: 0/0
 11283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11284 ;;      Params:         2       0       0       0       0       0       0
 11285 ;;      Locals:         0       0       0       0       0       0       0
 11286 ;;      Temps:          0       0       0       0       0       0       0
 11287 ;;      Totals:         2       0       0       0       0       0       0
 11288 ;;Total ram usage:        2 bytes
 11289 ;; Hardware stack levels used:    1
 11290 ;; This function calls:
 11291 ;;		Nothing
 11292 ;; This function is called by:
 11293 ;;		_ECCP2_CaptureISR
 11294 ;; This function uses a non-reentrant model
 11295 ;;
 11296                           
 11297                           	psect	text56
 11298  001B4C                     __ptext56:
 11299                           	opt stack 0
 11300  001B4C                     _ECCP2_CallBack:
 11301                           	opt stack 22
 11302                           
 11303                           ;incstack = 0
 11304  001B4C  0012               	return		;funcret
 11305  001B4E                     __end_of_ECCP2_CallBack:
 11306                           	opt stack 0
 11307                           tosu	equ	0xFFF
 11308                           tosh	equ	0xFFE
 11309                           tosl	equ	0xFFD
 11310                           pclatu	equ	0xFFB
 11311                           pclath	equ	0xFFA
 11312                           tblptru	equ	0xFF8
 11313                           tblptrh	equ	0xFF7
 11314                           tblptrl	equ	0xFF6
 11315                           tablat	equ	0xFF5
 11316                           prodh	equ	0xFF4
 11317                           prodl	equ	0xFF3
 11318                           intcon	equ	0xFF2
 11319                           intcon2	equ	0xFF1
 11320                           postinc0	equ	0xFEE
 11321                           fsr0h	equ	0xFEA
 11322                           fsr0l	equ	0xFE9
 11323                           wreg	equ	0xFE8
 11324                           postdec1	equ	0xFE5
 11325                           fsr1h	equ	0xFE2
 11326                           fsr1l	equ	0xFE1
 11327                           indf2	equ	0xFDF
 11328                           postinc2	equ	0xFDE
 11329                           postdec2	equ	0xFDD
 11330                           plusw2	equ	0xFDB
 11331                           fsr2h	equ	0xFDA
 11332                           fsr2l	equ	0xFD9
 11333                           status	equ	0xFD8
 11334                           
 11335 ;; *************** function _ECCP1_CaptureISR *****************
 11336 ;; Defined at:
 11337 ;;		line 80 in file "mcc_generated_files/eccp1.c"
 11338 ;; Parameters:    Size  Location     Type
 11339 ;;		None
 11340 ;; Auto vars:     Size  Location     Type
 11341 ;;  module          2    2[COMRAM] struct CCPR1Reg_tag
 11342 ;; Return value:  Size  Location     Type
 11343 ;;		None               void
 11344 ;; Registers used:
 11345 ;;		cstack
 11346 ;; Tracked objects:
 11347 ;;		On entry : 0/0
 11348 ;;		On exit  : 0/0
 11349 ;;		Unchanged: 0/0
 11350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11351 ;;      Params:         0       0       0       0       0       0       0
 11352 ;;      Locals:         2       0       0       0       0       0       0
 11353 ;;      Temps:          0       0       0       0       0       0       0
 11354 ;;      Totals:         2       0       0       0       0       0       0
 11355 ;;Total ram usage:        2 bytes
 11356 ;; Hardware stack levels used:    1
 11357 ;; Hardware stack levels required when called:    1
 11358 ;; This function calls:
 11359 ;;		_ECCP1_CallBack
 11360 ;; This function is called by:
 11361 ;;		_INTERRUPT_InterruptManager
 11362 ;; This function uses a non-reentrant model
 11363 ;;
 11364                           
 11365                           	psect	text57
 11366  001A50                     __ptext57:
 11367                           	opt stack 0
 11368  001A50                     _ECCP1_CaptureISR:
 11369                           	opt stack 22
 11370                           
 11371                           ;eccp1.c: 81: CCP_PERIOD_REG_T module;
 11372                           ;eccp1.c: 84: PIR1bits.CCP1IF = 0;
 11373                           
 11374                           ;incstack = 0
 11375  001A50  949E               	bcf	3998,2,c	;volatile
 11376                           
 11377                           ;eccp1.c: 87: module.ccpr1l = CCPR1L;
 11378  001A52  CFBE F003          	movff	4030,ECCP1_CaptureISR@module	;volatile
 11379                           
 11380                           ;eccp1.c: 88: module.ccpr1h = CCPR1H;
 11381  001A56  CFBF F004          	movff	4031,ECCP1_CaptureISR@module+1	;volatile
 11382                           
 11383                           ;eccp1.c: 91: ECCP1_CallBack(module.ccpr1_16Bit);
 11384  001A5A  C003  F001         	movff	ECCP1_CaptureISR@module,ECCP1_CallBack@capturedValue
 11385  001A5E  C004  F002         	movff	ECCP1_CaptureISR@module+1,ECCP1_CallBack@capturedValue+1
 11386  001A62  ECA7  F00D         	call	_ECCP1_CallBack	;wreg free
 11387  001A66  0012               	return		;funcret
 11388  001A68                     __end_of_ECCP1_CaptureISR:
 11389                           	opt stack 0
 11390                           tosu	equ	0xFFF
 11391                           tosh	equ	0xFFE
 11392                           tosl	equ	0xFFD
 11393                           pclatu	equ	0xFFB
 11394                           pclath	equ	0xFFA
 11395                           tblptru	equ	0xFF8
 11396                           tblptrh	equ	0xFF7
 11397                           tblptrl	equ	0xFF6
 11398                           tablat	equ	0xFF5
 11399                           prodh	equ	0xFF4
 11400                           prodl	equ	0xFF3
 11401                           intcon	equ	0xFF2
 11402                           intcon2	equ	0xFF1
 11403                           postinc0	equ	0xFEE
 11404                           fsr0h	equ	0xFEA
 11405                           fsr0l	equ	0xFE9
 11406                           wreg	equ	0xFE8
 11407                           postdec1	equ	0xFE5
 11408                           fsr1h	equ	0xFE2
 11409                           fsr1l	equ	0xFE1
 11410                           indf2	equ	0xFDF
 11411                           postinc2	equ	0xFDE
 11412                           postdec2	equ	0xFDD
 11413                           plusw2	equ	0xFDB
 11414                           fsr2h	equ	0xFDA
 11415                           fsr2l	equ	0xFD9
 11416                           status	equ	0xFD8
 11417                           
 11418 ;; *************** function _ECCP1_CallBack *****************
 11419 ;; Defined at:
 11420 ;;		line 94 in file "mcc_generated_files/eccp1.c"
 11421 ;; Parameters:    Size  Location     Type
 11422 ;;  capturedValu    2    0[COMRAM] unsigned int 
 11423 ;; Auto vars:     Size  Location     Type
 11424 ;;		None
 11425 ;; Return value:  Size  Location     Type
 11426 ;;		None               void
 11427 ;; Registers used:
 11428 ;;		None
 11429 ;; Tracked objects:
 11430 ;;		On entry : 0/0
 11431 ;;		On exit  : 0/0
 11432 ;;		Unchanged: 0/0
 11433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11434 ;;      Params:         2       0       0       0       0       0       0
 11435 ;;      Locals:         0       0       0       0       0       0       0
 11436 ;;      Temps:          0       0       0       0       0       0       0
 11437 ;;      Totals:         2       0       0       0       0       0       0
 11438 ;;Total ram usage:        2 bytes
 11439 ;; Hardware stack levels used:    1
 11440 ;; This function calls:
 11441 ;;		Nothing
 11442 ;; This function is called by:
 11443 ;;		_ECCP1_CaptureISR
 11444 ;; This function uses a non-reentrant model
 11445 ;;
 11446                           
 11447                           	psect	text58
 11448  001B4E                     __ptext58:
 11449                           	opt stack 0
 11450  001B4E                     _ECCP1_CallBack:
 11451                           	opt stack 22
 11452                           
 11453                           ;incstack = 0
 11454  001B4E  0012               	return		;funcret
 11455  001B50                     __end_of_ECCP1_CallBack:
 11456                           	opt stack 0
 11457                           tosu	equ	0xFFF
 11458                           tosh	equ	0xFFE
 11459                           tosl	equ	0xFFD
 11460                           pclatu	equ	0xFFB
 11461                           pclath	equ	0xFFA
 11462                           tblptru	equ	0xFF8
 11463                           tblptrh	equ	0xFF7
 11464                           tblptrl	equ	0xFF6
 11465                           tablat	equ	0xFF5
 11466                           prodh	equ	0xFF4
 11467                           prodl	equ	0xFF3
 11468                           intcon	equ	0xFF2
 11469                           intcon2	equ	0xFF1
 11470                           postinc0	equ	0xFEE
 11471                           fsr0h	equ	0xFEA
 11472                           fsr0l	equ	0xFE9
 11473                           wreg	equ	0xFE8
 11474                           postdec1	equ	0xFE5
 11475                           fsr1h	equ	0xFE2
 11476                           fsr1l	equ	0xFE1
 11477                           indf2	equ	0xFDF
 11478                           postinc2	equ	0xFDE
 11479                           postdec2	equ	0xFDD
 11480                           plusw2	equ	0xFDB
 11481                           fsr2h	equ	0xFDA
 11482                           fsr2l	equ	0xFD9
 11483                           status	equ	0xFD8
 11484                           
 11485 ;; *************** function _ADC_ISR *****************
 11486 ;; Defined at:
 11487 ;;		line 121 in file "mcc_generated_files/adc.c"
 11488 ;; Parameters:    Size  Location     Type
 11489 ;;		None
 11490 ;; Auto vars:     Size  Location     Type
 11491 ;;		None
 11492 ;; Return value:  Size  Location     Type
 11493 ;;		None               void
 11494 ;; Registers used:
 11495 ;;		None
 11496 ;; Tracked objects:
 11497 ;;		On entry : 0/0
 11498 ;;		On exit  : 0/0
 11499 ;;		Unchanged: 0/0
 11500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11501 ;;      Params:         0       0       0       0       0       0       0
 11502 ;;      Locals:         0       0       0       0       0       0       0
 11503 ;;      Temps:          0       0       0       0       0       0       0
 11504 ;;      Totals:         0       0       0       0       0       0       0
 11505 ;;Total ram usage:        0 bytes
 11506 ;; Hardware stack levels used:    1
 11507 ;; This function calls:
 11508 ;;		Nothing
 11509 ;; This function is called by:
 11510 ;;		_INTERRUPT_InterruptManager
 11511 ;; This function uses a non-reentrant model
 11512 ;;
 11513                           
 11514                           	psect	text59
 11515  001B42                     __ptext59:
 11516                           	opt stack 0
 11517  001B42                     _ADC_ISR:
 11518                           	opt stack 23
 11519                           
 11520                           ;adc.c: 123: PIR1bits.ADIF = 0;
 11521                           
 11522                           ;incstack = 0
 11523  001B42  9C9E               	bcf	3998,6,c	;volatile
 11524  001B44  0012               	return		;funcret
 11525  001B46                     __end_of_ADC_ISR:
 11526                           	opt stack 0
 11527                           tosu	equ	0xFFF
 11528                           tosh	equ	0xFFE
 11529                           tosl	equ	0xFFD
 11530                           pclatu	equ	0xFFB
 11531                           pclath	equ	0xFFA
 11532                           tblptru	equ	0xFF8
 11533                           tblptrh	equ	0xFF7
 11534                           tblptrl	equ	0xFF6
 11535                           tablat	equ	0xFF5
 11536                           prodh	equ	0xFF4
 11537                           prodl	equ	0xFF3
 11538                           intcon	equ	0xFF2
 11539                           intcon2	equ	0xFF1
 11540                           postinc0	equ	0xFEE
 11541                           fsr0h	equ	0xFEA
 11542                           fsr0l	equ	0xFE9
 11543                           wreg	equ	0xFE8
 11544                           postdec1	equ	0xFE5
 11545                           fsr1h	equ	0xFE2
 11546                           fsr1l	equ	0xFE1
 11547                           indf2	equ	0xFDF
 11548                           postinc2	equ	0xFDE
 11549                           postdec2	equ	0xFDD
 11550                           plusw2	equ	0xFDB
 11551                           fsr2h	equ	0xFDA
 11552                           fsr2l	equ	0xFD9
 11553                           status	equ	0xFD8
 11554                           tosu	equ	0xFFF
 11555                           tosh	equ	0xFFE
 11556                           tosl	equ	0xFFD
 11557                           pclatu	equ	0xFFB
 11558                           pclath	equ	0xFFA
 11559                           tblptru	equ	0xFF8
 11560                           tblptrh	equ	0xFF7
 11561                           tblptrl	equ	0xFF6
 11562                           tablat	equ	0xFF5
 11563                           prodh	equ	0xFF4
 11564                           prodl	equ	0xFF3
 11565                           intcon	equ	0xFF2
 11566                           intcon2	equ	0xFF1
 11567                           postinc0	equ	0xFEE
 11568                           fsr0h	equ	0xFEA
 11569                           fsr0l	equ	0xFE9
 11570                           wreg	equ	0xFE8
 11571                           postdec1	equ	0xFE5
 11572                           fsr1h	equ	0xFE2
 11573                           fsr1l	equ	0xFE1
 11574                           indf2	equ	0xFDF
 11575                           postinc2	equ	0xFDE
 11576                           postdec2	equ	0xFDD
 11577                           plusw2	equ	0xFDB
 11578                           fsr2h	equ	0xFDA
 11579                           fsr2l	equ	0xFD9
 11580                           status	equ	0xFD8
 11581                           
 11582                           	psect	text60
 11583  000000                     __ptext60:
 11584                           	opt stack 0
 11585                           tosu	equ	0xFFF
 11586                           tosh	equ	0xFFE
 11587                           tosl	equ	0xFFD
 11588                           pclatu	equ	0xFFB
 11589                           pclath	equ	0xFFA
 11590                           tblptru	equ	0xFF8
 11591                           tblptrh	equ	0xFF7
 11592                           tblptrl	equ	0xFF6
 11593                           tablat	equ	0xFF5
 11594                           prodh	equ	0xFF4
 11595                           prodl	equ	0xFF3
 11596                           intcon	equ	0xFF2
 11597                           intcon2	equ	0xFF1
 11598                           postinc0	equ	0xFEE
 11599                           fsr0h	equ	0xFEA
 11600                           fsr0l	equ	0xFE9
 11601                           wreg	equ	0xFE8
 11602                           postdec1	equ	0xFE5
 11603                           fsr1h	equ	0xFE2
 11604                           fsr1l	equ	0xFE1
 11605                           indf2	equ	0xFDF
 11606                           postinc2	equ	0xFDE
 11607                           postdec2	equ	0xFDD
 11608                           plusw2	equ	0xFDB
 11609                           fsr2h	equ	0xFDA
 11610                           fsr2l	equ	0xFD9
 11611                           status	equ	0xFD8
 11612                           
 11613                           	psect	rparam
 11614  0000                     tosu	equ	0xFFF
 11615                           tosh	equ	0xFFE
 11616                           tosl	equ	0xFFD
 11617                           pclatu	equ	0xFFB
 11618                           pclath	equ	0xFFA
 11619                           tblptru	equ	0xFF8
 11620                           tblptrh	equ	0xFF7
 11621                           tblptrl	equ	0xFF6
 11622                           tablat	equ	0xFF5
 11623                           prodh	equ	0xFF4
 11624                           prodl	equ	0xFF3
 11625                           intcon	equ	0xFF2
 11626                           intcon2	equ	0xFF1
 11627                           postinc0	equ	0xFEE
 11628                           fsr0h	equ	0xFEA
 11629                           fsr0l	equ	0xFE9
 11630                           wreg	equ	0xFE8
 11631                           postdec1	equ	0xFE5
 11632                           fsr1h	equ	0xFE2
 11633                           fsr1l	equ	0xFE1
 11634                           indf2	equ	0xFDF
 11635                           postinc2	equ	0xFDE
 11636                           postdec2	equ	0xFDD
 11637                           plusw2	equ	0xFDB
 11638                           fsr2h	equ	0xFDA
 11639                           fsr2l	equ	0xFD9
 11640                           status	equ	0xFD8
 11641                           
 11642                           	psect	temp
 11643  000045                     btemp:
 11644                           	opt stack 0
 11645  000045                     	ds	1
 11646  0000                     int$flags	set	btemp
 11647                           tosu	equ	0xFFF
 11648                           tosh	equ	0xFFE
 11649                           tosl	equ	0xFFD
 11650                           pclatu	equ	0xFFB
 11651                           pclath	equ	0xFFA
 11652                           tblptru	equ	0xFF8
 11653                           tblptrh	equ	0xFF7
 11654                           tblptrl	equ	0xFF6
 11655                           tablat	equ	0xFF5
 11656                           prodh	equ	0xFF4
 11657                           prodl	equ	0xFF3
 11658                           intcon	equ	0xFF2
 11659                           intcon2	equ	0xFF1
 11660                           postinc0	equ	0xFEE
 11661                           fsr0h	equ	0xFEA
 11662                           fsr0l	equ	0xFE9
 11663                           wreg	equ	0xFE8
 11664                           postdec1	equ	0xFE5
 11665                           fsr1h	equ	0xFE2
 11666                           fsr1l	equ	0xFE1
 11667                           indf2	equ	0xFDF
 11668                           postinc2	equ	0xFDE
 11669                           postdec2	equ	0xFDD
 11670                           plusw2	equ	0xFDB
 11671                           fsr2h	equ	0xFDA
 11672                           fsr2l	equ	0xFD9
 11673                           status	equ	0xFD8


Data Sizes:
    Strings     1886
    Constant    231
    Data        36
    BSS         1269
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      68
    BANK0           160      0     160
    BANK1           256      9     255
    BANK2           256      0     256
    BANK3           256     18     218
    BANK4           256      0     206
    BANK5           256      0     206

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_tr_queue.pTrFlag	PTR enum E8795 size(2) Largest target is 0

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK1[6]), I2C1_MasterWrite@trBlock(BANK1[6]), 

    memset@p1	PTR void  size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    memset@p	PTR unsigned char  size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    crcBufS_get@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    crcBufS_status_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    crcBufS_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    FastTransfer_buffer_flush@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), 

    FastTransfer_buffer_put@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), 

    CRC8@data	PTR const unsigned char  size(2) Largest target is 206
		 -> CRCcheck@arrayHolder(BANK1[3]), receiveData@holder_1990(BANK3[3]), receiveData@holder(BANK3[3]), rx_buffer(BANK3[200]), 
		 -> ring_buffer(BANK2[206]), NULL(NULL[0]), 

    sendStructAddress	PTR unsigned char  size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), NULL(NULL[0]), 

    serial_read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_get(), 

    serial_peek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_peek(), 

    serial_available	PTR FTN()int  size(2) Largest target is 2
		 -> Absolute function(), Receive_available(), 

    serial_write	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), Send_put(), 

    receiveArrayAddress	PTR volatile int  size(2) Largest target is 50
		 -> receiveArray(BANK2[50]), NULL(NULL[0]), 

    UART_buff_peek@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> input_buffer(BANK4[206]), 

    UART_buff_size@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_get@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_put@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    sp__memset	PTR void  size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_init@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 0

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_object.pTrTail.pTrFlag	PTR enum E8795 size(2) Largest target is 0

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK1[6]), I2C1_MasterWrite@trBlock(BANK1[6]), 

    F8907.pbuffer	PTR unsigned char  size(2) Largest target is 0

    F8902.pbuffer	PTR unsigned char  size(2) Largest target is 0

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 0
		 -> I2C1_ISR@i2c_address(COMRAM[2]), NULL(NULL[0]), 

    S21$pbuffer	PTR unsigned char  size(2) Largest target is 0

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 0

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK1[6]), I2C1_MasterWrite@trBlock(BANK1[6]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E8795 size(2) Largest target is 0

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK1[6]), I2C1_MasterWrite@trBlock(BANK1[6]), 

    S33$pTrFlag	PTR enum E8795 size(2) Largest target is 0

    p_i2c1_current.pTrFlag	PTR enum E8795 size(2) Largest target is 0

    S33$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK1[6]), I2C1_MasterWrite@trBlock(BANK1[6]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK1[6]), I2C1_MasterWrite@trBlock(BANK1[6]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[6]), NULL(NULL[0]), 

    S44$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[6]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[6]), 

    S44$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[6]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[6]), 


Critical Paths under _main in COMRAM

    _main->_TempCalc
    _FastTransfer_buffer_flush->_memset
    _ToSend->_FastTransfer_buffer_put
    _FastTransfer_buffer_put->_FastTransfer_buffer_modulo_inc
    _Send_put->_UART_buff_get
    _Send_put->_UART_buff_put
    _UART_buff_put->_UART_buff_modulo_inc
    _Receive_peek->_UART_buff_peek
    _Receive_get->_UART_buff_get
    _UART_buff_get->_UART_buff_modulo_inc
    _Receive_available->_UART_buff_size
    _TempCalc->___lwdiv
    ___lwdiv->_ADC_GetConversion
    _EUSART1_Initialize->_UART_buff_init
    _UART_buff_init->_memset

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Transmit_ISR->i2_UART_buff_get
    i2_UART_buff_get->i2_UART_buff_modulo_inc
    _EUSART1_Receive_ISR->i2_UART_buff_put
    i2_UART_buff_put->i2_UART_buff_modulo_inc
    _ECCP2_CaptureISR->_ECCP2_CallBack
    _ECCP1_CaptureISR->_ECCP1_CallBack

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _respondTM->_sendData
    _sendData->_FastTransfer_buffer_flush
    _ToSend->_FastTransfer_buffer_put
    _receiveData->_CRCcheck
    _CRCcheck->_crcBufS_get
    _TempCalc->___lwdiv

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _updateComms->_receiveData

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   21585
                  _SYSTEM_Initialize
                           _TempCalc
                            _TempGet
                        _updateComms
 ---------------------------------------------------------------------------------
 (1) _updateComms                                          0     0      0   19611
                        _receiveData
                          _respondTM
 ---------------------------------------------------------------------------------
 (2) _respondTM                                            0     0      0    8896
                              _Delay
                             _ToSend
                           _sendData
 ---------------------------------------------------------------------------------
 (3) _sendData                                             5     5      0    5704
                                              4 BANK1      5     5      0
                   Absolute function *
                               _CRC8
          _FastTransfer_buffer_flush
                           _Send_put *
                        _crcBufS_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_put                                          7     2      5     742
                                             26 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_flush                            4     0      4    1139
                                              0 BANK1      4     0      4
                             _memset
 ---------------------------------------------------------------------------------
 (3) _ToSend                                               3     1      2    1674
                                              2 BANK1      3     1      2
            _FastTransfer_buffer_put
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_put                              7     2      5    1535
                                             32 COMRAM     5     0      5
                                              0 BANK1      2     2      0
     _FastTransfer_buffer_modulo_inc
 ---------------------------------------------------------------------------------
 (5) _FastTransfer_buffer_modulo_inc                       6     2      4     746
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay                                                5     3      2    1518
                                             26 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _receiveData                                         18    18      0   10715
                                              0 BANK3     18    18      0
                   Absolute function *
                               _CRC8
                           _CRCcheck
                  _Receive_available *
                        _Receive_get *
                       _Receive_peek *
                           _Send_put *
 ---------------------------------------------------------------------------------
 (4) _Send_put                                             1     1      0    2614
                                              0 BANK1      1     1      0
                      _UART_buff_get
                      _UART_buff_put
 ---------------------------------------------------------------------------------
 (5) _UART_buff_put                                        5     2      3    1418
                                             32 COMRAM     5     2      3
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (3) _Receive_peek                                         0     0      0     139
                     _UART_buff_peek
 ---------------------------------------------------------------------------------
 (4) _UART_buff_peek                                       4     2      2     139
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _CRCcheck                                             7     7      0    5114
                                              2 BANK1      7     7      0
                   Absolute function *
                               _CRC8
                  _Receive_available *
                        _Receive_get *
                        _crcBufS_get
                 _crcBufS_status_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_status_put                                  10     6      4     908
                                             26 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (4) _crcBufS_get                                         12     8      4    1404
                                             26 COMRAM    10     6      4
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (3) _Receive_get                                          0     0      0    1165
                      _UART_buff_get
 ---------------------------------------------------------------------------------
 (5) _UART_buff_get                                        5     3      2    1165
                                             32 COMRAM     5     3      2
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (6) _UART_buff_modulo_inc                                 6     2      4     746
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Receive_available                                    2     0      2     150
                                             28 COMRAM     2     0      2
                     _UART_buff_size
 ---------------------------------------------------------------------------------
 (4) _UART_buff_size                                       2     0      2     150
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _CRC8                                                 7     4      3    1014
                                             26 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TempGet                                              2     0      2     172
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TempCalc                                             2     0      2     787
                                             35 COMRAM     2     0      2
                  _ADC_GetConversion
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     549
                                             31 COMRAM     4     0      4
                                              0 BANK1      3     3      0
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    5     3      2      22
                                             26 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1015
                     _ADC_Initialize
                   _ECCP1_Initialize
                   _ECCP2_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0    1015
                     _UART_buff_init
 ---------------------------------------------------------------------------------
 (3) _UART_buff_init                                       2     0      2    1015
                                             34 COMRAM     2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6     830
                                             26 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _ECCP2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECCP1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0    1453
                                             12 COMRAM    14    14      0
                            _ADC_ISR
                   _ECCP1_CaptureISR
                   _ECCP2_CaptureISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR2_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_ISR                                             2     2      0      22
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (9) _I2C1_Stop                                            3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0     528
                    i2_UART_buff_get
                   i2_UART_buff_size
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_size                                     2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_get                                      5     3      2     480
                                              6 COMRAM     5     3      2
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  1     1      0     681
                                             11 COMRAM     1     1      0
                    i2_UART_buff_put
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_put                                      5     2      3     658
                                              6 COMRAM     5     2      3
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (10) i2_UART_buff_modulo_inc                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _ECCP2_CaptureISR                                     2     2      0     111
                                              2 COMRAM     2     2      0
                     _ECCP2_CallBack
 ---------------------------------------------------------------------------------
 (9) _ECCP2_CallBack                                       2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _ECCP1_CaptureISR                                     2     2      0     111
                                              2 COMRAM     2     2      0
                     _ECCP1_CallBack
 ---------------------------------------------------------------------------------
 (9) _ECCP1_CallBack                                       2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _ECCP1_Initialize
     _ECCP2_Initialize
     _EUSART1_Initialize
       _UART_buff_init
         _memset
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
   _TempCalc
     _ADC_GetConversion
     ___lwdiv
       _ADC_GetConversion (ARG)
   _TempGet
   _updateComms
     _receiveData
       Absolute function(Fake) *
       _CRC8 *
       _CRCcheck *
         Absolute function(Fake) *
         _CRC8 *
         _Receive_available *
           _UART_buff_size
         _Receive_get *
           _UART_buff_get
             _UART_buff_modulo_inc
         _crcBufS_get *
         _crcBufS_status_put *
       _Receive_available *
         _UART_buff_size
       _Receive_get *
         _UART_buff_get
           _UART_buff_modulo_inc
       _Receive_peek *
         _UART_buff_peek
       _Send_put *
         _UART_buff_get
           _UART_buff_modulo_inc
         _UART_buff_put
           _UART_buff_modulo_inc
     _respondTM
       _Delay
       _ToSend
         _FastTransfer_buffer_put
           _FastTransfer_buffer_modulo_inc
       _sendData
         Absolute function(Fake) *
         _CRC8 *
         _FastTransfer_buffer_flush *
           _memset
         _Send_put *
           _UART_buff_get
             _UART_buff_modulo_inc
           _UART_buff_put
             _UART_buff_modulo_inc
         _crcBufS_put *

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _ECCP1_CaptureISR
     _ECCP1_CallBack
   _ECCP2_CaptureISR
     _ECCP2_CallBack
   _EUSART1_Receive_ISR
     i2_UART_buff_put
       i2_UART_buff_modulo_inc
   _EUSART1_Transmit_ISR
     i2_UART_buff_get
       i2_UART_buff_modulo_inc
     i2_UART_buff_size
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR2_ISR
     _TMR2_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      CE      15       80.5%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      CE      13       80.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100     12      DA      11       85.2%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0     100       8      100.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      9      FF       6       99.6%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      44       1       72.3%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     559       9        0.0%
DATA                 0      0     559      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Aug 11 12:16:40 2016

      __end_of_FastTransfer_buffer_flush 1564                   i2_UART_buff_modulo_inc 18E8  
               __end_of_ECCP2_Initialize 1A08                 _eusart1TxBufferRemaining 00E9  
                                      _q 0038                             _rx_array_inx 0034  
                                     _ax 008E                                       _ay 0091  
                                     _az 0094                                       _gx 009D  
                                     _gy 00A0                                       _gz 00A3  
                                     _mx 00A6                                       _my 00A9  
                                     _mz 00AC                             __CFG_CP0$OFF 000000  
                           __CFG_CP1$OFF 000000                             __CFG_CP2$OFF 000000  
                           __CFG_CP3$OFF 000000                                      l303 1462  
                                    l712 164E                                      l548 1850  
                                    l826 0CE6                                      l892 17BA  
                           __CFG_CPB$OFF 000000                                      _PR2 000FBB  
                           __CFG_CPD$OFF 000000                                      _Abw 00F8  
                                    _Gbw 00F9                                      _Now 0067  
                                    _Yaw 017A                          _timer1ReloadVal 00DF  
                        __end_of_ADC_ISR 1B46     FastTransfer_buffer_flush@clearBuffer 01F8  
                                    _yaw 00B8                                      _sum 00B5  
                        _TMR2_Initialize 1A94                                      prod 000FF3  
                                    tosl 000FFD                                      wreg 000FE8  
          i2UART_buff_modulo_inc@modulus 0003                             __CFG_LVP$OFF 000000  
                       __end_of_I2C1_ISR 0A16                                     l1932 15B8  
                                   l7018 15EE                                     l3838 17A6  
                                   l7072 16F6                     receiveData@crcHolder 03D4  
                                   l6700 123E                                     l6622 1622  
                                   l6800 013E                                     l6554 1872  
                                   l6562 0E56                                     l6730 0D86  
                                   l6722 0D1A                                     l6628 1638  
                                   l6636 1654                                     l6548 18DE  
                                   l6708 12C4                                     l6900 0598  
                                   l6820 0208                                     l6804 0142  
                                   l6740 0E02                                     l6732 0D92  
                                   l6724 0D34                                     l6558 1882  
                                   l6638 165A                                     l6582 145E  
                                   l6902 05E6                                     l6734 0DC0  
                                   l6726 0D50                                     l6680 107E  
                                   l6760 0C62                                     l6568 0EC2  
                                   l6904 0602                                     l6816 01EA  
                                   l6736 0DC6                                     l6728 0D6A  
                                   l6770 0CB6                                     l6746 0B8A  
                                   l6930 06A6                                     l6914 060E  
                                   l6834 024E                                     l6818 0202  
                                   l6594 18B4                                     l6658 0A3E  
                                   l6692 1112                                     l6676 1074  
                                   l6756 0C4C                                     l6748 0BB2  
                                   l6940 0728                                     l6932 06C0  
                                   l6836 0274                                     l6852 02D6  
                                   l6828 0242                                     l6774 0CD6  
                                   l6942 0776                                     l6934 06DA  
                                   l6870 0442                                     l6936 06F4  
                                   l6928 068C                                     l6944 0792  
                                   l6872 0448                                     l6864 039E  
                                   l6856 02FE                                     l6848 02A4  
                                   l6952 079E                                     l6778 0CDE  
                                   l6938 070E                                     l6890 0516  
                                   l6874 045C                                     l6892 0530  
                                   l6796 0110                                     l6974 157E  
                                   l6894 054A                                     l6976 1588  
                                   l6896 0564                                     l6888 04FC  
                                   l6986 15AC                                     l6978 158C  
                                   l6898 057E                                     STR_1 7C1A  
                                   STR_2 7EA5                                     STR_3 7E47  
                                   STR_4 7A32                                     STR_5 7AC5  
                                   STR_6 7AA1                                     STR_7 7A0C  
                                   STR_8 7EFA                                     _CRC8 161C  
                                   STR_9 7D87                                     _LATA 000F89  
                                   _LATB 000F8A                                     _LATC 000F8B  
                                   _LATD 000F8C                                     _LATE 000F8D  
                                   u6020 13F2                                     u6101 0A3C  
                                   u6080 121E                                     u6208 0D6E  
                                   u6218 0D96                                     u6238 0DEA  
                                   u6248 0B8E                                     u6408 011A  
                                   u6168 0D04                                     u6249 0BA2  
                                   u6409 012E                                     u6178 0D1E  
                                   i2l60 07DE                                     u6268 0BB6  
                                   u6508 01EE                                     u6428 0146  
                                   u6188 0D38                                     u6269 0BCA  
                                   u6621 033E                                     u6429 015A  
                                   u6278 0BD2                                     u6198 0D54  
                                   _LIAx 0082                                     i2l71 0892  
                                   i2l63 0854                                     u6279 0BE6  
                                   _LIAy 0085                                     i2l72 08A2  
                                   u6288 0BEE                                     u6448 0164  
                                   _LIAz 0088                                     i2l65 085C  
                                   u6289 0C02                                     u6449 0178  
                                   i2l90 0980                                     i2l82 0922  
                                   i2l66 0864                                     u6298 0C0A  
                                   u6299 0C1E                                     i2l76 090E  
                                   u6708 0534                                     u6548 0252  
                                   u6468 0182                                     u6388 00EA  
                                   u6549 0266                                     u6469 0196  
                                   u6389 00FE                                     i2l94 09B2  
                                   i2l86 0952                                     u6718 054E  
                                   u6478 019E                                     u6479 01B2  
                                   u6808 06C4                                     u6728 0568  
                                   u6568 0278                                     u6488 01B8  
                                   i2l89 096E                                     u6569 028E  
                                   u6489 01CC                                     u6818 06DE  
                                   u6738 0582                                     u8347 17AC  
                                   u6828 06F8                                     u6748 059C  
                                   u6588 02A8                                     u6589 02BC  
                                   u6838 0712                                     u6758 05EA  
                                   u6678 04E6                                     u6598 02DA  
                                   u6599 02EE                                     u6848 072C  
                                   u6688 0500                                     u6858 077A  
                                   u6778 0676                                     u6698 051A  
                                   u6788 0690                                     u6798 06AA  
                                   _GRVx 0073                                     _GRVy 0076  
                                   _GRVz 0079                                     _TMR1 000FCE  
                                   _TMR2 000FBC                                     _WPUB 000F61  
                                   _Modr 00FC                                     _aRes 008B  
                                   _Roll 0177                                     _eInt 012E  
                                   _gRes 017D                                     _mRes 0180  
                                   _beta 0097                                     _main 16EC  
                                   _roll 00B2                                     _quat 01EA  
                                   fsr0h 000FEA                                     fsr1h 000FE2  
                                   fsr0l 000FE9                                     fsr2h 000FDA  
                                   fsr1l 000FE1                                     indf2 000FDF  
                                   fsr2l 000FD9                                     _zeta 0183  
                                   btemp 0045                            __CFG_BORV$190 000000  
                                   pclat 000FFA                                     prodh 000FF4  
                                   prodl 000FF3          __end_of_FastTransfer_buffer_put 0B8A  
                                   start 00DC                            __CFG_IESO$OFF 000000  
                           ___param_bank 000010           i2UART_buff_modulo_inc@my_value 0005  
                                  ?_CRC8 001B                          __end_of_TempGet 1B48  
                             _i2c1_state 0030                         __end_of_CRCcheck 0CE8  
         __size_of_OSCILLATOR_Initialize 000E            __end_of_OSCILLATOR_Initialize 1B0E  
                     crcBufS_put@address 001D                                    ?_main 0001  
                      __end_of_I2C1_Stop 16EC                                    STR_10 7F40  
                                  STR_11 7CF3                                    STR_12 7CD4  
                                  STR_20 7A57                                    STR_21 7DA4  
                                  STR_13 7CB5                                    STR_30 7EBB  
                                  STR_14 7D2F                                    STR_22 7AE9  
                                  STR_15 7D11                                    STR_31 7BDA  
                                  STR_23 796D                                    STR_16 7E13  
                                  STR_24 7C96                                    STR_32 7B0D  
                                  STR_40 79E5                                    STR_17 7DF8  
                                  STR_25 7C58                                    STR_33 7BFA  
                                  STR_41 7A7C                                    STR_50 7FC3  
                                  STR_18 7EE5                                    STR_42 7DDD  
                                  STR_34 7DC1                                    STR_26 7C77  
                                  STR_43 7FDE                                    STR_51 7F50  
                                  STR_19 7ED0                                    STR_35 7E5F  
                                  STR_27 7C39                                    STR_52 7FF6  
                                  STR_44 7FB1                                    STR_36 7BBA  
                                  STR_60 7B31                                    STR_28 79BE  
                                  STR_53 7FCC                                    STR_45 7F6A  
                                  STR_61 7D4D                                    STR_37 7B98  
                                  STR_29 7B76                                    STR_46 7FE6  
                                  STR_54 7FD5                                    STR_62 7E77  
                                  STR_38 7E2E                                    STR_70 78A0  
                                  STR_47 7FBA                                    STR_55 7FA7  
                                  STR_71 7D6A                                    STR_39 78F6  
                                  STR_56 7F9C                                    STR_48 7F30  
                                  STR_72 7932                                    STR_49 7FEE  
                                  STR_57 7F84                                    STR_73 7E8F  
                                  STR_65 7996                                    STR_58 7F90  
                                  STR_74 7F0E                                    STR_59 7F5D  
                                  STR_75 7F1F                                    STR_67 7B54  
                                  STR_69 7F77                          _TMR1_StartTimer 1B3E  
                                  _T1CON 000FCD                                    _T2CON 000FBA  
                         __CFG_DEBUG$OFF 000000                          __end_of___lwdiv 15C2  
                                  i2l303 14F4                                    i2l340 19C0  
                                  i2l431 0072                                    i2l433 007E  
                                  i2l441 00A0                                    i2l425 004E  
                                  i2l435 008A                                    i2l427 005A  
                                  i2l437 0096                                    i2l429 0066  
                                  _TMR1H 000FCF                                    _TMR1L 000FCE  
                                  _TRISA 000F92                                    _TRISB 000F93  
                                  _TRISC 000F94                                    _TRISD 000F95  
                                  _TRISE 000F96                                    _Delay 179C  
                 ECCP2_CaptureISR@module 0003             __end_of_I2C1_BusCollisionISR 1B4C  
                          __CFG_WRT0$OFF 000000                            __CFG_WRT1$OFF 000000  
                          __CFG_WRT2$OFF 000000                            __CFG_WRT3$OFF 000000  
                   _EUSART1_Transmit_ISR 1804                           __CFG_EBTR0$OFF 000000  
                         __CFG_FCMEN$OFF 000000                           __CFG_EBTR1$OFF 000000  
                         __CFG_EBTR2$OFF 000000                                    _Pitch 0174  
                         __CFG_EBTR3$OFF 000000                         __end_of_TMR2_ISR 1B3A  
                          __CFG_WRTB$OFF 000000                            __CFG_WRTC$OFF 000000  
                          __CFG_WRTD$OFF 000000                           __CFG_EBTRB$OFF 000000  
                                  _brake 00C5                          __end_of_dpowers 7811  
                                  _count 0165                                    _errno 00CB  
                                  _myLed 00FF                                    _group 00CD  
                                  _pitch 00AF                       __CFG_MCLRE$EXTMCLR 000000  
                __end_of_TMR1_Initialize 197C                                    pclath 000FFA  
                                  tablat 000FF5                            ??_Receive_get 0026  
                   __size_of_crcBufS_get 00F2                                    plusw2 000FDB  
                   __size_of_crcBufS_put 00D8                                    status 000FD8  
                         __CFG_HFOFST$ON 000000                          _TMR2_StartTimer 1B3A  
                           ?_receiveData 0001                           __CFG_PBADEN$ON 000000  
                           __end_of_CRC8 1666                          CRCcheck@SentCRC 01F8  
                        __initialization 130A               __end_of_EUSART1_Initialize 1768  
                           __end_of_main 172C                               ToSend@what 01F8  
            ECCP2_CallBack@capturedValue 0001                                   ??_CRC8 001E  
                __end_of_TMR2_Initialize 1AAA                                ??_ADC_ISR 0001  
            ?_INTERRUPT_InterruptManager 0001                              _i2c1_object 0060  
                                 ??_main 0026                         magCalBNO055@F450 0153  
                       magCalBNO055@F452 0159                         magCalBNO055@F454 015F  
                       magCalBNO055@F448 0118                            __activetblptr 000002  
                       __end_of_TempCalc 161C                        ?_ECCP1_CaptureISR 0001  
                       __end_of_Send_put 1804                __size_ofi2_UART_buff_size 0016  
                                 ?_Delay 001B                    ?_EUSART1_Transmit_ISR 0001  
          FastTransfer_buffer_put@towhat 0024                       ??_ECCP1_CaptureISR 0003  
                          ?_Receive_peek 0001                                   _ADCON0 000FC2  
                                 _ADCON1 000FC1                                   _ADCON2 000FC0  
                                 _ADRESH 000FC4                                   _ADRESL 000FC3  
                                 _CCPR1H 000FBF                                   _CCPR2H 000F68  
                                 _CCPR1L 000FBE                                   _CCPR2L 000F67  
                                 _ANSELA 000F38                                   _ANSELB 000F39  
                                 _ANSELC 000F3A                                   _ANSELD 000F3B  
                                 _ANSELE 000F3C                                   _T1GCON 000FCC  
                        i2_UART_buff_get 1466                                   _RC1STA 000FAB  
                        i2_UART_buff_put 0F50                           __CFG_WDTEN$OFF 000000  
                                 i2l4320 0836                                   i2l4402 0988  
                                 i2l4420 09BC                                   i2l4332 0874  
                                 Delay@x 001E                                   i2l4422 09C4  
                                 i2l4406 0990                                   i2l4352 08D0  
            UART_buff_modulo_inc@modulus 001D                                   i2l4274 0FDC  
                                 i2l4450 182E                                   i2l4418 09B8  
                                 i2l4338 088C                                   i2l4268 0F70  
                                 i2l4380 0934                                   i2l4372 091C  
                                 i2l4428 09D0                                   i2l4390 095A  
                                 i2l4288 14F0                                   i2l3944 1908  
                                 i2l3962 19EA                                   i2l3954 16E6  
                                 _RCREG1 000FAE                                   _OSCCON 000FD3  
                                 _SPBRG1 000FAF                                   _TX1STA 000FAC  
                                 _TXREG1 000FAD                        ?_ECCP2_CaptureISR 0001  
                                 _Ascale 00E2                                   _Gscale 00FA  
                         __CFG_XINST$OFF 000000                       ??_ECCP2_CaptureISR 0003  
                              ??_TempGet 001D                                   _ToSend 197C  
                       __end_of__powers_ 785F                      __end_of_Receive_get 1B00  
                       crcBufS_get@_this 001B                             _CCPTMRS0bits 000F49  
            ??_FastTransfer_buffer_flush 0023                           _p_i2c1_current 00CF  
                __size_of_ECCP1_CallBack 0002                            _output_buffer 0500  
                       crcBufS_get@space 001E                  __end_of_TMR1_StartTimer 1B42  
                              CRC8@tempI 0020                           __CFG_STVREN$ON 000000  
                                 _delt_t 0169                                   _deltat 009A  
                              ??___lwdiv 0024                                   _intPin 00FE  
                __size_of_ECCP2_CallBack 0002                                   _memset 1868  
                              ?_I2C1_ISR 0001                                   clear_0 1310  
                                 clear_1 131C                                   clear_2 1328  
                                 clear_3 1336                                   clear_4 1348  
                                 clear_5 1354                                   clear_6 1360  
                                 _rx_len 0035                         __end_of_sendData 0E36  
                                 _status 00EE                             __pdataCOMRAM 0038  
                          Send_put@_data 01F6                             __mediumconst 77B8  
                         ??_Receive_peek 001F                                   tblptrh 000FF7  
                                 tblptrl 000FF6                                   tblptru 000FF8  
       __size_of_FastTransfer_buffer_put 0174                 ADC_GetConversion@channel 001F  
           __end_of_UART_buff_modulo_inc 18E8                  __end_of_TMR2_StartTimer 1B3E  
                      ?_ECCP1_Initialize 0001                          _eusart1RxBuffer 0137  
          __size_of_INTERRUPT_Initialize 0014                          _eusart1TxBuffer 013F  
                       ?_TMR1_Initialize 0001                        _SYSTEM_Initialize 1912  
                     ??_ECCP1_Initialize 001B                               __accesstop 0060  
                __end_of__initialization 13C6                                ?_CRCcheck 0001  
                  __end_of_TMR2_CallBack 1B4A                       ?_SYSTEM_Initialize 0001  
                          ___rparam_used 000001                  ?i2_UART_buff_modulo_inc 0001  
                         _i2c1_trb_count 0031                             ?_updateComms 0001  
                          __end_of_Delay 17D0                    _I2C1_FunctionComplete 19D6  
                   _I2C1_BusCollisionISR 1B4A                           __pcstackCOMRAM 0001  
                             _accelCount 01D8                       _crcBufS_status_put 1234  
                           __pidataBANK0 1B27                             __pidataBANK1 1B1B  
                    ??_SYSTEM_Initialize 0025                         crcBufS_put@_this 001B  
                              ?_TMR2_ISR 0001                        ?_ECCP2_Initialize 0001  
 __end_of_FastTransfer_buffer_modulo_inc 18BE  __size_of_FastTransfer_buffer_modulo_inc 002A  
         _FastTransfer_buffer_modulo_inc 1894                               ??_I2C1_ISR 0004  
                       ?_TMR2_Initialize 0001             FastTransfer_buffer_put@_this 0021  
                     ??_ECCP2_Initialize 001B                              ToSend@where 01FA  
                     UART_buff_get@_this 0021                      ?_crcBufS_status_put 001B  
                  __end_of_UART_buff_get 1466                   ??_EUSART1_Transmit_ISR 000C  
                  __end_of_UART_buff_put 0F50                                  ??_Delay 001D  
                __end_ofi2_UART_buff_get 14F8                  __end_ofi2_UART_buff_put 106A  
            __end_of_EUSART1_Receive_ISR 19D6                _FastTransfer_buffer_flush 14F8  
                                CRC8@crc 0021                                  CRC8@len 001D  
                                CRC8@sum 001E                __end_of_SYSTEM_Initialize 1938  
                 receiveData@holder_1990 03D1                            _eusart1RxHead 00E7  
                    _addressErrorCounter 00C1                            _eusart1TxHead 00EA  
                          _eusart1RxTail 00E8                               __pbssBANK0 0060  
                             __pbssBANK1 0100                               __pbssBANK2 0200  
                             __pbssBANK3 0300                               __pbssBANK4 0400  
                             __pbssBANK5 0500                            _eusart1TxTail 00EB  
                        __CFG_PLLCFG$OFF 000000                              _Receive_get 1AF2  
                             ??_CRCcheck 0026                     ??_crcBufS_status_put 001F  
         __end_ofi2_UART_buff_modulo_inc 1912                  __size_of_UART_buff_init 001E  
                __size_of_UART_buff_peek 0024                  __size_of_UART_buff_size 0016  
                              ?_TempCalc 0024                                ?_Send_put 0001  
                  ?_I2C1_BusCollisionISR 0001                     __size_of_receiveData 06C2  
                                ?_ToSend 01F8                       __CFG_CCP2MX$PORTC1 000000  
                       ?_TMR1_StartTimer 0001                               ??_TMR2_ISR 0001  
                     __CFG_CCP3MX$PORTB5 000000      FastTransfer_buffer_modulo_inc@value 001B  
                                _CCP1CON 000FBD                                  _CCP2CON 000F66  
                                _ADC_ISR 1B42                                  ?_memset 001B  
                             _crc_buffer 0186                  __size_of_ADC_Initialize 0018  
                     __size_of_respondTM 0034                       UART_buff_put@_this 0021  
                       i2_UART_buff_size 1AAA              i2UART_buff_modulo_inc@value 0001  
                                _OSCCON2 000FD2                                _I2C1_Stop 16AA  
                      _Receive_available 1A68             UART_buff_modulo_inc@my_value 001F  
                      __CFG_PRICLKEN$OFF 000000                                  _OSCTUNE 000F9B  
                                _SPBRGH1 000FB0                                  _SSP1ADD 000FC8  
                    sendData@whereToSend 01FB                      _receiveArrayAddress 00D3  
                                _SSP1BUF 000FC9                                  _OPRMode 0044  
                       ?_TMR2_StartTimer 0001                       ?_Receive_available 001D  
                                _PWRMode 00E4                                  _MOpMode 00FB  
                          _GyroMeasDrift 007F                            _GyroMeasError 00F5  
                    ??_Receive_available 001F                                ?_sendData 0001  
                      _alignErrorCounter 00C3                          __CFG_PWRTEN$OFF 000000  
                 ?_I2C1_FunctionComplete 0001                               ??_TempCalc 0026  
                      __end_of__npowers_ 7838                               ??_Send_put 0026  
                                __Hparam 0000                                  __Lparam 0000  
                                _TempGet 1B46                                  _TempOne 00BD  
                                _TempTwo 00BF                               _lastUpdate 006B  
                        __size_of_ToSend 001E                       _p_i2c1_trb_current 00D1  
                         _ECCP1_CallBack 1B4E                     __end_of_Receive_peek 1AF2  
                              _AKNAKsend 002E                     _UART_buff_modulo_inc 18BE  
                                ___lwdiv 1564                           _ECCP2_CallBack 1B4C  
                                _calc_CS 00E5                                  __pcinit 130A  
                        __size_of_memset 002C                                  __ramtop 0600  
                                _magBias 01A9                         i2UART_buff_get@c 000B  
                                __ptext0 16EC                                  __ptext1 1AD4  
                                __ptext2 1768                                  __ptext3 0CE8  
                                __ptext4 115C                                  __ptext5 14F8  
                                __ptext6 197C                                  __ptext7 0A16  
                                __ptext8 1894                                  __ptext9 179C  
                       i2UART_buff_put@c 0009                        __end_of_hexpowers 787F  
                              _T1CONbits 000FCD                                  _dpowers 77E9  
                  _OSCILLATOR_Initialize 1B00                __end_of_Receive_available 1A7E  
                              _T2CONbits 000FBA                  _FastTransfer_buffer_put 0A16  
                  CRCcheck@calculatedCRC 01F9                       _EUSART1_Initialize 172C  
                       ?i2_UART_buff_get 0007                 ??_PIN_MANAGER_Initialize 001B  
                       ?i2_UART_buff_put 0007                               ?_I2C1_Stop 0001  
           crcBufS_status_put@wantedTime 0023                            ??_crcBufS_get 001F  
                          ??_crcBufS_put 0020               __size_of_SYSTEM_Initialize 0026  
                   I2C1_ISR@pi2c_buf_ptr 00BB                     end_of_initialization 13C6  
                              Delay@wait 001B                        __end_of_octpowers 77E9  
                    ?_EUSART1_Initialize 0001                               _tempGCount 00D9  
                                memset@c 001D                                  memset@n 001F  
                                memset@p 0021                            __Lmediumconst 77B8  
              __size_of_ECCP1_CaptureISR 0018                               _tempMCount 00DB  
                      __end_of_respondTM 179C                   ??_I2C1_BusCollisionISR 0001  
                             ??_sendData 01FA                   __end_of_ECCP1_CallBack 1B50  
                 __end_of_ECCP2_CallBack 1B4E                    ?_UART_buff_modulo_inc 001B  
                   __size_of_updateComms 0010                                  postdec1 000FE5  
                                postdec2 000FDD              ECCP1_CallBack@capturedValue 0001  
                                postinc0 000FEE                                  postinc2 000FDE  
                    CRCcheck@arrayHolder 01FA                     ??_EUSART1_Initialize 0025  
              __size_of_ECCP2_CaptureISR 0018                   _dataAdressErrorCounter 00C9  
                      __size_of_I2C1_ISR 0274                               _rx_address 00ED  
      I2C1_ISR@i2c_10bit_address_restart 002C       __size_of_FastTransfer_buffer_flush 006C  
                  i2UART_buff_size@_this 0001                           _UART_buff_init 199A  
                         _UART_buff_peek 1938                           _UART_buff_size 1A7E  
                    __end_of_crcBufS_get 115C                      __end_of_crcBufS_put 1234  
                        ?_ECCP1_CallBack 0001                        __size_of_CRCcheck 015E  
                          _moduleAddress 0032                          ?_ECCP2_CallBack 0001  
                             CRCcheck@rt 01FD                __size_of_ECCP1_Initialize 0018  
                         __end_of_ToSend 199A             __end_of_INTERRUPT_Initialize 1AD4  
                        _crcErrorCounter 00C7                  I2C1_MasterWrite@trBlock 01C0  
                      crcBufS_put@oldCRC 001E                            __pidataCOMRAM 1B0E  
               I2C1_Stop@completion_code 0003                        __size_of_TMR2_ISR 0008  
                         _ADC_Initialize 1A20                ??_FastTransfer_buffer_put 01F6  
                 ?_OSCILLATOR_Initialize 0001                           __end_of_memset 1894  
                      crcBufS_put@status 001F                             receiveData@r 03D8  
             __size_of_Receive_available 0016                             receiveData@u 03D6  
                    start_initialization 130A                              ??_I2C1_Stop 0001  
        __size_of_PIN_MANAGER_Initialize 0044                    crcBufS_get@wantedTime 01F6  
              __size_of_ECCP2_Initialize 0018                                TempCalc@x 0024  
                           _Gtemperature 007C                   __end_of_UART_buff_init 19B8  
                 __end_of_UART_buff_peek 195C                           UART_buff_get@c 0025  
                 __end_of_UART_buff_size 1A94                             ?_Receive_get 0001  
                         UART_buff_put@c 0023                    __size_of_Receive_peek 000E  
               __end_ofi2_UART_buff_size 1AC0                                 ??_ToSend 0026  
                 ??_UART_buff_modulo_inc 001F                 __size_of_TMR1_Initialize 0020  
                               CRC8@data 001B                          crcBufS_get@time 001D  
                      __size_of_TempCalc 005A                        __size_of_Send_put 0034  
                 __end_of_ADC_Initialize 1A38                              __pdataBANK0 00F5  
                            __pdataBANK1 01EA                                 ?_ADC_ISR 0001  
                               ??_memset 0021                           _eusart1RxCount 00E6  
                 __size_of_TMR2_CallBack 0002                              __pbssCOMRAM 0026  
          __size_of_EUSART1_Transmit_ISR 0034                            __pcstackBANK1 01F6  
                          __pcstackBANK3 03C8                                _accelBias 0197  
               __size_of_TMR2_Initialize 0016                            _i2c1_tr_queue 00EF  
                           _Receive_peek 1AE4                      UART_buff_init@_this 0023  
                            _crcBufS_get 106A                      UART_buff_peek@_this 001B  
                            _crcBufS_put 115C                          ?_UART_buff_init 0023  
                        ?_UART_buff_peek 001B                          ?_UART_buff_size 001B  
                ??_I2C1_FunctionComplete 0001             __size_of_EUSART1_Receive_ISR 001E  
                       _ECCP1_CaptureISR 1A50                            ??_receiveData 03C8  
            __size_of_crcBufS_status_put 00D6                               sendData@CS 01FC  
                 __size_of_UART_buff_get 0092                   __size_of_UART_buff_put 011A  
                       ___lwdiv@dividend 0020                   _PIN_MANAGER_Initialize 1666  
                               ?_TempGet 001B                        __size_of_sendData 014E  
                              __pintcode 0008                            __pmediumconst 77B8  
                              __npowers_ 7811                                 ?___lwdiv 0020  
                        ?_ADC_Initialize 0001                                 _I2C1_ISR 07A2  
           ??_INTERRUPT_InterruptManager 000D                     i2UART_buff_get@_this 0007  
                       _ECCP2_CaptureISR 1A38                                 _BAUD1CON 000FB8  
               __size_of_TMR1_StartTimer 0004                           __size_of_Delay 0034  
                              _hexpowers 785F                         ___lwdiv@quotient 01F7  
                   _INTERRUPT_Initialize 1AC0                             _receiveArray 02CE  
                 I2C1_MasterRead@trBlock 01BA                                 _CRCcheck 0B8A  
                               _LATCbits 000F8B                                 _LIACount 01D2  
                              _gyroCount 01DE                      UART_buff_size@_this 001B  
                              _octpowers 77B9                            _TMR2_CallBack 1B48  
                               _IPR1bits 000F9F                                 _IPR2bits 000FA2  
                               _PIE1bits 000F9D                                 _PIE2bits 000FA0  
               __size_of_TMR2_StartTimer 0004                                 i2u310_40 1484  
    __size_of_INTERRUPT_InterruptManager 00D4                                 i2u327_40 181E  
                               _GRVCount 01CC                                 _PIR1bits 000F9E  
                               _PIR2bits 000FA1                                 _RCONbits 000FD0  
                       __CFG_WDTPS$32768 000000                         _ECCP1_Initialize 1A08  
                              _respondTM 1768                      __end_of_receiveData 07A2  
                               _SSP1CON1 000FC6                                 _SSP1CON3 000FCB  
                               _TMR2_ISR 1B32                                _quatCount 01B2  
                               _APwrMode 00E1                                 _SSP1STAT 000FC7  
         FastTransfer_buffer_flush@_this 01F6                             _input_buffer 0400  
                              _rx_buffer 0300                        ??_TMR1_Initialize 001B  
                       __size_of_ADC_ISR 0004                               _ADCON0bits 000FC2  
                               _GPwrMode 002F                   accelgyroCalBNO055@F415 014D  
                 accelgyroCalBNO055@F392 0100                   accelgyroCalBNO055@F394 010C  
                 accelgyroCalBNO055@F396 0147                     i2UART_buff_put@_this 0007  
                          _UART_buff_get 13D4                            _UART_buff_put 0E36  
                 ECCP1_CaptureISR@module 0003                                 _MPwrMode 00E3  
                    __end_ofatan@coeff_a 7891                      __end_ofatan@coeff_b 78A0  
               ??i2_UART_buff_modulo_inc 0005                         _ECCP2_Initialize 19F0  
                            _INTCON2bits 000FF1                                copy_data0 137A  
                              copy_data1 139A                                copy_data2 13BA  
                  ?_INTERRUPT_Initialize 0001                                 _EulCount 01C6  
                           _Mtemperature 0171                        _sendStructAddress 00D5  
                       ??_ECCP1_CallBack 0003                              _firstUpdate 016D  
               __size_ofi2_UART_buff_get 0092                        ??_TMR2_Initialize 001B  
               __size_ofi2_UART_buff_put 011A                           ?_TMR2_CallBack 0001  
                       ??_ECCP2_CallBack 0003                                 TempGet@x 001B  
                          ??_updateComms 0026                     __size_of_Receive_get 000E  
                               _TempCalc 15C2                                 __Hrparam 0000  
                               _TempData 0124                                 _Send_put 17D0  
          __size_of_I2C1_BusCollisionISR 0002                                 __Lrparam 0000  
                      _ADC_GetConversion 1838                       __CFG_BOREN$SBORDIS 000000  
                       __size_of_TempGet 0002                               ?_respondTM 0001  
                 I2C1_ISR@i2c_bytes_left 002D                        __CFG_P2BMX$PORTD2 000000  
                ??_OSCILLATOR_Initialize 001B                       ?_ADC_GetConversion 001B  
            __size_of_EUSART1_Initialize 003C                         __size_of___lwdiv 005E  
                         ?_UART_buff_get 0021                           ?_UART_buff_put 0021  
                            CRC8@extract 001F                      ??_ADC_GetConversion 001D  
                              sendData@i 01FD                          ___lwdiv@divisor 0022  
                    I2C1_ISR@i2c_address 0036                          ___lwdiv@counter 01F6  
               crcBufS_status_put@status 001E                                 _magCount 01E4  
                               __ptext10 00E0                                 __ptext11 17D0  
                               __ptext20 18BE                                 __ptext12 0E36  
                               __ptext21 1A68                                 __ptext13 1AE4  
                             _T1GCONbits 000FCC                                 __ptext30 1B3A  
                               __ptext22 1A7E                                 __ptext14 1938  
                               __ptext31 195C                                 __ptext23 161C  
                               __ptext15 0B8A                                 __ptext40 1A08  
                               __ptext32 1B3E                                 __ptext24 1B46  
                               __ptext16 1234                                 __ptext41 1A20  
                               __ptext33 1666                                 __ptext25 15C2  
                               __ptext17 106A                                 __ptext50 1AAA  
                               __ptext34 1B00                                 __ptext26 1564  
                               __ptext18 1AF2                                 __ptext51 1466  
                               __ptext43 1B32                                 __ptext35 1AC0  
                               __ptext27 1838                                 __ptext19 13D4  
                               __ptext60 0000                                 __ptext52 19B8  
                               __ptext44 1B48                                 __ptext36 172C  
                               __ptext28 1912                                 __ptext53 0F50  
                               __ptext45 07A2                                 __ptext37 199A  
                               __ptext29 1A94                                 __ptext54 18E8  
                               __ptext46 16AA                                 __ptext38 1868  
                               __ptext55 1A38                                 __ptext47 19D6  
                               __ptext39 19F0                                 __ptext56 1B4C  
                               __ptext48 1B4A                                 __ptext57 1A50  
                               __ptext49 1804                                 __ptext58 1B4E  
                               __ptext59 1B42                             _SSP1CON1bits 000FC6  
                           _SSP1CON2bits 000FC5                                 __powers_ 7838  
                      ??_TMR1_StartTimer 001B                            __size_of_CRC8 004A  
                EUSART1_Receive_ISR@data 000C                            _returnAddress 0033  
                          __size_of_main 0040                              _receiveData 00E0  
                         _Transmit_stall 00FD                                 _sendData 0CE8  
              __end_of_ADC_GetConversion 1868                                 _gyroBias 01A0  
                      ?i2_UART_buff_size 0001                               _RC1STAbits 000FAB  
                     ??i2_UART_buff_size 0003                                 int$flags 0045  
                               _sumCount 006F                             _serial_write 002A  
                               _throttle 00DD                        ??_TMR2_StartTimer 001B  
                    __end_of_updateComms 1AE4       __end_of_INTERRUPT_InterruptManager 00DC  
             _INTERRUPT_InterruptManager 0008                      _EUSART1_Receive_ISR 19B8  
                      receiveData@holder 03CE                              atan@coeff_a 787F  
                            atan@coeff_b 7891                 __end_of_ECCP1_CaptureISR 1A68  
                             _INTCONbits 000FF2                UART_buff_modulo_inc@value 001B  
                       ??_UART_buff_init 0025                         ??_UART_buff_peek 001D  
                       ??_UART_buff_size 001D                   ??_INTERRUPT_Initialize 001B  
                               memset@p1 001B                         _serial_available 0026  
        __size_ofi2_UART_buff_modulo_inc 002A                             ?_crcBufS_get 001B  
                           ?_crcBufS_put 001B                                 intlevel2 0000  
                crcBufS_status_put@_this 001B                          ??_TMR2_CallBack 0001  
                   ?_EUSART1_Receive_ISR 0001   FastTransfer_buffer_modulo_inc@my_value 001F  
         FastTransfer_buffer_put@towhere 0023                  ?_PIN_MANAGER_Initialize 0001  
               __end_of_ECCP2_CaptureISR 1A50           __size_of_I2C1_FunctionComplete 001A  
          __end_of_I2C1_FunctionComplete 19F0             __end_of_EUSART1_Transmit_ISR 1838  
                            _ring_buffer 0200                         ??_ADC_Initialize 001B  
             ?_FastTransfer_buffer_flush 01F6                        ??i2_UART_buff_get 0009  
                            _serial_peek 00D7                              _serial_read 0028  
                      ??i2_UART_buff_put 000A                              ??_respondTM 0026  
               ?_FastTransfer_buffer_put 0021            __size_of_UART_buff_modulo_inc 002A  
                        ??_UART_buff_get 0023                          ??_UART_buff_put 0024  
  FastTransfer_buffer_modulo_inc@modulus 001D                   crcBufS_status_put@time 001D  
              receiveData@crcHolder_1991 03D5                        __CFG_T3CMX$PORTC0 000000  
                         _maxDataAddress 00EC                 __end_of_ECCP1_Initialize 1A20  
             __end_of_crcBufS_status_put 130A                    ??_EUSART1_Receive_ISR 000C  
         __end_of_PIN_MANAGER_Initialize 16AA         ??_FastTransfer_buffer_modulo_inc 001F  
        ?_FastTransfer_buffer_modulo_inc 001B                       __size_of_I2C1_Stop 0042  
                      __CFG_FOSC$INTIO67 000000               __size_of_ADC_GetConversion 0030  
                        _TMR1_Initialize 195C                              _updateComms 1AD4  
