

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Jan 11 21:39:30 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    65  0000                     _TMR1	set	4046
    66  0000                     _ADCON0	set	4034
    67  0000                     _ADCON0bits	set	4034
    68  0000                     _ADCON1	set	4033
    69  0000                     _ADCON2	set	4032
    70  0000                     _ADRESH	set	4036
    71  0000                     _ADRESL	set	4035
    72  0000                     _ANSELA	set	3896
    73  0000                     _ANSELB	set	3897
    74  0000                     _ANSELC	set	3898
    75  0000                     _ANSELD	set	3899
    76  0000                     _ANSELE	set	3900
    77  0000                     _BAUD1CON	set	4024
    78  0000                     _CCP1CON	set	4029
    79  0000                     _CCP2CON	set	3942
    80  0000                     _CCPR1H	set	4031
    81  0000                     _CCPR1L	set	4030
    82  0000                     _CCPR2H	set	3944
    83  0000                     _CCPR2L	set	3943
    84  0000                     _CCPTMRS0bits	set	3913
    85  0000                     _INTCON2bits	set	4081
    86  0000                     _INTCONbits	set	4082
    87  0000                     _IPR1bits	set	3999
    88  0000                     _IPR2bits	set	4002
    89  0000                     _LATA	set	3977
    90  0000                     _LATB	set	3978
    91  0000                     _LATC	set	3979
    92  0000                     _LATCbits	set	3979
    93  0000                     _LATD	set	3980
    94  0000                     _LATE	set	3981
    95  0000                     _OSCCON	set	4051
    96  0000                     _OSCCON2	set	4050
    97  0000                     _OSCTUNE	set	3995
    98  0000                     _PIE1bits	set	3997
    99  0000                     _PIE2bits	set	4000
   100  0000                     _PIR1bits	set	3998
   101  0000                     _PIR2bits	set	4001
   102  0000                     _PR2	set	4027
   103  0000                     _RC1STA	set	4011
   104  0000                     _RC1STAbits	set	4011
   105  0000                     _RCONbits	set	4048
   106  0000                     _RCREG1	set	4014
   107  0000                     _SPBRG1	set	4015
   108  0000                     _SPBRGH1	set	4016
   109  0000                     _SSP1ADD	set	4040
   110  0000                     _SSP1BUF	set	4041
   111  0000                     _SSP1CON1	set	4038
   112  0000                     _SSP1CON1bits	set	4038
   113  0000                     _SSP1CON2bits	set	4037
   114  0000                     _SSP1CON3	set	4043
   115  0000                     _SSP1STAT	set	4039
   116  0000                     _T1CON	set	4045
   117  0000                     _T1CONbits	set	4045
   118  0000                     _T1GCON	set	4044
   119  0000                     _T1GCONbits	set	4044
   120  0000                     _T2CON	set	4026
   121  0000                     _T2CONbits	set	4026
   122  0000                     _TMR1H	set	4047
   123  0000                     _TMR1L	set	4046
   124  0000                     _TMR2	set	4028
   125  0000                     _TRISA	set	3986
   126  0000                     _TRISB	set	3987
   127  0000                     _TRISC	set	3988
   128  0000                     _TRISD	set	3989
   129  0000                     _TRISE	set	3990
   130  0000                     _TX1STA	set	4012
   131  0000                     _TXREG1	set	4013
   132  0000                     _WPUB	set	3937
   133                           
   134                           	psect	nvCOMRAM
   135  0000'                    __pnvCOMRAM:
   136                           	opt stack 0
   137  0000'                    _i2c1_object:
   138                           	opt stack 0
   139  0000'                    	ds	7
   140  0007'                    _timer1ReloadVal:
   141                           	opt stack 0
   142  0007'                    	ds	2
   143  0009'                    _eusart1TxBufferRemaining:
   144                           	opt stack 0
   145  0009'                    	ds	1
   146                           
   147                           ; #config settings
   148  0000                     
   149                           	psect	cinit
   150  0000'                    __pcinit:
   151                           	opt stack 0
   152  0000'                    start_initialization:
   153                           	opt stack 0
   154  0000'                    __initialization:
   155                           	opt stack 0
   156                           
   157                           ; Clear objects allocated to BANK2 (200 bytes)
   158  0000' EE00' F000'        	lfsr	0,__pbssBANK2
   159  0004' 0EC8               	movlw	200
   160  0006'                    clear_0:
   161  0006' 6AEE               	clrf	postinc0,c
   162  0008' 06E8               	decf	wreg,f,c
   163  000A' E1FD               	bnz	clear_0
   164                           
   165                           ; Clear objects allocated to BANK1 (206 bytes)
   166  000C' EE00' F000'        	lfsr	0,__pbssBANK1
   167  0010' 0ECE               	movlw	206
   168  0012'                    clear_1:
   169  0012' 6AEE               	clrf	postinc0,c
   170  0014' 06E8               	decf	wreg,f,c
   171  0016' E1FD               	bnz	clear_1
   172                           
   173                           ; Clear objects allocated to BANK0 (129 bytes)
   174  0018' EE00' F000'        	lfsr	0,__pbssBANK0
   175  001C' 0E81               	movlw	129
   176  001E'                    clear_2:
   177  001E' 6AEE               	clrf	postinc0,c
   178  0020' 06E8               	decf	wreg,f,c
   179  0022' E1FD               	bnz	clear_2
   180                           
   181                           ; Clear objects allocated to COMRAM (29 bytes)
   182  0024' EE00' F000'        	lfsr	0,__pbssCOMRAM
   183  0028' 0E1D               	movlw	29
   184  002A'                    clear_3:
   185  002A' 6AEE               	clrf	postinc0,c
   186  002C' 06E8               	decf	wreg,f,c
   187  002E' E1FD               	bnz	clear_3
   188  0030'                    end_of_initialization:
   189                           	opt stack 0
   190  0030'                    __end_of__initialization:
   191                           	opt stack 0
   192  0030' 0E00'              	movlw	low (__Lmediumconst shr (0+16))
   193  0032' 6EF8               	movwf	tblptru,c
   194  0034' 0100               	movlb	0
   195  0036' EF00' F000'        	goto	_main	;jump to C main() function
   196                           tblptru	equ	0xFF8
   197                           postinc0	equ	0xFEE
   198                           wreg	equ	0xFE8
   199                           
   200                           	psect	bssCOMRAM
   201  0000'                    __pbssCOMRAM:
   202                           	opt stack 0
   203  0000'                    I2C1_ISR@pi2c_buf_ptr:
   204                           	opt stack 0
   205  0000'                    	ds	2
   206  0002'                    _p_i2c1_current:
   207                           	opt stack 0
   208  0002'                    	ds	2
   209  0004'                    _p_i2c1_trb_current:
   210                           	opt stack 0
   211  0004'                    	ds	2
   212  0006'                    _receiveArrayAddress:
   213                           	opt stack 0
   214  0006'                    	ds	2
   215  0008'                    I2C1_ISR@i2c_10bit_address_restart:
   216                           	opt stack 0
   217  0008'                    	ds	1
   218  0009'                    I2C1_ISR@i2c_bytes_left:
   219                           	opt stack 0
   220  0009'                    	ds	1
   221  000A'                    _AKNAKsend:
   222                           	opt stack 0
   223  000A'                    	ds	1
   224  000B'                    _calc_CS:
   225                           	opt stack 0
   226  000B'                    	ds	1
   227  000C'                    _eusart1RxCount:
   228                           	opt stack 0
   229  000C'                    	ds	1
   230  000D'                    _eusart1RxHead:
   231                           	opt stack 0
   232  000D'                    	ds	1
   233  000E'                    _eusart1RxTail:
   234                           	opt stack 0
   235  000E'                    	ds	1
   236  000F'                    _eusart1TxHead:
   237                           	opt stack 0
   238  000F'                    	ds	1
   239  0010'                    _eusart1TxTail:
   240                           	opt stack 0
   241  0010'                    	ds	1
   242  0011'                    _i2c1_state:
   243                           	opt stack 0
   244  0011'                    	ds	1
   245  0012'                    _i2c1_trb_count:
   246                           	opt stack 0
   247  0012'                    	ds	1
   248  0013'                    _maxDataAddress:
   249                           	opt stack 0
   250  0013'                    	ds	1
   251  0014'                    _moduleAddress:
   252                           	opt stack 0
   253  0014'                    	ds	1
   254  0015'                    _returnAddress:
   255                           	opt stack 0
   256  0015'                    	ds	1
   257  0016'                    _rx_address:
   258                           	opt stack 0
   259  0016'                    	ds	1
   260  0017'                    _rx_array_inx:
   261                           	opt stack 0
   262  0017'                    	ds	1
   263  0018'                    _rx_len:
   264                           	opt stack 0
   265  0018'                    	ds	1
   266  0019'                    I2C1_ISR@i2c_address:
   267                           	opt stack 0
   268  0019'                    	ds	2
   269  001B'                    _group:
   270                           	opt stack 0
   271  001B'                    	ds	2
   272                           tblptru	equ	0xFF8
   273                           postinc0	equ	0xFEE
   274                           wreg	equ	0xFE8
   275                           
   276                           	psect	bssBANK0
   277  0000'                    __pbssBANK0:
   278                           	opt stack 0
   279  0000'                    _receiveArray:
   280                           	opt stack 0
   281  0000'                    	ds	40
   282  0028'                    _TempData:
   283                           	opt stack 0
   284  0028'                    	ds	10
   285  0032'                    _eusart1RxBuffer:
   286                           	opt stack 0
   287  0032'                    	ds	8
   288  003A'                    _eusart1TxBuffer:
   289                           	opt stack 0
   290  003A'                    	ds	8
   291  0042'                    _TempOne:
   292                           	opt stack 0
   293  0042'                    	ds	2
   294  0044'                    _TempTwo:
   295                           	opt stack 0
   296  0044'                    	ds	2
   297  0046'                    _addressErrorCounter:
   298                           	opt stack 0
   299  0046'                    	ds	2
   300  0048'                    _alignErrorCounter:
   301                           	opt stack 0
   302  0048'                    	ds	2
   303  004A'                    _brake:
   304                           	opt stack 0
   305  004A'                    	ds	2
   306  004C'                    _crcErrorCounter:
   307                           	opt stack 0
   308  004C'                    	ds	2
   309  004E'                    _dataAdressErrorCounter:
   310                           	opt stack 0
   311  004E'                    	ds	2
   312  0050'                    _sendStructAddress:
   313                           	opt stack 0
   314  0050'                    	ds	2
   315  0052'                    _serial_available:
   316                           	opt stack 0
   317  0052'                    	ds	2
   318  0054'                    _serial_peek:
   319                           	opt stack 0
   320  0054'                    	ds	2
   321  0056'                    _serial_read:
   322                           	opt stack 0
   323  0056'                    	ds	2
   324  0058'                    _serial_write:
   325                           	opt stack 0
   326  0058'                    	ds	2
   327  005A'                    _throttle:
   328                           	opt stack 0
   329  005A'                    	ds	2
   330  005C'                    handleIndicators@oldIndicators:
   331                           	opt stack 0
   332  005C'                    	ds	2
   333  005E'                    _crc_buffer:
   334                           	opt stack 0
   335  005E'                    	ds	17
   336  006F'                    I2C1_MasterRead@trBlock:
   337                           	opt stack 0
   338  006F'                    	ds	6
   339  0075'                    I2C1_MasterWrite@trBlock:
   340                           	opt stack 0
   341  0075'                    	ds	6
   342  007B'                    _i2c1_tr_queue:
   343                           	opt stack 0
   344  007B'                    	ds	6
   345                           tblptru	equ	0xFF8
   346                           postinc0	equ	0xFEE
   347                           wreg	equ	0xFE8
   348                           
   349                           	psect	bssBANK1
   350  0000'                    __pbssBANK1:
   351                           	opt stack 0
   352  0000'                    _ring_buffer:
   353                           	opt stack 0
   354  0000'                    	ds	206
   355                           tblptru	equ	0xFF8
   356                           postinc0	equ	0xFEE
   357                           wreg	equ	0xFE8
   358                           
   359                           	psect	bssBANK2
   360  0000'                    __pbssBANK2:
   361                           	opt stack 0
   362  0000'                    _rx_buffer:
   363                           	opt stack 0
   364  0000'                    	ds	200
   365                           tblptru	equ	0xFF8
   366                           postinc0	equ	0xFEE
   367                           wreg	equ	0xFE8
   368                           
   369                           	psect	cstackBANK0
   370  0000'                    __pcstackBANK0:
   371                           	opt stack 0
   372  0000'                    sendData@whereToSend:
   373                           	opt stack 0
   374  0000'                    CRCcheck@SentCRC:
   375                           	opt stack 0
   376                           
   377                           ; 1 bytes @ 0x0
   378  0000'                    	ds	1
   379  0001'                    sendData@CS:
   380                           	opt stack 0
   381  0001'                    CRCcheck@calculatedCRC:
   382                           	opt stack 0
   383                           
   384                           ; 1 bytes @ 0x1
   385  0001'                    	ds	1
   386  0002'                    sendData@i:
   387                           	opt stack 0
   388  0002'                    CRCcheck@arrayHolder:
   389                           	opt stack 0
   390                           
   391                           ; 3 bytes @ 0x2
   392  0002'                    	ds	3
   393  0005'                    CRCcheck@rt:
   394                           	opt stack 0
   395                           
   396                           ; 2 bytes @ 0x5
   397  0005'                    	ds	2
   398  0007'                    receiveData@crcHolder:
   399                           	opt stack 0
   400                           
   401                           ; 1 bytes @ 0x7
   402  0007'                    	ds	1
   403  0008'                    receiveData@crcHolder_1785:
   404                           	opt stack 0
   405                           
   406                           ; 1 bytes @ 0x8
   407  0008'                    	ds	1
   408  0009'                    receiveData@holder:
   409                           	opt stack 0
   410                           
   411                           ; 3 bytes @ 0x9
   412  0009'                    	ds	3
   413  000C'                    receiveData@holder_1784:
   414                           	opt stack 0
   415                           
   416                           ; 3 bytes @ 0xC
   417  000C'                    	ds	3
   418  000F'                    receiveData@u:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0xF
   422  000F'                    	ds	2
   423  0011'                    receiveData@r:
   424                           	opt stack 0
   425                           
   426                           ; 2 bytes @ 0x11
   427  0011'                    	ds	2
   428                           tblptru	equ	0xFF8
   429                           postinc0	equ	0xFEE
   430                           wreg	equ	0xFE8
   431                           
   432                           	psect	cstackCOMRAM
   433  0000'                    __pcstackCOMRAM:
   434                           	opt stack 0
   435  0000'                    ??_I2C1_Stop:
   436  0000'                    ECCP2_CallBack@capturedValue:
   437                           	opt stack 0
   438  0000'                    ECCP1_CallBack@capturedValue:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0x0
   442  0000'                    	ds	2
   443  0002'                    I2C1_Stop@completion_code:
   444                           	opt stack 0
   445  0002'                    ECCP2_CaptureISR@module:
   446                           	opt stack 0
   447  0002'                    ECCP1_CaptureISR@module:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x2
   451  0002'                    	ds	1
   452  0003'                    ??_I2C1_ISR:
   453                           
   454                           ; 0 bytes @ 0x3
   455  0003'                    	ds	3
   456  0006'                    ??_INTERRUPT_InterruptManager:
   457                           
   458                           ; 0 bytes @ 0x6
   459  0006'                    	ds	14
   460  0014'                    ?_FastTransfer_buffer_modulo_inc:
   461                           	opt stack 0
   462  0014'                    ?_ADC_GetConversion:
   463                           	opt stack 0
   464  0014'                    _SetLEDOut$0:
   465                           	opt stack 0
   466  0014'                    _GetButtonState$0:
   467                           	opt stack 0
   468  0014'                    TBbarGraphs@t:
   469                           	opt stack 0
   470  0014'                    CRC8@data:
   471                           	opt stack 0
   472  0014'                    FastTransfer_buffer_modulo_inc@value:
   473                           	opt stack 0
   474  0014'                    crcBufS_put@_this:
   475                           	opt stack 0
   476  0014'                    crcBufS_status_put@_this:
   477                           	opt stack 0
   478  0014'                    crcBufS_get@_this:
   479                           	opt stack 0
   480  0014'                    Delay@wait:
   481                           	opt stack 0
   482  0014'                    TempGet@x:
   483                           	opt stack 0
   484  0014'                    memset@p1:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x14
   488  0014'                    	ds	2
   489  0016'                    ??_Delay:
   490  0016'                    ??_ADC_GetConversion:
   491  0016'                    ?_buttonsCollector:
   492                           	opt stack 0
   493  0016'                    _SetLEDOut$1:
   494                           	opt stack 0
   495  0016'                    CRC8@len:
   496                           	opt stack 0
   497  0016'                    crcBufS_put@address:
   498                           	opt stack 0
   499  0016'                    crcBufS_status_put@time:
   500                           	opt stack 0
   501  0016'                    crcBufS_get@time:
   502                           	opt stack 0
   503  0016'                    TBbarGraphs@b:
   504                           	opt stack 0
   505  0016'                    FastTransfer_buffer_modulo_inc@modulus:
   506                           	opt stack 0
   507  0016'                    memset@c:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x16
   511  0016'                    	ds	1
   512  0017'                    CRC8@sum:
   513                           	opt stack 0
   514  0017'                    crcBufS_put@oldCRC:
   515                           	opt stack 0
   516  0017'                    crcBufS_status_put@status:
   517                           	opt stack 0
   518  0017'                    crcBufS_get@space:
   519                           	opt stack 0
   520  0017'                    handleIndicators@receivedIndicators:
   521                           	opt stack 0
   522  0017'                    Delay@x:
   523                           	opt stack 0
   524                           
   525                           ; 2 bytes @ 0x17
   526  0017'                    	ds	1
   527  0018'                    ??_buttonsCollector:
   528  0018'                    ??_crcBufS_get:
   529  0018'                    ??_crcBufS_status_put:
   530  0018'                    CRC8@extract:
   531                           	opt stack 0
   532  0018'                    crcBufS_put@status:
   533                           	opt stack 0
   534  0018'                    ADC_GetConversion@channel:
   535                           	opt stack 0
   536  0018'                    FastTransfer_buffer_modulo_inc@my_value:
   537                           	opt stack 0
   538  0018'                    memset@n:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x18
   542  0018'                    	ds	1
   543  0019'                    ??_handleIndicators:
   544  0019'                    ??_crcBufS_put:
   545  0019'                    ?___lwdiv:
   546                           	opt stack 0
   547  0019'                    CRC8@tempI:
   548                           	opt stack 0
   549  0019'                    ___lwdiv@dividend:
   550                           	opt stack 0
   551                           
   552                           ; 2 bytes @ 0x19
   553  0019'                    	ds	1
   554  001A'                    CRC8@crc:
   555                           	opt stack 0
   556  001A'                    FastTransfer_buffer_put@_this:
   557                           	opt stack 0
   558  001A'                    memset@p:
   559                           	opt stack 0
   560                           
   561                           ; 2 bytes @ 0x1A
   562  001A'                    	ds	1
   563  001B'                    buttonsCollector@sendVal:
   564                           	opt stack 0
   565  001B'                    ___lwdiv@divisor:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x1B
   569  001B'                    	ds	1
   570  001C'                    FastTransfer_buffer_put@towhere:
   571                           	opt stack 0
   572  001C'                    handleIndicators@i:
   573                           	opt stack 0
   574  001C'                    FastTransfer_buffer_flush@_this:
   575                           	opt stack 0
   576  001C'                    crcBufS_status_put@wantedTime:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0x1C
   580  001C'                    	ds	1
   581  001D'                    buttonsCollector@i:
   582                           	opt stack 0
   583  001D'                    FastTransfer_buffer_put@towhat:
   584                           	opt stack 0
   585  001D'                    ___lwdiv@quotient:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0x1D
   589  001D'                    	ds	1
   590  001E'                    FastTransfer_buffer_flush@clearBuffer:
   591                           	opt stack 0
   592  001E'                    crcBufS_get@wantedTime:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x1E
   596  001E'                    	ds	1
   597  001F'                    ??_FastTransfer_buffer_put:
   598  001F'                    ___lwdiv@counter:
   599                           	opt stack 0
   600                           
   601                           ; 1 bytes @ 0x1F
   602  001F'                    	ds	1
   603  0020'                    ??_receiveData:
   604  0020'                    ??_sendData:
   605  0020'                    TempCalc@x:
   606                           	opt stack 0
   607                           
   608                           ; 2 bytes @ 0x20
   609  0020'                    	ds	1
   610  0021'                    ToSend@what:
   611                           	opt stack 0
   612                           
   613                           ; 2 bytes @ 0x21
   614  0021'                    	ds	1
   615  0022'                    
   616                           ; 0 bytes @ 0x22
   617  0022'                    	ds	1
   618  0023'                    ToSend@where:
   619                           	opt stack 0
   620                           
   621                           ; 1 bytes @ 0x23
   622  0023'                    	ds	1
   623  0024'                    tblptru	equ	0xFF8
   624                           postinc0	equ	0xFEE
   625                           wreg	equ	0xFE8
   626                           
   627                           ; 0 bytes @ 0x24
   628 ;;
   629 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   630 ;;
   631 ;; *************** function _main *****************
   632 ;; Defined at:
   633 ;;		line 38 in file "main.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;		None
   638 ;; Return value:  Size  Location     Type
   639 ;;		None               void
   640 ;; Registers used:
   641 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   647 ;;      Params:         0       0       0       0       0       0       0
   648 ;;      Locals:         0       0       0       0       0       0       0
   649 ;;      Temps:          0       0       0       0       0       0       0
   650 ;;      Totals:         0       0       0       0       0       0       0
   651 ;;Total ram usage:        0 bytes
   652 ;; Hardware stack levels required when called:    8
   653 ;; This function calls:
   654 ;;		_SYSTEM_Initialize
   655 ;;		_TempCalc
   656 ;;		_TempGet
   657 ;;		_updateComms
   658 ;; This function is called by:
   659 ;;		Startup code after reset
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           	psect	text0
   664  0000'                    __ptext0:
   665                           	opt stack 0
   666  0000'                    _main:
   667                           	opt stack 23
   668                           
   669                           ;main.c: 40: SYSTEM_Initialize();
   670                           
   671                           ;incstack = 0
   672  0000' EC00' F000'        	call	_SYSTEM_Initialize	;wreg free
   673                           
   674                           ;main.c: 59: (INTCONbits.GIE = 1);
   675  0004' 8EF2               	bsf	intcon,7,c	;volatile
   676                           
   677                           ;main.c: 62: (INTCONbits.PEIE = 1);
   678  0006' 8CF2               	bsf	intcon,6,c	;volatile
   679                           
   680                           ;main.c: 69: LATCbits.LATC5 = 0;
   681  0008' 9A8B               	bcf	3979,5,c	;volatile
   682  000A'                    l3487:
   683                           
   684                           ;main.c: 71: updateComms();
   685  000A' EC00' F000'        	call	_updateComms	;wreg free
   686                           
   687                           ;main.c: 72: TempCalc(1);
   688  000E' 0E00               	movlw	0
   689  0010' 6E21'              	movwf	TempCalc@x+1,c
   690  0012' 0E01               	movlw	1
   691  0014' 6E20'              	movwf	TempCalc@x,c
   692  0016' EC00' F000'        	call	_TempCalc	;wreg free
   693                           
   694                           ;main.c: 73: TempCalc(2);
   695  001A' 0E00               	movlw	0
   696  001C' 6E21'              	movwf	TempCalc@x+1,c
   697  001E' 0E02               	movlw	2
   698  0020' 6E20'              	movwf	TempCalc@x,c
   699  0022' EC00' F000'        	call	_TempCalc	;wreg free
   700                           
   701                           ;main.c: 74: TempGet(1);
   702  0026' 0E00               	movlw	0
   703  0028' 6E15'              	movwf	TempGet@x+1,c
   704  002A' 0E01               	movlw	1
   705  002C' 6E14'              	movwf	TempGet@x,c
   706  002E' EC00' F000'        	call	_TempGet	;wreg free
   707                           
   708                           ;main.c: 75: TempGet(2);
   709  0032' 0E00               	movlw	0
   710  0034' 6E15'              	movwf	TempGet@x+1,c
   711  0036' 0E02               	movlw	2
   712  0038' 6E14'              	movwf	TempGet@x,c
   713  003A' EC00' F000'        	call	_TempGet	;wreg free
   714  003E' D7E5               	goto	l3487
   715  0040'                    __end_of_main:
   716                           	opt stack 0
   717                           tblptru	equ	0xFF8
   718                           intcon	equ	0xFF2
   719                           postinc0	equ	0xFEE
   720                           wreg	equ	0xFE8
   721                           
   722 ;; *************** function _updateComms *****************
   723 ;; Defined at:
   724 ;;		line 7 in file "Communications.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;		None
   727 ;; Auto vars:     Size  Location     Type
   728 ;;		None
   729 ;; Return value:  Size  Location     Type
   730 ;;		None               void
   731 ;; Registers used:
   732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   738 ;;      Params:         0       0       0       0       0       0       0
   739 ;;      Locals:         0       0       0       0       0       0       0
   740 ;;      Temps:          0       0       0       0       0       0       0
   741 ;;      Totals:         0       0       0       0       0       0       0
   742 ;;Total ram usage:        0 bytes
   743 ;; Hardware stack levels used:    1
   744 ;; Hardware stack levels required when called:    7
   745 ;; This function calls:
   746 ;;		_TBbarGraphs
   747 ;;		_handleIndicators
   748 ;;		_receiveData
   749 ;;		_respondECU
   750 ;; This function is called by:
   751 ;;		_main
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           	psect	text1
   756  0000'                    __ptext1:
   757                           	opt stack 0
   758  0000'                    _updateComms:
   759                           	opt stack 23
   760                           
   761                           ;Communications.c: 8: if (receiveData()) {
   762                           
   763                           ;incstack = 0
   764  0000' EC00' F000'        	call	_receiveData	;wreg free
   765  0004' 0900               	iorlw	0
   766  0006' B4D8               	btfsc	status,2,c
   767  0008' 0012               	return	
   768                           
   769                           ;Communications.c: 10: respondECU();
   770  000A' EC00' F000'        	call	_respondECU	;wreg free
   771                           
   772                           ;Communications.c: 12: handleIndicators(receiveArray[2]);
   773  000E' C004' F017'        	movff	_receiveArray+4,handleIndicators@receivedIndicators	;volatile
   774  0012' C005' F018'        	movff	_receiveArray+5,handleIndicators@receivedIndicators+1	;volatile
   775  0016' EC00' F000'        	call	_handleIndicators	;wreg free
   776                           
   777                           ;Communications.c: 13: TBbarGraphs(receiveArray[3], receiveArray[4]);
   778  001A' C006' F014'        	movff	_receiveArray+6,TBbarGraphs@t	;volatile
   779  001E' C007' F015'        	movff	_receiveArray+7,TBbarGraphs@t+1	;volatile
   780  0022' C008' F016'        	movff	_receiveArray+8,TBbarGraphs@b	;volatile
   781  0026' C009' F017'        	movff	_receiveArray+9,TBbarGraphs@b+1	;volatile
   782  002A' EC00' F000'        	call	_TBbarGraphs	;wreg free
   783                           
   784                           ;Communications.c: 14: receiveArray[0] = 0;
   785  002E' 0E00               	movlw	0
   786  0030' 0100               	movlb	0	; () banked
   787  0032' 6F00'              	movwf	(_receiveArray+1)& (0+255),b	;volatile
   788  0034' 0E00               	movlw	0
   789  0036' 0100               	movlb	0	; () banked
   790  0038' 6F00'              	movwf	_receiveArray& (0+255),b	;volatile
   791  003A' 0012               	return	
   792  003C'                    __end_of_updateComms:
   793                           	opt stack 0
   794                           tblptru	equ	0xFF8
   795                           intcon	equ	0xFF2
   796                           postinc0	equ	0xFEE
   797                           wreg	equ	0xFE8
   798                           status	equ	0xFD8
   799                           
   800 ;; *************** function _respondECU *****************
   801 ;; Defined at:
   802 ;;		line 18 in file "Communications.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;		None
   805 ;; Auto vars:     Size  Location     Type
   806 ;;		None
   807 ;; Return value:  Size  Location     Type
   808 ;;		None               void
   809 ;; Registers used:
   810 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   816 ;;      Params:         0       0       0       0       0       0       0
   817 ;;      Locals:         0       0       0       0       0       0       0
   818 ;;      Temps:          0       0       0       0       0       0       0
   819 ;;      Totals:         0       0       0       0       0       0       0
   820 ;;Total ram usage:        0 bytes
   821 ;; Hardware stack levels used:    1
   822 ;; Hardware stack levels required when called:    6
   823 ;; This function calls:
   824 ;;		_Delay
   825 ;;		_ToSend
   826 ;;		_buttonsCollector
   827 ;;		_sendData
   828 ;; This function is called by:
   829 ;;		_updateComms
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833                           	psect	text2
   834  0000'                    __ptext2:
   835                           	opt stack 0
   836  0000'                    _respondECU:
   837                           	opt stack 23
   838                           
   839                           ;Communications.c: 19: LATCbits.LATC5 = 1;
   840                           
   841                           ;incstack = 0
   842  0000' 8A8B               	bsf	3979,5,c	;volatile
   843                           
   844                           ;Communications.c: 20: ToSend(0, 3);
   845  0002' 0E00               	movlw	0
   846  0004' 6E22'              	movwf	ToSend@what+1,c
   847  0006' 0E03               	movlw	3
   848  0008' 6E21'              	movwf	ToSend@what,c
   849  000A' 0E00               	movlw	0
   850  000C' EC00' F000'        	call	_ToSend
   851                           
   852                           ;Communications.c: 21: ToSend(8, buttonsCollector());
   853  0010' EC00' F000'        	call	_buttonsCollector	;wreg free
   854  0014' C016' F021'        	movff	?_buttonsCollector,ToSend@what
   855  0018' C017' F022'        	movff	?_buttonsCollector+1,ToSend@what+1
   856  001C' 0E08               	movlw	8
   857  001E' EC00' F000'        	call	_ToSend
   858                           
   859                           ;Communications.c: 22: Delay(9);
   860  0022' 0E00               	movlw	0
   861  0024' 6E15'              	movwf	Delay@wait+1,c
   862  0026' 0E09               	movlw	9
   863  0028' 6E14'              	movwf	Delay@wait,c
   864  002A' EC00' F000'        	call	_Delay	;wreg free
   865                           
   866                           ;Communications.c: 23: sendData(1);
   867  002E' 0E01               	movlw	1
   868  0030' EC00' F000'        	call	_sendData
   869                           
   870                           ;Communications.c: 24: Delay(3);
   871  0034' 0E00               	movlw	0
   872  0036' 6E15'              	movwf	Delay@wait+1,c
   873  0038' 0E03               	movlw	3
   874  003A' 6E14'              	movwf	Delay@wait,c
   875  003C' EC00' F000'        	call	_Delay	;wreg free
   876                           
   877                           ;Communications.c: 25: LATCbits.LATC5 = 0;
   878  0040' 9A8B               	bcf	3979,5,c	;volatile
   879  0042' 0012               	return	
   880  0044'                    __end_of_respondECU:
   881                           	opt stack 0
   882                           tblptru	equ	0xFF8
   883                           intcon	equ	0xFF2
   884                           postinc0	equ	0xFEE
   885                           wreg	equ	0xFE8
   886                           status	equ	0xFD8
   887                           
   888 ;; *************** function _sendData *****************
   889 ;; Defined at:
   890 ;;		line 53 in file "FastTransfer.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;  whereToSend     1    wreg     unsigned char 
   893 ;; Auto vars:     Size  Location     Type
   894 ;;  whereToSend     1    0[BANK0 ] unsigned char 
   895 ;;  i               2    2[BANK0 ] int 
   896 ;;  CS              1    1[BANK0 ] unsigned char 
   897 ;; Return value:  Size  Location     Type
   898 ;;		None               void
   899 ;; Registers used:
   900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   906 ;;      Params:         0       0       0       0       0       0       0
   907 ;;      Locals:         0       4       0       0       0       0       0
   908 ;;      Temps:          1       0       0       0       0       0       0
   909 ;;      Totals:         1       4       0       0       0       0       0
   910 ;;Total ram usage:        5 bytes
   911 ;; Hardware stack levels used:    1
   912 ;; Hardware stack levels required when called:    5
   913 ;; This function calls:
   914 ;;		_CRC8
   915 ;;		_FastTransfer_buffer_flush
   916 ;;		_crcBufS_put
   917 ;; This function is called by:
   918 ;;		_respondECU
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text3
   923  0000'                    __ptext3:
   924                           	opt stack 0
   925  0000'                    _sendData:
   926                           	opt stack 23
   927                           
   928                           ;incstack = 0
   929                           ;sendData@whereToSend stored from wreg
   930  0000' 0100               	movlb	0	; () banked
   931  0002' 6F00'              	movwf	sendData@whereToSend& (0+255),b
   932                           
   933                           ; BSR set to: 0
   934                           ;FastTransfer.c: 62: serial_write(ring_buffer.count);
   935  0004' 0100               	movlb	0	; () banked
   936  0006' C051' F015'        	movff	_sendStructAddress+1,CRC8@data+1
   937  000A' 0100               	movlb	0	; () banked
   938  000C' C050' F014'        	movff	_sendStructAddress,CRC8@data
   939  0010' C0CC' F016'        	movff	_ring_buffer+204,CRC8@len
   940  0014' EC00' F000'        	call	_CRC8	;wreg free
   941  0018' 0100               	movlb	0	; () banked
   942  001A' 6F00'              	movwf	sendData@CS& (0+255),b
   943                           
   944                           ; BSR set to: 0
   945                           ;FastTransfer.c: 66: int i;
   946                           ;FastTransfer.c: 67: for (i = 0; i < ring_buffer.count; i++) {
   947  001C' 0E00               	movlw	0
   948  001E' 0100               	movlb	0	; () banked
   949  0020' 6F00'              	movwf	(sendData@i+1)& (0+255),b
   950  0022' 0E00               	movlw	0
   951  0024' 0100               	movlb	0	; () banked
   952  0026' 6F00'              	movwf	sendData@i& (0+255),b
   953  0028' D003               	goto	l3289
   954  002A'                    l3287:
   955  002A' 0100               	movlb	0	; () banked
   956  002C' 4B00'              	infsnz	sendData@i& (0+255),f,b
   957  002E' 2B00'              	incf	(sendData@i+1)& (0+255),f,b
   958  0030'                    l3289:
   959                           
   960                           ; BSR set to: 0
   961  0030' 0100               	movlb	0	; () banked
   962  0032' 5100'              	movf	(sendData@i+1)& (0+255),w,b
   963  0034' 0A80               	xorlw	128
   964  0036' 6E00'              	movwf	??_sendData& (0+255),c
   965  0038' 0101               	movlb	1	; () banked
   966  003A' 5100'              	movf	(_ring_buffer+204)& (0+255),w,b
   967  003C' 0100               	movlb	0	; () banked
   968  003E' 5D00'              	subwf	sendData@i& (0+255),w,b
   969  0040' 0101               	movlb	1	; () banked
   970  0042' 5100'              	movf	(_ring_buffer+205)& (0+255),w,b
   971  0044' 0A80               	xorlw	128
   972  0046' 5800'              	subwfb	??_sendData& (0+255),w,c
   973  0048' A0D8               	btfss	status,0,c
   974  004A' D7EF               	goto	l3287
   975                           
   976                           ; BSR set to: 1
   977                           ;FastTransfer.c: 75: crcBufS_put(&crc_buffer, whereToSend, CS, 0);
   978                           
   979                           ; BSR set to: 1
   980                           
   981                           ;FastTransfer.c: 69: }
   982                           ;FastTransfer.c: 72: serial_write(CS);
   983  004C' 0100               	movlb	0	; () banked
   984  004E' 0E00'              	movlw	high _crc_buffer
   985  0050' 6E15'              	movwf	crcBufS_put@_this+1,c
   986  0052' 0100               	movlb	0	; () banked
   987  0054' 0E00'              	movlw	low _crc_buffer
   988  0056' 6E14'              	movwf	crcBufS_put@_this,c
   989  0058' C000' F016'        	movff	sendData@whereToSend,crcBufS_put@address
   990  005C' C001' F017'        	movff	sendData@CS,crcBufS_put@oldCRC
   991  0060' 0E00               	movlw	0
   992  0062' 6E18'              	movwf	crcBufS_put@status,c
   993  0064' EC00' F000'        	call	_crcBufS_put	;wreg free
   994                           
   995                           ;FastTransfer.c: 78: FastTransfer_buffer_flush(&ring_buffer, 1);
   996  0068' 0101               	movlb	1	; () banked
   997  006A' 0E00'              	movlw	high _ring_buffer
   998  006C' 6E1D'              	movwf	FastTransfer_buffer_flush@_this+1,c
   999  006E' 0101               	movlb	1	; () banked
  1000  0070' 0E00'              	movlw	low _ring_buffer
  1001  0072' 6E1C'              	movwf	FastTransfer_buffer_flush@_this,c
  1002  0074' 0E00               	movlw	0
  1003  0076' 6E1F'              	movwf	FastTransfer_buffer_flush@clearBuffer+1,c
  1004  0078' 0E01               	movlw	1
  1005  007A' 6E1E'              	movwf	FastTransfer_buffer_flush@clearBuffer,c
  1006  007C' EC00' F000'        	call	_FastTransfer_buffer_flush	;wreg free
  1007  0080' 0012               	return	
  1008  0082'                    __end_of_sendData:
  1009                           	opt stack 0
  1010                           tblptru	equ	0xFF8
  1011                           intcon	equ	0xFF2
  1012                           postinc0	equ	0xFEE
  1013                           wreg	equ	0xFE8
  1014                           status	equ	0xFD8
  1015                           
  1016 ;; *************** function _crcBufS_put *****************
  1017 ;; Defined at:
  1018 ;;		line 321 in file "FastTransfer.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;  _this           2   20[COMRAM] PTR struct crcBufS
  1021 ;;		 -> crc_buffer(17), 
  1022 ;;  address         1   22[COMRAM] unsigned char 
  1023 ;;  oldCRC          1   23[COMRAM] unsigned char 
  1024 ;;  status          1   24[COMRAM] unsigned char 
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;		None
  1027 ;; Return value:  Size  Location     Type
  1028 ;;		None               void
  1029 ;; Registers used:
  1030 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1036 ;;      Params:         5       0       0       0       0       0       0
  1037 ;;      Locals:         0       0       0       0       0       0       0
  1038 ;;      Temps:          2       0       0       0       0       0       0
  1039 ;;      Totals:         7       0       0       0       0       0       0
  1040 ;;Total ram usage:        7 bytes
  1041 ;; Hardware stack levels used:    1
  1042 ;; Hardware stack levels required when called:    3
  1043 ;; This function calls:
  1044 ;;		Nothing
  1045 ;; This function is called by:
  1046 ;;		_sendData
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           	psect	text4
  1051  0000'                    __ptext4:
  1052                           	opt stack 0
  1053  0000'                    _crcBufS_put:
  1054                           	opt stack 24
  1055                           
  1056                           ;FastTransfer.c: 322: _this->buf[_this->head] = address;
  1057                           
  1058                           ;incstack = 0
  1059  0000' EE20 F00F          	lfsr	2,15
  1060  0004' 5014'              	movf	crcBufS_put@_this,w,c
  1061  0006' 26D9               	addwf	fsr2l,f,c
  1062  0008' 5015'              	movf	crcBufS_put@_this+1,w,c
  1063  000A' 22DA               	addwfc	fsr2h,f,c
  1064  000C' CFDE F019'         	movff	postinc2,??_crcBufS_put
  1065  0010' CFDD F01A'         	movff	postdec2,??_crcBufS_put+1
  1066  0014' 5019'              	movf	??_crcBufS_put,w,c
  1067  0016' 2414'              	addwf	crcBufS_put@_this,w,c
  1068  0018' 6ED9               	movwf	fsr2l,c
  1069  001A' 501A'              	movf	??_crcBufS_put+1,w,c
  1070  001C' 2015'              	addwfc	crcBufS_put@_this+1,w,c
  1071  001E' 6EDA               	movwf	fsr2h,c
  1072  0020' C016' FFDF         	movff	crcBufS_put@address,indf2
  1073                           
  1074                           ;FastTransfer.c: 323: _this->head++;
  1075  0024' EE20 F00F          	lfsr	2,15
  1076  0028' 5014'              	movf	crcBufS_put@_this,w,c
  1077  002A' 26D9               	addwf	fsr2l,f,c
  1078  002C' 5015'              	movf	crcBufS_put@_this+1,w,c
  1079  002E' 22DA               	addwfc	fsr2h,f,c
  1080  0030' 2ADE               	incf	postinc2,f,c
  1081  0032' 0E00               	movlw	0
  1082  0034' 22DD               	addwfc	postdec2,f,c
  1083                           
  1084                           ;FastTransfer.c: 324: _this->buf[_this->head] = oldCRC;
  1085  0036' EE20 F00F          	lfsr	2,15
  1086  003A' 5014'              	movf	crcBufS_put@_this,w,c
  1087  003C' 26D9               	addwf	fsr2l,f,c
  1088  003E' 5015'              	movf	crcBufS_put@_this+1,w,c
  1089  0040' 22DA               	addwfc	fsr2h,f,c
  1090  0042' CFDE F019'         	movff	postinc2,??_crcBufS_put
  1091  0046' CFDD F01A'         	movff	postdec2,??_crcBufS_put+1
  1092  004A' 5019'              	movf	??_crcBufS_put,w,c
  1093  004C' 2414'              	addwf	crcBufS_put@_this,w,c
  1094  004E' 6ED9               	movwf	fsr2l,c
  1095  0050' 501A'              	movf	??_crcBufS_put+1,w,c
  1096  0052' 2015'              	addwfc	crcBufS_put@_this+1,w,c
  1097  0054' 6EDA               	movwf	fsr2h,c
  1098  0056' C017' FFDF         	movff	crcBufS_put@oldCRC,indf2
  1099                           
  1100                           ;FastTransfer.c: 325: _this->head++;
  1101  005A' EE20 F00F          	lfsr	2,15
  1102  005E' 5014'              	movf	crcBufS_put@_this,w,c
  1103  0060' 26D9               	addwf	fsr2l,f,c
  1104  0062' 5015'              	movf	crcBufS_put@_this+1,w,c
  1105  0064' 22DA               	addwfc	fsr2h,f,c
  1106  0066' 2ADE               	incf	postinc2,f,c
  1107  0068' 0E00               	movlw	0
  1108  006A' 22DD               	addwfc	postdec2,f,c
  1109                           
  1110                           ;FastTransfer.c: 326: _this->buf[_this->head] = status;
  1111  006C' EE20 F00F          	lfsr	2,15
  1112  0070' 5014'              	movf	crcBufS_put@_this,w,c
  1113  0072' 26D9               	addwf	fsr2l,f,c
  1114  0074' 5015'              	movf	crcBufS_put@_this+1,w,c
  1115  0076' 22DA               	addwfc	fsr2h,f,c
  1116  0078' CFDE F019'         	movff	postinc2,??_crcBufS_put
  1117  007C' CFDD F01A'         	movff	postdec2,??_crcBufS_put+1
  1118  0080' 5019'              	movf	??_crcBufS_put,w,c
  1119  0082' 2414'              	addwf	crcBufS_put@_this,w,c
  1120  0084' 6ED9               	movwf	fsr2l,c
  1121  0086' 501A'              	movf	??_crcBufS_put+1,w,c
  1122  0088' 2015'              	addwfc	crcBufS_put@_this+1,w,c
  1123  008A' 6EDA               	movwf	fsr2h,c
  1124  008C' C018' FFDF         	movff	crcBufS_put@status,indf2
  1125                           
  1126                           ;FastTransfer.c: 327: _this->head++;
  1127  0090' EE20 F00F          	lfsr	2,15
  1128  0094' 5014'              	movf	crcBufS_put@_this,w,c
  1129  0096' 26D9               	addwf	fsr2l,f,c
  1130  0098' 5015'              	movf	crcBufS_put@_this+1,w,c
  1131  009A' 22DA               	addwfc	fsr2h,f,c
  1132  009C' 2ADE               	incf	postinc2,f,c
  1133  009E' 0E00               	movlw	0
  1134  00A0' 22DD               	addwfc	postdec2,f,c
  1135                           
  1136                           ;FastTransfer.c: 328: if (_this->head >= (5 * 3)) {
  1137  00A2' EE20 F00F          	lfsr	2,15
  1138  00A6' 5014'              	movf	crcBufS_put@_this,w,c
  1139  00A8' 26D9               	addwf	fsr2l,f,c
  1140  00AA' 5015'              	movf	crcBufS_put@_this+1,w,c
  1141  00AC' 22DA               	addwfc	fsr2h,f,c
  1142  00AE' 52DE               	movf	postinc2,f,c
  1143  00B0' 50DD               	movf	postdec2,w,c
  1144  00B2' 0A80               	xorlw	128
  1145  00B4' 0F80               	addlw	128
  1146  00B6' 0E0F               	movlw	15
  1147  00B8' B4D8               	btfsc	status,2,c
  1148  00BA' 5CDF               	subwf	indf2,w,c
  1149  00BC' A0D8               	btfss	status,0,c
  1150  00BE' 0012               	return	
  1151                           
  1152                           ;FastTransfer.c: 329: _this->head = 0;
  1153  00C0' EE20 F00F          	lfsr	2,15
  1154  00C4' 5014'              	movf	crcBufS_put@_this,w,c
  1155  00C6' 26D9               	addwf	fsr2l,f,c
  1156  00C8' 5015'              	movf	crcBufS_put@_this+1,w,c
  1157  00CA' 22DA               	addwfc	fsr2h,f,c
  1158  00CC' 0E00               	movlw	0
  1159  00CE' 6EDE               	movwf	postinc2,c
  1160  00D0' 0E00               	movlw	0
  1161  00D2' 6EDD               	movwf	postdec2,c
  1162  00D4' 0012               	return	
  1163  00D6'                    __end_of_crcBufS_put:
  1164                           	opt stack 0
  1165                           tblptru	equ	0xFF8
  1166                           intcon	equ	0xFF2
  1167                           postinc0	equ	0xFEE
  1168                           wreg	equ	0xFE8
  1169                           indf2	equ	0xFDF
  1170                           postinc2	equ	0xFDE
  1171                           postdec2	equ	0xFDD
  1172                           fsr2h	equ	0xFDA
  1173                           fsr2l	equ	0xFD9
  1174                           status	equ	0xFD8
  1175                           
  1176 ;; *************** function _FastTransfer_buffer_flush *****************
  1177 ;; Defined at:
  1178 ;;		line 261 in file "FastTransfer.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  _this           2   28[COMRAM] PTR struct ringBufS
  1181 ;;		 -> ring_buffer(206), 
  1182 ;;  clearBuffer     2   30[COMRAM] const int 
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;		None
  1185 ;; Return value:  Size  Location     Type
  1186 ;;		None               void
  1187 ;; Registers used:
  1188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1194 ;;      Params:         4       0       0       0       0       0       0
  1195 ;;      Locals:         0       0       0       0       0       0       0
  1196 ;;      Temps:          0       0       0       0       0       0       0
  1197 ;;      Totals:         4       0       0       0       0       0       0
  1198 ;;Total ram usage:        4 bytes
  1199 ;; Hardware stack levels used:    1
  1200 ;; Hardware stack levels required when called:    4
  1201 ;; This function calls:
  1202 ;;		_memset
  1203 ;; This function is called by:
  1204 ;;		_sendData
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           	psect	text5
  1209  0000'                    __ptext5:
  1210                           	opt stack 0
  1211  0000'                    _FastTransfer_buffer_flush:
  1212                           	opt stack 23
  1213                           
  1214                           ;FastTransfer.c: 262: _this->count = 0;
  1215                           
  1216                           ;incstack = 0
  1217  0000' EE20 F0CC          	lfsr	2,204
  1218  0004' 501C'              	movf	FastTransfer_buffer_flush@_this,w,c
  1219  0006' 26D9               	addwf	fsr2l,f,c
  1220  0008' 501D'              	movf	FastTransfer_buffer_flush@_this+1,w,c
  1221  000A' 22DA               	addwfc	fsr2h,f,c
  1222  000C' 0E00               	movlw	0
  1223  000E' 6EDE               	movwf	postinc2,c
  1224  0010' 0E00               	movlw	0
  1225  0012' 6EDD               	movwf	postdec2,c
  1226                           
  1227                           ;FastTransfer.c: 263: _this->head = 0;
  1228  0014' EE20 F0C8          	lfsr	2,200
  1229  0018' 501C'              	movf	FastTransfer_buffer_flush@_this,w,c
  1230  001A' 26D9               	addwf	fsr2l,f,c
  1231  001C' 501D'              	movf	FastTransfer_buffer_flush@_this+1,w,c
  1232  001E' 22DA               	addwfc	fsr2h,f,c
  1233  0020' 0E00               	movlw	0
  1234  0022' 6EDE               	movwf	postinc2,c
  1235  0024' 0E00               	movlw	0
  1236  0026' 6EDD               	movwf	postdec2,c
  1237                           
  1238                           ;FastTransfer.c: 264: _this->tail = 0;
  1239  0028' EE20 F0CA          	lfsr	2,202
  1240  002C' 501C'              	movf	FastTransfer_buffer_flush@_this,w,c
  1241  002E' 26D9               	addwf	fsr2l,f,c
  1242  0030' 501D'              	movf	FastTransfer_buffer_flush@_this+1,w,c
  1243  0032' 22DA               	addwfc	fsr2h,f,c
  1244  0034' 0E00               	movlw	0
  1245  0036' 6EDE               	movwf	postinc2,c
  1246  0038' 0E00               	movlw	0
  1247  003A' 6EDD               	movwf	postdec2,c
  1248                           
  1249                           ;FastTransfer.c: 265: if (clearBuffer) {
  1250  003C' 501F'              	movf	FastTransfer_buffer_flush@clearBuffer+1,w,c
  1251  003E' 101E'              	iorwf	FastTransfer_buffer_flush@clearBuffer,w,c
  1252  0040' B4D8               	btfsc	status,2,c
  1253  0042' 0012               	return	
  1254                           
  1255                           ;FastTransfer.c: 266: memset(_this->buf, 0, sizeof (_this->buf));
  1256  0044' C01D' F015'        	movff	FastTransfer_buffer_flush@_this+1,memset@p1+1
  1257  0048' C01C' F014'        	movff	FastTransfer_buffer_flush@_this,memset@p1
  1258  004C' 0E00               	movlw	0
  1259  004E' 6E17'              	movwf	memset@c+1,c
  1260  0050' 0E00               	movlw	0
  1261  0052' 6E16'              	movwf	memset@c,c
  1262  0054' 0E00               	movlw	0
  1263  0056' 6E19'              	movwf	memset@n+1,c
  1264  0058' 0EC8               	movlw	200
  1265  005A' 6E18'              	movwf	memset@n,c
  1266  005C' EC00' F000'        	call	_memset	;wreg free
  1267  0060' 0012               	return	
  1268  0062'                    __end_of_FastTransfer_buffer_flush:
  1269                           	opt stack 0
  1270                           tblptru	equ	0xFF8
  1271                           intcon	equ	0xFF2
  1272                           postinc0	equ	0xFEE
  1273                           wreg	equ	0xFE8
  1274                           indf2	equ	0xFDF
  1275                           postinc2	equ	0xFDE
  1276                           postdec2	equ	0xFDD
  1277                           fsr2h	equ	0xFDA
  1278                           fsr2l	equ	0xFD9
  1279                           status	equ	0xFD8
  1280                           
  1281 ;; *************** function _memset *****************
  1282 ;; Defined at:
  1283 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memset.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;  p1              2   20[COMRAM] PTR void 
  1286 ;;		 -> ring_buffer(206), 
  1287 ;;  c               2   22[COMRAM] int 
  1288 ;;  n               2   24[COMRAM] unsigned int 
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;  p               2   26[COMRAM] PTR unsigned char 
  1291 ;;		 -> ring_buffer(206), 
  1292 ;; Return value:  Size  Location     Type
  1293 ;;                  2   20[COMRAM] PTR void 
  1294 ;; Registers used:
  1295 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1301 ;;      Params:         6       0       0       0       0       0       0
  1302 ;;      Locals:         2       0       0       0       0       0       0
  1303 ;;      Temps:          0       0       0       0       0       0       0
  1304 ;;      Totals:         8       0       0       0       0       0       0
  1305 ;;Total ram usage:        8 bytes
  1306 ;; Hardware stack levels used:    1
  1307 ;; Hardware stack levels required when called:    3
  1308 ;; This function calls:
  1309 ;;		Nothing
  1310 ;; This function is called by:
  1311 ;;		_FastTransfer_buffer_flush
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315                           	psect	text6
  1316  0000'                    __ptext6:
  1317                           	opt stack 0
  1318  0000'                    _memset:
  1319                           	opt stack 23
  1320                           
  1321                           ;incstack = 0
  1322  0000' C015' F01B'        	movff	memset@p1+1,memset@p+1
  1323  0004' C014' F01A'        	movff	memset@p1,memset@p
  1324  0008' D008               	goto	l3209
  1325  000A'                    l3205:
  1326  000A' C01A' FFD9         	movff	memset@p,fsr2l
  1327  000E' C01B' FFDA         	movff	memset@p+1,fsr2h
  1328  0012' C016' FFDF         	movff	memset@c,indf2
  1329  0016' 4A1A'              	infsnz	memset@p,f,c
  1330  0018' 2A1B'              	incf	memset@p+1,f,c
  1331  001A'                    l3209:
  1332  001A' 0618'              	decf	memset@n,f,c
  1333  001C' A0D8               	btfss	status,0,c
  1334  001E' 0619'              	decf	memset@n+1,f,c
  1335  0020' 2800'              	incf	memset@n& (0+255),w,c
  1336  0022' B4D8               	btfsc	status,2,c
  1337  0024' 2800'              	incf	(memset@n+1)& (0+255),w,c
  1338  0026' B4D8               	btfsc	status,2,c
  1339                           
  1340                           ;	Return value of _memset is never used
  1341  0028' 0012               	return	
  1342  002A' D7EF               	goto	l3205
  1343  002C'                    __end_of_memset:
  1344                           	opt stack 0
  1345                           tblptru	equ	0xFF8
  1346                           intcon	equ	0xFF2
  1347                           postinc0	equ	0xFEE
  1348                           wreg	equ	0xFE8
  1349                           indf2	equ	0xFDF
  1350                           postinc2	equ	0xFDE
  1351                           postdec2	equ	0xFDD
  1352                           fsr2h	equ	0xFDA
  1353                           fsr2l	equ	0xFD9
  1354                           status	equ	0xFD8
  1355                           
  1356 ;; *************** function _buttonsCollector *****************
  1357 ;; Defined at:
  1358 ;;		line 52 in file "Communications.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;  i               2   29[COMRAM] int 
  1363 ;;  sendVal         2   27[COMRAM] unsigned int 
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  2   22[COMRAM] unsigned int 
  1366 ;; Registers used:
  1367 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1373 ;;      Params:         2       0       0       0       0       0       0
  1374 ;;      Locals:         4       0       0       0       0       0       0
  1375 ;;      Temps:          3       0       0       0       0       0       0
  1376 ;;      Totals:         9       0       0       0       0       0       0
  1377 ;;Total ram usage:        9 bytes
  1378 ;; Hardware stack levels used:    1
  1379 ;; Hardware stack levels required when called:    4
  1380 ;; This function calls:
  1381 ;;		_GetButtonState
  1382 ;; This function is called by:
  1383 ;;		_respondECU
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           	psect	text7
  1388  0000'                    __ptext7:
  1389                           	opt stack 0
  1390  0000'                    _buttonsCollector:
  1391                           	opt stack 24
  1392                           
  1393                           ;Communications.c: 53: unsigned int sendVal = 0;
  1394                           
  1395                           ;incstack = 0
  1396  0000' 0E00               	movlw	0
  1397  0002' 6E1C'              	movwf	buttonsCollector@sendVal+1,c
  1398  0004' 0E00               	movlw	0
  1399  0006' 6E1B'              	movwf	buttonsCollector@sendVal,c
  1400                           
  1401                           ;Communications.c: 54: int i = 0;
  1402  0008' 0E00               	movlw	0
  1403  000A' 6E1E'              	movwf	buttonsCollector@i+1,c
  1404  000C' 0E00               	movlw	0
  1405  000E' 6E1D'              	movwf	buttonsCollector@i,c
  1406                           
  1407                           ;Communications.c: 55: for (i = 0; i < 8; i++) {
  1408  0010' 0E00               	movlw	0
  1409  0012' 6E1E'              	movwf	buttonsCollector@i+1,c
  1410  0014' 0E00               	movlw	0
  1411  0016' 6E1D'              	movwf	buttonsCollector@i,c
  1412  0018' 501E'              	movf	buttonsCollector@i+1,w,c
  1413  001A' 0A80               	xorlw	128
  1414  001C' 0F80               	addlw	-128
  1415  001E' 0E08               	movlw	8
  1416  0020' B4D8               	btfsc	status,2,c
  1417  0022' 5C1D'              	subwf	buttonsCollector@i,w,c
  1418  0024' B0D8               	btfsc	status,0,c
  1419  0026' D01B               	goto	l567
  1420                           
  1421                           ;Communications.c: 56: sendVal = sendVal | ((GetButtonState(i)&0x01) << i);
  1422  0028' C01D' F018'        	movff	buttonsCollector@i,??_buttonsCollector
  1423  002C' C01D' F014'        	movff	buttonsCollector@i,_GetButtonState$0
  1424  0030' C01E' F015'        	movff	buttonsCollector@i+1,_GetButtonState$0+1
  1425  0034' EC00' F000'        	call	_GetButtonState	;wreg free
  1426  0038' 0B01               	andlw	1
  1427  003A' 6E00'              	movwf	(??_buttonsCollector+1)& (0+255),c
  1428  003C' 6A00'              	clrf	(??_buttonsCollector+2)& (0+255),c
  1429  003E' 2A18'              	incf	??_buttonsCollector,f,c
  1430  0040' D003               	goto	u1174
  1431  0042'                    u1175:
  1432  0042' 90D8               	bcf	status,0,c
  1433  0044' 3619'              	rlcf	??_buttonsCollector+1,f,c
  1434  0046' 361A'              	rlcf	??_buttonsCollector+2,f,c
  1435  0048'                    u1174:
  1436  0048' 2E18'              	decfsz	??_buttonsCollector,f,c
  1437  004A' D7FB               	goto	u1175
  1438  004C' 501B'              	movf	buttonsCollector@sendVal,w,c
  1439  004E' 1019'              	iorwf	??_buttonsCollector+1,w,c
  1440  0050' 6E1B'              	movwf	buttonsCollector@sendVal,c
  1441  0052' 501C'              	movf	buttonsCollector@sendVal+1,w,c
  1442  0054' 101A'              	iorwf	??_buttonsCollector+2,w,c
  1443  0056' 6E1C'              	movwf	buttonsCollector@sendVal+1,c
  1444  0058' 4A1D'              	infsnz	buttonsCollector@i,f,c
  1445  005A' 2A1E'              	incf	buttonsCollector@i+1,f,c
  1446  005C' D7DD               	goto	L1
  1447  005E'                    l567:
  1448                           
  1449                           ;Communications.c: 57: }
  1450                           ;Communications.c: 58: return sendVal;
  1451  005E' C01B' F016'        	movff	buttonsCollector@sendVal,?_buttonsCollector
  1452  0062' C01C' F017'        	movff	buttonsCollector@sendVal+1,?_buttonsCollector+1
  1453  0066' 0012               	return	
  1454  0068'                    __end_of_buttonsCollector:
  1455                           	opt stack 0
  1456                           tblptru	equ	0xFF8
  1457                           intcon	equ	0xFF2
  1458                           postinc0	equ	0xFEE
  1459                           wreg	equ	0xFE8
  1460                           indf2	equ	0xFDF
  1461                           postinc2	equ	0xFDE
  1462                           postdec2	equ	0xFDD
  1463                           fsr2h	equ	0xFDA
  1464                           fsr2l	equ	0xFD9
  1465                           status	equ	0xFD8
  1466                           
  1467 ;; *************** function _ToSend *****************
  1468 ;; Defined at:
  1469 ;;		line 216 in file "FastTransfer.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;  where           1    wreg     unsigned char 
  1472 ;;  what            2   33[COMRAM] unsigned int 
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;  where           1   35[COMRAM] unsigned char 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;		None               void
  1477 ;; Registers used:
  1478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1484 ;;      Params:         2       0       0       0       0       0       0
  1485 ;;      Locals:         1       0       0       0       0       0       0
  1486 ;;      Temps:          0       0       0       0       0       0       0
  1487 ;;      Totals:         3       0       0       0       0       0       0
  1488 ;;Total ram usage:        3 bytes
  1489 ;; Hardware stack levels used:    1
  1490 ;; Hardware stack levels required when called:    5
  1491 ;; This function calls:
  1492 ;;		_FastTransfer_buffer_put
  1493 ;; This function is called by:
  1494 ;;		_respondECU
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           	psect	text8
  1499  0000'                    __ptext8:
  1500                           	opt stack 0
  1501  0000'                    _ToSend:
  1502                           	opt stack 23
  1503                           
  1504                           ;incstack = 0
  1505                           ;ToSend@where stored from wreg
  1506  0000' 6E23'              	movwf	ToSend@where,c
  1507                           
  1508                           ;FastTransfer.c: 217: FastTransfer_buffer_put(&ring_buffer, where, what);
  1509  0002' 0101               	movlb	1	; () banked
  1510  0004' 0E00'              	movlw	high _ring_buffer
  1511  0006' 6E1B'              	movwf	FastTransfer_buffer_put@_this+1,c
  1512  0008' 0101               	movlb	1	; () banked
  1513  000A' 0E00'              	movlw	low _ring_buffer
  1514  000C' 6E1A'              	movwf	FastTransfer_buffer_put@_this,c
  1515  000E' C023' F01C'        	movff	ToSend@where,FastTransfer_buffer_put@towhere
  1516  0012' C021' F01D'        	movff	ToSend@what,FastTransfer_buffer_put@towhat
  1517  0016' C022' F01E'        	movff	ToSend@what+1,FastTransfer_buffer_put@towhat+1
  1518  001A' EC00' F000'        	call	_FastTransfer_buffer_put	;wreg free
  1519  001E' 0012               	return	
  1520  0020'                    __end_of_ToSend:
  1521                           	opt stack 0
  1522                           tblptru	equ	0xFF8
  1523                           intcon	equ	0xFF2
  1524                           postinc0	equ	0xFEE
  1525                           wreg	equ	0xFE8
  1526                           indf2	equ	0xFDF
  1527                           postinc2	equ	0xFDE
  1528                           postdec2	equ	0xFDD
  1529                           fsr2h	equ	0xFDA
  1530                           fsr2l	equ	0xFD9
  1531                           status	equ	0xFD8
  1532                           
  1533 ;; *************** function _FastTransfer_buffer_put *****************
  1534 ;; Defined at:
  1535 ;;		line 223 in file "FastTransfer.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;  _this           2   26[COMRAM] PTR struct ringBufS
  1538 ;;		 -> ring_buffer(206), 
  1539 ;;  towhere         1   28[COMRAM] unsigned char 
  1540 ;;  towhat          2   29[COMRAM] unsigned int 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;		None
  1543 ;; Return value:  Size  Location     Type
  1544 ;;		None               void
  1545 ;; Registers used:
  1546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1552 ;;      Params:         5       0       0       0       0       0       0
  1553 ;;      Locals:         0       0       0       0       0       0       0
  1554 ;;      Temps:          2       0       0       0       0       0       0
  1555 ;;      Totals:         7       0       0       0       0       0       0
  1556 ;;Total ram usage:        7 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; Hardware stack levels required when called:    4
  1559 ;; This function calls:
  1560 ;;		_FastTransfer_buffer_modulo_inc
  1561 ;; This function is called by:
  1562 ;;		_ToSend
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           	psect	text9
  1567  0000'                    __ptext9:
  1568                           	opt stack 0
  1569  0000'                    _FastTransfer_buffer_put:
  1570                           	opt stack 23
  1571                           
  1572                           ;FastTransfer.c: 225: group.integer = towhat;
  1573                           
  1574                           ;incstack = 0
  1575  0000' C01D' F01B'        	movff	FastTransfer_buffer_put@towhat,_group
  1576  0004' C01E' F01C'        	movff	FastTransfer_buffer_put@towhat+1,_group+1
  1577                           
  1578                           ;FastTransfer.c: 227: if (_this->count < (200 - 3)) {
  1579  0008' EE20 F0CC          	lfsr	2,204
  1580  000C' 501A'              	movf	FastTransfer_buffer_put@_this,w,c
  1581  000E' 26D9               	addwf	fsr2l,f,c
  1582  0010' 501B'              	movf	FastTransfer_buffer_put@_this+1,w,c
  1583  0012' 22DA               	addwfc	fsr2h,f,c
  1584  0014' CFDE F01F'         	movff	postinc2,??_FastTransfer_buffer_put
  1585  0018' CFDD F020'         	movff	postdec2,??_FastTransfer_buffer_put+1
  1586  001C' 5020'              	movf	??_FastTransfer_buffer_put+1,w,c
  1587  001E' 0A80               	xorlw	128
  1588  0020' 6EF3               	movwf	prodl,c
  1589  0022' 0E80               	movlw	128
  1590  0024' 5CF3               	subwf	prodl,w,c
  1591  0026' 0EC5               	movlw	197
  1592  0028' B4D8               	btfsc	status,2,c
  1593  002A' 5C1F'              	subwf	??_FastTransfer_buffer_put,w,c
  1594  002C' B0D8               	btfsc	status,0,c
  1595  002E' 0012               	return	
  1596                           
  1597                           ;FastTransfer.c: 228: _this->buf[_this->head] = towhere;
  1598  0030' EE20 F0C8          	lfsr	2,200
  1599  0034' 501A'              	movf	FastTransfer_buffer_put@_this,w,c
  1600  0036' 26D9               	addwf	fsr2l,f,c
  1601  0038' 501B'              	movf	FastTransfer_buffer_put@_this+1,w,c
  1602  003A' 22DA               	addwfc	fsr2h,f,c
  1603  003C' CFDE F01F'         	movff	postinc2,??_FastTransfer_buffer_put
  1604  0040' CFDD F020'         	movff	postdec2,??_FastTransfer_buffer_put+1
  1605  0044' 501F'              	movf	??_FastTransfer_buffer_put,w,c
  1606  0046' 241A'              	addwf	FastTransfer_buffer_put@_this,w,c
  1607  0048' 6ED9               	movwf	fsr2l,c
  1608  004A' 5020'              	movf	??_FastTransfer_buffer_put+1,w,c
  1609  004C' 201B'              	addwfc	FastTransfer_buffer_put@_this+1,w,c
  1610  004E' 6EDA               	movwf	fsr2h,c
  1611  0050' C01C' FFDF         	movff	FastTransfer_buffer_put@towhere,indf2
  1612                           
  1613                           ;FastTransfer.c: 229: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  1614  0054' EE20 F0C8          	lfsr	2,200
  1615  0058' 501A'              	movf	FastTransfer_buffer_put@_this,w,c
  1616  005A' 26D9               	addwf	fsr2l,f,c
  1617  005C' 501B'              	movf	FastTransfer_buffer_put@_this+1,w,c
  1618  005E' 22DA               	addwfc	fsr2h,f,c
  1619  0060' CFDE F014'         	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  1620  0064' CFDD F015'         	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  1621  0068' 0E00               	movlw	0
  1622  006A' 6E17'              	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  1623  006C' 0EC8               	movlw	200
  1624  006E' 6E16'              	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  1625  0070' EC00' F000'        	call	_FastTransfer_buffer_modulo_inc	;wreg free
  1626  0074' EE20 F0C8          	lfsr	2,200
  1627  0078' 501A'              	movf	FastTransfer_buffer_put@_this,w,c
  1628  007A' 26D9               	addwf	fsr2l,f,c
  1629  007C' 501B'              	movf	FastTransfer_buffer_put@_this+1,w,c
  1630  007E' 22DA               	addwfc	fsr2h,f,c
  1631  0080' C014' FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  1632  0084' C015' FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  1633                           
  1634                           ;FastTransfer.c: 230: ++_this->count;
  1635  0088' EE20 F0CC          	lfsr	2,204
  1636  008C' 501A'              	movf	FastTransfer_buffer_put@_this,w,c
  1637  008E' 26D9               	addwf	fsr2l,f,c
  1638  0090' 501B'              	movf	FastTransfer_buffer_put@_this+1,w,c
  1639  0092' 22DA               	addwfc	fsr2h,f,c
  1640  0094' 2ADE               	incf	postinc2,f,c
  1641  0096' 0E00               	movlw	0
  1642  0098' 22DD               	addwfc	postdec2,f,c
  1643                           
  1644                           ;FastTransfer.c: 231: _this->buf[_this->head] = group.parts[0];
  1645  009A' EE20 F0C8          	lfsr	2,200
  1646  009E' 501A'              	movf	FastTransfer_buffer_put@_this,w,c
  1647  00A0' 26D9               	addwf	fsr2l,f,c
  1648  00A2' 501B'              	movf	FastTransfer_buffer_put@_this+1,w,c
  1649  00A4' 22DA               	addwfc	fsr2h,f,c
  1650  00A6' CFDE F01F'         	movff	postinc2,??_FastTransfer_buffer_put
  1651  00AA' CFDD F020'         	movff	postdec2,??_FastTransfer_buffer_put+1
  1652  00AE' 501F'              	movf	??_FastTransfer_buffer_put,w,c
  1653  00B0' 241A'              	addwf	FastTransfer_buffer_put@_this,w,c
  1654  00B2' 6ED9               	movwf	fsr2l,c
  1655  00B4' 5020'              	movf	??_FastTransfer_buffer_put+1,w,c
  1656  00B6' 201B'              	addwfc	FastTransfer_buffer_put@_this+1,w,c
  1657  00B8' 6EDA               	movwf	fsr2h,c
  1658  00BA' C01B' FFDF         	movff	_group,indf2
  1659                           
  1660                           ;FastTransfer.c: 232: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  1661  00BE' EE20 F0C8          	lfsr	2,200
  1662  00C2' 501A'              	movf	FastTransfer_buffer_put@_this,w,c
  1663  00C4' 26D9               	addwf	fsr2l,f,c
  1664  00C6' 501B'              	movf	FastTransfer_buffer_put@_this+1,w,c
  1665  00C8' 22DA               	addwfc	fsr2h,f,c
  1666  00CA' CFDE F014'         	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  1667  00CE' CFDD F015'         	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  1668  00D2' 0E00               	movlw	0
  1669  00D4' 6E17'              	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  1670  00D6' 0EC8               	movlw	200
  1671  00D8' 6E16'              	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  1672  00DA' EC00' F000'        	call	_FastTransfer_buffer_modulo_inc	;wreg free
  1673  00DE' EE20 F0C8          	lfsr	2,200
  1674  00E2' 501A'              	movf	FastTransfer_buffer_put@_this,w,c
  1675  00E4' 26D9               	addwf	fsr2l,f,c
  1676  00E6' 501B'              	movf	FastTransfer_buffer_put@_this+1,w,c
  1677  00E8' 22DA               	addwfc	fsr2h,f,c
  1678  00EA' C014' FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  1679  00EE' C015' FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  1680                           
  1681                           ;FastTransfer.c: 233: ++_this->count;
  1682  00F2' EE20 F0CC          	lfsr	2,204
  1683  00F6' 501A'              	movf	FastTransfer_buffer_put@_this,w,c
  1684  00F8' 26D9               	addwf	fsr2l,f,c
  1685  00FA' 501B'              	movf	FastTransfer_buffer_put@_this+1,w,c
  1686  00FC' 22DA               	addwfc	fsr2h,f,c
  1687  00FE' 2ADE               	incf	postinc2,f,c
  1688  0100' 0E00               	movlw	0
  1689  0102' 22DD               	addwfc	postdec2,f,c
  1690                           
  1691                           ;FastTransfer.c: 234: _this->buf[_this->head] = group.parts[1];
  1692  0104' EE20 F0C8          	lfsr	2,200
  1693  0108' 501A'              	movf	FastTransfer_buffer_put@_this,w,c
  1694  010A' 26D9               	addwf	fsr2l,f,c
  1695  010C' 501B'              	movf	FastTransfer_buffer_put@_this+1,w,c
  1696  010E' 22DA               	addwfc	fsr2h,f,c
  1697  0110' CFDE F01F'         	movff	postinc2,??_FastTransfer_buffer_put
  1698  0114' CFDD F020'         	movff	postdec2,??_FastTransfer_buffer_put+1
  1699  0118' 501F'              	movf	??_FastTransfer_buffer_put,w,c
  1700  011A' 241A'              	addwf	FastTransfer_buffer_put@_this,w,c
  1701  011C' 6ED9               	movwf	fsr2l,c
  1702  011E' 5020'              	movf	??_FastTransfer_buffer_put+1,w,c
  1703  0120' 201B'              	addwfc	FastTransfer_buffer_put@_this+1,w,c
  1704  0122' 6EDA               	movwf	fsr2h,c
  1705  0124' C01C' FFDF         	movff	_group+1,indf2
  1706                           
  1707                           ;FastTransfer.c: 235: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  1708  0128' EE20 F0C8          	lfsr	2,200
  1709  012C' 501A'              	movf	FastTransfer_buffer_put@_this,w,c
  1710  012E' 26D9               	addwf	fsr2l,f,c
  1711  0130' 501B'              	movf	FastTransfer_buffer_put@_this+1,w,c
  1712  0132' 22DA               	addwfc	fsr2h,f,c
  1713  0134' CFDE F014'         	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  1714  0138' CFDD F015'         	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  1715  013C' 0E00               	movlw	0
  1716  013E' 6E17'              	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  1717  0140' 0EC8               	movlw	200
  1718  0142' 6E16'              	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  1719  0144' EC00' F000'        	call	_FastTransfer_buffer_modulo_inc	;wreg free
  1720  0148' EE20 F0C8          	lfsr	2,200
  1721  014C' 501A'              	movf	FastTransfer_buffer_put@_this,w,c
  1722  014E' 26D9               	addwf	fsr2l,f,c
  1723  0150' 501B'              	movf	FastTransfer_buffer_put@_this+1,w,c
  1724  0152' 22DA               	addwfc	fsr2h,f,c
  1725  0154' C014' FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  1726  0158' C015' FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  1727                           
  1728                           ;FastTransfer.c: 236: ++_this->count;
  1729  015C' EE20 F0CC          	lfsr	2,204
  1730  0160' 501A'              	movf	FastTransfer_buffer_put@_this,w,c
  1731  0162' 26D9               	addwf	fsr2l,f,c
  1732  0164' 501B'              	movf	FastTransfer_buffer_put@_this+1,w,c
  1733  0166' 22DA               	addwfc	fsr2h,f,c
  1734  0168' 2ADE               	incf	postinc2,f,c
  1735  016A' 0E00               	movlw	0
  1736  016C' 22DD               	addwfc	postdec2,f,c
  1737  016E' 0012               	return	
  1738  0170'                    __end_of_FastTransfer_buffer_put:
  1739                           	opt stack 0
  1740                           tblptru	equ	0xFF8
  1741                           prodl	equ	0xFF3
  1742                           intcon	equ	0xFF2
  1743                           postinc0	equ	0xFEE
  1744                           wreg	equ	0xFE8
  1745                           indf2	equ	0xFDF
  1746                           postinc2	equ	0xFDE
  1747                           postdec2	equ	0xFDD
  1748                           fsr2h	equ	0xFDA
  1749                           fsr2l	equ	0xFD9
  1750                           status	equ	0xFD8
  1751                           
  1752 ;; *************** function _FastTransfer_buffer_modulo_inc *****************
  1753 ;; Defined at:
  1754 ;;		line 273 in file "FastTransfer.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;  value           2   20[COMRAM] const unsigned int 
  1757 ;;  modulus         2   22[COMRAM] const unsigned int 
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  my_value        2   24[COMRAM] unsigned int 
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  2   20[COMRAM] unsigned int 
  1762 ;; Registers used:
  1763 ;;		wreg, status,2, status,0
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1769 ;;      Params:         4       0       0       0       0       0       0
  1770 ;;      Locals:         2       0       0       0       0       0       0
  1771 ;;      Temps:          0       0       0       0       0       0       0
  1772 ;;      Totals:         6       0       0       0       0       0       0
  1773 ;;Total ram usage:        6 bytes
  1774 ;; Hardware stack levels used:    1
  1775 ;; Hardware stack levels required when called:    3
  1776 ;; This function calls:
  1777 ;;		Nothing
  1778 ;; This function is called by:
  1779 ;;		_FastTransfer_buffer_put
  1780 ;;		_FastTransfer_buffer_get
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           	psect	text10
  1785  0000'                    __ptext10:
  1786                           	opt stack 0
  1787  0000'                    _FastTransfer_buffer_modulo_inc:
  1788                           	opt stack 23
  1789                           
  1790                           ;FastTransfer.c: 274: unsigned int my_value = value + 1;
  1791                           
  1792                           ;incstack = 0
  1793  0000' 0E01               	movlw	1
  1794  0002' 2414'              	addwf	FastTransfer_buffer_modulo_inc@value,w,c
  1795  0004' 6E18'              	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  1796  0006' 0E00               	movlw	0
  1797  0008' 2015'              	addwfc	FastTransfer_buffer_modulo_inc@value+1,w,c
  1798  000A' 6E19'              	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  1799                           
  1800                           ;FastTransfer.c: 275: if (my_value >= modulus) {
  1801  000C' 5016'              	movf	FastTransfer_buffer_modulo_inc@modulus,w,c
  1802  000E' 5C18'              	subwf	FastTransfer_buffer_modulo_inc@my_value,w,c
  1803  0010' 5017'              	movf	FastTransfer_buffer_modulo_inc@modulus+1,w,c
  1804  0012' 5819'              	subwfb	FastTransfer_buffer_modulo_inc@my_value+1,w,c
  1805  0014' A0D8               	btfss	status,0,c
  1806  0016' D004               	goto	l2377
  1807                           
  1808                           ;FastTransfer.c: 276: my_value = 0;
  1809  0018' 0E00               	movlw	0
  1810  001A' 6E19'              	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  1811  001C' 0E00               	movlw	0
  1812  001E' 6E18'              	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  1813  0020'                    l2377:
  1814                           
  1815                           ;FastTransfer.c: 277: }
  1816                           ;FastTransfer.c: 278: return (my_value);
  1817  0020' C018' F014'        	movff	FastTransfer_buffer_modulo_inc@my_value,?_FastTransfer_buffer_modulo_inc
  1818  0024' C019' F015'        	movff	FastTransfer_buffer_modulo_inc@my_value+1,?_FastTransfer_buffer_modulo_inc+1
  1819  0028' 0012               	return	
  1820  002A'                    __end_of_FastTransfer_buffer_modulo_inc:
  1821                           	opt stack 0
  1822                           tblptru	equ	0xFF8
  1823                           prodl	equ	0xFF3
  1824                           intcon	equ	0xFF2
  1825                           postinc0	equ	0xFEE
  1826                           wreg	equ	0xFE8
  1827                           indf2	equ	0xFDF
  1828                           postinc2	equ	0xFDE
  1829                           postdec2	equ	0xFDD
  1830                           fsr2h	equ	0xFDA
  1831                           fsr2l	equ	0xFD9
  1832                           status	equ	0xFD8
  1833                           
  1834 ;; *************** function _Delay *****************
  1835 ;; Defined at:
  1836 ;;		line 86 in file "main.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;  wait            2   20[COMRAM] int 
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;  x               2   23[COMRAM] int 
  1841 ;; Return value:  Size  Location     Type
  1842 ;;		None               void
  1843 ;; Registers used:
  1844 ;;		wreg, status,2, status,0
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1850 ;;      Params:         2       0       0       0       0       0       0
  1851 ;;      Locals:         2       0       0       0       0       0       0
  1852 ;;      Temps:          1       0       0       0       0       0       0
  1853 ;;      Totals:         5       0       0       0       0       0       0
  1854 ;;Total ram usage:        5 bytes
  1855 ;; Hardware stack levels used:    1
  1856 ;; Hardware stack levels required when called:    3
  1857 ;; This function calls:
  1858 ;;		Nothing
  1859 ;; This function is called by:
  1860 ;;		_respondECU
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           	psect	text11
  1865  0000'                    __ptext11:
  1866                           	opt stack 0
  1867  0000'                    _Delay:
  1868                           	opt stack 25
  1869                           
  1870                           ;main.c: 87: int x;
  1871                           ;main.c: 88: for (x = 0; x < wait; x++) {
  1872                           
  1873                           ;incstack = 0
  1874  0000' 0E00               	movlw	0
  1875  0002' 6E18'              	movwf	Delay@x+1,c
  1876  0004' 0E00               	movlw	0
  1877  0006' 6E17'              	movwf	Delay@x,c
  1878  0008' D00A               	goto	l779
  1879  000A'                    l2495:
  1880                           
  1881                           ;main.c: 89: _delay((unsigned long)((1)*(16000000/4000.0)));
  1882  000A' 0E06               	movlw	6
  1883  000C' 6E00'              	movwf	??_Delay& (0+255),c
  1884  000E' 0E30               	movlw	48
  1885  0010'                    u2447:
  1886  0010' 2EE8               	decfsz	wreg,f,c
  1887  0012' D7FE               	goto	u2447
  1888  0014' 2E00'              	decfsz	??_Delay& (0+255),f,c
  1889  0016' D7FC               	goto	u2447
  1890  0018' D000               	nop2	
  1891  001A' 4A17'              	infsnz	Delay@x,f,c
  1892  001C' 2A18'              	incf	Delay@x+1,f,c
  1893  001E'                    l779:
  1894  001E' 5018'              	movf	Delay@x+1,w,c
  1895  0020' 0A80               	xorlw	128
  1896  0022' 6E00'              	movwf	??_Delay& (0+255),c
  1897  0024' 5014'              	movf	Delay@wait,w,c
  1898  0026' 5C17'              	subwf	Delay@x,w,c
  1899  0028' 5015'              	movf	Delay@wait+1,w,c
  1900  002A' 0A80               	xorlw	128
  1901  002C' 5800'              	subwfb	??_Delay& (0+255),w,c
  1902  002E' B0D8               	btfsc	status,0,c
  1903  0030' 0012               	return	
  1904  0032' D7EB               	goto	l2495
  1905  0034'                    __end_of_Delay:
  1906                           	opt stack 0
  1907                           tblptru	equ	0xFF8
  1908                           prodl	equ	0xFF3
  1909                           intcon	equ	0xFF2
  1910                           postinc0	equ	0xFEE
  1911                           wreg	equ	0xFE8
  1912                           indf2	equ	0xFDF
  1913                           postinc2	equ	0xFDE
  1914                           postdec2	equ	0xFDD
  1915                           fsr2h	equ	0xFDA
  1916                           fsr2l	equ	0xFD9
  1917                           status	equ	0xFD8
  1918                           
  1919 ;; *************** function _receiveData *****************
  1920 ;; Defined at:
  1921 ;;		line 82 in file "FastTransfer.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;		None
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;  holder          3   12[BANK0 ] unsigned char [3]
  1926 ;;  crcHolder       1    8[BANK0 ] unsigned char 
  1927 ;;  holder          3    9[BANK0 ] unsigned char [3]
  1928 ;;  crcHolder       1    7[BANK0 ] unsigned char 
  1929 ;;  u               2   15[BANK0 ] int 
  1930 ;;  r               2   17[BANK0 ] int 
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      unsigned char 
  1933 ;; Registers used:
  1934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1940 ;;      Params:         0       0       0       0       0       0       0
  1941 ;;      Locals:         0      12       0       0       0       0       0
  1942 ;;      Temps:          4       0       0       0       0       0       0
  1943 ;;      Totals:         4      12       0       0       0       0       0
  1944 ;;Total ram usage:       16 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; Hardware stack levels required when called:    5
  1947 ;; This function calls:
  1948 ;;		_CRC8
  1949 ;;		_CRCcheck
  1950 ;; This function is called by:
  1951 ;;		_updateComms
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955                           	psect	text12
  1956  0000'                    __ptext12:
  1957                           	opt stack 0
  1958  0000'                    _receiveData:
  1959                           	opt stack 24
  1960                           
  1961                           ;incstack = 0
  1962  0000' D01A               	goto	l3355
  1963  0002'                    l3345:
  1964                           
  1965                           ; BSR set to: 0
  1966  0002' 0100               	movlb	0	; () banked
  1967  0004' 4B00'              	infsnz	receiveData@u& (0+255),f,b
  1968  0006' 2B00'              	incf	(receiveData@u+1)& (0+255),f,b
  1969                           
  1970                           ; BSR set to: 0
  1971                           
  1972                           ; BSR set to: 0
  1973  0008' 5018'              	movf	_rx_len,w,c
  1974  000A' 6E00'              	movwf	??_receiveData& (0+255),c
  1975  000C' 6A00'              	clrf	(??_receiveData+1)& (0+255),c
  1976  000E' 0E01               	movlw	1
  1977  0010' 2620'              	addwf	??_receiveData,f,c
  1978  0012' 0E00               	movlw	0
  1979  0014' 2221'              	addwfc	??_receiveData+1,f,c
  1980  0016' 5021'              	movf	??_receiveData+1,w,c
  1981  0018' 0A80               	xorlw	128
  1982  001A' 6E00'              	movwf	(??_receiveData+2)& (0+255),c
  1983  001C' 0100               	movlb	0	; () banked
  1984  001E' 5100'              	movf	receiveData@u& (0+255),w,b
  1985  0020' 5C20'              	subwf	??_receiveData,w,c
  1986  0022' 0100               	movlb	0	; () banked
  1987  0024' 5100'              	movf	(receiveData@u+1)& (0+255),w,b
  1988  0026' 0A80               	xorlw	128
  1989  0028' 5800'              	subwfb	(??_receiveData+2)& (0+255),w,c
  1990  002A' B0D8               	btfsc	status,0,c
  1991  002C' D7EA               	goto	l3345
  1992                           
  1993                           ; BSR set to: 0
  1994                           ;FastTransfer.c: 109: }
  1995                           ;FastTransfer.c: 110: rx_len = 0;
  1996                           
  1997                           ; BSR set to: 0
  1998  002E' 0E00               	movlw	0
  1999  0030' 6E18'              	movwf	_rx_len,c
  2000                           
  2001                           ; BSR set to: 0
  2002                           ;FastTransfer.c: 111: return 0;
  2003  0032' 0E00               	movlw	0
  2004  0034' 0012               	return	
  2005  0036'                    l3355:
  2006                           
  2007                           ;FastTransfer.c: 112: }
  2008                           ;FastTransfer.c: 114: }
  2009                           ;FastTransfer.c: 115: }
  2010                           ;FastTransfer.c: 116: }
  2011                           ;FastTransfer.c: 119: if (rx_len != 0) {
  2012  0036' 5018'              	movf	_rx_len,w,c
  2013  0038' B4D8               	btfsc	status,2,c
  2014  003A' D107               	goto	l3437
  2015                           
  2016                           ;FastTransfer.c: 122: if (rx_array_inx == 0) {
  2017  003C' 6617'              	tstfsz	_rx_array_inx,c
  2018  003E' D001               	goto	l3377
  2019  0040'                    l664:
  2020  0040' D7FF               	goto	l664
  2021  0042'                    l3377:
  2022                           
  2023                           ;FastTransfer.c: 135: }
  2024                           ;FastTransfer.c: 137: if (rx_len == (rx_array_inx - 1)) {
  2025  0042' 0EFF               	movlw	255
  2026  0044' 6E00'              	movwf	??_receiveData& (0+255),c
  2027  0046' 0EFF               	movlw	255
  2028  0048' 6E00'              	movwf	(??_receiveData+1)& (0+255),c
  2029  004A' 5017'              	movf	_rx_array_inx,w,c
  2030  004C' 6E00'              	movwf	(??_receiveData+2)& (0+255),c
  2031  004E' 6A00'              	clrf	(??_receiveData+3)& (0+255),c
  2032  0050' 5020'              	movf	??_receiveData,w,c
  2033  0052' 2622'              	addwf	??_receiveData+2,f,c
  2034  0054' 5021'              	movf	??_receiveData+1,w,c
  2035  0056' 2223'              	addwfc	??_receiveData+3,f,c
  2036  0058' 5018'              	movf	_rx_len,w,c
  2037  005A' 1822'              	xorwf	??_receiveData+2,w,c
  2038  005C' 1023'              	iorwf	??_receiveData+3,w,c
  2039  005E' A4D8               	btfss	status,2,c
  2040  0060' D0F4               	goto	l3437
  2041                           
  2042                           ;FastTransfer.c: 140: calc_CS = CRC8(rx_buffer, rx_len);
  2043  0062' 0102               	movlb	2	; () banked
  2044  0064' 0E00'              	movlw	high _rx_buffer
  2045  0066' 6E15'              	movwf	CRC8@data+1,c
  2046  0068' 0102               	movlb	2	; () banked
  2047  006A' 0E00'              	movlw	low _rx_buffer
  2048  006C' 6E14'              	movwf	CRC8@data,c
  2049  006E' C018' F016'        	movff	_rx_len,CRC8@len
  2050  0072' EC00' F000'        	call	_CRC8	;wreg free
  2051  0076' 6E0B'              	movwf	_calc_CS,c
  2052                           
  2053                           ;FastTransfer.c: 144: if (calc_CS == rx_buffer[rx_array_inx - 1]) {
  2054  0078' 0EFF               	movlw	255
  2055  007A' 6E00'              	movwf	??_receiveData& (0+255),c
  2056  007C' 0EFF               	movlw	255
  2057  007E' 6E00'              	movwf	(??_receiveData+1)& (0+255),c
  2058  0080' 5017'              	movf	_rx_array_inx,w,c
  2059  0082' 6E00'              	movwf	(??_receiveData+2)& (0+255),c
  2060  0084' 6A00'              	clrf	(??_receiveData+3)& (0+255),c
  2061  0086' 5020'              	movf	??_receiveData,w,c
  2062  0088' 2622'              	addwf	??_receiveData+2,f,c
  2063  008A' 5021'              	movf	??_receiveData+1,w,c
  2064  008C' 2223'              	addwfc	??_receiveData+3,f,c
  2065  008E' 0102               	movlb	2	; () banked
  2066  0090' 0E00'              	movlw	low _rx_buffer
  2067  0092' 2422'              	addwf	??_receiveData+2,w,c
  2068  0094' 6ED9               	movwf	fsr2l,c
  2069  0096' 0102               	movlb	2	; () banked
  2070  0098' 0E00'              	movlw	high _rx_buffer
  2071  009A' 2023'              	addwfc	??_receiveData+3,w,c
  2072  009C' 6EDA               	movwf	fsr2h,c
  2073  009E' 500B'              	movf	_calc_CS,w,c
  2074  00A0' 62DF               	cpfseq	indf2,c
  2075  00A2' D0A0               	goto	l3417
  2076                           
  2077                           ; BSR set to: 2
  2078                           ;FastTransfer.c: 147: int r;
  2079                           ;FastTransfer.c: 148: for (r = 0; r < rx_len; r = r + 3) {
  2080  00A4' 0E00               	movlw	0
  2081  00A6' 0100               	movlb	0	; () banked
  2082  00A8' 6F00'              	movwf	(receiveData@r+1)& (0+255),b
  2083  00AA' 0E00               	movlw	0
  2084  00AC' 0100               	movlb	0	; () banked
  2085  00AE' 6F00'              	movwf	receiveData@r& (0+255),b
  2086  00B0' D05A               	goto	l3395
  2087  00B2'                    l3385:
  2088                           
  2089                           ; BSR set to: 0
  2090                           ;FastTransfer.c: 149: if (rx_buffer[r] < maxDataAddress) {
  2091  00B2' 0102               	movlb	2	; () banked
  2092  00B4' 0E00'              	movlw	low _rx_buffer
  2093  00B6' 0100               	movlb	0	; () banked
  2094  00B8' 2500'              	addwf	receiveData@r& (0+255),w,b
  2095  00BA' 6ED9               	movwf	fsr2l,c
  2096  00BC' 0102               	movlb	2	; () banked
  2097  00BE' 0E00'              	movlw	high _rx_buffer
  2098  00C0' 0100               	movlb	0	; () banked
  2099  00C2' 2100'              	addwfc	(receiveData@r+1)& (0+255),w,b
  2100  00C4' 6EDA               	movwf	fsr2h,c
  2101  00C6' 50DF               	movf	indf2,w,c
  2102  00C8' 6E00'              	movwf	??_receiveData& (0+255),c
  2103  00CA' 5013'              	movf	_maxDataAddress,w,c
  2104  00CC' 5C20'              	subwf	??_receiveData,w,c
  2105  00CE' B0D8               	btfsc	status,0,c
  2106  00D0' D03D               	goto	l3391
  2107                           
  2108                           ; BSR set to: 0
  2109                           ;FastTransfer.c: 150: group.parts[0] = rx_buffer[r + 1];
  2110  00D2' 0E01               	movlw	1
  2111  00D4' 0100               	movlb	0	; () banked
  2112  00D6' 2500'              	addwf	receiveData@r& (0+255),w,b
  2113  00D8' 6E00'              	movwf	??_receiveData& (0+255),c
  2114  00DA' 0E00               	movlw	0
  2115  00DC' 0100               	movlb	0	; () banked
  2116  00DE' 2100'              	addwfc	(receiveData@r+1)& (0+255),w,b
  2117  00E0' 6E00'              	movwf	(??_receiveData+1)& (0+255),c
  2118  00E2' 0102               	movlb	2	; () banked
  2119  00E4' 0E00'              	movlw	low _rx_buffer
  2120  00E6' 2420'              	addwf	??_receiveData,w,c
  2121  00E8' 6ED9               	movwf	fsr2l,c
  2122  00EA' 0102               	movlb	2	; () banked
  2123  00EC' 0E00'              	movlw	high _rx_buffer
  2124  00EE' 2021'              	addwfc	??_receiveData+1,w,c
  2125  00F0' 6EDA               	movwf	fsr2h,c
  2126  00F2' 50DF               	movf	indf2,w,c
  2127  00F4' 6E1B'              	movwf	_group,c
  2128                           
  2129                           ;FastTransfer.c: 151: group.parts[1] = rx_buffer[r + 2];
  2130  00F6' 0E02               	movlw	2
  2131  00F8' 0100               	movlb	0	; () banked
  2132  00FA' 2500'              	addwf	receiveData@r& (0+255),w,b
  2133  00FC' 6E00'              	movwf	??_receiveData& (0+255),c
  2134  00FE' 0E00               	movlw	0
  2135  0100' 0100               	movlb	0	; () banked
  2136  0102' 2100'              	addwfc	(receiveData@r+1)& (0+255),w,b
  2137  0104' 6E00'              	movwf	(??_receiveData+1)& (0+255),c
  2138  0106' 0102               	movlb	2	; () banked
  2139  0108' 0E00'              	movlw	low _rx_buffer
  2140  010A' 2420'              	addwf	??_receiveData,w,c
  2141  010C' 6ED9               	movwf	fsr2l,c
  2142  010E' 0102               	movlb	2	; () banked
  2143  0110' 0E00'              	movlw	high _rx_buffer
  2144  0112' 2021'              	addwfc	??_receiveData+1,w,c
  2145  0114' 6EDA               	movwf	fsr2h,c
  2146  0116' 50DF               	movf	indf2,w,c
  2147  0118' 6E1C'              	movwf	_group+1,c
  2148                           
  2149                           ; BSR set to: 2
  2150                           ;FastTransfer.c: 152: receiveArrayAddress[(rx_buffer[r])] = group.integer;
  2151  011A' 0102               	movlb	2	; () banked
  2152  011C' 0E00'              	movlw	low _rx_buffer
  2153  011E' 0100               	movlb	0	; () banked
  2154  0120' 2500'              	addwf	receiveData@r& (0+255),w,b
  2155  0122' 6ED9               	movwf	fsr2l,c
  2156  0124' 0102               	movlb	2	; () banked
  2157  0126' 0E00'              	movlw	high _rx_buffer
  2158  0128' 0100               	movlb	0	; () banked
  2159  012A' 2100'              	addwfc	(receiveData@r+1)& (0+255),w,b
  2160  012C' 6EDA               	movwf	fsr2h,c
  2161  012E' 50DF               	movf	indf2,w,c
  2162  0130' 6E00'              	movwf	??_receiveData& (0+255),c
  2163  0132' 5020'              	movf	??_receiveData,w,c
  2164  0134' 0D02               	mullw	2
  2165  0136' 50F3               	movf	prodl,w,c
  2166  0138' 2406'              	addwf	_receiveArrayAddress,w,c
  2167  013A' 6ED9               	movwf	fsr2l,c
  2168  013C' 50F4               	movf	prodh,w,c
  2169  013E' 2007'              	addwfc	_receiveArrayAddress+1,w,c
  2170  0140' 6EDA               	movwf	fsr2h,c
  2171  0142' C01B' FFDE         	movff	_group,postinc2
  2172  0146' C01C' FFDD         	movff	_group+1,postdec2
  2173                           
  2174                           ;FastTransfer.c: 153: } else {
  2175  014A' D003               	goto	l3393
  2176  014C'                    l3391:
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;FastTransfer.c: 154: dataAdressErrorCounter++;
  2180  014C' 0100               	movlb	0	; () banked
  2181  014E' 4B00'              	infsnz	_dataAdressErrorCounter& (0+255),f,b
  2182  0150' 2B00'              	incf	(_dataAdressErrorCounter+1)& (0+255),f,b
  2183  0152'                    l3393:
  2184                           
  2185                           ; BSR set to: 0
  2186  0152' 0E03               	movlw	3
  2187  0154' 0100               	movlb	0	; () banked
  2188  0156' 2500'              	addwf	receiveData@r& (0+255),w,b
  2189  0158' 0100               	movlb	0	; () banked
  2190  015A' 6F00'              	movwf	receiveData@r& (0+255),b
  2191  015C' 0E00               	movlw	0
  2192  015E' 0100               	movlb	0	; () banked
  2193  0160' 2100'              	addwfc	(receiveData@r+1)& (0+255),w,b
  2194  0162' 0100               	movlb	0	; () banked
  2195  0164' 6F00'              	movwf	(receiveData@r+1)& (0+255),b
  2196  0166'                    l3395:
  2197                           
  2198                           ; BSR set to: 0
  2199  0166' 5018'              	movf	_rx_len,w,c
  2200  0168' 6E00'              	movwf	??_receiveData& (0+255),c
  2201  016A' 6A00'              	clrf	(??_receiveData+1)& (0+255),c
  2202  016C' 0100               	movlb	0	; () banked
  2203  016E' 5100'              	movf	(receiveData@r+1)& (0+255),w,b
  2204  0170' 0A80               	xorlw	128
  2205  0172' 6E00'              	movwf	(??_receiveData+2)& (0+255),c
  2206  0174' 5020'              	movf	??_receiveData,w,c
  2207  0176' 0100               	movlb	0	; () banked
  2208  0178' 5D00'              	subwf	receiveData@r& (0+255),w,b
  2209  017A' 5021'              	movf	??_receiveData+1,w,c
  2210  017C' 0A80               	xorlw	128
  2211  017E' 5800'              	subwfb	(??_receiveData+2)& (0+255),w,c
  2212  0180' A0D8               	btfss	status,0,c
  2213  0182' D797               	goto	l3385
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;FastTransfer.c: 155: }
  2217                           ;FastTransfer.c: 156: }
  2218                           ;FastTransfer.c: 159: if (AKNAKsend) {
  2219                           
  2220                           ; BSR set to: 0
  2221  0184' 500A'              	movf	_AKNAKsend,w,c
  2222  0186' B4D8               	btfsc	status,2,c
  2223  0188' D027               	goto	l3407
  2224                           
  2225                           ; BSR set to: 0
  2226                           ;FastTransfer.c: 160: unsigned char holder[3];
  2227                           ;FastTransfer.c: 161: holder[0] = 255;
  2228  018A' 0100               	movlb	0	; () banked
  2229  018C' 6900'              	setf	receiveData@holder& (0+255),b
  2230                           
  2231                           ; BSR set to: 0
  2232                           ;FastTransfer.c: 162: holder[1] = 1;
  2233  018E' 0E01               	movlw	1
  2234  0190' 0100               	movlb	0	; () banked
  2235  0192' 6F00'              	movwf	(receiveData@holder+1)& (0+255),b
  2236                           
  2237                           ; BSR set to: 0
  2238                           ;FastTransfer.c: 163: holder[2] = rx_buffer[rx_array_inx - 1];
  2239  0194' 0EFF               	movlw	255
  2240  0196' 6E00'              	movwf	??_receiveData& (0+255),c
  2241  0198' 0EFF               	movlw	255
  2242  019A' 6E00'              	movwf	(??_receiveData+1)& (0+255),c
  2243  019C' 5017'              	movf	_rx_array_inx,w,c
  2244  019E' 6E00'              	movwf	(??_receiveData+2)& (0+255),c
  2245  01A0' 6A00'              	clrf	(??_receiveData+3)& (0+255),c
  2246  01A2' 5020'              	movf	??_receiveData,w,c
  2247  01A4' 2622'              	addwf	??_receiveData+2,f,c
  2248  01A6' 5021'              	movf	??_receiveData+1,w,c
  2249  01A8' 2223'              	addwfc	??_receiveData+3,f,c
  2250  01AA' 0102               	movlb	2	; () banked
  2251  01AC' 0E00'              	movlw	low _rx_buffer
  2252  01AE' 2422'              	addwf	??_receiveData+2,w,c
  2253  01B0' 6ED9               	movwf	fsr2l,c
  2254  01B2' 0102               	movlb	2	; () banked
  2255  01B4' 0E00'              	movlw	high _rx_buffer
  2256  01B6' 2023'              	addwfc	??_receiveData+3,w,c
  2257  01B8' 6EDA               	movwf	fsr2h,c
  2258  01BA' 50DF               	movf	indf2,w,c
  2259  01BC' 0100               	movlb	0	; () banked
  2260  01BE' 6F00'              	movwf	(receiveData@holder+2)& (0+255),b
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;FastTransfer.c: 173: serial_write(crcHolder);
  2264  01C0' 0100               	movlb	0	; () banked
  2265  01C2' 0E00'              	movlw	high receiveData@holder
  2266  01C4' 6E15'              	movwf	CRC8@data+1,c
  2267  01C6' 0100               	movlb	0	; () banked
  2268  01C8' 0E00'              	movlw	low receiveData@holder
  2269  01CA' 6E14'              	movwf	CRC8@data,c
  2270  01CC' 0E03               	movlw	3
  2271  01CE' 6E16'              	movwf	CRC8@len,c
  2272  01D0' EC00' F000'        	call	_CRC8	;wreg free
  2273  01D4' 0100               	movlb	0	; () banked
  2274  01D6' 6F00'              	movwf	receiveData@crcHolder& (0+255),b
  2275  01D8'                    l3407:
  2276                           
  2277                           ; BSR set to: 0
  2278                           ;FastTransfer.c: 174: }
  2279                           ;FastTransfer.c: 178: rx_len = 0;
  2280  01D8' 0E00               	movlw	0
  2281  01DA' 6E18'              	movwf	_rx_len,c
  2282                           
  2283                           ; BSR set to: 0
  2284                           ;FastTransfer.c: 179: rx_array_inx = 0;
  2285  01DC' 0E00               	movlw	0
  2286  01DE' 6E17'              	movwf	_rx_array_inx,c
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;FastTransfer.c: 180: return 1;
  2290  01E0' 0E01               	movlw	1
  2291  01E2' 0012               	return	
  2292  01E4'                    l3417:
  2293                           
  2294                           ;FastTransfer.c: 182: crcErrorCounter++;
  2295  01E4' 0100               	movlb	0	; () banked
  2296  01E6' 4B00'              	infsnz	_crcErrorCounter& (0+255),f,b
  2297  01E8' 2B00'              	incf	(_crcErrorCounter+1)& (0+255),f,b
  2298                           
  2299                           ; BSR set to: 0
  2300                           ;FastTransfer.c: 184: if (AKNAKsend) {
  2301  01EA' 500A'              	movf	_AKNAKsend,w,c
  2302  01EC' B4D8               	btfsc	status,2,c
  2303  01EE' D027               	goto	l3429
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;FastTransfer.c: 185: unsigned char holder[3];
  2307                           ;FastTransfer.c: 186: holder[0] = 255;
  2308  01F0' 0100               	movlb	0	; () banked
  2309  01F2' 6900'              	setf	receiveData@holder_1784& (0+255),b
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;FastTransfer.c: 187: holder[1] = 2;
  2313  01F4' 0E02               	movlw	2
  2314  01F6' 0100               	movlb	0	; () banked
  2315  01F8' 6F00'              	movwf	(receiveData@holder_1784+1)& (0+255),b
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;FastTransfer.c: 188: holder[2] = rx_buffer[rx_array_inx - 1];
  2319  01FA' 0EFF               	movlw	255
  2320  01FC' 6E00'              	movwf	??_receiveData& (0+255),c
  2321  01FE' 0EFF               	movlw	255
  2322  0200' 6E00'              	movwf	(??_receiveData+1)& (0+255),c
  2323  0202' 5017'              	movf	_rx_array_inx,w,c
  2324  0204' 6E00'              	movwf	(??_receiveData+2)& (0+255),c
  2325  0206' 6A00'              	clrf	(??_receiveData+3)& (0+255),c
  2326  0208' 5020'              	movf	??_receiveData,w,c
  2327  020A' 2622'              	addwf	??_receiveData+2,f,c
  2328  020C' 5021'              	movf	??_receiveData+1,w,c
  2329  020E' 2223'              	addwfc	??_receiveData+3,f,c
  2330  0210' 0102               	movlb	2	; () banked
  2331  0212' 0E00'              	movlw	low _rx_buffer
  2332  0214' 2422'              	addwf	??_receiveData+2,w,c
  2333  0216' 6ED9               	movwf	fsr2l,c
  2334  0218' 0102               	movlb	2	; () banked
  2335  021A' 0E00'              	movlw	high _rx_buffer
  2336  021C' 2023'              	addwfc	??_receiveData+3,w,c
  2337  021E' 6EDA               	movwf	fsr2h,c
  2338  0220' 50DF               	movf	indf2,w,c
  2339  0222' 0100               	movlb	0	; () banked
  2340  0224' 6F00'              	movwf	(receiveData@holder_1784+2)& (0+255),b
  2341                           
  2342                           ; BSR set to: 0
  2343                           ;FastTransfer.c: 198: serial_write(crcHolder);
  2344  0226' 0100               	movlb	0	; () banked
  2345  0228' 0E00'              	movlw	high receiveData@holder_1784
  2346  022A' 6E15'              	movwf	CRC8@data+1,c
  2347  022C' 0100               	movlb	0	; () banked
  2348  022E' 0E00'              	movlw	low receiveData@holder_1784
  2349  0230' 6E14'              	movwf	CRC8@data,c
  2350  0232' 0E03               	movlw	3
  2351  0234' 6E16'              	movwf	CRC8@len,c
  2352  0236' EC00' F000'        	call	_CRC8	;wreg free
  2353  023A' 0100               	movlb	0	; () banked
  2354  023C' 6F00'              	movwf	receiveData@crcHolder_1785& (0+255),b
  2355  023E'                    l3429:
  2356                           
  2357                           ; BSR set to: 0
  2358                           ;FastTransfer.c: 199: }
  2359                           ;FastTransfer.c: 202: rx_len = 0;
  2360  023E' 0E00               	movlw	0
  2361  0240' 6E18'              	movwf	_rx_len,c
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;FastTransfer.c: 203: rx_array_inx = 0;
  2365  0242' 0E00               	movlw	0
  2366  0244' 6E17'              	movwf	_rx_array_inx,c
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;FastTransfer.c: 204: return 0;
  2370  0246' 0E00               	movlw	0
  2371  0248' 0012               	return	
  2372  024A'                    l3437:
  2373                           
  2374                           ;FastTransfer.c: 205: }
  2375                           ;FastTransfer.c: 206: }
  2376                           ;FastTransfer.c: 207: }
  2377                           ;FastTransfer.c: 210: return 0;
  2378  024A' 0E00               	movlw	0
  2379  024C' 0012               	return	
  2380  024E'                    __end_of_receiveData:
  2381                           	opt stack 0
  2382                           tblptru	equ	0xFF8
  2383                           prodh	equ	0xFF4
  2384                           prodl	equ	0xFF3
  2385                           intcon	equ	0xFF2
  2386                           postinc0	equ	0xFEE
  2387                           wreg	equ	0xFE8
  2388                           indf2	equ	0xFDF
  2389                           postinc2	equ	0xFDE
  2390                           postdec2	equ	0xFDD
  2391                           fsr2h	equ	0xFDA
  2392                           fsr2l	equ	0xFD9
  2393                           status	equ	0xFD8
  2394                           
  2395 ;; *************** function _CRCcheck *****************
  2396 ;; Defined at:
  2397 ;;		line 373 in file "FastTransfer.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;		None
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;  rt              2    5[BANK0 ] int 
  2402 ;;  arrayHolder     3    2[BANK0 ] unsigned char [3]
  2403 ;;  calculatedCR    1    1[BANK0 ] unsigned char 
  2404 ;;  SentCRC         1    0[BANK0 ] unsigned char 
  2405 ;; Return value:  Size  Location     Type
  2406 ;;		None               void
  2407 ;; Registers used:
  2408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2414 ;;      Params:         0       0       0       0       0       0       0
  2415 ;;      Locals:         0       7       0       0       0       0       0
  2416 ;;      Temps:          0       0       0       0       0       0       0
  2417 ;;      Totals:         0       7       0       0       0       0       0
  2418 ;;Total ram usage:        7 bytes
  2419 ;; Hardware stack levels used:    1
  2420 ;; Hardware stack levels required when called:    4
  2421 ;; This function calls:
  2422 ;;		_CRC8
  2423 ;;		_crcBufS_get
  2424 ;;		_crcBufS_status_put
  2425 ;; This function is called by:
  2426 ;;		_receiveData
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text13
  2431  0000'                    __ptext13:
  2432                           	opt stack 0
  2433  0000'                    _CRCcheck:
  2434                           	opt stack 24
  2435  0000'                    l741:
  2436  0000' D7FF               	goto	l741
  2437  0002'                    l3307:
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;FastTransfer.c: 389: if (returnAddress == crcBufS_get(&crc_buffer, rt, 0)) {
  2441  0002' 0100               	movlb	0	; () banked
  2442  0004' 0E00'              	movlw	high _crc_buffer
  2443  0006' 6E15'              	movwf	crcBufS_get@_this+1,c
  2444  0008' 0100               	movlb	0	; () banked
  2445  000A' 0E00'              	movlw	low _crc_buffer
  2446  000C' 6E14'              	movwf	crcBufS_get@_this,c
  2447  000E' C005' F016'        	movff	CRCcheck@rt,crcBufS_get@time
  2448  0012' 0E00               	movlw	0
  2449  0014' 6E17'              	movwf	crcBufS_get@space,c
  2450  0016' EC00' F000'        	call	_crcBufS_get	;wreg free
  2451  001A' 1815'              	xorwf	_returnAddress,w,c
  2452  001C' A4D8               	btfss	status,2,c
  2453  001E' D033               	goto	l3321
  2454                           
  2455                           ;FastTransfer.c: 390: if (arrayHolder[2] == crcBufS_get(&crc_buffer, rt, 1)) {
  2456  0020' 0100               	movlb	0	; () banked
  2457  0022' 0E00'              	movlw	high _crc_buffer
  2458  0024' 6E15'              	movwf	crcBufS_get@_this+1,c
  2459  0026' 0100               	movlb	0	; () banked
  2460  0028' 0E00'              	movlw	low _crc_buffer
  2461  002A' 6E14'              	movwf	crcBufS_get@_this,c
  2462  002C' C005' F016'        	movff	CRCcheck@rt,crcBufS_get@time
  2463  0030' 0E01               	movlw	1
  2464  0032' 6E17'              	movwf	crcBufS_get@space,c
  2465  0034' EC00' F000'        	call	_crcBufS_get	;wreg free
  2466  0038' 0100               	movlb	0	; () banked
  2467  003A' 1900'              	xorwf	(CRCcheck@arrayHolder+2)& (0+255),w,b
  2468  003C' A4D8               	btfss	status,2,c
  2469  003E' D023               	goto	l3321
  2470                           
  2471                           ; BSR set to: 0
  2472                           ;FastTransfer.c: 391: if (arrayHolder[1] == 1) {
  2473  0040' 0100               	movlb	0	; () banked
  2474  0042' 0500'              	decf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  2475  0044' A4D8               	btfss	status,2,c
  2476  0046' D00D               	goto	l3317
  2477                           
  2478                           ; BSR set to: 0
  2479                           ;FastTransfer.c: 392: crcBufS_status_put(&crc_buffer, rt, 1);
  2480  0048' 0100               	movlb	0	; () banked
  2481  004A' 0E00'              	movlw	high _crc_buffer
  2482  004C' 6E15'              	movwf	crcBufS_status_put@_this+1,c
  2483  004E' 0100               	movlb	0	; () banked
  2484  0050' 0E00'              	movlw	low _crc_buffer
  2485  0052' 6E14'              	movwf	crcBufS_status_put@_this,c
  2486  0054' C005' F016'        	movff	CRCcheck@rt,crcBufS_status_put@time
  2487  0058' 0E01               	movlw	1
  2488  005A' 6E17'              	movwf	crcBufS_status_put@status,c
  2489  005C' EC00' F000'        	call	_crcBufS_status_put	;wreg free
  2490                           
  2491                           ;FastTransfer.c: 393: break;
  2492  0060' 0012               	return	
  2493  0062'                    l3317:
  2494  0062' 0100               	movlb	0	; () banked
  2495  0064' 5100'              	movf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  2496  0066' 0A02               	xorlw	2
  2497  0068' A4D8               	btfss	status,2,c
  2498  006A' D00D               	goto	l3321
  2499                           
  2500                           ; BSR set to: 0
  2501                           ;FastTransfer.c: 395: crcBufS_status_put(&crc_buffer, rt, 2);
  2502  006C' 0100               	movlb	0	; () banked
  2503  006E' 0E00'              	movlw	high _crc_buffer
  2504  0070' 6E15'              	movwf	crcBufS_status_put@_this+1,c
  2505  0072' 0100               	movlb	0	; () banked
  2506  0074' 0E00'              	movlw	low _crc_buffer
  2507  0076' 6E14'              	movwf	crcBufS_status_put@_this,c
  2508  0078' C005' F016'        	movff	CRCcheck@rt,crcBufS_status_put@time
  2509  007C' 0E02               	movlw	2
  2510  007E' 6E17'              	movwf	crcBufS_status_put@status,c
  2511  0080' EC00' F000'        	call	_crcBufS_status_put	;wreg free
  2512                           
  2513                           ;FastTransfer.c: 396: break;
  2514  0084' 0012               	return	
  2515  0086'                    l3321:
  2516  0086' 0100               	movlb	0	; () banked
  2517  0088' 4B00'              	infsnz	CRCcheck@rt& (0+255),f,b
  2518  008A' 2B00'              	incf	(CRCcheck@rt+1)& (0+255),f,b
  2519                           
  2520                           ; BSR set to: 0
  2521  008C' 0100               	movlb	0	; () banked
  2522  008E' 5100'              	movf	(CRCcheck@rt+1)& (0+255),w,b
  2523  0090' 0A80               	xorlw	128
  2524  0092' 0F80               	addlw	-128
  2525  0094' 0E05               	movlw	5
  2526  0096' B4D8               	btfsc	status,2,c
  2527  0098' 5D00'              	subwf	CRCcheck@rt& (0+255),w,b
  2528  009A' B0D8               	btfsc	status,0,c
  2529                           
  2530                           ; BSR set to: 0
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;FastTransfer.c: 402: crcErrorCounter++;
  2534                           
  2535                           ; BSR set to: 0
  2536                           
  2537                           ; BSR set to: 0
  2538                           ;FastTransfer.c: 397: }
  2539                           ;FastTransfer.c: 398: }
  2540                           ;FastTransfer.c: 399: }
  2541                           ;FastTransfer.c: 400: }
  2542                           ;FastTransfer.c: 401: } else {
  2543  009C' 0012               	return	
  2544  009E' D7B1               	goto	l3307
  2545  00A0'                    __end_of_CRCcheck:
  2546                           	opt stack 0
  2547                           tblptru	equ	0xFF8
  2548                           prodh	equ	0xFF4
  2549                           prodl	equ	0xFF3
  2550                           intcon	equ	0xFF2
  2551                           postinc0	equ	0xFEE
  2552                           wreg	equ	0xFE8
  2553                           indf2	equ	0xFDF
  2554                           postinc2	equ	0xFDE
  2555                           postdec2	equ	0xFDD
  2556                           fsr2h	equ	0xFDA
  2557                           fsr2l	equ	0xFD9
  2558                           status	equ	0xFD8
  2559                           
  2560 ;; *************** function _crcBufS_status_put *****************
  2561 ;; Defined at:
  2562 ;;		line 336 in file "FastTransfer.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  _this           2   20[COMRAM] PTR struct crcBufS
  2565 ;;		 -> crc_buffer(17), 
  2566 ;;  time            1   22[COMRAM] unsigned char 
  2567 ;;  status          1   23[COMRAM] unsigned char 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  wantedTime      2   28[COMRAM] int 
  2570 ;; Return value:  Size  Location     Type
  2571 ;;		None               void
  2572 ;; Registers used:
  2573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2579 ;;      Params:         4       0       0       0       0       0       0
  2580 ;;      Locals:         2       0       0       0       0       0       0
  2581 ;;      Temps:          4       0       0       0       0       0       0
  2582 ;;      Totals:        10       0       0       0       0       0       0
  2583 ;;Total ram usage:       10 bytes
  2584 ;; Hardware stack levels used:    1
  2585 ;; Hardware stack levels required when called:    3
  2586 ;; This function calls:
  2587 ;;		Nothing
  2588 ;; This function is called by:
  2589 ;;		_CRCcheck
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           	psect	text14
  2594  0000'                    __ptext14:
  2595                           	opt stack 0
  2596  0000'                    _crcBufS_status_put:
  2597                           	opt stack 24
  2598                           
  2599                           ;FastTransfer.c: 337: if (time >= 5) {
  2600                           
  2601                           ;incstack = 0
  2602  0000' 0E04               	movlw	4
  2603  0002' 6416'              	cpfsgt	crcBufS_status_put@time,c
  2604  0004' D002               	goto	l3273
  2605                           
  2606                           ;FastTransfer.c: 338: time = 5 - 1;
  2607  0006' 0E04               	movlw	4
  2608  0008' 6E16'              	movwf	crcBufS_status_put@time,c
  2609  000A'                    l3273:
  2610                           
  2611                           ;FastTransfer.c: 339: }
  2612                           ;FastTransfer.c: 340: time = time + 1;
  2613  000A' 2816'              	incf	crcBufS_status_put@time,w,c
  2614  000C' 6E16'              	movwf	crcBufS_status_put@time,c
  2615                           
  2616                           ;FastTransfer.c: 341: int wantedTime = time * 3;
  2617  000E' 5016'              	movf	crcBufS_status_put@time,w,c
  2618  0010' 0D03               	mullw	3
  2619  0012' CFF3 F01C'         	movff	prodl,crcBufS_status_put@wantedTime
  2620  0016' CFF4 F01D'         	movff	prodh,crcBufS_status_put@wantedTime+1
  2621                           
  2622                           ;FastTransfer.c: 342: if (wantedTime > _this->head) {
  2623  001A' EE20 F00F          	lfsr	2,15
  2624  001E' 5014'              	movf	crcBufS_status_put@_this,w,c
  2625  0020' 26D9               	addwf	fsr2l,f,c
  2626  0022' 5015'              	movf	crcBufS_status_put@_this+1,w,c
  2627  0024' 22DA               	addwfc	fsr2h,f,c
  2628  0026' CFDE F018'         	movff	postinc2,??_crcBufS_status_put
  2629  002A' CFDD F019'         	movff	postdec2,??_crcBufS_status_put+1
  2630  002E' 5019'              	movf	??_crcBufS_status_put+1,w,c
  2631  0030' 0A80               	xorlw	128
  2632  0032' 6E00'              	movwf	(??_crcBufS_status_put+2)& (0+255),c
  2633  0034' 501C'              	movf	crcBufS_status_put@wantedTime,w,c
  2634  0036' 5C18'              	subwf	??_crcBufS_status_put,w,c
  2635  0038' 501D'              	movf	crcBufS_status_put@wantedTime+1,w,c
  2636  003A' 0A80               	xorlw	128
  2637  003C' 5800'              	subwfb	(??_crcBufS_status_put+2)& (0+255),w,c
  2638  003E' B0D8               	btfsc	status,0,c
  2639  0040' D02B               	goto	l3281
  2640                           
  2641                           ;FastTransfer.c: 343: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  2642  0042' EE20 F00F          	lfsr	2,15
  2643  0046' 5014'              	movf	crcBufS_status_put@_this,w,c
  2644  0048' 26D9               	addwf	fsr2l,f,c
  2645  004A' 5015'              	movf	crcBufS_status_put@_this+1,w,c
  2646  004C' 22DA               	addwfc	fsr2h,f,c
  2647  004E' CFDE F018'         	movff	postinc2,??_crcBufS_status_put
  2648  0052' CFDD F019'         	movff	postdec2,??_crcBufS_status_put+1
  2649  0056' 1E18'              	comf	??_crcBufS_status_put,f,c
  2650  0058' 1E19'              	comf	??_crcBufS_status_put+1,f,c
  2651  005A' 4A18'              	infsnz	??_crcBufS_status_put,f,c
  2652  005C' 2A19'              	incf	??_crcBufS_status_put+1,f,c
  2653  005E' 501C'              	movf	crcBufS_status_put@wantedTime,w,c
  2654  0060' 2618'              	addwf	??_crcBufS_status_put,f,c
  2655  0062' 501D'              	movf	crcBufS_status_put@wantedTime+1,w,c
  2656  0064' 2219'              	addwfc	??_crcBufS_status_put+1,f,c
  2657  0066' 1E18'              	comf	??_crcBufS_status_put,f,c
  2658  0068' 1E19'              	comf	??_crcBufS_status_put+1,f,c
  2659  006A' 4A18'              	infsnz	??_crcBufS_status_put,f,c
  2660  006C' 2A19'              	incf	??_crcBufS_status_put+1,f,c
  2661  006E' 0E0F               	movlw	15
  2662  0070' 2418'              	addwf	??_crcBufS_status_put,w,c
  2663  0072' 6E1C'              	movwf	crcBufS_status_put@wantedTime,c
  2664  0074' 0E00               	movlw	0
  2665  0076' 2019'              	addwfc	??_crcBufS_status_put+1,w,c
  2666  0078' 6E1D'              	movwf	crcBufS_status_put@wantedTime+1,c
  2667                           
  2668                           ;FastTransfer.c: 344: _this->buf[(wantedTime + 2)] = status;
  2669  007A' 0E02               	movlw	2
  2670  007C' 241C'              	addwf	crcBufS_status_put@wantedTime,w,c
  2671  007E' 6E00'              	movwf	??_crcBufS_status_put& (0+255),c
  2672  0080' 0E00               	movlw	0
  2673  0082' 201D'              	addwfc	crcBufS_status_put@wantedTime+1,w,c
  2674  0084' 6E00'              	movwf	(??_crcBufS_status_put+1)& (0+255),c
  2675  0086' 5018'              	movf	??_crcBufS_status_put,w,c
  2676  0088' 2414'              	addwf	crcBufS_status_put@_this,w,c
  2677  008A' 6ED9               	movwf	fsr2l,c
  2678  008C' 5019'              	movf	??_crcBufS_status_put+1,w,c
  2679  008E' 2015'              	addwfc	crcBufS_status_put@_this+1,w,c
  2680  0090' 6EDA               	movwf	fsr2h,c
  2681  0092' C017' FFDF         	movff	crcBufS_status_put@status,indf2
  2682                           
  2683                           ;FastTransfer.c: 345: } else {
  2684  0096' 0012               	return	
  2685  0098'                    l3281:
  2686                           
  2687                           ;FastTransfer.c: 346: _this->buf[(_this->head - wantedTime) + 2] = status;
  2688  0098' EE20 F00F          	lfsr	2,15
  2689  009C' 5014'              	movf	crcBufS_status_put@_this,w,c
  2690  009E' 26D9               	addwf	fsr2l,f,c
  2691  00A0' 5015'              	movf	crcBufS_status_put@_this+1,w,c
  2692  00A2' 22DA               	addwfc	fsr2h,f,c
  2693  00A4' CFDE F018'         	movff	postinc2,??_crcBufS_status_put
  2694  00A8' CFDD F019'         	movff	postdec2,??_crcBufS_status_put+1
  2695  00AC' C01C' F01A'        	movff	crcBufS_status_put@wantedTime,??_crcBufS_status_put+2
  2696  00B0' C01D' F01B'        	movff	crcBufS_status_put@wantedTime+1,??_crcBufS_status_put+3
  2697  00B4' 1E1A'              	comf	??_crcBufS_status_put+2,f,c
  2698  00B6' 1E1B'              	comf	??_crcBufS_status_put+3,f,c
  2699  00B8' 4A1A'              	infsnz	??_crcBufS_status_put+2,f,c
  2700  00BA' 2A1B'              	incf	??_crcBufS_status_put+3,f,c
  2701  00BC' 5018'              	movf	??_crcBufS_status_put,w,c
  2702  00BE' 261A'              	addwf	??_crcBufS_status_put+2,f,c
  2703  00C0' 5019'              	movf	??_crcBufS_status_put+1,w,c
  2704  00C2' 221B'              	addwfc	??_crcBufS_status_put+3,f,c
  2705  00C4' 0E02               	movlw	2
  2706  00C6' 261A'              	addwf	??_crcBufS_status_put+2,f,c
  2707  00C8' 0E00               	movlw	0
  2708  00CA' 221B'              	addwfc	??_crcBufS_status_put+3,f,c
  2709  00CC' 501A'              	movf	??_crcBufS_status_put+2,w,c
  2710  00CE' 2414'              	addwf	crcBufS_status_put@_this,w,c
  2711  00D0' 6ED9               	movwf	fsr2l,c
  2712  00D2' 501B'              	movf	??_crcBufS_status_put+3,w,c
  2713  00D4' 2015'              	addwfc	crcBufS_status_put@_this+1,w,c
  2714  00D6' 6EDA               	movwf	fsr2h,c
  2715  00D8' C017' FFDF         	movff	crcBufS_status_put@status,indf2
  2716  00DC' 0012               	return	
  2717  00DE'                    __end_of_crcBufS_status_put:
  2718                           	opt stack 0
  2719                           tblptru	equ	0xFF8
  2720                           prodh	equ	0xFF4
  2721                           prodl	equ	0xFF3
  2722                           intcon	equ	0xFF2
  2723                           postinc0	equ	0xFEE
  2724                           wreg	equ	0xFE8
  2725                           indf2	equ	0xFDF
  2726                           postinc2	equ	0xFDE
  2727                           postdec2	equ	0xFDD
  2728                           fsr2h	equ	0xFDA
  2729                           fsr2l	equ	0xFD9
  2730                           status	equ	0xFD8
  2731                           
  2732 ;; *************** function _crcBufS_get *****************
  2733 ;; Defined at:
  2734 ;;		line 353 in file "FastTransfer.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;  _this           2   20[COMRAM] PTR struct crcBufS
  2737 ;;		 -> crc_buffer(17), 
  2738 ;;  time            1   22[COMRAM] unsigned char 
  2739 ;;  space           1   23[COMRAM] unsigned char 
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  wantedTime      2   30[COMRAM] int 
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  1    wreg      unsigned char 
  2744 ;; Registers used:
  2745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2751 ;;      Params:         4       0       0       0       0       0       0
  2752 ;;      Locals:         2       0       0       0       0       0       0
  2753 ;;      Temps:          6       0       0       0       0       0       0
  2754 ;;      Totals:        12       0       0       0       0       0       0
  2755 ;;Total ram usage:       12 bytes
  2756 ;; Hardware stack levels used:    1
  2757 ;; Hardware stack levels required when called:    3
  2758 ;; This function calls:
  2759 ;;		Nothing
  2760 ;; This function is called by:
  2761 ;;		_CRCcheck
  2762 ;;		_AKNAK
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           	psect	text15
  2767  0000'                    __ptext15:
  2768                           	opt stack 0
  2769  0000'                    _crcBufS_get:
  2770                           	opt stack 24
  2771                           
  2772                           ;FastTransfer.c: 354: if (time >= 5) {
  2773                           
  2774                           ;incstack = 0
  2775  0000' 0E04               	movlw	4
  2776  0002' 6416'              	cpfsgt	crcBufS_get@time,c
  2777  0004' D002               	goto	l3249
  2778                           
  2779                           ;FastTransfer.c: 355: time = 5 - 1;
  2780  0006' 0E04               	movlw	4
  2781  0008' 6E16'              	movwf	crcBufS_get@time,c
  2782  000A'                    l3249:
  2783                           
  2784                           ;FastTransfer.c: 356: }
  2785                           ;FastTransfer.c: 357: if (space >= 3) {
  2786  000A' 0E02               	movlw	2
  2787  000C' 6417'              	cpfsgt	crcBufS_get@space,c
  2788  000E' D002               	goto	l3253
  2789                           
  2790                           ;FastTransfer.c: 358: space = 3 - 1;
  2791  0010' 0E02               	movlw	2
  2792  0012' 6E17'              	movwf	crcBufS_get@space,c
  2793  0014'                    l3253:
  2794                           
  2795                           ;FastTransfer.c: 359: }
  2796                           ;FastTransfer.c: 360: time = time + 1;
  2797  0014' 2816'              	incf	crcBufS_get@time,w,c
  2798  0016' 6E16'              	movwf	crcBufS_get@time,c
  2799                           
  2800                           ;FastTransfer.c: 361: int wantedTime = time * 3;
  2801  0018' 5016'              	movf	crcBufS_get@time,w,c
  2802  001A' 0D03               	mullw	3
  2803  001C' CFF3 F01E'         	movff	prodl,crcBufS_get@wantedTime
  2804  0020' CFF4 F01F'         	movff	prodh,crcBufS_get@wantedTime+1
  2805                           
  2806                           ;FastTransfer.c: 362: if (wantedTime > _this->head) {
  2807  0024' EE20 F00F          	lfsr	2,15
  2808  0028' 5014'              	movf	crcBufS_get@_this,w,c
  2809  002A' 26D9               	addwf	fsr2l,f,c
  2810  002C' 5015'              	movf	crcBufS_get@_this+1,w,c
  2811  002E' 22DA               	addwfc	fsr2h,f,c
  2812  0030' CFDE F018'         	movff	postinc2,??_crcBufS_get
  2813  0034' CFDD F019'         	movff	postdec2,??_crcBufS_get+1
  2814  0038' 5019'              	movf	??_crcBufS_get+1,w,c
  2815  003A' 0A80               	xorlw	128
  2816  003C' 6E00'              	movwf	(??_crcBufS_get+2)& (0+255),c
  2817  003E' 501E'              	movf	crcBufS_get@wantedTime,w,c
  2818  0040' 5C18'              	subwf	??_crcBufS_get,w,c
  2819  0042' 501F'              	movf	crcBufS_get@wantedTime+1,w,c
  2820  0044' 0A80               	xorlw	128
  2821  0046' 5800'              	subwfb	(??_crcBufS_get+2)& (0+255),w,c
  2822  0048' B0D8               	btfsc	status,0,c
  2823  004A' D02A               	goto	l3265
  2824                           
  2825                           ;FastTransfer.c: 363: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  2826  004C' EE20 F00F          	lfsr	2,15
  2827  0050' 5014'              	movf	crcBufS_get@_this,w,c
  2828  0052' 26D9               	addwf	fsr2l,f,c
  2829  0054' 5015'              	movf	crcBufS_get@_this+1,w,c
  2830  0056' 22DA               	addwfc	fsr2h,f,c
  2831  0058' CFDE F018'         	movff	postinc2,??_crcBufS_get
  2832  005C' CFDD F019'         	movff	postdec2,??_crcBufS_get+1
  2833  0060' 1E18'              	comf	??_crcBufS_get,f,c
  2834  0062' 1E19'              	comf	??_crcBufS_get+1,f,c
  2835  0064' 4A18'              	infsnz	??_crcBufS_get,f,c
  2836  0066' 2A19'              	incf	??_crcBufS_get+1,f,c
  2837  0068' 501E'              	movf	crcBufS_get@wantedTime,w,c
  2838  006A' 2618'              	addwf	??_crcBufS_get,f,c
  2839  006C' 501F'              	movf	crcBufS_get@wantedTime+1,w,c
  2840  006E' 2219'              	addwfc	??_crcBufS_get+1,f,c
  2841  0070' 1E18'              	comf	??_crcBufS_get,f,c
  2842  0072' 1E19'              	comf	??_crcBufS_get+1,f,c
  2843  0074' 4A18'              	infsnz	??_crcBufS_get,f,c
  2844  0076' 2A19'              	incf	??_crcBufS_get+1,f,c
  2845  0078' 0E0F               	movlw	15
  2846  007A' 2418'              	addwf	??_crcBufS_get,w,c
  2847  007C' 6E1E'              	movwf	crcBufS_get@wantedTime,c
  2848  007E' 0E00               	movlw	0
  2849  0080' 2019'              	addwfc	??_crcBufS_get+1,w,c
  2850  0082' 6E1F'              	movwf	crcBufS_get@wantedTime+1,c
  2851                           
  2852                           ;FastTransfer.c: 364: return (_this->buf[(wantedTime + space)]);
  2853  0084' 5017'              	movf	crcBufS_get@space,w,c
  2854  0086' 241E'              	addwf	crcBufS_get@wantedTime,w,c
  2855  0088' 6E00'              	movwf	??_crcBufS_get& (0+255),c
  2856  008A' 0E00               	movlw	0
  2857  008C' 201F'              	addwfc	crcBufS_get@wantedTime+1,w,c
  2858  008E' 6E00'              	movwf	(??_crcBufS_get+1)& (0+255),c
  2859  0090' 5018'              	movf	??_crcBufS_get,w,c
  2860  0092' 2414'              	addwf	crcBufS_get@_this,w,c
  2861  0094' 6ED9               	movwf	fsr2l,c
  2862  0096' 5019'              	movf	??_crcBufS_get+1,w,c
  2863  0098' 2015'              	addwfc	crcBufS_get@_this+1,w,c
  2864  009A' 6EDA               	movwf	fsr2h,c
  2865  009C' 50DF               	movf	indf2,w,c
  2866  009E' 0012               	return	
  2867  00A0'                    l3265:
  2868                           
  2869                           ;FastTransfer.c: 366: return (_this->buf[(_this->head - wantedTime) + space]);
  2870  00A0' EE20 F00F          	lfsr	2,15
  2871  00A4' 5014'              	movf	crcBufS_get@_this,w,c
  2872  00A6' 26D9               	addwf	fsr2l,f,c
  2873  00A8' 5015'              	movf	crcBufS_get@_this+1,w,c
  2874  00AA' 22DA               	addwfc	fsr2h,f,c
  2875  00AC' CFDE F018'         	movff	postinc2,??_crcBufS_get
  2876  00B0' CFDD F019'         	movff	postdec2,??_crcBufS_get+1
  2877  00B4' C01E' F01A'        	movff	crcBufS_get@wantedTime,??_crcBufS_get+2
  2878  00B8' C01F' F01B'        	movff	crcBufS_get@wantedTime+1,??_crcBufS_get+3
  2879  00BC' 1E1A'              	comf	??_crcBufS_get+2,f,c
  2880  00BE' 1E1B'              	comf	??_crcBufS_get+3,f,c
  2881  00C0' 4A1A'              	infsnz	??_crcBufS_get+2,f,c
  2882  00C2' 2A1B'              	incf	??_crcBufS_get+3,f,c
  2883  00C4' 5017'              	movf	crcBufS_get@space,w,c
  2884  00C6' 6E00'              	movwf	(??_crcBufS_get+4)& (0+255),c
  2885  00C8' 6A00'              	clrf	(??_crcBufS_get+5)& (0+255),c
  2886  00CA' 501A'              	movf	??_crcBufS_get+2,w,c
  2887  00CC' 261C'              	addwf	??_crcBufS_get+4,f,c
  2888  00CE' 501B'              	movf	??_crcBufS_get+3,w,c
  2889  00D0' 221D'              	addwfc	??_crcBufS_get+5,f,c
  2890  00D2' 5018'              	movf	??_crcBufS_get,w,c
  2891  00D4' 261C'              	addwf	??_crcBufS_get+4,f,c
  2892  00D6' 5019'              	movf	??_crcBufS_get+1,w,c
  2893  00D8' 221D'              	addwfc	??_crcBufS_get+5,f,c
  2894  00DA' 501C'              	movf	??_crcBufS_get+4,w,c
  2895  00DC' 2414'              	addwf	crcBufS_get@_this,w,c
  2896  00DE' 6ED9               	movwf	fsr2l,c
  2897  00E0' 501D'              	movf	??_crcBufS_get+5,w,c
  2898  00E2' 2015'              	addwfc	crcBufS_get@_this+1,w,c
  2899  00E4' 6EDA               	movwf	fsr2h,c
  2900  00E6' 50DF               	movf	indf2,w,c
  2901  00E8' 0012               	return	
  2902  00EA'                    __end_of_crcBufS_get:
  2903                           	opt stack 0
  2904                           tblptru	equ	0xFF8
  2905                           prodh	equ	0xFF4
  2906                           prodl	equ	0xFF3
  2907                           intcon	equ	0xFF2
  2908                           postinc0	equ	0xFEE
  2909                           wreg	equ	0xFE8
  2910                           indf2	equ	0xFDF
  2911                           postinc2	equ	0xFDE
  2912                           postdec2	equ	0xFDD
  2913                           fsr2h	equ	0xFDA
  2914                           fsr2l	equ	0xFD9
  2915                           status	equ	0xFD8
  2916                           
  2917 ;; *************** function _CRC8 *****************
  2918 ;; Defined at:
  2919 ;;		line 34 in file "FastTransfer.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;  data            2   20[COMRAM] PTR const unsigned char 
  2922 ;;		 -> CRCcheck@arrayHolder(3), receiveData@holder_1784(3), receiveData@holder(3), rx_buffer(200), 
  2923 ;;		 -> ring_buffer(206), NULL(0), 
  2924 ;;  len             1   22[COMRAM] unsigned char 
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;  sum             1   23[COMRAM] unsigned char 
  2927 ;;  tempI           1   25[COMRAM] unsigned char 
  2928 ;;  extract         1   24[COMRAM] unsigned char 
  2929 ;;  crc             1   26[COMRAM] unsigned char 
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  1    wreg      unsigned char 
  2932 ;; Registers used:
  2933 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2939 ;;      Params:         3       0       0       0       0       0       0
  2940 ;;      Locals:         4       0       0       0       0       0       0
  2941 ;;      Temps:          0       0       0       0       0       0       0
  2942 ;;      Totals:         7       0       0       0       0       0       0
  2943 ;;Total ram usage:        7 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; Hardware stack levels required when called:    3
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_sendData
  2950 ;;		_receiveData
  2951 ;;		_CRCcheck
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           	psect	text16
  2956  0000'                    __ptext16:
  2957                           	opt stack 0
  2958  0000'                    _CRC8:
  2959                           	opt stack 24
  2960                           
  2961                           ;FastTransfer.c: 35: unsigned char crc = 0x00;
  2962                           
  2963                           ;incstack = 0
  2964  0000' 0E00               	movlw	0
  2965  0002' 6E1A'              	movwf	CRC8@crc,c
  2966                           
  2967                           ;FastTransfer.c: 36: while (len--) {
  2968  0004' D01B               	goto	l3229
  2969  0006'                    l3213:
  2970                           
  2971                           ;FastTransfer.c: 37: unsigned char extract = *data++;
  2972  0006' C014' FFD9         	movff	CRC8@data,fsr2l
  2973  000A' C015' FFDA         	movff	CRC8@data+1,fsr2h
  2974  000E' 50DF               	movf	indf2,w,c
  2975  0010' 6E18'              	movwf	CRC8@extract,c
  2976  0012' 4A14'              	infsnz	CRC8@data,f,c
  2977  0014' 2A15'              	incf	CRC8@data+1,f,c
  2978                           
  2979                           ;FastTransfer.c: 38: unsigned char tempI;
  2980                           ;FastTransfer.c: 39: for (tempI = 8; tempI; tempI--) {
  2981  0016' 0E08               	movlw	8
  2982  0018' 6E19'              	movwf	CRC8@tempI,c
  2983  001A' D00E               	goto	l3227
  2984  001C'                    l3219:
  2985                           
  2986                           ;FastTransfer.c: 40: unsigned char sum = (crc ^ extract) & 0x01;
  2987  001C' 501A'              	movf	CRC8@crc,w,c
  2988  001E' 1818'              	xorwf	CRC8@extract,w,c
  2989  0020' 0B01               	andlw	1
  2990  0022' 6E17'              	movwf	CRC8@sum,c
  2991                           
  2992                           ;FastTransfer.c: 41: crc >>= 1;
  2993  0024' 90D8               	bcf	status,0,c
  2994  0026' 321A'              	rrcf	CRC8@crc,f,c
  2995                           
  2996                           ;FastTransfer.c: 42: if (sum) {
  2997  0028' 5017'              	movf	CRC8@sum,w,c
  2998  002A' B4D8               	btfsc	status,2,c
  2999  002C' D002               	goto	l638
  3000                           
  3001                           ;FastTransfer.c: 43: crc ^= 0x8C;
  3002  002E' 0E8C               	movlw	140
  3003  0030' 1A1A'              	xorwf	CRC8@crc,f,c
  3004  0032'                    l638:
  3005                           
  3006                           ;FastTransfer.c: 44: }
  3007                           ;FastTransfer.c: 45: extract >>= 1;
  3008  0032' 90D8               	bcf	status,0,c
  3009  0034' 3218'              	rrcf	CRC8@extract,f,c
  3010  0036' 0619'              	decf	CRC8@tempI,f,c
  3011  0038'                    l3227:
  3012  0038' 6619'              	tstfsz	CRC8@tempI,c
  3013  003A' D7F0               	goto	l3219
  3014  003C'                    l3229:
  3015  003C' 0616'              	decf	CRC8@len,f,c
  3016  003E' 2800'              	incf	CRC8@len& (0+255),w,c
  3017  0040' A4D8               	btfss	status,2,c
  3018  0042' D7E1               	goto	l3213
  3019                           
  3020                           ;FastTransfer.c: 46: }
  3021                           ;FastTransfer.c: 47: }
  3022                           ;FastTransfer.c: 48: return crc;
  3023  0044' 501A'              	movf	CRC8@crc,w,c
  3024  0046' 0012               	return	
  3025  0048'                    __end_of_CRC8:
  3026                           	opt stack 0
  3027                           tblptru	equ	0xFF8
  3028                           prodh	equ	0xFF4
  3029                           prodl	equ	0xFF3
  3030                           intcon	equ	0xFF2
  3031                           postinc0	equ	0xFEE
  3032                           wreg	equ	0xFE8
  3033                           indf2	equ	0xFDF
  3034                           postinc2	equ	0xFDE
  3035                           postdec2	equ	0xFDD
  3036                           fsr2h	equ	0xFDA
  3037                           fsr2l	equ	0xFD9
  3038                           status	equ	0xFD8
  3039                           
  3040 ;; *************** function _handleIndicators *****************
  3041 ;; Defined at:
  3042 ;;		line 31 in file "Communications.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;  receivedIndi    2   23[COMRAM] int 
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;  i               2   28[COMRAM] int 
  3047 ;; Return value:  Size  Location     Type
  3048 ;;		None               void
  3049 ;; Registers used:
  3050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3056 ;;      Params:         2       0       0       0       0       0       0
  3057 ;;      Locals:         2       0       0       0       0       0       0
  3058 ;;      Temps:          3       0       0       0       0       0       0
  3059 ;;      Totals:         7       0       0       0       0       0       0
  3060 ;;Total ram usage:        7 bytes
  3061 ;; Hardware stack levels used:    1
  3062 ;; Hardware stack levels required when called:    4
  3063 ;; This function calls:
  3064 ;;		_SetLEDOut
  3065 ;; This function is called by:
  3066 ;;		_updateComms
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           	psect	text17
  3071  0000'                    __ptext17:
  3072                           	opt stack 0
  3073  0000'                    _handleIndicators:
  3074                           	opt stack 25
  3075                           
  3076                           ;Communications.c: 32: static int oldIndicators = 0;
  3077                           ;Communications.c: 33: if (receivedIndicators != oldIndicators) {
  3078                           
  3079                           ;incstack = 0
  3080  0000' 0100               	movlb	0	; () banked
  3081  0002' 5100'              	movf	(handleIndicators@oldIndicators+1)& (0+255),w,b
  3082  0004' 1818'              	xorwf	handleIndicators@receivedIndicators+1,w,c
  3083  0006' E103               	bnz	u1405
  3084  0008' 0100               	movlb	0	; () banked
  3085  000A' 5100'              	movf	handleIndicators@oldIndicators& (0+255),w,b
  3086  000C' 1817'              	xorwf	handleIndicators@receivedIndicators,w,c
  3087  000E'                    u1405:
  3088  000E' B4D8               	btfsc	status,2,c
  3089  0010' 0012               	return	
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;Communications.c: 34: int i = 0;
  3093  0012' 0E00               	movlw	0
  3094  0014' 6E1D'              	movwf	handleIndicators@i+1,c
  3095  0016' 0E00               	movlw	0
  3096  0018' 6E1C'              	movwf	handleIndicators@i,c
  3097                           
  3098                           ;Communications.c: 35: for (i = 0; i < 6; i++) {
  3099  001A' 0E00               	movlw	0
  3100  001C' 6E1D'              	movwf	handleIndicators@i+1,c
  3101  001E' 0E00               	movlw	0
  3102  0020' 6E1C'              	movwf	handleIndicators@i,c
  3103  0022'                    
  3104                           ; BSR set to: 0
  3105  0022' 501D'              	movf	handleIndicators@i+1,w,c
  3106  0024' 0A80               	xorlw	128
  3107  0026' 0F80               	addlw	-128
  3108  0028' 0E06               	movlw	6
  3109  002A' B4D8               	btfsc	status,2,c
  3110  002C' 5C1C'              	subwf	handleIndicators@i,w,c
  3111  002E' B0D8               	btfsc	status,0,c
  3112  0030' D019               	goto	l559
  3113                           
  3114                           ;Communications.c: 36: SetLEDOut(i, ((receivedIndicators >> i)&0x01));
  3115                           
  3116                           ; BSR set to: 0
  3117                           
  3118                           ; BSR set to: 0
  3119  0032' C01C' F014'        	movff	handleIndicators@i,_SetLEDOut$0
  3120  0036' C01D' F015'        	movff	handleIndicators@i+1,_SetLEDOut$0+1
  3121  003A' C01C' F019'        	movff	handleIndicators@i,??_handleIndicators
  3122  003E' C017' F01A'        	movff	handleIndicators@receivedIndicators,??_handleIndicators+1
  3123  0042' C018' F01B'        	movff	handleIndicators@receivedIndicators+1,??_handleIndicators+2
  3124  0046' 2A19'              	incf	??_handleIndicators,f,c
  3125  0048' D003               	goto	u1424
  3126  004A'                    u1425:
  3127  004A' 341B'              	rlcf	??_handleIndicators+2,w,c
  3128  004C' 321B'              	rrcf	??_handleIndicators+2,f,c
  3129  004E' 321A'              	rrcf	??_handleIndicators+1,f,c
  3130  0050'                    u1424:
  3131  0050' 2E19'              	decfsz	??_handleIndicators,f,c
  3132  0052' D7FB               	goto	u1425
  3133  0054' 501A'              	movf	??_handleIndicators+1,w,c
  3134  0056' 0B01               	andlw	1
  3135  0058' 6E16'              	movwf	_SetLEDOut$1,c
  3136  005A' EC00' F000'        	call	_SetLEDOut	;wreg free
  3137  005E' 4A1C'              	infsnz	handleIndicators@i,f,c
  3138  0060' 2A1D'              	incf	handleIndicators@i+1,f,c
  3139  0062' D7DF               	goto	L2
  3140  0064'                    l559:
  3141                           
  3142                           ;Communications.c: 37: }
  3143                           ;Communications.c: 38: oldIndicators = receivedIndicators;
  3144  0064' C017' F05C'        	movff	handleIndicators@receivedIndicators,handleIndicators@oldIndicators
  3145  0068' C018' F05D'        	movff	handleIndicators@receivedIndicators+1,handleIndicators@oldIndicators+1
  3146  006C' 0012               	return	
  3147  006E'                    __end_of_handleIndicators:
  3148                           	opt stack 0
  3149                           tblptru	equ	0xFF8
  3150                           prodh	equ	0xFF4
  3151                           prodl	equ	0xFF3
  3152                           intcon	equ	0xFF2
  3153                           postinc0	equ	0xFEE
  3154                           wreg	equ	0xFE8
  3155                           indf2	equ	0xFDF
  3156                           postinc2	equ	0xFDE
  3157                           postdec2	equ	0xFDD
  3158                           fsr2h	equ	0xFDA
  3159                           fsr2l	equ	0xFD9
  3160                           status	equ	0xFD8
  3161                           
  3162 ;; *************** function _TBbarGraphs *****************
  3163 ;; Defined at:
  3164 ;;		line 43 in file "Communications.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;  t               2   20[COMRAM] int 
  3167 ;;  b               2   22[COMRAM] int 
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;		None
  3170 ;; Return value:  Size  Location     Type
  3171 ;;		None               void
  3172 ;; Registers used:
  3173 ;;		None
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3179 ;;      Params:         4       0       0       0       0       0       0
  3180 ;;      Locals:         0       0       0       0       0       0       0
  3181 ;;      Temps:          0       0       0       0       0       0       0
  3182 ;;      Totals:         4       0       0       0       0       0       0
  3183 ;;Total ram usage:        4 bytes
  3184 ;; Hardware stack levels used:    1
  3185 ;; Hardware stack levels required when called:    3
  3186 ;; This function calls:
  3187 ;;		Nothing
  3188 ;; This function is called by:
  3189 ;;		_updateComms
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193                           	psect	text18
  3194  0000'                    __ptext18:
  3195                           	opt stack 0
  3196  0000'                    _TBbarGraphs:
  3197                           	opt stack 26
  3198                           
  3199                           ;Communications.c: 44: throttle = t;
  3200                           
  3201                           ;incstack = 0
  3202  0000' C014' F05A'        	movff	TBbarGraphs@t,_throttle
  3203  0004' C015' F05B'        	movff	TBbarGraphs@t+1,_throttle+1
  3204                           
  3205                           ;Communications.c: 45: brake = b;
  3206  0008' C016' F04A'        	movff	TBbarGraphs@b,_brake
  3207  000C' C017' F04B'        	movff	TBbarGraphs@b+1,_brake+1
  3208  0010' 0012               	return	
  3209  0012'                    __end_of_TBbarGraphs:
  3210                           	opt stack 0
  3211                           tblptru	equ	0xFF8
  3212                           prodh	equ	0xFF4
  3213                           prodl	equ	0xFF3
  3214                           intcon	equ	0xFF2
  3215                           postinc0	equ	0xFEE
  3216                           wreg	equ	0xFE8
  3217                           indf2	equ	0xFDF
  3218                           postinc2	equ	0xFDE
  3219                           postdec2	equ	0xFDD
  3220                           fsr2h	equ	0xFDA
  3221                           fsr2l	equ	0xFD9
  3222                           status	equ	0xFD8
  3223                           
  3224 ;; *************** function _TempGet *****************
  3225 ;; Defined at:
  3226 ;;		line 59 in file "CarTempSens.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;  x               2   20[COMRAM] int 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;		None
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  2   20[COMRAM] int 
  3233 ;; Registers used:
  3234 ;;		wreg, status,2, status,0
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3240 ;;      Params:         2       0       0       0       0       0       0
  3241 ;;      Locals:         0       0       0       0       0       0       0
  3242 ;;      Temps:          0       0       0       0       0       0       0
  3243 ;;      Totals:         2       0       0       0       0       0       0
  3244 ;;Total ram usage:        2 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; Hardware stack levels required when called:    3
  3247 ;; This function calls:
  3248 ;;		Nothing
  3249 ;; This function is called by:
  3250 ;;		_main
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           	psect	text19
  3255  0000'                    __ptext19:
  3256                           	opt stack 0
  3257  0000'                    _TempGet:
  3258                           	opt stack 27
  3259                           
  3260                           ;incstack = 0
  3261  0000' 0012               	return	
  3262  0002'                    __end_of_TempGet:
  3263                           	opt stack 0
  3264                           tblptru	equ	0xFF8
  3265                           prodh	equ	0xFF4
  3266                           prodl	equ	0xFF3
  3267                           intcon	equ	0xFF2
  3268                           postinc0	equ	0xFEE
  3269                           wreg	equ	0xFE8
  3270                           indf2	equ	0xFDF
  3271                           postinc2	equ	0xFDE
  3272                           postdec2	equ	0xFDD
  3273                           fsr2h	equ	0xFDA
  3274                           fsr2l	equ	0xFD9
  3275                           status	equ	0xFD8
  3276                           
  3277 ;; *************** function _TempCalc *****************
  3278 ;; Defined at:
  3279 ;;		line 41 in file "CarTempSens.c"
  3280 ;; Parameters:    Size  Location     Type
  3281 ;;  x               2   32[COMRAM] int 
  3282 ;; Auto vars:     Size  Location     Type
  3283 ;;		None
  3284 ;; Return value:  Size  Location     Type
  3285 ;;		None               void
  3286 ;; Registers used:
  3287 ;;		wreg, status,2, status,0, cstack
  3288 ;; Tracked objects:
  3289 ;;		On entry : 0/0
  3290 ;;		On exit  : 0/0
  3291 ;;		Unchanged: 0/0
  3292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3293 ;;      Params:         2       0       0       0       0       0       0
  3294 ;;      Locals:         0       0       0       0       0       0       0
  3295 ;;      Temps:          0       0       0       0       0       0       0
  3296 ;;      Totals:         2       0       0       0       0       0       0
  3297 ;;Total ram usage:        2 bytes
  3298 ;; Hardware stack levels used:    1
  3299 ;; Hardware stack levels required when called:    4
  3300 ;; This function calls:
  3301 ;;		_ADC_GetConversion
  3302 ;;		___lwdiv
  3303 ;; This function is called by:
  3304 ;;		_main
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           	psect	text20
  3309  0000'                    __ptext20:
  3310                           	opt stack 0
  3311  0000'                    _TempCalc:
  3312                           	opt stack 26
  3313                           
  3314                           ;CarTempSens.c: 42: if(x == 1){
  3315                           
  3316                           ;incstack = 0
  3317  0000' 0420'              	decf	TempCalc@x,w,c
  3318  0002' 1021'              	iorwf	TempCalc@x+1,w,c
  3319  0004' A4D8               	btfss	status,2,c
  3320  0006' D011               	goto	l2989
  3321                           
  3322                           ;CarTempSens.c: 43: TempOne = ADC_GetConversion(Temp1)/12;
  3323  0008' 0E00               	movlw	0
  3324  000A' EC00' F000'        	call	_ADC_GetConversion
  3325  000E' C014' F019'        	movff	?_ADC_GetConversion,___lwdiv@dividend
  3326  0012' C015' F01A'        	movff	?_ADC_GetConversion+1,___lwdiv@dividend+1
  3327  0016' 0E00               	movlw	0
  3328  0018' 6E1C'              	movwf	___lwdiv@divisor+1,c
  3329  001A' 0E0C               	movlw	12
  3330  001C' 6E1B'              	movwf	___lwdiv@divisor,c
  3331  001E' EC00' F000'        	call	___lwdiv	;wreg free
  3332  0022' C019' F042'        	movff	?___lwdiv,_TempOne
  3333  0026' C01A' F043'        	movff	?___lwdiv+1,_TempOne+1
  3334  002A'                    l2989:
  3335                           
  3336                           ;CarTempSens.c: 44: }
  3337                           ;CarTempSens.c: 45: if(x == 2){
  3338  002A' 5020'              	movf	TempCalc@x,w,c
  3339  002C' 0A02               	xorlw	2
  3340  002E' 1021'              	iorwf	TempCalc@x+1,w,c
  3341  0030' A4D8               	btfss	status,2,c
  3342  0032' 0012               	return	
  3343                           
  3344                           ;CarTempSens.c: 46: TempTwo = ADC_GetConversion(Temp2)/12;
  3345  0034' 0E01               	movlw	1
  3346  0036' EC00' F000'        	call	_ADC_GetConversion
  3347  003A' C014' F019'        	movff	?_ADC_GetConversion,___lwdiv@dividend
  3348  003E' C015' F01A'        	movff	?_ADC_GetConversion+1,___lwdiv@dividend+1
  3349  0042' 0E00               	movlw	0
  3350  0044' 6E1C'              	movwf	___lwdiv@divisor+1,c
  3351  0046' 0E0C               	movlw	12
  3352  0048' 6E1B'              	movwf	___lwdiv@divisor,c
  3353  004A' EC00' F000'        	call	___lwdiv	;wreg free
  3354  004E' C019' F044'        	movff	?___lwdiv,_TempTwo
  3355  0052' C01A' F045'        	movff	?___lwdiv+1,_TempTwo+1
  3356  0056' 0012               	return	
  3357  0058'                    __end_of_TempCalc:
  3358                           	opt stack 0
  3359                           tblptru	equ	0xFF8
  3360                           prodh	equ	0xFF4
  3361                           prodl	equ	0xFF3
  3362                           intcon	equ	0xFF2
  3363                           postinc0	equ	0xFEE
  3364                           wreg	equ	0xFE8
  3365                           indf2	equ	0xFDF
  3366                           postinc2	equ	0xFDE
  3367                           postdec2	equ	0xFDD
  3368                           fsr2h	equ	0xFDA
  3369                           fsr2l	equ	0xFD9
  3370                           status	equ	0xFD8
  3371                           
  3372 ;; *************** function ___lwdiv *****************
  3373 ;; Defined at:
  3374 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3375 ;; Parameters:    Size  Location     Type
  3376 ;;  dividend        2   25[COMRAM] unsigned int 
  3377 ;;  divisor         2   27[COMRAM] unsigned int 
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;  quotient        2   29[COMRAM] unsigned int 
  3380 ;;  counter         1   31[COMRAM] unsigned char 
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  2   25[COMRAM] unsigned int 
  3383 ;; Registers used:
  3384 ;;		wreg, status,2, status,0
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3390 ;;      Params:         4       0       0       0       0       0       0
  3391 ;;      Locals:         3       0       0       0       0       0       0
  3392 ;;      Temps:          0       0       0       0       0       0       0
  3393 ;;      Totals:         7       0       0       0       0       0       0
  3394 ;;Total ram usage:        7 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; Hardware stack levels required when called:    3
  3397 ;; This function calls:
  3398 ;;		Nothing
  3399 ;; This function is called by:
  3400 ;;		_TempCalc
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           	psect	text21
  3405  0000'                    __ptext21:
  3406                           	opt stack 0
  3407  0000'                    ___lwdiv:
  3408                           	opt stack 26
  3409                           
  3410                           ;incstack = 0
  3411  0000' 0E00               	movlw	0
  3412  0002' 6E1E'              	movwf	___lwdiv@quotient+1,c
  3413  0004' 0E00               	movlw	0
  3414  0006' 6E1D'              	movwf	___lwdiv@quotient,c
  3415  0008' 501C'              	movf	___lwdiv@divisor+1,w,c
  3416  000A' 101B'              	iorwf	___lwdiv@divisor,w,c
  3417  000C' B4D8               	btfsc	status,2,c
  3418  000E' D01C               	goto	l1360
  3419  0010' 0E01               	movlw	1
  3420  0012' 6E1F'              	movwf	___lwdiv@counter,c
  3421  0014' D004               	goto	l2745
  3422  0016'                    l2743:
  3423  0016' 90D8               	bcf	status,0,c
  3424  0018' 361B'              	rlcf	___lwdiv@divisor,f,c
  3425  001A' 361C'              	rlcf	___lwdiv@divisor+1,f,c
  3426  001C' 2A1F'              	incf	___lwdiv@counter,f,c
  3427  001E'                    l2745:
  3428  001E' AE1C'              	btfss	___lwdiv@divisor+1,7,c
  3429  0020' D7FA               	goto	l2743
  3430  0022'                    l2747:
  3431  0022' 90D8               	bcf	status,0,c
  3432  0024' 361D'              	rlcf	___lwdiv@quotient,f,c
  3433  0026' 361E'              	rlcf	___lwdiv@quotient+1,f,c
  3434  0028' 501B'              	movf	___lwdiv@divisor,w,c
  3435  002A' 5C19'              	subwf	___lwdiv@dividend,w,c
  3436  002C' 501C'              	movf	___lwdiv@divisor+1,w,c
  3437  002E' 581A'              	subwfb	___lwdiv@dividend+1,w,c
  3438  0030' A0D8               	btfss	status,0,c
  3439  0032' D005               	goto	l2755
  3440  0034' 501B'              	movf	___lwdiv@divisor,w,c
  3441  0036' 5E19'              	subwf	___lwdiv@dividend,f,c
  3442  0038' 501C'              	movf	___lwdiv@divisor+1,w,c
  3443  003A' 5A1A'              	subwfb	___lwdiv@dividend+1,f,c
  3444  003C' 801D'              	bsf	___lwdiv@quotient,0,c
  3445  003E'                    l2755:
  3446  003E' 90D8               	bcf	status,0,c
  3447  0040' 321C'              	rrcf	___lwdiv@divisor+1,f,c
  3448  0042' 321B'              	rrcf	___lwdiv@divisor,f,c
  3449  0044' 2E1F'              	decfsz	___lwdiv@counter,f,c
  3450  0046' D7ED               	goto	l2747
  3451  0048'                    l1360:
  3452  0048' C01D' F019'        	movff	___lwdiv@quotient,?___lwdiv
  3453  004C' C01E' F01A'        	movff	___lwdiv@quotient+1,?___lwdiv+1
  3454  0050' 0012               	return	
  3455  0052'                    __end_of___lwdiv:
  3456                           	opt stack 0
  3457                           tblptru	equ	0xFF8
  3458                           prodh	equ	0xFF4
  3459                           prodl	equ	0xFF3
  3460                           intcon	equ	0xFF2
  3461                           postinc0	equ	0xFEE
  3462                           wreg	equ	0xFE8
  3463                           indf2	equ	0xFDF
  3464                           postinc2	equ	0xFDE
  3465                           postdec2	equ	0xFDD
  3466                           fsr2h	equ	0xFDA
  3467                           fsr2l	equ	0xFD9
  3468                           status	equ	0xFD8
  3469                           
  3470 ;; *************** function _ADC_GetConversion *****************
  3471 ;; Defined at:
  3472 ;;		line 102 in file "mcc_generated_files/adc.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;  channel         1    wreg     enum E8837
  3475 ;; Auto vars:     Size  Location     Type
  3476 ;;  channel         1   24[COMRAM] enum E8837
  3477 ;; Return value:  Size  Location     Type
  3478 ;;                  2   20[COMRAM] unsigned int 
  3479 ;; Registers used:
  3480 ;;		wreg, status,2, status,0
  3481 ;; Tracked objects:
  3482 ;;		On entry : 0/0
  3483 ;;		On exit  : 0/0
  3484 ;;		Unchanged: 0/0
  3485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3486 ;;      Params:         2       0       0       0       0       0       0
  3487 ;;      Locals:         1       0       0       0       0       0       0
  3488 ;;      Temps:          2       0       0       0       0       0       0
  3489 ;;      Totals:         5       0       0       0       0       0       0
  3490 ;;Total ram usage:        5 bytes
  3491 ;; Hardware stack levels used:    1
  3492 ;; Hardware stack levels required when called:    3
  3493 ;; This function calls:
  3494 ;;		Nothing
  3495 ;; This function is called by:
  3496 ;;		_TempCalc
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           	psect	text22
  3501  0000'                    __ptext22:
  3502                           	opt stack 0
  3503  0000'                    _ADC_GetConversion:
  3504                           	opt stack 26
  3505                           
  3506                           ;incstack = 0
  3507                           ;ADC_GetConversion@channel stored from wreg
  3508  0000' 6E18'              	movwf	ADC_GetConversion@channel,c
  3509                           
  3510                           ;adc.c: 104: ADCON0bits.CHS = channel;
  3511  0002' C018' F016'        	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  3512  0006' 4616'              	rlncf	??_ADC_GetConversion,f,c
  3513  0008' 4616'              	rlncf	??_ADC_GetConversion,f,c
  3514  000A' 50C2               	movf	4034,w,c	;volatile
  3515  000C' 1816'              	xorwf	??_ADC_GetConversion,w,c
  3516  000E' 0B83               	andlw	-125
  3517  0010' 1816'              	xorwf	??_ADC_GetConversion,w,c
  3518  0012' 6EC2               	movwf	4034,c	;volatile
  3519                           
  3520                           ;adc.c: 107: ADCON0bits.ADON = 1;
  3521  0014' 80C2               	bsf	4034,0,c	;volatile
  3522                           
  3523                           ;adc.c: 111: ADCON0bits.GO_nDONE = 1;
  3524  0016' 82C2               	bsf	4034,1,c	;volatile
  3525  0018'                    l813:
  3526  0018' B2C2               	btfsc	4034,1,c	;volatile
  3527  001A' D7FE               	goto	l813
  3528                           
  3529                           ;adc.c: 115: }
  3530                           ;adc.c: 118: return ((ADRESH << 8) + ADRESL);
  3531  001C' 50C4               	movf	4036,w,c	;volatile
  3532  001E' 6E00'              	movwf	(??_ADC_GetConversion+1)& (0+255),c
  3533  0020' 6A00'              	clrf	??_ADC_GetConversion& (0+255),c
  3534  0022' 50C3               	movf	4035,w,c	;volatile
  3535  0024' 2416'              	addwf	??_ADC_GetConversion,w,c
  3536  0026' 6E14'              	movwf	?_ADC_GetConversion,c
  3537  0028' 0E00               	movlw	0
  3538  002A' 2017'              	addwfc	??_ADC_GetConversion+1,w,c
  3539  002C' 6E15'              	movwf	?_ADC_GetConversion+1,c
  3540  002E' 0012               	return	
  3541  0030'                    __end_of_ADC_GetConversion:
  3542                           	opt stack 0
  3543                           tblptru	equ	0xFF8
  3544                           prodh	equ	0xFF4
  3545                           prodl	equ	0xFF3
  3546                           intcon	equ	0xFF2
  3547                           postinc0	equ	0xFEE
  3548                           wreg	equ	0xFE8
  3549                           indf2	equ	0xFDF
  3550                           postinc2	equ	0xFDE
  3551                           postdec2	equ	0xFDD
  3552                           fsr2h	equ	0xFDA
  3553                           fsr2l	equ	0xFD9
  3554                           status	equ	0xFD8
  3555                           
  3556 ;; *************** function _SYSTEM_Initialize *****************
  3557 ;; Defined at:
  3558 ;;		line 112 in file "mcc_generated_files/mcc.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;		None
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;		None
  3563 ;; Return value:  Size  Location     Type
  3564 ;;		None               void
  3565 ;; Registers used:
  3566 ;;		wreg, status,2, status,0, cstack
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3572 ;;      Params:         0       0       0       0       0       0       0
  3573 ;;      Locals:         0       0       0       0       0       0       0
  3574 ;;      Temps:          0       0       0       0       0       0       0
  3575 ;;      Totals:         0       0       0       0       0       0       0
  3576 ;;Total ram usage:        0 bytes
  3577 ;; Hardware stack levels used:    1
  3578 ;; Hardware stack levels required when called:    5
  3579 ;; This function calls:
  3580 ;;		_ADC_Initialize
  3581 ;;		_ECCP1_Initialize
  3582 ;;		_ECCP2_Initialize
  3583 ;;		_EUSART1_Initialize
  3584 ;;		_I2C1_Initialize
  3585 ;;		_INTERRUPT_Initialize
  3586 ;;		_OSCILLATOR_Initialize
  3587 ;;		_PIN_MANAGER_Initialize
  3588 ;;		_TMR1_Initialize
  3589 ;;		_TMR2_Initialize
  3590 ;; This function is called by:
  3591 ;;		_main
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594                           
  3595                           	psect	text23
  3596  0000'                    __ptext23:
  3597                           	opt stack 0
  3598  0000'                    _SYSTEM_Initialize:
  3599                           	opt stack 25
  3600                           
  3601                           ;mcc.c: 113: OSCILLATOR_Initialize();
  3602                           
  3603                           ;incstack = 0
  3604  0000' EC00' F000'        	call	_OSCILLATOR_Initialize	;wreg free
  3605                           
  3606                           ;mcc.c: 114: PIN_MANAGER_Initialize();
  3607  0004' EC00' F000'        	call	_PIN_MANAGER_Initialize	;wreg free
  3608                           
  3609                           ;mcc.c: 115: INTERRUPT_Initialize();
  3610  0008' EC00' F000'        	call	_INTERRUPT_Initialize	;wreg free
  3611                           
  3612                           ;mcc.c: 116: EUSART1_Initialize();
  3613  000C' EC00' F000'        	call	_EUSART1_Initialize	;wreg free
  3614                           
  3615                           ;mcc.c: 117: TMR1_Initialize();
  3616  0010' EC00' F000'        	call	_TMR1_Initialize	;wreg free
  3617                           
  3618                           ;mcc.c: 118: ECCP1_Initialize();
  3619  0014' EC00' F000'        	call	_ECCP1_Initialize	;wreg free
  3620                           
  3621                           ;mcc.c: 119: ECCP2_Initialize();
  3622  0018' EC00' F000'        	call	_ECCP2_Initialize	;wreg free
  3623                           
  3624                           ;mcc.c: 120: I2C1_Initialize();
  3625  001C' EC00' F000'        	call	_I2C1_Initialize	;wreg free
  3626                           
  3627                           ;mcc.c: 121: TMR2_Initialize();
  3628  0020' EC00' F000'        	call	_TMR2_Initialize	;wreg free
  3629                           
  3630                           ;mcc.c: 122: ADC_Initialize();
  3631  0024' EC00' F000'        	call	_ADC_Initialize	;wreg free
  3632  0028' 0012               	return	
  3633  002A'                    __end_of_SYSTEM_Initialize:
  3634                           	opt stack 0
  3635                           tblptru	equ	0xFF8
  3636                           prodh	equ	0xFF4
  3637                           prodl	equ	0xFF3
  3638                           intcon	equ	0xFF2
  3639                           postinc0	equ	0xFEE
  3640                           wreg	equ	0xFE8
  3641                           indf2	equ	0xFDF
  3642                           postinc2	equ	0xFDE
  3643                           postdec2	equ	0xFDD
  3644                           fsr2h	equ	0xFDA
  3645                           fsr2l	equ	0xFD9
  3646                           status	equ	0xFD8
  3647                           
  3648 ;; *************** function _TMR2_Initialize *****************
  3649 ;; Defined at:
  3650 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;		None
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;		None
  3655 ;; Return value:  Size  Location     Type
  3656 ;;		None               void
  3657 ;; Registers used:
  3658 ;;		wreg, status,2, cstack
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3664 ;;      Params:         0       0       0       0       0       0       0
  3665 ;;      Locals:         0       0       0       0       0       0       0
  3666 ;;      Temps:          0       0       0       0       0       0       0
  3667 ;;      Totals:         0       0       0       0       0       0       0
  3668 ;;Total ram usage:        0 bytes
  3669 ;; Hardware stack levels used:    1
  3670 ;; Hardware stack levels required when called:    4
  3671 ;; This function calls:
  3672 ;;		_TMR2_StartTimer
  3673 ;; This function is called by:
  3674 ;;		_SYSTEM_Initialize
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678                           	psect	text24
  3679  0000'                    __ptext24:
  3680                           	opt stack 0
  3681  0000'                    _TMR2_Initialize:
  3682                           	opt stack 25
  3683                           
  3684                           ;tmr2.c: 62: T2CON = 0x7A;
  3685                           
  3686                           ;incstack = 0
  3687  0000' 0E7A               	movlw	122
  3688  0002' 6EBA               	movwf	4026,c	;volatile
  3689                           
  3690                           ;tmr2.c: 65: PR2 = 0x9B;
  3691  0004' 0E9B               	movlw	155
  3692  0006' 6EBB               	movwf	4027,c	;volatile
  3693                           
  3694                           ;tmr2.c: 68: TMR2 = 0x00;
  3695  0008' 0E00               	movlw	0
  3696  000A' 6EBC               	movwf	4028,c	;volatile
  3697                           
  3698                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
  3699  000C' 929E               	bcf	3998,1,c	;volatile
  3700                           
  3701                           ;tmr2.c: 74: PIE1bits.TMR2IE = 1;
  3702  000E' 829D               	bsf	3997,1,c	;volatile
  3703                           
  3704                           ;tmr2.c: 77: TMR2_StartTimer();
  3705  0010' EC00' F000'        	call	_TMR2_StartTimer	;wreg free
  3706  0014' 0012               	return	
  3707  0016'                    __end_of_TMR2_Initialize:
  3708                           	opt stack 0
  3709                           tblptru	equ	0xFF8
  3710                           prodh	equ	0xFF4
  3711                           prodl	equ	0xFF3
  3712                           intcon	equ	0xFF2
  3713                           postinc0	equ	0xFEE
  3714                           wreg	equ	0xFE8
  3715                           indf2	equ	0xFDF
  3716                           postinc2	equ	0xFDE
  3717                           postdec2	equ	0xFDD
  3718                           fsr2h	equ	0xFDA
  3719                           fsr2l	equ	0xFD9
  3720                           status	equ	0xFD8
  3721                           
  3722 ;; *************** function _TMR2_StartTimer *****************
  3723 ;; Defined at:
  3724 ;;		line 80 in file "mcc_generated_files/tmr2.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;		None
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;		None
  3729 ;; Return value:  Size  Location     Type
  3730 ;;		None               void
  3731 ;; Registers used:
  3732 ;;		None
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3738 ;;      Params:         0       0       0       0       0       0       0
  3739 ;;      Locals:         0       0       0       0       0       0       0
  3740 ;;      Temps:          0       0       0       0       0       0       0
  3741 ;;      Totals:         0       0       0       0       0       0       0
  3742 ;;Total ram usage:        0 bytes
  3743 ;; Hardware stack levels used:    1
  3744 ;; Hardware stack levels required when called:    3
  3745 ;; This function calls:
  3746 ;;		Nothing
  3747 ;; This function is called by:
  3748 ;;		_TMR2_Initialize
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752                           	psect	text25
  3753  0000'                    __ptext25:
  3754                           	opt stack 0
  3755  0000'                    _TMR2_StartTimer:
  3756                           	opt stack 25
  3757                           
  3758                           ;tmr2.c: 82: T2CONbits.TMR2ON = 1;
  3759                           
  3760                           ;incstack = 0
  3761  0000' 84BA               	bsf	4026,2,c	;volatile
  3762  0002' 0012               	return	
  3763  0004'                    __end_of_TMR2_StartTimer:
  3764                           	opt stack 0
  3765                           tblptru	equ	0xFF8
  3766                           prodh	equ	0xFF4
  3767                           prodl	equ	0xFF3
  3768                           intcon	equ	0xFF2
  3769                           postinc0	equ	0xFEE
  3770                           wreg	equ	0xFE8
  3771                           indf2	equ	0xFDF
  3772                           postinc2	equ	0xFDE
  3773                           postdec2	equ	0xFDD
  3774                           fsr2h	equ	0xFDA
  3775                           fsr2l	equ	0xFD9
  3776                           status	equ	0xFD8
  3777                           
  3778 ;; *************** function _TMR1_Initialize *****************
  3779 ;; Defined at:
  3780 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;		None
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;		None
  3785 ;; Return value:  Size  Location     Type
  3786 ;;		None               void
  3787 ;; Registers used:
  3788 ;;		wreg, status,2, cstack
  3789 ;; Tracked objects:
  3790 ;;		On entry : 0/0
  3791 ;;		On exit  : 0/0
  3792 ;;		Unchanged: 0/0
  3793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3794 ;;      Params:         0       0       0       0       0       0       0
  3795 ;;      Locals:         0       0       0       0       0       0       0
  3796 ;;      Temps:          0       0       0       0       0       0       0
  3797 ;;      Totals:         0       0       0       0       0       0       0
  3798 ;;Total ram usage:        0 bytes
  3799 ;; Hardware stack levels used:    1
  3800 ;; Hardware stack levels required when called:    4
  3801 ;; This function calls:
  3802 ;;		_TMR1_StartTimer
  3803 ;; This function is called by:
  3804 ;;		_SYSTEM_Initialize
  3805 ;; This function uses a non-reentrant model
  3806 ;;
  3807                           
  3808                           	psect	text26
  3809  0000'                    __ptext26:
  3810                           	opt stack 0
  3811  0000'                    _TMR1_Initialize:
  3812                           	opt stack 25
  3813                           
  3814                           ;tmr1.c: 67: T1CON = 0x40;
  3815                           
  3816                           ;incstack = 0
  3817  0000' 0E40               	movlw	64
  3818  0002' 6ECD               	movwf	4045,c	;volatile
  3819                           
  3820                           ;tmr1.c: 70: T1GCON = 0x00;
  3821  0004' 0E00               	movlw	0
  3822  0006' 6ECC               	movwf	4044,c	;volatile
  3823                           
  3824                           ;tmr1.c: 73: TMR1H = 0xE0;
  3825  0008' 0EE0               	movlw	224
  3826  000A' 6ECF               	movwf	4047,c	;volatile
  3827                           
  3828                           ;tmr1.c: 76: TMR1L = 0xC0;
  3829  000C' 0EC0               	movlw	192
  3830  000E' 6ECE               	movwf	4046,c	;volatile
  3831                           
  3832                           ;tmr1.c: 79: timer1ReloadVal = TMR1;
  3833  0010' CFCE F007'         	movff	4046,_timer1ReloadVal	;volatile
  3834  0014' CFCF F008'         	movff	4047,_timer1ReloadVal+1	;volatile
  3835                           
  3836                           ;tmr1.c: 82: PIR1bits.TMR1IF = 0;
  3837  0018' 909E               	bcf	3998,0,c	;volatile
  3838                           
  3839                           ;tmr1.c: 85: TMR1_StartTimer();
  3840  001A' EC00' F000'        	call	_TMR1_StartTimer	;wreg free
  3841  001E' 0012               	return	
  3842  0020'                    __end_of_TMR1_Initialize:
  3843                           	opt stack 0
  3844                           tblptru	equ	0xFF8
  3845                           prodh	equ	0xFF4
  3846                           prodl	equ	0xFF3
  3847                           intcon	equ	0xFF2
  3848                           postinc0	equ	0xFEE
  3849                           wreg	equ	0xFE8
  3850                           indf2	equ	0xFDF
  3851                           postinc2	equ	0xFDE
  3852                           postdec2	equ	0xFDD
  3853                           fsr2h	equ	0xFDA
  3854                           fsr2l	equ	0xFD9
  3855                           status	equ	0xFD8
  3856                           
  3857 ;; *************** function _TMR1_StartTimer *****************
  3858 ;; Defined at:
  3859 ;;		line 88 in file "mcc_generated_files/tmr1.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;		None
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;		None
  3864 ;; Return value:  Size  Location     Type
  3865 ;;		None               void
  3866 ;; Registers used:
  3867 ;;		None
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3873 ;;      Params:         0       0       0       0       0       0       0
  3874 ;;      Locals:         0       0       0       0       0       0       0
  3875 ;;      Temps:          0       0       0       0       0       0       0
  3876 ;;      Totals:         0       0       0       0       0       0       0
  3877 ;;Total ram usage:        0 bytes
  3878 ;; Hardware stack levels used:    1
  3879 ;; Hardware stack levels required when called:    3
  3880 ;; This function calls:
  3881 ;;		Nothing
  3882 ;; This function is called by:
  3883 ;;		_TMR1_Initialize
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887                           	psect	text27
  3888  0000'                    __ptext27:
  3889                           	opt stack 0
  3890  0000'                    _TMR1_StartTimer:
  3891                           	opt stack 25
  3892                           
  3893                           ;tmr1.c: 90: T1CONbits.TMR1ON = 1;
  3894                           
  3895                           ;incstack = 0
  3896  0000' 80CD               	bsf	4045,0,c	;volatile
  3897  0002' 0012               	return	
  3898  0004'                    __end_of_TMR1_StartTimer:
  3899                           	opt stack 0
  3900                           tblptru	equ	0xFF8
  3901                           prodh	equ	0xFF4
  3902                           prodl	equ	0xFF3
  3903                           intcon	equ	0xFF2
  3904                           postinc0	equ	0xFEE
  3905                           wreg	equ	0xFE8
  3906                           indf2	equ	0xFDF
  3907                           postinc2	equ	0xFDE
  3908                           postdec2	equ	0xFDD
  3909                           fsr2h	equ	0xFDA
  3910                           fsr2l	equ	0xFD9
  3911                           status	equ	0xFD8
  3912                           
  3913 ;; *************** function _PIN_MANAGER_Initialize *****************
  3914 ;; Defined at:
  3915 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;		None
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;		None
  3920 ;; Return value:  Size  Location     Type
  3921 ;;		None               void
  3922 ;; Registers used:
  3923 ;;		wreg, status,2
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3929 ;;      Params:         0       0       0       0       0       0       0
  3930 ;;      Locals:         0       0       0       0       0       0       0
  3931 ;;      Temps:          0       0       0       0       0       0       0
  3932 ;;      Totals:         0       0       0       0       0       0       0
  3933 ;;Total ram usage:        0 bytes
  3934 ;; Hardware stack levels used:    1
  3935 ;; Hardware stack levels required when called:    3
  3936 ;; This function calls:
  3937 ;;		Nothing
  3938 ;; This function is called by:
  3939 ;;		_SYSTEM_Initialize
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           	psect	text28
  3944  0000'                    __ptext28:
  3945                           	opt stack 0
  3946  0000'                    _PIN_MANAGER_Initialize:
  3947                           	opt stack 26
  3948                           
  3949                           ;pin_manager.c: 51: LATA = 0x00;
  3950                           
  3951                           ;incstack = 0
  3952  0000' 0E00               	movlw	0
  3953  0002' 6E89               	movwf	3977,c	;volatile
  3954                           
  3955                           ;pin_manager.c: 52: TRISA = 0xFF;
  3956  0004' 6892               	setf	3986,c	;volatile
  3957                           
  3958                           ;pin_manager.c: 53: ANSELA = 0x2F;
  3959  0006' 0E2F               	movlw	47
  3960  0008' 010F               	movlb	15	; () banked
  3961  000A' 6F38               	movwf	56,b	;volatile
  3962                           
  3963                           ;pin_manager.c: 55: LATB = 0x00;
  3964  000C' 0E00               	movlw	0
  3965  000E' 6E8A               	movwf	3978,c	;volatile
  3966                           
  3967                           ; BSR set to: 15
  3968                           ;pin_manager.c: 56: TRISB = 0xFF;
  3969  0010' 6893               	setf	3987,c	;volatile
  3970                           
  3971                           ;pin_manager.c: 57: ANSELB = 0x3F;
  3972  0012' 0E3F               	movlw	63
  3973  0014' 010F               	movlb	15	; () banked
  3974  0016' 6F39               	movwf	57,b	;volatile
  3975                           
  3976                           ;pin_manager.c: 58: WPUB = 0x00;
  3977  0018' 0E00               	movlw	0
  3978  001A' 6E61               	movwf	3937,c	;volatile
  3979                           
  3980                           ;pin_manager.c: 60: LATC = 0x18;
  3981  001C' 0E18               	movlw	24
  3982  001E' 6E8B               	movwf	3979,c	;volatile
  3983                           
  3984                           ; BSR set to: 15
  3985                           ;pin_manager.c: 61: TRISC = 0xFF;
  3986  0020' 6894               	setf	3988,c	;volatile
  3987                           
  3988                           ;pin_manager.c: 62: ANSELC = 0x20;
  3989  0022' 0E20               	movlw	32
  3990  0024' 010F               	movlb	15	; () banked
  3991  0026' 6F3A               	movwf	58,b	;volatile
  3992                           
  3993                           ;pin_manager.c: 64: LATD = 0x00;
  3994  0028' 0E00               	movlw	0
  3995  002A' 6E8C               	movwf	3980,c	;volatile
  3996                           
  3997                           ; BSR set to: 15
  3998                           ;pin_manager.c: 65: TRISD = 0xFF;
  3999  002C' 6895               	setf	3989,c	;volatile
  4000                           
  4001                           ; BSR set to: 15
  4002                           ;pin_manager.c: 66: ANSELD = 0xFF;
  4003  002E' 010F               	movlb	15	; () banked
  4004  0030' 693B               	setf	59,b	;volatile
  4005                           
  4006                           ;pin_manager.c: 68: LATE = 0x00;
  4007  0032' 0E00               	movlw	0
  4008  0034' 6E8D               	movwf	3981,c	;volatile
  4009                           
  4010                           ;pin_manager.c: 69: TRISE = 0x07;
  4011  0036' 0E07               	movlw	7
  4012  0038' 6E96               	movwf	3990,c	;volatile
  4013                           
  4014                           ;pin_manager.c: 70: ANSELE = 0x07;
  4015  003A' 0E07               	movlw	7
  4016  003C' 010F               	movlb	15	; () banked
  4017  003E' 6F3C               	movwf	60,b	;volatile
  4018                           
  4019                           ; BSR set to: 15
  4020                           ;pin_manager.c: 72: INTCON2bits.nRBPU = 0x01;
  4021  0040' 8EF1               	bsf	intcon2,7,c	;volatile
  4022                           
  4023                           ; BSR set to: 15
  4024  0042' 0012               	return	
  4025  0044'                    __end_of_PIN_MANAGER_Initialize:
  4026                           	opt stack 0
  4027                           tblptru	equ	0xFF8
  4028                           prodh	equ	0xFF4
  4029                           prodl	equ	0xFF3
  4030                           intcon	equ	0xFF2
  4031                           intcon2	equ	0xFF1
  4032                           postinc0	equ	0xFEE
  4033                           wreg	equ	0xFE8
  4034                           indf2	equ	0xFDF
  4035                           postinc2	equ	0xFDE
  4036                           postdec2	equ	0xFDD
  4037                           fsr2h	equ	0xFDA
  4038                           fsr2l	equ	0xFD9
  4039                           status	equ	0xFD8
  4040                           
  4041 ;; *************** function _OSCILLATOR_Initialize *****************
  4042 ;; Defined at:
  4043 ;;		line 125 in file "mcc_generated_files/mcc.c"
  4044 ;; Parameters:    Size  Location     Type
  4045 ;;		None
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;		None
  4048 ;; Return value:  Size  Location     Type
  4049 ;;		None               void
  4050 ;; Registers used:
  4051 ;;		wreg, status,2
  4052 ;; Tracked objects:
  4053 ;;		On entry : 0/0
  4054 ;;		On exit  : 0/0
  4055 ;;		Unchanged: 0/0
  4056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4057 ;;      Params:         0       0       0       0       0       0       0
  4058 ;;      Locals:         0       0       0       0       0       0       0
  4059 ;;      Temps:          0       0       0       0       0       0       0
  4060 ;;      Totals:         0       0       0       0       0       0       0
  4061 ;;Total ram usage:        0 bytes
  4062 ;; Hardware stack levels used:    1
  4063 ;; Hardware stack levels required when called:    3
  4064 ;; This function calls:
  4065 ;;		Nothing
  4066 ;; This function is called by:
  4067 ;;		_SYSTEM_Initialize
  4068 ;; This function uses a non-reentrant model
  4069 ;;
  4070                           
  4071                           	psect	text29
  4072  0000'                    __ptext29:
  4073                           	opt stack 0
  4074  0000'                    _OSCILLATOR_Initialize:
  4075                           	opt stack 26
  4076                           
  4077                           ;mcc.c: 127: OSCCON = 0x70;
  4078                           
  4079                           ; BSR set to: 15
  4080                           ;incstack = 0
  4081  0000' 0E70               	movlw	112
  4082  0002' 6ED3               	movwf	4051,c	;volatile
  4083                           
  4084                           ;mcc.c: 129: OSCCON2 = 0x04;
  4085  0004' 0E04               	movlw	4
  4086  0006' 6ED2               	movwf	4050,c	;volatile
  4087                           
  4088                           ;mcc.c: 131: OSCTUNE = 0x00;
  4089  0008' 0E00               	movlw	0
  4090  000A' 6E9B               	movwf	3995,c	;volatile
  4091  000C' 0012               	return	
  4092  000E'                    __end_of_OSCILLATOR_Initialize:
  4093                           	opt stack 0
  4094                           tblptru	equ	0xFF8
  4095                           prodh	equ	0xFF4
  4096                           prodl	equ	0xFF3
  4097                           intcon	equ	0xFF2
  4098                           intcon2	equ	0xFF1
  4099                           postinc0	equ	0xFEE
  4100                           wreg	equ	0xFE8
  4101                           indf2	equ	0xFDF
  4102                           postinc2	equ	0xFDE
  4103                           postdec2	equ	0xFDD
  4104                           fsr2h	equ	0xFDA
  4105                           fsr2l	equ	0xFD9
  4106                           status	equ	0xFD8
  4107                           
  4108 ;; *************** function _INTERRUPT_Initialize *****************
  4109 ;; Defined at:
  4110 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4111 ;; Parameters:    Size  Location     Type
  4112 ;;		None
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;		None
  4115 ;; Return value:  Size  Location     Type
  4116 ;;		None               void
  4117 ;; Registers used:
  4118 ;;		None
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4124 ;;      Params:         0       0       0       0       0       0       0
  4125 ;;      Locals:         0       0       0       0       0       0       0
  4126 ;;      Temps:          0       0       0       0       0       0       0
  4127 ;;      Totals:         0       0       0       0       0       0       0
  4128 ;;Total ram usage:        0 bytes
  4129 ;; Hardware stack levels used:    1
  4130 ;; Hardware stack levels required when called:    3
  4131 ;; This function calls:
  4132 ;;		Nothing
  4133 ;; This function is called by:
  4134 ;;		_SYSTEM_Initialize
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           	psect	text30
  4139  0000'                    __ptext30:
  4140                           	opt stack 0
  4141  0000'                    _INTERRUPT_Initialize:
  4142                           	opt stack 26
  4143                           
  4144                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  4145                           
  4146                           ;incstack = 0
  4147  0000' 9ED0               	bcf	4048,7,c	;volatile
  4148                           
  4149                           ;interrupt_manager.c: 59: IPR1bits.SSP1IP = 0;
  4150  0002' 969F               	bcf	3999,3,c	;volatile
  4151                           
  4152                           ;interrupt_manager.c: 61: IPR2bits.BCL1IP = 0;
  4153  0004' 96A2               	bcf	4002,3,c	;volatile
  4154                           
  4155                           ;interrupt_manager.c: 63: IPR1bits.RC1IP = 0;
  4156  0006' 9A9F               	bcf	3999,5,c	;volatile
  4157                           
  4158                           ;interrupt_manager.c: 65: IPR1bits.TX1IP = 0;
  4159  0008' 989F               	bcf	3999,4,c	;volatile
  4160                           
  4161                           ;interrupt_manager.c: 67: IPR1bits.CCP1IP = 0;
  4162  000A' 949F               	bcf	3999,2,c	;volatile
  4163                           
  4164                           ;interrupt_manager.c: 69: IPR2bits.CCP2IP = 0;
  4165  000C' 90A2               	bcf	4002,0,c	;volatile
  4166                           
  4167                           ;interrupt_manager.c: 71: IPR1bits.TMR2IP = 0;
  4168  000E' 929F               	bcf	3999,1,c	;volatile
  4169                           
  4170                           ;interrupt_manager.c: 73: IPR1bits.ADIP = 0;
  4171  0010' 9C9F               	bcf	3999,6,c	;volatile
  4172  0012' 0012               	return	
  4173  0014'                    __end_of_INTERRUPT_Initialize:
  4174                           	opt stack 0
  4175                           tblptru	equ	0xFF8
  4176                           prodh	equ	0xFF4
  4177                           prodl	equ	0xFF3
  4178                           intcon	equ	0xFF2
  4179                           intcon2	equ	0xFF1
  4180                           postinc0	equ	0xFEE
  4181                           wreg	equ	0xFE8
  4182                           indf2	equ	0xFDF
  4183                           postinc2	equ	0xFDE
  4184                           postdec2	equ	0xFDD
  4185                           fsr2h	equ	0xFDA
  4186                           fsr2l	equ	0xFD9
  4187                           status	equ	0xFD8
  4188                           
  4189 ;; *************** function _I2C1_Initialize *****************
  4190 ;; Defined at:
  4191 ;;		line 194 in file "mcc_generated_files/i2c1.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;		None
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;		None
  4196 ;; Return value:  Size  Location     Type
  4197 ;;		None               void
  4198 ;; Registers used:
  4199 ;;		wreg, status,2, status,0
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4205 ;;      Params:         0       0       0       0       0       0       0
  4206 ;;      Locals:         0       0       0       0       0       0       0
  4207 ;;      Temps:          0       0       0       0       0       0       0
  4208 ;;      Totals:         0       0       0       0       0       0       0
  4209 ;;Total ram usage:        0 bytes
  4210 ;; Hardware stack levels used:    1
  4211 ;; Hardware stack levels required when called:    3
  4212 ;; This function calls:
  4213 ;;		Nothing
  4214 ;; This function is called by:
  4215 ;;		_SYSTEM_Initialize
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text31
  4220  0000'                    __ptext31:
  4221                           	opt stack 0
  4222  0000'                    _I2C1_Initialize:
  4223                           	opt stack 26
  4224                           
  4225                           ;i2c1.c: 195: i2c1_object.pTrHead = i2c1_tr_queue;
  4226                           
  4227                           ;incstack = 0
  4228  0000' 0100               	movlb	0	; () banked
  4229  0002' 0E00'              	movlw	high _i2c1_tr_queue
  4230  0004' 6E03'              	movwf	_i2c1_object+3,c
  4231  0006' 0100               	movlb	0	; () banked
  4232  0008' 0E00'              	movlw	low _i2c1_tr_queue
  4233  000A' 6E02'              	movwf	_i2c1_object+2,c
  4234                           
  4235                           ;i2c1.c: 196: i2c1_object.pTrTail = i2c1_tr_queue;
  4236  000C' 0100               	movlb	0	; () banked
  4237  000E' 0E00'              	movlw	high _i2c1_tr_queue
  4238  0010' 6E01'              	movwf	_i2c1_object+1,c
  4239  0012' 0100               	movlb	0	; () banked
  4240  0014' 0E00'              	movlw	low _i2c1_tr_queue
  4241  0016' 6E00'              	movwf	_i2c1_object,c
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;i2c1.c: 197: i2c1_object.trStatus.s.empty = 1;
  4245  0018' 8204'              	bsf	_i2c1_object+4,1,c
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;i2c1.c: 198: i2c1_object.trStatus.s.full = 0;
  4249  001A' 9004'              	bcf	_i2c1_object+4,0,c
  4250                           
  4251                           ; BSR set to: 0
  4252                           ;i2c1.c: 200: i2c1_object.i2cErrors = 0;
  4253  001C' 0E00               	movlw	0
  4254  001E' 6E06'              	movwf	_i2c1_object+6,c
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;i2c1.c: 203: SSP1STAT = 0x80;
  4258  0020' 0E80               	movlw	128
  4259  0022' 6EC7               	movwf	4039,c	;volatile
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;i2c1.c: 205: SSP1CON1 = 0x28;
  4263  0024' 0E28               	movlw	40
  4264  0026' 6EC6               	movwf	4038,c	;volatile
  4265                           
  4266                           ; BSR set to: 0
  4267                           ;i2c1.c: 207: SSP1CON3 = 0x00;
  4268  0028' 0E00               	movlw	0
  4269  002A' 6ECB               	movwf	4043,c	;volatile
  4270                           
  4271                           ; BSR set to: 0
  4272                           ;i2c1.c: 209: SSP1ADD = 0x3F;
  4273  002C' 0E3F               	movlw	63
  4274  002E' 6EC8               	movwf	4040,c	;volatile
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;i2c1.c: 213: PIR1bits.SSP1IF = 0;
  4278  0030' 969E               	bcf	3998,3,c	;volatile
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;i2c1.c: 215: PIE1bits.SSP1IE = 1;
  4282  0032' 869D               	bsf	3997,3,c	;volatile
  4283                           
  4284                           ; BSR set to: 0
  4285  0034' 0012               	return	
  4286  0036'                    __end_of_I2C1_Initialize:
  4287                           	opt stack 0
  4288                           tblptru	equ	0xFF8
  4289                           prodh	equ	0xFF4
  4290                           prodl	equ	0xFF3
  4291                           intcon	equ	0xFF2
  4292                           intcon2	equ	0xFF1
  4293                           postinc0	equ	0xFEE
  4294                           wreg	equ	0xFE8
  4295                           indf2	equ	0xFDF
  4296                           postinc2	equ	0xFDE
  4297                           postdec2	equ	0xFDD
  4298                           fsr2h	equ	0xFDA
  4299                           fsr2l	equ	0xFD9
  4300                           status	equ	0xFD8
  4301                           
  4302 ;; *************** function _EUSART1_Initialize *****************
  4303 ;; Defined at:
  4304 ;;		line 76 in file "mcc_generated_files/eusart1.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;		None
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;		None
  4309 ;; Return value:  Size  Location     Type
  4310 ;;		None               void
  4311 ;; Registers used:
  4312 ;;		wreg, status,2
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4318 ;;      Params:         0       0       0       0       0       0       0
  4319 ;;      Locals:         0       0       0       0       0       0       0
  4320 ;;      Temps:          0       0       0       0       0       0       0
  4321 ;;      Totals:         0       0       0       0       0       0       0
  4322 ;;Total ram usage:        0 bytes
  4323 ;; Hardware stack levels used:    1
  4324 ;; Hardware stack levels required when called:    3
  4325 ;; This function calls:
  4326 ;;		Nothing
  4327 ;; This function is called by:
  4328 ;;		_SYSTEM_Initialize
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           	psect	text32
  4333  0000'                    __ptext32:
  4334                           	opt stack 0
  4335  0000'                    _EUSART1_Initialize:
  4336                           	opt stack 26
  4337                           
  4338                           ;eusart1.c: 78: PIE1bits.RC1IE = 0;
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;incstack = 0
  4342  0000' 9A9D               	bcf	3997,5,c	;volatile
  4343                           
  4344                           ;eusart1.c: 79: PIE1bits.TX1IE = 0;
  4345  0002' 989D               	bcf	3997,4,c	;volatile
  4346                           
  4347                           ;eusart1.c: 84: BAUD1CON = 0x48;
  4348  0004' 0E48               	movlw	72
  4349  0006' 6EB8               	movwf	4024,c	;volatile
  4350                           
  4351                           ;eusart1.c: 87: RC1STA = 0x80;
  4352  0008' 0E80               	movlw	128
  4353  000A' 6EAB               	movwf	4011,c	;volatile
  4354                           
  4355                           ;eusart1.c: 90: TX1STA = 0x26;
  4356  000C' 0E26               	movlw	38
  4357  000E' 6EAC               	movwf	4012,c	;volatile
  4358                           
  4359                           ;eusart1.c: 93: SPBRG1 = 0x44;
  4360  0010' 0E44               	movlw	68
  4361  0012' 6EAF               	movwf	4015,c	;volatile
  4362                           
  4363                           ;eusart1.c: 96: SPBRGH1 = 0x00;
  4364  0014' 0E00               	movlw	0
  4365  0016' 6EB0               	movwf	4016,c	;volatile
  4366                           
  4367                           ;eusart1.c: 100: eusart1TxHead = 0;
  4368  0018' 0E00               	movlw	0
  4369  001A' 6E0F'              	movwf	_eusart1TxHead,c
  4370                           
  4371                           ;eusart1.c: 101: eusart1TxTail = 0;
  4372  001C' 0E00               	movlw	0
  4373  001E' 6E10'              	movwf	_eusart1TxTail,c
  4374                           
  4375                           ;eusart1.c: 102: eusart1TxBufferRemaining = sizeof (eusart1TxBuffer);
  4376  0020' 0E08               	movlw	8
  4377  0022' 6E09'              	movwf	_eusart1TxBufferRemaining,c	;volatile
  4378                           
  4379                           ;eusart1.c: 104: eusart1RxHead = 0;
  4380  0024' 0E00               	movlw	0
  4381  0026' 6E0D'              	movwf	_eusart1RxHead,c
  4382                           
  4383                           ;eusart1.c: 105: eusart1RxTail = 0;
  4384  0028' 0E00               	movlw	0
  4385  002A' 6E0E'              	movwf	_eusart1RxTail,c
  4386                           
  4387                           ;eusart1.c: 106: eusart1RxCount = 0;
  4388  002C' 0E00               	movlw	0
  4389  002E' 6E0C'              	movwf	_eusart1RxCount,c	;volatile
  4390                           
  4391                           ;eusart1.c: 109: PIE1bits.RC1IE = 1;
  4392  0030' 8A9D               	bsf	3997,5,c	;volatile
  4393  0032' 0012               	return	
  4394  0034'                    __end_of_EUSART1_Initialize:
  4395                           	opt stack 0
  4396                           tblptru	equ	0xFF8
  4397                           prodh	equ	0xFF4
  4398                           prodl	equ	0xFF3
  4399                           intcon	equ	0xFF2
  4400                           intcon2	equ	0xFF1
  4401                           postinc0	equ	0xFEE
  4402                           wreg	equ	0xFE8
  4403                           indf2	equ	0xFDF
  4404                           postinc2	equ	0xFDE
  4405                           postdec2	equ	0xFDD
  4406                           fsr2h	equ	0xFDA
  4407                           fsr2l	equ	0xFD9
  4408                           status	equ	0xFD8
  4409                           
  4410 ;; *************** function _ECCP2_Initialize *****************
  4411 ;; Defined at:
  4412 ;;		line 58 in file "mcc_generated_files/eccp2.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;		None
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;		None
  4417 ;; Return value:  Size  Location     Type
  4418 ;;		None               void
  4419 ;; Registers used:
  4420 ;;		wreg, status,2
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4426 ;;      Params:         0       0       0       0       0       0       0
  4427 ;;      Locals:         0       0       0       0       0       0       0
  4428 ;;      Temps:          0       0       0       0       0       0       0
  4429 ;;      Totals:         0       0       0       0       0       0       0
  4430 ;;Total ram usage:        0 bytes
  4431 ;; Hardware stack levels used:    1
  4432 ;; Hardware stack levels required when called:    3
  4433 ;; This function calls:
  4434 ;;		Nothing
  4435 ;; This function is called by:
  4436 ;;		_SYSTEM_Initialize
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           	psect	text33
  4441  0000'                    __ptext33:
  4442                           	opt stack 0
  4443  0000'                    _ECCP2_Initialize:
  4444                           	opt stack 26
  4445                           
  4446                           ;eccp2.c: 62: CCP2CON = 0x05;
  4447                           
  4448                           ;incstack = 0
  4449  0000' 0E05               	movlw	5
  4450  0002' 6E66               	movwf	3942,c	;volatile
  4451                           
  4452                           ;eccp2.c: 65: CCPR2L = 0x00;
  4453  0004' 0E00               	movlw	0
  4454  0006' 6E67               	movwf	3943,c	;volatile
  4455                           
  4456                           ;eccp2.c: 68: CCPR2H = 0x00;
  4457  0008' 0E00               	movlw	0
  4458  000A' 6E68               	movwf	3944,c	;volatile
  4459                           
  4460                           ;eccp2.c: 71: PIR2bits.CCP2IF = 0;
  4461  000C' 90A1               	bcf	4001,0,c	;volatile
  4462                           
  4463                           ;eccp2.c: 74: PIE2bits.CCP2IE = 1;
  4464  000E' 80A0               	bsf	4000,0,c	;volatile
  4465                           
  4466                           ;eccp2.c: 77: CCPTMRS0bits.C2TSEL = 0x0;
  4467  0010' 0EE7               	movlw	-25
  4468  0012' 010F               	movlb	15	; () banked
  4469  0014' 1749               	andwf	73,f,b	;volatile
  4470                           
  4471                           ; BSR set to: 15
  4472  0016' 0012               	return	
  4473  0018'                    __end_of_ECCP2_Initialize:
  4474                           	opt stack 0
  4475                           tblptru	equ	0xFF8
  4476                           prodh	equ	0xFF4
  4477                           prodl	equ	0xFF3
  4478                           intcon	equ	0xFF2
  4479                           intcon2	equ	0xFF1
  4480                           postinc0	equ	0xFEE
  4481                           wreg	equ	0xFE8
  4482                           indf2	equ	0xFDF
  4483                           postinc2	equ	0xFDE
  4484                           postdec2	equ	0xFDD
  4485                           fsr2h	equ	0xFDA
  4486                           fsr2l	equ	0xFD9
  4487                           status	equ	0xFD8
  4488                           
  4489 ;; *************** function _ECCP1_Initialize *****************
  4490 ;; Defined at:
  4491 ;;		line 58 in file "mcc_generated_files/eccp1.c"
  4492 ;; Parameters:    Size  Location     Type
  4493 ;;		None
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;		None
  4496 ;; Return value:  Size  Location     Type
  4497 ;;		None               void
  4498 ;; Registers used:
  4499 ;;		wreg, status,2
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4505 ;;      Params:         0       0       0       0       0       0       0
  4506 ;;      Locals:         0       0       0       0       0       0       0
  4507 ;;      Temps:          0       0       0       0       0       0       0
  4508 ;;      Totals:         0       0       0       0       0       0       0
  4509 ;;Total ram usage:        0 bytes
  4510 ;; Hardware stack levels used:    1
  4511 ;; Hardware stack levels required when called:    3
  4512 ;; This function calls:
  4513 ;;		Nothing
  4514 ;; This function is called by:
  4515 ;;		_SYSTEM_Initialize
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           	psect	text34
  4520  0000'                    __ptext34:
  4521                           	opt stack 0
  4522  0000'                    _ECCP1_Initialize:
  4523                           	opt stack 26
  4524                           
  4525                           ;eccp1.c: 62: CCP1CON = 0x05;
  4526                           
  4527                           ; BSR set to: 15
  4528                           ;incstack = 0
  4529  0000' 0E05               	movlw	5
  4530  0002' 6EBD               	movwf	4029,c	;volatile
  4531                           
  4532                           ;eccp1.c: 65: CCPR1L = 0x00;
  4533  0004' 0E00               	movlw	0
  4534  0006' 6EBE               	movwf	4030,c	;volatile
  4535                           
  4536                           ;eccp1.c: 68: CCPR1H = 0x00;
  4537  0008' 0E00               	movlw	0
  4538  000A' 6EBF               	movwf	4031,c	;volatile
  4539                           
  4540                           ;eccp1.c: 71: PIR1bits.CCP1IF = 0;
  4541  000C' 949E               	bcf	3998,2,c	;volatile
  4542                           
  4543                           ;eccp1.c: 74: PIE1bits.CCP1IE = 1;
  4544  000E' 849D               	bsf	3997,2,c	;volatile
  4545                           
  4546                           ;eccp1.c: 77: CCPTMRS0bits.C1TSEL = 0x0;
  4547  0010' 0EFC               	movlw	-4
  4548  0012' 010F               	movlb	15	; () banked
  4549  0014' 1749               	andwf	73,f,b	;volatile
  4550                           
  4551                           ; BSR set to: 15
  4552  0016' 0012               	return	
  4553  0018'                    __end_of_ECCP1_Initialize:
  4554                           	opt stack 0
  4555                           tblptru	equ	0xFF8
  4556                           prodh	equ	0xFF4
  4557                           prodl	equ	0xFF3
  4558                           intcon	equ	0xFF2
  4559                           intcon2	equ	0xFF1
  4560                           postinc0	equ	0xFEE
  4561                           wreg	equ	0xFE8
  4562                           indf2	equ	0xFDF
  4563                           postinc2	equ	0xFDE
  4564                           postdec2	equ	0xFDD
  4565                           fsr2h	equ	0xFDA
  4566                           fsr2l	equ	0xFD9
  4567                           status	equ	0xFD8
  4568                           
  4569 ;; *************** function _ADC_Initialize *****************
  4570 ;; Defined at:
  4571 ;;		line 58 in file "mcc_generated_files/adc.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;		None
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;		None
  4576 ;; Return value:  Size  Location     Type
  4577 ;;		None               void
  4578 ;; Registers used:
  4579 ;;		wreg, status,2
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4585 ;;      Params:         0       0       0       0       0       0       0
  4586 ;;      Locals:         0       0       0       0       0       0       0
  4587 ;;      Temps:          0       0       0       0       0       0       0
  4588 ;;      Totals:         0       0       0       0       0       0       0
  4589 ;;Total ram usage:        0 bytes
  4590 ;; Hardware stack levels used:    1
  4591 ;; Hardware stack levels required when called:    3
  4592 ;; This function calls:
  4593 ;;		Nothing
  4594 ;; This function is called by:
  4595 ;;		_SYSTEM_Initialize
  4596 ;;		_TempInit
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           	psect	text35
  4601  0000'                    __ptext35:
  4602                           	opt stack 0
  4603  0000'                    _ADC_Initialize:
  4604                           	opt stack 26
  4605                           
  4606                           ;adc.c: 62: ADCON0 = 0x01;
  4607                           
  4608                           ; BSR set to: 15
  4609                           ;incstack = 0
  4610  0000' 0E01               	movlw	1
  4611  0002' 6EC2               	movwf	4034,c	;volatile
  4612                           
  4613                           ;adc.c: 65: ADCON1 = 0x80;
  4614  0004' 0E80               	movlw	128
  4615  0006' 6EC1               	movwf	4033,c	;volatile
  4616                           
  4617                           ;adc.c: 68: ADCON2 = 0x8A;
  4618  0008' 0E8A               	movlw	138
  4619  000A' 6EC0               	movwf	4032,c	;volatile
  4620                           
  4621                           ;adc.c: 71: ADRESL = 0x00;
  4622  000C' 0E00               	movlw	0
  4623  000E' 6EC3               	movwf	4035,c	;volatile
  4624                           
  4625                           ;adc.c: 74: ADRESH = 0x00;
  4626  0010' 0E00               	movlw	0
  4627  0012' 6EC4               	movwf	4036,c	;volatile
  4628                           
  4629                           ;adc.c: 77: PIE1bits.ADIE = 1;
  4630  0014' 8C9D               	bsf	3997,6,c	;volatile
  4631  0016' 0012               	return	
  4632  0018'                    __end_of_ADC_Initialize:
  4633                           	opt stack 0
  4634                           tblptru	equ	0xFF8
  4635                           prodh	equ	0xFF4
  4636                           prodl	equ	0xFF3
  4637                           intcon	equ	0xFF2
  4638                           intcon2	equ	0xFF1
  4639                           postinc0	equ	0xFEE
  4640                           wreg	equ	0xFE8
  4641                           indf2	equ	0xFDF
  4642                           postinc2	equ	0xFDE
  4643                           postdec2	equ	0xFDD
  4644                           fsr2h	equ	0xFDA
  4645                           fsr2l	equ	0xFD9
  4646                           status	equ	0xFD8
  4647                           
  4648 ;; *************** function _INTERRUPT_InterruptManager *****************
  4649 ;; Defined at:
  4650 ;;		line 76 in file "mcc_generated_files/interrupt_manager.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;		None
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;		None
  4655 ;; Return value:  Size  Location     Type
  4656 ;;		None               void
  4657 ;; Registers used:
  4658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4664 ;;      Params:         0       0       0       0       0       0       0
  4665 ;;      Locals:         0       0       0       0       0       0       0
  4666 ;;      Temps:         14       0       0       0       0       0       0
  4667 ;;      Totals:        14       0       0       0       0       0       0
  4668 ;;Total ram usage:       14 bytes
  4669 ;; Hardware stack levels used:    1
  4670 ;; Hardware stack levels required when called:    2
  4671 ;; This function calls:
  4672 ;;		_ADC_ISR
  4673 ;;		_ECCP1_CaptureISR
  4674 ;;		_ECCP2_CaptureISR
  4675 ;;		_EUSART1_Receive_ISR
  4676 ;;		_EUSART1_Transmit_ISR
  4677 ;;		_I2C1_BusCollisionISR
  4678 ;;		_I2C1_ISR
  4679 ;;		_TMR2_ISR
  4680 ;; This function is called by:
  4681 ;;		Interrupt level 2
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685                           	psect	intcode
  4686  0000'                    __pintcode:
  4687                           	opt stack 0
  4688  0000'                    _INTERRUPT_InterruptManager:
  4689                           	opt stack 23
  4690                           
  4691                           ;incstack = 0
  4692  0000' CFFA F006'         	movff	pclath,??_INTERRUPT_InterruptManager
  4693  0004' CFFB F007'         	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4694  0008' CFE9 F008'         	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  4695  000C' CFEA F009'         	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  4696  0010' CFE1 F00A'         	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  4697  0014' CFE2 F00B'         	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  4698  0018' CFD9 F00C'         	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  4699  001C' CFDA F00D'         	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  4700  0020' CFF3 F00E'         	movff	prodl,??_INTERRUPT_InterruptManager+8
  4701  0024' CFF4 F00F'         	movff	prodh,??_INTERRUPT_InterruptManager+9
  4702  0028' CFF6 F010'         	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  4703  002C' CFF7 F011'         	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  4704  0030' CFF8 F012'         	movff	tblptru,??_INTERRUPT_InterruptManager+12
  4705  0034' CFF5 F013'         	movff	tablat,??_INTERRUPT_InterruptManager+13
  4706                           
  4707                           ;interrupt_manager.c: 78: if (PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1) {
  4708  0038' B69D               	btfsc	3997,3,c	;volatile
  4709  003A' A69E               	btfss	3998,3,c	;volatile
  4710  003C' D003               	goto	i2l385
  4711                           
  4712                           ;interrupt_manager.c: 79: I2C1_ISR();
  4713  003E' EC00' F000'        	call	_I2C1_ISR	;wreg free
  4714                           
  4715                           ;interrupt_manager.c: 80: } else if (PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1) {
  4716  0042' D029               	goto	i2l401
  4717  0044'                    i2l385:
  4718  0044' B6A0               	btfsc	4000,3,c	;volatile
  4719  0046' A6A1               	btfss	4001,3,c	;volatile
  4720  0048' D003               	goto	i2l387
  4721                           
  4722                           ;interrupt_manager.c: 81: I2C1_BusCollisionISR();
  4723  004A' EC00' F000'        	call	_I2C1_BusCollisionISR	;wreg free
  4724                           
  4725                           ;interrupt_manager.c: 82: } else if (PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1) {
  4726  004E' D023               	goto	i2l401
  4727  0050'                    i2l387:
  4728  0050' BA9D               	btfsc	3997,5,c	;volatile
  4729  0052' AA9E               	btfss	3998,5,c	;volatile
  4730  0054' D003               	goto	i2l389
  4731                           
  4732                           ;interrupt_manager.c: 83: EUSART1_Receive_ISR();
  4733  0056' EC00' F000'        	call	_EUSART1_Receive_ISR	;wreg free
  4734                           
  4735                           ;interrupt_manager.c: 84: } else if (PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1) {
  4736  005A' D01D               	goto	i2l401
  4737  005C'                    i2l389:
  4738  005C' B89D               	btfsc	3997,4,c	;volatile
  4739  005E' A89E               	btfss	3998,4,c	;volatile
  4740  0060' D003               	goto	i2l391
  4741                           
  4742                           ;interrupt_manager.c: 85: EUSART1_Transmit_ISR();
  4743  0062' EC00' F000'        	call	_EUSART1_Transmit_ISR	;wreg free
  4744                           
  4745                           ;interrupt_manager.c: 86: } else if (PIE1bits.CCP1IE == 1 && PIR1bits.CCP1IF == 1) {
  4746  0066' D017               	goto	i2l401
  4747  0068'                    i2l391:
  4748  0068' B49D               	btfsc	3997,2,c	;volatile
  4749  006A' A49E               	btfss	3998,2,c	;volatile
  4750  006C' D003               	goto	i2l393
  4751                           
  4752                           ;interrupt_manager.c: 87: ECCP1_CaptureISR();
  4753  006E' EC00' F000'        	call	_ECCP1_CaptureISR	;wreg free
  4754                           
  4755                           ;interrupt_manager.c: 88: } else if (PIE2bits.CCP2IE == 1 && PIR2bits.CCP2IF == 1) {
  4756  0072' D011               	goto	i2l401
  4757  0074'                    i2l393:
  4758  0074' B0A0               	btfsc	4000,0,c	;volatile
  4759  0076' A0A1               	btfss	4001,0,c	;volatile
  4760  0078' D003               	goto	i2l395
  4761                           
  4762                           ;interrupt_manager.c: 89: ECCP2_CaptureISR();
  4763  007A' EC00' F000'        	call	_ECCP2_CaptureISR	;wreg free
  4764                           
  4765                           ;interrupt_manager.c: 90: } else if (PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1) {
  4766  007E' D00B               	goto	i2l401
  4767  0080'                    i2l395:
  4768  0080' B29D               	btfsc	3997,1,c	;volatile
  4769  0082' A29E               	btfss	3998,1,c	;volatile
  4770  0084' D003               	goto	i2l397
  4771                           
  4772                           ;interrupt_manager.c: 91: TMR2_ISR();
  4773  0086' EC00' F000'        	call	_TMR2_ISR	;wreg free
  4774                           
  4775                           ;interrupt_manager.c: 92: } else if (PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1) {
  4776  008A' D005               	goto	i2l401
  4777  008C'                    i2l397:
  4778  008C' BC9D               	btfsc	3997,6,c	;volatile
  4779  008E' AC9E               	btfss	3998,6,c	;volatile
  4780  0090' D002               	goto	i2l401
  4781                           
  4782                           ;interrupt_manager.c: 93: ADC_ISR();
  4783  0092' EC00' F000'        	call	_ADC_ISR	;wreg free
  4784  0096'                    i2l401:
  4785  0096' C013' FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  4786  009A' C012' FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  4787  009E' C011' FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  4788  00A2' C010' FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  4789  00A6' C00F' FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  4790  00AA' C00E' FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  4791  00AE' C00D' FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  4792  00B2' C00C' FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  4793  00B6' C00B' FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  4794  00BA' C00A' FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  4795  00BE' C009' FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  4796  00C2' C008' FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  4797  00C6' C007' FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4798  00CA' C006' FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4799  00CE' 0011               	retfie		f
  4800  00D0'                    __end_of_INTERRUPT_InterruptManager:
  4801                           	opt stack 0
  4802                           pclatu	equ	0xFFB
  4803                           pclath	equ	0xFFA
  4804                           tblptru	equ	0xFF8
  4805                           tblptrh	equ	0xFF7
  4806                           tblptrl	equ	0xFF6
  4807                           tablat	equ	0xFF5
  4808                           prodh	equ	0xFF4
  4809                           prodl	equ	0xFF3
  4810                           intcon	equ	0xFF2
  4811                           intcon2	equ	0xFF1
  4812                           postinc0	equ	0xFEE
  4813                           fsr0h	equ	0xFEA
  4814                           fsr0l	equ	0xFE9
  4815                           wreg	equ	0xFE8
  4816                           fsr1h	equ	0xFE2
  4817                           fsr1l	equ	0xFE1
  4818                           indf2	equ	0xFDF
  4819                           postinc2	equ	0xFDE
  4820                           postdec2	equ	0xFDD
  4821                           fsr2h	equ	0xFDA
  4822                           fsr2l	equ	0xFD9
  4823                           status	equ	0xFD8
  4824                           
  4825 ;; *************** function _TMR2_ISR *****************
  4826 ;; Defined at:
  4827 ;;		line 107 in file "mcc_generated_files/tmr2.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;		None
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;		None
  4832 ;; Return value:  Size  Location     Type
  4833 ;;		None               void
  4834 ;; Registers used:
  4835 ;;		cstack
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4841 ;;      Params:         0       0       0       0       0       0       0
  4842 ;;      Locals:         0       0       0       0       0       0       0
  4843 ;;      Temps:          0       0       0       0       0       0       0
  4844 ;;      Totals:         0       0       0       0       0       0       0
  4845 ;;Total ram usage:        0 bytes
  4846 ;; Hardware stack levels used:    1
  4847 ;; Hardware stack levels required when called:    1
  4848 ;; This function calls:
  4849 ;;		_TMR2_CallBack
  4850 ;; This function is called by:
  4851 ;;		_INTERRUPT_InterruptManager
  4852 ;; This function uses a non-reentrant model
  4853 ;;
  4854                           
  4855                           	psect	text37
  4856  0000'                    __ptext37:
  4857                           	opt stack 0
  4858  0000'                    _TMR2_ISR:
  4859                           	opt stack 23
  4860                           
  4861                           ;tmr2.c: 110: PIR1bits.TMR2IF = 0;
  4862                           
  4863                           ;incstack = 0
  4864  0000' 929E               	bcf	3998,1,c	;volatile
  4865                           
  4866                           ;tmr2.c: 114: TMR2_CallBack();
  4867  0002' EC00' F000'        	call	_TMR2_CallBack	;wreg free
  4868  0006' 0012               	return	
  4869  0008'                    __end_of_TMR2_ISR:
  4870                           	opt stack 0
  4871                           pclatu	equ	0xFFB
  4872                           pclath	equ	0xFFA
  4873                           tblptru	equ	0xFF8
  4874                           tblptrh	equ	0xFF7
  4875                           tblptrl	equ	0xFF6
  4876                           tablat	equ	0xFF5
  4877                           prodh	equ	0xFF4
  4878                           prodl	equ	0xFF3
  4879                           intcon	equ	0xFF2
  4880                           intcon2	equ	0xFF1
  4881                           postinc0	equ	0xFEE
  4882                           fsr0h	equ	0xFEA
  4883                           fsr0l	equ	0xFE9
  4884                           wreg	equ	0xFE8
  4885                           fsr1h	equ	0xFE2
  4886                           fsr1l	equ	0xFE1
  4887                           indf2	equ	0xFDF
  4888                           postinc2	equ	0xFDE
  4889                           postdec2	equ	0xFDD
  4890                           fsr2h	equ	0xFDA
  4891                           fsr2l	equ	0xFD9
  4892                           status	equ	0xFD8
  4893                           
  4894 ;; *************** function _TMR2_CallBack *****************
  4895 ;; Defined at:
  4896 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;		None
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;		None
  4901 ;; Return value:  Size  Location     Type
  4902 ;;		None               void
  4903 ;; Registers used:
  4904 ;;		None
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4910 ;;      Params:         0       0       0       0       0       0       0
  4911 ;;      Locals:         0       0       0       0       0       0       0
  4912 ;;      Temps:          0       0       0       0       0       0       0
  4913 ;;      Totals:         0       0       0       0       0       0       0
  4914 ;;Total ram usage:        0 bytes
  4915 ;; Hardware stack levels used:    1
  4916 ;; This function calls:
  4917 ;;		Nothing
  4918 ;; This function is called by:
  4919 ;;		_TMR2_ISR
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text38
  4924  0000'                    __ptext38:
  4925                           	opt stack 0
  4926  0000'                    _TMR2_CallBack:
  4927                           	opt stack 23
  4928                           
  4929                           ;incstack = 0
  4930  0000' 0012               	return	
  4931  0002'                    __end_of_TMR2_CallBack:
  4932                           	opt stack 0
  4933                           pclatu	equ	0xFFB
  4934                           pclath	equ	0xFFA
  4935                           tblptru	equ	0xFF8
  4936                           tblptrh	equ	0xFF7
  4937                           tblptrl	equ	0xFF6
  4938                           tablat	equ	0xFF5
  4939                           prodh	equ	0xFF4
  4940                           prodl	equ	0xFF3
  4941                           intcon	equ	0xFF2
  4942                           intcon2	equ	0xFF1
  4943                           postinc0	equ	0xFEE
  4944                           fsr0h	equ	0xFEA
  4945                           fsr0l	equ	0xFE9
  4946                           wreg	equ	0xFE8
  4947                           fsr1h	equ	0xFE2
  4948                           fsr1l	equ	0xFE1
  4949                           indf2	equ	0xFDF
  4950                           postinc2	equ	0xFDE
  4951                           postdec2	equ	0xFDD
  4952                           fsr2h	equ	0xFDA
  4953                           fsr2l	equ	0xFD9
  4954                           status	equ	0xFD8
  4955                           
  4956 ;; *************** function _I2C1_ISR *****************
  4957 ;; Defined at:
  4958 ;;		line 226 in file "mcc_generated_files/i2c1.c"
  4959 ;; Parameters:    Size  Location     Type
  4960 ;;		None
  4961 ;; Auto vars:     Size  Location     Type
  4962 ;;		None
  4963 ;; Return value:  Size  Location     Type
  4964 ;;		None               void
  4965 ;; Registers used:
  4966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4967 ;; Tracked objects:
  4968 ;;		On entry : 0/0
  4969 ;;		On exit  : 0/0
  4970 ;;		Unchanged: 0/0
  4971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4972 ;;      Params:         0       0       0       0       0       0       0
  4973 ;;      Locals:         0       0       0       0       0       0       0
  4974 ;;      Temps:          3       0       0       0       0       0       0
  4975 ;;      Totals:         3       0       0       0       0       0       0
  4976 ;;Total ram usage:        3 bytes
  4977 ;; Hardware stack levels used:    1
  4978 ;; Hardware stack levels required when called:    1
  4979 ;; This function calls:
  4980 ;;		_I2C1_FunctionComplete
  4981 ;;		_I2C1_Stop
  4982 ;; This function is called by:
  4983 ;;		_INTERRUPT_InterruptManager
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           
  4987                           	psect	text39
  4988  0000'                    __ptext39:
  4989                           	opt stack 0
  4990  0000'                    _I2C1_ISR:
  4991                           	opt stack 23
  4992                           
  4993                           ;i2c1.c: 228: static uint8_t *pi2c_buf_ptr;
  4994                           ;i2c1.c: 229: static uint16_t i2c_address = 0;
  4995                           ;i2c1.c: 230: static uint8_t i2c_bytes_left = 0;
  4996                           ;i2c1.c: 231: static uint8_t i2c_10bit_address_restart = 0;
  4997                           ;i2c1.c: 233: PIR1bits.SSP1IF = 0;
  4998                           
  4999                           ;incstack = 0
  5000  0000' 969E               	bcf	3998,3,c	;volatile
  5001                           
  5002                           ;i2c1.c: 237: if (SSP1CON1bits.WCOL) {
  5003  0002' AEC6               	btfss	4038,7,c	;volatile
  5004  0004' D105               	goto	i2l2893
  5005                           
  5006                           ;i2c1.c: 239: SSP1CON1bits.WCOL = 0;
  5007  0006' 9EC6               	bcf	4038,7,c	;volatile
  5008                           
  5009                           ;i2c1.c: 240: i2c1_state = S_MASTER_IDLE;
  5010  0008' 0E00               	movlw	0
  5011  000A' 6E11'              	movwf	_i2c1_state,c
  5012                           
  5013                           ;i2c1.c: 241: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
  5014  000C' EE20 F003          	lfsr	2,3
  5015  0010' 5002'              	movf	_p_i2c1_current,w,c
  5016  0012' 26D9               	addwf	fsr2l,f,c
  5017  0014' 5003'              	movf	_p_i2c1_current+1,w,c
  5018  0016' 22DA               	addwfc	fsr2h,f,c
  5019  0018' CFDE F003'         	movff	postinc2,??_I2C1_ISR
  5020  001C' CFDD F004'         	movff	postdec2,??_I2C1_ISR+1
  5021  0020' C003' FFD9         	movff	??_I2C1_ISR,fsr2l
  5022  0024' C004' FFDA         	movff	??_I2C1_ISR+1,fsr2h
  5023  0028' 0E01               	movlw	1
  5024  002A' 6EDF               	movwf	indf2,c
  5025                           
  5026                           ;i2c1.c: 244: p_i2c1_current = (0);
  5027  002C' 0E00               	movlw	0
  5028  002E' 6E03'              	movwf	_p_i2c1_current+1,c
  5029  0030' 0E00               	movlw	0
  5030  0032' 6E02'              	movwf	_p_i2c1_current,c
  5031  0034' 0012               	return	
  5032  0036'                    i2l60:
  5033                           
  5034                           ;i2c1.c: 253: if (i2c1_object.trStatus.s.empty != 1) {
  5035  0036' B204'              	btfsc	_i2c1_object+4,1,c
  5036  0038' 0012               	return	
  5037                           
  5038                           ;i2c1.c: 255: p_i2c1_current = i2c1_object.pTrHead;
  5039  003A' C003' F003'        	movff	_i2c1_object+3,_p_i2c1_current+1
  5040  003E' C002' F002'        	movff	_i2c1_object+2,_p_i2c1_current
  5041                           
  5042                           ;i2c1.c: 256: i2c1_trb_count = i2c1_object.pTrHead->count;
  5043  0042' C002' FFD9         	movff	_i2c1_object+2,fsr2l
  5044  0046' C003' FFDA         	movff	_i2c1_object+3,fsr2h
  5045  004A' 50DF               	movf	indf2,w,c
  5046  004C' 6E12'              	movwf	_i2c1_trb_count,c
  5047                           
  5048                           ;i2c1.c: 257: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
  5049  004E' EE20 F001          	lfsr	2,1
  5050  0052' 5002'              	movf	_i2c1_object+2,w,c
  5051  0054' 26D9               	addwf	fsr2l,f,c
  5052  0056' 5003'              	movf	_i2c1_object+3,w,c
  5053  0058' 22DA               	addwfc	fsr2h,f,c
  5054  005A' CFDE F004'         	movff	postinc2,_p_i2c1_trb_current
  5055  005E' CFDD F005'         	movff	postdec2,_p_i2c1_trb_current+1
  5056                           
  5057                           ;i2c1.c: 259: i2c1_object.pTrHead++;
  5058  0062' 0E06               	movlw	6
  5059  0064' 2602'              	addwf	_i2c1_object+2,f,c
  5060  0066' 0E00               	movlw	0
  5061  0068' 2203'              	addwfc	_i2c1_object+3,f,c
  5062                           
  5063                           ;i2c1.c: 262: if (i2c1_object.pTrHead == (i2c1_tr_queue + 1)) {
  5064  006A' 0E00'              	movlw	low (_i2c1_tr_queue+6)
  5065  006C' 6E00'              	movwf	??_I2C1_ISR& (0+255),c
  5066  006E' 0E00'              	movlw	high (_i2c1_tr_queue+6)
  5067  0070' 6E00'              	movwf	(??_I2C1_ISR+1)& (0+255),c
  5068  0072' EE20' F000'        	lfsr	2,_i2c1_object+2
  5069  0076' 52DE               	movf	postinc2,f,c
  5070  0078' 5004'              	movf	??_I2C1_ISR+1,w,c
  5071  007A' 18DD               	xorwf	postdec2,w,c
  5072  007C' C003' FFE8         	movff	??_I2C1_ISR,wreg
  5073  0080' B4D8               	btfsc	status,2,c
  5074  0082' 18DF               	xorwf	indf2,w,c
  5075  0084' A4D8               	btfss	status,2,c
  5076  0086' D006               	goto	i2l2783
  5077                           
  5078                           ;i2c1.c: 264: i2c1_object.pTrHead = i2c1_tr_queue;
  5079  0088' 0100               	movlb	0	; () banked
  5080  008A' 0E00'              	movlw	high _i2c1_tr_queue
  5081  008C' 6E03'              	movwf	_i2c1_object+3,c
  5082  008E' 0100               	movlb	0	; () banked
  5083  0090' 0E00'              	movlw	low _i2c1_tr_queue
  5084  0092' 6E02'              	movwf	_i2c1_object+2,c
  5085  0094'                    i2l2783:
  5086                           
  5087                           ;i2c1.c: 265: }
  5088                           ;i2c1.c: 269: i2c1_object.trStatus.s.full = 0;
  5089  0094' 9004'              	bcf	_i2c1_object+4,0,c
  5090                           
  5091                           ;i2c1.c: 272: if (i2c1_object.pTrHead == i2c1_object.pTrTail) {
  5092  0096' EE20' F000'        	lfsr	2,_i2c1_object+2
  5093  009A' 52DE               	movf	postinc2,f,c
  5094  009C' 5001'              	movf	_i2c1_object+1,w,c
  5095  009E' 18DD               	xorwf	postdec2,w,c
  5096  00A0' C000' FFE8         	movff	_i2c1_object,wreg
  5097  00A4' B4D8               	btfsc	status,2,c
  5098  00A6' 18DF               	xorwf	indf2,w,c
  5099  00A8' B4D8               	btfsc	status,2,c
  5100                           
  5101                           ;i2c1.c: 274: i2c1_object.trStatus.s.empty = 1;
  5102  00AA' 8204'              	bsf	_i2c1_object+4,1,c
  5103                           
  5104                           ;i2c1.c: 275: }
  5105                           ;i2c1.c: 278: SSP1CON2bits.SEN = 1;
  5106  00AC' 80C5               	bsf	4037,0,c	;volatile
  5107                           
  5108                           ;i2c1.c: 281: i2c1_state = S_MASTER_SEND_ADDR;
  5109  00AE' 0E02               	movlw	2
  5110  00B0' 6E11'              	movwf	_i2c1_state,c
  5111  00B2' 0012               	return	
  5112  00B4'                    i2l65:
  5113                           
  5114                           ;i2c1.c: 291: SSP1CON2bits.RSEN = 1;
  5115  00B4' 82C5               	bsf	4037,1,c	;volatile
  5116                           
  5117                           ;i2c1.c: 294: i2c1_state = S_MASTER_SEND_ADDR;
  5118  00B6' 0E02               	movlw	2
  5119  00B8' 6E11'              	movwf	_i2c1_state,c
  5120                           
  5121                           ;i2c1.c: 296: break;
  5122  00BA' 0012               	return	
  5123  00BC'                    i2l66:
  5124                           
  5125                           ;i2c1.c: 300: if (SSP1CON2bits.ACKSTAT) {
  5126  00BC' ACC5               	btfss	4037,6,c	;volatile
  5127  00BE' D005               	goto	i2l2797
  5128                           
  5129                           ;i2c1.c: 301: i2c1_object.i2cErrors++;
  5130  00C0' 2A06'              	incf	_i2c1_object+6,f,c
  5131                           
  5132                           ;i2c1.c: 302: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  5133  00C2' 0E04               	movlw	4
  5134  00C4' EC00' F000'        	call	_I2C1_Stop
  5135                           
  5136                           ;i2c1.c: 303: } else {
  5137  00C8' 0012               	return	
  5138  00CA'                    i2l2797:
  5139                           
  5140                           ;i2c1.c: 305: SSP1BUF = (i2c_address >> 1) & 0x00FF;
  5141  00CA' 90D8               	bcf	status,0,c
  5142  00CC' 301A'              	rrcf	I2C1_ISR@i2c_address+1,w,c
  5143  00CE' 6E00'              	movwf	(??_I2C1_ISR+1)& (0+255),c
  5144  00D0' 3019'              	rrcf	I2C1_ISR@i2c_address,w,c
  5145  00D2' 6E00'              	movwf	??_I2C1_ISR& (0+255),c
  5146  00D4' 5003'              	movf	??_I2C1_ISR,w,c
  5147  00D6' 6EC9               	movwf	4041,c	;volatile
  5148                           
  5149                           ;i2c1.c: 308: if (i2c_address & 0x01) {
  5150  00D8' A019'              	btfss	I2C1_ISR@i2c_address,0,c
  5151  00DA' D003               	goto	i2l2803
  5152                           
  5153                           ;i2c1.c: 311: i2c1_state = S_MASTER_10BIT_RESTART;
  5154  00DC' 0E0B               	movlw	11
  5155  00DE' 6E11'              	movwf	_i2c1_state,c
  5156                           
  5157                           ;i2c1.c: 312: } else {
  5158  00E0' 0012               	return	
  5159  00E2'                    i2l2803:
  5160                           
  5161                           ;i2c1.c: 314: i2c1_state = S_MASTER_SEND_DATA;
  5162  00E2' 0E03               	movlw	3
  5163  00E4' 6E11'              	movwf	_i2c1_state,c
  5164  00E6' 0012               	return	
  5165  00E8'                    i2l71:
  5166                           
  5167                           ;i2c1.c: 322: if (SSP1CON2bits.ACKSTAT) {
  5168  00E8' ACC5               	btfss	4037,6,c	;volatile
  5169  00EA' D005               	goto	i2l72
  5170                           
  5171                           ;i2c1.c: 323: i2c1_object.i2cErrors++;
  5172  00EC' 2A06'              	incf	_i2c1_object+6,f,c
  5173                           
  5174                           ;i2c1.c: 324: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  5175  00EE' 0E04               	movlw	4
  5176  00F0' EC00' F000'        	call	_I2C1_Stop
  5177                           
  5178                           ;i2c1.c: 325: } else {
  5179  00F4' 0012               	return	
  5180  00F6'                    i2l72:
  5181                           
  5182                           ;i2c1.c: 328: SSP1CON2bits.RSEN = 1;
  5183  00F6' 82C5               	bsf	4037,1,c	;volatile
  5184                           
  5185                           ;i2c1.c: 332: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  5186  00F8' C01A' F003'        	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR
  5187  00FC' C003' F004'        	movff	??_I2C1_ISR,??_I2C1_ISR+1
  5188  0100' 6A00'              	clrf	(??_I2C1_ISR+2)& (0+255),c
  5189  0102' 0E06               	movlw	6
  5190  0104' 1604'              	andwf	??_I2C1_ISR+1,f,c
  5191  0106' 0E00               	movlw	0
  5192  0108' 1605'              	andwf	??_I2C1_ISR+2,f,c
  5193  010A' 0EF0               	movlw	240
  5194  010C' 1004'              	iorwf	??_I2C1_ISR+1,w,c
  5195  010E' 6E19'              	movwf	I2C1_ISR@i2c_address,c
  5196  0110' 5005'              	movf	??_I2C1_ISR+2,w,c
  5197  0112' 6E1A'              	movwf	I2C1_ISR@i2c_address+1,c
  5198                           
  5199                           ;i2c1.c: 335: i2c_address |= 0x0001;
  5200  0114' 8019'              	bsf	I2C1_ISR@i2c_address,0,c
  5201                           
  5202                           ;i2c1.c: 338: i2c_10bit_address_restart = 1;
  5203  0116' 0E01               	movlw	1
  5204  0118' 6E08'              	movwf	I2C1_ISR@i2c_10bit_address_restart,c
  5205                           
  5206                           ;i2c1.c: 341: i2c1_state = S_MASTER_SEND_ADDR;
  5207  011A' 0E02               	movlw	2
  5208  011C' 6E11'              	movwf	_i2c1_state,c
  5209  011E' 0012               	return	
  5210  0120'                    i2l2817:
  5211                           
  5212                           ;i2c1.c: 359: if (i2c_10bit_address_restart != 1) {
  5213  0120' 0408'              	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
  5214  0122' B4D8               	btfsc	status,2,c
  5215  0124' D01A               	goto	i2l76
  5216                           
  5217                           ;i2c1.c: 361: i2c_address = p_i2c1_trb_current->address;
  5218  0126' C004' FFD9         	movff	_p_i2c1_trb_current,fsr2l
  5219  012A' C005' FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
  5220  012E' CFDE F019'         	movff	postinc2,I2C1_ISR@i2c_address
  5221  0132' CFDD F01A'         	movff	postdec2,I2C1_ISR@i2c_address+1
  5222                           
  5223                           ;i2c1.c: 362: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
  5224  0136' EE20 F003          	lfsr	2,3
  5225  013A' 5004'              	movf	_p_i2c1_trb_current,w,c
  5226  013C' 26D9               	addwf	fsr2l,f,c
  5227  013E' 5005'              	movf	_p_i2c1_trb_current+1,w,c
  5228  0140' 22DA               	addwfc	fsr2h,f,c
  5229  0142' CFDE F000'         	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
  5230  0146' CFDD F001'         	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
  5231                           
  5232                           ;i2c1.c: 363: i2c_bytes_left = p_i2c1_trb_current->length;
  5233  014A' EE20 F002          	lfsr	2,2
  5234  014E' 5004'              	movf	_p_i2c1_trb_current,w,c
  5235  0150' 26D9               	addwf	fsr2l,f,c
  5236  0152' 5005'              	movf	_p_i2c1_trb_current+1,w,c
  5237  0154' 22DA               	addwfc	fsr2h,f,c
  5238  0156' 50DF               	movf	indf2,w,c
  5239  0158' 6E09'              	movwf	I2C1_ISR@i2c_bytes_left,c
  5240  015A'                    i2l76:
  5241                           
  5242                           ;i2c1.c: 383: SSP1BUF = i2c_address;
  5243  015A' C019' FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
  5244                           
  5245                           ;i2c1.c: 384: if (i2c_address & 0x01) {
  5246  015E' A019'              	btfss	I2C1_ISR@i2c_address,0,c
  5247  0160' D003               	goto	i2l2837
  5248                           
  5249                           ;i2c1.c: 386: i2c1_state = S_MASTER_ACK_ADDR;
  5250  0162' 0E05               	movlw	5
  5251  0164' 6E11'              	movwf	_i2c1_state,c
  5252                           
  5253                           ;i2c1.c: 387: } else {
  5254  0166' 0012               	return	
  5255  0168'                    i2l2837:
  5256                           
  5257                           ;i2c1.c: 389: i2c1_state = S_MASTER_SEND_DATA;
  5258  0168' 0E03               	movlw	3
  5259  016A' 6E11'              	movwf	_i2c1_state,c
  5260  016C' 0012               	return	
  5261  016E'                    i2l82:
  5262                           
  5263                           ;i2c1.c: 397: if (SSP1CON2bits.ACKSTAT) {
  5264  016E' ACC5               	btfss	4037,6,c	;volatile
  5265  0170' D006               	goto	i2l2845
  5266                           
  5267                           ;i2c1.c: 399: i2c1_object.i2cErrors++;
  5268  0172' 2A06'              	incf	_i2c1_object+6,f,c
  5269                           
  5270                           ;i2c1.c: 402: SSP1CON2bits.ACKSTAT = 0;
  5271  0174' 9CC5               	bcf	4037,6,c	;volatile
  5272                           
  5273                           ;i2c1.c: 405: I2C1_Stop(I2C1_DATA_NO_ACK);
  5274  0176' 0E05               	movlw	5
  5275  0178' EC00' F000'        	call	_I2C1_Stop
  5276                           
  5277                           ;i2c1.c: 407: } else {
  5278  017C' 0012               	return	
  5279  017E'                    i2l2845:
  5280                           
  5281                           ;i2c1.c: 409: if (i2c_bytes_left-- == 0U) {
  5282  017E' 0609'              	decf	I2C1_ISR@i2c_bytes_left,f,c
  5283  0180' 2800'              	incf	I2C1_ISR@i2c_bytes_left& (0+255),w,c
  5284  0182' A4D8               	btfss	status,2,c
  5285  0184' D00E               	goto	i2l2855
  5286                           
  5287                           ;i2c1.c: 413: p_i2c1_trb_current++;
  5288  0186' 0E06               	movlw	6
  5289  0188' 2604'              	addwf	_p_i2c1_trb_current,f,c
  5290  018A' 0E00               	movlw	0
  5291  018C' 2205'              	addwfc	_p_i2c1_trb_current+1,f,c
  5292                           
  5293                           ;i2c1.c: 416: if (--i2c1_trb_count == 0) {
  5294  018E' 2E12'              	decfsz	_i2c1_trb_count,f,c
  5295  0190' D004               	goto	i2l86
  5296                           
  5297                           ;i2c1.c: 417: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  5298  0192' 0E00               	movlw	0
  5299  0194' EC00' F000'        	call	_I2C1_Stop
  5300                           
  5301                           ;i2c1.c: 418: } else {
  5302  0198' 0012               	return	
  5303  019A'                    i2l86:
  5304                           
  5305                           ;i2c1.c: 425: SSP1CON2bits.RSEN = 1;
  5306  019A' 82C5               	bsf	4037,1,c	;volatile
  5307                           
  5308                           ;i2c1.c: 428: i2c1_state = S_MASTER_SEND_ADDR;
  5309  019C' 0E02               	movlw	2
  5310  019E' 6E11'              	movwf	_i2c1_state,c
  5311  01A0' 0012               	return	
  5312  01A2'                    i2l2855:
  5313                           
  5314                           ;i2c1.c: 433: SSP1BUF = *pi2c_buf_ptr++;
  5315  01A2' C000' FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  5316  01A6' C001' FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  5317  01AA' 50DF               	movf	indf2,w,c
  5318  01AC' 6EC9               	movwf	4041,c	;volatile
  5319  01AE' 4A00'              	infsnz	I2C1_ISR@pi2c_buf_ptr,f,c
  5320  01B0' 2A01'              	incf	I2C1_ISR@pi2c_buf_ptr+1,f,c
  5321  01B2' 0012               	return	
  5322  01B4'                    i2l89:
  5323                           
  5324                           ;i2c1.c: 441: if (SSP1CON2bits.ACKSTAT) {
  5325  01B4' ACC5               	btfss	4037,6,c	;volatile
  5326  01B6' D006               	goto	i2l90
  5327                           
  5328                           ;i2c1.c: 444: i2c1_object.i2cErrors++;
  5329  01B8' 2A06'              	incf	_i2c1_object+6,f,c
  5330                           
  5331                           ;i2c1.c: 447: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  5332  01BA' 0E04               	movlw	4
  5333  01BC' EC00' F000'        	call	_I2C1_Stop
  5334                           
  5335                           ;i2c1.c: 450: SSP1CON2bits.ACKSTAT = 0;
  5336  01C0' 9CC5               	bcf	4037,6,c	;volatile
  5337                           
  5338                           ;i2c1.c: 451: } else {
  5339  01C2' 0012               	return	
  5340  01C4'                    i2l90:
  5341                           
  5342                           ;i2c1.c: 452: SSP1CON2bits.RCEN = 1;
  5343  01C4' 86C5               	bsf	4037,3,c	;volatile
  5344                           
  5345                           ;i2c1.c: 453: i2c1_state = S_MASTER_ACK_RCV_DATA;
  5346  01C6' 0E08               	movlw	8
  5347  01C8' 6E11'              	movwf	_i2c1_state,c
  5348  01CA' 0012               	return	
  5349  01CC'                    i2l2867:
  5350                           
  5351                           ;i2c1.c: 462: i2c1_state = S_MASTER_ACK_RCV_DATA;
  5352  01CC' 0E08               	movlw	8
  5353  01CE' 6E11'              	movwf	_i2c1_state,c
  5354                           
  5355                           ;i2c1.c: 465: SSP1CON2bits.RCEN = 1;
  5356  01D0' 86C5               	bsf	4037,3,c	;volatile
  5357                           
  5358                           ;i2c1.c: 467: break;
  5359  01D2' 0012               	return	
  5360  01D4'                    i2l2871:
  5361                           
  5362                           ;i2c1.c: 472: *pi2c_buf_ptr++ = SSP1BUF;
  5363  01D4' C000' FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  5364  01D8' C001' FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  5365  01DC' CFC9 FFDF          	movff	4041,indf2	;volatile
  5366  01E0' 4A00'              	infsnz	I2C1_ISR@pi2c_buf_ptr,f,c
  5367  01E2' 2A01'              	incf	I2C1_ISR@pi2c_buf_ptr+1,f,c
  5368                           
  5369                           ;i2c1.c: 475: if (--i2c_bytes_left) {
  5370  01E4' 0E01               	movlw	1
  5371  01E6' 5E09'              	subwf	I2C1_ISR@i2c_bytes_left,f,c
  5372  01E8' B4D8               	btfsc	status,2,c
  5373  01EA' D004               	goto	i2l94
  5374                           
  5375                           ;i2c1.c: 481: SSP1CON2bits.ACKDT = 0;
  5376  01EC' 9AC5               	bcf	4037,5,c	;volatile
  5377                           
  5378                           ;i2c1.c: 484: i2c1_state = S_MASTER_RCV_DATA;
  5379  01EE' 0E06               	movlw	6
  5380  01F0' 6E11'              	movwf	_i2c1_state,c
  5381                           
  5382                           ;i2c1.c: 485: } else {
  5383  01F2' D003               	goto	i2l2883
  5384  01F4'                    i2l94:
  5385                           
  5386                           ;i2c1.c: 489: SSP1CON2bits.ACKDT = 1;
  5387  01F4' 8AC5               	bsf	4037,5,c	;volatile
  5388                           
  5389                           ;i2c1.c: 491: I2C1_FunctionComplete();
  5390  01F6' EC00' F000'        	call	_I2C1_FunctionComplete	;wreg free
  5391  01FA'                    i2l2883:
  5392                           
  5393                           ;i2c1.c: 492: }
  5394                           ;i2c1.c: 495: SSP1CON2bits.ACKEN = 1;
  5395  01FA' 88C5               	bsf	4037,4,c	;volatile
  5396                           
  5397                           ;i2c1.c: 496: break;
  5398  01FC' 0012               	return	
  5399  01FE'                    i2l2885:
  5400                           
  5401                           ;i2c1.c: 499: case S_MASTER_SEND_STOP:
  5402                           ;i2c1.c: 502: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  5403  01FE' 0E00               	movlw	0
  5404  0200' EC00' F000'        	call	_I2C1_Stop
  5405                           
  5406                           ;i2c1.c: 503: break;
  5407  0204' 0012               	return	
  5408  0206'                    i2l2887:
  5409                           
  5410                           ;i2c1.c: 509: i2c1_object.i2cErrors++;
  5411  0206' 2A06'              	incf	_i2c1_object+6,f,c
  5412                           
  5413                           ;i2c1.c: 510: I2C1_Stop(I2C1_LOST_STATE);
  5414  0208' 0E06               	movlw	6
  5415  020A' EC00' F000'        	call	_I2C1_Stop
  5416                           
  5417                           ;i2c1.c: 511: break;
  5418  020E' 0012               	return	
  5419  0210'                    i2l2893:
  5420  0210' 5011'              	movf	_i2c1_state,w,c
  5421                           
  5422                           ; Switch size 1, requested type "space"
  5423                           ; Number of cases is 11, Range of values is 0 to 11
  5424                           ; switch strategies available:
  5425                           ; Name         Instructions Cycles
  5426                           ; simple_byte           34    18 (average)
  5427                           ;	Chosen strategy is simple_byte
  5428  0212' 0A00               	xorlw	0	; case 0
  5429  0214' B4D8               	btfsc	status,2,c
  5430  0216' D70F               	goto	i2l60
  5431  0218' 0A01               	xorlw	1	; case 1
  5432  021A' B4D8               	btfsc	status,2,c
  5433  021C' D74B               	goto	i2l65
  5434  021E' 0A03               	xorlw	3	; case 2
  5435  0220' B4D8               	btfsc	status,2,c
  5436  0222' D77E               	goto	i2l2817
  5437  0224' 0A01               	xorlw	1	; case 3
  5438  0226' B4D8               	btfsc	status,2,c
  5439  0228' D7A2               	goto	i2l82
  5440  022A' 0A07               	xorlw	7	; case 4
  5441  022C' B4D8               	btfsc	status,2,c
  5442  022E' D7E7               	goto	i2l2885
  5443  0230' 0A01               	xorlw	1	; case 5
  5444  0232' B4D8               	btfsc	status,2,c
  5445  0234' D7BF               	goto	i2l89
  5446  0236' 0A03               	xorlw	3	; case 6
  5447  0238' B4D8               	btfsc	status,2,c
  5448  023A' D7C8               	goto	i2l2867
  5449  023C' 0A01               	xorlw	1	; case 7
  5450  023E' B4D8               	btfsc	status,2,c
  5451  0240' D7DE               	goto	i2l2885
  5452  0242' 0A0F               	xorlw	15	; case 8
  5453  0244' B4D8               	btfsc	status,2,c
  5454  0246' D7C6               	goto	i2l2871
  5455  0248' 0A02               	xorlw	2	; case 10
  5456  024A' B4D8               	btfsc	status,2,c
  5457  024C' D737               	goto	i2l66
  5458  024E' 0A01               	xorlw	1	; case 11
  5459  0250' B4D8               	btfsc	status,2,c
  5460  0252' D74A               	goto	i2l71
  5461  0254' D7D8               	goto	i2l2887
  5462  0256'                    __end_of_I2C1_ISR:
  5463                           	opt stack 0
  5464                           pclatu	equ	0xFFB
  5465                           pclath	equ	0xFFA
  5466                           tblptru	equ	0xFF8
  5467                           tblptrh	equ	0xFF7
  5468                           tblptrl	equ	0xFF6
  5469                           tablat	equ	0xFF5
  5470                           prodh	equ	0xFF4
  5471                           prodl	equ	0xFF3
  5472                           intcon	equ	0xFF2
  5473                           intcon2	equ	0xFF1
  5474                           postinc0	equ	0xFEE
  5475                           fsr0h	equ	0xFEA
  5476                           fsr0l	equ	0xFE9
  5477                           wreg	equ	0xFE8
  5478                           fsr1h	equ	0xFE2
  5479                           fsr1l	equ	0xFE1
  5480                           indf2	equ	0xFDF
  5481                           postinc2	equ	0xFDE
  5482                           postdec2	equ	0xFDD
  5483                           fsr2h	equ	0xFDA
  5484                           fsr2l	equ	0xFD9
  5485                           status	equ	0xFD8
  5486                           
  5487 ;; *************** function _I2C1_Stop *****************
  5488 ;; Defined at:
  5489 ;;		line 530 in file "mcc_generated_files/i2c1.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;  completion_c    1    wreg     enum E8836
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;  completion_c    1    2[COMRAM] enum E8836
  5494 ;; Return value:  Size  Location     Type
  5495 ;;		None               void
  5496 ;; Registers used:
  5497 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5503 ;;      Params:         0       0       0       0       0       0       0
  5504 ;;      Locals:         1       0       0       0       0       0       0
  5505 ;;      Temps:          2       0       0       0       0       0       0
  5506 ;;      Totals:         3       0       0       0       0       0       0
  5507 ;;Total ram usage:        3 bytes
  5508 ;; Hardware stack levels used:    1
  5509 ;; This function calls:
  5510 ;;		Nothing
  5511 ;; This function is called by:
  5512 ;;		_I2C1_ISR
  5513 ;; This function uses a non-reentrant model
  5514 ;;
  5515                           
  5516                           	psect	text40
  5517  0000'                    __ptext40:
  5518                           	opt stack 0
  5519  0000'                    _I2C1_Stop:
  5520                           	opt stack 23
  5521                           
  5522                           ;incstack = 0
  5523                           ;I2C1_Stop@completion_code stored from wreg
  5524  0000' 6E02'              	movwf	I2C1_Stop@completion_code,c
  5525                           
  5526                           ;i2c1.c: 532: SSP1CON2bits.PEN = 1;
  5527  0002' 84C5               	bsf	4037,2,c	;volatile
  5528                           
  5529                           ;i2c1.c: 535: if (p_i2c1_current->pTrFlag != (0)) {
  5530  0004' EE20 F003          	lfsr	2,3
  5531  0008' 5002'              	movf	_p_i2c1_current,w,c
  5532  000A' 26D9               	addwf	fsr2l,f,c
  5533  000C' 5003'              	movf	_p_i2c1_current+1,w,c
  5534  000E' 22DA               	addwfc	fsr2h,f,c
  5535  0010' 50DE               	movf	postinc2,w,c
  5536  0012' 10DD               	iorwf	postdec2,w,c
  5537  0014' B4D8               	btfsc	status,2,c
  5538  0016' D010               	goto	i2l2569
  5539                           
  5540                           ;i2c1.c: 537: *(p_i2c1_current->pTrFlag) = completion_code;
  5541  0018' EE20 F003          	lfsr	2,3
  5542  001C' 5002'              	movf	_p_i2c1_current,w,c
  5543  001E' 26D9               	addwf	fsr2l,f,c
  5544  0020' 5003'              	movf	_p_i2c1_current+1,w,c
  5545  0022' 22DA               	addwfc	fsr2h,f,c
  5546  0024' CFDE F000'         	movff	postinc2,??_I2C1_Stop
  5547  0028' CFDD F001'         	movff	postdec2,??_I2C1_Stop+1
  5548  002C' C000' FFD9         	movff	??_I2C1_Stop,fsr2l
  5549  0030' C001' FFDA         	movff	??_I2C1_Stop+1,fsr2h
  5550  0034' C002' FFDF         	movff	I2C1_Stop@completion_code,indf2
  5551  0038'                    i2l2569:
  5552                           
  5553                           ;i2c1.c: 538: }
  5554                           ;i2c1.c: 541: i2c1_state = S_MASTER_IDLE;
  5555  0038' 0E00               	movlw	0
  5556  003A' 6E11'              	movwf	_i2c1_state,c
  5557  003C' 0012               	return	
  5558  003E'                    __end_of_I2C1_Stop:
  5559                           	opt stack 0
  5560                           pclatu	equ	0xFFB
  5561                           pclath	equ	0xFFA
  5562                           tblptru	equ	0xFF8
  5563                           tblptrh	equ	0xFF7
  5564                           tblptrl	equ	0xFF6
  5565                           tablat	equ	0xFF5
  5566                           prodh	equ	0xFF4
  5567                           prodl	equ	0xFF3
  5568                           intcon	equ	0xFF2
  5569                           intcon2	equ	0xFF1
  5570                           postinc0	equ	0xFEE
  5571                           fsr0h	equ	0xFEA
  5572                           fsr0l	equ	0xFE9
  5573                           wreg	equ	0xFE8
  5574                           fsr1h	equ	0xFE2
  5575                           fsr1l	equ	0xFE1
  5576                           indf2	equ	0xFDF
  5577                           postinc2	equ	0xFDE
  5578                           postdec2	equ	0xFDD
  5579                           fsr2h	equ	0xFDA
  5580                           fsr2l	equ	0xFD9
  5581                           status	equ	0xFD8
  5582                           
  5583 ;; *************** function _I2C1_FunctionComplete *****************
  5584 ;; Defined at:
  5585 ;;		line 516 in file "mcc_generated_files/i2c1.c"
  5586 ;; Parameters:    Size  Location     Type
  5587 ;;		None
  5588 ;; Auto vars:     Size  Location     Type
  5589 ;;		None
  5590 ;; Return value:  Size  Location     Type
  5591 ;;		None               void
  5592 ;; Registers used:
  5593 ;;		wreg, status,2, status,0
  5594 ;; Tracked objects:
  5595 ;;		On entry : 0/0
  5596 ;;		On exit  : 0/0
  5597 ;;		Unchanged: 0/0
  5598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5599 ;;      Params:         0       0       0       0       0       0       0
  5600 ;;      Locals:         0       0       0       0       0       0       0
  5601 ;;      Temps:          0       0       0       0       0       0       0
  5602 ;;      Totals:         0       0       0       0       0       0       0
  5603 ;;Total ram usage:        0 bytes
  5604 ;; Hardware stack levels used:    1
  5605 ;; This function calls:
  5606 ;;		Nothing
  5607 ;; This function is called by:
  5608 ;;		_I2C1_ISR
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           	psect	text41
  5613  0000'                    __ptext41:
  5614                           	opt stack 0
  5615  0000'                    _I2C1_FunctionComplete:
  5616                           	opt stack 23
  5617                           
  5618                           ;i2c1.c: 519: p_i2c1_trb_current++;
  5619                           
  5620                           ;incstack = 0
  5621  0000' 0E06               	movlw	6
  5622  0002' 2604'              	addwf	_p_i2c1_trb_current,f,c
  5623  0004' 0E00               	movlw	0
  5624  0006' 2205'              	addwfc	_p_i2c1_trb_current+1,f,c
  5625                           
  5626                           ;i2c1.c: 522: if (--i2c1_trb_count == 0) {
  5627  0008' 2E12'              	decfsz	_i2c1_trb_count,f,c
  5628  000A' D003               	goto	i2l2577
  5629                           
  5630                           ;i2c1.c: 523: i2c1_state = S_MASTER_SEND_STOP;
  5631  000C' 0E04               	movlw	4
  5632  000E' 6E11'              	movwf	_i2c1_state,c
  5633                           
  5634                           ;i2c1.c: 524: } else {
  5635  0010' 0012               	return	
  5636  0012'                    i2l2577:
  5637                           
  5638                           ;i2c1.c: 525: i2c1_state = S_MASTER_RESTART;
  5639  0012' 0E01               	movlw	1
  5640  0014' 6E11'              	movwf	_i2c1_state,c
  5641  0016' 0012               	return	
  5642  0018'                    __end_of_I2C1_FunctionComplete:
  5643                           	opt stack 0
  5644                           pclatu	equ	0xFFB
  5645                           pclath	equ	0xFFA
  5646                           tblptru	equ	0xFF8
  5647                           tblptrh	equ	0xFF7
  5648                           tblptrl	equ	0xFF6
  5649                           tablat	equ	0xFF5
  5650                           prodh	equ	0xFF4
  5651                           prodl	equ	0xFF3
  5652                           intcon	equ	0xFF2
  5653                           intcon2	equ	0xFF1
  5654                           postinc0	equ	0xFEE
  5655                           fsr0h	equ	0xFEA
  5656                           fsr0l	equ	0xFE9
  5657                           wreg	equ	0xFE8
  5658                           fsr1h	equ	0xFE2
  5659                           fsr1l	equ	0xFE1
  5660                           indf2	equ	0xFDF
  5661                           postinc2	equ	0xFDE
  5662                           postdec2	equ	0xFDD
  5663                           fsr2h	equ	0xFDA
  5664                           fsr2l	equ	0xFD9
  5665                           status	equ	0xFD8
  5666                           
  5667 ;; *************** function _I2C1_BusCollisionISR *****************
  5668 ;; Defined at:
  5669 ;;		line 656 in file "mcc_generated_files/i2c1.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;		None
  5672 ;; Auto vars:     Size  Location     Type
  5673 ;;		None
  5674 ;; Return value:  Size  Location     Type
  5675 ;;		None               void
  5676 ;; Registers used:
  5677 ;;		None
  5678 ;; Tracked objects:
  5679 ;;		On entry : 0/0
  5680 ;;		On exit  : 0/0
  5681 ;;		Unchanged: 0/0
  5682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5683 ;;      Params:         0       0       0       0       0       0       0
  5684 ;;      Locals:         0       0       0       0       0       0       0
  5685 ;;      Temps:          0       0       0       0       0       0       0
  5686 ;;      Totals:         0       0       0       0       0       0       0
  5687 ;;Total ram usage:        0 bytes
  5688 ;; Hardware stack levels used:    1
  5689 ;; This function calls:
  5690 ;;		Nothing
  5691 ;; This function is called by:
  5692 ;;		_INTERRUPT_InterruptManager
  5693 ;; This function uses a non-reentrant model
  5694 ;;
  5695                           
  5696                           	psect	text42
  5697  0000'                    __ptext42:
  5698                           	opt stack 0
  5699  0000'                    _I2C1_BusCollisionISR:
  5700                           	opt stack 24
  5701                           
  5702                           ;incstack = 0
  5703  0000' 0012               	return	
  5704  0002'                    __end_of_I2C1_BusCollisionISR:
  5705                           	opt stack 0
  5706                           pclatu	equ	0xFFB
  5707                           pclath	equ	0xFFA
  5708                           tblptru	equ	0xFF8
  5709                           tblptrh	equ	0xFF7
  5710                           tblptrl	equ	0xFF6
  5711                           tablat	equ	0xFF5
  5712                           prodh	equ	0xFF4
  5713                           prodl	equ	0xFF3
  5714                           intcon	equ	0xFF2
  5715                           intcon2	equ	0xFF1
  5716                           postinc0	equ	0xFEE
  5717                           fsr0h	equ	0xFEA
  5718                           fsr0l	equ	0xFE9
  5719                           wreg	equ	0xFE8
  5720                           fsr1h	equ	0xFE2
  5721                           fsr1l	equ	0xFE1
  5722                           indf2	equ	0xFDF
  5723                           postinc2	equ	0xFDE
  5724                           postdec2	equ	0xFDD
  5725                           fsr2h	equ	0xFDA
  5726                           fsr2l	equ	0xFD9
  5727                           status	equ	0xFD8
  5728                           
  5729 ;; *************** function _EUSART1_Transmit_ISR *****************
  5730 ;; Defined at:
  5731 ;;		line 155 in file "mcc_generated_files/eusart1.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;		None
  5734 ;; Auto vars:     Size  Location     Type
  5735 ;;		None
  5736 ;; Return value:  Size  Location     Type
  5737 ;;		None               void
  5738 ;; Registers used:
  5739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5740 ;; Tracked objects:
  5741 ;;		On entry : 0/0
  5742 ;;		On exit  : 0/0
  5743 ;;		Unchanged: 0/0
  5744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5745 ;;      Params:         0       0       0       0       0       0       0
  5746 ;;      Locals:         0       0       0       0       0       0       0
  5747 ;;      Temps:          0       0       0       0       0       0       0
  5748 ;;      Totals:         0       0       0       0       0       0       0
  5749 ;;Total ram usage:        0 bytes
  5750 ;; Hardware stack levels used:    1
  5751 ;; This function calls:
  5752 ;;		Nothing
  5753 ;; This function is called by:
  5754 ;;		_INTERRUPT_InterruptManager
  5755 ;; This function uses a non-reentrant model
  5756 ;;
  5757                           
  5758                           	psect	text43
  5759  0000'                    __ptext43:
  5760                           	opt stack 0
  5761  0000'                    _EUSART1_Transmit_ISR:
  5762                           	opt stack 24
  5763                           
  5764                           ;eusart1.c: 158: if (sizeof (eusart1TxBuffer) > eusart1TxBufferRemaining) {
  5765                           
  5766                           ;incstack = 0
  5767  0000' 0E08               	movlw	8
  5768  0002' 5C09'              	subwf	_eusart1TxBufferRemaining,w,c	;volatile
  5769  0004' B0D8               	btfsc	status,0,c
  5770  0006' D014               	goto	i2l304
  5771                           
  5772                           ;eusart1.c: 159: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  5773  0008' 5010'              	movf	_eusart1TxTail,w,c
  5774  000A' 0D01               	mullw	1
  5775  000C' 0100               	movlb	0	; () banked
  5776  000E' 0E00'              	movlw	low _eusart1TxBuffer
  5777  0010' 24F3               	addwf	prodl,w,c
  5778  0012' 6ED9               	movwf	fsr2l,c
  5779  0014' 0100               	movlb	0	; () banked
  5780  0016' 0E00'              	movlw	high _eusart1TxBuffer
  5781  0018' 20F4               	addwfc	prodh,w,c
  5782  001A' 6EDA               	movwf	fsr2h,c
  5783  001C' 50DF               	movf	indf2,w,c
  5784  001E' 6EAD               	movwf	4013,c	;volatile
  5785                           
  5786                           ; BSR set to: 0
  5787  0020' 2A10'              	incf	_eusart1TxTail,f,c
  5788                           
  5789                           ; BSR set to: 0
  5790                           ;eusart1.c: 160: if (sizeof (eusart1TxBuffer) <= eusart1TxTail) {
  5791  0022' 0E07               	movlw	7
  5792  0024' 6410'              	cpfsgt	_eusart1TxTail,c
  5793  0026' D002               	goto	i2l2943
  5794                           
  5795                           ; BSR set to: 0
  5796                           ;eusart1.c: 161: eusart1TxTail = 0;
  5797  0028' 0E00               	movlw	0
  5798  002A' 6E10'              	movwf	_eusart1TxTail,c
  5799  002C'                    i2l2943:
  5800                           
  5801                           ; BSR set to: 0
  5802                           ;eusart1.c: 162: }
  5803                           ;eusart1.c: 163: eusart1TxBufferRemaining++;
  5804  002C' 2A09'              	incf	_eusart1TxBufferRemaining,f,c	;volatile
  5805                           
  5806                           ;eusart1.c: 164: } else {
  5807  002E' 0012               	return	
  5808  0030'                    i2l304:
  5809                           
  5810                           ;eusart1.c: 165: PIE1bits.TX1IE = 0;
  5811  0030' 989D               	bcf	3997,4,c	;volatile
  5812  0032' 0012               	return	
  5813  0034'                    __end_of_EUSART1_Transmit_ISR:
  5814                           	opt stack 0
  5815                           pclatu	equ	0xFFB
  5816                           pclath	equ	0xFFA
  5817                           tblptru	equ	0xFF8
  5818                           tblptrh	equ	0xFF7
  5819                           tblptrl	equ	0xFF6
  5820                           tablat	equ	0xFF5
  5821                           prodh	equ	0xFF4
  5822                           prodl	equ	0xFF3
  5823                           intcon	equ	0xFF2
  5824                           intcon2	equ	0xFF1
  5825                           postinc0	equ	0xFEE
  5826                           fsr0h	equ	0xFEA
  5827                           fsr0l	equ	0xFE9
  5828                           wreg	equ	0xFE8
  5829                           fsr1h	equ	0xFE2
  5830                           fsr1l	equ	0xFE1
  5831                           indf2	equ	0xFDF
  5832                           postinc2	equ	0xFDE
  5833                           postdec2	equ	0xFDD
  5834                           fsr2h	equ	0xFDA
  5835                           fsr2l	equ	0xFD9
  5836                           status	equ	0xFD8
  5837                           
  5838 ;; *************** function _EUSART1_Receive_ISR *****************
  5839 ;; Defined at:
  5840 ;;		line 169 in file "mcc_generated_files/eusart1.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;		None
  5843 ;; Auto vars:     Size  Location     Type
  5844 ;;		None
  5845 ;; Return value:  Size  Location     Type
  5846 ;;		None               void
  5847 ;; Registers used:
  5848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5849 ;; Tracked objects:
  5850 ;;		On entry : 0/0
  5851 ;;		On exit  : 0/0
  5852 ;;		Unchanged: 0/0
  5853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5854 ;;      Params:         0       0       0       0       0       0       0
  5855 ;;      Locals:         0       0       0       0       0       0       0
  5856 ;;      Temps:          0       0       0       0       0       0       0
  5857 ;;      Totals:         0       0       0       0       0       0       0
  5858 ;;Total ram usage:        0 bytes
  5859 ;; Hardware stack levels used:    1
  5860 ;; This function calls:
  5861 ;;		Nothing
  5862 ;; This function is called by:
  5863 ;;		_INTERRUPT_InterruptManager
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867                           	psect	text44
  5868  0000'                    __ptext44:
  5869                           	opt stack 0
  5870  0000'                    _EUSART1_Receive_ISR:
  5871                           	opt stack 24
  5872                           
  5873                           ;eusart1.c: 170: if (1 == RC1STAbits.OERR) {
  5874                           
  5875                           ;incstack = 0
  5876  0000' A2AB               	btfss	4011,1,c	;volatile
  5877  0002' D002               	goto	i2l2949
  5878                           
  5879                           ;eusart1.c: 173: RC1STAbits.CREN = 0;
  5880  0004' 98AB               	bcf	4011,4,c	;volatile
  5881                           
  5882                           ;eusart1.c: 174: RC1STAbits.CREN = 1;
  5883  0006' 88AB               	bsf	4011,4,c	;volatile
  5884  0008'                    i2l2949:
  5885                           
  5886                           ;eusart1.c: 175: }
  5887                           ;eusart1.c: 178: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  5888  0008' 500D'              	movf	_eusart1RxHead,w,c
  5889  000A' 0D01               	mullw	1
  5890  000C' 0100               	movlb	0	; () banked
  5891  000E' 0E00'              	movlw	low _eusart1RxBuffer
  5892  0010' 24F3               	addwf	prodl,w,c
  5893  0012' 6ED9               	movwf	fsr2l,c
  5894  0014' 0100               	movlb	0	; () banked
  5895  0016' 0E00'              	movlw	high _eusart1RxBuffer
  5896  0018' 20F4               	addwfc	prodh,w,c
  5897  001A' 6EDA               	movwf	fsr2h,c
  5898  001C' CFAE FFDF          	movff	4014,indf2	;volatile
  5899                           
  5900                           ; BSR set to: 0
  5901  0020' 2A0D'              	incf	_eusart1RxHead,f,c
  5902                           
  5903                           ; BSR set to: 0
  5904                           ;eusart1.c: 179: if (sizeof (eusart1RxBuffer) <= eusart1RxHead) {
  5905  0022' 0E07               	movlw	7
  5906  0024' 640D'              	cpfsgt	_eusart1RxHead,c
  5907  0026' D002               	goto	i2l2957
  5908                           
  5909                           ; BSR set to: 0
  5910                           ;eusart1.c: 180: eusart1RxHead = 0;
  5911  0028' 0E00               	movlw	0
  5912  002A' 6E0D'              	movwf	_eusart1RxHead,c
  5913  002C'                    i2l2957:
  5914                           
  5915                           ; BSR set to: 0
  5916                           ;eusart1.c: 181: }
  5917                           ;eusart1.c: 182: eusart1RxCount++;
  5918  002C' 2A0C'              	incf	_eusart1RxCount,f,c	;volatile
  5919                           
  5920                           ; BSR set to: 0
  5921  002E' 0012               	return	
  5922  0030'                    __end_of_EUSART1_Receive_ISR:
  5923                           	opt stack 0
  5924                           pclatu	equ	0xFFB
  5925                           pclath	equ	0xFFA
  5926                           tblptru	equ	0xFF8
  5927                           tblptrh	equ	0xFF7
  5928                           tblptrl	equ	0xFF6
  5929                           tablat	equ	0xFF5
  5930                           prodh	equ	0xFF4
  5931                           prodl	equ	0xFF3
  5932                           intcon	equ	0xFF2
  5933                           intcon2	equ	0xFF1
  5934                           postinc0	equ	0xFEE
  5935                           fsr0h	equ	0xFEA
  5936                           fsr0l	equ	0xFE9
  5937                           wreg	equ	0xFE8
  5938                           fsr1h	equ	0xFE2
  5939                           fsr1l	equ	0xFE1
  5940                           indf2	equ	0xFDF
  5941                           postinc2	equ	0xFDE
  5942                           postdec2	equ	0xFDD
  5943                           fsr2h	equ	0xFDA
  5944                           fsr2l	equ	0xFD9
  5945                           status	equ	0xFD8
  5946                           
  5947 ;; *************** function _ECCP2_CaptureISR *****************
  5948 ;; Defined at:
  5949 ;;		line 80 in file "mcc_generated_files/eccp2.c"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;		None
  5952 ;; Auto vars:     Size  Location     Type
  5953 ;;  module          2    2[COMRAM] struct CCPR2Reg_tag
  5954 ;; Return value:  Size  Location     Type
  5955 ;;		None               void
  5956 ;; Registers used:
  5957 ;;		cstack
  5958 ;; Tracked objects:
  5959 ;;		On entry : 0/0
  5960 ;;		On exit  : 0/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5963 ;;      Params:         0       0       0       0       0       0       0
  5964 ;;      Locals:         2       0       0       0       0       0       0
  5965 ;;      Temps:          0       0       0       0       0       0       0
  5966 ;;      Totals:         2       0       0       0       0       0       0
  5967 ;;Total ram usage:        2 bytes
  5968 ;; Hardware stack levels used:    1
  5969 ;; Hardware stack levels required when called:    1
  5970 ;; This function calls:
  5971 ;;		_ECCP2_CallBack
  5972 ;; This function is called by:
  5973 ;;		_INTERRUPT_InterruptManager
  5974 ;; This function uses a non-reentrant model
  5975 ;;
  5976                           
  5977                           	psect	text45
  5978  0000'                    __ptext45:
  5979                           	opt stack 0
  5980  0000'                    _ECCP2_CaptureISR:
  5981                           	opt stack 23
  5982                           
  5983                           ;eccp2.c: 81: CCP_PERIOD_REG_T module;
  5984                           ;eccp2.c: 84: PIR2bits.CCP2IF = 0;
  5985                           
  5986                           ; BSR set to: 0
  5987                           ;incstack = 0
  5988  0000' 90A1               	bcf	4001,0,c	;volatile
  5989                           
  5990                           ;eccp2.c: 87: module.ccpr2l = CCPR2L;
  5991  0002' CF67 F002'         	movff	3943,ECCP2_CaptureISR@module	;volatile
  5992                           
  5993                           ;eccp2.c: 88: module.ccpr2h = CCPR2H;
  5994  0006' CF68 F003'         	movff	3944,ECCP2_CaptureISR@module+1	;volatile
  5995                           
  5996                           ;eccp2.c: 91: ECCP2_CallBack(module.ccpr2_16Bit);
  5997  000A' C002' F000'        	movff	ECCP2_CaptureISR@module,ECCP2_CallBack@capturedValue
  5998  000E' C003' F001'        	movff	ECCP2_CaptureISR@module+1,ECCP2_CallBack@capturedValue+1
  5999  0012' EC00' F000'        	call	_ECCP2_CallBack	;wreg free
  6000  0016' 0012               	return	
  6001  0018'                    __end_of_ECCP2_CaptureISR:
  6002                           	opt stack 0
  6003                           pclatu	equ	0xFFB
  6004                           pclath	equ	0xFFA
  6005                           tblptru	equ	0xFF8
  6006                           tblptrh	equ	0xFF7
  6007                           tblptrl	equ	0xFF6
  6008                           tablat	equ	0xFF5
  6009                           prodh	equ	0xFF4
  6010                           prodl	equ	0xFF3
  6011                           intcon	equ	0xFF2
  6012                           intcon2	equ	0xFF1
  6013                           postinc0	equ	0xFEE
  6014                           fsr0h	equ	0xFEA
  6015                           fsr0l	equ	0xFE9
  6016                           wreg	equ	0xFE8
  6017                           fsr1h	equ	0xFE2
  6018                           fsr1l	equ	0xFE1
  6019                           indf2	equ	0xFDF
  6020                           postinc2	equ	0xFDE
  6021                           postdec2	equ	0xFDD
  6022                           fsr2h	equ	0xFDA
  6023                           fsr2l	equ	0xFD9
  6024                           status	equ	0xFD8
  6025                           
  6026 ;; *************** function _ECCP2_CallBack *****************
  6027 ;; Defined at:
  6028 ;;		line 94 in file "mcc_generated_files/eccp2.c"
  6029 ;; Parameters:    Size  Location     Type
  6030 ;;  capturedValu    2    0[COMRAM] unsigned int 
  6031 ;; Auto vars:     Size  Location     Type
  6032 ;;		None
  6033 ;; Return value:  Size  Location     Type
  6034 ;;		None               void
  6035 ;; Registers used:
  6036 ;;		None
  6037 ;; Tracked objects:
  6038 ;;		On entry : 0/0
  6039 ;;		On exit  : 0/0
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6042 ;;      Params:         2       0       0       0       0       0       0
  6043 ;;      Locals:         0       0       0       0       0       0       0
  6044 ;;      Temps:          0       0       0       0       0       0       0
  6045 ;;      Totals:         2       0       0       0       0       0       0
  6046 ;;Total ram usage:        2 bytes
  6047 ;; Hardware stack levels used:    1
  6048 ;; This function calls:
  6049 ;;		Nothing
  6050 ;; This function is called by:
  6051 ;;		_ECCP2_CaptureISR
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055                           	psect	text46
  6056  0000'                    __ptext46:
  6057                           	opt stack 0
  6058  0000'                    _ECCP2_CallBack:
  6059                           	opt stack 23
  6060                           
  6061                           ;incstack = 0
  6062  0000' 0012               	return	
  6063  0002'                    __end_of_ECCP2_CallBack:
  6064                           	opt stack 0
  6065                           pclatu	equ	0xFFB
  6066                           pclath	equ	0xFFA
  6067                           tblptru	equ	0xFF8
  6068                           tblptrh	equ	0xFF7
  6069                           tblptrl	equ	0xFF6
  6070                           tablat	equ	0xFF5
  6071                           prodh	equ	0xFF4
  6072                           prodl	equ	0xFF3
  6073                           intcon	equ	0xFF2
  6074                           intcon2	equ	0xFF1
  6075                           postinc0	equ	0xFEE
  6076                           fsr0h	equ	0xFEA
  6077                           fsr0l	equ	0xFE9
  6078                           wreg	equ	0xFE8
  6079                           fsr1h	equ	0xFE2
  6080                           fsr1l	equ	0xFE1
  6081                           indf2	equ	0xFDF
  6082                           postinc2	equ	0xFDE
  6083                           postdec2	equ	0xFDD
  6084                           fsr2h	equ	0xFDA
  6085                           fsr2l	equ	0xFD9
  6086                           status	equ	0xFD8
  6087                           
  6088 ;; *************** function _ECCP1_CaptureISR *****************
  6089 ;; Defined at:
  6090 ;;		line 80 in file "mcc_generated_files/eccp1.c"
  6091 ;; Parameters:    Size  Location     Type
  6092 ;;		None
  6093 ;; Auto vars:     Size  Location     Type
  6094 ;;  module          2    2[COMRAM] struct CCPR1Reg_tag
  6095 ;; Return value:  Size  Location     Type
  6096 ;;		None               void
  6097 ;; Registers used:
  6098 ;;		cstack
  6099 ;; Tracked objects:
  6100 ;;		On entry : 0/0
  6101 ;;		On exit  : 0/0
  6102 ;;		Unchanged: 0/0
  6103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6104 ;;      Params:         0       0       0       0       0       0       0
  6105 ;;      Locals:         2       0       0       0       0       0       0
  6106 ;;      Temps:          0       0       0       0       0       0       0
  6107 ;;      Totals:         2       0       0       0       0       0       0
  6108 ;;Total ram usage:        2 bytes
  6109 ;; Hardware stack levels used:    1
  6110 ;; Hardware stack levels required when called:    1
  6111 ;; This function calls:
  6112 ;;		_ECCP1_CallBack
  6113 ;; This function is called by:
  6114 ;;		_INTERRUPT_InterruptManager
  6115 ;; This function uses a non-reentrant model
  6116 ;;
  6117                           
  6118                           	psect	text47
  6119  0000'                    __ptext47:
  6120                           	opt stack 0
  6121  0000'                    _ECCP1_CaptureISR:
  6122                           	opt stack 23
  6123                           
  6124                           ;eccp1.c: 81: CCP_PERIOD_REG_T module;
  6125                           ;eccp1.c: 84: PIR1bits.CCP1IF = 0;
  6126                           
  6127                           ;incstack = 0
  6128  0000' 949E               	bcf	3998,2,c	;volatile
  6129                           
  6130                           ;eccp1.c: 87: module.ccpr1l = CCPR1L;
  6131  0002' CFBE F002'         	movff	4030,ECCP1_CaptureISR@module	;volatile
  6132                           
  6133                           ;eccp1.c: 88: module.ccpr1h = CCPR1H;
  6134  0006' CFBF F003'         	movff	4031,ECCP1_CaptureISR@module+1	;volatile
  6135                           
  6136                           ;eccp1.c: 91: ECCP1_CallBack(module.ccpr1_16Bit);
  6137  000A' C002' F000'        	movff	ECCP1_CaptureISR@module,ECCP1_CallBack@capturedValue
  6138  000E' C003' F001'        	movff	ECCP1_CaptureISR@module+1,ECCP1_CallBack@capturedValue+1
  6139  0012' EC00' F000'        	call	_ECCP1_CallBack	;wreg free
  6140  0016' 0012               	return	
  6141  0018'                    __end_of_ECCP1_CaptureISR:
  6142                           	opt stack 0
  6143                           pclatu	equ	0xFFB
  6144                           pclath	equ	0xFFA
  6145                           tblptru	equ	0xFF8
  6146                           tblptrh	equ	0xFF7
  6147                           tblptrl	equ	0xFF6
  6148                           tablat	equ	0xFF5
  6149                           prodh	equ	0xFF4
  6150                           prodl	equ	0xFF3
  6151                           intcon	equ	0xFF2
  6152                           intcon2	equ	0xFF1
  6153                           postinc0	equ	0xFEE
  6154                           fsr0h	equ	0xFEA
  6155                           fsr0l	equ	0xFE9
  6156                           wreg	equ	0xFE8
  6157                           fsr1h	equ	0xFE2
  6158                           fsr1l	equ	0xFE1
  6159                           indf2	equ	0xFDF
  6160                           postinc2	equ	0xFDE
  6161                           postdec2	equ	0xFDD
  6162                           fsr2h	equ	0xFDA
  6163                           fsr2l	equ	0xFD9
  6164                           status	equ	0xFD8
  6165                           
  6166 ;; *************** function _ECCP1_CallBack *****************
  6167 ;; Defined at:
  6168 ;;		line 94 in file "mcc_generated_files/eccp1.c"
  6169 ;; Parameters:    Size  Location     Type
  6170 ;;  capturedValu    2    0[COMRAM] unsigned int 
  6171 ;; Auto vars:     Size  Location     Type
  6172 ;;		None
  6173 ;; Return value:  Size  Location     Type
  6174 ;;		None               void
  6175 ;; Registers used:
  6176 ;;		None
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6182 ;;      Params:         2       0       0       0       0       0       0
  6183 ;;      Locals:         0       0       0       0       0       0       0
  6184 ;;      Temps:          0       0       0       0       0       0       0
  6185 ;;      Totals:         2       0       0       0       0       0       0
  6186 ;;Total ram usage:        2 bytes
  6187 ;; Hardware stack levels used:    1
  6188 ;; This function calls:
  6189 ;;		Nothing
  6190 ;; This function is called by:
  6191 ;;		_ECCP1_CaptureISR
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           
  6195                           	psect	text48
  6196  0000'                    __ptext48:
  6197                           	opt stack 0
  6198  0000'                    _ECCP1_CallBack:
  6199                           	opt stack 23
  6200                           
  6201                           ;incstack = 0
  6202  0000' 0012               	return	
  6203  0002'                    __end_of_ECCP1_CallBack:
  6204                           	opt stack 0
  6205                           pclatu	equ	0xFFB
  6206                           pclath	equ	0xFFA
  6207                           tblptru	equ	0xFF8
  6208                           tblptrh	equ	0xFF7
  6209                           tblptrl	equ	0xFF6
  6210                           tablat	equ	0xFF5
  6211                           prodh	equ	0xFF4
  6212                           prodl	equ	0xFF3
  6213                           intcon	equ	0xFF2
  6214                           intcon2	equ	0xFF1
  6215                           postinc0	equ	0xFEE
  6216                           fsr0h	equ	0xFEA
  6217                           fsr0l	equ	0xFE9
  6218                           wreg	equ	0xFE8
  6219                           fsr1h	equ	0xFE2
  6220                           fsr1l	equ	0xFE1
  6221                           indf2	equ	0xFDF
  6222                           postinc2	equ	0xFDE
  6223                           postdec2	equ	0xFDD
  6224                           fsr2h	equ	0xFDA
  6225                           fsr2l	equ	0xFD9
  6226                           status	equ	0xFD8
  6227                           
  6228 ;; *************** function _ADC_ISR *****************
  6229 ;; Defined at:
  6230 ;;		line 121 in file "mcc_generated_files/adc.c"
  6231 ;; Parameters:    Size  Location     Type
  6232 ;;		None
  6233 ;; Auto vars:     Size  Location     Type
  6234 ;;		None
  6235 ;; Return value:  Size  Location     Type
  6236 ;;		None               void
  6237 ;; Registers used:
  6238 ;;		None
  6239 ;; Tracked objects:
  6240 ;;		On entry : 0/0
  6241 ;;		On exit  : 0/0
  6242 ;;		Unchanged: 0/0
  6243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6244 ;;      Params:         0       0       0       0       0       0       0
  6245 ;;      Locals:         0       0       0       0       0       0       0
  6246 ;;      Temps:          0       0       0       0       0       0       0
  6247 ;;      Totals:         0       0       0       0       0       0       0
  6248 ;;Total ram usage:        0 bytes
  6249 ;; Hardware stack levels used:    1
  6250 ;; This function calls:
  6251 ;;		Nothing
  6252 ;; This function is called by:
  6253 ;;		_INTERRUPT_InterruptManager
  6254 ;; This function uses a non-reentrant model
  6255 ;;
  6256                           
  6257                           	psect	text49
  6258  0000'                    __ptext49:
  6259                           	opt stack 0
  6260  0000'                    _ADC_ISR:
  6261                           	opt stack 24
  6262                           
  6263                           ;adc.c: 123: PIR1bits.ADIF = 0;
  6264                           
  6265                           ;incstack = 0
  6266  0000' 9C9E               	bcf	3998,6,c	;volatile
  6267  0002' 0012               	return	
  6268  0004'                    __end_of_ADC_ISR:
  6269                           	opt stack 0
  6270  0000                     pclatu	equ	0xFFB
  6271                           pclath	equ	0xFFA
  6272                           tblptru	equ	0xFF8
  6273                           tblptrh	equ	0xFF7
  6274                           tblptrl	equ	0xFF6
  6275                           tablat	equ	0xFF5
  6276                           prodh	equ	0xFF4
  6277                           prodl	equ	0xFF3
  6278                           intcon	equ	0xFF2
  6279                           intcon2	equ	0xFF1
  6280                           postinc0	equ	0xFEE
  6281                           fsr0h	equ	0xFEA
  6282                           fsr0l	equ	0xFE9
  6283                           wreg	equ	0xFE8
  6284                           fsr1h	equ	0xFE2
  6285                           fsr1l	equ	0xFE1
  6286                           indf2	equ	0xFDF
  6287                           postinc2	equ	0xFDE
  6288                           postdec2	equ	0xFDD
  6289                           fsr2h	equ	0xFDA
  6290                           fsr2l	equ	0xFD9
  6291                           status	equ	0xFD8
  6292                           pclatu	equ	0xFFB
  6293                           pclath	equ	0xFFA
  6294                           tblptru	equ	0xFF8
  6295                           tblptrh	equ	0xFF7
  6296                           tblptrl	equ	0xFF6
  6297                           tablat	equ	0xFF5
  6298                           prodh	equ	0xFF4
  6299                           prodl	equ	0xFF3
  6300                           intcon	equ	0xFF2
  6301                           intcon2	equ	0xFF1
  6302                           postinc0	equ	0xFEE
  6303                           fsr0h	equ	0xFEA
  6304                           fsr0l	equ	0xFE9
  6305                           wreg	equ	0xFE8
  6306                           fsr1h	equ	0xFE2
  6307                           fsr1l	equ	0xFE1
  6308                           indf2	equ	0xFDF
  6309                           postinc2	equ	0xFDE
  6310                           postdec2	equ	0xFDD
  6311                           fsr2h	equ	0xFDA
  6312                           fsr2l	equ	0xFD9
  6313                           status	equ	0xFD8
  6314                           
  6315                           	psect	rparam
  6316  0000                     pclatu	equ	0xFFB
  6317                           pclath	equ	0xFFA
  6318                           tblptru	equ	0xFF8
  6319                           tblptrh	equ	0xFF7
  6320                           tblptrl	equ	0xFF6
  6321                           tablat	equ	0xFF5
  6322                           prodh	equ	0xFF4
  6323                           prodl	equ	0xFF3
  6324                           intcon	equ	0xFF2
  6325                           intcon2	equ	0xFF1
  6326                           postinc0	equ	0xFEE
  6327                           fsr0h	equ	0xFEA
  6328                           fsr0l	equ	0xFE9
  6329                           wreg	equ	0xFE8
  6330                           fsr1h	equ	0xFE2
  6331                           fsr1l	equ	0xFE1
  6332                           indf2	equ	0xFDF
  6333                           postinc2	equ	0xFDE
  6334                           postdec2	equ	0xFDD
  6335                           fsr2h	equ	0xFDA
  6336                           fsr2l	equ	0xFD9
  6337                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         564
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      75
    BANK0           160     19     148
    BANK1           256      0     206
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_tr_queue.pTrFlag	PTR enum E8836 size(2) Largest target is 0

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK0[6]), I2C1_MasterWrite@trBlock(BANK0[6]), 

    memset@p1	PTR void  size(2) Largest target is 206
		 -> ring_buffer(BANK1[206]), 

    memset@p	PTR unsigned char  size(2) Largest target is 206
		 -> ring_buffer(BANK1[206]), 

    crcBufS_get@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK0[17]), 

    crcBufS_status_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK0[17]), 

    crcBufS_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK0[17]), 

    sp__memset	PTR void  size(2) Largest target is 206
		 -> ring_buffer(BANK1[206]), 

    FastTransfer_buffer_flush@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK1[206]), 

    FastTransfer_buffer_put@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK1[206]), 

    CRC8@data	PTR const unsigned char  size(2) Largest target is 206
		 -> CRCcheck@arrayHolder(BANK0[3]), receiveData@holder_1784(BANK0[3]), receiveData@holder(BANK0[3]), rx_buffer(BANK2[200]), 
		 -> ring_buffer(BANK1[206]), NULL(NULL[0]), 

    sendStructAddress	PTR unsigned char  size(2) Largest target is 206
		 -> ring_buffer(BANK1[206]), NULL(NULL[0]), 

    serial_read	PTR FTN()unsigned char  size(2) Largest target is 0
		 -> Absolute function(), 

    serial_peek	PTR FTN()unsigned char  size(2) Largest target is 0
		 -> Absolute function(), 

    serial_available	PTR FTN()int  size(2) Largest target is 0
		 -> Absolute function(), 

    serial_write	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    receiveArrayAddress	PTR volatile int  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 0

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_object.pTrTail.pTrFlag	PTR enum E8836 size(2) Largest target is 0

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[6]), I2C1_MasterWrite@trBlock(BANK0[6]), 

    F8948.pbuffer	PTR unsigned char  size(2) Largest target is 0

    F8943.pbuffer	PTR unsigned char  size(2) Largest target is 0

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 0
		 -> group(COMRAM[2]), I2C1_ISR@i2c_address(COMRAM[2]), NULL(NULL[0]), 

    S21$pbuffer	PTR unsigned char  size(2) Largest target is 0

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 0

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[6]), I2C1_MasterWrite@trBlock(BANK0[6]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E8836 size(2) Largest target is 0

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[6]), I2C1_MasterWrite@trBlock(BANK0[6]), 

    S33$pTrFlag	PTR enum E8836 size(2) Largest target is 0

    p_i2c1_current.pTrFlag	PTR enum E8836 size(2) Largest target is 0

    S33$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[6]), I2C1_MasterWrite@trBlock(BANK0[6]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[6]), I2C1_MasterWrite@trBlock(BANK0[6]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[6]), NULL(NULL[0]), 

    S44$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[6]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[6]), 

    S44$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[6]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[6]), 


Critical Paths under _main in COMRAM

    _updateComms->_receiveData
    _respondECU->_ToSend
    _sendData->_FastTransfer_buffer_flush
    _FastTransfer_buffer_flush->_memset
    _buttonsCollector->_GetButtonState
    _ToSend->_FastTransfer_buffer_put
    _FastTransfer_buffer_put->_FastTransfer_buffer_modulo_inc
    _CRCcheck->_crcBufS_get
    _handleIndicators->_SetLEDOut
    _TempCalc->___lwdiv
    ___lwdiv->_ADC_GetConversion

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop
    _ECCP2_CaptureISR->_ECCP2_CallBack
    _ECCP1_CaptureISR->_ECCP1_CallBack

Critical Paths under _main in BANK0

    _updateComms->_receiveData
    _respondECU->_sendData
    _receiveData->_CRCcheck

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   10655
                  _SYSTEM_Initialize
                           _TempCalc
                            _TempGet
                        _updateComms
 ---------------------------------------------------------------------------------
 (1) _updateComms                                          0     0      0    9871
                        _TBbarGraphs
                   _handleIndicators
                        _receiveData
                         _respondECU
 ---------------------------------------------------------------------------------
 (2) _respondECU                                           0     0      0    4208
                              _Delay
                             _ToSend
                   _buttonsCollector
                           _sendData
 ---------------------------------------------------------------------------------
 (3) _sendData                                             5     5      0    2535
                                             32 COMRAM     1     1      0
                                              0 BANK0      4     4      0
                               _CRC8
          _FastTransfer_buffer_flush
                        _crcBufS_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_put                                          7     2      5     742
                                             20 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_flush                            4     0      4     677
                                             28 COMRAM     4     0      4
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6     368
                                             20 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (3) _buttonsCollector                                     9     7      2     137
                                             22 COMRAM     9     7      2
                     _GetButtonState
 ---------------------------------------------------------------------------------
 (4) _GetButtonState                                       2     0      2       0
                                             20 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _ToSend                                               3     1      2    1362
                                             33 COMRAM     3     1      2
            _FastTransfer_buffer_put
                   _buttonsCollector (ARG)
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_put                              7     2      5    1190
                                             26 COMRAM     7     2      5
     _FastTransfer_buffer_modulo_inc
 ---------------------------------------------------------------------------------
 (5) _FastTransfer_buffer_modulo_inc                       6     2      4     602
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay                                                5     3      2     174
                                             20 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _receiveData                                         16    16      0    5270
                                             32 COMRAM     4     4      0
                                              7 BANK0     12    12      0
                               _CRC8
                           _CRCcheck
 ---------------------------------------------------------------------------------
 (3) _CRCcheck                                             7     7      0    3799
                                              0 BANK0      7     7      0
                               _CRC8
                        _crcBufS_get
                 _crcBufS_status_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_status_put                                  10     6      4     908
                                             20 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (4) _crcBufS_get                                         12     8      4    1404
                                             20 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (4) _CRC8                                                 7     4      3    1014
                                             20 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _handleIndicators                                     7     5      2     221
                                             23 COMRAM     7     5      2
                          _SetLEDOut
 ---------------------------------------------------------------------------------
 (3) _SetLEDOut                                            3     0      3       0
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TBbarGraphs                                          4     0      4     172
                                             20 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _TempGet                                              2     0      2     172
                                             20 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TempCalc                                             2     0      2     612
                                             32 COMRAM     2     0      2
                  _ADC_GetConversion
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     418
                                             25 COMRAM     7     3      4
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    5     3      2      22
                                             20 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                   _ECCP1_Initialize
                   _ECCP2_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECCP2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECCP1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                          14    14      0     188
                                              6 COMRAM    14    14      0
                            _ADC_ISR
                   _ECCP1_CaptureISR
                   _ECCP2_CaptureISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (8) _TMR2_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_ISR                                             3     3      0      22
                                              3 COMRAM     3     3      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (8) _I2C1_Stop                                            3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (8) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ECCP2_CaptureISR                                     2     2      0      83
                                              2 COMRAM     2     2      0
                     _ECCP2_CallBack
 ---------------------------------------------------------------------------------
 (8) _ECCP2_CallBack                                       2     0      2      53
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _ECCP1_CaptureISR                                     2     2      0      83
                                              2 COMRAM     2     2      0
                     _ECCP1_CallBack
 ---------------------------------------------------------------------------------
 (8) _ECCP1_CallBack                                       2     0      2      53
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _ECCP1_Initialize
     _ECCP2_Initialize
     _EUSART1_Initialize
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
   _TempCalc
     _ADC_GetConversion
     ___lwdiv
       _ADC_GetConversion (ARG)
   _TempGet
   _updateComms
     _TBbarGraphs
     _handleIndicators
       _SetLEDOut
     _receiveData
       _CRC8
       _CRCcheck
         _CRC8
         _crcBufS_get
         _crcBufS_status_put
     _respondECU
       _Delay
       _ToSend
         _FastTransfer_buffer_put
           _FastTransfer_buffer_modulo_inc
         _buttonsCollector (ARG)
           _GetButtonState
       _buttonsCollector
         _GetButtonState
       _sendData
         _CRC8
         _FastTransfer_buffer_flush
           _memset
         _crcBufS_put

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _ECCP1_CaptureISR
     _ECCP1_CallBack
   _ECCP2_CaptureISR
     _ECCP2_CallBack
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR2_ISR
     _TMR2_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      C8       8       78.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      CE       6       80.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     13      94       4       92.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     24      4B       1       78.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     275       9        0.0%
DATA                 0      0     275      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Jan 11 21:39:30 2016

      __end_of_FastTransfer_buffer_flush 000062                 __end_of_ECCP2_Initialize 000018  
               _eusart1TxBufferRemaining 000009                             _rx_array_inx 000017  
                           __CFG_CP0$OFF 000000                             __CFG_CP1$OFF 000000  
                           __CFG_CP2$OFF 000000                             __CFG_CP3$OFF 000000  
                                    l813 000018                                      l741 000000  
                                    l638 000032                                      l559 000064  
                                    l567 00005E                                      l664 000040  
                                    l779 00001E                             __CFG_CPB$OFF 000000  
                                    _PR2 000FBB                             __CFG_CPD$OFF 000000  
                        _timer1ReloadVal 000007                          __end_of_ADC_ISR 000004  
   FastTransfer_buffer_flush@clearBuffer 00001E                          _TMR2_Initialize 000000  
                                    prod 000FF3                                      wreg 000FE8  
                            _TBbarGraphs 000000                             __CFG_LVP$OFF 000000  
                       __end_of_I2C1_ISR 000256                                     l1360 000048  
                                   l3213 000006                                     l3205 00000A  
                                   l3321 000086                                     l3209 00001A  
                                   l3219 00001C                                     l3227 000038  
                                   l3307 000002                                     l3229 00003C  
                                   l3253 000014                                     l3317 000062  
                                   l3407 0001D8                                     l3265 0000A0  
                                   l3249 00000A                                     l3281 000098  
                                   l3273 00000A                                     l3417 0001E4  
                                   l3345 000002                                     l2377 000020  
                                   l3355 000036                                     l3429 00023E  
                                   l3437 00024A                                     l2743 000016  
                                   l3391 00014C                                     l2495 00000A  
                                   l3287 00002A                                     l2745 00001E  
                                   l3393 000152                                     l3385 0000B2  
                                   l3377 000042                                     l3289 000030  
                                   l2755 00003E                                     l2747 000022  
                                   l3395 000166                                     l3487 00000A  
                   receiveData@crcHolder 000007                                     l2989 00002A  
                                   _CRC8 000000                                     u1405 00000E  
                                   _LATA 000F89                                     u1174 000048  
                                   _LATB 000F8A                                     u1175 000042  
                                   _LATC 000F8B                                     u1424 000050  
                                   _LATD 000F8C                                     u1425 00004A  
                                   _LATE 000F8D                                     u2447 000010  
                                   i2l60 000036                                     i2l71 0000E8  
                                   i2l72 0000F6                                     i2l65 0000B4  
                                   i2l90 0001C4                                     i2l82 00016E  
                                   i2l66 0000BC                                     i2l76 00015A  
                                   i2l94 0001F4                                     i2l86 00019A  
                                   i2l89 0001B4                                     _TMR1 000FCE  
                                   _TMR2 000FBC                                     _WPUB 000F61  
                                   _main 000000                                     fsr0h 000FEA  
                                   fsr1h 000FE2                                     fsr0l 000FE9  
                                   fsr2h 000FDA                                     fsr1l 000FE1  
                                   indf2 000FDF                                     fsr2l 000FD9  
                          __CFG_BORV$190 000000                                     pclat 000FFA  
                                   prodh 000FF4                                     prodl 000FF3  
        __end_of_FastTransfer_buffer_put 000170                                     start 000000* 
                          __CFG_IESO$OFF 000000                         _handleIndicators 000000  
                                  ?_CRC8 000014                          __end_of_TempGet 000002  
                             _i2c1_state 000011                         __end_of_CRCcheck 0000A0  
         __size_of_OSCILLATOR_Initialize 000000            __end_of_OSCILLATOR_Initialize 00000E  
                     crcBufS_put@address 000016                                    ?_main 000000  
                      __end_of_I2C1_Stop 00003E                          _TMR1_StartTimer 000000  
                                  _T1CON 000FCD                                    _T2CON 000FBA  
                         __CFG_DEBUG$OFF 000000                          __end_of___lwdiv 000052  
                                  i2l304 000030                                    i2l401 000096  
                                  i2l391 000068                                    i2l393 000074  
                                  i2l385 000044                                    i2l395 000080  
                                  i2l387 000050                                    i2l397 00008C  
                                  i2l389 00005C                                    _TMR1H 000FCF  
                                  _TMR1L 000FCE                                    _TRISA 000F92  
                                  _TRISB 000F93                                    _TRISC 000F94  
                                  _TRISD 000F95                                    _TRISE 000F96  
                                  _Delay 000000                   ECCP2_CaptureISR@module 000002  
           __end_of_I2C1_BusCollisionISR 000002                            __CFG_WRT0$OFF 000000  
                          __CFG_WRT1$OFF 000000                            __CFG_WRT2$OFF 000000  
                          __CFG_WRT3$OFF 000000                        ?_buttonsCollector 000016  
                   _EUSART1_Transmit_ISR 000000                           __CFG_EBTR0$OFF 000000  
                         __CFG_FCMEN$OFF 000000                           __CFG_EBTR1$OFF 000000  
                         __CFG_EBTR2$OFF 000000                           __CFG_EBTR3$OFF 000000  
                      ??_I2C1_Initialize 000014                         __end_of_TMR2_ISR 000008  
                          __CFG_WRTB$OFF 000000                            __CFG_WRTC$OFF 000000  
                          __CFG_WRTD$OFF 000000                           __CFG_EBTRB$OFF 000000  
                                  _brake 00004A                       ??_buttonsCollector 000018  
                                  _group 00001B                       __CFG_MCLRE$EXTMCLR 000000  
                __end_of_TMR1_Initialize 000020                                    tablat 000FF5  
                   __size_of_crcBufS_get 000000                     __size_of_crcBufS_put 000000  
                                  status 000FD8                           __CFG_HFOFST$ON 000000  
                        _TMR2_StartTimer 000000                             ?_receiveData 000000  
                         __CFG_PBADEN$ON 000000                             __end_of_CRC8 000048  
                        CRCcheck@SentCRC 000000                          __initialization 000000  
             __end_of_EUSART1_Initialize 000034                             __end_of_main 000040  
                             ToSend@what 000021              ECCP2_CallBack@capturedValue 000000  
                                 ??_CRC8 000017                  __end_of_TMR2_Initialize 000016  
                              ??_ADC_ISR 000000              ?_INTERRUPT_InterruptManager 000000  
                            _i2c1_object 000000                                   ??_main 000024  
                          __activetblptr 000002                         __end_of_TempCalc 000058  
                      ?_ECCP1_CaptureISR 000000                                   ?_Delay 000014  
                  ?_EUSART1_Transmit_ISR 000000            FastTransfer_buffer_put@towhat 00001D  
                     ??_ECCP1_CaptureISR 000002                                   _ADCON0 000FC2  
                                 _ADCON1 000FC1                                   _ADCON2 000FC0  
                                 _ADRESH 000FC4                                   _ADRESL 000FC3  
                                 _CCPR1H 000FBF                                   _CCPR2H 000F68  
                                 _CCPR1L 000FBE                                   _CCPR2L 000F67  
                                 _ANSELA 000F38                                   _ANSELB 000F39  
                                 _ANSELC 000F3A                                   _ANSELD 000F3B  
                                 _ANSELE 000F3C                                   _T1GCON 000FCC  
                                 _RC1STA 000FAB                           __CFG_WDTEN$OFF 000000  
                                 i2l2803 0000E2                                   Delay@x 000017  
                                 i2l2577 000012                                   i2l2569 000038  
                                 i2l2817 000120                                   i2l2845 00017E  
                                 i2l2837 000168                                   i2l2943 00002C  
                                 i2l2871 0001D4                                   i2l2855 0001A2  
                                 i2l2783 000094                                   i2l2883 0001FA  
                                 i2l2867 0001CC                                   i2l2957 00002C  
                                 i2l2949 000008                                   i2l2885 0001FE  
                                 i2l2797 0000CA                                   i2l2893 000210  
                                 i2l2887 000206                           _GetButtonState 000000* 
                                 _RCREG1 000FAE                                   _OSCCON 000FD3  
                                 _SPBRG1 000FAF                                   _TX1STA 000FAC  
                                 _TXREG1 000FAD                        ?_ECCP2_CaptureISR 000000  
                         __CFG_XINST$OFF 000000                       ??_ECCP2_CaptureISR 000002  
                              ??_TempGet 000016                                   _ToSend 000000  
                       crcBufS_get@_this 000014                             _CCPTMRS0bits 000F49  
            ??_FastTransfer_buffer_flush 000020                           _p_i2c1_current 000002  
                __size_of_ECCP1_CallBack 000000                         crcBufS_get@space 000017  
                __end_of_TMR1_StartTimer 000004                                CRC8@tempI 000019  
                         __CFG_STVREN$ON 000000                                ??___lwdiv 00001D  
                __size_of_ECCP2_CallBack 000000                                   _memset 000000  
                              ?_I2C1_ISR 000000                                   clear_0 000006  
                                 clear_1 000012                                   clear_2 00001E  
                                 clear_3 00002A                                   _rx_len 000018  
                       __end_of_sendData 000082                                   tblptrh 000FF7  
                                 tblptrl 000FF6                                   tblptru 000FF8  
       __size_of_FastTransfer_buffer_put 000000                 ADC_GetConversion@channel 000018  
                __end_of_TMR2_StartTimer 000004                        ?_ECCP1_Initialize 000000  
                        _eusart1RxBuffer 000032            __size_of_INTERRUPT_Initialize 000000  
                        _eusart1TxBuffer 00003A                         ?_TMR1_Initialize 000000  
                      _SYSTEM_Initialize 000000                       ??_ECCP1_Initialize 000014  
                             __accesstop 000000*                 __end_of__initialization 000030  
                              ?_CRCcheck 000000                    __end_of_TMR2_CallBack 000002  
                     ?_SYSTEM_Initialize 000000                           _i2c1_trb_count 000012  
                           ?_updateComms 000000                             TBbarGraphs@b 000016  
                           TBbarGraphs@t 000014                            __end_of_Delay 000034  
                  _I2C1_FunctionComplete 000000                     _I2C1_BusCollisionISR 000000  
                         __pcstackCOMRAM 000000                       _crcBufS_status_put 000000  
                    ??_SYSTEM_Initialize 000014                         crcBufS_put@_this 000014  
                              ?_TMR2_ISR 000000                        ?_ECCP2_Initialize 000000  
 __end_of_FastTransfer_buffer_modulo_inc 00002A  __size_of_FastTransfer_buffer_modulo_inc 000000  
         _FastTransfer_buffer_modulo_inc 000000                               ??_I2C1_ISR 000003  
                       ?_TMR2_Initialize 000000             FastTransfer_buffer_put@_this 00001A  
                     ??_ECCP2_Initialize 000014                              ToSend@where 000023  
                            _SetLEDOut$0 000014                              _SetLEDOut$1 000016  
                    ?_crcBufS_status_put 000014                   ??_EUSART1_Transmit_ISR 000000  
                                ??_Delay 000016                             ?_TBbarGraphs 000014  
            __end_of_EUSART1_Receive_ISR 000030                _FastTransfer_buffer_flush 000000  
                                CRC8@crc 00001A                                  CRC8@len 000016  
                                CRC8@sum 000017                          ?_GetButtonState 000014  
              __end_of_SYSTEM_Initialize 00002A                 __end_of_handleIndicators 00006E  
                 receiveData@holder_1784 00000C                            _eusart1RxHead 00000D  
                    _addressErrorCounter 000046                            _eusart1TxHead 00000F  
                          _eusart1RxTail 00000E                               __pbssBANK0 000000  
                             __pbssBANK1 000000                               __pbssBANK2 000000  
                          _eusart1TxTail 000010                          __CFG_PLLCFG$OFF 000000  
                             ??_CRCcheck 000020                     ??_crcBufS_status_put 000018  
                             __pnvCOMRAM 000000                                ?_TempCalc 000020  
                  ?_I2C1_BusCollisionISR 000000                     __size_of_receiveData 000000  
                                ?_ToSend 000021                       __CFG_CCP2MX$PORTC1 000000  
                       ?_TMR1_StartTimer 000000                               ??_TMR2_ISR 000000  
                     __CFG_CCP3MX$PORTB5 000000      FastTransfer_buffer_modulo_inc@value 000014  
                        _I2C1_Initialize 000000                                  _CCP1CON 000FBD  
                                _CCP2CON 000F66                                  _ADC_ISR 000000  
                                ?_memset 000014                               _crc_buffer 00005E  
                __size_of_ADC_Initialize 000000                                  _OSCCON2 000FD2  
                              _I2C1_Stop 000000                        __CFG_PRICLKEN$OFF 000000  
                                _OSCTUNE 000F9B                                  _SPBRGH1 000FB0  
                                _SSP1ADD 000FC8                      sendData@whereToSend 000000  
                    _receiveArrayAddress 000006                                  _SSP1BUF 000FC9  
                       ?_TMR2_StartTimer 000000                                ?_sendData 000000  
                      _alignErrorCounter 000048                          __CFG_PWRTEN$OFF 000000  
              __size_of_buttonsCollector 000000                   ?_I2C1_FunctionComplete 000000  
                             ??_TempCalc 000022                                  __Hparam 000000  
                                __Lparam 000000                                  _TempGet 000000  
                                _TempOne 000042                                  _TempTwo 000044  
                        __size_of_ToSend 000000                       _p_i2c1_trb_current 000004  
                         _ECCP1_CallBack 000000                                _AKNAKsend 00000A  
                                ___lwdiv 000000                           _ECCP2_CallBack 000000  
                                _calc_CS 00000B                                  __pcinit 000000  
                        __size_of_memset 000000                                  __ramtop 000000* 
                                __ptext0 000000                                  __ptext1 000000  
                                __ptext2 000000                                  __ptext3 000000  
                                __ptext4 000000                                  __ptext5 000000  
                                __ptext6 000000                                  __ptext7 000000  
                                __ptext8 000000                                  __ptext9 000000  
                              _T1CONbits 000FCD                    _OSCILLATOR_Initialize 000000  
                              _T2CONbits 000FBA                  _FastTransfer_buffer_put 000000  
                  CRCcheck@calculatedCRC 000001                       _EUSART1_Initialize 000000  
               ??_PIN_MANAGER_Initialize 000014                               ?_I2C1_Stop 000000  
           crcBufS_status_put@wantedTime 00001C                            ??_crcBufS_get 000018  
                          ??_crcBufS_put 000019               __size_of_SYSTEM_Initialize 000000  
                   I2C1_ISR@pi2c_buf_ptr 000000                     end_of_initialization 000030  
                              Delay@wait 000014                      ?_EUSART1_Initialize 000000  
                                memset@c 000016                                  memset@n 000018  
                                memset@p 00001A                            __Lmediumconst 000000* 
              __size_of_ECCP1_CaptureISR 000000                   ??_I2C1_BusCollisionISR 000000  
                             ??_sendData 000020                   __end_of_ECCP1_CallBack 000002  
                __end_of_I2C1_Initialize 000036                   __end_of_ECCP2_CallBack 000002  
                   __size_of_updateComms 000000                                  postdec2 000FDD  
            ECCP1_CallBack@capturedValue 000000                                  postinc0 000FEE  
                                postinc2 000FDE                               _respondECU 000000  
                    CRCcheck@arrayHolder 000002                     ??_EUSART1_Initialize 000014  
              __size_of_ECCP2_CaptureISR 000000                   _dataAdressErrorCounter 00004E  
                      __size_of_I2C1_ISR 000000                               _rx_address 000016  
                   __size_of_TBbarGraphs 000000        I2C1_ISR@i2c_10bit_address_restart 000008  
     __size_of_FastTransfer_buffer_flush 000000                      __end_of_crcBufS_get 0000EA  
                    __end_of_crcBufS_put 0000D6                          ?_ECCP1_CallBack 000000  
                      __size_of_CRCcheck 000000                            _moduleAddress 000014  
                        ?_ECCP2_CallBack 000000                               CRCcheck@rt 000005  
              __size_of_ECCP1_Initialize 000000                           __end_of_ToSend 000020  
           __end_of_INTERRUPT_Initialize 000014                          _crcErrorCounter 00004C  
                I2C1_MasterWrite@trBlock 000075                        crcBufS_put@oldCRC 000017  
               I2C1_Stop@completion_code 000002                        __size_of_TMR2_ISR 000000  
                         _ADC_Initialize 000000                ??_FastTransfer_buffer_put 00001F  
                 ?_OSCILLATOR_Initialize 000000                           __end_of_memset 00002C  
                      crcBufS_put@status 000018                  buttonsCollector@sendVal 00001B  
                           receiveData@r 000011                             receiveData@u 00000F  
                       ??_GetButtonState 000016                      start_initialization 000000  
                            ??_I2C1_Stop 000000          __size_of_PIN_MANAGER_Initialize 000000  
                  crcBufS_get@wantedTime 00001E                __size_of_ECCP2_Initialize 000000  
                              _SetLEDOut 000000*                               TempCalc@x 000020  
                      ?_handleIndicators 000017                       ??_handleIndicators 000019  
                       _buttonsCollector 000000                         ?_I2C1_Initialize 000000  
                               ??_ToSend 000023                 __size_of_TMR1_Initialize 000000  
                               CRC8@data 000014                          crcBufS_get@time 000016  
                      __size_of_TempCalc 000000                              ?_respondECU 000000  
                 __end_of_ADC_Initialize 000018                                 ?_ADC_ISR 000000  
                               ??_memset 00001A                        handleIndicators@i 00001C  
                         _eusart1RxCount 00000C                   __size_of_TMR2_CallBack 000000  
                            __pbssCOMRAM 000000            __size_of_EUSART1_Transmit_ISR 000000  
                          __pcstackBANK0 000000                 __size_of_TMR2_Initialize 000000  
                          _i2c1_tr_queue 00007B                               ?_SetLEDOut 000014  
                            _crcBufS_get 000000                              _crcBufS_put 000000  
                ??_I2C1_FunctionComplete 000000             __size_of_EUSART1_Receive_ISR 000000  
                       _ECCP1_CaptureISR 000000                            ??_receiveData 000020  
            __size_of_crcBufS_status_put 000000                               sendData@CS 000001  
                       ___lwdiv@dividend 000019                   _PIN_MANAGER_Initialize 000000  
                               ?_TempGet 000014                        __size_of_sendData 000000  
                              __pintcode 000000                                 ?___lwdiv 000019  
                        ?_ADC_Initialize 000000                                 _I2C1_ISR 000000  
           ??_INTERRUPT_InterruptManager 000006                         _ECCP2_CaptureISR 000000  
                               _BAUD1CON 000FB8                 __size_of_TMR1_StartTimer 000000  
                      buttonsCollector@i 00001D                           __size_of_Delay 000000  
                       ___lwdiv@quotient 00001D                      __size_of_respondECU 000000  
                   _INTERRUPT_Initialize 000000                             _receiveArray 000000  
                 I2C1_MasterRead@trBlock 00006F                                 _CRCcheck 000000  
                               _LATCbits 000F8B                         _GetButtonState$0 000014  
                          _TMR2_CallBack 000000                                 _IPR1bits 000F9F  
                               _IPR2bits 000FA2                                 _PIE1bits 000F9D  
                               _PIE2bits 000FA0                 __size_of_TMR2_StartTimer 000000  
    __size_of_INTERRUPT_InterruptManager 000000                                 _PIR1bits 000F9E  
                               _PIR2bits 000FA1                                 _RCONbits 000FD0  
                       __CFG_WDTPS$32768 000000                         _ECCP1_Initialize 000000  
                    __end_of_receiveData 00024E                                 _SSP1CON1 000FC6  
                               _SSP1CON3 000FCB                                 _TMR2_ISR 000000  
                               _SSP1STAT 000FC7           FastTransfer_buffer_flush@_this 00001C  
                              _rx_buffer 000000                        ??_TMR1_Initialize 000014  
                       __size_of_ADC_ISR 000000                               _ADCON0bits 000FC2  
                 ECCP1_CaptureISR@module 000002                         _ECCP2_Initialize 000000  
                            ??_SetLEDOut 000017                              _INTCON2bits 000FF1  
                  ?_INTERRUPT_Initialize 000000                        _sendStructAddress 000050  
                       ??_ECCP1_CallBack 000002                        ??_TMR2_Initialize 000014  
                         ?_TMR2_CallBack 000000                         ??_ECCP2_CallBack 000002  
                               TempGet@x 000014                            ??_updateComms 000024  
                               _TempCalc 000000                                 __Hrparam 000000* 
                               _TempData 000028            __size_of_I2C1_BusCollisionISR 000000  
                               __Lrparam 000000*                       _ADC_GetConversion 000000  
                     __CFG_BOREN$SBORDIS 000000                         __size_of_TempGet 000000  
                 I2C1_ISR@i2c_bytes_left 000009                        __CFG_P2BMX$PORTD2 000000  
                ??_OSCILLATOR_Initialize 000014                       ?_ADC_GetConversion 000014  
            __size_of_EUSART1_Initialize 000000                         __size_of___lwdiv 000000  
                            CRC8@extract 000018                      ??_ADC_GetConversion 000016  
               __end_of_buttonsCollector 000068                                sendData@i 000002  
                          ??_TBbarGraphs 000018                          ___lwdiv@divisor 00001B  
                    I2C1_ISR@i2c_address 000019                          ___lwdiv@counter 00001F  
               crcBufS_status_put@status 000017                                 __ptext10 000000  
                               __ptext11 000000                                 __ptext20 000000  
                               __ptext12 000000                                 __ptext21 000000  
                               __ptext13 000000                               _T1GCONbits 000FCC  
                               __ptext30 000000                                 __ptext22 000000  
                               __ptext14 000000                                 __ptext31 000000  
                               __ptext23 000000                                 __ptext15 000000  
                               __ptext40 000000                                 __ptext32 000000  
                               __ptext24 000000                                 __ptext16 000000  
                               __ptext41 000000                                 __ptext33 000000  
                               __ptext25 000000                                 __ptext17 000000  
                               __ptext42 000000                                 __ptext34 000000  
                               __ptext26 000000                                 __ptext18 000000  
                               __ptext43 000000                                 __ptext35 000000  
                               __ptext27 000000                                 __ptext19 000000  
                               __ptext44 000000                                 __ptext28 000000  
                               __ptext45 000000                                 __ptext37 000000  
                               __ptext29 000000                                 __ptext46 000000  
                               __ptext38 000000                                 __ptext47 000000  
                               __ptext39 000000                                 __ptext48 000000  
                               __ptext49 000000                             _SSP1CON1bits 000FC6  
                           _SSP1CON2bits 000FC5                        ??_TMR1_StartTimer 000014  
                          __size_of_CRC8 000000                            _returnAddress 000015  
                          __size_of_main 000000                              _receiveData 000000  
                               _sendData 000000                __end_of_ADC_GetConversion 000030  
                             _RC1STAbits 000FAB                             ??_respondECU 000024  
              __size_of_handleIndicators 000000            handleIndicators@oldIndicators 00005C  
                           _serial_write 000058                                 _throttle 00005A  
                      ??_TMR2_StartTimer 000014                      __end_of_updateComms 00003C  
     __end_of_INTERRUPT_InterruptManager 0000D0               _INTERRUPT_InterruptManager 000000  
                    _EUSART1_Receive_ISR 000000                        receiveData@holder 000009  
               __end_of_ECCP1_CaptureISR 000018                               _INTCONbits 000FF2  
     handleIndicators@receivedIndicators 000017                   ??_INTERRUPT_Initialize 000014  
                               memset@p1 000014                         _serial_available 000052  
                           ?_crcBufS_get 000014                             ?_crcBufS_put 000014  
                               intlevel2 000000*                 crcBufS_status_put@_this 000014  
                        ??_TMR2_CallBack 000000                       __end_of_respondECU 000044  
                    __end_of_TBbarGraphs 000012                     ?_EUSART1_Receive_ISR 000000  
 FastTransfer_buffer_modulo_inc@my_value 000018           FastTransfer_buffer_put@towhere 00001C  
                ?_PIN_MANAGER_Initialize 000000                 __end_of_ECCP2_CaptureISR 000018  
         __size_of_I2C1_FunctionComplete 000000            __end_of_I2C1_FunctionComplete 000018  
           __end_of_EUSART1_Transmit_ISR 000034                              _ring_buffer 000000  
                       ??_ADC_Initialize 000014               ?_FastTransfer_buffer_flush 00001C  
                            _serial_peek 000054                              _serial_read 000056  
               ?_FastTransfer_buffer_put 00001A                 __size_of_I2C1_Initialize 000000  
  FastTransfer_buffer_modulo_inc@modulus 000016                   crcBufS_status_put@time 000016  
              receiveData@crcHolder_1785 000008                        __CFG_T3CMX$PORTC0 000000  
                         _maxDataAddress 000013                 __end_of_ECCP1_Initialize 000018  
             __end_of_crcBufS_status_put 0000DE                    ??_EUSART1_Receive_ISR 000000  
         __end_of_PIN_MANAGER_Initialize 000044         ??_FastTransfer_buffer_modulo_inc 000018  
        ?_FastTransfer_buffer_modulo_inc 000014                       __size_of_I2C1_Stop 000000  
                      __CFG_FOSC$INTIO67 000000               __size_of_ADC_GetConversion 000000  
                        _TMR1_Initialize 000000                              _updateComms 000000  
