

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Jun 02 19:27:41 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    83  0000                     
    84                           	psect	idataCOMRAM
    85  0021D4                     __pidataCOMRAM:
    86                           	opt stack 0
    87                           
    88                           ;initializer for _Transmit_stall
    89  0021D4  01                 	db	1
    90                           
    91                           	psect	nvCOMRAM
    92  000043                     __pnvCOMRAM:
    93                           	opt stack 0
    94  000043                     _timer0ReloadVal16bit:
    95                           	opt stack 0
    96  000043                     	ds	2
    97  0000                     _ANSELA	set	3896
    98  0000                     _ANSELB	set	3897
    99  0000                     _ANSELC	set	3898
   100  0000                     _ANSELD	set	3899
   101  0000                     _ANSELE	set	3900
   102  0000                     _ADCON0	set	4034
   103  0000                     _ADCON0bits	set	4034
   104  0000                     _ADCON1	set	4033
   105  0000                     _ADCON2	set	4032
   106  0000                     _ADRESH	set	4036
   107  0000                     _ADRESL	set	4035
   108  0000                     _BAUD1CON	set	4024
   109  0000                     _INTCON2bits	set	4081
   110  0000                     _INTCONbits	set	4082
   111  0000                     _IPR1bits	set	3999
   112  0000                     _IPR2bits	set	4002
   113  0000                     _LATA	set	3977
   114  0000                     _LATB	set	3978
   115  0000                     _LATC	set	3979
   116  0000                     _LATCbits	set	3979
   117  0000                     _LATD	set	3980
   118  0000                     _LATE	set	3981
   119  0000                     _OSCCON	set	4051
   120  0000                     _OSCCON2	set	4050
   121  0000                     _OSCTUNE	set	3995
   122  0000                     _PIE1bits	set	3997
   123  0000                     _PIE2bits	set	4000
   124  0000                     _PIR1bits	set	3998
   125  0000                     _PIR2bits	set	4001
   126  0000                     _PORTAbits	set	3968
   127  0000                     _PORTBbits	set	3969
   128  0000                     _PORTDbits	set	3971
   129  0000                     _RC1STA	set	4011
   130  0000                     _RC1STAbits	set	4011
   131  0000                     _RCONbits	set	4048
   132  0000                     _RCREG1	set	4014
   133  0000                     _SPBRG1	set	4015
   134  0000                     _SPBRGH1	set	4016
   135  0000                     _SSP1ADD	set	4040
   136  0000                     _SSP1BUF	set	4041
   137  0000                     _SSP1CON1	set	4038
   138  0000                     _SSP1CON1bits	set	4038
   139  0000                     _SSP1CON2bits	set	4037
   140  0000                     _SSP1CON3	set	4043
   141  0000                     _SSP1STAT	set	4039
   142  0000                     _T0CON	set	4053
   143  0000                     _T0CONbits	set	4053
   144  0000                     _TMR0H	set	4055
   145  0000                     _TMR0L	set	4054
   146  0000                     _TRISA	set	3986
   147  0000                     _TRISB	set	3987
   148  0000                     _TRISC	set	3988
   149  0000                     _TRISCbits	set	3988
   150  0000                     _TRISD	set	3989
   151  0000                     _TRISE	set	3990
   152  0000                     _TX1STA	set	4012
   153  0000                     _TXREG1	set	4013
   154  0000                     _WPUB	set	3937
   155  0000                     _LATA3	set	31819
   156  0000                     _LATB3	set	31827
   157  0000                     _LATB5	set	31829
   158  0000                     _LATD1	set	31841
   159  0000                     _LATE1	set	31849
   160  0000                     _LATE2	set	31850
   161                           
   162                           ; #config settings
   163  0000                     
   164                           	psect	cinit
   165  001ADA                     __pcinit:
   166                           	opt stack 0
   167  001ADA                     start_initialization:
   168                           	opt stack 0
   169  001ADA                     __initialization:
   170                           	opt stack 0
   171                           
   172                           ; Clear objects allocated to BANK4 (206 bytes)
   173  001ADA  EE04  F000         	lfsr	0,__pbssBANK4
   174  001ADE  0ECE               	movlw	206
   175  001AE0                     clear_0:
   176  001AE0  6AEE               	clrf	postinc0,c
   177  001AE2  06E8               	decf	wreg,f,c
   178  001AE4  E1FD               	bnz	clear_0
   179                           
   180                           ; Clear objects allocated to BANK3 (206 bytes)
   181  001AE6  EE03  F000         	lfsr	0,__pbssBANK3
   182  001AEA  0ECE               	movlw	206
   183  001AEC                     clear_1:
   184  001AEC  6AEE               	clrf	postinc0,c
   185  001AEE  06E8               	decf	wreg,f,c
   186  001AF0  E1FD               	bnz	clear_1
   187                           
   188                           ; Clear objects allocated to BANK2 (200 bytes)
   189  001AF2  EE02  F000         	lfsr	0,__pbssBANK2
   190  001AF6  0EC8               	movlw	200
   191  001AF8                     clear_2:
   192  001AF8  6AEE               	clrf	postinc0,c
   193  001AFA  06E8               	decf	wreg,f,c
   194  001AFC  E1FD               	bnz	clear_2
   195                           
   196                           ; Clear objects allocated to BANK1 (206 bytes)
   197  001AFE  EE01  F000         	lfsr	0,__pbssBANK1
   198  001B02  0ECE               	movlw	206
   199  001B04                     clear_3:
   200  001B04  6AEE               	clrf	postinc0,c
   201  001B06  06E8               	decf	wreg,f,c
   202  001B08  E1FD               	bnz	clear_3
   203                           
   204                           ; Clear objects allocated to BANK0 (147 bytes)
   205  001B0A  EE00  F060         	lfsr	0,__pbssBANK0
   206  001B0E  0E93               	movlw	147
   207  001B10                     clear_4:
   208  001B10  6AEE               	clrf	postinc0,c
   209  001B12  06E8               	decf	wreg,f,c
   210  001B14  E1FD               	bnz	clear_4
   211                           
   212                           ; Clear objects allocated to COMRAM (26 bytes)
   213  001B16  EE00  F029         	lfsr	0,__pbssCOMRAM
   214  001B1A  0E1A               	movlw	26
   215  001B1C                     clear_5:
   216  001B1C  6AEE               	clrf	postinc0,c
   217  001B1E  06E8               	decf	wreg,f,c
   218  001B20  E1FD               	bnz	clear_5
   219                           
   220                           ; Initialize objects allocated to COMRAM (1 bytes)
   221                           ; load TBLPTR registers with __pidataCOMRAM
   222  001B22  0ED4               	movlw	low __pidataCOMRAM
   223  001B24  6EF6               	movwf	tblptrl,c
   224  001B26  0E21               	movlw	high __pidataCOMRAM
   225  001B28  6EF7               	movwf	tblptrh,c
   226  001B2A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   227  001B2C  6EF8               	movwf	tblptru,c
   228  001B2E  0009               	tblrd		*+	;fetch initializer
   229  001B30  CFF5 F045          	movff	tablat,__pdataCOMRAM
   230  001B34                     end_of_initialization:
   231                           	opt stack 0
   232  001B34                     __end_of__initialization:
   233                           	opt stack 0
   234  001B34  0E00               	movlw	low (__Lmediumconst shr (0+16))
   235  001B36  6EF8               	movwf	tblptru,c
   236  001B38  0100               	movlb	0
   237  001B3A  EF0D  F010         	goto	_main	;jump to C main() function
   238                           tblptru	equ	0xFF8
   239                           tblptrh	equ	0xFF7
   240                           tblptrl	equ	0xFF6
   241                           tablat	equ	0xFF5
   242                           postinc0	equ	0xFEE
   243                           wreg	equ	0xFE8
   244                           
   245                           	psect	bssCOMRAM
   246  000029                     __pbssCOMRAM:
   247                           	opt stack 0
   248  000029                     _p_i2c1_current:
   249                           	opt stack 0
   250  000029                     	ds	2
   251  00002B                     _p_i2c1_trb_current:
   252                           	opt stack 0
   253  00002B                     	ds	2
   254  00002D                     _serial_available:
   255                           	opt stack 0
   256  00002D                     	ds	2
   257  00002F                     _serial_read:
   258                           	opt stack 0
   259  00002F                     	ds	2
   260  000031                     _serial_write:
   261                           	opt stack 0
   262  000031                     	ds	2
   263  000033                     I2C1_ISR@i2c_10bit_address_restart:
   264                           	opt stack 0
   265  000033                     	ds	1
   266  000034                     I2C1_ISR@i2c_bytes_left:
   267                           	opt stack 0
   268  000034                     	ds	1
   269  000035                     _AKNAKsend:
   270                           	opt stack 0
   271  000035                     	ds	1
   272  000036                     _calc_CS:
   273                           	opt stack 0
   274  000036                     	ds	1
   275  000037                     _i2c1_state:
   276                           	opt stack 0
   277  000037                     	ds	1
   278  000038                     _i2c1_trb_count:
   279                           	opt stack 0
   280  000038                     	ds	1
   281  000039                     _maxDataAddress:
   282                           	opt stack 0
   283  000039                     	ds	1
   284  00003A                     _moduleAddress:
   285                           	opt stack 0
   286  00003A                     	ds	1
   287  00003B                     _returnAddress:
   288                           	opt stack 0
   289  00003B                     	ds	1
   290  00003C                     _rx_address:
   291                           	opt stack 0
   292  00003C                     	ds	1
   293  00003D                     _rx_array_inx:
   294                           	opt stack 0
   295  00003D                     	ds	1
   296  00003E                     _rx_len:
   297                           	opt stack 0
   298  00003E                     	ds	1
   299  00003F                     I2C1_ISR@i2c_address:
   300                           	opt stack 0
   301  00003F                     	ds	2
   302  000041                     _group:
   303                           	opt stack 0
   304  000041                     	ds	2
   305                           tblptru	equ	0xFF8
   306                           tblptrh	equ	0xFF7
   307                           tblptrl	equ	0xFF6
   308                           tablat	equ	0xFF5
   309                           postinc0	equ	0xFEE
   310                           wreg	equ	0xFE8
   311                           
   312                           	psect	dataCOMRAM
   313  000045                     __pdataCOMRAM:
   314                           	opt stack 0
   315  000045                     _Transmit_stall:
   316                           	opt stack 0
   317  000045                     	ds	1
   318                           tblptru	equ	0xFF8
   319                           tblptrh	equ	0xFF7
   320                           tblptrl	equ	0xFF6
   321                           tablat	equ	0xFF5
   322                           postinc0	equ	0xFEE
   323                           wreg	equ	0xFE8
   324                           
   325                           	psect	bssBANK0
   326  000060                     __pbssBANK0:
   327                           	opt stack 0
   328  000060                     _displaybuffer:
   329                           	opt stack 0
   330  000060                     	ds	40
   331  000088                     _butnarray:
   332                           	opt stack 0
   333  000088                     	ds	8
   334  000090                     _i2c1_object:
   335                           	opt stack 0
   336  000090                     	ds	7
   337  000097                     I2C1_ISR@pi2c_buf_ptr:
   338                           	opt stack 0
   339  000097                     	ds	2
   340  000099                     TMR0_ISR@CountCallBack:
   341                           	opt stack 0
   342  000099                     	ds	2
   343  00009B                     _addressErrorCounter:
   344                           	opt stack 0
   345  00009B                     	ds	2
   346  00009D                     _alignErrorCounter:
   347                           	opt stack 0
   348  00009D                     	ds	2
   349  00009F                     _crcErrorCounter:
   350                           	opt stack 0
   351  00009F                     	ds	2
   352  0000A1                     _dataAdressErrorCounter:
   353                           	opt stack 0
   354  0000A1                     	ds	2
   355  0000A3                     _receiveArrayAddress:
   356                           	opt stack 0
   357  0000A3                     	ds	2
   358  0000A5                     _sendStructAddress:
   359                           	opt stack 0
   360  0000A5                     	ds	2
   361  0000A7                     _serial_peek:
   362                           	opt stack 0
   363  0000A7                     	ds	2
   364  0000A9                     handleIndicators@oldIndicators:
   365                           	opt stack 0
   366  0000A9                     	ds	2
   367  0000AB                     _receiveArray:
   368                           	opt stack 0
   369  0000AB                     	ds	40
   370  0000D3                     _crc_buffer:
   371                           	opt stack 0
   372  0000D3                     	ds	17
   373  0000E4                     I2C1_MasterRead@trBlock:
   374                           	opt stack 0
   375  0000E4                     	ds	5
   376  0000E9                     I2C1_MasterWrite@trBlock:
   377                           	opt stack 0
   378  0000E9                     	ds	5
   379  0000EE                     _i2c1_tr_queue:
   380                           	opt stack 0
   381  0000EE                     	ds	5
   382                           tblptru	equ	0xFF8
   383                           tblptrh	equ	0xFF7
   384                           tblptrl	equ	0xFF6
   385                           tablat	equ	0xFF5
   386                           postinc0	equ	0xFEE
   387                           wreg	equ	0xFE8
   388                           
   389                           	psect	bssBANK1
   390  000100                     __pbssBANK1:
   391                           	opt stack 0
   392  000100                     _ring_buffer:
   393                           	opt stack 0
   394  000100                     	ds	206
   395                           tblptru	equ	0xFF8
   396                           tblptrh	equ	0xFF7
   397                           tblptrl	equ	0xFF6
   398                           tablat	equ	0xFF5
   399                           postinc0	equ	0xFEE
   400                           wreg	equ	0xFE8
   401                           
   402                           	psect	bssBANK2
   403  000200                     __pbssBANK2:
   404                           	opt stack 0
   405  000200                     _rx_buffer:
   406                           	opt stack 0
   407  000200                     	ds	200
   408                           tblptru	equ	0xFF8
   409                           tblptrh	equ	0xFF7
   410                           tblptrl	equ	0xFF6
   411                           tablat	equ	0xFF5
   412                           postinc0	equ	0xFEE
   413                           wreg	equ	0xFE8
   414                           
   415                           	psect	bssBANK3
   416  000300                     __pbssBANK3:
   417                           	opt stack 0
   418  000300                     _input_buffer:
   419                           	opt stack 0
   420  000300                     	ds	206
   421                           tblptru	equ	0xFF8
   422                           tblptrh	equ	0xFF7
   423                           tblptrl	equ	0xFF6
   424                           tablat	equ	0xFF5
   425                           postinc0	equ	0xFEE
   426                           wreg	equ	0xFE8
   427                           
   428                           	psect	bssBANK4
   429  000400                     __pbssBANK4:
   430                           	opt stack 0
   431  000400                     _output_buffer:
   432                           	opt stack 0
   433  000400                     	ds	206
   434                           tblptru	equ	0xFF8
   435                           tblptrh	equ	0xFF7
   436                           tblptrl	equ	0xFF6
   437                           tablat	equ	0xFF5
   438                           postinc0	equ	0xFEE
   439                           wreg	equ	0xFE8
   440                           
   441                           	psect	cstackBANK1
   442  0001CE                     __pcstackBANK1:
   443                           	opt stack 0
   444  0001CE                     LEDbegin@writeBuffer:
   445                           	opt stack 0
   446  0001CE                     receiveData@holder:
   447                           	opt stack 0
   448                           
   449                           ; 3 bytes @ 0x0
   450  0001CE                     	ds	3
   451  0001D1                     LEDbegin@timeOut:
   452                           	opt stack 0
   453  0001D1                     receiveData@holder_2178:
   454                           	opt stack 0
   455                           
   456                           ; 3 bytes @ 0x3
   457  0001D1                     	ds	2
   458  0001D3                     LEDbegin@i2c_addr:
   459                           	opt stack 0
   460                           
   461                           ; 1 bytes @ 0x5
   462  0001D3                     	ds	1
   463  0001D4                     LEDbegin@status:
   464                           	opt stack 0
   465  0001D4                     receiveData@crcHolder:
   466                           	opt stack 0
   467                           
   468                           ; 1 bytes @ 0x6
   469  0001D4                     	ds	1
   470  0001D5                     receiveData@crcHolder_2179:
   471                           	opt stack 0
   472                           
   473                           ; 1 bytes @ 0x7
   474  0001D5                     	ds	1
   475  0001D6                     receiveData@u:
   476                           	opt stack 0
   477                           
   478                           ; 2 bytes @ 0x8
   479  0001D6                     	ds	2
   480  0001D8                     receiveData@r:
   481                           	opt stack 0
   482                           
   483                           ; 2 bytes @ 0xA
   484  0001D8                     	ds	2
   485  0001DA                     main@ADCNT:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0xC
   489  0001DA                     	ds	2
   490                           tblptru	equ	0xFF8
   491                           tblptrh	equ	0xFF7
   492                           tblptrl	equ	0xFF6
   493                           tablat	equ	0xFF5
   494                           postinc0	equ	0xFEE
   495                           wreg	equ	0xFE8
   496                           
   497                           	psect	cstackBANK0
   498  0000F3                     __pcstackBANK0:
   499                           	opt stack 0
   500  0000F3                     sendData@whereToSend:
   501                           	opt stack 0
   502  0000F3                     CRCcheck@SentCRC:
   503                           	opt stack 0
   504  0000F3                     I2C1_MasterWrite@pdata:
   505                           	opt stack 0
   506  0000F3                     buttonsCollector@sendVal:
   507                           	opt stack 0
   508  0000F3                     begin@ptr:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0x0
   512  0000F3                     	ds	1
   513  0000F4                     sendData@CS:
   514                           	opt stack 0
   515  0000F4                     CRCcheck@calculatedCRC:
   516                           	opt stack 0
   517                           
   518                           ; 1 bytes @ 0x1
   519  0000F4                     	ds	1
   520  0000F5                     I2C1_MasterWrite@length:
   521                           	opt stack 0
   522  0000F5                     begin@maxSize:
   523                           	opt stack 0
   524  0000F5                     buttonsCollector@i:
   525                           	opt stack 0
   526  0000F5                     sendData@i:
   527                           	opt stack 0
   528  0000F5                     CRCcheck@arrayHolder:
   529                           	opt stack 0
   530                           
   531                           ; 3 bytes @ 0x2
   532  0000F5                     	ds	1
   533  0000F6                     begin@givenAddress:
   534                           	opt stack 0
   535  0000F6                     I2C1_MasterWrite@address:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x3
   539  0000F6                     	ds	1
   540  0000F7                     begin@error:
   541                           	opt stack 0
   542  0000F7                     ToSend@what:
   543                           	opt stack 0
   544                           
   545                           ; 2 bytes @ 0x4
   546  0000F7                     	ds	1
   547  0000F8                     I2C1_MasterWrite@pflag:
   548                           	opt stack 0
   549  0000F8                     begin@stufftosend:
   550                           	opt stack 0
   551  0000F8                     CRCcheck@rt:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x5
   555  0000F8                     	ds	2
   556  0000FA                     ??_receiveData:
   557  0000FA                     LEDBsetBrightness@writeBuffer:
   558                           	opt stack 0
   559  0000FA                     LEDblinkRate@writeBuffer:
   560                           	opt stack 0
   561  0000FA                     begin@stufftoreceive:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0x7
   565  0000FA                     	ds	2
   566  0000FC                     LEDBsetBrightness@timeOut:
   567                           	opt stack 0
   568  0000FC                     LEDblinkRate@timeOut:
   569                           	opt stack 0
   570  0000FC                     begin@stuffavailable:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x9
   574  0000FC                     	ds	2
   575  0000FE                     LEDBsetBrightness@status:
   576                           	opt stack 0
   577  0000FE                     LEDblinkRate@status:
   578                           	opt stack 0
   579  0000FE                     begin@stuffpeek:
   580                           	opt stack 0
   581                           
   582                           ; 2 bytes @ 0xB
   583  0000FE                     	ds	2
   584                           tblptru	equ	0xFF8
   585                           tblptrh	equ	0xFF7
   586                           tblptrl	equ	0xFF6
   587                           tablat	equ	0xFF5
   588                           postinc0	equ	0xFEE
   589                           wreg	equ	0xFE8
   590                           
   591                           	psect	cstackCOMRAM
   592  000001                     __pcstackCOMRAM:
   593                           	opt stack 0
   594  000001                     ??_I2C1_Stop:
   595  000001                     ?i2_UART_buff_size:
   596                           	opt stack 0
   597  000001                     ?i2_UART_buff_modulo_inc:
   598                           	opt stack 0
   599  000001                     ReadButtonState@btnnum:
   600                           	opt stack 0
   601  000001                     i2UART_buff_size@_this:
   602                           	opt stack 0
   603  000001                     i2UART_buff_modulo_inc@value:
   604                           	opt stack 0
   605                           
   606                           ; 2 bytes @ 0x0
   607  000001                     	ds	2
   608  000003                     ??_ReadButtonState:
   609  000003                     I2C1_Stop@completion_code:
   610                           	opt stack 0
   611  000003                     i2UART_buff_modulo_inc@modulus:
   612                           	opt stack 0
   613                           
   614                           ; 2 bytes @ 0x2
   615  000003                     	ds	1
   616  000004                     ??_I2C1_ISR:
   617                           
   618                           ; 0 bytes @ 0x3
   619  000004                     	ds	1
   620  000005                     TMR0_ISR@x:
   621                           	opt stack 0
   622  000005                     i2UART_buff_modulo_inc@my_value:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x4
   626  000005                     	ds	2
   627  000007                     i2UART_buff_put@_this:
   628                           	opt stack 0
   629  000007                     i2UART_buff_get@_this:
   630                           	opt stack 0
   631                           
   632                           ; 2 bytes @ 0x6
   633  000007                     	ds	2
   634  000009                     ??i2_UART_buff_get:
   635  000009                     i2UART_buff_put@c:
   636                           	opt stack 0
   637                           
   638                           ; 1 bytes @ 0x8
   639  000009                     	ds	1
   640  00000A                     ??i2_UART_buff_put:
   641                           
   642                           ; 0 bytes @ 0x9
   643  00000A                     	ds	1
   644  00000B                     i2UART_buff_get@c:
   645                           	opt stack 0
   646                           
   647                           ; 1 bytes @ 0xA
   648  00000B                     	ds	1
   649  00000C                     EUSART1_Receive_ISR@data:
   650                           	opt stack 0
   651                           
   652                           ; 1 bytes @ 0xB
   653  00000C                     	ds	1
   654  00000D                     ??_INTERRUPT_InterruptManager:
   655                           
   656                           ; 0 bytes @ 0xC
   657  00000D                     	ds	14
   658  00001B                     ?_FastTransfer_buffer_modulo_inc:
   659                           	opt stack 0
   660  00001B                     ?_UART_buff_modulo_inc:
   661                           	opt stack 0
   662  00001B                     ?_UART_buff_size:
   663                           	opt stack 0
   664  00001B                     ?___awdiv:
   665                           	opt stack 0
   666  00001B                     I2C1_MasterTRBInsert@ptrb_list:
   667                           	opt stack 0
   668  00001B                     I2C1_MasterWriteTRBBuild@ptrb:
   669                           	opt stack 0
   670  00001B                     Delay@wait:
   671                           	opt stack 0
   672  00001B                     SetLEDOut@lednum:
   673                           	opt stack 0
   674  00001B                     GetButtonState@btnnum:
   675                           	opt stack 0
   676  00001B                     CRC8@data:
   677                           	opt stack 0
   678  00001B                     FastTransfer_buffer_modulo_inc@value:
   679                           	opt stack 0
   680  00001B                     crcBufS_put@_this:
   681                           	opt stack 0
   682  00001B                     crcBufS_status_put@_this:
   683                           	opt stack 0
   684  00001B                     crcBufS_get@_this:
   685                           	opt stack 0
   686  00001B                     UART_buff_size@_this:
   687                           	opt stack 0
   688  00001B                     UART_buff_modulo_inc@value:
   689                           	opt stack 0
   690  00001B                     UART_buff_peek@_this:
   691                           	opt stack 0
   692  00001B                     ___awdiv@dividend:
   693                           	opt stack 0
   694  00001B                     memset@p1:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0x1A
   698  00001B                     	ds	2
   699  00001D                     ??_Delay:
   700  00001D                     ??_GetButtonState:
   701  00001D                     ??_UART_buff_peek:
   702  00001D                     ?_Receive_available:
   703                           	opt stack 0
   704  00001D                     SetLEDOut@state:
   705                           	opt stack 0
   706  00001D                     CRC8@len:
   707                           	opt stack 0
   708  00001D                     crcBufS_put@address:
   709                           	opt stack 0
   710  00001D                     crcBufS_status_put@time:
   711                           	opt stack 0
   712  00001D                     crcBufS_get@time:
   713                           	opt stack 0
   714  00001D                     I2C1_MasterTRBInsert@pflag:
   715                           	opt stack 0
   716  00001D                     I2C1_MasterWriteTRBBuild@pdata:
   717                           	opt stack 0
   718  00001D                     FastTransfer_buffer_modulo_inc@modulus:
   719                           	opt stack 0
   720  00001D                     UART_buff_modulo_inc@modulus:
   721                           	opt stack 0
   722  00001D                     ___awdiv@divisor:
   723                           	opt stack 0
   724  00001D                     memset@c:
   725                           	opt stack 0
   726                           
   727                           ; 2 bytes @ 0x1C
   728  00001D                     	ds	1
   729  00001E                     ??_SetLEDOut:
   730  00001E                     CRC8@sum:
   731                           	opt stack 0
   732  00001E                     crcBufS_put@oldCRC:
   733                           	opt stack 0
   734  00001E                     crcBufS_status_put@status:
   735                           	opt stack 0
   736  00001E                     crcBufS_get@space:
   737                           	opt stack 0
   738  00001E                     Delay@x:
   739                           	opt stack 0
   740                           
   741                           ; 2 bytes @ 0x1D
   742  00001E                     	ds	1
   743  00001F                     ??_crcBufS_get:
   744  00001F                     ??_crcBufS_status_put:
   745  00001F                     I2C1_MasterWriteTRBBuild@length:
   746                           	opt stack 0
   747  00001F                     CRC8@extract:
   748                           	opt stack 0
   749  00001F                     crcBufS_put@status:
   750                           	opt stack 0
   751  00001F                     ___awdiv@counter:
   752                           	opt stack 0
   753  00001F                     FastTransfer_buffer_modulo_inc@my_value:
   754                           	opt stack 0
   755  00001F                     UART_buff_modulo_inc@my_value:
   756                           	opt stack 0
   757  00001F                     memset@n:
   758                           	opt stack 0
   759                           
   760                           ; 2 bytes @ 0x1E
   761  00001F                     	ds	1
   762  000020                     ??_crcBufS_put:
   763  000020                     I2C1_MasterTRBInsert@count:
   764                           	opt stack 0
   765  000020                     CRC8@tempI:
   766                           	opt stack 0
   767  000020                     ___awdiv@sign:
   768                           	opt stack 0
   769  000020                     I2C1_MasterWriteTRBBuild@address:
   770                           	opt stack 0
   771  000020                     handleIndicators@receivedIndicators:
   772                           	opt stack 0
   773                           
   774                           ; 2 bytes @ 0x1F
   775  000020                     	ds	1
   776  000021                     ?_buttonsCollector:
   777                           	opt stack 0
   778  000021                     CRC8@crc:
   779                           	opt stack 0
   780  000021                     FastTransfer_buffer_put@_this:
   781                           	opt stack 0
   782  000021                     UART_buff_put@_this:
   783                           	opt stack 0
   784  000021                     UART_buff_get@_this:
   785                           	opt stack 0
   786  000021                     ___awdiv@quotient:
   787                           	opt stack 0
   788  000021                     memset@p:
   789                           	opt stack 0
   790                           
   791                           ; 2 bytes @ 0x20
   792  000021                     	ds	1
   793  000022                     ??_I2C1_MasterWriteTRBBuild:
   794  000022                     ??_handleIndicators:
   795                           
   796                           ; 0 bytes @ 0x21
   797  000022                     	ds	1
   798  000023                     ??_buttonsCollector:
   799  000023                     ??_UART_buff_get:
   800  000023                     FastTransfer_buffer_put@towhere:
   801                           	opt stack 0
   802  000023                     UART_buff_put@c:
   803                           	opt stack 0
   804  000023                     FastTransfer_buffer_flush@_this:
   805                           	opt stack 0
   806  000023                     crcBufS_status_put@wantedTime:
   807                           	opt stack 0
   808  000023                     UART_buff_init@_this:
   809                           	opt stack 0
   810                           
   811                           ; 2 bytes @ 0x22
   812  000023                     	ds	1
   813  000024                     ??_UART_buff_put:
   814  000024                     LEDBsetBrightness@b:
   815                           	opt stack 0
   816  000024                     LEDblinkRate@b:
   817                           	opt stack 0
   818  000024                     FastTransfer_buffer_put@towhat:
   819                           	opt stack 0
   820                           
   821                           ; 2 bytes @ 0x23
   822  000024                     	ds	1
   823  000025                     UART_buff_get@c:
   824                           	opt stack 0
   825  000025                     handleIndicators@i:
   826                           	opt stack 0
   827  000025                     FastTransfer_buffer_flush@clearBuffer:
   828                           	opt stack 0
   829  000025                     crcBufS_get@wantedTime:
   830                           	opt stack 0
   831                           
   832                           ; 2 bytes @ 0x24
   833  000025                     	ds	1
   834  000026                     ??_FastTransfer_buffer_put:
   835  000026                     LEDBsetBrightness@i2c_addr:
   836                           	opt stack 0
   837  000026                     LEDblinkRate@i2c_addr:
   838                           	opt stack 0
   839  000026                     Send_put@_data:
   840                           	opt stack 0
   841                           
   842                           ; 1 bytes @ 0x25
   843  000026                     	ds	1
   844  000027                     ??_sendData:
   845  000027                     
   846                           ; 0 bytes @ 0x26
   847  000027                     	ds	1
   848  000028                     ToSend@where:
   849                           	opt stack 0
   850                           
   851                           ; 1 bytes @ 0x27
   852  000028                     	ds	1
   853  000029                     tblptru	equ	0xFF8
   854                           tblptrh	equ	0xFF7
   855                           tblptrl	equ	0xFF6
   856                           tablat	equ	0xFF5
   857                           postinc0	equ	0xFEE
   858                           wreg	equ	0xFE8
   859                           
   860                           ; 0 bytes @ 0x28
   861 ;;
   862 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   863 ;;
   864 ;; *************** function _main *****************
   865 ;; Defined at:
   866 ;;		line 33 in file "main.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;		None
   869 ;; Auto vars:     Size  Location     Type
   870 ;;  ADCNT           2   12[BANK1 ] int 
   871 ;; Return value:  Size  Location     Type
   872 ;;		None               void
   873 ;; Registers used:
   874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   880 ;;      Params:         0       0       0       0       0       0       0
   881 ;;      Locals:         0       0       2       0       0       0       0
   882 ;;      Temps:          0       0       0       0       0       0       0
   883 ;;      Totals:         0       0       2       0       0       0       0
   884 ;;Total ram usage:        2 bytes
   885 ;; Hardware stack levels required when called:   10
   886 ;; This function calls:
   887 ;;		_LEDbegin
   888 ;;		_SYSTEM_Initialize
   889 ;;		_updateComms
   890 ;; This function is called by:
   891 ;;		Startup code after reset
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	text0
   896  00201A                     __ptext0:
   897                           	opt stack 0
   898  00201A                     _main:
   899                           	opt stack 21
   900                           
   901                           ;main.c: 36: SYSTEM_Initialize();
   902                           
   903                           ;incstack = 0
   904  00201A  EC35  F00D         	call	_SYSTEM_Initialize	;wreg free
   905                           
   906                           ;main.c: 55: (INTCONbits.GIE = 1);
   907  00201E  8EF2               	bsf	intcon,7,c	;volatile
   908                           
   909                           ;main.c: 58: (INTCONbits.PEIE = 1);
   910  002020  8CF2               	bsf	intcon,6,c	;volatile
   911                           
   912                           ;main.c: 65: int ADCNT = 1;
   913  002022  0E00               	movlw	0
   914  002024  0101               	movlb	1	; () banked
   915  002026  6FDB               	movwf	(main@ADCNT+1)& (0+255),b
   916  002028  0E01               	movlw	1
   917  00202A  6FDA               	movwf	main@ADCNT& (0+255),b
   918                           
   919                           ; BSR set to: 1
   920                           ;main.c: 66: LEDbegin(0x70);
   921  00202C  0E70               	movlw	112
   922  00202E  EC83  F00A         	call	_LEDbegin
   923  002032  D000               	goto	l4962
   924  002034                     l4962:
   925  002034  8689               	bsf	3977,3,c	;volatile
   926  002036  D000               	goto	l4964
   927  002038                     l4964:
   928                           
   929                           ;main.c: 69: LATCbits.LATC5=0;
   930  002038  9A8B               	bcf	3979,5,c	;volatile
   931  00203A  D000               	goto	l4966
   932  00203C                     l4966:
   933                           
   934                           ;main.c: 71: {
   935                           ;main.c: 72: updateComms();
   936  00203C  EC4A  F00F         	call	_updateComms	;wreg free
   937  002040  D7FD               	goto	l4966
   938  002042  EF61  F000         	goto	start
   939  002046                     __end_of_main:
   940                           	opt stack 0
   941                           tblptru	equ	0xFF8
   942                           tblptrh	equ	0xFF7
   943                           tblptrl	equ	0xFF6
   944                           tablat	equ	0xFF5
   945                           intcon	equ	0xFF2
   946                           postinc0	equ	0xFEE
   947                           wreg	equ	0xFE8
   948                           
   949 ;; *************** function _updateComms *****************
   950 ;; Defined at:
   951 ;;		line 6 in file "Communications.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;		None
   954 ;; Auto vars:     Size  Location     Type
   955 ;;		None
   956 ;; Return value:  Size  Location     Type
   957 ;;		None               void
   958 ;; Registers used:
   959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   965 ;;      Params:         0       0       0       0       0       0       0
   966 ;;      Locals:         0       0       0       0       0       0       0
   967 ;;      Temps:          0       0       0       0       0       0       0
   968 ;;      Totals:         0       0       0       0       0       0       0
   969 ;;Total ram usage:        0 bytes
   970 ;; Hardware stack levels used:    1
   971 ;; Hardware stack levels required when called:    9
   972 ;; This function calls:
   973 ;;		_handleIndicators
   974 ;;		_receiveData
   975 ;;		_respondECU
   976 ;; This function is called by:
   977 ;;		_main
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           	psect	text1
   982  001E94                     __ptext1:
   983                           	opt stack 0
   984  001E94                     _updateComms:
   985                           	opt stack 21
   986                           
   987                           ;Communications.c: 7: if (receiveData()) {
   988                           
   989                           ;incstack = 0
   990  001E94  EC63  F000         	call	_receiveData	;wreg free
   991  001E98  0900               	iorlw	0
   992  001E9A  B4D8               	btfsc	status,2,c
   993  001E9C  0012               	return	
   994                           
   995                           ;Communications.c: 8: if (receiveArray[0] == 1) {
   996  001E9E  0100               	movlb	0	; () banked
   997  001EA0  05AB               	decf	_receiveArray& (0+255),w,b	;volatile
   998  001EA2  0100               	movlb	0	; () banked
   999  001EA4  11AC               	iorwf	(_receiveArray+1)& (0+255),w,b	;volatile
  1000  001EA6  A4D8               	btfss	status,2,c
  1001  001EA8  D003               	goto	l4918
  1002                           
  1003                           ; BSR set to: 0
  1004                           ;Communications.c: 9: respondECU();
  1005  001EAA  ECA9  F00E         	call	_respondECU	;wreg free
  1006  001EAE  D000               	goto	l4918
  1007  001EB0                     l4918:
  1008                           
  1009                           ;Communications.c: 10: }
  1010                           ;Communications.c: 11: handleIndicators(receiveArray[2]);
  1011  001EB0  C0AF  F020         	movff	_receiveArray+4,handleIndicators@receivedIndicators	;volatile
  1012  001EB4  C0B0  F021         	movff	_receiveArray+5,handleIndicators@receivedIndicators+1	;volatile
  1013  001EB8  ECF7  F00C         	call	_handleIndicators	;wreg free
  1014                           
  1015                           ;Communications.c: 12: receiveArray[0]=0;
  1016  001EBC  0E00               	movlw	0
  1017  001EBE  0100               	movlb	0	; () banked
  1018  001EC0  6FAC               	movwf	(_receiveArray+1)& (0+255),b	;volatile
  1019  001EC2  0E00               	movlw	0
  1020  001EC4  6FAB               	movwf	_receiveArray& (0+255),b	;volatile
  1021  001EC6  0012               	return	
  1022                           
  1023                           ; BSR set to: 0
  1024  001EC8  0012               	return		;funcret
  1025  001ECA                     __end_of_updateComms:
  1026                           	opt stack 0
  1027                           tblptru	equ	0xFF8
  1028                           tblptrh	equ	0xFF7
  1029                           tblptrl	equ	0xFF6
  1030                           tablat	equ	0xFF5
  1031                           intcon	equ	0xFF2
  1032                           postinc0	equ	0xFEE
  1033                           wreg	equ	0xFE8
  1034                           status	equ	0xFD8
  1035                           
  1036 ;; *************** function _respondECU *****************
  1037 ;; Defined at:
  1038 ;;		line 16 in file "Communications.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;		None               void
  1045 ;; Registers used:
  1046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1052 ;;      Params:         0       0       0       0       0       0       0
  1053 ;;      Locals:         0       0       0       0       0       0       0
  1054 ;;      Temps:          0       0       0       0       0       0       0
  1055 ;;      Totals:         0       0       0       0       0       0       0
  1056 ;;Total ram usage:        0 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; Hardware stack levels required when called:    8
  1059 ;; This function calls:
  1060 ;;		_Delay
  1061 ;;		_ToSend
  1062 ;;		_buttonsCollector
  1063 ;;		_sendData
  1064 ;; This function is called by:
  1065 ;;		_updateComms
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           	psect	text2
  1070  001D52                     __ptext2:
  1071                           	opt stack 0
  1072  001D52                     _respondECU:
  1073                           	opt stack 21
  1074                           
  1075                           ;Communications.c: 17: LATCbits.LATC5 = 1;
  1076                           
  1077                           ;incstack = 0
  1078  001D52  8A8B               	bsf	3979,5,c	;volatile
  1079                           
  1080                           ;Communications.c: 18: ToSend(0, 3);
  1081  001D54  0E00               	movlw	0
  1082  001D56  0100               	movlb	0	; () banked
  1083  001D58  6FF8               	movwf	(ToSend@what+1)& (0+255),b
  1084  001D5A  0E03               	movlw	3
  1085  001D5C  6FF7               	movwf	ToSend@what& (0+255),b
  1086  001D5E  0E00               	movlw	0
  1087  001D60  EC78  F010         	call	_ToSend
  1088                           
  1089                           ;Communications.c: 19: ToSend(8,buttonsCollector());
  1090  001D64  ECB1  F00C         	call	_buttonsCollector	;wreg free
  1091  001D68  C021  F0F7         	movff	?_buttonsCollector,ToSend@what
  1092  001D6C  C022  F0F8         	movff	?_buttonsCollector+1,ToSend@what+1
  1093  001D70  0E08               	movlw	8
  1094  001D72  EC78  F010         	call	_ToSend
  1095                           
  1096                           ;Communications.c: 20: Delay(4);
  1097  001D76  0E00               	movlw	0
  1098  001D78  6E1C               	movwf	Delay@wait+1,c
  1099  001D7A  0E04               	movlw	4
  1100  001D7C  6E1B               	movwf	Delay@wait,c
  1101  001D7E  EC65  F00F         	call	_Delay	;wreg free
  1102                           
  1103                           ;Communications.c: 21: sendData(1);
  1104  001D82  0E01               	movlw	1
  1105  001D84  EC89  F006         	call	_sendData
  1106                           
  1107                           ;Communications.c: 22: Delay(3);
  1108  001D88  0E00               	movlw	0
  1109  001D8A  6E1C               	movwf	Delay@wait+1,c
  1110  001D8C  0E03               	movlw	3
  1111  001D8E  6E1B               	movwf	Delay@wait,c
  1112  001D90  EC65  F00F         	call	_Delay	;wreg free
  1113                           
  1114                           ;Communications.c: 23: LATCbits.LATC5 = 0;
  1115  001D94  9A8B               	bcf	3979,5,c	;volatile
  1116  001D96  0012               	return		;funcret
  1117  001D98                     __end_of_respondECU:
  1118                           	opt stack 0
  1119                           tblptru	equ	0xFF8
  1120                           tblptrh	equ	0xFF7
  1121                           tblptrl	equ	0xFF6
  1122                           tablat	equ	0xFF5
  1123                           intcon	equ	0xFF2
  1124                           postinc0	equ	0xFEE
  1125                           wreg	equ	0xFE8
  1126                           status	equ	0xFD8
  1127                           
  1128 ;; *************** function _sendData *****************
  1129 ;; Defined at:
  1130 ;;		line 53 in file "FastTransfer.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;  whereToSend     1    wreg     unsigned char 
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;  whereToSend     1    0[BANK0 ] unsigned char 
  1135 ;;  i               2    2[BANK0 ] int 
  1136 ;;  CS              1    1[BANK0 ] unsigned char 
  1137 ;; Return value:  Size  Location     Type
  1138 ;;		None               void
  1139 ;; Registers used:
  1140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1146 ;;      Params:         0       0       0       0       0       0       0
  1147 ;;      Locals:         0       4       0       0       0       0       0
  1148 ;;      Temps:          1       0       0       0       0       0       0
  1149 ;;      Totals:         1       4       0       0       0       0       0
  1150 ;;Total ram usage:        5 bytes
  1151 ;; Hardware stack levels used:    1
  1152 ;; Hardware stack levels required when called:    7
  1153 ;; This function calls:
  1154 ;;		Absolute function
  1155 ;;		_CRC8
  1156 ;;		_FastTransfer_buffer_flush
  1157 ;;		_Send_put
  1158 ;;		_crcBufS_put
  1159 ;; This function is called by:
  1160 ;;		_respondECU
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           	psect	text3
  1165  000D12                     __ptext3:
  1166                           	opt stack 0
  1167  000D12                     _sendData:
  1168                           	opt stack 21
  1169                           
  1170                           ;incstack = 0
  1171                           ;sendData@whereToSend stored from wreg
  1172  000D12  0100               	movlb	0	; () banked
  1173  000D14  6FF3               	movwf	sendData@whereToSend& (0+255),b
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;FastTransfer.c: 56: unsigned char CS = CRC8(sendStructAddress, ring_buffer.count);
  1177  000D16  C0A5  F01B         	movff	_sendStructAddress,CRC8@data
  1178  000D1A  C0A6  F01C         	movff	_sendStructAddress+1,CRC8@data+1
  1179  000D1E  C1CC  F01D         	movff	_ring_buffer+204,CRC8@len
  1180  000D22  EC31  F00E         	call	_CRC8	;wreg free
  1181  000D26  0100               	movlb	0	; () banked
  1182  000D28  6FF4               	movwf	sendData@CS& (0+255),b
  1183                           
  1184                           ; BSR set to: 0
  1185                           ;FastTransfer.c: 58: serial_write(0x06);
  1186  000D2A  D801               	call	u4518
  1187  000D2C  D00B               	goto	l4294
  1188  000D2E                     u4518:
  1189  000D2E  0005               	push	
  1190  000D30  6EFA               	movwf	pclath,c
  1191  000D32  5031               	movf	_serial_write,w,c
  1192  000D34  6EFD               	movwf	tosl,c
  1193  000D36  5032               	movf	_serial_write+1,w,c
  1194  000D38  6EFE               	movwf	tosh,c
  1195  000D3A  50F8               	movf	tblptru,w,c
  1196  000D3C  6EFF               	movwf	tosu,c
  1197  000D3E  50FA               	movf	pclath,w,c
  1198  000D40  0E06               	movlw	6
  1199  000D42  0012               	return		;indir
  1200  000D44                     l4294:
  1201                           
  1202                           ;FastTransfer.c: 59: serial_write(0x85);
  1203  000D44  D801               	call	u4528
  1204  000D46  D00B               	goto	l4296
  1205  000D48                     u4528:
  1206  000D48  0005               	push	
  1207  000D4A  6EFA               	movwf	pclath,c
  1208  000D4C  5031               	movf	_serial_write,w,c
  1209  000D4E  6EFD               	movwf	tosl,c
  1210  000D50  5032               	movf	_serial_write+1,w,c
  1211  000D52  6EFE               	movwf	tosh,c
  1212  000D54  50F8               	movf	tblptru,w,c
  1213  000D56  6EFF               	movwf	tosu,c
  1214  000D58  50FA               	movf	pclath,w,c
  1215  000D5A  0E85               	movlw	133
  1216  000D5C  0012               	return		;indir
  1217  000D5E                     l4296:
  1218                           
  1219                           ;FastTransfer.c: 60: serial_write(whereToSend);
  1220  000D5E  D801               	call	u4538
  1221  000D60  D00C               	goto	l4298
  1222  000D62                     u4538:
  1223  000D62  0005               	push	
  1224  000D64  6EFA               	movwf	pclath,c
  1225  000D66  5031               	movf	_serial_write,w,c
  1226  000D68  6EFD               	movwf	tosl,c
  1227  000D6A  5032               	movf	_serial_write+1,w,c
  1228  000D6C  6EFE               	movwf	tosh,c
  1229  000D6E  50F8               	movf	tblptru,w,c
  1230  000D70  6EFF               	movwf	tosu,c
  1231  000D72  50FA               	movf	pclath,w,c
  1232  000D74  0100               	movlb	0	; () banked
  1233  000D76  51F3               	movf	sendData@whereToSend& (0+255),w,b
  1234  000D78  0012               	return		;indir
  1235  000D7A                     l4298:
  1236                           
  1237                           ;FastTransfer.c: 61: serial_write(moduleAddress);
  1238  000D7A  D801               	call	u4548
  1239  000D7C  D00B               	goto	l4300
  1240  000D7E                     u4548:
  1241  000D7E  0005               	push	
  1242  000D80  6EFA               	movwf	pclath,c
  1243  000D82  5031               	movf	_serial_write,w,c
  1244  000D84  6EFD               	movwf	tosl,c
  1245  000D86  5032               	movf	_serial_write+1,w,c
  1246  000D88  6EFE               	movwf	tosh,c
  1247  000D8A  50F8               	movf	tblptru,w,c
  1248  000D8C  6EFF               	movwf	tosu,c
  1249  000D8E  50FA               	movf	pclath,w,c
  1250  000D90  503A               	movf	_moduleAddress,w,c
  1251  000D92  0012               	return		;indir
  1252  000D94                     l4300:
  1253                           
  1254                           ;FastTransfer.c: 62: serial_write(ring_buffer.count);
  1255  000D94  D801               	call	u4558
  1256  000D96  D00C               	goto	l4302
  1257  000D98                     u4558:
  1258  000D98  0005               	push	
  1259  000D9A  6EFA               	movwf	pclath,c
  1260  000D9C  5031               	movf	_serial_write,w,c
  1261  000D9E  6EFD               	movwf	tosl,c
  1262  000DA0  5032               	movf	_serial_write+1,w,c
  1263  000DA2  6EFE               	movwf	tosh,c
  1264  000DA4  50F8               	movf	tblptru,w,c
  1265  000DA6  6EFF               	movwf	tosu,c
  1266  000DA8  50FA               	movf	pclath,w,c
  1267  000DAA  0101               	movlb	1	; () banked
  1268  000DAC  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  1269  000DAE  0012               	return		;indir
  1270  000DB0                     l4302:
  1271                           
  1272                           ;FastTransfer.c: 66: int i;
  1273                           ;FastTransfer.c: 67: for (i = 0; i < ring_buffer.count; i++) {
  1274  000DB0  0E00               	movlw	0
  1275  000DB2  0100               	movlb	0	; () banked
  1276  000DB4  6FF6               	movwf	(sendData@i+1)& (0+255),b
  1277  000DB6  0E00               	movlw	0
  1278  000DB8  6FF5               	movwf	sendData@i& (0+255),b
  1279  000DBA  D01B               	goto	l4308
  1280  000DBC                     l4304:
  1281                           
  1282                           ;FastTransfer.c: 68: serial_write(*(sendStructAddress + i));
  1283  000DBC  D801               	call	u4568
  1284  000DBE  D015               	goto	l4306
  1285  000DC0                     u4568:
  1286  000DC0  0005               	push	
  1287  000DC2  6EFA               	movwf	pclath,c
  1288  000DC4  5031               	movf	_serial_write,w,c
  1289  000DC6  6EFD               	movwf	tosl,c
  1290  000DC8  5032               	movf	_serial_write+1,w,c
  1291  000DCA  6EFE               	movwf	tosh,c
  1292  000DCC  50F8               	movf	tblptru,w,c
  1293  000DCE  6EFF               	movwf	tosu,c
  1294  000DD0  50FA               	movf	pclath,w,c
  1295  000DD2  0100               	movlb	0	; () banked
  1296  000DD4  51F5               	movf	sendData@i& (0+255),w,b
  1297  000DD6  0100               	movlb	0	; () banked
  1298  000DD8  25A5               	addwf	_sendStructAddress& (0+255),w,b
  1299  000DDA  6ED9               	movwf	fsr2l,c
  1300  000DDC  0100               	movlb	0	; () banked
  1301  000DDE  51F6               	movf	(sendData@i+1)& (0+255),w,b
  1302  000DE0  0100               	movlb	0	; () banked
  1303  000DE2  21A6               	addwfc	(_sendStructAddress+1)& (0+255),w,b
  1304  000DE4  6EDA               	movwf	fsr2h,c
  1305  000DE6  50DF               	movf	indf2,w,c
  1306  000DE8  0012               	return		;indir
  1307  000DEA                     l4306:
  1308  000DEA  0100               	movlb	0	; () banked
  1309  000DEC  4BF5               	infsnz	sendData@i& (0+255),f,b
  1310  000DEE  2BF6               	incf	(sendData@i+1)& (0+255),f,b
  1311  000DF0  D000               	goto	l4308
  1312  000DF2                     l4308:
  1313                           
  1314                           ; BSR set to: 0
  1315  000DF2  0101               	movlb	1	; () banked
  1316  000DF4  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  1317  000DF6  0100               	movlb	0	; () banked
  1318  000DF8  5DF5               	subwf	sendData@i& (0+255),w,b
  1319  000DFA  0100               	movlb	0	; () banked
  1320  000DFC  51F6               	movf	(sendData@i+1)& (0+255),w,b
  1321  000DFE  0A80               	xorlw	128
  1322  000E00  6E27               	movwf	??_sendData& (0+255),c
  1323  000E02  0101               	movlb	1	; () banked
  1324  000E04  51CD               	movf	(_ring_buffer+205)& (0+255),w,b
  1325  000E06  0A80               	xorlw	128
  1326  000E08  5827               	subwfb	??_sendData& (0+255),w,c
  1327  000E0A  A0D8               	btfss	status,0,c
  1328  000E0C  D7D7               	goto	l4304
  1329                           
  1330                           ; BSR set to: 1
  1331                           ;FastTransfer.c: 69: }
  1332                           ;FastTransfer.c: 72: serial_write(CS);
  1333                           
  1334                           ; BSR set to: 1
  1335  000E0E  D801               	call	u4588
  1336  000E10  D00C               	goto	l4312
  1337  000E12                     u4588:
  1338  000E12  0005               	push	
  1339  000E14  6EFA               	movwf	pclath,c
  1340  000E16  5031               	movf	_serial_write,w,c
  1341  000E18  6EFD               	movwf	tosl,c
  1342  000E1A  5032               	movf	_serial_write+1,w,c
  1343  000E1C  6EFE               	movwf	tosh,c
  1344  000E1E  50F8               	movf	tblptru,w,c
  1345  000E20  6EFF               	movwf	tosu,c
  1346  000E22  50FA               	movf	pclath,w,c
  1347  000E24  0100               	movlb	0	; () banked
  1348  000E26  51F4               	movf	sendData@CS& (0+255),w,b
  1349  000E28  0012               	return		;indir
  1350  000E2A                     l4312:
  1351                           
  1352                           ;FastTransfer.c: 75: crcBufS_put(&crc_buffer, whereToSend, CS, 0);
  1353  000E2A  0ED3               	movlw	low _crc_buffer
  1354  000E2C  6E1B               	movwf	crcBufS_put@_this,c
  1355  000E2E  0E00               	movlw	high _crc_buffer
  1356  000E30  6E1C               	movwf	crcBufS_put@_this+1,c
  1357  000E32  C0F3  F01D         	movff	sendData@whereToSend,crcBufS_put@address
  1358  000E36  C0F4  F01E         	movff	sendData@CS,crcBufS_put@oldCRC
  1359  000E3A  0E00               	movlw	0
  1360  000E3C  6E1F               	movwf	crcBufS_put@status,c
  1361  000E3E  EC48  F009         	call	_crcBufS_put
  1362                           
  1363                           ;FastTransfer.c: 78: FastTransfer_buffer_flush(&ring_buffer, 1);
  1364  000E42  0E00               	movlw	low _ring_buffer
  1365  000E44  6E23               	movwf	FastTransfer_buffer_flush@_this,c
  1366  000E46  0E01               	movlw	high _ring_buffer
  1367  000E48  6E24               	movwf	FastTransfer_buffer_flush@_this+1,c
  1368  000E4A  0E00               	movlw	0
  1369  000E4C  6E26               	movwf	FastTransfer_buffer_flush@clearBuffer+1,c
  1370  000E4E  0E01               	movlw	1
  1371  000E50  6E25               	movwf	FastTransfer_buffer_flush@clearBuffer,c
  1372  000E52  EC9F  F00D         	call	_FastTransfer_buffer_flush	;wreg free
  1373  000E56  0012               	return		;funcret
  1374  000E58                     __end_of_sendData:
  1375                           	opt stack 0
  1376                           tosu	equ	0xFFF
  1377                           tosh	equ	0xFFE
  1378                           tosl	equ	0xFFD
  1379                           pclath	equ	0xFFA
  1380                           tblptru	equ	0xFF8
  1381                           tblptrh	equ	0xFF7
  1382                           tblptrl	equ	0xFF6
  1383                           tablat	equ	0xFF5
  1384                           intcon	equ	0xFF2
  1385                           postinc0	equ	0xFEE
  1386                           wreg	equ	0xFE8
  1387                           indf2	equ	0xFDF
  1388                           fsr2h	equ	0xFDA
  1389                           fsr2l	equ	0xFD9
  1390                           status	equ	0xFD8
  1391                           
  1392 ;; *************** function _crcBufS_put *****************
  1393 ;; Defined at:
  1394 ;;		line 321 in file "FastTransfer.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  1397 ;;		 -> crc_buffer(17), 
  1398 ;;  address         1   28[COMRAM] unsigned char 
  1399 ;;  oldCRC          1   29[COMRAM] unsigned char 
  1400 ;;  status          1   30[COMRAM] unsigned char 
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;		None
  1403 ;; Return value:  Size  Location     Type
  1404 ;;		None               void
  1405 ;; Registers used:
  1406 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1412 ;;      Params:         5       0       0       0       0       0       0
  1413 ;;      Locals:         0       0       0       0       0       0       0
  1414 ;;      Temps:          2       0       0       0       0       0       0
  1415 ;;      Totals:         7       0       0       0       0       0       0
  1416 ;;Total ram usage:        7 bytes
  1417 ;; Hardware stack levels used:    1
  1418 ;; Hardware stack levels required when called:    4
  1419 ;; This function calls:
  1420 ;;		Nothing
  1421 ;; This function is called by:
  1422 ;;		_sendData
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           	psect	text4
  1427  001290                     __ptext4:
  1428                           	opt stack 0
  1429  001290                     _crcBufS_put:
  1430                           	opt stack 23
  1431                           
  1432                           ;FastTransfer.c: 322: _this->buf[_this->head] = address;
  1433                           
  1434                           ;incstack = 0
  1435  001290  EE20 F00F          	lfsr	2,15
  1436  001294  501B               	movf	crcBufS_put@_this,w,c
  1437  001296  26D9               	addwf	fsr2l,f,c
  1438  001298  501C               	movf	crcBufS_put@_this+1,w,c
  1439  00129A  22DA               	addwfc	fsr2h,f,c
  1440  00129C  CFDE F020          	movff	postinc2,??_crcBufS_put
  1441  0012A0  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  1442  0012A4  5020               	movf	??_crcBufS_put,w,c
  1443  0012A6  241B               	addwf	crcBufS_put@_this,w,c
  1444  0012A8  6ED9               	movwf	fsr2l,c
  1445  0012AA  5021               	movf	??_crcBufS_put+1,w,c
  1446  0012AC  201C               	addwfc	crcBufS_put@_this+1,w,c
  1447  0012AE  6EDA               	movwf	fsr2h,c
  1448  0012B0  C01D  FFDF         	movff	crcBufS_put@address,indf2
  1449                           
  1450                           ;FastTransfer.c: 323: _this->head++;
  1451  0012B4  EE20 F00F          	lfsr	2,15
  1452  0012B8  501B               	movf	crcBufS_put@_this,w,c
  1453  0012BA  26D9               	addwf	fsr2l,f,c
  1454  0012BC  501C               	movf	crcBufS_put@_this+1,w,c
  1455  0012BE  22DA               	addwfc	fsr2h,f,c
  1456  0012C0  2ADE               	incf	postinc2,f,c
  1457  0012C2  0E00               	movlw	0
  1458  0012C4  22DD               	addwfc	postdec2,f,c
  1459                           
  1460                           ;FastTransfer.c: 324: _this->buf[_this->head] = oldCRC;
  1461  0012C6  EE20 F00F          	lfsr	2,15
  1462  0012CA  501B               	movf	crcBufS_put@_this,w,c
  1463  0012CC  26D9               	addwf	fsr2l,f,c
  1464  0012CE  501C               	movf	crcBufS_put@_this+1,w,c
  1465  0012D0  22DA               	addwfc	fsr2h,f,c
  1466  0012D2  CFDE F020          	movff	postinc2,??_crcBufS_put
  1467  0012D6  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  1468  0012DA  5020               	movf	??_crcBufS_put,w,c
  1469  0012DC  241B               	addwf	crcBufS_put@_this,w,c
  1470  0012DE  6ED9               	movwf	fsr2l,c
  1471  0012E0  5021               	movf	??_crcBufS_put+1,w,c
  1472  0012E2  201C               	addwfc	crcBufS_put@_this+1,w,c
  1473  0012E4  6EDA               	movwf	fsr2h,c
  1474  0012E6  C01E  FFDF         	movff	crcBufS_put@oldCRC,indf2
  1475                           
  1476                           ;FastTransfer.c: 325: _this->head++;
  1477  0012EA  EE20 F00F          	lfsr	2,15
  1478  0012EE  501B               	movf	crcBufS_put@_this,w,c
  1479  0012F0  26D9               	addwf	fsr2l,f,c
  1480  0012F2  501C               	movf	crcBufS_put@_this+1,w,c
  1481  0012F4  22DA               	addwfc	fsr2h,f,c
  1482  0012F6  2ADE               	incf	postinc2,f,c
  1483  0012F8  0E00               	movlw	0
  1484  0012FA  22DD               	addwfc	postdec2,f,c
  1485                           
  1486                           ;FastTransfer.c: 326: _this->buf[_this->head] = status;
  1487  0012FC  EE20 F00F          	lfsr	2,15
  1488  001300  501B               	movf	crcBufS_put@_this,w,c
  1489  001302  26D9               	addwf	fsr2l,f,c
  1490  001304  501C               	movf	crcBufS_put@_this+1,w,c
  1491  001306  22DA               	addwfc	fsr2h,f,c
  1492  001308  CFDE F020          	movff	postinc2,??_crcBufS_put
  1493  00130C  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  1494  001310  5020               	movf	??_crcBufS_put,w,c
  1495  001312  241B               	addwf	crcBufS_put@_this,w,c
  1496  001314  6ED9               	movwf	fsr2l,c
  1497  001316  5021               	movf	??_crcBufS_put+1,w,c
  1498  001318  201C               	addwfc	crcBufS_put@_this+1,w,c
  1499  00131A  6EDA               	movwf	fsr2h,c
  1500  00131C  C01F  FFDF         	movff	crcBufS_put@status,indf2
  1501                           
  1502                           ;FastTransfer.c: 327: _this->head++;
  1503  001320  EE20 F00F          	lfsr	2,15
  1504  001324  501B               	movf	crcBufS_put@_this,w,c
  1505  001326  26D9               	addwf	fsr2l,f,c
  1506  001328  501C               	movf	crcBufS_put@_this+1,w,c
  1507  00132A  22DA               	addwfc	fsr2h,f,c
  1508  00132C  2ADE               	incf	postinc2,f,c
  1509  00132E  0E00               	movlw	0
  1510  001330  22DD               	addwfc	postdec2,f,c
  1511                           
  1512                           ;FastTransfer.c: 328: if (_this->head >= (5 * 3)) {
  1513  001332  EE20 F00F          	lfsr	2,15
  1514  001336  501B               	movf	crcBufS_put@_this,w,c
  1515  001338  26D9               	addwf	fsr2l,f,c
  1516  00133A  501C               	movf	crcBufS_put@_this+1,w,c
  1517  00133C  22DA               	addwfc	fsr2h,f,c
  1518  00133E  0E01               	movlw	1
  1519  001340  BEDB               	btfsc	plusw2,7,c
  1520  001342  0012               	return	
  1521  001344  0E01               	movlw	1
  1522  001346  50DB               	movf	plusw2,w,c
  1523  001348  E104               	bnz	u4310
  1524  00134A  0E0F               	movlw	15
  1525  00134C  5CDE               	subwf	postinc2,w,c
  1526  00134E  A0D8               	btfss	status,0,c
  1527  001350  0012               	return	
  1528  001352                     u4310:
  1529                           
  1530                           ;FastTransfer.c: 329: _this->head = 0;
  1531  001352  EE20 F00F          	lfsr	2,15
  1532  001356  501B               	movf	crcBufS_put@_this,w,c
  1533  001358  26D9               	addwf	fsr2l,f,c
  1534  00135A  501C               	movf	crcBufS_put@_this+1,w,c
  1535  00135C  22DA               	addwfc	fsr2h,f,c
  1536  00135E  0E00               	movlw	0
  1537  001360  6EDE               	movwf	postinc2,c
  1538  001362  0E00               	movlw	0
  1539  001364  6EDD               	movwf	postdec2,c
  1540  001366  0012               	return	
  1541  001368  0012               	return		;funcret
  1542  00136A                     __end_of_crcBufS_put:
  1543                           	opt stack 0
  1544                           tosu	equ	0xFFF
  1545                           tosh	equ	0xFFE
  1546                           tosl	equ	0xFFD
  1547                           pclath	equ	0xFFA
  1548                           tblptru	equ	0xFF8
  1549                           tblptrh	equ	0xFF7
  1550                           tblptrl	equ	0xFF6
  1551                           tablat	equ	0xFF5
  1552                           intcon	equ	0xFF2
  1553                           postinc0	equ	0xFEE
  1554                           wreg	equ	0xFE8
  1555                           indf2	equ	0xFDF
  1556                           postinc2	equ	0xFDE
  1557                           postdec2	equ	0xFDD
  1558                           plusw2	equ	0xFDB
  1559                           fsr2h	equ	0xFDA
  1560                           fsr2l	equ	0xFD9
  1561                           status	equ	0xFD8
  1562                           
  1563 ;; *************** function _FastTransfer_buffer_flush *****************
  1564 ;; Defined at:
  1565 ;;		line 261 in file "FastTransfer.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;  _this           2   34[COMRAM] PTR struct ringBufS
  1568 ;;		 -> ring_buffer(206), 
  1569 ;;  clearBuffer     2   36[COMRAM] const int 
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;		None
  1572 ;; Return value:  Size  Location     Type
  1573 ;;		None               void
  1574 ;; Registers used:
  1575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1581 ;;      Params:         4       0       0       0       0       0       0
  1582 ;;      Locals:         0       0       0       0       0       0       0
  1583 ;;      Temps:          0       0       0       0       0       0       0
  1584 ;;      Totals:         4       0       0       0       0       0       0
  1585 ;;Total ram usage:        4 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; Hardware stack levels required when called:    5
  1588 ;; This function calls:
  1589 ;;		_memset
  1590 ;; This function is called by:
  1591 ;;		_sendData
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           	psect	text5
  1596  001B3E                     __ptext5:
  1597                           	opt stack 0
  1598  001B3E                     _FastTransfer_buffer_flush:
  1599                           	opt stack 22
  1600                           
  1601                           ;FastTransfer.c: 262: _this->count = 0;
  1602                           
  1603                           ;incstack = 0
  1604  001B3E  EE20 F0CC          	lfsr	2,204
  1605  001B42  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  1606  001B44  26D9               	addwf	fsr2l,f,c
  1607  001B46  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  1608  001B48  22DA               	addwfc	fsr2h,f,c
  1609  001B4A  0E00               	movlw	0
  1610  001B4C  6EDE               	movwf	postinc2,c
  1611  001B4E  0E00               	movlw	0
  1612  001B50  6EDD               	movwf	postdec2,c
  1613                           
  1614                           ;FastTransfer.c: 263: _this->head = 0;
  1615  001B52  EE20 F0C8          	lfsr	2,200
  1616  001B56  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  1617  001B58  26D9               	addwf	fsr2l,f,c
  1618  001B5A  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  1619  001B5C  22DA               	addwfc	fsr2h,f,c
  1620  001B5E  0E00               	movlw	0
  1621  001B60  6EDE               	movwf	postinc2,c
  1622  001B62  0E00               	movlw	0
  1623  001B64  6EDD               	movwf	postdec2,c
  1624                           
  1625                           ;FastTransfer.c: 264: _this->tail = 0;
  1626  001B66  EE20 F0CA          	lfsr	2,202
  1627  001B6A  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  1628  001B6C  26D9               	addwf	fsr2l,f,c
  1629  001B6E  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  1630  001B70  22DA               	addwfc	fsr2h,f,c
  1631  001B72  0E00               	movlw	0
  1632  001B74  6EDE               	movwf	postinc2,c
  1633  001B76  0E00               	movlw	0
  1634  001B78  6EDD               	movwf	postdec2,c
  1635                           
  1636                           ;FastTransfer.c: 265: if (clearBuffer) {
  1637  001B7A  5025               	movf	FastTransfer_buffer_flush@clearBuffer,w,c
  1638  001B7C  1026               	iorwf	FastTransfer_buffer_flush@clearBuffer+1,w,c
  1639  001B7E  B4D8               	btfsc	status,2,c
  1640  001B80  0012               	return	
  1641                           
  1642                           ;FastTransfer.c: 266: memset(_this->buf, 0, sizeof (_this->buf));
  1643  001B82  C023  F01B         	movff	FastTransfer_buffer_flush@_this,memset@p1
  1644  001B86  C024  F01C         	movff	FastTransfer_buffer_flush@_this+1,memset@p1+1
  1645  001B8A  0E00               	movlw	0
  1646  001B8C  6E1E               	movwf	memset@c+1,c
  1647  001B8E  0E00               	movlw	0
  1648  001B90  6E1D               	movwf	memset@c,c
  1649  001B92  0E00               	movlw	0
  1650  001B94  6E20               	movwf	memset@n+1,c
  1651  001B96  0EC8               	movlw	200
  1652  001B98  6E1F               	movwf	memset@n,c
  1653  001B9A  ECDF  F00F         	call	_memset	;wreg free
  1654  001B9E  0012               	return	
  1655  001BA0  0012               	return		;funcret
  1656  001BA2                     __end_of_FastTransfer_buffer_flush:
  1657                           	opt stack 0
  1658                           tosu	equ	0xFFF
  1659                           tosh	equ	0xFFE
  1660                           tosl	equ	0xFFD
  1661                           pclath	equ	0xFFA
  1662                           tblptru	equ	0xFF8
  1663                           tblptrh	equ	0xFF7
  1664                           tblptrl	equ	0xFF6
  1665                           tablat	equ	0xFF5
  1666                           intcon	equ	0xFF2
  1667                           postinc0	equ	0xFEE
  1668                           wreg	equ	0xFE8
  1669                           indf2	equ	0xFDF
  1670                           postinc2	equ	0xFDE
  1671                           postdec2	equ	0xFDD
  1672                           plusw2	equ	0xFDB
  1673                           fsr2h	equ	0xFDA
  1674                           fsr2l	equ	0xFD9
  1675                           status	equ	0xFD8
  1676                           
  1677 ;; *************** function _buttonsCollector *****************
  1678 ;; Defined at:
  1679 ;;		line 42 in file "Communications.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;  i               2    2[BANK0 ] int 
  1684 ;;  sendVal         2    0[BANK0 ] unsigned int 
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  2   32[COMRAM] unsigned int 
  1687 ;; Registers used:
  1688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1694 ;;      Params:         2       0       0       0       0       0       0
  1695 ;;      Locals:         0       4       0       0       0       0       0
  1696 ;;      Temps:          3       0       0       0       0       0       0
  1697 ;;      Totals:         5       4       0       0       0       0       0
  1698 ;;Total ram usage:        9 bytes
  1699 ;; Hardware stack levels used:    1
  1700 ;; Hardware stack levels required when called:    5
  1701 ;; This function calls:
  1702 ;;		_GetButtonState
  1703 ;; This function is called by:
  1704 ;;		_respondECU
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           	psect	text6
  1709  001962                     __ptext6:
  1710                           	opt stack 0
  1711  001962                     _buttonsCollector:
  1712                           	opt stack 23
  1713                           
  1714                           ;Communications.c: 43: unsigned int sendVal=0;
  1715                           
  1716                           ;incstack = 0
  1717  001962  0E00               	movlw	0
  1718  001964  0100               	movlb	0	; () banked
  1719  001966  6FF4               	movwf	(buttonsCollector@sendVal+1)& (0+255),b
  1720  001968  0E00               	movlw	0
  1721  00196A  6FF3               	movwf	buttonsCollector@sendVal& (0+255),b
  1722                           
  1723                           ;Communications.c: 44: int i=0;
  1724  00196C  0E00               	movlw	0
  1725  00196E  0100               	movlb	0	; () banked
  1726  001970  6FF6               	movwf	(buttonsCollector@i+1)& (0+255),b
  1727  001972  0E00               	movlw	0
  1728  001974  6FF5               	movwf	buttonsCollector@i& (0+255),b
  1729                           
  1730                           ;Communications.c: 45: for(i=0;i<8;i++){
  1731  001976  0E00               	movlw	0
  1732  001978  0100               	movlb	0	; () banked
  1733  00197A  6FF6               	movwf	(buttonsCollector@i+1)& (0+255),b
  1734  00197C  0E00               	movlw	0
  1735  00197E  6FF5               	movwf	buttonsCollector@i& (0+255),b
  1736                           
  1737                           ; BSR set to: 0
  1738  001980  0100               	movlb	0	; () banked
  1739  001982  BFF6               	btfsc	(buttonsCollector@i+1)& (0+255),7,b
  1740  001984  D00A               	goto	l4284
  1741  001986  0100               	movlb	0	; () banked
  1742  001988  51F6               	movf	(buttonsCollector@i+1)& (0+255),w,b
  1743  00198A  E12C               	bnz	l623
  1744  00198C  0E08               	movlw	8
  1745  00198E  0100               	movlb	0	; () banked
  1746  001990  5DF5               	subwf	buttonsCollector@i& (0+255),w,b
  1747  001992  B0D8               	btfsc	status,0,c
  1748  001994  D027               	goto	l623
  1749  001996  D001               	goto	l4284
  1750                           
  1751                           ; BSR set to: 0
  1752  001998  D025               	goto	l623
  1753  00199A                     l4284:
  1754                           
  1755                           ; BSR set to: 0
  1756                           ;Communications.c: 46: sendVal=sendVal|(GetButtonState(i)<<i);
  1757  00199A  C0F5  F023         	movff	buttonsCollector@i,??_buttonsCollector
  1758  00199E  C0F5  F01B         	movff	buttonsCollector@i,GetButtonState@btnnum
  1759  0019A2  C0F6  F01C         	movff	buttonsCollector@i+1,GetButtonState@btnnum+1
  1760  0019A6  EC23  F010         	call	_GetButtonState	;wreg free
  1761  0019AA  6E24               	movwf	(??_buttonsCollector+1)& (0+255),c
  1762  0019AC  6A25               	clrf	(??_buttonsCollector+2)& (0+255),c
  1763  0019AE  2A23               	incf	??_buttonsCollector,f,c
  1764  0019B0  D003               	goto	u4494
  1765  0019B2                     u4495:
  1766  0019B2  90D8               	bcf	status,0,c
  1767  0019B4  3624               	rlcf	??_buttonsCollector+1,f,c
  1768  0019B6  3625               	rlcf	??_buttonsCollector+2,f,c
  1769  0019B8                     u4494:
  1770  0019B8  2E23               	decfsz	??_buttonsCollector,f,c
  1771  0019BA  D7FB               	goto	u4495
  1772  0019BC  0100               	movlb	0	; () banked
  1773  0019BE  51F3               	movf	buttonsCollector@sendVal& (0+255),w,b
  1774  0019C0  1024               	iorwf	??_buttonsCollector+1,w,c
  1775  0019C2  0100               	movlb	0	; () banked
  1776  0019C4  6FF3               	movwf	buttonsCollector@sendVal& (0+255),b
  1777  0019C6  0100               	movlb	0	; () banked
  1778  0019C8  51F4               	movf	(buttonsCollector@sendVal+1)& (0+255),w,b
  1779  0019CA  1025               	iorwf	??_buttonsCollector+2,w,c
  1780  0019CC  0100               	movlb	0	; () banked
  1781  0019CE  6FF4               	movwf	(buttonsCollector@sendVal+1)& (0+255),b
  1782                           
  1783                           ; BSR set to: 0
  1784  0019D0  0100               	movlb	0	; () banked
  1785  0019D2  4BF5               	infsnz	buttonsCollector@i& (0+255),f,b
  1786  0019D4  2BF6               	incf	(buttonsCollector@i+1)& (0+255),f,b
  1787                           
  1788                           ; BSR set to: 0
  1789  0019D6  0100               	movlb	0	; () banked
  1790  0019D8  BFF6               	btfsc	(buttonsCollector@i+1)& (0+255),7,b
  1791  0019DA  D7DF               	goto	l4284
  1792  0019DC  0100               	movlb	0	; () banked
  1793  0019DE  51F6               	movf	(buttonsCollector@i+1)& (0+255),w,b
  1794  0019E0  E101               	bnz	u4500
  1795  0019E2  D7D4               	goto	L1
  1796  0019E4                     u4500:
  1797  0019E4                     l623:
  1798                           
  1799                           ; BSR set to: 0
  1800                           ;Communications.c: 47: }
  1801                           ;Communications.c: 48: return sendVal;
  1802  0019E4  C0F3  F021         	movff	buttonsCollector@sendVal,?_buttonsCollector
  1803  0019E8  C0F4  F022         	movff	buttonsCollector@sendVal+1,?_buttonsCollector+1
  1804                           
  1805                           ; BSR set to: 0
  1806  0019EC  0012               	return		;funcret
  1807  0019EE                     __end_of_buttonsCollector:
  1808                           	opt stack 0
  1809                           tosu	equ	0xFFF
  1810                           tosh	equ	0xFFE
  1811                           tosl	equ	0xFFD
  1812                           pclath	equ	0xFFA
  1813                           tblptru	equ	0xFF8
  1814                           tblptrh	equ	0xFF7
  1815                           tblptrl	equ	0xFF6
  1816                           tablat	equ	0xFF5
  1817                           intcon	equ	0xFF2
  1818                           postinc0	equ	0xFEE
  1819                           wreg	equ	0xFE8
  1820                           indf2	equ	0xFDF
  1821                           postinc2	equ	0xFDE
  1822                           postdec2	equ	0xFDD
  1823                           plusw2	equ	0xFDB
  1824                           fsr2h	equ	0xFDA
  1825                           fsr2l	equ	0xFD9
  1826                           status	equ	0xFD8
  1827                           
  1828 ;; *************** function _GetButtonState *****************
  1829 ;; Defined at:
  1830 ;;		line 77 in file "IO.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;  btnnum          2   26[COMRAM] int 
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;		None
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      unsigned char 
  1837 ;; Registers used:
  1838 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1844 ;;      Params:         2       0       0       0       0       0       0
  1845 ;;      Locals:         0       0       0       0       0       0       0
  1846 ;;      Temps:          4       0       0       0       0       0       0
  1847 ;;      Totals:         6       0       0       0       0       0       0
  1848 ;;Total ram usage:        6 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; Hardware stack levels required when called:    4
  1851 ;; This function calls:
  1852 ;;		Nothing
  1853 ;; This function is called by:
  1854 ;;		_buttonsCollector
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           	psect	text7
  1859  002046                     __ptext7:
  1860                           	opt stack 0
  1861  002046                     _GetButtonState:
  1862                           	opt stack 23
  1863                           
  1864                           ;IO.c: 79: return butnarray[btnnum-1];
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;incstack = 0
  1868  002046  0EFF               	movlw	255
  1869  002048  6E1D               	movwf	??_GetButtonState& (0+255),c
  1870  00204A  0EFF               	movlw	255
  1871  00204C  6E1E               	movwf	(??_GetButtonState+1)& (0+255),c
  1872  00204E  C01B  F01F         	movff	GetButtonState@btnnum,??_GetButtonState+2
  1873  002052  C01C  F020         	movff	GetButtonState@btnnum+1,??_GetButtonState+3
  1874  002056  501D               	movf	??_GetButtonState,w,c
  1875  002058  261F               	addwf	??_GetButtonState+2,f,c
  1876  00205A  501E               	movf	??_GetButtonState+1,w,c
  1877  00205C  2220               	addwfc	??_GetButtonState+3,f,c
  1878  00205E  0E88               	movlw	low _butnarray
  1879  002060  241F               	addwf	??_GetButtonState+2,w,c
  1880  002062  6ED9               	movwf	fsr2l,c
  1881  002064  0E00               	movlw	high _butnarray
  1882  002066  2020               	addwfc	??_GetButtonState+3,w,c
  1883  002068  6EDA               	movwf	fsr2h,c
  1884  00206A  50DF               	movf	indf2,w,c
  1885  00206C  0012               	return	
  1886  00206E  0012               	return		;funcret
  1887  002070                     __end_of_GetButtonState:
  1888                           	opt stack 0
  1889                           tosu	equ	0xFFF
  1890                           tosh	equ	0xFFE
  1891                           tosl	equ	0xFFD
  1892                           pclath	equ	0xFFA
  1893                           tblptru	equ	0xFF8
  1894                           tblptrh	equ	0xFF7
  1895                           tblptrl	equ	0xFF6
  1896                           tablat	equ	0xFF5
  1897                           intcon	equ	0xFF2
  1898                           postinc0	equ	0xFEE
  1899                           wreg	equ	0xFE8
  1900                           indf2	equ	0xFDF
  1901                           postinc2	equ	0xFDE
  1902                           postdec2	equ	0xFDD
  1903                           plusw2	equ	0xFDB
  1904                           fsr2h	equ	0xFDA
  1905                           fsr2l	equ	0xFD9
  1906                           status	equ	0xFD8
  1907                           
  1908 ;; *************** function _ToSend *****************
  1909 ;; Defined at:
  1910 ;;		line 216 in file "FastTransfer.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;  where           1    wreg     unsigned char 
  1913 ;;  what            2    4[BANK0 ] unsigned int 
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;  where           1   39[COMRAM] unsigned char 
  1916 ;; Return value:  Size  Location     Type
  1917 ;;		None               void
  1918 ;; Registers used:
  1919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1925 ;;      Params:         0       2       0       0       0       0       0
  1926 ;;      Locals:         1       0       0       0       0       0       0
  1927 ;;      Temps:          0       0       0       0       0       0       0
  1928 ;;      Totals:         1       2       0       0       0       0       0
  1929 ;;Total ram usage:        3 bytes
  1930 ;; Hardware stack levels used:    1
  1931 ;; Hardware stack levels required when called:    6
  1932 ;; This function calls:
  1933 ;;		_FastTransfer_buffer_put
  1934 ;; This function is called by:
  1935 ;;		_respondECU
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           	psect	text8
  1940  0020F0                     __ptext8:
  1941                           	opt stack 0
  1942  0020F0                     _ToSend:
  1943                           	opt stack 22
  1944                           
  1945                           ;incstack = 0
  1946                           ;ToSend@where stored from wreg
  1947  0020F0  6E28               	movwf	ToSend@where,c
  1948                           
  1949                           ;FastTransfer.c: 217: FastTransfer_buffer_put(&ring_buffer, where, what);
  1950  0020F2  0E00               	movlw	low _ring_buffer
  1951  0020F4  6E21               	movwf	FastTransfer_buffer_put@_this,c
  1952  0020F6  0E01               	movlw	high _ring_buffer
  1953  0020F8  6E22               	movwf	FastTransfer_buffer_put@_this+1,c
  1954  0020FA  C028  F023         	movff	ToSend@where,FastTransfer_buffer_put@towhere
  1955  0020FE  C0F7  F024         	movff	ToSend@what,FastTransfer_buffer_put@towhat
  1956  002102  C0F8  F025         	movff	ToSend@what+1,FastTransfer_buffer_put@towhat+1
  1957  002106  ECD4  F005         	call	_FastTransfer_buffer_put	;wreg free
  1958  00210A  0012               	return		;funcret
  1959  00210C                     __end_of_ToSend:
  1960                           	opt stack 0
  1961                           tosu	equ	0xFFF
  1962                           tosh	equ	0xFFE
  1963                           tosl	equ	0xFFD
  1964                           pclath	equ	0xFFA
  1965                           tblptru	equ	0xFF8
  1966                           tblptrh	equ	0xFF7
  1967                           tblptrl	equ	0xFF6
  1968                           tablat	equ	0xFF5
  1969                           intcon	equ	0xFF2
  1970                           postinc0	equ	0xFEE
  1971                           wreg	equ	0xFE8
  1972                           indf2	equ	0xFDF
  1973                           postinc2	equ	0xFDE
  1974                           postdec2	equ	0xFDD
  1975                           plusw2	equ	0xFDB
  1976                           fsr2h	equ	0xFDA
  1977                           fsr2l	equ	0xFD9
  1978                           status	equ	0xFD8
  1979                           
  1980 ;; *************** function _FastTransfer_buffer_put *****************
  1981 ;; Defined at:
  1982 ;;		line 223 in file "FastTransfer.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;  _this           2   32[COMRAM] PTR struct ringBufS
  1985 ;;		 -> ring_buffer(206), 
  1986 ;;  towhere         1   34[COMRAM] unsigned char 
  1987 ;;  towhat          2   35[COMRAM] unsigned int 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;		None
  1990 ;; Return value:  Size  Location     Type
  1991 ;;		None               void
  1992 ;; Registers used:
  1993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1999 ;;      Params:         5       0       0       0       0       0       0
  2000 ;;      Locals:         0       0       0       0       0       0       0
  2001 ;;      Temps:          2       0       0       0       0       0       0
  2002 ;;      Totals:         7       0       0       0       0       0       0
  2003 ;;Total ram usage:        7 bytes
  2004 ;; Hardware stack levels used:    1
  2005 ;; Hardware stack levels required when called:    5
  2006 ;; This function calls:
  2007 ;;		_FastTransfer_buffer_modulo_inc
  2008 ;; This function is called by:
  2009 ;;		_ToSend
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           	psect	text9
  2014  000BA8                     __ptext9:
  2015                           	opt stack 0
  2016  000BA8                     _FastTransfer_buffer_put:
  2017                           	opt stack 22
  2018                           
  2019                           ;FastTransfer.c: 225: group.integer = towhat;
  2020                           
  2021                           ;incstack = 0
  2022  000BA8  C024  F041         	movff	FastTransfer_buffer_put@towhat,_group
  2023  000BAC  C025  F042         	movff	FastTransfer_buffer_put@towhat+1,_group+1
  2024                           
  2025                           ;FastTransfer.c: 227: if (_this->count < (200 - 3)) {
  2026  000BB0  EE20 F0CC          	lfsr	2,204
  2027  000BB4  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2028  000BB6  26D9               	addwf	fsr2l,f,c
  2029  000BB8  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2030  000BBA  22DA               	addwfc	fsr2h,f,c
  2031  000BBC  0E01               	movlw	1
  2032  000BBE  BEDB               	btfsc	plusw2,7,c
  2033  000BC0  D007               	goto	l4166
  2034  000BC2  0E01               	movlw	1
  2035  000BC4  50DB               	movf	plusw2,w,c
  2036  000BC6  E103               	bnz	u4331
  2037  000BC8  0EC5               	movlw	197
  2038  000BCA  5CDE               	subwf	postinc2,w,c
  2039  000BCC  B0D8               	btfsc	status,0,c
  2040  000BCE                     u4331:
  2041  000BCE  0012               	return	
  2042  000BD0                     l4166:
  2043                           
  2044                           ;FastTransfer.c: 228: _this->buf[_this->head] = towhere;
  2045  000BD0  EE20 F0C8          	lfsr	2,200
  2046  000BD4  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2047  000BD6  26D9               	addwf	fsr2l,f,c
  2048  000BD8  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2049  000BDA  22DA               	addwfc	fsr2h,f,c
  2050  000BDC  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  2051  000BE0  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  2052  000BE4  5026               	movf	??_FastTransfer_buffer_put,w,c
  2053  000BE6  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  2054  000BE8  6ED9               	movwf	fsr2l,c
  2055  000BEA  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  2056  000BEC  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  2057  000BEE  6EDA               	movwf	fsr2h,c
  2058  000BF0  C023  FFDF         	movff	FastTransfer_buffer_put@towhere,indf2
  2059                           
  2060                           ;FastTransfer.c: 229: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  2061  000BF4  EE20 F0C8          	lfsr	2,200
  2062  000BF8  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2063  000BFA  26D9               	addwf	fsr2l,f,c
  2064  000BFC  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2065  000BFE  22DA               	addwfc	fsr2h,f,c
  2066  000C00  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  2067  000C04  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  2068  000C08  0E00               	movlw	0
  2069  000C0A  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  2070  000C0C  0EC8               	movlw	200
  2071  000C0E  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  2072  000C10  ECB1  F00F         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  2073  000C14  EE20 F0C8          	lfsr	2,200
  2074  000C18  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2075  000C1A  26D9               	addwf	fsr2l,f,c
  2076  000C1C  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2077  000C1E  22DA               	addwfc	fsr2h,f,c
  2078  000C20  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  2079  000C24  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  2080                           
  2081                           ;FastTransfer.c: 230: ++_this->count;
  2082  000C28  EE20 F0CC          	lfsr	2,204
  2083  000C2C  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2084  000C2E  26D9               	addwf	fsr2l,f,c
  2085  000C30  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2086  000C32  22DA               	addwfc	fsr2h,f,c
  2087  000C34  2ADE               	incf	postinc2,f,c
  2088  000C36  0E00               	movlw	0
  2089  000C38  22DD               	addwfc	postdec2,f,c
  2090                           
  2091                           ;FastTransfer.c: 231: _this->buf[_this->head] = group.parts[0];
  2092  000C3A  EE20 F0C8          	lfsr	2,200
  2093  000C3E  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2094  000C40  26D9               	addwf	fsr2l,f,c
  2095  000C42  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2096  000C44  22DA               	addwfc	fsr2h,f,c
  2097  000C46  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  2098  000C4A  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  2099  000C4E  5026               	movf	??_FastTransfer_buffer_put,w,c
  2100  000C50  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  2101  000C52  6ED9               	movwf	fsr2l,c
  2102  000C54  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  2103  000C56  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  2104  000C58  6EDA               	movwf	fsr2h,c
  2105  000C5A  C041  FFDF         	movff	_group,indf2
  2106                           
  2107                           ;FastTransfer.c: 232: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  2108  000C5E  EE20 F0C8          	lfsr	2,200
  2109  000C62  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2110  000C64  26D9               	addwf	fsr2l,f,c
  2111  000C66  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2112  000C68  22DA               	addwfc	fsr2h,f,c
  2113  000C6A  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  2114  000C6E  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  2115  000C72  0E00               	movlw	0
  2116  000C74  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  2117  000C76  0EC8               	movlw	200
  2118  000C78  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  2119  000C7A  ECB1  F00F         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  2120  000C7E  EE20 F0C8          	lfsr	2,200
  2121  000C82  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2122  000C84  26D9               	addwf	fsr2l,f,c
  2123  000C86  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2124  000C88  22DA               	addwfc	fsr2h,f,c
  2125  000C8A  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  2126  000C8E  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  2127                           
  2128                           ;FastTransfer.c: 233: ++_this->count;
  2129  000C92  EE20 F0CC          	lfsr	2,204
  2130  000C96  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2131  000C98  26D9               	addwf	fsr2l,f,c
  2132  000C9A  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2133  000C9C  22DA               	addwfc	fsr2h,f,c
  2134  000C9E  2ADE               	incf	postinc2,f,c
  2135  000CA0  0E00               	movlw	0
  2136  000CA2  22DD               	addwfc	postdec2,f,c
  2137                           
  2138                           ;FastTransfer.c: 234: _this->buf[_this->head] = group.parts[1];
  2139  000CA4  EE20 F0C8          	lfsr	2,200
  2140  000CA8  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2141  000CAA  26D9               	addwf	fsr2l,f,c
  2142  000CAC  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2143  000CAE  22DA               	addwfc	fsr2h,f,c
  2144  000CB0  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  2145  000CB4  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  2146  000CB8  5026               	movf	??_FastTransfer_buffer_put,w,c
  2147  000CBA  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  2148  000CBC  6ED9               	movwf	fsr2l,c
  2149  000CBE  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  2150  000CC0  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  2151  000CC2  6EDA               	movwf	fsr2h,c
  2152  000CC4  C042  FFDF         	movff	_group+1,indf2
  2153                           
  2154                           ;FastTransfer.c: 235: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  2155  000CC8  EE20 F0C8          	lfsr	2,200
  2156  000CCC  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2157  000CCE  26D9               	addwf	fsr2l,f,c
  2158  000CD0  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2159  000CD2  22DA               	addwfc	fsr2h,f,c
  2160  000CD4  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  2161  000CD8  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  2162  000CDC  0E00               	movlw	0
  2163  000CDE  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  2164  000CE0  0EC8               	movlw	200
  2165  000CE2  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  2166  000CE4  ECB1  F00F         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  2167  000CE8  EE20 F0C8          	lfsr	2,200
  2168  000CEC  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2169  000CEE  26D9               	addwf	fsr2l,f,c
  2170  000CF0  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2171  000CF2  22DA               	addwfc	fsr2h,f,c
  2172  000CF4  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  2173  000CF8  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  2174                           
  2175                           ;FastTransfer.c: 236: ++_this->count;
  2176  000CFC  EE20 F0CC          	lfsr	2,204
  2177  000D00  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2178  000D02  26D9               	addwf	fsr2l,f,c
  2179  000D04  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2180  000D06  22DA               	addwfc	fsr2h,f,c
  2181  000D08  2ADE               	incf	postinc2,f,c
  2182  000D0A  0E00               	movlw	0
  2183  000D0C  22DD               	addwfc	postdec2,f,c
  2184  000D0E  0012               	return	
  2185  000D10  0012               	return		;funcret
  2186  000D12                     __end_of_FastTransfer_buffer_put:
  2187                           	opt stack 0
  2188                           tosu	equ	0xFFF
  2189                           tosh	equ	0xFFE
  2190                           tosl	equ	0xFFD
  2191                           pclath	equ	0xFFA
  2192                           tblptru	equ	0xFF8
  2193                           tblptrh	equ	0xFF7
  2194                           tblptrl	equ	0xFF6
  2195                           tablat	equ	0xFF5
  2196                           intcon	equ	0xFF2
  2197                           postinc0	equ	0xFEE
  2198                           wreg	equ	0xFE8
  2199                           indf2	equ	0xFDF
  2200                           postinc2	equ	0xFDE
  2201                           postdec2	equ	0xFDD
  2202                           plusw2	equ	0xFDB
  2203                           fsr2h	equ	0xFDA
  2204                           fsr2l	equ	0xFD9
  2205                           status	equ	0xFD8
  2206                           
  2207 ;; *************** function _FastTransfer_buffer_modulo_inc *****************
  2208 ;; Defined at:
  2209 ;;		line 273 in file "FastTransfer.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;  value           2   26[COMRAM] const unsigned int 
  2212 ;;  modulus         2   28[COMRAM] const unsigned int 
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;  my_value        2   30[COMRAM] unsigned int 
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  2   26[COMRAM] unsigned int 
  2217 ;; Registers used:
  2218 ;;		wreg, status,2, status,0
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2224 ;;      Params:         4       0       0       0       0       0       0
  2225 ;;      Locals:         2       0       0       0       0       0       0
  2226 ;;      Temps:          0       0       0       0       0       0       0
  2227 ;;      Totals:         6       0       0       0       0       0       0
  2228 ;;Total ram usage:        6 bytes
  2229 ;; Hardware stack levels used:    1
  2230 ;; Hardware stack levels required when called:    4
  2231 ;; This function calls:
  2232 ;;		Nothing
  2233 ;; This function is called by:
  2234 ;;		_FastTransfer_buffer_put
  2235 ;;		_FastTransfer_buffer_get
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           	psect	text10
  2240  001F62                     __ptext10:
  2241                           	opt stack 0
  2242  001F62                     _FastTransfer_buffer_modulo_inc:
  2243                           	opt stack 22
  2244                           
  2245                           ;FastTransfer.c: 274: unsigned int my_value = value + 1;
  2246                           
  2247                           ;incstack = 0
  2248  001F62  0E01               	movlw	1
  2249  001F64  241B               	addwf	FastTransfer_buffer_modulo_inc@value,w,c
  2250  001F66  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  2251  001F68  0E00               	movlw	0
  2252  001F6A  201C               	addwfc	FastTransfer_buffer_modulo_inc@value+1,w,c
  2253  001F6C  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  2254                           
  2255                           ;FastTransfer.c: 275: if (my_value >= modulus) {
  2256  001F6E  501D               	movf	FastTransfer_buffer_modulo_inc@modulus,w,c
  2257  001F70  5C1F               	subwf	FastTransfer_buffer_modulo_inc@my_value,w,c
  2258  001F72  501E               	movf	FastTransfer_buffer_modulo_inc@modulus+1,w,c
  2259  001F74  5820               	subwfb	FastTransfer_buffer_modulo_inc@my_value+1,w,c
  2260  001F76  A0D8               	btfss	status,0,c
  2261  001F78  D005               	goto	l4048
  2262                           
  2263                           ;FastTransfer.c: 276: my_value = 0;
  2264  001F7A  0E00               	movlw	0
  2265  001F7C  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  2266  001F7E  0E00               	movlw	0
  2267  001F80  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  2268  001F82  D000               	goto	l4048
  2269  001F84                     l4048:
  2270                           
  2271                           ;FastTransfer.c: 277: }
  2272                           ;FastTransfer.c: 278: return (my_value);
  2273  001F84  C01F  F01B         	movff	FastTransfer_buffer_modulo_inc@my_value,?_FastTransfer_buffer_modulo_inc
  2274  001F88  C020  F01C         	movff	FastTransfer_buffer_modulo_inc@my_value+1,?_FastTransfer_buffer_modulo_inc+1
  2275  001F8C  0012               	return	
  2276  001F8E  0012               	return		;funcret
  2277  001F90                     __end_of_FastTransfer_buffer_modulo_inc:
  2278                           	opt stack 0
  2279                           tosu	equ	0xFFF
  2280                           tosh	equ	0xFFE
  2281                           tosl	equ	0xFFD
  2282                           pclath	equ	0xFFA
  2283                           tblptru	equ	0xFF8
  2284                           tblptrh	equ	0xFF7
  2285                           tblptrl	equ	0xFF6
  2286                           tablat	equ	0xFF5
  2287                           intcon	equ	0xFF2
  2288                           postinc0	equ	0xFEE
  2289                           wreg	equ	0xFE8
  2290                           indf2	equ	0xFDF
  2291                           postinc2	equ	0xFDE
  2292                           postdec2	equ	0xFDD
  2293                           plusw2	equ	0xFDB
  2294                           fsr2h	equ	0xFDA
  2295                           fsr2l	equ	0xFD9
  2296                           status	equ	0xFD8
  2297                           
  2298 ;; *************** function _Delay *****************
  2299 ;; Defined at:
  2300 ;;		line 107 in file "main.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;  wait            2   26[COMRAM] int 
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;  x               2   29[COMRAM] int 
  2305 ;; Return value:  Size  Location     Type
  2306 ;;		None               void
  2307 ;; Registers used:
  2308 ;;		wreg, status,2, status,0
  2309 ;; Tracked objects:
  2310 ;;		On entry : 0/0
  2311 ;;		On exit  : 0/0
  2312 ;;		Unchanged: 0/0
  2313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2314 ;;      Params:         2       0       0       0       0       0       0
  2315 ;;      Locals:         2       0       0       0       0       0       0
  2316 ;;      Temps:          1       0       0       0       0       0       0
  2317 ;;      Totals:         5       0       0       0       0       0       0
  2318 ;;Total ram usage:        5 bytes
  2319 ;; Hardware stack levels used:    1
  2320 ;; Hardware stack levels required when called:    4
  2321 ;; This function calls:
  2322 ;;		Nothing
  2323 ;; This function is called by:
  2324 ;;		_respondECU
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328                           	psect	text11
  2329  001ECA                     __ptext11:
  2330                           	opt stack 0
  2331  001ECA                     _Delay:
  2332                           	opt stack 24
  2333                           
  2334                           ;main.c: 109: int x;
  2335                           ;main.c: 110: for(x = 0;x<wait;x++)
  2336                           
  2337                           ;incstack = 0
  2338  001ECA  0E00               	movlw	0
  2339  001ECC  6E1F               	movwf	Delay@x+1,c
  2340  001ECE  0E00               	movlw	0
  2341  001ED0  6E1E               	movwf	Delay@x,c
  2342  001ED2  D00A               	goto	l405
  2343  001ED4                     l4250:
  2344                           
  2345                           ;main.c: 111: {
  2346                           ;main.c: 112: _delay((unsigned long)((1)*(16000000/4000.0)));
  2347  001ED4  0E06               	movlw	6
  2348  001ED6  6E1D               	movwf	??_Delay& (0+255),c
  2349  001ED8  0E30               	movlw	48
  2350  001EDA                     u6087:
  2351  001EDA  2EE8               	decfsz	wreg,f,c
  2352  001EDC  D7FE               	goto	u6087
  2353  001EDE  2E1D               	decfsz	??_Delay& (0+255),f,c
  2354  001EE0  D7FC               	goto	u6087
  2355  001EE2  D000               	nop2	
  2356  001EE4  4A1E               	infsnz	Delay@x,f,c
  2357  001EE6  2A1F               	incf	Delay@x+1,f,c
  2358  001EE8                     l405:
  2359  001EE8  501B               	movf	Delay@wait,w,c
  2360  001EEA  5C1E               	subwf	Delay@x,w,c
  2361  001EEC  501F               	movf	Delay@x+1,w,c
  2362  001EEE  0A80               	xorlw	128
  2363  001EF0  6E1D               	movwf	??_Delay& (0+255),c
  2364  001EF2  501C               	movf	Delay@wait+1,w,c
  2365  001EF4  0A80               	xorlw	128
  2366  001EF6  581D               	subwfb	??_Delay& (0+255),w,c
  2367  001EF8  A0D8               	btfss	status,0,c
  2368  001EFA  D7EC               	goto	l4250
  2369  001EFC  0012               	return		;funcret
  2370  001EFE                     __end_of_Delay:
  2371                           	opt stack 0
  2372                           tosu	equ	0xFFF
  2373                           tosh	equ	0xFFE
  2374                           tosl	equ	0xFFD
  2375                           pclath	equ	0xFFA
  2376                           tblptru	equ	0xFF8
  2377                           tblptrh	equ	0xFF7
  2378                           tblptrl	equ	0xFF6
  2379                           tablat	equ	0xFF5
  2380                           intcon	equ	0xFF2
  2381                           postinc0	equ	0xFEE
  2382                           wreg	equ	0xFE8
  2383                           indf2	equ	0xFDF
  2384                           postinc2	equ	0xFDE
  2385                           postdec2	equ	0xFDD
  2386                           plusw2	equ	0xFDB
  2387                           fsr2h	equ	0xFDA
  2388                           fsr2l	equ	0xFD9
  2389                           status	equ	0xFD8
  2390                           
  2391 ;; *************** function _receiveData *****************
  2392 ;; Defined at:
  2393 ;;		line 82 in file "FastTransfer.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;		None
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;  holder          3    3[BANK1 ] unsigned char [3]
  2398 ;;  crcHolder       1    7[BANK1 ] unsigned char 
  2399 ;;  holder          3    0[BANK1 ] unsigned char [3]
  2400 ;;  crcHolder       1    6[BANK1 ] unsigned char 
  2401 ;;  u               2    8[BANK1 ] int 
  2402 ;;  r               2   10[BANK1 ] int 
  2403 ;; Return value:  Size  Location     Type
  2404 ;;                  1    wreg      unsigned char 
  2405 ;; Registers used:
  2406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 0/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2412 ;;      Params:         0       0       0       0       0       0       0
  2413 ;;      Locals:         0       0      12       0       0       0       0
  2414 ;;      Temps:          0       6       0       0       0       0       0
  2415 ;;      Totals:         0       6      12       0       0       0       0
  2416 ;;Total ram usage:       18 bytes
  2417 ;; Hardware stack levels used:    1
  2418 ;; Hardware stack levels required when called:    8
  2419 ;; This function calls:
  2420 ;;		Absolute function
  2421 ;;		_CRC8
  2422 ;;		_CRCcheck
  2423 ;;		_Receive_available
  2424 ;;		_Receive_get
  2425 ;;		_Receive_peek
  2426 ;;		_Send_put
  2427 ;; This function is called by:
  2428 ;;		_updateComms
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text12
  2433  0000C6                     __ptext12:
  2434                           	opt stack 0
  2435  0000C6                     _receiveData:
  2436                           	opt stack 21
  2437                           
  2438                           ;FastTransfer.c: 85: if (rx_len == 0) {
  2439                           
  2440                           ;incstack = 0
  2441  0000C6  503E               	movf	_rx_len,w,c
  2442  0000C8  A4D8               	btfss	status,2,c
  2443  0000CA  D0B0               	goto	l4584
  2444                           
  2445                           ;FastTransfer.c: 87: if (serial_available() > 4) {
  2446  0000CC  D801               	call	u4928
  2447  0000CE  D00A               	goto	u4929
  2448  0000D0                     u4928:
  2449  0000D0  0005               	push	
  2450  0000D2  6EFA               	movwf	pclath,c
  2451  0000D4  502D               	movf	_serial_available,w,c
  2452  0000D6  6EFD               	movwf	tosl,c
  2453  0000D8  502E               	movf	_serial_available+1,w,c
  2454  0000DA  6EFE               	movwf	tosh,c
  2455  0000DC  50F8               	movf	tblptru,w,c
  2456  0000DE  6EFF               	movwf	tosu,c
  2457  0000E0  50FA               	movf	pclath,w,c
  2458  0000E2  0012               	return		;indir
  2459  0000E4                     u4929:
  2460  0000E4  BE1E               	btfsc	?_Receive_available+1,7,c
  2461  0000E6  D0A2               	goto	l4584
  2462  0000E8  501E               	movf	?_Receive_available+1,w,c
  2463  0000EA  E120               	bnz	l4560
  2464  0000EC  0E05               	movlw	5
  2465  0000EE  5C1D               	subwf	?_Receive_available,w,c
  2466  0000F0  B0D8               	btfsc	status,0,c
  2467  0000F2  D01C               	goto	l4560
  2468  0000F4  D09B               	goto	l4584
  2469                           
  2470                           ;FastTransfer.c: 89: while (serial_read() != 0x06) {
  2471  0000F6  D01A               	goto	l4560
  2472  0000F8                     l4552:
  2473                           
  2474                           ;FastTransfer.c: 93: alignErrorCounter++;
  2475  0000F8  0100               	movlb	0	; () banked
  2476  0000FA  4B9D               	infsnz	_alignErrorCounter& (0+255),f,b
  2477  0000FC  2B9E               	incf	(_alignErrorCounter+1)& (0+255),f,b
  2478                           
  2479                           ; BSR set to: 0
  2480                           ;FastTransfer.c: 94: if (serial_available() < 5)
  2481  0000FE  D801               	call	u4948
  2482  000100  D00A               	goto	u4949
  2483  000102                     u4948:
  2484  000102  0005               	push	
  2485  000104  6EFA               	movwf	pclath,c
  2486  000106  502D               	movf	_serial_available,w,c
  2487  000108  6EFD               	movwf	tosl,c
  2488  00010A  502E               	movf	_serial_available+1,w,c
  2489  00010C  6EFE               	movwf	tosh,c
  2490  00010E  50F8               	movf	tblptru,w,c
  2491  000110  6EFF               	movwf	tosu,c
  2492  000112  50FA               	movf	pclath,w,c
  2493  000114  0012               	return		;indir
  2494  000116                     u4949:
  2495  000116  BE1E               	btfsc	?_Receive_available+1,7,c
  2496  000118  D006               	goto	l4556
  2497  00011A  501E               	movf	?_Receive_available+1,w,c
  2498  00011C  E107               	bnz	l4560
  2499  00011E  0E05               	movlw	5
  2500  000120  5C1D               	subwf	?_Receive_available,w,c
  2501  000122  B0D8               	btfsc	status,0,c
  2502  000124  D003               	goto	l4560
  2503  000126                     l4556:
  2504                           
  2505                           ;FastTransfer.c: 95: return 0;
  2506  000126  0E00               	movlw	0
  2507  000128  0012               	return	
  2508  00012A  D000               	goto	l4560
  2509  00012C                     l4560:
  2510  00012C  D801               	call	u4968
  2511  00012E  D00A               	goto	u4969
  2512  000130                     u4968:
  2513  000130  0005               	push	
  2514  000132  6EFA               	movwf	pclath,c
  2515  000134  502F               	movf	_serial_read,w,c
  2516  000136  6EFD               	movwf	tosl,c
  2517  000138  5030               	movf	_serial_read+1,w,c
  2518  00013A  6EFE               	movwf	tosh,c
  2519  00013C  50F8               	movf	tblptru,w,c
  2520  00013E  6EFF               	movwf	tosu,c
  2521  000140  50FA               	movf	pclath,w,c
  2522  000142  0012               	return		;indir
  2523  000144                     u4969:
  2524  000144  0A06               	xorlw	6
  2525  000146  A4D8               	btfss	status,2,c
  2526  000148  D7D7               	goto	l4552
  2527                           
  2528                           ;FastTransfer.c: 96: }
  2529                           ;FastTransfer.c: 97: if (serial_read() == 0x85) {
  2530  00014A  D801               	call	u4988
  2531  00014C  D00A               	goto	u4989
  2532  00014E                     u4988:
  2533  00014E  0005               	push	
  2534  000150  6EFA               	movwf	pclath,c
  2535  000152  502F               	movf	_serial_read,w,c
  2536  000154  6EFD               	movwf	tosl,c
  2537  000156  5030               	movf	_serial_read+1,w,c
  2538  000158  6EFE               	movwf	tosh,c
  2539  00015A  50F8               	movf	tblptru,w,c
  2540  00015C  6EFF               	movwf	tosu,c
  2541  00015E  50FA               	movf	pclath,w,c
  2542  000160  0012               	return		;indir
  2543  000162                     u4989:
  2544  000162  0A85               	xorlw	133
  2545  000164  A4D8               	btfss	status,2,c
  2546  000166  D062               	goto	l4584
  2547                           
  2548                           ;FastTransfer.c: 98: rx_address = serial_read();
  2549  000168  D801               	call	u5008
  2550  00016A  D00A               	goto	u5009
  2551  00016C                     u5008:
  2552  00016C  0005               	push	
  2553  00016E  6EFA               	movwf	pclath,c
  2554  000170  502F               	movf	_serial_read,w,c
  2555  000172  6EFD               	movwf	tosl,c
  2556  000174  5030               	movf	_serial_read+1,w,c
  2557  000176  6EFE               	movwf	tosh,c
  2558  000178  50F8               	movf	tblptru,w,c
  2559  00017A  6EFF               	movwf	tosu,c
  2560  00017C  50FA               	movf	pclath,w,c
  2561  00017E  0012               	return		;indir
  2562  000180                     u5009:
  2563  000180  6E3C               	movwf	_rx_address,c
  2564                           
  2565                           ;FastTransfer.c: 99: returnAddress = serial_read();
  2566  000182  D801               	call	u5018
  2567  000184  D00A               	goto	u5019
  2568  000186                     u5018:
  2569  000186  0005               	push	
  2570  000188  6EFA               	movwf	pclath,c
  2571  00018A  502F               	movf	_serial_read,w,c
  2572  00018C  6EFD               	movwf	tosl,c
  2573  00018E  5030               	movf	_serial_read+1,w,c
  2574  000190  6EFE               	movwf	tosh,c
  2575  000192  50F8               	movf	tblptru,w,c
  2576  000194  6EFF               	movwf	tosu,c
  2577  000196  50FA               	movf	pclath,w,c
  2578  000198  0012               	return		;indir
  2579  00019A                     u5019:
  2580  00019A  6E3B               	movwf	_returnAddress,c
  2581                           
  2582                           ;FastTransfer.c: 100: rx_len = serial_read();
  2583  00019C  D801               	call	u5028
  2584  00019E  D00A               	goto	u5029
  2585  0001A0                     u5028:
  2586  0001A0  0005               	push	
  2587  0001A2  6EFA               	movwf	pclath,c
  2588  0001A4  502F               	movf	_serial_read,w,c
  2589  0001A6  6EFD               	movwf	tosl,c
  2590  0001A8  5030               	movf	_serial_read+1,w,c
  2591  0001AA  6EFE               	movwf	tosh,c
  2592  0001AC  50F8               	movf	tblptru,w,c
  2593  0001AE  6EFF               	movwf	tosu,c
  2594  0001B0  50FA               	movf	pclath,w,c
  2595  0001B2  0012               	return		;indir
  2596  0001B4                     u5029:
  2597  0001B4  6E3E               	movwf	_rx_len,c
  2598                           
  2599                           ;FastTransfer.c: 102: if (rx_address != moduleAddress) {
  2600  0001B6  503A               	movf	_moduleAddress,w,c
  2601  0001B8  183C               	xorwf	_rx_address,w,c
  2602  0001BA  B4D8               	btfsc	status,2,c
  2603  0001BC  D037               	goto	l4584
  2604                           
  2605                           ;FastTransfer.c: 103: addressErrorCounter++;
  2606  0001BE  0100               	movlb	0	; () banked
  2607  0001C0  4B9B               	infsnz	_addressErrorCounter& (0+255),f,b
  2608  0001C2  2B9C               	incf	(_addressErrorCounter+1)& (0+255),f,b
  2609                           
  2610                           ; BSR set to: 0
  2611                           ;FastTransfer.c: 106: int u;
  2612                           ;FastTransfer.c: 107: for (u = 0; u <= (rx_len + 1); u++) {
  2613  0001C4  0E00               	movlw	0
  2614  0001C6  0101               	movlb	1	; () banked
  2615  0001C8  6FD7               	movwf	(receiveData@u+1)& (0+255),b
  2616  0001CA  0E00               	movlw	0
  2617  0001CC  6FD6               	movwf	receiveData@u& (0+255),b
  2618  0001CE  D010               	goto	l4576
  2619  0001D0                     l4572:
  2620                           
  2621                           ;FastTransfer.c: 108: serial_read();
  2622  0001D0  D801               	call	u5048
  2623  0001D2  D00A               	goto	l4574
  2624  0001D4                     u5048:
  2625  0001D4  0005               	push	
  2626  0001D6  6EFA               	movwf	pclath,c
  2627  0001D8  502F               	movf	_serial_read,w,c
  2628  0001DA  6EFD               	movwf	tosl,c
  2629  0001DC  5030               	movf	_serial_read+1,w,c
  2630  0001DE  6EFE               	movwf	tosh,c
  2631  0001E0  50F8               	movf	tblptru,w,c
  2632  0001E2  6EFF               	movwf	tosu,c
  2633  0001E4  50FA               	movf	pclath,w,c
  2634  0001E6  0012               	return		;indir
  2635  0001E8                     l4574:
  2636  0001E8  0101               	movlb	1	; () banked
  2637  0001EA  4BD6               	infsnz	receiveData@u& (0+255),f,b
  2638  0001EC  2BD7               	incf	(receiveData@u+1)& (0+255),f,b
  2639  0001EE  D000               	goto	l4576
  2640  0001F0                     l4576:
  2641                           
  2642                           ; BSR set to: 1
  2643  0001F0  503E               	movf	_rx_len,w,c
  2644  0001F2  0100               	movlb	0	; () banked
  2645  0001F4  6FFA               	movwf	??_receiveData& (0+255),b
  2646  0001F6  6BFB               	clrf	(??_receiveData+1)& (0+255),b
  2647  0001F8  0E01               	movlw	1
  2648  0001FA  0100               	movlb	0	; () banked
  2649  0001FC  27FA               	addwf	??_receiveData& (0+255),f,b
  2650  0001FE  0E00               	movlw	0
  2651  000200  23FB               	addwfc	(??_receiveData+1)& (0+255),f,b
  2652  000202  0101               	movlb	1	; () banked
  2653  000204  51D6               	movf	receiveData@u& (0+255),w,b
  2654  000206  0100               	movlb	0	; () banked
  2655  000208  5DFA               	subwf	??_receiveData& (0+255),w,b
  2656  00020A  0100               	movlb	0	; () banked
  2657  00020C  51FB               	movf	(??_receiveData+1)& (0+255),w,b
  2658  00020E  0A80               	xorlw	128
  2659  000210  0100               	movlb	0	; () banked
  2660  000212  6FFC               	movwf	(??_receiveData+2)& (0+255),b
  2661  000214  0101               	movlb	1	; () banked
  2662  000216  51D7               	movf	(receiveData@u+1)& (0+255),w,b
  2663  000218  0A80               	xorlw	128
  2664  00021A  0100               	movlb	0	; () banked
  2665  00021C  59FC               	subwfb	(??_receiveData+2)& (0+255),w,b
  2666  00021E  B0D8               	btfsc	status,0,c
  2667  000220  D7D7               	goto	l4572
  2668                           
  2669                           ; BSR set to: 0
  2670                           ;FastTransfer.c: 109: }
  2671                           ;FastTransfer.c: 110: rx_len = 0;
  2672                           
  2673                           ; BSR set to: 0
  2674  000222  0E00               	movlw	0
  2675  000224  6E3E               	movwf	_rx_len,c
  2676                           
  2677                           ; BSR set to: 0
  2678                           ;FastTransfer.c: 111: return 0;
  2679  000226  0E00               	movlw	0
  2680                           
  2681                           ; BSR set to: 0
  2682  000228  0012               	return	
  2683                           
  2684                           ; BSR set to: 0
  2685                           
  2686                           ; BSR set to: 0
  2687                           
  2688                           ; BSR set to: 0
  2689  00022A  D000               	goto	l4584
  2690  00022C                     l4584:
  2691                           
  2692                           ;FastTransfer.c: 112: }
  2693                           ;FastTransfer.c: 114: }
  2694                           ;FastTransfer.c: 115: }
  2695                           ;FastTransfer.c: 116: }
  2696                           ;FastTransfer.c: 119: if (rx_len != 0) {
  2697  00022C  503E               	movf	_rx_len,w,c
  2698  00022E  B4D8               	btfsc	status,2,c
  2699  000230  D2B2               	goto	l4708
  2700                           
  2701                           ;FastTransfer.c: 122: if (rx_array_inx == 0) {
  2702  000232  503D               	movf	_rx_array_inx,w,c
  2703  000234  B4D8               	btfsc	status,2,c
  2704  000236  D002               	goto	l4590
  2705  000238  D049               	goto	l4608
  2706                           
  2707                           ;FastTransfer.c: 123: while (!(serial_available() >= 1));
  2708  00023A  D000               	goto	l4590
  2709  00023C                     l4590:
  2710  00023C  D801               	call	u5088
  2711  00023E  D00A               	goto	u5089
  2712  000240                     u5088:
  2713  000240  0005               	push	
  2714  000242  6EFA               	movwf	pclath,c
  2715  000244  502D               	movf	_serial_available,w,c
  2716  000246  6EFD               	movwf	tosl,c
  2717  000248  502E               	movf	_serial_available+1,w,c
  2718  00024A  6EFE               	movwf	tosh,c
  2719  00024C  50F8               	movf	tblptru,w,c
  2720  00024E  6EFF               	movwf	tosu,c
  2721  000250  50FA               	movf	pclath,w,c
  2722  000252  0012               	return		;indir
  2723  000254                     u5089:
  2724  000254  BE1E               	btfsc	?_Receive_available+1,7,c
  2725  000256  D7F2               	goto	l4590
  2726  000258  501E               	movf	?_Receive_available+1,w,c
  2727  00025A  E105               	bnz	l4592
  2728  00025C  041D               	decf	?_Receive_available,w,c
  2729  00025E  B0D8               	btfsc	status,0,c
  2730  000260  D002               	goto	l4592
  2731  000262  D7EC               	goto	l4590
  2732  000264  D000               	goto	l4592
  2733  000266                     l4592:
  2734                           
  2735                           ;FastTransfer.c: 124: if (255 == serial_peek()) {
  2736  000266  D801               	call	u5108
  2737  000268  D00B               	goto	u5109
  2738  00026A                     u5108:
  2739  00026A  0005               	push	
  2740  00026C  0100               	movlb	0	; () banked
  2741  00026E  6EFA               	movwf	pclath,c
  2742  000270  51A7               	movf	_serial_peek& (0+255),w,b
  2743  000272  6EFD               	movwf	tosl,c
  2744  000274  51A8               	movf	(_serial_peek+1)& (0+255),w,b
  2745  000276  6EFE               	movwf	tosh,c
  2746  000278  50F8               	movf	tblptru,w,c
  2747  00027A  6EFF               	movwf	tosu,c
  2748  00027C  50FA               	movf	pclath,w,c
  2749  00027E  0012               	return		;indir
  2750  000280                     u5109:
  2751  000280  0AFF               	xorlw	255
  2752  000282  A4D8               	btfss	status,2,c
  2753  000284  D023               	goto	l4608
  2754                           
  2755                           ;FastTransfer.c: 125: CRCcheck();
  2756  000286  EC1D  F005         	call	_CRCcheck	;wreg free
  2757                           
  2758                           ;FastTransfer.c: 126: rx_len = 0;
  2759  00028A  0E00               	movlw	0
  2760  00028C  6E3E               	movwf	_rx_len,c
  2761                           
  2762                           ;FastTransfer.c: 127: rx_array_inx = 0;
  2763  00028E  0E00               	movlw	0
  2764  000290  6E3D               	movwf	_rx_array_inx,c
  2765                           
  2766                           ;FastTransfer.c: 128: return 0;
  2767  000292  0E00               	movlw	0
  2768  000294  0012               	return	
  2769                           
  2770                           ;FastTransfer.c: 129: }
  2771                           ;FastTransfer.c: 130: }
  2772                           ;FastTransfer.c: 133: while (serial_available() && rx_array_inx <= rx_len) {
  2773  000296  D01A               	goto	l4608
  2774  000298                     l4604:
  2775                           
  2776                           ;FastTransfer.c: 134: rx_buffer[rx_array_inx++] = serial_read();
  2777  000298  D801               	call	u5128
  2778  00029A  D00A               	goto	u5129
  2779  00029C                     u5128:
  2780  00029C  0005               	push	
  2781  00029E  6EFA               	movwf	pclath,c
  2782  0002A0  502F               	movf	_serial_read,w,c
  2783  0002A2  6EFD               	movwf	tosl,c
  2784  0002A4  5030               	movf	_serial_read+1,w,c
  2785  0002A6  6EFE               	movwf	tosh,c
  2786  0002A8  50F8               	movf	tblptru,w,c
  2787  0002AA  6EFF               	movwf	tosu,c
  2788  0002AC  50FA               	movf	pclath,w,c
  2789  0002AE  0012               	return		;indir
  2790  0002B0                     u5129:
  2791  0002B0  0100               	movlb	0	; () banked
  2792  0002B2  6FFA               	movwf	??_receiveData& (0+255),b
  2793  0002B4  503D               	movf	_rx_array_inx,w,c
  2794  0002B6  0D01               	mullw	1
  2795  0002B8  0E00               	movlw	low _rx_buffer
  2796  0002BA  24F3               	addwf	prodl,w,c
  2797  0002BC  6ED9               	movwf	fsr2l,c
  2798  0002BE  0E02               	movlw	high _rx_buffer
  2799  0002C0  20F4               	addwfc	prodh,w,c
  2800  0002C2  6EDA               	movwf	fsr2h,c
  2801  0002C4  C0FA  FFDF         	movff	??_receiveData,indf2
  2802                           
  2803                           ; BSR set to: 0
  2804  0002C8  2A3D               	incf	_rx_array_inx,f,c
  2805  0002CA  D000               	goto	l4608
  2806  0002CC                     l4608:
  2807  0002CC  D801               	call	u5138
  2808  0002CE  D00A               	goto	u5139
  2809  0002D0                     u5138:
  2810  0002D0  0005               	push	
  2811  0002D2  6EFA               	movwf	pclath,c
  2812  0002D4  502D               	movf	_serial_available,w,c
  2813  0002D6  6EFD               	movwf	tosl,c
  2814  0002D8  502E               	movf	_serial_available+1,w,c
  2815  0002DA  6EFE               	movwf	tosh,c
  2816  0002DC  50F8               	movf	tblptru,w,c
  2817  0002DE  6EFF               	movwf	tosu,c
  2818  0002E0  50FA               	movf	pclath,w,c
  2819  0002E2  0012               	return		;indir
  2820  0002E4                     u5139:
  2821  0002E4  501D               	movf	?_Receive_available,w,c
  2822  0002E6  101E               	iorwf	?_Receive_available+1,w,c
  2823  0002E8  B4D8               	btfsc	status,2,c
  2824  0002EA  D006               	goto	l4612
  2825  0002EC  503D               	movf	_rx_array_inx,w,c
  2826  0002EE  5C3E               	subwf	_rx_len,w,c
  2827  0002F0  A0D8               	btfss	status,0,c
  2828  0002F2  D002               	goto	l4612
  2829  0002F4  D7D1               	goto	l4604
  2830  0002F6  D000               	goto	l4612
  2831  0002F8                     l4612:
  2832                           
  2833                           ;FastTransfer.c: 135: }
  2834                           ;FastTransfer.c: 137: if (rx_len == (rx_array_inx - 1)) {
  2835  0002F8  503E               	movf	_rx_len,w,c
  2836  0002FA  0100               	movlb	0	; () banked
  2837  0002FC  6FFA               	movwf	??_receiveData& (0+255),b
  2838  0002FE  6BFB               	clrf	(??_receiveData+1)& (0+255),b
  2839  000300  0EFF               	movlw	255
  2840  000302  0100               	movlb	0	; () banked
  2841  000304  6FFC               	movwf	(??_receiveData+2)& (0+255),b
  2842  000306  0EFF               	movlw	255
  2843  000308  0100               	movlb	0	; () banked
  2844  00030A  6FFD               	movwf	(??_receiveData+3)& (0+255),b
  2845  00030C  503D               	movf	_rx_array_inx,w,c
  2846  00030E  0100               	movlb	0	; () banked
  2847  000310  6FFE               	movwf	(??_receiveData+4)& (0+255),b
  2848  000312  6BFF               	clrf	(??_receiveData+5)& (0+255),b
  2849  000314  0100               	movlb	0	; () banked
  2850  000316  51FC               	movf	(??_receiveData+2)& (0+255),w,b
  2851  000318  0100               	movlb	0	; () banked
  2852  00031A  27FE               	addwf	(??_receiveData+4)& (0+255),f,b
  2853  00031C  0100               	movlb	0	; () banked
  2854  00031E  51FD               	movf	(??_receiveData+3)& (0+255),w,b
  2855  000320  0100               	movlb	0	; () banked
  2856  000322  23FF               	addwfc	(??_receiveData+5)& (0+255),f,b
  2857  000324  0100               	movlb	0	; () banked
  2858  000326  51FA               	movf	??_receiveData& (0+255),w,b
  2859  000328  0100               	movlb	0	; () banked
  2860  00032A  19FE               	xorwf	(??_receiveData+4)& (0+255),w,b
  2861  00032C  E105               	bnz	u5161
  2862  00032E  0100               	movlb	0	; () banked
  2863  000330  51FB               	movf	(??_receiveData+1)& (0+255),w,b
  2864  000332  0100               	movlb	0	; () banked
  2865  000334  19FF               	xorwf	(??_receiveData+5)& (0+255),w,b
  2866  000336  A4D8               	btfss	status,2,c
  2867  000338                     u5161:
  2868  000338  D22E               	goto	l4708
  2869                           
  2870                           ; BSR set to: 0
  2871                           ;FastTransfer.c: 140: calc_CS = CRC8(rx_buffer, rx_len);
  2872  00033A  0E00               	movlw	low _rx_buffer
  2873  00033C  6E1B               	movwf	CRC8@data,c
  2874  00033E  0E02               	movlw	high _rx_buffer
  2875  000340  6E1C               	movwf	CRC8@data+1,c
  2876  000342  C03E  F01D         	movff	_rx_len,CRC8@len
  2877  000346  EC31  F00E         	call	_CRC8	;wreg free
  2878  00034A  6E36               	movwf	_calc_CS,c
  2879                           
  2880                           ;FastTransfer.c: 144: if (calc_CS == rx_buffer[rx_array_inx - 1]) {
  2881  00034C  0EFF               	movlw	255
  2882  00034E  0100               	movlb	0	; () banked
  2883  000350  6FFA               	movwf	??_receiveData& (0+255),b
  2884  000352  0EFF               	movlw	255
  2885  000354  0100               	movlb	0	; () banked
  2886  000356  6FFB               	movwf	(??_receiveData+1)& (0+255),b
  2887  000358  503D               	movf	_rx_array_inx,w,c
  2888  00035A  0100               	movlb	0	; () banked
  2889  00035C  6FFC               	movwf	(??_receiveData+2)& (0+255),b
  2890  00035E  6BFD               	clrf	(??_receiveData+3)& (0+255),b
  2891  000360  0100               	movlb	0	; () banked
  2892  000362  51FA               	movf	??_receiveData& (0+255),w,b
  2893  000364  0100               	movlb	0	; () banked
  2894  000366  27FC               	addwf	(??_receiveData+2)& (0+255),f,b
  2895  000368  0100               	movlb	0	; () banked
  2896  00036A  51FB               	movf	(??_receiveData+1)& (0+255),w,b
  2897  00036C  0100               	movlb	0	; () banked
  2898  00036E  23FD               	addwfc	(??_receiveData+3)& (0+255),f,b
  2899  000370  0E00               	movlw	low _rx_buffer
  2900  000372  0100               	movlb	0	; () banked
  2901  000374  25FC               	addwf	(??_receiveData+2)& (0+255),w,b
  2902  000376  6ED9               	movwf	fsr2l,c
  2903  000378  0E02               	movlw	high _rx_buffer
  2904  00037A  0100               	movlb	0	; () banked
  2905  00037C  21FD               	addwfc	(??_receiveData+3)& (0+255),w,b
  2906  00037E  6EDA               	movwf	fsr2h,c
  2907  000380  5036               	movf	_calc_CS,w,c
  2908  000382  18DE               	xorwf	postinc2,w,c
  2909  000384  A4D8               	btfss	status,2,c
  2910  000386  D13E               	goto	l4670
  2911                           
  2912                           ; BSR set to: 0
  2913                           ;FastTransfer.c: 147: int r;
  2914                           ;FastTransfer.c: 148: for (r = 0; r < rx_len; r = r + 3) {
  2915  000388  0E00               	movlw	0
  2916  00038A  0101               	movlb	1	; () banked
  2917  00038C  6FD9               	movwf	(receiveData@r+1)& (0+255),b
  2918  00038E  0E00               	movlw	0
  2919  000390  6FD8               	movwf	receiveData@r& (0+255),b
  2920  000392  D05E               	goto	l4630
  2921  000394                     l4620:
  2922                           
  2923                           ;FastTransfer.c: 149: if (rx_buffer[r] < maxDataAddress) {
  2924  000394  0E00               	movlw	low _rx_buffer
  2925  000396  0101               	movlb	1	; () banked
  2926  000398  25D8               	addwf	receiveData@r& (0+255),w,b
  2927  00039A  6ED9               	movwf	fsr2l,c
  2928  00039C  0E02               	movlw	high _rx_buffer
  2929  00039E  0101               	movlb	1	; () banked
  2930  0003A0  21D9               	addwfc	(receiveData@r+1)& (0+255),w,b
  2931  0003A2  6EDA               	movwf	fsr2h,c
  2932  0003A4  5039               	movf	_maxDataAddress,w,c
  2933  0003A6  5CDE               	subwf	postinc2,w,c
  2934  0003A8  B0D8               	btfsc	status,0,c
  2935  0003AA  D043               	goto	l4626
  2936                           
  2937                           ; BSR set to: 1
  2938                           ;FastTransfer.c: 150: group.parts[0] = rx_buffer[r + 1];
  2939  0003AC  0E01               	movlw	1
  2940  0003AE  0101               	movlb	1	; () banked
  2941  0003B0  25D8               	addwf	receiveData@r& (0+255),w,b
  2942  0003B2  0100               	movlb	0	; () banked
  2943  0003B4  6FFA               	movwf	??_receiveData& (0+255),b
  2944  0003B6  0E00               	movlw	0
  2945  0003B8  0101               	movlb	1	; () banked
  2946  0003BA  21D9               	addwfc	(receiveData@r+1)& (0+255),w,b
  2947  0003BC  0100               	movlb	0	; () banked
  2948  0003BE  6FFB               	movwf	(??_receiveData+1)& (0+255),b
  2949  0003C0  0E00               	movlw	low _rx_buffer
  2950  0003C2  0100               	movlb	0	; () banked
  2951  0003C4  25FA               	addwf	??_receiveData& (0+255),w,b
  2952  0003C6  6ED9               	movwf	fsr2l,c
  2953  0003C8  0E02               	movlw	high _rx_buffer
  2954  0003CA  0100               	movlb	0	; () banked
  2955  0003CC  21FB               	addwfc	(??_receiveData+1)& (0+255),w,b
  2956  0003CE  6EDA               	movwf	fsr2h,c
  2957  0003D0  50DF               	movf	indf2,w,c
  2958  0003D2  6E41               	movwf	_group,c
  2959                           
  2960                           ;FastTransfer.c: 151: group.parts[1] = rx_buffer[r + 2];
  2961  0003D4  0E02               	movlw	2
  2962  0003D6  0101               	movlb	1	; () banked
  2963  0003D8  25D8               	addwf	receiveData@r& (0+255),w,b
  2964  0003DA  0100               	movlb	0	; () banked
  2965  0003DC  6FFA               	movwf	??_receiveData& (0+255),b
  2966  0003DE  0E00               	movlw	0
  2967  0003E0  0101               	movlb	1	; () banked
  2968  0003E2  21D9               	addwfc	(receiveData@r+1)& (0+255),w,b
  2969  0003E4  0100               	movlb	0	; () banked
  2970  0003E6  6FFB               	movwf	(??_receiveData+1)& (0+255),b
  2971  0003E8  0E00               	movlw	low _rx_buffer
  2972  0003EA  0100               	movlb	0	; () banked
  2973  0003EC  25FA               	addwf	??_receiveData& (0+255),w,b
  2974  0003EE  6ED9               	movwf	fsr2l,c
  2975  0003F0  0E02               	movlw	high _rx_buffer
  2976  0003F2  0100               	movlb	0	; () banked
  2977  0003F4  21FB               	addwfc	(??_receiveData+1)& (0+255),w,b
  2978  0003F6  6EDA               	movwf	fsr2h,c
  2979  0003F8  50DF               	movf	indf2,w,c
  2980  0003FA  6E42               	movwf	_group+1,c
  2981                           
  2982                           ; BSR set to: 0
  2983                           ;FastTransfer.c: 152: receiveArrayAddress[(rx_buffer[r])] = group.integer;
  2984  0003FC  0E00               	movlw	low _rx_buffer
  2985  0003FE  0101               	movlb	1	; () banked
  2986  000400  25D8               	addwf	receiveData@r& (0+255),w,b
  2987  000402  6ED9               	movwf	fsr2l,c
  2988  000404  0E02               	movlw	high _rx_buffer
  2989  000406  0101               	movlb	1	; () banked
  2990  000408  21D9               	addwfc	(receiveData@r+1)& (0+255),w,b
  2991  00040A  6EDA               	movwf	fsr2h,c
  2992  00040C  50DF               	movf	indf2,w,c
  2993  00040E  0100               	movlb	0	; () banked
  2994  000410  6FFA               	movwf	??_receiveData& (0+255),b
  2995  000412  0100               	movlb	0	; () banked
  2996  000414  51FA               	movf	??_receiveData& (0+255),w,b
  2997  000416  0D02               	mullw	2
  2998  000418  50F3               	movf	prodl,w,c
  2999  00041A  0100               	movlb	0	; () banked
  3000  00041C  25A3               	addwf	_receiveArrayAddress& (0+255),w,b
  3001  00041E  6ED9               	movwf	fsr2l,c
  3002  000420  50F4               	movf	prodh,w,c
  3003  000422  0100               	movlb	0	; () banked
  3004  000424  21A4               	addwfc	(_receiveArrayAddress+1)& (0+255),w,b
  3005  000426  6EDA               	movwf	fsr2h,c
  3006  000428  C041  FFDE         	movff	_group,postinc2
  3007  00042C  C042  FFDD         	movff	_group+1,postdec2
  3008                           
  3009                           ;FastTransfer.c: 153: } else {
  3010  000430  D004               	goto	l4628
  3011  000432                     l4626:
  3012                           
  3013                           ;FastTransfer.c: 154: dataAdressErrorCounter++;
  3014  000432  0100               	movlb	0	; () banked
  3015  000434  4BA1               	infsnz	_dataAdressErrorCounter& (0+255),f,b
  3016  000436  2BA2               	incf	(_dataAdressErrorCounter+1)& (0+255),f,b
  3017  000438  D000               	goto	l4628
  3018  00043A                     l4628:
  3019                           
  3020                           ; BSR set to: 0
  3021  00043A  0E03               	movlw	3
  3022  00043C  0101               	movlb	1	; () banked
  3023  00043E  25D8               	addwf	receiveData@r& (0+255),w,b
  3024  000440  0101               	movlb	1	; () banked
  3025  000442  6FD8               	movwf	receiveData@r& (0+255),b
  3026  000444  0E00               	movlw	0
  3027  000446  0101               	movlb	1	; () banked
  3028  000448  21D9               	addwfc	(receiveData@r+1)& (0+255),w,b
  3029  00044A  0101               	movlb	1	; () banked
  3030  00044C  6FD9               	movwf	(receiveData@r+1)& (0+255),b
  3031  00044E  D000               	goto	l4630
  3032  000450                     l4630:
  3033                           
  3034                           ; BSR set to: 1
  3035  000450  503E               	movf	_rx_len,w,c
  3036  000452  0100               	movlb	0	; () banked
  3037  000454  6FFA               	movwf	??_receiveData& (0+255),b
  3038  000456  6BFB               	clrf	(??_receiveData+1)& (0+255),b
  3039  000458  0100               	movlb	0	; () banked
  3040  00045A  51FA               	movf	??_receiveData& (0+255),w,b
  3041  00045C  0101               	movlb	1	; () banked
  3042  00045E  5DD8               	subwf	receiveData@r& (0+255),w,b
  3043  000460  0101               	movlb	1	; () banked
  3044  000462  51D9               	movf	(receiveData@r+1)& (0+255),w,b
  3045  000464  0A80               	xorlw	128
  3046  000466  0100               	movlb	0	; () banked
  3047  000468  6FFC               	movwf	(??_receiveData+2)& (0+255),b
  3048  00046A  0100               	movlb	0	; () banked
  3049  00046C  51FB               	movf	(??_receiveData+1)& (0+255),w,b
  3050  00046E  0A80               	xorlw	128
  3051  000470  0100               	movlb	0	; () banked
  3052  000472  59FC               	subwfb	(??_receiveData+2)& (0+255),w,b
  3053  000474  A0D8               	btfss	status,0,c
  3054  000476  D78E               	goto	l4620
  3055                           
  3056                           ; BSR set to: 0
  3057                           ;FastTransfer.c: 155: }
  3058                           ;FastTransfer.c: 156: }
  3059                           ;FastTransfer.c: 159: if (AKNAKsend) {
  3060                           
  3061                           ; BSR set to: 0
  3062  000478  5035               	movf	_AKNAKsend,w,c
  3063  00047A  B4D8               	btfsc	status,2,c
  3064  00047C  D0BC               	goto	l4660
  3065                           
  3066                           ; BSR set to: 0
  3067                           ;FastTransfer.c: 160: unsigned char holder[3];
  3068                           ;FastTransfer.c: 161: holder[0] = 255;
  3069  00047E  0101               	movlb	1	; () banked
  3070  000480  69CE               	setf	receiveData@holder& (0+255),b
  3071                           
  3072                           ; BSR set to: 1
  3073                           ;FastTransfer.c: 162: holder[1] = 1;
  3074  000482  0E01               	movlw	1
  3075  000484  0101               	movlb	1	; () banked
  3076  000486  6FCF               	movwf	(receiveData@holder+1)& (0+255),b
  3077                           
  3078                           ; BSR set to: 1
  3079                           ;FastTransfer.c: 163: holder[2] = rx_buffer[rx_array_inx - 1];
  3080  000488  0EFF               	movlw	255
  3081  00048A  0100               	movlb	0	; () banked
  3082  00048C  6FFA               	movwf	??_receiveData& (0+255),b
  3083  00048E  0EFF               	movlw	255
  3084  000490  0100               	movlb	0	; () banked
  3085  000492  6FFB               	movwf	(??_receiveData+1)& (0+255),b
  3086  000494  503D               	movf	_rx_array_inx,w,c
  3087  000496  0100               	movlb	0	; () banked
  3088  000498  6FFC               	movwf	(??_receiveData+2)& (0+255),b
  3089  00049A  6BFD               	clrf	(??_receiveData+3)& (0+255),b
  3090  00049C  0100               	movlb	0	; () banked
  3091  00049E  51FA               	movf	??_receiveData& (0+255),w,b
  3092  0004A0  0100               	movlb	0	; () banked
  3093  0004A2  27FC               	addwf	(??_receiveData+2)& (0+255),f,b
  3094  0004A4  0100               	movlb	0	; () banked
  3095  0004A6  51FB               	movf	(??_receiveData+1)& (0+255),w,b
  3096  0004A8  0100               	movlb	0	; () banked
  3097  0004AA  23FD               	addwfc	(??_receiveData+3)& (0+255),f,b
  3098  0004AC  0E00               	movlw	low _rx_buffer
  3099  0004AE  0100               	movlb	0	; () banked
  3100  0004B0  25FC               	addwf	(??_receiveData+2)& (0+255),w,b
  3101  0004B2  6ED9               	movwf	fsr2l,c
  3102  0004B4  0E02               	movlw	high _rx_buffer
  3103  0004B6  0100               	movlb	0	; () banked
  3104  0004B8  21FD               	addwfc	(??_receiveData+3)& (0+255),w,b
  3105  0004BA  6EDA               	movwf	fsr2h,c
  3106  0004BC  50DF               	movf	indf2,w,c
  3107  0004BE  0101               	movlb	1	; () banked
  3108  0004C0  6FD0               	movwf	(receiveData@holder+2)& (0+255),b
  3109                           
  3110                           ; BSR set to: 1
  3111                           ;FastTransfer.c: 164: unsigned char crcHolder = CRC8(holder, 3);
  3112  0004C2  0ECE               	movlw	low receiveData@holder
  3113  0004C4  6E1B               	movwf	CRC8@data,c
  3114  0004C6  0E01               	movlw	high receiveData@holder
  3115  0004C8  6E1C               	movwf	CRC8@data+1,c
  3116  0004CA  0E03               	movlw	3
  3117  0004CC  6E1D               	movwf	CRC8@len,c
  3118  0004CE  EC31  F00E         	call	_CRC8	;wreg free
  3119  0004D2  0101               	movlb	1	; () banked
  3120  0004D4  6FD4               	movwf	receiveData@crcHolder& (0+255),b
  3121                           
  3122                           ; BSR set to: 1
  3123                           ;FastTransfer.c: 165: serial_write(0x06);
  3124  0004D6  D801               	call	u5218
  3125  0004D8  D00B               	goto	l4644
  3126  0004DA                     u5218:
  3127  0004DA  0005               	push	
  3128  0004DC  6EFA               	movwf	pclath,c
  3129  0004DE  5031               	movf	_serial_write,w,c
  3130  0004E0  6EFD               	movwf	tosl,c
  3131  0004E2  5032               	movf	_serial_write+1,w,c
  3132  0004E4  6EFE               	movwf	tosh,c
  3133  0004E6  50F8               	movf	tblptru,w,c
  3134  0004E8  6EFF               	movwf	tosu,c
  3135  0004EA  50FA               	movf	pclath,w,c
  3136  0004EC  0E06               	movlw	6
  3137  0004EE  0012               	return		;indir
  3138  0004F0                     l4644:
  3139                           
  3140                           ;FastTransfer.c: 166: serial_write(0x85);
  3141  0004F0  D801               	call	u5228
  3142  0004F2  D00B               	goto	l4646
  3143  0004F4                     u5228:
  3144  0004F4  0005               	push	
  3145  0004F6  6EFA               	movwf	pclath,c
  3146  0004F8  5031               	movf	_serial_write,w,c
  3147  0004FA  6EFD               	movwf	tosl,c
  3148  0004FC  5032               	movf	_serial_write+1,w,c
  3149  0004FE  6EFE               	movwf	tosh,c
  3150  000500  50F8               	movf	tblptru,w,c
  3151  000502  6EFF               	movwf	tosu,c
  3152  000504  50FA               	movf	pclath,w,c
  3153  000506  0E85               	movlw	133
  3154  000508  0012               	return		;indir
  3155  00050A                     l4646:
  3156                           
  3157                           ;FastTransfer.c: 167: serial_write(returnAddress);
  3158  00050A  D801               	call	u5238
  3159  00050C  D00B               	goto	l4648
  3160  00050E                     u5238:
  3161  00050E  0005               	push	
  3162  000510  6EFA               	movwf	pclath,c
  3163  000512  5031               	movf	_serial_write,w,c
  3164  000514  6EFD               	movwf	tosl,c
  3165  000516  5032               	movf	_serial_write+1,w,c
  3166  000518  6EFE               	movwf	tosh,c
  3167  00051A  50F8               	movf	tblptru,w,c
  3168  00051C  6EFF               	movwf	tosu,c
  3169  00051E  50FA               	movf	pclath,w,c
  3170  000520  503B               	movf	_returnAddress,w,c
  3171  000522  0012               	return		;indir
  3172  000524                     l4648:
  3173                           
  3174                           ;FastTransfer.c: 168: serial_write(moduleAddress);
  3175  000524  D801               	call	u5248
  3176  000526  D00B               	goto	l4650
  3177  000528                     u5248:
  3178  000528  0005               	push	
  3179  00052A  6EFA               	movwf	pclath,c
  3180  00052C  5031               	movf	_serial_write,w,c
  3181  00052E  6EFD               	movwf	tosl,c
  3182  000530  5032               	movf	_serial_write+1,w,c
  3183  000532  6EFE               	movwf	tosh,c
  3184  000534  50F8               	movf	tblptru,w,c
  3185  000536  6EFF               	movwf	tosu,c
  3186  000538  50FA               	movf	pclath,w,c
  3187  00053A  503A               	movf	_moduleAddress,w,c
  3188  00053C  0012               	return		;indir
  3189  00053E                     l4650:
  3190                           
  3191                           ;FastTransfer.c: 169: serial_write(3);
  3192  00053E  D801               	call	u5258
  3193  000540  D00B               	goto	l4652
  3194  000542                     u5258:
  3195  000542  0005               	push	
  3196  000544  6EFA               	movwf	pclath,c
  3197  000546  5031               	movf	_serial_write,w,c
  3198  000548  6EFD               	movwf	tosl,c
  3199  00054A  5032               	movf	_serial_write+1,w,c
  3200  00054C  6EFE               	movwf	tosh,c
  3201  00054E  50F8               	movf	tblptru,w,c
  3202  000550  6EFF               	movwf	tosu,c
  3203  000552  50FA               	movf	pclath,w,c
  3204  000554  0E03               	movlw	3
  3205  000556  0012               	return		;indir
  3206  000558                     l4652:
  3207                           
  3208                           ;FastTransfer.c: 170: serial_write(255);
  3209  000558  D801               	call	u5268
  3210  00055A  D00B               	goto	l4654
  3211  00055C                     u5268:
  3212  00055C  0005               	push	
  3213  00055E  6EFA               	movwf	pclath,c
  3214  000560  5031               	movf	_serial_write,w,c
  3215  000562  6EFD               	movwf	tosl,c
  3216  000564  5032               	movf	_serial_write+1,w,c
  3217  000566  6EFE               	movwf	tosh,c
  3218  000568  50F8               	movf	tblptru,w,c
  3219  00056A  6EFF               	movwf	tosu,c
  3220  00056C  50FA               	movf	pclath,w,c
  3221  00056E  0EFF               	movlw	255
  3222  000570  0012               	return		;indir
  3223  000572                     l4654:
  3224                           
  3225                           ;FastTransfer.c: 171: serial_write(1);
  3226  000572  D801               	call	u5278
  3227  000574  D00B               	goto	l4656
  3228  000576                     u5278:
  3229  000576  0005               	push	
  3230  000578  6EFA               	movwf	pclath,c
  3231  00057A  5031               	movf	_serial_write,w,c
  3232  00057C  6EFD               	movwf	tosl,c
  3233  00057E  5032               	movf	_serial_write+1,w,c
  3234  000580  6EFE               	movwf	tosh,c
  3235  000582  50F8               	movf	tblptru,w,c
  3236  000584  6EFF               	movwf	tosu,c
  3237  000586  50FA               	movf	pclath,w,c
  3238  000588  0E01               	movlw	1
  3239  00058A  0012               	return		;indir
  3240  00058C                     l4656:
  3241                           
  3242                           ;FastTransfer.c: 172: serial_write(rx_buffer[rx_array_inx - 1]);
  3243  00058C  D801               	call	u5288
  3244  00058E  D025               	goto	l4658
  3245  000590                     u5288:
  3246  000590  0005               	push	
  3247  000592  6EFA               	movwf	pclath,c
  3248  000594  5031               	movf	_serial_write,w,c
  3249  000596  6EFD               	movwf	tosl,c
  3250  000598  5032               	movf	_serial_write+1,w,c
  3251  00059A  6EFE               	movwf	tosh,c
  3252  00059C  50F8               	movf	tblptru,w,c
  3253  00059E  6EFF               	movwf	tosu,c
  3254  0005A0  50FA               	movf	pclath,w,c
  3255  0005A2  0EFF               	movlw	255
  3256  0005A4  0100               	movlb	0	; () banked
  3257  0005A6  6FFA               	movwf	??_receiveData& (0+255),b
  3258  0005A8  0EFF               	movlw	255
  3259  0005AA  0100               	movlb	0	; () banked
  3260  0005AC  6FFB               	movwf	(??_receiveData+1)& (0+255),b
  3261  0005AE  503D               	movf	_rx_array_inx,w,c
  3262  0005B0  0100               	movlb	0	; () banked
  3263  0005B2  6FFC               	movwf	(??_receiveData+2)& (0+255),b
  3264  0005B4  6BFD               	clrf	(??_receiveData+3)& (0+255),b
  3265  0005B6  0100               	movlb	0	; () banked
  3266  0005B8  51FA               	movf	??_receiveData& (0+255),w,b
  3267  0005BA  0100               	movlb	0	; () banked
  3268  0005BC  27FC               	addwf	(??_receiveData+2)& (0+255),f,b
  3269  0005BE  0100               	movlb	0	; () banked
  3270  0005C0  51FB               	movf	(??_receiveData+1)& (0+255),w,b
  3271  0005C2  0100               	movlb	0	; () banked
  3272  0005C4  23FD               	addwfc	(??_receiveData+3)& (0+255),f,b
  3273  0005C6  0E00               	movlw	low _rx_buffer
  3274  0005C8  0100               	movlb	0	; () banked
  3275  0005CA  25FC               	addwf	(??_receiveData+2)& (0+255),w,b
  3276  0005CC  6ED9               	movwf	fsr2l,c
  3277  0005CE  0E02               	movlw	high _rx_buffer
  3278  0005D0  0100               	movlb	0	; () banked
  3279  0005D2  21FD               	addwfc	(??_receiveData+3)& (0+255),w,b
  3280  0005D4  6EDA               	movwf	fsr2h,c
  3281  0005D6  50DF               	movf	indf2,w,c
  3282  0005D8  0012               	return		;indir
  3283  0005DA                     l4658:
  3284                           
  3285                           ;FastTransfer.c: 173: serial_write(crcHolder);
  3286  0005DA  D801               	call	u5298
  3287  0005DC  D00C               	goto	l4660
  3288  0005DE                     u5298:
  3289  0005DE  0005               	push	
  3290  0005E0  6EFA               	movwf	pclath,c
  3291  0005E2  5031               	movf	_serial_write,w,c
  3292  0005E4  6EFD               	movwf	tosl,c
  3293  0005E6  5032               	movf	_serial_write+1,w,c
  3294  0005E8  6EFE               	movwf	tosh,c
  3295  0005EA  50F8               	movf	tblptru,w,c
  3296  0005EC  6EFF               	movwf	tosu,c
  3297  0005EE  50FA               	movf	pclath,w,c
  3298  0005F0  0101               	movlb	1	; () banked
  3299  0005F2  51D4               	movf	receiveData@crcHolder& (0+255),w,b
  3300  0005F4  0012               	return		;indir
  3301  0005F6                     l4660:
  3302                           
  3303                           ;FastTransfer.c: 174: }
  3304                           ;FastTransfer.c: 178: rx_len = 0;
  3305  0005F6  0E00               	movlw	0
  3306  0005F8  6E3E               	movwf	_rx_len,c
  3307                           
  3308                           ;FastTransfer.c: 179: rx_array_inx = 0;
  3309  0005FA  0E00               	movlw	0
  3310  0005FC  6E3D               	movwf	_rx_array_inx,c
  3311                           
  3312                           ;FastTransfer.c: 180: return 1;
  3313  0005FE  0E01               	movlw	1
  3314  000600  0012               	return	
  3315                           
  3316                           ;FastTransfer.c: 181: } else {
  3317  000602  D0C9               	goto	l4708
  3318  000604                     l4670:
  3319                           
  3320                           ;FastTransfer.c: 182: crcErrorCounter++;
  3321  000604  0100               	movlb	0	; () banked
  3322  000606  4B9F               	infsnz	_crcErrorCounter& (0+255),f,b
  3323  000608  2BA0               	incf	(_crcErrorCounter+1)& (0+255),f,b
  3324                           
  3325                           ; BSR set to: 0
  3326                           ;FastTransfer.c: 184: if (AKNAKsend) {
  3327  00060A  5035               	movf	_AKNAKsend,w,c
  3328  00060C  B4D8               	btfsc	status,2,c
  3329  00060E  D0BC               	goto	l4700
  3330                           
  3331                           ; BSR set to: 0
  3332                           ;FastTransfer.c: 185: unsigned char holder[3];
  3333                           ;FastTransfer.c: 186: holder[0] = 255;
  3334  000610  0101               	movlb	1	; () banked
  3335  000612  69D1               	setf	receiveData@holder_2178& (0+255),b
  3336                           
  3337                           ; BSR set to: 1
  3338                           ;FastTransfer.c: 187: holder[1] = 2;
  3339  000614  0E02               	movlw	2
  3340  000616  0101               	movlb	1	; () banked
  3341  000618  6FD2               	movwf	(receiveData@holder_2178+1)& (0+255),b
  3342                           
  3343                           ; BSR set to: 1
  3344                           ;FastTransfer.c: 188: holder[2] = rx_buffer[rx_array_inx - 1];
  3345  00061A  0EFF               	movlw	255
  3346  00061C  0100               	movlb	0	; () banked
  3347  00061E  6FFA               	movwf	??_receiveData& (0+255),b
  3348  000620  0EFF               	movlw	255
  3349  000622  0100               	movlb	0	; () banked
  3350  000624  6FFB               	movwf	(??_receiveData+1)& (0+255),b
  3351  000626  503D               	movf	_rx_array_inx,w,c
  3352  000628  0100               	movlb	0	; () banked
  3353  00062A  6FFC               	movwf	(??_receiveData+2)& (0+255),b
  3354  00062C  6BFD               	clrf	(??_receiveData+3)& (0+255),b
  3355  00062E  0100               	movlb	0	; () banked
  3356  000630  51FA               	movf	??_receiveData& (0+255),w,b
  3357  000632  0100               	movlb	0	; () banked
  3358  000634  27FC               	addwf	(??_receiveData+2)& (0+255),f,b
  3359  000636  0100               	movlb	0	; () banked
  3360  000638  51FB               	movf	(??_receiveData+1)& (0+255),w,b
  3361  00063A  0100               	movlb	0	; () banked
  3362  00063C  23FD               	addwfc	(??_receiveData+3)& (0+255),f,b
  3363  00063E  0E00               	movlw	low _rx_buffer
  3364  000640  0100               	movlb	0	; () banked
  3365  000642  25FC               	addwf	(??_receiveData+2)& (0+255),w,b
  3366  000644  6ED9               	movwf	fsr2l,c
  3367  000646  0E02               	movlw	high _rx_buffer
  3368  000648  0100               	movlb	0	; () banked
  3369  00064A  21FD               	addwfc	(??_receiveData+3)& (0+255),w,b
  3370  00064C  6EDA               	movwf	fsr2h,c
  3371  00064E  50DF               	movf	indf2,w,c
  3372  000650  0101               	movlb	1	; () banked
  3373  000652  6FD3               	movwf	(receiveData@holder_2178+2)& (0+255),b
  3374                           
  3375                           ; BSR set to: 1
  3376                           ;FastTransfer.c: 189: unsigned char crcHolder = CRC8(holder, 3);
  3377  000654  0ED1               	movlw	low receiveData@holder_2178
  3378  000656  6E1B               	movwf	CRC8@data,c
  3379  000658  0E01               	movlw	high receiveData@holder_2178
  3380  00065A  6E1C               	movwf	CRC8@data+1,c
  3381  00065C  0E03               	movlw	3
  3382  00065E  6E1D               	movwf	CRC8@len,c
  3383  000660  EC31  F00E         	call	_CRC8
  3384  000664  0101               	movlb	1	; () banked
  3385  000666  6FD5               	movwf	receiveData@crcHolder_2179& (0+255),b
  3386                           
  3387                           ; BSR set to: 1
  3388                           ;FastTransfer.c: 190: serial_write(0x06);
  3389  000668  D801               	call	u5318
  3390  00066A  D00B               	goto	l4684
  3391  00066C                     u5318:
  3392  00066C  0005               	push	
  3393  00066E  6EFA               	movwf	pclath,c
  3394  000670  5031               	movf	_serial_write,w,c
  3395  000672  6EFD               	movwf	tosl,c
  3396  000674  5032               	movf	_serial_write+1,w,c
  3397  000676  6EFE               	movwf	tosh,c
  3398  000678  50F8               	movf	tblptru,w,c
  3399  00067A  6EFF               	movwf	tosu,c
  3400  00067C  50FA               	movf	pclath,w,c
  3401  00067E  0E06               	movlw	6
  3402  000680  0012               	return		;indir
  3403  000682                     l4684:
  3404                           
  3405                           ;FastTransfer.c: 191: serial_write(0x85);
  3406  000682  D801               	call	u5328
  3407  000684  D00B               	goto	l4686
  3408  000686                     u5328:
  3409  000686  0005               	push	
  3410  000688  6EFA               	movwf	pclath,c
  3411  00068A  5031               	movf	_serial_write,w,c
  3412  00068C  6EFD               	movwf	tosl,c
  3413  00068E  5032               	movf	_serial_write+1,w,c
  3414  000690  6EFE               	movwf	tosh,c
  3415  000692  50F8               	movf	tblptru,w,c
  3416  000694  6EFF               	movwf	tosu,c
  3417  000696  50FA               	movf	pclath,w,c
  3418  000698  0E85               	movlw	133
  3419  00069A  0012               	return		;indir
  3420  00069C                     l4686:
  3421                           
  3422                           ;FastTransfer.c: 192: serial_write(returnAddress);
  3423  00069C  D801               	call	u5338
  3424  00069E  D00B               	goto	l4688
  3425  0006A0                     u5338:
  3426  0006A0  0005               	push	
  3427  0006A2  6EFA               	movwf	pclath,c
  3428  0006A4  5031               	movf	_serial_write,w,c
  3429  0006A6  6EFD               	movwf	tosl,c
  3430  0006A8  5032               	movf	_serial_write+1,w,c
  3431  0006AA  6EFE               	movwf	tosh,c
  3432  0006AC  50F8               	movf	tblptru,w,c
  3433  0006AE  6EFF               	movwf	tosu,c
  3434  0006B0  50FA               	movf	pclath,w,c
  3435  0006B2  503B               	movf	_returnAddress,w,c
  3436  0006B4  0012               	return		;indir
  3437  0006B6                     l4688:
  3438                           
  3439                           ;FastTransfer.c: 193: serial_write(moduleAddress);
  3440  0006B6  D801               	call	u5348
  3441  0006B8  D00B               	goto	l4690
  3442  0006BA                     u5348:
  3443  0006BA  0005               	push	
  3444  0006BC  6EFA               	movwf	pclath,c
  3445  0006BE  5031               	movf	_serial_write,w,c
  3446  0006C0  6EFD               	movwf	tosl,c
  3447  0006C2  5032               	movf	_serial_write+1,w,c
  3448  0006C4  6EFE               	movwf	tosh,c
  3449  0006C6  50F8               	movf	tblptru,w,c
  3450  0006C8  6EFF               	movwf	tosu,c
  3451  0006CA  50FA               	movf	pclath,w,c
  3452  0006CC  503A               	movf	_moduleAddress,w,c
  3453  0006CE  0012               	return		;indir
  3454  0006D0                     l4690:
  3455                           
  3456                           ;FastTransfer.c: 194: serial_write(3);
  3457  0006D0  D801               	call	u5358
  3458  0006D2  D00B               	goto	l4692
  3459  0006D4                     u5358:
  3460  0006D4  0005               	push	
  3461  0006D6  6EFA               	movwf	pclath,c
  3462  0006D8  5031               	movf	_serial_write,w,c
  3463  0006DA  6EFD               	movwf	tosl,c
  3464  0006DC  5032               	movf	_serial_write+1,w,c
  3465  0006DE  6EFE               	movwf	tosh,c
  3466  0006E0  50F8               	movf	tblptru,w,c
  3467  0006E2  6EFF               	movwf	tosu,c
  3468  0006E4  50FA               	movf	pclath,w,c
  3469  0006E6  0E03               	movlw	3
  3470  0006E8  0012               	return		;indir
  3471  0006EA                     l4692:
  3472                           
  3473                           ;FastTransfer.c: 195: serial_write(255);
  3474  0006EA  D801               	call	u5368
  3475  0006EC  D00B               	goto	l4694
  3476  0006EE                     u5368:
  3477  0006EE  0005               	push	
  3478  0006F0  6EFA               	movwf	pclath,c
  3479  0006F2  5031               	movf	_serial_write,w,c
  3480  0006F4  6EFD               	movwf	tosl,c
  3481  0006F6  5032               	movf	_serial_write+1,w,c
  3482  0006F8  6EFE               	movwf	tosh,c
  3483  0006FA  50F8               	movf	tblptru,w,c
  3484  0006FC  6EFF               	movwf	tosu,c
  3485  0006FE  50FA               	movf	pclath,w,c
  3486  000700  0EFF               	movlw	255
  3487  000702  0012               	return		;indir
  3488  000704                     l4694:
  3489                           
  3490                           ;FastTransfer.c: 196: serial_write(2);
  3491  000704  D801               	call	u5378
  3492  000706  D00B               	goto	l4696
  3493  000708                     u5378:
  3494  000708  0005               	push	
  3495  00070A  6EFA               	movwf	pclath,c
  3496  00070C  5031               	movf	_serial_write,w,c
  3497  00070E  6EFD               	movwf	tosl,c
  3498  000710  5032               	movf	_serial_write+1,w,c
  3499  000712  6EFE               	movwf	tosh,c
  3500  000714  50F8               	movf	tblptru,w,c
  3501  000716  6EFF               	movwf	tosu,c
  3502  000718  50FA               	movf	pclath,w,c
  3503  00071A  0E02               	movlw	2
  3504  00071C  0012               	return		;indir
  3505  00071E                     l4696:
  3506                           
  3507                           ;FastTransfer.c: 197: serial_write(rx_buffer[rx_array_inx - 1]);
  3508  00071E  D801               	call	u5388
  3509  000720  D025               	goto	l4698
  3510  000722                     u5388:
  3511  000722  0005               	push	
  3512  000724  6EFA               	movwf	pclath,c
  3513  000726  5031               	movf	_serial_write,w,c
  3514  000728  6EFD               	movwf	tosl,c
  3515  00072A  5032               	movf	_serial_write+1,w,c
  3516  00072C  6EFE               	movwf	tosh,c
  3517  00072E  50F8               	movf	tblptru,w,c
  3518  000730  6EFF               	movwf	tosu,c
  3519  000732  50FA               	movf	pclath,w,c
  3520  000734  0EFF               	movlw	255
  3521  000736  0100               	movlb	0	; () banked
  3522  000738  6FFA               	movwf	??_receiveData& (0+255),b
  3523  00073A  0EFF               	movlw	255
  3524  00073C  0100               	movlb	0	; () banked
  3525  00073E  6FFB               	movwf	(??_receiveData+1)& (0+255),b
  3526  000740  503D               	movf	_rx_array_inx,w,c
  3527  000742  0100               	movlb	0	; () banked
  3528  000744  6FFC               	movwf	(??_receiveData+2)& (0+255),b
  3529  000746  6BFD               	clrf	(??_receiveData+3)& (0+255),b
  3530  000748  0100               	movlb	0	; () banked
  3531  00074A  51FA               	movf	??_receiveData& (0+255),w,b
  3532  00074C  0100               	movlb	0	; () banked
  3533  00074E  27FC               	addwf	(??_receiveData+2)& (0+255),f,b
  3534  000750  0100               	movlb	0	; () banked
  3535  000752  51FB               	movf	(??_receiveData+1)& (0+255),w,b
  3536  000754  0100               	movlb	0	; () banked
  3537  000756  23FD               	addwfc	(??_receiveData+3)& (0+255),f,b
  3538  000758  0E00               	movlw	low _rx_buffer
  3539  00075A  0100               	movlb	0	; () banked
  3540  00075C  25FC               	addwf	(??_receiveData+2)& (0+255),w,b
  3541  00075E  6ED9               	movwf	fsr2l,c
  3542  000760  0E02               	movlw	high _rx_buffer
  3543  000762  0100               	movlb	0	; () banked
  3544  000764  21FD               	addwfc	(??_receiveData+3)& (0+255),w,b
  3545  000766  6EDA               	movwf	fsr2h,c
  3546  000768  50DF               	movf	indf2,w,c
  3547  00076A  0012               	return		;indir
  3548  00076C                     l4698:
  3549                           
  3550                           ;FastTransfer.c: 198: serial_write(crcHolder);
  3551  00076C  D801               	call	u5398
  3552  00076E  D00C               	goto	l4700
  3553  000770                     u5398:
  3554  000770  0005               	push	
  3555  000772  6EFA               	movwf	pclath,c
  3556  000774  5031               	movf	_serial_write,w,c
  3557  000776  6EFD               	movwf	tosl,c
  3558  000778  5032               	movf	_serial_write+1,w,c
  3559  00077A  6EFE               	movwf	tosh,c
  3560  00077C  50F8               	movf	tblptru,w,c
  3561  00077E  6EFF               	movwf	tosu,c
  3562  000780  50FA               	movf	pclath,w,c
  3563  000782  0101               	movlb	1	; () banked
  3564  000784  51D5               	movf	receiveData@crcHolder_2179& (0+255),w,b
  3565  000786  0012               	return		;indir
  3566  000788                     l4700:
  3567                           
  3568                           ;FastTransfer.c: 199: }
  3569                           ;FastTransfer.c: 202: rx_len = 0;
  3570  000788  0E00               	movlw	0
  3571  00078A  6E3E               	movwf	_rx_len,c
  3572                           
  3573                           ;FastTransfer.c: 203: rx_array_inx = 0;
  3574  00078C  0E00               	movlw	0
  3575  00078E  6E3D               	movwf	_rx_array_inx,c
  3576                           
  3577                           ;FastTransfer.c: 204: return 0;
  3578  000790  0E00               	movlw	0
  3579  000792  0012               	return	
  3580  000794  D000               	goto	l4708
  3581  000796                     l4708:
  3582                           
  3583                           ;FastTransfer.c: 205: }
  3584                           ;FastTransfer.c: 206: }
  3585                           ;FastTransfer.c: 207: }
  3586                           ;FastTransfer.c: 210: return 0;
  3587  000796  0E00               	movlw	0
  3588  000798  0012               	return	
  3589  00079A  0012               	return		;funcret
  3590  00079C                     __end_of_receiveData:
  3591                           	opt stack 0
  3592                           tosu	equ	0xFFF
  3593                           tosh	equ	0xFFE
  3594                           tosl	equ	0xFFD
  3595                           pclath	equ	0xFFA
  3596                           tblptru	equ	0xFF8
  3597                           tblptrh	equ	0xFF7
  3598                           tblptrl	equ	0xFF6
  3599                           tablat	equ	0xFF5
  3600                           prodh	equ	0xFF4
  3601                           prodl	equ	0xFF3
  3602                           intcon	equ	0xFF2
  3603                           postinc0	equ	0xFEE
  3604                           wreg	equ	0xFE8
  3605                           indf2	equ	0xFDF
  3606                           postinc2	equ	0xFDE
  3607                           postdec2	equ	0xFDD
  3608                           plusw2	equ	0xFDB
  3609                           fsr2h	equ	0xFDA
  3610                           fsr2l	equ	0xFD9
  3611                           status	equ	0xFD8
  3612                           
  3613 ;; *************** function _Send_put *****************
  3614 ;; Defined at:
  3615 ;;		line 132 in file "UART.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  _data           1    wreg     unsigned char 
  3618 ;; Auto vars:     Size  Location     Type
  3619 ;;  _data           1   37[COMRAM] unsigned char 
  3620 ;; Return value:  Size  Location     Type
  3621 ;;		None               void
  3622 ;; Registers used:
  3623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3629 ;;      Params:         0       0       0       0       0       0       0
  3630 ;;      Locals:         1       0       0       0       0       0       0
  3631 ;;      Temps:          0       0       0       0       0       0       0
  3632 ;;      Totals:         1       0       0       0       0       0       0
  3633 ;;Total ram usage:        1 bytes
  3634 ;; Hardware stack levels used:    1
  3635 ;; Hardware stack levels required when called:    6
  3636 ;; This function calls:
  3637 ;;		_UART_buff_get
  3638 ;;		_UART_buff_put
  3639 ;; This function is called by:
  3640 ;;		_SYSTEM_Initialize
  3641 ;;		_putch
  3642 ;;		_sendData
  3643 ;;		_receiveData
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           	psect	text13
  3648  001F32                     __ptext13:
  3649                           	opt stack 0
  3650  001F32                     _Send_put:
  3651                           	opt stack 21
  3652                           
  3653                           ;incstack = 0
  3654                           ;Send_put@_data stored from wreg
  3655  001F32  6E26               	movwf	Send_put@_data,c
  3656                           
  3657                           ;UART.c: 133: UART_buff_put(&output_buffer, _data);
  3658  001F34  0E00               	movlw	low _output_buffer
  3659  001F36  6E21               	movwf	UART_buff_put@_this,c
  3660  001F38  0E04               	movlw	high _output_buffer
  3661  001F3A  6E22               	movwf	UART_buff_put@_this+1,c
  3662  001F3C  C026  F023         	movff	Send_put@_data,UART_buff_put@c
  3663  001F40  EC2C  F007         	call	_UART_buff_put
  3664                           
  3665                           ;UART.c: 134: if (Transmit_stall == 1) {
  3666  001F44  0445               	decf	_Transmit_stall,w,c
  3667  001F46  A4D8               	btfss	status,2,c
  3668  001F48  0012               	return	
  3669                           
  3670                           ;UART.c: 135: Transmit_stall = 0;
  3671  001F4A  0E00               	movlw	0
  3672  001F4C  6E45               	movwf	_Transmit_stall,c
  3673                           
  3674                           ;UART.c: 136: TXREG1 = UART_buff_get(&output_buffer);
  3675  001F4E  0E00               	movlw	low _output_buffer
  3676  001F50  6E21               	movwf	UART_buff_get@_this,c
  3677  001F52  0E04               	movlw	high _output_buffer
  3678  001F54  6E22               	movwf	UART_buff_get@_this+1,c
  3679  001F56  ECD5  F00B         	call	_UART_buff_get	;wreg free
  3680  001F5A  6EAD               	movwf	4013,c	;volatile
  3681                           
  3682                           ;UART.c: 137: PIE1bits.TX1IE = 1;
  3683  001F5C  889D               	bsf	3997,4,c	;volatile
  3684  001F5E  0012               	return	
  3685  001F60  0012               	return		;funcret
  3686  001F62                     __end_of_Send_put:
  3687                           	opt stack 0
  3688                           tosu	equ	0xFFF
  3689                           tosh	equ	0xFFE
  3690                           tosl	equ	0xFFD
  3691                           pclath	equ	0xFFA
  3692                           tblptru	equ	0xFF8
  3693                           tblptrh	equ	0xFF7
  3694                           tblptrl	equ	0xFF6
  3695                           tablat	equ	0xFF5
  3696                           prodh	equ	0xFF4
  3697                           prodl	equ	0xFF3
  3698                           intcon	equ	0xFF2
  3699                           postinc0	equ	0xFEE
  3700                           wreg	equ	0xFE8
  3701                           indf2	equ	0xFDF
  3702                           postinc2	equ	0xFDE
  3703                           postdec2	equ	0xFDD
  3704                           plusw2	equ	0xFDB
  3705                           fsr2h	equ	0xFDA
  3706                           fsr2l	equ	0xFD9
  3707                           status	equ	0xFD8
  3708                           
  3709 ;; *************** function _UART_buff_put *****************
  3710 ;; Defined at:
  3711 ;;		line 70 in file "UART.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  3714 ;;		 -> output_buffer(206), input_buffer(206), 
  3715 ;;  c               1   34[COMRAM] const unsigned char 
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;		None
  3718 ;; Return value:  Size  Location     Type
  3719 ;;		None               void
  3720 ;; Registers used:
  3721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3727 ;;      Params:         3       0       0       0       0       0       0
  3728 ;;      Locals:         0       0       0       0       0       0       0
  3729 ;;      Temps:          2       0       0       0       0       0       0
  3730 ;;      Totals:         5       0       0       0       0       0       0
  3731 ;;Total ram usage:        5 bytes
  3732 ;; Hardware stack levels used:    1
  3733 ;; Hardware stack levels required when called:    5
  3734 ;; This function calls:
  3735 ;;		_UART_buff_modulo_inc
  3736 ;; This function is called by:
  3737 ;;		_Send_put
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           	psect	text14
  3742  000E58                     __ptext14:
  3743                           	opt stack 0
  3744  000E58                     _UART_buff_put:
  3745                           	opt stack 21
  3746                           
  3747                           ;UART.c: 71: if (_this->count < 200) {
  3748                           
  3749                           ;incstack = 0
  3750  000E58  EE20 F0CC          	lfsr	2,204
  3751  000E5C  5021               	movf	UART_buff_put@_this,w,c
  3752  000E5E  26D9               	addwf	fsr2l,f,c
  3753  000E60  5022               	movf	UART_buff_put@_this+1,w,c
  3754  000E62  22DA               	addwfc	fsr2h,f,c
  3755  000E64  0E01               	movlw	1
  3756  000E66  BEDB               	btfsc	plusw2,7,c
  3757  000E68  D007               	goto	l4062
  3758  000E6A  0E01               	movlw	1
  3759  000E6C  50DB               	movf	plusw2,w,c
  3760  000E6E  E13A               	bnz	l4068
  3761  000E70  0EC8               	movlw	200
  3762  000E72  5CDE               	subwf	postinc2,w,c
  3763  000E74  B0D8               	btfsc	status,0,c
  3764  000E76  D036               	goto	l4068
  3765  000E78                     l4062:
  3766                           
  3767                           ;UART.c: 72: _this->buf[_this->head] = c;
  3768  000E78  EE20 F0C8          	lfsr	2,200
  3769  000E7C  5021               	movf	UART_buff_put@_this,w,c
  3770  000E7E  26D9               	addwf	fsr2l,f,c
  3771  000E80  5022               	movf	UART_buff_put@_this+1,w,c
  3772  000E82  22DA               	addwfc	fsr2h,f,c
  3773  000E84  CFDE F024          	movff	postinc2,??_UART_buff_put
  3774  000E88  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  3775  000E8C  5024               	movf	??_UART_buff_put,w,c
  3776  000E8E  2421               	addwf	UART_buff_put@_this,w,c
  3777  000E90  6ED9               	movwf	fsr2l,c
  3778  000E92  5025               	movf	??_UART_buff_put+1,w,c
  3779  000E94  2022               	addwfc	UART_buff_put@_this+1,w,c
  3780  000E96  6EDA               	movwf	fsr2h,c
  3781  000E98  C023  FFDF         	movff	UART_buff_put@c,indf2
  3782                           
  3783                           ;UART.c: 73: _this->head = UART_buff_modulo_inc(_this->head, 200);
  3784  000E9C  EE20 F0C8          	lfsr	2,200
  3785  000EA0  5021               	movf	UART_buff_put@_this,w,c
  3786  000EA2  26D9               	addwf	fsr2l,f,c
  3787  000EA4  5022               	movf	UART_buff_put@_this+1,w,c
  3788  000EA6  22DA               	addwfc	fsr2h,f,c
  3789  000EA8  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  3790  000EAC  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  3791  000EB0  0E00               	movlw	0
  3792  000EB2  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  3793  000EB4  0EC8               	movlw	200
  3794  000EB6  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  3795  000EB8  ECC8  F00F         	call	_UART_buff_modulo_inc	;wreg free
  3796  000EBC  EE20 F0C8          	lfsr	2,200
  3797  000EC0  5021               	movf	UART_buff_put@_this,w,c
  3798  000EC2  26D9               	addwf	fsr2l,f,c
  3799  000EC4  5022               	movf	UART_buff_put@_this+1,w,c
  3800  000EC6  22DA               	addwfc	fsr2h,f,c
  3801  000EC8  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  3802  000ECC  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  3803                           
  3804                           ;UART.c: 74: ++_this->count;
  3805  000ED0  EE20 F0CC          	lfsr	2,204
  3806  000ED4  5021               	movf	UART_buff_put@_this,w,c
  3807  000ED6  26D9               	addwf	fsr2l,f,c
  3808  000ED8  5022               	movf	UART_buff_put@_this+1,w,c
  3809  000EDA  22DA               	addwfc	fsr2h,f,c
  3810  000EDC  2ADE               	incf	postinc2,f,c
  3811  000EDE  0E00               	movlw	0
  3812  000EE0  22DD               	addwfc	postdec2,f,c
  3813                           
  3814                           ;UART.c: 75: } else {
  3815  000EE2  0012               	return	
  3816  000EE4                     l4068:
  3817                           
  3818                           ;UART.c: 76: _this->buf[_this->head] = c;
  3819  000EE4  EE20 F0C8          	lfsr	2,200
  3820  000EE8  5021               	movf	UART_buff_put@_this,w,c
  3821  000EEA  26D9               	addwf	fsr2l,f,c
  3822  000EEC  5022               	movf	UART_buff_put@_this+1,w,c
  3823  000EEE  22DA               	addwfc	fsr2h,f,c
  3824  000EF0  CFDE F024          	movff	postinc2,??_UART_buff_put
  3825  000EF4  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  3826  000EF8  5024               	movf	??_UART_buff_put,w,c
  3827  000EFA  2421               	addwf	UART_buff_put@_this,w,c
  3828  000EFC  6ED9               	movwf	fsr2l,c
  3829  000EFE  5025               	movf	??_UART_buff_put+1,w,c
  3830  000F00  2022               	addwfc	UART_buff_put@_this+1,w,c
  3831  000F02  6EDA               	movwf	fsr2h,c
  3832  000F04  C023  FFDF         	movff	UART_buff_put@c,indf2
  3833                           
  3834                           ;UART.c: 77: _this->head = UART_buff_modulo_inc(_this->head, 200);
  3835  000F08  EE20 F0C8          	lfsr	2,200
  3836  000F0C  5021               	movf	UART_buff_put@_this,w,c
  3837  000F0E  26D9               	addwf	fsr2l,f,c
  3838  000F10  5022               	movf	UART_buff_put@_this+1,w,c
  3839  000F12  22DA               	addwfc	fsr2h,f,c
  3840  000F14  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  3841  000F18  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  3842  000F1C  0E00               	movlw	0
  3843  000F1E  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  3844  000F20  0EC8               	movlw	200
  3845  000F22  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  3846  000F24  ECC8  F00F         	call	_UART_buff_modulo_inc	;wreg free
  3847  000F28  EE20 F0C8          	lfsr	2,200
  3848  000F2C  5021               	movf	UART_buff_put@_this,w,c
  3849  000F2E  26D9               	addwf	fsr2l,f,c
  3850  000F30  5022               	movf	UART_buff_put@_this+1,w,c
  3851  000F32  22DA               	addwfc	fsr2h,f,c
  3852  000F34  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  3853  000F38  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  3854                           
  3855                           ;UART.c: 78: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  3856  000F3C  EE20 F0CA          	lfsr	2,202
  3857  000F40  5021               	movf	UART_buff_put@_this,w,c
  3858  000F42  26D9               	addwf	fsr2l,f,c
  3859  000F44  5022               	movf	UART_buff_put@_this+1,w,c
  3860  000F46  22DA               	addwfc	fsr2h,f,c
  3861  000F48  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  3862  000F4C  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  3863  000F50  0E00               	movlw	0
  3864  000F52  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  3865  000F54  0EC8               	movlw	200
  3866  000F56  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  3867  000F58  ECC8  F00F         	call	_UART_buff_modulo_inc	;wreg free
  3868  000F5C  EE20 F0CA          	lfsr	2,202
  3869  000F60  5021               	movf	UART_buff_put@_this,w,c
  3870  000F62  26D9               	addwf	fsr2l,f,c
  3871  000F64  5022               	movf	UART_buff_put@_this+1,w,c
  3872  000F66  22DA               	addwfc	fsr2h,f,c
  3873  000F68  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  3874  000F6C  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  3875  000F70  0012               	return	
  3876  000F72  0012               	return		;funcret
  3877  000F74                     __end_of_UART_buff_put:
  3878                           	opt stack 0
  3879                           tosu	equ	0xFFF
  3880                           tosh	equ	0xFFE
  3881                           tosl	equ	0xFFD
  3882                           pclath	equ	0xFFA
  3883                           tblptru	equ	0xFF8
  3884                           tblptrh	equ	0xFF7
  3885                           tblptrl	equ	0xFF6
  3886                           tablat	equ	0xFF5
  3887                           prodh	equ	0xFF4
  3888                           prodl	equ	0xFF3
  3889                           intcon	equ	0xFF2
  3890                           postinc0	equ	0xFEE
  3891                           wreg	equ	0xFE8
  3892                           indf2	equ	0xFDF
  3893                           postinc2	equ	0xFDE
  3894                           postdec2	equ	0xFDD
  3895                           plusw2	equ	0xFDB
  3896                           fsr2h	equ	0xFDA
  3897                           fsr2l	equ	0xFD9
  3898                           status	equ	0xFD8
  3899                           
  3900 ;; *************** function _Receive_peek *****************
  3901 ;; Defined at:
  3902 ;;		line 120 in file "UART.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;		None
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;		None
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  1    wreg      unsigned char 
  3909 ;; Registers used:
  3910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3916 ;;      Params:         0       0       0       0       0       0       0
  3917 ;;      Locals:         0       0       0       0       0       0       0
  3918 ;;      Temps:          0       0       0       0       0       0       0
  3919 ;;      Totals:         0       0       0       0       0       0       0
  3920 ;;Total ram usage:        0 bytes
  3921 ;; Hardware stack levels used:    1
  3922 ;; Hardware stack levels required when called:    5
  3923 ;; This function calls:
  3924 ;;		_UART_buff_peek
  3925 ;; This function is called by:
  3926 ;;		_SYSTEM_Initialize
  3927 ;;		_receiveData
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           
  3931                           	psect	text15
  3932  002186                     __ptext15:
  3933                           	opt stack 0
  3934  002186                     _Receive_peek:
  3935                           	opt stack 23
  3936                           
  3937                           ;UART.c: 121: return UART_buff_peek(&input_buffer);
  3938                           
  3939                           ;incstack = 0
  3940  002186  0E00               	movlw	low _input_buffer
  3941  002188  6E1B               	movwf	UART_buff_peek@_this,c
  3942  00218A  0E03               	movlw	high _input_buffer
  3943  00218C  6E1C               	movwf	UART_buff_peek@_this+1,c
  3944  00218E  EC38  F010         	call	_UART_buff_peek	;wreg free
  3945  002192  0012               	return	
  3946  002194  0012               	return		;funcret
  3947  002196                     __end_of_Receive_peek:
  3948                           	opt stack 0
  3949                           tosu	equ	0xFFF
  3950                           tosh	equ	0xFFE
  3951                           tosl	equ	0xFFD
  3952                           pclath	equ	0xFFA
  3953                           tblptru	equ	0xFF8
  3954                           tblptrh	equ	0xFF7
  3955                           tblptrl	equ	0xFF6
  3956                           tablat	equ	0xFF5
  3957                           prodh	equ	0xFF4
  3958                           prodl	equ	0xFF3
  3959                           intcon	equ	0xFF2
  3960                           postinc0	equ	0xFEE
  3961                           wreg	equ	0xFE8
  3962                           indf2	equ	0xFDF
  3963                           postinc2	equ	0xFDE
  3964                           postdec2	equ	0xFDD
  3965                           plusw2	equ	0xFDB
  3966                           fsr2h	equ	0xFDA
  3967                           fsr2l	equ	0xFD9
  3968                           status	equ	0xFD8
  3969                           
  3970 ;; *************** function _UART_buff_peek *****************
  3971 ;; Defined at:
  3972 ;;		line 116 in file "UART.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  3975 ;;		 -> input_buffer(206), 
  3976 ;; Auto vars:     Size  Location     Type
  3977 ;;		None
  3978 ;; Return value:  Size  Location     Type
  3979 ;;                  1    wreg      unsigned char 
  3980 ;; Registers used:
  3981 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3982 ;; Tracked objects:
  3983 ;;		On entry : 0/0
  3984 ;;		On exit  : 0/0
  3985 ;;		Unchanged: 0/0
  3986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3987 ;;      Params:         2       0       0       0       0       0       0
  3988 ;;      Locals:         0       0       0       0       0       0       0
  3989 ;;      Temps:          2       0       0       0       0       0       0
  3990 ;;      Totals:         4       0       0       0       0       0       0
  3991 ;;Total ram usage:        4 bytes
  3992 ;; Hardware stack levels used:    1
  3993 ;; Hardware stack levels required when called:    4
  3994 ;; This function calls:
  3995 ;;		Nothing
  3996 ;; This function is called by:
  3997 ;;		_Receive_peek
  3998 ;; This function uses a non-reentrant model
  3999 ;;
  4000                           
  4001                           	psect	text16
  4002  002070                     __ptext16:
  4003                           	opt stack 0
  4004  002070                     _UART_buff_peek:
  4005                           	opt stack 23
  4006                           
  4007                           ;UART.c: 117: return _this->buf[_this->tail];
  4008                           
  4009                           ;incstack = 0
  4010  002070  EE20 F0CA          	lfsr	2,202
  4011  002074  501B               	movf	UART_buff_peek@_this,w,c
  4012  002076  26D9               	addwf	fsr2l,f,c
  4013  002078  501C               	movf	UART_buff_peek@_this+1,w,c
  4014  00207A  22DA               	addwfc	fsr2h,f,c
  4015  00207C  CFDE F01D          	movff	postinc2,??_UART_buff_peek
  4016  002080  CFDD F01E          	movff	postdec2,??_UART_buff_peek+1
  4017  002084  501D               	movf	??_UART_buff_peek,w,c
  4018  002086  241B               	addwf	UART_buff_peek@_this,w,c
  4019  002088  6ED9               	movwf	fsr2l,c
  4020  00208A  501E               	movf	??_UART_buff_peek+1,w,c
  4021  00208C  201C               	addwfc	UART_buff_peek@_this+1,w,c
  4022  00208E  6EDA               	movwf	fsr2h,c
  4023  002090  50DF               	movf	indf2,w,c
  4024  002092  0012               	return	
  4025  002094  0012               	return		;funcret
  4026  002096                     __end_of_UART_buff_peek:
  4027                           	opt stack 0
  4028                           tosu	equ	0xFFF
  4029                           tosh	equ	0xFFE
  4030                           tosl	equ	0xFFD
  4031                           pclath	equ	0xFFA
  4032                           tblptru	equ	0xFF8
  4033                           tblptrh	equ	0xFF7
  4034                           tblptrl	equ	0xFF6
  4035                           tablat	equ	0xFF5
  4036                           prodh	equ	0xFF4
  4037                           prodl	equ	0xFF3
  4038                           intcon	equ	0xFF2
  4039                           postinc0	equ	0xFEE
  4040                           wreg	equ	0xFE8
  4041                           indf2	equ	0xFDF
  4042                           postinc2	equ	0xFDE
  4043                           postdec2	equ	0xFDD
  4044                           plusw2	equ	0xFDB
  4045                           fsr2h	equ	0xFDA
  4046                           fsr2l	equ	0xFD9
  4047                           status	equ	0xFD8
  4048                           
  4049 ;; *************** function _CRCcheck *****************
  4050 ;; Defined at:
  4051 ;;		line 373 in file "FastTransfer.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;		None
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;  rt              2    5[BANK0 ] int 
  4056 ;;  arrayHolder     3    2[BANK0 ] unsigned char [3]
  4057 ;;  calculatedCR    1    1[BANK0 ] unsigned char 
  4058 ;;  SentCRC         1    0[BANK0 ] unsigned char 
  4059 ;; Return value:  Size  Location     Type
  4060 ;;		None               void
  4061 ;; Registers used:
  4062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  4063 ;; Tracked objects:
  4064 ;;		On entry : 0/0
  4065 ;;		On exit  : 0/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4068 ;;      Params:         0       0       0       0       0       0       0
  4069 ;;      Locals:         0       7       0       0       0       0       0
  4070 ;;      Temps:          0       0       0       0       0       0       0
  4071 ;;      Totals:         0       7       0       0       0       0       0
  4072 ;;Total ram usage:        7 bytes
  4073 ;; Hardware stack levels used:    1
  4074 ;; Hardware stack levels required when called:    7
  4075 ;; This function calls:
  4076 ;;		Absolute function
  4077 ;;		_CRC8
  4078 ;;		_Receive_available
  4079 ;;		_Receive_get
  4080 ;;		_crcBufS_get
  4081 ;;		_crcBufS_status_put
  4082 ;; This function is called by:
  4083 ;;		_receiveData
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           
  4087                           	psect	text17
  4088  000A3A                     __ptext17:
  4089                           	opt stack 0
  4090  000A3A                     _CRCcheck:
  4091                           	opt stack 21
  4092                           
  4093                           ;FastTransfer.c: 375: while (!(serial_available() > 3));
  4094                           
  4095                           ;incstack = 0
  4096  000A3A  D000               	goto	l4318
  4097  000A3C                     l4318:
  4098  000A3C  D801               	call	u4598
  4099  000A3E  D00A               	goto	u4599
  4100  000A40                     u4598:
  4101  000A40  0005               	push	
  4102  000A42  6EFA               	movwf	pclath,c
  4103  000A44  502D               	movf	_serial_available,w,c
  4104  000A46  6EFD               	movwf	tosl,c
  4105  000A48  502E               	movf	_serial_available+1,w,c
  4106  000A4A  6EFE               	movwf	tosh,c
  4107  000A4C  50F8               	movf	tblptru,w,c
  4108  000A4E  6EFF               	movwf	tosu,c
  4109  000A50  50FA               	movf	pclath,w,c
  4110  000A52  0012               	return		;indir
  4111  000A54                     u4599:
  4112  000A54  BE1E               	btfsc	?_Receive_available+1,7,c
  4113  000A56  D7F2               	goto	l4318
  4114  000A58  501E               	movf	?_Receive_available+1,w,c
  4115  000A5A  E106               	bnz	l4320
  4116  000A5C  0E04               	movlw	4
  4117  000A5E  5C1D               	subwf	?_Receive_available,w,c
  4118  000A60  B0D8               	btfsc	status,0,c
  4119  000A62  D002               	goto	l4320
  4120  000A64  D7EB               	goto	l4318
  4121  000A66  D000               	goto	l4320
  4122  000A68                     l4320:
  4123                           
  4124                           ;FastTransfer.c: 377: unsigned char arrayHolder[3];
  4125                           ;FastTransfer.c: 378: arrayHolder[0] = serial_read();
  4126  000A68  D801               	call	u4618
  4127  000A6A  D00A               	goto	u4619
  4128  000A6C                     u4618:
  4129  000A6C  0005               	push	
  4130  000A6E  6EFA               	movwf	pclath,c
  4131  000A70  502F               	movf	_serial_read,w,c
  4132  000A72  6EFD               	movwf	tosl,c
  4133  000A74  5030               	movf	_serial_read+1,w,c
  4134  000A76  6EFE               	movwf	tosh,c
  4135  000A78  50F8               	movf	tblptru,w,c
  4136  000A7A  6EFF               	movwf	tosu,c
  4137  000A7C  50FA               	movf	pclath,w,c
  4138  000A7E  0012               	return		;indir
  4139  000A80                     u4619:
  4140  000A80  0100               	movlb	0	; () banked
  4141  000A82  6FF5               	movwf	CRCcheck@arrayHolder& (0+255),b
  4142                           
  4143                           ;FastTransfer.c: 379: arrayHolder[1] = serial_read();
  4144  000A84  D801               	call	u4628
  4145  000A86  D00A               	goto	u4629
  4146  000A88                     u4628:
  4147  000A88  0005               	push	
  4148  000A8A  6EFA               	movwf	pclath,c
  4149  000A8C  502F               	movf	_serial_read,w,c
  4150  000A8E  6EFD               	movwf	tosl,c
  4151  000A90  5030               	movf	_serial_read+1,w,c
  4152  000A92  6EFE               	movwf	tosh,c
  4153  000A94  50F8               	movf	tblptru,w,c
  4154  000A96  6EFF               	movwf	tosu,c
  4155  000A98  50FA               	movf	pclath,w,c
  4156  000A9A  0012               	return		;indir
  4157  000A9C                     u4629:
  4158  000A9C  0100               	movlb	0	; () banked
  4159  000A9E  6FF6               	movwf	(CRCcheck@arrayHolder+1)& (0+255),b
  4160                           
  4161                           ;FastTransfer.c: 380: arrayHolder[2] = serial_read();
  4162  000AA0  D801               	call	u4638
  4163  000AA2  D00A               	goto	u4639
  4164  000AA4                     u4638:
  4165  000AA4  0005               	push	
  4166  000AA6  6EFA               	movwf	pclath,c
  4167  000AA8  502F               	movf	_serial_read,w,c
  4168  000AAA  6EFD               	movwf	tosl,c
  4169  000AAC  5030               	movf	_serial_read+1,w,c
  4170  000AAE  6EFE               	movwf	tosh,c
  4171  000AB0  50F8               	movf	tblptru,w,c
  4172  000AB2  6EFF               	movwf	tosu,c
  4173  000AB4  50FA               	movf	pclath,w,c
  4174  000AB6  0012               	return		;indir
  4175  000AB8                     u4639:
  4176  000AB8  0100               	movlb	0	; () banked
  4177  000ABA  6FF7               	movwf	(CRCcheck@arrayHolder+2)& (0+255),b
  4178                           
  4179                           ;FastTransfer.c: 381: unsigned char SentCRC = serial_read();
  4180  000ABC  D801               	call	u4648
  4181  000ABE  D00A               	goto	u4649
  4182  000AC0                     u4648:
  4183  000AC0  0005               	push	
  4184  000AC2  6EFA               	movwf	pclath,c
  4185  000AC4  502F               	movf	_serial_read,w,c
  4186  000AC6  6EFD               	movwf	tosl,c
  4187  000AC8  5030               	movf	_serial_read+1,w,c
  4188  000ACA  6EFE               	movwf	tosh,c
  4189  000ACC  50F8               	movf	tblptru,w,c
  4190  000ACE  6EFF               	movwf	tosu,c
  4191  000AD0  50FA               	movf	pclath,w,c
  4192  000AD2  0012               	return		;indir
  4193  000AD4                     u4649:
  4194  000AD4  0100               	movlb	0	; () banked
  4195  000AD6  6FF3               	movwf	CRCcheck@SentCRC& (0+255),b
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;FastTransfer.c: 382: unsigned char calculatedCRC = CRC8(arrayHolder, 3);
  4199  000AD8  0EF5               	movlw	low CRCcheck@arrayHolder
  4200  000ADA  6E1B               	movwf	CRC8@data,c
  4201  000ADC  0E00               	movlw	high CRCcheck@arrayHolder
  4202  000ADE  6E1C               	movwf	CRC8@data+1,c
  4203  000AE0  0E03               	movlw	3
  4204  000AE2  6E1D               	movwf	CRC8@len,c
  4205  000AE4  EC31  F00E         	call	_CRC8	;wreg free
  4206  000AE8  0100               	movlb	0	; () banked
  4207  000AEA  6FF4               	movwf	CRCcheck@calculatedCRC& (0+255),b
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;FastTransfer.c: 385: if (SentCRC == calculatedCRC) {
  4211  000AEC  0100               	movlb	0	; () banked
  4212  000AEE  51F4               	movf	CRCcheck@calculatedCRC& (0+255),w,b
  4213  000AF0  0100               	movlb	0	; () banked
  4214  000AF2  19F3               	xorwf	CRCcheck@SentCRC& (0+255),w,b
  4215  000AF4  A4D8               	btfss	status,2,c
  4216  000AF6  D053               	goto	l4350
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;FastTransfer.c: 387: int rt;
  4220                           ;FastTransfer.c: 388: for (rt = 0; rt < 5; rt++) {
  4221  000AF8  0E00               	movlw	0
  4222  000AFA  0100               	movlb	0	; () banked
  4223  000AFC  6FF9               	movwf	(CRCcheck@rt+1)& (0+255),b
  4224  000AFE  0E00               	movlw	0
  4225  000B00  6FF8               	movwf	CRCcheck@rt& (0+255),b
  4226  000B02                     l4328:
  4227                           
  4228                           ; BSR set to: 0
  4229  000B02  0100               	movlb	0	; () banked
  4230  000B04  BFF9               	btfsc	(CRCcheck@rt+1)& (0+255),7,b
  4231  000B06  D00A               	goto	l4332
  4232  000B08  0100               	movlb	0	; () banked
  4233  000B0A  51F9               	movf	(CRCcheck@rt+1)& (0+255),w,b
  4234  000B0C  E14C               	bnz	l808
  4235  000B0E  0E05               	movlw	5
  4236  000B10  0100               	movlb	0	; () banked
  4237  000B12  5DF8               	subwf	CRCcheck@rt& (0+255),w,b
  4238  000B14  B0D8               	btfsc	status,0,c
  4239  000B16  0012               	return	
  4240  000B18  D001               	goto	l4332
  4241                           
  4242                           ; BSR set to: 0
  4243  000B1A  0012               	return	
  4244  000B1C                     l4332:
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;FastTransfer.c: 389: if (returnAddress == crcBufS_get(&crc_buffer, rt, 0)) {
  4248  000B1C  0ED3               	movlw	low _crc_buffer
  4249  000B1E  6E1B               	movwf	crcBufS_get@_this,c
  4250  000B20  0E00               	movlw	high _crc_buffer
  4251  000B22  6E1C               	movwf	crcBufS_get@_this+1,c
  4252  000B24  C0F8  F01D         	movff	CRCcheck@rt,crcBufS_get@time
  4253  000B28  0E00               	movlw	0
  4254  000B2A  6E1E               	movwf	crcBufS_get@space,c
  4255  000B2C  ECD4  F008         	call	_crcBufS_get	;wreg free
  4256  000B30  183B               	xorwf	_returnAddress,w,c
  4257  000B32  A4D8               	btfss	status,2,c
  4258  000B34  D02F               	goto	l4346
  4259                           
  4260                           ;FastTransfer.c: 390: if (arrayHolder[2] == crcBufS_get(&crc_buffer, rt, 1)) {
  4261  000B36  0ED3               	movlw	low _crc_buffer
  4262  000B38  6E1B               	movwf	crcBufS_get@_this,c
  4263  000B3A  0E00               	movlw	high _crc_buffer
  4264  000B3C  6E1C               	movwf	crcBufS_get@_this+1,c
  4265  000B3E  C0F8  F01D         	movff	CRCcheck@rt,crcBufS_get@time
  4266  000B42  0E01               	movlw	1
  4267  000B44  6E1E               	movwf	crcBufS_get@space,c
  4268  000B46  ECD4  F008         	call	_crcBufS_get	;wreg free
  4269  000B4A  0100               	movlb	0	; () banked
  4270  000B4C  19F7               	xorwf	(CRCcheck@arrayHolder+2)& (0+255),w,b
  4271  000B4E  A4D8               	btfss	status,2,c
  4272  000B50  D021               	goto	l4346
  4273                           
  4274                           ; BSR set to: 0
  4275                           ;FastTransfer.c: 391: if (arrayHolder[1] == 1) {
  4276  000B52  0100               	movlb	0	; () banked
  4277  000B54  05F6               	decf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  4278  000B56  A4D8               	btfss	status,2,c
  4279  000B58  D00C               	goto	l4342
  4280                           
  4281                           ; BSR set to: 0
  4282                           ;FastTransfer.c: 392: crcBufS_status_put(&crc_buffer, rt, 1);
  4283  000B5A  0ED3               	movlw	low _crc_buffer
  4284  000B5C  6E1B               	movwf	crcBufS_status_put@_this,c
  4285  000B5E  0E00               	movlw	high _crc_buffer
  4286  000B60  6E1C               	movwf	crcBufS_status_put@_this+1,c
  4287  000B62  C0F8  F01D         	movff	CRCcheck@rt,crcBufS_status_put@time
  4288  000B66  0E01               	movlw	1
  4289  000B68  6E1E               	movwf	crcBufS_status_put@status,c
  4290  000B6A  ECB5  F009         	call	_crcBufS_status_put	;wreg free
  4291                           
  4292                           ;FastTransfer.c: 393: break;
  4293  000B6E  0012               	return	
  4294                           
  4295                           ;FastTransfer.c: 394: } else if (arrayHolder[1] == 2) {
  4296  000B70  D011               	goto	l4346
  4297  000B72                     l4342:
  4298  000B72  0E02               	movlw	2
  4299  000B74  0100               	movlb	0	; () banked
  4300  000B76  19F6               	xorwf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  4301  000B78  A4D8               	btfss	status,2,c
  4302  000B7A  D00C               	goto	l4346
  4303                           
  4304                           ; BSR set to: 0
  4305                           ;FastTransfer.c: 395: crcBufS_status_put(&crc_buffer, rt, 2);
  4306  000B7C  0ED3               	movlw	low _crc_buffer
  4307  000B7E  6E1B               	movwf	crcBufS_status_put@_this,c
  4308  000B80  0E00               	movlw	high _crc_buffer
  4309  000B82  6E1C               	movwf	crcBufS_status_put@_this+1,c
  4310  000B84  C0F8  F01D         	movff	CRCcheck@rt,crcBufS_status_put@time
  4311  000B88  0E02               	movlw	2
  4312  000B8A  6E1E               	movwf	crcBufS_status_put@status,c
  4313  000B8C  ECB5  F009         	call	_crcBufS_status_put	;wreg free
  4314                           
  4315                           ;FastTransfer.c: 396: break;
  4316  000B90  0012               	return	
  4317  000B92  D000               	goto	l4346
  4318  000B94                     l4346:
  4319  000B94  0100               	movlb	0	; () banked
  4320  000B96  4BF8               	infsnz	CRCcheck@rt& (0+255),f,b
  4321  000B98  2BF9               	incf	(CRCcheck@rt+1)& (0+255),f,b
  4322  000B9A  D7B3               	goto	l4328
  4323                           
  4324                           ; BSR set to: 0
  4325                           ;FastTransfer.c: 397: }
  4326                           ;FastTransfer.c: 398: }
  4327                           ;FastTransfer.c: 399: }
  4328                           ;FastTransfer.c: 400: }
  4329                           ;FastTransfer.c: 401: } else {
  4330                           
  4331                           ; BSR set to: 0
  4332  000B9C  0012               	return	
  4333  000B9E                     l4350:
  4334                           
  4335                           ; BSR set to: 0
  4336                           ;FastTransfer.c: 402: crcErrorCounter++;
  4337  000B9E  0100               	movlb	0	; () banked
  4338  000BA0  4B9F               	infsnz	_crcErrorCounter& (0+255),f,b
  4339  000BA2  2BA0               	incf	(_crcErrorCounter+1)& (0+255),f,b
  4340  000BA4  0012               	return	
  4341  000BA6                     l808:
  4342  000BA6  0012               	return		;funcret
  4343  000BA8                     __end_of_CRCcheck:
  4344                           	opt stack 0
  4345                           tosu	equ	0xFFF
  4346                           tosh	equ	0xFFE
  4347                           tosl	equ	0xFFD
  4348                           pclath	equ	0xFFA
  4349                           tblptru	equ	0xFF8
  4350                           tblptrh	equ	0xFF7
  4351                           tblptrl	equ	0xFF6
  4352                           tablat	equ	0xFF5
  4353                           prodh	equ	0xFF4
  4354                           prodl	equ	0xFF3
  4355                           intcon	equ	0xFF2
  4356                           postinc0	equ	0xFEE
  4357                           wreg	equ	0xFE8
  4358                           indf2	equ	0xFDF
  4359                           postinc2	equ	0xFDE
  4360                           postdec2	equ	0xFDD
  4361                           plusw2	equ	0xFDB
  4362                           fsr2h	equ	0xFDA
  4363                           fsr2l	equ	0xFD9
  4364                           status	equ	0xFD8
  4365                           
  4366 ;; *************** function _crcBufS_status_put *****************
  4367 ;; Defined at:
  4368 ;;		line 336 in file "FastTransfer.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  4371 ;;		 -> crc_buffer(17), 
  4372 ;;  time            1   28[COMRAM] unsigned char 
  4373 ;;  status          1   29[COMRAM] unsigned char 
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;  wantedTime      2   34[COMRAM] int 
  4376 ;; Return value:  Size  Location     Type
  4377 ;;		None               void
  4378 ;; Registers used:
  4379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4385 ;;      Params:         4       0       0       0       0       0       0
  4386 ;;      Locals:         2       0       0       0       0       0       0
  4387 ;;      Temps:          4       0       0       0       0       0       0
  4388 ;;      Totals:        10       0       0       0       0       0       0
  4389 ;;Total ram usage:       10 bytes
  4390 ;; Hardware stack levels used:    1
  4391 ;; Hardware stack levels required when called:    4
  4392 ;; This function calls:
  4393 ;;		Nothing
  4394 ;; This function is called by:
  4395 ;;		_CRCcheck
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399                           	psect	text18
  4400  00136A                     __ptext18:
  4401                           	opt stack 0
  4402  00136A                     _crcBufS_status_put:
  4403                           	opt stack 23
  4404                           
  4405                           ;FastTransfer.c: 337: if (time >= 5) {
  4406                           
  4407                           ;incstack = 0
  4408  00136A  0E04               	movlw	4
  4409  00136C  641D               	cpfsgt	crcBufS_status_put@time,c
  4410  00136E  D003               	goto	l4208
  4411                           
  4412                           ;FastTransfer.c: 338: time = 5 - 1;
  4413  001370  0E04               	movlw	4
  4414  001372  6E1D               	movwf	crcBufS_status_put@time,c
  4415  001374  D000               	goto	l4208
  4416  001376                     l4208:
  4417                           
  4418                           ;FastTransfer.c: 339: }
  4419                           ;FastTransfer.c: 340: time = time + 1;
  4420  001376  281D               	incf	crcBufS_status_put@time,w,c
  4421  001378  6E1D               	movwf	crcBufS_status_put@time,c
  4422                           
  4423                           ;FastTransfer.c: 341: int wantedTime = time * 3;
  4424  00137A  501D               	movf	crcBufS_status_put@time,w,c
  4425  00137C  0D03               	mullw	3
  4426  00137E  CFF3 F023          	movff	prodl,crcBufS_status_put@wantedTime
  4427  001382  CFF4 F024          	movff	prodh,crcBufS_status_put@wantedTime+1
  4428                           
  4429                           ;FastTransfer.c: 342: if (wantedTime > _this->head) {
  4430  001386  EE20 F00F          	lfsr	2,15
  4431  00138A  501B               	movf	crcBufS_status_put@_this,w,c
  4432  00138C  26D9               	addwf	fsr2l,f,c
  4433  00138E  501C               	movf	crcBufS_status_put@_this+1,w,c
  4434  001390  22DA               	addwfc	fsr2h,f,c
  4435  001392  5023               	movf	crcBufS_status_put@wantedTime,w,c
  4436  001394  5CDE               	subwf	postinc2,w,c
  4437  001396  50DE               	movf	postinc2,w,c
  4438  001398  0A80               	xorlw	128
  4439  00139A  6E21               	movwf	(??_crcBufS_status_put+2)& (0+255),c
  4440  00139C  5024               	movf	crcBufS_status_put@wantedTime+1,w,c
  4441  00139E  0A80               	xorlw	128
  4442  0013A0  5821               	subwfb	(??_crcBufS_status_put+2)& (0+255),w,c
  4443  0013A2  B0D8               	btfsc	status,0,c
  4444  0013A4  D02B               	goto	l4216
  4445                           
  4446                           ;FastTransfer.c: 343: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  4447  0013A6  EE20 F00F          	lfsr	2,15
  4448  0013AA  501B               	movf	crcBufS_status_put@_this,w,c
  4449  0013AC  26D9               	addwf	fsr2l,f,c
  4450  0013AE  501C               	movf	crcBufS_status_put@_this+1,w,c
  4451  0013B0  22DA               	addwfc	fsr2h,f,c
  4452  0013B2  CFDE F01F          	movff	postinc2,??_crcBufS_status_put
  4453  0013B6  CFDD F020          	movff	postdec2,??_crcBufS_status_put+1
  4454  0013BA  1E1F               	comf	??_crcBufS_status_put,f,c
  4455  0013BC  1E20               	comf	??_crcBufS_status_put+1,f,c
  4456  0013BE  4A1F               	infsnz	??_crcBufS_status_put,f,c
  4457  0013C0  2A20               	incf	??_crcBufS_status_put+1,f,c
  4458  0013C2  5023               	movf	crcBufS_status_put@wantedTime,w,c
  4459  0013C4  261F               	addwf	??_crcBufS_status_put,f,c
  4460  0013C6  5024               	movf	crcBufS_status_put@wantedTime+1,w,c
  4461  0013C8  2220               	addwfc	??_crcBufS_status_put+1,f,c
  4462  0013CA  1E1F               	comf	??_crcBufS_status_put,f,c
  4463  0013CC  1E20               	comf	??_crcBufS_status_put+1,f,c
  4464  0013CE  4A1F               	infsnz	??_crcBufS_status_put,f,c
  4465  0013D0  2A20               	incf	??_crcBufS_status_put+1,f,c
  4466  0013D2  0E0F               	movlw	15
  4467  0013D4  241F               	addwf	??_crcBufS_status_put,w,c
  4468  0013D6  6E23               	movwf	crcBufS_status_put@wantedTime,c
  4469  0013D8  0E00               	movlw	0
  4470  0013DA  2020               	addwfc	??_crcBufS_status_put+1,w,c
  4471  0013DC  6E24               	movwf	crcBufS_status_put@wantedTime+1,c
  4472                           
  4473                           ;FastTransfer.c: 344: _this->buf[(wantedTime + 2)] = status;
  4474  0013DE  0E02               	movlw	2
  4475  0013E0  2423               	addwf	crcBufS_status_put@wantedTime,w,c
  4476  0013E2  6E1F               	movwf	??_crcBufS_status_put& (0+255),c
  4477  0013E4  0E00               	movlw	0
  4478  0013E6  2024               	addwfc	crcBufS_status_put@wantedTime+1,w,c
  4479  0013E8  6E20               	movwf	(??_crcBufS_status_put+1)& (0+255),c
  4480  0013EA  501F               	movf	??_crcBufS_status_put,w,c
  4481  0013EC  241B               	addwf	crcBufS_status_put@_this,w,c
  4482  0013EE  6ED9               	movwf	fsr2l,c
  4483  0013F0  5020               	movf	??_crcBufS_status_put+1,w,c
  4484  0013F2  201C               	addwfc	crcBufS_status_put@_this+1,w,c
  4485  0013F4  6EDA               	movwf	fsr2h,c
  4486  0013F6  C01E  FFDF         	movff	crcBufS_status_put@status,indf2
  4487                           
  4488                           ;FastTransfer.c: 345: } else {
  4489  0013FA  0012               	return	
  4490  0013FC                     l4216:
  4491                           
  4492                           ;FastTransfer.c: 346: _this->buf[(_this->head - wantedTime) + 2] = status;
  4493  0013FC  EE20 F00F          	lfsr	2,15
  4494  001400  501B               	movf	crcBufS_status_put@_this,w,c
  4495  001402  26D9               	addwf	fsr2l,f,c
  4496  001404  501C               	movf	crcBufS_status_put@_this+1,w,c
  4497  001406  22DA               	addwfc	fsr2h,f,c
  4498  001408  CFDE F01F          	movff	postinc2,??_crcBufS_status_put
  4499  00140C  CFDD F020          	movff	postdec2,??_crcBufS_status_put+1
  4500  001410  C023  F021         	movff	crcBufS_status_put@wantedTime,??_crcBufS_status_put+2
  4501  001414  C024  F022         	movff	crcBufS_status_put@wantedTime+1,??_crcBufS_status_put+3
  4502  001418  1E21               	comf	??_crcBufS_status_put+2,f,c
  4503  00141A  1E22               	comf	??_crcBufS_status_put+3,f,c
  4504  00141C  4A21               	infsnz	??_crcBufS_status_put+2,f,c
  4505  00141E  2A22               	incf	??_crcBufS_status_put+3,f,c
  4506  001420  501F               	movf	??_crcBufS_status_put,w,c
  4507  001422  2621               	addwf	??_crcBufS_status_put+2,f,c
  4508  001424  5020               	movf	??_crcBufS_status_put+1,w,c
  4509  001426  2222               	addwfc	??_crcBufS_status_put+3,f,c
  4510  001428  0E02               	movlw	2
  4511  00142A  2621               	addwf	??_crcBufS_status_put+2,f,c
  4512  00142C  0E00               	movlw	0
  4513  00142E  2222               	addwfc	??_crcBufS_status_put+3,f,c
  4514  001430  5021               	movf	??_crcBufS_status_put+2,w,c
  4515  001432  241B               	addwf	crcBufS_status_put@_this,w,c
  4516  001434  6ED9               	movwf	fsr2l,c
  4517  001436  5022               	movf	??_crcBufS_status_put+3,w,c
  4518  001438  201C               	addwfc	crcBufS_status_put@_this+1,w,c
  4519  00143A  6EDA               	movwf	fsr2h,c
  4520  00143C  C01E  FFDF         	movff	crcBufS_status_put@status,indf2
  4521  001440  0012               	return	
  4522  001442  0012               	return		;funcret
  4523  001444                     __end_of_crcBufS_status_put:
  4524                           	opt stack 0
  4525                           tosu	equ	0xFFF
  4526                           tosh	equ	0xFFE
  4527                           tosl	equ	0xFFD
  4528                           pclath	equ	0xFFA
  4529                           tblptru	equ	0xFF8
  4530                           tblptrh	equ	0xFF7
  4531                           tblptrl	equ	0xFF6
  4532                           tablat	equ	0xFF5
  4533                           prodh	equ	0xFF4
  4534                           prodl	equ	0xFF3
  4535                           intcon	equ	0xFF2
  4536                           postinc0	equ	0xFEE
  4537                           wreg	equ	0xFE8
  4538                           indf2	equ	0xFDF
  4539                           postinc2	equ	0xFDE
  4540                           postdec2	equ	0xFDD
  4541                           plusw2	equ	0xFDB
  4542                           fsr2h	equ	0xFDA
  4543                           fsr2l	equ	0xFD9
  4544                           status	equ	0xFD8
  4545                           
  4546 ;; *************** function _crcBufS_get *****************
  4547 ;; Defined at:
  4548 ;;		line 353 in file "FastTransfer.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  4551 ;;		 -> crc_buffer(17), 
  4552 ;;  time            1   28[COMRAM] unsigned char 
  4553 ;;  space           1   29[COMRAM] unsigned char 
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;  wantedTime      2   36[COMRAM] int 
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  1    wreg      unsigned char 
  4558 ;; Registers used:
  4559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4565 ;;      Params:         4       0       0       0       0       0       0
  4566 ;;      Locals:         2       0       0       0       0       0       0
  4567 ;;      Temps:          6       0       0       0       0       0       0
  4568 ;;      Totals:        12       0       0       0       0       0       0
  4569 ;;Total ram usage:       12 bytes
  4570 ;; Hardware stack levels used:    1
  4571 ;; Hardware stack levels required when called:    4
  4572 ;; This function calls:
  4573 ;;		Nothing
  4574 ;; This function is called by:
  4575 ;;		_CRCcheck
  4576 ;;		_AKNAK
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           	psect	text19
  4581  0011A8                     __ptext19:
  4582                           	opt stack 0
  4583  0011A8                     _crcBufS_get:
  4584                           	opt stack 23
  4585                           
  4586                           ;FastTransfer.c: 354: if (time >= 5) {
  4587                           
  4588                           ;incstack = 0
  4589  0011A8  0E04               	movlw	4
  4590  0011AA  641D               	cpfsgt	crcBufS_get@time,c
  4591  0011AC  D003               	goto	l4184
  4592                           
  4593                           ;FastTransfer.c: 355: time = 5 - 1;
  4594  0011AE  0E04               	movlw	4
  4595  0011B0  6E1D               	movwf	crcBufS_get@time,c
  4596  0011B2  D000               	goto	l4184
  4597  0011B4                     l4184:
  4598                           
  4599                           ;FastTransfer.c: 356: }
  4600                           ;FastTransfer.c: 357: if (space >= 3) {
  4601  0011B4  0E02               	movlw	2
  4602  0011B6  641E               	cpfsgt	crcBufS_get@space,c
  4603  0011B8  D003               	goto	l4188
  4604                           
  4605                           ;FastTransfer.c: 358: space = 3 - 1;
  4606  0011BA  0E02               	movlw	2
  4607  0011BC  6E1E               	movwf	crcBufS_get@space,c
  4608  0011BE  D000               	goto	l4188
  4609  0011C0                     l4188:
  4610                           
  4611                           ;FastTransfer.c: 359: }
  4612                           ;FastTransfer.c: 360: time = time + 1;
  4613  0011C0  281D               	incf	crcBufS_get@time,w,c
  4614  0011C2  6E1D               	movwf	crcBufS_get@time,c
  4615                           
  4616                           ;FastTransfer.c: 361: int wantedTime = time * 3;
  4617  0011C4  501D               	movf	crcBufS_get@time,w,c
  4618  0011C6  0D03               	mullw	3
  4619  0011C8  CFF3 F025          	movff	prodl,crcBufS_get@wantedTime
  4620  0011CC  CFF4 F026          	movff	prodh,crcBufS_get@wantedTime+1
  4621                           
  4622                           ;FastTransfer.c: 362: if (wantedTime > _this->head) {
  4623  0011D0  EE20 F00F          	lfsr	2,15
  4624  0011D4  501B               	movf	crcBufS_get@_this,w,c
  4625  0011D6  26D9               	addwf	fsr2l,f,c
  4626  0011D8  501C               	movf	crcBufS_get@_this+1,w,c
  4627  0011DA  22DA               	addwfc	fsr2h,f,c
  4628  0011DC  5025               	movf	crcBufS_get@wantedTime,w,c
  4629  0011DE  5CDE               	subwf	postinc2,w,c
  4630  0011E0  50DE               	movf	postinc2,w,c
  4631  0011E2  0A80               	xorlw	128
  4632  0011E4  6E21               	movwf	(??_crcBufS_get+2)& (0+255),c
  4633  0011E6  5026               	movf	crcBufS_get@wantedTime+1,w,c
  4634  0011E8  0A80               	xorlw	128
  4635  0011EA  5821               	subwfb	(??_crcBufS_get+2)& (0+255),w,c
  4636  0011EC  B0D8               	btfsc	status,0,c
  4637  0011EE  D02A               	goto	l4200
  4638                           
  4639                           ;FastTransfer.c: 363: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  4640  0011F0  EE20 F00F          	lfsr	2,15
  4641  0011F4  501B               	movf	crcBufS_get@_this,w,c
  4642  0011F6  26D9               	addwf	fsr2l,f,c
  4643  0011F8  501C               	movf	crcBufS_get@_this+1,w,c
  4644  0011FA  22DA               	addwfc	fsr2h,f,c
  4645  0011FC  CFDE F01F          	movff	postinc2,??_crcBufS_get
  4646  001200  CFDD F020          	movff	postdec2,??_crcBufS_get+1
  4647  001204  1E1F               	comf	??_crcBufS_get,f,c
  4648  001206  1E20               	comf	??_crcBufS_get+1,f,c
  4649  001208  4A1F               	infsnz	??_crcBufS_get,f,c
  4650  00120A  2A20               	incf	??_crcBufS_get+1,f,c
  4651  00120C  5025               	movf	crcBufS_get@wantedTime,w,c
  4652  00120E  261F               	addwf	??_crcBufS_get,f,c
  4653  001210  5026               	movf	crcBufS_get@wantedTime+1,w,c
  4654  001212  2220               	addwfc	??_crcBufS_get+1,f,c
  4655  001214  1E1F               	comf	??_crcBufS_get,f,c
  4656  001216  1E20               	comf	??_crcBufS_get+1,f,c
  4657  001218  4A1F               	infsnz	??_crcBufS_get,f,c
  4658  00121A  2A20               	incf	??_crcBufS_get+1,f,c
  4659  00121C  0E0F               	movlw	15
  4660  00121E  241F               	addwf	??_crcBufS_get,w,c
  4661  001220  6E25               	movwf	crcBufS_get@wantedTime,c
  4662  001222  0E00               	movlw	0
  4663  001224  2020               	addwfc	??_crcBufS_get+1,w,c
  4664  001226  6E26               	movwf	crcBufS_get@wantedTime+1,c
  4665                           
  4666                           ;FastTransfer.c: 364: return (_this->buf[(wantedTime + space)]);
  4667  001228  501E               	movf	crcBufS_get@space,w,c
  4668  00122A  2425               	addwf	crcBufS_get@wantedTime,w,c
  4669  00122C  6E1F               	movwf	??_crcBufS_get& (0+255),c
  4670  00122E  0E00               	movlw	0
  4671  001230  2026               	addwfc	crcBufS_get@wantedTime+1,w,c
  4672  001232  6E20               	movwf	(??_crcBufS_get+1)& (0+255),c
  4673  001234  501F               	movf	??_crcBufS_get,w,c
  4674  001236  241B               	addwf	crcBufS_get@_this,w,c
  4675  001238  6ED9               	movwf	fsr2l,c
  4676  00123A  5020               	movf	??_crcBufS_get+1,w,c
  4677  00123C  201C               	addwfc	crcBufS_get@_this+1,w,c
  4678  00123E  6EDA               	movwf	fsr2h,c
  4679  001240  50DF               	movf	indf2,w,c
  4680                           
  4681                           ;FastTransfer.c: 365: } else {
  4682  001242  0012               	return	
  4683  001244                     l4200:
  4684                           
  4685                           ;FastTransfer.c: 366: return (_this->buf[(_this->head - wantedTime) + space]);
  4686  001244  EE20 F00F          	lfsr	2,15
  4687  001248  501B               	movf	crcBufS_get@_this,w,c
  4688  00124A  26D9               	addwf	fsr2l,f,c
  4689  00124C  501C               	movf	crcBufS_get@_this+1,w,c
  4690  00124E  22DA               	addwfc	fsr2h,f,c
  4691  001250  CFDE F01F          	movff	postinc2,??_crcBufS_get
  4692  001254  CFDD F020          	movff	postdec2,??_crcBufS_get+1
  4693  001258  C025  F021         	movff	crcBufS_get@wantedTime,??_crcBufS_get+2
  4694  00125C  C026  F022         	movff	crcBufS_get@wantedTime+1,??_crcBufS_get+3
  4695  001260  1E21               	comf	??_crcBufS_get+2,f,c
  4696  001262  1E22               	comf	??_crcBufS_get+3,f,c
  4697  001264  4A21               	infsnz	??_crcBufS_get+2,f,c
  4698  001266  2A22               	incf	??_crcBufS_get+3,f,c
  4699  001268  501E               	movf	crcBufS_get@space,w,c
  4700  00126A  6E23               	movwf	(??_crcBufS_get+4)& (0+255),c
  4701  00126C  6A24               	clrf	(??_crcBufS_get+5)& (0+255),c
  4702  00126E  5021               	movf	??_crcBufS_get+2,w,c
  4703  001270  2623               	addwf	??_crcBufS_get+4,f,c
  4704  001272  5022               	movf	??_crcBufS_get+3,w,c
  4705  001274  2224               	addwfc	??_crcBufS_get+5,f,c
  4706  001276  501F               	movf	??_crcBufS_get,w,c
  4707  001278  2623               	addwf	??_crcBufS_get+4,f,c
  4708  00127A  5020               	movf	??_crcBufS_get+1,w,c
  4709  00127C  2224               	addwfc	??_crcBufS_get+5,f,c
  4710  00127E  5023               	movf	??_crcBufS_get+4,w,c
  4711  001280  241B               	addwf	crcBufS_get@_this,w,c
  4712  001282  6ED9               	movwf	fsr2l,c
  4713  001284  5024               	movf	??_crcBufS_get+5,w,c
  4714  001286  201C               	addwfc	crcBufS_get@_this+1,w,c
  4715  001288  6EDA               	movwf	fsr2h,c
  4716  00128A  50DF               	movf	indf2,w,c
  4717  00128C  0012               	return	
  4718  00128E  0012               	return		;funcret
  4719  001290                     __end_of_crcBufS_get:
  4720                           	opt stack 0
  4721                           tosu	equ	0xFFF
  4722                           tosh	equ	0xFFE
  4723                           tosl	equ	0xFFD
  4724                           pclath	equ	0xFFA
  4725                           tblptru	equ	0xFF8
  4726                           tblptrh	equ	0xFF7
  4727                           tblptrl	equ	0xFF6
  4728                           tablat	equ	0xFF5
  4729                           prodh	equ	0xFF4
  4730                           prodl	equ	0xFF3
  4731                           intcon	equ	0xFF2
  4732                           postinc0	equ	0xFEE
  4733                           wreg	equ	0xFE8
  4734                           indf2	equ	0xFDF
  4735                           postinc2	equ	0xFDE
  4736                           postdec2	equ	0xFDD
  4737                           plusw2	equ	0xFDB
  4738                           fsr2h	equ	0xFDA
  4739                           fsr2l	equ	0xFD9
  4740                           status	equ	0xFD8
  4741                           
  4742 ;; *************** function _Receive_get *****************
  4743 ;; Defined at:
  4744 ;;		line 128 in file "UART.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;		None
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;		None
  4749 ;; Return value:  Size  Location     Type
  4750 ;;                  1    wreg      unsigned char 
  4751 ;; Registers used:
  4752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4753 ;; Tracked objects:
  4754 ;;		On entry : 0/0
  4755 ;;		On exit  : 0/0
  4756 ;;		Unchanged: 0/0
  4757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4758 ;;      Params:         0       0       0       0       0       0       0
  4759 ;;      Locals:         0       0       0       0       0       0       0
  4760 ;;      Temps:          0       0       0       0       0       0       0
  4761 ;;      Totals:         0       0       0       0       0       0       0
  4762 ;;Total ram usage:        0 bytes
  4763 ;; Hardware stack levels used:    1
  4764 ;; Hardware stack levels required when called:    6
  4765 ;; This function calls:
  4766 ;;		_UART_buff_get
  4767 ;; This function is called by:
  4768 ;;		_SYSTEM_Initialize
  4769 ;;		_getch
  4770 ;;		_CRCcheck
  4771 ;;		_receiveData
  4772 ;; This function uses a non-reentrant model
  4773 ;;
  4774                           
  4775                           	psect	text20
  4776  002196                     __ptext20:
  4777                           	opt stack 0
  4778  002196                     _Receive_get:
  4779                           	opt stack 22
  4780                           
  4781                           ;UART.c: 129: return UART_buff_get(&input_buffer);
  4782                           
  4783                           ;incstack = 0
  4784  002196  0E00               	movlw	low _input_buffer
  4785  002198  6E21               	movwf	UART_buff_get@_this,c
  4786  00219A  0E03               	movlw	high _input_buffer
  4787  00219C  6E22               	movwf	UART_buff_get@_this+1,c
  4788  00219E  ECD5  F00B         	call	_UART_buff_get	;wreg free
  4789  0021A2  0012               	return	
  4790  0021A4  0012               	return		;funcret
  4791  0021A6                     __end_of_Receive_get:
  4792                           	opt stack 0
  4793                           tosu	equ	0xFFF
  4794                           tosh	equ	0xFFE
  4795                           tosl	equ	0xFFD
  4796                           pclath	equ	0xFFA
  4797                           tblptru	equ	0xFF8
  4798                           tblptrh	equ	0xFF7
  4799                           tblptrl	equ	0xFF6
  4800                           tablat	equ	0xFF5
  4801                           prodh	equ	0xFF4
  4802                           prodl	equ	0xFF3
  4803                           intcon	equ	0xFF2
  4804                           postinc0	equ	0xFEE
  4805                           wreg	equ	0xFE8
  4806                           indf2	equ	0xFDF
  4807                           postinc2	equ	0xFDE
  4808                           postdec2	equ	0xFDD
  4809                           plusw2	equ	0xFDB
  4810                           fsr2h	equ	0xFDA
  4811                           fsr2l	equ	0xFD9
  4812                           status	equ	0xFD8
  4813                           
  4814 ;; *************** function _UART_buff_get *****************
  4815 ;; Defined at:
  4816 ;;		line 83 in file "UART.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  4819 ;;		 -> output_buffer(206), input_buffer(206), 
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;  c               1   36[COMRAM] unsigned char 
  4822 ;; Return value:  Size  Location     Type
  4823 ;;                  1    wreg      unsigned char 
  4824 ;; Registers used:
  4825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4826 ;; Tracked objects:
  4827 ;;		On entry : 0/0
  4828 ;;		On exit  : 0/0
  4829 ;;		Unchanged: 0/0
  4830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4831 ;;      Params:         2       0       0       0       0       0       0
  4832 ;;      Locals:         1       0       0       0       0       0       0
  4833 ;;      Temps:          2       0       0       0       0       0       0
  4834 ;;      Totals:         5       0       0       0       0       0       0
  4835 ;;Total ram usage:        5 bytes
  4836 ;; Hardware stack levels used:    1
  4837 ;; Hardware stack levels required when called:    5
  4838 ;; This function calls:
  4839 ;;		_UART_buff_modulo_inc
  4840 ;; This function is called by:
  4841 ;;		_Receive_get
  4842 ;;		_Send_put
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846                           	psect	text21
  4847  0017AA                     __ptext21:
  4848                           	opt stack 0
  4849  0017AA                     _UART_buff_get:
  4850                           	opt stack 21
  4851                           
  4852                           ;UART.c: 84: unsigned char c;
  4853                           ;UART.c: 85: if (_this->count > 0) {
  4854                           
  4855                           ;incstack = 0
  4856  0017AA  EE20 F0CC          	lfsr	2,204
  4857  0017AE  5021               	movf	UART_buff_get@_this,w,c
  4858  0017B0  26D9               	addwf	fsr2l,f,c
  4859  0017B2  5022               	movf	UART_buff_get@_this+1,w,c
  4860  0017B4  22DA               	addwfc	fsr2h,f,c
  4861  0017B6  0E01               	movlw	1
  4862  0017B8  BEDB               	btfsc	plusw2,7,c
  4863  0017BA  D03C               	goto	l4082
  4864  0017BC  0E01               	movlw	1
  4865  0017BE  50DB               	movf	plusw2,w,c
  4866  0017C0  E103               	bnz	u4220
  4867  0017C2  04DE               	decf	postinc2,w,c
  4868  0017C4  A0D8               	btfss	status,0,c
  4869  0017C6  D036               	goto	l4082
  4870  0017C8                     u4220:
  4871                           
  4872                           ;UART.c: 86: c = _this->buf[_this->tail];
  4873  0017C8  EE20 F0CA          	lfsr	2,202
  4874  0017CC  5021               	movf	UART_buff_get@_this,w,c
  4875  0017CE  26D9               	addwf	fsr2l,f,c
  4876  0017D0  5022               	movf	UART_buff_get@_this+1,w,c
  4877  0017D2  22DA               	addwfc	fsr2h,f,c
  4878  0017D4  CFDE F023          	movff	postinc2,??_UART_buff_get
  4879  0017D8  CFDD F024          	movff	postdec2,??_UART_buff_get+1
  4880  0017DC  5023               	movf	??_UART_buff_get,w,c
  4881  0017DE  2421               	addwf	UART_buff_get@_this,w,c
  4882  0017E0  6ED9               	movwf	fsr2l,c
  4883  0017E2  5024               	movf	??_UART_buff_get+1,w,c
  4884  0017E4  2022               	addwfc	UART_buff_get@_this+1,w,c
  4885  0017E6  6EDA               	movwf	fsr2h,c
  4886  0017E8  50DF               	movf	indf2,w,c
  4887  0017EA  6E25               	movwf	UART_buff_get@c,c
  4888                           
  4889                           ;UART.c: 87: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  4890  0017EC  EE20 F0CA          	lfsr	2,202
  4891  0017F0  5021               	movf	UART_buff_get@_this,w,c
  4892  0017F2  26D9               	addwf	fsr2l,f,c
  4893  0017F4  5022               	movf	UART_buff_get@_this+1,w,c
  4894  0017F6  22DA               	addwfc	fsr2h,f,c
  4895  0017F8  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  4896  0017FC  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  4897  001800  0E00               	movlw	0
  4898  001802  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  4899  001804  0EC8               	movlw	200
  4900  001806  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  4901  001808  ECC8  F00F         	call	_UART_buff_modulo_inc	;wreg free
  4902  00180C  EE20 F0CA          	lfsr	2,202
  4903  001810  5021               	movf	UART_buff_get@_this,w,c
  4904  001812  26D9               	addwf	fsr2l,f,c
  4905  001814  5022               	movf	UART_buff_get@_this+1,w,c
  4906  001816  22DA               	addwfc	fsr2h,f,c
  4907  001818  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4908  00181C  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4909                           
  4910                           ;UART.c: 88: --_this->count;
  4911  001820  EE20 F0CC          	lfsr	2,204
  4912  001824  5021               	movf	UART_buff_get@_this,w,c
  4913  001826  26D9               	addwf	fsr2l,f,c
  4914  001828  5022               	movf	UART_buff_get@_this+1,w,c
  4915  00182A  22DA               	addwfc	fsr2h,f,c
  4916  00182C  06DE               	decf	postinc2,f,c
  4917  00182E  0E00               	movlw	0
  4918  001830  5ADD               	subwfb	postdec2,f,c
  4919                           
  4920                           ;UART.c: 89: } else {
  4921  001832  D002               	goto	l853
  4922  001834                     l4082:
  4923                           
  4924                           ;UART.c: 90: c = 0;
  4925  001834  0E00               	movlw	0
  4926  001836  6E25               	movwf	UART_buff_get@c,c
  4927  001838                     l853:
  4928                           
  4929                           ;UART.c: 91: }
  4930                           ;UART.c: 92: return (c);
  4931  001838  5025               	movf	UART_buff_get@c,w,c
  4932  00183A  0012               	return	
  4933  00183C  0012               	return		;funcret
  4934  00183E                     __end_of_UART_buff_get:
  4935                           	opt stack 0
  4936                           tosu	equ	0xFFF
  4937                           tosh	equ	0xFFE
  4938                           tosl	equ	0xFFD
  4939                           pclath	equ	0xFFA
  4940                           tblptru	equ	0xFF8
  4941                           tblptrh	equ	0xFF7
  4942                           tblptrl	equ	0xFF6
  4943                           tablat	equ	0xFF5
  4944                           prodh	equ	0xFF4
  4945                           prodl	equ	0xFF3
  4946                           intcon	equ	0xFF2
  4947                           postinc0	equ	0xFEE
  4948                           wreg	equ	0xFE8
  4949                           indf2	equ	0xFDF
  4950                           postinc2	equ	0xFDE
  4951                           postdec2	equ	0xFDD
  4952                           plusw2	equ	0xFDB
  4953                           fsr2h	equ	0xFDA
  4954                           fsr2l	equ	0xFD9
  4955                           status	equ	0xFD8
  4956                           
  4957 ;; *************** function _UART_buff_modulo_inc *****************
  4958 ;; Defined at:
  4959 ;;		line 108 in file "UART.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;  value           2   26[COMRAM] const unsigned int 
  4962 ;;  modulus         2   28[COMRAM] const unsigned int 
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;  my_value        2   30[COMRAM] unsigned int 
  4965 ;; Return value:  Size  Location     Type
  4966 ;;                  2   26[COMRAM] unsigned int 
  4967 ;; Registers used:
  4968 ;;		wreg, status,2, status,0
  4969 ;; Tracked objects:
  4970 ;;		On entry : 0/0
  4971 ;;		On exit  : 0/0
  4972 ;;		Unchanged: 0/0
  4973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4974 ;;      Params:         4       0       0       0       0       0       0
  4975 ;;      Locals:         2       0       0       0       0       0       0
  4976 ;;      Temps:          0       0       0       0       0       0       0
  4977 ;;      Totals:         6       0       0       0       0       0       0
  4978 ;;Total ram usage:        6 bytes
  4979 ;; Hardware stack levels used:    1
  4980 ;; Hardware stack levels required when called:    4
  4981 ;; This function calls:
  4982 ;;		Nothing
  4983 ;; This function is called by:
  4984 ;;		_UART_buff_put
  4985 ;;		_UART_buff_get
  4986 ;; This function uses a non-reentrant model
  4987 ;;
  4988                           
  4989                           	psect	text22
  4990  001F90                     __ptext22:
  4991                           	opt stack 0
  4992  001F90                     _UART_buff_modulo_inc:
  4993                           	opt stack 21
  4994                           
  4995                           ;UART.c: 109: unsigned int my_value = value + 1;
  4996                           
  4997                           ;incstack = 0
  4998  001F90  0E01               	movlw	1
  4999  001F92  241B               	addwf	UART_buff_modulo_inc@value,w,c
  5000  001F94  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  5001  001F96  0E00               	movlw	0
  5002  001F98  201C               	addwfc	UART_buff_modulo_inc@value+1,w,c
  5003  001F9A  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  5004                           
  5005                           ;UART.c: 110: if (my_value >= modulus) {
  5006  001F9C  501D               	movf	UART_buff_modulo_inc@modulus,w,c
  5007  001F9E  5C1F               	subwf	UART_buff_modulo_inc@my_value,w,c
  5008  001FA0  501E               	movf	UART_buff_modulo_inc@modulus+1,w,c
  5009  001FA2  5820               	subwfb	UART_buff_modulo_inc@my_value+1,w,c
  5010  001FA4  A0D8               	btfss	status,0,c
  5011  001FA6  D005               	goto	l4040
  5012                           
  5013                           ;UART.c: 111: my_value = 0;
  5014  001FA8  0E00               	movlw	0
  5015  001FAA  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  5016  001FAC  0E00               	movlw	0
  5017  001FAE  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  5018  001FB0  D000               	goto	l4040
  5019  001FB2                     l4040:
  5020                           
  5021                           ;UART.c: 112: }
  5022                           ;UART.c: 113: return (my_value);
  5023  001FB2  C01F  F01B         	movff	UART_buff_modulo_inc@my_value,?_UART_buff_modulo_inc
  5024  001FB6  C020  F01C         	movff	UART_buff_modulo_inc@my_value+1,?_UART_buff_modulo_inc+1
  5025  001FBA  0012               	return	
  5026  001FBC  0012               	return		;funcret
  5027  001FBE                     __end_of_UART_buff_modulo_inc:
  5028                           	opt stack 0
  5029                           tosu	equ	0xFFF
  5030                           tosh	equ	0xFFE
  5031                           tosl	equ	0xFFD
  5032                           pclath	equ	0xFFA
  5033                           tblptru	equ	0xFF8
  5034                           tblptrh	equ	0xFF7
  5035                           tblptrl	equ	0xFF6
  5036                           tablat	equ	0xFF5
  5037                           prodh	equ	0xFF4
  5038                           prodl	equ	0xFF3
  5039                           intcon	equ	0xFF2
  5040                           postinc0	equ	0xFEE
  5041                           wreg	equ	0xFE8
  5042                           indf2	equ	0xFDF
  5043                           postinc2	equ	0xFDE
  5044                           postdec2	equ	0xFDD
  5045                           plusw2	equ	0xFDB
  5046                           fsr2h	equ	0xFDA
  5047                           fsr2l	equ	0xFD9
  5048                           status	equ	0xFD8
  5049                           
  5050 ;; *************** function _Receive_available *****************
  5051 ;; Defined at:
  5052 ;;		line 124 in file "UART.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;		None
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;		None
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  2   28[COMRAM] int 
  5059 ;; Registers used:
  5060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5066 ;;      Params:         2       0       0       0       0       0       0
  5067 ;;      Locals:         0       0       0       0       0       0       0
  5068 ;;      Temps:          0       0       0       0       0       0       0
  5069 ;;      Totals:         2       0       0       0       0       0       0
  5070 ;;Total ram usage:        2 bytes
  5071 ;; Hardware stack levels used:    1
  5072 ;; Hardware stack levels required when called:    5
  5073 ;; This function calls:
  5074 ;;		_UART_buff_size
  5075 ;; This function is called by:
  5076 ;;		_SYSTEM_Initialize
  5077 ;;		_CRCcheck
  5078 ;;		_receiveData
  5079 ;; This function uses a non-reentrant model
  5080 ;;
  5081                           
  5082                           	psect	text23
  5083  002126                     __ptext23:
  5084                           	opt stack 0
  5085  002126                     _Receive_available:
  5086                           	opt stack 23
  5087                           
  5088                           ;UART.c: 125: return UART_buff_size(&input_buffer);
  5089                           
  5090                           ;incstack = 0
  5091  002126  0E00               	movlw	low _input_buffer
  5092  002128  6E1B               	movwf	UART_buff_size@_this,c
  5093  00212A  0E03               	movlw	high _input_buffer
  5094  00212C  6E1C               	movwf	UART_buff_size@_this+1,c
  5095  00212E  EC9F  F010         	call	_UART_buff_size	;wreg free
  5096  002132  C01B  F01D         	movff	?_UART_buff_size,?_Receive_available
  5097  002136  C01C  F01E         	movff	?_UART_buff_size+1,?_Receive_available+1
  5098  00213A  0012               	return	
  5099  00213C  0012               	return		;funcret
  5100  00213E                     __end_of_Receive_available:
  5101                           	opt stack 0
  5102                           tosu	equ	0xFFF
  5103                           tosh	equ	0xFFE
  5104                           tosl	equ	0xFFD
  5105                           pclath	equ	0xFFA
  5106                           tblptru	equ	0xFF8
  5107                           tblptrh	equ	0xFF7
  5108                           tblptrl	equ	0xFF6
  5109                           tablat	equ	0xFF5
  5110                           prodh	equ	0xFF4
  5111                           prodl	equ	0xFF3
  5112                           intcon	equ	0xFF2
  5113                           postinc0	equ	0xFEE
  5114                           wreg	equ	0xFE8
  5115                           indf2	equ	0xFDF
  5116                           postinc2	equ	0xFDE
  5117                           postdec2	equ	0xFDD
  5118                           plusw2	equ	0xFDB
  5119                           fsr2h	equ	0xFDA
  5120                           fsr2l	equ	0xFD9
  5121                           status	equ	0xFD8
  5122                           
  5123 ;; *************** function _UART_buff_size *****************
  5124 ;; Defined at:
  5125 ;;		line 104 in file "UART.c"
  5126 ;; Parameters:    Size  Location     Type
  5127 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  5128 ;;		 -> output_buffer(206), input_buffer(206), 
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;		None
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  2   26[COMRAM] int 
  5133 ;; Registers used:
  5134 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5140 ;;      Params:         2       0       0       0       0       0       0
  5141 ;;      Locals:         0       0       0       0       0       0       0
  5142 ;;      Temps:          0       0       0       0       0       0       0
  5143 ;;      Totals:         2       0       0       0       0       0       0
  5144 ;;Total ram usage:        2 bytes
  5145 ;; Hardware stack levels used:    1
  5146 ;; Hardware stack levels required when called:    4
  5147 ;; This function calls:
  5148 ;;		Nothing
  5149 ;; This function is called by:
  5150 ;;		_Receive_available
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           	psect	text24
  5155  00213E                     __ptext24:
  5156                           	opt stack 0
  5157  00213E                     _UART_buff_size:
  5158                           	opt stack 23
  5159                           
  5160                           ;UART.c: 105: return (_this->count);
  5161                           
  5162                           ;incstack = 0
  5163  00213E  EE20 F0CC          	lfsr	2,204
  5164  002142  501B               	movf	UART_buff_size@_this,w,c
  5165  002144  26D9               	addwf	fsr2l,f,c
  5166  002146  501C               	movf	UART_buff_size@_this+1,w,c
  5167  002148  22DA               	addwfc	fsr2h,f,c
  5168  00214A  CFDE F01B          	movff	postinc2,?_UART_buff_size
  5169  00214E  CFDD F01C          	movff	postdec2,?_UART_buff_size+1
  5170  002152  0012               	return	
  5171  002154  0012               	return		;funcret
  5172  002156                     __end_of_UART_buff_size:
  5173                           	opt stack 0
  5174                           tosu	equ	0xFFF
  5175                           tosh	equ	0xFFE
  5176                           tosl	equ	0xFFD
  5177                           pclath	equ	0xFFA
  5178                           tblptru	equ	0xFF8
  5179                           tblptrh	equ	0xFF7
  5180                           tblptrl	equ	0xFF6
  5181                           tablat	equ	0xFF5
  5182                           prodh	equ	0xFF4
  5183                           prodl	equ	0xFF3
  5184                           intcon	equ	0xFF2
  5185                           postinc0	equ	0xFEE
  5186                           wreg	equ	0xFE8
  5187                           indf2	equ	0xFDF
  5188                           postinc2	equ	0xFDE
  5189                           postdec2	equ	0xFDD
  5190                           plusw2	equ	0xFDB
  5191                           fsr2h	equ	0xFDA
  5192                           fsr2l	equ	0xFD9
  5193                           status	equ	0xFD8
  5194                           
  5195 ;; *************** function _CRC8 *****************
  5196 ;; Defined at:
  5197 ;;		line 34 in file "FastTransfer.c"
  5198 ;; Parameters:    Size  Location     Type
  5199 ;;  data            2   26[COMRAM] PTR const unsigned char 
  5200 ;;		 -> CRCcheck@arrayHolder(3), receiveData@holder_2178(3), receiveData@holder(3), rx_buffer(200), 
  5201 ;;		 -> ring_buffer(206), NULL(0), 
  5202 ;;  len             1   28[COMRAM] unsigned char 
  5203 ;; Auto vars:     Size  Location     Type
  5204 ;;  sum             1   29[COMRAM] unsigned char 
  5205 ;;  tempI           1   31[COMRAM] unsigned char 
  5206 ;;  extract         1   30[COMRAM] unsigned char 
  5207 ;;  crc             1   32[COMRAM] unsigned char 
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  1    wreg      unsigned char 
  5210 ;; Registers used:
  5211 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5217 ;;      Params:         3       0       0       0       0       0       0
  5218 ;;      Locals:         4       0       0       0       0       0       0
  5219 ;;      Temps:          0       0       0       0       0       0       0
  5220 ;;      Totals:         7       0       0       0       0       0       0
  5221 ;;Total ram usage:        7 bytes
  5222 ;; Hardware stack levels used:    1
  5223 ;; Hardware stack levels required when called:    4
  5224 ;; This function calls:
  5225 ;;		Nothing
  5226 ;; This function is called by:
  5227 ;;		_sendData
  5228 ;;		_receiveData
  5229 ;;		_CRCcheck
  5230 ;; This function uses a non-reentrant model
  5231 ;;
  5232                           
  5233                           	psect	text25
  5234  001C62                     __ptext25:
  5235                           	opt stack 0
  5236  001C62                     _CRC8:
  5237                           	opt stack 23
  5238                           
  5239                           ;FastTransfer.c: 35: unsigned char crc = 0x00;
  5240                           
  5241                           ;incstack = 0
  5242  001C62  0E00               	movlw	0
  5243  001C64  6E21               	movwf	CRC8@crc,c
  5244                           
  5245                           ;FastTransfer.c: 36: while (len--) {
  5246  001C66  D01F               	goto	l4146
  5247  001C68                     l4130:
  5248                           
  5249                           ;FastTransfer.c: 37: unsigned char extract = *data++;
  5250  001C68  C01B  FFD9         	movff	CRC8@data,fsr2l
  5251  001C6C  C01C  FFDA         	movff	CRC8@data+1,fsr2h
  5252  001C70  50DF               	movf	indf2,w,c
  5253  001C72  6E1F               	movwf	CRC8@extract,c
  5254  001C74  4A1B               	infsnz	CRC8@data,f,c
  5255  001C76  2A1C               	incf	CRC8@data+1,f,c
  5256                           
  5257                           ;FastTransfer.c: 38: unsigned char tempI;
  5258                           ;FastTransfer.c: 39: for (tempI = 8; tempI; tempI--) {
  5259  001C78  0E08               	movlw	8
  5260  001C7A  6E20               	movwf	CRC8@tempI,c
  5261  001C7C  D00F               	goto	l4144
  5262  001C7E                     l4136:
  5263                           
  5264                           ;FastTransfer.c: 40: unsigned char sum = (crc ^ extract) & 0x01;
  5265  001C7E  5021               	movf	CRC8@crc,w,c
  5266  001C80  181F               	xorwf	CRC8@extract,w,c
  5267  001C82  0B01               	andlw	1
  5268  001C84  6E1E               	movwf	CRC8@sum,c
  5269                           
  5270                           ;FastTransfer.c: 41: crc >>= 1;
  5271  001C86  90D8               	bcf	status,0,c
  5272  001C88  3221               	rrcf	CRC8@crc,f,c
  5273                           
  5274                           ;FastTransfer.c: 42: if (sum) {
  5275  001C8A  501E               	movf	CRC8@sum,w,c
  5276  001C8C  B4D8               	btfsc	status,2,c
  5277  001C8E  D002               	goto	l694
  5278                           
  5279                           ;FastTransfer.c: 43: crc ^= 0x8C;
  5280  001C90  0E8C               	movlw	140
  5281  001C92  1A21               	xorwf	CRC8@crc,f,c
  5282  001C94                     l694:
  5283                           
  5284                           ;FastTransfer.c: 44: }
  5285                           ;FastTransfer.c: 45: extract >>= 1;
  5286  001C94  90D8               	bcf	status,0,c
  5287  001C96  321F               	rrcf	CRC8@extract,f,c
  5288  001C98  0620               	decf	CRC8@tempI,f,c
  5289  001C9A  D000               	goto	l4144
  5290  001C9C                     l4144:
  5291  001C9C  5020               	movf	CRC8@tempI,w,c
  5292  001C9E  B4D8               	btfsc	status,2,c
  5293  001CA0  D002               	goto	l4146
  5294  001CA2  D7ED               	goto	l4136
  5295  001CA4  D000               	goto	l4146
  5296  001CA6                     l4146:
  5297  001CA6  061D               	decf	CRC8@len,f,c
  5298  001CA8  281D               	incf	CRC8@len,w,c
  5299  001CAA  A4D8               	btfss	status,2,c
  5300  001CAC  D7DD               	goto	l4130
  5301                           
  5302                           ;FastTransfer.c: 46: }
  5303                           ;FastTransfer.c: 47: }
  5304                           ;FastTransfer.c: 48: return crc;
  5305  001CAE  5021               	movf	CRC8@crc,w,c
  5306  001CB0  0012               	return	
  5307  001CB2  0012               	return		;funcret
  5308  001CB4                     __end_of_CRC8:
  5309                           	opt stack 0
  5310                           tosu	equ	0xFFF
  5311                           tosh	equ	0xFFE
  5312                           tosl	equ	0xFFD
  5313                           pclath	equ	0xFFA
  5314                           tblptru	equ	0xFF8
  5315                           tblptrh	equ	0xFF7
  5316                           tblptrl	equ	0xFF6
  5317                           tablat	equ	0xFF5
  5318                           prodh	equ	0xFF4
  5319                           prodl	equ	0xFF3
  5320                           intcon	equ	0xFF2
  5321                           postinc0	equ	0xFEE
  5322                           wreg	equ	0xFE8
  5323                           indf2	equ	0xFDF
  5324                           postinc2	equ	0xFDE
  5325                           postdec2	equ	0xFDD
  5326                           plusw2	equ	0xFDB
  5327                           fsr2h	equ	0xFDA
  5328                           fsr2l	equ	0xFD9
  5329                           status	equ	0xFD8
  5330                           
  5331 ;; *************** function _handleIndicators *****************
  5332 ;; Defined at:
  5333 ;;		line 28 in file "Communications.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;  receivedIndi    2   31[COMRAM] int 
  5336 ;; Auto vars:     Size  Location     Type
  5337 ;;  i               2   36[COMRAM] int 
  5338 ;; Return value:  Size  Location     Type
  5339 ;;		None               void
  5340 ;; Registers used:
  5341 ;;		wreg, status,2, status,0, cstack
  5342 ;; Tracked objects:
  5343 ;;		On entry : 0/0
  5344 ;;		On exit  : 0/0
  5345 ;;		Unchanged: 0/0
  5346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5347 ;;      Params:         2       0       0       0       0       0       0
  5348 ;;      Locals:         2       0       0       0       0       0       0
  5349 ;;      Temps:          3       0       0       0       0       0       0
  5350 ;;      Totals:         7       0       0       0       0       0       0
  5351 ;;Total ram usage:        7 bytes
  5352 ;; Hardware stack levels used:    1
  5353 ;; Hardware stack levels required when called:    5
  5354 ;; This function calls:
  5355 ;;		_SetLEDOut
  5356 ;; This function is called by:
  5357 ;;		_updateComms
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           	psect	text26
  5362  0019EE                     __ptext26:
  5363                           	opt stack 0
  5364  0019EE                     _handleIndicators:
  5365                           	opt stack 24
  5366                           
  5367                           ;Communications.c: 29: static int oldIndicators=0;
  5368                           ;Communications.c: 30: if(receivedIndicators!=oldIndicators){
  5369                           
  5370                           ;incstack = 0
  5371  0019EE  0100               	movlb	0	; () banked
  5372  0019F0  51A9               	movf	handleIndicators@oldIndicators& (0+255),w,b
  5373  0019F2  1820               	xorwf	handleIndicators@receivedIndicators,w,c
  5374  0019F4  E105               	bnz	u5400
  5375  0019F6  0100               	movlb	0	; () banked
  5376  0019F8  51AA               	movf	(handleIndicators@oldIndicators+1)& (0+255),w,b
  5377  0019FA  1821               	xorwf	handleIndicators@receivedIndicators+1,w,c
  5378  0019FC  B4D8               	btfsc	status,2,c
  5379  0019FE  0012               	return	
  5380  001A00                     u5400:
  5381                           
  5382                           ; BSR set to: 0
  5383                           ;Communications.c: 31: int i=0;
  5384  001A00  0E00               	movlw	0
  5385  001A02  6E26               	movwf	handleIndicators@i+1,c
  5386  001A04  0E00               	movlw	0
  5387  001A06  6E25               	movwf	handleIndicators@i,c
  5388                           
  5389                           ;Communications.c: 32: for(i=0;i<6;i++){
  5390  001A08  0E00               	movlw	0
  5391  001A0A  6E26               	movwf	handleIndicators@i+1,c
  5392  001A0C  0E00               	movlw	0
  5393  001A0E  6E25               	movwf	handleIndicators@i,c
  5394                           
  5395                           ; BSR set to: 0
  5396  001A10  BE26               	btfsc	handleIndicators@i+1,7,c
  5397  001A12  D008               	goto	l4732
  5398  001A14  5026               	movf	handleIndicators@i+1,w,c
  5399  001A16  E123               	bnz	l618
  5400  001A18  0E06               	movlw	6
  5401  001A1A  5C25               	subwf	handleIndicators@i,w,c
  5402  001A1C  B0D8               	btfsc	status,0,c
  5403  001A1E  D01F               	goto	l618
  5404  001A20  D001               	goto	l4732
  5405                           
  5406                           ; BSR set to: 0
  5407  001A22  D01D               	goto	l618
  5408  001A24                     l4732:
  5409                           
  5410                           ;Communications.c: 33: SetLEDOut(i,((receivedIndicators>>i)&0x01));
  5411  001A24  C025  F01B         	movff	handleIndicators@i,SetLEDOut@lednum
  5412  001A28  C026  F01C         	movff	handleIndicators@i+1,SetLEDOut@lednum+1
  5413  001A2C  C025  F022         	movff	handleIndicators@i,??_handleIndicators
  5414  001A30  C020  F023         	movff	handleIndicators@receivedIndicators,??_handleIndicators+1
  5415  001A34  C021  F024         	movff	handleIndicators@receivedIndicators+1,??_handleIndicators+2
  5416  001A38  2A22               	incf	??_handleIndicators,f,c
  5417  001A3A  D003               	goto	u5424
  5418  001A3C                     u5425:
  5419  001A3C  3424               	rlcf	??_handleIndicators+2,w,c
  5420  001A3E  3224               	rrcf	??_handleIndicators+2,f,c
  5421  001A40  3223               	rrcf	??_handleIndicators+1,f,c
  5422  001A42                     u5424:
  5423  001A42  2E22               	decfsz	??_handleIndicators,f,c
  5424  001A44  D7FB               	goto	u5425
  5425  001A46  5023               	movf	??_handleIndicators+1,w,c
  5426  001A48  0B01               	andlw	1
  5427  001A4A  6E1D               	movwf	SetLEDOut@state,c
  5428  001A4C  EC69  F00C         	call	_SetLEDOut	;wreg free
  5429  001A50  4A25               	infsnz	handleIndicators@i,f,c
  5430  001A52  2A26               	incf	handleIndicators@i+1,f,c
  5431  001A54  BE26               	btfsc	handleIndicators@i+1,7,c
  5432  001A56  D7E6               	goto	l4732
  5433  001A58  5026               	movf	handleIndicators@i+1,w,c
  5434  001A5A  E101               	bnz	u5430
  5435  001A5C  D7DD               	goto	L2
  5436  001A5E                     u5430:
  5437  001A5E                     l618:
  5438                           
  5439                           ;Communications.c: 34: }
  5440                           ;Communications.c: 35: oldIndicators=receivedIndicators;
  5441  001A5E  C020  F0A9         	movff	handleIndicators@receivedIndicators,handleIndicators@oldIndicators
  5442  001A62  C021  F0AA         	movff	handleIndicators@receivedIndicators+1,handleIndicators@oldIndicators+1
  5443  001A66  0012               	return	
  5444  001A68  0012               	return		;funcret
  5445  001A6A                     __end_of_handleIndicators:
  5446                           	opt stack 0
  5447                           tosu	equ	0xFFF
  5448                           tosh	equ	0xFFE
  5449                           tosl	equ	0xFFD
  5450                           pclath	equ	0xFFA
  5451                           tblptru	equ	0xFF8
  5452                           tblptrh	equ	0xFF7
  5453                           tblptrl	equ	0xFF6
  5454                           tablat	equ	0xFF5
  5455                           prodh	equ	0xFF4
  5456                           prodl	equ	0xFF3
  5457                           intcon	equ	0xFF2
  5458                           postinc0	equ	0xFEE
  5459                           wreg	equ	0xFE8
  5460                           indf2	equ	0xFDF
  5461                           postinc2	equ	0xFDE
  5462                           postdec2	equ	0xFDD
  5463                           plusw2	equ	0xFDB
  5464                           fsr2h	equ	0xFDA
  5465                           fsr2l	equ	0xFD9
  5466                           status	equ	0xFD8
  5467                           
  5468 ;; *************** function _SetLEDOut *****************
  5469 ;; Defined at:
  5470 ;;		line 13 in file "IO.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;  lednum          2   26[COMRAM] int 
  5473 ;;  state           1   28[COMRAM] unsigned char 
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;		None
  5476 ;; Return value:  Size  Location     Type
  5477 ;;		None               void
  5478 ;; Registers used:
  5479 ;;		wreg, status,2, status,0
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5485 ;;      Params:         3       0       0       0       0       0       0
  5486 ;;      Locals:         0       0       0       0       0       0       0
  5487 ;;      Temps:          2       0       0       0       0       0       0
  5488 ;;      Totals:         5       0       0       0       0       0       0
  5489 ;;Total ram usage:        5 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; Hardware stack levels required when called:    4
  5492 ;; This function calls:
  5493 ;;		Nothing
  5494 ;; This function is called by:
  5495 ;;		_handleIndicators
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499                           	psect	text27
  5500  0018D2                     __ptext27:
  5501                           	opt stack 0
  5502  0018D2                     _SetLEDOut:
  5503                           	opt stack 24
  5504                           
  5505                           ;IO.c: 15: switch (lednum)
  5506                           
  5507                           ;incstack = 0
  5508  0018D2  D02A               	goto	l4270
  5509  0018D4                     l4256:
  5510                           
  5511                           ;IO.c: 18: if(state)do { LATB3 = 1; } while(0);
  5512  0018D4  501D               	movf	SetLEDOut@state,w,c
  5513  0018D6  B4D8               	btfsc	status,2,c
  5514  0018D8  D002               	goto	l527
  5515  0018DA  868A               	bsf	3978,3,c	;volatile
  5516  0018DC  0012               	return	
  5517  0018DE                     l527:
  5518  0018DE  968A               	bcf	3978,3,c	;volatile
  5519                           
  5520                           ;IO.c: 20: break;
  5521  0018E0  0012               	return	
  5522  0018E2                     l4258:
  5523                           
  5524                           ;IO.c: 22: if(state)do { LATB5 = 1; } while(0);
  5525  0018E2  501D               	movf	SetLEDOut@state,w,c
  5526  0018E4  B4D8               	btfsc	status,2,c
  5527  0018E6  D002               	goto	l535
  5528  0018E8  8A8A               	bsf	3978,5,c	;volatile
  5529  0018EA  0012               	return	
  5530  0018EC                     l535:
  5531  0018EC  9A8A               	bcf	3978,5,c	;volatile
  5532                           
  5533                           ;IO.c: 24: break;
  5534  0018EE  0012               	return	
  5535  0018F0                     l4260:
  5536                           
  5537                           ;IO.c: 26: if(state)do { LATD1 = 1; } while(0);
  5538  0018F0  501D               	movf	SetLEDOut@state,w,c
  5539  0018F2  B4D8               	btfsc	status,2,c
  5540  0018F4  D002               	goto	l542
  5541  0018F6  828C               	bsf	3980,1,c	;volatile
  5542  0018F8  0012               	return	
  5543  0018FA                     l542:
  5544  0018FA  928C               	bcf	3980,1,c	;volatile
  5545                           
  5546                           ;IO.c: 28: break;
  5547  0018FC  0012               	return	
  5548  0018FE                     l4262:
  5549                           
  5550                           ;IO.c: 30: if(state)do { LATE2 = 1; } while(0);
  5551  0018FE  501D               	movf	SetLEDOut@state,w,c
  5552  001900  B4D8               	btfsc	status,2,c
  5553  001902  D002               	goto	l549
  5554  001904  848D               	bsf	3981,2,c	;volatile
  5555  001906  0012               	return	
  5556  001908                     l549:
  5557  001908  948D               	bcf	3981,2,c	;volatile
  5558                           
  5559                           ;IO.c: 32: break;
  5560  00190A  0012               	return	
  5561  00190C                     l4264:
  5562                           
  5563                           ;IO.c: 34: if(state)do { LATE1 = 1; } while(0);
  5564  00190C  501D               	movf	SetLEDOut@state,w,c
  5565  00190E  B4D8               	btfsc	status,2,c
  5566  001910  D002               	goto	l556
  5567  001912  828D               	bsf	3981,1,c	;volatile
  5568  001914  0012               	return	
  5569  001916                     l556:
  5570  001916  928D               	bcf	3981,1,c	;volatile
  5571                           
  5572                           ;IO.c: 36: break;
  5573  001918  0012               	return	
  5574  00191A                     l4266:
  5575                           
  5576                           ;IO.c: 38: if(state)do { LATE1 = 1; } while(0);
  5577  00191A  501D               	movf	SetLEDOut@state,w,c
  5578  00191C  B4D8               	btfsc	status,2,c
  5579  00191E  D002               	goto	l563
  5580  001920  828D               	bsf	3981,1,c	;volatile
  5581  001922  0012               	return	
  5582  001924                     l563:
  5583  001924  928D               	bcf	3981,1,c	;volatile
  5584                           
  5585                           ;IO.c: 41: }
  5586                           
  5587                           ;IO.c: 40: break;
  5588  001926  0012               	return	
  5589  001928                     l4270:
  5590  001928  C01B  F01E         	movff	SetLEDOut@lednum,??_SetLEDOut
  5591  00192C  C01C  F01F         	movff	SetLEDOut@lednum+1,??_SetLEDOut+1
  5592                           
  5593                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5594                           ; Switch size 1, requested type "space"
  5595                           ; Number of cases is 1, Range of values is 0 to 0
  5596                           ; switch strategies available:
  5597                           ; Name         Instructions Cycles
  5598                           ; simple_byte            4     3 (average)
  5599                           ;	Chosen strategy is simple_byte
  5600  001930  501F               	movf	??_SetLEDOut+1,w,c
  5601  001932  0A00               	xorlw	0	; case 0
  5602  001934  A4D8               	btfss	status,2,c
  5603  001936  0012               	return	
  5604                           
  5605                           ; Switch size 1, requested type "space"
  5606                           ; Number of cases is 6, Range of values is 0 to 5
  5607                           ; switch strategies available:
  5608                           ; Name         Instructions Cycles
  5609                           ; simple_byte           19    10 (average)
  5610                           ;	Chosen strategy is simple_byte
  5611  001938  501E               	movf	??_SetLEDOut,w,c
  5612  00193A  0A00               	xorlw	0	; case 0
  5613  00193C  B4D8               	btfsc	status,2,c
  5614  00193E  D7CA               	goto	l4256
  5615  001940  0A01               	xorlw	1	; case 1
  5616  001942  B4D8               	btfsc	status,2,c
  5617  001944  D7CE               	goto	l4258
  5618  001946  0A03               	xorlw	3	; case 2
  5619  001948  B4D8               	btfsc	status,2,c
  5620  00194A  D7D2               	goto	l4260
  5621  00194C  0A01               	xorlw	1	; case 3
  5622  00194E  B4D8               	btfsc	status,2,c
  5623  001950  D7D6               	goto	l4262
  5624  001952  0A07               	xorlw	7	; case 4
  5625  001954  B4D8               	btfsc	status,2,c
  5626  001956  D7DA               	goto	l4264
  5627  001958  0A01               	xorlw	1	; case 5
  5628  00195A  A4D8               	btfss	status,2,c
  5629  00195C  0012               	return	
  5630  00195E  D7DD               	goto	l4266
  5631  001960  0012               	return		;funcret
  5632  001962                     __end_of_SetLEDOut:
  5633                           	opt stack 0
  5634                           tosu	equ	0xFFF
  5635                           tosh	equ	0xFFE
  5636                           tosl	equ	0xFFD
  5637                           pclath	equ	0xFFA
  5638                           tblptru	equ	0xFF8
  5639                           tblptrh	equ	0xFF7
  5640                           tblptrl	equ	0xFF6
  5641                           tablat	equ	0xFF5
  5642                           prodh	equ	0xFF4
  5643                           prodl	equ	0xFF3
  5644                           intcon	equ	0xFF2
  5645                           postinc0	equ	0xFEE
  5646                           wreg	equ	0xFE8
  5647                           indf2	equ	0xFDF
  5648                           postinc2	equ	0xFDE
  5649                           postdec2	equ	0xFDD
  5650                           plusw2	equ	0xFDB
  5651                           fsr2h	equ	0xFDA
  5652                           fsr2l	equ	0xFD9
  5653                           status	equ	0xFD8
  5654                           
  5655 ;; *************** function _SYSTEM_Initialize *****************
  5656 ;; Defined at:
  5657 ;;		line 112 in file "mcc_generated_files/mcc.c"
  5658 ;; Parameters:    Size  Location     Type
  5659 ;;		None
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;		None
  5662 ;; Return value:  Size  Location     Type
  5663 ;;		None               void
  5664 ;; Registers used:
  5665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5671 ;;      Params:         0       0       0       0       0       0       0
  5672 ;;      Locals:         0       0       0       0       0       0       0
  5673 ;;      Temps:          0       0       0       0       0       0       0
  5674 ;;      Totals:         0       0       0       0       0       0       0
  5675 ;;Total ram usage:        0 bytes
  5676 ;; Hardware stack levels used:    1
  5677 ;; Hardware stack levels required when called:    7
  5678 ;; This function calls:
  5679 ;;		_ADC_Initialize
  5680 ;;		_EUSART1_Initialize
  5681 ;;		_I2C1_Initialize
  5682 ;;		_INTERRUPT_Initialize
  5683 ;;		_OSCILLATOR_Initialize
  5684 ;;		_PIN_MANAGER_Initialize
  5685 ;;		_TMR0_Initialize
  5686 ;;		_begin
  5687 ;; This function is called by:
  5688 ;;		_main
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text28
  5693  001A6A                     __ptext28:
  5694                           	opt stack 0
  5695  001A6A                     _SYSTEM_Initialize:
  5696                           	opt stack 23
  5697                           
  5698                           ;mcc.c: 114: OSCILLATOR_Initialize();
  5699                           
  5700                           ;incstack = 0
  5701  001A6A  ECDB  F010         	call	_OSCILLATOR_Initialize	;wreg free
  5702                           
  5703                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  5704  001A6E  EC5A  F00E         	call	_PIN_MANAGER_Initialize	;wreg free
  5705                           
  5706                           ;mcc.c: 116: INTERRUPT_Initialize();
  5707  001A72  ECD3  F010         	call	_INTERRUPT_Initialize	;wreg free
  5708                           
  5709                           ;mcc.c: 117: ADC_Initialize();
  5710  001A76  ECAB  F010         	call	_ADC_Initialize	;wreg free
  5711                           
  5712                           ;mcc.c: 118: TMR0_Initialize();
  5713  001A7A  EC4B  F010         	call	_TMR0_Initialize	;wreg free
  5714                           
  5715                           ;mcc.c: 119: EUSART1_Initialize();
  5716  001A7E  EC2C  F00F         	call	_EUSART1_Initialize	;wreg free
  5717                           
  5718                           ;mcc.c: 120: begin(receiveArray, sizeof (receiveArray), 3, 0, Send_put, Receive_get, Rec
      +                          eive_available, Receive_peek);
  5719  001A82  0EAB               	movlw	low _receiveArray
  5720  001A84  0100               	movlb	0	; () banked
  5721  001A86  6FF3               	movwf	begin@ptr& (0+255),b
  5722  001A88  0E00               	movlw	high _receiveArray
  5723  001A8A  0100               	movlb	0	; () banked
  5724  001A8C  6FF4               	movwf	(begin@ptr+1)& (0+255),b
  5725  001A8E  0E28               	movlw	40
  5726  001A90  0100               	movlb	0	; () banked
  5727  001A92  6FF5               	movwf	begin@maxSize& (0+255),b
  5728  001A94  0E03               	movlw	3
  5729  001A96  0100               	movlb	0	; () banked
  5730  001A98  6FF6               	movwf	begin@givenAddress& (0+255),b
  5731  001A9A  0E00               	movlw	0
  5732  001A9C  0100               	movlb	0	; () banked
  5733  001A9E  6FF7               	movwf	begin@error& (0+255),b
  5734  001AA0  0E32               	movlw	low _Send_put
  5735  001AA2  0100               	movlb	0	; () banked
  5736  001AA4  6FF8               	movwf	begin@stufftosend& (0+255),b
  5737  001AA6  0E1F               	movlw	high _Send_put
  5738  001AA8  0100               	movlb	0	; () banked
  5739  001AAA  6FF9               	movwf	(begin@stufftosend+1)& (0+255),b
  5740  001AAC  0E96               	movlw	low _Receive_get
  5741  001AAE  0100               	movlb	0	; () banked
  5742  001AB0  6FFA               	movwf	begin@stufftoreceive& (0+255),b
  5743  001AB2  0E21               	movlw	high _Receive_get
  5744  001AB4  0100               	movlb	0	; () banked
  5745  001AB6  6FFB               	movwf	(begin@stufftoreceive+1)& (0+255),b
  5746  001AB8  0E26               	movlw	low _Receive_available
  5747  001ABA  0100               	movlb	0	; () banked
  5748  001ABC  6FFC               	movwf	begin@stuffavailable& (0+255),b
  5749  001ABE  0E21               	movlw	high _Receive_available
  5750  001AC0  0100               	movlb	0	; () banked
  5751  001AC2  6FFD               	movwf	(begin@stuffavailable+1)& (0+255),b
  5752  001AC4  0E86               	movlw	low _Receive_peek
  5753  001AC6  0100               	movlb	0	; () banked
  5754  001AC8  6FFE               	movwf	begin@stuffpeek& (0+255),b
  5755  001ACA  0E21               	movlw	high _Receive_peek
  5756  001ACC  0100               	movlb	0	; () banked
  5757  001ACE  6FFF               	movwf	(begin@stuffpeek+1)& (0+255),b
  5758  001AD0  EC02  F00E         	call	_begin	;wreg free
  5759                           
  5760                           ;mcc.c: 121: I2C1_Initialize();
  5761  001AD4  EC0E  F00F         	call	_I2C1_Initialize	;wreg free
  5762  001AD8  0012               	return		;funcret
  5763  001ADA                     __end_of_SYSTEM_Initialize:
  5764                           	opt stack 0
  5765                           tosu	equ	0xFFF
  5766                           tosh	equ	0xFFE
  5767                           tosl	equ	0xFFD
  5768                           pclath	equ	0xFFA
  5769                           tblptru	equ	0xFF8
  5770                           tblptrh	equ	0xFF7
  5771                           tblptrl	equ	0xFF6
  5772                           tablat	equ	0xFF5
  5773                           prodh	equ	0xFF4
  5774                           prodl	equ	0xFF3
  5775                           intcon	equ	0xFF2
  5776                           postinc0	equ	0xFEE
  5777                           wreg	equ	0xFE8
  5778                           indf2	equ	0xFDF
  5779                           postinc2	equ	0xFDE
  5780                           postdec2	equ	0xFDD
  5781                           plusw2	equ	0xFDB
  5782                           fsr2h	equ	0xFDA
  5783                           fsr2l	equ	0xFD9
  5784                           status	equ	0xFD8
  5785                           
  5786 ;; *************** function _begin *****************
  5787 ;; Defined at:
  5788 ;;		line 18 in file "FastTransfer.c"
  5789 ;; Parameters:    Size  Location     Type
  5790 ;;  ptr             2    0[BANK0 ] PTR volatile int 
  5791 ;;		 -> receiveArray(40), 
  5792 ;;  maxSize         1    2[BANK0 ] unsigned char 
  5793 ;;  givenAddress    1    3[BANK0 ] unsigned char 
  5794 ;;  error           1    4[BANK0 ] unsigned char 
  5795 ;;  stufftosend     2    5[BANK0 ] PTR FTN(unsigned char ,)
  5796 ;;		 -> Send_put(0), 
  5797 ;;  stufftorecei    2    7[BANK0 ] PTR FTN()unsigned char 
  5798 ;;		 -> Receive_get(1), 
  5799 ;;  stuffavailab    2    9[BANK0 ] PTR FTN()int 
  5800 ;;		 -> Receive_available(2), 
  5801 ;;  stuffpeek       2   11[BANK0 ] PTR FTN()unsigned char 
  5802 ;;		 -> Receive_peek(1), 
  5803 ;; Auto vars:     Size  Location     Type
  5804 ;;		None
  5805 ;; Return value:  Size  Location     Type
  5806 ;;		None               void
  5807 ;; Registers used:
  5808 ;;		wreg, status,2, status,0, cstack
  5809 ;; Tracked objects:
  5810 ;;		On entry : 0/0
  5811 ;;		On exit  : 0/0
  5812 ;;		Unchanged: 0/0
  5813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5814 ;;      Params:         0      13       0       0       0       0       0
  5815 ;;      Locals:         0       0       0       0       0       0       0
  5816 ;;      Temps:          0       0       0       0       0       0       0
  5817 ;;      Totals:         0      13       0       0       0       0       0
  5818 ;;Total ram usage:       13 bytes
  5819 ;; Hardware stack levels used:    1
  5820 ;; Hardware stack levels required when called:    5
  5821 ;; This function calls:
  5822 ;;		___awdiv
  5823 ;; This function is called by:
  5824 ;;		_SYSTEM_Initialize
  5825 ;; This function uses a non-reentrant model
  5826 ;;
  5827                           
  5828                           	psect	text29
  5829  001C04                     __ptext29:
  5830                           	opt stack 0
  5831  001C04                     _begin:
  5832                           	opt stack 24
  5833                           
  5834                           ;FastTransfer.c: 19: receiveArrayAddress = ptr;
  5835                           
  5836                           ;incstack = 0
  5837  001C04  C0F3  F0A3         	movff	begin@ptr,_receiveArrayAddress
  5838  001C08  C0F4  F0A4         	movff	begin@ptr+1,_receiveArrayAddress+1
  5839                           
  5840                           ;FastTransfer.c: 20: moduleAddress = givenAddress;
  5841  001C0C  C0F6  F03A         	movff	begin@givenAddress,_moduleAddress
  5842                           
  5843                           ;FastTransfer.c: 21: serial_write = stufftosend;
  5844  001C10  C0F8  F031         	movff	begin@stufftosend,_serial_write
  5845  001C14  C0F9  F032         	movff	begin@stufftosend+1,_serial_write+1
  5846                           
  5847                           ;FastTransfer.c: 22: serial_available = stuffavailable;
  5848  001C18  C0FC  F02D         	movff	begin@stuffavailable,_serial_available
  5849  001C1C  C0FD  F02E         	movff	begin@stuffavailable+1,_serial_available+1
  5850                           
  5851                           ;FastTransfer.c: 23: serial_peek = stuffpeek;
  5852  001C20  C0FE  F0A7         	movff	begin@stuffpeek,_serial_peek
  5853  001C24  C0FF  F0A8         	movff	begin@stuffpeek+1,_serial_peek+1
  5854                           
  5855                           ;FastTransfer.c: 24: serial_read = stufftoreceive;
  5856  001C28  C0FA  F02F         	movff	begin@stufftoreceive,_serial_read
  5857  001C2C  C0FB  F030         	movff	begin@stufftoreceive+1,_serial_read+1
  5858                           
  5859                           ;FastTransfer.c: 25: maxDataAddress = maxSize / 2;
  5860  001C30  C0F5  F01B         	movff	begin@maxSize,___awdiv@dividend
  5861  001C34  6A1C               	clrf	___awdiv@dividend+1,c
  5862  001C36  0E00               	movlw	0
  5863  001C38  6E1E               	movwf	___awdiv@divisor+1,c
  5864  001C3A  0E02               	movlw	2
  5865  001C3C  6E1D               	movwf	___awdiv@divisor,c
  5866  001C3E  EC8A  F00B         	call	___awdiv	;wreg free
  5867  001C42  501B               	movf	?___awdiv,w,c
  5868  001C44  6E39               	movwf	_maxDataAddress,c
  5869                           
  5870                           ;FastTransfer.c: 26: sendStructAddress = (unsigned char*) & ring_buffer;
  5871  001C46  0E00               	movlw	low _ring_buffer
  5872  001C48  0100               	movlb	0	; () banked
  5873  001C4A  6FA5               	movwf	_sendStructAddress& (0+255),b
  5874  001C4C  0E01               	movlw	high _ring_buffer
  5875  001C4E  0100               	movlb	0	; () banked
  5876  001C50  6FA6               	movwf	(_sendStructAddress+1)& (0+255),b
  5877                           
  5878                           ; BSR set to: 0
  5879                           ;FastTransfer.c: 27: AKNAKsend = error;
  5880  001C52  C0F7  F035         	movff	begin@error,_AKNAKsend
  5881                           
  5882                           ; BSR set to: 0
  5883                           ;FastTransfer.c: 28: alignErrorCounter = 0;
  5884  001C56  0E00               	movlw	0
  5885  001C58  0100               	movlb	0	; () banked
  5886  001C5A  6F9E               	movwf	(_alignErrorCounter+1)& (0+255),b
  5887  001C5C  0E00               	movlw	0
  5888  001C5E  6F9D               	movwf	_alignErrorCounter& (0+255),b
  5889                           
  5890                           ; BSR set to: 0
  5891  001C60  0012               	return		;funcret
  5892  001C62                     __end_of_begin:
  5893                           	opt stack 0
  5894                           tosu	equ	0xFFF
  5895                           tosh	equ	0xFFE
  5896                           tosl	equ	0xFFD
  5897                           pclath	equ	0xFFA
  5898                           tblptru	equ	0xFF8
  5899                           tblptrh	equ	0xFF7
  5900                           tblptrl	equ	0xFF6
  5901                           tablat	equ	0xFF5
  5902                           prodh	equ	0xFF4
  5903                           prodl	equ	0xFF3
  5904                           intcon	equ	0xFF2
  5905                           postinc0	equ	0xFEE
  5906                           wreg	equ	0xFE8
  5907                           indf2	equ	0xFDF
  5908                           postinc2	equ	0xFDE
  5909                           postdec2	equ	0xFDD
  5910                           plusw2	equ	0xFDB
  5911                           fsr2h	equ	0xFDA
  5912                           fsr2l	equ	0xFD9
  5913                           status	equ	0xFD8
  5914                           
  5915 ;; *************** function ___awdiv *****************
  5916 ;; Defined at:
  5917 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  5918 ;; Parameters:    Size  Location     Type
  5919 ;;  dividend        2   26[COMRAM] int 
  5920 ;;  divisor         2   28[COMRAM] int 
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;  quotient        2   32[COMRAM] int 
  5923 ;;  sign            1   31[COMRAM] unsigned char 
  5924 ;;  counter         1   30[COMRAM] unsigned char 
  5925 ;; Return value:  Size  Location     Type
  5926 ;;                  2   26[COMRAM] int 
  5927 ;; Registers used:
  5928 ;;		wreg, status,2, status,0
  5929 ;; Tracked objects:
  5930 ;;		On entry : 0/0
  5931 ;;		On exit  : 0/0
  5932 ;;		Unchanged: 0/0
  5933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5934 ;;      Params:         4       0       0       0       0       0       0
  5935 ;;      Locals:         4       0       0       0       0       0       0
  5936 ;;      Temps:          0       0       0       0       0       0       0
  5937 ;;      Totals:         8       0       0       0       0       0       0
  5938 ;;Total ram usage:        8 bytes
  5939 ;; Hardware stack levels used:    1
  5940 ;; Hardware stack levels required when called:    4
  5941 ;; This function calls:
  5942 ;;		Nothing
  5943 ;; This function is called by:
  5944 ;;		_begin
  5945 ;;		_LEDsetBar
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           
  5949                           	psect	text30
  5950  001714                     __ptext30:
  5951                           	opt stack 0
  5952  001714                     ___awdiv:
  5953                           	opt stack 24
  5954                           
  5955                           ; BSR set to: 0
  5956                           ;incstack = 0
  5957  001714  0E00               	movlw	0
  5958  001716  6E20               	movwf	___awdiv@sign,c
  5959  001718  AE1E               	btfss	___awdiv@divisor+1,7,c
  5960  00171A  D007               	goto	l4366
  5961  00171C  6C1D               	negf	___awdiv@divisor,c
  5962  00171E  1E1E               	comf	___awdiv@divisor+1,f,c
  5963  001720  B0D8               	btfsc	status,0,c
  5964  001722  2A1E               	incf	___awdiv@divisor+1,f,c
  5965  001724  0E01               	movlw	1
  5966  001726  6E20               	movwf	___awdiv@sign,c
  5967  001728  D000               	goto	l4366
  5968  00172A                     l4366:
  5969  00172A  AE1C               	btfss	___awdiv@dividend+1,7,c
  5970  00172C  D007               	goto	l4372
  5971  00172E  6C1B               	negf	___awdiv@dividend,c
  5972  001730  1E1C               	comf	___awdiv@dividend+1,f,c
  5973  001732  B0D8               	btfsc	status,0,c
  5974  001734  2A1C               	incf	___awdiv@dividend+1,f,c
  5975  001736  0E01               	movlw	1
  5976  001738  1A20               	xorwf	___awdiv@sign,f,c
  5977  00173A  D000               	goto	l4372
  5978  00173C                     l4372:
  5979  00173C  0E00               	movlw	0
  5980  00173E  6E22               	movwf	___awdiv@quotient+1,c
  5981  001740  0E00               	movlw	0
  5982  001742  6E21               	movwf	___awdiv@quotient,c
  5983  001744  501D               	movf	___awdiv@divisor,w,c
  5984  001746  101E               	iorwf	___awdiv@divisor+1,w,c
  5985  001748  B4D8               	btfsc	status,2,c
  5986  00174A  D021               	goto	l4394
  5987  00174C  0E01               	movlw	1
  5988  00174E  6E1F               	movwf	___awdiv@counter,c
  5989  001750  D005               	goto	l4380
  5990  001752                     l4378:
  5991  001752  90D8               	bcf	status,0,c
  5992  001754  361D               	rlcf	___awdiv@divisor,f,c
  5993  001756  361E               	rlcf	___awdiv@divisor+1,f,c
  5994  001758  2A1F               	incf	___awdiv@counter,f,c
  5995  00175A  D000               	goto	l4380
  5996  00175C                     l4380:
  5997  00175C  BE1E               	btfsc	___awdiv@divisor+1,7,c
  5998  00175E  D002               	goto	l4382
  5999  001760  D7F8               	goto	l4378
  6000  001762  D000               	goto	l4382
  6001  001764                     l4382:
  6002  001764  90D8               	bcf	status,0,c
  6003  001766  3621               	rlcf	___awdiv@quotient,f,c
  6004  001768  3622               	rlcf	___awdiv@quotient+1,f,c
  6005  00176A  501D               	movf	___awdiv@divisor,w,c
  6006  00176C  5C1B               	subwf	___awdiv@dividend,w,c
  6007  00176E  501E               	movf	___awdiv@divisor+1,w,c
  6008  001770  581C               	subwfb	___awdiv@dividend+1,w,c
  6009  001772  A0D8               	btfss	status,0,c
  6010  001774  D006               	goto	l4390
  6011  001776  501D               	movf	___awdiv@divisor,w,c
  6012  001778  5E1B               	subwf	___awdiv@dividend,f,c
  6013  00177A  501E               	movf	___awdiv@divisor+1,w,c
  6014  00177C  5A1C               	subwfb	___awdiv@dividend+1,f,c
  6015  00177E  8021               	bsf	___awdiv@quotient,0,c
  6016  001780  D000               	goto	l4390
  6017  001782                     l4390:
  6018  001782  90D8               	bcf	status,0,c
  6019  001784  321E               	rrcf	___awdiv@divisor+1,f,c
  6020  001786  321D               	rrcf	___awdiv@divisor,f,c
  6021  001788  2E1F               	decfsz	___awdiv@counter,f,c
  6022  00178A  D7EC               	goto	l4382
  6023  00178C  D000               	goto	l4394
  6024  00178E                     l4394:
  6025  00178E  5020               	movf	___awdiv@sign,w,c
  6026  001790  B4D8               	btfsc	status,2,c
  6027  001792  D005               	goto	l4398
  6028  001794  6C21               	negf	___awdiv@quotient,c
  6029  001796  1E22               	comf	___awdiv@quotient+1,f,c
  6030  001798  B0D8               	btfsc	status,0,c
  6031  00179A  2A22               	incf	___awdiv@quotient+1,f,c
  6032  00179C  D000               	goto	l4398
  6033  00179E                     l4398:
  6034  00179E  C021  F01B         	movff	___awdiv@quotient,?___awdiv
  6035  0017A2  C022  F01C         	movff	___awdiv@quotient+1,?___awdiv+1
  6036  0017A6  0012               	return	
  6037  0017A8  0012               	return		;funcret
  6038  0017AA                     __end_of___awdiv:
  6039                           	opt stack 0
  6040                           tosu	equ	0xFFF
  6041                           tosh	equ	0xFFE
  6042                           tosl	equ	0xFFD
  6043                           pclath	equ	0xFFA
  6044                           tblptru	equ	0xFF8
  6045                           tblptrh	equ	0xFF7
  6046                           tblptrl	equ	0xFF6
  6047                           tablat	equ	0xFF5
  6048                           prodh	equ	0xFF4
  6049                           prodl	equ	0xFF3
  6050                           intcon	equ	0xFF2
  6051                           postinc0	equ	0xFEE
  6052                           wreg	equ	0xFE8
  6053                           indf2	equ	0xFDF
  6054                           postinc2	equ	0xFDE
  6055                           postdec2	equ	0xFDD
  6056                           plusw2	equ	0xFDB
  6057                           fsr2h	equ	0xFDA
  6058                           fsr2l	equ	0xFD9
  6059                           status	equ	0xFD8
  6060                           
  6061 ;; *************** function _TMR0_Initialize *****************
  6062 ;; Defined at:
  6063 ;;		line 22 in file "mcc_generated_files/tmr0.c"
  6064 ;; Parameters:    Size  Location     Type
  6065 ;;		None
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;		None
  6068 ;; Return value:  Size  Location     Type
  6069 ;;		None               void
  6070 ;; Registers used:
  6071 ;;		wreg, status,2, cstack
  6072 ;; Tracked objects:
  6073 ;;		On entry : 0/0
  6074 ;;		On exit  : 0/0
  6075 ;;		Unchanged: 0/0
  6076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6077 ;;      Params:         0       0       0       0       0       0       0
  6078 ;;      Locals:         0       0       0       0       0       0       0
  6079 ;;      Temps:          0       0       0       0       0       0       0
  6080 ;;      Totals:         0       0       0       0       0       0       0
  6081 ;;Total ram usage:        0 bytes
  6082 ;; Hardware stack levels used:    1
  6083 ;; Hardware stack levels required when called:    5
  6084 ;; This function calls:
  6085 ;;		_TMR0_StartTimer
  6086 ;; This function is called by:
  6087 ;;		_SYSTEM_Initialize
  6088 ;; This function uses a non-reentrant model
  6089 ;;
  6090                           
  6091                           	psect	text31
  6092  002096                     __ptext31:
  6093                           	opt stack 0
  6094  002096                     _TMR0_Initialize:
  6095                           	opt stack 24
  6096                           
  6097                           ;tmr0.c: 27: T0CON = 0x94;
  6098                           
  6099                           ;incstack = 0
  6100  002096  0E94               	movlw	148
  6101  002098  6ED5               	movwf	4053,c	;volatile
  6102                           
  6103                           ;tmr0.c: 30: TMR0H = 0xCF;
  6104  00209A  0ECF               	movlw	207
  6105  00209C  6ED7               	movwf	4055,c	;volatile
  6106                           
  6107                           ;tmr0.c: 33: TMR0L = 0x2C;
  6108  00209E  0E2C               	movlw	44
  6109  0020A0  6ED6               	movwf	4054,c	;volatile
  6110                           
  6111                           ;tmr0.c: 36: timer0ReloadVal16bit = 53036;
  6112  0020A2  0ECF               	movlw	207
  6113  0020A4  6E44               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  6114  0020A6  0E2C               	movlw	44
  6115  0020A8  6E43               	movwf	_timer0ReloadVal16bit,c	;volatile
  6116                           
  6117                           ;tmr0.c: 39: INTCONbits.TMR0IF = 0;
  6118  0020AA  94F2               	bcf	intcon,2,c	;volatile
  6119                           
  6120                           ;tmr0.c: 42: INTCONbits.TMR0IE = 1;
  6121  0020AC  8AF2               	bsf	intcon,5,c	;volatile
  6122                           
  6123                           ;tmr0.c: 45: TMR0_StartTimer();
  6124  0020AE  ECE5  F010         	call	_TMR0_StartTimer	;wreg free
  6125  0020B2  0012               	return		;funcret
  6126  0020B4                     __end_of_TMR0_Initialize:
  6127                           	opt stack 0
  6128                           tosu	equ	0xFFF
  6129                           tosh	equ	0xFFE
  6130                           tosl	equ	0xFFD
  6131                           pclath	equ	0xFFA
  6132                           tblptru	equ	0xFF8
  6133                           tblptrh	equ	0xFF7
  6134                           tblptrl	equ	0xFF6
  6135                           tablat	equ	0xFF5
  6136                           prodh	equ	0xFF4
  6137                           prodl	equ	0xFF3
  6138                           intcon	equ	0xFF2
  6139                           postinc0	equ	0xFEE
  6140                           wreg	equ	0xFE8
  6141                           indf2	equ	0xFDF
  6142                           postinc2	equ	0xFDE
  6143                           postdec2	equ	0xFDD
  6144                           plusw2	equ	0xFDB
  6145                           fsr2h	equ	0xFDA
  6146                           fsr2l	equ	0xFD9
  6147                           status	equ	0xFD8
  6148                           
  6149 ;; *************** function _TMR0_StartTimer *****************
  6150 ;; Defined at:
  6151 ;;		line 48 in file "mcc_generated_files/tmr0.c"
  6152 ;; Parameters:    Size  Location     Type
  6153 ;;		None
  6154 ;; Auto vars:     Size  Location     Type
  6155 ;;		None
  6156 ;; Return value:  Size  Location     Type
  6157 ;;		None               void
  6158 ;; Registers used:
  6159 ;;		None
  6160 ;; Tracked objects:
  6161 ;;		On entry : 0/0
  6162 ;;		On exit  : 0/0
  6163 ;;		Unchanged: 0/0
  6164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6165 ;;      Params:         0       0       0       0       0       0       0
  6166 ;;      Locals:         0       0       0       0       0       0       0
  6167 ;;      Temps:          0       0       0       0       0       0       0
  6168 ;;      Totals:         0       0       0       0       0       0       0
  6169 ;;Total ram usage:        0 bytes
  6170 ;; Hardware stack levels used:    1
  6171 ;; Hardware stack levels required when called:    4
  6172 ;; This function calls:
  6173 ;;		Nothing
  6174 ;; This function is called by:
  6175 ;;		_TMR0_Initialize
  6176 ;; This function uses a non-reentrant model
  6177 ;;
  6178                           
  6179                           	psect	text32
  6180  0021CA                     __ptext32:
  6181                           	opt stack 0
  6182  0021CA                     _TMR0_StartTimer:
  6183                           	opt stack 24
  6184                           
  6185                           ;tmr0.c: 51: T0CONbits.TMR0ON = 1;
  6186                           
  6187                           ;incstack = 0
  6188  0021CA  8ED5               	bsf	4053,7,c	;volatile
  6189  0021CC  0012               	return		;funcret
  6190  0021CE                     __end_of_TMR0_StartTimer:
  6191                           	opt stack 0
  6192                           tosu	equ	0xFFF
  6193                           tosh	equ	0xFFE
  6194                           tosl	equ	0xFFD
  6195                           pclath	equ	0xFFA
  6196                           tblptru	equ	0xFF8
  6197                           tblptrh	equ	0xFF7
  6198                           tblptrl	equ	0xFF6
  6199                           tablat	equ	0xFF5
  6200                           prodh	equ	0xFF4
  6201                           prodl	equ	0xFF3
  6202                           intcon	equ	0xFF2
  6203                           postinc0	equ	0xFEE
  6204                           wreg	equ	0xFE8
  6205                           indf2	equ	0xFDF
  6206                           postinc2	equ	0xFDE
  6207                           postdec2	equ	0xFDD
  6208                           plusw2	equ	0xFDB
  6209                           fsr2h	equ	0xFDA
  6210                           fsr2l	equ	0xFD9
  6211                           status	equ	0xFD8
  6212                           
  6213 ;; *************** function _PIN_MANAGER_Initialize *****************
  6214 ;; Defined at:
  6215 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;		None
  6218 ;; Auto vars:     Size  Location     Type
  6219 ;;		None
  6220 ;; Return value:  Size  Location     Type
  6221 ;;		None               void
  6222 ;; Registers used:
  6223 ;;		wreg, status,2
  6224 ;; Tracked objects:
  6225 ;;		On entry : 0/0
  6226 ;;		On exit  : 0/0
  6227 ;;		Unchanged: 0/0
  6228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6229 ;;      Params:         0       0       0       0       0       0       0
  6230 ;;      Locals:         0       0       0       0       0       0       0
  6231 ;;      Temps:          0       0       0       0       0       0       0
  6232 ;;      Totals:         0       0       0       0       0       0       0
  6233 ;;Total ram usage:        0 bytes
  6234 ;; Hardware stack levels used:    1
  6235 ;; Hardware stack levels required when called:    4
  6236 ;; This function calls:
  6237 ;;		Nothing
  6238 ;; This function is called by:
  6239 ;;		_SYSTEM_Initialize
  6240 ;; This function uses a non-reentrant model
  6241 ;;
  6242                           
  6243                           	psect	text33
  6244  001CB4                     __ptext33:
  6245                           	opt stack 0
  6246  001CB4                     _PIN_MANAGER_Initialize:
  6247                           	opt stack 25
  6248                           
  6249                           ;pin_manager.c: 52: LATA = 0x00;
  6250                           
  6251                           ;incstack = 0
  6252  001CB4  0E00               	movlw	0
  6253  001CB6  6E89               	movwf	3977,c	;volatile
  6254                           
  6255                           ;pin_manager.c: 53: TRISA = 0xF7;
  6256  001CB8  0EF7               	movlw	247
  6257  001CBA  6E92               	movwf	3986,c	;volatile
  6258                           
  6259                           ;pin_manager.c: 54: ANSELA = 0x20;
  6260  001CBC  0E20               	movlw	32
  6261  001CBE  010F               	movlb	15	; () banked
  6262  001CC0  6F38               	movwf	56,b	;volatile
  6263                           
  6264                           ;pin_manager.c: 56: LATB = 0x00;
  6265  001CC2  0E00               	movlw	0
  6266  001CC4  6E8A               	movwf	3978,c	;volatile
  6267                           
  6268                           ;pin_manager.c: 57: TRISB = 0xD7;
  6269  001CC6  0ED7               	movlw	215
  6270  001CC8  6E93               	movwf	3987,c	;volatile
  6271                           
  6272                           ;pin_manager.c: 58: ANSELB = 0x00;
  6273  001CCA  0E00               	movlw	0
  6274  001CCC  010F               	movlb	15	; () banked
  6275  001CCE  6F39               	movwf	57,b	;volatile
  6276                           
  6277                           ;pin_manager.c: 59: WPUB = 0x00;
  6278  001CD0  0E00               	movlw	0
  6279  001CD2  6E61               	movwf	3937,c	;volatile
  6280                           
  6281                           ;pin_manager.c: 61: LATC = 0x18;
  6282  001CD4  0E18               	movlw	24
  6283  001CD6  6E8B               	movwf	3979,c	;volatile
  6284                           
  6285                           ;pin_manager.c: 62: TRISC = 0xDF;
  6286  001CD8  0EDF               	movlw	223
  6287  001CDA  6E94               	movwf	3988,c	;volatile
  6288                           
  6289                           ;pin_manager.c: 63: ANSELC = 0x04;
  6290  001CDC  0E04               	movlw	4
  6291  001CDE  010F               	movlb	15	; () banked
  6292  001CE0  6F3A               	movwf	58,b	;volatile
  6293                           
  6294                           ;pin_manager.c: 65: LATD = 0x00;
  6295  001CE2  0E00               	movlw	0
  6296  001CE4  6E8C               	movwf	3980,c	;volatile
  6297                           
  6298                           ;pin_manager.c: 66: TRISD = 0xFD;
  6299  001CE6  0EFD               	movlw	253
  6300  001CE8  6E95               	movwf	3989,c	;volatile
  6301                           
  6302                           ;pin_manager.c: 67: ANSELD = 0xDD;
  6303  001CEA  0EDD               	movlw	221
  6304  001CEC  010F               	movlb	15	; () banked
  6305  001CEE  6F3B               	movwf	59,b	;volatile
  6306                           
  6307                           ;pin_manager.c: 69: LATE = 0x00;
  6308  001CF0  0E00               	movlw	0
  6309  001CF2  6E8D               	movwf	3981,c	;volatile
  6310                           
  6311                           ;pin_manager.c: 70: TRISE = 0x00;
  6312  001CF4  0E00               	movlw	0
  6313  001CF6  6E96               	movwf	3990,c	;volatile
  6314                           
  6315                           ;pin_manager.c: 71: ANSELE = 0x00;
  6316  001CF8  0E00               	movlw	0
  6317  001CFA  010F               	movlb	15	; () banked
  6318  001CFC  6F3C               	movwf	60,b	;volatile
  6319                           
  6320                           ; BSR set to: 15
  6321                           ;pin_manager.c: 72: TRISCbits.TRISC5=0;
  6322  001CFE  9A94               	bcf	3988,5,c	;volatile
  6323                           
  6324                           ; BSR set to: 15
  6325                           ;pin_manager.c: 73: INTCON2bits.nRBPU = 0x01;
  6326  001D00  8EF1               	bsf	intcon2,7,c	;volatile
  6327                           
  6328                           ; BSR set to: 15
  6329  001D02  0012               	return		;funcret
  6330  001D04                     __end_of_PIN_MANAGER_Initialize:
  6331                           	opt stack 0
  6332                           tosu	equ	0xFFF
  6333                           tosh	equ	0xFFE
  6334                           tosl	equ	0xFFD
  6335                           pclath	equ	0xFFA
  6336                           tblptru	equ	0xFF8
  6337                           tblptrh	equ	0xFF7
  6338                           tblptrl	equ	0xFF6
  6339                           tablat	equ	0xFF5
  6340                           prodh	equ	0xFF4
  6341                           prodl	equ	0xFF3
  6342                           intcon	equ	0xFF2
  6343                           intcon2	equ	0xFF1
  6344                           postinc0	equ	0xFEE
  6345                           wreg	equ	0xFE8
  6346                           indf2	equ	0xFDF
  6347                           postinc2	equ	0xFDE
  6348                           postdec2	equ	0xFDD
  6349                           plusw2	equ	0xFDB
  6350                           fsr2h	equ	0xFDA
  6351                           fsr2l	equ	0xFD9
  6352                           status	equ	0xFD8
  6353                           
  6354 ;; *************** function _OSCILLATOR_Initialize *****************
  6355 ;; Defined at:
  6356 ;;		line 124 in file "mcc_generated_files/mcc.c"
  6357 ;; Parameters:    Size  Location     Type
  6358 ;;		None
  6359 ;; Auto vars:     Size  Location     Type
  6360 ;;		None
  6361 ;; Return value:  Size  Location     Type
  6362 ;;		None               void
  6363 ;; Registers used:
  6364 ;;		wreg, status,2
  6365 ;; Tracked objects:
  6366 ;;		On entry : 0/0
  6367 ;;		On exit  : 0/0
  6368 ;;		Unchanged: 0/0
  6369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6370 ;;      Params:         0       0       0       0       0       0       0
  6371 ;;      Locals:         0       0       0       0       0       0       0
  6372 ;;      Temps:          0       0       0       0       0       0       0
  6373 ;;      Totals:         0       0       0       0       0       0       0
  6374 ;;Total ram usage:        0 bytes
  6375 ;; Hardware stack levels used:    1
  6376 ;; Hardware stack levels required when called:    4
  6377 ;; This function calls:
  6378 ;;		Nothing
  6379 ;; This function is called by:
  6380 ;;		_SYSTEM_Initialize
  6381 ;; This function uses a non-reentrant model
  6382 ;;
  6383                           
  6384                           	psect	text34
  6385  0021B6                     __ptext34:
  6386                           	opt stack 0
  6387  0021B6                     _OSCILLATOR_Initialize:
  6388                           	opt stack 25
  6389                           
  6390                           ;mcc.c: 127: OSCCON = 0x72;
  6391                           
  6392                           ; BSR set to: 15
  6393                           ;incstack = 0
  6394  0021B6  0E72               	movlw	114
  6395  0021B8  6ED3               	movwf	4051,c	;volatile
  6396                           
  6397                           ;mcc.c: 129: OSCCON2 = 0x04;
  6398  0021BA  0E04               	movlw	4
  6399  0021BC  6ED2               	movwf	4050,c	;volatile
  6400                           
  6401                           ;mcc.c: 131: OSCTUNE = 0x00;
  6402  0021BE  0E00               	movlw	0
  6403  0021C0  6E9B               	movwf	3995,c	;volatile
  6404  0021C2  0012               	return		;funcret
  6405  0021C4                     __end_of_OSCILLATOR_Initialize:
  6406                           	opt stack 0
  6407                           tosu	equ	0xFFF
  6408                           tosh	equ	0xFFE
  6409                           tosl	equ	0xFFD
  6410                           pclath	equ	0xFFA
  6411                           tblptru	equ	0xFF8
  6412                           tblptrh	equ	0xFF7
  6413                           tblptrl	equ	0xFF6
  6414                           tablat	equ	0xFF5
  6415                           prodh	equ	0xFF4
  6416                           prodl	equ	0xFF3
  6417                           intcon	equ	0xFF2
  6418                           intcon2	equ	0xFF1
  6419                           postinc0	equ	0xFEE
  6420                           wreg	equ	0xFE8
  6421                           indf2	equ	0xFDF
  6422                           postinc2	equ	0xFDE
  6423                           postdec2	equ	0xFDD
  6424                           plusw2	equ	0xFDB
  6425                           fsr2h	equ	0xFDA
  6426                           fsr2l	equ	0xFD9
  6427                           status	equ	0xFD8
  6428                           
  6429 ;; *************** function _INTERRUPT_Initialize *****************
  6430 ;; Defined at:
  6431 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;		None
  6434 ;; Auto vars:     Size  Location     Type
  6435 ;;		None
  6436 ;; Return value:  Size  Location     Type
  6437 ;;		None               void
  6438 ;; Registers used:
  6439 ;;		None
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6445 ;;      Params:         0       0       0       0       0       0       0
  6446 ;;      Locals:         0       0       0       0       0       0       0
  6447 ;;      Temps:          0       0       0       0       0       0       0
  6448 ;;      Totals:         0       0       0       0       0       0       0
  6449 ;;Total ram usage:        0 bytes
  6450 ;; Hardware stack levels used:    1
  6451 ;; Hardware stack levels required when called:    4
  6452 ;; This function calls:
  6453 ;;		Nothing
  6454 ;; This function is called by:
  6455 ;;		_SYSTEM_Initialize
  6456 ;; This function uses a non-reentrant model
  6457 ;;
  6458                           
  6459                           	psect	text35
  6460  0021A6                     __ptext35:
  6461                           	opt stack 0
  6462  0021A6                     _INTERRUPT_Initialize:
  6463                           	opt stack 25
  6464                           
  6465                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  6466                           
  6467                           ;incstack = 0
  6468  0021A6  9ED0               	bcf	4048,7,c	;volatile
  6469                           
  6470                           ;interrupt_manager.c: 60: IPR1bits.RC1IP = 0;
  6471  0021A8  9A9F               	bcf	3999,5,c	;volatile
  6472                           
  6473                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
  6474  0021AA  989F               	bcf	3999,4,c	;volatile
  6475                           
  6476                           ;interrupt_manager.c: 64: INTCON2bits.TMR0IP = 0;
  6477  0021AC  94F1               	bcf	intcon2,2,c	;volatile
  6478                           
  6479                           ;interrupt_manager.c: 66: IPR1bits.ADIP = 0;
  6480  0021AE  9C9F               	bcf	3999,6,c	;volatile
  6481                           
  6482                           ;interrupt_manager.c: 68: IPR1bits.SSP1IP = 0;
  6483  0021B0  969F               	bcf	3999,3,c	;volatile
  6484                           
  6485                           ;interrupt_manager.c: 70: IPR2bits.BCL1IP = 0;
  6486  0021B2  96A2               	bcf	4002,3,c	;volatile
  6487  0021B4  0012               	return		;funcret
  6488  0021B6                     __end_of_INTERRUPT_Initialize:
  6489                           	opt stack 0
  6490                           tosu	equ	0xFFF
  6491                           tosh	equ	0xFFE
  6492                           tosl	equ	0xFFD
  6493                           pclath	equ	0xFFA
  6494                           tblptru	equ	0xFF8
  6495                           tblptrh	equ	0xFF7
  6496                           tblptrl	equ	0xFF6
  6497                           tablat	equ	0xFF5
  6498                           prodh	equ	0xFF4
  6499                           prodl	equ	0xFF3
  6500                           intcon	equ	0xFF2
  6501                           intcon2	equ	0xFF1
  6502                           postinc0	equ	0xFEE
  6503                           wreg	equ	0xFE8
  6504                           indf2	equ	0xFDF
  6505                           postinc2	equ	0xFDE
  6506                           postdec2	equ	0xFDD
  6507                           plusw2	equ	0xFDB
  6508                           fsr2h	equ	0xFDA
  6509                           fsr2l	equ	0xFD9
  6510                           status	equ	0xFD8
  6511                           
  6512 ;; *************** function _I2C1_Initialize *****************
  6513 ;; Defined at:
  6514 ;;		line 151 in file "mcc_generated_files/i2c1.c"
  6515 ;; Parameters:    Size  Location     Type
  6516 ;;		None
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;		None
  6519 ;; Return value:  Size  Location     Type
  6520 ;;		None               void
  6521 ;; Registers used:
  6522 ;;		wreg, status,2, status,0
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6528 ;;      Params:         0       0       0       0       0       0       0
  6529 ;;      Locals:         0       0       0       0       0       0       0
  6530 ;;      Temps:          0       0       0       0       0       0       0
  6531 ;;      Totals:         0       0       0       0       0       0       0
  6532 ;;Total ram usage:        0 bytes
  6533 ;; Hardware stack levels used:    1
  6534 ;; Hardware stack levels required when called:    4
  6535 ;; This function calls:
  6536 ;;		Nothing
  6537 ;; This function is called by:
  6538 ;;		_SYSTEM_Initialize
  6539 ;; This function uses a non-reentrant model
  6540 ;;
  6541                           
  6542                           	psect	text36
  6543  001E1C                     __ptext36:
  6544                           	opt stack 0
  6545  001E1C                     _I2C1_Initialize:
  6546                           	opt stack 25
  6547                           
  6548                           ;i2c1.c: 153: i2c1_object.pTrHead = i2c1_tr_queue;
  6549                           
  6550                           ;incstack = 0
  6551  001E1C  0EEE               	movlw	low _i2c1_tr_queue
  6552  001E1E  0100               	movlb	0	; () banked
  6553  001E20  6F92               	movwf	(_i2c1_object+2)& (0+255),b
  6554  001E22  0E00               	movlw	high _i2c1_tr_queue
  6555  001E24  0100               	movlb	0	; () banked
  6556  001E26  6F93               	movwf	(_i2c1_object+3)& (0+255),b
  6557                           
  6558                           ;i2c1.c: 154: i2c1_object.pTrTail = i2c1_tr_queue;
  6559  001E28  0EEE               	movlw	low _i2c1_tr_queue
  6560  001E2A  0100               	movlb	0	; () banked
  6561  001E2C  6F90               	movwf	_i2c1_object& (0+255),b
  6562  001E2E  0E00               	movlw	high _i2c1_tr_queue
  6563  001E30  0100               	movlb	0	; () banked
  6564  001E32  6F91               	movwf	(_i2c1_object+1)& (0+255),b
  6565                           
  6566                           ; BSR set to: 0
  6567                           ;i2c1.c: 155: i2c1_object.trStatus.s.empty = 1;
  6568  001E34  0100               	movlb	0	; () banked
  6569  001E36  8394               	bsf	(_i2c1_object+4)& (0+255),1,b
  6570                           
  6571                           ; BSR set to: 0
  6572                           ;i2c1.c: 156: i2c1_object.trStatus.s.full = 0;
  6573  001E38  0100               	movlb	0	; () banked
  6574  001E3A  9194               	bcf	(_i2c1_object+4)& (0+255),0,b
  6575                           
  6576                           ; BSR set to: 0
  6577                           ;i2c1.c: 158: i2c1_object.i2cErrors = 0;
  6578  001E3C  0E00               	movlw	0
  6579  001E3E  0100               	movlb	0	; () banked
  6580  001E40  6F96               	movwf	(_i2c1_object+6)& (0+255),b
  6581                           
  6582                           ; BSR set to: 0
  6583                           ;i2c1.c: 161: SSP1STAT = 0x80;
  6584  001E42  0E80               	movlw	128
  6585  001E44  6EC7               	movwf	4039,c	;volatile
  6586                           
  6587                           ; BSR set to: 0
  6588                           ;i2c1.c: 163: SSP1CON1 = 0x28;
  6589  001E46  0E28               	movlw	40
  6590  001E48  6EC6               	movwf	4038,c	;volatile
  6591                           
  6592                           ; BSR set to: 0
  6593                           ;i2c1.c: 165: SSP1CON3 = 0x00;
  6594  001E4A  0E00               	movlw	0
  6595  001E4C  6ECB               	movwf	4043,c	;volatile
  6596                           
  6597                           ; BSR set to: 0
  6598                           ;i2c1.c: 167: SSP1ADD = 0x09;
  6599  001E4E  0E09               	movlw	9
  6600  001E50  6EC8               	movwf	4040,c	;volatile
  6601                           
  6602                           ; BSR set to: 0
  6603                           ;i2c1.c: 171: PIR1bits.SSP1IF = 0;
  6604  001E52  969E               	bcf	3998,3,c	;volatile
  6605                           
  6606                           ; BSR set to: 0
  6607                           ;i2c1.c: 173: PIE1bits.SSP1IE = 1;
  6608  001E54  869D               	bsf	3997,3,c	;volatile
  6609                           
  6610                           ; BSR set to: 0
  6611  001E56  0012               	return		;funcret
  6612  001E58                     __end_of_I2C1_Initialize:
  6613                           	opt stack 0
  6614                           tosu	equ	0xFFF
  6615                           tosh	equ	0xFFE
  6616                           tosl	equ	0xFFD
  6617                           pclath	equ	0xFFA
  6618                           tblptru	equ	0xFF8
  6619                           tblptrh	equ	0xFF7
  6620                           tblptrl	equ	0xFF6
  6621                           tablat	equ	0xFF5
  6622                           prodh	equ	0xFF4
  6623                           prodl	equ	0xFF3
  6624                           intcon	equ	0xFF2
  6625                           intcon2	equ	0xFF1
  6626                           postinc0	equ	0xFEE
  6627                           wreg	equ	0xFE8
  6628                           indf2	equ	0xFDF
  6629                           postinc2	equ	0xFDE
  6630                           postdec2	equ	0xFDD
  6631                           plusw2	equ	0xFDB
  6632                           fsr2h	equ	0xFDA
  6633                           fsr2l	equ	0xFD9
  6634                           status	equ	0xFD8
  6635                           
  6636 ;; *************** function _EUSART1_Initialize *****************
  6637 ;; Defined at:
  6638 ;;		line 23 in file "UART.c"
  6639 ;; Parameters:    Size  Location     Type
  6640 ;;		None
  6641 ;; Auto vars:     Size  Location     Type
  6642 ;;		None
  6643 ;; Return value:  Size  Location     Type
  6644 ;;		None               void
  6645 ;; Registers used:
  6646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6647 ;; Tracked objects:
  6648 ;;		On entry : 0/0
  6649 ;;		On exit  : 0/0
  6650 ;;		Unchanged: 0/0
  6651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6652 ;;      Params:         0       0       0       0       0       0       0
  6653 ;;      Locals:         0       0       0       0       0       0       0
  6654 ;;      Temps:          0       0       0       0       0       0       0
  6655 ;;      Totals:         0       0       0       0       0       0       0
  6656 ;;Total ram usage:        0 bytes
  6657 ;; Hardware stack levels used:    1
  6658 ;; Hardware stack levels required when called:    6
  6659 ;; This function calls:
  6660 ;;		_UART_buff_init
  6661 ;; This function is called by:
  6662 ;;		_SYSTEM_Initialize
  6663 ;; This function uses a non-reentrant model
  6664 ;;
  6665                           
  6666                           	psect	text37
  6667  001E58                     __ptext37:
  6668                           	opt stack 0
  6669  001E58                     _EUSART1_Initialize:
  6670                           	opt stack 23
  6671                           
  6672                           ;UART.c: 25: PIE1bits.RC1IE = 0;
  6673                           
  6674                           ; BSR set to: 0
  6675                           ;incstack = 0
  6676  001E58  9A9D               	bcf	3997,5,c	;volatile
  6677                           
  6678                           ;UART.c: 26: PIE1bits.TX1IE = 0;
  6679  001E5A  989D               	bcf	3997,4,c	;volatile
  6680                           
  6681                           ;UART.c: 31: BAUD1CON = 0x48;
  6682  001E5C  0E48               	movlw	72
  6683  001E5E  6EB8               	movwf	4024,c	;volatile
  6684                           
  6685                           ;UART.c: 34: RC1STA = 0x98;
  6686  001E60  0E98               	movlw	152
  6687  001E62  6EAB               	movwf	4011,c	;volatile
  6688                           
  6689                           ;UART.c: 37: TX1STA = 0x26;
  6690  001E64  0E26               	movlw	38
  6691  001E66  6EAC               	movwf	4012,c	;volatile
  6692                           
  6693                           ;UART.c: 40: SPBRG1 = (((16000000/38400)/4)-1);
  6694  001E68  0E67               	movlw	103
  6695  001E6A  6EAF               	movwf	4015,c	;volatile
  6696                           
  6697                           ;UART.c: 43: SPBRGH1 = 0x00;
  6698  001E6C  0E00               	movlw	0
  6699  001E6E  6EB0               	movwf	4016,c	;volatile
  6700                           
  6701                           ;UART.c: 46: TXREG1 = 0x00;
  6702  001E70  0E00               	movlw	0
  6703  001E72  6EAD               	movwf	4013,c	;volatile
  6704                           
  6705                           ;UART.c: 49: RCREG1 = 0x00;
  6706  001E74  0E00               	movlw	0
  6707  001E76  6EAE               	movwf	4014,c	;volatile
  6708                           
  6709                           ;UART.c: 51: UART_buff_init(&input_buffer);
  6710  001E78  0E00               	movlw	low _input_buffer
  6711  001E7A  6E23               	movwf	UART_buff_init@_this,c
  6712  001E7C  0E03               	movlw	high _input_buffer
  6713  001E7E  6E24               	movwf	UART_buff_init@_this+1,c
  6714  001E80  EC5A  F010         	call	_UART_buff_init	;wreg free
  6715                           
  6716                           ;UART.c: 52: UART_buff_init(&output_buffer);
  6717  001E84  0E00               	movlw	low _output_buffer
  6718  001E86  6E23               	movwf	UART_buff_init@_this,c
  6719  001E88  0E04               	movlw	high _output_buffer
  6720  001E8A  6E24               	movwf	UART_buff_init@_this+1,c
  6721  001E8C  EC5A  F010         	call	_UART_buff_init	;wreg free
  6722                           
  6723                           ;UART.c: 54: PIE1bits.RC1IE = 1;
  6724  001E90  8A9D               	bsf	3997,5,c	;volatile
  6725  001E92  0012               	return		;funcret
  6726  001E94                     __end_of_EUSART1_Initialize:
  6727                           	opt stack 0
  6728                           tosu	equ	0xFFF
  6729                           tosh	equ	0xFFE
  6730                           tosl	equ	0xFFD
  6731                           pclath	equ	0xFFA
  6732                           tblptru	equ	0xFF8
  6733                           tblptrh	equ	0xFF7
  6734                           tblptrl	equ	0xFF6
  6735                           tablat	equ	0xFF5
  6736                           prodh	equ	0xFF4
  6737                           prodl	equ	0xFF3
  6738                           intcon	equ	0xFF2
  6739                           intcon2	equ	0xFF1
  6740                           postinc0	equ	0xFEE
  6741                           wreg	equ	0xFE8
  6742                           indf2	equ	0xFDF
  6743                           postinc2	equ	0xFDE
  6744                           postdec2	equ	0xFDD
  6745                           plusw2	equ	0xFDB
  6746                           fsr2h	equ	0xFDA
  6747                           fsr2l	equ	0xFD9
  6748                           status	equ	0xFD8
  6749                           
  6750 ;; *************** function _UART_buff_init *****************
  6751 ;; Defined at:
  6752 ;;		line 58 in file "UART.c"
  6753 ;; Parameters:    Size  Location     Type
  6754 ;;  _this           2   34[COMRAM] PTR struct UART_ring_buf
  6755 ;;		 -> output_buffer(206), input_buffer(206), 
  6756 ;; Auto vars:     Size  Location     Type
  6757 ;;		None
  6758 ;; Return value:  Size  Location     Type
  6759 ;;		None               void
  6760 ;; Registers used:
  6761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6762 ;; Tracked objects:
  6763 ;;		On entry : 0/0
  6764 ;;		On exit  : 0/0
  6765 ;;		Unchanged: 0/0
  6766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6767 ;;      Params:         2       0       0       0       0       0       0
  6768 ;;      Locals:         0       0       0       0       0       0       0
  6769 ;;      Temps:          0       0       0       0       0       0       0
  6770 ;;      Totals:         2       0       0       0       0       0       0
  6771 ;;Total ram usage:        2 bytes
  6772 ;; Hardware stack levels used:    1
  6773 ;; Hardware stack levels required when called:    5
  6774 ;; This function calls:
  6775 ;;		_memset
  6776 ;; This function is called by:
  6777 ;;		_EUSART1_Initialize
  6778 ;; This function uses a non-reentrant model
  6779 ;;
  6780                           
  6781                           	psect	text38
  6782  0020B4                     __ptext38:
  6783                           	opt stack 0
  6784  0020B4                     _UART_buff_init:
  6785                           	opt stack 23
  6786                           
  6787                           ;UART.c: 67: memset(_this, 0, sizeof (*_this));
  6788                           
  6789                           ;incstack = 0
  6790  0020B4  C023  F01B         	movff	UART_buff_init@_this,memset@p1
  6791  0020B8  C024  F01C         	movff	UART_buff_init@_this+1,memset@p1+1
  6792  0020BC  0E00               	movlw	0
  6793  0020BE  6E1E               	movwf	memset@c+1,c
  6794  0020C0  0E00               	movlw	0
  6795  0020C2  6E1D               	movwf	memset@c,c
  6796  0020C4  0E00               	movlw	0
  6797  0020C6  6E20               	movwf	memset@n+1,c
  6798  0020C8  0ECE               	movlw	206
  6799  0020CA  6E1F               	movwf	memset@n,c
  6800  0020CC  ECDF  F00F         	call	_memset	;wreg free
  6801  0020D0  0012               	return		;funcret
  6802  0020D2                     __end_of_UART_buff_init:
  6803                           	opt stack 0
  6804                           tosu	equ	0xFFF
  6805                           tosh	equ	0xFFE
  6806                           tosl	equ	0xFFD
  6807                           pclath	equ	0xFFA
  6808                           tblptru	equ	0xFF8
  6809                           tblptrh	equ	0xFF7
  6810                           tblptrl	equ	0xFF6
  6811                           tablat	equ	0xFF5
  6812                           prodh	equ	0xFF4
  6813                           prodl	equ	0xFF3
  6814                           intcon	equ	0xFF2
  6815                           intcon2	equ	0xFF1
  6816                           postinc0	equ	0xFEE
  6817                           wreg	equ	0xFE8
  6818                           indf2	equ	0xFDF
  6819                           postinc2	equ	0xFDE
  6820                           postdec2	equ	0xFDD
  6821                           plusw2	equ	0xFDB
  6822                           fsr2h	equ	0xFDA
  6823                           fsr2l	equ	0xFD9
  6824                           status	equ	0xFD8
  6825                           
  6826 ;; *************** function _memset *****************
  6827 ;; Defined at:
  6828 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\memset.c"
  6829 ;; Parameters:    Size  Location     Type
  6830 ;;  p1              2   26[COMRAM] PTR void 
  6831 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  6832 ;;  c               2   28[COMRAM] int 
  6833 ;;  n               2   30[COMRAM] unsigned int 
  6834 ;; Auto vars:     Size  Location     Type
  6835 ;;  p               2   32[COMRAM] PTR unsigned char 
  6836 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  6837 ;; Return value:  Size  Location     Type
  6838 ;;                  2   26[COMRAM] PTR void 
  6839 ;; Registers used:
  6840 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6841 ;; Tracked objects:
  6842 ;;		On entry : 0/0
  6843 ;;		On exit  : 0/0
  6844 ;;		Unchanged: 0/0
  6845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6846 ;;      Params:         6       0       0       0       0       0       0
  6847 ;;      Locals:         2       0       0       0       0       0       0
  6848 ;;      Temps:          0       0       0       0       0       0       0
  6849 ;;      Totals:         8       0       0       0       0       0       0
  6850 ;;Total ram usage:        8 bytes
  6851 ;; Hardware stack levels used:    1
  6852 ;; Hardware stack levels required when called:    4
  6853 ;; This function calls:
  6854 ;;		Nothing
  6855 ;; This function is called by:
  6856 ;;		_FastTransfer_buffer_flush
  6857 ;;		_UART_buff_init
  6858 ;;		_UART_buff_flush
  6859 ;; This function uses a non-reentrant model
  6860 ;;
  6861                           
  6862                           	psect	text39
  6863  001FBE                     __ptext39:
  6864                           	opt stack 0
  6865  001FBE                     _memset:
  6866                           	opt stack 22
  6867                           
  6868                           ;incstack = 0
  6869  001FBE  C01B  F021         	movff	memset@p1,memset@p
  6870  001FC2  C01C  F022         	movff	memset@p1+1,memset@p+1
  6871  001FC6  D009               	goto	l4058
  6872  001FC8                     l4054:
  6873  001FC8  C021  FFD9         	movff	memset@p,fsr2l
  6874  001FCC  C022  FFDA         	movff	memset@p+1,fsr2h
  6875  001FD0  C01D  FFDF         	movff	memset@c,indf2
  6876  001FD4  4A21               	infsnz	memset@p,f,c
  6877  001FD6  2A22               	incf	memset@p+1,f,c
  6878  001FD8  D000               	goto	l4058
  6879  001FDA                     l4058:
  6880  001FDA  061F               	decf	memset@n,f,c
  6881  001FDC  A0D8               	btfss	status,0,c
  6882  001FDE  0620               	decf	memset@n+1,f,c
  6883  001FE0  281F               	incf	memset@n,w,c
  6884  001FE2  E1F2               	bnz	l4054
  6885  001FE4  2820               	incf	memset@n+1,w,c
  6886  001FE6  A4D8               	btfss	status,2,c
  6887  001FE8  D7EF               	goto	l4054
  6888                           
  6889                           ;	Return value of _memset is never used
  6890  001FEA  0012               	return		;funcret
  6891  001FEC                     __end_of_memset:
  6892                           	opt stack 0
  6893                           tosu	equ	0xFFF
  6894                           tosh	equ	0xFFE
  6895                           tosl	equ	0xFFD
  6896                           pclath	equ	0xFFA
  6897                           tblptru	equ	0xFF8
  6898                           tblptrh	equ	0xFF7
  6899                           tblptrl	equ	0xFF6
  6900                           tablat	equ	0xFF5
  6901                           prodh	equ	0xFF4
  6902                           prodl	equ	0xFF3
  6903                           intcon	equ	0xFF2
  6904                           intcon2	equ	0xFF1
  6905                           postinc0	equ	0xFEE
  6906                           wreg	equ	0xFE8
  6907                           indf2	equ	0xFDF
  6908                           postinc2	equ	0xFDE
  6909                           postdec2	equ	0xFDD
  6910                           plusw2	equ	0xFDB
  6911                           fsr2h	equ	0xFDA
  6912                           fsr2l	equ	0xFD9
  6913                           status	equ	0xFD8
  6914                           
  6915 ;; *************** function _ADC_Initialize *****************
  6916 ;; Defined at:
  6917 ;;		line 59 in file "mcc_generated_files/adc.c"
  6918 ;; Parameters:    Size  Location     Type
  6919 ;;		None
  6920 ;; Auto vars:     Size  Location     Type
  6921 ;;		None
  6922 ;; Return value:  Size  Location     Type
  6923 ;;		None               void
  6924 ;; Registers used:
  6925 ;;		wreg, status,2
  6926 ;; Tracked objects:
  6927 ;;		On entry : 0/0
  6928 ;;		On exit  : 0/0
  6929 ;;		Unchanged: 0/0
  6930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6931 ;;      Params:         0       0       0       0       0       0       0
  6932 ;;      Locals:         0       0       0       0       0       0       0
  6933 ;;      Temps:          0       0       0       0       0       0       0
  6934 ;;      Totals:         0       0       0       0       0       0       0
  6935 ;;Total ram usage:        0 bytes
  6936 ;; Hardware stack levels used:    1
  6937 ;; Hardware stack levels required when called:    4
  6938 ;; This function calls:
  6939 ;;		Nothing
  6940 ;; This function is called by:
  6941 ;;		_SYSTEM_Initialize
  6942 ;; This function uses a non-reentrant model
  6943 ;;
  6944                           
  6945                           	psect	text40
  6946  002156                     __ptext40:
  6947                           	opt stack 0
  6948  002156                     _ADC_Initialize:
  6949                           	opt stack 25
  6950                           
  6951                           ;adc.c: 64: ADCON0 = 0x01;
  6952                           
  6953                           ;incstack = 0
  6954  002156  0E01               	movlw	1
  6955  002158  6EC2               	movwf	4034,c	;volatile
  6956                           
  6957                           ;adc.c: 67: ADCON1 = 0x80;
  6958  00215A  0E80               	movlw	128
  6959  00215C  6EC1               	movwf	4033,c	;volatile
  6960                           
  6961                           ;adc.c: 70: ADCON2 = 0x05;
  6962  00215E  0E05               	movlw	5
  6963  002160  6EC0               	movwf	4032,c	;volatile
  6964                           
  6965                           ;adc.c: 73: ADRESL = 0x00;
  6966  002162  0E00               	movlw	0
  6967  002164  6EC3               	movwf	4035,c	;volatile
  6968                           
  6969                           ;adc.c: 76: ADRESH = 0x00;
  6970  002166  0E00               	movlw	0
  6971  002168  6EC4               	movwf	4036,c	;volatile
  6972                           
  6973                           ;adc.c: 79: PIE1bits.ADIE = 1;
  6974  00216A  8C9D               	bsf	3997,6,c	;volatile
  6975  00216C  0012               	return		;funcret
  6976  00216E                     __end_of_ADC_Initialize:
  6977                           	opt stack 0
  6978                           tosu	equ	0xFFF
  6979                           tosh	equ	0xFFE
  6980                           tosl	equ	0xFFD
  6981                           pclath	equ	0xFFA
  6982                           tblptru	equ	0xFF8
  6983                           tblptrh	equ	0xFF7
  6984                           tblptrl	equ	0xFF6
  6985                           tablat	equ	0xFF5
  6986                           prodh	equ	0xFF4
  6987                           prodl	equ	0xFF3
  6988                           intcon	equ	0xFF2
  6989                           intcon2	equ	0xFF1
  6990                           postinc0	equ	0xFEE
  6991                           wreg	equ	0xFE8
  6992                           indf2	equ	0xFDF
  6993                           postinc2	equ	0xFDE
  6994                           postdec2	equ	0xFDD
  6995                           plusw2	equ	0xFDB
  6996                           fsr2h	equ	0xFDA
  6997                           fsr2l	equ	0xFD9
  6998                           status	equ	0xFD8
  6999                           
  7000 ;; *************** function _LEDbegin *****************
  7001 ;; Defined at:
  7002 ;;		line 73 in file "LED_BarGraph.c"
  7003 ;; Parameters:    Size  Location     Type
  7004 ;;  i2c_addr        1    wreg     unsigned char 
  7005 ;; Auto vars:     Size  Location     Type
  7006 ;;  i2c_addr        1    5[BANK1 ] unsigned char 
  7007 ;;  writeBuffer     3    0[BANK1 ] unsigned char [3]
  7008 ;;  timeOut         2    3[BANK1 ] unsigned int 
  7009 ;;  status          1    6[BANK1 ] enum E8852
  7010 ;; Return value:  Size  Location     Type
  7011 ;;		None               void
  7012 ;; Registers used:
  7013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7014 ;; Tracked objects:
  7015 ;;		On entry : 0/0
  7016 ;;		On exit  : 0/0
  7017 ;;		Unchanged: 0/0
  7018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7019 ;;      Params:         0       0       0       0       0       0       0
  7020 ;;      Locals:         0       0       7       0       0       0       0
  7021 ;;      Temps:          0       0       0       0       0       0       0
  7022 ;;      Totals:         0       0       7       0       0       0       0
  7023 ;;Total ram usage:        7 bytes
  7024 ;; Hardware stack levels used:    1
  7025 ;; Hardware stack levels required when called:    7
  7026 ;; This function calls:
  7027 ;;		_I2C1_MasterWrite
  7028 ;;		_LEDBsetBrightness
  7029 ;;		_LEDblinkRate
  7030 ;; This function is called by:
  7031 ;;		_main
  7032 ;; This function uses a non-reentrant model
  7033 ;;
  7034                           
  7035                           	psect	text41
  7036  001506                     __ptext41:
  7037                           	opt stack 0
  7038  001506                     _LEDbegin:
  7039                           	opt stack 23
  7040                           
  7041                           ;incstack = 0
  7042                           ;LEDbegin@i2c_addr stored from wreg
  7043  001506  0101               	movlb	1	; () banked
  7044  001508  6FD3               	movwf	LEDbegin@i2c_addr& (0+255),b
  7045                           
  7046                           ; BSR set to: 1
  7047                           ;LED_BarGraph.c: 74: uint8_t writeBuffer[3];
  7048                           ;LED_BarGraph.c: 75: uint16_t timeOut;
  7049                           ;LED_BarGraph.c: 76: writeBuffer[0]=0x21;
  7050  00150A  0E21               	movlw	33
  7051  00150C  0101               	movlb	1	; () banked
  7052  00150E  6FCE               	movwf	LEDbegin@writeBuffer& (0+255),b
  7053                           
  7054                           ;LED_BarGraph.c: 77: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  7055  001510  0E02               	movlw	2
  7056  001512  0101               	movlb	1	; () banked
  7057  001514  6FD4               	movwf	LEDbegin@status& (0+255),b
  7058                           
  7059                           ;LED_BarGraph.c: 79: timeOut = 0;
  7060  001516  0E00               	movlw	0
  7061  001518  0101               	movlb	1	; () banked
  7062  00151A  6FD2               	movwf	(LEDbegin@timeOut+1)& (0+255),b
  7063  00151C  0E00               	movlw	0
  7064  00151E  6FD1               	movwf	LEDbegin@timeOut& (0+255),b
  7065                           
  7066                           ;LED_BarGraph.c: 80: while(status != I2C1_MESSAGE_FAIL)
  7067  001520  D037               	goto	l4908
  7068  001522                     l4888:
  7069                           
  7070                           ; BSR set to: 1
  7071                           ;LED_BarGraph.c: 81: {
  7072                           ;LED_BarGraph.c: 83: I2C1_MasterWrite( &writeBuffer,
  7073                           ;LED_BarGraph.c: 84: 1,
  7074                           ;LED_BarGraph.c: 85: 0x70,
  7075                           ;LED_BarGraph.c: 86: &status);
  7076  001522  0ECE               	movlw	low LEDbegin@writeBuffer
  7077  001524  0100               	movlb	0	; () banked
  7078  001526  6FF3               	movwf	I2C1_MasterWrite@pdata& (0+255),b
  7079  001528  0E01               	movlw	high LEDbegin@writeBuffer
  7080  00152A  0100               	movlb	0	; () banked
  7081  00152C  6FF4               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
  7082  00152E  0E01               	movlw	1
  7083  001530  0100               	movlb	0	; () banked
  7084  001532  6FF5               	movwf	I2C1_MasterWrite@length& (0+255),b
  7085  001534  0E00               	movlw	0
  7086  001536  0100               	movlb	0	; () banked
  7087  001538  6FF7               	movwf	(I2C1_MasterWrite@address+1)& (0+255),b
  7088  00153A  0E70               	movlw	112
  7089  00153C  6FF6               	movwf	I2C1_MasterWrite@address& (0+255),b
  7090  00153E  0ED4               	movlw	low LEDbegin@status
  7091  001540  0100               	movlb	0	; () banked
  7092  001542  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
  7093  001544  0E01               	movlw	high LEDbegin@status
  7094  001546  0100               	movlb	0	; () banked
  7095  001548  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
  7096  00154A  EC82  F00E         	call	_I2C1_MasterWrite	;wreg free
  7097                           
  7098                           ;LED_BarGraph.c: 89: while(status == I2C1_MESSAGE_PENDING);
  7099  00154E  D000               	goto	l4890
  7100  001550                     l4890:
  7101  001550  0E02               	movlw	2
  7102  001552  0101               	movlb	1	; () banked
  7103  001554  19D4               	xorwf	LEDbegin@status& (0+255),w,b
  7104  001556  B4D8               	btfsc	status,2,c
  7105  001558  D7FB               	goto	l4890
  7106                           
  7107                           ; BSR set to: 1
  7108                           ;LED_BarGraph.c: 91: if (status == I2C1_MESSAGE_COMPLETE)
  7109                           
  7110                           ; BSR set to: 1
  7111  00155A  0101               	movlb	1	; () banked
  7112  00155C  51D4               	movf	LEDbegin@status& (0+255),w,b
  7113  00155E  0101               	movlb	1	; () banked
  7114  001560  B4D8               	btfsc	status,2,c
  7115  001562  D01A               	goto	l4910
  7116  001564  D001               	goto	l4896
  7117                           
  7118                           ; BSR set to: 1
  7119                           ;LED_BarGraph.c: 92: break;
  7120  001566  D018               	goto	l4910
  7121  001568                     l4896:
  7122                           
  7123                           ; BSR set to: 1
  7124                           ;LED_BarGraph.c: 93: if (timeOut == 100)
  7125  001568  0E64               	movlw	100
  7126  00156A  0101               	movlb	1	; () banked
  7127  00156C  19D1               	xorwf	LEDbegin@timeOut& (0+255),w,b
  7128  00156E  0101               	movlb	1	; () banked
  7129  001570  11D2               	iorwf	(LEDbegin@timeOut+1)& (0+255),w,b
  7130  001572  B4D8               	btfsc	status,2,c
  7131  001574  D011               	goto	l4910
  7132  001576  D001               	goto	l4900
  7133                           
  7134                           ; BSR set to: 1
  7135                           ;LED_BarGraph.c: 94: break;
  7136  001578  D00F               	goto	l4910
  7137  00157A                     l4900:
  7138                           
  7139                           ; BSR set to: 1
  7140                           ;LED_BarGraph.c: 95: if (status == I2C1_MESSAGE_FAIL)
  7141  00157A  0101               	movlb	1	; () banked
  7142  00157C  05D4               	decf	LEDbegin@status& (0+255),w,b
  7143  00157E  B4D8               	btfsc	status,2,c
  7144  001580  D00B               	goto	l4910
  7145  001582  D002               	goto	l4906
  7146                           
  7147                           ; BSR set to: 1
  7148                           ;LED_BarGraph.c: 96: break;
  7149  001584  D009               	goto	l4910
  7150                           
  7151                           ; BSR set to: 1
  7152  001586  D004               	goto	l4908
  7153  001588                     l4906:
  7154                           
  7155                           ; BSR set to: 1
  7156                           ;LED_BarGraph.c: 97: else
  7157                           ;LED_BarGraph.c: 98: timeOut++;
  7158  001588  0101               	movlb	1	; () banked
  7159  00158A  4BD1               	infsnz	LEDbegin@timeOut& (0+255),f,b
  7160  00158C  2BD2               	incf	(LEDbegin@timeOut+1)& (0+255),f,b
  7161                           
  7162                           ; BSR set to: 1
  7163  00158E  D000               	goto	l4908
  7164  001590                     l4908:
  7165                           
  7166                           ; BSR set to: 1
  7167  001590  0101               	movlb	1	; () banked
  7168  001592  05D4               	decf	LEDbegin@status& (0+255),w,b
  7169  001594  A4D8               	btfss	status,2,c
  7170  001596  D7C5               	goto	l4888
  7171  001598                     l4910:
  7172                           
  7173                           ; BSR set to: 1
  7174                           ;LED_BarGraph.c: 99: }
  7175                           ;LED_BarGraph.c: 101: LEDblinkRate(0,i2c_addr);
  7176  001598  0E00               	movlw	0
  7177  00159A  6E25               	movwf	LEDblinkRate@b+1,c
  7178  00159C  0E00               	movlw	0
  7179  00159E  6E24               	movwf	LEDblinkRate@b,c
  7180  0015A0  C1D3  F026         	movff	LEDbegin@i2c_addr,LEDblinkRate@i2c_addr
  7181  0015A4  ECDD  F00A         	call	_LEDblinkRate	;wreg free
  7182                           
  7183                           ;LED_BarGraph.c: 102: LEDBsetBrightness(15,i2c_addr);
  7184  0015A8  0E00               	movlw	0
  7185  0015AA  6E25               	movwf	LEDBsetBrightness@b+1,c
  7186  0015AC  0E0F               	movlw	15
  7187  0015AE  6E24               	movwf	LEDBsetBrightness@b,c
  7188  0015B0  C1D3  F026         	movff	LEDbegin@i2c_addr,LEDBsetBrightness@i2c_addr
  7189  0015B4  EC34  F00B         	call	_LEDBsetBrightness	;wreg free
  7190  0015B8  0012               	return		;funcret
  7191  0015BA                     __end_of_LEDbegin:
  7192                           	opt stack 0
  7193                           tosu	equ	0xFFF
  7194                           tosh	equ	0xFFE
  7195                           tosl	equ	0xFFD
  7196                           pclath	equ	0xFFA
  7197                           tblptru	equ	0xFF8
  7198                           tblptrh	equ	0xFF7
  7199                           tblptrl	equ	0xFF6
  7200                           tablat	equ	0xFF5
  7201                           prodh	equ	0xFF4
  7202                           prodl	equ	0xFF3
  7203                           intcon	equ	0xFF2
  7204                           intcon2	equ	0xFF1
  7205                           postinc0	equ	0xFEE
  7206                           wreg	equ	0xFE8
  7207                           indf2	equ	0xFDF
  7208                           postinc2	equ	0xFDE
  7209                           postdec2	equ	0xFDD
  7210                           plusw2	equ	0xFDB
  7211                           fsr2h	equ	0xFDA
  7212                           fsr2l	equ	0xFD9
  7213                           status	equ	0xFD8
  7214                           
  7215 ;; *************** function _LEDblinkRate *****************
  7216 ;; Defined at:
  7217 ;;		line 42 in file "LED_BarGraph.c"
  7218 ;; Parameters:    Size  Location     Type
  7219 ;;  b               2   35[COMRAM] int 
  7220 ;;  i2c_addr        1   37[COMRAM] unsigned char 
  7221 ;; Auto vars:     Size  Location     Type
  7222 ;;  writeBuffer     2    7[BANK0 ] unsigned char [2]
  7223 ;;  timeOut         2    9[BANK0 ] unsigned int 
  7224 ;;  status          1   11[BANK0 ] enum E8852
  7225 ;; Return value:  Size  Location     Type
  7226 ;;		None               void
  7227 ;; Registers used:
  7228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7229 ;; Tracked objects:
  7230 ;;		On entry : 0/0
  7231 ;;		On exit  : 0/0
  7232 ;;		Unchanged: 0/0
  7233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7234 ;;      Params:         3       0       0       0       0       0       0
  7235 ;;      Locals:         0       5       0       0       0       0       0
  7236 ;;      Temps:          0       0       0       0       0       0       0
  7237 ;;      Totals:         3       5       0       0       0       0       0
  7238 ;;Total ram usage:        8 bytes
  7239 ;; Hardware stack levels used:    1
  7240 ;; Hardware stack levels required when called:    6
  7241 ;; This function calls:
  7242 ;;		_I2C1_MasterWrite
  7243 ;; This function is called by:
  7244 ;;		_LEDbegin
  7245 ;; This function uses a non-reentrant model
  7246 ;;
  7247                           
  7248                           	psect	text42
  7249  0015BA                     __ptext42:
  7250                           	opt stack 0
  7251  0015BA                     _LEDblinkRate:
  7252                           	opt stack 23
  7253                           
  7254                           ;LED_BarGraph.c: 43: if (b > 3) b = 0;
  7255                           
  7256                           ;incstack = 0
  7257  0015BA  BE25               	btfsc	LEDblinkRate@b+1,7,c
  7258  0015BC  D00B               	goto	l4518
  7259  0015BE  5025               	movf	LEDblinkRate@b+1,w,c
  7260  0015C0  E104               	bnz	u4850
  7261  0015C2  0E04               	movlw	4
  7262  0015C4  5C24               	subwf	LEDblinkRate@b,w,c
  7263  0015C6  A0D8               	btfss	status,0,c
  7264  0015C8  D005               	goto	l4518
  7265  0015CA                     u4850:
  7266  0015CA  0E00               	movlw	0
  7267  0015CC  6E25               	movwf	LEDblinkRate@b+1,c
  7268  0015CE  0E00               	movlw	0
  7269  0015D0  6E24               	movwf	LEDblinkRate@b,c
  7270  0015D2  D000               	goto	l4518
  7271  0015D4                     l4518:
  7272                           
  7273                           ;LED_BarGraph.c: 44: uint8_t writeBuffer[2];
  7274                           ;LED_BarGraph.c: 45: uint16_t timeOut;
  7275                           ;LED_BarGraph.c: 46: writeBuffer[0]= (0x80 | 0x01 | (b << 1));
  7276  0015D4  5024               	movf	LEDblinkRate@b,w,c
  7277  0015D6  2424               	addwf	LEDblinkRate@b,w,c
  7278  0015D8  0981               	iorlw	129
  7279  0015DA  0100               	movlb	0	; () banked
  7280  0015DC  6FFA               	movwf	LEDblinkRate@writeBuffer& (0+255),b
  7281                           
  7282                           ; BSR set to: 0
  7283                           ;LED_BarGraph.c: 47: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  7284  0015DE  0E02               	movlw	2
  7285  0015E0  0100               	movlb	0	; () banked
  7286  0015E2  6FFE               	movwf	LEDblinkRate@status& (0+255),b
  7287                           
  7288                           ; BSR set to: 0
  7289                           ;LED_BarGraph.c: 49: timeOut = 0;
  7290  0015E4  0E00               	movlw	0
  7291  0015E6  0100               	movlb	0	; () banked
  7292  0015E8  6FFD               	movwf	(LEDblinkRate@timeOut+1)& (0+255),b
  7293  0015EA  0E00               	movlw	0
  7294  0015EC  6FFC               	movwf	LEDblinkRate@timeOut& (0+255),b
  7295                           
  7296                           ;LED_BarGraph.c: 50: while(status != I2C1_MESSAGE_FAIL)
  7297  0015EE  D037               	goto	l4544
  7298  0015F0                     l4524:
  7299                           
  7300                           ; BSR set to: 0
  7301                           ;LED_BarGraph.c: 51: {
  7302                           ;LED_BarGraph.c: 53: I2C1_MasterWrite( &writeBuffer,
  7303                           ;LED_BarGraph.c: 54: 1,
  7304                           ;LED_BarGraph.c: 55: 0x70,
  7305                           ;LED_BarGraph.c: 56: &status);
  7306  0015F0  0EFA               	movlw	low LEDblinkRate@writeBuffer
  7307  0015F2  0100               	movlb	0	; () banked
  7308  0015F4  6FF3               	movwf	I2C1_MasterWrite@pdata& (0+255),b
  7309  0015F6  0E00               	movlw	high LEDblinkRate@writeBuffer
  7310  0015F8  0100               	movlb	0	; () banked
  7311  0015FA  6FF4               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
  7312  0015FC  0E01               	movlw	1
  7313  0015FE  0100               	movlb	0	; () banked
  7314  001600  6FF5               	movwf	I2C1_MasterWrite@length& (0+255),b
  7315  001602  0E00               	movlw	0
  7316  001604  0100               	movlb	0	; () banked
  7317  001606  6FF7               	movwf	(I2C1_MasterWrite@address+1)& (0+255),b
  7318  001608  0E70               	movlw	112
  7319  00160A  6FF6               	movwf	I2C1_MasterWrite@address& (0+255),b
  7320  00160C  0EFE               	movlw	low LEDblinkRate@status
  7321  00160E  0100               	movlb	0	; () banked
  7322  001610  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
  7323  001612  0E00               	movlw	high LEDblinkRate@status
  7324  001614  0100               	movlb	0	; () banked
  7325  001616  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
  7326  001618  EC82  F00E         	call	_I2C1_MasterWrite	;wreg free
  7327                           
  7328                           ;LED_BarGraph.c: 59: while(status == I2C1_MESSAGE_PENDING);
  7329  00161C  D000               	goto	l4526
  7330  00161E                     l4526:
  7331  00161E  0E02               	movlw	2
  7332  001620  0100               	movlb	0	; () banked
  7333  001622  19FE               	xorwf	LEDblinkRate@status& (0+255),w,b
  7334  001624  B4D8               	btfsc	status,2,c
  7335  001626  D7FB               	goto	l4526
  7336                           
  7337                           ; BSR set to: 0
  7338                           ;LED_BarGraph.c: 61: if (status == I2C1_MESSAGE_COMPLETE)
  7339                           
  7340                           ; BSR set to: 0
  7341  001628  0100               	movlb	0	; () banked
  7342  00162A  51FE               	movf	LEDblinkRate@status& (0+255),w,b
  7343  00162C  0100               	movlb	0	; () banked
  7344  00162E  B4D8               	btfsc	status,2,c
  7345  001630  0012               	return	
  7346  001632  D001               	goto	l4532
  7347                           
  7348                           ; BSR set to: 0
  7349                           ;LED_BarGraph.c: 62: break;
  7350  001634  0012               	return	
  7351  001636                     l4532:
  7352                           
  7353                           ; BSR set to: 0
  7354                           ;LED_BarGraph.c: 63: if (timeOut == 100)
  7355  001636  0E64               	movlw	100
  7356  001638  0100               	movlb	0	; () banked
  7357  00163A  19FC               	xorwf	LEDblinkRate@timeOut& (0+255),w,b
  7358  00163C  0100               	movlb	0	; () banked
  7359  00163E  11FD               	iorwf	(LEDblinkRate@timeOut+1)& (0+255),w,b
  7360  001640  B4D8               	btfsc	status,2,c
  7361  001642  0012               	return	
  7362  001644  D001               	goto	l4536
  7363                           
  7364                           ; BSR set to: 0
  7365                           ;LED_BarGraph.c: 64: break;
  7366  001646  0012               	return	
  7367  001648                     l4536:
  7368                           
  7369                           ; BSR set to: 0
  7370                           ;LED_BarGraph.c: 65: if (status == I2C1_MESSAGE_FAIL)
  7371  001648  0100               	movlb	0	; () banked
  7372  00164A  05FE               	decf	LEDblinkRate@status& (0+255),w,b
  7373  00164C  B4D8               	btfsc	status,2,c
  7374  00164E  0012               	return	
  7375  001650  D002               	goto	l4542
  7376                           
  7377                           ; BSR set to: 0
  7378                           ;LED_BarGraph.c: 66: break;
  7379  001652  0012               	return	
  7380                           
  7381                           ; BSR set to: 0
  7382  001654  D004               	goto	l4544
  7383  001656                     l4542:
  7384                           
  7385                           ; BSR set to: 0
  7386                           ;LED_BarGraph.c: 67: else
  7387                           ;LED_BarGraph.c: 68: timeOut++;
  7388  001656  0100               	movlb	0	; () banked
  7389  001658  4BFC               	infsnz	LEDblinkRate@timeOut& (0+255),f,b
  7390  00165A  2BFD               	incf	(LEDblinkRate@timeOut+1)& (0+255),f,b
  7391                           
  7392                           ; BSR set to: 0
  7393  00165C  D000               	goto	l4544
  7394  00165E                     l4544:
  7395                           
  7396                           ; BSR set to: 0
  7397  00165E  0100               	movlb	0	; () banked
  7398  001660  05FE               	decf	LEDblinkRate@status& (0+255),w,b
  7399  001662  A4D8               	btfss	status,2,c
  7400  001664  D7C5               	goto	l4524
  7401                           
  7402                           ; BSR set to: 0
  7403                           
  7404                           ; BSR set to: 0
  7405  001666  0012               	return		;funcret
  7406  001668                     __end_of_LEDblinkRate:
  7407                           	opt stack 0
  7408                           tosu	equ	0xFFF
  7409                           tosh	equ	0xFFE
  7410                           tosl	equ	0xFFD
  7411                           pclath	equ	0xFFA
  7412                           tblptru	equ	0xFF8
  7413                           tblptrh	equ	0xFF7
  7414                           tblptrl	equ	0xFF6
  7415                           tablat	equ	0xFF5
  7416                           prodh	equ	0xFF4
  7417                           prodl	equ	0xFF3
  7418                           intcon	equ	0xFF2
  7419                           intcon2	equ	0xFF1
  7420                           postinc0	equ	0xFEE
  7421                           wreg	equ	0xFE8
  7422                           indf2	equ	0xFDF
  7423                           postinc2	equ	0xFDE
  7424                           postdec2	equ	0xFDD
  7425                           plusw2	equ	0xFDB
  7426                           fsr2h	equ	0xFDA
  7427                           fsr2l	equ	0xFD9
  7428                           status	equ	0xFD8
  7429                           
  7430 ;; *************** function _LEDBsetBrightness *****************
  7431 ;; Defined at:
  7432 ;;		line 11 in file "LED_BarGraph.c"
  7433 ;; Parameters:    Size  Location     Type
  7434 ;;  b               2   35[COMRAM] int 
  7435 ;;  i2c_addr        1   37[COMRAM] unsigned char 
  7436 ;; Auto vars:     Size  Location     Type
  7437 ;;  writeBuffer     2    7[BANK0 ] unsigned char [2]
  7438 ;;  timeOut         2    9[BANK0 ] unsigned int 
  7439 ;;  status          1   11[BANK0 ] enum E8852
  7440 ;; Return value:  Size  Location     Type
  7441 ;;		None               void
  7442 ;; Registers used:
  7443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7444 ;; Tracked objects:
  7445 ;;		On entry : 0/0
  7446 ;;		On exit  : 0/0
  7447 ;;		Unchanged: 0/0
  7448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7449 ;;      Params:         3       0       0       0       0       0       0
  7450 ;;      Locals:         0       5       0       0       0       0       0
  7451 ;;      Temps:          0       0       0       0       0       0       0
  7452 ;;      Totals:         3       5       0       0       0       0       0
  7453 ;;Total ram usage:        8 bytes
  7454 ;; Hardware stack levels used:    1
  7455 ;; Hardware stack levels required when called:    6
  7456 ;; This function calls:
  7457 ;;		_I2C1_MasterWrite
  7458 ;; This function is called by:
  7459 ;;		_LEDbegin
  7460 ;; This function uses a non-reentrant model
  7461 ;;
  7462                           
  7463                           	psect	text43
  7464  001668                     __ptext43:
  7465                           	opt stack 0
  7466  001668                     _LEDBsetBrightness:
  7467                           	opt stack 23
  7468                           
  7469                           ;LED_BarGraph.c: 12: if (b > 15) b = 15;
  7470                           
  7471                           ; BSR set to: 0
  7472                           ;incstack = 0
  7473  001668  BE25               	btfsc	LEDBsetBrightness@b+1,7,c
  7474  00166A  D00B               	goto	l4486
  7475  00166C  5025               	movf	LEDBsetBrightness@b+1,w,c
  7476  00166E  E104               	bnz	u4790
  7477  001670  0E10               	movlw	16
  7478  001672  5C24               	subwf	LEDBsetBrightness@b,w,c
  7479  001674  A0D8               	btfss	status,0,c
  7480  001676  D005               	goto	l4486
  7481  001678                     u4790:
  7482  001678  0E00               	movlw	0
  7483  00167A  6E25               	movwf	LEDBsetBrightness@b+1,c
  7484  00167C  0E0F               	movlw	15
  7485  00167E  6E24               	movwf	LEDBsetBrightness@b,c
  7486  001680  D000               	goto	l4486
  7487  001682                     l4486:
  7488                           
  7489                           ;LED_BarGraph.c: 13: uint8_t writeBuffer[2];
  7490                           ;LED_BarGraph.c: 14: uint16_t timeOut;
  7491                           ;LED_BarGraph.c: 15: writeBuffer[0] = (0xE0 | b);
  7492  001682  5024               	movf	LEDBsetBrightness@b,w,c
  7493  001684  09E0               	iorlw	224
  7494  001686  0100               	movlb	0	; () banked
  7495  001688  6FFA               	movwf	LEDBsetBrightness@writeBuffer& (0+255),b
  7496                           
  7497                           ; BSR set to: 0
  7498                           ;LED_BarGraph.c: 16: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  7499  00168A  0E02               	movlw	2
  7500  00168C  0100               	movlb	0	; () banked
  7501  00168E  6FFE               	movwf	LEDBsetBrightness@status& (0+255),b
  7502                           
  7503                           ; BSR set to: 0
  7504                           ;LED_BarGraph.c: 18: timeOut = 0;
  7505  001690  0E00               	movlw	0
  7506  001692  0100               	movlb	0	; () banked
  7507  001694  6FFD               	movwf	(LEDBsetBrightness@timeOut+1)& (0+255),b
  7508  001696  0E00               	movlw	0
  7509  001698  6FFC               	movwf	LEDBsetBrightness@timeOut& (0+255),b
  7510                           
  7511                           ;LED_BarGraph.c: 19: while(status != I2C1_MESSAGE_FAIL)
  7512  00169A  D037               	goto	l4512
  7513  00169C                     l4492:
  7514                           
  7515                           ; BSR set to: 0
  7516                           ;LED_BarGraph.c: 20: {
  7517                           ;LED_BarGraph.c: 22: I2C1_MasterWrite( &writeBuffer,
  7518                           ;LED_BarGraph.c: 23: 1,
  7519                           ;LED_BarGraph.c: 24: 0x70,
  7520                           ;LED_BarGraph.c: 25: &status);
  7521  00169C  0EFA               	movlw	low LEDBsetBrightness@writeBuffer
  7522  00169E  0100               	movlb	0	; () banked
  7523  0016A0  6FF3               	movwf	I2C1_MasterWrite@pdata& (0+255),b
  7524  0016A2  0E00               	movlw	high LEDBsetBrightness@writeBuffer
  7525  0016A4  0100               	movlb	0	; () banked
  7526  0016A6  6FF4               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
  7527  0016A8  0E01               	movlw	1
  7528  0016AA  0100               	movlb	0	; () banked
  7529  0016AC  6FF5               	movwf	I2C1_MasterWrite@length& (0+255),b
  7530  0016AE  0E00               	movlw	0
  7531  0016B0  0100               	movlb	0	; () banked
  7532  0016B2  6FF7               	movwf	(I2C1_MasterWrite@address+1)& (0+255),b
  7533  0016B4  0E70               	movlw	112
  7534  0016B6  6FF6               	movwf	I2C1_MasterWrite@address& (0+255),b
  7535  0016B8  0EFE               	movlw	low LEDBsetBrightness@status
  7536  0016BA  0100               	movlb	0	; () banked
  7537  0016BC  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
  7538  0016BE  0E00               	movlw	high LEDBsetBrightness@status
  7539  0016C0  0100               	movlb	0	; () banked
  7540  0016C2  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
  7541  0016C4  EC82  F00E         	call	_I2C1_MasterWrite	;wreg free
  7542                           
  7543                           ;LED_BarGraph.c: 28: while(status == I2C1_MESSAGE_PENDING);
  7544  0016C8  D000               	goto	l4494
  7545  0016CA                     l4494:
  7546  0016CA  0E02               	movlw	2
  7547  0016CC  0100               	movlb	0	; () banked
  7548  0016CE  19FE               	xorwf	LEDBsetBrightness@status& (0+255),w,b
  7549  0016D0  B4D8               	btfsc	status,2,c
  7550  0016D2  D7FB               	goto	l4494
  7551                           
  7552                           ; BSR set to: 0
  7553                           ;LED_BarGraph.c: 30: if (status == I2C1_MESSAGE_COMPLETE)
  7554                           
  7555                           ; BSR set to: 0
  7556  0016D4  0100               	movlb	0	; () banked
  7557  0016D6  51FE               	movf	LEDBsetBrightness@status& (0+255),w,b
  7558  0016D8  0100               	movlb	0	; () banked
  7559  0016DA  B4D8               	btfsc	status,2,c
  7560  0016DC  0012               	return	
  7561  0016DE  D001               	goto	l4500
  7562                           
  7563                           ; BSR set to: 0
  7564                           ;LED_BarGraph.c: 31: break;
  7565  0016E0  0012               	return	
  7566  0016E2                     l4500:
  7567                           
  7568                           ; BSR set to: 0
  7569                           ;LED_BarGraph.c: 32: if (timeOut == 100)
  7570  0016E2  0E64               	movlw	100
  7571  0016E4  0100               	movlb	0	; () banked
  7572  0016E6  19FC               	xorwf	LEDBsetBrightness@timeOut& (0+255),w,b
  7573  0016E8  0100               	movlb	0	; () banked
  7574  0016EA  11FD               	iorwf	(LEDBsetBrightness@timeOut+1)& (0+255),w,b
  7575  0016EC  B4D8               	btfsc	status,2,c
  7576  0016EE  0012               	return	
  7577  0016F0  D001               	goto	l4504
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;LED_BarGraph.c: 33: break;
  7581  0016F2  0012               	return	
  7582  0016F4                     l4504:
  7583                           
  7584                           ; BSR set to: 0
  7585                           ;LED_BarGraph.c: 34: if (status == I2C1_MESSAGE_FAIL)
  7586  0016F4  0100               	movlb	0	; () banked
  7587  0016F6  05FE               	decf	LEDBsetBrightness@status& (0+255),w,b
  7588  0016F8  B4D8               	btfsc	status,2,c
  7589  0016FA  0012               	return	
  7590  0016FC  D002               	goto	l4510
  7591                           
  7592                           ; BSR set to: 0
  7593                           ;LED_BarGraph.c: 35: break;
  7594  0016FE  0012               	return	
  7595                           
  7596                           ; BSR set to: 0
  7597  001700  D004               	goto	l4512
  7598  001702                     l4510:
  7599                           
  7600                           ; BSR set to: 0
  7601                           ;LED_BarGraph.c: 36: else
  7602                           ;LED_BarGraph.c: 37: timeOut++;
  7603  001702  0100               	movlb	0	; () banked
  7604  001704  4BFC               	infsnz	LEDBsetBrightness@timeOut& (0+255),f,b
  7605  001706  2BFD               	incf	(LEDBsetBrightness@timeOut+1)& (0+255),f,b
  7606                           
  7607                           ; BSR set to: 0
  7608  001708  D000               	goto	l4512
  7609  00170A                     l4512:
  7610                           
  7611                           ; BSR set to: 0
  7612  00170A  0100               	movlb	0	; () banked
  7613  00170C  05FE               	decf	LEDBsetBrightness@status& (0+255),w,b
  7614  00170E  A4D8               	btfss	status,2,c
  7615  001710  D7C5               	goto	l4492
  7616                           
  7617                           ; BSR set to: 0
  7618                           
  7619                           ; BSR set to: 0
  7620  001712  0012               	return		;funcret
  7621  001714                     __end_of_LEDBsetBrightness:
  7622                           	opt stack 0
  7623                           tosu	equ	0xFFF
  7624                           tosh	equ	0xFFE
  7625                           tosl	equ	0xFFD
  7626                           pclath	equ	0xFFA
  7627                           tblptru	equ	0xFF8
  7628                           tblptrh	equ	0xFF7
  7629                           tblptrl	equ	0xFF6
  7630                           tablat	equ	0xFF5
  7631                           prodh	equ	0xFF4
  7632                           prodl	equ	0xFF3
  7633                           intcon	equ	0xFF2
  7634                           intcon2	equ	0xFF1
  7635                           postinc0	equ	0xFEE
  7636                           wreg	equ	0xFE8
  7637                           indf2	equ	0xFDF
  7638                           postinc2	equ	0xFDE
  7639                           postdec2	equ	0xFDD
  7640                           plusw2	equ	0xFDB
  7641                           fsr2h	equ	0xFDA
  7642                           fsr2l	equ	0xFD9
  7643                           status	equ	0xFD8
  7644                           
  7645 ;; *************** function _I2C1_MasterWrite *****************
  7646 ;; Defined at:
  7647 ;;		line 551 in file "mcc_generated_files/i2c1.c"
  7648 ;; Parameters:    Size  Location     Type
  7649 ;;  pdata           2    0[BANK0 ] PTR unsigned char 
  7650 ;;		 -> LEDwriteDisplay@writeBuffer(20), LEDbegin@writeBuffer(3), LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBu
      +ffer(2), 
  7651 ;;  length          1    2[BANK0 ] unsigned char 
  7652 ;;  address         2    3[BANK0 ] unsigned int 
  7653 ;;  pflag           2    5[BANK0 ] PTR enum E8836
  7654 ;;		 -> LEDwriteDisplay@status(1), LEDbegin@status(1), LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
  7655 ;; Auto vars:     Size  Location     Type
  7656 ;;		None
  7657 ;; Return value:  Size  Location     Type
  7658 ;;		None               void
  7659 ;; Registers used:
  7660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7661 ;; Tracked objects:
  7662 ;;		On entry : 0/0
  7663 ;;		On exit  : 0/0
  7664 ;;		Unchanged: 0/0
  7665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7666 ;;      Params:         0       7       0       0       0       0       0
  7667 ;;      Locals:         0       0       0       0       0       0       0
  7668 ;;      Temps:          0       0       0       0       0       0       0
  7669 ;;      Totals:         0       7       0       0       0       0       0
  7670 ;;Total ram usage:        7 bytes
  7671 ;; Hardware stack levels used:    1
  7672 ;; Hardware stack levels required when called:    5
  7673 ;; This function calls:
  7674 ;;		_I2C1_MasterTRBInsert
  7675 ;;		_I2C1_MasterWriteTRBBuild
  7676 ;; This function is called by:
  7677 ;;		_LEDBsetBrightness
  7678 ;;		_LEDblinkRate
  7679 ;;		_LEDbegin
  7680 ;;		_LEDwriteDisplay
  7681 ;; This function uses a non-reentrant model
  7682 ;;
  7683                           
  7684                           	psect	text44
  7685  001D04                     __ptext44:
  7686                           	opt stack 0
  7687  001D04                     _I2C1_MasterWrite:
  7688                           	opt stack 23
  7689                           
  7690                           ;i2c1.c: 557: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
  7691                           ;i2c1.c: 560: if (i2c1_object.trStatus.s.full != 1)
  7692                           
  7693                           ; BSR set to: 0
  7694                           ;incstack = 0
  7695  001D04  0100               	movlb	0	; () banked
  7696  001D06  B194               	btfsc	(_i2c1_object+4)& (0+255),0,b
  7697  001D08  D01C               	goto	l4244
  7698                           
  7699                           ; BSR set to: 0
  7700                           ;i2c1.c: 561: {
  7701                           ;i2c1.c: 562: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
  7702  001D0A  0EE9               	movlw	low I2C1_MasterWrite@trBlock
  7703  001D0C  6E1B               	movwf	I2C1_MasterWriteTRBBuild@ptrb,c
  7704  001D0E  0E00               	movlw	high I2C1_MasterWrite@trBlock
  7705  001D10  6E1C               	movwf	I2C1_MasterWriteTRBBuild@ptrb+1,c
  7706  001D12  C0F3  F01D         	movff	I2C1_MasterWrite@pdata,I2C1_MasterWriteTRBBuild@pdata
  7707  001D16  C0F4  F01E         	movff	I2C1_MasterWrite@pdata+1,I2C1_MasterWriteTRBBuild@pdata+1
  7708  001D1A  C0F5  F01F         	movff	I2C1_MasterWrite@length,I2C1_MasterWriteTRBBuild@length
  7709  001D1E  C0F6  F020         	movff	I2C1_MasterWrite@address,I2C1_MasterWriteTRBBuild@address
  7710  001D22  C0F7  F021         	movff	I2C1_MasterWrite@address+1,I2C1_MasterWriteTRBBuild@address+1
  7711  001D26  ECCC  F00E         	call	_I2C1_MasterWriteTRBBuild	;wreg free
  7712                           
  7713                           ;i2c1.c: 563: I2C1_MasterTRBInsert(1, &trBlock, pflag);
  7714  001D2A  0EE9               	movlw	low I2C1_MasterWrite@trBlock
  7715  001D2C  6E1B               	movwf	I2C1_MasterTRBInsert@ptrb_list,c
  7716  001D2E  0E00               	movlw	high I2C1_MasterWrite@trBlock
  7717  001D30  6E1C               	movwf	I2C1_MasterTRBInsert@ptrb_list+1,c
  7718  001D32  C0F8  F01D         	movff	I2C1_MasterWrite@pflag,I2C1_MasterTRBInsert@pflag
  7719  001D36  C0F9  F01E         	movff	I2C1_MasterWrite@pflag+1,I2C1_MasterTRBInsert@pflag+1
  7720  001D3A  0E01               	movlw	1
  7721  001D3C  EC22  F00A         	call	_I2C1_MasterTRBInsert
  7722                           
  7723                           ;i2c1.c: 564: }
  7724  001D40  0012               	return	
  7725  001D42                     l4244:
  7726                           
  7727                           ;i2c1.c: 565: else
  7728                           ;i2c1.c: 566: {
  7729                           ;i2c1.c: 567: *pflag = I2C1_MESSAGE_FAIL;
  7730  001D42  C0F8  FFD9         	movff	I2C1_MasterWrite@pflag,fsr2l
  7731  001D46  C0F9  FFDA         	movff	I2C1_MasterWrite@pflag+1,fsr2h
  7732  001D4A  0E01               	movlw	1
  7733  001D4C  6EDF               	movwf	indf2,c
  7734  001D4E  0012               	return	
  7735  001D50  0012               	return		;funcret
  7736  001D52                     __end_of_I2C1_MasterWrite:
  7737                           	opt stack 0
  7738                           tosu	equ	0xFFF
  7739                           tosh	equ	0xFFE
  7740                           tosl	equ	0xFFD
  7741                           pclath	equ	0xFFA
  7742                           tblptru	equ	0xFF8
  7743                           tblptrh	equ	0xFF7
  7744                           tblptrl	equ	0xFF6
  7745                           tablat	equ	0xFF5
  7746                           prodh	equ	0xFF4
  7747                           prodl	equ	0xFF3
  7748                           intcon	equ	0xFF2
  7749                           intcon2	equ	0xFF1
  7750                           postinc0	equ	0xFEE
  7751                           wreg	equ	0xFE8
  7752                           indf2	equ	0xFDF
  7753                           postinc2	equ	0xFDE
  7754                           postdec2	equ	0xFDD
  7755                           plusw2	equ	0xFDB
  7756                           fsr2h	equ	0xFDA
  7757                           fsr2l	equ	0xFD9
  7758                           status	equ	0xFD8
  7759                           
  7760 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
  7761 ;; Defined at:
  7762 ;;		line 660 in file "mcc_generated_files/i2c1.c"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;  ptrb            2   26[COMRAM] PTR struct .
  7765 ;;		 -> I2C1_MasterWrite@trBlock(5), 
  7766 ;;  pdata           2   28[COMRAM] PTR unsigned char 
  7767 ;;		 -> LEDwriteDisplay@writeBuffer(20), LEDbegin@writeBuffer(3), LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBu
      +ffer(2), 
  7768 ;;  length          1   30[COMRAM] unsigned char 
  7769 ;;  address         2   31[COMRAM] unsigned int 
  7770 ;; Auto vars:     Size  Location     Type
  7771 ;;		None
  7772 ;; Return value:  Size  Location     Type
  7773 ;;		None               void
  7774 ;; Registers used:
  7775 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7776 ;; Tracked objects:
  7777 ;;		On entry : 0/0
  7778 ;;		On exit  : 0/0
  7779 ;;		Unchanged: 0/0
  7780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7781 ;;      Params:         7       0       0       0       0       0       0
  7782 ;;      Locals:         0       0       0       0       0       0       0
  7783 ;;      Temps:          2       0       0       0       0       0       0
  7784 ;;      Totals:         9       0       0       0       0       0       0
  7785 ;;Total ram usage:        9 bytes
  7786 ;; Hardware stack levels used:    1
  7787 ;; Hardware stack levels required when called:    4
  7788 ;; This function calls:
  7789 ;;		Nothing
  7790 ;; This function is called by:
  7791 ;;		_I2C1_MasterWrite
  7792 ;; This function uses a non-reentrant model
  7793 ;;
  7794                           
  7795                           	psect	text45
  7796  001D98                     __ptext45:
  7797                           	opt stack 0
  7798  001D98                     _I2C1_MasterWriteTRBBuild:
  7799                           	opt stack 23
  7800                           
  7801                           ;i2c1.c: 666: ptrb->address = address << 1;
  7802                           
  7803                           ;incstack = 0
  7804  001D98  C020  F022         	movff	I2C1_MasterWriteTRBBuild@address,??_I2C1_MasterWriteTRBBuild
  7805  001D9C  C021  F023         	movff	I2C1_MasterWriteTRBBuild@address+1,??_I2C1_MasterWriteTRBBuild+1
  7806  001DA0  90D8               	bcf	status,0,c
  7807  001DA2  3622               	rlcf	??_I2C1_MasterWriteTRBBuild,f,c
  7808  001DA4  3623               	rlcf	??_I2C1_MasterWriteTRBBuild+1,f,c
  7809  001DA6  C01B  FFD9         	movff	I2C1_MasterWriteTRBBuild@ptrb,fsr2l
  7810  001DAA  C01C  FFDA         	movff	I2C1_MasterWriteTRBBuild@ptrb+1,fsr2h
  7811  001DAE  C022  FFDE         	movff	??_I2C1_MasterWriteTRBBuild,postinc2
  7812  001DB2  C023  FFDD         	movff	??_I2C1_MasterWriteTRBBuild+1,postdec2
  7813                           
  7814                           ;i2c1.c: 667: ptrb->length = length;
  7815  001DB6  EE20 F002          	lfsr	2,2
  7816  001DBA  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
  7817  001DBC  26D9               	addwf	fsr2l,f,c
  7818  001DBE  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
  7819  001DC0  22DA               	addwfc	fsr2h,f,c
  7820  001DC2  C01F  FFDF         	movff	I2C1_MasterWriteTRBBuild@length,indf2
  7821                           
  7822                           ;i2c1.c: 668: ptrb->pbuffer = pdata;
  7823  001DC6  EE20 F003          	lfsr	2,3
  7824  001DCA  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
  7825  001DCC  26D9               	addwf	fsr2l,f,c
  7826  001DCE  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
  7827  001DD0  22DA               	addwfc	fsr2h,f,c
  7828  001DD2  C01D  FFDE         	movff	I2C1_MasterWriteTRBBuild@pdata,postinc2
  7829  001DD6  C01E  FFDD         	movff	I2C1_MasterWriteTRBBuild@pdata+1,postdec2
  7830  001DDA  0012               	return		;funcret
  7831  001DDC                     __end_of_I2C1_MasterWriteTRBBuild:
  7832                           	opt stack 0
  7833                           tosu	equ	0xFFF
  7834                           tosh	equ	0xFFE
  7835                           tosl	equ	0xFFD
  7836                           pclath	equ	0xFFA
  7837                           tblptru	equ	0xFF8
  7838                           tblptrh	equ	0xFF7
  7839                           tblptrl	equ	0xFF6
  7840                           tablat	equ	0xFF5
  7841                           prodh	equ	0xFF4
  7842                           prodl	equ	0xFF3
  7843                           intcon	equ	0xFF2
  7844                           intcon2	equ	0xFF1
  7845                           postinc0	equ	0xFEE
  7846                           wreg	equ	0xFE8
  7847                           indf2	equ	0xFDF
  7848                           postinc2	equ	0xFDE
  7849                           postdec2	equ	0xFDD
  7850                           plusw2	equ	0xFDB
  7851                           fsr2h	equ	0xFDA
  7852                           fsr2l	equ	0xFD9
  7853                           status	equ	0xFD8
  7854                           
  7855 ;; *************** function _I2C1_MasterTRBInsert *****************
  7856 ;; Defined at:
  7857 ;;		line 594 in file "mcc_generated_files/i2c1.c"
  7858 ;; Parameters:    Size  Location     Type
  7859 ;;  count           1    wreg     unsigned char 
  7860 ;;  ptrb_list       2   26[COMRAM] PTR struct .
  7861 ;;		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
  7862 ;;  pflag           2   28[COMRAM] PTR enum E8836
  7863 ;;		 -> LEDwriteDisplay@status(1), LEDbegin@status(1), LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
  7864 ;; Auto vars:     Size  Location     Type
  7865 ;;  count           1   31[COMRAM] unsigned char 
  7866 ;; Return value:  Size  Location     Type
  7867 ;;		None               void
  7868 ;; Registers used:
  7869 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7870 ;; Tracked objects:
  7871 ;;		On entry : 0/0
  7872 ;;		On exit  : 0/0
  7873 ;;		Unchanged: 0/0
  7874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7875 ;;      Params:         4       0       0       0       0       0       0
  7876 ;;      Locals:         1       0       0       0       0       0       0
  7877 ;;      Temps:          1       0       0       0       0       0       0
  7878 ;;      Totals:         6       0       0       0       0       0       0
  7879 ;;Total ram usage:        6 bytes
  7880 ;; Hardware stack levels used:    1
  7881 ;; Hardware stack levels required when called:    4
  7882 ;; This function calls:
  7883 ;;		Nothing
  7884 ;; This function is called by:
  7885 ;;		_I2C1_MasterWrite
  7886 ;;		_I2C1_MasterRead
  7887 ;; This function uses a non-reentrant model
  7888 ;;
  7889                           
  7890                           	psect	text46
  7891  001444                     __ptext46:
  7892                           	opt stack 0
  7893  001444                     _I2C1_MasterTRBInsert:
  7894                           	opt stack 23
  7895                           
  7896                           ;incstack = 0
  7897                           ;I2C1_MasterTRBInsert@count stored from wreg
  7898  001444  6E20               	movwf	I2C1_MasterTRBInsert@count,c
  7899                           
  7900                           ;i2c1.c: 601: if (i2c1_object.trStatus.s.full != 1)
  7901  001446  0100               	movlb	0	; () banked
  7902  001448  B194               	btfsc	(_i2c1_object+4)& (0+255),0,b
  7903  00144A  D047               	goto	l4116
  7904                           
  7905                           ; BSR set to: 0
  7906                           ;i2c1.c: 602: {
  7907                           ;i2c1.c: 603: *pflag = I2C1_MESSAGE_PENDING;
  7908  00144C  C01D  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
  7909  001450  C01E  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
  7910  001454  0E02               	movlw	2
  7911  001456  6EDF               	movwf	indf2,c
  7912                           
  7913                           ; BSR set to: 0
  7914                           ;i2c1.c: 605: i2c1_object.pTrTail->ptrb_list = ptrb_list;
  7915  001458  0100               	movlb	0	; () banked
  7916  00145A  EE20 F001          	lfsr	2,1
  7917  00145E  5190               	movf	_i2c1_object& (0+255),w,b
  7918  001460  26D9               	addwf	fsr2l,f,c
  7919  001462  5191               	movf	(_i2c1_object+1)& (0+255),w,b
  7920  001464  22DA               	addwfc	fsr2h,f,c
  7921  001466  C01B  FFDE         	movff	I2C1_MasterTRBInsert@ptrb_list,postinc2
  7922  00146A  C01C  FFDD         	movff	I2C1_MasterTRBInsert@ptrb_list+1,postdec2
  7923                           
  7924                           ; BSR set to: 0
  7925                           ;i2c1.c: 606: i2c1_object.pTrTail->count = count;
  7926  00146E  C090  FFD9         	movff	_i2c1_object,fsr2l
  7927  001472  C091  FFDA         	movff	_i2c1_object+1,fsr2h
  7928  001476  C020  FFDF         	movff	I2C1_MasterTRBInsert@count,indf2
  7929                           
  7930                           ; BSR set to: 0
  7931                           ;i2c1.c: 607: i2c1_object.pTrTail->pTrFlag = pflag;
  7932  00147A  0100               	movlb	0	; () banked
  7933  00147C  EE20 F003          	lfsr	2,3
  7934  001480  5190               	movf	_i2c1_object& (0+255),w,b
  7935  001482  26D9               	addwf	fsr2l,f,c
  7936  001484  5191               	movf	(_i2c1_object+1)& (0+255),w,b
  7937  001486  22DA               	addwfc	fsr2h,f,c
  7938  001488  C01D  FFDE         	movff	I2C1_MasterTRBInsert@pflag,postinc2
  7939  00148C  C01E  FFDD         	movff	I2C1_MasterTRBInsert@pflag+1,postdec2
  7940                           
  7941                           ; BSR set to: 0
  7942                           ;i2c1.c: 608: i2c1_object.pTrTail++;
  7943  001490  0E05               	movlw	5
  7944  001492  0100               	movlb	0	; () banked
  7945  001494  2790               	addwf	_i2c1_object& (0+255),f,b
  7946  001496  0E00               	movlw	0
  7947  001498  2391               	addwfc	(_i2c1_object+1)& (0+255),f,b
  7948                           
  7949                           ; BSR set to: 0
  7950                           ;i2c1.c: 611: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
  7951  00149A  0EF3               	movlw	low (_i2c1_tr_queue+5)
  7952  00149C  0100               	movlb	0	; () banked
  7953  00149E  1990               	xorwf	_i2c1_object& (0+255),w,b
  7954  0014A0  E10C               	bnz	l4112
  7955  0014A2  0E00               	movlw	high (_i2c1_tr_queue+5)
  7956  0014A4  0100               	movlb	0	; () banked
  7957  0014A6  1991               	xorwf	(_i2c1_object+1)& (0+255),w,b
  7958  0014A8  A4D8               	btfss	status,2,c
  7959  0014AA  D007               	goto	l4112
  7960                           
  7961                           ; BSR set to: 0
  7962                           ;i2c1.c: 612: {
  7963                           ;i2c1.c: 614: i2c1_object.pTrTail = i2c1_tr_queue;
  7964  0014AC  0EEE               	movlw	low _i2c1_tr_queue
  7965  0014AE  0100               	movlb	0	; () banked
  7966  0014B0  6F90               	movwf	_i2c1_object& (0+255),b
  7967  0014B2  0E00               	movlw	high _i2c1_tr_queue
  7968  0014B4  0100               	movlb	0	; () banked
  7969  0014B6  6F91               	movwf	(_i2c1_object+1)& (0+255),b
  7970  0014B8  D000               	goto	l4112
  7971  0014BA                     l4112:
  7972                           
  7973                           ; BSR set to: 0
  7974                           ;i2c1.c: 615: }
  7975                           ;i2c1.c: 619: i2c1_object.trStatus.s.empty = 0;
  7976  0014BA  0100               	movlb	0	; () banked
  7977  0014BC  9394               	bcf	(_i2c1_object+4)& (0+255),1,b
  7978                           
  7979                           ;i2c1.c: 622: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
  7980  0014BE  0100               	movlb	0	; () banked
  7981  0014C0  5190               	movf	_i2c1_object& (0+255),w,b
  7982  0014C2  0100               	movlb	0	; () banked
  7983  0014C4  1992               	xorwf	(_i2c1_object+2)& (0+255),w,b
  7984  0014C6  E110               	bnz	l4118
  7985  0014C8  0100               	movlb	0	; () banked
  7986  0014CA  5191               	movf	(_i2c1_object+1)& (0+255),w,b
  7987  0014CC  0100               	movlb	0	; () banked
  7988  0014CE  1993               	xorwf	(_i2c1_object+3)& (0+255),w,b
  7989  0014D0  A4D8               	btfss	status,2,c
  7990  0014D2  D00A               	goto	l4118
  7991                           
  7992                           ; BSR set to: 0
  7993                           ;i2c1.c: 623: {
  7994                           ;i2c1.c: 625: i2c1_object.trStatus.s.full = 1;
  7995  0014D4  0100               	movlb	0	; () banked
  7996  0014D6  8194               	bsf	(_i2c1_object+4)& (0+255),0,b
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;i2c1.c: 626: }
  8000                           ;i2c1.c: 628: }
  8001  0014D8  D007               	goto	l4118
  8002  0014DA                     l4116:
  8003                           
  8004                           ; BSR set to: 0
  8005                           ;i2c1.c: 629: else
  8006                           ;i2c1.c: 630: {
  8007                           ;i2c1.c: 631: *pflag = I2C1_MESSAGE_FAIL;
  8008  0014DA  C01D  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
  8009  0014DE  C01E  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
  8010  0014E2  0E01               	movlw	1
  8011  0014E4  6EDF               	movwf	indf2,c
  8012  0014E6  D000               	goto	l4118
  8013  0014E8                     l4118:
  8014                           
  8015                           ; BSR set to: 0
  8016                           ;i2c1.c: 632: }
  8017                           ;i2c1.c: 635: if (*pflag == I2C1_MESSAGE_PENDING)
  8018  0014E8  C01D  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
  8019  0014EC  C01E  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
  8020  0014F0  0E02               	movlw	2
  8021  0014F2  18DE               	xorwf	postinc2,w,c
  8022  0014F4  A4D8               	btfss	status,2,c
  8023  0014F6  0012               	return	
  8024                           
  8025                           ; BSR set to: 0
  8026                           
  8027                           ; BSR set to: 0
  8028                           ;i2c1.c: 636: {
  8029                           ;i2c1.c: 637: while(i2c1_state != S_MASTER_IDLE);
  8030  0014F8  D000               	goto	l4122
  8031  0014FA                     l4122:
  8032  0014FA  5037               	movf	_i2c1_state,w,c
  8033  0014FC  A4D8               	btfss	status,2,c
  8034  0014FE  D7FD               	goto	l4122
  8035                           
  8036                           ;i2c1.c: 638: {
  8037                           ;i2c1.c: 641: PIR1bits.SSP1IF = 1;
  8038  001500  869E               	bsf	3998,3,c	;volatile
  8039  001502  0012               	return	
  8040  001504  0012               	return		;funcret
  8041  001506                     __end_of_I2C1_MasterTRBInsert:
  8042                           	opt stack 0
  8043                           tosu	equ	0xFFF
  8044                           tosh	equ	0xFFE
  8045                           tosl	equ	0xFFD
  8046                           pclath	equ	0xFFA
  8047                           tblptru	equ	0xFF8
  8048                           tblptrh	equ	0xFF7
  8049                           tblptrl	equ	0xFF6
  8050                           tablat	equ	0xFF5
  8051                           prodh	equ	0xFF4
  8052                           prodl	equ	0xFF3
  8053                           intcon	equ	0xFF2
  8054                           intcon2	equ	0xFF1
  8055                           postinc0	equ	0xFEE
  8056                           wreg	equ	0xFE8
  8057                           indf2	equ	0xFDF
  8058                           postinc2	equ	0xFDE
  8059                           postdec2	equ	0xFDD
  8060                           plusw2	equ	0xFDB
  8061                           fsr2h	equ	0xFDA
  8062                           fsr2l	equ	0xFD9
  8063                           status	equ	0xFD8
  8064                           
  8065 ;; *************** function _INTERRUPT_InterruptManager *****************
  8066 ;; Defined at:
  8067 ;;		line 73 in file "mcc_generated_files/interrupt_manager.c"
  8068 ;; Parameters:    Size  Location     Type
  8069 ;;		None
  8070 ;; Auto vars:     Size  Location     Type
  8071 ;;		None
  8072 ;; Return value:  Size  Location     Type
  8073 ;;		None               void
  8074 ;; Registers used:
  8075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8076 ;; Tracked objects:
  8077 ;;		On entry : 0/0
  8078 ;;		On exit  : 0/0
  8079 ;;		Unchanged: 0/0
  8080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8081 ;;      Params:         0       0       0       0       0       0       0
  8082 ;;      Locals:         0       0       0       0       0       0       0
  8083 ;;      Temps:         14       0       0       0       0       0       0
  8084 ;;      Totals:        14       0       0       0       0       0       0
  8085 ;;Total ram usage:       14 bytes
  8086 ;; Hardware stack levels used:    1
  8087 ;; Hardware stack levels required when called:    3
  8088 ;; This function calls:
  8089 ;;		_ADC_ISR
  8090 ;;		_EUSART1_Receive_ISR
  8091 ;;		_EUSART1_Transmit_ISR
  8092 ;;		_I2C1_BusCollisionISR
  8093 ;;		_I2C1_ISR
  8094 ;;		_TMR0_ISR
  8095 ;; This function is called by:
  8096 ;;		Interrupt level 2
  8097 ;; This function uses a non-reentrant model
  8098 ;;
  8099                           
  8100                           	psect	intcode
  8101  000008                     __pintcode:
  8102                           	opt stack 0
  8103  000008                     _INTERRUPT_InterruptManager:
  8104                           	opt stack 21
  8105                           
  8106                           ;incstack = 0
  8107  000008  CFFA F00D          	movff	pclath,??_INTERRUPT_InterruptManager
  8108  00000C  CFFB F00E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  8109  000010  CFE9 F00F          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  8110  000014  CFEA F010          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  8111  000018  CFE1 F011          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  8112  00001C  CFE2 F012          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  8113  000020  CFD9 F013          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  8114  000024  CFDA F014          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  8115  000028  CFF3 F015          	movff	prodl,??_INTERRUPT_InterruptManager+8
  8116  00002C  CFF4 F016          	movff	prodh,??_INTERRUPT_InterruptManager+9
  8117  000030  CFF6 F017          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  8118  000034  CFF7 F018          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  8119  000038  CFF8 F019          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  8120  00003C  CFF5 F01A          	movff	tablat,??_INTERRUPT_InterruptManager+13
  8121                           
  8122                           ;interrupt_manager.c: 76: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  8123  000040  BA9D               	btfsc	3997,5,c	;volatile
  8124  000042  AA9E               	btfss	3998,5,c	;volatile
  8125  000044  D003               	goto	i2l316
  8126                           
  8127                           ;interrupt_manager.c: 77: {
  8128                           ;interrupt_manager.c: 78: EUSART1_Receive_ISR();
  8129  000046  EC69  F010         	call	_EUSART1_Receive_ISR	;wreg free
  8130                           
  8131                           ;interrupt_manager.c: 79: }
  8132  00004A  D01E               	goto	i2l328
  8133  00004C                     i2l316:
  8134                           
  8135                           ;interrupt_manager.c: 80: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  8136  00004C  B89D               	btfsc	3997,4,c	;volatile
  8137  00004E  A89E               	btfss	3998,4,c	;volatile
  8138  000050  D003               	goto	i2l318
  8139                           
  8140                           ;interrupt_manager.c: 81: {
  8141                           ;interrupt_manager.c: 82: EUSART1_Transmit_ISR();
  8142  000052  EC7F  F00F         	call	_EUSART1_Transmit_ISR	;wreg free
  8143                           
  8144                           ;interrupt_manager.c: 83: }
  8145  000056  D018               	goto	i2l328
  8146  000058                     i2l318:
  8147                           
  8148                           ;interrupt_manager.c: 84: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  8149  000058  BAF2               	btfsc	intcon,5,c	;volatile
  8150  00005A  A4F2               	btfss	intcon,2,c	;volatile
  8151  00005C  D003               	goto	i2l320
  8152                           
  8153                           ;interrupt_manager.c: 85: {
  8154                           ;interrupt_manager.c: 86: TMR0_ISR();
  8155  00005E  ECD1  F00D         	call	_TMR0_ISR	;wreg free
  8156                           
  8157                           ;interrupt_manager.c: 87: }
  8158  000062  D012               	goto	i2l328
  8159  000064                     i2l320:
  8160                           
  8161                           ;interrupt_manager.c: 88: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  8162  000064  BC9D               	btfsc	3997,6,c	;volatile
  8163  000066  AC9E               	btfss	3998,6,c	;volatile
  8164  000068  D003               	goto	i2l322
  8165                           
  8166                           ;interrupt_manager.c: 89: {
  8167                           ;interrupt_manager.c: 90: ADC_ISR();
  8168  00006A  ECE7  F010         	call	_ADC_ISR	;wreg free
  8169                           
  8170                           ;interrupt_manager.c: 91: }
  8171  00006E  D00C               	goto	i2l328
  8172  000070                     i2l322:
  8173                           
  8174                           ;interrupt_manager.c: 92: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
  8175  000070  B69D               	btfsc	3997,3,c	;volatile
  8176  000072  A69E               	btfss	3998,3,c	;volatile
  8177  000074  D003               	goto	i2l324
  8178                           
  8179                           ;interrupt_manager.c: 93: {
  8180                           ;interrupt_manager.c: 94: I2C1_ISR();
  8181  000076  ECCE  F003         	call	_I2C1_ISR	;wreg free
  8182                           
  8183                           ;interrupt_manager.c: 95: }
  8184  00007A  D006               	goto	i2l328
  8185  00007C                     i2l324:
  8186                           
  8187                           ;interrupt_manager.c: 96: else if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
  8188  00007C  B6A0               	btfsc	4000,3,c	;volatile
  8189  00007E  A6A1               	btfss	4001,3,c	;volatile
  8190  000080  D003               	goto	i2l328
  8191                           
  8192                           ;interrupt_manager.c: 97: {
  8193                           ;interrupt_manager.c: 98: I2C1_BusCollisionISR();
  8194  000082  ECE9  F010         	call	_I2C1_BusCollisionISR	;wreg free
  8195                           
  8196                           ;interrupt_manager.c: 100: else
  8197                           ;interrupt_manager.c: 101: {
  8198                           
  8199                           ;interrupt_manager.c: 99: }
  8200  000086  D000               	goto	i2l328
  8201  000088                     i2l328:
  8202  000088  C01A  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  8203  00008C  C019  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  8204  000090  C018  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  8205  000094  C017  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  8206  000098  C016  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  8207  00009C  C015  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  8208  0000A0  C014  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  8209  0000A4  C013  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  8210  0000A8  C012  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  8211  0000AC  C011  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  8212  0000B0  C010  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  8213  0000B4  C00F  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  8214  0000B8  C00E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  8215  0000BC  C00D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  8216  0000C0  0011               	retfie		f
  8217  0000C2                     __end_of_INTERRUPT_InterruptManager:
  8218                           	opt stack 0
  8219                           tosu	equ	0xFFF
  8220                           tosh	equ	0xFFE
  8221                           tosl	equ	0xFFD
  8222                           pclatu	equ	0xFFB
  8223                           pclath	equ	0xFFA
  8224                           tblptru	equ	0xFF8
  8225                           tblptrh	equ	0xFF7
  8226                           tblptrl	equ	0xFF6
  8227                           tablat	equ	0xFF5
  8228                           prodh	equ	0xFF4
  8229                           prodl	equ	0xFF3
  8230                           intcon	equ	0xFF2
  8231                           intcon2	equ	0xFF1
  8232                           postinc0	equ	0xFEE
  8233                           fsr0h	equ	0xFEA
  8234                           fsr0l	equ	0xFE9
  8235                           wreg	equ	0xFE8
  8236                           fsr1h	equ	0xFE2
  8237                           fsr1l	equ	0xFE1
  8238                           indf2	equ	0xFDF
  8239                           postinc2	equ	0xFDE
  8240                           postdec2	equ	0xFDD
  8241                           plusw2	equ	0xFDB
  8242                           fsr2h	equ	0xFDA
  8243                           fsr2l	equ	0xFD9
  8244                           status	equ	0xFD8
  8245                           
  8246 ;; *************** function _TMR0_ISR *****************
  8247 ;; Defined at:
  8248 ;;		line 89 in file "mcc_generated_files/tmr0.c"
  8249 ;; Parameters:    Size  Location     Type
  8250 ;;		None
  8251 ;; Auto vars:     Size  Location     Type
  8252 ;;  x               2    4[COMRAM] int 
  8253 ;; Return value:  Size  Location     Type
  8254 ;;		None               void
  8255 ;; Registers used:
  8256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8257 ;; Tracked objects:
  8258 ;;		On entry : 0/0
  8259 ;;		On exit  : 0/0
  8260 ;;		Unchanged: 0/0
  8261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8262 ;;      Params:         0       0       0       0       0       0       0
  8263 ;;      Locals:         2       0       0       0       0       0       0
  8264 ;;      Temps:          0       0       0       0       0       0       0
  8265 ;;      Totals:         2       0       0       0       0       0       0
  8266 ;;Total ram usage:        2 bytes
  8267 ;; Hardware stack levels used:    1
  8268 ;; Hardware stack levels required when called:    1
  8269 ;; This function calls:
  8270 ;;		_ReadButtonState
  8271 ;;		_TMR0_CallBack
  8272 ;; This function is called by:
  8273 ;;		_INTERRUPT_InterruptManager
  8274 ;; This function uses a non-reentrant model
  8275 ;;
  8276                           
  8277                           	psect	text48
  8278  001BA2                     __ptext48:
  8279                           	opt stack 0
  8280  001BA2                     _TMR0_ISR:
  8281                           	opt stack 22
  8282                           
  8283                           ;tmr0.c: 91: static volatile uint16_t CountCallBack = 0;
  8284                           ;tmr0.c: 94: INTCONbits.TMR0IF = 0;
  8285                           
  8286                           ;incstack = 0
  8287  001BA2  94F2               	bcf	intcon,2,c	;volatile
  8288                           
  8289                           ;tmr0.c: 98: TMR0H = timer0ReloadVal16bit >> 8;
  8290  001BA4  5044               	movf	_timer0ReloadVal16bit+1,w,c	;volatile
  8291  001BA6  6ED7               	movwf	4055,c	;volatile
  8292                           
  8293                           ;tmr0.c: 99: TMR0L = (uint8_t) timer0ReloadVal16bit;
  8294  001BA8  C043  FFD6         	movff	_timer0ReloadVal16bit,4054	;volatile
  8295                           
  8296                           ;tmr0.c: 101: for(int x = 0;x<8;x++)
  8297  001BAC  0E00               	movlw	0
  8298  001BAE  6E06               	movwf	TMR0_ISR@x+1,c
  8299  001BB0  0E00               	movlw	0
  8300  001BB2  6E05               	movwf	TMR0_ISR@x,c
  8301  001BB4                     i2l3702:
  8302  001BB4  BE06               	btfsc	TMR0_ISR@x+1,7,c
  8303  001BB6  D008               	goto	i2l3706
  8304  001BB8  5006               	movf	TMR0_ISR@x+1,w,c
  8305  001BBA  E110               	bnz	i2l3712
  8306  001BBC  0E08               	movlw	8
  8307  001BBE  5C05               	subwf	TMR0_ISR@x,w,c
  8308  001BC0  B0D8               	btfsc	status,0,c
  8309  001BC2  D00C               	goto	i2l3712
  8310  001BC4  D001               	goto	i2l3706
  8311  001BC6  D00A               	goto	i2l3712
  8312  001BC8                     i2l3706:
  8313                           
  8314                           ;tmr0.c: 102: {
  8315                           ;tmr0.c: 103: ReadButtonState(x);
  8316  001BC8  C005  F001         	movff	TMR0_ISR@x,ReadButtonState@btnnum
  8317  001BCC  C006  F002         	movff	TMR0_ISR@x+1,ReadButtonState@btnnum+1
  8318  001BD0  EC48  F008         	call	_ReadButtonState	;wreg free
  8319  001BD4  4A05               	infsnz	TMR0_ISR@x,f,c
  8320  001BD6  2A06               	incf	TMR0_ISR@x+1,f,c
  8321  001BD8  D7ED               	goto	i2l3702
  8322  001BDA  D000               	goto	i2l3712
  8323  001BDC                     i2l3712:
  8324                           
  8325                           ;tmr0.c: 104: }
  8326                           ;tmr0.c: 107: if (++CountCallBack >= 5)
  8327  001BDC  0100               	movlb	0	; () banked
  8328  001BDE  4B99               	infsnz	TMR0_ISR@CountCallBack& (0+255),f,b	;volatile
  8329  001BE0  2B9A               	incf	(TMR0_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  8330  001BE2  0100               	movlb	0	; () banked
  8331  001BE4  519A               	movf	(TMR0_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  8332  001BE6  E105               	bnz	i2u364_40
  8333  001BE8  0E05               	movlw	5
  8334  001BEA  0100               	movlb	0	; () banked
  8335  001BEC  5D99               	subwf	TMR0_ISR@CountCallBack& (0+255),w,b	;volatile
  8336  001BEE  A0D8               	btfss	status,0,c
  8337  001BF0  0012               	return	
  8338  001BF2                     i2u364_40:
  8339                           
  8340                           ; BSR set to: 0
  8341                           ;tmr0.c: 108: {
  8342                           ;tmr0.c: 110: TMR0_CallBack();
  8343  001BF2  ECE2  F010         	call	_TMR0_CallBack	;wreg free
  8344                           
  8345                           ;tmr0.c: 113: CountCallBack = 0;
  8346  001BF6  0E00               	movlw	0
  8347  001BF8  0100               	movlb	0	; () banked
  8348  001BFA  6F9A               	movwf	(TMR0_ISR@CountCallBack+1)& (0+255),b	;volatile
  8349  001BFC  0E00               	movlw	0
  8350  001BFE  6F99               	movwf	TMR0_ISR@CountCallBack& (0+255),b	;volatile
  8351  001C00  0012               	return	
  8352                           
  8353                           ; BSR set to: 0
  8354                           
  8355                           ; BSR set to: 0
  8356  001C02  0012               	return		;funcret
  8357  001C04                     __end_of_TMR0_ISR:
  8358                           	opt stack 0
  8359                           tosu	equ	0xFFF
  8360                           tosh	equ	0xFFE
  8361                           tosl	equ	0xFFD
  8362                           pclatu	equ	0xFFB
  8363                           pclath	equ	0xFFA
  8364                           tblptru	equ	0xFF8
  8365                           tblptrh	equ	0xFF7
  8366                           tblptrl	equ	0xFF6
  8367                           tablat	equ	0xFF5
  8368                           prodh	equ	0xFF4
  8369                           prodl	equ	0xFF3
  8370                           intcon	equ	0xFF2
  8371                           intcon2	equ	0xFF1
  8372                           postinc0	equ	0xFEE
  8373                           fsr0h	equ	0xFEA
  8374                           fsr0l	equ	0xFE9
  8375                           wreg	equ	0xFE8
  8376                           fsr1h	equ	0xFE2
  8377                           fsr1l	equ	0xFE1
  8378                           indf2	equ	0xFDF
  8379                           postinc2	equ	0xFDE
  8380                           postdec2	equ	0xFDD
  8381                           plusw2	equ	0xFDB
  8382                           fsr2h	equ	0xFDA
  8383                           fsr2l	equ	0xFD9
  8384                           status	equ	0xFD8
  8385                           
  8386 ;; *************** function _TMR0_CallBack *****************
  8387 ;; Defined at:
  8388 ;;		line 119 in file "mcc_generated_files/tmr0.c"
  8389 ;; Parameters:    Size  Location     Type
  8390 ;;		None
  8391 ;; Auto vars:     Size  Location     Type
  8392 ;;		None
  8393 ;; Return value:  Size  Location     Type
  8394 ;;		None               void
  8395 ;; Registers used:
  8396 ;;		None
  8397 ;; Tracked objects:
  8398 ;;		On entry : 0/0
  8399 ;;		On exit  : 0/0
  8400 ;;		Unchanged: 0/0
  8401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8402 ;;      Params:         0       0       0       0       0       0       0
  8403 ;;      Locals:         0       0       0       0       0       0       0
  8404 ;;      Temps:          0       0       0       0       0       0       0
  8405 ;;      Totals:         0       0       0       0       0       0       0
  8406 ;;Total ram usage:        0 bytes
  8407 ;; Hardware stack levels used:    1
  8408 ;; This function calls:
  8409 ;;		Nothing
  8410 ;; This function is called by:
  8411 ;;		_TMR0_ISR
  8412 ;; This function uses a non-reentrant model
  8413 ;;
  8414                           
  8415                           	psect	text49
  8416  0021C4                     __ptext49:
  8417                           	opt stack 0
  8418  0021C4                     _TMR0_CallBack:
  8419                           	opt stack 22
  8420                           
  8421                           ; BSR set to: 0
  8422                           ;incstack = 0
  8423                           ;tmr0.c: 121: do { LATA3 = ~LATA3; } while(0);
  8424  0021C4  7689               	btg	3977,3,c	;volatile
  8425  0021C6  0012               	return	
  8426  0021C8  0012               	return		;funcret
  8427  0021CA                     __end_of_TMR0_CallBack:
  8428                           	opt stack 0
  8429                           tosu	equ	0xFFF
  8430                           tosh	equ	0xFFE
  8431                           tosl	equ	0xFFD
  8432                           pclatu	equ	0xFFB
  8433                           pclath	equ	0xFFA
  8434                           tblptru	equ	0xFF8
  8435                           tblptrh	equ	0xFF7
  8436                           tblptrl	equ	0xFF6
  8437                           tablat	equ	0xFF5
  8438                           prodh	equ	0xFF4
  8439                           prodl	equ	0xFF3
  8440                           intcon	equ	0xFF2
  8441                           intcon2	equ	0xFF1
  8442                           postinc0	equ	0xFEE
  8443                           fsr0h	equ	0xFEA
  8444                           fsr0l	equ	0xFE9
  8445                           wreg	equ	0xFE8
  8446                           fsr1h	equ	0xFE2
  8447                           fsr1l	equ	0xFE1
  8448                           indf2	equ	0xFDF
  8449                           postinc2	equ	0xFDE
  8450                           postdec2	equ	0xFDD
  8451                           plusw2	equ	0xFDB
  8452                           fsr2h	equ	0xFDA
  8453                           fsr2l	equ	0xFD9
  8454                           status	equ	0xFD8
  8455                           
  8456 ;; *************** function _ReadButtonState *****************
  8457 ;; Defined at:
  8458 ;;		line 45 in file "IO.c"
  8459 ;; Parameters:    Size  Location     Type
  8460 ;;  btnnum          2    0[COMRAM] int 
  8461 ;; Auto vars:     Size  Location     Type
  8462 ;;		None
  8463 ;; Return value:  Size  Location     Type
  8464 ;;		None               void
  8465 ;; Registers used:
  8466 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8467 ;; Tracked objects:
  8468 ;;		On entry : 0/0
  8469 ;;		On exit  : 0/0
  8470 ;;		Unchanged: 0/0
  8471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8472 ;;      Params:         2       0       0       0       0       0       0
  8473 ;;      Locals:         0       0       0       0       0       0       0
  8474 ;;      Temps:          2       0       0       0       0       0       0
  8475 ;;      Totals:         4       0       0       0       0       0       0
  8476 ;;Total ram usage:        4 bytes
  8477 ;; Hardware stack levels used:    1
  8478 ;; This function calls:
  8479 ;;		Nothing
  8480 ;; This function is called by:
  8481 ;;		_TMR0_ISR
  8482 ;; This function uses a non-reentrant model
  8483 ;;
  8484                           
  8485                           	psect	text50
  8486  001090                     __ptext50:
  8487                           	opt stack 0
  8488  001090                     _ReadButtonState:
  8489                           	opt stack 22
  8490                           
  8491                           ;IO.c: 47: switch (btnnum)
  8492                           
  8493                           ;incstack = 0
  8494  001090  D068               	goto	i2l3234
  8495  001092                     i2l3216:
  8496                           
  8497                           ;IO.c: 50: butnarray[btnnum] = PORTDbits.RD5;
  8498  001092  0E88               	movlw	low _butnarray
  8499  001094  2401               	addwf	ReadButtonState@btnnum,w,c
  8500  001096  6ED9               	movwf	fsr2l,c
  8501  001098  0E00               	movlw	high _butnarray
  8502  00109A  2002               	addwfc	ReadButtonState@btnnum+1,w,c
  8503  00109C  6EDA               	movwf	fsr2h,c
  8504  00109E  AA83               	btfss	3971,5,c	;volatile
  8505  0010A0  D002               	goto	i2u272_40
  8506  0010A2  0E01               	movlw	1
  8507  0010A4  D001               	goto	i2u272_46
  8508  0010A6                     i2u272_40:
  8509  0010A6  0E00               	movlw	0
  8510  0010A8                     i2u272_46:
  8511  0010A8  6EDF               	movwf	indf2,c
  8512                           
  8513                           ;IO.c: 51: break;
  8514  0010AA  0012               	return	
  8515  0010AC                     i2l3218:
  8516                           
  8517                           ;IO.c: 53: butnarray[btnnum] = PORTBbits.RB0;
  8518  0010AC  0E88               	movlw	low _butnarray
  8519  0010AE  2401               	addwf	ReadButtonState@btnnum,w,c
  8520  0010B0  6ED9               	movwf	fsr2l,c
  8521  0010B2  0E00               	movlw	high _butnarray
  8522  0010B4  2002               	addwfc	ReadButtonState@btnnum+1,w,c
  8523  0010B6  6EDA               	movwf	fsr2h,c
  8524  0010B8  A081               	btfss	3969,0,c	;volatile
  8525  0010BA  D002               	goto	i2u273_40
  8526  0010BC  0E01               	movlw	1
  8527  0010BE  D001               	goto	i2u273_46
  8528  0010C0                     i2u273_40:
  8529  0010C0  0E00               	movlw	0
  8530  0010C2                     i2u273_46:
  8531  0010C2  6EDF               	movwf	indf2,c
  8532                           
  8533                           ;IO.c: 54: break;
  8534  0010C4  0012               	return	
  8535  0010C6                     i2l3220:
  8536                           
  8537                           ;IO.c: 56: butnarray[btnnum] = PORTBbits.RB1;
  8538  0010C6  0E88               	movlw	low _butnarray
  8539  0010C8  2401               	addwf	ReadButtonState@btnnum,w,c
  8540  0010CA  6ED9               	movwf	fsr2l,c
  8541  0010CC  0E00               	movlw	high _butnarray
  8542  0010CE  2002               	addwfc	ReadButtonState@btnnum+1,w,c
  8543  0010D0  6EDA               	movwf	fsr2h,c
  8544  0010D2  A281               	btfss	3969,1,c	;volatile
  8545  0010D4  D002               	goto	i2u274_40
  8546  0010D6  0E01               	movlw	1
  8547  0010D8  D001               	goto	i2u274_46
  8548  0010DA                     i2u274_40:
  8549  0010DA  0E00               	movlw	0
  8550  0010DC                     i2u274_46:
  8551  0010DC  6EDF               	movwf	indf2,c
  8552                           
  8553                           ;IO.c: 57: break;
  8554  0010DE  0012               	return	
  8555  0010E0                     i2l3222:
  8556                           
  8557                           ;IO.c: 59: butnarray[btnnum] = PORTBbits.RB2;
  8558  0010E0  0E88               	movlw	low _butnarray
  8559  0010E2  2401               	addwf	ReadButtonState@btnnum,w,c
  8560  0010E4  6ED9               	movwf	fsr2l,c
  8561  0010E6  0E00               	movlw	high _butnarray
  8562  0010E8  2002               	addwfc	ReadButtonState@btnnum+1,w,c
  8563  0010EA  6EDA               	movwf	fsr2h,c
  8564  0010EC  A481               	btfss	3969,2,c	;volatile
  8565  0010EE  D002               	goto	i2u275_40
  8566  0010F0  0E01               	movlw	1
  8567  0010F2  D001               	goto	i2u275_46
  8568  0010F4                     i2u275_40:
  8569  0010F4  0E00               	movlw	0
  8570  0010F6                     i2u275_46:
  8571  0010F6  6EDF               	movwf	indf2,c
  8572                           
  8573                           ;IO.c: 60: break;
  8574  0010F8  0012               	return	
  8575  0010FA                     i2l3224:
  8576                           
  8577                           ;IO.c: 62: butnarray[btnnum] = PORTBbits.RB4;
  8578  0010FA  0E88               	movlw	low _butnarray
  8579  0010FC  2401               	addwf	ReadButtonState@btnnum,w,c
  8580  0010FE  6ED9               	movwf	fsr2l,c
  8581  001100  0E00               	movlw	high _butnarray
  8582  001102  2002               	addwfc	ReadButtonState@btnnum+1,w,c
  8583  001104  6EDA               	movwf	fsr2h,c
  8584  001106  A881               	btfss	3969,4,c	;volatile
  8585  001108  D002               	goto	i2u276_40
  8586  00110A  0E01               	movlw	1
  8587  00110C  D001               	goto	i2u276_46
  8588  00110E                     i2u276_40:
  8589  00110E  0E00               	movlw	0
  8590  001110                     i2u276_46:
  8591  001110  6EDF               	movwf	indf2,c
  8592                           
  8593                           ;IO.c: 63: break;
  8594  001112  0012               	return	
  8595  001114                     i2l3226:
  8596                           
  8597                           ;IO.c: 65: butnarray[btnnum] = PORTAbits.RA0;
  8598  001114  0E88               	movlw	low _butnarray
  8599  001116  2401               	addwf	ReadButtonState@btnnum,w,c
  8600  001118  6ED9               	movwf	fsr2l,c
  8601  00111A  0E00               	movlw	high _butnarray
  8602  00111C  2002               	addwfc	ReadButtonState@btnnum+1,w,c
  8603  00111E  6EDA               	movwf	fsr2h,c
  8604  001120  A080               	btfss	3968,0,c	;volatile
  8605  001122  D002               	goto	i2u277_40
  8606  001124  0E01               	movlw	1
  8607  001126  D001               	goto	i2u277_46
  8608  001128                     i2u277_40:
  8609  001128  0E00               	movlw	0
  8610  00112A                     i2u277_46:
  8611  00112A  6EDF               	movwf	indf2,c
  8612                           
  8613                           ;IO.c: 66: break;
  8614  00112C  0012               	return	
  8615  00112E                     i2l3228:
  8616                           
  8617                           ;IO.c: 68: butnarray[btnnum] = PORTAbits.RA1;
  8618  00112E  0E88               	movlw	low _butnarray
  8619  001130  2401               	addwf	ReadButtonState@btnnum,w,c
  8620  001132  6ED9               	movwf	fsr2l,c
  8621  001134  0E00               	movlw	high _butnarray
  8622  001136  2002               	addwfc	ReadButtonState@btnnum+1,w,c
  8623  001138  6EDA               	movwf	fsr2h,c
  8624  00113A  A280               	btfss	3968,1,c	;volatile
  8625  00113C  D002               	goto	i2u278_40
  8626  00113E  0E01               	movlw	1
  8627  001140  D001               	goto	i2u278_46
  8628  001142                     i2u278_40:
  8629  001142  0E00               	movlw	0
  8630  001144                     i2u278_46:
  8631  001144  6EDF               	movwf	indf2,c
  8632                           
  8633                           ;IO.c: 69: break;
  8634  001146  0012               	return	
  8635  001148                     i2l3230:
  8636                           
  8637                           ;IO.c: 71: butnarray[btnnum] = PORTAbits.RA2;
  8638  001148  0E88               	movlw	low _butnarray
  8639  00114A  2401               	addwf	ReadButtonState@btnnum,w,c
  8640  00114C  6ED9               	movwf	fsr2l,c
  8641  00114E  0E00               	movlw	high _butnarray
  8642  001150  2002               	addwfc	ReadButtonState@btnnum+1,w,c
  8643  001152  6EDA               	movwf	fsr2h,c
  8644  001154  A480               	btfss	3968,2,c	;volatile
  8645  001156  D002               	goto	i2u279_40
  8646  001158  0E01               	movlw	1
  8647  00115A  D001               	goto	i2u279_46
  8648  00115C                     i2u279_40:
  8649  00115C  0E00               	movlw	0
  8650  00115E                     i2u279_46:
  8651  00115E  6EDF               	movwf	indf2,c
  8652                           
  8653                           ;IO.c: 74: }
  8654                           
  8655                           ;IO.c: 72: break;
  8656  001160  0012               	return	
  8657  001162                     i2l3234:
  8658  001162  C001  F003         	movff	ReadButtonState@btnnum,??_ReadButtonState
  8659  001166  C002  F004         	movff	ReadButtonState@btnnum+1,??_ReadButtonState+1
  8660                           
  8661                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8662                           ; Switch size 1, requested type "space"
  8663                           ; Number of cases is 1, Range of values is 0 to 0
  8664                           ; switch strategies available:
  8665                           ; Name         Instructions Cycles
  8666                           ; simple_byte            4     3 (average)
  8667                           ;	Chosen strategy is simple_byte
  8668  00116A  5004               	movf	??_ReadButtonState+1,w,c
  8669  00116C  0A00               	xorlw	0	; case 0
  8670  00116E  A4D8               	btfss	status,2,c
  8671  001170  0012               	return	
  8672                           
  8673                           ; Switch size 1, requested type "space"
  8674                           ; Number of cases is 8, Range of values is 0 to 7
  8675                           ; switch strategies available:
  8676                           ; Name         Instructions Cycles
  8677                           ; simple_byte           25    13 (average)
  8678                           ;	Chosen strategy is simple_byte
  8679  001172  5003               	movf	??_ReadButtonState,w,c
  8680  001174  0A00               	xorlw	0	; case 0
  8681  001176  B4D8               	btfsc	status,2,c
  8682  001178  D78C               	goto	i2l3216
  8683  00117A  0A01               	xorlw	1	; case 1
  8684  00117C  B4D8               	btfsc	status,2,c
  8685  00117E  D796               	goto	i2l3218
  8686  001180  0A03               	xorlw	3	; case 2
  8687  001182  B4D8               	btfsc	status,2,c
  8688  001184  D7A0               	goto	i2l3220
  8689  001186  0A01               	xorlw	1	; case 3
  8690  001188  B4D8               	btfsc	status,2,c
  8691  00118A  D7AA               	goto	i2l3222
  8692  00118C  0A07               	xorlw	7	; case 4
  8693  00118E  B4D8               	btfsc	status,2,c
  8694  001190  D7B4               	goto	i2l3224
  8695  001192  0A01               	xorlw	1	; case 5
  8696  001194  B4D8               	btfsc	status,2,c
  8697  001196  D7BE               	goto	i2l3226
  8698  001198  0A03               	xorlw	3	; case 6
  8699  00119A  B4D8               	btfsc	status,2,c
  8700  00119C  D7C8               	goto	i2l3228
  8701  00119E  0A01               	xorlw	1	; case 7
  8702  0011A0  A4D8               	btfss	status,2,c
  8703  0011A2  0012               	return	
  8704  0011A4  D7D1               	goto	i2l3230
  8705  0011A6  0012               	return		;funcret
  8706  0011A8                     __end_of_ReadButtonState:
  8707                           	opt stack 0
  8708                           tosu	equ	0xFFF
  8709                           tosh	equ	0xFFE
  8710                           tosl	equ	0xFFD
  8711                           pclatu	equ	0xFFB
  8712                           pclath	equ	0xFFA
  8713                           tblptru	equ	0xFF8
  8714                           tblptrh	equ	0xFF7
  8715                           tblptrl	equ	0xFF6
  8716                           tablat	equ	0xFF5
  8717                           prodh	equ	0xFF4
  8718                           prodl	equ	0xFF3
  8719                           intcon	equ	0xFF2
  8720                           intcon2	equ	0xFF1
  8721                           postinc0	equ	0xFEE
  8722                           fsr0h	equ	0xFEA
  8723                           fsr0l	equ	0xFE9
  8724                           wreg	equ	0xFE8
  8725                           fsr1h	equ	0xFE2
  8726                           fsr1l	equ	0xFE1
  8727                           indf2	equ	0xFDF
  8728                           postinc2	equ	0xFDE
  8729                           postdec2	equ	0xFDD
  8730                           plusw2	equ	0xFDB
  8731                           fsr2h	equ	0xFDA
  8732                           fsr2l	equ	0xFD9
  8733                           status	equ	0xFD8
  8734                           
  8735 ;; *************** function _I2C1_ISR *****************
  8736 ;; Defined at:
  8737 ;;		line 186 in file "mcc_generated_files/i2c1.c"
  8738 ;; Parameters:    Size  Location     Type
  8739 ;;		None
  8740 ;; Auto vars:     Size  Location     Type
  8741 ;;		None
  8742 ;; Return value:  Size  Location     Type
  8743 ;;		None               void
  8744 ;; Registers used:
  8745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8746 ;; Tracked objects:
  8747 ;;		On entry : 0/0
  8748 ;;		On exit  : 0/0
  8749 ;;		Unchanged: 0/0
  8750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8751 ;;      Params:         0       0       0       0       0       0       0
  8752 ;;      Locals:         0       0       0       0       0       0       0
  8753 ;;      Temps:          2       0       0       0       0       0       0
  8754 ;;      Totals:         2       0       0       0       0       0       0
  8755 ;;Total ram usage:        2 bytes
  8756 ;; Hardware stack levels used:    1
  8757 ;; Hardware stack levels required when called:    1
  8758 ;; This function calls:
  8759 ;;		_I2C1_FunctionComplete
  8760 ;;		_I2C1_Stop
  8761 ;; This function is called by:
  8762 ;;		_INTERRUPT_InterruptManager
  8763 ;; This function uses a non-reentrant model
  8764 ;;
  8765                           
  8766                           	psect	text51
  8767  00079C                     __ptext51:
  8768                           	opt stack 0
  8769  00079C                     _I2C1_ISR:
  8770                           	opt stack 22
  8771                           
  8772                           ;i2c1.c: 189: static uint8_t *pi2c_buf_ptr;
  8773                           ;i2c1.c: 190: static uint16_t i2c_address = 0;
  8774                           ;i2c1.c: 191: static uint8_t i2c_bytes_left = 0;
  8775                           ;i2c1.c: 192: static uint8_t i2c_10bit_address_restart = 0;
  8776                           ;i2c1.c: 194: PIR1bits.SSP1IF = 0;
  8777                           
  8778                           ;incstack = 0
  8779  00079C  969E               	bcf	3998,3,c	;volatile
  8780                           
  8781                           ;i2c1.c: 198: if(SSP1CON1bits.WCOL)
  8782  00079E  AEC6               	btfss	4038,7,c	;volatile
  8783  0007A0  D128               	goto	i2l4870
  8784                           
  8785                           ;i2c1.c: 199: {
  8786                           ;i2c1.c: 201: SSP1CON1bits.WCOL = 0;
  8787  0007A2  9EC6               	bcf	4038,7,c	;volatile
  8788                           
  8789                           ;i2c1.c: 202: i2c1_state = S_MASTER_IDLE;
  8790  0007A4  0E00               	movlw	0
  8791  0007A6  6E37               	movwf	_i2c1_state,c
  8792                           
  8793                           ;i2c1.c: 203: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
  8794  0007A8  EE20 F003          	lfsr	2,3
  8795  0007AC  5029               	movf	_p_i2c1_current,w,c
  8796  0007AE  26D9               	addwf	fsr2l,f,c
  8797  0007B0  502A               	movf	_p_i2c1_current+1,w,c
  8798  0007B2  22DA               	addwfc	fsr2h,f,c
  8799  0007B4  CFDE F004          	movff	postinc2,??_I2C1_ISR
  8800  0007B8  CFDD F005          	movff	postdec2,??_I2C1_ISR+1
  8801  0007BC  C004  FFD9         	movff	??_I2C1_ISR,fsr2l
  8802  0007C0  C005  FFDA         	movff	??_I2C1_ISR+1,fsr2h
  8803  0007C4  0E01               	movlw	1
  8804  0007C6  6EDF               	movwf	indf2,c
  8805                           
  8806                           ;i2c1.c: 206: p_i2c1_current = (0);
  8807  0007C8  0E00               	movlw	0
  8808  0007CA  6E29               	movwf	_p_i2c1_current,c
  8809  0007CC  0E00               	movlw	0
  8810  0007CE  6E2A               	movwf	_p_i2c1_current+1,c
  8811                           
  8812                           ;i2c1.c: 208: return;
  8813  0007D0  0012               	return	
  8814                           
  8815                           ;i2c1.c: 209: }
  8816                           ;i2c1.c: 212: switch(i2c1_state)
  8817  0007D2  D10F               	goto	i2l4870
  8818  0007D4                     i2l60:
  8819                           
  8820                           ;i2c1.c: 216: if(i2c1_object.trStatus.s.empty != 1)
  8821  0007D4  0100               	movlb	0	; () banked
  8822  0007D6  B394               	btfsc	(_i2c1_object+4)& (0+255),1,b
  8823  0007D8  0012               	return	
  8824                           
  8825                           ; BSR set to: 0
  8826                           ;i2c1.c: 217: {
  8827                           ;i2c1.c: 219: p_i2c1_current = i2c1_object.pTrHead;
  8828  0007DA  C092  F029         	movff	_i2c1_object+2,_p_i2c1_current
  8829  0007DE  C093  F02A         	movff	_i2c1_object+3,_p_i2c1_current+1
  8830                           
  8831                           ; BSR set to: 0
  8832                           ;i2c1.c: 220: i2c1_trb_count = i2c1_object.pTrHead->count;
  8833  0007E2  C092  FFD9         	movff	_i2c1_object+2,fsr2l
  8834  0007E6  C093  FFDA         	movff	_i2c1_object+3,fsr2h
  8835  0007EA  50DF               	movf	indf2,w,c
  8836  0007EC  6E38               	movwf	_i2c1_trb_count,c
  8837                           
  8838                           ; BSR set to: 0
  8839                           ;i2c1.c: 221: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
  8840  0007EE  0100               	movlb	0	; () banked
  8841  0007F0  EE20 F001          	lfsr	2,1
  8842  0007F4  5192               	movf	(_i2c1_object+2)& (0+255),w,b
  8843  0007F6  26D9               	addwf	fsr2l,f,c
  8844  0007F8  5193               	movf	(_i2c1_object+3)& (0+255),w,b
  8845  0007FA  22DA               	addwfc	fsr2h,f,c
  8846  0007FC  CFDE F02B          	movff	postinc2,_p_i2c1_trb_current
  8847  000800  CFDD F02C          	movff	postdec2,_p_i2c1_trb_current+1
  8848                           
  8849                           ; BSR set to: 0
  8850                           ;i2c1.c: 223: i2c1_object.pTrHead++;
  8851  000804  0E05               	movlw	5
  8852  000806  0100               	movlb	0	; () banked
  8853  000808  2792               	addwf	(_i2c1_object+2)& (0+255),f,b
  8854  00080A  0E00               	movlw	0
  8855  00080C  2393               	addwfc	(_i2c1_object+3)& (0+255),f,b
  8856                           
  8857                           ; BSR set to: 0
  8858                           ;i2c1.c: 226: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
  8859  00080E  0EF3               	movlw	low (_i2c1_tr_queue+5)
  8860  000810  0100               	movlb	0	; () banked
  8861  000812  1992               	xorwf	(_i2c1_object+2)& (0+255),w,b
  8862  000814  E10C               	bnz	i2l4762
  8863  000816  0E00               	movlw	high (_i2c1_tr_queue+5)
  8864  000818  0100               	movlb	0	; () banked
  8865  00081A  1993               	xorwf	(_i2c1_object+3)& (0+255),w,b
  8866  00081C  A4D8               	btfss	status,2,c
  8867  00081E  D007               	goto	i2l4762
  8868                           
  8869                           ; BSR set to: 0
  8870                           ;i2c1.c: 227: {
  8871                           ;i2c1.c: 229: i2c1_object.pTrHead = i2c1_tr_queue;
  8872  000820  0EEE               	movlw	low _i2c1_tr_queue
  8873  000822  0100               	movlb	0	; () banked
  8874  000824  6F92               	movwf	(_i2c1_object+2)& (0+255),b
  8875  000826  0E00               	movlw	high _i2c1_tr_queue
  8876  000828  0100               	movlb	0	; () banked
  8877  00082A  6F93               	movwf	(_i2c1_object+3)& (0+255),b
  8878  00082C  D000               	goto	i2l4762
  8879  00082E                     i2l4762:
  8880                           
  8881                           ; BSR set to: 0
  8882                           ;i2c1.c: 230: }
  8883                           ;i2c1.c: 234: i2c1_object.trStatus.s.full = 0;
  8884  00082E  0100               	movlb	0	; () banked
  8885  000830  9194               	bcf	(_i2c1_object+4)& (0+255),0,b
  8886                           
  8887                           ;i2c1.c: 237: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
  8888  000832  0100               	movlb	0	; () banked
  8889  000834  5190               	movf	_i2c1_object& (0+255),w,b
  8890  000836  0100               	movlb	0	; () banked
  8891  000838  1992               	xorwf	(_i2c1_object+2)& (0+255),w,b
  8892  00083A  E108               	bnz	i2l63
  8893  00083C  0100               	movlb	0	; () banked
  8894  00083E  5191               	movf	(_i2c1_object+1)& (0+255),w,b
  8895  000840  0100               	movlb	0	; () banked
  8896  000842  1993               	xorwf	(_i2c1_object+3)& (0+255),w,b
  8897  000844  A4D8               	btfss	status,2,c
  8898  000846  D002               	goto	i2l63
  8899                           
  8900                           ; BSR set to: 0
  8901                           ;i2c1.c: 238: {
  8902                           ;i2c1.c: 240: i2c1_object.trStatus.s.empty = 1;
  8903  000848  0100               	movlb	0	; () banked
  8904  00084A  8394               	bsf	(_i2c1_object+4)& (0+255),1,b
  8905  00084C                     i2l63:
  8906                           
  8907                           ; BSR set to: 0
  8908                           ;i2c1.c: 241: }
  8909                           ;i2c1.c: 244: SSP1CON2bits.SEN = 1;
  8910  00084C  80C5               	bsf	4037,0,c	;volatile
  8911                           
  8912                           ; BSR set to: 0
  8913                           ;i2c1.c: 247: i2c1_state = S_MASTER_SEND_ADDR;
  8914  00084E  0E02               	movlw	2
  8915  000850  6E37               	movwf	_i2c1_state,c
  8916                           
  8917                           ; BSR set to: 0
  8918                           ;i2c1.c: 248: }
  8919                           ;i2c1.c: 250: break;
  8920  000852  0012               	return	
  8921  000854                     i2l65:
  8922                           
  8923                           ;i2c1.c: 257: SSP1CON2bits.RSEN = 1;
  8924  000854  82C5               	bsf	4037,1,c	;volatile
  8925                           
  8926                           ;i2c1.c: 260: i2c1_state = S_MASTER_SEND_ADDR;
  8927  000856  0E02               	movlw	2
  8928  000858  6E37               	movwf	_i2c1_state,c
  8929                           
  8930                           ;i2c1.c: 262: break;
  8931  00085A  0012               	return	
  8932  00085C                     i2l66:
  8933                           
  8934                           ;i2c1.c: 266: if(SSP1CON2bits.ACKSTAT)
  8935  00085C  ACC5               	btfss	4037,6,c	;volatile
  8936  00085E  D006               	goto	i2l4774
  8937                           
  8938                           ;i2c1.c: 267: {
  8939                           ;i2c1.c: 268: i2c1_object.i2cErrors++;
  8940  000860  0100               	movlb	0	; () banked
  8941  000862  2B96               	incf	(_i2c1_object+6)& (0+255),f,b
  8942                           
  8943                           ; BSR set to: 0
  8944                           ;i2c1.c: 269: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  8945  000864  0E04               	movlw	4
  8946  000866  ECEE  F00E         	call	_I2C1_Stop
  8947                           
  8948                           ;i2c1.c: 270: }
  8949  00086A  0012               	return	
  8950  00086C                     i2l4774:
  8951                           
  8952                           ;i2c1.c: 271: else
  8953                           ;i2c1.c: 272: {
  8954                           ;i2c1.c: 274: SSP1BUF = (i2c_address >> 1) & 0x00FF;
  8955  00086C  90D8               	bcf	status,0,c
  8956  00086E  3040               	rrcf	I2C1_ISR@i2c_address+1,w,c
  8957  000870  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
  8958  000872  303F               	rrcf	I2C1_ISR@i2c_address,w,c
  8959  000874  6E04               	movwf	??_I2C1_ISR& (0+255),c
  8960  000876  5004               	movf	??_I2C1_ISR,w,c
  8961  000878  6EC9               	movwf	4041,c	;volatile
  8962                           
  8963                           ;i2c1.c: 277: if(i2c_address & 0x01)
  8964  00087A  A03F               	btfss	I2C1_ISR@i2c_address,0,c
  8965  00087C  D003               	goto	i2l4780
  8966                           
  8967                           ;i2c1.c: 278: {
  8968                           ;i2c1.c: 281: i2c1_state = S_MASTER_10BIT_RESTART;
  8969  00087E  0E0B               	movlw	11
  8970  000880  6E37               	movwf	_i2c1_state,c
  8971                           
  8972                           ;i2c1.c: 282: }
  8973  000882  0012               	return	
  8974  000884                     i2l4780:
  8975                           
  8976                           ;i2c1.c: 283: else
  8977                           ;i2c1.c: 284: {
  8978                           ;i2c1.c: 286: i2c1_state = S_MASTER_SEND_DATA;
  8979  000884  0E03               	movlw	3
  8980  000886  6E37               	movwf	_i2c1_state,c
  8981                           
  8982                           ;i2c1.c: 287: }
  8983                           ;i2c1.c: 288: }
  8984                           ;i2c1.c: 290: break;
  8985  000888  0012               	return	
  8986  00088A                     i2l71:
  8987                           
  8988                           ;i2c1.c: 294: if(SSP1CON2bits.ACKSTAT)
  8989  00088A  ACC5               	btfss	4037,6,c	;volatile
  8990  00088C  D006               	goto	i2l72
  8991                           
  8992                           ;i2c1.c: 295: {
  8993                           ;i2c1.c: 296: i2c1_object.i2cErrors++;
  8994  00088E  0100               	movlb	0	; () banked
  8995  000890  2B96               	incf	(_i2c1_object+6)& (0+255),f,b
  8996                           
  8997                           ; BSR set to: 0
  8998                           ;i2c1.c: 297: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  8999  000892  0E04               	movlw	4
  9000  000894  ECEE  F00E         	call	_I2C1_Stop
  9001                           
  9002                           ;i2c1.c: 298: }
  9003  000898  0012               	return	
  9004  00089A                     i2l72:
  9005                           
  9006                           ;i2c1.c: 299: else
  9007                           ;i2c1.c: 300: {
  9008                           ;i2c1.c: 303: SSP1CON2bits.RSEN = 1;
  9009  00089A  82C5               	bsf	4037,1,c	;volatile
  9010                           
  9011                           ;i2c1.c: 307: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  9012  00089C  C03F  F004         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
  9013  0008A0  C040  F005         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
  9014  0008A4  C005  F004         	movff	??_I2C1_ISR+1,??_I2C1_ISR
  9015  0008A8  6A05               	clrf	??_I2C1_ISR+1,c
  9016  0008AA  0E06               	movlw	6
  9017  0008AC  1604               	andwf	??_I2C1_ISR,f,c
  9018  0008AE  0E00               	movlw	0
  9019  0008B0  1605               	andwf	??_I2C1_ISR+1,f,c
  9020  0008B2  0EF0               	movlw	240
  9021  0008B4  1004               	iorwf	??_I2C1_ISR,w,c
  9022  0008B6  6E3F               	movwf	I2C1_ISR@i2c_address,c
  9023  0008B8  5005               	movf	??_I2C1_ISR+1,w,c
  9024  0008BA  6E40               	movwf	I2C1_ISR@i2c_address+1,c
  9025                           
  9026                           ;i2c1.c: 310: i2c_address |= 0x0001;
  9027  0008BC  803F               	bsf	I2C1_ISR@i2c_address,0,c
  9028                           
  9029                           ;i2c1.c: 313: i2c_10bit_address_restart = 1;
  9030  0008BE  0E01               	movlw	1
  9031  0008C0  6E33               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
  9032                           
  9033                           ;i2c1.c: 316: i2c1_state = S_MASTER_SEND_ADDR;
  9034  0008C2  0E02               	movlw	2
  9035  0008C4  6E37               	movwf	_i2c1_state,c
  9036                           
  9037                           ;i2c1.c: 317: }
  9038                           ;i2c1.c: 319: break;
  9039  0008C6  0012               	return	
  9040  0008C8                     i2l4794:
  9041                           
  9042                           ;i2c1.c: 334: if(i2c_10bit_address_restart != 1)
  9043  0008C8  0433               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
  9044  0008CA  B4D8               	btfsc	status,2,c
  9045  0008CC  D030               	goto	i2l76
  9046                           
  9047                           ;i2c1.c: 335: {
  9048                           ;i2c1.c: 337: i2c_address = p_i2c1_trb_current->address;
  9049  0008CE  C02B  FFD9         	movff	_p_i2c1_trb_current,fsr2l
  9050  0008D2  C02C  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
  9051  0008D6  CFDE F03F          	movff	postinc2,I2C1_ISR@i2c_address
  9052  0008DA  CFDD F040          	movff	postdec2,I2C1_ISR@i2c_address+1
  9053                           
  9054                           ;i2c1.c: 338: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
  9055  0008DE  EE20 F003          	lfsr	2,3
  9056  0008E2  502B               	movf	_p_i2c1_trb_current,w,c
  9057  0008E4  26D9               	addwf	fsr2l,f,c
  9058  0008E6  502C               	movf	_p_i2c1_trb_current+1,w,c
  9059  0008E8  22DA               	addwfc	fsr2h,f,c
  9060  0008EA  CFDE F097          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
  9061  0008EE  CFDD F098          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
  9062                           
  9063                           ;i2c1.c: 339: i2c_bytes_left = p_i2c1_trb_current->length;
  9064  0008F2  EE20 F002          	lfsr	2,2
  9065  0008F6  502B               	movf	_p_i2c1_trb_current,w,c
  9066  0008F8  26D9               	addwf	fsr2l,f,c
  9067  0008FA  502C               	movf	_p_i2c1_trb_current+1,w,c
  9068  0008FC  22DA               	addwfc	fsr2h,f,c
  9069  0008FE  50DF               	movf	indf2,w,c
  9070  000900  6E34               	movwf	I2C1_ISR@i2c_bytes_left,c
  9071                           
  9072                           ;i2c1.c: 340: }
  9073                           ;i2c1.c: 343: if(!1 && (0x0 != i2c_address))
  9074  000902  D015               	goto	i2l76
  9075  000904  503F               	movf	I2C1_ISR@i2c_address,w,c
  9076  000906  1040               	iorwf	I2C1_ISR@i2c_address+1,w,c
  9077  000908  B4D8               	btfsc	status,2,c
  9078  00090A  D011               	goto	i2l76
  9079                           
  9080                           ;i2c1.c: 344: {
  9081                           ;i2c1.c: 345: if (0 == i2c_10bit_address_restart)
  9082  00090C  5033               	movf	I2C1_ISR@i2c_10bit_address_restart,w,c
  9083  00090E  A4D8               	btfss	status,2,c
  9084  000910  D007               	goto	i2l77
  9085                           
  9086                           ;i2c1.c: 346: {
  9087                           ;i2c1.c: 350: SSP1BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  9088  000912  5040               	movf	I2C1_ISR@i2c_address+1,w,c
  9089  000914  0B06               	andlw	6
  9090  000916  09F0               	iorlw	240
  9091  000918  6EC9               	movwf	4041,c	;volatile
  9092                           
  9093                           ;i2c1.c: 351: i2c1_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  9094  00091A  0E0A               	movlw	10
  9095  00091C  6E37               	movwf	_i2c1_state,c
  9096                           
  9097                           ;i2c1.c: 352: }
  9098  00091E  0012               	return	
  9099  000920                     i2l77:
  9100                           
  9101                           ;i2c1.c: 353: else
  9102                           ;i2c1.c: 354: {
  9103                           ;i2c1.c: 356: SSP1BUF = i2c_address;
  9104  000920  C03F  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
  9105                           
  9106                           ;i2c1.c: 357: i2c1_state = S_MASTER_ACK_ADDR;
  9107  000924  0E05               	movlw	5
  9108  000926  6E37               	movwf	_i2c1_state,c
  9109                           
  9110                           ;i2c1.c: 359: i2c_10bit_address_restart = 0;
  9111  000928  0E00               	movlw	0
  9112  00092A  6E33               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
  9113                           
  9114                           ;i2c1.c: 360: }
  9115                           ;i2c1.c: 361: }
  9116  00092C  0012               	return	
  9117  00092E                     i2l76:
  9118                           
  9119                           ;i2c1.c: 362: else
  9120                           ;i2c1.c: 363: {
  9121                           ;i2c1.c: 365: SSP1BUF = i2c_address;
  9122  00092E  C03F  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
  9123                           
  9124                           ;i2c1.c: 366: if(i2c_address & 0x01)
  9125  000932  A03F               	btfss	I2C1_ISR@i2c_address,0,c
  9126  000934  D003               	goto	i2l4814
  9127                           
  9128                           ;i2c1.c: 367: {
  9129                           ;i2c1.c: 369: i2c1_state = S_MASTER_ACK_ADDR;
  9130  000936  0E05               	movlw	5
  9131  000938  6E37               	movwf	_i2c1_state,c
  9132                           
  9133                           ;i2c1.c: 370: }
  9134  00093A  0012               	return	
  9135  00093C                     i2l4814:
  9136                           
  9137                           ;i2c1.c: 371: else
  9138                           ;i2c1.c: 372: {
  9139                           ;i2c1.c: 374: i2c1_state = S_MASTER_SEND_DATA;
  9140  00093C  0E03               	movlw	3
  9141  00093E  6E37               	movwf	_i2c1_state,c
  9142                           
  9143                           ;i2c1.c: 375: }
  9144                           ;i2c1.c: 376: }
  9145                           ;i2c1.c: 377: break;
  9146  000940  0012               	return	
  9147  000942                     i2l82:
  9148                           
  9149                           ;i2c1.c: 382: if(SSP1CON2bits.ACKSTAT)
  9150  000942  ACC5               	btfss	4037,6,c	;volatile
  9151  000944  D007               	goto	i2l4822
  9152                           
  9153                           ;i2c1.c: 383: {
  9154                           ;i2c1.c: 385: i2c1_object.i2cErrors++;
  9155  000946  0100               	movlb	0	; () banked
  9156  000948  2B96               	incf	(_i2c1_object+6)& (0+255),f,b
  9157                           
  9158                           ; BSR set to: 0
  9159                           ;i2c1.c: 388: SSP1CON2bits.ACKSTAT = 0;
  9160  00094A  9CC5               	bcf	4037,6,c	;volatile
  9161                           
  9162                           ; BSR set to: 0
  9163                           ;i2c1.c: 391: I2C1_Stop(I2C1_DATA_NO_ACK);
  9164  00094C  0E05               	movlw	5
  9165  00094E  ECEE  F00E         	call	_I2C1_Stop
  9166                           
  9167                           ;i2c1.c: 393: }
  9168  000952  0012               	return	
  9169  000954                     i2l4822:
  9170                           
  9171                           ;i2c1.c: 394: else
  9172                           ;i2c1.c: 395: {
  9173                           ;i2c1.c: 397: if(i2c_bytes_left-- == 0U)
  9174  000954  0634               	decf	I2C1_ISR@i2c_bytes_left,f,c
  9175  000956  2834               	incf	I2C1_ISR@i2c_bytes_left,w,c
  9176  000958  A4D8               	btfss	status,2,c
  9177  00095A  D00E               	goto	i2l4832
  9178                           
  9179                           ;i2c1.c: 398: {
  9180                           ;i2c1.c: 402: p_i2c1_trb_current++;
  9181  00095C  0E05               	movlw	5
  9182  00095E  262B               	addwf	_p_i2c1_trb_current,f,c
  9183  000960  0E00               	movlw	0
  9184  000962  222C               	addwfc	_p_i2c1_trb_current+1,f,c
  9185                           
  9186                           ;i2c1.c: 405: if(--i2c1_trb_count == 0)
  9187  000964  2E38               	decfsz	_i2c1_trb_count,f,c
  9188  000966  D004               	goto	i2l86
  9189                           
  9190                           ;i2c1.c: 406: {
  9191                           ;i2c1.c: 407: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  9192  000968  0E00               	movlw	0
  9193  00096A  ECEE  F00E         	call	_I2C1_Stop
  9194                           
  9195                           ;i2c1.c: 408: }
  9196  00096E  0012               	return	
  9197  000970                     i2l86:
  9198                           
  9199                           ;i2c1.c: 409: else
  9200                           ;i2c1.c: 410: {
  9201                           ;i2c1.c: 417: SSP1CON2bits.RSEN = 1;
  9202  000970  82C5               	bsf	4037,1,c	;volatile
  9203                           
  9204                           ;i2c1.c: 420: i2c1_state = S_MASTER_SEND_ADDR;
  9205  000972  0E02               	movlw	2
  9206  000974  6E37               	movwf	_i2c1_state,c
  9207                           
  9208                           ;i2c1.c: 422: }
  9209                           ;i2c1.c: 423: }
  9210  000976  0012               	return	
  9211  000978                     i2l4832:
  9212                           
  9213                           ;i2c1.c: 424: else
  9214                           ;i2c1.c: 425: {
  9215                           ;i2c1.c: 427: SSP1BUF = *pi2c_buf_ptr++;
  9216  000978  C097  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  9217  00097C  C098  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  9218  000980  50DF               	movf	indf2,w,c
  9219  000982  6EC9               	movwf	4041,c	;volatile
  9220  000984  0100               	movlb	0	; () banked
  9221  000986  4B97               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
  9222  000988  2B98               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
  9223                           
  9224                           ; BSR set to: 0
  9225                           ;i2c1.c: 428: }
  9226                           ;i2c1.c: 429: }
  9227                           ;i2c1.c: 430: break;
  9228                           
  9229                           ; BSR set to: 0
  9230  00098A  0012               	return	
  9231  00098C                     i2l89:
  9232                           
  9233                           ;i2c1.c: 435: if(SSP1CON2bits.ACKSTAT)
  9234  00098C  ACC5               	btfss	4037,6,c	;volatile
  9235  00098E  D007               	goto	i2l90
  9236                           
  9237                           ;i2c1.c: 436: {
  9238                           ;i2c1.c: 439: i2c1_object.i2cErrors++;
  9239  000990  0100               	movlb	0	; () banked
  9240  000992  2B96               	incf	(_i2c1_object+6)& (0+255),f,b
  9241                           
  9242                           ; BSR set to: 0
  9243                           ;i2c1.c: 442: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  9244  000994  0E04               	movlw	4
  9245  000996  ECEE  F00E         	call	_I2C1_Stop
  9246                           
  9247                           ;i2c1.c: 445: SSP1CON2bits.ACKSTAT = 0;
  9248  00099A  9CC5               	bcf	4037,6,c	;volatile
  9249                           
  9250                           ;i2c1.c: 446: }
  9251  00099C  0012               	return	
  9252  00099E                     i2l90:
  9253                           
  9254                           ;i2c1.c: 447: else
  9255                           ;i2c1.c: 448: {
  9256                           ;i2c1.c: 449: SSP1CON2bits.RCEN = 1;
  9257  00099E  86C5               	bsf	4037,3,c	;volatile
  9258                           
  9259                           ;i2c1.c: 450: i2c1_state = S_MASTER_ACK_RCV_DATA;
  9260  0009A0  0E08               	movlw	8
  9261  0009A2  6E37               	movwf	_i2c1_state,c
  9262                           
  9263                           ;i2c1.c: 451: }
  9264                           ;i2c1.c: 452: break;
  9265  0009A4  0012               	return	
  9266  0009A6                     i2l4844:
  9267                           
  9268                           ;i2c1.c: 459: i2c1_state = S_MASTER_ACK_RCV_DATA;
  9269  0009A6  0E08               	movlw	8
  9270  0009A8  6E37               	movwf	_i2c1_state,c
  9271                           
  9272                           ;i2c1.c: 462: SSP1CON2bits.RCEN = 1;
  9273  0009AA  86C5               	bsf	4037,3,c	;volatile
  9274                           
  9275                           ;i2c1.c: 464: break;
  9276  0009AC  0012               	return	
  9277  0009AE                     i2l4848:
  9278                           
  9279                           ;i2c1.c: 469: *pi2c_buf_ptr++ = SSP1BUF;
  9280  0009AE  C097  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  9281  0009B2  C098  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  9282  0009B6  CFC9 FFDF          	movff	4041,indf2	;volatile
  9283  0009BA  0100               	movlb	0	; () banked
  9284  0009BC  4B97               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
  9285  0009BE  2B98               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
  9286                           
  9287                           ; BSR set to: 0
  9288                           ;i2c1.c: 472: if(--i2c_bytes_left)
  9289  0009C0  0E01               	movlw	1
  9290  0009C2  5E34               	subwf	I2C1_ISR@i2c_bytes_left,f,c
  9291  0009C4  B4D8               	btfsc	status,2,c
  9292  0009C6  D004               	goto	i2l94
  9293                           
  9294                           ; BSR set to: 0
  9295                           ;i2c1.c: 473: {
  9296                           ;i2c1.c: 479: SSP1CON2bits.ACKDT = 0;
  9297  0009C8  9AC5               	bcf	4037,5,c	;volatile
  9298                           
  9299                           ; BSR set to: 0
  9300                           ;i2c1.c: 482: i2c1_state = S_MASTER_RCV_DATA;
  9301  0009CA  0E06               	movlw	6
  9302  0009CC  6E37               	movwf	_i2c1_state,c
  9303                           
  9304                           ;i2c1.c: 483: }
  9305  0009CE  D004               	goto	i2l4860
  9306  0009D0                     i2l94:
  9307                           
  9308                           ; BSR set to: 0
  9309                           ;i2c1.c: 484: else
  9310                           ;i2c1.c: 485: {
  9311                           ;i2c1.c: 489: SSP1CON2bits.ACKDT = 1;
  9312  0009D0  8AC5               	bsf	4037,5,c	;volatile
  9313                           
  9314                           ; BSR set to: 0
  9315                           ;i2c1.c: 491: I2C1_FunctionComplete();
  9316  0009D2  EC86  F010         	call	_I2C1_FunctionComplete	;wreg free
  9317  0009D6  D000               	goto	i2l4860
  9318  0009D8                     i2l4860:
  9319                           
  9320                           ;i2c1.c: 492: }
  9321                           ;i2c1.c: 495: SSP1CON2bits.ACKEN = 1;
  9322  0009D8  88C5               	bsf	4037,4,c	;volatile
  9323                           
  9324                           ;i2c1.c: 496: break;
  9325  0009DA  0012               	return	
  9326                           
  9327                           ;i2c1.c: 498: case S_MASTER_RCV_STOP:
  9328  0009DC  D000               	goto	i2l4862
  9329  0009DE                     i2l4862:
  9330                           
  9331                           ;i2c1.c: 499: case S_MASTER_SEND_STOP:
  9332                           ;i2c1.c: 502: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  9333  0009DE  0E00               	movlw	0
  9334  0009E0  ECEE  F00E         	call	_I2C1_Stop
  9335                           
  9336                           ;i2c1.c: 503: break;
  9337  0009E4  0012               	return	
  9338  0009E6                     i2l4864:
  9339                           
  9340                           ;i2c1.c: 509: i2c1_object.i2cErrors++;
  9341  0009E6  0100               	movlb	0	; () banked
  9342  0009E8  2B96               	incf	(_i2c1_object+6)& (0+255),f,b
  9343                           
  9344                           ; BSR set to: 0
  9345                           ;i2c1.c: 510: I2C1_Stop(I2C1_LOST_STATE);
  9346  0009EA  0E06               	movlw	6
  9347  0009EC  ECEE  F00E         	call	_I2C1_Stop
  9348                           
  9349                           ;i2c1.c: 513: }
  9350                           
  9351                           ;i2c1.c: 511: break;
  9352  0009F0  0012               	return	
  9353  0009F2                     i2l4870:
  9354  0009F2  5037               	movf	_i2c1_state,w,c
  9355                           
  9356                           ; Switch size 1, requested type "space"
  9357                           ; Number of cases is 11, Range of values is 0 to 11
  9358                           ; switch strategies available:
  9359                           ; Name         Instructions Cycles
  9360                           ; simple_byte           34    18 (average)
  9361                           ;	Chosen strategy is simple_byte
  9362  0009F4  0A00               	xorlw	0	; case 0
  9363  0009F6  B4D8               	btfsc	status,2,c
  9364  0009F8  D6ED               	goto	i2l60
  9365  0009FA  0A01               	xorlw	1	; case 1
  9366  0009FC  B4D8               	btfsc	status,2,c
  9367  0009FE  D72A               	goto	i2l65
  9368  000A00  0A03               	xorlw	3	; case 2
  9369  000A02  B4D8               	btfsc	status,2,c
  9370  000A04  D761               	goto	i2l4794
  9371  000A06  0A01               	xorlw	1	; case 3
  9372  000A08  B4D8               	btfsc	status,2,c
  9373  000A0A  D79B               	goto	i2l82
  9374  000A0C  0A07               	xorlw	7	; case 4
  9375  000A0E  B4D8               	btfsc	status,2,c
  9376  000A10  D7E6               	goto	i2l4862
  9377  000A12  0A01               	xorlw	1	; case 5
  9378  000A14  B4D8               	btfsc	status,2,c
  9379  000A16  D7BA               	goto	i2l89
  9380  000A18  0A03               	xorlw	3	; case 6
  9381  000A1A  B4D8               	btfsc	status,2,c
  9382  000A1C  D7C4               	goto	i2l4844
  9383  000A1E  0A01               	xorlw	1	; case 7
  9384  000A20  B4D8               	btfsc	status,2,c
  9385  000A22  D7DD               	goto	i2l4862
  9386  000A24  0A0F               	xorlw	15	; case 8
  9387  000A26  B4D8               	btfsc	status,2,c
  9388  000A28  D7C2               	goto	i2l4848
  9389  000A2A  0A02               	xorlw	2	; case 10
  9390  000A2C  B4D8               	btfsc	status,2,c
  9391  000A2E  D716               	goto	i2l66
  9392  000A30  0A01               	xorlw	1	; case 11
  9393  000A32  B4D8               	btfsc	status,2,c
  9394  000A34  D72A               	goto	i2l71
  9395  000A36  D7D7               	goto	i2l4864
  9396  000A38  0012               	return		;funcret
  9397  000A3A                     __end_of_I2C1_ISR:
  9398                           	opt stack 0
  9399                           tosu	equ	0xFFF
  9400                           tosh	equ	0xFFE
  9401                           tosl	equ	0xFFD
  9402                           pclatu	equ	0xFFB
  9403                           pclath	equ	0xFFA
  9404                           tblptru	equ	0xFF8
  9405                           tblptrh	equ	0xFF7
  9406                           tblptrl	equ	0xFF6
  9407                           tablat	equ	0xFF5
  9408                           prodh	equ	0xFF4
  9409                           prodl	equ	0xFF3
  9410                           intcon	equ	0xFF2
  9411                           intcon2	equ	0xFF1
  9412                           postinc0	equ	0xFEE
  9413                           fsr0h	equ	0xFEA
  9414                           fsr0l	equ	0xFE9
  9415                           wreg	equ	0xFE8
  9416                           fsr1h	equ	0xFE2
  9417                           fsr1l	equ	0xFE1
  9418                           indf2	equ	0xFDF
  9419                           postinc2	equ	0xFDE
  9420                           postdec2	equ	0xFDD
  9421                           plusw2	equ	0xFDB
  9422                           fsr2h	equ	0xFDA
  9423                           fsr2l	equ	0xFD9
  9424                           status	equ	0xFD8
  9425                           
  9426 ;; *************** function _I2C1_Stop *****************
  9427 ;; Defined at:
  9428 ;;		line 534 in file "mcc_generated_files/i2c1.c"
  9429 ;; Parameters:    Size  Location     Type
  9430 ;;  completion_c    1    wreg     enum E8836
  9431 ;; Auto vars:     Size  Location     Type
  9432 ;;  completion_c    1    2[COMRAM] enum E8836
  9433 ;; Return value:  Size  Location     Type
  9434 ;;		None               void
  9435 ;; Registers used:
  9436 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9437 ;; Tracked objects:
  9438 ;;		On entry : 0/0
  9439 ;;		On exit  : 0/0
  9440 ;;		Unchanged: 0/0
  9441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9442 ;;      Params:         0       0       0       0       0       0       0
  9443 ;;      Locals:         1       0       0       0       0       0       0
  9444 ;;      Temps:          2       0       0       0       0       0       0
  9445 ;;      Totals:         3       0       0       0       0       0       0
  9446 ;;Total ram usage:        3 bytes
  9447 ;; Hardware stack levels used:    1
  9448 ;; This function calls:
  9449 ;;		Nothing
  9450 ;; This function is called by:
  9451 ;;		_I2C1_ISR
  9452 ;; This function uses a non-reentrant model
  9453 ;;
  9454                           
  9455                           	psect	text52
  9456  001DDC                     __ptext52:
  9457                           	opt stack 0
  9458  001DDC                     _I2C1_Stop:
  9459                           	opt stack 22
  9460                           
  9461                           ;incstack = 0
  9462                           ;I2C1_Stop@completion_code stored from wreg
  9463  001DDC  6E03               	movwf	I2C1_Stop@completion_code,c
  9464                           
  9465                           ;i2c1.c: 537: SSP1CON2bits.PEN = 1;
  9466  001DDE  84C5               	bsf	4037,2,c	;volatile
  9467                           
  9468                           ;i2c1.c: 540: if (p_i2c1_current->pTrFlag != (0))
  9469  001DE0  EE20 F003          	lfsr	2,3
  9470  001DE4  5029               	movf	_p_i2c1_current,w,c
  9471  001DE6  26D9               	addwf	fsr2l,f,c
  9472  001DE8  502A               	movf	_p_i2c1_current+1,w,c
  9473  001DEA  22DA               	addwfc	fsr2h,f,c
  9474  001DEC  50DE               	movf	postinc2,w,c
  9475  001DEE  10DE               	iorwf	postinc2,w,c
  9476  001DF0  B4D8               	btfsc	status,2,c
  9477  001DF2  D011               	goto	i2l4428
  9478                           
  9479                           ;i2c1.c: 541: {
  9480                           ;i2c1.c: 543: *(p_i2c1_current->pTrFlag) = completion_code;
  9481  001DF4  EE20 F003          	lfsr	2,3
  9482  001DF8  5029               	movf	_p_i2c1_current,w,c
  9483  001DFA  26D9               	addwf	fsr2l,f,c
  9484  001DFC  502A               	movf	_p_i2c1_current+1,w,c
  9485  001DFE  22DA               	addwfc	fsr2h,f,c
  9486  001E00  CFDE F001          	movff	postinc2,??_I2C1_Stop
  9487  001E04  CFDD F002          	movff	postdec2,??_I2C1_Stop+1
  9488  001E08  C001  FFD9         	movff	??_I2C1_Stop,fsr2l
  9489  001E0C  C002  FFDA         	movff	??_I2C1_Stop+1,fsr2h
  9490  001E10  C003  FFDF         	movff	I2C1_Stop@completion_code,indf2
  9491  001E14  D000               	goto	i2l4428
  9492  001E16                     i2l4428:
  9493                           
  9494                           ;i2c1.c: 544: }
  9495                           ;i2c1.c: 547: i2c1_state = S_MASTER_IDLE;
  9496  001E16  0E00               	movlw	0
  9497  001E18  6E37               	movwf	_i2c1_state,c
  9498  001E1A  0012               	return		;funcret
  9499  001E1C                     __end_of_I2C1_Stop:
  9500                           	opt stack 0
  9501                           tosu	equ	0xFFF
  9502                           tosh	equ	0xFFE
  9503                           tosl	equ	0xFFD
  9504                           pclatu	equ	0xFFB
  9505                           pclath	equ	0xFFA
  9506                           tblptru	equ	0xFF8
  9507                           tblptrh	equ	0xFF7
  9508                           tblptrl	equ	0xFF6
  9509                           tablat	equ	0xFF5
  9510                           prodh	equ	0xFF4
  9511                           prodl	equ	0xFF3
  9512                           intcon	equ	0xFF2
  9513                           intcon2	equ	0xFF1
  9514                           postinc0	equ	0xFEE
  9515                           fsr0h	equ	0xFEA
  9516                           fsr0l	equ	0xFE9
  9517                           wreg	equ	0xFE8
  9518                           fsr1h	equ	0xFE2
  9519                           fsr1l	equ	0xFE1
  9520                           indf2	equ	0xFDF
  9521                           postinc2	equ	0xFDE
  9522                           postdec2	equ	0xFDD
  9523                           plusw2	equ	0xFDB
  9524                           fsr2h	equ	0xFDA
  9525                           fsr2l	equ	0xFD9
  9526                           status	equ	0xFD8
  9527                           
  9528 ;; *************** function _I2C1_FunctionComplete *****************
  9529 ;; Defined at:
  9530 ;;		line 516 in file "mcc_generated_files/i2c1.c"
  9531 ;; Parameters:    Size  Location     Type
  9532 ;;		None
  9533 ;; Auto vars:     Size  Location     Type
  9534 ;;		None
  9535 ;; Return value:  Size  Location     Type
  9536 ;;		None               void
  9537 ;; Registers used:
  9538 ;;		wreg, status,2, status,0
  9539 ;; Tracked objects:
  9540 ;;		On entry : 0/0
  9541 ;;		On exit  : 0/0
  9542 ;;		Unchanged: 0/0
  9543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9544 ;;      Params:         0       0       0       0       0       0       0
  9545 ;;      Locals:         0       0       0       0       0       0       0
  9546 ;;      Temps:          0       0       0       0       0       0       0
  9547 ;;      Totals:         0       0       0       0       0       0       0
  9548 ;;Total ram usage:        0 bytes
  9549 ;; Hardware stack levels used:    1
  9550 ;; This function calls:
  9551 ;;		Nothing
  9552 ;; This function is called by:
  9553 ;;		_I2C1_ISR
  9554 ;; This function uses a non-reentrant model
  9555 ;;
  9556                           
  9557                           	psect	text53
  9558  00210C                     __ptext53:
  9559                           	opt stack 0
  9560  00210C                     _I2C1_FunctionComplete:
  9561                           	opt stack 22
  9562                           
  9563                           ;i2c1.c: 520: p_i2c1_trb_current++;
  9564                           
  9565                           ;incstack = 0
  9566  00210C  0E05               	movlw	5
  9567  00210E  262B               	addwf	_p_i2c1_trb_current,f,c
  9568  002110  0E00               	movlw	0
  9569  002112  222C               	addwfc	_p_i2c1_trb_current+1,f,c
  9570                           
  9571                           ;i2c1.c: 523: if(--i2c1_trb_count == 0)
  9572  002114  2E38               	decfsz	_i2c1_trb_count,f,c
  9573  002116  D003               	goto	i2l4436
  9574                           
  9575                           ;i2c1.c: 524: {
  9576                           ;i2c1.c: 525: i2c1_state = S_MASTER_SEND_STOP;
  9577  002118  0E04               	movlw	4
  9578  00211A  6E37               	movwf	_i2c1_state,c
  9579                           
  9580                           ;i2c1.c: 526: }
  9581  00211C  0012               	return	
  9582  00211E                     i2l4436:
  9583                           
  9584                           ;i2c1.c: 527: else
  9585                           ;i2c1.c: 528: {
  9586                           ;i2c1.c: 529: i2c1_state = S_MASTER_RESTART;
  9587  00211E  0E01               	movlw	1
  9588  002120  6E37               	movwf	_i2c1_state,c
  9589  002122  0012               	return	
  9590  002124  0012               	return		;funcret
  9591  002126                     __end_of_I2C1_FunctionComplete:
  9592                           	opt stack 0
  9593                           tosu	equ	0xFFF
  9594                           tosh	equ	0xFFE
  9595                           tosl	equ	0xFFD
  9596                           pclatu	equ	0xFFB
  9597                           pclath	equ	0xFFA
  9598                           tblptru	equ	0xFF8
  9599                           tblptrh	equ	0xFF7
  9600                           tblptrl	equ	0xFF6
  9601                           tablat	equ	0xFF5
  9602                           prodh	equ	0xFF4
  9603                           prodl	equ	0xFF3
  9604                           intcon	equ	0xFF2
  9605                           intcon2	equ	0xFF1
  9606                           postinc0	equ	0xFEE
  9607                           fsr0h	equ	0xFEA
  9608                           fsr0l	equ	0xFE9
  9609                           wreg	equ	0xFE8
  9610                           fsr1h	equ	0xFE2
  9611                           fsr1l	equ	0xFE1
  9612                           indf2	equ	0xFDF
  9613                           postinc2	equ	0xFDE
  9614                           postdec2	equ	0xFDD
  9615                           plusw2	equ	0xFDB
  9616                           fsr2h	equ	0xFDA
  9617                           fsr2l	equ	0xFD9
  9618                           status	equ	0xFD8
  9619                           
  9620 ;; *************** function _I2C1_BusCollisionISR *****************
  9621 ;; Defined at:
  9622 ;;		line 681 in file "mcc_generated_files/i2c1.c"
  9623 ;; Parameters:    Size  Location     Type
  9624 ;;		None
  9625 ;; Auto vars:     Size  Location     Type
  9626 ;;		None
  9627 ;; Return value:  Size  Location     Type
  9628 ;;		None               void
  9629 ;; Registers used:
  9630 ;;		None
  9631 ;; Tracked objects:
  9632 ;;		On entry : 0/0
  9633 ;;		On exit  : 0/0
  9634 ;;		Unchanged: 0/0
  9635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9636 ;;      Params:         0       0       0       0       0       0       0
  9637 ;;      Locals:         0       0       0       0       0       0       0
  9638 ;;      Temps:          0       0       0       0       0       0       0
  9639 ;;      Totals:         0       0       0       0       0       0       0
  9640 ;;Total ram usage:        0 bytes
  9641 ;; Hardware stack levels used:    1
  9642 ;; This function calls:
  9643 ;;		Nothing
  9644 ;; This function is called by:
  9645 ;;		_INTERRUPT_InterruptManager
  9646 ;; This function uses a non-reentrant model
  9647 ;;
  9648                           
  9649                           	psect	text54
  9650  0021D2                     __ptext54:
  9651                           	opt stack 0
  9652  0021D2                     _I2C1_BusCollisionISR:
  9653                           	opt stack 23
  9654                           
  9655                           ;incstack = 0
  9656  0021D2  0012               	return		;funcret
  9657  0021D4                     __end_of_I2C1_BusCollisionISR:
  9658                           	opt stack 0
  9659                           tosu	equ	0xFFF
  9660                           tosh	equ	0xFFE
  9661                           tosl	equ	0xFFD
  9662                           pclatu	equ	0xFFB
  9663                           pclath	equ	0xFFA
  9664                           tblptru	equ	0xFF8
  9665                           tblptrh	equ	0xFF7
  9666                           tblptrl	equ	0xFF6
  9667                           tablat	equ	0xFF5
  9668                           prodh	equ	0xFF4
  9669                           prodl	equ	0xFF3
  9670                           intcon	equ	0xFF2
  9671                           intcon2	equ	0xFF1
  9672                           postinc0	equ	0xFEE
  9673                           fsr0h	equ	0xFEA
  9674                           fsr0l	equ	0xFE9
  9675                           wreg	equ	0xFE8
  9676                           fsr1h	equ	0xFE2
  9677                           fsr1l	equ	0xFE1
  9678                           indf2	equ	0xFDF
  9679                           postinc2	equ	0xFDE
  9680                           postdec2	equ	0xFDD
  9681                           plusw2	equ	0xFDB
  9682                           fsr2h	equ	0xFDA
  9683                           fsr2l	equ	0xFD9
  9684                           status	equ	0xFD8
  9685                           
  9686 ;; *************** function _EUSART1_Transmit_ISR *****************
  9687 ;; Defined at:
  9688 ;;		line 153 in file "UART.c"
  9689 ;; Parameters:    Size  Location     Type
  9690 ;;		None
  9691 ;; Auto vars:     Size  Location     Type
  9692 ;;		None
  9693 ;; Return value:  Size  Location     Type
  9694 ;;		None               void
  9695 ;; Registers used:
  9696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9697 ;; Tracked objects:
  9698 ;;		On entry : 0/0
  9699 ;;		On exit  : 0/0
  9700 ;;		Unchanged: 0/0
  9701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9702 ;;      Params:         0       0       0       0       0       0       0
  9703 ;;      Locals:         0       0       0       0       0       0       0
  9704 ;;      Temps:          0       0       0       0       0       0       0
  9705 ;;      Totals:         0       0       0       0       0       0       0
  9706 ;;Total ram usage:        0 bytes
  9707 ;; Hardware stack levels used:    1
  9708 ;; Hardware stack levels required when called:    2
  9709 ;; This function calls:
  9710 ;;		i2_UART_buff_get
  9711 ;;		i2_UART_buff_size
  9712 ;; This function is called by:
  9713 ;;		_INTERRUPT_InterruptManager
  9714 ;; This function uses a non-reentrant model
  9715 ;;
  9716                           
  9717                           	psect	text55
  9718  001EFE                     __ptext55:
  9719                           	opt stack 0
  9720  001EFE                     _EUSART1_Transmit_ISR:
  9721                           	opt stack 21
  9722                           
  9723                           ;UART.c: 155: if (UART_buff_size(&output_buffer) > 0) {
  9724                           
  9725                           ;incstack = 0
  9726  001EFE  0E00               	movlw	low _output_buffer
  9727  001F00  6E01               	movwf	i2UART_buff_size@_this,c
  9728  001F02  0E04               	movlw	high _output_buffer
  9729  001F04  6E02               	movwf	i2UART_buff_size@_this+1,c
  9730  001F06  ECB7  F010         	call	i2_UART_buff_size	;wreg free
  9731  001F0A  BE02               	btfsc	?i2_UART_buff_size+1,7,c
  9732  001F0C  D00D               	goto	i2l3728
  9733  001F0E  5002               	movf	?i2_UART_buff_size+1,w,c
  9734  001F10  E103               	bnz	i2u366_40
  9735  001F12  0401               	decf	?i2_UART_buff_size,w,c
  9736  001F14  A0D8               	btfss	status,0,c
  9737  001F16  D008               	goto	i2l3728
  9738  001F18                     i2u366_40:
  9739                           
  9740                           ;UART.c: 156: TXREG1 = UART_buff_get(&output_buffer);
  9741  001F18  0E00               	movlw	low _output_buffer
  9742  001F1A  6E07               	movwf	i2UART_buff_get@_this,c
  9743  001F1C  0E04               	movlw	high _output_buffer
  9744  001F1E  6E08               	movwf	i2UART_buff_get@_this+1,c
  9745  001F20  EC1F  F00C         	call	i2_UART_buff_get	;wreg free
  9746  001F24  6EAD               	movwf	4013,c	;volatile
  9747                           
  9748                           ;UART.c: 157: } else {
  9749  001F26  0012               	return	
  9750  001F28                     i2l3728:
  9751                           
  9752                           ;UART.c: 158: Transmit_stall = 1;
  9753  001F28  0E01               	movlw	1
  9754  001F2A  6E45               	movwf	_Transmit_stall,c
  9755                           
  9756                           ;UART.c: 159: PIE1bits.TX1IE = 0;
  9757  001F2C  989D               	bcf	3997,4,c	;volatile
  9758  001F2E  0012               	return	
  9759  001F30  0012               	return		;funcret
  9760  001F32                     __end_of_EUSART1_Transmit_ISR:
  9761                           	opt stack 0
  9762                           tosu	equ	0xFFF
  9763                           tosh	equ	0xFFE
  9764                           tosl	equ	0xFFD
  9765                           pclatu	equ	0xFFB
  9766                           pclath	equ	0xFFA
  9767                           tblptru	equ	0xFF8
  9768                           tblptrh	equ	0xFF7
  9769                           tblptrl	equ	0xFF6
  9770                           tablat	equ	0xFF5
  9771                           prodh	equ	0xFF4
  9772                           prodl	equ	0xFF3
  9773                           intcon	equ	0xFF2
  9774                           intcon2	equ	0xFF1
  9775                           postinc0	equ	0xFEE
  9776                           fsr0h	equ	0xFEA
  9777                           fsr0l	equ	0xFE9
  9778                           wreg	equ	0xFE8
  9779                           fsr1h	equ	0xFE2
  9780                           fsr1l	equ	0xFE1
  9781                           indf2	equ	0xFDF
  9782                           postinc2	equ	0xFDE
  9783                           postdec2	equ	0xFDD
  9784                           plusw2	equ	0xFDB
  9785                           fsr2h	equ	0xFDA
  9786                           fsr2l	equ	0xFD9
  9787                           status	equ	0xFD8
  9788                           
  9789 ;; *************** function i2_UART_buff_size *****************
  9790 ;; Defined at:
  9791 ;;		line 104 in file "UART.c"
  9792 ;; Parameters:    Size  Location     Type
  9793 ;;  _this           2    0[COMRAM] PTR struct UART_ring_buf
  9794 ;;		 -> output_buffer(206), input_buffer(206), 
  9795 ;; Auto vars:     Size  Location     Type
  9796 ;;		None
  9797 ;; Return value:  Size  Location     Type
  9798 ;;                  2    0[COMRAM] int 
  9799 ;; Registers used:
  9800 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9801 ;; Tracked objects:
  9802 ;;		On entry : 0/0
  9803 ;;		On exit  : 0/0
  9804 ;;		Unchanged: 0/0
  9805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9806 ;;      Params:         2       0       0       0       0       0       0
  9807 ;;      Locals:         0       0       0       0       0       0       0
  9808 ;;      Temps:          0       0       0       0       0       0       0
  9809 ;;      Totals:         2       0       0       0       0       0       0
  9810 ;;Total ram usage:        2 bytes
  9811 ;; Hardware stack levels used:    1
  9812 ;; This function calls:
  9813 ;;		Nothing
  9814 ;; This function is called by:
  9815 ;;		_EUSART1_Transmit_ISR
  9816 ;; This function uses a non-reentrant model
  9817 ;;
  9818                           
  9819                           	psect	text56
  9820  00216E                     __ptext56:
  9821                           	opt stack 0
  9822  00216E                     i2_UART_buff_size:
  9823                           	opt stack 22
  9824                           
  9825                           ;UART.c: 105: return (_this->count);
  9826                           
  9827                           ;incstack = 0
  9828  00216E  EE20 F0CC          	lfsr	2,204
  9829  002172  5001               	movf	i2UART_buff_size@_this,w,c
  9830  002174  26D9               	addwf	fsr2l,f,c
  9831  002176  5002               	movf	i2UART_buff_size@_this+1,w,c
  9832  002178  22DA               	addwfc	fsr2h,f,c
  9833  00217A  CFDE F001          	movff	postinc2,?i2_UART_buff_size
  9834  00217E  CFDD F002          	movff	postdec2,?i2_UART_buff_size+1
  9835  002182  0012               	return	
  9836  002184  0012               	return		;funcret
  9837  002186                     __end_ofi2_UART_buff_size:
  9838                           	opt stack 0
  9839                           tosu	equ	0xFFF
  9840                           tosh	equ	0xFFE
  9841                           tosl	equ	0xFFD
  9842                           pclatu	equ	0xFFB
  9843                           pclath	equ	0xFFA
  9844                           tblptru	equ	0xFF8
  9845                           tblptrh	equ	0xFF7
  9846                           tblptrl	equ	0xFF6
  9847                           tablat	equ	0xFF5
  9848                           prodh	equ	0xFF4
  9849                           prodl	equ	0xFF3
  9850                           intcon	equ	0xFF2
  9851                           intcon2	equ	0xFF1
  9852                           postinc0	equ	0xFEE
  9853                           fsr0h	equ	0xFEA
  9854                           fsr0l	equ	0xFE9
  9855                           wreg	equ	0xFE8
  9856                           fsr1h	equ	0xFE2
  9857                           fsr1l	equ	0xFE1
  9858                           indf2	equ	0xFDF
  9859                           postinc2	equ	0xFDE
  9860                           postdec2	equ	0xFDD
  9861                           plusw2	equ	0xFDB
  9862                           fsr2h	equ	0xFDA
  9863                           fsr2l	equ	0xFD9
  9864                           status	equ	0xFD8
  9865                           
  9866 ;; *************** function i2_UART_buff_get *****************
  9867 ;; Defined at:
  9868 ;;		line 83 in file "UART.c"
  9869 ;; Parameters:    Size  Location     Type
  9870 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
  9871 ;;		 -> output_buffer(206), input_buffer(206), 
  9872 ;; Auto vars:     Size  Location     Type
  9873 ;;  UART_buff_ge    1   10[COMRAM] unsigned char 
  9874 ;; Return value:  Size  Location     Type
  9875 ;;                  1    wreg      unsigned char 
  9876 ;; Registers used:
  9877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9878 ;; Tracked objects:
  9879 ;;		On entry : 0/0
  9880 ;;		On exit  : 0/0
  9881 ;;		Unchanged: 0/0
  9882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9883 ;;      Params:         2       0       0       0       0       0       0
  9884 ;;      Locals:         1       0       0       0       0       0       0
  9885 ;;      Temps:          2       0       0       0       0       0       0
  9886 ;;      Totals:         5       0       0       0       0       0       0
  9887 ;;Total ram usage:        5 bytes
  9888 ;; Hardware stack levels used:    1
  9889 ;; Hardware stack levels required when called:    1
  9890 ;; This function calls:
  9891 ;;		i2_UART_buff_modulo_inc
  9892 ;; This function is called by:
  9893 ;;		_EUSART1_Transmit_ISR
  9894 ;; This function uses a non-reentrant model
  9895 ;;
  9896                           
  9897                           	psect	text57
  9898  00183E                     __ptext57:
  9899                           	opt stack 0
  9900  00183E                     i2_UART_buff_get:
  9901                           	opt stack 21
  9902                           
  9903                           ;UART.c: 84: unsigned char c;
  9904                           ;UART.c: 85: if (_this->count > 0) {
  9905                           
  9906                           ;incstack = 0
  9907  00183E  EE20 F0CC          	lfsr	2,204
  9908  001842  5007               	movf	i2UART_buff_get@_this,w,c
  9909  001844  26D9               	addwf	fsr2l,f,c
  9910  001846  5008               	movf	i2UART_buff_get@_this+1,w,c
  9911  001848  22DA               	addwfc	fsr2h,f,c
  9912  00184A  0E01               	movlw	1
  9913  00184C  BEDB               	btfsc	plusw2,7,c
  9914  00184E  D03C               	goto	i2l3554
  9915  001850  0E01               	movlw	1
  9916  001852  50DB               	movf	plusw2,w,c
  9917  001854  E103               	bnz	i2u346_40
  9918  001856  04DE               	decf	postinc2,w,c
  9919  001858  A0D8               	btfss	status,0,c
  9920  00185A  D036               	goto	i2l3554
  9921  00185C                     i2u346_40:
  9922                           
  9923                           ;UART.c: 86: c = _this->buf[_this->tail];
  9924  00185C  EE20 F0CA          	lfsr	2,202
  9925  001860  5007               	movf	i2UART_buff_get@_this,w,c
  9926  001862  26D9               	addwf	fsr2l,f,c
  9927  001864  5008               	movf	i2UART_buff_get@_this+1,w,c
  9928  001866  22DA               	addwfc	fsr2h,f,c
  9929  001868  CFDE F009          	movff	postinc2,??i2_UART_buff_get
  9930  00186C  CFDD F00A          	movff	postdec2,??i2_UART_buff_get+1
  9931  001870  5009               	movf	??i2_UART_buff_get,w,c
  9932  001872  2407               	addwf	i2UART_buff_get@_this,w,c
  9933  001874  6ED9               	movwf	fsr2l,c
  9934  001876  500A               	movf	??i2_UART_buff_get+1,w,c
  9935  001878  2008               	addwfc	i2UART_buff_get@_this+1,w,c
  9936  00187A  6EDA               	movwf	fsr2h,c
  9937  00187C  50DF               	movf	indf2,w,c
  9938  00187E  6E0B               	movwf	i2UART_buff_get@c,c
  9939                           
  9940                           ;UART.c: 87: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  9941  001880  EE20 F0CA          	lfsr	2,202
  9942  001884  5007               	movf	i2UART_buff_get@_this,w,c
  9943  001886  26D9               	addwf	fsr2l,f,c
  9944  001888  5008               	movf	i2UART_buff_get@_this+1,w,c
  9945  00188A  22DA               	addwfc	fsr2h,f,c
  9946  00188C  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
  9947  001890  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
  9948  001894  0E00               	movlw	0
  9949  001896  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
  9950  001898  0EC8               	movlw	200
  9951  00189A  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
  9952  00189C  ECF6  F00F         	call	i2_UART_buff_modulo_inc	;wreg free
  9953  0018A0  EE20 F0CA          	lfsr	2,202
  9954  0018A4  5007               	movf	i2UART_buff_get@_this,w,c
  9955  0018A6  26D9               	addwf	fsr2l,f,c
  9956  0018A8  5008               	movf	i2UART_buff_get@_this+1,w,c
  9957  0018AA  22DA               	addwfc	fsr2h,f,c
  9958  0018AC  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
  9959  0018B0  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
  9960                           
  9961                           ;UART.c: 88: --_this->count;
  9962  0018B4  EE20 F0CC          	lfsr	2,204
  9963  0018B8  5007               	movf	i2UART_buff_get@_this,w,c
  9964  0018BA  26D9               	addwf	fsr2l,f,c
  9965  0018BC  5008               	movf	i2UART_buff_get@_this+1,w,c
  9966  0018BE  22DA               	addwfc	fsr2h,f,c
  9967  0018C0  06DE               	decf	postinc2,f,c
  9968  0018C2  0E00               	movlw	0
  9969  0018C4  5ADD               	subwfb	postdec2,f,c
  9970                           
  9971                           ;UART.c: 89: } else {
  9972  0018C6  D002               	goto	i2l853
  9973  0018C8                     i2l3554:
  9974                           
  9975                           ;UART.c: 90: c = 0;
  9976  0018C8  0E00               	movlw	0
  9977  0018CA  6E0B               	movwf	i2UART_buff_get@c,c
  9978  0018CC                     i2l853:
  9979                           
  9980                           ;UART.c: 91: }
  9981                           ;UART.c: 92: return (c);
  9982  0018CC  500B               	movf	i2UART_buff_get@c,w,c
  9983  0018CE  0012               	return	
  9984  0018D0  0012               	return		;funcret
  9985  0018D2                     __end_ofi2_UART_buff_get:
  9986                           	opt stack 0
  9987                           tosu	equ	0xFFF
  9988                           tosh	equ	0xFFE
  9989                           tosl	equ	0xFFD
  9990                           pclatu	equ	0xFFB
  9991                           pclath	equ	0xFFA
  9992                           tblptru	equ	0xFF8
  9993                           tblptrh	equ	0xFF7
  9994                           tblptrl	equ	0xFF6
  9995                           tablat	equ	0xFF5
  9996                           prodh	equ	0xFF4
  9997                           prodl	equ	0xFF3
  9998                           intcon	equ	0xFF2
  9999                           intcon2	equ	0xFF1
 10000                           postinc0	equ	0xFEE
 10001                           fsr0h	equ	0xFEA
 10002                           fsr0l	equ	0xFE9
 10003                           wreg	equ	0xFE8
 10004                           fsr1h	equ	0xFE2
 10005                           fsr1l	equ	0xFE1
 10006                           indf2	equ	0xFDF
 10007                           postinc2	equ	0xFDE
 10008                           postdec2	equ	0xFDD
 10009                           plusw2	equ	0xFDB
 10010                           fsr2h	equ	0xFDA
 10011                           fsr2l	equ	0xFD9
 10012                           status	equ	0xFD8
 10013                           
 10014 ;; *************** function _EUSART1_Receive_ISR *****************
 10015 ;; Defined at:
 10016 ;;		line 141 in file "UART.c"
 10017 ;; Parameters:    Size  Location     Type
 10018 ;;		None
 10019 ;; Auto vars:     Size  Location     Type
 10020 ;;  data            1   11[COMRAM] unsigned char 
 10021 ;; Return value:  Size  Location     Type
 10022 ;;		None               void
 10023 ;; Registers used:
 10024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10025 ;; Tracked objects:
 10026 ;;		On entry : 0/0
 10027 ;;		On exit  : 0/0
 10028 ;;		Unchanged: 0/0
 10029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10030 ;;      Params:         0       0       0       0       0       0       0
 10031 ;;      Locals:         1       0       0       0       0       0       0
 10032 ;;      Temps:          0       0       0       0       0       0       0
 10033 ;;      Totals:         1       0       0       0       0       0       0
 10034 ;;Total ram usage:        1 bytes
 10035 ;; Hardware stack levels used:    1
 10036 ;; Hardware stack levels required when called:    2
 10037 ;; This function calls:
 10038 ;;		i2_UART_buff_put
 10039 ;; This function is called by:
 10040 ;;		_INTERRUPT_InterruptManager
 10041 ;; This function uses a non-reentrant model
 10042 ;;
 10043                           
 10044                           	psect	text58
 10045  0020D2                     __ptext58:
 10046                           	opt stack 0
 10047  0020D2                     _EUSART1_Receive_ISR:
 10048                           	opt stack 21
 10049                           
 10050                           ;UART.c: 142: if(1 == RC1STAbits.OERR)
 10051                           
 10052                           ;incstack = 0
 10053  0020D2  A2AB               	btfss	4011,1,c	;volatile
 10054  0020D4  D002               	goto	i2l884
 10055                           
 10056                           ;UART.c: 143: {
 10057                           ;UART.c: 146: RC1STAbits.CREN = 0;
 10058  0020D6  98AB               	bcf	4011,4,c	;volatile
 10059                           
 10060                           ;UART.c: 147: RC1STAbits.CREN = 1;
 10061  0020D8  88AB               	bsf	4011,4,c	;volatile
 10062  0020DA                     i2l884:
 10063                           
 10064                           ;UART.c: 148: }
 10065                           ;UART.c: 149: unsigned char data = RCREG1;
 10066  0020DA  CFAE F00C          	movff	4014,EUSART1_Receive_ISR@data	;volatile
 10067                           
 10068                           ;UART.c: 150: UART_buff_put(&input_buffer, data);
 10069  0020DE  0E00               	movlw	low _input_buffer
 10070  0020E0  6E07               	movwf	i2UART_buff_put@_this,c
 10071  0020E2  0E03               	movlw	high _input_buffer
 10072  0020E4  6E08               	movwf	i2UART_buff_put@_this+1,c
 10073  0020E6  C00C  F009         	movff	EUSART1_Receive_ISR@data,i2UART_buff_put@c
 10074  0020EA  ECBA  F007         	call	i2_UART_buff_put	;wreg free
 10075  0020EE  0012               	return		;funcret
 10076  0020F0                     __end_of_EUSART1_Receive_ISR:
 10077                           	opt stack 0
 10078                           tosu	equ	0xFFF
 10079                           tosh	equ	0xFFE
 10080                           tosl	equ	0xFFD
 10081                           pclatu	equ	0xFFB
 10082                           pclath	equ	0xFFA
 10083                           tblptru	equ	0xFF8
 10084                           tblptrh	equ	0xFF7
 10085                           tblptrl	equ	0xFF6
 10086                           tablat	equ	0xFF5
 10087                           prodh	equ	0xFF4
 10088                           prodl	equ	0xFF3
 10089                           intcon	equ	0xFF2
 10090                           intcon2	equ	0xFF1
 10091                           postinc0	equ	0xFEE
 10092                           fsr0h	equ	0xFEA
 10093                           fsr0l	equ	0xFE9
 10094                           wreg	equ	0xFE8
 10095                           fsr1h	equ	0xFE2
 10096                           fsr1l	equ	0xFE1
 10097                           indf2	equ	0xFDF
 10098                           postinc2	equ	0xFDE
 10099                           postdec2	equ	0xFDD
 10100                           plusw2	equ	0xFDB
 10101                           fsr2h	equ	0xFDA
 10102                           fsr2l	equ	0xFD9
 10103                           status	equ	0xFD8
 10104                           
 10105 ;; *************** function i2_UART_buff_put *****************
 10106 ;; Defined at:
 10107 ;;		line 70 in file "UART.c"
 10108 ;; Parameters:    Size  Location     Type
 10109 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 10110 ;;		 -> output_buffer(206), input_buffer(206), 
 10111 ;;  c               1    8[COMRAM] const unsigned char 
 10112 ;; Auto vars:     Size  Location     Type
 10113 ;;		None
 10114 ;; Return value:  Size  Location     Type
 10115 ;;		None               void
 10116 ;; Registers used:
 10117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10118 ;; Tracked objects:
 10119 ;;		On entry : 0/0
 10120 ;;		On exit  : 0/0
 10121 ;;		Unchanged: 0/0
 10122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10123 ;;      Params:         3       0       0       0       0       0       0
 10124 ;;      Locals:         0       0       0       0       0       0       0
 10125 ;;      Temps:          2       0       0       0       0       0       0
 10126 ;;      Totals:         5       0       0       0       0       0       0
 10127 ;;Total ram usage:        5 bytes
 10128 ;; Hardware stack levels used:    1
 10129 ;; Hardware stack levels required when called:    1
 10130 ;; This function calls:
 10131 ;;		i2_UART_buff_modulo_inc
 10132 ;; This function is called by:
 10133 ;;		_EUSART1_Receive_ISR
 10134 ;; This function uses a non-reentrant model
 10135 ;;
 10136                           
 10137                           	psect	text59
 10138  000F74                     __ptext59:
 10139                           	opt stack 0
 10140  000F74                     i2_UART_buff_put:
 10141                           	opt stack 21
 10142                           
 10143                           ;UART.c: 71: if (_this->count < 200) {
 10144                           
 10145                           ;incstack = 0
 10146  000F74  EE20 F0CC          	lfsr	2,204
 10147  000F78  5007               	movf	i2UART_buff_put@_this,w,c
 10148  000F7A  26D9               	addwf	fsr2l,f,c
 10149  000F7C  5008               	movf	i2UART_buff_put@_this+1,w,c
 10150  000F7E  22DA               	addwfc	fsr2h,f,c
 10151  000F80  0E01               	movlw	1
 10152  000F82  BEDB               	btfsc	plusw2,7,c
 10153  000F84  D007               	goto	i2l3534
 10154  000F86  0E01               	movlw	1
 10155  000F88  50DB               	movf	plusw2,w,c
 10156  000F8A  E13A               	bnz	i2l3540
 10157  000F8C  0EC8               	movlw	200
 10158  000F8E  5CDE               	subwf	postinc2,w,c
 10159  000F90  B0D8               	btfsc	status,0,c
 10160  000F92  D036               	goto	i2l3540
 10161  000F94                     i2l3534:
 10162                           
 10163                           ;UART.c: 72: _this->buf[_this->head] = c;
 10164  000F94  EE20 F0C8          	lfsr	2,200
 10165  000F98  5007               	movf	i2UART_buff_put@_this,w,c
 10166  000F9A  26D9               	addwf	fsr2l,f,c
 10167  000F9C  5008               	movf	i2UART_buff_put@_this+1,w,c
 10168  000F9E  22DA               	addwfc	fsr2h,f,c
 10169  000FA0  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 10170  000FA4  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 10171  000FA8  500A               	movf	??i2_UART_buff_put,w,c
 10172  000FAA  2407               	addwf	i2UART_buff_put@_this,w,c
 10173  000FAC  6ED9               	movwf	fsr2l,c
 10174  000FAE  500B               	movf	??i2_UART_buff_put+1,w,c
 10175  000FB0  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 10176  000FB2  6EDA               	movwf	fsr2h,c
 10177  000FB4  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 10178                           
 10179                           ;UART.c: 73: _this->head = UART_buff_modulo_inc(_this->head, 200);
 10180  000FB8  EE20 F0C8          	lfsr	2,200
 10181  000FBC  5007               	movf	i2UART_buff_put@_this,w,c
 10182  000FBE  26D9               	addwf	fsr2l,f,c
 10183  000FC0  5008               	movf	i2UART_buff_put@_this+1,w,c
 10184  000FC2  22DA               	addwfc	fsr2h,f,c
 10185  000FC4  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 10186  000FC8  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 10187  000FCC  0E00               	movlw	0
 10188  000FCE  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 10189  000FD0  0EC8               	movlw	200
 10190  000FD2  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 10191  000FD4  ECF6  F00F         	call	i2_UART_buff_modulo_inc	;wreg free
 10192  000FD8  EE20 F0C8          	lfsr	2,200
 10193  000FDC  5007               	movf	i2UART_buff_put@_this,w,c
 10194  000FDE  26D9               	addwf	fsr2l,f,c
 10195  000FE0  5008               	movf	i2UART_buff_put@_this+1,w,c
 10196  000FE2  22DA               	addwfc	fsr2h,f,c
 10197  000FE4  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 10198  000FE8  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 10199                           
 10200                           ;UART.c: 74: ++_this->count;
 10201  000FEC  EE20 F0CC          	lfsr	2,204
 10202  000FF0  5007               	movf	i2UART_buff_put@_this,w,c
 10203  000FF2  26D9               	addwf	fsr2l,f,c
 10204  000FF4  5008               	movf	i2UART_buff_put@_this+1,w,c
 10205  000FF6  22DA               	addwfc	fsr2h,f,c
 10206  000FF8  2ADE               	incf	postinc2,f,c
 10207  000FFA  0E00               	movlw	0
 10208  000FFC  22DD               	addwfc	postdec2,f,c
 10209                           
 10210                           ;UART.c: 75: } else {
 10211  000FFE  0012               	return	
 10212  001000                     i2l3540:
 10213                           
 10214                           ;UART.c: 76: _this->buf[_this->head] = c;
 10215  001000  EE20 F0C8          	lfsr	2,200
 10216  001004  5007               	movf	i2UART_buff_put@_this,w,c
 10217  001006  26D9               	addwf	fsr2l,f,c
 10218  001008  5008               	movf	i2UART_buff_put@_this+1,w,c
 10219  00100A  22DA               	addwfc	fsr2h,f,c
 10220  00100C  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 10221  001010  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 10222  001014  500A               	movf	??i2_UART_buff_put,w,c
 10223  001016  2407               	addwf	i2UART_buff_put@_this,w,c
 10224  001018  6ED9               	movwf	fsr2l,c
 10225  00101A  500B               	movf	??i2_UART_buff_put+1,w,c
 10226  00101C  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 10227  00101E  6EDA               	movwf	fsr2h,c
 10228  001020  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 10229                           
 10230                           ;UART.c: 77: _this->head = UART_buff_modulo_inc(_this->head, 200);
 10231  001024  EE20 F0C8          	lfsr	2,200
 10232  001028  5007               	movf	i2UART_buff_put@_this,w,c
 10233  00102A  26D9               	addwf	fsr2l,f,c
 10234  00102C  5008               	movf	i2UART_buff_put@_this+1,w,c
 10235  00102E  22DA               	addwfc	fsr2h,f,c
 10236  001030  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 10237  001034  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 10238  001038  0E00               	movlw	0
 10239  00103A  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 10240  00103C  0EC8               	movlw	200
 10241  00103E  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 10242  001040  ECF6  F00F         	call	i2_UART_buff_modulo_inc	;wreg free
 10243  001044  EE20 F0C8          	lfsr	2,200
 10244  001048  5007               	movf	i2UART_buff_put@_this,w,c
 10245  00104A  26D9               	addwf	fsr2l,f,c
 10246  00104C  5008               	movf	i2UART_buff_put@_this+1,w,c
 10247  00104E  22DA               	addwfc	fsr2h,f,c
 10248  001050  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 10249  001054  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 10250                           
 10251                           ;UART.c: 78: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 10252  001058  EE20 F0CA          	lfsr	2,202
 10253  00105C  5007               	movf	i2UART_buff_put@_this,w,c
 10254  00105E  26D9               	addwf	fsr2l,f,c
 10255  001060  5008               	movf	i2UART_buff_put@_this+1,w,c
 10256  001062  22DA               	addwfc	fsr2h,f,c
 10257  001064  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 10258  001068  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 10259  00106C  0E00               	movlw	0
 10260  00106E  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 10261  001070  0EC8               	movlw	200
 10262  001072  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 10263  001074  ECF6  F00F         	call	i2_UART_buff_modulo_inc	;wreg free
 10264  001078  EE20 F0CA          	lfsr	2,202
 10265  00107C  5007               	movf	i2UART_buff_put@_this,w,c
 10266  00107E  26D9               	addwf	fsr2l,f,c
 10267  001080  5008               	movf	i2UART_buff_put@_this+1,w,c
 10268  001082  22DA               	addwfc	fsr2h,f,c
 10269  001084  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 10270  001088  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 10271  00108C  0012               	return	
 10272  00108E  0012               	return		;funcret
 10273  001090                     __end_ofi2_UART_buff_put:
 10274                           	opt stack 0
 10275                           tosu	equ	0xFFF
 10276                           tosh	equ	0xFFE
 10277                           tosl	equ	0xFFD
 10278                           pclatu	equ	0xFFB
 10279                           pclath	equ	0xFFA
 10280                           tblptru	equ	0xFF8
 10281                           tblptrh	equ	0xFF7
 10282                           tblptrl	equ	0xFF6
 10283                           tablat	equ	0xFF5
 10284                           prodh	equ	0xFF4
 10285                           prodl	equ	0xFF3
 10286                           intcon	equ	0xFF2
 10287                           intcon2	equ	0xFF1
 10288                           postinc0	equ	0xFEE
 10289                           fsr0h	equ	0xFEA
 10290                           fsr0l	equ	0xFE9
 10291                           wreg	equ	0xFE8
 10292                           fsr1h	equ	0xFE2
 10293                           fsr1l	equ	0xFE1
 10294                           indf2	equ	0xFDF
 10295                           postinc2	equ	0xFDE
 10296                           postdec2	equ	0xFDD
 10297                           plusw2	equ	0xFDB
 10298                           fsr2h	equ	0xFDA
 10299                           fsr2l	equ	0xFD9
 10300                           status	equ	0xFD8
 10301                           
 10302 ;; *************** function i2_UART_buff_modulo_inc *****************
 10303 ;; Defined at:
 10304 ;;		line 108 in file "UART.c"
 10305 ;; Parameters:    Size  Location     Type
 10306 ;;  value           2    0[COMRAM] const unsigned int 
 10307 ;;  modulus         2    2[COMRAM] const unsigned int 
 10308 ;; Auto vars:     Size  Location     Type
 10309 ;;  UART_buff_mo    2    4[COMRAM] unsigned int 
 10310 ;; Return value:  Size  Location     Type
 10311 ;;                  2    0[COMRAM] unsigned int 
 10312 ;; Registers used:
 10313 ;;		wreg, status,2, status,0
 10314 ;; Tracked objects:
 10315 ;;		On entry : 0/0
 10316 ;;		On exit  : 0/0
 10317 ;;		Unchanged: 0/0
 10318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10319 ;;      Params:         4       0       0       0       0       0       0
 10320 ;;      Locals:         2       0       0       0       0       0       0
 10321 ;;      Temps:          0       0       0       0       0       0       0
 10322 ;;      Totals:         6       0       0       0       0       0       0
 10323 ;;Total ram usage:        6 bytes
 10324 ;; Hardware stack levels used:    1
 10325 ;; This function calls:
 10326 ;;		Nothing
 10327 ;; This function is called by:
 10328 ;;		i2_UART_buff_put
 10329 ;;		i2_UART_buff_get
 10330 ;; This function uses a non-reentrant model
 10331 ;;
 10332                           
 10333                           	psect	text60
 10334  001FEC                     __ptext60:
 10335                           	opt stack 0
 10336  001FEC                     i2_UART_buff_modulo_inc:
 10337                           	opt stack 21
 10338                           
 10339                           ;UART.c: 109: unsigned int my_value = value + 1;
 10340                           
 10341                           ;incstack = 0
 10342  001FEC  0E01               	movlw	1
 10343  001FEE  2401               	addwf	i2UART_buff_modulo_inc@value,w,c
 10344  001FF0  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 10345  001FF2  0E00               	movlw	0
 10346  001FF4  2002               	addwfc	i2UART_buff_modulo_inc@value+1,w,c
 10347  001FF6  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 10348                           
 10349                           ;UART.c: 110: if (my_value >= modulus) {
 10350  001FF8  5003               	movf	i2UART_buff_modulo_inc@modulus,w,c
 10351  001FFA  5C05               	subwf	i2UART_buff_modulo_inc@my_value,w,c
 10352  001FFC  5004               	movf	i2UART_buff_modulo_inc@modulus+1,w,c
 10353  001FFE  5806               	subwfb	i2UART_buff_modulo_inc@my_value+1,w,c
 10354  002000  A0D8               	btfss	status,0,c
 10355  002002  D005               	goto	i2l3166
 10356                           
 10357                           ;UART.c: 111: my_value = 0;
 10358  002004  0E00               	movlw	0
 10359  002006  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 10360  002008  0E00               	movlw	0
 10361  00200A  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 10362  00200C  D000               	goto	i2l3166
 10363  00200E                     i2l3166:
 10364                           
 10365                           ;UART.c: 112: }
 10366                           ;UART.c: 113: return (my_value);
 10367  00200E  C005  F001         	movff	i2UART_buff_modulo_inc@my_value,?i2_UART_buff_modulo_inc
 10368  002012  C006  F002         	movff	i2UART_buff_modulo_inc@my_value+1,?i2_UART_buff_modulo_inc+1
 10369  002016  0012               	return	
 10370  002018  0012               	return		;funcret
 10371  00201A                     __end_ofi2_UART_buff_modulo_inc:
 10372                           	opt stack 0
 10373                           tosu	equ	0xFFF
 10374                           tosh	equ	0xFFE
 10375                           tosl	equ	0xFFD
 10376                           pclatu	equ	0xFFB
 10377                           pclath	equ	0xFFA
 10378                           tblptru	equ	0xFF8
 10379                           tblptrh	equ	0xFF7
 10380                           tblptrl	equ	0xFF6
 10381                           tablat	equ	0xFF5
 10382                           prodh	equ	0xFF4
 10383                           prodl	equ	0xFF3
 10384                           intcon	equ	0xFF2
 10385                           intcon2	equ	0xFF1
 10386                           postinc0	equ	0xFEE
 10387                           fsr0h	equ	0xFEA
 10388                           fsr0l	equ	0xFE9
 10389                           wreg	equ	0xFE8
 10390                           fsr1h	equ	0xFE2
 10391                           fsr1l	equ	0xFE1
 10392                           indf2	equ	0xFDF
 10393                           postinc2	equ	0xFDE
 10394                           postdec2	equ	0xFDD
 10395                           plusw2	equ	0xFDB
 10396                           fsr2h	equ	0xFDA
 10397                           fsr2l	equ	0xFD9
 10398                           status	equ	0xFD8
 10399                           
 10400 ;; *************** function _ADC_ISR *****************
 10401 ;; Defined at:
 10402 ;;		line 128 in file "mcc_generated_files/adc.c"
 10403 ;; Parameters:    Size  Location     Type
 10404 ;;		None
 10405 ;; Auto vars:     Size  Location     Type
 10406 ;;		None
 10407 ;; Return value:  Size  Location     Type
 10408 ;;		None               void
 10409 ;; Registers used:
 10410 ;;		None
 10411 ;; Tracked objects:
 10412 ;;		On entry : 0/0
 10413 ;;		On exit  : 0/0
 10414 ;;		Unchanged: 0/0
 10415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10416 ;;      Params:         0       0       0       0       0       0       0
 10417 ;;      Locals:         0       0       0       0       0       0       0
 10418 ;;      Temps:          0       0       0       0       0       0       0
 10419 ;;      Totals:         0       0       0       0       0       0       0
 10420 ;;Total ram usage:        0 bytes
 10421 ;; Hardware stack levels used:    1
 10422 ;; This function calls:
 10423 ;;		Nothing
 10424 ;; This function is called by:
 10425 ;;		_INTERRUPT_InterruptManager
 10426 ;; This function uses a non-reentrant model
 10427 ;;
 10428                           
 10429                           	psect	text61
 10430  0021CE                     __ptext61:
 10431                           	opt stack 0
 10432  0021CE                     _ADC_ISR:
 10433                           	opt stack 23
 10434                           
 10435                           ;adc.c: 131: PIR1bits.ADIF = 0;
 10436                           
 10437                           ;incstack = 0
 10438  0021CE  9C9E               	bcf	3998,6,c	;volatile
 10439  0021D0  0012               	return		;funcret
 10440  0021D2                     __end_of_ADC_ISR:
 10441                           	opt stack 0
 10442  0000                     tosu	equ	0xFFF
 10443                           tosh	equ	0xFFE
 10444                           tosl	equ	0xFFD
 10445                           pclatu	equ	0xFFB
 10446                           pclath	equ	0xFFA
 10447                           tblptru	equ	0xFF8
 10448                           tblptrh	equ	0xFF7
 10449                           tblptrl	equ	0xFF6
 10450                           tablat	equ	0xFF5
 10451                           prodh	equ	0xFF4
 10452                           prodl	equ	0xFF3
 10453                           intcon	equ	0xFF2
 10454                           intcon2	equ	0xFF1
 10455                           postinc0	equ	0xFEE
 10456                           fsr0h	equ	0xFEA
 10457                           fsr0l	equ	0xFE9
 10458                           wreg	equ	0xFE8
 10459                           fsr1h	equ	0xFE2
 10460                           fsr1l	equ	0xFE1
 10461                           indf2	equ	0xFDF
 10462                           postinc2	equ	0xFDE
 10463                           postdec2	equ	0xFDD
 10464                           plusw2	equ	0xFDB
 10465                           fsr2h	equ	0xFDA
 10466                           fsr2l	equ	0xFD9
 10467                           status	equ	0xFD8
 10468                           tosu	equ	0xFFF
 10469                           tosh	equ	0xFFE
 10470                           tosl	equ	0xFFD
 10471                           pclatu	equ	0xFFB
 10472                           pclath	equ	0xFFA
 10473                           tblptru	equ	0xFF8
 10474                           tblptrh	equ	0xFF7
 10475                           tblptrl	equ	0xFF6
 10476                           tablat	equ	0xFF5
 10477                           prodh	equ	0xFF4
 10478                           prodl	equ	0xFF3
 10479                           intcon	equ	0xFF2
 10480                           intcon2	equ	0xFF1
 10481                           postinc0	equ	0xFEE
 10482                           fsr0h	equ	0xFEA
 10483                           fsr0l	equ	0xFE9
 10484                           wreg	equ	0xFE8
 10485                           fsr1h	equ	0xFE2
 10486                           fsr1l	equ	0xFE1
 10487                           indf2	equ	0xFDF
 10488                           postinc2	equ	0xFDE
 10489                           postdec2	equ	0xFDD
 10490                           plusw2	equ	0xFDB
 10491                           fsr2h	equ	0xFDA
 10492                           fsr2l	equ	0xFD9
 10493                           status	equ	0xFD8
 10494                           
 10495                           	psect	text62
 10496  000000                     __ptext62:
 10497                           	opt stack 0
 10498                           tosu	equ	0xFFF
 10499                           tosh	equ	0xFFE
 10500                           tosl	equ	0xFFD
 10501                           pclatu	equ	0xFFB
 10502                           pclath	equ	0xFFA
 10503                           tblptru	equ	0xFF8
 10504                           tblptrh	equ	0xFF7
 10505                           tblptrl	equ	0xFF6
 10506                           tablat	equ	0xFF5
 10507                           prodh	equ	0xFF4
 10508                           prodl	equ	0xFF3
 10509                           intcon	equ	0xFF2
 10510                           intcon2	equ	0xFF1
 10511                           postinc0	equ	0xFEE
 10512                           fsr0h	equ	0xFEA
 10513                           fsr0l	equ	0xFE9
 10514                           wreg	equ	0xFE8
 10515                           fsr1h	equ	0xFE2
 10516                           fsr1l	equ	0xFE1
 10517                           indf2	equ	0xFDF
 10518                           postinc2	equ	0xFDE
 10519                           postdec2	equ	0xFDD
 10520                           plusw2	equ	0xFDB
 10521                           fsr2h	equ	0xFDA
 10522                           fsr2l	equ	0xFD9
 10523                           status	equ	0xFD8
 10524                           
 10525                           	psect	rparam
 10526  0000                     tosu	equ	0xFFF
 10527                           tosh	equ	0xFFE
 10528                           tosl	equ	0xFFD
 10529                           pclatu	equ	0xFFB
 10530                           pclath	equ	0xFFA
 10531                           tblptru	equ	0xFF8
 10532                           tblptrh	equ	0xFF7
 10533                           tblptrl	equ	0xFF6
 10534                           tablat	equ	0xFF5
 10535                           prodh	equ	0xFF4
 10536                           prodl	equ	0xFF3
 10537                           intcon	equ	0xFF2
 10538                           intcon2	equ	0xFF1
 10539                           postinc0	equ	0xFEE
 10540                           fsr0h	equ	0xFEA
 10541                           fsr0l	equ	0xFE9
 10542                           wreg	equ	0xFE8
 10543                           fsr1h	equ	0xFE2
 10544                           fsr1l	equ	0xFE1
 10545                           indf2	equ	0xFDF
 10546                           postinc2	equ	0xFDE
 10547                           postdec2	equ	0xFDD
 10548                           plusw2	equ	0xFDB
 10549                           fsr2h	equ	0xFDA
 10550                           fsr2l	equ	0xFD9
 10551                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         991
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     40      69
    BANK0           160     13     160
    BANK1           256     14     220
    BANK2           256      0     200
    BANK3           256      0     206
    BANK4           256      0     206
    BANK5           256      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> LEDwriteDisplay@writeBuffer(COMRAM[20]), LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_tr_queue.pTrFlag	PTR enum E8836 size(2) Largest target is 0
		 -> LEDwriteDisplay@status(COMRAM[1]), LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    memset@p1	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), ring_buffer(BANK1[206]), 

    memset@p	PTR unsigned char  size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), ring_buffer(BANK1[206]), 

    UART_buff_peek@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> input_buffer(BANK3[206]), 

    UART_buff_size@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    UART_buff_get@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    UART_buff_put@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    UART_buff_init@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    crcBufS_get@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK0[17]), 

    crcBufS_status_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK0[17]), 

    crcBufS_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK0[17]), 

    sp__memset	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), ring_buffer(BANK1[206]), 

    FastTransfer_buffer_flush@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK1[206]), 

    FastTransfer_buffer_put@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK1[206]), 

    CRC8@data	PTR const unsigned char  size(2) Largest target is 206
		 -> CRCcheck@arrayHolder(BANK0[3]), receiveData@holder_2178(BANK1[3]), receiveData@holder(BANK1[3]), rx_buffer(BANK2[200]), 
		 -> ring_buffer(BANK1[206]), NULL(NULL[0]), 

    sendStructAddress	PTR unsigned char  size(2) Largest target is 206
		 -> ring_buffer(BANK1[206]), NULL(NULL[0]), 

    begin@stufftoreceive	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_get(), 

    serial_read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_get(), 

    begin@stuffpeek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_peek(), 

    serial_peek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_peek(), 

    begin@stuffavailable	PTR FTN()int  size(2) Largest target is 2
		 -> Receive_available(), 

    serial_available	PTR FTN()int  size(2) Largest target is 2
		 -> Absolute function(), Receive_available(), 

    begin@stufftosend	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Send_put(), 

    serial_write	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), Send_put(), 

    begin@ptr	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK0[40]), 

    receiveArrayAddress	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK0[40]), NULL(NULL[0]), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(COMRAM[20]), LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(COMRAM[20]), LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(COMRAM[20]), LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(COMRAM[20]), LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E8836 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(COMRAM[1]), LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E8836 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(COMRAM[1]), LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    F8948.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(COMRAM[20]), LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWrite@pflag	PTR enum E8836 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(COMRAM[1]), LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(COMRAM[20]), LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    F8943.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(COMRAM[20]), LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 20
		 -> group(COMRAM[2]), LEDwriteDisplay@writeBuffer(COMRAM[20]), LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK0[2]), 
		 -> LEDblinkRate@b(COMRAM[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), LEDBsetBrightness@b(COMRAM[2]), I2C1_ISR@i2c_address(COMRAM[2]), 
		 -> NULL(NULL[0]), 

    S21$pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(COMRAM[20]), LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(COMRAM[20]), LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E8836 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(COMRAM[1]), LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    S33$pTrFlag	PTR enum E8836 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(COMRAM[1]), LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E8836 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(COMRAM[1]), LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    S33$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), NULL(NULL[0]), 

    S44$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    S44$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 


Critical Paths under _main in COMRAM

    _respondECU->_ToSend
    _sendData->_FastTransfer_buffer_flush
    _sendData->_Send_put
    _FastTransfer_buffer_flush->_memset
    _buttonsCollector->_GetButtonState
    _ToSend->_FastTransfer_buffer_put
    _FastTransfer_buffer_put->_FastTransfer_buffer_modulo_inc
    _receiveData->_Send_put
    _Send_put->_UART_buff_get
    _Send_put->_UART_buff_put
    _UART_buff_put->_UART_buff_modulo_inc
    _Receive_peek->_UART_buff_peek
    _CRCcheck->_crcBufS_get
    _Receive_get->_UART_buff_get
    _UART_buff_get->_UART_buff_modulo_inc
    _Receive_available->_UART_buff_size
    _handleIndicators->_SetLEDOut
    _begin->___awdiv
    _EUSART1_Initialize->_UART_buff_init
    _UART_buff_init->_memset
    _LEDbegin->_LEDBsetBrightness
    _LEDbegin->_LEDblinkRate
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _TMR0_ISR->_ReadButtonState
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Transmit_ISR->i2_UART_buff_get
    i2_UART_buff_get->i2_UART_buff_modulo_inc
    _EUSART1_Receive_ISR->i2_UART_buff_put
    i2_UART_buff_put->i2_UART_buff_modulo_inc

Critical Paths under _main in BANK0

    _updateComms->_receiveData
    _respondECU->_ToSend
    _ToSend->_buttonsCollector
    _receiveData->_CRCcheck
    _SYSTEM_Initialize->_begin
    _LEDbegin->_LEDBsetBrightness
    _LEDbegin->_LEDblinkRate
    _LEDblinkRate->_I2C1_MasterWrite
    _LEDBsetBrightness->_I2C1_MasterWrite

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _updateComms->_receiveData

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   31568
                                             12 BANK1      2     2      0
                           _LEDbegin
                  _SYSTEM_Initialize
                        _updateComms
 ---------------------------------------------------------------------------------
 (1) _updateComms                                          0     0      0   19375
                   _handleIndicators
                        _receiveData
                         _respondECU
 ---------------------------------------------------------------------------------
 (2) _respondECU                                           0     0      0    7986
                              _Delay
                             _ToSend
                   _buttonsCollector
                           _sendData
 ---------------------------------------------------------------------------------
 (3) _sendData                                             5     5      0    5704
                                             38 COMRAM     1     1      0
                                              0 BANK0      4     4      0
                   Absolute function *
                               _CRC8
          _FastTransfer_buffer_flush
                           _Send_put *
                        _crcBufS_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_put                                          7     2      5     742
                                             26 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_flush                            4     0      4    1139
                                             34 COMRAM     4     0      4
                             _memset
 ---------------------------------------------------------------------------------
 (3) _buttonsCollector                                     9     7      2     309
                                             32 COMRAM     5     3      2
                                              0 BANK0      4     4      0
                     _GetButtonState
 ---------------------------------------------------------------------------------
 (4) _GetButtonState                                       6     4      2     108
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _ToSend                                               3     1      2    1751
                                             39 COMRAM     1     1      0
                                              4 BANK0      2     0      2
            _FastTransfer_buffer_put
                   _buttonsCollector (ARG)
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_put                              7     2      5    1535
                                             32 COMRAM     7     2      5
     _FastTransfer_buffer_modulo_inc
 ---------------------------------------------------------------------------------
 (5) _FastTransfer_buffer_modulo_inc                       6     2      4     746
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay                                                5     3      2     222
                                             26 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _receiveData                                         18    18      0   10715
                                              7 BANK0      6     6      0
                                              0 BANK1     12    12      0
                   Absolute function *
                               _CRC8
                           _CRCcheck
                  _Receive_available *
                        _Receive_get *
                       _Receive_peek *
                           _Send_put *
 ---------------------------------------------------------------------------------
 (4) _Send_put                                             1     1      0    2614
                                             37 COMRAM     1     1      0
                      _UART_buff_get
                      _UART_buff_put
 ---------------------------------------------------------------------------------
 (5) _UART_buff_put                                        5     2      3    1418
                                             32 COMRAM     5     2      3
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (3) _Receive_peek                                         0     0      0     139
                     _UART_buff_peek
 ---------------------------------------------------------------------------------
 (4) _UART_buff_peek                                       4     2      2     139
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _CRCcheck                                             7     7      0    5114
                                              0 BANK0      7     7      0
                   Absolute function *
                               _CRC8
                  _Receive_available *
                        _Receive_get *
                        _crcBufS_get
                 _crcBufS_status_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_status_put                                  10     6      4     908
                                             26 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (4) _crcBufS_get                                         12     8      4    1404
                                             26 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (3) _Receive_get                                          0     0      0    1165
                      _UART_buff_get
 ---------------------------------------------------------------------------------
 (5) _UART_buff_get                                        5     3      2    1165
                                             32 COMRAM     5     3      2
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (6) _UART_buff_modulo_inc                                 6     2      4     746
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Receive_available                                    2     0      2     150
                                             28 COMRAM     2     0      2
                     _UART_buff_size
 ---------------------------------------------------------------------------------
 (4) _UART_buff_size                                       2     0      2     150
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _CRC8                                                 7     4      3    1014
                                             26 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _handleIndicators                                     7     5      2     674
                                             31 COMRAM     7     5      2
                          _SetLEDOut
 ---------------------------------------------------------------------------------
 (3) _SetLEDOut                                            5     2      3     371
                                             26 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2786
                     _ADC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                              _begin
 ---------------------------------------------------------------------------------
 (2) _begin                                               13     0     13    1771
                                              0 BANK0     13     0     13
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     907
                                             26 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0    1015
                     _UART_buff_init
 ---------------------------------------------------------------------------------
 (3) _UART_buff_init                                       2     0      2    1015
                                             34 COMRAM     2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6     830
                                             26 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDbegin                                             7     7      0    9404
                                              0 BANK1      7     7      0
                   _I2C1_MasterWrite
                  _LEDBsetBrightness
                       _LEDblinkRate
 ---------------------------------------------------------------------------------
 (2) _LEDblinkRate                                         8     5      3    3194
                                             35 COMRAM     3     0      3
                                              7 BANK0      5     5      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _LEDBsetBrightness                                    8     5      3    3194
                                             35 COMRAM     3     0      3
                                              7 BANK0      5     5      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterWrite                                     7     0      7    2683
                                              0 BANK0      7     0      7
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWriteTRBBuild                             9     2      7     494
                                             26 COMRAM     9     2      7
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterTRBInsert                                 6     2      4     494
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0    1570
                                             12 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             2     2      0     330
                                              4 COMRAM     2     2      0
                    _ReadButtonState
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR0_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ReadButtonState                                      4     2      2     262
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _I2C1_ISR                                             2     2      0      31
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (9) _I2C1_Stop                                            3     3      0      31
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0     528
                    i2_UART_buff_get
                   i2_UART_buff_size
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_size                                     2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_get                                      5     3      2     480
                                              6 COMRAM     5     3      2
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  1     1      0     681
                                             11 COMRAM     1     1      0
                    i2_UART_buff_put
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_put                                      5     2      3     658
                                              6 COMRAM     5     2      3
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (10) i2_UART_buff_modulo_inc                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LEDbegin
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
     _LEDBsetBrightness
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
     _LEDblinkRate
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _UART_buff_init
         _memset
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _begin
       ___awdiv
   _updateComms
     _handleIndicators
       _SetLEDOut
     _receiveData
       Absolute function(Fake) *
       _CRC8 *
       _CRCcheck *
         Absolute function(Fake) *
         _CRC8 *
         _Receive_available *
           _UART_buff_size
         _Receive_get *
           _UART_buff_get
             _UART_buff_modulo_inc
         _crcBufS_get *
         _crcBufS_status_put *
       _Receive_available *
         _UART_buff_size
       _Receive_get *
         _UART_buff_get
           _UART_buff_modulo_inc
       _Receive_peek *
         _UART_buff_peek
       _Send_put *
         _UART_buff_get
           _UART_buff_modulo_inc
         _UART_buff_put
           _UART_buff_modulo_inc
     _respondECU
       _Delay
       _ToSend
         _FastTransfer_buffer_put
           _FastTransfer_buffer_modulo_inc
         _buttonsCollector (ARG)
           _GetButtonState
       _buttonsCollector
         _GetButtonState
       _sendData
         Absolute function(Fake) *
         _CRC8 *
         _FastTransfer_buffer_flush *
           _memset
         _Send_put *
           _UART_buff_get
             _UART_buff_modulo_inc
           _UART_buff_put
             _UART_buff_modulo_inc
         _crcBufS_put *

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
     i2_UART_buff_put
       i2_UART_buff_modulo_inc
   _EUSART1_Transmit_ISR
     i2_UART_buff_get
       i2_UART_buff_modulo_inc
     i2_UART_buff_size
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR
     _ReadButtonState
     _TMR0_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      CE      13       80.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      CE      11       80.5%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      C8       8       78.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100      E      DC       6       85.9%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      D      A0       4      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     28      45       1       72.6%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     425       9        0.0%
DATA                 0      0     425      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Jun 02 19:27:41 2015

      __end_of_FastTransfer_buffer_flush 1BA2                   i2_UART_buff_modulo_inc 1FEC  
                           _rx_array_inx 003D                             ___awdiv@sign 0020  
               LEDBsetBrightness@timeOut 00FC                             __CFG_CP0$OFF 000000  
                           __CFG_CP1$OFF 000000                             __CFG_CP2$OFF 000000  
                           __CFG_CP3$OFF 000000                                      l405 1EE8  
                                    l542 18FA                                      l535 18EC  
                                    l527 18DE                                      l623 19E4  
                                    l618 1A5E                                      l563 1924  
                                    l556 1916                                      l549 1908  
                                    l808 0BA6                                      l853 1838  
                                    l694 1C94                             __CFG_CPB$OFF 000000  
                           __CFG_CPD$OFF 000000                          __end_of_ADC_ISR 21D2  
   FastTransfer_buffer_flush@clearBuffer 0025                                      prod 000FF3  
                                    tosl 000FFD                                      wreg 000FE8  
          i2UART_buff_modulo_inc@modulus 0003                             __CFG_LVP$OFF 000000  
                       __end_of_I2C1_ISR 0A3A                                     l4112 14BA  
                                   l4040 1FB2                                     l4200 1244  
                                   l4122 14FA                                     l4130 1C68  
                                   l4116 14DA                                     l4300 0D94  
                                   l4118 14E8                                     l4054 1FC8  
                                   l4062 0E78                                     l4302 0DB0  
                                   l4136 1C7E                                     l4144 1C9C  
                                   l4216 13FC                                     l4208 1376  
                                   l4320 0A68                                     l4048 1F84  
                                   l4312 0E2A                                     l4304 0DBC  
                                   l4058 1FDA                                     l4146 1CA6  
                                   l4082 1834                                     l4250 1ED4  
                                   l4306 0DEA                                     l4244 1D42  
                                   l4500 16E2                                     l4260 18F0  
                                   l4332 0B1C                                     l4068 0EE4  
                                   l4308 0DF2                                     l4510 1702  
                                   l4262 18FE                                     l4270 1928  
                                   l4342 0B72                                     l4350 0B9E  
                                   l4318 0A3C                                     l4166 0BD0  
                                   l4504 16F4                                     l4512 170A  
                                   l4264 190C                                     l4256 18D4  
                                   l4184 11B4                                     l4328 0B02  
                                   l4266 191A                                     l4258 18E2  
                                   l4346 0B94                                     l4532 1636  
                                   l4524 15F0                                     l4380 175C  
                                   l4372 173C                                     l4188 11C0  
                                   l4700 0788                                     l4620 0394  
                                   l4612 02F8                                     l4604 0298  
                                   l4284 199A                                     l4542 1656  
                                   l4526 161E                                     l4518 15D4  
                                   l4390 1782                                     l4382 1764  
                                   l4366 172A                                     l4630 0450  
                                   l4294 0D44                                     l4536 1648  
                                   l4544 165E                                     l4608 02CC  
                                   l4552 00F8                                     l4560 012C  
                                   l4296 0D5E                                     l4378 1752  
                                   l4394 178E                                     l4650 053E  
                                   l4626 0432                                     l4298 0D7A  
                                   l4492 169C                                     l4900 157A  
                                   l4732 1A24                                     l4652 0558  
                                   l4644 04F0                                     l4660 05F6  
                                   l4628 043A                                     l4708 0796  
                                   l4572 01D0                                     l4556 0126  
                                   l4494 16CA                                     l4486 1682  
                                   l4910 1598                                     l4398 179E  
                                   l4654 0572                                     l4646 050A  
                                   l4670 0604                                     l4590 023C  
                                   l4574 01E8                                     l4656 058C  
                                   l4648 0524                                     l4592 0266  
                                   l4576 01F0                                     l4584 022C  
                   receiveData@crcHolder 01D4                                     l4906 1588  
                                   l4690 06D0                                     l4658 05DA  
                                   l4908 1590                                     l4692 06EA  
                                   l4684 0682                                     l4694 0704  
                                   l4686 069C                                     l4918 1EB0  
                                   l4696 071E                                     l4688 06B6  
                                   l4890 1550                                     l4698 076C  
                                   l4962 2034                                     l4964 2038  
                                   l4966 203C                                     l4896 1568  
                                   l4888 1522                                     _CRC8 1C62  
                                   _LATA 000F89                                     _LATB 000F8A  
                                   _LATC 000F8B                                     _LATD 000F8C  
                                   _LATE 000F8D                                     u4220 17C8  
                                   u4310 1352                                     u5008 016C  
                                   u5009 0180                                     u5018 0186  
                                   u5019 019A                                     u4331 0BCE  
                                   u5108 026A                                     u5028 01A0  
                                   u4500 19E4                                     u5109 0280  
                                   u5029 01B4                                     u5400 1A00  
                                   u5128 029C                                     u5048 01D4  
                                   u5161 0338                                     u5129 02B0  
                                   u5218 04DA                                     u5138 02D0  
                                   u5139 02E4                                     u5228 04F4  
                                   u5430 1A5E                                     u5318 066C  
                                   u5238 050E                                     u4518 0D2E  
                                   u5424 1A42                                     u5328 0686  
                                   u5248 0528                                     u5088 0240  
                                   u4528 0D48                                     u5425 1A3C  
                                   u5089 0254                                     u4618 0A6C  
                                   u5338 06A0                                     u5258 0542  
                                   u4538 0D62                                     u4619 0A80  
                                   u4628 0A88                                     u5348 06BA  
                                   u5268 055C                                     u4548 0D7E  
                                   u4629 0A9C                                     u4638 0AA4  
                                   u5358 06D4                                     u5278 0576  
                                   u4494 19B8                                     u4558 0D98  
                                   u4639 0AB8                                     u6087 1EDA  
                                   u4495 19B2                                     u4648 0AC0  
                                   u5368 06EE                                     u5288 0590  
                                   u4568 0DC0                                     u4649 0AD4  
                                   u4850 15CA                                     u5378 0708  
                                   u5298 05DE                                     i2l60 07D4  
                                   u5388 0722                                     u4588 0E12  
                                   u4790 1678                                     u4598 0A40  
                                   u5398 0770                                     i2l71 088A  
                                   i2l63 084C                                     u4599 0A54  
                                   i2l72 089A                                     u4928 00D0  
                                   i2l65 0854                                     u4929 00E4  
                                   i2l90 099E                                     i2l82 0942  
                                   i2l66 085C                                     i2l76 092E  
                                   u4948 0102                                     i2l77 0920  
                                   u4949 0116                                     i2l94 09D0  
                                   i2l86 0970                                     u4968 0130  
                                   i2l89 098C                                     u4969 0144  
                                   u4988 014E                                     u4989 0162  
                                   _WPUB 000F61                                     _main 201A  
                        _TMR0_StartTimer 21CA                                     fsr0h 000FEA  
                                   fsr1h 000FE2                                     fsr0l 000FE9  
                                   fsr2h 000FDA                                     fsr1l 000FE1  
                                   indf2 000FDF                                     fsr2l 000FD9  
                 ??_I2C1_MasterTRBInsert 001F                            __CFG_BORV$190 000000  
                                   pclat 000FFA                                     prodh 000FF4  
                                   prodl 000FF3          __end_of_FastTransfer_buffer_put 0D12  
                                   start 00C2                            __CFG_IESO$OFF 000000  
                           ___param_bank 000010           I2C1_MasterWriteTRBBuild@length 001F  
         i2UART_buff_modulo_inc@my_value 0005                         _handleIndicators 19EE  
                                  ?_CRC8 001B                  __end_of_TMR0_Initialize 20B4  
                             _i2c1_state 0037                         __end_of_CRCcheck 0BA8  
         __size_of_OSCILLATOR_Initialize 000E                I2C1_MasterTRBInsert@count 0020  
          __end_of_OSCILLATOR_Initialize 21C4                I2C1_MasterTRBInsert@pflag 001D  
                       LEDbegin@i2c_addr 01D3                       crcBufS_put@address 001D  
                       __end_of_LEDbegin 15BA                                    ?_main 0001  
                        __end_of___awdiv 17AA                        __end_of_I2C1_Stop 1E1C  
                                  _T0CON 000FD5                          ___awdiv@divisor 001D  
                                  _LATA3 007C4B                                    _LATB3 007C53  
                                  _LATD1 007C61                                    _LATB5 007C55  
                                  _LATE1 007C69                                    _LATE2 007C6A  
                         __CFG_DEBUG$OFF 000000                                    i2l320 0064  
                                  i2l322 0070                                    i2l324 007C  
                                  i2l316 004C                                    i2l318 0058  
                                  i2l328 0088                                    i2l853 18CC  
                                  i2l884 20DA                          ___awdiv@counter 001F  
                                  _TMR0H 000FD7                                    _TMR0L 000FD6  
                                  _TRISA 000F92                                    _TRISB 000F93  
                                  _TRISC 000F94                                    _TRISD 000F95  
                                  _TRISE 000F96                                    _Delay 1ECA  
           __end_of_I2C1_BusCollisionISR 21D4                            __CFG_WRT0$OFF 000000  
                          __CFG_WRT1$OFF 000000                            __CFG_WRT2$OFF 000000  
                          __CFG_WRT3$OFF 000000                        ?_buttonsCollector 0021  
                   _EUSART1_Transmit_ISR 1EFE                           __CFG_EBTR0$OFF 000000  
                         __CFG_FCMEN$OFF 000000                           __CFG_EBTR1$OFF 000000  
                         __CFG_EBTR2$OFF 000000                           __CFG_EBTR3$OFF 000000  
                      ??_I2C1_Initialize 001B                         __end_of_TMR0_ISR 1C04  
                          __CFG_WRTB$OFF 000000                            __CFG_WRTC$OFF 000000  
                          __CFG_WRTD$OFF 000000                                    _begin 1C04  
                         __CFG_EBTRB$OFF 000000                       ??_buttonsCollector 0023  
                                  _group 0041                       __CFG_MCLRE$EXTMCLR 000000  
                                  pclath 000FFA                                    tablat 000FF5  
                          ??_Receive_get 0026                     __size_of_crcBufS_get 00E8  
                                  plusw2 000FDB                           begin@stuffpeek 00FE  
                   __size_of_crcBufS_put 00DA                                    status 000FD8  
                         __CFG_HFOFST$ON 000000                             ?_receiveData 0001  
                         SetLEDOut@state 001D                        ??_ReadButtonState 0003  
                         __CFG_PBADEN$ON 000000          I2C1_MasterWriteTRBBuild@address 0020  
                           __end_of_CRC8 1CB4                          CRCcheck@SentCRC 00F3  
                        __initialization 1ADA                    I2C1_MasterWrite@pdata 00F3  
                  I2C1_MasterWrite@pflag 00F8               __end_of_EUSART1_Initialize 1E94  
                           __end_of_main 2046                               ToSend@what 00F7  
                                 ??_CRC8 001E                            ?_LEDblinkRate 0024  
                              ??_ADC_ISR 0001              ?_INTERRUPT_InterruptManager 0001  
                            _i2c1_object 0090                                   ??_main 0029  
                          __activetblptr 000002                         __end_of_Send_put 1F62  
              __size_ofi2_UART_buff_size 0018                                   ?_Delay 001B  
                  ?_EUSART1_Transmit_ISR 0001            FastTransfer_buffer_put@towhat 0024  
                          ?_Receive_peek 0001                                   ?_begin 00F3  
                __end_of_TMR0_StartTimer 21CE                                   _ADCON0 000FC2  
                                 _ADCON1 000FC1                                   _ADCON2 000FC0  
                                 _ADRESH 000FC4                                   _ADRESL 000FC3  
                       ___awdiv@dividend 001B                                   _ANSELA 000F38  
                                 _ANSELB 000F39                                   _ANSELC 000F3A  
                                 _ANSELD 000F3B                                   _ANSELE 000F3C  
                        i2_UART_buff_get 183E                                   _RC1STA 000FAB  
                        i2_UART_buff_put 0F74                                   i2l3220 10C6  
                                 i2l3230 1148                                   i2l3222 10E0  
                                 i2l3224 10FA                                   i2l3216 1092  
                                 i2l3226 1114                                   i2l3218 10AC  
                                 i2l3234 1162                                   i2l3228 112E  
                                 i2l3166 200E                           __CFG_WDTEN$OFF 000000  
                                 i2l3540 1000                                   Delay@x 001E  
                                 i2l3534 0F94                                   i2l3702 1BB4  
                                 i2l3712 1BDC              UART_buff_modulo_inc@modulus 001D  
                                 i2l3554 18C8                                   i2l3706 1BC8  
                                 i2l4436 211E                                   i2l4428 1E16  
                                 i2l3728 1F28                                   i2l4822 0954  
                                 i2l4814 093C                                   i2l4832 0978  
                                 i2l4762 082E                                   i2l4860 09D8  
                                 i2l4844 09A6                                   i2l4780 0884  
                                 i2l4862 09DE                                   i2l4774 086C  
                                 i2l4870 09F2                                   i2l4864 09E6  
                                 i2l4848 09AE                                   i2l4794 08C8  
                         _GetButtonState 2046                                   _RCREG1 000FAE  
                                 _OSCCON 000FD3                                   _SPBRG1 000FAF  
                                 _TX1STA 000FAC                                   _TXREG1 000FAD  
                     __size_of_SetLEDOut 0090                        ?_I2C1_MasterWrite 00F3  
                         __CFG_XINST$OFF 000000                                   _ToSend 20F0  
                     ??_I2C1_MasterWrite 0024                      __end_of_Receive_get 21A6  
                       crcBufS_get@_this 001B              ??_FastTransfer_buffer_flush 0027  
                         _p_i2c1_current 0029                            _output_buffer 0400  
                       crcBufS_get@space 001E                                ??___awdiv 001F  
                              CRC8@tempI 0020                           __CFG_STVREN$ON 000000  
                         ??_LEDblinkRate 0027               ??_I2C1_MasterWriteTRBBuild 0022  
                       ?_TMR0_Initialize 0001                                   _memset 1FBE  
                              ?_I2C1_ISR 0001                                   clear_0 1AE0  
                                 clear_1 1AEC                                   clear_2 1AF8  
                                 clear_3 1B04                                   clear_4 1B10  
                                 clear_5 1B1C                         ___awdiv@quotient 0021  
                                 _rx_len 003E                         __end_of_sendData 0E58  
                           __pdataCOMRAM 0045                            Send_put@_data 0026  
                         ??_Receive_peek 001F                                   tblptrh 000FF7  
                                 tblptrl 000FF6                                   tblptru 000FF8  
       __size_of_FastTransfer_buffer_put 016A             __end_of_UART_buff_modulo_inc 1FBE  
                  __end_of_TMR0_CallBack 21CA                   __end_of_GetButtonState 2070  
          I2C1_MasterWriteTRBBuild@pdata 001D                       LEDblinkRate@status 00FE  
          __size_of_INTERRUPT_Initialize 0010                          SetLEDOut@lednum 001B  
                      _SYSTEM_Initialize 1A6A                               __accesstop 0060  
                __end_of__initialization 1B34                                ?_CRCcheck 0001  
                     ?_SYSTEM_Initialize 0001                                ?_LEDbegin 0001  
                          ___rparam_used 000001                  ?i2_UART_buff_modulo_inc 0001  
                         _i2c1_trb_count 0038                             ?_updateComms 0001  
                          __end_of_Delay 1EFE                    _I2C1_FunctionComplete 210C  
                   _I2C1_BusCollisionISR 21D2                           __pcstackCOMRAM 0001  
                 I2C1_MasterWrite@length 00F5                       _crcBufS_status_put 136A  
                    ??_SYSTEM_Initialize 0025                         crcBufS_put@_this 001B  
                          __end_of_begin 1C62                                ?_TMR0_ISR 0001  
 __end_of_FastTransfer_buffer_modulo_inc 1F90  __size_of_FastTransfer_buffer_modulo_inc 002E  
         _FastTransfer_buffer_modulo_inc 1F62                               ??_I2C1_ISR 0004  
           FastTransfer_buffer_put@_this 0021                              ToSend@where 0028  
                     UART_buff_get@_this 0021                      ?_crcBufS_status_put 001B  
                  __end_of_UART_buff_get 183E                   ??_EUSART1_Transmit_ISR 000C  
                  __end_of_UART_buff_put 0F74                        __end_of_SetLEDOut 1962  
                  TMR0_ISR@CountCallBack 0099                                  ??_Delay 001D  
                         LEDbegin@status 01D4                  __end_ofi2_UART_buff_get 18D2  
                __end_ofi2_UART_buff_put 1090              __end_of_EUSART1_Receive_ISR 20F0  
              _FastTransfer_buffer_flush 1B3E                                  CRC8@crc 0021  
                                CRC8@len 001D                                  CRC8@sum 001E  
                                ??_begin 0023                         ?_TMR0_StartTimer 0001  
                        ?_GetButtonState 001B                __end_of_SYSTEM_Initialize 1ADA  
               __end_of_handleIndicators 1A6A                   receiveData@holder_2178 01D1  
                    _addressErrorCounter 009B                               __pbssBANK0 0060  
                             __pbssBANK1 0100                               __pbssBANK2 0200  
                             __pbssBANK3 0300                               __pbssBANK4 0400  
                        __CFG_PLLCFG$OFF 000000                              _Receive_get 2196  
                             ??_CRCcheck 0027                     ??_crcBufS_status_put 001F  
         __end_ofi2_UART_buff_modulo_inc 201A                               __pnvCOMRAM 0043  
                      begin@givenAddress 00F6                  __size_of_UART_buff_init 001E  
                __size_of_UART_buff_peek 0026                               ??_LEDbegin 0027  
                __size_of_UART_buff_size 0018                                ?_Send_put 0001  
                  ?_I2C1_BusCollisionISR 0001                     __size_of_receiveData 06D6  
                                ?_ToSend 00F7                       __CFG_CCP2MX$PORTC1 000000  
                             ??_TMR0_ISR 0005                       __CFG_CCP3MX$PORTB5 000000  
    FastTransfer_buffer_modulo_inc@value 001B                          _I2C1_Initialize 1E1C  
                                _ADC_ISR 21CE                                  ?_memset 001B  
                             _crc_buffer 00D3                                TMR0_ISR@x 0005  
                __size_of_ADC_Initialize 0018                       UART_buff_put@_this 0021  
                       i2_UART_buff_size 216E              i2UART_buff_modulo_inc@value 0001  
                                _OSCCON2 000FD2                                _I2C1_Stop 1DDC  
                      _Receive_available 2126             UART_buff_modulo_inc@my_value 001F  
                      __CFG_PRICLKEN$OFF 000000                                  _OSCTUNE 000F9B  
                                _SPBRGH1 000FB0                                  _SSP1ADD 000FC8  
                    sendData@whereToSend 00F3                          _ReadButtonState 1090  
                    _receiveArrayAddress 00A3                                  _SSP1BUF 000FC9  
                     ?_Receive_available 001D                               begin@error 00F7  
                   __end_of_LEDblinkRate 1668            I2C1_MasterTRBInsert@ptrb_list 001B  
                    ??_Receive_available 001F                                ?_sendData 0001  
                      _alignErrorCounter 009D                          __CFG_PWRTEN$OFF 000000  
              __size_of_buttonsCollector 008C                   ?_I2C1_FunctionComplete 0001  
                             ??_Send_put 0026                                  __Hparam 0000  
          __size_of_I2C1_MasterTRBInsert 00C2                                  __Lparam 0000  
                        __size_of_ToSend 001C                       _p_i2c1_trb_current 002B  
                   __end_of_Receive_peek 2196                                _AKNAKsend 0035  
                                ___awdiv 1714                     _UART_buff_modulo_inc 1F90  
                                _calc_CS 0036                                  __pcinit 1ADA  
                        __size_of_memset 002E                                  __ramtop 0600  
                       i2UART_buff_get@c 000B                                  __ptext0 201A  
                                __ptext1 1E94                                  __ptext2 1D52  
                                __ptext3 0D12                                  __ptext4 1290  
                                __ptext5 1B3E                                  __ptext6 1962  
                                __ptext7 2046                                  __ptext8 20F0  
                                __ptext9 0BA8                                _T0CONbits 000FD5  
                       i2UART_buff_put@c 0009                    _OSCILLATOR_Initialize 21B6  
              __end_of_Receive_available 213E                  _FastTransfer_buffer_put 0BA8  
                  CRCcheck@calculatedCRC 00F4                       _EUSART1_Initialize 1E58  
                       ?i2_UART_buff_get 0007                 ??_PIN_MANAGER_Initialize 001B  
                       ?i2_UART_buff_put 0007                               ?_I2C1_Stop 0001  
           crcBufS_status_put@wantedTime 0023                            ??_crcBufS_get 001F  
                          ??_crcBufS_put 0020               __size_of_SYSTEM_Initialize 0070  
                   I2C1_ISR@pi2c_buf_ptr 0097                     end_of_initialization 1B34  
                              Delay@wait 001B                      ?_EUSART1_Initialize 0001  
                                memset@c 001D                                  memset@n 001F  
                                memset@p 0021                            __Lmediumconst 0000  
                 ??_I2C1_BusCollisionISR 0001                               ??_sendData 0027  
                __end_of_I2C1_Initialize 1E58                    ?_UART_buff_modulo_inc 001B  
                   __size_of_updateComms 0036                                  postdec2 000FDD  
                                postinc0 000FEE                                  postinc2 000FDE  
                             _respondECU 1D52                    ReadButtonState@btnnum 0001  
                       begin@stufftosend 00F8                      CRCcheck@arrayHolder 00F5  
                   ??_EUSART1_Initialize 0025                      LEDblinkRate@timeOut 00FC  
                              _PORTAbits 000F80                                _PORTBbits 000F81  
                              _PORTDbits 000F83                  __end_of_ReadButtonState 11A8  
              __size_of_I2C1_MasterWrite 004E                   _dataAdressErrorCounter 00A1  
                      __size_of_I2C1_ISR 029E                               _rx_address 003C  
                              _TRISCbits 000F94                  LEDBsetBrightness@status 00FE  
      I2C1_ISR@i2c_10bit_address_restart 0033                      LEDbegin@writeBuffer 01CE  
                           begin@maxSize 00F5       __size_of_FastTransfer_buffer_flush 0064  
                  i2UART_buff_size@_this 0001                           _UART_buff_init 20B4  
                         _UART_buff_peek 2070                           _UART_buff_size 213E  
                    __end_of_crcBufS_get 1290                      __end_of_crcBufS_put 136A  
                I2C1_MasterWrite@address 00F6                        __size_of_CRCcheck 016E  
              LEDBsetBrightness@i2c_addr 0026                        __size_of_LEDbegin 00B4  
                          _moduleAddress 003A                     _timer0ReloadVal16bit 0043  
                             CRCcheck@rt 00F8                           __end_of_ToSend 210C  
           __end_of_INTERRUPT_Initialize 21B6                          _crcErrorCounter 009F  
                I2C1_MasterWrite@trBlock 00E9                        crcBufS_put@oldCRC 001E  
                          __pidataCOMRAM 21D4                        __size_of_TMR0_ISR 0062  
               I2C1_Stop@completion_code 0003                           _ADC_Initialize 2156  
              ??_FastTransfer_buffer_put 0026                   ?_OSCILLATOR_Initialize 0001  
                         __end_of_memset 1FEC                        crcBufS_put@status 001F  
                buttonsCollector@sendVal 00F3                             receiveData@r 01D8  
             __size_of_Receive_available 0018                             receiveData@u 01D6  
                       ??_GetButtonState 001D                        _LEDBsetBrightness 1668  
                    start_initialization 1ADA                    __size_of_LEDblinkRate 00AE  
                            ??_I2C1_Stop 0001                 __size_of_TMR0_Initialize 001E  
        __size_of_PIN_MANAGER_Initialize 0050                    crcBufS_get@wantedTime 0025  
                     ?_LEDBsetBrightness 0024                                _SetLEDOut 18D2  
      __size_of_I2C1_MasterWriteTRBBuild 0044                        ?_handleIndicators 0020  
              ?_I2C1_MasterWriteTRBBuild 001B                   __end_of_UART_buff_init 20D2  
                 __end_of_UART_buff_peek 2096                           UART_buff_get@c 0025  
                 __end_of_UART_buff_size 2156                             ?_Receive_get 0001  
                         UART_buff_put@c 0023                       ??_handleIndicators 0022  
                        LEDbegin@timeOut 01D1                      ??_LEDBsetBrightness 0027  
                  __size_of_Receive_peek 0010                         _buttonsCollector 1962  
               __end_ofi2_UART_buff_size 2186                         ?_I2C1_Initialize 0001  
                               ??_ToSend 0028                   ??_UART_buff_modulo_inc 001F  
                               CRC8@data 001B                          crcBufS_get@time 001D  
                      __size_of_Send_put 0030                              ?_respondECU 0001  
                 __size_of_TMR0_CallBack 0006                   __end_of_ADC_Initialize 216E  
                               ?_ADC_ISR 0001                                 ??_memset 0021  
                           _LEDblinkRate 15BA                        handleIndicators@i 0025  
              __end_of_LEDBsetBrightness 1714             I2C1_MasterWriteTRBBuild@ptrb 001B  
                       ?_ReadButtonState 0001                              __pbssCOMRAM 0029  
          __size_of_EUSART1_Transmit_ISR 0034                            __pcstackBANK0 00F3  
                          __pcstackBANK1 01CE                            _i2c1_tr_queue 00EE  
                           _Receive_peek 2186                               ?_SetLEDOut 001B  
                    UART_buff_init@_this 0023                              _crcBufS_get 11A8  
                    UART_buff_peek@_this 001B                              _crcBufS_put 1290  
                        ?_UART_buff_init 0023                          ?_UART_buff_peek 001B  
                        ?_UART_buff_size 001B                  ??_I2C1_FunctionComplete 0001  
           __size_of_EUSART1_Receive_ISR 001E                            ??_receiveData 00FA  
            __size_of_crcBufS_status_put 00DA                               sendData@CS 00F4  
               __size_of_TMR0_StartTimer 0004                   __size_of_UART_buff_get 0094  
                 __size_of_UART_buff_put 011C                   _PIN_MANAGER_Initialize 1CB4  
                      __size_of_sendData 0146                                __pintcode 0008  
                               ?___awdiv 001B                          ?_ADC_Initialize 0001  
                               _I2C1_ISR 079C             ??_INTERRUPT_InterruptManager 000D  
           LEDBsetBrightness@writeBuffer 00FA                     i2UART_buff_get@_this 0007  
                       _I2C1_MasterWrite 1D04                                 _BAUD1CON 000FB8  
           __end_of_I2C1_MasterTRBInsert 1506                        buttonsCollector@i 00F5  
                         __size_of_Delay 0034                                _butnarray 0088  
                         __size_of_begin 005E                            _TMR0_CallBack 21C4  
                    __size_of_respondECU 0046                     _INTERRUPT_Initialize 21A6  
                   GetButtonState@btnnum 001B                             _receiveArray 00AB  
                 I2C1_MasterRead@trBlock 00E4                        ??_TMR0_Initialize 001B  
                               _CRCcheck 0A3A                                 _LATCbits 000F8B  
                    UART_buff_size@_this 001B                                 _IPR1bits 000F9F  
                               _LEDbegin 1506                                 _IPR2bits 000FA2  
                               _PIE1bits 000F9D                                 _PIE2bits 000FA0  
                          LEDblinkRate@b 0024      __size_of_INTERRUPT_InterruptManager 00BA  
                               i2u272_40 10A6                                 i2u272_46 10A8  
                               i2u273_40 10C0                                 _PIR1bits 000F9E  
                               i2u273_46 10C2                                 i2u346_40 185C  
                               i2u274_40 10DA                                 i2u274_46 10DC  
                               i2u275_40 10F4                                 _PIR2bits 000FA1  
                               i2u275_46 10F6                                 i2u276_40 110E  
                               i2u364_40 1BF2                                 i2u276_46 1110  
                               i2u277_40 1128                                 i2u277_46 112A  
                               i2u366_40 1F18                                 i2u278_40 1142  
                               i2u278_46 1144                                 i2u279_40 115C  
                               i2u279_46 115E                      begin@stuffavailable 00FC  
                               _RCONbits 000FD0                         __CFG_WDTPS$32768 000000  
                    __end_of_receiveData 079C                                 _SSP1CON1 000FC6  
                               _SSP1CON3 000FCB                                 _TMR0_ISR 1BA2  
                              main@ADCNT 01DA                                 _SSP1STAT 000FC7  
         FastTransfer_buffer_flush@_this 0023                             _input_buffer 0300  
                              _rx_buffer 0200                         __size_of_ADC_ISR 0004  
                             _ADCON0bits 000FC2               __size_of_LEDBsetBrightness 00AC  
                   i2UART_buff_put@_this 0007                            _UART_buff_get 17AA  
                          _UART_buff_put 0E58                           ?_TMR0_CallBack 0001  
               ??i2_UART_buff_modulo_inc 0005                              ??_SetLEDOut 001E  
                            _INTCON2bits 000FF1                    ?_INTERRUPT_Initialize 0001  
                      _sendStructAddress 00A5                 __size_ofi2_UART_buff_get 0094  
               __size_ofi2_UART_buff_put 011C                            ??_updateComms 0029  
                   __size_of_Receive_get 0010                                 __Hrparam 0000  
                               _Send_put 1F32            __size_of_I2C1_BusCollisionISR 0002  
                               __Lrparam 0000                       __CFG_BOREN$SBORDIS 000000  
                 I2C1_ISR@i2c_bytes_left 0034                        __CFG_P2BMX$PORTD2 000000  
                LEDblinkRate@writeBuffer 00FA                  ??_OSCILLATOR_Initialize 001B  
                      ??_TMR0_StartTimer 001B                         __size_of___awdiv 0096  
            __size_of_EUSART1_Initialize 003C                      begin@stufftoreceive 00FA  
       __end_of_I2C1_MasterWriteTRBBuild 1DDC                           ?_UART_buff_get 0021  
                         ?_UART_buff_put 0021                              CRC8@extract 001F  
               __end_of_buttonsCollector 19EE                                sendData@i 00F5  
                    I2C1_ISR@i2c_address 003F                 crcBufS_status_put@status 001E  
                               __ptext10 1F62                                 __ptext11 1ECA  
                               __ptext20 2196                                 __ptext12 00C6  
                               __ptext21 17AA                                 __ptext13 1F32  
                               __ptext30 1714                                 __ptext22 1F90  
                               __ptext14 0E58                                 __ptext31 2096  
                               __ptext23 2126                                 __ptext15 2186  
                               __ptext40 2156                                 __ptext32 21CA  
                               __ptext24 213E                                 __ptext16 2070  
                               __ptext41 1506                                 __ptext33 1CB4  
                               __ptext25 1C62                                 __ptext17 0A3A  
                               __ptext50 1090                                 __ptext42 15BA  
                               __ptext34 21B6                                 __ptext26 19EE  
                               __ptext18 136A                                 __ptext51 079C  
                               __ptext43 1668                                 __ptext35 21A6  
                               __ptext27 18D2                                 __ptext19 11A8  
                               __ptext60 1FEC                                 __ptext52 1DDC  
                               __ptext44 1D04                                 __ptext36 1E1C  
                               __ptext28 1A6A                                 __ptext61 21CE  
                               __ptext53 210C                                 __ptext45 1D98  
                               __ptext37 1E58                                 __ptext29 1C04  
                               __ptext62 0000                                 __ptext54 21D2  
                               __ptext46 1444                                 __ptext38 20B4  
                               __ptext55 1EFE                                 __ptext39 1FBE  
                               __ptext56 216E                                 __ptext48 1BA2  
                               __ptext57 183E                                 __ptext49 21C4  
                               __ptext58 20D2                                 __ptext59 0F74  
                           _SSP1CON1bits 000FC6                             _SSP1CON2bits 000FC5  
                          __size_of_CRC8 0052                                 begin@ptr 00F3  
                EUSART1_Receive_ISR@data 000C                            _returnAddress 003B  
                          __size_of_main 002C                              _receiveData 00C6  
                         _Transmit_stall 0045                                 _sendData 0D12  
                   _I2C1_MasterTRBInsert 1444                        ?i2_UART_buff_size 0001  
                             _RC1STAbits 000FAB                     LEDblinkRate@i2c_addr 0026  
                           ??_respondECU 0029                       ??i2_UART_buff_size 0003  
              __size_of_handleIndicators 007C            handleIndicators@oldIndicators 00A9  
                           _serial_write 0031                      __end_of_updateComms 1ECA  
     __end_of_INTERRUPT_InterruptManager 00C2               _INTERRUPT_InterruptManager 0008  
                    _EUSART1_Receive_ISR 20D2                        receiveData@holder 01CE  
                     LEDBsetBrightness@b 0024                               _INTCONbits 000FF2  
                        ??_TMR0_CallBack 0001                UART_buff_modulo_inc@value 001B  
     handleIndicators@receivedIndicators 0020                         ??_UART_buff_init 0025  
                       ??_UART_buff_peek 001D                         ??_UART_buff_size 001D  
                 ??_INTERRUPT_Initialize 001B                                 memset@p1 001B  
                       _serial_available 002D          __size_ofi2_UART_buff_modulo_inc 002E  
                           ?_crcBufS_get 001B                             ?_crcBufS_put 001B  
                               intlevel2 0000                  crcBufS_status_put@_this 001B  
                     __end_of_respondECU 1D98                     ?_EUSART1_Receive_ISR 0001  
 FastTransfer_buffer_modulo_inc@my_value 001F           FastTransfer_buffer_put@towhere 0023  
                ?_PIN_MANAGER_Initialize 0001                 __end_of_I2C1_MasterWrite 1D52  
         __size_of_I2C1_FunctionComplete 001A            __end_of_I2C1_FunctionComplete 2126  
                  ?_I2C1_MasterTRBInsert 001B             __end_of_EUSART1_Transmit_ISR 1F32  
                            _ring_buffer 0100                         ??_ADC_Initialize 001B  
             ?_FastTransfer_buffer_flush 0023                        ??i2_UART_buff_get 0009  
                            _serial_peek 00A7                              _serial_read 002F  
                      ??i2_UART_buff_put 000A                 ?_FastTransfer_buffer_put 0021  
          __size_of_UART_buff_modulo_inc 002E                 __size_of_I2C1_Initialize 003C  
                        ??_UART_buff_get 0023                          ??_UART_buff_put 0024  
  FastTransfer_buffer_modulo_inc@modulus 001D                   crcBufS_status_put@time 001D  
                        _TMR0_Initialize 2096                receiveData@crcHolder_2179 01D5  
               _I2C1_MasterWriteTRBBuild 1D98                        __CFG_T3CMX$PORTC0 000000  
                         _maxDataAddress 0039                 __size_of_ReadButtonState 0118  
             __end_of_crcBufS_status_put 1444                    ??_EUSART1_Receive_ISR 000C  
         __end_of_PIN_MANAGER_Initialize 1D04         ??_FastTransfer_buffer_modulo_inc 001F  
        ?_FastTransfer_buffer_modulo_inc 001B                  __size_of_GetButtonState 002A  
                     __size_of_I2C1_Stop 0040                            _displaybuffer 0060  
                      __CFG_FOSC$INTIO67 000000                              _updateComms 1E94  
