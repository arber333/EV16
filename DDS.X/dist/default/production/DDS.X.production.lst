

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Fri Mar 25 14:47:18 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   101                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   102  0000                     
   103                           	psect	idataCOMRAM
   104  00304E                     __pidataCOMRAM:
   105                           	opt stack 0
   106                           
   107                           ;initializer for _Transmit_stall
   108  00304E  01                 	db	1
   109                           
   110                           	psect	nvCOMRAM
   111  000042                     __pnvCOMRAM:
   112                           	opt stack 0
   113  000042                     _timer0ReloadVal16bit:
   114                           	opt stack 0
   115  000042                     	ds	2
   116                           
   117                           	psect	nvBANK0
   118  0000FE                     __pnvBANK0:
   119                           	opt stack 0
   120  0000FE                     _TMR2_InterruptHandler:
   121                           	opt stack 0
   122  0000FE                     	ds	2
   123  0000                     _ANSELA	set	3896
   124  0000                     _ANSELB	set	3897
   125  0000                     _ANSELC	set	3898
   126  0000                     _ANSELD	set	3899
   127  0000                     _ANSELE	set	3900
   128  0000                     _ADCON0	set	4034
   129  0000                     _ADCON0bits	set	4034
   130  0000                     _ADCON1	set	4033
   131  0000                     _ADCON2	set	4032
   132  0000                     _ADRESH	set	4036
   133  0000                     _ADRESL	set	4035
   134  0000                     _BAUD1CON	set	4024
   135  0000                     _INTCON2bits	set	4081
   136  0000                     _INTCONbits	set	4082
   137  0000                     _IPR1bits	set	3999
   138  0000                     _IPR2bits	set	4002
   139  0000                     _LATA	set	3977
   140  0000                     _LATB	set	3978
   141  0000                     _LATC	set	3979
   142  0000                     _LATCbits	set	3979
   143  0000                     _LATD	set	3980
   144  0000                     _LATE	set	3981
   145  0000                     _OSCCON	set	4051
   146  0000                     _OSCCON2	set	4050
   147  0000                     _OSCTUNE	set	3995
   148  0000                     _PIE1bits	set	3997
   149  0000                     _PIE2bits	set	4000
   150  0000                     _PIR1bits	set	3998
   151  0000                     _PIR2bits	set	4001
   152  0000                     _PORTAbits	set	3968
   153  0000                     _PORTBbits	set	3969
   154  0000                     _PORTDbits	set	3971
   155  0000                     _PR2	set	4027
   156  0000                     _RC1STA	set	4011
   157  0000                     _RC1STAbits	set	4011
   158  0000                     _RCONbits	set	4048
   159  0000                     _RCREG1	set	4014
   160  0000                     _SPBRG1	set	4015
   161  0000                     _SPBRGH1	set	4016
   162  0000                     _SSP1ADD	set	4040
   163  0000                     _SSP1BUF	set	4041
   164  0000                     _SSP1CON1	set	4038
   165  0000                     _SSP1CON1bits	set	4038
   166  0000                     _SSP1CON2bits	set	4037
   167  0000                     _SSP1CON3	set	4043
   168  0000                     _SSP1STAT	set	4039
   169  0000                     _T0CON	set	4053
   170  0000                     _T0CONbits	set	4053
   171  0000                     _T2CON	set	4026
   172  0000                     _T2CONbits	set	4026
   173  0000                     _TMR0H	set	4055
   174  0000                     _TMR0L	set	4054
   175  0000                     _TMR2	set	4028
   176  0000                     _TRISA	set	3986
   177  0000                     _TRISB	set	3987
   178  0000                     _TRISC	set	3988
   179  0000                     _TRISCbits	set	3988
   180  0000                     _TRISD	set	3989
   181  0000                     _TRISE	set	3990
   182  0000                     _TX1STA	set	4012
   183  0000                     _TXREG1	set	4013
   184  0000                     _WPUB	set	3937
   185  0000                     _LATA3	set	31819
   186  0000                     _LATB3	set	31827
   187  0000                     _LATB5	set	31829
   188  0000                     _LATD1	set	31841
   189  0000                     _LATE0	set	31848
   190  0000                     _LATE1	set	31849
   191  0000                     _LATE2	set	31850
   192                           
   193                           ; #config settings
   194  0000                     
   195                           	psect	cinit
   196  002846                     __pcinit:
   197                           	opt stack 0
   198  002846                     start_initialization:
   199                           	opt stack 0
   200  002846                     __initialization:
   201                           	opt stack 0
   202                           
   203                           ; Clear objects allocated to BANK5 (206 bytes)
   204  002846  EE05  F000         	lfsr	0,__pbssBANK5
   205  00284A  0ECE               	movlw	206
   206  00284C                     clear_0:
   207  00284C  6AEE               	clrf	postinc0,c
   208  00284E  06E8               	decf	wreg,f,c
   209  002850  E1FD               	bnz	clear_0
   210                           
   211                           ; Clear objects allocated to BANK4 (206 bytes)
   212  002852  EE04  F000         	lfsr	0,__pbssBANK4
   213  002856  0ECE               	movlw	206
   214  002858                     clear_1:
   215  002858  6AEE               	clrf	postinc0,c
   216  00285A  06E8               	decf	wreg,f,c
   217  00285C  E1FD               	bnz	clear_1
   218                           
   219                           ; Clear objects allocated to BANK3 (200 bytes)
   220  00285E  EE03  F000         	lfsr	0,__pbssBANK3
   221  002862  0EC8               	movlw	200
   222  002864                     clear_2:
   223  002864  6AEE               	clrf	postinc0,c
   224  002866  06E8               	decf	wreg,f,c
   225  002868  E1FD               	bnz	clear_2
   226                           
   227                           ; Clear objects allocated to BANK2 (206 bytes)
   228  00286A  EE02  F000         	lfsr	0,__pbssBANK2
   229  00286E  0ECE               	movlw	206
   230  002870                     clear_3:
   231  002870  6AEE               	clrf	postinc0,c
   232  002872  06E8               	decf	wreg,f,c
   233  002874  E1FD               	bnz	clear_3
   234                           
   235                           ; Clear objects allocated to BANK1 (57 bytes)
   236  002876  EE01  F000         	lfsr	0,__pbssBANK1
   237  00287A  0E39               	movlw	57
   238  00287C                     clear_4:
   239  00287C  6AEE               	clrf	postinc0,c
   240  00287E  06E8               	decf	wreg,f,c
   241  002880  E1FD               	bnz	clear_4
   242                           
   243                           ; Clear objects allocated to BANK0 (142 bytes)
   244  002882  EE00  F060         	lfsr	0,__pbssBANK0
   245  002886  0E8E               	movlw	142
   246  002888                     clear_5:
   247  002888  6AEE               	clrf	postinc0,c
   248  00288A  06E8               	decf	wreg,f,c
   249  00288C  E1FD               	bnz	clear_5
   250                           
   251                           ; Clear objects allocated to COMRAM (22 bytes)
   252  00288E  EE00  F02C         	lfsr	0,__pbssCOMRAM
   253  002892  0E16               	movlw	22
   254  002894                     clear_6:
   255  002894  6AEE               	clrf	postinc0,c
   256  002896  06E8               	decf	wreg,f,c
   257  002898  E1FD               	bnz	clear_6
   258                           
   259                           ; Initialize objects allocated to COMRAM (1 bytes)
   260                           ; load TBLPTR registers with __pidataCOMRAM
   261  00289A  0E4E               	movlw	low __pidataCOMRAM
   262  00289C  6EF6               	movwf	tblptrl,c
   263  00289E  0E30               	movlw	high __pidataCOMRAM
   264  0028A0  6EF7               	movwf	tblptrh,c
   265  0028A2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   266  0028A4  6EF8               	movwf	tblptru,c
   267  0028A6  0009               	tblrd		*+	;fetch initializer
   268  0028A8  CFF5 F044          	movff	tablat,__pdataCOMRAM
   269  0028AC                     end_of_initialization:
   270                           	opt stack 0
   271  0028AC                     __end_of__initialization:
   272                           	opt stack 0
   273  0028AC  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   274  0028AE  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   275  0028B0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   276  0028B2  6EF8               	movwf	tblptru,c
   277  0028B4  0100               	movlb	0
   278  0028B6  EFA6  F00E         	goto	_main	;jump to C main() function
   279                           tblptru	equ	0xFF8
   280                           tblptrh	equ	0xFF7
   281                           tblptrl	equ	0xFF6
   282                           tablat	equ	0xFF5
   283                           postinc0	equ	0xFEE
   284                           wreg	equ	0xFE8
   285                           
   286                           	psect	bssCOMRAM
   287  00002C                     __pbssCOMRAM:
   288                           	opt stack 0
   289  00002C                     _group:
   290                           	opt stack 0
   291  00002C                     	ds	2
   292  00002E                     _serial_available:
   293                           	opt stack 0
   294  00002E                     	ds	2
   295  000030                     _serial_read:
   296                           	opt stack 0
   297  000030                     	ds	2
   298  000032                     _serial_write:
   299                           	opt stack 0
   300  000032                     	ds	2
   301  000034                     I2C1_ISR@i2c_10bit_address_restart:
   302                           	opt stack 0
   303  000034                     	ds	1
   304  000035                     I2C1_ISR@i2c_bytes_left:
   305                           	opt stack 0
   306  000035                     	ds	1
   307  000036                     _AKNAKsend:
   308                           	opt stack 0
   309  000036                     	ds	1
   310  000037                     _calc_CS:
   311                           	opt stack 0
   312  000037                     	ds	1
   313  000038                     _i2c1_state:
   314                           	opt stack 0
   315  000038                     	ds	1
   316  000039                     _i2c1_trb_count:
   317                           	opt stack 0
   318  000039                     	ds	1
   319  00003A                     _maxDataAddress:
   320                           	opt stack 0
   321  00003A                     	ds	1
   322  00003B                     _moduleAddress:
   323                           	opt stack 0
   324  00003B                     	ds	1
   325  00003C                     _returnAddress:
   326                           	opt stack 0
   327  00003C                     	ds	1
   328  00003D                     _rx_address:
   329                           	opt stack 0
   330  00003D                     	ds	1
   331  00003E                     _rx_array_inx:
   332                           	opt stack 0
   333  00003E                     	ds	1
   334  00003F                     _rx_len:
   335                           	opt stack 0
   336  00003F                     	ds	1
   337  000040                     I2C1_ISR@i2c_address:
   338                           	opt stack 0
   339  000040                     	ds	2
   340                           tblptru	equ	0xFF8
   341                           tblptrh	equ	0xFF7
   342                           tblptrl	equ	0xFF6
   343                           tablat	equ	0xFF5
   344                           postinc0	equ	0xFEE
   345                           wreg	equ	0xFE8
   346                           
   347                           	psect	dataCOMRAM
   348  000044                     __pdataCOMRAM:
   349                           	opt stack 0
   350  000044                     _Transmit_stall:
   351                           	opt stack 0
   352  000044                     	ds	1
   353                           tblptru	equ	0xFF8
   354                           tblptrh	equ	0xFF7
   355                           tblptrl	equ	0xFF6
   356                           tablat	equ	0xFF5
   357                           postinc0	equ	0xFEE
   358                           wreg	equ	0xFE8
   359                           
   360                           	psect	bssBANK0
   361  000060                     __pbssBANK0:
   362                           	opt stack 0
   363  000060                     _displaybuffer:
   364                           	opt stack 0
   365  000060                     	ds	40
   366  000088                     _LED_array:
   367                           	opt stack 0
   368  000088                     	ds	16
   369  000098                     _LEDNUM_ENAB:
   370                           	opt stack 0
   371  000098                     	ds	12
   372  0000A4                     _LEDState:
   373                           	opt stack 0
   374  0000A4                     	ds	12
   375  0000B0                     _butnarray:
   376                           	opt stack 0
   377  0000B0                     	ds	8
   378  0000B8                     _i2c1_object:
   379                           	opt stack 0
   380  0000B8                     	ds	7
   381  0000BF                     I2C1_ISR@pi2c_buf_ptr:
   382                           	opt stack 0
   383  0000BF                     	ds	2
   384  0000C1                     TMR0_ISR@CountCallBack:
   385                           	opt stack 0
   386  0000C1                     	ds	2
   387  0000C3                     _addressErrorCounter:
   388                           	opt stack 0
   389  0000C3                     	ds	2
   390  0000C5                     _alignErrorCounter:
   391                           	opt stack 0
   392  0000C5                     	ds	2
   393  0000C7                     _brake:
   394                           	opt stack 0
   395  0000C7                     	ds	2
   396  0000C9                     _crcErrorCounter:
   397                           	opt stack 0
   398  0000C9                     	ds	2
   399  0000CB                     _dataAdressErrorCounter:
   400                           	opt stack 0
   401  0000CB                     	ds	2
   402  0000CD                     _k:
   403                           	opt stack 0
   404  0000CD                     	ds	2
   405  0000CF                     _p_i2c1_current:
   406                           	opt stack 0
   407  0000CF                     	ds	2
   408  0000D1                     _p_i2c1_trb_current:
   409                           	opt stack 0
   410  0000D1                     	ds	2
   411  0000D3                     _receiveArrayAddress:
   412                           	opt stack 0
   413  0000D3                     	ds	2
   414  0000D5                     _sendStructAddress:
   415                           	opt stack 0
   416  0000D5                     	ds	2
   417  0000D7                     _serial_peek:
   418                           	opt stack 0
   419  0000D7                     	ds	2
   420  0000D9                     _throttle:
   421                           	opt stack 0
   422  0000D9                     	ds	2
   423  0000DB                     _time:
   424                           	opt stack 0
   425  0000DB                     	ds	2
   426  0000DD                     handleIndicators@oldIndicators:
   427                           	opt stack 0
   428  0000DD                     	ds	2
   429  0000DF                     I2C1_MasterRead@trBlock:
   430                           	opt stack 0
   431  0000DF                     	ds	5
   432  0000E4                     I2C1_MasterWrite@trBlock:
   433                           	opt stack 0
   434  0000E4                     	ds	5
   435  0000E9                     _i2c1_tr_queue:
   436                           	opt stack 0
   437  0000E9                     	ds	5
   438                           tblptru	equ	0xFF8
   439                           tblptrh	equ	0xFF7
   440                           tblptrl	equ	0xFF6
   441                           tablat	equ	0xFF5
   442                           postinc0	equ	0xFEE
   443                           wreg	equ	0xFE8
   444                           
   445                           	psect	bssBANK1
   446  000100                     __pbssBANK1:
   447                           	opt stack 0
   448  000100                     _receiveArray:
   449                           	opt stack 0
   450  000100                     	ds	40
   451  000128                     _crc_buffer:
   452                           	opt stack 0
   453  000128                     	ds	17
   454                           tblptru	equ	0xFF8
   455                           tblptrh	equ	0xFF7
   456                           tblptrl	equ	0xFF6
   457                           tablat	equ	0xFF5
   458                           postinc0	equ	0xFEE
   459                           wreg	equ	0xFE8
   460                           
   461                           	psect	bssBANK2
   462  000200                     __pbssBANK2:
   463                           	opt stack 0
   464  000200                     _ring_buffer:
   465                           	opt stack 0
   466  000200                     	ds	206
   467                           tblptru	equ	0xFF8
   468                           tblptrh	equ	0xFF7
   469                           tblptrl	equ	0xFF6
   470                           tablat	equ	0xFF5
   471                           postinc0	equ	0xFEE
   472                           wreg	equ	0xFE8
   473                           
   474                           	psect	bssBANK3
   475  000300                     __pbssBANK3:
   476                           	opt stack 0
   477  000300                     _rx_buffer:
   478                           	opt stack 0
   479  000300                     	ds	200
   480                           tblptru	equ	0xFF8
   481                           tblptrh	equ	0xFF7
   482                           tblptrl	equ	0xFF6
   483                           tablat	equ	0xFF5
   484                           postinc0	equ	0xFEE
   485                           wreg	equ	0xFE8
   486                           
   487                           	psect	bssBANK4
   488  000400                     __pbssBANK4:
   489                           	opt stack 0
   490  000400                     _input_buffer:
   491                           	opt stack 0
   492  000400                     	ds	206
   493                           tblptru	equ	0xFF8
   494                           tblptrh	equ	0xFF7
   495                           tblptrl	equ	0xFF6
   496                           tablat	equ	0xFF5
   497                           postinc0	equ	0xFEE
   498                           wreg	equ	0xFE8
   499                           
   500                           	psect	bssBANK5
   501  000500                     __pbssBANK5:
   502                           	opt stack 0
   503  000500                     _output_buffer:
   504                           	opt stack 0
   505  000500                     	ds	206
   506                           tblptru	equ	0xFF8
   507                           tblptrh	equ	0xFF7
   508                           tblptrl	equ	0xFF6
   509                           tablat	equ	0xFF5
   510                           postinc0	equ	0xFEE
   511                           wreg	equ	0xFE8
   512                           
   513                           	psect	cstackBANK1
   514  000139                     __pcstackBANK1:
   515                           	opt stack 0
   516  000139                     ??___fttol:
   517  000139                     receiveData@holder:
   518                           	opt stack 0
   519  000139                     LEDwriteDisplay@writeBuffer:
   520                           	opt stack 0
   521                           
   522                           ; 20 bytes @ 0x0
   523  000139                     	ds	3
   524  00013C                     receiveData@holder_2354:
   525                           	opt stack 0
   526                           
   527                           ; 3 bytes @ 0x3
   528  00013C                     	ds	2
   529  00013E                     ___fttol@sign1:
   530                           	opt stack 0
   531                           
   532                           ; 1 bytes @ 0x5
   533  00013E                     	ds	1
   534  00013F                     receiveData@crcHolder:
   535                           	opt stack 0
   536  00013F                     ___fttol@lval:
   537                           	opt stack 0
   538                           
   539                           ; 4 bytes @ 0x6
   540  00013F                     	ds	1
   541  000140                     receiveData@crcHolder_2355:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x7
   545  000140                     	ds	1
   546  000141                     receiveData@u:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x8
   550  000141                     	ds	2
   551  000143                     ___fttol@exp1:
   552                           	opt stack 0
   553  000143                     receiveData@r:
   554                           	opt stack 0
   555                           
   556                           ; 2 bytes @ 0xA
   557  000143                     	ds	1
   558  000144                     LEDsetValue@value:
   559                           	opt stack 0
   560                           
   561                           ; 2 bytes @ 0xB
   562  000144                     	ds	2
   563  000146                     LEDsetValue@color:
   564                           	opt stack 0
   565                           
   566                           ; 2 bytes @ 0xD
   567  000146                     	ds	2
   568  000148                     ??_LEDsetValue:
   569                           
   570                           ; 1 bytes @ 0xF
   571  000148                     	ds	1
   572  000149                     LEDsetValue@k:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0x10
   576  000149                     	ds	4
   577  00014D                     LEDwriteDisplay@i2c_addr:
   578                           	opt stack 0
   579                           
   580                           ; 1 bytes @ 0x14
   581  00014D                     	ds	1
   582  00014E                     LEDwriteDisplay@timeOut:
   583                           	opt stack 0
   584                           
   585                           ; 2 bytes @ 0x15
   586  00014E                     	ds	2
   587  000150                     LEDwriteDisplay@status:
   588                           	opt stack 0
   589                           
   590                           ; 1 bytes @ 0x17
   591  000150                     	ds	1
   592  000151                     main@ADCNT:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x18
   596  000151                     	ds	2
   597                           tblptru	equ	0xFF8
   598                           tblptrh	equ	0xFF7
   599                           tblptrl	equ	0xFF6
   600                           tablat	equ	0xFF5
   601                           postinc0	equ	0xFEE
   602                           wreg	equ	0xFE8
   603                           
   604                           	psect	cstackBANK0
   605  0000EE                     __pcstackBANK0:
   606                           	opt stack 0
   607  0000EE                     ??_LEDsetBar:
   608  0000EE                     ??___ftmul:
   609  0000EE                     ToSend@where:
   610                           	opt stack 0
   611  0000EE                     CRCcheck@SentCRC:
   612                           	opt stack 0
   613  0000EE                     LEDBsetBrightness@b:
   614                           	opt stack 0
   615  0000EE                     LEDblinkRate@b:
   616                           	opt stack 0
   617  0000EE                     begin@ptr:
   618                           	opt stack 0
   619                           
   620                           ; 2 bytes @ 0x0
   621  0000EE                     	ds	1
   622  0000EF                     CRCcheck@calculatedCRC:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x1
   626  0000EF                     	ds	1
   627  0000F0                     LEDBsetBrightness@i2c_addr:
   628                           	opt stack 0
   629  0000F0                     LEDblinkRate@i2c_addr:
   630                           	opt stack 0
   631  0000F0                     begin@maxSize:
   632                           	opt stack 0
   633  0000F0                     CRCcheck@arrayHolder:
   634                           	opt stack 0
   635                           
   636                           ; 3 bytes @ 0x2
   637  0000F0                     	ds	1
   638  0000F1                     begin@givenAddress:
   639                           	opt stack 0
   640  0000F1                     ___ftmul@exp:
   641                           	opt stack 0
   642  0000F1                     LEDBsetBrightness@writeBuffer:
   643                           	opt stack 0
   644  0000F1                     LEDblinkRate@writeBuffer:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0x3
   648  0000F1                     	ds	1
   649  0000F2                     begin@error:
   650                           	opt stack 0
   651  0000F2                     ___ftmul@f3_as_product:
   652                           	opt stack 0
   653                           
   654                           ; 3 bytes @ 0x4
   655  0000F2                     	ds	1
   656  0000F3                     LEDBsetBrightness@timeOut:
   657                           	opt stack 0
   658  0000F3                     LEDblinkRate@timeOut:
   659                           	opt stack 0
   660  0000F3                     begin@stufftosend:
   661                           	opt stack 0
   662  0000F3                     CRCcheck@rt:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0x5
   666  0000F3                     	ds	2
   667  0000F5                     ??_receiveData:
   668  0000F5                     LEDBsetBrightness@status:
   669                           	opt stack 0
   670  0000F5                     LEDblinkRate@status:
   671                           	opt stack 0
   672  0000F5                     ___ftmul@cntr:
   673                           	opt stack 0
   674  0000F5                     begin@stufftoreceive:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0x7
   678  0000F5                     	ds	1
   679  0000F6                     ___ftmul@sign:
   680                           	opt stack 0
   681  0000F6                     LEDbegin@writeBuffer:
   682                           	opt stack 0
   683                           
   684                           ; 3 bytes @ 0x8
   685  0000F6                     	ds	1
   686  0000F7                     ?___fttol:
   687                           	opt stack 0
   688  0000F7                     begin@stuffavailable:
   689                           	opt stack 0
   690  0000F7                     ___fttol@f1:
   691                           	opt stack 0
   692                           
   693                           ; 3 bytes @ 0x9
   694  0000F7                     	ds	2
   695  0000F9                     LEDbegin@timeOut:
   696                           	opt stack 0
   697  0000F9                     begin@stuffpeek:
   698                           	opt stack 0
   699                           
   700                           ; 2 bytes @ 0xB
   701  0000F9                     	ds	2
   702  0000FB                     LEDbegin@i2c_addr:
   703                           	opt stack 0
   704                           
   705                           ; 1 bytes @ 0xD
   706  0000FB                     	ds	1
   707  0000FC                     LEDbegin@status:
   708                           	opt stack 0
   709                           
   710                           ; 1 bytes @ 0xE
   711  0000FC                     	ds	2
   712                           tblptru	equ	0xFF8
   713                           tblptrh	equ	0xFF7
   714                           tblptrl	equ	0xFF6
   715                           tablat	equ	0xFF5
   716                           postinc0	equ	0xFEE
   717                           wreg	equ	0xFE8
   718                           
   719                           	psect	cstackCOMRAM
   720  000001                     __pcstackCOMRAM:
   721                           	opt stack 0
   722  000001                     ??_I2C1_Stop:
   723  000001                     ??_TMR2_CallBack:
   724  000001                     ?i2_UART_buff_size:
   725                           	opt stack 0
   726  000001                     ?i2_UART_buff_modulo_inc:
   727                           	opt stack 0
   728  000001                     ReadButtonState@btnnum:
   729                           	opt stack 0
   730  000001                     i2UART_buff_size@_this:
   731                           	opt stack 0
   732  000001                     i2UART_buff_modulo_inc@value:
   733                           	opt stack 0
   734                           
   735                           ; 2 bytes @ 0x0
   736  000001                     	ds	2
   737  000003                     ??_ReadButtonState:
   738  000003                     I2C1_Stop@completion_code:
   739                           	opt stack 0
   740  000003                     TMR2_CallBack@i:
   741                           	opt stack 0
   742  000003                     i2UART_buff_modulo_inc@modulus:
   743                           	opt stack 0
   744                           
   745                           ; 2 bytes @ 0x2
   746  000003                     	ds	1
   747  000004                     ??_I2C1_ISR:
   748                           
   749                           ; 1 bytes @ 0x3
   750  000004                     	ds	1
   751  000005                     TMR0_ISR@x:
   752                           	opt stack 0
   753  000005                     i2UART_buff_modulo_inc@my_value:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0x4
   757  000005                     	ds	2
   758  000007                     i2UART_buff_put@_this:
   759                           	opt stack 0
   760  000007                     i2UART_buff_get@_this:
   761                           	opt stack 0
   762                           
   763                           ; 2 bytes @ 0x6
   764  000007                     	ds	2
   765  000009                     ??i2_UART_buff_get:
   766  000009                     i2UART_buff_put@c:
   767                           	opt stack 0
   768                           
   769                           ; 1 bytes @ 0x8
   770  000009                     	ds	1
   771  00000A                     ??i2_UART_buff_put:
   772                           
   773                           ; 1 bytes @ 0x9
   774  00000A                     	ds	1
   775  00000B                     i2UART_buff_get@c:
   776                           	opt stack 0
   777                           
   778                           ; 1 bytes @ 0xA
   779  00000B                     	ds	1
   780  00000C                     EUSART1_Receive_ISR@data:
   781                           	opt stack 0
   782                           
   783                           ; 1 bytes @ 0xB
   784  00000C                     	ds	1
   785  00000D                     ??_INTERRUPT_InterruptManager:
   786                           
   787                           ; 1 bytes @ 0xC
   788  00000D                     	ds	14
   789  00001B                     ?_FastTransfer_buffer_modulo_inc:
   790                           	opt stack 0
   791  00001B                     ?_UART_buff_modulo_inc:
   792                           	opt stack 0
   793  00001B                     ?_UART_buff_size:
   794                           	opt stack 0
   795  00001B                     ?___awdiv:
   796                           	opt stack 0
   797  00001B                     ?___ftpack:
   798                           	opt stack 0
   799  00001B                     I2C1_MasterTRBInsert@ptrb_list:
   800                           	opt stack 0
   801  00001B                     I2C1_MasterWriteTRBBuild@ptrb:
   802                           	opt stack 0
   803  00001B                     setLED@led:
   804                           	opt stack 0
   805  00001B                     Off_Led@led:
   806                           	opt stack 0
   807  00001B                     TMR2_SetInterruptHandler@InterruptHandler:
   808                           	opt stack 0
   809  00001B                     Delay@wait:
   810                           	opt stack 0
   811  00001B                     GetButtonState@btnnum:
   812                           	opt stack 0
   813  00001B                     TBbarGraphs@t:
   814                           	opt stack 0
   815  00001B                     CRC8@data:
   816                           	opt stack 0
   817  00001B                     FastTransfer_buffer_modulo_inc@value:
   818                           	opt stack 0
   819  00001B                     crcBufS_put@_this:
   820                           	opt stack 0
   821  00001B                     crcBufS_status_put@_this:
   822                           	opt stack 0
   823  00001B                     crcBufS_get@_this:
   824                           	opt stack 0
   825  00001B                     UART_buff_size@_this:
   826                           	opt stack 0
   827  00001B                     UART_buff_modulo_inc@value:
   828                           	opt stack 0
   829  00001B                     UART_buff_peek@_this:
   830                           	opt stack 0
   831  00001B                     ___awdiv@dividend:
   832                           	opt stack 0
   833  00001B                     memset@p1:
   834                           	opt stack 0
   835  00001B                     ___ftpack@arg:
   836                           	opt stack 0
   837                           
   838                           ; 3 bytes @ 0x1A
   839  00001B                     	ds	2
   840  00001D                     ??_setLED:
   841  00001D                     ??_Off_Led:
   842  00001D                     ??_Delay:
   843  00001D                     ??_GetButtonState:
   844  00001D                     ??_UART_buff_peek:
   845  00001D                     ?_Receive_available:
   846                           	opt stack 0
   847  00001D                     CRC8@len:
   848                           	opt stack 0
   849  00001D                     crcBufS_put@address:
   850                           	opt stack 0
   851  00001D                     crcBufS_status_put@time:
   852                           	opt stack 0
   853  00001D                     crcBufS_get@time:
   854                           	opt stack 0
   855  00001D                     I2C1_MasterTRBInsert@pflag:
   856                           	opt stack 0
   857  00001D                     I2C1_MasterWriteTRBBuild@pdata:
   858                           	opt stack 0
   859  00001D                     TBbarGraphs@b:
   860                           	opt stack 0
   861  00001D                     FastTransfer_buffer_modulo_inc@modulus:
   862                           	opt stack 0
   863  00001D                     UART_buff_modulo_inc@modulus:
   864                           	opt stack 0
   865  00001D                     ___awdiv@divisor:
   866                           	opt stack 0
   867  00001D                     memset@c:
   868                           	opt stack 0
   869                           
   870                           ; 2 bytes @ 0x1C
   871  00001D                     	ds	1
   872  00001E                     CRC8@sum:
   873                           	opt stack 0
   874  00001E                     crcBufS_put@oldCRC:
   875                           	opt stack 0
   876  00001E                     crcBufS_status_put@status:
   877                           	opt stack 0
   878  00001E                     crcBufS_get@space:
   879                           	opt stack 0
   880  00001E                     ___ftpack@exp:
   881                           	opt stack 0
   882  00001E                     Delay@x:
   883                           	opt stack 0
   884                           
   885                           ; 2 bytes @ 0x1D
   886  00001E                     	ds	1
   887  00001F                     ??_crcBufS_get:
   888  00001F                     ??_crcBufS_status_put:
   889  00001F                     I2C1_MasterWriteTRBBuild@length:
   890                           	opt stack 0
   891  00001F                     CRC8@extract:
   892                           	opt stack 0
   893  00001F                     crcBufS_put@status:
   894                           	opt stack 0
   895  00001F                     ___awdiv@counter:
   896                           	opt stack 0
   897  00001F                     ___ftpack@sign:
   898                           	opt stack 0
   899  00001F                     SetLEDOut@lednum:
   900                           	opt stack 0
   901  00001F                     FastTransfer_buffer_modulo_inc@my_value:
   902                           	opt stack 0
   903  00001F                     UART_buff_modulo_inc@my_value:
   904                           	opt stack 0
   905  00001F                     memset@n:
   906                           	opt stack 0
   907                           
   908                           ; 2 bytes @ 0x1E
   909  00001F                     	ds	1
   910  000020                     ??_crcBufS_put:
   911  000020                     ??___ftpack:
   912  000020                     I2C1_MasterTRBInsert@count:
   913                           	opt stack 0
   914  000020                     CRC8@tempI:
   915                           	opt stack 0
   916  000020                     ___awdiv@sign:
   917                           	opt stack 0
   918  000020                     I2C1_MasterWriteTRBBuild@address:
   919                           	opt stack 0
   920                           
   921                           ; 2 bytes @ 0x1F
   922  000020                     	ds	1
   923  000021                     ?_buttonsCollector:
   924                           	opt stack 0
   925  000021                     CRC8@crc:
   926                           	opt stack 0
   927  000021                     SetLEDOut@state:
   928                           	opt stack 0
   929  000021                     FastTransfer_buffer_put@_this:
   930                           	opt stack 0
   931  000021                     UART_buff_put@_this:
   932                           	opt stack 0
   933  000021                     UART_buff_get@_this:
   934                           	opt stack 0
   935  000021                     ___awdiv@quotient:
   936                           	opt stack 0
   937  000021                     memset@p:
   938                           	opt stack 0
   939                           
   940                           ; 2 bytes @ 0x20
   941  000021                     	ds	1
   942  000022                     ??_I2C1_MasterWriteTRBBuild:
   943                           
   944                           ; 1 bytes @ 0x21
   945  000022                     	ds	1
   946  000023                     ??_buttonsCollector:
   947  000023                     ??_SetLEDOut:
   948  000023                     ??_UART_buff_get:
   949  000023                     ?___lwtoft:
   950                           	opt stack 0
   951  000023                     FastTransfer_buffer_put@towhere:
   952                           	opt stack 0
   953  000023                     UART_buff_put@c:
   954                           	opt stack 0
   955  000023                     LEDsetBar@bar:
   956                           	opt stack 0
   957  000023                     FastTransfer_buffer_flush@_this:
   958                           	opt stack 0
   959  000023                     crcBufS_status_put@wantedTime:
   960                           	opt stack 0
   961  000023                     UART_buff_init@_this:
   962                           	opt stack 0
   963  000023                     ___lwtoft@c:
   964                           	opt stack 0
   965                           
   966                           ; 2 bytes @ 0x22
   967  000023                     	ds	1
   968  000024                     ??_UART_buff_put:
   969  000024                     I2C1_MasterWrite@pdata:
   970                           	opt stack 0
   971  000024                     FastTransfer_buffer_put@towhat:
   972                           	opt stack 0
   973                           
   974                           ; 2 bytes @ 0x23
   975  000024                     	ds	1
   976  000025                     UART_buff_get@c:
   977                           	opt stack 0
   978  000025                     LEDsetBar@color:
   979                           	opt stack 0
   980  000025                     handleIndicators@receivedIndicators:
   981                           	opt stack 0
   982  000025                     FastTransfer_buffer_flush@clearBuffer:
   983                           	opt stack 0
   984  000025                     crcBufS_get@wantedTime:
   985                           	opt stack 0
   986                           
   987                           ; 2 bytes @ 0x24
   988  000025                     	ds	1
   989  000026                     ??_FastTransfer_buffer_put:
   990  000026                     ?___ftmul:
   991                           	opt stack 0
   992  000026                     I2C1_MasterWrite@length:
   993                           	opt stack 0
   994  000026                     Send_put@_data:
   995                           	opt stack 0
   996  000026                     buttonsCollector@sendVal:
   997                           	opt stack 0
   998  000026                     ___ftmul@f1:
   999                           	opt stack 0
  1000                           
  1001                           ; 3 bytes @ 0x25
  1002  000026                     	ds	1
  1003  000027                     ??_handleIndicators:
  1004  000027                     ??_sendData:
  1005  000027                     I2C1_MasterWrite@address:
  1006                           	opt stack 0
  1007  000027                     LEDsetBar@c:
  1008                           	opt stack 0
  1009                           
  1010                           ; 2 bytes @ 0x26
  1011  000027                     	ds	1
  1012  000028                     sendData@whereToSend:
  1013                           	opt stack 0
  1014  000028                     buttonsCollector@i:
  1015                           	opt stack 0
  1016                           
  1017                           ; 2 bytes @ 0x27
  1018  000028                     	ds	1
  1019  000029                     sendData@CS:
  1020                           	opt stack 0
  1021  000029                     I2C1_MasterWrite@pflag:
  1022                           	opt stack 0
  1023  000029                     LEDsetBar@a:
  1024                           	opt stack 0
  1025  000029                     ___ftmul@f2:
  1026                           	opt stack 0
  1027                           
  1028                           ; 3 bytes @ 0x28
  1029  000029                     	ds	1
  1030  00002A                     handleIndicators@i:
  1031                           	opt stack 0
  1032  00002A                     sendData@i:
  1033                           	opt stack 0
  1034  00002A                     ToSend@what:
  1035                           	opt stack 0
  1036                           
  1037                           ; 2 bytes @ 0x29
  1038  00002A                     	ds	1
  1039  00002B                     
  1040                           ; 1 bytes @ 0x2A
  1041  00002B                     	ds	1
  1042  00002C                     tblptru	equ	0xFF8
  1043                           tblptrh	equ	0xFF7
  1044                           tblptrl	equ	0xFF6
  1045                           tablat	equ	0xFF5
  1046                           postinc0	equ	0xFEE
  1047                           wreg	equ	0xFE8
  1048                           
  1049                           ; 1 bytes @ 0x2B
  1050 ;;
  1051 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1052 ;;
  1053 ;; *************** function _main *****************
  1054 ;; Defined at:
  1055 ;;		line 32 in file "main.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;		None
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;  ADCNT           2   24[BANK1 ] int 
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      void 
  1062 ;; Registers used:
  1063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1069 ;;      Params:         0       0       0       0       0       0       0
  1070 ;;      Locals:         0       0       2       0       0       0       0
  1071 ;;      Temps:          0       0       0       0       0       0       0
  1072 ;;      Totals:         0       0       2       0       0       0       0
  1073 ;;Total ram usage:        2 bytes
  1074 ;; Hardware stack levels required when called:   10
  1075 ;; This function calls:
  1076 ;;		_LEDbegin
  1077 ;;		_LEDsetValue
  1078 ;;		_LEDwriteDisplay
  1079 ;;		_SYSTEM_Initialize
  1080 ;;		___ftmul
  1081 ;;		___fttol
  1082 ;;		___lwtoft
  1083 ;;		_updateComms
  1084 ;; This function is called by:
  1085 ;;		Startup code after reset
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           	psect	text0
  1090  001D4C                     __ptext0:
  1091                           	opt stack 0
  1092  001D4C                     _main:
  1093                           	opt stack 21
  1094                           
  1095                           ;main.c: 34: SYSTEM_Initialize();
  1096                           
  1097                           ;incstack = 0
  1098  001D4C  EC5D  F014         	call	_SYSTEM_Initialize	;wreg free
  1099                           
  1100                           ;main.c: 53: (INTCONbits.GIE = 1);
  1101  001D50  8EF2               	bsf	intcon,7,c	;volatile
  1102                           
  1103                           ;main.c: 56: (INTCONbits.PEIE = 1);
  1104  001D52  8CF2               	bsf	intcon,6,c	;volatile
  1105                           
  1106                           ;main.c: 63: int ADCNT = 1;
  1107  001D54  0E00               	movlw	0
  1108  001D56  0101               	movlb	1	; () banked
  1109  001D58  6F52               	movwf	(main@ADCNT+1)& (0+255),b
  1110  001D5A  0E01               	movlw	1
  1111  001D5C  6F51               	movwf	main@ADCNT& (0+255),b
  1112                           
  1113                           ; BSR set to: 1
  1114                           ;main.c: 64: LEDbegin(0x70);
  1115  001D5E  0E70               	movlw	112
  1116  001D60  EC32  F012         	call	_LEDbegin
  1117                           
  1118                           ;main.c: 65: LEDbegin(0x71);
  1119  001D64  0E71               	movlw	113
  1120  001D66  EC32  F012         	call	_LEDbegin
  1121                           
  1122                           ;main.c: 66: do { LATA3 = 1; } while(0);
  1123  001D6A  8689               	bsf	3977,3,c	;volatile
  1124                           
  1125                           ;main.c: 67: LATCbits.LATC5 = 0;
  1126  001D6C  9A8B               	bcf	3979,5,c	;volatile
  1127  001D6E                     l6883:
  1128                           
  1129                           ;main.c: 69: updateComms();
  1130  001D6E  EC73  F016         	call	_updateComms	;wreg free
  1131                           
  1132                           ;main.c: 75: if (time > 1) {
  1133  001D72  0100               	movlb	0	; () banked
  1134  001D74  51DC               	movf	(_time+1)& (0+255),w,b	;volatile
  1135  001D76  E105               	bnz	u7850
  1136  001D78  0E02               	movlw	2
  1137  001D7A  0100               	movlb	0	; () banked
  1138  001D7C  5DDB               	subwf	_time& (0+255),w,b	;volatile
  1139  001D7E  A0D8               	btfss	status,0,c
  1140  001D80  D7F6               	goto	l6883
  1141  001D82                     u7850:
  1142                           
  1143                           ; BSR set to: 0
  1144                           ;main.c: 76: LEDsetValue((throttle)*(24.0 / 100.0), 1);
  1145  001D82  0EC3               	movlw	195
  1146  001D84  6E29               	movwf	___ftmul@f2,c
  1147  001D86  0E75               	movlw	117
  1148  001D88  6E2A               	movwf	___ftmul@f2+1,c
  1149  001D8A  0E3E               	movlw	62
  1150  001D8C  6E2B               	movwf	___ftmul@f2+2,c
  1151  001D8E  C0D9  F023         	movff	_throttle,___lwtoft@c
  1152  001D92  C0DA  F024         	movff	_throttle+1,___lwtoft@c+1
  1153  001D96  EC55  F017         	call	___lwtoft	;wreg free
  1154  001D9A  C023  F026         	movff	?___lwtoft,___ftmul@f1
  1155  001D9E  C024  F027         	movff	?___lwtoft+1,___ftmul@f1+1
  1156  001DA2  C025  F028         	movff	?___lwtoft+2,___ftmul@f1+2
  1157  001DA6  ECD6  F00B         	call	___ftmul	;wreg free
  1158  001DAA  C026  F0F7         	movff	?___ftmul,___fttol@f1
  1159  001DAE  C027  F0F8         	movff	?___ftmul+1,___fttol@f1+1
  1160  001DB2  C028  F0F9         	movff	?___ftmul+2,___fttol@f1+2
  1161  001DB6  EC9C  F00A         	call	___fttol	;wreg free
  1162  001DBA  C0F7  F144         	movff	?___fttol,LEDsetValue@value
  1163  001DBE  C0F8  F145         	movff	?___fttol+1,LEDsetValue@value+1
  1164  001DC2  0E00               	movlw	0
  1165  001DC4  0101               	movlb	1	; () banked
  1166  001DC6  6F47               	movwf	(LEDsetValue@color+1)& (0+255),b
  1167  001DC8  0E01               	movlw	1
  1168  001DCA  6F46               	movwf	LEDsetValue@color& (0+255),b
  1169  001DCC  ECE0  F011         	call	_LEDsetValue	;wreg free
  1170                           
  1171                           ;main.c: 77: LEDwriteDisplay(0x70);
  1172  001DD0  0E70               	movlw	112
  1173  001DD2  EC6C  F00C         	call	_LEDwriteDisplay
  1174                           
  1175                           ;main.c: 78: LEDsetValue((brake)*(24.0 / 100.0), 1);
  1176  001DD6  0EC3               	movlw	195
  1177  001DD8  6E29               	movwf	___ftmul@f2,c
  1178  001DDA  0E75               	movlw	117
  1179  001DDC  6E2A               	movwf	___ftmul@f2+1,c
  1180  001DDE  0E3E               	movlw	62
  1181  001DE0  6E2B               	movwf	___ftmul@f2+2,c
  1182  001DE2  C0C7  F023         	movff	_brake,___lwtoft@c
  1183  001DE6  C0C8  F024         	movff	_brake+1,___lwtoft@c+1
  1184  001DEA  EC55  F017         	call	___lwtoft	;wreg free
  1185  001DEE  C023  F026         	movff	?___lwtoft,___ftmul@f1
  1186  001DF2  C024  F027         	movff	?___lwtoft+1,___ftmul@f1+1
  1187  001DF6  C025  F028         	movff	?___lwtoft+2,___ftmul@f1+2
  1188  001DFA  ECD6  F00B         	call	___ftmul	;wreg free
  1189  001DFE  C026  F0F7         	movff	?___ftmul,___fttol@f1
  1190  001E02  C027  F0F8         	movff	?___ftmul+1,___fttol@f1+1
  1191  001E06  C028  F0F9         	movff	?___ftmul+2,___fttol@f1+2
  1192  001E0A  EC9C  F00A         	call	___fttol	;wreg free
  1193  001E0E  C0F7  F144         	movff	?___fttol,LEDsetValue@value
  1194  001E12  C0F8  F145         	movff	?___fttol+1,LEDsetValue@value+1
  1195  001E16  0E00               	movlw	0
  1196  001E18  0101               	movlb	1	; () banked
  1197  001E1A  6F47               	movwf	(LEDsetValue@color+1)& (0+255),b
  1198  001E1C  0E01               	movlw	1
  1199  001E1E  6F46               	movwf	LEDsetValue@color& (0+255),b
  1200  001E20  ECE0  F011         	call	_LEDsetValue	;wreg free
  1201                           
  1202                           ;main.c: 79: LEDwriteDisplay(0x71);
  1203  001E24  0E71               	movlw	113
  1204  001E26  EC6C  F00C         	call	_LEDwriteDisplay
  1205                           
  1206                           ;main.c: 80: do { LATA3 = ~LATA3; } while(0);
  1207  001E2A  B689               	btfsc	3977,3,c	;volatile
  1208  001E2C  D002               	goto	u7860
  1209  001E2E  8689               	bsf	3977,3,c	;volatile
  1210  001E30  D001               	goto	l6891
  1211  001E32                     u7860:
  1212  001E32  9689               	bcf	3977,3,c	;volatile
  1213  001E34                     l6891:
  1214                           
  1215                           ;main.c: 81: time = 0;
  1216  001E34  0E00               	movlw	0
  1217  001E36  0100               	movlb	0	; () banked
  1218  001E38  6FDC               	movwf	(_time+1)& (0+255),b	;volatile
  1219  001E3A  0E00               	movlw	0
  1220  001E3C  6FDB               	movwf	_time& (0+255),b	;volatile
  1221                           
  1222                           ; BSR set to: 0
  1223                           
  1224                           ; BSR set to: 0
  1225  001E3E  D797               	goto	l6883
  1226  001E40                     __end_of_main:
  1227                           	opt stack 0
  1228                           tblptru	equ	0xFF8
  1229                           tblptrh	equ	0xFF7
  1230                           tblptrl	equ	0xFF6
  1231                           tablat	equ	0xFF5
  1232                           intcon	equ	0xFF2
  1233                           postinc0	equ	0xFEE
  1234                           wreg	equ	0xFE8
  1235                           status	equ	0xFD8
  1236                           
  1237 ;; *************** function _updateComms *****************
  1238 ;; Defined at:
  1239 ;;		line 7 in file "Communications.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;		None
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;		None
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      void 
  1246 ;; Registers used:
  1247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1253 ;;      Params:         0       0       0       0       0       0       0
  1254 ;;      Locals:         0       0       0       0       0       0       0
  1255 ;;      Temps:          0       0       0       0       0       0       0
  1256 ;;      Totals:         0       0       0       0       0       0       0
  1257 ;;Total ram usage:        0 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; Hardware stack levels required when called:    9
  1260 ;; This function calls:
  1261 ;;		_TBbarGraphs
  1262 ;;		_handleIndicators
  1263 ;;		_receiveData
  1264 ;;		_respondECU
  1265 ;; This function is called by:
  1266 ;;		_main
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           	psect	text1
  1271  002CE6                     __ptext1:
  1272                           	opt stack 0
  1273  002CE6                     _updateComms:
  1274                           	opt stack 21
  1275                           
  1276                           ;Communications.c: 8: if (receiveData()) {
  1277                           
  1278                           ; BSR set to: 0
  1279                           ;incstack = 0
  1280  002CE6  EC6A  F000         	call	_receiveData	;wreg free
  1281  002CEA  0900               	iorlw	0
  1282  002CEC  B4D8               	btfsc	status,2,c
  1283  002CEE  0012               	return	
  1284                           
  1285                           ;Communications.c: 10: respondECU();
  1286  002CF0  ECD2  F015         	call	_respondECU	;wreg free
  1287                           
  1288                           ;Communications.c: 12: handleIndicators(receiveArray[2]);
  1289  002CF4  C104  F025         	movff	_receiveArray+4,handleIndicators@receivedIndicators	;volatile
  1290  002CF8  C105  F026         	movff	_receiveArray+5,handleIndicators@receivedIndicators+1	;volatile
  1291  002CFC  ECE7  F013         	call	_handleIndicators	;wreg free
  1292                           
  1293                           ;Communications.c: 13: TBbarGraphs(receiveArray[3], receiveArray[4]);
  1294  002D00  C106  F01B         	movff	_receiveArray+6,TBbarGraphs@t	;volatile
  1295  002D04  C107  F01C         	movff	_receiveArray+7,TBbarGraphs@t+1	;volatile
  1296  002D08  C108  F01D         	movff	_receiveArray+8,TBbarGraphs@b	;volatile
  1297  002D0C  C109  F01E         	movff	_receiveArray+9,TBbarGraphs@b+1	;volatile
  1298  002D10  ECEE  F017         	call	_TBbarGraphs	;wreg free
  1299                           
  1300                           ;Communications.c: 14: receiveArray[0] = 0;
  1301  002D14  0E00               	movlw	0
  1302  002D16  0101               	movlb	1	; () banked
  1303  002D18  6F01               	movwf	(_receiveArray+1)& (0+255),b	;volatile
  1304  002D1A  0E00               	movlw	0
  1305  002D1C  6F00               	movwf	_receiveArray& (0+255),b	;volatile
  1306  002D1E  0012               	return	
  1307  002D20                     __end_of_updateComms:
  1308                           	opt stack 0
  1309                           tblptru	equ	0xFF8
  1310                           tblptrh	equ	0xFF7
  1311                           tblptrl	equ	0xFF6
  1312                           tablat	equ	0xFF5
  1313                           intcon	equ	0xFF2
  1314                           postinc0	equ	0xFEE
  1315                           wreg	equ	0xFE8
  1316                           status	equ	0xFD8
  1317                           
  1318 ;; *************** function _respondECU *****************
  1319 ;; Defined at:
  1320 ;;		line 18 in file "Communications.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;		None
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;		None
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1334 ;;      Params:         0       0       0       0       0       0       0
  1335 ;;      Locals:         0       0       0       0       0       0       0
  1336 ;;      Temps:          0       0       0       0       0       0       0
  1337 ;;      Totals:         0       0       0       0       0       0       0
  1338 ;;Total ram usage:        0 bytes
  1339 ;; Hardware stack levels used:    1
  1340 ;; Hardware stack levels required when called:    8
  1341 ;; This function calls:
  1342 ;;		_Delay
  1343 ;;		_ToSend
  1344 ;;		_buttonsCollector
  1345 ;;		_sendData
  1346 ;; This function is called by:
  1347 ;;		_updateComms
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           	psect	text2
  1352  002BA4                     __ptext2:
  1353                           	opt stack 0
  1354  002BA4                     _respondECU:
  1355                           	opt stack 21
  1356                           
  1357                           ;Communications.c: 19: LATCbits.LATC5 = 1;
  1358                           
  1359                           ;incstack = 0
  1360  002BA4  8A8B               	bsf	3979,5,c	;volatile
  1361                           
  1362                           ;Communications.c: 20: ToSend(0, 3);
  1363  002BA6  0E00               	movlw	0
  1364  002BA8  6E2B               	movwf	ToSend@what+1,c
  1365  002BAA  0E03               	movlw	3
  1366  002BAC  6E2A               	movwf	ToSend@what,c
  1367  002BAE  0E00               	movlw	0
  1368  002BB0  EC78  F017         	call	_ToSend
  1369                           
  1370                           ;Communications.c: 21: ToSend(8, buttonsCollector());
  1371  002BB4  EC97  F014         	call	_buttonsCollector	;wreg free
  1372  002BB8  C021  F02A         	movff	?_buttonsCollector,ToSend@what
  1373  002BBC  C022  F02B         	movff	?_buttonsCollector+1,ToSend@what+1
  1374  002BC0  0E08               	movlw	8
  1375  002BC2  EC78  F017         	call	_ToSend
  1376                           
  1377                           ;Communications.c: 22: Delay(9);
  1378  002BC6  0E00               	movlw	0
  1379  002BC8  6E1C               	movwf	Delay@wait+1,c
  1380  002BCA  0E09               	movlw	9
  1381  002BCC  6E1B               	movwf	Delay@wait,c
  1382  002BCE  EC90  F016         	call	_Delay	;wreg free
  1383                           
  1384                           ;Communications.c: 23: sendData(1);
  1385  002BD2  0E01               	movlw	1
  1386  002BD4  EC3E  F00B         	call	_sendData
  1387                           
  1388                           ;Communications.c: 24: Delay(3);
  1389  002BD8  0E00               	movlw	0
  1390  002BDA  6E1C               	movwf	Delay@wait+1,c
  1391  002BDC  0E03               	movlw	3
  1392  002BDE  6E1B               	movwf	Delay@wait,c
  1393  002BE0  EC90  F016         	call	_Delay	;wreg free
  1394                           
  1395                           ;Communications.c: 25: LATCbits.LATC5 = 0;
  1396  002BE4  9A8B               	bcf	3979,5,c	;volatile
  1397  002BE6  0012               	return		;funcret
  1398  002BE8                     __end_of_respondECU:
  1399                           	opt stack 0
  1400                           tblptru	equ	0xFF8
  1401                           tblptrh	equ	0xFF7
  1402                           tblptrl	equ	0xFF6
  1403                           tablat	equ	0xFF5
  1404                           intcon	equ	0xFF2
  1405                           postinc0	equ	0xFEE
  1406                           wreg	equ	0xFE8
  1407                           status	equ	0xFD8
  1408                           
  1409 ;; *************** function _sendData *****************
  1410 ;; Defined at:
  1411 ;;		line 53 in file "FastTransfer.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;  whereToSend     1    wreg     unsigned char 
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;  whereToSend     1   39[COMRAM] unsigned char 
  1416 ;;  i               2   41[COMRAM] int 
  1417 ;;  CS              1   40[COMRAM] unsigned char 
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  1    wreg      void 
  1420 ;; Registers used:
  1421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1427 ;;      Params:         0       0       0       0       0       0       0
  1428 ;;      Locals:         4       0       0       0       0       0       0
  1429 ;;      Temps:          1       0       0       0       0       0       0
  1430 ;;      Totals:         5       0       0       0       0       0       0
  1431 ;;Total ram usage:        5 bytes
  1432 ;; Hardware stack levels used:    1
  1433 ;; Hardware stack levels required when called:    7
  1434 ;; This function calls:
  1435 ;;		Absolute function
  1436 ;;		_CRC8
  1437 ;;		_FastTransfer_buffer_flush
  1438 ;;		_Send_put
  1439 ;;		_crcBufS_put
  1440 ;; This function is called by:
  1441 ;;		_respondECU
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445                           	psect	text3
  1446  00167C                     __ptext3:
  1447                           	opt stack 0
  1448  00167C                     _sendData:
  1449                           	opt stack 21
  1450                           
  1451                           ;incstack = 0
  1452                           ;sendData@whereToSend stored from wreg
  1453  00167C  6E28               	movwf	sendData@whereToSend,c
  1454                           
  1455                           ;FastTransfer.c: 56: unsigned char CS = CRC8(sendStructAddress, ring_buffer.count);
  1456  00167E  C0D5  F01B         	movff	_sendStructAddress,CRC8@data
  1457  001682  C0D6  F01C         	movff	_sendStructAddress+1,CRC8@data+1
  1458  001686  C2CC  F01D         	movff	_ring_buffer+204,CRC8@len
  1459  00168A  ECAD  F015         	call	_CRC8	;wreg free
  1460  00168E  6E29               	movwf	sendData@CS,c
  1461                           
  1462                           ;FastTransfer.c: 58: serial_write(0x06);
  1463  001690  D801               	call	u6058
  1464  001692  D00B               	goto	l5925
  1465  001694                     u6058:
  1466  001694  0005               	push	
  1467  001696  6EFA               	movwf	pclath,c
  1468  001698  5032               	movf	_serial_write,w,c
  1469  00169A  6EFD               	movwf	tosl,c
  1470  00169C  5033               	movf	_serial_write+1,w,c
  1471  00169E  6EFE               	movwf	tosh,c
  1472  0016A0  50F8               	movf	tblptru,w,c
  1473  0016A2  6EFF               	movwf	tosu,c
  1474  0016A4  50FA               	movf	pclath,w,c
  1475  0016A6  0E06               	movlw	6
  1476  0016A8  0012               	return		;indir
  1477  0016AA                     l5925:
  1478                           
  1479                           ;FastTransfer.c: 59: serial_write(0x85);
  1480  0016AA  D801               	call	u6068
  1481  0016AC  D00B               	goto	l5927
  1482  0016AE                     u6068:
  1483  0016AE  0005               	push	
  1484  0016B0  6EFA               	movwf	pclath,c
  1485  0016B2  5032               	movf	_serial_write,w,c
  1486  0016B4  6EFD               	movwf	tosl,c
  1487  0016B6  5033               	movf	_serial_write+1,w,c
  1488  0016B8  6EFE               	movwf	tosh,c
  1489  0016BA  50F8               	movf	tblptru,w,c
  1490  0016BC  6EFF               	movwf	tosu,c
  1491  0016BE  50FA               	movf	pclath,w,c
  1492  0016C0  0E85               	movlw	133
  1493  0016C2  0012               	return		;indir
  1494  0016C4                     l5927:
  1495                           
  1496                           ;FastTransfer.c: 60: serial_write(whereToSend);
  1497  0016C4  D801               	call	u6078
  1498  0016C6  D00B               	goto	l5929
  1499  0016C8                     u6078:
  1500  0016C8  0005               	push	
  1501  0016CA  6EFA               	movwf	pclath,c
  1502  0016CC  5032               	movf	_serial_write,w,c
  1503  0016CE  6EFD               	movwf	tosl,c
  1504  0016D0  5033               	movf	_serial_write+1,w,c
  1505  0016D2  6EFE               	movwf	tosh,c
  1506  0016D4  50F8               	movf	tblptru,w,c
  1507  0016D6  6EFF               	movwf	tosu,c
  1508  0016D8  50FA               	movf	pclath,w,c
  1509  0016DA  5028               	movf	sendData@whereToSend,w,c
  1510  0016DC  0012               	return		;indir
  1511  0016DE                     l5929:
  1512                           
  1513                           ;FastTransfer.c: 61: serial_write(moduleAddress);
  1514  0016DE  D801               	call	u6088
  1515  0016E0  D00B               	goto	l5931
  1516  0016E2                     u6088:
  1517  0016E2  0005               	push	
  1518  0016E4  6EFA               	movwf	pclath,c
  1519  0016E6  5032               	movf	_serial_write,w,c
  1520  0016E8  6EFD               	movwf	tosl,c
  1521  0016EA  5033               	movf	_serial_write+1,w,c
  1522  0016EC  6EFE               	movwf	tosh,c
  1523  0016EE  50F8               	movf	tblptru,w,c
  1524  0016F0  6EFF               	movwf	tosu,c
  1525  0016F2  50FA               	movf	pclath,w,c
  1526  0016F4  503B               	movf	_moduleAddress,w,c
  1527  0016F6  0012               	return		;indir
  1528  0016F8                     l5931:
  1529                           
  1530                           ;FastTransfer.c: 62: serial_write(ring_buffer.count);
  1531  0016F8  D801               	call	u6098
  1532  0016FA  D00C               	goto	l5933
  1533  0016FC                     u6098:
  1534  0016FC  0005               	push	
  1535  0016FE  6EFA               	movwf	pclath,c
  1536  001700  5032               	movf	_serial_write,w,c
  1537  001702  6EFD               	movwf	tosl,c
  1538  001704  5033               	movf	_serial_write+1,w,c
  1539  001706  6EFE               	movwf	tosh,c
  1540  001708  50F8               	movf	tblptru,w,c
  1541  00170A  6EFF               	movwf	tosu,c
  1542  00170C  50FA               	movf	pclath,w,c
  1543  00170E  0102               	movlb	2	; () banked
  1544  001710  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  1545  001712  0012               	return		;indir
  1546  001714                     l5933:
  1547                           
  1548                           ;FastTransfer.c: 66: int i;
  1549                           ;FastTransfer.c: 67: for (i = 0; i < ring_buffer.count; i++) {
  1550  001714  0E00               	movlw	0
  1551  001716  6E2B               	movwf	sendData@i+1,c
  1552  001718  0E00               	movlw	0
  1553  00171A  6E2A               	movwf	sendData@i,c
  1554  00171C  D017               	goto	l5939
  1555  00171E                     l5935:
  1556                           
  1557                           ;FastTransfer.c: 68: serial_write(*(sendStructAddress + i));
  1558  00171E  D801               	call	u6108
  1559  001720  D013               	goto	l5937
  1560  001722                     u6108:
  1561  001722  0005               	push	
  1562  001724  6EFA               	movwf	pclath,c
  1563  001726  5032               	movf	_serial_write,w,c
  1564  001728  6EFD               	movwf	tosl,c
  1565  00172A  5033               	movf	_serial_write+1,w,c
  1566  00172C  6EFE               	movwf	tosh,c
  1567  00172E  50F8               	movf	tblptru,w,c
  1568  001730  6EFF               	movwf	tosu,c
  1569  001732  50FA               	movf	pclath,w,c
  1570  001734  502A               	movf	sendData@i,w,c
  1571  001736  0100               	movlb	0	; () banked
  1572  001738  25D5               	addwf	_sendStructAddress& (0+255),w,b
  1573  00173A  6ED9               	movwf	fsr2l,c
  1574  00173C  502B               	movf	sendData@i+1,w,c
  1575  00173E  0100               	movlb	0	; () banked
  1576  001740  21D6               	addwfc	(_sendStructAddress+1)& (0+255),w,b
  1577  001742  6EDA               	movwf	fsr2h,c
  1578  001744  50DF               	movf	indf2,w,c
  1579  001746  0012               	return		;indir
  1580  001748                     l5937:
  1581  001748  4A2A               	infsnz	sendData@i,f,c
  1582  00174A  2A2B               	incf	sendData@i+1,f,c
  1583  00174C                     l5939:
  1584  00174C  0102               	movlb	2	; () banked
  1585  00174E  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  1586  001750  5C2A               	subwf	sendData@i,w,c
  1587  001752  502B               	movf	sendData@i+1,w,c
  1588  001754  0A80               	xorlw	128
  1589  001756  6E27               	movwf	??_sendData& (0+255),c
  1590  001758  0102               	movlb	2	; () banked
  1591  00175A  51CD               	movf	(_ring_buffer+205)& (0+255),w,b
  1592  00175C  0A80               	xorlw	128
  1593  00175E  5827               	subwfb	??_sendData& (0+255),w,c
  1594  001760  A0D8               	btfss	status,0,c
  1595  001762  D7DD               	goto	l5935
  1596                           
  1597                           ; BSR set to: 2
  1598                           ;FastTransfer.c: 69: }
  1599                           ;FastTransfer.c: 72: serial_write(CS);
  1600                           
  1601                           ; BSR set to: 2
  1602  001764  D801               	call	u6128
  1603  001766  D00B               	goto	l5943
  1604  001768                     u6128:
  1605  001768  0005               	push	
  1606  00176A  6EFA               	movwf	pclath,c
  1607  00176C  5032               	movf	_serial_write,w,c
  1608  00176E  6EFD               	movwf	tosl,c
  1609  001770  5033               	movf	_serial_write+1,w,c
  1610  001772  6EFE               	movwf	tosh,c
  1611  001774  50F8               	movf	tblptru,w,c
  1612  001776  6EFF               	movwf	tosu,c
  1613  001778  50FA               	movf	pclath,w,c
  1614  00177A  5029               	movf	sendData@CS,w,c
  1615  00177C  0012               	return		;indir
  1616  00177E                     l5943:
  1617                           
  1618                           ;FastTransfer.c: 75: crcBufS_put(&crc_buffer, whereToSend, CS, 0);
  1619  00177E  0E28               	movlw	low _crc_buffer
  1620  001780  6E1B               	movwf	crcBufS_put@_this,c
  1621  001782  0E01               	movlw	high _crc_buffer
  1622  001784  6E1C               	movwf	crcBufS_put@_this+1,c
  1623  001786  C028  F01D         	movff	sendData@whereToSend,crcBufS_put@address
  1624  00178A  C029  F01E         	movff	sendData@CS,crcBufS_put@oldCRC
  1625  00178E  0E00               	movlw	0
  1626  001790  6E1F               	movwf	crcBufS_put@status,c
  1627  001792  EC91  F00F         	call	_crcBufS_put
  1628                           
  1629                           ;FastTransfer.c: 78: FastTransfer_buffer_flush(&ring_buffer, 1);
  1630  001796  0E00               	movlw	low _ring_buffer
  1631  001798  6E23               	movwf	FastTransfer_buffer_flush@_this,c
  1632  00179A  0E02               	movlw	high _ring_buffer
  1633  00179C  6E24               	movwf	FastTransfer_buffer_flush@_this+1,c
  1634  00179E  0E00               	movlw	0
  1635  0017A0  6E26               	movwf	FastTransfer_buffer_flush@clearBuffer+1,c
  1636  0017A2  0E01               	movlw	1
  1637  0017A4  6E25               	movwf	FastTransfer_buffer_flush@clearBuffer,c
  1638  0017A6  ECCF  F014         	call	_FastTransfer_buffer_flush	;wreg free
  1639  0017AA  0012               	return		;funcret
  1640  0017AC                     __end_of_sendData:
  1641                           	opt stack 0
  1642                           tosu	equ	0xFFF
  1643                           tosh	equ	0xFFE
  1644                           tosl	equ	0xFFD
  1645                           pclath	equ	0xFFA
  1646                           tblptru	equ	0xFF8
  1647                           tblptrh	equ	0xFF7
  1648                           tblptrl	equ	0xFF6
  1649                           tablat	equ	0xFF5
  1650                           intcon	equ	0xFF2
  1651                           postinc0	equ	0xFEE
  1652                           wreg	equ	0xFE8
  1653                           indf2	equ	0xFDF
  1654                           fsr2h	equ	0xFDA
  1655                           fsr2l	equ	0xFD9
  1656                           status	equ	0xFD8
  1657                           
  1658 ;; *************** function _crcBufS_put *****************
  1659 ;; Defined at:
  1660 ;;		line 321 in file "FastTransfer.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  1663 ;;		 -> crc_buffer(17), 
  1664 ;;  address         1   28[COMRAM] unsigned char 
  1665 ;;  oldCRC          1   29[COMRAM] unsigned char 
  1666 ;;  status          1   30[COMRAM] unsigned char 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;		None
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      void 
  1671 ;; Registers used:
  1672 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1678 ;;      Params:         5       0       0       0       0       0       0
  1679 ;;      Locals:         0       0       0       0       0       0       0
  1680 ;;      Temps:          2       0       0       0       0       0       0
  1681 ;;      Totals:         7       0       0       0       0       0       0
  1682 ;;Total ram usage:        7 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; Hardware stack levels required when called:    4
  1685 ;; This function calls:
  1686 ;;		Nothing
  1687 ;; This function is called by:
  1688 ;;		_sendData
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           	psect	text4
  1693  001F22                     __ptext4:
  1694                           	opt stack 0
  1695  001F22                     _crcBufS_put:
  1696                           	opt stack 23
  1697                           
  1698                           ;FastTransfer.c: 322: _this->buf[_this->head] = address;
  1699                           
  1700                           ;incstack = 0
  1701  001F22  EE20 F00F          	lfsr	2,15
  1702  001F26  501B               	movf	crcBufS_put@_this,w,c
  1703  001F28  26D9               	addwf	fsr2l,f,c
  1704  001F2A  501C               	movf	crcBufS_put@_this+1,w,c
  1705  001F2C  22DA               	addwfc	fsr2h,f,c
  1706  001F2E  CFDE F020          	movff	postinc2,??_crcBufS_put
  1707  001F32  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  1708  001F36  5020               	movf	??_crcBufS_put,w,c
  1709  001F38  241B               	addwf	crcBufS_put@_this,w,c
  1710  001F3A  6ED9               	movwf	fsr2l,c
  1711  001F3C  5021               	movf	??_crcBufS_put+1,w,c
  1712  001F3E  201C               	addwfc	crcBufS_put@_this+1,w,c
  1713  001F40  6EDA               	movwf	fsr2h,c
  1714  001F42  C01D  FFDF         	movff	crcBufS_put@address,indf2
  1715                           
  1716                           ;FastTransfer.c: 323: _this->head++;
  1717  001F46  EE20 F00F          	lfsr	2,15
  1718  001F4A  501B               	movf	crcBufS_put@_this,w,c
  1719  001F4C  26D9               	addwf	fsr2l,f,c
  1720  001F4E  501C               	movf	crcBufS_put@_this+1,w,c
  1721  001F50  22DA               	addwfc	fsr2h,f,c
  1722  001F52  2ADE               	incf	postinc2,f,c
  1723  001F54  0E00               	movlw	0
  1724  001F56  22DD               	addwfc	postdec2,f,c
  1725                           
  1726                           ;FastTransfer.c: 324: _this->buf[_this->head] = oldCRC;
  1727  001F58  EE20 F00F          	lfsr	2,15
  1728  001F5C  501B               	movf	crcBufS_put@_this,w,c
  1729  001F5E  26D9               	addwf	fsr2l,f,c
  1730  001F60  501C               	movf	crcBufS_put@_this+1,w,c
  1731  001F62  22DA               	addwfc	fsr2h,f,c
  1732  001F64  CFDE F020          	movff	postinc2,??_crcBufS_put
  1733  001F68  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  1734  001F6C  5020               	movf	??_crcBufS_put,w,c
  1735  001F6E  241B               	addwf	crcBufS_put@_this,w,c
  1736  001F70  6ED9               	movwf	fsr2l,c
  1737  001F72  5021               	movf	??_crcBufS_put+1,w,c
  1738  001F74  201C               	addwfc	crcBufS_put@_this+1,w,c
  1739  001F76  6EDA               	movwf	fsr2h,c
  1740  001F78  C01E  FFDF         	movff	crcBufS_put@oldCRC,indf2
  1741                           
  1742                           ;FastTransfer.c: 325: _this->head++;
  1743  001F7C  EE20 F00F          	lfsr	2,15
  1744  001F80  501B               	movf	crcBufS_put@_this,w,c
  1745  001F82  26D9               	addwf	fsr2l,f,c
  1746  001F84  501C               	movf	crcBufS_put@_this+1,w,c
  1747  001F86  22DA               	addwfc	fsr2h,f,c
  1748  001F88  2ADE               	incf	postinc2,f,c
  1749  001F8A  0E00               	movlw	0
  1750  001F8C  22DD               	addwfc	postdec2,f,c
  1751                           
  1752                           ;FastTransfer.c: 326: _this->buf[_this->head] = status;
  1753  001F8E  EE20 F00F          	lfsr	2,15
  1754  001F92  501B               	movf	crcBufS_put@_this,w,c
  1755  001F94  26D9               	addwf	fsr2l,f,c
  1756  001F96  501C               	movf	crcBufS_put@_this+1,w,c
  1757  001F98  22DA               	addwfc	fsr2h,f,c
  1758  001F9A  CFDE F020          	movff	postinc2,??_crcBufS_put
  1759  001F9E  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  1760  001FA2  5020               	movf	??_crcBufS_put,w,c
  1761  001FA4  241B               	addwf	crcBufS_put@_this,w,c
  1762  001FA6  6ED9               	movwf	fsr2l,c
  1763  001FA8  5021               	movf	??_crcBufS_put+1,w,c
  1764  001FAA  201C               	addwfc	crcBufS_put@_this+1,w,c
  1765  001FAC  6EDA               	movwf	fsr2h,c
  1766  001FAE  C01F  FFDF         	movff	crcBufS_put@status,indf2
  1767                           
  1768                           ;FastTransfer.c: 327: _this->head++;
  1769  001FB2  EE20 F00F          	lfsr	2,15
  1770  001FB6  501B               	movf	crcBufS_put@_this,w,c
  1771  001FB8  26D9               	addwf	fsr2l,f,c
  1772  001FBA  501C               	movf	crcBufS_put@_this+1,w,c
  1773  001FBC  22DA               	addwfc	fsr2h,f,c
  1774  001FBE  2ADE               	incf	postinc2,f,c
  1775  001FC0  0E00               	movlw	0
  1776  001FC2  22DD               	addwfc	postdec2,f,c
  1777                           
  1778                           ;FastTransfer.c: 328: if (_this->head >= (5 * 3)) {
  1779  001FC4  EE20 F00F          	lfsr	2,15
  1780  001FC8  501B               	movf	crcBufS_put@_this,w,c
  1781  001FCA  26D9               	addwf	fsr2l,f,c
  1782  001FCC  501C               	movf	crcBufS_put@_this+1,w,c
  1783  001FCE  22DA               	addwfc	fsr2h,f,c
  1784  001FD0  0E01               	movlw	1
  1785  001FD2  BEDB               	btfsc	plusw2,7,c
  1786  001FD4  0012               	return	
  1787  001FD6  0E01               	movlw	1
  1788  001FD8  50DB               	movf	plusw2,w,c
  1789  001FDA  E104               	bnz	u5730
  1790  001FDC  0E0F               	movlw	15
  1791  001FDE  5CDE               	subwf	postinc2,w,c
  1792  001FE0  A0D8               	btfss	status,0,c
  1793  001FE2  0012               	return	
  1794  001FE4                     u5730:
  1795                           
  1796                           ;FastTransfer.c: 329: _this->head = 0;
  1797  001FE4  EE20 F00F          	lfsr	2,15
  1798  001FE8  501B               	movf	crcBufS_put@_this,w,c
  1799  001FEA  26D9               	addwf	fsr2l,f,c
  1800  001FEC  501C               	movf	crcBufS_put@_this+1,w,c
  1801  001FEE  22DA               	addwfc	fsr2h,f,c
  1802  001FF0  0E00               	movlw	0
  1803  001FF2  6EDE               	movwf	postinc2,c
  1804  001FF4  0E00               	movlw	0
  1805  001FF6  6EDD               	movwf	postdec2,c
  1806  001FF8  0012               	return	
  1807  001FFA                     __end_of_crcBufS_put:
  1808                           	opt stack 0
  1809                           tosu	equ	0xFFF
  1810                           tosh	equ	0xFFE
  1811                           tosl	equ	0xFFD
  1812                           pclath	equ	0xFFA
  1813                           tblptru	equ	0xFF8
  1814                           tblptrh	equ	0xFF7
  1815                           tblptrl	equ	0xFF6
  1816                           tablat	equ	0xFF5
  1817                           intcon	equ	0xFF2
  1818                           postinc0	equ	0xFEE
  1819                           wreg	equ	0xFE8
  1820                           indf2	equ	0xFDF
  1821                           postinc2	equ	0xFDE
  1822                           postdec2	equ	0xFDD
  1823                           plusw2	equ	0xFDB
  1824                           fsr2h	equ	0xFDA
  1825                           fsr2l	equ	0xFD9
  1826                           status	equ	0xFD8
  1827                           
  1828 ;; *************** function _FastTransfer_buffer_flush *****************
  1829 ;; Defined at:
  1830 ;;		line 261 in file "FastTransfer.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;  _this           2   34[COMRAM] PTR struct ringBufS
  1833 ;;		 -> ring_buffer(206), 
  1834 ;;  clearBuffer     2   36[COMRAM] const int 
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;		None
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  1    wreg      void 
  1839 ;; Registers used:
  1840 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1846 ;;      Params:         4       0       0       0       0       0       0
  1847 ;;      Locals:         0       0       0       0       0       0       0
  1848 ;;      Temps:          0       0       0       0       0       0       0
  1849 ;;      Totals:         4       0       0       0       0       0       0
  1850 ;;Total ram usage:        4 bytes
  1851 ;; Hardware stack levels used:    1
  1852 ;; Hardware stack levels required when called:    5
  1853 ;; This function calls:
  1854 ;;		_memset
  1855 ;; This function is called by:
  1856 ;;		_sendData
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           	psect	text5
  1861  00299E                     __ptext5:
  1862                           	opt stack 0
  1863  00299E                     _FastTransfer_buffer_flush:
  1864                           	opt stack 22
  1865                           
  1866                           ;FastTransfer.c: 262: _this->count = 0;
  1867                           
  1868                           ;incstack = 0
  1869  00299E  EE20 F0CC          	lfsr	2,204
  1870  0029A2  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  1871  0029A4  26D9               	addwf	fsr2l,f,c
  1872  0029A6  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  1873  0029A8  22DA               	addwfc	fsr2h,f,c
  1874  0029AA  0E00               	movlw	0
  1875  0029AC  6EDE               	movwf	postinc2,c
  1876  0029AE  0E00               	movlw	0
  1877  0029B0  6EDD               	movwf	postdec2,c
  1878                           
  1879                           ;FastTransfer.c: 263: _this->head = 0;
  1880  0029B2  EE20 F0C8          	lfsr	2,200
  1881  0029B6  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  1882  0029B8  26D9               	addwf	fsr2l,f,c
  1883  0029BA  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  1884  0029BC  22DA               	addwfc	fsr2h,f,c
  1885  0029BE  0E00               	movlw	0
  1886  0029C0  6EDE               	movwf	postinc2,c
  1887  0029C2  0E00               	movlw	0
  1888  0029C4  6EDD               	movwf	postdec2,c
  1889                           
  1890                           ;FastTransfer.c: 264: _this->tail = 0;
  1891  0029C6  EE20 F0CA          	lfsr	2,202
  1892  0029CA  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  1893  0029CC  26D9               	addwf	fsr2l,f,c
  1894  0029CE  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  1895  0029D0  22DA               	addwfc	fsr2h,f,c
  1896  0029D2  0E00               	movlw	0
  1897  0029D4  6EDE               	movwf	postinc2,c
  1898  0029D6  0E00               	movlw	0
  1899  0029D8  6EDD               	movwf	postdec2,c
  1900                           
  1901                           ;FastTransfer.c: 265: if (clearBuffer) {
  1902  0029DA  5025               	movf	FastTransfer_buffer_flush@clearBuffer,w,c
  1903  0029DC  1026               	iorwf	FastTransfer_buffer_flush@clearBuffer+1,w,c
  1904  0029DE  B4D8               	btfsc	status,2,c
  1905  0029E0  0012               	return	
  1906                           
  1907                           ;FastTransfer.c: 266: memset(_this->buf, 0, sizeof (_this->buf));
  1908  0029E2  C023  F01B         	movff	FastTransfer_buffer_flush@_this,memset@p1
  1909  0029E6  C024  F01C         	movff	FastTransfer_buffer_flush@_this+1,memset@p1+1
  1910  0029EA  0E00               	movlw	0
  1911  0029EC  6E1E               	movwf	memset@c+1,c
  1912  0029EE  0E00               	movlw	0
  1913  0029F0  6E1D               	movwf	memset@c,c
  1914  0029F2  0E00               	movlw	0
  1915  0029F4  6E20               	movwf	memset@n+1,c
  1916  0029F6  0EC8               	movlw	200
  1917  0029F8  6E1F               	movwf	memset@n,c
  1918  0029FA  ECDA  F016         	call	_memset	;wreg free
  1919  0029FE  0012               	return	
  1920  002A00                     __end_of_FastTransfer_buffer_flush:
  1921                           	opt stack 0
  1922                           tosu	equ	0xFFF
  1923                           tosh	equ	0xFFE
  1924                           tosl	equ	0xFFD
  1925                           pclath	equ	0xFFA
  1926                           tblptru	equ	0xFF8
  1927                           tblptrh	equ	0xFF7
  1928                           tblptrl	equ	0xFF6
  1929                           tablat	equ	0xFF5
  1930                           intcon	equ	0xFF2
  1931                           postinc0	equ	0xFEE
  1932                           wreg	equ	0xFE8
  1933                           indf2	equ	0xFDF
  1934                           postinc2	equ	0xFDE
  1935                           postdec2	equ	0xFDD
  1936                           plusw2	equ	0xFDB
  1937                           fsr2h	equ	0xFDA
  1938                           fsr2l	equ	0xFD9
  1939                           status	equ	0xFD8
  1940                           
  1941 ;; *************** function _buttonsCollector *****************
  1942 ;; Defined at:
  1943 ;;		line 52 in file "Communications.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;		None
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;  i               2   39[COMRAM] int 
  1948 ;;  sendVal         2   37[COMRAM] unsigned int 
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  2   32[COMRAM] unsigned int 
  1951 ;; Registers used:
  1952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1958 ;;      Params:         2       0       0       0       0       0       0
  1959 ;;      Locals:         4       0       0       0       0       0       0
  1960 ;;      Temps:          3       0       0       0       0       0       0
  1961 ;;      Totals:         9       0       0       0       0       0       0
  1962 ;;Total ram usage:        9 bytes
  1963 ;; Hardware stack levels used:    1
  1964 ;; Hardware stack levels required when called:    5
  1965 ;; This function calls:
  1966 ;;		_GetButtonState
  1967 ;; This function is called by:
  1968 ;;		_respondECU
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           	psect	text6
  1973  00292E                     __ptext6:
  1974                           	opt stack 0
  1975  00292E                     _buttonsCollector:
  1976                           	opt stack 23
  1977                           
  1978                           ;Communications.c: 53: unsigned int sendVal = 0;
  1979                           
  1980                           ;incstack = 0
  1981  00292E  0E00               	movlw	0
  1982  002930  6E27               	movwf	buttonsCollector@sendVal+1,c
  1983  002932  0E00               	movlw	0
  1984  002934  6E26               	movwf	buttonsCollector@sendVal,c
  1985                           
  1986                           ;Communications.c: 54: int i = 0;
  1987  002936  0E00               	movlw	0
  1988  002938  6E29               	movwf	buttonsCollector@i+1,c
  1989  00293A  0E00               	movlw	0
  1990  00293C  6E28               	movwf	buttonsCollector@i,c
  1991                           
  1992                           ;Communications.c: 55: for (i = 0; i < 8; i++) {
  1993  00293E  0E00               	movlw	0
  1994  002940  6E29               	movwf	buttonsCollector@i+1,c
  1995  002942  0E00               	movlw	0
  1996  002944  6E28               	movwf	buttonsCollector@i,c
  1997  002946  BE29               	btfsc	buttonsCollector@i+1,7,c
  1998  002948  D006               	goto	l5915
  1999  00294A  5029               	movf	buttonsCollector@i+1,w,c
  2000  00294C  E123               	bnz	l932
  2001  00294E  0E08               	movlw	8
  2002  002950  5C28               	subwf	buttonsCollector@i,w,c
  2003  002952  B0D8               	btfsc	status,0,c
  2004  002954  D01F               	goto	l932
  2005  002956                     l5915:
  2006                           
  2007                           ;Communications.c: 56: sendVal = sendVal | ((GetButtonState(i)&0x01) << i);
  2008  002956  C028  F023         	movff	buttonsCollector@i,??_buttonsCollector
  2009  00295A  C028  F01B         	movff	buttonsCollector@i,GetButtonState@btnnum
  2010  00295E  C029  F01C         	movff	buttonsCollector@i+1,GetButtonState@btnnum+1
  2011  002962  EC2F  F017         	call	_GetButtonState	;wreg free
  2012  002966  0B01               	andlw	1
  2013  002968  6E24               	movwf	(??_buttonsCollector+1)& (0+255),c
  2014  00296A  6A25               	clrf	(??_buttonsCollector+2)& (0+255),c
  2015  00296C  2A23               	incf	??_buttonsCollector,f,c
  2016  00296E  D003               	goto	u6034
  2017  002970                     u6035:
  2018  002970  90D8               	bcf	status,0,c
  2019  002972  3624               	rlcf	??_buttonsCollector+1,f,c
  2020  002974  3625               	rlcf	??_buttonsCollector+2,f,c
  2021  002976                     u6034:
  2022  002976  2E23               	decfsz	??_buttonsCollector,f,c
  2023  002978  D7FB               	goto	u6035
  2024  00297A  5026               	movf	buttonsCollector@sendVal,w,c
  2025  00297C  1024               	iorwf	??_buttonsCollector+1,w,c
  2026  00297E  6E26               	movwf	buttonsCollector@sendVal,c
  2027  002980  5027               	movf	buttonsCollector@sendVal+1,w,c
  2028  002982  1025               	iorwf	??_buttonsCollector+2,w,c
  2029  002984  6E27               	movwf	buttonsCollector@sendVal+1,c
  2030  002986  4A28               	infsnz	buttonsCollector@i,f,c
  2031  002988  2A29               	incf	buttonsCollector@i+1,f,c
  2032  00298A  BE29               	btfsc	buttonsCollector@i+1,7,c
  2033  00298C  D7E4               	goto	l5915
  2034  00298E  5029               	movf	buttonsCollector@i+1,w,c
  2035  002990  E101               	bnz	u6040
  2036  002992  D7DD               	goto	L1
  2037  002994                     u6040:
  2038  002994                     l932:
  2039                           
  2040                           ;Communications.c: 57: }
  2041                           ;Communications.c: 58: return sendVal;
  2042  002994  C026  F021         	movff	buttonsCollector@sendVal,?_buttonsCollector
  2043  002998  C027  F022         	movff	buttonsCollector@sendVal+1,?_buttonsCollector+1
  2044  00299C  0012               	return		;funcret
  2045  00299E                     __end_of_buttonsCollector:
  2046                           	opt stack 0
  2047                           tosu	equ	0xFFF
  2048                           tosh	equ	0xFFE
  2049                           tosl	equ	0xFFD
  2050                           pclath	equ	0xFFA
  2051                           tblptru	equ	0xFF8
  2052                           tblptrh	equ	0xFF7
  2053                           tblptrl	equ	0xFF6
  2054                           tablat	equ	0xFF5
  2055                           intcon	equ	0xFF2
  2056                           postinc0	equ	0xFEE
  2057                           wreg	equ	0xFE8
  2058                           indf2	equ	0xFDF
  2059                           postinc2	equ	0xFDE
  2060                           postdec2	equ	0xFDD
  2061                           plusw2	equ	0xFDB
  2062                           fsr2h	equ	0xFDA
  2063                           fsr2l	equ	0xFD9
  2064                           status	equ	0xFD8
  2065                           
  2066 ;; *************** function _GetButtonState *****************
  2067 ;; Defined at:
  2068 ;;		line 184 in file "IO.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;  btnnum          2   26[COMRAM] int 
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;		None
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  1    wreg      unsigned char 
  2075 ;; Registers used:
  2076 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2082 ;;      Params:         2       0       0       0       0       0       0
  2083 ;;      Locals:         0       0       0       0       0       0       0
  2084 ;;      Temps:          4       0       0       0       0       0       0
  2085 ;;      Totals:         6       0       0       0       0       0       0
  2086 ;;Total ram usage:        6 bytes
  2087 ;; Hardware stack levels used:    1
  2088 ;; Hardware stack levels required when called:    4
  2089 ;; This function calls:
  2090 ;;		Nothing
  2091 ;; This function is called by:
  2092 ;;		_buttonsCollector
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           	psect	text7
  2097  002E5E                     __ptext7:
  2098                           	opt stack 0
  2099  002E5E                     _GetButtonState:
  2100                           	opt stack 23
  2101                           
  2102                           ;IO.c: 185: return butnarray[btnnum - 1];
  2103                           
  2104                           ;incstack = 0
  2105  002E5E  0EFF               	movlw	255
  2106  002E60  6E1D               	movwf	??_GetButtonState& (0+255),c
  2107  002E62  0EFF               	movlw	255
  2108  002E64  6E1E               	movwf	(??_GetButtonState+1)& (0+255),c
  2109  002E66  C01B  F01F         	movff	GetButtonState@btnnum,??_GetButtonState+2
  2110  002E6A  C01C  F020         	movff	GetButtonState@btnnum+1,??_GetButtonState+3
  2111  002E6E  501D               	movf	??_GetButtonState,w,c
  2112  002E70  261F               	addwf	??_GetButtonState+2,f,c
  2113  002E72  501E               	movf	??_GetButtonState+1,w,c
  2114  002E74  2220               	addwfc	??_GetButtonState+3,f,c
  2115  002E76  0EB0               	movlw	low _butnarray
  2116  002E78  241F               	addwf	??_GetButtonState+2,w,c
  2117  002E7A  6ED9               	movwf	fsr2l,c
  2118  002E7C  0E00               	movlw	high _butnarray
  2119  002E7E  2020               	addwfc	??_GetButtonState+3,w,c
  2120  002E80  6EDA               	movwf	fsr2h,c
  2121  002E82  50DF               	movf	indf2,w,c
  2122  002E84  0012               	return	
  2123  002E86                     __end_of_GetButtonState:
  2124                           	opt stack 0
  2125                           tosu	equ	0xFFF
  2126                           tosh	equ	0xFFE
  2127                           tosl	equ	0xFFD
  2128                           pclath	equ	0xFFA
  2129                           tblptru	equ	0xFF8
  2130                           tblptrh	equ	0xFF7
  2131                           tblptrl	equ	0xFF6
  2132                           tablat	equ	0xFF5
  2133                           intcon	equ	0xFF2
  2134                           postinc0	equ	0xFEE
  2135                           wreg	equ	0xFE8
  2136                           indf2	equ	0xFDF
  2137                           postinc2	equ	0xFDE
  2138                           postdec2	equ	0xFDD
  2139                           plusw2	equ	0xFDB
  2140                           fsr2h	equ	0xFDA
  2141                           fsr2l	equ	0xFD9
  2142                           status	equ	0xFD8
  2143                           
  2144 ;; *************** function _ToSend *****************
  2145 ;; Defined at:
  2146 ;;		line 216 in file "FastTransfer.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;  where           1    wreg     unsigned char 
  2149 ;;  what            2   41[COMRAM] unsigned int 
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;  where           1    0[BANK0 ] unsigned char 
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  1    wreg      void 
  2154 ;; Registers used:
  2155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2161 ;;      Params:         2       0       0       0       0       0       0
  2162 ;;      Locals:         0       1       0       0       0       0       0
  2163 ;;      Temps:          0       0       0       0       0       0       0
  2164 ;;      Totals:         2       1       0       0       0       0       0
  2165 ;;Total ram usage:        3 bytes
  2166 ;; Hardware stack levels used:    1
  2167 ;; Hardware stack levels required when called:    6
  2168 ;; This function calls:
  2169 ;;		_FastTransfer_buffer_put
  2170 ;; This function is called by:
  2171 ;;		_respondECU
  2172 ;; This function uses a non-reentrant model
  2173 ;;
  2174                           
  2175                           	psect	text8
  2176  002EF0                     __ptext8:
  2177                           	opt stack 0
  2178  002EF0                     _ToSend:
  2179                           	opt stack 22
  2180                           
  2181                           ;incstack = 0
  2182                           ;ToSend@where stored from wreg
  2183  002EF0  0100               	movlb	0	; () banked
  2184  002EF2  6FEE               	movwf	ToSend@where& (0+255),b
  2185                           
  2186                           ;FastTransfer.c: 217: FastTransfer_buffer_put(&ring_buffer, where, what);
  2187  002EF4  0E00               	movlw	low _ring_buffer
  2188  002EF6  6E21               	movwf	FastTransfer_buffer_put@_this,c
  2189  002EF8  0E02               	movlw	high _ring_buffer
  2190  002EFA  6E22               	movwf	FastTransfer_buffer_put@_this+1,c
  2191  002EFC  C0EE  F023         	movff	ToSend@where,FastTransfer_buffer_put@towhere
  2192  002F00  C02A  F024         	movff	ToSend@what,FastTransfer_buffer_put@towhat
  2193  002F04  C02B  F025         	movff	ToSend@what+1,FastTransfer_buffer_put@towhat+1
  2194  002F08  EC39  F009         	call	_FastTransfer_buffer_put	;wreg free
  2195  002F0C  0012               	return		;funcret
  2196  002F0E                     __end_of_ToSend:
  2197                           	opt stack 0
  2198                           tosu	equ	0xFFF
  2199                           tosh	equ	0xFFE
  2200                           tosl	equ	0xFFD
  2201                           pclath	equ	0xFFA
  2202                           tblptru	equ	0xFF8
  2203                           tblptrh	equ	0xFF7
  2204                           tblptrl	equ	0xFF6
  2205                           tablat	equ	0xFF5
  2206                           intcon	equ	0xFF2
  2207                           postinc0	equ	0xFEE
  2208                           wreg	equ	0xFE8
  2209                           indf2	equ	0xFDF
  2210                           postinc2	equ	0xFDE
  2211                           postdec2	equ	0xFDD
  2212                           plusw2	equ	0xFDB
  2213                           fsr2h	equ	0xFDA
  2214                           fsr2l	equ	0xFD9
  2215                           status	equ	0xFD8
  2216                           
  2217 ;; *************** function _FastTransfer_buffer_put *****************
  2218 ;; Defined at:
  2219 ;;		line 223 in file "FastTransfer.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;  _this           2   32[COMRAM] PTR struct ringBufS
  2222 ;;		 -> ring_buffer(206), 
  2223 ;;  towhere         1   34[COMRAM] unsigned char 
  2224 ;;  towhat          2   35[COMRAM] unsigned int 
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;		None
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  1    wreg      void 
  2229 ;; Registers used:
  2230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2236 ;;      Params:         5       0       0       0       0       0       0
  2237 ;;      Locals:         0       0       0       0       0       0       0
  2238 ;;      Temps:          2       0       0       0       0       0       0
  2239 ;;      Totals:         7       0       0       0       0       0       0
  2240 ;;Total ram usage:        7 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; Hardware stack levels required when called:    5
  2243 ;; This function calls:
  2244 ;;		_FastTransfer_buffer_modulo_inc
  2245 ;; This function is called by:
  2246 ;;		_ToSend
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           	psect	text9
  2251  001272                     __ptext9:
  2252                           	opt stack 0
  2253  001272                     _FastTransfer_buffer_put:
  2254                           	opt stack 22
  2255                           
  2256                           ;FastTransfer.c: 225: group.integer = towhat;
  2257                           
  2258                           ;incstack = 0
  2259  001272  C024  F02C         	movff	FastTransfer_buffer_put@towhat,_group
  2260  001276  C025  F02D         	movff	FastTransfer_buffer_put@towhat+1,_group+1
  2261                           
  2262                           ;FastTransfer.c: 227: if (_this->count < (200 - 3)) {
  2263  00127A  EE20 F0CC          	lfsr	2,204
  2264  00127E  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2265  001280  26D9               	addwf	fsr2l,f,c
  2266  001282  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2267  001284  22DA               	addwfc	fsr2h,f,c
  2268  001286  0E01               	movlw	1
  2269  001288  BEDB               	btfsc	plusw2,7,c
  2270  00128A  D007               	goto	l5673
  2271  00128C  0E01               	movlw	1
  2272  00128E  50DB               	movf	plusw2,w,c
  2273  001290  E103               	bnz	u5751
  2274  001292  0EC5               	movlw	197
  2275  001294  5CDE               	subwf	postinc2,w,c
  2276  001296  B0D8               	btfsc	status,0,c
  2277  001298                     u5751:
  2278  001298  0012               	return	
  2279  00129A                     l5673:
  2280                           
  2281                           ;FastTransfer.c: 228: _this->buf[_this->head] = towhere;
  2282  00129A  EE20 F0C8          	lfsr	2,200
  2283  00129E  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2284  0012A0  26D9               	addwf	fsr2l,f,c
  2285  0012A2  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2286  0012A4  22DA               	addwfc	fsr2h,f,c
  2287  0012A6  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  2288  0012AA  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  2289  0012AE  5026               	movf	??_FastTransfer_buffer_put,w,c
  2290  0012B0  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  2291  0012B2  6ED9               	movwf	fsr2l,c
  2292  0012B4  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  2293  0012B6  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  2294  0012B8  6EDA               	movwf	fsr2h,c
  2295  0012BA  C023  FFDF         	movff	FastTransfer_buffer_put@towhere,indf2
  2296                           
  2297                           ;FastTransfer.c: 229: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  2298  0012BE  EE20 F0C8          	lfsr	2,200
  2299  0012C2  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2300  0012C4  26D9               	addwf	fsr2l,f,c
  2301  0012C6  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2302  0012C8  22DA               	addwfc	fsr2h,f,c
  2303  0012CA  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  2304  0012CE  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  2305  0012D2  0E00               	movlw	0
  2306  0012D4  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  2307  0012D6  0EC8               	movlw	200
  2308  0012D8  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  2309  0012DA  ECF0  F016         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  2310  0012DE  EE20 F0C8          	lfsr	2,200
  2311  0012E2  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2312  0012E4  26D9               	addwf	fsr2l,f,c
  2313  0012E6  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2314  0012E8  22DA               	addwfc	fsr2h,f,c
  2315  0012EA  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  2316  0012EE  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  2317                           
  2318                           ;FastTransfer.c: 230: ++_this->count;
  2319  0012F2  EE20 F0CC          	lfsr	2,204
  2320  0012F6  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2321  0012F8  26D9               	addwf	fsr2l,f,c
  2322  0012FA  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2323  0012FC  22DA               	addwfc	fsr2h,f,c
  2324  0012FE  2ADE               	incf	postinc2,f,c
  2325  001300  0E00               	movlw	0
  2326  001302  22DD               	addwfc	postdec2,f,c
  2327                           
  2328                           ;FastTransfer.c: 231: _this->buf[_this->head] = group.parts[0];
  2329  001304  EE20 F0C8          	lfsr	2,200
  2330  001308  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2331  00130A  26D9               	addwf	fsr2l,f,c
  2332  00130C  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2333  00130E  22DA               	addwfc	fsr2h,f,c
  2334  001310  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  2335  001314  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  2336  001318  5026               	movf	??_FastTransfer_buffer_put,w,c
  2337  00131A  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  2338  00131C  6ED9               	movwf	fsr2l,c
  2339  00131E  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  2340  001320  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  2341  001322  6EDA               	movwf	fsr2h,c
  2342  001324  C02C  FFDF         	movff	_group,indf2
  2343                           
  2344                           ;FastTransfer.c: 232: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  2345  001328  EE20 F0C8          	lfsr	2,200
  2346  00132C  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2347  00132E  26D9               	addwf	fsr2l,f,c
  2348  001330  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2349  001332  22DA               	addwfc	fsr2h,f,c
  2350  001334  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  2351  001338  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  2352  00133C  0E00               	movlw	0
  2353  00133E  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  2354  001340  0EC8               	movlw	200
  2355  001342  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  2356  001344  ECF0  F016         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  2357  001348  EE20 F0C8          	lfsr	2,200
  2358  00134C  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2359  00134E  26D9               	addwf	fsr2l,f,c
  2360  001350  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2361  001352  22DA               	addwfc	fsr2h,f,c
  2362  001354  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  2363  001358  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  2364                           
  2365                           ;FastTransfer.c: 233: ++_this->count;
  2366  00135C  EE20 F0CC          	lfsr	2,204
  2367  001360  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2368  001362  26D9               	addwf	fsr2l,f,c
  2369  001364  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2370  001366  22DA               	addwfc	fsr2h,f,c
  2371  001368  2ADE               	incf	postinc2,f,c
  2372  00136A  0E00               	movlw	0
  2373  00136C  22DD               	addwfc	postdec2,f,c
  2374                           
  2375                           ;FastTransfer.c: 234: _this->buf[_this->head] = group.parts[1];
  2376  00136E  EE20 F0C8          	lfsr	2,200
  2377  001372  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2378  001374  26D9               	addwf	fsr2l,f,c
  2379  001376  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2380  001378  22DA               	addwfc	fsr2h,f,c
  2381  00137A  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  2382  00137E  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  2383  001382  5026               	movf	??_FastTransfer_buffer_put,w,c
  2384  001384  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  2385  001386  6ED9               	movwf	fsr2l,c
  2386  001388  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  2387  00138A  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  2388  00138C  6EDA               	movwf	fsr2h,c
  2389  00138E  C02D  FFDF         	movff	_group+1,indf2
  2390                           
  2391                           ;FastTransfer.c: 235: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  2392  001392  EE20 F0C8          	lfsr	2,200
  2393  001396  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2394  001398  26D9               	addwf	fsr2l,f,c
  2395  00139A  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2396  00139C  22DA               	addwfc	fsr2h,f,c
  2397  00139E  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  2398  0013A2  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  2399  0013A6  0E00               	movlw	0
  2400  0013A8  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  2401  0013AA  0EC8               	movlw	200
  2402  0013AC  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  2403  0013AE  ECF0  F016         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  2404  0013B2  EE20 F0C8          	lfsr	2,200
  2405  0013B6  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2406  0013B8  26D9               	addwf	fsr2l,f,c
  2407  0013BA  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2408  0013BC  22DA               	addwfc	fsr2h,f,c
  2409  0013BE  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  2410  0013C2  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  2411                           
  2412                           ;FastTransfer.c: 236: ++_this->count;
  2413  0013C6  EE20 F0CC          	lfsr	2,204
  2414  0013CA  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2415  0013CC  26D9               	addwf	fsr2l,f,c
  2416  0013CE  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2417  0013D0  22DA               	addwfc	fsr2h,f,c
  2418  0013D2  2ADE               	incf	postinc2,f,c
  2419  0013D4  0E00               	movlw	0
  2420  0013D6  22DD               	addwfc	postdec2,f,c
  2421  0013D8  0012               	return	
  2422  0013DA                     __end_of_FastTransfer_buffer_put:
  2423                           	opt stack 0
  2424                           tosu	equ	0xFFF
  2425                           tosh	equ	0xFFE
  2426                           tosl	equ	0xFFD
  2427                           pclath	equ	0xFFA
  2428                           tblptru	equ	0xFF8
  2429                           tblptrh	equ	0xFF7
  2430                           tblptrl	equ	0xFF6
  2431                           tablat	equ	0xFF5
  2432                           intcon	equ	0xFF2
  2433                           postinc0	equ	0xFEE
  2434                           wreg	equ	0xFE8
  2435                           indf2	equ	0xFDF
  2436                           postinc2	equ	0xFDE
  2437                           postdec2	equ	0xFDD
  2438                           plusw2	equ	0xFDB
  2439                           fsr2h	equ	0xFDA
  2440                           fsr2l	equ	0xFD9
  2441                           status	equ	0xFD8
  2442                           
  2443 ;; *************** function _FastTransfer_buffer_modulo_inc *****************
  2444 ;; Defined at:
  2445 ;;		line 273 in file "FastTransfer.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;  value           2   26[COMRAM] const unsigned int 
  2448 ;;  modulus         2   28[COMRAM] const unsigned int 
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;  my_value        2   30[COMRAM] unsigned int 
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  2   26[COMRAM] unsigned int 
  2453 ;; Registers used:
  2454 ;;		wreg, status,2, status,0
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2460 ;;      Params:         4       0       0       0       0       0       0
  2461 ;;      Locals:         2       0       0       0       0       0       0
  2462 ;;      Temps:          0       0       0       0       0       0       0
  2463 ;;      Totals:         6       0       0       0       0       0       0
  2464 ;;Total ram usage:        6 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; Hardware stack levels required when called:    4
  2467 ;; This function calls:
  2468 ;;		Nothing
  2469 ;; This function is called by:
  2470 ;;		_FastTransfer_buffer_put
  2471 ;;		_FastTransfer_buffer_get
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           	psect	text10
  2476  002DE0                     __ptext10:
  2477                           	opt stack 0
  2478  002DE0                     _FastTransfer_buffer_modulo_inc:
  2479                           	opt stack 22
  2480                           
  2481                           ;FastTransfer.c: 274: unsigned int my_value = value + 1;
  2482                           
  2483                           ;incstack = 0
  2484  002DE0  0E01               	movlw	1
  2485  002DE2  241B               	addwf	FastTransfer_buffer_modulo_inc@value,w,c
  2486  002DE4  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  2487  002DE6  0E00               	movlw	0
  2488  002DE8  201C               	addwfc	FastTransfer_buffer_modulo_inc@value+1,w,c
  2489  002DEA  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  2490                           
  2491                           ;FastTransfer.c: 275: if (my_value >= modulus) {
  2492  002DEC  501D               	movf	FastTransfer_buffer_modulo_inc@modulus,w,c
  2493  002DEE  5C1F               	subwf	FastTransfer_buffer_modulo_inc@my_value,w,c
  2494  002DF0  501E               	movf	FastTransfer_buffer_modulo_inc@modulus+1,w,c
  2495  002DF2  5820               	subwfb	FastTransfer_buffer_modulo_inc@my_value+1,w,c
  2496  002DF4  A0D8               	btfss	status,0,c
  2497  002DF6  D004               	goto	l5499
  2498                           
  2499                           ;FastTransfer.c: 276: my_value = 0;
  2500  002DF8  0E00               	movlw	0
  2501  002DFA  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  2502  002DFC  0E00               	movlw	0
  2503  002DFE  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  2504  002E00                     l5499:
  2505                           
  2506                           ;FastTransfer.c: 277: }
  2507                           ;FastTransfer.c: 278: return (my_value);
  2508  002E00  C01F  F01B         	movff	FastTransfer_buffer_modulo_inc@my_value,?_FastTransfer_buffer_modulo_inc
  2509  002E04  C020  F01C         	movff	FastTransfer_buffer_modulo_inc@my_value+1,?_FastTransfer_buffer_modulo_inc+1
  2510  002E08  0012               	return	
  2511  002E0A                     __end_of_FastTransfer_buffer_modulo_inc:
  2512                           	opt stack 0
  2513                           tosu	equ	0xFFF
  2514                           tosh	equ	0xFFE
  2515                           tosl	equ	0xFFD
  2516                           pclath	equ	0xFFA
  2517                           tblptru	equ	0xFF8
  2518                           tblptrh	equ	0xFF7
  2519                           tblptrl	equ	0xFF6
  2520                           tablat	equ	0xFF5
  2521                           intcon	equ	0xFF2
  2522                           postinc0	equ	0xFEE
  2523                           wreg	equ	0xFE8
  2524                           indf2	equ	0xFDF
  2525                           postinc2	equ	0xFDE
  2526                           postdec2	equ	0xFDD
  2527                           plusw2	equ	0xFDB
  2528                           fsr2h	equ	0xFDA
  2529                           fsr2l	equ	0xFD9
  2530                           status	equ	0xFD8
  2531                           
  2532 ;; *************** function _Delay *****************
  2533 ;; Defined at:
  2534 ;;		line 117 in file "main.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;  wait            2   26[COMRAM] int 
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;  x               2   29[COMRAM] int 
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  1    wreg      void 
  2541 ;; Registers used:
  2542 ;;		wreg, status,2, status,0
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2548 ;;      Params:         2       0       0       0       0       0       0
  2549 ;;      Locals:         2       0       0       0       0       0       0
  2550 ;;      Temps:          1       0       0       0       0       0       0
  2551 ;;      Totals:         5       0       0       0       0       0       0
  2552 ;;Total ram usage:        5 bytes
  2553 ;; Hardware stack levels used:    1
  2554 ;; Hardware stack levels required when called:    4
  2555 ;; This function calls:
  2556 ;;		Nothing
  2557 ;; This function is called by:
  2558 ;;		_respondECU
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           	psect	text11
  2563  002D20                     __ptext11:
  2564                           	opt stack 0
  2565  002D20                     _Delay:
  2566                           	opt stack 24
  2567                           
  2568                           ;main.c: 118: int x;
  2569                           ;main.c: 119: for (x = 0; x < wait; x++) {
  2570                           
  2571                           ;incstack = 0
  2572  002D20  0E00               	movlw	0
  2573  002D22  6E1F               	movwf	Delay@x+1,c
  2574  002D24  0E00               	movlw	0
  2575  002D26  6E1E               	movwf	Delay@x,c
  2576  002D28  D00A               	goto	l601
  2577  002D2A                     l5761:
  2578                           
  2579                           ;main.c: 120: _delay((unsigned long)((1)*(16000000/4000.0)));
  2580  002D2A  0E06               	movlw	6
  2581  002D2C  6E1D               	movwf	??_Delay& (0+255),c
  2582  002D2E  0E30               	movlw	48
  2583  002D30                     u7937:
  2584  002D30  2EE8               	decfsz	wreg,f,c
  2585  002D32  D7FE               	goto	u7937
  2586  002D34  2E1D               	decfsz	??_Delay& (0+255),f,c
  2587  002D36  D7FC               	goto	u7937
  2588  002D38  D000               	nop2	
  2589  002D3A  4A1E               	infsnz	Delay@x,f,c
  2590  002D3C  2A1F               	incf	Delay@x+1,f,c
  2591  002D3E                     l601:
  2592  002D3E  501B               	movf	Delay@wait,w,c
  2593  002D40  5C1E               	subwf	Delay@x,w,c
  2594  002D42  501F               	movf	Delay@x+1,w,c
  2595  002D44  0A80               	xorlw	128
  2596  002D46  6E1D               	movwf	??_Delay& (0+255),c
  2597  002D48  501C               	movf	Delay@wait+1,w,c
  2598  002D4A  0A80               	xorlw	128
  2599  002D4C  581D               	subwfb	??_Delay& (0+255),w,c
  2600  002D4E  B0D8               	btfsc	status,0,c
  2601  002D50  0012               	return	
  2602  002D52  D7EB               	goto	l5761
  2603  002D54                     __end_of_Delay:
  2604                           	opt stack 0
  2605                           tosu	equ	0xFFF
  2606                           tosh	equ	0xFFE
  2607                           tosl	equ	0xFFD
  2608                           pclath	equ	0xFFA
  2609                           tblptru	equ	0xFF8
  2610                           tblptrh	equ	0xFF7
  2611                           tblptrl	equ	0xFF6
  2612                           tablat	equ	0xFF5
  2613                           intcon	equ	0xFF2
  2614                           postinc0	equ	0xFEE
  2615                           wreg	equ	0xFE8
  2616                           indf2	equ	0xFDF
  2617                           postinc2	equ	0xFDE
  2618                           postdec2	equ	0xFDD
  2619                           plusw2	equ	0xFDB
  2620                           fsr2h	equ	0xFDA
  2621                           fsr2l	equ	0xFD9
  2622                           status	equ	0xFD8
  2623                           
  2624 ;; *************** function _receiveData *****************
  2625 ;; Defined at:
  2626 ;;		line 82 in file "FastTransfer.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;		None
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  holder          3    3[BANK1 ] unsigned char [3]
  2631 ;;  crcHolder       1    7[BANK1 ] unsigned char 
  2632 ;;  holder          3    0[BANK1 ] unsigned char [3]
  2633 ;;  crcHolder       1    6[BANK1 ] unsigned char 
  2634 ;;  u               2    8[BANK1 ] int 
  2635 ;;  r               2   10[BANK1 ] int 
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  1    wreg      unsigned char 
  2638 ;; Registers used:
  2639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2645 ;;      Params:         0       0       0       0       0       0       0
  2646 ;;      Locals:         0       0      12       0       0       0       0
  2647 ;;      Temps:          0       6       0       0       0       0       0
  2648 ;;      Totals:         0       6      12       0       0       0       0
  2649 ;;Total ram usage:       18 bytes
  2650 ;; Hardware stack levels used:    1
  2651 ;; Hardware stack levels required when called:    8
  2652 ;; This function calls:
  2653 ;;		Absolute function
  2654 ;;		_CRC8
  2655 ;;		_CRCcheck
  2656 ;;		_Receive_available
  2657 ;;		_Receive_get
  2658 ;;		_Receive_peek
  2659 ;;		_Send_put
  2660 ;; This function is called by:
  2661 ;;		_updateComms
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           	psect	text12
  2666  0000D4                     __ptext12:
  2667                           	opt stack 0
  2668  0000D4                     _receiveData:
  2669                           	opt stack 21
  2670                           
  2671                           ;FastTransfer.c: 85: if (rx_len == 0) {
  2672                           
  2673                           ;incstack = 0
  2674  0000D4  503F               	movf	_rx_len,w,c
  2675  0000D6  A4D8               	btfss	status,2,c
  2676  0000D8  D0AC               	goto	l6251
  2677                           
  2678                           ;FastTransfer.c: 87: if (serial_available() > 4) {
  2679  0000DA  D801               	call	u6608
  2680  0000DC  D00A               	goto	u6609
  2681  0000DE                     u6608:
  2682  0000DE  0005               	push	
  2683  0000E0  6EFA               	movwf	pclath,c
  2684  0000E2  502E               	movf	_serial_available,w,c
  2685  0000E4  6EFD               	movwf	tosl,c
  2686  0000E6  502F               	movf	_serial_available+1,w,c
  2687  0000E8  6EFE               	movwf	tosh,c
  2688  0000EA  50F8               	movf	tblptru,w,c
  2689  0000EC  6EFF               	movwf	tosu,c
  2690  0000EE  50FA               	movf	pclath,w,c
  2691  0000F0  0012               	return		;indir
  2692  0000F2                     u6609:
  2693  0000F2  BE1E               	btfsc	?_Receive_available+1,7,c
  2694  0000F4  D09E               	goto	l6251
  2695  0000F6  501E               	movf	?_Receive_available+1,w,c
  2696  0000F8  E11E               	bnz	l6227
  2697  0000FA  0E05               	movlw	5
  2698  0000FC  5C1D               	subwf	?_Receive_available,w,c
  2699  0000FE  B0D8               	btfsc	status,0,c
  2700  000100  D01A               	goto	l6227
  2701  000102  D097               	goto	l6251
  2702  000104                     l6219:
  2703                           
  2704                           ;FastTransfer.c: 93: alignErrorCounter++;
  2705  000104  0100               	movlb	0	; () banked
  2706  000106  4BC5               	infsnz	_alignErrorCounter& (0+255),f,b
  2707  000108  2BC6               	incf	(_alignErrorCounter+1)& (0+255),f,b
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;FastTransfer.c: 94: if (serial_available() < 5)
  2711  00010A  D801               	call	u6628
  2712  00010C  D00A               	goto	u6629
  2713  00010E                     u6628:
  2714  00010E  0005               	push	
  2715  000110  6EFA               	movwf	pclath,c
  2716  000112  502E               	movf	_serial_available,w,c
  2717  000114  6EFD               	movwf	tosl,c
  2718  000116  502F               	movf	_serial_available+1,w,c
  2719  000118  6EFE               	movwf	tosh,c
  2720  00011A  50F8               	movf	tblptru,w,c
  2721  00011C  6EFF               	movwf	tosu,c
  2722  00011E  50FA               	movf	pclath,w,c
  2723  000120  0012               	return		;indir
  2724  000122                     u6629:
  2725  000122  BE1E               	btfsc	?_Receive_available+1,7,c
  2726  000124  D006               	goto	l6223
  2727  000126  501E               	movf	?_Receive_available+1,w,c
  2728  000128  E106               	bnz	l6227
  2729  00012A  0E05               	movlw	5
  2730  00012C  5C1D               	subwf	?_Receive_available,w,c
  2731  00012E  B0D8               	btfsc	status,0,c
  2732  000130  D002               	goto	l6227
  2733  000132                     l6223:
  2734                           
  2735                           ;FastTransfer.c: 95: return 0;
  2736  000132  0E00               	movlw	0
  2737  000134  0012               	return	
  2738  000136                     l6227:
  2739  000136  D801               	call	u6648
  2740  000138  D00A               	goto	u6649
  2741  00013A                     u6648:
  2742  00013A  0005               	push	
  2743  00013C  6EFA               	movwf	pclath,c
  2744  00013E  5030               	movf	_serial_read,w,c
  2745  000140  6EFD               	movwf	tosl,c
  2746  000142  5031               	movf	_serial_read+1,w,c
  2747  000144  6EFE               	movwf	tosh,c
  2748  000146  50F8               	movf	tblptru,w,c
  2749  000148  6EFF               	movwf	tosu,c
  2750  00014A  50FA               	movf	pclath,w,c
  2751  00014C  0012               	return		;indir
  2752  00014E                     u6649:
  2753  00014E  0A06               	xorlw	6
  2754  000150  A4D8               	btfss	status,2,c
  2755  000152  D7D8               	goto	l6219
  2756                           
  2757                           ;FastTransfer.c: 96: }
  2758                           ;FastTransfer.c: 97: if (serial_read() == 0x85) {
  2759  000154  D801               	call	u6668
  2760  000156  D00A               	goto	u6669
  2761  000158                     u6668:
  2762  000158  0005               	push	
  2763  00015A  6EFA               	movwf	pclath,c
  2764  00015C  5030               	movf	_serial_read,w,c
  2765  00015E  6EFD               	movwf	tosl,c
  2766  000160  5031               	movf	_serial_read+1,w,c
  2767  000162  6EFE               	movwf	tosh,c
  2768  000164  50F8               	movf	tblptru,w,c
  2769  000166  6EFF               	movwf	tosu,c
  2770  000168  50FA               	movf	pclath,w,c
  2771  00016A  0012               	return		;indir
  2772  00016C                     u6669:
  2773  00016C  0A85               	xorlw	133
  2774  00016E  A4D8               	btfss	status,2,c
  2775  000170  D060               	goto	l6251
  2776                           
  2777                           ;FastTransfer.c: 98: rx_address = serial_read();
  2778  000172  D801               	call	u6688
  2779  000174  D00A               	goto	u6689
  2780  000176                     u6688:
  2781  000176  0005               	push	
  2782  000178  6EFA               	movwf	pclath,c
  2783  00017A  5030               	movf	_serial_read,w,c
  2784  00017C  6EFD               	movwf	tosl,c
  2785  00017E  5031               	movf	_serial_read+1,w,c
  2786  000180  6EFE               	movwf	tosh,c
  2787  000182  50F8               	movf	tblptru,w,c
  2788  000184  6EFF               	movwf	tosu,c
  2789  000186  50FA               	movf	pclath,w,c
  2790  000188  0012               	return		;indir
  2791  00018A                     u6689:
  2792  00018A  6E3D               	movwf	_rx_address,c
  2793                           
  2794                           ;FastTransfer.c: 99: returnAddress = serial_read();
  2795  00018C  D801               	call	u6698
  2796  00018E  D00A               	goto	u6699
  2797  000190                     u6698:
  2798  000190  0005               	push	
  2799  000192  6EFA               	movwf	pclath,c
  2800  000194  5030               	movf	_serial_read,w,c
  2801  000196  6EFD               	movwf	tosl,c
  2802  000198  5031               	movf	_serial_read+1,w,c
  2803  00019A  6EFE               	movwf	tosh,c
  2804  00019C  50F8               	movf	tblptru,w,c
  2805  00019E  6EFF               	movwf	tosu,c
  2806  0001A0  50FA               	movf	pclath,w,c
  2807  0001A2  0012               	return		;indir
  2808  0001A4                     u6699:
  2809  0001A4  6E3C               	movwf	_returnAddress,c
  2810                           
  2811                           ;FastTransfer.c: 100: rx_len = serial_read();
  2812  0001A6  D801               	call	u6708
  2813  0001A8  D00A               	goto	u6709
  2814  0001AA                     u6708:
  2815  0001AA  0005               	push	
  2816  0001AC  6EFA               	movwf	pclath,c
  2817  0001AE  5030               	movf	_serial_read,w,c
  2818  0001B0  6EFD               	movwf	tosl,c
  2819  0001B2  5031               	movf	_serial_read+1,w,c
  2820  0001B4  6EFE               	movwf	tosh,c
  2821  0001B6  50F8               	movf	tblptru,w,c
  2822  0001B8  6EFF               	movwf	tosu,c
  2823  0001BA  50FA               	movf	pclath,w,c
  2824  0001BC  0012               	return		;indir
  2825  0001BE                     u6709:
  2826  0001BE  6E3F               	movwf	_rx_len,c
  2827                           
  2828                           ;FastTransfer.c: 102: if (rx_address != moduleAddress) {
  2829  0001C0  503B               	movf	_moduleAddress,w,c
  2830  0001C2  183D               	xorwf	_rx_address,w,c
  2831  0001C4  B4D8               	btfsc	status,2,c
  2832  0001C6  D035               	goto	l6251
  2833                           
  2834                           ;FastTransfer.c: 103: addressErrorCounter++;
  2835  0001C8  0100               	movlb	0	; () banked
  2836  0001CA  4BC3               	infsnz	_addressErrorCounter& (0+255),f,b
  2837  0001CC  2BC4               	incf	(_addressErrorCounter+1)& (0+255),f,b
  2838                           
  2839                           ; BSR set to: 0
  2840                           ;FastTransfer.c: 106: int u;
  2841                           ;FastTransfer.c: 107: for (u = 0; u <= (rx_len + 1); u++) {
  2842  0001CE  0E00               	movlw	0
  2843  0001D0  0101               	movlb	1	; () banked
  2844  0001D2  6F42               	movwf	(receiveData@u+1)& (0+255),b
  2845  0001D4  0E00               	movlw	0
  2846  0001D6  6F41               	movwf	receiveData@u& (0+255),b
  2847  0001D8  D00F               	goto	l6243
  2848  0001DA                     l6239:
  2849                           
  2850                           ;FastTransfer.c: 108: serial_read();
  2851  0001DA  D801               	call	u6728
  2852  0001DC  D00A               	goto	l6241
  2853  0001DE                     u6728:
  2854  0001DE  0005               	push	
  2855  0001E0  6EFA               	movwf	pclath,c
  2856  0001E2  5030               	movf	_serial_read,w,c
  2857  0001E4  6EFD               	movwf	tosl,c
  2858  0001E6  5031               	movf	_serial_read+1,w,c
  2859  0001E8  6EFE               	movwf	tosh,c
  2860  0001EA  50F8               	movf	tblptru,w,c
  2861  0001EC  6EFF               	movwf	tosu,c
  2862  0001EE  50FA               	movf	pclath,w,c
  2863  0001F0  0012               	return		;indir
  2864  0001F2                     l6241:
  2865  0001F2  0101               	movlb	1	; () banked
  2866  0001F4  4B41               	infsnz	receiveData@u& (0+255),f,b
  2867  0001F6  2B42               	incf	(receiveData@u+1)& (0+255),f,b
  2868  0001F8                     l6243:
  2869                           
  2870                           ; BSR set to: 1
  2871  0001F8  503F               	movf	_rx_len,w,c
  2872  0001FA  0100               	movlb	0	; () banked
  2873  0001FC  6FF5               	movwf	??_receiveData& (0+255),b
  2874  0001FE  6BF6               	clrf	(??_receiveData+1)& (0+255),b
  2875  000200  0E01               	movlw	1
  2876  000202  0100               	movlb	0	; () banked
  2877  000204  27F5               	addwf	??_receiveData& (0+255),f,b
  2878  000206  0E00               	movlw	0
  2879  000208  23F6               	addwfc	(??_receiveData+1)& (0+255),f,b
  2880  00020A  0101               	movlb	1	; () banked
  2881  00020C  5141               	movf	receiveData@u& (0+255),w,b
  2882  00020E  0100               	movlb	0	; () banked
  2883  000210  5DF5               	subwf	??_receiveData& (0+255),w,b
  2884  000212  0100               	movlb	0	; () banked
  2885  000214  51F6               	movf	(??_receiveData+1)& (0+255),w,b
  2886  000216  0A80               	xorlw	128
  2887  000218  0100               	movlb	0	; () banked
  2888  00021A  6FF7               	movwf	(??_receiveData+2)& (0+255),b
  2889  00021C  0101               	movlb	1	; () banked
  2890  00021E  5142               	movf	(receiveData@u+1)& (0+255),w,b
  2891  000220  0A80               	xorlw	128
  2892  000222  0100               	movlb	0	; () banked
  2893  000224  59F7               	subwfb	(??_receiveData+2)& (0+255),w,b
  2894  000226  B0D8               	btfsc	status,0,c
  2895  000228  D7D8               	goto	l6239
  2896                           
  2897                           ; BSR set to: 0
  2898                           ;FastTransfer.c: 109: }
  2899                           ;FastTransfer.c: 110: rx_len = 0;
  2900                           
  2901                           ; BSR set to: 0
  2902  00022A  0E00               	movlw	0
  2903  00022C  6E3F               	movwf	_rx_len,c
  2904                           
  2905                           ; BSR set to: 0
  2906                           ;FastTransfer.c: 111: return 0;
  2907  00022E  0E00               	movlw	0
  2908                           
  2909                           ; BSR set to: 0
  2910  000230  0012               	return	
  2911  000232                     l6251:
  2912                           
  2913                           ;FastTransfer.c: 112: }
  2914                           ;FastTransfer.c: 114: }
  2915                           ;FastTransfer.c: 115: }
  2916                           ;FastTransfer.c: 116: }
  2917                           ;FastTransfer.c: 119: if (rx_len != 0) {
  2918  000232  503F               	movf	_rx_len,w,c
  2919  000234  B4D8               	btfsc	status,2,c
  2920  000236  D2A6               	goto	l6375
  2921                           
  2922                           ;FastTransfer.c: 122: if (rx_array_inx == 0) {
  2923  000238  503E               	movf	_rx_array_inx,w,c
  2924  00023A  A4D8               	btfss	status,2,c
  2925  00023C  D044               	goto	l6275
  2926  00023E                     l6257:
  2927  00023E  D801               	call	u6768
  2928  000240  D00A               	goto	u6769
  2929  000242                     u6768:
  2930  000242  0005               	push	
  2931  000244  6EFA               	movwf	pclath,c
  2932  000246  502E               	movf	_serial_available,w,c
  2933  000248  6EFD               	movwf	tosl,c
  2934  00024A  502F               	movf	_serial_available+1,w,c
  2935  00024C  6EFE               	movwf	tosh,c
  2936  00024E  50F8               	movf	tblptru,w,c
  2937  000250  6EFF               	movwf	tosu,c
  2938  000252  50FA               	movf	pclath,w,c
  2939  000254  0012               	return		;indir
  2940  000256                     u6769:
  2941  000256  BE1E               	btfsc	?_Receive_available+1,7,c
  2942  000258  D7F2               	goto	l6257
  2943  00025A  501E               	movf	?_Receive_available+1,w,c
  2944  00025C  E103               	bnz	l6259
  2945  00025E  041D               	decf	?_Receive_available,w,c
  2946  000260  A0D8               	btfss	status,0,c
  2947  000262  D7ED               	goto	l6257
  2948  000264                     l6259:
  2949                           
  2950                           ;FastTransfer.c: 124: if (255 == serial_peek()) {
  2951  000264  D801               	call	u6788
  2952  000266  D00B               	goto	u6789
  2953  000268                     u6788:
  2954  000268  0005               	push	
  2955  00026A  0100               	movlb	0	; () banked
  2956  00026C  6EFA               	movwf	pclath,c
  2957  00026E  51D7               	movf	_serial_peek& (0+255),w,b
  2958  000270  6EFD               	movwf	tosl,c
  2959  000272  51D8               	movf	(_serial_peek+1)& (0+255),w,b
  2960  000274  6EFE               	movwf	tosh,c
  2961  000276  50F8               	movf	tblptru,w,c
  2962  000278  6EFF               	movwf	tosu,c
  2963  00027A  50FA               	movf	pclath,w,c
  2964  00027C  0012               	return		;indir
  2965  00027E                     u6789:
  2966  00027E  0AFF               	xorlw	255
  2967  000280  A4D8               	btfss	status,2,c
  2968  000282  D021               	goto	l6275
  2969                           
  2970                           ;FastTransfer.c: 125: CRCcheck();
  2971  000284  ECED  F009         	call	_CRCcheck	;wreg free
  2972                           
  2973                           ;FastTransfer.c: 126: rx_len = 0;
  2974  000288  0E00               	movlw	0
  2975  00028A  6E3F               	movwf	_rx_len,c
  2976                           
  2977                           ;FastTransfer.c: 127: rx_array_inx = 0;
  2978  00028C  0E00               	movlw	0
  2979  00028E  6E3E               	movwf	_rx_array_inx,c
  2980                           
  2981                           ;FastTransfer.c: 128: return 0;
  2982  000290  0E00               	movlw	0
  2983  000292  0012               	return	
  2984  000294                     l6271:
  2985                           
  2986                           ;FastTransfer.c: 134: rx_buffer[rx_array_inx++] = serial_read();
  2987  000294  D801               	call	u6808
  2988  000296  D00A               	goto	u6809
  2989  000298                     u6808:
  2990  000298  0005               	push	
  2991  00029A  6EFA               	movwf	pclath,c
  2992  00029C  5030               	movf	_serial_read,w,c
  2993  00029E  6EFD               	movwf	tosl,c
  2994  0002A0  5031               	movf	_serial_read+1,w,c
  2995  0002A2  6EFE               	movwf	tosh,c
  2996  0002A4  50F8               	movf	tblptru,w,c
  2997  0002A6  6EFF               	movwf	tosu,c
  2998  0002A8  50FA               	movf	pclath,w,c
  2999  0002AA  0012               	return		;indir
  3000  0002AC                     u6809:
  3001  0002AC  0100               	movlb	0	; () banked
  3002  0002AE  6FF5               	movwf	??_receiveData& (0+255),b
  3003  0002B0  503E               	movf	_rx_array_inx,w,c
  3004  0002B2  0D01               	mullw	1
  3005  0002B4  0E00               	movlw	low _rx_buffer
  3006  0002B6  24F3               	addwf	prodl,w,c
  3007  0002B8  6ED9               	movwf	fsr2l,c
  3008  0002BA  0E03               	movlw	high _rx_buffer
  3009  0002BC  20F4               	addwfc	prodh,w,c
  3010  0002BE  6EDA               	movwf	fsr2h,c
  3011  0002C0  C0F5  FFDF         	movff	??_receiveData,indf2
  3012                           
  3013                           ; BSR set to: 0
  3014  0002C4  2A3E               	incf	_rx_array_inx,f,c
  3015  0002C6                     l6275:
  3016  0002C6  D801               	call	u6818
  3017  0002C8  D00A               	goto	u6819
  3018  0002CA                     u6818:
  3019  0002CA  0005               	push	
  3020  0002CC  6EFA               	movwf	pclath,c
  3021  0002CE  502E               	movf	_serial_available,w,c
  3022  0002D0  6EFD               	movwf	tosl,c
  3023  0002D2  502F               	movf	_serial_available+1,w,c
  3024  0002D4  6EFE               	movwf	tosh,c
  3025  0002D6  50F8               	movf	tblptru,w,c
  3026  0002D8  6EFF               	movwf	tosu,c
  3027  0002DA  50FA               	movf	pclath,w,c
  3028  0002DC  0012               	return		;indir
  3029  0002DE                     u6819:
  3030  0002DE  501D               	movf	?_Receive_available,w,c
  3031  0002E0  101E               	iorwf	?_Receive_available+1,w,c
  3032  0002E2  B4D8               	btfsc	status,2,c
  3033  0002E4  D004               	goto	l6279
  3034  0002E6  503E               	movf	_rx_array_inx,w,c
  3035  0002E8  5C3F               	subwf	_rx_len,w,c
  3036  0002EA  B0D8               	btfsc	status,0,c
  3037  0002EC  D7D3               	goto	l6271
  3038  0002EE                     l6279:
  3039                           
  3040                           ;FastTransfer.c: 135: }
  3041                           ;FastTransfer.c: 137: if (rx_len == (rx_array_inx - 1)) {
  3042  0002EE  503F               	movf	_rx_len,w,c
  3043  0002F0  0100               	movlb	0	; () banked
  3044  0002F2  6FF5               	movwf	??_receiveData& (0+255),b
  3045  0002F4  6BF6               	clrf	(??_receiveData+1)& (0+255),b
  3046  0002F6  0EFF               	movlw	255
  3047  0002F8  0100               	movlb	0	; () banked
  3048  0002FA  6FF7               	movwf	(??_receiveData+2)& (0+255),b
  3049  0002FC  0EFF               	movlw	255
  3050  0002FE  0100               	movlb	0	; () banked
  3051  000300  6FF8               	movwf	(??_receiveData+3)& (0+255),b
  3052  000302  503E               	movf	_rx_array_inx,w,c
  3053  000304  0100               	movlb	0	; () banked
  3054  000306  6FF9               	movwf	(??_receiveData+4)& (0+255),b
  3055  000308  6BFA               	clrf	(??_receiveData+5)& (0+255),b
  3056  00030A  0100               	movlb	0	; () banked
  3057  00030C  51F7               	movf	(??_receiveData+2)& (0+255),w,b
  3058  00030E  0100               	movlb	0	; () banked
  3059  000310  27F9               	addwf	(??_receiveData+4)& (0+255),f,b
  3060  000312  0100               	movlb	0	; () banked
  3061  000314  51F8               	movf	(??_receiveData+3)& (0+255),w,b
  3062  000316  0100               	movlb	0	; () banked
  3063  000318  23FA               	addwfc	(??_receiveData+5)& (0+255),f,b
  3064  00031A  0100               	movlb	0	; () banked
  3065  00031C  51F5               	movf	??_receiveData& (0+255),w,b
  3066  00031E  0100               	movlb	0	; () banked
  3067  000320  19F9               	xorwf	(??_receiveData+4)& (0+255),w,b
  3068  000322  E105               	bnz	u6841
  3069  000324  0100               	movlb	0	; () banked
  3070  000326  51F6               	movf	(??_receiveData+1)& (0+255),w,b
  3071  000328  0100               	movlb	0	; () banked
  3072  00032A  19FA               	xorwf	(??_receiveData+5)& (0+255),w,b
  3073  00032C  A4D8               	btfss	status,2,c
  3074  00032E                     u6841:
  3075  00032E  D22A               	goto	l6375
  3076                           
  3077                           ; BSR set to: 0
  3078                           ;FastTransfer.c: 140: calc_CS = CRC8(rx_buffer, rx_len);
  3079  000330  0E00               	movlw	low _rx_buffer
  3080  000332  6E1B               	movwf	CRC8@data,c
  3081  000334  0E03               	movlw	high _rx_buffer
  3082  000336  6E1C               	movwf	CRC8@data+1,c
  3083  000338  C03F  F01D         	movff	_rx_len,CRC8@len
  3084  00033C  ECAD  F015         	call	_CRC8	;wreg free
  3085  000340  6E37               	movwf	_calc_CS,c
  3086                           
  3087                           ;FastTransfer.c: 144: if (calc_CS == rx_buffer[rx_array_inx - 1]) {
  3088  000342  0EFF               	movlw	255
  3089  000344  0100               	movlb	0	; () banked
  3090  000346  6FF5               	movwf	??_receiveData& (0+255),b
  3091  000348  0EFF               	movlw	255
  3092  00034A  0100               	movlb	0	; () banked
  3093  00034C  6FF6               	movwf	(??_receiveData+1)& (0+255),b
  3094  00034E  503E               	movf	_rx_array_inx,w,c
  3095  000350  0100               	movlb	0	; () banked
  3096  000352  6FF7               	movwf	(??_receiveData+2)& (0+255),b
  3097  000354  6BF8               	clrf	(??_receiveData+3)& (0+255),b
  3098  000356  0100               	movlb	0	; () banked
  3099  000358  51F5               	movf	??_receiveData& (0+255),w,b
  3100  00035A  0100               	movlb	0	; () banked
  3101  00035C  27F7               	addwf	(??_receiveData+2)& (0+255),f,b
  3102  00035E  0100               	movlb	0	; () banked
  3103  000360  51F6               	movf	(??_receiveData+1)& (0+255),w,b
  3104  000362  0100               	movlb	0	; () banked
  3105  000364  23F8               	addwfc	(??_receiveData+3)& (0+255),f,b
  3106  000366  0E00               	movlw	low _rx_buffer
  3107  000368  0100               	movlb	0	; () banked
  3108  00036A  25F7               	addwf	(??_receiveData+2)& (0+255),w,b
  3109  00036C  6ED9               	movwf	fsr2l,c
  3110  00036E  0E03               	movlw	high _rx_buffer
  3111  000370  0100               	movlb	0	; () banked
  3112  000372  21F8               	addwfc	(??_receiveData+3)& (0+255),w,b
  3113  000374  6EDA               	movwf	fsr2h,c
  3114  000376  5037               	movf	_calc_CS,w,c
  3115  000378  18DE               	xorwf	postinc2,w,c
  3116  00037A  A4D8               	btfss	status,2,c
  3117  00037C  D13B               	goto	l6337
  3118                           
  3119                           ; BSR set to: 0
  3120                           ;FastTransfer.c: 147: int r;
  3121                           ;FastTransfer.c: 148: for (r = 0; r < rx_len; r = r + 3) {
  3122  00037E  0E00               	movlw	0
  3123  000380  0101               	movlb	1	; () banked
  3124  000382  6F44               	movwf	(receiveData@r+1)& (0+255),b
  3125  000384  0E00               	movlw	0
  3126  000386  6F43               	movwf	receiveData@r& (0+255),b
  3127  000388  D05C               	goto	l6297
  3128  00038A                     l6287:
  3129                           
  3130                           ;FastTransfer.c: 149: if (rx_buffer[r] < maxDataAddress) {
  3131  00038A  0E00               	movlw	low _rx_buffer
  3132  00038C  0101               	movlb	1	; () banked
  3133  00038E  2543               	addwf	receiveData@r& (0+255),w,b
  3134  000390  6ED9               	movwf	fsr2l,c
  3135  000392  0E03               	movlw	high _rx_buffer
  3136  000394  0101               	movlb	1	; () banked
  3137  000396  2144               	addwfc	(receiveData@r+1)& (0+255),w,b
  3138  000398  6EDA               	movwf	fsr2h,c
  3139  00039A  503A               	movf	_maxDataAddress,w,c
  3140  00039C  5CDE               	subwf	postinc2,w,c
  3141  00039E  B0D8               	btfsc	status,0,c
  3142  0003A0  D043               	goto	l6293
  3143                           
  3144                           ; BSR set to: 1
  3145                           ;FastTransfer.c: 150: group.parts[0] = rx_buffer[r + 1];
  3146  0003A2  0E01               	movlw	1
  3147  0003A4  0101               	movlb	1	; () banked
  3148  0003A6  2543               	addwf	receiveData@r& (0+255),w,b
  3149  0003A8  0100               	movlb	0	; () banked
  3150  0003AA  6FF5               	movwf	??_receiveData& (0+255),b
  3151  0003AC  0E00               	movlw	0
  3152  0003AE  0101               	movlb	1	; () banked
  3153  0003B0  2144               	addwfc	(receiveData@r+1)& (0+255),w,b
  3154  0003B2  0100               	movlb	0	; () banked
  3155  0003B4  6FF6               	movwf	(??_receiveData+1)& (0+255),b
  3156  0003B6  0E00               	movlw	low _rx_buffer
  3157  0003B8  0100               	movlb	0	; () banked
  3158  0003BA  25F5               	addwf	??_receiveData& (0+255),w,b
  3159  0003BC  6ED9               	movwf	fsr2l,c
  3160  0003BE  0E03               	movlw	high _rx_buffer
  3161  0003C0  0100               	movlb	0	; () banked
  3162  0003C2  21F6               	addwfc	(??_receiveData+1)& (0+255),w,b
  3163  0003C4  6EDA               	movwf	fsr2h,c
  3164  0003C6  50DF               	movf	indf2,w,c
  3165  0003C8  6E2C               	movwf	_group,c
  3166                           
  3167                           ;FastTransfer.c: 151: group.parts[1] = rx_buffer[r + 2];
  3168  0003CA  0E02               	movlw	2
  3169  0003CC  0101               	movlb	1	; () banked
  3170  0003CE  2543               	addwf	receiveData@r& (0+255),w,b
  3171  0003D0  0100               	movlb	0	; () banked
  3172  0003D2  6FF5               	movwf	??_receiveData& (0+255),b
  3173  0003D4  0E00               	movlw	0
  3174  0003D6  0101               	movlb	1	; () banked
  3175  0003D8  2144               	addwfc	(receiveData@r+1)& (0+255),w,b
  3176  0003DA  0100               	movlb	0	; () banked
  3177  0003DC  6FF6               	movwf	(??_receiveData+1)& (0+255),b
  3178  0003DE  0E00               	movlw	low _rx_buffer
  3179  0003E0  0100               	movlb	0	; () banked
  3180  0003E2  25F5               	addwf	??_receiveData& (0+255),w,b
  3181  0003E4  6ED9               	movwf	fsr2l,c
  3182  0003E6  0E03               	movlw	high _rx_buffer
  3183  0003E8  0100               	movlb	0	; () banked
  3184  0003EA  21F6               	addwfc	(??_receiveData+1)& (0+255),w,b
  3185  0003EC  6EDA               	movwf	fsr2h,c
  3186  0003EE  50DF               	movf	indf2,w,c
  3187  0003F0  6E2D               	movwf	_group+1,c
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;FastTransfer.c: 152: receiveArrayAddress[(rx_buffer[r])] = group.integer;
  3191  0003F2  0E00               	movlw	low _rx_buffer
  3192  0003F4  0101               	movlb	1	; () banked
  3193  0003F6  2543               	addwf	receiveData@r& (0+255),w,b
  3194  0003F8  6ED9               	movwf	fsr2l,c
  3195  0003FA  0E03               	movlw	high _rx_buffer
  3196  0003FC  0101               	movlb	1	; () banked
  3197  0003FE  2144               	addwfc	(receiveData@r+1)& (0+255),w,b
  3198  000400  6EDA               	movwf	fsr2h,c
  3199  000402  50DF               	movf	indf2,w,c
  3200  000404  0100               	movlb	0	; () banked
  3201  000406  6FF5               	movwf	??_receiveData& (0+255),b
  3202  000408  0100               	movlb	0	; () banked
  3203  00040A  51F5               	movf	??_receiveData& (0+255),w,b
  3204  00040C  0D02               	mullw	2
  3205  00040E  50F3               	movf	prodl,w,c
  3206  000410  0100               	movlb	0	; () banked
  3207  000412  25D3               	addwf	_receiveArrayAddress& (0+255),w,b
  3208  000414  6ED9               	movwf	fsr2l,c
  3209  000416  50F4               	movf	prodh,w,c
  3210  000418  0100               	movlb	0	; () banked
  3211  00041A  21D4               	addwfc	(_receiveArrayAddress+1)& (0+255),w,b
  3212  00041C  6EDA               	movwf	fsr2h,c
  3213  00041E  C02C  FFDE         	movff	_group,postinc2
  3214  000422  C02D  FFDD         	movff	_group+1,postdec2
  3215                           
  3216                           ;FastTransfer.c: 153: } else {
  3217  000426  D003               	goto	l6295
  3218  000428                     l6293:
  3219                           
  3220                           ;FastTransfer.c: 154: dataAdressErrorCounter++;
  3221  000428  0100               	movlb	0	; () banked
  3222  00042A  4BCB               	infsnz	_dataAdressErrorCounter& (0+255),f,b
  3223  00042C  2BCC               	incf	(_dataAdressErrorCounter+1)& (0+255),f,b
  3224  00042E                     l6295:
  3225                           
  3226                           ; BSR set to: 0
  3227  00042E  0E03               	movlw	3
  3228  000430  0101               	movlb	1	; () banked
  3229  000432  2543               	addwf	receiveData@r& (0+255),w,b
  3230  000434  0101               	movlb	1	; () banked
  3231  000436  6F43               	movwf	receiveData@r& (0+255),b
  3232  000438  0E00               	movlw	0
  3233  00043A  0101               	movlb	1	; () banked
  3234  00043C  2144               	addwfc	(receiveData@r+1)& (0+255),w,b
  3235  00043E  0101               	movlb	1	; () banked
  3236  000440  6F44               	movwf	(receiveData@r+1)& (0+255),b
  3237  000442                     l6297:
  3238                           
  3239                           ; BSR set to: 1
  3240  000442  503F               	movf	_rx_len,w,c
  3241  000444  0100               	movlb	0	; () banked
  3242  000446  6FF5               	movwf	??_receiveData& (0+255),b
  3243  000448  6BF6               	clrf	(??_receiveData+1)& (0+255),b
  3244  00044A  0100               	movlb	0	; () banked
  3245  00044C  51F5               	movf	??_receiveData& (0+255),w,b
  3246  00044E  0101               	movlb	1	; () banked
  3247  000450  5D43               	subwf	receiveData@r& (0+255),w,b
  3248  000452  0101               	movlb	1	; () banked
  3249  000454  5144               	movf	(receiveData@r+1)& (0+255),w,b
  3250  000456  0A80               	xorlw	128
  3251  000458  0100               	movlb	0	; () banked
  3252  00045A  6FF7               	movwf	(??_receiveData+2)& (0+255),b
  3253  00045C  0100               	movlb	0	; () banked
  3254  00045E  51F6               	movf	(??_receiveData+1)& (0+255),w,b
  3255  000460  0A80               	xorlw	128
  3256  000462  0100               	movlb	0	; () banked
  3257  000464  59F7               	subwfb	(??_receiveData+2)& (0+255),w,b
  3258  000466  A0D8               	btfss	status,0,c
  3259  000468  D790               	goto	l6287
  3260                           
  3261                           ; BSR set to: 0
  3262                           ;FastTransfer.c: 155: }
  3263                           ;FastTransfer.c: 156: }
  3264                           ;FastTransfer.c: 159: if (AKNAKsend) {
  3265                           
  3266                           ; BSR set to: 0
  3267  00046A  5036               	movf	_AKNAKsend,w,c
  3268  00046C  B4D8               	btfsc	status,2,c
  3269  00046E  D0BC               	goto	l6327
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;FastTransfer.c: 160: unsigned char holder[3];
  3273                           ;FastTransfer.c: 161: holder[0] = 255;
  3274  000470  0101               	movlb	1	; () banked
  3275  000472  6939               	setf	receiveData@holder& (0+255),b
  3276                           
  3277                           ; BSR set to: 1
  3278                           ;FastTransfer.c: 162: holder[1] = 1;
  3279  000474  0E01               	movlw	1
  3280  000476  0101               	movlb	1	; () banked
  3281  000478  6F3A               	movwf	(receiveData@holder+1)& (0+255),b
  3282                           
  3283                           ; BSR set to: 1
  3284                           ;FastTransfer.c: 163: holder[2] = rx_buffer[rx_array_inx - 1];
  3285  00047A  0EFF               	movlw	255
  3286  00047C  0100               	movlb	0	; () banked
  3287  00047E  6FF5               	movwf	??_receiveData& (0+255),b
  3288  000480  0EFF               	movlw	255
  3289  000482  0100               	movlb	0	; () banked
  3290  000484  6FF6               	movwf	(??_receiveData+1)& (0+255),b
  3291  000486  503E               	movf	_rx_array_inx,w,c
  3292  000488  0100               	movlb	0	; () banked
  3293  00048A  6FF7               	movwf	(??_receiveData+2)& (0+255),b
  3294  00048C  6BF8               	clrf	(??_receiveData+3)& (0+255),b
  3295  00048E  0100               	movlb	0	; () banked
  3296  000490  51F5               	movf	??_receiveData& (0+255),w,b
  3297  000492  0100               	movlb	0	; () banked
  3298  000494  27F7               	addwf	(??_receiveData+2)& (0+255),f,b
  3299  000496  0100               	movlb	0	; () banked
  3300  000498  51F6               	movf	(??_receiveData+1)& (0+255),w,b
  3301  00049A  0100               	movlb	0	; () banked
  3302  00049C  23F8               	addwfc	(??_receiveData+3)& (0+255),f,b
  3303  00049E  0E00               	movlw	low _rx_buffer
  3304  0004A0  0100               	movlb	0	; () banked
  3305  0004A2  25F7               	addwf	(??_receiveData+2)& (0+255),w,b
  3306  0004A4  6ED9               	movwf	fsr2l,c
  3307  0004A6  0E03               	movlw	high _rx_buffer
  3308  0004A8  0100               	movlb	0	; () banked
  3309  0004AA  21F8               	addwfc	(??_receiveData+3)& (0+255),w,b
  3310  0004AC  6EDA               	movwf	fsr2h,c
  3311  0004AE  50DF               	movf	indf2,w,c
  3312  0004B0  0101               	movlb	1	; () banked
  3313  0004B2  6F3B               	movwf	(receiveData@holder+2)& (0+255),b
  3314                           
  3315                           ; BSR set to: 1
  3316                           ;FastTransfer.c: 164: unsigned char crcHolder = CRC8(holder, 3);
  3317  0004B4  0E39               	movlw	low receiveData@holder
  3318  0004B6  6E1B               	movwf	CRC8@data,c
  3319  0004B8  0E01               	movlw	high receiveData@holder
  3320  0004BA  6E1C               	movwf	CRC8@data+1,c
  3321  0004BC  0E03               	movlw	3
  3322  0004BE  6E1D               	movwf	CRC8@len,c
  3323  0004C0  ECAD  F015         	call	_CRC8	;wreg free
  3324  0004C4  0101               	movlb	1	; () banked
  3325  0004C6  6F3F               	movwf	receiveData@crcHolder& (0+255),b
  3326                           
  3327                           ; BSR set to: 1
  3328                           ;FastTransfer.c: 165: serial_write(0x06);
  3329  0004C8  D801               	call	u6898
  3330  0004CA  D00B               	goto	l6311
  3331  0004CC                     u6898:
  3332  0004CC  0005               	push	
  3333  0004CE  6EFA               	movwf	pclath,c
  3334  0004D0  5032               	movf	_serial_write,w,c
  3335  0004D2  6EFD               	movwf	tosl,c
  3336  0004D4  5033               	movf	_serial_write+1,w,c
  3337  0004D6  6EFE               	movwf	tosh,c
  3338  0004D8  50F8               	movf	tblptru,w,c
  3339  0004DA  6EFF               	movwf	tosu,c
  3340  0004DC  50FA               	movf	pclath,w,c
  3341  0004DE  0E06               	movlw	6
  3342  0004E0  0012               	return		;indir
  3343  0004E2                     l6311:
  3344                           
  3345                           ;FastTransfer.c: 166: serial_write(0x85);
  3346  0004E2  D801               	call	u6908
  3347  0004E4  D00B               	goto	l6313
  3348  0004E6                     u6908:
  3349  0004E6  0005               	push	
  3350  0004E8  6EFA               	movwf	pclath,c
  3351  0004EA  5032               	movf	_serial_write,w,c
  3352  0004EC  6EFD               	movwf	tosl,c
  3353  0004EE  5033               	movf	_serial_write+1,w,c
  3354  0004F0  6EFE               	movwf	tosh,c
  3355  0004F2  50F8               	movf	tblptru,w,c
  3356  0004F4  6EFF               	movwf	tosu,c
  3357  0004F6  50FA               	movf	pclath,w,c
  3358  0004F8  0E85               	movlw	133
  3359  0004FA  0012               	return		;indir
  3360  0004FC                     l6313:
  3361                           
  3362                           ;FastTransfer.c: 167: serial_write(returnAddress);
  3363  0004FC  D801               	call	u6918
  3364  0004FE  D00B               	goto	l6315
  3365  000500                     u6918:
  3366  000500  0005               	push	
  3367  000502  6EFA               	movwf	pclath,c
  3368  000504  5032               	movf	_serial_write,w,c
  3369  000506  6EFD               	movwf	tosl,c
  3370  000508  5033               	movf	_serial_write+1,w,c
  3371  00050A  6EFE               	movwf	tosh,c
  3372  00050C  50F8               	movf	tblptru,w,c
  3373  00050E  6EFF               	movwf	tosu,c
  3374  000510  50FA               	movf	pclath,w,c
  3375  000512  503C               	movf	_returnAddress,w,c
  3376  000514  0012               	return		;indir
  3377  000516                     l6315:
  3378                           
  3379                           ;FastTransfer.c: 168: serial_write(moduleAddress);
  3380  000516  D801               	call	u6928
  3381  000518  D00B               	goto	l6317
  3382  00051A                     u6928:
  3383  00051A  0005               	push	
  3384  00051C  6EFA               	movwf	pclath,c
  3385  00051E  5032               	movf	_serial_write,w,c
  3386  000520  6EFD               	movwf	tosl,c
  3387  000522  5033               	movf	_serial_write+1,w,c
  3388  000524  6EFE               	movwf	tosh,c
  3389  000526  50F8               	movf	tblptru,w,c
  3390  000528  6EFF               	movwf	tosu,c
  3391  00052A  50FA               	movf	pclath,w,c
  3392  00052C  503B               	movf	_moduleAddress,w,c
  3393  00052E  0012               	return		;indir
  3394  000530                     l6317:
  3395                           
  3396                           ;FastTransfer.c: 169: serial_write(3);
  3397  000530  D801               	call	u6938
  3398  000532  D00B               	goto	l6319
  3399  000534                     u6938:
  3400  000534  0005               	push	
  3401  000536  6EFA               	movwf	pclath,c
  3402  000538  5032               	movf	_serial_write,w,c
  3403  00053A  6EFD               	movwf	tosl,c
  3404  00053C  5033               	movf	_serial_write+1,w,c
  3405  00053E  6EFE               	movwf	tosh,c
  3406  000540  50F8               	movf	tblptru,w,c
  3407  000542  6EFF               	movwf	tosu,c
  3408  000544  50FA               	movf	pclath,w,c
  3409  000546  0E03               	movlw	3
  3410  000548  0012               	return		;indir
  3411  00054A                     l6319:
  3412                           
  3413                           ;FastTransfer.c: 170: serial_write(255);
  3414  00054A  D801               	call	u6948
  3415  00054C  D00B               	goto	l6321
  3416  00054E                     u6948:
  3417  00054E  0005               	push	
  3418  000550  6EFA               	movwf	pclath,c
  3419  000552  5032               	movf	_serial_write,w,c
  3420  000554  6EFD               	movwf	tosl,c
  3421  000556  5033               	movf	_serial_write+1,w,c
  3422  000558  6EFE               	movwf	tosh,c
  3423  00055A  50F8               	movf	tblptru,w,c
  3424  00055C  6EFF               	movwf	tosu,c
  3425  00055E  50FA               	movf	pclath,w,c
  3426  000560  0EFF               	movlw	255
  3427  000562  0012               	return		;indir
  3428  000564                     l6321:
  3429                           
  3430                           ;FastTransfer.c: 171: serial_write(1);
  3431  000564  D801               	call	u6958
  3432  000566  D00B               	goto	l6323
  3433  000568                     u6958:
  3434  000568  0005               	push	
  3435  00056A  6EFA               	movwf	pclath,c
  3436  00056C  5032               	movf	_serial_write,w,c
  3437  00056E  6EFD               	movwf	tosl,c
  3438  000570  5033               	movf	_serial_write+1,w,c
  3439  000572  6EFE               	movwf	tosh,c
  3440  000574  50F8               	movf	tblptru,w,c
  3441  000576  6EFF               	movwf	tosu,c
  3442  000578  50FA               	movf	pclath,w,c
  3443  00057A  0E01               	movlw	1
  3444  00057C  0012               	return		;indir
  3445  00057E                     l6323:
  3446                           
  3447                           ;FastTransfer.c: 172: serial_write(rx_buffer[rx_array_inx - 1]);
  3448  00057E  D801               	call	u6968
  3449  000580  D025               	goto	l6325
  3450  000582                     u6968:
  3451  000582  0005               	push	
  3452  000584  6EFA               	movwf	pclath,c
  3453  000586  5032               	movf	_serial_write,w,c
  3454  000588  6EFD               	movwf	tosl,c
  3455  00058A  5033               	movf	_serial_write+1,w,c
  3456  00058C  6EFE               	movwf	tosh,c
  3457  00058E  50F8               	movf	tblptru,w,c
  3458  000590  6EFF               	movwf	tosu,c
  3459  000592  50FA               	movf	pclath,w,c
  3460  000594  0EFF               	movlw	255
  3461  000596  0100               	movlb	0	; () banked
  3462  000598  6FF5               	movwf	??_receiveData& (0+255),b
  3463  00059A  0EFF               	movlw	255
  3464  00059C  0100               	movlb	0	; () banked
  3465  00059E  6FF6               	movwf	(??_receiveData+1)& (0+255),b
  3466  0005A0  503E               	movf	_rx_array_inx,w,c
  3467  0005A2  0100               	movlb	0	; () banked
  3468  0005A4  6FF7               	movwf	(??_receiveData+2)& (0+255),b
  3469  0005A6  6BF8               	clrf	(??_receiveData+3)& (0+255),b
  3470  0005A8  0100               	movlb	0	; () banked
  3471  0005AA  51F5               	movf	??_receiveData& (0+255),w,b
  3472  0005AC  0100               	movlb	0	; () banked
  3473  0005AE  27F7               	addwf	(??_receiveData+2)& (0+255),f,b
  3474  0005B0  0100               	movlb	0	; () banked
  3475  0005B2  51F6               	movf	(??_receiveData+1)& (0+255),w,b
  3476  0005B4  0100               	movlb	0	; () banked
  3477  0005B6  23F8               	addwfc	(??_receiveData+3)& (0+255),f,b
  3478  0005B8  0E00               	movlw	low _rx_buffer
  3479  0005BA  0100               	movlb	0	; () banked
  3480  0005BC  25F7               	addwf	(??_receiveData+2)& (0+255),w,b
  3481  0005BE  6ED9               	movwf	fsr2l,c
  3482  0005C0  0E03               	movlw	high _rx_buffer
  3483  0005C2  0100               	movlb	0	; () banked
  3484  0005C4  21F8               	addwfc	(??_receiveData+3)& (0+255),w,b
  3485  0005C6  6EDA               	movwf	fsr2h,c
  3486  0005C8  50DF               	movf	indf2,w,c
  3487  0005CA  0012               	return		;indir
  3488  0005CC                     l6325:
  3489                           
  3490                           ;FastTransfer.c: 173: serial_write(crcHolder);
  3491  0005CC  D801               	call	u6978
  3492  0005CE  D00C               	goto	l6327
  3493  0005D0                     u6978:
  3494  0005D0  0005               	push	
  3495  0005D2  6EFA               	movwf	pclath,c
  3496  0005D4  5032               	movf	_serial_write,w,c
  3497  0005D6  6EFD               	movwf	tosl,c
  3498  0005D8  5033               	movf	_serial_write+1,w,c
  3499  0005DA  6EFE               	movwf	tosh,c
  3500  0005DC  50F8               	movf	tblptru,w,c
  3501  0005DE  6EFF               	movwf	tosu,c
  3502  0005E0  50FA               	movf	pclath,w,c
  3503  0005E2  0101               	movlb	1	; () banked
  3504  0005E4  513F               	movf	receiveData@crcHolder& (0+255),w,b
  3505  0005E6  0012               	return		;indir
  3506  0005E8                     l6327:
  3507                           
  3508                           ;FastTransfer.c: 174: }
  3509                           ;FastTransfer.c: 178: rx_len = 0;
  3510  0005E8  0E00               	movlw	0
  3511  0005EA  6E3F               	movwf	_rx_len,c
  3512                           
  3513                           ;FastTransfer.c: 179: rx_array_inx = 0;
  3514  0005EC  0E00               	movlw	0
  3515  0005EE  6E3E               	movwf	_rx_array_inx,c
  3516                           
  3517                           ;FastTransfer.c: 180: return 1;
  3518  0005F0  0E01               	movlw	1
  3519  0005F2  0012               	return	
  3520  0005F4                     l6337:
  3521                           
  3522                           ;FastTransfer.c: 182: crcErrorCounter++;
  3523  0005F4  0100               	movlb	0	; () banked
  3524  0005F6  4BC9               	infsnz	_crcErrorCounter& (0+255),f,b
  3525  0005F8  2BCA               	incf	(_crcErrorCounter+1)& (0+255),f,b
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;FastTransfer.c: 184: if (AKNAKsend) {
  3529  0005FA  5036               	movf	_AKNAKsend,w,c
  3530  0005FC  B4D8               	btfsc	status,2,c
  3531  0005FE  D0BC               	goto	l6367
  3532                           
  3533                           ; BSR set to: 0
  3534                           ;FastTransfer.c: 185: unsigned char holder[3];
  3535                           ;FastTransfer.c: 186: holder[0] = 255;
  3536  000600  0101               	movlb	1	; () banked
  3537  000602  693C               	setf	receiveData@holder_2354& (0+255),b
  3538                           
  3539                           ; BSR set to: 1
  3540                           ;FastTransfer.c: 187: holder[1] = 2;
  3541  000604  0E02               	movlw	2
  3542  000606  0101               	movlb	1	; () banked
  3543  000608  6F3D               	movwf	(receiveData@holder_2354+1)& (0+255),b
  3544                           
  3545                           ; BSR set to: 1
  3546                           ;FastTransfer.c: 188: holder[2] = rx_buffer[rx_array_inx - 1];
  3547  00060A  0EFF               	movlw	255
  3548  00060C  0100               	movlb	0	; () banked
  3549  00060E  6FF5               	movwf	??_receiveData& (0+255),b
  3550  000610  0EFF               	movlw	255
  3551  000612  0100               	movlb	0	; () banked
  3552  000614  6FF6               	movwf	(??_receiveData+1)& (0+255),b
  3553  000616  503E               	movf	_rx_array_inx,w,c
  3554  000618  0100               	movlb	0	; () banked
  3555  00061A  6FF7               	movwf	(??_receiveData+2)& (0+255),b
  3556  00061C  6BF8               	clrf	(??_receiveData+3)& (0+255),b
  3557  00061E  0100               	movlb	0	; () banked
  3558  000620  51F5               	movf	??_receiveData& (0+255),w,b
  3559  000622  0100               	movlb	0	; () banked
  3560  000624  27F7               	addwf	(??_receiveData+2)& (0+255),f,b
  3561  000626  0100               	movlb	0	; () banked
  3562  000628  51F6               	movf	(??_receiveData+1)& (0+255),w,b
  3563  00062A  0100               	movlb	0	; () banked
  3564  00062C  23F8               	addwfc	(??_receiveData+3)& (0+255),f,b
  3565  00062E  0E00               	movlw	low _rx_buffer
  3566  000630  0100               	movlb	0	; () banked
  3567  000632  25F7               	addwf	(??_receiveData+2)& (0+255),w,b
  3568  000634  6ED9               	movwf	fsr2l,c
  3569  000636  0E03               	movlw	high _rx_buffer
  3570  000638  0100               	movlb	0	; () banked
  3571  00063A  21F8               	addwfc	(??_receiveData+3)& (0+255),w,b
  3572  00063C  6EDA               	movwf	fsr2h,c
  3573  00063E  50DF               	movf	indf2,w,c
  3574  000640  0101               	movlb	1	; () banked
  3575  000642  6F3E               	movwf	(receiveData@holder_2354+2)& (0+255),b
  3576                           
  3577                           ; BSR set to: 1
  3578                           ;FastTransfer.c: 189: unsigned char crcHolder = CRC8(holder, 3);
  3579  000644  0E3C               	movlw	low receiveData@holder_2354
  3580  000646  6E1B               	movwf	CRC8@data,c
  3581  000648  0E01               	movlw	high receiveData@holder_2354
  3582  00064A  6E1C               	movwf	CRC8@data+1,c
  3583  00064C  0E03               	movlw	3
  3584  00064E  6E1D               	movwf	CRC8@len,c
  3585  000650  ECAD  F015         	call	_CRC8
  3586  000654  0101               	movlb	1	; () banked
  3587  000656  6F40               	movwf	receiveData@crcHolder_2355& (0+255),b
  3588                           
  3589                           ; BSR set to: 1
  3590                           ;FastTransfer.c: 190: serial_write(0x06);
  3591  000658  D801               	call	u6998
  3592  00065A  D00B               	goto	l6351
  3593  00065C                     u6998:
  3594  00065C  0005               	push	
  3595  00065E  6EFA               	movwf	pclath,c
  3596  000660  5032               	movf	_serial_write,w,c
  3597  000662  6EFD               	movwf	tosl,c
  3598  000664  5033               	movf	_serial_write+1,w,c
  3599  000666  6EFE               	movwf	tosh,c
  3600  000668  50F8               	movf	tblptru,w,c
  3601  00066A  6EFF               	movwf	tosu,c
  3602  00066C  50FA               	movf	pclath,w,c
  3603  00066E  0E06               	movlw	6
  3604  000670  0012               	return		;indir
  3605  000672                     l6351:
  3606                           
  3607                           ;FastTransfer.c: 191: serial_write(0x85);
  3608  000672  D801               	call	u7008
  3609  000674  D00B               	goto	l6353
  3610  000676                     u7008:
  3611  000676  0005               	push	
  3612  000678  6EFA               	movwf	pclath,c
  3613  00067A  5032               	movf	_serial_write,w,c
  3614  00067C  6EFD               	movwf	tosl,c
  3615  00067E  5033               	movf	_serial_write+1,w,c
  3616  000680  6EFE               	movwf	tosh,c
  3617  000682  50F8               	movf	tblptru,w,c
  3618  000684  6EFF               	movwf	tosu,c
  3619  000686  50FA               	movf	pclath,w,c
  3620  000688  0E85               	movlw	133
  3621  00068A  0012               	return		;indir
  3622  00068C                     l6353:
  3623                           
  3624                           ;FastTransfer.c: 192: serial_write(returnAddress);
  3625  00068C  D801               	call	u7018
  3626  00068E  D00B               	goto	l6355
  3627  000690                     u7018:
  3628  000690  0005               	push	
  3629  000692  6EFA               	movwf	pclath,c
  3630  000694  5032               	movf	_serial_write,w,c
  3631  000696  6EFD               	movwf	tosl,c
  3632  000698  5033               	movf	_serial_write+1,w,c
  3633  00069A  6EFE               	movwf	tosh,c
  3634  00069C  50F8               	movf	tblptru,w,c
  3635  00069E  6EFF               	movwf	tosu,c
  3636  0006A0  50FA               	movf	pclath,w,c
  3637  0006A2  503C               	movf	_returnAddress,w,c
  3638  0006A4  0012               	return		;indir
  3639  0006A6                     l6355:
  3640                           
  3641                           ;FastTransfer.c: 193: serial_write(moduleAddress);
  3642  0006A6  D801               	call	u7028
  3643  0006A8  D00B               	goto	l6357
  3644  0006AA                     u7028:
  3645  0006AA  0005               	push	
  3646  0006AC  6EFA               	movwf	pclath,c
  3647  0006AE  5032               	movf	_serial_write,w,c
  3648  0006B0  6EFD               	movwf	tosl,c
  3649  0006B2  5033               	movf	_serial_write+1,w,c
  3650  0006B4  6EFE               	movwf	tosh,c
  3651  0006B6  50F8               	movf	tblptru,w,c
  3652  0006B8  6EFF               	movwf	tosu,c
  3653  0006BA  50FA               	movf	pclath,w,c
  3654  0006BC  503B               	movf	_moduleAddress,w,c
  3655  0006BE  0012               	return		;indir
  3656  0006C0                     l6357:
  3657                           
  3658                           ;FastTransfer.c: 194: serial_write(3);
  3659  0006C0  D801               	call	u7038
  3660  0006C2  D00B               	goto	l6359
  3661  0006C4                     u7038:
  3662  0006C4  0005               	push	
  3663  0006C6  6EFA               	movwf	pclath,c
  3664  0006C8  5032               	movf	_serial_write,w,c
  3665  0006CA  6EFD               	movwf	tosl,c
  3666  0006CC  5033               	movf	_serial_write+1,w,c
  3667  0006CE  6EFE               	movwf	tosh,c
  3668  0006D0  50F8               	movf	tblptru,w,c
  3669  0006D2  6EFF               	movwf	tosu,c
  3670  0006D4  50FA               	movf	pclath,w,c
  3671  0006D6  0E03               	movlw	3
  3672  0006D8  0012               	return		;indir
  3673  0006DA                     l6359:
  3674                           
  3675                           ;FastTransfer.c: 195: serial_write(255);
  3676  0006DA  D801               	call	u7048
  3677  0006DC  D00B               	goto	l6361
  3678  0006DE                     u7048:
  3679  0006DE  0005               	push	
  3680  0006E0  6EFA               	movwf	pclath,c
  3681  0006E2  5032               	movf	_serial_write,w,c
  3682  0006E4  6EFD               	movwf	tosl,c
  3683  0006E6  5033               	movf	_serial_write+1,w,c
  3684  0006E8  6EFE               	movwf	tosh,c
  3685  0006EA  50F8               	movf	tblptru,w,c
  3686  0006EC  6EFF               	movwf	tosu,c
  3687  0006EE  50FA               	movf	pclath,w,c
  3688  0006F0  0EFF               	movlw	255
  3689  0006F2  0012               	return		;indir
  3690  0006F4                     l6361:
  3691                           
  3692                           ;FastTransfer.c: 196: serial_write(2);
  3693  0006F4  D801               	call	u7058
  3694  0006F6  D00B               	goto	l6363
  3695  0006F8                     u7058:
  3696  0006F8  0005               	push	
  3697  0006FA  6EFA               	movwf	pclath,c
  3698  0006FC  5032               	movf	_serial_write,w,c
  3699  0006FE  6EFD               	movwf	tosl,c
  3700  000700  5033               	movf	_serial_write+1,w,c
  3701  000702  6EFE               	movwf	tosh,c
  3702  000704  50F8               	movf	tblptru,w,c
  3703  000706  6EFF               	movwf	tosu,c
  3704  000708  50FA               	movf	pclath,w,c
  3705  00070A  0E02               	movlw	2
  3706  00070C  0012               	return		;indir
  3707  00070E                     l6363:
  3708                           
  3709                           ;FastTransfer.c: 197: serial_write(rx_buffer[rx_array_inx - 1]);
  3710  00070E  D801               	call	u7068
  3711  000710  D025               	goto	l6365
  3712  000712                     u7068:
  3713  000712  0005               	push	
  3714  000714  6EFA               	movwf	pclath,c
  3715  000716  5032               	movf	_serial_write,w,c
  3716  000718  6EFD               	movwf	tosl,c
  3717  00071A  5033               	movf	_serial_write+1,w,c
  3718  00071C  6EFE               	movwf	tosh,c
  3719  00071E  50F8               	movf	tblptru,w,c
  3720  000720  6EFF               	movwf	tosu,c
  3721  000722  50FA               	movf	pclath,w,c
  3722  000724  0EFF               	movlw	255
  3723  000726  0100               	movlb	0	; () banked
  3724  000728  6FF5               	movwf	??_receiveData& (0+255),b
  3725  00072A  0EFF               	movlw	255
  3726  00072C  0100               	movlb	0	; () banked
  3727  00072E  6FF6               	movwf	(??_receiveData+1)& (0+255),b
  3728  000730  503E               	movf	_rx_array_inx,w,c
  3729  000732  0100               	movlb	0	; () banked
  3730  000734  6FF7               	movwf	(??_receiveData+2)& (0+255),b
  3731  000736  6BF8               	clrf	(??_receiveData+3)& (0+255),b
  3732  000738  0100               	movlb	0	; () banked
  3733  00073A  51F5               	movf	??_receiveData& (0+255),w,b
  3734  00073C  0100               	movlb	0	; () banked
  3735  00073E  27F7               	addwf	(??_receiveData+2)& (0+255),f,b
  3736  000740  0100               	movlb	0	; () banked
  3737  000742  51F6               	movf	(??_receiveData+1)& (0+255),w,b
  3738  000744  0100               	movlb	0	; () banked
  3739  000746  23F8               	addwfc	(??_receiveData+3)& (0+255),f,b
  3740  000748  0E00               	movlw	low _rx_buffer
  3741  00074A  0100               	movlb	0	; () banked
  3742  00074C  25F7               	addwf	(??_receiveData+2)& (0+255),w,b
  3743  00074E  6ED9               	movwf	fsr2l,c
  3744  000750  0E03               	movlw	high _rx_buffer
  3745  000752  0100               	movlb	0	; () banked
  3746  000754  21F8               	addwfc	(??_receiveData+3)& (0+255),w,b
  3747  000756  6EDA               	movwf	fsr2h,c
  3748  000758  50DF               	movf	indf2,w,c
  3749  00075A  0012               	return		;indir
  3750  00075C                     l6365:
  3751                           
  3752                           ;FastTransfer.c: 198: serial_write(crcHolder);
  3753  00075C  D801               	call	u7078
  3754  00075E  D00C               	goto	l6367
  3755  000760                     u7078:
  3756  000760  0005               	push	
  3757  000762  6EFA               	movwf	pclath,c
  3758  000764  5032               	movf	_serial_write,w,c
  3759  000766  6EFD               	movwf	tosl,c
  3760  000768  5033               	movf	_serial_write+1,w,c
  3761  00076A  6EFE               	movwf	tosh,c
  3762  00076C  50F8               	movf	tblptru,w,c
  3763  00076E  6EFF               	movwf	tosu,c
  3764  000770  50FA               	movf	pclath,w,c
  3765  000772  0101               	movlb	1	; () banked
  3766  000774  5140               	movf	receiveData@crcHolder_2355& (0+255),w,b
  3767  000776  0012               	return		;indir
  3768  000778                     l6367:
  3769                           
  3770                           ;FastTransfer.c: 199: }
  3771                           ;FastTransfer.c: 202: rx_len = 0;
  3772  000778  0E00               	movlw	0
  3773  00077A  6E3F               	movwf	_rx_len,c
  3774                           
  3775                           ;FastTransfer.c: 203: rx_array_inx = 0;
  3776  00077C  0E00               	movlw	0
  3777  00077E  6E3E               	movwf	_rx_array_inx,c
  3778                           
  3779                           ;FastTransfer.c: 204: return 0;
  3780  000780  0E00               	movlw	0
  3781  000782  0012               	return	
  3782  000784                     l6375:
  3783                           
  3784                           ;FastTransfer.c: 205: }
  3785                           ;FastTransfer.c: 206: }
  3786                           ;FastTransfer.c: 207: }
  3787                           ;FastTransfer.c: 210: return 0;
  3788  000784  0E00               	movlw	0
  3789  000786  0012               	return	
  3790  000788                     __end_of_receiveData:
  3791                           	opt stack 0
  3792                           tosu	equ	0xFFF
  3793                           tosh	equ	0xFFE
  3794                           tosl	equ	0xFFD
  3795                           pclath	equ	0xFFA
  3796                           tblptru	equ	0xFF8
  3797                           tblptrh	equ	0xFF7
  3798                           tblptrl	equ	0xFF6
  3799                           tablat	equ	0xFF5
  3800                           prodh	equ	0xFF4
  3801                           prodl	equ	0xFF3
  3802                           intcon	equ	0xFF2
  3803                           postinc0	equ	0xFEE
  3804                           wreg	equ	0xFE8
  3805                           indf2	equ	0xFDF
  3806                           postinc2	equ	0xFDE
  3807                           postdec2	equ	0xFDD
  3808                           plusw2	equ	0xFDB
  3809                           fsr2h	equ	0xFDA
  3810                           fsr2l	equ	0xFD9
  3811                           status	equ	0xFD8
  3812                           
  3813 ;; *************** function _Send_put *****************
  3814 ;; Defined at:
  3815 ;;		line 130 in file "UART.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;  _data           1    wreg     unsigned char 
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;  _data           1   37[COMRAM] unsigned char 
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  1    wreg      void 
  3822 ;; Registers used:
  3823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3829 ;;      Params:         0       0       0       0       0       0       0
  3830 ;;      Locals:         1       0       0       0       0       0       0
  3831 ;;      Temps:          0       0       0       0       0       0       0
  3832 ;;      Totals:         1       0       0       0       0       0       0
  3833 ;;Total ram usage:        1 bytes
  3834 ;; Hardware stack levels used:    1
  3835 ;; Hardware stack levels required when called:    6
  3836 ;; This function calls:
  3837 ;;		_UART_buff_get
  3838 ;;		_UART_buff_put
  3839 ;; This function is called by:
  3840 ;;		_SYSTEM_Initialize
  3841 ;;		_putch
  3842 ;;		_sendData
  3843 ;;		_receiveData
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847                           	psect	text13
  3848  002D86                     __ptext13:
  3849                           	opt stack 0
  3850  002D86                     _Send_put:
  3851                           	opt stack 21
  3852                           
  3853                           ;incstack = 0
  3854                           ;Send_put@_data stored from wreg
  3855  002D86  6E26               	movwf	Send_put@_data,c
  3856                           
  3857                           ;UART.c: 131: UART_buff_put(&output_buffer, _data);
  3858  002D88  0E00               	movlw	low _output_buffer
  3859  002D8A  6E21               	movwf	UART_buff_put@_this,c
  3860  002D8C  0E05               	movlw	high _output_buffer
  3861  002D8E  6E22               	movwf	UART_buff_put@_this+1,c
  3862  002D90  C026  F023         	movff	Send_put@_data,UART_buff_put@c
  3863  002D94  EC01  F00D         	call	_UART_buff_put
  3864                           
  3865                           ;UART.c: 132: if (Transmit_stall == 1) {
  3866  002D98  0444               	decf	_Transmit_stall,w,c
  3867  002D9A  A4D8               	btfss	status,2,c
  3868  002D9C  0012               	return	
  3869                           
  3870                           ;UART.c: 133: Transmit_stall = 0;
  3871  002D9E  0E00               	movlw	0
  3872  002DA0  6E44               	movwf	_Transmit_stall,c
  3873                           
  3874                           ;UART.c: 134: TXREG1 = UART_buff_get(&output_buffer);
  3875  002DA2  0E00               	movlw	low _output_buffer
  3876  002DA4  6E21               	movwf	UART_buff_get@_this,c
  3877  002DA6  0E05               	movlw	high _output_buffer
  3878  002DA8  6E22               	movwf	UART_buff_get@_this+1,c
  3879  002DAA  EC13  F013         	call	_UART_buff_get	;wreg free
  3880  002DAE  6EAD               	movwf	4013,c	;volatile
  3881                           
  3882                           ;UART.c: 135: PIE1bits.TX1IE = 1;
  3883  002DB0  889D               	bsf	3997,4,c	;volatile
  3884  002DB2  0012               	return	
  3885  002DB4                     __end_of_Send_put:
  3886                           	opt stack 0
  3887                           tosu	equ	0xFFF
  3888                           tosh	equ	0xFFE
  3889                           tosl	equ	0xFFD
  3890                           pclath	equ	0xFFA
  3891                           tblptru	equ	0xFF8
  3892                           tblptrh	equ	0xFF7
  3893                           tblptrl	equ	0xFF6
  3894                           tablat	equ	0xFF5
  3895                           prodh	equ	0xFF4
  3896                           prodl	equ	0xFF3
  3897                           intcon	equ	0xFF2
  3898                           postinc0	equ	0xFEE
  3899                           wreg	equ	0xFE8
  3900                           indf2	equ	0xFDF
  3901                           postinc2	equ	0xFDE
  3902                           postdec2	equ	0xFDD
  3903                           plusw2	equ	0xFDB
  3904                           fsr2h	equ	0xFDA
  3905                           fsr2l	equ	0xFD9
  3906                           status	equ	0xFD8
  3907                           
  3908 ;; *************** function _UART_buff_put *****************
  3909 ;; Defined at:
  3910 ;;		line 68 in file "UART.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  3913 ;;		 -> output_buffer(206), input_buffer(206), 
  3914 ;;  c               1   34[COMRAM] const unsigned char 
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;		None
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  1    wreg      void 
  3919 ;; Registers used:
  3920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3926 ;;      Params:         3       0       0       0       0       0       0
  3927 ;;      Locals:         0       0       0       0       0       0       0
  3928 ;;      Temps:          2       0       0       0       0       0       0
  3929 ;;      Totals:         5       0       0       0       0       0       0
  3930 ;;Total ram usage:        5 bytes
  3931 ;; Hardware stack levels used:    1
  3932 ;; Hardware stack levels required when called:    5
  3933 ;; This function calls:
  3934 ;;		_UART_buff_modulo_inc
  3935 ;; This function is called by:
  3936 ;;		_Send_put
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           	psect	text14
  3941  001A02                     __ptext14:
  3942                           	opt stack 0
  3943  001A02                     _UART_buff_put:
  3944                           	opt stack 21
  3945                           
  3946                           ;UART.c: 69: if (_this->count < 200) {
  3947                           
  3948                           ;incstack = 0
  3949  001A02  EE20 F0CC          	lfsr	2,204
  3950  001A06  5021               	movf	UART_buff_put@_this,w,c
  3951  001A08  26D9               	addwf	fsr2l,f,c
  3952  001A0A  5022               	movf	UART_buff_put@_this+1,w,c
  3953  001A0C  22DA               	addwfc	fsr2h,f,c
  3954  001A0E  0E01               	movlw	1
  3955  001A10  BEDB               	btfsc	plusw2,7,c
  3956  001A12  D007               	goto	l5513
  3957  001A14  0E01               	movlw	1
  3958  001A16  50DB               	movf	plusw2,w,c
  3959  001A18  E13A               	bnz	l5519
  3960  001A1A  0EC8               	movlw	200
  3961  001A1C  5CDE               	subwf	postinc2,w,c
  3962  001A1E  B0D8               	btfsc	status,0,c
  3963  001A20  D036               	goto	l5519
  3964  001A22                     l5513:
  3965                           
  3966                           ;UART.c: 70: _this->buf[_this->head] = c;
  3967  001A22  EE20 F0C8          	lfsr	2,200
  3968  001A26  5021               	movf	UART_buff_put@_this,w,c
  3969  001A28  26D9               	addwf	fsr2l,f,c
  3970  001A2A  5022               	movf	UART_buff_put@_this+1,w,c
  3971  001A2C  22DA               	addwfc	fsr2h,f,c
  3972  001A2E  CFDE F024          	movff	postinc2,??_UART_buff_put
  3973  001A32  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  3974  001A36  5024               	movf	??_UART_buff_put,w,c
  3975  001A38  2421               	addwf	UART_buff_put@_this,w,c
  3976  001A3A  6ED9               	movwf	fsr2l,c
  3977  001A3C  5025               	movf	??_UART_buff_put+1,w,c
  3978  001A3E  2022               	addwfc	UART_buff_put@_this+1,w,c
  3979  001A40  6EDA               	movwf	fsr2h,c
  3980  001A42  C023  FFDF         	movff	UART_buff_put@c,indf2
  3981                           
  3982                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
  3983  001A46  EE20 F0C8          	lfsr	2,200
  3984  001A4A  5021               	movf	UART_buff_put@_this,w,c
  3985  001A4C  26D9               	addwf	fsr2l,f,c
  3986  001A4E  5022               	movf	UART_buff_put@_this+1,w,c
  3987  001A50  22DA               	addwfc	fsr2h,f,c
  3988  001A52  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  3989  001A56  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  3990  001A5A  0E00               	movlw	0
  3991  001A5C  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  3992  001A5E  0EC8               	movlw	200
  3993  001A60  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  3994  001A62  EC05  F017         	call	_UART_buff_modulo_inc	;wreg free
  3995  001A66  EE20 F0C8          	lfsr	2,200
  3996  001A6A  5021               	movf	UART_buff_put@_this,w,c
  3997  001A6C  26D9               	addwf	fsr2l,f,c
  3998  001A6E  5022               	movf	UART_buff_put@_this+1,w,c
  3999  001A70  22DA               	addwfc	fsr2h,f,c
  4000  001A72  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4001  001A76  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4002                           
  4003                           ;UART.c: 72: ++_this->count;
  4004  001A7A  EE20 F0CC          	lfsr	2,204
  4005  001A7E  5021               	movf	UART_buff_put@_this,w,c
  4006  001A80  26D9               	addwf	fsr2l,f,c
  4007  001A82  5022               	movf	UART_buff_put@_this+1,w,c
  4008  001A84  22DA               	addwfc	fsr2h,f,c
  4009  001A86  2ADE               	incf	postinc2,f,c
  4010  001A88  0E00               	movlw	0
  4011  001A8A  22DD               	addwfc	postdec2,f,c
  4012                           
  4013                           ;UART.c: 73: } else {
  4014  001A8C  0012               	return	
  4015  001A8E                     l5519:
  4016                           
  4017                           ;UART.c: 74: _this->buf[_this->head] = c;
  4018  001A8E  EE20 F0C8          	lfsr	2,200
  4019  001A92  5021               	movf	UART_buff_put@_this,w,c
  4020  001A94  26D9               	addwf	fsr2l,f,c
  4021  001A96  5022               	movf	UART_buff_put@_this+1,w,c
  4022  001A98  22DA               	addwfc	fsr2h,f,c
  4023  001A9A  CFDE F024          	movff	postinc2,??_UART_buff_put
  4024  001A9E  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  4025  001AA2  5024               	movf	??_UART_buff_put,w,c
  4026  001AA4  2421               	addwf	UART_buff_put@_this,w,c
  4027  001AA6  6ED9               	movwf	fsr2l,c
  4028  001AA8  5025               	movf	??_UART_buff_put+1,w,c
  4029  001AAA  2022               	addwfc	UART_buff_put@_this+1,w,c
  4030  001AAC  6EDA               	movwf	fsr2h,c
  4031  001AAE  C023  FFDF         	movff	UART_buff_put@c,indf2
  4032                           
  4033                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
  4034  001AB2  EE20 F0C8          	lfsr	2,200
  4035  001AB6  5021               	movf	UART_buff_put@_this,w,c
  4036  001AB8  26D9               	addwf	fsr2l,f,c
  4037  001ABA  5022               	movf	UART_buff_put@_this+1,w,c
  4038  001ABC  22DA               	addwfc	fsr2h,f,c
  4039  001ABE  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  4040  001AC2  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  4041  001AC6  0E00               	movlw	0
  4042  001AC8  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  4043  001ACA  0EC8               	movlw	200
  4044  001ACC  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  4045  001ACE  EC05  F017         	call	_UART_buff_modulo_inc	;wreg free
  4046  001AD2  EE20 F0C8          	lfsr	2,200
  4047  001AD6  5021               	movf	UART_buff_put@_this,w,c
  4048  001AD8  26D9               	addwf	fsr2l,f,c
  4049  001ADA  5022               	movf	UART_buff_put@_this+1,w,c
  4050  001ADC  22DA               	addwfc	fsr2h,f,c
  4051  001ADE  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4052  001AE2  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4053                           
  4054                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  4055  001AE6  EE20 F0CA          	lfsr	2,202
  4056  001AEA  5021               	movf	UART_buff_put@_this,w,c
  4057  001AEC  26D9               	addwf	fsr2l,f,c
  4058  001AEE  5022               	movf	UART_buff_put@_this+1,w,c
  4059  001AF0  22DA               	addwfc	fsr2h,f,c
  4060  001AF2  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  4061  001AF6  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  4062  001AFA  0E00               	movlw	0
  4063  001AFC  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  4064  001AFE  0EC8               	movlw	200
  4065  001B00  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  4066  001B02  EC05  F017         	call	_UART_buff_modulo_inc	;wreg free
  4067  001B06  EE20 F0CA          	lfsr	2,202
  4068  001B0A  5021               	movf	UART_buff_put@_this,w,c
  4069  001B0C  26D9               	addwf	fsr2l,f,c
  4070  001B0E  5022               	movf	UART_buff_put@_this+1,w,c
  4071  001B10  22DA               	addwfc	fsr2h,f,c
  4072  001B12  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4073  001B16  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4074  001B1A  0012               	return	
  4075  001B1C                     __end_of_UART_buff_put:
  4076                           	opt stack 0
  4077                           tosu	equ	0xFFF
  4078                           tosh	equ	0xFFE
  4079                           tosl	equ	0xFFD
  4080                           pclath	equ	0xFFA
  4081                           tblptru	equ	0xFF8
  4082                           tblptrh	equ	0xFF7
  4083                           tblptrl	equ	0xFF6
  4084                           tablat	equ	0xFF5
  4085                           prodh	equ	0xFF4
  4086                           prodl	equ	0xFF3
  4087                           intcon	equ	0xFF2
  4088                           postinc0	equ	0xFEE
  4089                           wreg	equ	0xFE8
  4090                           indf2	equ	0xFDF
  4091                           postinc2	equ	0xFDE
  4092                           postdec2	equ	0xFDD
  4093                           plusw2	equ	0xFDB
  4094                           fsr2h	equ	0xFDA
  4095                           fsr2l	equ	0xFD9
  4096                           status	equ	0xFD8
  4097                           
  4098 ;; *************** function _Receive_peek *****************
  4099 ;; Defined at:
  4100 ;;		line 118 in file "UART.c"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;		None
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;		None
  4105 ;; Return value:  Size  Location     Type
  4106 ;;                  1    wreg      unsigned char 
  4107 ;; Registers used:
  4108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4114 ;;      Params:         0       0       0       0       0       0       0
  4115 ;;      Locals:         0       0       0       0       0       0       0
  4116 ;;      Temps:          0       0       0       0       0       0       0
  4117 ;;      Totals:         0       0       0       0       0       0       0
  4118 ;;Total ram usage:        0 bytes
  4119 ;; Hardware stack levels used:    1
  4120 ;; Hardware stack levels required when called:    5
  4121 ;; This function calls:
  4122 ;;		_UART_buff_peek
  4123 ;; This function is called by:
  4124 ;;		_SYSTEM_Initialize
  4125 ;;		_receiveData
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129                           	psect	text15
  4130  003000                     __ptext15:
  4131                           	opt stack 0
  4132  003000                     _Receive_peek:
  4133                           	opt stack 23
  4134                           
  4135                           ;UART.c: 119: return UART_buff_peek(&input_buffer);
  4136                           
  4137                           ;incstack = 0
  4138  003000  0E00               	movlw	low _input_buffer
  4139  003002  6E1B               	movwf	UART_buff_peek@_this,c
  4140  003004  0E04               	movlw	high _input_buffer
  4141  003006  6E1C               	movwf	UART_buff_peek@_this+1,c
  4142  003008  EC43  F017         	call	_UART_buff_peek	;wreg free
  4143  00300C  0012               	return	
  4144  00300E                     __end_of_Receive_peek:
  4145                           	opt stack 0
  4146                           tosu	equ	0xFFF
  4147                           tosh	equ	0xFFE
  4148                           tosl	equ	0xFFD
  4149                           pclath	equ	0xFFA
  4150                           tblptru	equ	0xFF8
  4151                           tblptrh	equ	0xFF7
  4152                           tblptrl	equ	0xFF6
  4153                           tablat	equ	0xFF5
  4154                           prodh	equ	0xFF4
  4155                           prodl	equ	0xFF3
  4156                           intcon	equ	0xFF2
  4157                           postinc0	equ	0xFEE
  4158                           wreg	equ	0xFE8
  4159                           indf2	equ	0xFDF
  4160                           postinc2	equ	0xFDE
  4161                           postdec2	equ	0xFDD
  4162                           plusw2	equ	0xFDB
  4163                           fsr2h	equ	0xFDA
  4164                           fsr2l	equ	0xFD9
  4165                           status	equ	0xFD8
  4166                           
  4167 ;; *************** function _UART_buff_peek *****************
  4168 ;; Defined at:
  4169 ;;		line 114 in file "UART.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  4172 ;;		 -> input_buffer(206), 
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;		None
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  1    wreg      unsigned char 
  4177 ;; Registers used:
  4178 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4184 ;;      Params:         2       0       0       0       0       0       0
  4185 ;;      Locals:         0       0       0       0       0       0       0
  4186 ;;      Temps:          2       0       0       0       0       0       0
  4187 ;;      Totals:         4       0       0       0       0       0       0
  4188 ;;Total ram usage:        4 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; Hardware stack levels required when called:    4
  4191 ;; This function calls:
  4192 ;;		Nothing
  4193 ;; This function is called by:
  4194 ;;		_Receive_peek
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           	psect	text16
  4199  002E86                     __ptext16:
  4200                           	opt stack 0
  4201  002E86                     _UART_buff_peek:
  4202                           	opt stack 23
  4203                           
  4204                           ;UART.c: 115: return _this->buf[_this->tail];
  4205                           
  4206                           ;incstack = 0
  4207  002E86  EE20 F0CA          	lfsr	2,202
  4208  002E8A  501B               	movf	UART_buff_peek@_this,w,c
  4209  002E8C  26D9               	addwf	fsr2l,f,c
  4210  002E8E  501C               	movf	UART_buff_peek@_this+1,w,c
  4211  002E90  22DA               	addwfc	fsr2h,f,c
  4212  002E92  CFDE F01D          	movff	postinc2,??_UART_buff_peek
  4213  002E96  CFDD F01E          	movff	postdec2,??_UART_buff_peek+1
  4214  002E9A  501D               	movf	??_UART_buff_peek,w,c
  4215  002E9C  241B               	addwf	UART_buff_peek@_this,w,c
  4216  002E9E  6ED9               	movwf	fsr2l,c
  4217  002EA0  501E               	movf	??_UART_buff_peek+1,w,c
  4218  002EA2  201C               	addwfc	UART_buff_peek@_this+1,w,c
  4219  002EA4  6EDA               	movwf	fsr2h,c
  4220  002EA6  50DF               	movf	indf2,w,c
  4221  002EA8  0012               	return	
  4222  002EAA                     __end_of_UART_buff_peek:
  4223                           	opt stack 0
  4224                           tosu	equ	0xFFF
  4225                           tosh	equ	0xFFE
  4226                           tosl	equ	0xFFD
  4227                           pclath	equ	0xFFA
  4228                           tblptru	equ	0xFF8
  4229                           tblptrh	equ	0xFF7
  4230                           tblptrl	equ	0xFF6
  4231                           tablat	equ	0xFF5
  4232                           prodh	equ	0xFF4
  4233                           prodl	equ	0xFF3
  4234                           intcon	equ	0xFF2
  4235                           postinc0	equ	0xFEE
  4236                           wreg	equ	0xFE8
  4237                           indf2	equ	0xFDF
  4238                           postinc2	equ	0xFDE
  4239                           postdec2	equ	0xFDD
  4240                           plusw2	equ	0xFDB
  4241                           fsr2h	equ	0xFDA
  4242                           fsr2l	equ	0xFD9
  4243                           status	equ	0xFD8
  4244                           
  4245 ;; *************** function _CRCcheck *****************
  4246 ;; Defined at:
  4247 ;;		line 373 in file "FastTransfer.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;		None
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;  rt              2    5[BANK0 ] int 
  4252 ;;  arrayHolder     3    2[BANK0 ] unsigned char [3]
  4253 ;;  calculatedCR    1    1[BANK0 ] unsigned char 
  4254 ;;  SentCRC         1    0[BANK0 ] unsigned char 
  4255 ;; Return value:  Size  Location     Type
  4256 ;;                  1    wreg      void 
  4257 ;; Registers used:
  4258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/0
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4264 ;;      Params:         0       0       0       0       0       0       0
  4265 ;;      Locals:         0       7       0       0       0       0       0
  4266 ;;      Temps:          0       0       0       0       0       0       0
  4267 ;;      Totals:         0       7       0       0       0       0       0
  4268 ;;Total ram usage:        7 bytes
  4269 ;; Hardware stack levels used:    1
  4270 ;; Hardware stack levels required when called:    7
  4271 ;; This function calls:
  4272 ;;		Absolute function
  4273 ;;		_CRC8
  4274 ;;		_Receive_available
  4275 ;;		_Receive_get
  4276 ;;		_crcBufS_get
  4277 ;;		_crcBufS_status_put
  4278 ;; This function is called by:
  4279 ;;		_receiveData
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282                           
  4283                           	psect	text17
  4284  0013DA                     __ptext17:
  4285                           	opt stack 0
  4286  0013DA                     _CRCcheck:
  4287                           	opt stack 21
  4288  0013DA                     l5949:
  4289  0013DA  D801               	call	u6138
  4290  0013DC  D00A               	goto	u6139
  4291  0013DE                     u6138:
  4292  0013DE  0005               	push	
  4293  0013E0  6EFA               	movwf	pclath,c
  4294  0013E2  502E               	movf	_serial_available,w,c
  4295  0013E4  6EFD               	movwf	tosl,c
  4296  0013E6  502F               	movf	_serial_available+1,w,c
  4297  0013E8  6EFE               	movwf	tosh,c
  4298  0013EA  50F8               	movf	tblptru,w,c
  4299  0013EC  6EFF               	movwf	tosu,c
  4300  0013EE  50FA               	movf	pclath,w,c
  4301  0013F0  0012               	return		;indir
  4302  0013F2                     u6139:
  4303  0013F2  BE1E               	btfsc	?_Receive_available+1,7,c
  4304  0013F4  D7F2               	goto	l5949
  4305  0013F6  501E               	movf	?_Receive_available+1,w,c
  4306  0013F8  E104               	bnz	l5951
  4307  0013FA  0E04               	movlw	4
  4308  0013FC  5C1D               	subwf	?_Receive_available,w,c
  4309  0013FE  A0D8               	btfss	status,0,c
  4310  001400  D7EC               	goto	l5949
  4311  001402                     l5951:
  4312                           
  4313                           ;FastTransfer.c: 377: unsigned char arrayHolder[3];
  4314                           ;FastTransfer.c: 378: arrayHolder[0] = serial_read();
  4315  001402  D801               	call	u6158
  4316  001404  D00A               	goto	u6159
  4317  001406                     u6158:
  4318  001406  0005               	push	
  4319  001408  6EFA               	movwf	pclath,c
  4320  00140A  5030               	movf	_serial_read,w,c
  4321  00140C  6EFD               	movwf	tosl,c
  4322  00140E  5031               	movf	_serial_read+1,w,c
  4323  001410  6EFE               	movwf	tosh,c
  4324  001412  50F8               	movf	tblptru,w,c
  4325  001414  6EFF               	movwf	tosu,c
  4326  001416  50FA               	movf	pclath,w,c
  4327  001418  0012               	return		;indir
  4328  00141A                     u6159:
  4329  00141A  0100               	movlb	0	; () banked
  4330  00141C  6FF0               	movwf	CRCcheck@arrayHolder& (0+255),b
  4331                           
  4332                           ;FastTransfer.c: 379: arrayHolder[1] = serial_read();
  4333  00141E  D801               	call	u6168
  4334  001420  D00A               	goto	u6169
  4335  001422                     u6168:
  4336  001422  0005               	push	
  4337  001424  6EFA               	movwf	pclath,c
  4338  001426  5030               	movf	_serial_read,w,c
  4339  001428  6EFD               	movwf	tosl,c
  4340  00142A  5031               	movf	_serial_read+1,w,c
  4341  00142C  6EFE               	movwf	tosh,c
  4342  00142E  50F8               	movf	tblptru,w,c
  4343  001430  6EFF               	movwf	tosu,c
  4344  001432  50FA               	movf	pclath,w,c
  4345  001434  0012               	return		;indir
  4346  001436                     u6169:
  4347  001436  0100               	movlb	0	; () banked
  4348  001438  6FF1               	movwf	(CRCcheck@arrayHolder+1)& (0+255),b
  4349                           
  4350                           ;FastTransfer.c: 380: arrayHolder[2] = serial_read();
  4351  00143A  D801               	call	u6178
  4352  00143C  D00A               	goto	u6179
  4353  00143E                     u6178:
  4354  00143E  0005               	push	
  4355  001440  6EFA               	movwf	pclath,c
  4356  001442  5030               	movf	_serial_read,w,c
  4357  001444  6EFD               	movwf	tosl,c
  4358  001446  5031               	movf	_serial_read+1,w,c
  4359  001448  6EFE               	movwf	tosh,c
  4360  00144A  50F8               	movf	tblptru,w,c
  4361  00144C  6EFF               	movwf	tosu,c
  4362  00144E  50FA               	movf	pclath,w,c
  4363  001450  0012               	return		;indir
  4364  001452                     u6179:
  4365  001452  0100               	movlb	0	; () banked
  4366  001454  6FF2               	movwf	(CRCcheck@arrayHolder+2)& (0+255),b
  4367                           
  4368                           ;FastTransfer.c: 381: unsigned char SentCRC = serial_read();
  4369  001456  D801               	call	u6188
  4370  001458  D00A               	goto	u6189
  4371  00145A                     u6188:
  4372  00145A  0005               	push	
  4373  00145C  6EFA               	movwf	pclath,c
  4374  00145E  5030               	movf	_serial_read,w,c
  4375  001460  6EFD               	movwf	tosl,c
  4376  001462  5031               	movf	_serial_read+1,w,c
  4377  001464  6EFE               	movwf	tosh,c
  4378  001466  50F8               	movf	tblptru,w,c
  4379  001468  6EFF               	movwf	tosu,c
  4380  00146A  50FA               	movf	pclath,w,c
  4381  00146C  0012               	return		;indir
  4382  00146E                     u6189:
  4383  00146E  0100               	movlb	0	; () banked
  4384  001470  6FEE               	movwf	CRCcheck@SentCRC& (0+255),b
  4385                           
  4386                           ; BSR set to: 0
  4387                           ;FastTransfer.c: 382: unsigned char calculatedCRC = CRC8(arrayHolder, 3);
  4388  001472  0EF0               	movlw	low CRCcheck@arrayHolder
  4389  001474  6E1B               	movwf	CRC8@data,c
  4390  001476  0E00               	movlw	high CRCcheck@arrayHolder
  4391  001478  6E1C               	movwf	CRC8@data+1,c
  4392  00147A  0E03               	movlw	3
  4393  00147C  6E1D               	movwf	CRC8@len,c
  4394  00147E  ECAD  F015         	call	_CRC8	;wreg free
  4395  001482  0100               	movlb	0	; () banked
  4396  001484  6FEF               	movwf	CRCcheck@calculatedCRC& (0+255),b
  4397                           
  4398                           ; BSR set to: 0
  4399                           ;FastTransfer.c: 385: if (SentCRC == calculatedCRC) {
  4400  001486  0100               	movlb	0	; () banked
  4401  001488  51EF               	movf	CRCcheck@calculatedCRC& (0+255),w,b
  4402  00148A  0100               	movlb	0	; () banked
  4403  00148C  19EE               	xorwf	CRCcheck@SentCRC& (0+255),w,b
  4404  00148E  A4D8               	btfss	status,2,c
  4405  001490  D04E               	goto	l5981
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;FastTransfer.c: 387: int rt;
  4409                           ;FastTransfer.c: 388: for (rt = 0; rt < 5; rt++) {
  4410  001492  0E00               	movlw	0
  4411  001494  0100               	movlb	0	; () banked
  4412  001496  6FF4               	movwf	(CRCcheck@rt+1)& (0+255),b
  4413  001498  0E00               	movlw	0
  4414  00149A  6FF3               	movwf	CRCcheck@rt& (0+255),b
  4415  00149C                     l5959:
  4416                           
  4417                           ; BSR set to: 0
  4418  00149C  0100               	movlb	0	; () banked
  4419  00149E  BFF4               	btfsc	(CRCcheck@rt+1)& (0+255),7,b
  4420  0014A0  D008               	goto	l5963
  4421  0014A2  0100               	movlb	0	; () banked
  4422  0014A4  51F4               	movf	(CRCcheck@rt+1)& (0+255),w,b
  4423  0014A6  E147               	bnz	l1117
  4424  0014A8  0E05               	movlw	5
  4425  0014AA  0100               	movlb	0	; () banked
  4426  0014AC  5DF3               	subwf	CRCcheck@rt& (0+255),w,b
  4427  0014AE  B0D8               	btfsc	status,0,c
  4428  0014B0  0012               	return	
  4429  0014B2                     l5963:
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;FastTransfer.c: 389: if (returnAddress == crcBufS_get(&crc_buffer, rt, 0)) {
  4433  0014B2  0E28               	movlw	low _crc_buffer
  4434  0014B4  6E1B               	movwf	crcBufS_get@_this,c
  4435  0014B6  0E01               	movlw	high _crc_buffer
  4436  0014B8  6E1C               	movwf	crcBufS_get@_this+1,c
  4437  0014BA  C0F3  F01D         	movff	CRCcheck@rt,crcBufS_get@time
  4438  0014BE  0E00               	movlw	0
  4439  0014C0  6E1E               	movwf	crcBufS_get@space,c
  4440  0014C2  EC20  F00F         	call	_crcBufS_get	;wreg free
  4441  0014C6  183C               	xorwf	_returnAddress,w,c
  4442  0014C8  A4D8               	btfss	status,2,c
  4443  0014CA  D02D               	goto	l5977
  4444                           
  4445                           ;FastTransfer.c: 390: if (arrayHolder[2] == crcBufS_get(&crc_buffer, rt, 1)) {
  4446  0014CC  0E28               	movlw	low _crc_buffer
  4447  0014CE  6E1B               	movwf	crcBufS_get@_this,c
  4448  0014D0  0E01               	movlw	high _crc_buffer
  4449  0014D2  6E1C               	movwf	crcBufS_get@_this+1,c
  4450  0014D4  C0F3  F01D         	movff	CRCcheck@rt,crcBufS_get@time
  4451  0014D8  0E01               	movlw	1
  4452  0014DA  6E1E               	movwf	crcBufS_get@space,c
  4453  0014DC  EC20  F00F         	call	_crcBufS_get	;wreg free
  4454  0014E0  0100               	movlb	0	; () banked
  4455  0014E2  19F2               	xorwf	(CRCcheck@arrayHolder+2)& (0+255),w,b
  4456  0014E4  A4D8               	btfss	status,2,c
  4457  0014E6  D01F               	goto	l5977
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;FastTransfer.c: 391: if (arrayHolder[1] == 1) {
  4461  0014E8  0100               	movlb	0	; () banked
  4462  0014EA  05F1               	decf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  4463  0014EC  A4D8               	btfss	status,2,c
  4464  0014EE  D00B               	goto	l5973
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;FastTransfer.c: 392: crcBufS_status_put(&crc_buffer, rt, 1);
  4468  0014F0  0E28               	movlw	low _crc_buffer
  4469  0014F2  6E1B               	movwf	crcBufS_status_put@_this,c
  4470  0014F4  0E01               	movlw	high _crc_buffer
  4471  0014F6  6E1C               	movwf	crcBufS_status_put@_this+1,c
  4472  0014F8  C0F3  F01D         	movff	CRCcheck@rt,crcBufS_status_put@time
  4473  0014FC  0E01               	movlw	1
  4474  0014FE  6E1E               	movwf	crcBufS_status_put@status,c
  4475  001500  ECFD  F00F         	call	_crcBufS_status_put	;wreg free
  4476                           
  4477                           ;FastTransfer.c: 393: break;
  4478  001504  0012               	return	
  4479  001506                     l5973:
  4480  001506  0E02               	movlw	2
  4481  001508  0100               	movlb	0	; () banked
  4482  00150A  19F1               	xorwf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  4483  00150C  A4D8               	btfss	status,2,c
  4484  00150E  D00B               	goto	l5977
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;FastTransfer.c: 395: crcBufS_status_put(&crc_buffer, rt, 2);
  4488  001510  0E28               	movlw	low _crc_buffer
  4489  001512  6E1B               	movwf	crcBufS_status_put@_this,c
  4490  001514  0E01               	movlw	high _crc_buffer
  4491  001516  6E1C               	movwf	crcBufS_status_put@_this+1,c
  4492  001518  C0F3  F01D         	movff	CRCcheck@rt,crcBufS_status_put@time
  4493  00151C  0E02               	movlw	2
  4494  00151E  6E1E               	movwf	crcBufS_status_put@status,c
  4495  001520  ECFD  F00F         	call	_crcBufS_status_put	;wreg free
  4496                           
  4497                           ;FastTransfer.c: 396: break;
  4498  001524  0012               	return	
  4499  001526                     l5977:
  4500  001526  0100               	movlb	0	; () banked
  4501  001528  4BF3               	infsnz	CRCcheck@rt& (0+255),f,b
  4502  00152A  2BF4               	incf	(CRCcheck@rt+1)& (0+255),f,b
  4503  00152C  D7B7               	goto	l5959
  4504  00152E                     l5981:
  4505                           
  4506                           ; BSR set to: 0
  4507                           ;FastTransfer.c: 402: crcErrorCounter++;
  4508  00152E  0100               	movlb	0	; () banked
  4509  001530  4BC9               	infsnz	_crcErrorCounter& (0+255),f,b
  4510  001532  2BCA               	incf	(_crcErrorCounter+1)& (0+255),f,b
  4511  001534  0012               	return	
  4512  001536                     l1117:
  4513  001536  0012               	return		;funcret
  4514  001538                     __end_of_CRCcheck:
  4515                           	opt stack 0
  4516                           tosu	equ	0xFFF
  4517                           tosh	equ	0xFFE
  4518                           tosl	equ	0xFFD
  4519                           pclath	equ	0xFFA
  4520                           tblptru	equ	0xFF8
  4521                           tblptrh	equ	0xFF7
  4522                           tblptrl	equ	0xFF6
  4523                           tablat	equ	0xFF5
  4524                           prodh	equ	0xFF4
  4525                           prodl	equ	0xFF3
  4526                           intcon	equ	0xFF2
  4527                           postinc0	equ	0xFEE
  4528                           wreg	equ	0xFE8
  4529                           indf2	equ	0xFDF
  4530                           postinc2	equ	0xFDE
  4531                           postdec2	equ	0xFDD
  4532                           plusw2	equ	0xFDB
  4533                           fsr2h	equ	0xFDA
  4534                           fsr2l	equ	0xFD9
  4535                           status	equ	0xFD8
  4536                           
  4537 ;; *************** function _crcBufS_status_put *****************
  4538 ;; Defined at:
  4539 ;;		line 336 in file "FastTransfer.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  4542 ;;		 -> crc_buffer(17), 
  4543 ;;  time            1   28[COMRAM] unsigned char 
  4544 ;;  status          1   29[COMRAM] unsigned char 
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;  wantedTime      2   34[COMRAM] int 
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  1    wreg      void 
  4549 ;; Registers used:
  4550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4556 ;;      Params:         4       0       0       0       0       0       0
  4557 ;;      Locals:         2       0       0       0       0       0       0
  4558 ;;      Temps:          4       0       0       0       0       0       0
  4559 ;;      Totals:        10       0       0       0       0       0       0
  4560 ;;Total ram usage:       10 bytes
  4561 ;; Hardware stack levels used:    1
  4562 ;; Hardware stack levels required when called:    4
  4563 ;; This function calls:
  4564 ;;		Nothing
  4565 ;; This function is called by:
  4566 ;;		_CRCcheck
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           	psect	text18
  4571  001FFA                     __ptext18:
  4572                           	opt stack 0
  4573  001FFA                     _crcBufS_status_put:
  4574                           	opt stack 23
  4575                           
  4576                           ;FastTransfer.c: 337: if (time >= 5) {
  4577                           
  4578                           ;incstack = 0
  4579  001FFA  0E04               	movlw	4
  4580  001FFC  641D               	cpfsgt	crcBufS_status_put@time,c
  4581  001FFE  D002               	goto	l5715
  4582                           
  4583                           ;FastTransfer.c: 338: time = 5 - 1;
  4584  002000  0E04               	movlw	4
  4585  002002  6E1D               	movwf	crcBufS_status_put@time,c
  4586  002004                     l5715:
  4587                           
  4588                           ;FastTransfer.c: 339: }
  4589                           ;FastTransfer.c: 340: time = time + 1;
  4590  002004  281D               	incf	crcBufS_status_put@time,w,c
  4591  002006  6E1D               	movwf	crcBufS_status_put@time,c
  4592                           
  4593                           ;FastTransfer.c: 341: int wantedTime = time * 3;
  4594  002008  501D               	movf	crcBufS_status_put@time,w,c
  4595  00200A  0D03               	mullw	3
  4596  00200C  CFF3 F023          	movff	prodl,crcBufS_status_put@wantedTime
  4597  002010  CFF4 F024          	movff	prodh,crcBufS_status_put@wantedTime+1
  4598                           
  4599                           ;FastTransfer.c: 342: if (wantedTime > _this->head) {
  4600  002014  EE20 F00F          	lfsr	2,15
  4601  002018  501B               	movf	crcBufS_status_put@_this,w,c
  4602  00201A  26D9               	addwf	fsr2l,f,c
  4603  00201C  501C               	movf	crcBufS_status_put@_this+1,w,c
  4604  00201E  22DA               	addwfc	fsr2h,f,c
  4605  002020  5023               	movf	crcBufS_status_put@wantedTime,w,c
  4606  002022  5CDE               	subwf	postinc2,w,c
  4607  002024  50DE               	movf	postinc2,w,c
  4608  002026  0A80               	xorlw	128
  4609  002028  6E21               	movwf	(??_crcBufS_status_put+2)& (0+255),c
  4610  00202A  5024               	movf	crcBufS_status_put@wantedTime+1,w,c
  4611  00202C  0A80               	xorlw	128
  4612  00202E  5821               	subwfb	(??_crcBufS_status_put+2)& (0+255),w,c
  4613  002030  B0D8               	btfsc	status,0,c
  4614  002032  D02B               	goto	l5723
  4615                           
  4616                           ;FastTransfer.c: 343: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  4617  002034  EE20 F00F          	lfsr	2,15
  4618  002038  501B               	movf	crcBufS_status_put@_this,w,c
  4619  00203A  26D9               	addwf	fsr2l,f,c
  4620  00203C  501C               	movf	crcBufS_status_put@_this+1,w,c
  4621  00203E  22DA               	addwfc	fsr2h,f,c
  4622  002040  CFDE F01F          	movff	postinc2,??_crcBufS_status_put
  4623  002044  CFDD F020          	movff	postdec2,??_crcBufS_status_put+1
  4624  002048  1E1F               	comf	??_crcBufS_status_put,f,c
  4625  00204A  1E20               	comf	??_crcBufS_status_put+1,f,c
  4626  00204C  4A1F               	infsnz	??_crcBufS_status_put,f,c
  4627  00204E  2A20               	incf	??_crcBufS_status_put+1,f,c
  4628  002050  5023               	movf	crcBufS_status_put@wantedTime,w,c
  4629  002052  261F               	addwf	??_crcBufS_status_put,f,c
  4630  002054  5024               	movf	crcBufS_status_put@wantedTime+1,w,c
  4631  002056  2220               	addwfc	??_crcBufS_status_put+1,f,c
  4632  002058  1E1F               	comf	??_crcBufS_status_put,f,c
  4633  00205A  1E20               	comf	??_crcBufS_status_put+1,f,c
  4634  00205C  4A1F               	infsnz	??_crcBufS_status_put,f,c
  4635  00205E  2A20               	incf	??_crcBufS_status_put+1,f,c
  4636  002060  0E0F               	movlw	15
  4637  002062  241F               	addwf	??_crcBufS_status_put,w,c
  4638  002064  6E23               	movwf	crcBufS_status_put@wantedTime,c
  4639  002066  0E00               	movlw	0
  4640  002068  2020               	addwfc	??_crcBufS_status_put+1,w,c
  4641  00206A  6E24               	movwf	crcBufS_status_put@wantedTime+1,c
  4642                           
  4643                           ;FastTransfer.c: 344: _this->buf[(wantedTime + 2)] = status;
  4644  00206C  0E02               	movlw	2
  4645  00206E  2423               	addwf	crcBufS_status_put@wantedTime,w,c
  4646  002070  6E1F               	movwf	??_crcBufS_status_put& (0+255),c
  4647  002072  0E00               	movlw	0
  4648  002074  2024               	addwfc	crcBufS_status_put@wantedTime+1,w,c
  4649  002076  6E20               	movwf	(??_crcBufS_status_put+1)& (0+255),c
  4650  002078  501F               	movf	??_crcBufS_status_put,w,c
  4651  00207A  241B               	addwf	crcBufS_status_put@_this,w,c
  4652  00207C  6ED9               	movwf	fsr2l,c
  4653  00207E  5020               	movf	??_crcBufS_status_put+1,w,c
  4654  002080  201C               	addwfc	crcBufS_status_put@_this+1,w,c
  4655  002082  6EDA               	movwf	fsr2h,c
  4656  002084  C01E  FFDF         	movff	crcBufS_status_put@status,indf2
  4657                           
  4658                           ;FastTransfer.c: 345: } else {
  4659  002088  0012               	return	
  4660  00208A                     l5723:
  4661                           
  4662                           ;FastTransfer.c: 346: _this->buf[(_this->head - wantedTime) + 2] = status;
  4663  00208A  EE20 F00F          	lfsr	2,15
  4664  00208E  501B               	movf	crcBufS_status_put@_this,w,c
  4665  002090  26D9               	addwf	fsr2l,f,c
  4666  002092  501C               	movf	crcBufS_status_put@_this+1,w,c
  4667  002094  22DA               	addwfc	fsr2h,f,c
  4668  002096  CFDE F01F          	movff	postinc2,??_crcBufS_status_put
  4669  00209A  CFDD F020          	movff	postdec2,??_crcBufS_status_put+1
  4670  00209E  C023  F021         	movff	crcBufS_status_put@wantedTime,??_crcBufS_status_put+2
  4671  0020A2  C024  F022         	movff	crcBufS_status_put@wantedTime+1,??_crcBufS_status_put+3
  4672  0020A6  1E21               	comf	??_crcBufS_status_put+2,f,c
  4673  0020A8  1E22               	comf	??_crcBufS_status_put+3,f,c
  4674  0020AA  4A21               	infsnz	??_crcBufS_status_put+2,f,c
  4675  0020AC  2A22               	incf	??_crcBufS_status_put+3,f,c
  4676  0020AE  501F               	movf	??_crcBufS_status_put,w,c
  4677  0020B0  2621               	addwf	??_crcBufS_status_put+2,f,c
  4678  0020B2  5020               	movf	??_crcBufS_status_put+1,w,c
  4679  0020B4  2222               	addwfc	??_crcBufS_status_put+3,f,c
  4680  0020B6  0E02               	movlw	2
  4681  0020B8  2621               	addwf	??_crcBufS_status_put+2,f,c
  4682  0020BA  0E00               	movlw	0
  4683  0020BC  2222               	addwfc	??_crcBufS_status_put+3,f,c
  4684  0020BE  5021               	movf	??_crcBufS_status_put+2,w,c
  4685  0020C0  241B               	addwf	crcBufS_status_put@_this,w,c
  4686  0020C2  6ED9               	movwf	fsr2l,c
  4687  0020C4  5022               	movf	??_crcBufS_status_put+3,w,c
  4688  0020C6  201C               	addwfc	crcBufS_status_put@_this+1,w,c
  4689  0020C8  6EDA               	movwf	fsr2h,c
  4690  0020CA  C01E  FFDF         	movff	crcBufS_status_put@status,indf2
  4691  0020CE  0012               	return	
  4692  0020D0                     __end_of_crcBufS_status_put:
  4693                           	opt stack 0
  4694                           tosu	equ	0xFFF
  4695                           tosh	equ	0xFFE
  4696                           tosl	equ	0xFFD
  4697                           pclath	equ	0xFFA
  4698                           tblptru	equ	0xFF8
  4699                           tblptrh	equ	0xFF7
  4700                           tblptrl	equ	0xFF6
  4701                           tablat	equ	0xFF5
  4702                           prodh	equ	0xFF4
  4703                           prodl	equ	0xFF3
  4704                           intcon	equ	0xFF2
  4705                           postinc0	equ	0xFEE
  4706                           wreg	equ	0xFE8
  4707                           indf2	equ	0xFDF
  4708                           postinc2	equ	0xFDE
  4709                           postdec2	equ	0xFDD
  4710                           plusw2	equ	0xFDB
  4711                           fsr2h	equ	0xFDA
  4712                           fsr2l	equ	0xFD9
  4713                           status	equ	0xFD8
  4714                           
  4715 ;; *************** function _crcBufS_get *****************
  4716 ;; Defined at:
  4717 ;;		line 353 in file "FastTransfer.c"
  4718 ;; Parameters:    Size  Location     Type
  4719 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  4720 ;;		 -> crc_buffer(17), 
  4721 ;;  time            1   28[COMRAM] unsigned char 
  4722 ;;  space           1   29[COMRAM] unsigned char 
  4723 ;; Auto vars:     Size  Location     Type
  4724 ;;  wantedTime      2   36[COMRAM] int 
  4725 ;; Return value:  Size  Location     Type
  4726 ;;                  1    wreg      unsigned char 
  4727 ;; Registers used:
  4728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4729 ;; Tracked objects:
  4730 ;;		On entry : 0/0
  4731 ;;		On exit  : 0/0
  4732 ;;		Unchanged: 0/0
  4733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4734 ;;      Params:         4       0       0       0       0       0       0
  4735 ;;      Locals:         2       0       0       0       0       0       0
  4736 ;;      Temps:          6       0       0       0       0       0       0
  4737 ;;      Totals:        12       0       0       0       0       0       0
  4738 ;;Total ram usage:       12 bytes
  4739 ;; Hardware stack levels used:    1
  4740 ;; Hardware stack levels required when called:    4
  4741 ;; This function calls:
  4742 ;;		Nothing
  4743 ;; This function is called by:
  4744 ;;		_CRCcheck
  4745 ;;		_AKNAK
  4746 ;; This function uses a non-reentrant model
  4747 ;;
  4748                           
  4749                           	psect	text19
  4750  001E40                     __ptext19:
  4751                           	opt stack 0
  4752  001E40                     _crcBufS_get:
  4753                           	opt stack 23
  4754                           
  4755                           ;FastTransfer.c: 354: if (time >= 5) {
  4756                           
  4757                           ;incstack = 0
  4758  001E40  0E04               	movlw	4
  4759  001E42  641D               	cpfsgt	crcBufS_get@time,c
  4760  001E44  D002               	goto	l5691
  4761                           
  4762                           ;FastTransfer.c: 355: time = 5 - 1;
  4763  001E46  0E04               	movlw	4
  4764  001E48  6E1D               	movwf	crcBufS_get@time,c
  4765  001E4A                     l5691:
  4766                           
  4767                           ;FastTransfer.c: 356: }
  4768                           ;FastTransfer.c: 357: if (space >= 3) {
  4769  001E4A  0E02               	movlw	2
  4770  001E4C  641E               	cpfsgt	crcBufS_get@space,c
  4771  001E4E  D002               	goto	l5695
  4772                           
  4773                           ;FastTransfer.c: 358: space = 3 - 1;
  4774  001E50  0E02               	movlw	2
  4775  001E52  6E1E               	movwf	crcBufS_get@space,c
  4776  001E54                     l5695:
  4777                           
  4778                           ;FastTransfer.c: 359: }
  4779                           ;FastTransfer.c: 360: time = time + 1;
  4780  001E54  281D               	incf	crcBufS_get@time,w,c
  4781  001E56  6E1D               	movwf	crcBufS_get@time,c
  4782                           
  4783                           ;FastTransfer.c: 361: int wantedTime = time * 3;
  4784  001E58  501D               	movf	crcBufS_get@time,w,c
  4785  001E5A  0D03               	mullw	3
  4786  001E5C  CFF3 F025          	movff	prodl,crcBufS_get@wantedTime
  4787  001E60  CFF4 F026          	movff	prodh,crcBufS_get@wantedTime+1
  4788                           
  4789                           ;FastTransfer.c: 362: if (wantedTime > _this->head) {
  4790  001E64  EE20 F00F          	lfsr	2,15
  4791  001E68  501B               	movf	crcBufS_get@_this,w,c
  4792  001E6A  26D9               	addwf	fsr2l,f,c
  4793  001E6C  501C               	movf	crcBufS_get@_this+1,w,c
  4794  001E6E  22DA               	addwfc	fsr2h,f,c
  4795  001E70  5025               	movf	crcBufS_get@wantedTime,w,c
  4796  001E72  5CDE               	subwf	postinc2,w,c
  4797  001E74  50DE               	movf	postinc2,w,c
  4798  001E76  0A80               	xorlw	128
  4799  001E78  6E21               	movwf	(??_crcBufS_get+2)& (0+255),c
  4800  001E7A  5026               	movf	crcBufS_get@wantedTime+1,w,c
  4801  001E7C  0A80               	xorlw	128
  4802  001E7E  5821               	subwfb	(??_crcBufS_get+2)& (0+255),w,c
  4803  001E80  B0D8               	btfsc	status,0,c
  4804  001E82  D02A               	goto	l5707
  4805                           
  4806                           ;FastTransfer.c: 363: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  4807  001E84  EE20 F00F          	lfsr	2,15
  4808  001E88  501B               	movf	crcBufS_get@_this,w,c
  4809  001E8A  26D9               	addwf	fsr2l,f,c
  4810  001E8C  501C               	movf	crcBufS_get@_this+1,w,c
  4811  001E8E  22DA               	addwfc	fsr2h,f,c
  4812  001E90  CFDE F01F          	movff	postinc2,??_crcBufS_get
  4813  001E94  CFDD F020          	movff	postdec2,??_crcBufS_get+1
  4814  001E98  1E1F               	comf	??_crcBufS_get,f,c
  4815  001E9A  1E20               	comf	??_crcBufS_get+1,f,c
  4816  001E9C  4A1F               	infsnz	??_crcBufS_get,f,c
  4817  001E9E  2A20               	incf	??_crcBufS_get+1,f,c
  4818  001EA0  5025               	movf	crcBufS_get@wantedTime,w,c
  4819  001EA2  261F               	addwf	??_crcBufS_get,f,c
  4820  001EA4  5026               	movf	crcBufS_get@wantedTime+1,w,c
  4821  001EA6  2220               	addwfc	??_crcBufS_get+1,f,c
  4822  001EA8  1E1F               	comf	??_crcBufS_get,f,c
  4823  001EAA  1E20               	comf	??_crcBufS_get+1,f,c
  4824  001EAC  4A1F               	infsnz	??_crcBufS_get,f,c
  4825  001EAE  2A20               	incf	??_crcBufS_get+1,f,c
  4826  001EB0  0E0F               	movlw	15
  4827  001EB2  241F               	addwf	??_crcBufS_get,w,c
  4828  001EB4  6E25               	movwf	crcBufS_get@wantedTime,c
  4829  001EB6  0E00               	movlw	0
  4830  001EB8  2020               	addwfc	??_crcBufS_get+1,w,c
  4831  001EBA  6E26               	movwf	crcBufS_get@wantedTime+1,c
  4832                           
  4833                           ;FastTransfer.c: 364: return (_this->buf[(wantedTime + space)]);
  4834  001EBC  501E               	movf	crcBufS_get@space,w,c
  4835  001EBE  2425               	addwf	crcBufS_get@wantedTime,w,c
  4836  001EC0  6E1F               	movwf	??_crcBufS_get& (0+255),c
  4837  001EC2  0E00               	movlw	0
  4838  001EC4  2026               	addwfc	crcBufS_get@wantedTime+1,w,c
  4839  001EC6  6E20               	movwf	(??_crcBufS_get+1)& (0+255),c
  4840  001EC8  501F               	movf	??_crcBufS_get,w,c
  4841  001ECA  241B               	addwf	crcBufS_get@_this,w,c
  4842  001ECC  6ED9               	movwf	fsr2l,c
  4843  001ECE  5020               	movf	??_crcBufS_get+1,w,c
  4844  001ED0  201C               	addwfc	crcBufS_get@_this+1,w,c
  4845  001ED2  6EDA               	movwf	fsr2h,c
  4846  001ED4  50DF               	movf	indf2,w,c
  4847                           
  4848                           ;FastTransfer.c: 365: } else {
  4849  001ED6  0012               	return	
  4850  001ED8                     l5707:
  4851                           
  4852                           ;FastTransfer.c: 366: return (_this->buf[(_this->head - wantedTime) + space]);
  4853  001ED8  EE20 F00F          	lfsr	2,15
  4854  001EDC  501B               	movf	crcBufS_get@_this,w,c
  4855  001EDE  26D9               	addwf	fsr2l,f,c
  4856  001EE0  501C               	movf	crcBufS_get@_this+1,w,c
  4857  001EE2  22DA               	addwfc	fsr2h,f,c
  4858  001EE4  CFDE F01F          	movff	postinc2,??_crcBufS_get
  4859  001EE8  CFDD F020          	movff	postdec2,??_crcBufS_get+1
  4860  001EEC  C025  F021         	movff	crcBufS_get@wantedTime,??_crcBufS_get+2
  4861  001EF0  C026  F022         	movff	crcBufS_get@wantedTime+1,??_crcBufS_get+3
  4862  001EF4  1E21               	comf	??_crcBufS_get+2,f,c
  4863  001EF6  1E22               	comf	??_crcBufS_get+3,f,c
  4864  001EF8  4A21               	infsnz	??_crcBufS_get+2,f,c
  4865  001EFA  2A22               	incf	??_crcBufS_get+3,f,c
  4866  001EFC  501E               	movf	crcBufS_get@space,w,c
  4867  001EFE  6E23               	movwf	(??_crcBufS_get+4)& (0+255),c
  4868  001F00  6A24               	clrf	(??_crcBufS_get+5)& (0+255),c
  4869  001F02  5021               	movf	??_crcBufS_get+2,w,c
  4870  001F04  2623               	addwf	??_crcBufS_get+4,f,c
  4871  001F06  5022               	movf	??_crcBufS_get+3,w,c
  4872  001F08  2224               	addwfc	??_crcBufS_get+5,f,c
  4873  001F0A  501F               	movf	??_crcBufS_get,w,c
  4874  001F0C  2623               	addwf	??_crcBufS_get+4,f,c
  4875  001F0E  5020               	movf	??_crcBufS_get+1,w,c
  4876  001F10  2224               	addwfc	??_crcBufS_get+5,f,c
  4877  001F12  5023               	movf	??_crcBufS_get+4,w,c
  4878  001F14  241B               	addwf	crcBufS_get@_this,w,c
  4879  001F16  6ED9               	movwf	fsr2l,c
  4880  001F18  5024               	movf	??_crcBufS_get+5,w,c
  4881  001F1A  201C               	addwfc	crcBufS_get@_this+1,w,c
  4882  001F1C  6EDA               	movwf	fsr2h,c
  4883  001F1E  50DF               	movf	indf2,w,c
  4884  001F20  0012               	return	
  4885  001F22                     __end_of_crcBufS_get:
  4886                           	opt stack 0
  4887                           tosu	equ	0xFFF
  4888                           tosh	equ	0xFFE
  4889                           tosl	equ	0xFFD
  4890                           pclath	equ	0xFFA
  4891                           tblptru	equ	0xFF8
  4892                           tblptrh	equ	0xFF7
  4893                           tblptrl	equ	0xFF6
  4894                           tablat	equ	0xFF5
  4895                           prodh	equ	0xFF4
  4896                           prodl	equ	0xFF3
  4897                           intcon	equ	0xFF2
  4898                           postinc0	equ	0xFEE
  4899                           wreg	equ	0xFE8
  4900                           indf2	equ	0xFDF
  4901                           postinc2	equ	0xFDE
  4902                           postdec2	equ	0xFDD
  4903                           plusw2	equ	0xFDB
  4904                           fsr2h	equ	0xFDA
  4905                           fsr2l	equ	0xFD9
  4906                           status	equ	0xFD8
  4907                           
  4908 ;; *************** function _Receive_get *****************
  4909 ;; Defined at:
  4910 ;;		line 126 in file "UART.c"
  4911 ;; Parameters:    Size  Location     Type
  4912 ;;		None
  4913 ;; Auto vars:     Size  Location     Type
  4914 ;;		None
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  1    wreg      unsigned char 
  4917 ;; Registers used:
  4918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4919 ;; Tracked objects:
  4920 ;;		On entry : 0/0
  4921 ;;		On exit  : 0/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4924 ;;      Params:         0       0       0       0       0       0       0
  4925 ;;      Locals:         0       0       0       0       0       0       0
  4926 ;;      Temps:          0       0       0       0       0       0       0
  4927 ;;      Totals:         0       0       0       0       0       0       0
  4928 ;;Total ram usage:        0 bytes
  4929 ;; Hardware stack levels used:    1
  4930 ;; Hardware stack levels required when called:    6
  4931 ;; This function calls:
  4932 ;;		_UART_buff_get
  4933 ;; This function is called by:
  4934 ;;		_SYSTEM_Initialize
  4935 ;;		_getch
  4936 ;;		_CRCcheck
  4937 ;;		_receiveData
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941                           	psect	text20
  4942  00300E                     __ptext20:
  4943                           	opt stack 0
  4944  00300E                     _Receive_get:
  4945                           	opt stack 22
  4946                           
  4947                           ;UART.c: 127: return UART_buff_get(&input_buffer);
  4948                           
  4949                           ;incstack = 0
  4950  00300E  0E00               	movlw	low _input_buffer
  4951  003010  6E21               	movwf	UART_buff_get@_this,c
  4952  003012  0E04               	movlw	high _input_buffer
  4953  003014  6E22               	movwf	UART_buff_get@_this+1,c
  4954  003016  EC13  F013         	call	_UART_buff_get	;wreg free
  4955  00301A  0012               	return	
  4956  00301C                     __end_of_Receive_get:
  4957                           	opt stack 0
  4958                           tosu	equ	0xFFF
  4959                           tosh	equ	0xFFE
  4960                           tosl	equ	0xFFD
  4961                           pclath	equ	0xFFA
  4962                           tblptru	equ	0xFF8
  4963                           tblptrh	equ	0xFF7
  4964                           tblptrl	equ	0xFF6
  4965                           tablat	equ	0xFF5
  4966                           prodh	equ	0xFF4
  4967                           prodl	equ	0xFF3
  4968                           intcon	equ	0xFF2
  4969                           postinc0	equ	0xFEE
  4970                           wreg	equ	0xFE8
  4971                           indf2	equ	0xFDF
  4972                           postinc2	equ	0xFDE
  4973                           postdec2	equ	0xFDD
  4974                           plusw2	equ	0xFDB
  4975                           fsr2h	equ	0xFDA
  4976                           fsr2l	equ	0xFD9
  4977                           status	equ	0xFD8
  4978                           
  4979 ;; *************** function _UART_buff_get *****************
  4980 ;; Defined at:
  4981 ;;		line 81 in file "UART.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  4984 ;;		 -> output_buffer(206), input_buffer(206), 
  4985 ;; Auto vars:     Size  Location     Type
  4986 ;;  c               1   36[COMRAM] unsigned char 
  4987 ;; Return value:  Size  Location     Type
  4988 ;;                  1    wreg      unsigned char 
  4989 ;; Registers used:
  4990 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4991 ;; Tracked objects:
  4992 ;;		On entry : 0/0
  4993 ;;		On exit  : 0/0
  4994 ;;		Unchanged: 0/0
  4995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4996 ;;      Params:         2       0       0       0       0       0       0
  4997 ;;      Locals:         1       0       0       0       0       0       0
  4998 ;;      Temps:          2       0       0       0       0       0       0
  4999 ;;      Totals:         5       0       0       0       0       0       0
  5000 ;;Total ram usage:        5 bytes
  5001 ;; Hardware stack levels used:    1
  5002 ;; Hardware stack levels required when called:    5
  5003 ;; This function calls:
  5004 ;;		_UART_buff_modulo_inc
  5005 ;; This function is called by:
  5006 ;;		_Receive_get
  5007 ;;		_Send_put
  5008 ;; This function uses a non-reentrant model
  5009 ;;
  5010                           
  5011                           	psect	text21
  5012  002626                     __ptext21:
  5013                           	opt stack 0
  5014  002626                     _UART_buff_get:
  5015                           	opt stack 21
  5016                           
  5017                           ;UART.c: 82: unsigned char c;
  5018                           ;UART.c: 83: if (_this->count > 0) {
  5019                           
  5020                           ;incstack = 0
  5021  002626  EE20 F0CC          	lfsr	2,204
  5022  00262A  5021               	movf	UART_buff_get@_this,w,c
  5023  00262C  26D9               	addwf	fsr2l,f,c
  5024  00262E  5022               	movf	UART_buff_get@_this+1,w,c
  5025  002630  22DA               	addwfc	fsr2h,f,c
  5026  002632  0E01               	movlw	1
  5027  002634  BEDB               	btfsc	plusw2,7,c
  5028  002636  D03C               	goto	l5533
  5029  002638  0E01               	movlw	1
  5030  00263A  50DB               	movf	plusw2,w,c
  5031  00263C  E103               	bnz	u5640
  5032  00263E  04DE               	decf	postinc2,w,c
  5033  002640  A0D8               	btfss	status,0,c
  5034  002642  D036               	goto	l5533
  5035  002644                     u5640:
  5036                           
  5037                           ;UART.c: 84: c = _this->buf[_this->tail];
  5038  002644  EE20 F0CA          	lfsr	2,202
  5039  002648  5021               	movf	UART_buff_get@_this,w,c
  5040  00264A  26D9               	addwf	fsr2l,f,c
  5041  00264C  5022               	movf	UART_buff_get@_this+1,w,c
  5042  00264E  22DA               	addwfc	fsr2h,f,c
  5043  002650  CFDE F023          	movff	postinc2,??_UART_buff_get
  5044  002654  CFDD F024          	movff	postdec2,??_UART_buff_get+1
  5045  002658  5023               	movf	??_UART_buff_get,w,c
  5046  00265A  2421               	addwf	UART_buff_get@_this,w,c
  5047  00265C  6ED9               	movwf	fsr2l,c
  5048  00265E  5024               	movf	??_UART_buff_get+1,w,c
  5049  002660  2022               	addwfc	UART_buff_get@_this+1,w,c
  5050  002662  6EDA               	movwf	fsr2h,c
  5051  002664  50DF               	movf	indf2,w,c
  5052  002666  6E25               	movwf	UART_buff_get@c,c
  5053                           
  5054                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  5055  002668  EE20 F0CA          	lfsr	2,202
  5056  00266C  5021               	movf	UART_buff_get@_this,w,c
  5057  00266E  26D9               	addwf	fsr2l,f,c
  5058  002670  5022               	movf	UART_buff_get@_this+1,w,c
  5059  002672  22DA               	addwfc	fsr2h,f,c
  5060  002674  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  5061  002678  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  5062  00267C  0E00               	movlw	0
  5063  00267E  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  5064  002680  0EC8               	movlw	200
  5065  002682  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  5066  002684  EC05  F017         	call	_UART_buff_modulo_inc	;wreg free
  5067  002688  EE20 F0CA          	lfsr	2,202
  5068  00268C  5021               	movf	UART_buff_get@_this,w,c
  5069  00268E  26D9               	addwf	fsr2l,f,c
  5070  002690  5022               	movf	UART_buff_get@_this+1,w,c
  5071  002692  22DA               	addwfc	fsr2h,f,c
  5072  002694  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  5073  002698  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  5074                           
  5075                           ;UART.c: 86: --_this->count;
  5076  00269C  EE20 F0CC          	lfsr	2,204
  5077  0026A0  5021               	movf	UART_buff_get@_this,w,c
  5078  0026A2  26D9               	addwf	fsr2l,f,c
  5079  0026A4  5022               	movf	UART_buff_get@_this+1,w,c
  5080  0026A6  22DA               	addwfc	fsr2h,f,c
  5081  0026A8  06DE               	decf	postinc2,f,c
  5082  0026AA  0E00               	movlw	0
  5083  0026AC  5ADD               	subwfb	postdec2,f,c
  5084                           
  5085                           ;UART.c: 87: } else {
  5086  0026AE  D002               	goto	l1162
  5087  0026B0                     l5533:
  5088                           
  5089                           ;UART.c: 88: c = 0;
  5090  0026B0  0E00               	movlw	0
  5091  0026B2  6E25               	movwf	UART_buff_get@c,c
  5092  0026B4                     l1162:
  5093                           
  5094                           ;UART.c: 89: }
  5095                           ;UART.c: 90: return (c);
  5096  0026B4  5025               	movf	UART_buff_get@c,w,c
  5097  0026B6  0012               	return	
  5098  0026B8                     __end_of_UART_buff_get:
  5099                           	opt stack 0
  5100                           tosu	equ	0xFFF
  5101                           tosh	equ	0xFFE
  5102                           tosl	equ	0xFFD
  5103                           pclath	equ	0xFFA
  5104                           tblptru	equ	0xFF8
  5105                           tblptrh	equ	0xFF7
  5106                           tblptrl	equ	0xFF6
  5107                           tablat	equ	0xFF5
  5108                           prodh	equ	0xFF4
  5109                           prodl	equ	0xFF3
  5110                           intcon	equ	0xFF2
  5111                           postinc0	equ	0xFEE
  5112                           wreg	equ	0xFE8
  5113                           indf2	equ	0xFDF
  5114                           postinc2	equ	0xFDE
  5115                           postdec2	equ	0xFDD
  5116                           plusw2	equ	0xFDB
  5117                           fsr2h	equ	0xFDA
  5118                           fsr2l	equ	0xFD9
  5119                           status	equ	0xFD8
  5120                           
  5121 ;; *************** function _UART_buff_modulo_inc *****************
  5122 ;; Defined at:
  5123 ;;		line 106 in file "UART.c"
  5124 ;; Parameters:    Size  Location     Type
  5125 ;;  value           2   26[COMRAM] const unsigned int 
  5126 ;;  modulus         2   28[COMRAM] const unsigned int 
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;  my_value        2   30[COMRAM] unsigned int 
  5129 ;; Return value:  Size  Location     Type
  5130 ;;                  2   26[COMRAM] unsigned int 
  5131 ;; Registers used:
  5132 ;;		wreg, status,2, status,0
  5133 ;; Tracked objects:
  5134 ;;		On entry : 0/0
  5135 ;;		On exit  : 0/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5138 ;;      Params:         4       0       0       0       0       0       0
  5139 ;;      Locals:         2       0       0       0       0       0       0
  5140 ;;      Temps:          0       0       0       0       0       0       0
  5141 ;;      Totals:         6       0       0       0       0       0       0
  5142 ;;Total ram usage:        6 bytes
  5143 ;; Hardware stack levels used:    1
  5144 ;; Hardware stack levels required when called:    4
  5145 ;; This function calls:
  5146 ;;		Nothing
  5147 ;; This function is called by:
  5148 ;;		_UART_buff_put
  5149 ;;		_UART_buff_get
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           	psect	text22
  5154  002E0A                     __ptext22:
  5155                           	opt stack 0
  5156  002E0A                     _UART_buff_modulo_inc:
  5157                           	opt stack 21
  5158                           
  5159                           ;UART.c: 107: unsigned int my_value = value + 1;
  5160                           
  5161                           ;incstack = 0
  5162  002E0A  0E01               	movlw	1
  5163  002E0C  241B               	addwf	UART_buff_modulo_inc@value,w,c
  5164  002E0E  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  5165  002E10  0E00               	movlw	0
  5166  002E12  201C               	addwfc	UART_buff_modulo_inc@value+1,w,c
  5167  002E14  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  5168                           
  5169                           ;UART.c: 108: if (my_value >= modulus) {
  5170  002E16  501D               	movf	UART_buff_modulo_inc@modulus,w,c
  5171  002E18  5C1F               	subwf	UART_buff_modulo_inc@my_value,w,c
  5172  002E1A  501E               	movf	UART_buff_modulo_inc@modulus+1,w,c
  5173  002E1C  5820               	subwfb	UART_buff_modulo_inc@my_value+1,w,c
  5174  002E1E  A0D8               	btfss	status,0,c
  5175  002E20  D004               	goto	l5491
  5176                           
  5177                           ;UART.c: 109: my_value = 0;
  5178  002E22  0E00               	movlw	0
  5179  002E24  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  5180  002E26  0E00               	movlw	0
  5181  002E28  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  5182  002E2A                     l5491:
  5183                           
  5184                           ;UART.c: 110: }
  5185                           ;UART.c: 111: return (my_value);
  5186  002E2A  C01F  F01B         	movff	UART_buff_modulo_inc@my_value,?_UART_buff_modulo_inc
  5187  002E2E  C020  F01C         	movff	UART_buff_modulo_inc@my_value+1,?_UART_buff_modulo_inc+1
  5188  002E32  0012               	return	
  5189  002E34                     __end_of_UART_buff_modulo_inc:
  5190                           	opt stack 0
  5191                           tosu	equ	0xFFF
  5192                           tosh	equ	0xFFE
  5193                           tosl	equ	0xFFD
  5194                           pclath	equ	0xFFA
  5195                           tblptru	equ	0xFF8
  5196                           tblptrh	equ	0xFF7
  5197                           tblptrl	equ	0xFF6
  5198                           tablat	equ	0xFF5
  5199                           prodh	equ	0xFF4
  5200                           prodl	equ	0xFF3
  5201                           intcon	equ	0xFF2
  5202                           postinc0	equ	0xFEE
  5203                           wreg	equ	0xFE8
  5204                           indf2	equ	0xFDF
  5205                           postinc2	equ	0xFDE
  5206                           postdec2	equ	0xFDD
  5207                           plusw2	equ	0xFDB
  5208                           fsr2h	equ	0xFDA
  5209                           fsr2l	equ	0xFD9
  5210                           status	equ	0xFD8
  5211                           
  5212 ;; *************** function _Receive_available *****************
  5213 ;; Defined at:
  5214 ;;		line 122 in file "UART.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;		None
  5217 ;; Auto vars:     Size  Location     Type
  5218 ;;		None
  5219 ;; Return value:  Size  Location     Type
  5220 ;;                  2   28[COMRAM] int 
  5221 ;; Registers used:
  5222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5223 ;; Tracked objects:
  5224 ;;		On entry : 0/0
  5225 ;;		On exit  : 0/0
  5226 ;;		Unchanged: 0/0
  5227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5228 ;;      Params:         2       0       0       0       0       0       0
  5229 ;;      Locals:         0       0       0       0       0       0       0
  5230 ;;      Temps:          0       0       0       0       0       0       0
  5231 ;;      Totals:         2       0       0       0       0       0       0
  5232 ;;Total ram usage:        2 bytes
  5233 ;; Hardware stack levels used:    1
  5234 ;; Hardware stack levels required when called:    5
  5235 ;; This function calls:
  5236 ;;		_UART_buff_size
  5237 ;; This function is called by:
  5238 ;;		_SYSTEM_Initialize
  5239 ;;		_CRCcheck
  5240 ;;		_receiveData
  5241 ;; This function uses a non-reentrant model
  5242 ;;
  5243                           
  5244                           	psect	text23
  5245  002F9A                     __ptext23:
  5246                           	opt stack 0
  5247  002F9A                     _Receive_available:
  5248                           	opt stack 23
  5249                           
  5250                           ;UART.c: 123: return UART_buff_size(&input_buffer);
  5251                           
  5252                           ;incstack = 0
  5253  002F9A  0E00               	movlw	low _input_buffer
  5254  002F9C  6E1B               	movwf	UART_buff_size@_this,c
  5255  002F9E  0E04               	movlw	high _input_buffer
  5256  002FA0  6E1C               	movwf	UART_buff_size@_this+1,c
  5257  002FA2  ECD8  F017         	call	_UART_buff_size	;wreg free
  5258  002FA6  C01B  F01D         	movff	?_UART_buff_size,?_Receive_available
  5259  002FAA  C01C  F01E         	movff	?_UART_buff_size+1,?_Receive_available+1
  5260  002FAE  0012               	return	
  5261  002FB0                     __end_of_Receive_available:
  5262                           	opt stack 0
  5263                           tosu	equ	0xFFF
  5264                           tosh	equ	0xFFE
  5265                           tosl	equ	0xFFD
  5266                           pclath	equ	0xFFA
  5267                           tblptru	equ	0xFF8
  5268                           tblptrh	equ	0xFF7
  5269                           tblptrl	equ	0xFF6
  5270                           tablat	equ	0xFF5
  5271                           prodh	equ	0xFF4
  5272                           prodl	equ	0xFF3
  5273                           intcon	equ	0xFF2
  5274                           postinc0	equ	0xFEE
  5275                           wreg	equ	0xFE8
  5276                           indf2	equ	0xFDF
  5277                           postinc2	equ	0xFDE
  5278                           postdec2	equ	0xFDD
  5279                           plusw2	equ	0xFDB
  5280                           fsr2h	equ	0xFDA
  5281                           fsr2l	equ	0xFD9
  5282                           status	equ	0xFD8
  5283                           
  5284 ;; *************** function _UART_buff_size *****************
  5285 ;; Defined at:
  5286 ;;		line 102 in file "UART.c"
  5287 ;; Parameters:    Size  Location     Type
  5288 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  5289 ;;		 -> output_buffer(206), input_buffer(206), 
  5290 ;; Auto vars:     Size  Location     Type
  5291 ;;		None
  5292 ;; Return value:  Size  Location     Type
  5293 ;;                  2   26[COMRAM] int 
  5294 ;; Registers used:
  5295 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5296 ;; Tracked objects:
  5297 ;;		On entry : 0/0
  5298 ;;		On exit  : 0/0
  5299 ;;		Unchanged: 0/0
  5300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5301 ;;      Params:         2       0       0       0       0       0       0
  5302 ;;      Locals:         0       0       0       0       0       0       0
  5303 ;;      Temps:          0       0       0       0       0       0       0
  5304 ;;      Totals:         2       0       0       0       0       0       0
  5305 ;;Total ram usage:        2 bytes
  5306 ;; Hardware stack levels used:    1
  5307 ;; Hardware stack levels required when called:    4
  5308 ;; This function calls:
  5309 ;;		Nothing
  5310 ;; This function is called by:
  5311 ;;		_Receive_available
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           	psect	text24
  5316  002FB0                     __ptext24:
  5317                           	opt stack 0
  5318  002FB0                     _UART_buff_size:
  5319                           	opt stack 23
  5320                           
  5321                           ;UART.c: 103: return (_this->count);
  5322                           
  5323                           ;incstack = 0
  5324  002FB0  EE20 F0CC          	lfsr	2,204
  5325  002FB4  501B               	movf	UART_buff_size@_this,w,c
  5326  002FB6  26D9               	addwf	fsr2l,f,c
  5327  002FB8  501C               	movf	UART_buff_size@_this+1,w,c
  5328  002FBA  22DA               	addwfc	fsr2h,f,c
  5329  002FBC  CFDE F01B          	movff	postinc2,?_UART_buff_size
  5330  002FC0  CFDD F01C          	movff	postdec2,?_UART_buff_size+1
  5331  002FC4  0012               	return	
  5332  002FC6                     __end_of_UART_buff_size:
  5333                           	opt stack 0
  5334                           tosu	equ	0xFFF
  5335                           tosh	equ	0xFFE
  5336                           tosl	equ	0xFFD
  5337                           pclath	equ	0xFFA
  5338                           tblptru	equ	0xFF8
  5339                           tblptrh	equ	0xFF7
  5340                           tblptrl	equ	0xFF6
  5341                           tablat	equ	0xFF5
  5342                           prodh	equ	0xFF4
  5343                           prodl	equ	0xFF3
  5344                           intcon	equ	0xFF2
  5345                           postinc0	equ	0xFEE
  5346                           wreg	equ	0xFE8
  5347                           indf2	equ	0xFDF
  5348                           postinc2	equ	0xFDE
  5349                           postdec2	equ	0xFDD
  5350                           plusw2	equ	0xFDB
  5351                           fsr2h	equ	0xFDA
  5352                           fsr2l	equ	0xFD9
  5353                           status	equ	0xFD8
  5354                           
  5355 ;; *************** function _CRC8 *****************
  5356 ;; Defined at:
  5357 ;;		line 34 in file "FastTransfer.c"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;  data            2   26[COMRAM] PTR const unsigned char 
  5360 ;;		 -> CRCcheck@arrayHolder(3), receiveData@holder_2354(3), receiveData@holder(3), rx_buffer(200), 
  5361 ;;		 -> ring_buffer(206), NULL(0), 
  5362 ;;  len             1   28[COMRAM] unsigned char 
  5363 ;; Auto vars:     Size  Location     Type
  5364 ;;  sum             1   29[COMRAM] unsigned char 
  5365 ;;  tempI           1   31[COMRAM] unsigned char 
  5366 ;;  extract         1   30[COMRAM] unsigned char 
  5367 ;;  crc             1   32[COMRAM] unsigned char 
  5368 ;; Return value:  Size  Location     Type
  5369 ;;                  1    wreg      unsigned char 
  5370 ;; Registers used:
  5371 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/0
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5377 ;;      Params:         3       0       0       0       0       0       0
  5378 ;;      Locals:         4       0       0       0       0       0       0
  5379 ;;      Temps:          0       0       0       0       0       0       0
  5380 ;;      Totals:         7       0       0       0       0       0       0
  5381 ;;Total ram usage:        7 bytes
  5382 ;; Hardware stack levels used:    1
  5383 ;; Hardware stack levels required when called:    4
  5384 ;; This function calls:
  5385 ;;		Nothing
  5386 ;; This function is called by:
  5387 ;;		_sendData
  5388 ;;		_receiveData
  5389 ;;		_CRCcheck
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392                           
  5393                           	psect	text25
  5394  002B5A                     __ptext25:
  5395                           	opt stack 0
  5396  002B5A                     _CRC8:
  5397                           	opt stack 23
  5398                           
  5399                           ;FastTransfer.c: 35: unsigned char crc = 0x00;
  5400                           
  5401                           ;incstack = 0
  5402  002B5A  0E00               	movlw	0
  5403  002B5C  6E21               	movwf	CRC8@crc,c
  5404                           
  5405                           ;FastTransfer.c: 36: while (len--) {
  5406  002B5E  D01C               	goto	l5653
  5407  002B60                     l5637:
  5408                           
  5409                           ;FastTransfer.c: 37: unsigned char extract = *data++;
  5410  002B60  C01B  FFD9         	movff	CRC8@data,fsr2l
  5411  002B64  C01C  FFDA         	movff	CRC8@data+1,fsr2h
  5412  002B68  50DF               	movf	indf2,w,c
  5413  002B6A  6E1F               	movwf	CRC8@extract,c
  5414  002B6C  4A1B               	infsnz	CRC8@data,f,c
  5415  002B6E  2A1C               	incf	CRC8@data+1,f,c
  5416                           
  5417                           ;FastTransfer.c: 38: unsigned char tempI;
  5418                           ;FastTransfer.c: 39: for (tempI = 8; tempI; tempI--) {
  5419  002B70  0E08               	movlw	8
  5420  002B72  6E20               	movwf	CRC8@tempI,c
  5421  002B74  D00E               	goto	l5651
  5422  002B76                     l5643:
  5423                           
  5424                           ;FastTransfer.c: 40: unsigned char sum = (crc ^ extract) & 0x01;
  5425  002B76  5021               	movf	CRC8@crc,w,c
  5426  002B78  181F               	xorwf	CRC8@extract,w,c
  5427  002B7A  0B01               	andlw	1
  5428  002B7C  6E1E               	movwf	CRC8@sum,c
  5429                           
  5430                           ;FastTransfer.c: 41: crc >>= 1;
  5431  002B7E  90D8               	bcf	status,0,c
  5432  002B80  3221               	rrcf	CRC8@crc,f,c
  5433                           
  5434                           ;FastTransfer.c: 42: if (sum) {
  5435  002B82  501E               	movf	CRC8@sum,w,c
  5436  002B84  B4D8               	btfsc	status,2,c
  5437  002B86  D002               	goto	l1003
  5438                           
  5439                           ;FastTransfer.c: 43: crc ^= 0x8C;
  5440  002B88  0E8C               	movlw	140
  5441  002B8A  1A21               	xorwf	CRC8@crc,f,c
  5442  002B8C                     l1003:
  5443                           
  5444                           ;FastTransfer.c: 44: }
  5445                           ;FastTransfer.c: 45: extract >>= 1;
  5446  002B8C  90D8               	bcf	status,0,c
  5447  002B8E  321F               	rrcf	CRC8@extract,f,c
  5448  002B90  0620               	decf	CRC8@tempI,f,c
  5449  002B92                     l5651:
  5450  002B92  5020               	movf	CRC8@tempI,w,c
  5451  002B94  A4D8               	btfss	status,2,c
  5452  002B96  D7EF               	goto	l5643
  5453  002B98                     l5653:
  5454  002B98  061D               	decf	CRC8@len,f,c
  5455  002B9A  281D               	incf	CRC8@len,w,c
  5456  002B9C  A4D8               	btfss	status,2,c
  5457  002B9E  D7E0               	goto	l5637
  5458                           
  5459                           ;FastTransfer.c: 46: }
  5460                           ;FastTransfer.c: 47: }
  5461                           ;FastTransfer.c: 48: return crc;
  5462  002BA0  5021               	movf	CRC8@crc,w,c
  5463  002BA2  0012               	return	
  5464  002BA4                     __end_of_CRC8:
  5465                           	opt stack 0
  5466                           tosu	equ	0xFFF
  5467                           tosh	equ	0xFFE
  5468                           tosl	equ	0xFFD
  5469                           pclath	equ	0xFFA
  5470                           tblptru	equ	0xFF8
  5471                           tblptrh	equ	0xFF7
  5472                           tblptrl	equ	0xFF6
  5473                           tablat	equ	0xFF5
  5474                           prodh	equ	0xFF4
  5475                           prodl	equ	0xFF3
  5476                           intcon	equ	0xFF2
  5477                           postinc0	equ	0xFEE
  5478                           wreg	equ	0xFE8
  5479                           indf2	equ	0xFDF
  5480                           postinc2	equ	0xFDE
  5481                           postdec2	equ	0xFDD
  5482                           plusw2	equ	0xFDB
  5483                           fsr2h	equ	0xFDA
  5484                           fsr2l	equ	0xFD9
  5485                           status	equ	0xFD8
  5486                           
  5487 ;; *************** function _handleIndicators *****************
  5488 ;; Defined at:
  5489 ;;		line 31 in file "Communications.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;  receivedIndi    2   36[COMRAM] int 
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;  i               2   41[COMRAM] int 
  5494 ;; Return value:  Size  Location     Type
  5495 ;;                  1    wreg      void 
  5496 ;; Registers used:
  5497 ;;		wreg, status,2, status,0, cstack
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5503 ;;      Params:         2       0       0       0       0       0       0
  5504 ;;      Locals:         2       0       0       0       0       0       0
  5505 ;;      Temps:          3       0       0       0       0       0       0
  5506 ;;      Totals:         7       0       0       0       0       0       0
  5507 ;;Total ram usage:        7 bytes
  5508 ;; Hardware stack levels used:    1
  5509 ;; Hardware stack levels required when called:    6
  5510 ;; This function calls:
  5511 ;;		_SetLEDOut
  5512 ;; This function is called by:
  5513 ;;		_updateComms
  5514 ;; This function uses a non-reentrant model
  5515 ;;
  5516                           
  5517                           	psect	text26
  5518  0027CE                     __ptext26:
  5519                           	opt stack 0
  5520  0027CE                     _handleIndicators:
  5521                           	opt stack 23
  5522                           
  5523                           ;Communications.c: 32: static int oldIndicators = 0;
  5524                           ;Communications.c: 33: if (receivedIndicators != oldIndicators) {
  5525                           
  5526                           ;incstack = 0
  5527  0027CE  0100               	movlb	0	; () banked
  5528  0027D0  51DD               	movf	handleIndicators@oldIndicators& (0+255),w,b
  5529  0027D2  1825               	xorwf	handleIndicators@receivedIndicators,w,c
  5530  0027D4  E105               	bnz	u7080
  5531  0027D6  0100               	movlb	0	; () banked
  5532  0027D8  51DE               	movf	(handleIndicators@oldIndicators+1)& (0+255),w,b
  5533  0027DA  1826               	xorwf	handleIndicators@receivedIndicators+1,w,c
  5534  0027DC  B4D8               	btfsc	status,2,c
  5535  0027DE  0012               	return	
  5536  0027E0                     u7080:
  5537                           
  5538                           ; BSR set to: 0
  5539                           ;Communications.c: 34: int i = 0;
  5540  0027E0  0E00               	movlw	0
  5541  0027E2  6E2B               	movwf	handleIndicators@i+1,c
  5542  0027E4  0E00               	movlw	0
  5543  0027E6  6E2A               	movwf	handleIndicators@i,c
  5544                           
  5545                           ;Communications.c: 35: for (i = 0; i < 6; i++) {
  5546  0027E8  0E00               	movlw	0
  5547  0027EA  6E2B               	movwf	handleIndicators@i+1,c
  5548  0027EC  0E00               	movlw	0
  5549  0027EE  6E2A               	movwf	handleIndicators@i,c
  5550                           
  5551                           ; BSR set to: 0
  5552  0027F0  BE2B               	btfsc	handleIndicators@i+1,7,c
  5553  0027F2  D006               	goto	l6399
  5554  0027F4  502B               	movf	handleIndicators@i+1,w,c
  5555  0027F6  E122               	bnz	l924
  5556  0027F8  0E06               	movlw	6
  5557  0027FA  5C2A               	subwf	handleIndicators@i,w,c
  5558  0027FC  B0D8               	btfsc	status,0,c
  5559  0027FE  D01E               	goto	l924
  5560  002800                     l6399:
  5561                           
  5562                           ;Communications.c: 36: SetLEDOut(i, ((receivedIndicators >> i)&0x01));
  5563  002800  C02A  F01F         	movff	handleIndicators@i,SetLEDOut@lednum
  5564  002804  C02B  F020         	movff	handleIndicators@i+1,SetLEDOut@lednum+1
  5565  002808  C02A  F027         	movff	handleIndicators@i,??_handleIndicators
  5566  00280C  C025  F028         	movff	handleIndicators@receivedIndicators,??_handleIndicators+1
  5567  002810  C026  F029         	movff	handleIndicators@receivedIndicators+1,??_handleIndicators+2
  5568  002814  2A27               	incf	??_handleIndicators,f,c
  5569  002816  D003               	goto	u7104
  5570  002818                     u7105:
  5571  002818  3429               	rlcf	??_handleIndicators+2,w,c
  5572  00281A  3229               	rrcf	??_handleIndicators+2,f,c
  5573  00281C  3228               	rrcf	??_handleIndicators+1,f,c
  5574  00281E                     u7104:
  5575  00281E  2E27               	decfsz	??_handleIndicators,f,c
  5576  002820  D7FB               	goto	u7105
  5577  002822  0E01               	movlw	1
  5578  002824  1428               	andwf	??_handleIndicators+1,w,c
  5579  002826  6E21               	movwf	SetLEDOut@state,c
  5580  002828  6A22               	clrf	SetLEDOut@state+1,c
  5581  00282A  ECC7  F005         	call	_SetLEDOut	;wreg free
  5582  00282E  4A2A               	infsnz	handleIndicators@i,f,c
  5583  002830  2A2B               	incf	handleIndicators@i+1,f,c
  5584  002832  BE2B               	btfsc	handleIndicators@i+1,7,c
  5585  002834  D7E5               	goto	l6399
  5586  002836  502B               	movf	handleIndicators@i+1,w,c
  5587  002838  E101               	bnz	u7110
  5588  00283A  D7DE               	goto	L2
  5589  00283C                     u7110:
  5590  00283C                     l924:
  5591                           
  5592                           ;Communications.c: 37: }
  5593                           ;Communications.c: 38: oldIndicators = receivedIndicators;
  5594  00283C  C025  F0DD         	movff	handleIndicators@receivedIndicators,handleIndicators@oldIndicators
  5595  002840  C026  F0DE         	movff	handleIndicators@receivedIndicators+1,handleIndicators@oldIndicators+1
  5596  002844  0012               	return	
  5597  002846                     __end_of_handleIndicators:
  5598                           	opt stack 0
  5599                           tosu	equ	0xFFF
  5600                           tosh	equ	0xFFE
  5601                           tosl	equ	0xFFD
  5602                           pclath	equ	0xFFA
  5603                           tblptru	equ	0xFF8
  5604                           tblptrh	equ	0xFF7
  5605                           tblptrl	equ	0xFF6
  5606                           tablat	equ	0xFF5
  5607                           prodh	equ	0xFF4
  5608                           prodl	equ	0xFF3
  5609                           intcon	equ	0xFF2
  5610                           postinc0	equ	0xFEE
  5611                           wreg	equ	0xFE8
  5612                           indf2	equ	0xFDF
  5613                           postinc2	equ	0xFDE
  5614                           postdec2	equ	0xFDD
  5615                           plusw2	equ	0xFDB
  5616                           fsr2h	equ	0xFDA
  5617                           fsr2l	equ	0xFD9
  5618                           status	equ	0xFD8
  5619                           
  5620 ;; *************** function _SetLEDOut *****************
  5621 ;; Defined at:
  5622 ;;		line 25 in file "IO.c"
  5623 ;; Parameters:    Size  Location     Type
  5624 ;;  lednum          2   30[COMRAM] int 
  5625 ;;  state           2   32[COMRAM] int 
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;		None
  5628 ;; Return value:  Size  Location     Type
  5629 ;;                  1    wreg      void 
  5630 ;; Registers used:
  5631 ;;		wreg, status,2, status,0, cstack
  5632 ;; Tracked objects:
  5633 ;;		On entry : 0/0
  5634 ;;		On exit  : 0/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5637 ;;      Params:         4       0       0       0       0       0       0
  5638 ;;      Locals:         0       0       0       0       0       0       0
  5639 ;;      Temps:          2       0       0       0       0       0       0
  5640 ;;      Totals:         6       0       0       0       0       0       0
  5641 ;;Total ram usage:        6 bytes
  5642 ;; Hardware stack levels used:    1
  5643 ;; Hardware stack levels required when called:    5
  5644 ;; This function calls:
  5645 ;;		_Off_Led
  5646 ;;		_setLED
  5647 ;; This function is called by:
  5648 ;;		_handleIndicators
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           	psect	text27
  5653  000B8E                     __ptext27:
  5654                           	opt stack 0
  5655  000B8E                     _SetLEDOut:
  5656                           	opt stack 23
  5657                           
  5658                           ;IO.c: 26: switch (lednum) {
  5659                           
  5660                           ;incstack = 0
  5661  000B8E  D138               	goto	l5901
  5662  000B90                     l5767:
  5663                           
  5664                           ;IO.c: 28: if (state == 1) {
  5665  000B90  0421               	decf	SetLEDOut@state,w,c
  5666  000B92  1022               	iorwf	SetLEDOut@state+1,w,c
  5667  000B94  A4D8               	btfss	status,2,c
  5668  000B96  D00D               	goto	l5775
  5669                           
  5670                           ;IO.c: 29: Off_Led(0);
  5671  000B98  0E00               	movlw	0
  5672  000B9A  6E1C               	movwf	Off_Led@led+1,c
  5673  000B9C  0E00               	movlw	0
  5674  000B9E  6E1B               	movwf	Off_Led@led,c
  5675  000BA0  EC68  F010         	call	_Off_Led	;wreg free
  5676                           
  5677                           ;IO.c: 30: do { LATB3 = 1; } while(0);
  5678  000BA4  868A               	bsf	3978,3,c	;volatile
  5679                           
  5680                           ;IO.c: 31: LED_array[0] = 1;
  5681  000BA6  0E00               	movlw	0
  5682  000BA8  0100               	movlb	0	; () banked
  5683  000BAA  6F89               	movwf	(_LED_array+1)& (0+255),b
  5684  000BAC  0E01               	movlw	1
  5685  000BAE  6F88               	movwf	_LED_array& (0+255),b
  5686                           
  5687                           ;IO.c: 32: } else if (state == 0) {
  5688  000BB0  0012               	return	
  5689  000BB2                     l5775:
  5690  000BB2  5021               	movf	SetLEDOut@state,w,c
  5691  000BB4  1022               	iorwf	SetLEDOut@state+1,w,c
  5692  000BB6  A4D8               	btfss	status,2,c
  5693  000BB8  D00D               	goto	l5783
  5694                           
  5695                           ;IO.c: 33: Off_Led(0);
  5696  000BBA  0E00               	movlw	0
  5697  000BBC  6E1C               	movwf	Off_Led@led+1,c
  5698  000BBE  0E00               	movlw	0
  5699  000BC0  6E1B               	movwf	Off_Led@led,c
  5700  000BC2  EC68  F010         	call	_Off_Led	;wreg free
  5701                           
  5702                           ;IO.c: 34: do { LATB3 = 0; } while(0);
  5703  000BC6  968A               	bcf	3978,3,c	;volatile
  5704                           
  5705                           ;IO.c: 35: LED_array[0] = 0;
  5706  000BC8  0E00               	movlw	0
  5707  000BCA  0100               	movlb	0	; () banked
  5708  000BCC  6F89               	movwf	(_LED_array+1)& (0+255),b
  5709  000BCE  0E00               	movlw	0
  5710  000BD0  6F88               	movwf	_LED_array& (0+255),b
  5711                           
  5712                           ;IO.c: 36: }
  5713  000BD2  0012               	return	
  5714  000BD4                     l5783:
  5715                           
  5716                           ;IO.c: 37: else if (state == 2) {
  5717  000BD4  0E02               	movlw	2
  5718  000BD6  1821               	xorwf	SetLEDOut@state,w,c
  5719  000BD8  1022               	iorwf	SetLEDOut@state+1,w,c
  5720  000BDA  A4D8               	btfss	status,2,c
  5721  000BDC  0012               	return	
  5722                           
  5723                           ;IO.c: 39: do { LATB3 = 0; } while(0);
  5724  000BDE  968A               	bcf	3978,3,c	;volatile
  5725                           
  5726                           ;IO.c: 40: setLED(0);
  5727  000BE0  0E00               	movlw	0
  5728  000BE2  6E1C               	movwf	setLED@led+1,c
  5729  000BE4  0E00               	movlw	0
  5730  000BE6  6E1B               	movwf	setLED@led,c
  5731  000BE8  ECCD  F010         	call	_setLED	;wreg free
  5732                           
  5733                           ;IO.c: 41: LED_array[0] = 2;
  5734  000BEC  0E00               	movlw	0
  5735  000BEE  0100               	movlb	0	; () banked
  5736  000BF0  6F89               	movwf	(_LED_array+1)& (0+255),b
  5737  000BF2  0E02               	movlw	2
  5738  000BF4  6F88               	movwf	_LED_array& (0+255),b
  5739                           
  5740                           ; BSR set to: 0
  5741                           ;IO.c: 43: }
  5742                           ;IO.c: 44: break;
  5743                           
  5744                           ; BSR set to: 0
  5745                           
  5746                           ; BSR set to: 0
  5747  000BF6  0012               	return	
  5748  000BF8                     l5789:
  5749                           
  5750                           ;IO.c: 47: if (state == 1) {
  5751  000BF8  0421               	decf	SetLEDOut@state,w,c
  5752  000BFA  1022               	iorwf	SetLEDOut@state+1,w,c
  5753  000BFC  A4D8               	btfss	status,2,c
  5754  000BFE  D00D               	goto	l5797
  5755                           
  5756                           ;IO.c: 48: Off_Led(1);
  5757  000C00  0E00               	movlw	0
  5758  000C02  6E1C               	movwf	Off_Led@led+1,c
  5759  000C04  0E01               	movlw	1
  5760  000C06  6E1B               	movwf	Off_Led@led,c
  5761  000C08  EC68  F010         	call	_Off_Led	;wreg free
  5762                           
  5763                           ;IO.c: 49: do { LATB5 = 1; } while(0);
  5764  000C0C  8A8A               	bsf	3978,5,c	;volatile
  5765                           
  5766                           ;IO.c: 50: LED_array[1] = 1;
  5767  000C0E  0E00               	movlw	0
  5768  000C10  0100               	movlb	0	; () banked
  5769  000C12  6F8B               	movwf	(_LED_array+3)& (0+255),b
  5770  000C14  0E01               	movlw	1
  5771  000C16  6F8A               	movwf	(_LED_array+2)& (0+255),b
  5772                           
  5773                           ;IO.c: 51: } else if (state == 0) {
  5774  000C18  0012               	return	
  5775  000C1A                     l5797:
  5776  000C1A  5021               	movf	SetLEDOut@state,w,c
  5777  000C1C  1022               	iorwf	SetLEDOut@state+1,w,c
  5778  000C1E  A4D8               	btfss	status,2,c
  5779  000C20  D00D               	goto	l5805
  5780                           
  5781                           ;IO.c: 52: Off_Led(1);
  5782  000C22  0E00               	movlw	0
  5783  000C24  6E1C               	movwf	Off_Led@led+1,c
  5784  000C26  0E01               	movlw	1
  5785  000C28  6E1B               	movwf	Off_Led@led,c
  5786  000C2A  EC68  F010         	call	_Off_Led	;wreg free
  5787                           
  5788                           ;IO.c: 53: do { LATB5 = 0; } while(0);
  5789  000C2E  9A8A               	bcf	3978,5,c	;volatile
  5790                           
  5791                           ;IO.c: 54: LED_array[1] = 0;
  5792  000C30  0E00               	movlw	0
  5793  000C32  0100               	movlb	0	; () banked
  5794  000C34  6F8B               	movwf	(_LED_array+3)& (0+255),b
  5795  000C36  0E00               	movlw	0
  5796  000C38  6F8A               	movwf	(_LED_array+2)& (0+255),b
  5797                           
  5798                           ;IO.c: 55: } else if (state == 2) {
  5799  000C3A  0012               	return	
  5800  000C3C                     l5805:
  5801  000C3C  0E02               	movlw	2
  5802  000C3E  1821               	xorwf	SetLEDOut@state,w,c
  5803  000C40  1022               	iorwf	SetLEDOut@state+1,w,c
  5804  000C42  A4D8               	btfss	status,2,c
  5805  000C44  0012               	return	
  5806                           
  5807                           ;IO.c: 57: do { LATB5 = 0; } while(0);
  5808  000C46  9A8A               	bcf	3978,5,c	;volatile
  5809                           
  5810                           ;IO.c: 58: setLED(1);
  5811  000C48  0E00               	movlw	0
  5812  000C4A  6E1C               	movwf	setLED@led+1,c
  5813  000C4C  0E01               	movlw	1
  5814  000C4E  6E1B               	movwf	setLED@led,c
  5815  000C50  ECCD  F010         	call	_setLED	;wreg free
  5816                           
  5817                           ;IO.c: 59: LED_array[1] = 2;
  5818  000C54  0E00               	movlw	0
  5819  000C56  0100               	movlb	0	; () banked
  5820  000C58  6F8B               	movwf	(_LED_array+3)& (0+255),b
  5821  000C5A  0E02               	movlw	2
  5822  000C5C  6F8A               	movwf	(_LED_array+2)& (0+255),b
  5823                           
  5824                           ; BSR set to: 0
  5825                           ;IO.c: 61: }
  5826                           ;IO.c: 62: break;
  5827                           
  5828                           ; BSR set to: 0
  5829                           
  5830                           ; BSR set to: 0
  5831  000C5E  0012               	return	
  5832  000C60                     l5811:
  5833                           
  5834                           ;IO.c: 64: if (state == 1) {
  5835  000C60  0421               	decf	SetLEDOut@state,w,c
  5836  000C62  1022               	iorwf	SetLEDOut@state+1,w,c
  5837  000C64  A4D8               	btfss	status,2,c
  5838  000C66  D00D               	goto	l5819
  5839                           
  5840                           ;IO.c: 65: Off_Led(2);
  5841  000C68  0E00               	movlw	0
  5842  000C6A  6E1C               	movwf	Off_Led@led+1,c
  5843  000C6C  0E02               	movlw	2
  5844  000C6E  6E1B               	movwf	Off_Led@led,c
  5845  000C70  EC68  F010         	call	_Off_Led	;wreg free
  5846                           
  5847                           ;IO.c: 66: do { LATD1 = 1; } while(0);
  5848  000C74  828C               	bsf	3980,1,c	;volatile
  5849                           
  5850                           ;IO.c: 67: LED_array[2] = 1;
  5851  000C76  0E00               	movlw	0
  5852  000C78  0100               	movlb	0	; () banked
  5853  000C7A  6F8D               	movwf	(_LED_array+5)& (0+255),b
  5854  000C7C  0E01               	movlw	1
  5855  000C7E  6F8C               	movwf	(_LED_array+4)& (0+255),b
  5856                           
  5857                           ;IO.c: 68: } else if (state == 0) {
  5858  000C80  0012               	return	
  5859  000C82                     l5819:
  5860  000C82  5021               	movf	SetLEDOut@state,w,c
  5861  000C84  1022               	iorwf	SetLEDOut@state+1,w,c
  5862  000C86  A4D8               	btfss	status,2,c
  5863  000C88  D00D               	goto	l5827
  5864                           
  5865                           ;IO.c: 69: Off_Led(2);
  5866  000C8A  0E00               	movlw	0
  5867  000C8C  6E1C               	movwf	Off_Led@led+1,c
  5868  000C8E  0E02               	movlw	2
  5869  000C90  6E1B               	movwf	Off_Led@led,c
  5870  000C92  EC68  F010         	call	_Off_Led	;wreg free
  5871                           
  5872                           ;IO.c: 70: do { LATD1 = 0; } while(0);
  5873  000C96  928C               	bcf	3980,1,c	;volatile
  5874                           
  5875                           ;IO.c: 71: LED_array[2] = 0;
  5876  000C98  0E00               	movlw	0
  5877  000C9A  0100               	movlb	0	; () banked
  5878  000C9C  6F8D               	movwf	(_LED_array+5)& (0+255),b
  5879  000C9E  0E00               	movlw	0
  5880  000CA0  6F8C               	movwf	(_LED_array+4)& (0+255),b
  5881                           
  5882                           ;IO.c: 72: } else if (state == 2) {
  5883  000CA2  0012               	return	
  5884  000CA4                     l5827:
  5885  000CA4  0E02               	movlw	2
  5886  000CA6  1821               	xorwf	SetLEDOut@state,w,c
  5887  000CA8  1022               	iorwf	SetLEDOut@state+1,w,c
  5888  000CAA  A4D8               	btfss	status,2,c
  5889  000CAC  0012               	return	
  5890                           
  5891                           ;IO.c: 74: do { LATD1 = 0; } while(0);
  5892  000CAE  928C               	bcf	3980,1,c	;volatile
  5893                           
  5894                           ;IO.c: 75: setLED(2);
  5895  000CB0  0E00               	movlw	0
  5896  000CB2  6E1C               	movwf	setLED@led+1,c
  5897  000CB4  0E02               	movlw	2
  5898  000CB6  6E1B               	movwf	setLED@led,c
  5899  000CB8  ECCD  F010         	call	_setLED	;wreg free
  5900                           
  5901                           ;IO.c: 77: LED_array[2] = 2;
  5902  000CBC  0E00               	movlw	0
  5903  000CBE  0100               	movlb	0	; () banked
  5904  000CC0  6F8D               	movwf	(_LED_array+5)& (0+255),b
  5905  000CC2  0E02               	movlw	2
  5906  000CC4  6F8C               	movwf	(_LED_array+4)& (0+255),b
  5907                           
  5908                           ; BSR set to: 0
  5909                           ;IO.c: 79: }
  5910                           ;IO.c: 82: break;
  5911                           
  5912                           ; BSR set to: 0
  5913                           
  5914                           ; BSR set to: 0
  5915  000CC6  0012               	return	
  5916  000CC8                     l5833:
  5917                           
  5918                           ;IO.c: 85: if (state == 1) {
  5919  000CC8  0421               	decf	SetLEDOut@state,w,c
  5920  000CCA  1022               	iorwf	SetLEDOut@state+1,w,c
  5921  000CCC  A4D8               	btfss	status,2,c
  5922  000CCE  D00D               	goto	l5841
  5923                           
  5924                           ;IO.c: 86: Off_Led(3);
  5925  000CD0  0E00               	movlw	0
  5926  000CD2  6E1C               	movwf	Off_Led@led+1,c
  5927  000CD4  0E03               	movlw	3
  5928  000CD6  6E1B               	movwf	Off_Led@led,c
  5929  000CD8  EC68  F010         	call	_Off_Led	;wreg free
  5930                           
  5931                           ;IO.c: 87: do { LATE2 = 1; } while(0);
  5932  000CDC  848D               	bsf	3981,2,c	;volatile
  5933                           
  5934                           ;IO.c: 88: LED_array[3] = 1;
  5935  000CDE  0E00               	movlw	0
  5936  000CE0  0100               	movlb	0	; () banked
  5937  000CE2  6F8F               	movwf	(_LED_array+7)& (0+255),b
  5938  000CE4  0E01               	movlw	1
  5939  000CE6  6F8E               	movwf	(_LED_array+6)& (0+255),b
  5940                           
  5941                           ;IO.c: 89: } else if (state == 0) {
  5942  000CE8  0012               	return	
  5943  000CEA                     l5841:
  5944  000CEA  5021               	movf	SetLEDOut@state,w,c
  5945  000CEC  1022               	iorwf	SetLEDOut@state+1,w,c
  5946  000CEE  A4D8               	btfss	status,2,c
  5947  000CF0  D00D               	goto	l5849
  5948                           
  5949                           ;IO.c: 90: Off_Led(3);
  5950  000CF2  0E00               	movlw	0
  5951  000CF4  6E1C               	movwf	Off_Led@led+1,c
  5952  000CF6  0E03               	movlw	3
  5953  000CF8  6E1B               	movwf	Off_Led@led,c
  5954  000CFA  EC68  F010         	call	_Off_Led	;wreg free
  5955                           
  5956                           ;IO.c: 91: do { LATE2 = 0; } while(0);
  5957  000CFE  948D               	bcf	3981,2,c	;volatile
  5958                           
  5959                           ;IO.c: 92: LED_array[3] = 0;
  5960  000D00  0E00               	movlw	0
  5961  000D02  0100               	movlb	0	; () banked
  5962  000D04  6F8F               	movwf	(_LED_array+7)& (0+255),b
  5963  000D06  0E00               	movlw	0
  5964  000D08  6F8E               	movwf	(_LED_array+6)& (0+255),b
  5965                           
  5966                           ;IO.c: 93: }
  5967  000D0A  0012               	return	
  5968  000D0C                     l5849:
  5969                           
  5970                           ;IO.c: 94: else if (state == 2) {
  5971  000D0C  0E02               	movlw	2
  5972  000D0E  1821               	xorwf	SetLEDOut@state,w,c
  5973  000D10  1022               	iorwf	SetLEDOut@state+1,w,c
  5974  000D12  A4D8               	btfss	status,2,c
  5975  000D14  0012               	return	
  5976                           
  5977                           ;IO.c: 95: do { LATE2 = 0; } while(0);
  5978  000D16  948D               	bcf	3981,2,c	;volatile
  5979                           
  5980                           ;IO.c: 96: setLED(3);
  5981  000D18  0E00               	movlw	0
  5982  000D1A  6E1C               	movwf	setLED@led+1,c
  5983  000D1C  0E03               	movlw	3
  5984  000D1E  6E1B               	movwf	setLED@led,c
  5985  000D20  ECCD  F010         	call	_setLED	;wreg free
  5986                           
  5987                           ;IO.c: 97: LED_array[3] = 2;
  5988  000D24  0E00               	movlw	0
  5989  000D26  0100               	movlb	0	; () banked
  5990  000D28  6F8F               	movwf	(_LED_array+7)& (0+255),b
  5991  000D2A  0E02               	movlw	2
  5992  000D2C  6F8E               	movwf	(_LED_array+6)& (0+255),b
  5993                           
  5994                           ; BSR set to: 0
  5995                           ;IO.c: 99: }
  5996                           ;IO.c: 101: break;
  5997                           
  5998                           ; BSR set to: 0
  5999                           
  6000                           ; BSR set to: 0
  6001  000D2E  0012               	return	
  6002  000D30                     l5855:
  6003                           
  6004                           ;IO.c: 103: if (state == 1) {
  6005  000D30  0421               	decf	SetLEDOut@state,w,c
  6006  000D32  1022               	iorwf	SetLEDOut@state+1,w,c
  6007  000D34  A4D8               	btfss	status,2,c
  6008  000D36  D00D               	goto	l5863
  6009                           
  6010                           ;IO.c: 104: Off_Led(4);
  6011  000D38  0E00               	movlw	0
  6012  000D3A  6E1C               	movwf	Off_Led@led+1,c
  6013  000D3C  0E04               	movlw	4
  6014  000D3E  6E1B               	movwf	Off_Led@led,c
  6015  000D40  EC68  F010         	call	_Off_Led	;wreg free
  6016                           
  6017                           ;IO.c: 105: do { LATE1 = 1; } while(0);
  6018  000D44  828D               	bsf	3981,1,c	;volatile
  6019                           
  6020                           ;IO.c: 106: LED_array[4] = 1;
  6021  000D46  0E00               	movlw	0
  6022  000D48  0100               	movlb	0	; () banked
  6023  000D4A  6F91               	movwf	(_LED_array+9)& (0+255),b
  6024  000D4C  0E01               	movlw	1
  6025  000D4E  6F90               	movwf	(_LED_array+8)& (0+255),b
  6026                           
  6027                           ;IO.c: 107: } else if (state == 0) {
  6028  000D50  0012               	return	
  6029  000D52                     l5863:
  6030  000D52  5021               	movf	SetLEDOut@state,w,c
  6031  000D54  1022               	iorwf	SetLEDOut@state+1,w,c
  6032  000D56  A4D8               	btfss	status,2,c
  6033  000D58  D00D               	goto	l5871
  6034                           
  6035                           ;IO.c: 108: Off_Led(4);
  6036  000D5A  0E00               	movlw	0
  6037  000D5C  6E1C               	movwf	Off_Led@led+1,c
  6038  000D5E  0E04               	movlw	4
  6039  000D60  6E1B               	movwf	Off_Led@led,c
  6040  000D62  EC68  F010         	call	_Off_Led	;wreg free
  6041                           
  6042                           ;IO.c: 109: do { LATE1 = 0; } while(0);
  6043  000D66  928D               	bcf	3981,1,c	;volatile
  6044                           
  6045                           ;IO.c: 110: LED_array[4] = 0;
  6046  000D68  0E00               	movlw	0
  6047  000D6A  0100               	movlb	0	; () banked
  6048  000D6C  6F91               	movwf	(_LED_array+9)& (0+255),b
  6049  000D6E  0E00               	movlw	0
  6050  000D70  6F90               	movwf	(_LED_array+8)& (0+255),b
  6051                           
  6052                           ;IO.c: 111: }
  6053  000D72  0012               	return	
  6054  000D74                     l5871:
  6055                           
  6056                           ;IO.c: 112: else if (state == 2) {
  6057  000D74  0E02               	movlw	2
  6058  000D76  1821               	xorwf	SetLEDOut@state,w,c
  6059  000D78  1022               	iorwf	SetLEDOut@state+1,w,c
  6060  000D7A  A4D8               	btfss	status,2,c
  6061  000D7C  0012               	return	
  6062                           
  6063                           ;IO.c: 113: do { LATE1 = 0; } while(0);
  6064  000D7E  928D               	bcf	3981,1,c	;volatile
  6065                           
  6066                           ;IO.c: 114: setLED(4);
  6067  000D80  0E00               	movlw	0
  6068  000D82  6E1C               	movwf	setLED@led+1,c
  6069  000D84  0E04               	movlw	4
  6070  000D86  6E1B               	movwf	setLED@led,c
  6071  000D88  ECCD  F010         	call	_setLED	;wreg free
  6072                           
  6073                           ;IO.c: 115: LED_array[4] = 2;
  6074  000D8C  0E00               	movlw	0
  6075  000D8E  0100               	movlb	0	; () banked
  6076  000D90  6F91               	movwf	(_LED_array+9)& (0+255),b
  6077  000D92  0E02               	movlw	2
  6078  000D94  6F90               	movwf	(_LED_array+8)& (0+255),b
  6079                           
  6080                           ; BSR set to: 0
  6081                           ;IO.c: 116: }
  6082                           ;IO.c: 118: break;
  6083                           
  6084                           ; BSR set to: 0
  6085                           
  6086                           ; BSR set to: 0
  6087  000D96  0012               	return	
  6088  000D98                     l5877:
  6089                           
  6090                           ;IO.c: 120: if (state == 1) {
  6091  000D98  0421               	decf	SetLEDOut@state,w,c
  6092  000D9A  1022               	iorwf	SetLEDOut@state+1,w,c
  6093  000D9C  A4D8               	btfss	status,2,c
  6094  000D9E  D00D               	goto	l5885
  6095                           
  6096                           ;IO.c: 121: Off_Led(5);
  6097  000DA0  0E00               	movlw	0
  6098  000DA2  6E1C               	movwf	Off_Led@led+1,c
  6099  000DA4  0E05               	movlw	5
  6100  000DA6  6E1B               	movwf	Off_Led@led,c
  6101  000DA8  EC68  F010         	call	_Off_Led	;wreg free
  6102                           
  6103                           ;IO.c: 122: do { LATE0 = 1; } while(0);
  6104  000DAC  808D               	bsf	3981,0,c	;volatile
  6105                           
  6106                           ;IO.c: 123: LED_array[5] = 1;
  6107  000DAE  0E00               	movlw	0
  6108  000DB0  0100               	movlb	0	; () banked
  6109  000DB2  6F93               	movwf	(_LED_array+11)& (0+255),b
  6110  000DB4  0E01               	movlw	1
  6111  000DB6  6F92               	movwf	(_LED_array+10)& (0+255),b
  6112                           
  6113                           ;IO.c: 124: } else if (state == 0) {
  6114  000DB8  0012               	return	
  6115  000DBA                     l5885:
  6116  000DBA  5021               	movf	SetLEDOut@state,w,c
  6117  000DBC  1022               	iorwf	SetLEDOut@state+1,w,c
  6118  000DBE  A4D8               	btfss	status,2,c
  6119  000DC0  D00D               	goto	l5893
  6120                           
  6121                           ;IO.c: 125: Off_Led(5);
  6122  000DC2  0E00               	movlw	0
  6123  000DC4  6E1C               	movwf	Off_Led@led+1,c
  6124  000DC6  0E05               	movlw	5
  6125  000DC8  6E1B               	movwf	Off_Led@led,c
  6126  000DCA  EC68  F010         	call	_Off_Led	;wreg free
  6127                           
  6128                           ;IO.c: 126: do { LATE0 = 0; } while(0);
  6129  000DCE  908D               	bcf	3981,0,c	;volatile
  6130                           
  6131                           ;IO.c: 127: LED_array[5] = 0;
  6132  000DD0  0E00               	movlw	0
  6133  000DD2  0100               	movlb	0	; () banked
  6134  000DD4  6F93               	movwf	(_LED_array+11)& (0+255),b
  6135  000DD6  0E00               	movlw	0
  6136  000DD8  6F92               	movwf	(_LED_array+10)& (0+255),b
  6137                           
  6138                           ;IO.c: 128: }
  6139  000DDA  0012               	return	
  6140  000DDC                     l5893:
  6141                           
  6142                           ;IO.c: 129: else if (state == 2) {
  6143  000DDC  0E02               	movlw	2
  6144  000DDE  1821               	xorwf	SetLEDOut@state,w,c
  6145  000DE0  1022               	iorwf	SetLEDOut@state+1,w,c
  6146  000DE2  A4D8               	btfss	status,2,c
  6147  000DE4  0012               	return	
  6148                           
  6149                           ;IO.c: 130: do { LATE0 = 0; } while(0);
  6150  000DE6  908D               	bcf	3981,0,c	;volatile
  6151                           
  6152                           ;IO.c: 131: setLED(5);
  6153  000DE8  0E00               	movlw	0
  6154  000DEA  6E1C               	movwf	setLED@led+1,c
  6155  000DEC  0E05               	movlw	5
  6156  000DEE  6E1B               	movwf	setLED@led,c
  6157  000DF0  ECCD  F010         	call	_setLED	;wreg free
  6158                           
  6159                           ;IO.c: 132: LED_array[5] = 2;
  6160  000DF4  0E00               	movlw	0
  6161  000DF6  0100               	movlb	0	; () banked
  6162  000DF8  6F93               	movwf	(_LED_array+11)& (0+255),b
  6163  000DFA  0E02               	movlw	2
  6164  000DFC  6F92               	movwf	(_LED_array+10)& (0+255),b
  6165                           
  6166                           ; BSR set to: 0
  6167                           ;IO.c: 138: }
  6168                           
  6169                           ; BSR set to: 0
  6170                           ;IO.c: 134: }
  6171                           ;IO.c: 137: break;
  6172                           
  6173                           ; BSR set to: 0
  6174                           
  6175                           ; BSR set to: 0
  6176  000DFE  0012               	return	
  6177  000E00                     l5901:
  6178  000E00  C01F  F023         	movff	SetLEDOut@lednum,??_SetLEDOut
  6179  000E04  C020  F024         	movff	SetLEDOut@lednum+1,??_SetLEDOut+1
  6180                           
  6181                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6182                           ; Switch size 1, requested type "space"
  6183                           ; Number of cases is 1, Range of values is 0 to 0
  6184                           ; switch strategies available:
  6185                           ; Name         Instructions Cycles
  6186                           ; simple_byte            4     3 (average)
  6187                           ;	Chosen strategy is simple_byte
  6188  000E08  5024               	movf	??_SetLEDOut+1,w,c
  6189  000E0A  0A00               	xorlw	0	; case 0
  6190  000E0C  A4D8               	btfss	status,2,c
  6191  000E0E  0012               	return	
  6192                           
  6193                           ; Switch size 1, requested type "space"
  6194                           ; Number of cases is 6, Range of values is 0 to 5
  6195                           ; switch strategies available:
  6196                           ; Name         Instructions Cycles
  6197                           ; simple_byte           19    10 (average)
  6198                           ;	Chosen strategy is simple_byte
  6199  000E10  5023               	movf	??_SetLEDOut,w,c
  6200  000E12  0A00               	xorlw	0	; case 0
  6201  000E14  B4D8               	btfsc	status,2,c
  6202  000E16  D6BC               	goto	l5767
  6203  000E18  0A01               	xorlw	1	; case 1
  6204  000E1A  B4D8               	btfsc	status,2,c
  6205  000E1C  D6ED               	goto	l5789
  6206  000E1E  0A03               	xorlw	3	; case 2
  6207  000E20  B4D8               	btfsc	status,2,c
  6208  000E22  D71E               	goto	l5811
  6209  000E24  0A01               	xorlw	1	; case 3
  6210  000E26  B4D8               	btfsc	status,2,c
  6211  000E28  D74F               	goto	l5833
  6212  000E2A  0A07               	xorlw	7	; case 4
  6213  000E2C  B4D8               	btfsc	status,2,c
  6214  000E2E  D780               	goto	l5855
  6215  000E30  0A01               	xorlw	1	; case 5
  6216  000E32  A4D8               	btfss	status,2,c
  6217  000E34  0012               	return	
  6218  000E36  D7B0               	goto	l5877
  6219  000E38                     __end_of_SetLEDOut:
  6220                           	opt stack 0
  6221                           tosu	equ	0xFFF
  6222                           tosh	equ	0xFFE
  6223                           tosl	equ	0xFFD
  6224                           pclath	equ	0xFFA
  6225                           tblptru	equ	0xFF8
  6226                           tblptrh	equ	0xFF7
  6227                           tblptrl	equ	0xFF6
  6228                           tablat	equ	0xFF5
  6229                           prodh	equ	0xFF4
  6230                           prodl	equ	0xFF3
  6231                           intcon	equ	0xFF2
  6232                           postinc0	equ	0xFEE
  6233                           wreg	equ	0xFE8
  6234                           indf2	equ	0xFDF
  6235                           postinc2	equ	0xFDE
  6236                           postdec2	equ	0xFDD
  6237                           plusw2	equ	0xFDB
  6238                           fsr2h	equ	0xFDA
  6239                           fsr2l	equ	0xFD9
  6240                           status	equ	0xFD8
  6241                           
  6242 ;; *************** function _setLED *****************
  6243 ;; Defined at:
  6244 ;;		line 202 in file "mcc_generated_files/tmr2.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;  led             2   26[COMRAM] int 
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;		None
  6249 ;; Return value:  Size  Location     Type
  6250 ;;                  1    wreg      void 
  6251 ;; Registers used:
  6252 ;;		wreg, status,2, status,0
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6258 ;;      Params:         2       0       0       0       0       0       0
  6259 ;;      Locals:         0       0       0       0       0       0       0
  6260 ;;      Temps:          2       0       0       0       0       0       0
  6261 ;;      Totals:         4       0       0       0       0       0       0
  6262 ;;Total ram usage:        4 bytes
  6263 ;; Hardware stack levels used:    1
  6264 ;; Hardware stack levels required when called:    4
  6265 ;; This function calls:
  6266 ;;		Nothing
  6267 ;; This function is called by:
  6268 ;;		_SetLEDOut
  6269 ;; This function uses a non-reentrant model
  6270 ;;
  6271                           
  6272                           	psect	text28
  6273  00219A                     __ptext28:
  6274                           	opt stack 0
  6275  00219A                     _setLED:
  6276                           	opt stack 23
  6277                           
  6278                           ;tmr2.c: 203: switch (led){
  6279                           
  6280                           ;incstack = 0
  6281  00219A  D042               	goto	l5591
  6282  00219C                     l5577:
  6283                           
  6284                           ;tmr2.c: 205: LEDNUM_ENAB[0]=1;
  6285  00219C  0E00               	movlw	0
  6286  00219E  0100               	movlb	0	; () banked
  6287  0021A0  6F99               	movwf	(_LEDNUM_ENAB+1)& (0+255),b
  6288  0021A2  0E01               	movlw	1
  6289  0021A4  6F98               	movwf	_LEDNUM_ENAB& (0+255),b
  6290                           
  6291                           ;tmr2.c: 206: LEDState[0]=0;
  6292  0021A6  0E00               	movlw	0
  6293  0021A8  0100               	movlb	0	; () banked
  6294  0021AA  6FA5               	movwf	(_LEDState+1)& (0+255),b
  6295  0021AC  0E00               	movlw	0
  6296  0021AE  6FA4               	movwf	_LEDState& (0+255),b
  6297                           
  6298                           ;tmr2.c: 207: break;
  6299  0021B0  0012               	return	
  6300  0021B2                     l5579:
  6301                           
  6302                           ;tmr2.c: 209: LEDNUM_ENAB[1]=1;
  6303  0021B2  0E00               	movlw	0
  6304  0021B4  0100               	movlb	0	; () banked
  6305  0021B6  6F9B               	movwf	(_LEDNUM_ENAB+3)& (0+255),b
  6306  0021B8  0E01               	movlw	1
  6307  0021BA  6F9A               	movwf	(_LEDNUM_ENAB+2)& (0+255),b
  6308                           
  6309                           ;tmr2.c: 210: LEDState[1]=0;
  6310  0021BC  0E00               	movlw	0
  6311  0021BE  0100               	movlb	0	; () banked
  6312  0021C0  6FA7               	movwf	(_LEDState+3)& (0+255),b
  6313  0021C2  0E00               	movlw	0
  6314  0021C4  6FA6               	movwf	(_LEDState+2)& (0+255),b
  6315                           
  6316                           ;tmr2.c: 211: break;
  6317  0021C6  0012               	return	
  6318  0021C8                     l5581:
  6319                           
  6320                           ;tmr2.c: 213: LEDNUM_ENAB[2]=1;
  6321  0021C8  0E00               	movlw	0
  6322  0021CA  0100               	movlb	0	; () banked
  6323  0021CC  6F9D               	movwf	(_LEDNUM_ENAB+5)& (0+255),b
  6324  0021CE  0E01               	movlw	1
  6325  0021D0  6F9C               	movwf	(_LEDNUM_ENAB+4)& (0+255),b
  6326                           
  6327                           ;tmr2.c: 214: LEDState[2]=0;
  6328  0021D2  0E00               	movlw	0
  6329  0021D4  0100               	movlb	0	; () banked
  6330  0021D6  6FA9               	movwf	(_LEDState+5)& (0+255),b
  6331  0021D8  0E00               	movlw	0
  6332  0021DA  6FA8               	movwf	(_LEDState+4)& (0+255),b
  6333                           
  6334                           ;tmr2.c: 215: break;
  6335  0021DC  0012               	return	
  6336  0021DE                     l5583:
  6337                           
  6338                           ;tmr2.c: 217: LEDNUM_ENAB[3]=1;
  6339  0021DE  0E00               	movlw	0
  6340  0021E0  0100               	movlb	0	; () banked
  6341  0021E2  6F9F               	movwf	(_LEDNUM_ENAB+7)& (0+255),b
  6342  0021E4  0E01               	movlw	1
  6343  0021E6  6F9E               	movwf	(_LEDNUM_ENAB+6)& (0+255),b
  6344                           
  6345                           ;tmr2.c: 218: LEDState[3]=0;
  6346  0021E8  0E00               	movlw	0
  6347  0021EA  0100               	movlb	0	; () banked
  6348  0021EC  6FAB               	movwf	(_LEDState+7)& (0+255),b
  6349  0021EE  0E00               	movlw	0
  6350  0021F0  6FAA               	movwf	(_LEDState+6)& (0+255),b
  6351                           
  6352                           ;tmr2.c: 219: break;
  6353  0021F2  0012               	return	
  6354  0021F4                     l5585:
  6355                           
  6356                           ;tmr2.c: 221: LEDNUM_ENAB[4]=1;
  6357  0021F4  0E00               	movlw	0
  6358  0021F6  0100               	movlb	0	; () banked
  6359  0021F8  6FA1               	movwf	(_LEDNUM_ENAB+9)& (0+255),b
  6360  0021FA  0E01               	movlw	1
  6361  0021FC  6FA0               	movwf	(_LEDNUM_ENAB+8)& (0+255),b
  6362                           
  6363                           ;tmr2.c: 222: LEDState[4]=0;
  6364  0021FE  0E00               	movlw	0
  6365  002200  0100               	movlb	0	; () banked
  6366  002202  6FAD               	movwf	(_LEDState+9)& (0+255),b
  6367  002204  0E00               	movlw	0
  6368  002206  6FAC               	movwf	(_LEDState+8)& (0+255),b
  6369                           
  6370                           ;tmr2.c: 223: break;
  6371  002208  0012               	return	
  6372  00220A                     l5587:
  6373                           
  6374                           ;tmr2.c: 225: LEDNUM_ENAB[5]=1;
  6375  00220A  0E00               	movlw	0
  6376  00220C  0100               	movlb	0	; () banked
  6377  00220E  6FA3               	movwf	(_LEDNUM_ENAB+11)& (0+255),b
  6378  002210  0E01               	movlw	1
  6379  002212  6FA2               	movwf	(_LEDNUM_ENAB+10)& (0+255),b
  6380                           
  6381                           ;tmr2.c: 226: LEDState[5]=0;
  6382  002214  0E00               	movlw	0
  6383  002216  0100               	movlb	0	; () banked
  6384  002218  6FAF               	movwf	(_LEDState+11)& (0+255),b
  6385  00221A  0E00               	movlw	0
  6386  00221C  6FAE               	movwf	(_LEDState+10)& (0+255),b
  6387                           
  6388                           ; BSR set to: 0
  6389                           ;tmr2.c: 228: }
  6390                           
  6391                           ;tmr2.c: 227: break;
  6392  00221E  0012               	return	
  6393  002220                     l5591:
  6394  002220  C01B  F01D         	movff	setLED@led,??_setLED
  6395  002224  C01C  F01E         	movff	setLED@led+1,??_setLED+1
  6396                           
  6397                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6398                           ; Switch size 1, requested type "space"
  6399                           ; Number of cases is 1, Range of values is 0 to 0
  6400                           ; switch strategies available:
  6401                           ; Name         Instructions Cycles
  6402                           ; simple_byte            4     3 (average)
  6403                           ;	Chosen strategy is simple_byte
  6404  002228  501E               	movf	??_setLED+1,w,c
  6405  00222A  0A00               	xorlw	0	; case 0
  6406  00222C  A4D8               	btfss	status,2,c
  6407  00222E  0012               	return	
  6408                           
  6409                           ; Switch size 1, requested type "space"
  6410                           ; Number of cases is 6, Range of values is 0 to 5
  6411                           ; switch strategies available:
  6412                           ; Name         Instructions Cycles
  6413                           ; simple_byte           19    10 (average)
  6414                           ;	Chosen strategy is simple_byte
  6415  002230  501D               	movf	??_setLED,w,c
  6416  002232  0A00               	xorlw	0	; case 0
  6417  002234  B4D8               	btfsc	status,2,c
  6418  002236  D7B2               	goto	l5577
  6419  002238  0A01               	xorlw	1	; case 1
  6420  00223A  B4D8               	btfsc	status,2,c
  6421  00223C  D7BA               	goto	l5579
  6422  00223E  0A03               	xorlw	3	; case 2
  6423  002240  B4D8               	btfsc	status,2,c
  6424  002242  D7C2               	goto	l5581
  6425  002244  0A01               	xorlw	1	; case 3
  6426  002246  B4D8               	btfsc	status,2,c
  6427  002248  D7CA               	goto	l5583
  6428  00224A  0A07               	xorlw	7	; case 4
  6429  00224C  B4D8               	btfsc	status,2,c
  6430  00224E  D7D2               	goto	l5585
  6431  002250  0A01               	xorlw	1	; case 5
  6432  002252  A4D8               	btfss	status,2,c
  6433  002254  0012               	return	
  6434  002256  D7D9               	goto	l5587
  6435  002258                     __end_of_setLED:
  6436                           	opt stack 0
  6437                           tosu	equ	0xFFF
  6438                           tosh	equ	0xFFE
  6439                           tosl	equ	0xFFD
  6440                           pclath	equ	0xFFA
  6441                           tblptru	equ	0xFF8
  6442                           tblptrh	equ	0xFF7
  6443                           tblptrl	equ	0xFF6
  6444                           tablat	equ	0xFF5
  6445                           prodh	equ	0xFF4
  6446                           prodl	equ	0xFF3
  6447                           intcon	equ	0xFF2
  6448                           postinc0	equ	0xFEE
  6449                           wreg	equ	0xFE8
  6450                           indf2	equ	0xFDF
  6451                           postinc2	equ	0xFDE
  6452                           postdec2	equ	0xFDD
  6453                           plusw2	equ	0xFDB
  6454                           fsr2h	equ	0xFDA
  6455                           fsr2l	equ	0xFD9
  6456                           status	equ	0xFD8
  6457                           
  6458 ;; *************** function _Off_Led *****************
  6459 ;; Defined at:
  6460 ;;		line 230 in file "mcc_generated_files/tmr2.c"
  6461 ;; Parameters:    Size  Location     Type
  6462 ;;  led             2   26[COMRAM] int 
  6463 ;; Auto vars:     Size  Location     Type
  6464 ;;		None
  6465 ;; Return value:  Size  Location     Type
  6466 ;;                  1    wreg      void 
  6467 ;; Registers used:
  6468 ;;		wreg, status,2, status,0
  6469 ;; Tracked objects:
  6470 ;;		On entry : 0/0
  6471 ;;		On exit  : 0/0
  6472 ;;		Unchanged: 0/0
  6473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6474 ;;      Params:         2       0       0       0       0       0       0
  6475 ;;      Locals:         0       0       0       0       0       0       0
  6476 ;;      Temps:          2       0       0       0       0       0       0
  6477 ;;      Totals:         4       0       0       0       0       0       0
  6478 ;;Total ram usage:        4 bytes
  6479 ;; Hardware stack levels used:    1
  6480 ;; Hardware stack levels required when called:    4
  6481 ;; This function calls:
  6482 ;;		Nothing
  6483 ;; This function is called by:
  6484 ;;		_SetLEDOut
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488                           	psect	text29
  6489  0020D0                     __ptext29:
  6490                           	opt stack 0
  6491  0020D0                     _Off_Led:
  6492                           	opt stack 23
  6493                           
  6494                           ;tmr2.c: 231: switch (led){
  6495                           
  6496                           ;incstack = 0
  6497  0020D0  D048               	goto	l5625
  6498  0020D2                     l5599:
  6499                           
  6500                           ;tmr2.c: 233: LEDNUM_ENAB[0]=0;
  6501  0020D2  0E00               	movlw	0
  6502  0020D4  0100               	movlb	0	; () banked
  6503  0020D6  6F99               	movwf	(_LEDNUM_ENAB+1)& (0+255),b
  6504  0020D8  0E00               	movlw	0
  6505  0020DA  6F98               	movwf	_LEDNUM_ENAB& (0+255),b
  6506                           
  6507                           ;tmr2.c: 234: LEDState[0]=0;
  6508  0020DC  0E00               	movlw	0
  6509  0020DE  0100               	movlb	0	; () banked
  6510  0020E0  6FA5               	movwf	(_LEDState+1)& (0+255),b
  6511  0020E2  0E00               	movlw	0
  6512  0020E4  6FA4               	movwf	_LEDState& (0+255),b
  6513                           
  6514                           ; BSR set to: 0
  6515                           
  6516                           ; BSR set to: 0
  6517                           
  6518                           ;tmr2.c: 235: do { LATB3 = 0; } while(0);
  6519  0020E6  968A               	bcf	3978,3,c	;volatile
  6520                           
  6521                           ; BSR set to: 0
  6522                           ;tmr2.c: 236: break;
  6523  0020E8  0012               	return	
  6524  0020EA                     l5603:
  6525                           
  6526                           ;tmr2.c: 238: LEDNUM_ENAB[1]=0;
  6527  0020EA  0E00               	movlw	0
  6528  0020EC  0100               	movlb	0	; () banked
  6529  0020EE  6F9B               	movwf	(_LEDNUM_ENAB+3)& (0+255),b
  6530  0020F0  0E00               	movlw	0
  6531  0020F2  6F9A               	movwf	(_LEDNUM_ENAB+2)& (0+255),b
  6532                           
  6533                           ;tmr2.c: 239: LEDState[1]=0;
  6534  0020F4  0E00               	movlw	0
  6535  0020F6  0100               	movlb	0	; () banked
  6536  0020F8  6FA7               	movwf	(_LEDState+3)& (0+255),b
  6537  0020FA  0E00               	movlw	0
  6538  0020FC  6FA6               	movwf	(_LEDState+2)& (0+255),b
  6539                           
  6540                           ; BSR set to: 0
  6541                           
  6542                           ; BSR set to: 0
  6543                           
  6544                           ;tmr2.c: 240: do { LATB5 = 0; } while(0);
  6545  0020FE  9A8A               	bcf	3978,5,c	;volatile
  6546                           
  6547                           ; BSR set to: 0
  6548                           ;tmr2.c: 241: break;
  6549  002100  0012               	return	
  6550  002102                     l5607:
  6551                           
  6552                           ;tmr2.c: 243: LEDNUM_ENAB[2]=0;
  6553  002102  0E00               	movlw	0
  6554  002104  0100               	movlb	0	; () banked
  6555  002106  6F9D               	movwf	(_LEDNUM_ENAB+5)& (0+255),b
  6556  002108  0E00               	movlw	0
  6557  00210A  6F9C               	movwf	(_LEDNUM_ENAB+4)& (0+255),b
  6558                           
  6559                           ;tmr2.c: 244: LEDState[2]=0;
  6560  00210C  0E00               	movlw	0
  6561  00210E  0100               	movlb	0	; () banked
  6562  002110  6FA9               	movwf	(_LEDState+5)& (0+255),b
  6563  002112  0E00               	movlw	0
  6564  002114  6FA8               	movwf	(_LEDState+4)& (0+255),b
  6565                           
  6566                           ; BSR set to: 0
  6567                           
  6568                           ; BSR set to: 0
  6569                           
  6570                           ;tmr2.c: 245: do { LATD1 = 0; } while(0);
  6571  002116  928C               	bcf	3980,1,c	;volatile
  6572                           
  6573                           ; BSR set to: 0
  6574                           ;tmr2.c: 246: break;
  6575  002118  0012               	return	
  6576  00211A                     l5611:
  6577                           
  6578                           ;tmr2.c: 248: LEDNUM_ENAB[3]=0;
  6579  00211A  0E00               	movlw	0
  6580  00211C  0100               	movlb	0	; () banked
  6581  00211E  6F9F               	movwf	(_LEDNUM_ENAB+7)& (0+255),b
  6582  002120  0E00               	movlw	0
  6583  002122  6F9E               	movwf	(_LEDNUM_ENAB+6)& (0+255),b
  6584                           
  6585                           ;tmr2.c: 249: LEDState[3]=0;
  6586  002124  0E00               	movlw	0
  6587  002126  0100               	movlb	0	; () banked
  6588  002128  6FAB               	movwf	(_LEDState+7)& (0+255),b
  6589  00212A  0E00               	movlw	0
  6590  00212C  6FAA               	movwf	(_LEDState+6)& (0+255),b
  6591                           
  6592                           ; BSR set to: 0
  6593                           
  6594                           ; BSR set to: 0
  6595                           
  6596                           ;tmr2.c: 250: do { LATE2 = 0; } while(0);
  6597  00212E  948D               	bcf	3981,2,c	;volatile
  6598                           
  6599                           ; BSR set to: 0
  6600                           ;tmr2.c: 251: break;
  6601  002130  0012               	return	
  6602  002132                     l5615:
  6603                           
  6604                           ;tmr2.c: 253: LEDNUM_ENAB[4]=0;
  6605  002132  0E00               	movlw	0
  6606  002134  0100               	movlb	0	; () banked
  6607  002136  6FA1               	movwf	(_LEDNUM_ENAB+9)& (0+255),b
  6608  002138  0E00               	movlw	0
  6609  00213A  6FA0               	movwf	(_LEDNUM_ENAB+8)& (0+255),b
  6610                           
  6611                           ;tmr2.c: 254: LEDState[4]=0;
  6612  00213C  0E00               	movlw	0
  6613  00213E  0100               	movlb	0	; () banked
  6614  002140  6FAD               	movwf	(_LEDState+9)& (0+255),b
  6615  002142  0E00               	movlw	0
  6616  002144  6FAC               	movwf	(_LEDState+8)& (0+255),b
  6617                           
  6618                           ; BSR set to: 0
  6619                           
  6620                           ; BSR set to: 0
  6621                           
  6622                           ;tmr2.c: 255: do { LATE1 = 0; } while(0);
  6623  002146  928D               	bcf	3981,1,c	;volatile
  6624                           
  6625                           ; BSR set to: 0
  6626                           ;tmr2.c: 256: break;
  6627  002148  0012               	return	
  6628  00214A                     l5619:
  6629                           
  6630                           ;tmr2.c: 258: LEDNUM_ENAB[5]=0;
  6631  00214A  0E00               	movlw	0
  6632  00214C  0100               	movlb	0	; () banked
  6633  00214E  6FA3               	movwf	(_LEDNUM_ENAB+11)& (0+255),b
  6634  002150  0E00               	movlw	0
  6635  002152  6FA2               	movwf	(_LEDNUM_ENAB+10)& (0+255),b
  6636                           
  6637                           ;tmr2.c: 259: LEDState[5]=0;
  6638  002154  0E00               	movlw	0
  6639  002156  0100               	movlb	0	; () banked
  6640  002158  6FAF               	movwf	(_LEDState+11)& (0+255),b
  6641  00215A  0E00               	movlw	0
  6642  00215C  6FAE               	movwf	(_LEDState+10)& (0+255),b
  6643                           
  6644                           ; BSR set to: 0
  6645                           
  6646                           ; BSR set to: 0
  6647                           
  6648                           ;tmr2.c: 260: do { LATE0 = 0; } while(0) ;
  6649  00215E  908D               	bcf	3981,0,c	;volatile
  6650                           
  6651                           ; BSR set to: 0
  6652                           ;tmr2.c: 262: }
  6653                           
  6654                           ; BSR set to: 0
  6655                           ;tmr2.c: 261: break;
  6656  002160  0012               	return	
  6657  002162                     l5625:
  6658  002162  C01B  F01D         	movff	Off_Led@led,??_Off_Led
  6659  002166  C01C  F01E         	movff	Off_Led@led+1,??_Off_Led+1
  6660                           
  6661                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6662                           ; Switch size 1, requested type "space"
  6663                           ; Number of cases is 1, Range of values is 0 to 0
  6664                           ; switch strategies available:
  6665                           ; Name         Instructions Cycles
  6666                           ; simple_byte            4     3 (average)
  6667                           ;	Chosen strategy is simple_byte
  6668  00216A  501E               	movf	??_Off_Led+1,w,c
  6669  00216C  0A00               	xorlw	0	; case 0
  6670  00216E  A4D8               	btfss	status,2,c
  6671  002170  0012               	return	
  6672                           
  6673                           ; Switch size 1, requested type "space"
  6674                           ; Number of cases is 6, Range of values is 0 to 5
  6675                           ; switch strategies available:
  6676                           ; Name         Instructions Cycles
  6677                           ; simple_byte           19    10 (average)
  6678                           ;	Chosen strategy is simple_byte
  6679  002172  501D               	movf	??_Off_Led,w,c
  6680  002174  0A00               	xorlw	0	; case 0
  6681  002176  B4D8               	btfsc	status,2,c
  6682  002178  D7AC               	goto	l5599
  6683  00217A  0A01               	xorlw	1	; case 1
  6684  00217C  B4D8               	btfsc	status,2,c
  6685  00217E  D7B5               	goto	l5603
  6686  002180  0A03               	xorlw	3	; case 2
  6687  002182  B4D8               	btfsc	status,2,c
  6688  002184  D7BE               	goto	l5607
  6689  002186  0A01               	xorlw	1	; case 3
  6690  002188  B4D8               	btfsc	status,2,c
  6691  00218A  D7C7               	goto	l5611
  6692  00218C  0A07               	xorlw	7	; case 4
  6693  00218E  B4D8               	btfsc	status,2,c
  6694  002190  D7D0               	goto	l5615
  6695  002192  0A01               	xorlw	1	; case 5
  6696  002194  A4D8               	btfss	status,2,c
  6697  002196  0012               	return	
  6698  002198  D7D8               	goto	l5619
  6699  00219A                     __end_of_Off_Led:
  6700                           	opt stack 0
  6701                           tosu	equ	0xFFF
  6702                           tosh	equ	0xFFE
  6703                           tosl	equ	0xFFD
  6704                           pclath	equ	0xFFA
  6705                           tblptru	equ	0xFF8
  6706                           tblptrh	equ	0xFF7
  6707                           tblptrl	equ	0xFF6
  6708                           tablat	equ	0xFF5
  6709                           prodh	equ	0xFF4
  6710                           prodl	equ	0xFF3
  6711                           intcon	equ	0xFF2
  6712                           postinc0	equ	0xFEE
  6713                           wreg	equ	0xFE8
  6714                           indf2	equ	0xFDF
  6715                           postinc2	equ	0xFDE
  6716                           postdec2	equ	0xFDD
  6717                           plusw2	equ	0xFDB
  6718                           fsr2h	equ	0xFDA
  6719                           fsr2l	equ	0xFD9
  6720                           status	equ	0xFD8
  6721                           
  6722 ;; *************** function _TBbarGraphs *****************
  6723 ;; Defined at:
  6724 ;;		line 43 in file "Communications.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;  t               2   26[COMRAM] int 
  6727 ;;  b               2   28[COMRAM] int 
  6728 ;; Auto vars:     Size  Location     Type
  6729 ;;		None
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  1    wreg      void 
  6732 ;; Registers used:
  6733 ;;		None
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6739 ;;      Params:         4       0       0       0       0       0       0
  6740 ;;      Locals:         0       0       0       0       0       0       0
  6741 ;;      Temps:          0       0       0       0       0       0       0
  6742 ;;      Totals:         4       0       0       0       0       0       0
  6743 ;;Total ram usage:        4 bytes
  6744 ;; Hardware stack levels used:    1
  6745 ;; Hardware stack levels required when called:    4
  6746 ;; This function calls:
  6747 ;;		Nothing
  6748 ;; This function is called by:
  6749 ;;		_updateComms
  6750 ;; This function uses a non-reentrant model
  6751 ;;
  6752                           
  6753                           	psect	text30
  6754  002FDC                     __ptext30:
  6755                           	opt stack 0
  6756  002FDC                     _TBbarGraphs:
  6757                           	opt stack 25
  6758                           
  6759                           ;Communications.c: 44: throttle = t;
  6760                           
  6761                           ;incstack = 0
  6762  002FDC  C01B  F0D9         	movff	TBbarGraphs@t,_throttle
  6763  002FE0  C01C  F0DA         	movff	TBbarGraphs@t+1,_throttle+1
  6764                           
  6765                           ;Communications.c: 45: brake = b;
  6766  002FE4  C01D  F0C7         	movff	TBbarGraphs@b,_brake
  6767  002FE8  C01E  F0C8         	movff	TBbarGraphs@b+1,_brake+1
  6768  002FEC  0012               	return		;funcret
  6769  002FEE                     __end_of_TBbarGraphs:
  6770                           	opt stack 0
  6771                           tosu	equ	0xFFF
  6772                           tosh	equ	0xFFE
  6773                           tosl	equ	0xFFD
  6774                           pclath	equ	0xFFA
  6775                           tblptru	equ	0xFF8
  6776                           tblptrh	equ	0xFF7
  6777                           tblptrl	equ	0xFF6
  6778                           tablat	equ	0xFF5
  6779                           prodh	equ	0xFF4
  6780                           prodl	equ	0xFF3
  6781                           intcon	equ	0xFF2
  6782                           postinc0	equ	0xFEE
  6783                           wreg	equ	0xFE8
  6784                           indf2	equ	0xFDF
  6785                           postinc2	equ	0xFDE
  6786                           postdec2	equ	0xFDD
  6787                           plusw2	equ	0xFDB
  6788                           fsr2h	equ	0xFDA
  6789                           fsr2l	equ	0xFD9
  6790                           status	equ	0xFD8
  6791                           
  6792 ;; *************** function ___lwtoft *****************
  6793 ;; Defined at:
  6794 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwtoft.c"
  6795 ;; Parameters:    Size  Location     Type
  6796 ;;  c               2   34[COMRAM] unsigned int 
  6797 ;; Auto vars:     Size  Location     Type
  6798 ;;		None
  6799 ;; Return value:  Size  Location     Type
  6800 ;;                  3   34[COMRAM] float 
  6801 ;; Registers used:
  6802 ;;		wreg, status,2, status,0, cstack
  6803 ;; Tracked objects:
  6804 ;;		On entry : 0/0
  6805 ;;		On exit  : 0/0
  6806 ;;		Unchanged: 0/0
  6807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6808 ;;      Params:         3       0       0       0       0       0       0
  6809 ;;      Locals:         0       0       0       0       0       0       0
  6810 ;;      Temps:          0       0       0       0       0       0       0
  6811 ;;      Totals:         3       0       0       0       0       0       0
  6812 ;;Total ram usage:        3 bytes
  6813 ;; Hardware stack levels used:    1
  6814 ;; Hardware stack levels required when called:    5
  6815 ;; This function calls:
  6816 ;;		___ftpack
  6817 ;; This function is called by:
  6818 ;;		_main
  6819 ;; This function uses a non-reentrant model
  6820 ;;
  6821                           
  6822                           	psect	text31
  6823  002EAA                     __ptext31:
  6824                           	opt stack 0
  6825  002EAA                     ___lwtoft:
  6826                           	opt stack 25
  6827                           
  6828                           ;incstack = 0
  6829  002EAA  C023  F01B         	movff	___lwtoft@c,___ftpack@arg
  6830  002EAE  C024  F01C         	movff	___lwtoft@c+1,___ftpack@arg+1
  6831  002EB2  6A1D               	clrf	___ftpack@arg+2,c
  6832  002EB4  0E8E               	movlw	142
  6833  002EB6  6E1E               	movwf	___ftpack@exp,c
  6834  002EB8  0E00               	movlw	0
  6835  002EBA  6E1F               	movwf	___ftpack@sign,c
  6836  002EBC  EC89  F011         	call	___ftpack	;wreg free
  6837  002EC0  C01B  F023         	movff	?___ftpack,?___lwtoft
  6838  002EC4  C01C  F024         	movff	?___ftpack+1,?___lwtoft+1
  6839  002EC8  C01D  F025         	movff	?___ftpack+2,?___lwtoft+2
  6840  002ECC  0012               	return	
  6841  002ECE                     __end_of___lwtoft:
  6842                           	opt stack 0
  6843                           tosu	equ	0xFFF
  6844                           tosh	equ	0xFFE
  6845                           tosl	equ	0xFFD
  6846                           pclath	equ	0xFFA
  6847                           tblptru	equ	0xFF8
  6848                           tblptrh	equ	0xFF7
  6849                           tblptrl	equ	0xFF6
  6850                           tablat	equ	0xFF5
  6851                           prodh	equ	0xFF4
  6852                           prodl	equ	0xFF3
  6853                           intcon	equ	0xFF2
  6854                           postinc0	equ	0xFEE
  6855                           wreg	equ	0xFE8
  6856                           indf2	equ	0xFDF
  6857                           postinc2	equ	0xFDE
  6858                           postdec2	equ	0xFDD
  6859                           plusw2	equ	0xFDB
  6860                           fsr2h	equ	0xFDA
  6861                           fsr2l	equ	0xFD9
  6862                           status	equ	0xFD8
  6863                           
  6864 ;; *************** function ___fttol *****************
  6865 ;; Defined at:
  6866 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\fttol.c"
  6867 ;; Parameters:    Size  Location     Type
  6868 ;;  f1              3    9[BANK0 ] float 
  6869 ;; Auto vars:     Size  Location     Type
  6870 ;;  lval            4    6[BANK1 ] unsigned long 
  6871 ;;  exp1            1   10[BANK1 ] unsigned char 
  6872 ;;  sign1           1    5[BANK1 ] unsigned char 
  6873 ;; Return value:  Size  Location     Type
  6874 ;;                  4    9[BANK0 ] long 
  6875 ;; Registers used:
  6876 ;;		wreg, status,2, status,0
  6877 ;; Tracked objects:
  6878 ;;		On entry : 0/0
  6879 ;;		On exit  : 0/0
  6880 ;;		Unchanged: 0/0
  6881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6882 ;;      Params:         0       4       0       0       0       0       0
  6883 ;;      Locals:         0       0       6       0       0       0       0
  6884 ;;      Temps:          0       0       5       0       0       0       0
  6885 ;;      Totals:         0       4      11       0       0       0       0
  6886 ;;Total ram usage:       15 bytes
  6887 ;; Hardware stack levels used:    1
  6888 ;; Hardware stack levels required when called:    4
  6889 ;; This function calls:
  6890 ;;		Nothing
  6891 ;; This function is called by:
  6892 ;;		_main
  6893 ;; This function uses a non-reentrant model
  6894 ;;
  6895                           
  6896                           	psect	text32
  6897  001538                     __ptext32:
  6898                           	opt stack 0
  6899  001538                     ___fttol:
  6900                           	opt stack 26
  6901                           
  6902                           ;incstack = 0
  6903  001538  C0F9  F139         	movff	___fttol@f1+2,??___fttol
  6904  00153C  0101               	movlb	1	; () banked
  6905  00153E  6B3A               	clrf	(??___fttol+1)& (0+255),b
  6906  001540  6B3B               	clrf	(??___fttol+2)& (0+255),b
  6907  001542  0100               	movlb	0	; () banked
  6908  001544  35F8               	rlcf	(___fttol@f1+1)& (0+255),w,b
  6909  001546  0101               	movlb	1	; () banked
  6910  001548  3739               	rlcf	??___fttol& (0+255),f,b
  6911  00154A  E301               	bnc	u7621
  6912  00154C  813A               	bsf	(??___fttol+1)& (0+255),0,b
  6913  00154E                     u7621:
  6914  00154E  0101               	movlb	1	; () banked
  6915  001550  5139               	movf	??___fttol& (0+255),w,b
  6916  001552  0101               	movlb	1	; () banked
  6917  001554  6F43               	movwf	___fttol@exp1& (0+255),b
  6918  001556  0101               	movlb	1	; () banked
  6919  001558  5143               	movf	___fttol@exp1& (0+255),w,b
  6920  00155A  A4D8               	btfss	status,2,c
  6921  00155C  D00A               	goto	l6789
  6922                           
  6923                           ; BSR set to: 1
  6924  00155E  0E00               	movlw	0
  6925  001560  0100               	movlb	0	; () banked
  6926  001562  6FF7               	movwf	?___fttol& (0+255),b
  6927  001564  0E00               	movlw	0
  6928  001566  6FF8               	movwf	(?___fttol+1)& (0+255),b
  6929  001568  0E00               	movlw	0
  6930  00156A  6FF9               	movwf	(?___fttol+2)& (0+255),b
  6931  00156C  0E00               	movlw	0
  6932  00156E  6FFA               	movwf	(?___fttol+3)& (0+255),b
  6933                           
  6934                           ; BSR set to: 0
  6935  001570  0012               	return	
  6936  001572                     l6789:
  6937  001572  0E17               	movlw	23
  6938  001574  0101               	movlb	1	; () banked
  6939  001576  6F39               	movwf	??___fttol& (0+255),b
  6940  001578  C0F7  F13A         	movff	___fttol@f1,??___fttol+1
  6941  00157C  C0F8  F13B         	movff	___fttol@f1+1,??___fttol+2
  6942  001580  C0F9  F13C         	movff	___fttol@f1+2,??___fttol+3
  6943  001584  0101               	movlb	1	; () banked
  6944  001586  2939               	incf	??___fttol& (0+255),w,b
  6945  001588  0101               	movlb	1	; () banked
  6946  00158A  6F3D               	movwf	(??___fttol+4)& (0+255),b
  6947  00158C  D005               	goto	u7640
  6948  00158E                     u7645:
  6949  00158E  0101               	movlb	1	; () banked
  6950  001590  90D8               	bcf	status,0,c
  6951  001592  333C               	rrcf	(??___fttol+3)& (0+255),f,b
  6952  001594  333B               	rrcf	(??___fttol+2)& (0+255),f,b
  6953  001596  333A               	rrcf	(??___fttol+1)& (0+255),f,b
  6954  001598                     u7640:
  6955  001598  0101               	movlb	1	; () banked
  6956  00159A  2F3D               	decfsz	(??___fttol+4)& (0+255),f,b
  6957  00159C  D7F8               	goto	u7645
  6958  00159E  0101               	movlb	1	; () banked
  6959  0015A0  513A               	movf	(??___fttol+1)& (0+255),w,b
  6960  0015A2  0101               	movlb	1	; () banked
  6961  0015A4  6F3E               	movwf	___fttol@sign1& (0+255),b
  6962                           
  6963                           ; BSR set to: 1
  6964  0015A6  0100               	movlb	0	; () banked
  6965  0015A8  8FF8               	bsf	(___fttol@f1+1)& (0+255),7,b
  6966                           
  6967                           ; BSR set to: 0
  6968  0015AA  0EFF               	movlw	255
  6969  0015AC  0100               	movlb	0	; () banked
  6970  0015AE  17F7               	andwf	___fttol@f1& (0+255),f,b
  6971  0015B0  0EFF               	movlw	255
  6972  0015B2  0100               	movlb	0	; () banked
  6973  0015B4  17F8               	andwf	(___fttol@f1+1)& (0+255),f,b
  6974  0015B6  0E00               	movlw	0
  6975  0015B8  0100               	movlb	0	; () banked
  6976  0015BA  17F9               	andwf	(___fttol@f1+2)& (0+255),f,b
  6977                           
  6978                           ; BSR set to: 0
  6979  0015BC  0100               	movlb	0	; () banked
  6980  0015BE  51F7               	movf	___fttol@f1& (0+255),w,b
  6981  0015C0  0101               	movlb	1	; () banked
  6982  0015C2  6F3F               	movwf	___fttol@lval& (0+255),b
  6983  0015C4  0100               	movlb	0	; () banked
  6984  0015C6  51F8               	movf	(___fttol@f1+1)& (0+255),w,b
  6985  0015C8  0101               	movlb	1	; () banked
  6986  0015CA  6F40               	movwf	(___fttol@lval+1)& (0+255),b
  6987  0015CC  0100               	movlb	0	; () banked
  6988  0015CE  51F9               	movf	(___fttol@f1+2)& (0+255),w,b
  6989  0015D0  0101               	movlb	1	; () banked
  6990  0015D2  6F41               	movwf	(___fttol@lval+2)& (0+255),b
  6991  0015D4  0101               	movlb	1	; () banked
  6992  0015D6  6B42               	clrf	(___fttol@lval+3)& (0+255),b
  6993                           
  6994                           ; BSR set to: 1
  6995  0015D8  0E8E               	movlw	142
  6996  0015DA  0101               	movlb	1	; () banked
  6997  0015DC  5F43               	subwf	___fttol@exp1& (0+255),f,b
  6998                           
  6999                           ; BSR set to: 1
  7000  0015DE  0101               	movlb	1	; () banked
  7001  0015E0  AF43               	btfss	___fttol@exp1& (0+255),7,b
  7002  0015E2  D01A               	goto	l6811
  7003                           
  7004                           ; BSR set to: 1
  7005  0015E4  0101               	movlb	1	; () banked
  7006  0015E6  5143               	movf	___fttol@exp1& (0+255),w,b
  7007  0015E8  0A80               	xorlw	128
  7008  0015EA  0F8F               	addlw	143
  7009  0015EC  B0D8               	btfsc	status,0,c
  7010  0015EE  D00A               	goto	l6807
  7011                           
  7012                           ; BSR set to: 1
  7013  0015F0  0E00               	movlw	0
  7014  0015F2  0100               	movlb	0	; () banked
  7015  0015F4  6FF7               	movwf	?___fttol& (0+255),b
  7016  0015F6  0E00               	movlw	0
  7017  0015F8  6FF8               	movwf	(?___fttol+1)& (0+255),b
  7018  0015FA  0E00               	movlw	0
  7019  0015FC  6FF9               	movwf	(?___fttol+2)& (0+255),b
  7020  0015FE  0E00               	movlw	0
  7021  001600  6FFA               	movwf	(?___fttol+3)& (0+255),b
  7022                           
  7023                           ; BSR set to: 0
  7024  001602  0012               	return	
  7025  001604                     l6807:
  7026  001604  0101               	movlb	1	; () banked
  7027  001606  90D8               	bcf	status,0,c
  7028  001608  3342               	rrcf	(___fttol@lval+3)& (0+255),f,b
  7029  00160A  3341               	rrcf	(___fttol@lval+2)& (0+255),f,b
  7030  00160C  3340               	rrcf	(___fttol@lval+1)& (0+255),f,b
  7031  00160E  333F               	rrcf	___fttol@lval& (0+255),f,b
  7032                           
  7033                           ; BSR set to: 1
  7034  001610  0101               	movlb	1	; () banked
  7035  001612  3F43               	incfsz	___fttol@exp1& (0+255),f,b
  7036  001614  D7F7               	goto	l6807
  7037                           
  7038                           ; BSR set to: 1
  7039  001616  D01B               	goto	l6821
  7040  001618                     l6811:
  7041                           
  7042                           ; BSR set to: 1
  7043  001618  0E17               	movlw	23
  7044  00161A  0101               	movlb	1	; () banked
  7045  00161C  6543               	cpfsgt	___fttol@exp1& (0+255),b
  7046  00161E  D012               	goto	l6819
  7047                           
  7048                           ; BSR set to: 1
  7049  001620  0E00               	movlw	0
  7050  001622  0100               	movlb	0	; () banked
  7051  001624  6FF7               	movwf	?___fttol& (0+255),b
  7052  001626  0E00               	movlw	0
  7053  001628  6FF8               	movwf	(?___fttol+1)& (0+255),b
  7054  00162A  0E00               	movlw	0
  7055  00162C  6FF9               	movwf	(?___fttol+2)& (0+255),b
  7056  00162E  0E00               	movlw	0
  7057  001630  6FFA               	movwf	(?___fttol+3)& (0+255),b
  7058                           
  7059                           ; BSR set to: 0
  7060  001632  0012               	return	
  7061  001634                     l6817:
  7062  001634  0101               	movlb	1	; () banked
  7063  001636  90D8               	bcf	status,0,c
  7064  001638  373F               	rlcf	___fttol@lval& (0+255),f,b
  7065  00163A  3740               	rlcf	(___fttol@lval+1)& (0+255),f,b
  7066  00163C  3741               	rlcf	(___fttol@lval+2)& (0+255),f,b
  7067  00163E  3742               	rlcf	(___fttol@lval+3)& (0+255),f,b
  7068  001640  0101               	movlb	1	; () banked
  7069  001642  0743               	decf	___fttol@exp1& (0+255),f,b
  7070  001644                     l6819:
  7071  001644  0101               	movlb	1	; () banked
  7072  001646  5143               	movf	___fttol@exp1& (0+255),w,b
  7073  001648  0101               	movlb	1	; () banked
  7074  00164A  A4D8               	btfss	status,2,c
  7075  00164C  D7F3               	goto	l6817
  7076  00164E                     l6821:
  7077                           
  7078                           ; BSR set to: 1
  7079  00164E  0101               	movlb	1	; () banked
  7080  001650  513E               	movf	___fttol@sign1& (0+255),w,b
  7081  001652  0101               	movlb	1	; () banked
  7082  001654  B4D8               	btfsc	status,2,c
  7083  001656  D009               	goto	l6825
  7084                           
  7085                           ; BSR set to: 1
  7086  001658  0101               	movlb	1	; () banked
  7087  00165A  1F42               	comf	(___fttol@lval+3)& (0+255),f,b
  7088  00165C  1F41               	comf	(___fttol@lval+2)& (0+255),f,b
  7089  00165E  1F40               	comf	(___fttol@lval+1)& (0+255),f,b
  7090  001660  6D3F               	negf	___fttol@lval& (0+255),b
  7091  001662  0E00               	movlw	0
  7092  001664  2340               	addwfc	(___fttol@lval+1)& (0+255),f,b
  7093  001666  2341               	addwfc	(___fttol@lval+2)& (0+255),f,b
  7094  001668  2342               	addwfc	(___fttol@lval+3)& (0+255),f,b
  7095  00166A                     l6825:
  7096                           
  7097                           ; BSR set to: 1
  7098  00166A  C13F  F0F7         	movff	___fttol@lval,?___fttol
  7099  00166E  C140  F0F8         	movff	___fttol@lval+1,?___fttol+1
  7100  001672  C141  F0F9         	movff	___fttol@lval+2,?___fttol+2
  7101  001676  C142  F0FA         	movff	___fttol@lval+3,?___fttol+3
  7102  00167A  0012               	return	
  7103  00167C                     __end_of___fttol:
  7104                           	opt stack 0
  7105                           tosu	equ	0xFFF
  7106                           tosh	equ	0xFFE
  7107                           tosl	equ	0xFFD
  7108                           pclath	equ	0xFFA
  7109                           tblptru	equ	0xFF8
  7110                           tblptrh	equ	0xFF7
  7111                           tblptrl	equ	0xFF6
  7112                           tablat	equ	0xFF5
  7113                           prodh	equ	0xFF4
  7114                           prodl	equ	0xFF3
  7115                           intcon	equ	0xFF2
  7116                           postinc0	equ	0xFEE
  7117                           wreg	equ	0xFE8
  7118                           indf2	equ	0xFDF
  7119                           postinc2	equ	0xFDE
  7120                           postdec2	equ	0xFDD
  7121                           plusw2	equ	0xFDB
  7122                           fsr2h	equ	0xFDA
  7123                           fsr2l	equ	0xFD9
  7124                           status	equ	0xFD8
  7125                           
  7126 ;; *************** function ___ftmul *****************
  7127 ;; Defined at:
  7128 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftmul.c"
  7129 ;; Parameters:    Size  Location     Type
  7130 ;;  f1              3   37[COMRAM] float 
  7131 ;;  f2              3   40[COMRAM] float 
  7132 ;; Auto vars:     Size  Location     Type
  7133 ;;  f3_as_produc    3    4[BANK0 ] unsigned um
  7134 ;;  sign            1    8[BANK0 ] unsigned char 
  7135 ;;  cntr            1    7[BANK0 ] unsigned char 
  7136 ;;  exp             1    3[BANK0 ] unsigned char 
  7137 ;; Return value:  Size  Location     Type
  7138 ;;                  3   37[COMRAM] float 
  7139 ;; Registers used:
  7140 ;;		wreg, status,2, status,0, cstack
  7141 ;; Tracked objects:
  7142 ;;		On entry : 0/0
  7143 ;;		On exit  : 0/0
  7144 ;;		Unchanged: 0/0
  7145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7146 ;;      Params:         6       0       0       0       0       0       0
  7147 ;;      Locals:         0       6       0       0       0       0       0
  7148 ;;      Temps:          0       3       0       0       0       0       0
  7149 ;;      Totals:         6       9       0       0       0       0       0
  7150 ;;Total ram usage:       15 bytes
  7151 ;; Hardware stack levels used:    1
  7152 ;; Hardware stack levels required when called:    5
  7153 ;; This function calls:
  7154 ;;		___ftpack
  7155 ;; This function is called by:
  7156 ;;		_main
  7157 ;; This function uses a non-reentrant model
  7158 ;;
  7159                           
  7160                           	psect	text33
  7161  0017AC                     __ptext33:
  7162                           	opt stack 0
  7163  0017AC                     ___ftmul:
  7164                           	opt stack 25
  7165                           
  7166                           ;incstack = 0
  7167  0017AC  C028  F0EE         	movff	___ftmul@f1+2,??___ftmul
  7168  0017B0  0100               	movlb	0	; () banked
  7169  0017B2  6BEF               	clrf	(??___ftmul+1)& (0+255),b
  7170  0017B4  6BF0               	clrf	(??___ftmul+2)& (0+255),b
  7171  0017B6  3427               	rlcf	___ftmul@f1+1,w,c
  7172  0017B8  0100               	movlb	0	; () banked
  7173  0017BA  37EE               	rlcf	??___ftmul& (0+255),f,b
  7174  0017BC  E301               	bnc	u7561
  7175  0017BE  81EF               	bsf	(??___ftmul+1)& (0+255),0,b
  7176  0017C0                     u7561:
  7177  0017C0  0100               	movlb	0	; () banked
  7178  0017C2  51EE               	movf	??___ftmul& (0+255),w,b
  7179  0017C4  0100               	movlb	0	; () banked
  7180  0017C6  6FF1               	movwf	___ftmul@exp& (0+255),b
  7181  0017C8  0100               	movlb	0	; () banked
  7182  0017CA  51F1               	movf	___ftmul@exp& (0+255),w,b
  7183  0017CC  A4D8               	btfss	status,2,c
  7184  0017CE  D007               	goto	l6741
  7185                           
  7186                           ; BSR set to: 0
  7187  0017D0  0E00               	movlw	0
  7188  0017D2  6E26               	movwf	?___ftmul,c
  7189  0017D4  0E00               	movlw	0
  7190  0017D6  6E27               	movwf	?___ftmul+1,c
  7191  0017D8  0E00               	movlw	0
  7192  0017DA  6E28               	movwf	?___ftmul+2,c
  7193                           
  7194                           ; BSR set to: 0
  7195  0017DC  0012               	return	
  7196  0017DE                     l6741:
  7197                           
  7198                           ; BSR set to: 0
  7199  0017DE  C02B  F0EE         	movff	___ftmul@f2+2,??___ftmul
  7200  0017E2  0100               	movlb	0	; () banked
  7201  0017E4  6BEF               	clrf	(??___ftmul+1)& (0+255),b
  7202  0017E6  6BF0               	clrf	(??___ftmul+2)& (0+255),b
  7203  0017E8  342A               	rlcf	___ftmul@f2+1,w,c
  7204  0017EA  0100               	movlb	0	; () banked
  7205  0017EC  37EE               	rlcf	??___ftmul& (0+255),f,b
  7206  0017EE  E301               	bnc	u7581
  7207  0017F0  81EF               	bsf	(??___ftmul+1)& (0+255),0,b
  7208  0017F2                     u7581:
  7209  0017F2  0100               	movlb	0	; () banked
  7210  0017F4  51EE               	movf	??___ftmul& (0+255),w,b
  7211  0017F6  0100               	movlb	0	; () banked
  7212  0017F8  6FF6               	movwf	___ftmul@sign& (0+255),b
  7213  0017FA  0100               	movlb	0	; () banked
  7214  0017FC  51F6               	movf	___ftmul@sign& (0+255),w,b
  7215  0017FE  A4D8               	btfss	status,2,c
  7216  001800  D007               	goto	l6747
  7217                           
  7218                           ; BSR set to: 0
  7219  001802  0E00               	movlw	0
  7220  001804  6E26               	movwf	?___ftmul,c
  7221  001806  0E00               	movlw	0
  7222  001808  6E27               	movwf	?___ftmul+1,c
  7223  00180A  0E00               	movlw	0
  7224  00180C  6E28               	movwf	?___ftmul+2,c
  7225                           
  7226                           ; BSR set to: 0
  7227  00180E  0012               	return	
  7228  001810                     l6747:
  7229                           
  7230                           ; BSR set to: 0
  7231  001810  0100               	movlb	0	; () banked
  7232  001812  51F6               	movf	___ftmul@sign& (0+255),w,b
  7233  001814  0F7B               	addlw	123
  7234  001816  0100               	movlb	0	; () banked
  7235  001818  27F1               	addwf	___ftmul@exp& (0+255),f,b
  7236                           
  7237                           ; BSR set to: 0
  7238  00181A  C028  F0F6         	movff	___ftmul@f1+2,___ftmul@sign
  7239  00181E  502B               	movf	___ftmul@f2+2,w,c
  7240  001820  0100               	movlb	0	; () banked
  7241  001822  1BF6               	xorwf	___ftmul@sign& (0+255),f,b
  7242  001824  0E80               	movlw	128
  7243  001826  0100               	movlb	0	; () banked
  7244  001828  17F6               	andwf	___ftmul@sign& (0+255),f,b
  7245                           
  7246                           ; BSR set to: 0
  7247  00182A  8E27               	bsf	___ftmul@f1+1,7,c
  7248                           
  7249                           ; BSR set to: 0
  7250  00182C  8E2A               	bsf	___ftmul@f2+1,7,c
  7251                           
  7252                           ; BSR set to: 0
  7253  00182E  0EFF               	movlw	255
  7254  001830  1629               	andwf	___ftmul@f2,f,c
  7255  001832  0EFF               	movlw	255
  7256  001834  162A               	andwf	___ftmul@f2+1,f,c
  7257  001836  0E00               	movlw	0
  7258  001838  162B               	andwf	___ftmul@f2+2,f,c
  7259                           
  7260                           ; BSR set to: 0
  7261  00183A  0E00               	movlw	0
  7262  00183C  0100               	movlb	0	; () banked
  7263  00183E  6FF2               	movwf	___ftmul@f3_as_product& (0+255),b
  7264  001840  0E00               	movlw	0
  7265  001842  0100               	movlb	0	; () banked
  7266  001844  6FF3               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  7267  001846  0E00               	movlw	0
  7268  001848  0100               	movlb	0	; () banked
  7269  00184A  6FF4               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  7270                           
  7271                           ; BSR set to: 0
  7272  00184C  0E07               	movlw	7
  7273  00184E  0100               	movlb	0	; () banked
  7274  001850  6FF5               	movwf	___ftmul@cntr& (0+255),b
  7275  001852                     l6761:
  7276                           
  7277                           ; BSR set to: 0
  7278  001852  A026               	btfss	___ftmul@f1,0,c
  7279  001854  D009               	goto	l6765
  7280                           
  7281                           ; BSR set to: 0
  7282  001856  5029               	movf	___ftmul@f2,w,c
  7283  001858  0100               	movlb	0	; () banked
  7284  00185A  27F2               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7285  00185C  502A               	movf	___ftmul@f2+1,w,c
  7286  00185E  0100               	movlb	0	; () banked
  7287  001860  23F3               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7288  001862  502B               	movf	___ftmul@f2+2,w,c
  7289  001864  0100               	movlb	0	; () banked
  7290  001866  23F4               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7291  001868                     l6765:
  7292                           
  7293                           ; BSR set to: 0
  7294  001868  90D8               	bcf	status,0,c
  7295  00186A  3228               	rrcf	___ftmul@f1+2,f,c
  7296  00186C  3227               	rrcf	___ftmul@f1+1,f,c
  7297  00186E  3226               	rrcf	___ftmul@f1,f,c
  7298  001870  90D8               	bcf	status,0,c
  7299  001872  3629               	rlcf	___ftmul@f2,f,c
  7300  001874  362A               	rlcf	___ftmul@f2+1,f,c
  7301  001876  362B               	rlcf	___ftmul@f2+2,f,c
  7302                           
  7303                           ; BSR set to: 0
  7304  001878  0100               	movlb	0	; () banked
  7305  00187A  2FF5               	decfsz	___ftmul@cntr& (0+255),f,b
  7306  00187C  D7EA               	goto	l6761
  7307                           
  7308                           ; BSR set to: 0
  7309                           
  7310                           ; BSR set to: 0
  7311  00187E  0E09               	movlw	9
  7312  001880  0100               	movlb	0	; () banked
  7313  001882  6FF5               	movwf	___ftmul@cntr& (0+255),b
  7314  001884                     l6771:
  7315                           
  7316                           ; BSR set to: 0
  7317  001884  A026               	btfss	___ftmul@f1,0,c
  7318  001886  D009               	goto	l6775
  7319                           
  7320                           ; BSR set to: 0
  7321  001888  5029               	movf	___ftmul@f2,w,c
  7322  00188A  0100               	movlb	0	; () banked
  7323  00188C  27F2               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7324  00188E  502A               	movf	___ftmul@f2+1,w,c
  7325  001890  0100               	movlb	0	; () banked
  7326  001892  23F3               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7327  001894  502B               	movf	___ftmul@f2+2,w,c
  7328  001896  0100               	movlb	0	; () banked
  7329  001898  23F4               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7330  00189A                     l6775:
  7331                           
  7332                           ; BSR set to: 0
  7333  00189A  90D8               	bcf	status,0,c
  7334  00189C  3228               	rrcf	___ftmul@f1+2,f,c
  7335  00189E  3227               	rrcf	___ftmul@f1+1,f,c
  7336  0018A0  3226               	rrcf	___ftmul@f1,f,c
  7337  0018A2  0100               	movlb	0	; () banked
  7338  0018A4  90D8               	bcf	status,0,c
  7339  0018A6  33F4               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  7340  0018A8  33F3               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  7341  0018AA  33F2               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  7342                           
  7343                           ; BSR set to: 0
  7344  0018AC  0100               	movlb	0	; () banked
  7345  0018AE  2FF5               	decfsz	___ftmul@cntr& (0+255),f,b
  7346  0018B0  D7E9               	goto	l6771
  7347                           
  7348                           ; BSR set to: 0
  7349                           
  7350                           ; BSR set to: 0
  7351  0018B2  C0F2  F01B         	movff	___ftmul@f3_as_product,___ftpack@arg
  7352  0018B6  C0F3  F01C         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7353  0018BA  C0F4  F01D         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7354  0018BE  C0F1  F01E         	movff	___ftmul@exp,___ftpack@exp
  7355  0018C2  C0F6  F01F         	movff	___ftmul@sign,___ftpack@sign
  7356  0018C6  EC89  F011         	call	___ftpack	;wreg free
  7357  0018CA  C01B  F026         	movff	?___ftpack,?___ftmul
  7358  0018CE  C01C  F027         	movff	?___ftpack+1,?___ftmul+1
  7359  0018D2  C01D  F028         	movff	?___ftpack+2,?___ftmul+2
  7360  0018D6  0012               	return	
  7361  0018D8                     __end_of___ftmul:
  7362                           	opt stack 0
  7363                           tosu	equ	0xFFF
  7364                           tosh	equ	0xFFE
  7365                           tosl	equ	0xFFD
  7366                           pclath	equ	0xFFA
  7367                           tblptru	equ	0xFF8
  7368                           tblptrh	equ	0xFF7
  7369                           tblptrl	equ	0xFF6
  7370                           tablat	equ	0xFF5
  7371                           prodh	equ	0xFF4
  7372                           prodl	equ	0xFF3
  7373                           intcon	equ	0xFF2
  7374                           postinc0	equ	0xFEE
  7375                           wreg	equ	0xFE8
  7376                           indf2	equ	0xFDF
  7377                           postinc2	equ	0xFDE
  7378                           postdec2	equ	0xFDD
  7379                           plusw2	equ	0xFDB
  7380                           fsr2h	equ	0xFDA
  7381                           fsr2l	equ	0xFD9
  7382                           status	equ	0xFD8
  7383                           
  7384 ;; *************** function ___ftpack *****************
  7385 ;; Defined at:
  7386 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\float.c"
  7387 ;; Parameters:    Size  Location     Type
  7388 ;;  arg             3   26[COMRAM] unsigned um
  7389 ;;  exp             1   29[COMRAM] unsigned char 
  7390 ;;  sign            1   30[COMRAM] unsigned char 
  7391 ;; Auto vars:     Size  Location     Type
  7392 ;;		None
  7393 ;; Return value:  Size  Location     Type
  7394 ;;                  3   26[COMRAM] float 
  7395 ;; Registers used:
  7396 ;;		wreg, status,2, status,0
  7397 ;; Tracked objects:
  7398 ;;		On entry : 0/0
  7399 ;;		On exit  : 0/0
  7400 ;;		Unchanged: 0/0
  7401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7402 ;;      Params:         5       0       0       0       0       0       0
  7403 ;;      Locals:         0       0       0       0       0       0       0
  7404 ;;      Temps:          3       0       0       0       0       0       0
  7405 ;;      Totals:         8       0       0       0       0       0       0
  7406 ;;Total ram usage:        8 bytes
  7407 ;; Hardware stack levels used:    1
  7408 ;; Hardware stack levels required when called:    4
  7409 ;; This function calls:
  7410 ;;		Nothing
  7411 ;; This function is called by:
  7412 ;;		___ftmul
  7413 ;;		___lwtoft
  7414 ;; This function uses a non-reentrant model
  7415 ;;
  7416                           
  7417                           	psect	text34
  7418  002312                     __ptext34:
  7419                           	opt stack 0
  7420  002312                     ___ftpack:
  7421                           	opt stack 25
  7422                           
  7423                           ;incstack = 0
  7424  002312  501E               	movf	___ftpack@exp,w,c
  7425  002314  B4D8               	btfsc	status,2,c
  7426  002316  D005               	goto	l6411
  7427  002318  501B               	movf	___ftpack@arg,w,c
  7428  00231A  101C               	iorwf	___ftpack@arg+1,w,c
  7429  00231C  101D               	iorwf	___ftpack@arg+2,w,c
  7430  00231E  A4D8               	btfss	status,2,c
  7431  002320  D00C               	goto	l6417
  7432  002322                     l6411:
  7433  002322  0E00               	movlw	0
  7434  002324  6E1B               	movwf	?___ftpack,c
  7435  002326  0E00               	movlw	0
  7436  002328  6E1C               	movwf	?___ftpack+1,c
  7437  00232A  0E00               	movlw	0
  7438  00232C  6E1D               	movwf	?___ftpack+2,c
  7439  00232E  0012               	return	
  7440  002330                     l6415:
  7441  002330  2A1E               	incf	___ftpack@exp,f,c
  7442  002332  90D8               	bcf	status,0,c
  7443  002334  321D               	rrcf	___ftpack@arg+2,f,c
  7444  002336  321C               	rrcf	___ftpack@arg+1,f,c
  7445  002338  321B               	rrcf	___ftpack@arg,f,c
  7446  00233A                     l6417:
  7447  00233A  0E00               	movlw	0
  7448  00233C  141B               	andwf	___ftpack@arg,w,c
  7449  00233E  6E20               	movwf	??___ftpack& (0+255),c
  7450  002340  0E00               	movlw	0
  7451  002342  141C               	andwf	___ftpack@arg+1,w,c
  7452  002344  6E21               	movwf	(??___ftpack+1)& (0+255),c
  7453  002346  0EFE               	movlw	254
  7454  002348  141D               	andwf	___ftpack@arg+2,w,c
  7455  00234A  6E22               	movwf	(??___ftpack+2)& (0+255),c
  7456  00234C  5020               	movf	??___ftpack,w,c
  7457  00234E  1021               	iorwf	??___ftpack+1,w,c
  7458  002350  1022               	iorwf	??___ftpack+2,w,c
  7459  002352  B4D8               	btfsc	status,2,c
  7460  002354  D00C               	goto	l6423
  7461  002356  D7EC               	goto	l6415
  7462  002358                     l6419:
  7463  002358  2A1E               	incf	___ftpack@exp,f,c
  7464  00235A  0E01               	movlw	1
  7465  00235C  261B               	addwf	___ftpack@arg,f,c
  7466  00235E  0E00               	movlw	0
  7467  002360  221C               	addwfc	___ftpack@arg+1,f,c
  7468  002362  0E00               	movlw	0
  7469  002364  221D               	addwfc	___ftpack@arg+2,f,c
  7470  002366  90D8               	bcf	status,0,c
  7471  002368  321D               	rrcf	___ftpack@arg+2,f,c
  7472  00236A  321C               	rrcf	___ftpack@arg+1,f,c
  7473  00236C  321B               	rrcf	___ftpack@arg,f,c
  7474  00236E                     l6423:
  7475  00236E  0E00               	movlw	0
  7476  002370  141B               	andwf	___ftpack@arg,w,c
  7477  002372  6E20               	movwf	??___ftpack& (0+255),c
  7478  002374  0E00               	movlw	0
  7479  002376  141C               	andwf	___ftpack@arg+1,w,c
  7480  002378  6E21               	movwf	(??___ftpack+1)& (0+255),c
  7481  00237A  0EFF               	movlw	255
  7482  00237C  141D               	andwf	___ftpack@arg+2,w,c
  7483  00237E  6E22               	movwf	(??___ftpack+2)& (0+255),c
  7484  002380  5020               	movf	??___ftpack,w,c
  7485  002382  1021               	iorwf	??___ftpack+1,w,c
  7486  002384  1022               	iorwf	??___ftpack+2,w,c
  7487  002386  B4D8               	btfsc	status,2,c
  7488  002388  D006               	goto	l6427
  7489  00238A  D7E6               	goto	l6419
  7490  00238C                     l6425:
  7491  00238C  061E               	decf	___ftpack@exp,f,c
  7492  00238E  90D8               	bcf	status,0,c
  7493  002390  361B               	rlcf	___ftpack@arg,f,c
  7494  002392  361C               	rlcf	___ftpack@arg+1,f,c
  7495  002394  361D               	rlcf	___ftpack@arg+2,f,c
  7496  002396                     l6427:
  7497  002396  BE1C               	btfsc	___ftpack@arg+1,7,c
  7498  002398  D003               	goto	l1430
  7499  00239A  0E02               	movlw	2
  7500  00239C  601E               	cpfslt	___ftpack@exp,c
  7501  00239E  D7F6               	goto	l6425
  7502  0023A0                     l1430:
  7503  0023A0  A01E               	btfss	___ftpack@exp,0,c
  7504  0023A2  9E1C               	bcf	___ftpack@arg+1,7,c
  7505  0023A4  90D8               	bcf	status,0,c
  7506  0023A6  321E               	rrcf	___ftpack@exp,f,c
  7507  0023A8  501E               	movf	___ftpack@exp,w,c
  7508  0023AA  121D               	iorwf	___ftpack@arg+2,f,c
  7509  0023AC  501F               	movf	___ftpack@sign,w,c
  7510  0023AE  A4D8               	btfss	status,2,c
  7511  0023B0  8E1D               	bsf	___ftpack@arg+2,7,c
  7512  0023B2  C01B  F01B         	movff	___ftpack@arg,?___ftpack
  7513  0023B6  C01C  F01C         	movff	___ftpack@arg+1,?___ftpack+1
  7514  0023BA  C01D  F01D         	movff	___ftpack@arg+2,?___ftpack+2
  7515  0023BE  0012               	return	
  7516  0023C0                     __end_of___ftpack:
  7517                           	opt stack 0
  7518                           tosu	equ	0xFFF
  7519                           tosh	equ	0xFFE
  7520                           tosl	equ	0xFFD
  7521                           pclath	equ	0xFFA
  7522                           tblptru	equ	0xFF8
  7523                           tblptrh	equ	0xFF7
  7524                           tblptrl	equ	0xFF6
  7525                           tablat	equ	0xFF5
  7526                           prodh	equ	0xFF4
  7527                           prodl	equ	0xFF3
  7528                           intcon	equ	0xFF2
  7529                           postinc0	equ	0xFEE
  7530                           wreg	equ	0xFE8
  7531                           indf2	equ	0xFDF
  7532                           postinc2	equ	0xFDE
  7533                           postdec2	equ	0xFDD
  7534                           plusw2	equ	0xFDB
  7535                           fsr2h	equ	0xFDA
  7536                           fsr2l	equ	0xFD9
  7537                           status	equ	0xFD8
  7538                           
  7539 ;; *************** function _SYSTEM_Initialize *****************
  7540 ;; Defined at:
  7541 ;;		line 112 in file "mcc_generated_files/mcc.c"
  7542 ;; Parameters:    Size  Location     Type
  7543 ;;		None
  7544 ;; Auto vars:     Size  Location     Type
  7545 ;;		None
  7546 ;; Return value:  Size  Location     Type
  7547 ;;                  1    wreg      void 
  7548 ;; Registers used:
  7549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7550 ;; Tracked objects:
  7551 ;;		On entry : 0/0
  7552 ;;		On exit  : 0/0
  7553 ;;		Unchanged: 0/0
  7554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7555 ;;      Params:         0       0       0       0       0       0       0
  7556 ;;      Locals:         0       0       0       0       0       0       0
  7557 ;;      Temps:          0       0       0       0       0       0       0
  7558 ;;      Totals:         0       0       0       0       0       0       0
  7559 ;;Total ram usage:        0 bytes
  7560 ;; Hardware stack levels used:    1
  7561 ;; Hardware stack levels required when called:    7
  7562 ;; This function calls:
  7563 ;;		_ADC_Initialize
  7564 ;;		_EUSART1_Initialize
  7565 ;;		_I2C1_Initialize
  7566 ;;		_INTERRUPT_Initialize
  7567 ;;		_OSCILLATOR_Initialize
  7568 ;;		_PIN_MANAGER_Initialize
  7569 ;;		_TMR0_Initialize
  7570 ;;		_TMR2_Initialize
  7571 ;;		_begin
  7572 ;; This function is called by:
  7573 ;;		_main
  7574 ;; This function uses a non-reentrant model
  7575 ;;
  7576                           
  7577                           	psect	text35
  7578  0028BA                     __ptext35:
  7579                           	opt stack 0
  7580  0028BA                     _SYSTEM_Initialize:
  7581                           	opt stack 23
  7582                           
  7583                           ;mcc.c: 114: OSCILLATOR_Initialize();
  7584                           
  7585                           ;incstack = 0
  7586  0028BA  EC0E  F018         	call	_OSCILLATOR_Initialize	;wreg free
  7587                           
  7588                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  7589  0028BE  EC5F  F015         	call	_PIN_MANAGER_Initialize	;wreg free
  7590                           
  7591                           ;mcc.c: 116: INTERRUPT_Initialize();
  7592  0028C2  ECF7  F017         	call	_INTERRUPT_Initialize	;wreg free
  7593                           
  7594                           ;mcc.c: 117: ADC_Initialize();
  7595  0028C6  ECC1  F017         	call	_ADC_Initialize	;wreg free
  7596                           
  7597                           ;mcc.c: 118: TMR0_Initialize();
  7598  0028CA  EC87  F017         	call	_TMR0_Initialize	;wreg free
  7599                           
  7600                           ;mcc.c: 119: TMR2_Initialize();
  7601  0028CE  EC67  F017         	call	_TMR2_Initialize	;wreg free
  7602                           
  7603                           ;mcc.c: 120: EUSART1_Initialize();
  7604  0028D2  EC55  F016         	call	_EUSART1_Initialize	;wreg free
  7605                           
  7606                           ;mcc.c: 121: begin(receiveArray, sizeof (receiveArray), 3, 0, Send_put, Receive_get, Rec
      +                          eive_available, Receive_peek);
  7607  0028D6  0E00               	movlw	low _receiveArray
  7608  0028D8  0100               	movlb	0	; () banked
  7609  0028DA  6FEE               	movwf	begin@ptr& (0+255),b
  7610  0028DC  0E01               	movlw	high _receiveArray
  7611  0028DE  0100               	movlb	0	; () banked
  7612  0028E0  6FEF               	movwf	(begin@ptr+1)& (0+255),b
  7613  0028E2  0E28               	movlw	40
  7614  0028E4  0100               	movlb	0	; () banked
  7615  0028E6  6FF0               	movwf	begin@maxSize& (0+255),b
  7616  0028E8  0E03               	movlw	3
  7617  0028EA  0100               	movlb	0	; () banked
  7618  0028EC  6FF1               	movwf	begin@givenAddress& (0+255),b
  7619  0028EE  0E00               	movlw	0
  7620  0028F0  0100               	movlb	0	; () banked
  7621  0028F2  6FF2               	movwf	begin@error& (0+255),b
  7622  0028F4  0E86               	movlw	low _Send_put
  7623  0028F6  0100               	movlb	0	; () banked
  7624  0028F8  6FF3               	movwf	begin@stufftosend& (0+255),b
  7625  0028FA  0E2D               	movlw	high _Send_put
  7626  0028FC  0100               	movlb	0	; () banked
  7627  0028FE  6FF4               	movwf	(begin@stufftosend+1)& (0+255),b
  7628  002900  0E0E               	movlw	low _Receive_get
  7629  002902  0100               	movlb	0	; () banked
  7630  002904  6FF5               	movwf	begin@stufftoreceive& (0+255),b
  7631  002906  0E30               	movlw	high _Receive_get
  7632  002908  0100               	movlb	0	; () banked
  7633  00290A  6FF6               	movwf	(begin@stufftoreceive+1)& (0+255),b
  7634  00290C  0E9A               	movlw	low _Receive_available
  7635  00290E  0100               	movlb	0	; () banked
  7636  002910  6FF7               	movwf	begin@stuffavailable& (0+255),b
  7637  002912  0E2F               	movlw	high _Receive_available
  7638  002914  0100               	movlb	0	; () banked
  7639  002916  6FF8               	movwf	(begin@stuffavailable+1)& (0+255),b
  7640  002918  0E00               	movlw	low _Receive_peek
  7641  00291A  0100               	movlb	0	; () banked
  7642  00291C  6FF9               	movwf	begin@stuffpeek& (0+255),b
  7643  00291E  0E30               	movlw	high _Receive_peek
  7644  002920  0100               	movlb	0	; () banked
  7645  002922  6FFA               	movwf	(begin@stuffpeek+1)& (0+255),b
  7646  002924  EC30  F015         	call	_begin	;wreg free
  7647                           
  7648                           ;mcc.c: 122: I2C1_Initialize();
  7649  002928  EC37  F016         	call	_I2C1_Initialize	;wreg free
  7650  00292C  0012               	return		;funcret
  7651  00292E                     __end_of_SYSTEM_Initialize:
  7652                           	opt stack 0
  7653                           tosu	equ	0xFFF
  7654                           tosh	equ	0xFFE
  7655                           tosl	equ	0xFFD
  7656                           pclath	equ	0xFFA
  7657                           tblptru	equ	0xFF8
  7658                           tblptrh	equ	0xFF7
  7659                           tblptrl	equ	0xFF6
  7660                           tablat	equ	0xFF5
  7661                           prodh	equ	0xFF4
  7662                           prodl	equ	0xFF3
  7663                           intcon	equ	0xFF2
  7664                           postinc0	equ	0xFEE
  7665                           wreg	equ	0xFE8
  7666                           indf2	equ	0xFDF
  7667                           postinc2	equ	0xFDE
  7668                           postdec2	equ	0xFDD
  7669                           plusw2	equ	0xFDB
  7670                           fsr2h	equ	0xFDA
  7671                           fsr2l	equ	0xFD9
  7672                           status	equ	0xFD8
  7673                           
  7674 ;; *************** function _begin *****************
  7675 ;; Defined at:
  7676 ;;		line 18 in file "FastTransfer.c"
  7677 ;; Parameters:    Size  Location     Type
  7678 ;;  ptr             2    0[BANK0 ] PTR volatile int 
  7679 ;;		 -> receiveArray(40), 
  7680 ;;  maxSize         1    2[BANK0 ] unsigned char 
  7681 ;;  givenAddress    1    3[BANK0 ] unsigned char 
  7682 ;;  error           1    4[BANK0 ] unsigned char 
  7683 ;;  stufftosend     2    5[BANK0 ] PTR FTN(unsigned char ,)
  7684 ;;		 -> Send_put(1), 
  7685 ;;  stufftorecei    2    7[BANK0 ] PTR FTN()unsigned char 
  7686 ;;		 -> Receive_get(1), 
  7687 ;;  stuffavailab    2    9[BANK0 ] PTR FTN()int 
  7688 ;;		 -> Receive_available(2), 
  7689 ;;  stuffpeek       2   11[BANK0 ] PTR FTN()unsigned char 
  7690 ;;		 -> Receive_peek(1), 
  7691 ;; Auto vars:     Size  Location     Type
  7692 ;;		None
  7693 ;; Return value:  Size  Location     Type
  7694 ;;                  1    wreg      void 
  7695 ;; Registers used:
  7696 ;;		wreg, status,2, status,0, cstack
  7697 ;; Tracked objects:
  7698 ;;		On entry : 0/0
  7699 ;;		On exit  : 0/0
  7700 ;;		Unchanged: 0/0
  7701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7702 ;;      Params:         0      13       0       0       0       0       0
  7703 ;;      Locals:         0       0       0       0       0       0       0
  7704 ;;      Temps:          0       0       0       0       0       0       0
  7705 ;;      Totals:         0      13       0       0       0       0       0
  7706 ;;Total ram usage:       13 bytes
  7707 ;; Hardware stack levels used:    1
  7708 ;; Hardware stack levels required when called:    5
  7709 ;; This function calls:
  7710 ;;		___awdiv
  7711 ;; This function is called by:
  7712 ;;		_SYSTEM_Initialize
  7713 ;; This function uses a non-reentrant model
  7714 ;;
  7715                           
  7716                           	psect	text36
  7717  002A60                     __ptext36:
  7718                           	opt stack 0
  7719  002A60                     _begin:
  7720                           	opt stack 24
  7721                           
  7722                           ;FastTransfer.c: 19: receiveArrayAddress = ptr;
  7723                           
  7724                           ;incstack = 0
  7725  002A60  C0EE  F0D3         	movff	begin@ptr,_receiveArrayAddress
  7726  002A64  C0EF  F0D4         	movff	begin@ptr+1,_receiveArrayAddress+1
  7727                           
  7728                           ;FastTransfer.c: 20: moduleAddress = givenAddress;
  7729  002A68  C0F1  F03B         	movff	begin@givenAddress,_moduleAddress
  7730                           
  7731                           ;FastTransfer.c: 21: serial_write = stufftosend;
  7732  002A6C  C0F3  F032         	movff	begin@stufftosend,_serial_write
  7733  002A70  C0F4  F033         	movff	begin@stufftosend+1,_serial_write+1
  7734                           
  7735                           ;FastTransfer.c: 22: serial_available = stuffavailable;
  7736  002A74  C0F7  F02E         	movff	begin@stuffavailable,_serial_available
  7737  002A78  C0F8  F02F         	movff	begin@stuffavailable+1,_serial_available+1
  7738                           
  7739                           ;FastTransfer.c: 23: serial_peek = stuffpeek;
  7740  002A7C  C0F9  F0D7         	movff	begin@stuffpeek,_serial_peek
  7741  002A80  C0FA  F0D8         	movff	begin@stuffpeek+1,_serial_peek+1
  7742                           
  7743                           ;FastTransfer.c: 24: serial_read = stufftoreceive;
  7744  002A84  C0F5  F030         	movff	begin@stufftoreceive,_serial_read
  7745  002A88  C0F6  F031         	movff	begin@stufftoreceive+1,_serial_read+1
  7746                           
  7747                           ;FastTransfer.c: 25: maxDataAddress = maxSize / 2;
  7748  002A8C  C0F0  F01B         	movff	begin@maxSize,___awdiv@dividend
  7749  002A90  6A1C               	clrf	___awdiv@dividend+1,c
  7750  002A92  0E00               	movlw	0
  7751  002A94  6E1E               	movwf	___awdiv@divisor+1,c
  7752  002A96  0E02               	movlw	2
  7753  002A98  6E1D               	movwf	___awdiv@divisor,c
  7754  002A9A  ECA5  F013         	call	___awdiv	;wreg free
  7755  002A9E  501B               	movf	?___awdiv,w,c
  7756  002AA0  6E3A               	movwf	_maxDataAddress,c
  7757                           
  7758                           ;FastTransfer.c: 26: sendStructAddress = (unsigned char*) & ring_buffer;
  7759  002AA2  0E00               	movlw	low _ring_buffer
  7760  002AA4  0100               	movlb	0	; () banked
  7761  002AA6  6FD5               	movwf	_sendStructAddress& (0+255),b
  7762  002AA8  0E02               	movlw	high _ring_buffer
  7763  002AAA  0100               	movlb	0	; () banked
  7764  002AAC  6FD6               	movwf	(_sendStructAddress+1)& (0+255),b
  7765                           
  7766                           ; BSR set to: 0
  7767                           ;FastTransfer.c: 27: AKNAKsend = error;
  7768  002AAE  C0F2  F036         	movff	begin@error,_AKNAKsend
  7769                           
  7770                           ; BSR set to: 0
  7771                           ;FastTransfer.c: 28: alignErrorCounter = 0;
  7772  002AB2  0E00               	movlw	0
  7773  002AB4  0100               	movlb	0	; () banked
  7774  002AB6  6FC6               	movwf	(_alignErrorCounter+1)& (0+255),b
  7775  002AB8  0E00               	movlw	0
  7776  002ABA  6FC5               	movwf	_alignErrorCounter& (0+255),b
  7777                           
  7778                           ; BSR set to: 0
  7779  002ABC  0012               	return		;funcret
  7780  002ABE                     __end_of_begin:
  7781                           	opt stack 0
  7782                           tosu	equ	0xFFF
  7783                           tosh	equ	0xFFE
  7784                           tosl	equ	0xFFD
  7785                           pclath	equ	0xFFA
  7786                           tblptru	equ	0xFF8
  7787                           tblptrh	equ	0xFF7
  7788                           tblptrl	equ	0xFF6
  7789                           tablat	equ	0xFF5
  7790                           prodh	equ	0xFF4
  7791                           prodl	equ	0xFF3
  7792                           intcon	equ	0xFF2
  7793                           postinc0	equ	0xFEE
  7794                           wreg	equ	0xFE8
  7795                           indf2	equ	0xFDF
  7796                           postinc2	equ	0xFDE
  7797                           postdec2	equ	0xFDD
  7798                           plusw2	equ	0xFDB
  7799                           fsr2h	equ	0xFDA
  7800                           fsr2l	equ	0xFD9
  7801                           status	equ	0xFD8
  7802                           
  7803 ;; *************** function _TMR2_Initialize *****************
  7804 ;; Defined at:
  7805 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  7806 ;; Parameters:    Size  Location     Type
  7807 ;;		None
  7808 ;; Auto vars:     Size  Location     Type
  7809 ;;		None
  7810 ;; Return value:  Size  Location     Type
  7811 ;;                  2  344[None  ] int 
  7812 ;; Registers used:
  7813 ;;		wreg, status,2, status,0, cstack
  7814 ;; Tracked objects:
  7815 ;;		On entry : 0/0
  7816 ;;		On exit  : 0/0
  7817 ;;		Unchanged: 0/0
  7818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7819 ;;      Params:         0       0       0       0       0       0       0
  7820 ;;      Locals:         0       0       0       0       0       0       0
  7821 ;;      Temps:          0       0       0       0       0       0       0
  7822 ;;      Totals:         0       0       0       0       0       0       0
  7823 ;;Total ram usage:        0 bytes
  7824 ;; Hardware stack levels used:    1
  7825 ;; Hardware stack levels required when called:    5
  7826 ;; This function calls:
  7827 ;;		_TMR2_SetInterruptHandler
  7828 ;;		_TMR2_StartTimer
  7829 ;; This function is called by:
  7830 ;;		_SYSTEM_Initialize
  7831 ;; This function uses a non-reentrant model
  7832 ;;
  7833                           
  7834                           	psect	text37
  7835  002ECE                     __ptext37:
  7836                           	opt stack 0
  7837  002ECE                     _TMR2_Initialize:
  7838                           	opt stack 24
  7839                           
  7840                           ;tmr2.c: 67: T2CON = 0x7E;
  7841                           
  7842                           ; BSR set to: 0
  7843                           ;incstack = 0
  7844  002ECE  0E7E               	movlw	126
  7845  002ED0  6EBA               	movwf	4026,c	;volatile
  7846                           
  7847                           ;tmr2.c: 70: PR2 = 0x30;
  7848  002ED2  0E30               	movlw	48
  7849  002ED4  6EBB               	movwf	4027,c	;volatile
  7850                           
  7851                           ;tmr2.c: 73: TMR2 = 0x00;
  7852  002ED6  0E00               	movlw	0
  7853  002ED8  6EBC               	movwf	4028,c	;volatile
  7854                           
  7855                           ;tmr2.c: 76: PIR1bits.TMR2IF = 0;
  7856  002EDA  929E               	bcf	3998,1,c	;volatile
  7857                           
  7858                           ;tmr2.c: 79: PIE1bits.TMR2IE = 1;
  7859  002EDC  829D               	bsf	3997,1,c	;volatile
  7860                           
  7861                           ;tmr2.c: 82: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  7862  002EDE  0E48               	movlw	low _TMR2_DefaultInterruptHandler
  7863  002EE0  6E1B               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  7864  002EE2  0E30               	movlw	high _TMR2_DefaultInterruptHandler
  7865  002EE4  6E1C               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  7866  002EE6  EC15  F018         	call	_TMR2_SetInterruptHandler	;wreg free
  7867                           
  7868                           ;tmr2.c: 85: TMR2_StartTimer();
  7869  002EEA  EC1E  F018         	call	_TMR2_StartTimer	;wreg free
  7870  002EEE  0012               	return		;funcret
  7871  002EF0                     __end_of_TMR2_Initialize:
  7872                           	opt stack 0
  7873                           tosu	equ	0xFFF
  7874                           tosh	equ	0xFFE
  7875                           tosl	equ	0xFFD
  7876                           pclath	equ	0xFFA
  7877                           tblptru	equ	0xFF8
  7878                           tblptrh	equ	0xFF7
  7879                           tblptrl	equ	0xFF6
  7880                           tablat	equ	0xFF5
  7881                           prodh	equ	0xFF4
  7882                           prodl	equ	0xFF3
  7883                           intcon	equ	0xFF2
  7884                           postinc0	equ	0xFEE
  7885                           wreg	equ	0xFE8
  7886                           indf2	equ	0xFDF
  7887                           postinc2	equ	0xFDE
  7888                           postdec2	equ	0xFDD
  7889                           plusw2	equ	0xFDB
  7890                           fsr2h	equ	0xFDA
  7891                           fsr2l	equ	0xFD9
  7892                           status	equ	0xFD8
  7893                           
  7894 ;; *************** function _TMR2_StartTimer *****************
  7895 ;; Defined at:
  7896 ;;		line 88 in file "mcc_generated_files/tmr2.c"
  7897 ;; Parameters:    Size  Location     Type
  7898 ;;		None
  7899 ;; Auto vars:     Size  Location     Type
  7900 ;;		None
  7901 ;; Return value:  Size  Location     Type
  7902 ;;                  1    wreg      void 
  7903 ;; Registers used:
  7904 ;;		None
  7905 ;; Tracked objects:
  7906 ;;		On entry : 0/0
  7907 ;;		On exit  : 0/0
  7908 ;;		Unchanged: 0/0
  7909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7910 ;;      Params:         0       0       0       0       0       0       0
  7911 ;;      Locals:         0       0       0       0       0       0       0
  7912 ;;      Temps:          0       0       0       0       0       0       0
  7913 ;;      Totals:         0       0       0       0       0       0       0
  7914 ;;Total ram usage:        0 bytes
  7915 ;; Hardware stack levels used:    1
  7916 ;; Hardware stack levels required when called:    4
  7917 ;; This function calls:
  7918 ;;		Nothing
  7919 ;; This function is called by:
  7920 ;;		_TMR2_Initialize
  7921 ;; This function uses a non-reentrant model
  7922 ;;
  7923                           
  7924                           	psect	text38
  7925  00303C                     __ptext38:
  7926                           	opt stack 0
  7927  00303C                     _TMR2_StartTimer:
  7928                           	opt stack 24
  7929                           
  7930                           ;tmr2.c: 91: T2CONbits.TMR2ON = 1;
  7931                           
  7932                           ;incstack = 0
  7933  00303C  84BA               	bsf	4026,2,c	;volatile
  7934  00303E  0012               	return		;funcret
  7935  003040                     __end_of_TMR2_StartTimer:
  7936                           	opt stack 0
  7937                           tosu	equ	0xFFF
  7938                           tosh	equ	0xFFE
  7939                           tosl	equ	0xFFD
  7940                           pclath	equ	0xFFA
  7941                           tblptru	equ	0xFF8
  7942                           tblptrh	equ	0xFF7
  7943                           tblptrl	equ	0xFF6
  7944                           tablat	equ	0xFF5
  7945                           prodh	equ	0xFF4
  7946                           prodl	equ	0xFF3
  7947                           intcon	equ	0xFF2
  7948                           postinc0	equ	0xFEE
  7949                           wreg	equ	0xFE8
  7950                           indf2	equ	0xFDF
  7951                           postinc2	equ	0xFDE
  7952                           postdec2	equ	0xFDD
  7953                           plusw2	equ	0xFDB
  7954                           fsr2h	equ	0xFDA
  7955                           fsr2l	equ	0xFD9
  7956                           status	equ	0xFD8
  7957                           
  7958 ;; *************** function _TMR2_SetInterruptHandler *****************
  7959 ;; Defined at:
  7960 ;;		line 293 in file "mcc_generated_files/tmr2.c"
  7961 ;; Parameters:    Size  Location     Type
  7962 ;;  InterruptHan    2   26[COMRAM] PTR void 
  7963 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  7964 ;; Auto vars:     Size  Location     Type
  7965 ;;		None
  7966 ;; Return value:  Size  Location     Type
  7967 ;;                  1    wreg      void 
  7968 ;; Registers used:
  7969 ;;		wreg, status,2, status,0
  7970 ;; Tracked objects:
  7971 ;;		On entry : 0/0
  7972 ;;		On exit  : 0/0
  7973 ;;		Unchanged: 0/0
  7974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7975 ;;      Params:         2       0       0       0       0       0       0
  7976 ;;      Locals:         0       0       0       0       0       0       0
  7977 ;;      Temps:          0       0       0       0       0       0       0
  7978 ;;      Totals:         2       0       0       0       0       0       0
  7979 ;;Total ram usage:        2 bytes
  7980 ;; Hardware stack levels used:    1
  7981 ;; Hardware stack levels required when called:    4
  7982 ;; This function calls:
  7983 ;;		Nothing
  7984 ;; This function is called by:
  7985 ;;		_TMR2_Initialize
  7986 ;; This function uses a non-reentrant model
  7987 ;;
  7988                           
  7989                           	psect	text39
  7990  00302A                     __ptext39:
  7991                           	opt stack 0
  7992  00302A                     _TMR2_SetInterruptHandler:
  7993                           	opt stack 24
  7994                           
  7995                           ;tmr2.c: 294: TMR2_InterruptHandler = InterruptHandler;
  7996                           
  7997                           ;incstack = 0
  7998  00302A  C01B  F0FE         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  7999  00302E  C01C  F0FF         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  8000  003032  0012               	return		;funcret
  8001  003034                     __end_of_TMR2_SetInterruptHandler:
  8002                           	opt stack 0
  8003                           tosu	equ	0xFFF
  8004                           tosh	equ	0xFFE
  8005                           tosl	equ	0xFFD
  8006                           pclath	equ	0xFFA
  8007                           tblptru	equ	0xFF8
  8008                           tblptrh	equ	0xFF7
  8009                           tblptrl	equ	0xFF6
  8010                           tablat	equ	0xFF5
  8011                           prodh	equ	0xFF4
  8012                           prodl	equ	0xFF3
  8013                           intcon	equ	0xFF2
  8014                           postinc0	equ	0xFEE
  8015                           wreg	equ	0xFE8
  8016                           indf2	equ	0xFDF
  8017                           postinc2	equ	0xFDE
  8018                           postdec2	equ	0xFDD
  8019                           plusw2	equ	0xFDB
  8020                           fsr2h	equ	0xFDA
  8021                           fsr2l	equ	0xFD9
  8022                           status	equ	0xFD8
  8023                           
  8024 ;; *************** function _TMR0_Initialize *****************
  8025 ;; Defined at:
  8026 ;;		line 22 in file "mcc_generated_files/tmr0.c"
  8027 ;; Parameters:    Size  Location     Type
  8028 ;;		None
  8029 ;; Auto vars:     Size  Location     Type
  8030 ;;		None
  8031 ;; Return value:  Size  Location     Type
  8032 ;;                  1    wreg      void 
  8033 ;; Registers used:
  8034 ;;		wreg, status,2, cstack
  8035 ;; Tracked objects:
  8036 ;;		On entry : 0/0
  8037 ;;		On exit  : 0/0
  8038 ;;		Unchanged: 0/0
  8039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8040 ;;      Params:         0       0       0       0       0       0       0
  8041 ;;      Locals:         0       0       0       0       0       0       0
  8042 ;;      Temps:          0       0       0       0       0       0       0
  8043 ;;      Totals:         0       0       0       0       0       0       0
  8044 ;;Total ram usage:        0 bytes
  8045 ;; Hardware stack levels used:    1
  8046 ;; Hardware stack levels required when called:    5
  8047 ;; This function calls:
  8048 ;;		_TMR0_StartTimer
  8049 ;; This function is called by:
  8050 ;;		_SYSTEM_Initialize
  8051 ;; This function uses a non-reentrant model
  8052 ;;
  8053                           
  8054                           	psect	text40
  8055  002F0E                     __ptext40:
  8056                           	opt stack 0
  8057  002F0E                     _TMR0_Initialize:
  8058                           	opt stack 24
  8059                           
  8060                           ;tmr0.c: 26: T0CON = 0x94;
  8061                           
  8062                           ;incstack = 0
  8063  002F0E  0E94               	movlw	148
  8064  002F10  6ED5               	movwf	4053,c	;volatile
  8065                           
  8066                           ;tmr0.c: 29: TMR0H = 0xCF;
  8067  002F12  0ECF               	movlw	207
  8068  002F14  6ED7               	movwf	4055,c	;volatile
  8069                           
  8070                           ;tmr0.c: 32: TMR0L = 0x2C;
  8071  002F16  0E2C               	movlw	44
  8072  002F18  6ED6               	movwf	4054,c	;volatile
  8073                           
  8074                           ;tmr0.c: 35: timer0ReloadVal16bit = 53036;
  8075  002F1A  0ECF               	movlw	207
  8076  002F1C  6E43               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  8077  002F1E  0E2C               	movlw	44
  8078  002F20  6E42               	movwf	_timer0ReloadVal16bit,c	;volatile
  8079                           
  8080                           ;tmr0.c: 38: INTCONbits.TMR0IF = 0;
  8081  002F22  94F2               	bcf	intcon,2,c	;volatile
  8082                           
  8083                           ;tmr0.c: 41: INTCONbits.TMR0IE = 1;
  8084  002F24  8AF2               	bsf	intcon,5,c	;volatile
  8085                           
  8086                           ;tmr0.c: 44: TMR0_StartTimer();
  8087  002F26  EC20  F018         	call	_TMR0_StartTimer	;wreg free
  8088  002F2A  0012               	return		;funcret
  8089  002F2C                     __end_of_TMR0_Initialize:
  8090                           	opt stack 0
  8091                           tosu	equ	0xFFF
  8092                           tosh	equ	0xFFE
  8093                           tosl	equ	0xFFD
  8094                           pclath	equ	0xFFA
  8095                           tblptru	equ	0xFF8
  8096                           tblptrh	equ	0xFF7
  8097                           tblptrl	equ	0xFF6
  8098                           tablat	equ	0xFF5
  8099                           prodh	equ	0xFF4
  8100                           prodl	equ	0xFF3
  8101                           intcon	equ	0xFF2
  8102                           postinc0	equ	0xFEE
  8103                           wreg	equ	0xFE8
  8104                           indf2	equ	0xFDF
  8105                           postinc2	equ	0xFDE
  8106                           postdec2	equ	0xFDD
  8107                           plusw2	equ	0xFDB
  8108                           fsr2h	equ	0xFDA
  8109                           fsr2l	equ	0xFD9
  8110                           status	equ	0xFD8
  8111                           
  8112 ;; *************** function _TMR0_StartTimer *****************
  8113 ;; Defined at:
  8114 ;;		line 47 in file "mcc_generated_files/tmr0.c"
  8115 ;; Parameters:    Size  Location     Type
  8116 ;;		None
  8117 ;; Auto vars:     Size  Location     Type
  8118 ;;		None
  8119 ;; Return value:  Size  Location     Type
  8120 ;;                  1    wreg      void 
  8121 ;; Registers used:
  8122 ;;		None
  8123 ;; Tracked objects:
  8124 ;;		On entry : 0/0
  8125 ;;		On exit  : 0/0
  8126 ;;		Unchanged: 0/0
  8127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8128 ;;      Params:         0       0       0       0       0       0       0
  8129 ;;      Locals:         0       0       0       0       0       0       0
  8130 ;;      Temps:          0       0       0       0       0       0       0
  8131 ;;      Totals:         0       0       0       0       0       0       0
  8132 ;;Total ram usage:        0 bytes
  8133 ;; Hardware stack levels used:    1
  8134 ;; Hardware stack levels required when called:    4
  8135 ;; This function calls:
  8136 ;;		Nothing
  8137 ;; This function is called by:
  8138 ;;		_TMR0_Initialize
  8139 ;; This function uses a non-reentrant model
  8140 ;;
  8141                           
  8142                           	psect	text41
  8143  003040                     __ptext41:
  8144                           	opt stack 0
  8145  003040                     _TMR0_StartTimer:
  8146                           	opt stack 24
  8147                           
  8148                           ;tmr0.c: 49: T0CONbits.TMR0ON = 1;
  8149                           
  8150                           ;incstack = 0
  8151  003040  8ED5               	bsf	4053,7,c	;volatile
  8152  003042  0012               	return		;funcret
  8153  003044                     __end_of_TMR0_StartTimer:
  8154                           	opt stack 0
  8155                           tosu	equ	0xFFF
  8156                           tosh	equ	0xFFE
  8157                           tosl	equ	0xFFD
  8158                           pclath	equ	0xFFA
  8159                           tblptru	equ	0xFF8
  8160                           tblptrh	equ	0xFF7
  8161                           tblptrl	equ	0xFF6
  8162                           tablat	equ	0xFF5
  8163                           prodh	equ	0xFF4
  8164                           prodl	equ	0xFF3
  8165                           intcon	equ	0xFF2
  8166                           postinc0	equ	0xFEE
  8167                           wreg	equ	0xFE8
  8168                           indf2	equ	0xFDF
  8169                           postinc2	equ	0xFDE
  8170                           postdec2	equ	0xFDD
  8171                           plusw2	equ	0xFDB
  8172                           fsr2h	equ	0xFDA
  8173                           fsr2l	equ	0xFD9
  8174                           status	equ	0xFD8
  8175                           
  8176 ;; *************** function _PIN_MANAGER_Initialize *****************
  8177 ;; Defined at:
  8178 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  8179 ;; Parameters:    Size  Location     Type
  8180 ;;		None
  8181 ;; Auto vars:     Size  Location     Type
  8182 ;;		None
  8183 ;; Return value:  Size  Location     Type
  8184 ;;                  1    wreg      void 
  8185 ;; Registers used:
  8186 ;;		wreg, status,2
  8187 ;; Tracked objects:
  8188 ;;		On entry : 0/0
  8189 ;;		On exit  : 0/0
  8190 ;;		Unchanged: 0/0
  8191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8192 ;;      Params:         0       0       0       0       0       0       0
  8193 ;;      Locals:         0       0       0       0       0       0       0
  8194 ;;      Temps:          0       0       0       0       0       0       0
  8195 ;;      Totals:         0       0       0       0       0       0       0
  8196 ;;Total ram usage:        0 bytes
  8197 ;; Hardware stack levels used:    1
  8198 ;; Hardware stack levels required when called:    4
  8199 ;; This function calls:
  8200 ;;		Nothing
  8201 ;; This function is called by:
  8202 ;;		_SYSTEM_Initialize
  8203 ;; This function uses a non-reentrant model
  8204 ;;
  8205                           
  8206                           	psect	text42
  8207  002ABE                     __ptext42:
  8208                           	opt stack 0
  8209  002ABE                     _PIN_MANAGER_Initialize:
  8210                           	opt stack 25
  8211                           
  8212                           ;pin_manager.c: 52: LATA = 0x00;
  8213                           
  8214                           ;incstack = 0
  8215  002ABE  0E00               	movlw	0
  8216  002AC0  6E89               	movwf	3977,c	;volatile
  8217                           
  8218                           ;pin_manager.c: 53: TRISA = 0xF7;
  8219  002AC2  0EF7               	movlw	247
  8220  002AC4  6E92               	movwf	3986,c	;volatile
  8221                           
  8222                           ;pin_manager.c: 54: ANSELA = 0x20;
  8223  002AC6  0E20               	movlw	32
  8224  002AC8  010F               	movlb	15	; () banked
  8225  002ACA  6F38               	movwf	56,b	;volatile
  8226                           
  8227                           ;pin_manager.c: 56: LATB = 0x00;
  8228  002ACC  0E00               	movlw	0
  8229  002ACE  6E8A               	movwf	3978,c	;volatile
  8230                           
  8231                           ;pin_manager.c: 57: TRISB = 0xD7;
  8232  002AD0  0ED7               	movlw	215
  8233  002AD2  6E93               	movwf	3987,c	;volatile
  8234                           
  8235                           ;pin_manager.c: 58: ANSELB = 0x00;
  8236  002AD4  0E00               	movlw	0
  8237  002AD6  010F               	movlb	15	; () banked
  8238  002AD8  6F39               	movwf	57,b	;volatile
  8239                           
  8240                           ;pin_manager.c: 59: WPUB = 0x00;
  8241  002ADA  0E00               	movlw	0
  8242  002ADC  6E61               	movwf	3937,c	;volatile
  8243                           
  8244                           ;pin_manager.c: 61: LATC = 0x18;
  8245  002ADE  0E18               	movlw	24
  8246  002AE0  6E8B               	movwf	3979,c	;volatile
  8247                           
  8248                           ;pin_manager.c: 62: TRISC = 0xDF;
  8249  002AE2  0EDF               	movlw	223
  8250  002AE4  6E94               	movwf	3988,c	;volatile
  8251                           
  8252                           ;pin_manager.c: 63: ANSELC = 0x04;
  8253  002AE6  0E04               	movlw	4
  8254  002AE8  010F               	movlb	15	; () banked
  8255  002AEA  6F3A               	movwf	58,b	;volatile
  8256                           
  8257                           ;pin_manager.c: 65: LATD = 0x00;
  8258  002AEC  0E00               	movlw	0
  8259  002AEE  6E8C               	movwf	3980,c	;volatile
  8260                           
  8261                           ;pin_manager.c: 66: TRISD = 0xFD;
  8262  002AF0  0EFD               	movlw	253
  8263  002AF2  6E95               	movwf	3989,c	;volatile
  8264                           
  8265                           ;pin_manager.c: 67: ANSELD = 0xDD;
  8266  002AF4  0EDD               	movlw	221
  8267  002AF6  010F               	movlb	15	; () banked
  8268  002AF8  6F3B               	movwf	59,b	;volatile
  8269                           
  8270                           ;pin_manager.c: 69: LATE = 0x00;
  8271  002AFA  0E00               	movlw	0
  8272  002AFC  6E8D               	movwf	3981,c	;volatile
  8273                           
  8274                           ;pin_manager.c: 70: TRISE = 0x00;
  8275  002AFE  0E00               	movlw	0
  8276  002B00  6E96               	movwf	3990,c	;volatile
  8277                           
  8278                           ;pin_manager.c: 71: ANSELE = 0x00;
  8279  002B02  0E00               	movlw	0
  8280  002B04  010F               	movlb	15	; () banked
  8281  002B06  6F3C               	movwf	60,b	;volatile
  8282                           
  8283                           ; BSR set to: 15
  8284                           ;pin_manager.c: 72: TRISCbits.TRISC5=0;
  8285  002B08  9A94               	bcf	3988,5,c	;volatile
  8286                           
  8287                           ; BSR set to: 15
  8288                           ;pin_manager.c: 73: INTCON2bits.nRBPU = 0x01;
  8289  002B0A  8EF1               	bsf	intcon2,7,c	;volatile
  8290                           
  8291                           ; BSR set to: 15
  8292  002B0C  0012               	return		;funcret
  8293  002B0E                     __end_of_PIN_MANAGER_Initialize:
  8294                           	opt stack 0
  8295                           tosu	equ	0xFFF
  8296                           tosh	equ	0xFFE
  8297                           tosl	equ	0xFFD
  8298                           pclath	equ	0xFFA
  8299                           tblptru	equ	0xFF8
  8300                           tblptrh	equ	0xFF7
  8301                           tblptrl	equ	0xFF6
  8302                           tablat	equ	0xFF5
  8303                           prodh	equ	0xFF4
  8304                           prodl	equ	0xFF3
  8305                           intcon	equ	0xFF2
  8306                           intcon2	equ	0xFF1
  8307                           postinc0	equ	0xFEE
  8308                           wreg	equ	0xFE8
  8309                           indf2	equ	0xFDF
  8310                           postinc2	equ	0xFDE
  8311                           postdec2	equ	0xFDD
  8312                           plusw2	equ	0xFDB
  8313                           fsr2h	equ	0xFDA
  8314                           fsr2l	equ	0xFD9
  8315                           status	equ	0xFD8
  8316                           
  8317 ;; *************** function _OSCILLATOR_Initialize *****************
  8318 ;; Defined at:
  8319 ;;		line 125 in file "mcc_generated_files/mcc.c"
  8320 ;; Parameters:    Size  Location     Type
  8321 ;;		None
  8322 ;; Auto vars:     Size  Location     Type
  8323 ;;		None
  8324 ;; Return value:  Size  Location     Type
  8325 ;;                  1    wreg      void 
  8326 ;; Registers used:
  8327 ;;		wreg, status,2
  8328 ;; Tracked objects:
  8329 ;;		On entry : 0/0
  8330 ;;		On exit  : 0/0
  8331 ;;		Unchanged: 0/0
  8332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8333 ;;      Params:         0       0       0       0       0       0       0
  8334 ;;      Locals:         0       0       0       0       0       0       0
  8335 ;;      Temps:          0       0       0       0       0       0       0
  8336 ;;      Totals:         0       0       0       0       0       0       0
  8337 ;;Total ram usage:        0 bytes
  8338 ;; Hardware stack levels used:    1
  8339 ;; Hardware stack levels required when called:    4
  8340 ;; This function calls:
  8341 ;;		Nothing
  8342 ;; This function is called by:
  8343 ;;		_SYSTEM_Initialize
  8344 ;; This function uses a non-reentrant model
  8345 ;;
  8346                           
  8347                           	psect	text43
  8348  00301C                     __ptext43:
  8349                           	opt stack 0
  8350  00301C                     _OSCILLATOR_Initialize:
  8351                           	opt stack 25
  8352                           
  8353                           ;mcc.c: 128: OSCCON = 0x72;
  8354                           
  8355                           ; BSR set to: 15
  8356                           ;incstack = 0
  8357  00301C  0E72               	movlw	114
  8358  00301E  6ED3               	movwf	4051,c	;volatile
  8359                           
  8360                           ;mcc.c: 130: OSCCON2 = 0x04;
  8361  003020  0E04               	movlw	4
  8362  003022  6ED2               	movwf	4050,c	;volatile
  8363                           
  8364                           ;mcc.c: 132: OSCTUNE = 0x00;
  8365  003024  0E00               	movlw	0
  8366  003026  6E9B               	movwf	3995,c	;volatile
  8367  003028  0012               	return		;funcret
  8368  00302A                     __end_of_OSCILLATOR_Initialize:
  8369                           	opt stack 0
  8370                           tosu	equ	0xFFF
  8371                           tosh	equ	0xFFE
  8372                           tosl	equ	0xFFD
  8373                           pclath	equ	0xFFA
  8374                           tblptru	equ	0xFF8
  8375                           tblptrh	equ	0xFF7
  8376                           tblptrl	equ	0xFF6
  8377                           tablat	equ	0xFF5
  8378                           prodh	equ	0xFF4
  8379                           prodl	equ	0xFF3
  8380                           intcon	equ	0xFF2
  8381                           intcon2	equ	0xFF1
  8382                           postinc0	equ	0xFEE
  8383                           wreg	equ	0xFE8
  8384                           indf2	equ	0xFDF
  8385                           postinc2	equ	0xFDE
  8386                           postdec2	equ	0xFDD
  8387                           plusw2	equ	0xFDB
  8388                           fsr2h	equ	0xFDA
  8389                           fsr2l	equ	0xFD9
  8390                           status	equ	0xFD8
  8391                           
  8392 ;; *************** function _INTERRUPT_Initialize *****************
  8393 ;; Defined at:
  8394 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8395 ;; Parameters:    Size  Location     Type
  8396 ;;		None
  8397 ;; Auto vars:     Size  Location     Type
  8398 ;;		None
  8399 ;; Return value:  Size  Location     Type
  8400 ;;                  1    wreg      void 
  8401 ;; Registers used:
  8402 ;;		None
  8403 ;; Tracked objects:
  8404 ;;		On entry : 0/0
  8405 ;;		On exit  : 0/0
  8406 ;;		Unchanged: 0/0
  8407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8408 ;;      Params:         0       0       0       0       0       0       0
  8409 ;;      Locals:         0       0       0       0       0       0       0
  8410 ;;      Temps:          0       0       0       0       0       0       0
  8411 ;;      Totals:         0       0       0       0       0       0       0
  8412 ;;Total ram usage:        0 bytes
  8413 ;; Hardware stack levels used:    1
  8414 ;; Hardware stack levels required when called:    4
  8415 ;; This function calls:
  8416 ;;		Nothing
  8417 ;; This function is called by:
  8418 ;;		_SYSTEM_Initialize
  8419 ;; This function uses a non-reentrant model
  8420 ;;
  8421                           
  8422                           	psect	text44
  8423  002FEE                     __ptext44:
  8424                           	opt stack 0
  8425  002FEE                     _INTERRUPT_Initialize:
  8426                           	opt stack 25
  8427                           
  8428                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  8429                           
  8430                           ;incstack = 0
  8431  002FEE  9ED0               	bcf	4048,7,c	;volatile
  8432                           
  8433                           ;interrupt_manager.c: 60: IPR1bits.RC1IP = 0;
  8434  002FF0  9A9F               	bcf	3999,5,c	;volatile
  8435                           
  8436                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
  8437  002FF2  989F               	bcf	3999,4,c	;volatile
  8438                           
  8439                           ;interrupt_manager.c: 64: INTCON2bits.TMR0IP = 0;
  8440  002FF4  94F1               	bcf	intcon2,2,c	;volatile
  8441                           
  8442                           ;interrupt_manager.c: 66: IPR1bits.ADIP = 0;
  8443  002FF6  9C9F               	bcf	3999,6,c	;volatile
  8444                           
  8445                           ;interrupt_manager.c: 68: IPR1bits.SSP1IP = 0;
  8446  002FF8  969F               	bcf	3999,3,c	;volatile
  8447                           
  8448                           ;interrupt_manager.c: 70: IPR2bits.BCL1IP = 0;
  8449  002FFA  96A2               	bcf	4002,3,c	;volatile
  8450                           
  8451                           ;interrupt_manager.c: 71: IPR1bits.TMR2IP=0;
  8452  002FFC  929F               	bcf	3999,1,c	;volatile
  8453  002FFE  0012               	return		;funcret
  8454  003000                     __end_of_INTERRUPT_Initialize:
  8455                           	opt stack 0
  8456                           tosu	equ	0xFFF
  8457                           tosh	equ	0xFFE
  8458                           tosl	equ	0xFFD
  8459                           pclath	equ	0xFFA
  8460                           tblptru	equ	0xFF8
  8461                           tblptrh	equ	0xFF7
  8462                           tblptrl	equ	0xFF6
  8463                           tablat	equ	0xFF5
  8464                           prodh	equ	0xFF4
  8465                           prodl	equ	0xFF3
  8466                           intcon	equ	0xFF2
  8467                           intcon2	equ	0xFF1
  8468                           postinc0	equ	0xFEE
  8469                           wreg	equ	0xFE8
  8470                           indf2	equ	0xFDF
  8471                           postinc2	equ	0xFDE
  8472                           postdec2	equ	0xFDD
  8473                           plusw2	equ	0xFDB
  8474                           fsr2h	equ	0xFDA
  8475                           fsr2l	equ	0xFD9
  8476                           status	equ	0xFD8
  8477                           
  8478 ;; *************** function _I2C1_Initialize *****************
  8479 ;; Defined at:
  8480 ;;		line 151 in file "mcc_generated_files/i2c1.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;		None
  8483 ;; Auto vars:     Size  Location     Type
  8484 ;;		None
  8485 ;; Return value:  Size  Location     Type
  8486 ;;                  1    wreg      void 
  8487 ;; Registers used:
  8488 ;;		wreg, status,2, status,0
  8489 ;; Tracked objects:
  8490 ;;		On entry : 0/0
  8491 ;;		On exit  : 0/0
  8492 ;;		Unchanged: 0/0
  8493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8494 ;;      Params:         0       0       0       0       0       0       0
  8495 ;;      Locals:         0       0       0       0       0       0       0
  8496 ;;      Temps:          0       0       0       0       0       0       0
  8497 ;;      Totals:         0       0       0       0       0       0       0
  8498 ;;Total ram usage:        0 bytes
  8499 ;; Hardware stack levels used:    1
  8500 ;; Hardware stack levels required when called:    4
  8501 ;; This function calls:
  8502 ;;		Nothing
  8503 ;; This function is called by:
  8504 ;;		_SYSTEM_Initialize
  8505 ;; This function uses a non-reentrant model
  8506 ;;
  8507                           
  8508                           	psect	text45
  8509  002C6E                     __ptext45:
  8510                           	opt stack 0
  8511  002C6E                     _I2C1_Initialize:
  8512                           	opt stack 25
  8513                           
  8514                           ;i2c1.c: 153: i2c1_object.pTrHead = i2c1_tr_queue;
  8515                           
  8516                           ;incstack = 0
  8517  002C6E  0EE9               	movlw	low _i2c1_tr_queue
  8518  002C70  0100               	movlb	0	; () banked
  8519  002C72  6FBA               	movwf	(_i2c1_object+2)& (0+255),b
  8520  002C74  0E00               	movlw	high _i2c1_tr_queue
  8521  002C76  0100               	movlb	0	; () banked
  8522  002C78  6FBB               	movwf	(_i2c1_object+3)& (0+255),b
  8523                           
  8524                           ;i2c1.c: 154: i2c1_object.pTrTail = i2c1_tr_queue;
  8525  002C7A  0EE9               	movlw	low _i2c1_tr_queue
  8526  002C7C  0100               	movlb	0	; () banked
  8527  002C7E  6FB8               	movwf	_i2c1_object& (0+255),b
  8528  002C80  0E00               	movlw	high _i2c1_tr_queue
  8529  002C82  0100               	movlb	0	; () banked
  8530  002C84  6FB9               	movwf	(_i2c1_object+1)& (0+255),b
  8531                           
  8532                           ; BSR set to: 0
  8533                           ;i2c1.c: 155: i2c1_object.trStatus.s.empty = 1;
  8534  002C86  0100               	movlb	0	; () banked
  8535  002C88  83BC               	bsf	(_i2c1_object+4)& (0+255),1,b
  8536                           
  8537                           ; BSR set to: 0
  8538                           ;i2c1.c: 156: i2c1_object.trStatus.s.full = 0;
  8539  002C8A  0100               	movlb	0	; () banked
  8540  002C8C  91BC               	bcf	(_i2c1_object+4)& (0+255),0,b
  8541                           
  8542                           ; BSR set to: 0
  8543                           ;i2c1.c: 158: i2c1_object.i2cErrors = 0;
  8544  002C8E  0E00               	movlw	0
  8545  002C90  0100               	movlb	0	; () banked
  8546  002C92  6FBE               	movwf	(_i2c1_object+6)& (0+255),b
  8547                           
  8548                           ; BSR set to: 0
  8549                           ;i2c1.c: 161: SSP1STAT = 0x80;
  8550  002C94  0E80               	movlw	128
  8551  002C96  6EC7               	movwf	4039,c	;volatile
  8552                           
  8553                           ; BSR set to: 0
  8554                           ;i2c1.c: 163: SSP1CON1 = 0x28;
  8555  002C98  0E28               	movlw	40
  8556  002C9A  6EC6               	movwf	4038,c	;volatile
  8557                           
  8558                           ; BSR set to: 0
  8559                           ;i2c1.c: 165: SSP1CON3 = 0x00;
  8560  002C9C  0E00               	movlw	0
  8561  002C9E  6ECB               	movwf	4043,c	;volatile
  8562                           
  8563                           ; BSR set to: 0
  8564                           ;i2c1.c: 167: SSP1ADD = 0x09;
  8565  002CA0  0E09               	movlw	9
  8566  002CA2  6EC8               	movwf	4040,c	;volatile
  8567                           
  8568                           ; BSR set to: 0
  8569                           ;i2c1.c: 171: PIR1bits.SSP1IF = 0;
  8570  002CA4  969E               	bcf	3998,3,c	;volatile
  8571                           
  8572                           ; BSR set to: 0
  8573                           ;i2c1.c: 173: PIE1bits.SSP1IE = 1;
  8574  002CA6  869D               	bsf	3997,3,c	;volatile
  8575                           
  8576                           ; BSR set to: 0
  8577  002CA8  0012               	return		;funcret
  8578  002CAA                     __end_of_I2C1_Initialize:
  8579                           	opt stack 0
  8580                           tosu	equ	0xFFF
  8581                           tosh	equ	0xFFE
  8582                           tosl	equ	0xFFD
  8583                           pclath	equ	0xFFA
  8584                           tblptru	equ	0xFF8
  8585                           tblptrh	equ	0xFF7
  8586                           tblptrl	equ	0xFF6
  8587                           tablat	equ	0xFF5
  8588                           prodh	equ	0xFF4
  8589                           prodl	equ	0xFF3
  8590                           intcon	equ	0xFF2
  8591                           intcon2	equ	0xFF1
  8592                           postinc0	equ	0xFEE
  8593                           wreg	equ	0xFE8
  8594                           indf2	equ	0xFDF
  8595                           postinc2	equ	0xFDE
  8596                           postdec2	equ	0xFDD
  8597                           plusw2	equ	0xFDB
  8598                           fsr2h	equ	0xFDA
  8599                           fsr2l	equ	0xFD9
  8600                           status	equ	0xFD8
  8601                           
  8602 ;; *************** function _EUSART1_Initialize *****************
  8603 ;; Defined at:
  8604 ;;		line 21 in file "UART.c"
  8605 ;; Parameters:    Size  Location     Type
  8606 ;;		None
  8607 ;; Auto vars:     Size  Location     Type
  8608 ;;		None
  8609 ;; Return value:  Size  Location     Type
  8610 ;;                  1    wreg      void 
  8611 ;; Registers used:
  8612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8613 ;; Tracked objects:
  8614 ;;		On entry : 0/0
  8615 ;;		On exit  : 0/0
  8616 ;;		Unchanged: 0/0
  8617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8618 ;;      Params:         0       0       0       0       0       0       0
  8619 ;;      Locals:         0       0       0       0       0       0       0
  8620 ;;      Temps:          0       0       0       0       0       0       0
  8621 ;;      Totals:         0       0       0       0       0       0       0
  8622 ;;Total ram usage:        0 bytes
  8623 ;; Hardware stack levels used:    1
  8624 ;; Hardware stack levels required when called:    6
  8625 ;; This function calls:
  8626 ;;		_UART_buff_init
  8627 ;; This function is called by:
  8628 ;;		_SYSTEM_Initialize
  8629 ;; This function uses a non-reentrant model
  8630 ;;
  8631                           
  8632                           	psect	text46
  8633  002CAA                     __ptext46:
  8634                           	opt stack 0
  8635  002CAA                     _EUSART1_Initialize:
  8636                           	opt stack 23
  8637                           
  8638                           ;UART.c: 23: PIE1bits.RC1IE = 0;
  8639                           
  8640                           ; BSR set to: 0
  8641                           ;incstack = 0
  8642  002CAA  9A9D               	bcf	3997,5,c	;volatile
  8643                           
  8644                           ;UART.c: 24: PIE1bits.TX1IE = 0;
  8645  002CAC  989D               	bcf	3997,4,c	;volatile
  8646                           
  8647                           ;UART.c: 29: BAUD1CON = 0x48;
  8648  002CAE  0E48               	movlw	72
  8649  002CB0  6EB8               	movwf	4024,c	;volatile
  8650                           
  8651                           ;UART.c: 32: RC1STA = 0x98;
  8652  002CB2  0E98               	movlw	152
  8653  002CB4  6EAB               	movwf	4011,c	;volatile
  8654                           
  8655                           ;UART.c: 35: TX1STA = 0x26;
  8656  002CB6  0E26               	movlw	38
  8657  002CB8  6EAC               	movwf	4012,c	;volatile
  8658                           
  8659                           ;UART.c: 38: SPBRG1 = (((16000000/38400)/4)-1);
  8660  002CBA  0E67               	movlw	103
  8661  002CBC  6EAF               	movwf	4015,c	;volatile
  8662                           
  8663                           ;UART.c: 41: SPBRGH1 = 0x00;
  8664  002CBE  0E00               	movlw	0
  8665  002CC0  6EB0               	movwf	4016,c	;volatile
  8666                           
  8667                           ;UART.c: 44: TXREG1 = 0x00;
  8668  002CC2  0E00               	movlw	0
  8669  002CC4  6EAD               	movwf	4013,c	;volatile
  8670                           
  8671                           ;UART.c: 47: RCREG1 = 0x00;
  8672  002CC6  0E00               	movlw	0
  8673  002CC8  6EAE               	movwf	4014,c	;volatile
  8674                           
  8675                           ;UART.c: 49: UART_buff_init(&input_buffer);
  8676  002CCA  0E00               	movlw	low _input_buffer
  8677  002CCC  6E23               	movwf	UART_buff_init@_this,c
  8678  002CCE  0E04               	movlw	high _input_buffer
  8679  002CD0  6E24               	movwf	UART_buff_init@_this+1,c
  8680  002CD2  EC96  F017         	call	_UART_buff_init	;wreg free
  8681                           
  8682                           ;UART.c: 50: UART_buff_init(&output_buffer);
  8683  002CD6  0E00               	movlw	low _output_buffer
  8684  002CD8  6E23               	movwf	UART_buff_init@_this,c
  8685  002CDA  0E05               	movlw	high _output_buffer
  8686  002CDC  6E24               	movwf	UART_buff_init@_this+1,c
  8687  002CDE  EC96  F017         	call	_UART_buff_init	;wreg free
  8688                           
  8689                           ;UART.c: 52: PIE1bits.RC1IE = 1;
  8690  002CE2  8A9D               	bsf	3997,5,c	;volatile
  8691  002CE4  0012               	return		;funcret
  8692  002CE6                     __end_of_EUSART1_Initialize:
  8693                           	opt stack 0
  8694                           tosu	equ	0xFFF
  8695                           tosh	equ	0xFFE
  8696                           tosl	equ	0xFFD
  8697                           pclath	equ	0xFFA
  8698                           tblptru	equ	0xFF8
  8699                           tblptrh	equ	0xFF7
  8700                           tblptrl	equ	0xFF6
  8701                           tablat	equ	0xFF5
  8702                           prodh	equ	0xFF4
  8703                           prodl	equ	0xFF3
  8704                           intcon	equ	0xFF2
  8705                           intcon2	equ	0xFF1
  8706                           postinc0	equ	0xFEE
  8707                           wreg	equ	0xFE8
  8708                           indf2	equ	0xFDF
  8709                           postinc2	equ	0xFDE
  8710                           postdec2	equ	0xFDD
  8711                           plusw2	equ	0xFDB
  8712                           fsr2h	equ	0xFDA
  8713                           fsr2l	equ	0xFD9
  8714                           status	equ	0xFD8
  8715                           
  8716 ;; *************** function _UART_buff_init *****************
  8717 ;; Defined at:
  8718 ;;		line 56 in file "UART.c"
  8719 ;; Parameters:    Size  Location     Type
  8720 ;;  _this           2   34[COMRAM] PTR struct UART_ring_buf
  8721 ;;		 -> output_buffer(206), input_buffer(206), 
  8722 ;; Auto vars:     Size  Location     Type
  8723 ;;		None
  8724 ;; Return value:  Size  Location     Type
  8725 ;;                  1    wreg      void 
  8726 ;; Registers used:
  8727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8728 ;; Tracked objects:
  8729 ;;		On entry : 0/0
  8730 ;;		On exit  : 0/0
  8731 ;;		Unchanged: 0/0
  8732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8733 ;;      Params:         2       0       0       0       0       0       0
  8734 ;;      Locals:         0       0       0       0       0       0       0
  8735 ;;      Temps:          0       0       0       0       0       0       0
  8736 ;;      Totals:         2       0       0       0       0       0       0
  8737 ;;Total ram usage:        2 bytes
  8738 ;; Hardware stack levels used:    1
  8739 ;; Hardware stack levels required when called:    5
  8740 ;; This function calls:
  8741 ;;		_memset
  8742 ;; This function is called by:
  8743 ;;		_EUSART1_Initialize
  8744 ;; This function uses a non-reentrant model
  8745 ;;
  8746                           
  8747                           	psect	text47
  8748  002F2C                     __ptext47:
  8749                           	opt stack 0
  8750  002F2C                     _UART_buff_init:
  8751                           	opt stack 23
  8752                           
  8753                           ;UART.c: 65: memset(_this, 0, sizeof (*_this));
  8754                           
  8755                           ;incstack = 0
  8756  002F2C  C023  F01B         	movff	UART_buff_init@_this,memset@p1
  8757  002F30  C024  F01C         	movff	UART_buff_init@_this+1,memset@p1+1
  8758  002F34  0E00               	movlw	0
  8759  002F36  6E1E               	movwf	memset@c+1,c
  8760  002F38  0E00               	movlw	0
  8761  002F3A  6E1D               	movwf	memset@c,c
  8762  002F3C  0E00               	movlw	0
  8763  002F3E  6E20               	movwf	memset@n+1,c
  8764  002F40  0ECE               	movlw	206
  8765  002F42  6E1F               	movwf	memset@n,c
  8766  002F44  ECDA  F016         	call	_memset	;wreg free
  8767  002F48  0012               	return		;funcret
  8768  002F4A                     __end_of_UART_buff_init:
  8769                           	opt stack 0
  8770                           tosu	equ	0xFFF
  8771                           tosh	equ	0xFFE
  8772                           tosl	equ	0xFFD
  8773                           pclath	equ	0xFFA
  8774                           tblptru	equ	0xFF8
  8775                           tblptrh	equ	0xFF7
  8776                           tblptrl	equ	0xFF6
  8777                           tablat	equ	0xFF5
  8778                           prodh	equ	0xFF4
  8779                           prodl	equ	0xFF3
  8780                           intcon	equ	0xFF2
  8781                           intcon2	equ	0xFF1
  8782                           postinc0	equ	0xFEE
  8783                           wreg	equ	0xFE8
  8784                           indf2	equ	0xFDF
  8785                           postinc2	equ	0xFDE
  8786                           postdec2	equ	0xFDD
  8787                           plusw2	equ	0xFDB
  8788                           fsr2h	equ	0xFDA
  8789                           fsr2l	equ	0xFD9
  8790                           status	equ	0xFD8
  8791                           
  8792 ;; *************** function _memset *****************
  8793 ;; Defined at:
  8794 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\memset.c"
  8795 ;; Parameters:    Size  Location     Type
  8796 ;;  p1              2   26[COMRAM] PTR void 
  8797 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  8798 ;;  c               2   28[COMRAM] int 
  8799 ;;  n               2   30[COMRAM] unsigned int 
  8800 ;; Auto vars:     Size  Location     Type
  8801 ;;  p               2   32[COMRAM] PTR unsigned char 
  8802 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  8803 ;; Return value:  Size  Location     Type
  8804 ;;                  2   26[COMRAM] PTR void 
  8805 ;; Registers used:
  8806 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8807 ;; Tracked objects:
  8808 ;;		On entry : 0/0
  8809 ;;		On exit  : 0/0
  8810 ;;		Unchanged: 0/0
  8811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8812 ;;      Params:         6       0       0       0       0       0       0
  8813 ;;      Locals:         2       0       0       0       0       0       0
  8814 ;;      Temps:          0       0       0       0       0       0       0
  8815 ;;      Totals:         8       0       0       0       0       0       0
  8816 ;;Total ram usage:        8 bytes
  8817 ;; Hardware stack levels used:    1
  8818 ;; Hardware stack levels required when called:    4
  8819 ;; This function calls:
  8820 ;;		Nothing
  8821 ;; This function is called by:
  8822 ;;		_FastTransfer_buffer_flush
  8823 ;;		_UART_buff_init
  8824 ;;		_UART_buff_flush
  8825 ;; This function uses a non-reentrant model
  8826 ;;
  8827                           
  8828                           	psect	text48
  8829  002DB4                     __ptext48:
  8830                           	opt stack 0
  8831  002DB4                     _memset:
  8832                           	opt stack 22
  8833                           
  8834                           ;incstack = 0
  8835  002DB4  C01B  F021         	movff	memset@p1,memset@p
  8836  002DB8  C01C  F022         	movff	memset@p1+1,memset@p+1
  8837  002DBC  D008               	goto	l5509
  8838  002DBE                     l5505:
  8839  002DBE  C021  FFD9         	movff	memset@p,fsr2l
  8840  002DC2  C022  FFDA         	movff	memset@p+1,fsr2h
  8841  002DC6  C01D  FFDF         	movff	memset@c,indf2
  8842  002DCA  4A21               	infsnz	memset@p,f,c
  8843  002DCC  2A22               	incf	memset@p+1,f,c
  8844  002DCE                     l5509:
  8845  002DCE  061F               	decf	memset@n,f,c
  8846  002DD0  A0D8               	btfss	status,0,c
  8847  002DD2  0620               	decf	memset@n+1,f,c
  8848  002DD4  281F               	incf	memset@n,w,c
  8849  002DD6  E1F3               	bnz	l5505
  8850  002DD8  2820               	incf	memset@n+1,w,c
  8851  002DDA  B4D8               	btfsc	status,2,c
  8852  002DDC  0012               	return	
  8853  002DDE  D7EF               	goto	l5505
  8854  002DE0                     __end_of_memset:
  8855                           	opt stack 0
  8856                           tosu	equ	0xFFF
  8857                           tosh	equ	0xFFE
  8858                           tosl	equ	0xFFD
  8859                           pclath	equ	0xFFA
  8860                           tblptru	equ	0xFF8
  8861                           tblptrh	equ	0xFF7
  8862                           tblptrl	equ	0xFF6
  8863                           tablat	equ	0xFF5
  8864                           prodh	equ	0xFF4
  8865                           prodl	equ	0xFF3
  8866                           intcon	equ	0xFF2
  8867                           intcon2	equ	0xFF1
  8868                           postinc0	equ	0xFEE
  8869                           wreg	equ	0xFE8
  8870                           indf2	equ	0xFDF
  8871                           postinc2	equ	0xFDE
  8872                           postdec2	equ	0xFDD
  8873                           plusw2	equ	0xFDB
  8874                           fsr2h	equ	0xFDA
  8875                           fsr2l	equ	0xFD9
  8876                           status	equ	0xFD8
  8877                           
  8878 ;; *************** function _ADC_Initialize *****************
  8879 ;; Defined at:
  8880 ;;		line 59 in file "mcc_generated_files/adc.c"
  8881 ;; Parameters:    Size  Location     Type
  8882 ;;		None
  8883 ;; Auto vars:     Size  Location     Type
  8884 ;;		None
  8885 ;; Return value:  Size  Location     Type
  8886 ;;                  1    wreg      void 
  8887 ;; Registers used:
  8888 ;;		wreg, status,2
  8889 ;; Tracked objects:
  8890 ;;		On entry : 0/0
  8891 ;;		On exit  : 0/0
  8892 ;;		Unchanged: 0/0
  8893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8894 ;;      Params:         0       0       0       0       0       0       0
  8895 ;;      Locals:         0       0       0       0       0       0       0
  8896 ;;      Temps:          0       0       0       0       0       0       0
  8897 ;;      Totals:         0       0       0       0       0       0       0
  8898 ;;Total ram usage:        0 bytes
  8899 ;; Hardware stack levels used:    1
  8900 ;; Hardware stack levels required when called:    4
  8901 ;; This function calls:
  8902 ;;		Nothing
  8903 ;; This function is called by:
  8904 ;;		_SYSTEM_Initialize
  8905 ;; This function uses a non-reentrant model
  8906 ;;
  8907                           
  8908                           	psect	text49
  8909  002F82                     __ptext49:
  8910                           	opt stack 0
  8911  002F82                     _ADC_Initialize:
  8912                           	opt stack 25
  8913                           
  8914                           ;adc.c: 64: ADCON0 = 0x01;
  8915                           
  8916                           ;incstack = 0
  8917  002F82  0E01               	movlw	1
  8918  002F84  6EC2               	movwf	4034,c	;volatile
  8919                           
  8920                           ;adc.c: 67: ADCON1 = 0x80;
  8921  002F86  0E80               	movlw	128
  8922  002F88  6EC1               	movwf	4033,c	;volatile
  8923                           
  8924                           ;adc.c: 70: ADCON2 = 0x05;
  8925  002F8A  0E05               	movlw	5
  8926  002F8C  6EC0               	movwf	4032,c	;volatile
  8927                           
  8928                           ;adc.c: 73: ADRESL = 0x00;
  8929  002F8E  0E00               	movlw	0
  8930  002F90  6EC3               	movwf	4035,c	;volatile
  8931                           
  8932                           ;adc.c: 76: ADRESH = 0x00;
  8933  002F92  0E00               	movlw	0
  8934  002F94  6EC4               	movwf	4036,c	;volatile
  8935                           
  8936                           ;adc.c: 79: PIE1bits.ADIE = 1;
  8937  002F96  8C9D               	bsf	3997,6,c	;volatile
  8938  002F98  0012               	return		;funcret
  8939  002F9A                     __end_of_ADC_Initialize:
  8940                           	opt stack 0
  8941                           tosu	equ	0xFFF
  8942                           tosh	equ	0xFFE
  8943                           tosl	equ	0xFFD
  8944                           pclath	equ	0xFFA
  8945                           tblptru	equ	0xFF8
  8946                           tblptrh	equ	0xFF7
  8947                           tblptrl	equ	0xFF6
  8948                           tablat	equ	0xFF5
  8949                           prodh	equ	0xFF4
  8950                           prodl	equ	0xFF3
  8951                           intcon	equ	0xFF2
  8952                           intcon2	equ	0xFF1
  8953                           postinc0	equ	0xFEE
  8954                           wreg	equ	0xFE8
  8955                           indf2	equ	0xFDF
  8956                           postinc2	equ	0xFDE
  8957                           postdec2	equ	0xFDD
  8958                           plusw2	equ	0xFDB
  8959                           fsr2h	equ	0xFDA
  8960                           fsr2l	equ	0xFD9
  8961                           status	equ	0xFD8
  8962                           
  8963 ;; *************** function _LEDwriteDisplay *****************
  8964 ;; Defined at:
  8965 ;;		line 114 in file "LED_BarGraph.c"
  8966 ;; Parameters:    Size  Location     Type
  8967 ;;  i2c_addr        1    wreg     unsigned char 
  8968 ;; Auto vars:     Size  Location     Type
  8969 ;;  i2c_addr        1   20[BANK1 ] unsigned char 
  8970 ;;  writeBuffer    20    0[BANK1 ] unsigned char [20]
  8971 ;;  timeOut         2   21[BANK1 ] unsigned int 
  8972 ;;  status          1   23[BANK1 ] enum E7758
  8973 ;; Return value:  Size  Location     Type
  8974 ;;                  1    wreg      void 
  8975 ;; Registers used:
  8976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8977 ;; Tracked objects:
  8978 ;;		On entry : 0/0
  8979 ;;		On exit  : 0/0
  8980 ;;		Unchanged: 0/0
  8981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8982 ;;      Params:         0       0       0       0       0       0       0
  8983 ;;      Locals:         0       0      24       0       0       0       0
  8984 ;;      Temps:          0       0       0       0       0       0       0
  8985 ;;      Totals:         0       0      24       0       0       0       0
  8986 ;;Total ram usage:       24 bytes
  8987 ;; Hardware stack levels used:    1
  8988 ;; Hardware stack levels required when called:    6
  8989 ;; This function calls:
  8990 ;;		_I2C1_MasterWrite
  8991 ;; This function is called by:
  8992 ;;		_main
  8993 ;; This function uses a non-reentrant model
  8994 ;;
  8995                           
  8996                           	psect	text50
  8997  0018D8                     __ptext50:
  8998                           	opt stack 0
  8999  0018D8                     _LEDwriteDisplay:
  9000                           	opt stack 24
  9001                           
  9002                           ;incstack = 0
  9003                           ;LEDwriteDisplay@i2c_addr stored from wreg
  9004  0018D8  0101               	movlb	1	; () banked
  9005  0018DA  6F4D               	movwf	LEDwriteDisplay@i2c_addr& (0+255),b
  9006                           
  9007                           ;LED_BarGraph.c: 115: uint8_t writeBuffer[20];
  9008                           ;LED_BarGraph.c: 116: uint16_t timeOut;
  9009                           ;LED_BarGraph.c: 117: writeBuffer[0] = 0x00;
  9010  0018DC  0E00               	movlw	0
  9011  0018DE  0101               	movlb	1	; () banked
  9012  0018E0  6F39               	movwf	LEDwriteDisplay@writeBuffer& (0+255),b
  9013                           
  9014                           ;LED_BarGraph.c: 118: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  9015  0018E2  0E02               	movlw	2
  9016  0018E4  0101               	movlb	1	; () banked
  9017  0018E6  6F50               	movwf	LEDwriteDisplay@status& (0+255),b
  9018                           
  9019                           ;LED_BarGraph.c: 120: timeOut = 0;
  9020  0018E8  0E00               	movlw	0
  9021  0018EA  0101               	movlb	1	; () banked
  9022  0018EC  6F4F               	movwf	(LEDwriteDisplay@timeOut+1)& (0+255),b
  9023  0018EE  0E00               	movlw	0
  9024  0018F0  6F4E               	movwf	LEDwriteDisplay@timeOut& (0+255),b
  9025                           
  9026                           ;LED_BarGraph.c: 121: while (status != I2C1_MESSAGE_FAIL) {
  9027  0018F2  D027               	goto	l6673
  9028  0018F4                     l6653:
  9029                           
  9030                           ; BSR set to: 1
  9031                           ;LED_BarGraph.c: 123: I2C1_MasterWrite(&writeBuffer,
  9032                           ;LED_BarGraph.c: 124: 1,
  9033                           ;LED_BarGraph.c: 125: i2c_addr,
  9034                           ;LED_BarGraph.c: 126: &status);
  9035  0018F4  0E39               	movlw	low LEDwriteDisplay@writeBuffer
  9036  0018F6  6E24               	movwf	I2C1_MasterWrite@pdata,c
  9037  0018F8  0E01               	movlw	high LEDwriteDisplay@writeBuffer
  9038  0018FA  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
  9039  0018FC  0E01               	movlw	1
  9040  0018FE  6E26               	movwf	I2C1_MasterWrite@length,c
  9041  001900  C14D  F027         	movff	LEDwriteDisplay@i2c_addr,I2C1_MasterWrite@address
  9042  001904  6A28               	clrf	I2C1_MasterWrite@address+1,c
  9043  001906  0E50               	movlw	low LEDwriteDisplay@status
  9044  001908  6E29               	movwf	I2C1_MasterWrite@pflag,c
  9045  00190A  0E01               	movlw	high LEDwriteDisplay@status
  9046  00190C  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
  9047  00190E  EC87  F015         	call	_I2C1_MasterWrite	;wreg free
  9048  001912                     l6655:
  9049  001912  0E02               	movlw	2
  9050  001914  0101               	movlb	1	; () banked
  9051  001916  1950               	xorwf	LEDwriteDisplay@status& (0+255),w,b
  9052  001918  B4D8               	btfsc	status,2,c
  9053  00191A  D7FB               	goto	l6655
  9054                           
  9055                           ; BSR set to: 1
  9056                           ;LED_BarGraph.c: 131: if (status == I2C1_MESSAGE_COMPLETE)
  9057                           
  9058                           ; BSR set to: 1
  9059  00191C  0101               	movlb	1	; () banked
  9060  00191E  5150               	movf	LEDwriteDisplay@status& (0+255),w,b
  9061  001920  0101               	movlb	1	; () banked
  9062  001922  B4D8               	btfsc	status,2,c
  9063  001924  D012               	goto	l6675
  9064                           
  9065                           ; BSR set to: 1
  9066                           ;LED_BarGraph.c: 133: if (timeOut == 100)
  9067                           
  9068                           ; BSR set to: 1
  9069                           
  9070                           ; BSR set to: 1
  9071                           ;LED_BarGraph.c: 132: break;
  9072  001926  0E64               	movlw	100
  9073  001928  0101               	movlb	1	; () banked
  9074  00192A  194E               	xorwf	LEDwriteDisplay@timeOut& (0+255),w,b
  9075  00192C  0101               	movlb	1	; () banked
  9076  00192E  114F               	iorwf	(LEDwriteDisplay@timeOut+1)& (0+255),w,b
  9077  001930  B4D8               	btfsc	status,2,c
  9078  001932  D00B               	goto	l6675
  9079                           
  9080                           ; BSR set to: 1
  9081                           ;LED_BarGraph.c: 135: if (status == I2C1_MESSAGE_FAIL)
  9082                           
  9083                           ; BSR set to: 1
  9084                           
  9085                           ; BSR set to: 1
  9086                           ;LED_BarGraph.c: 134: break;
  9087  001934  0101               	movlb	1	; () banked
  9088  001936  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
  9089  001938  B4D8               	btfsc	status,2,c
  9090  00193A  D007               	goto	l6675
  9091                           
  9092                           ; BSR set to: 1
  9093                           ;LED_BarGraph.c: 137: else
  9094                           ;LED_BarGraph.c: 138: timeOut++;
  9095                           
  9096                           ; BSR set to: 1
  9097                           
  9098                           ; BSR set to: 1
  9099                           
  9100                           ; BSR set to: 1
  9101                           ;LED_BarGraph.c: 136: break;
  9102  00193C  0101               	movlb	1	; () banked
  9103  00193E  4B4E               	infsnz	LEDwriteDisplay@timeOut& (0+255),f,b
  9104  001940  2B4F               	incf	(LEDwriteDisplay@timeOut+1)& (0+255),f,b
  9105  001942                     l6673:
  9106                           
  9107                           ; BSR set to: 1
  9108  001942  0101               	movlb	1	; () banked
  9109  001944  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
  9110  001946  A4D8               	btfss	status,2,c
  9111  001948  D7D5               	goto	l6653
  9112  00194A                     l6675:
  9113                           
  9114                           ; BSR set to: 1
  9115                           ;LED_BarGraph.c: 139: }
  9116                           ;LED_BarGraph.c: 140: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  9117  00194A  0E02               	movlw	2
  9118  00194C  0101               	movlb	1	; () banked
  9119  00194E  6F50               	movwf	LEDwriteDisplay@status& (0+255),b
  9120                           
  9121                           ;LED_BarGraph.c: 145: writeBuffer[0] = 0;
  9122  001950  0E00               	movlw	0
  9123  001952  0101               	movlb	1	; () banked
  9124  001954  6F39               	movwf	LEDwriteDisplay@writeBuffer& (0+255),b
  9125                           
  9126                           ; BSR set to: 1
  9127                           ;LED_BarGraph.c: 146: writeBuffer[1] = displaybuffer[0] & 0xFF;
  9128  001956  C060  F13A         	movff	_displaybuffer,LEDwriteDisplay@writeBuffer+1
  9129                           
  9130                           ; BSR set to: 1
  9131                           ;LED_BarGraph.c: 147: writeBuffer[2] = displaybuffer[0] >> 8;
  9132  00195A  C061  F13B         	movff	_displaybuffer+1,LEDwriteDisplay@writeBuffer+2
  9133                           
  9134                           ; BSR set to: 1
  9135                           ;LED_BarGraph.c: 148: writeBuffer[3] = displaybuffer[1] & 0xFF;
  9136  00195E  C064  F13C         	movff	_displaybuffer+4,LEDwriteDisplay@writeBuffer+3
  9137                           
  9138                           ; BSR set to: 1
  9139                           ;LED_BarGraph.c: 149: writeBuffer[4] = displaybuffer[1] >> 8;
  9140  001962  C065  F13D         	movff	_displaybuffer+5,LEDwriteDisplay@writeBuffer+4
  9141                           
  9142                           ; BSR set to: 1
  9143                           ;LED_BarGraph.c: 150: writeBuffer[5] = displaybuffer[2] & 0xFF;
  9144  001966  C068  F13E         	movff	_displaybuffer+8,LEDwriteDisplay@writeBuffer+5
  9145                           
  9146                           ; BSR set to: 1
  9147                           ;LED_BarGraph.c: 151: writeBuffer[6] = displaybuffer[2] >> 8;
  9148  00196A  C069  F13F         	movff	_displaybuffer+9,LEDwriteDisplay@writeBuffer+6
  9149                           
  9150                           ; BSR set to: 1
  9151                           ;LED_BarGraph.c: 152: writeBuffer[7] = displaybuffer[3] & 0xFF;
  9152  00196E  C06C  F140         	movff	_displaybuffer+12,LEDwriteDisplay@writeBuffer+7
  9153                           
  9154                           ; BSR set to: 1
  9155                           ;LED_BarGraph.c: 153: writeBuffer[8] = displaybuffer[3] >> 8;
  9156  001972  C06D  F141         	movff	_displaybuffer+13,LEDwriteDisplay@writeBuffer+8
  9157                           
  9158                           ; BSR set to: 1
  9159                           ;LED_BarGraph.c: 154: writeBuffer[9] = displaybuffer[4] & 0xFF;
  9160  001976  C070  F142         	movff	_displaybuffer+16,LEDwriteDisplay@writeBuffer+9
  9161                           
  9162                           ; BSR set to: 1
  9163                           ;LED_BarGraph.c: 155: writeBuffer[10] = displaybuffer[4] >> 8;
  9164  00197A  C071  F143         	movff	_displaybuffer+17,LEDwriteDisplay@writeBuffer+10
  9165                           
  9166                           ; BSR set to: 1
  9167                           ;LED_BarGraph.c: 156: writeBuffer[11] = displaybuffer[5] & 0xFF;
  9168  00197E  C074  F144         	movff	_displaybuffer+20,LEDwriteDisplay@writeBuffer+11
  9169                           
  9170                           ; BSR set to: 1
  9171                           ;LED_BarGraph.c: 157: writeBuffer[12] = displaybuffer[5] >> 8;
  9172  001982  C075  F145         	movff	_displaybuffer+21,LEDwriteDisplay@writeBuffer+12
  9173                           
  9174                           ; BSR set to: 1
  9175                           ;LED_BarGraph.c: 158: writeBuffer[13] = displaybuffer[6] & 0xFF;
  9176  001986  C078  F146         	movff	_displaybuffer+24,LEDwriteDisplay@writeBuffer+13
  9177                           
  9178                           ; BSR set to: 1
  9179                           ;LED_BarGraph.c: 159: writeBuffer[14] = displaybuffer[6] >> 8;
  9180  00198A  C079  F147         	movff	_displaybuffer+25,LEDwriteDisplay@writeBuffer+14
  9181                           
  9182                           ; BSR set to: 1
  9183                           ;LED_BarGraph.c: 160: writeBuffer[15] = displaybuffer[7] & 0xFF;
  9184  00198E  C07C  F148         	movff	_displaybuffer+28,LEDwriteDisplay@writeBuffer+15
  9185                           
  9186                           ; BSR set to: 1
  9187                           ;LED_BarGraph.c: 161: writeBuffer[16] = displaybuffer[7] >> 8;
  9188  001992  C07D  F149         	movff	_displaybuffer+29,LEDwriteDisplay@writeBuffer+16
  9189                           
  9190                           ; BSR set to: 1
  9191                           ;LED_BarGraph.c: 162: writeBuffer[17] = displaybuffer[8] & 0xFF;
  9192  001996  C080  F14A         	movff	_displaybuffer+32,LEDwriteDisplay@writeBuffer+17
  9193                           
  9194                           ; BSR set to: 1
  9195                           ;LED_BarGraph.c: 163: writeBuffer[18] = displaybuffer[8] >> 8;
  9196  00199A  C081  F14B         	movff	_displaybuffer+33,LEDwriteDisplay@writeBuffer+18
  9197                           
  9198                           ;LED_BarGraph.c: 165: timeOut = 0;
  9199  00199E  0E00               	movlw	0
  9200  0019A0  0101               	movlb	1	; () banked
  9201  0019A2  6F4F               	movwf	(LEDwriteDisplay@timeOut+1)& (0+255),b
  9202  0019A4  0E00               	movlw	0
  9203  0019A6  6F4E               	movwf	LEDwriteDisplay@timeOut& (0+255),b
  9204                           
  9205                           ;LED_BarGraph.c: 166: while (status != I2C1_MESSAGE_FAIL) {
  9206  0019A8  D027               	goto	l6733
  9207  0019AA                     l6713:
  9208                           
  9209                           ; BSR set to: 1
  9210                           ;LED_BarGraph.c: 168: I2C1_MasterWrite(&writeBuffer,
  9211                           ;LED_BarGraph.c: 169: 17,
  9212                           ;LED_BarGraph.c: 170: i2c_addr,
  9213                           ;LED_BarGraph.c: 171: &status);
  9214  0019AA  0E39               	movlw	low LEDwriteDisplay@writeBuffer
  9215  0019AC  6E24               	movwf	I2C1_MasterWrite@pdata,c
  9216  0019AE  0E01               	movlw	high LEDwriteDisplay@writeBuffer
  9217  0019B0  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
  9218  0019B2  0E11               	movlw	17
  9219  0019B4  6E26               	movwf	I2C1_MasterWrite@length,c
  9220  0019B6  C14D  F027         	movff	LEDwriteDisplay@i2c_addr,I2C1_MasterWrite@address
  9221  0019BA  6A28               	clrf	I2C1_MasterWrite@address+1,c
  9222  0019BC  0E50               	movlw	low LEDwriteDisplay@status
  9223  0019BE  6E29               	movwf	I2C1_MasterWrite@pflag,c
  9224  0019C0  0E01               	movlw	high LEDwriteDisplay@status
  9225  0019C2  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
  9226  0019C4  EC87  F015         	call	_I2C1_MasterWrite	;wreg free
  9227  0019C8                     l6715:
  9228  0019C8  0E02               	movlw	2
  9229  0019CA  0101               	movlb	1	; () banked
  9230  0019CC  1950               	xorwf	LEDwriteDisplay@status& (0+255),w,b
  9231  0019CE  B4D8               	btfsc	status,2,c
  9232  0019D0  D7FB               	goto	l6715
  9233                           
  9234                           ; BSR set to: 1
  9235                           ;LED_BarGraph.c: 176: if (status == I2C1_MESSAGE_COMPLETE)
  9236                           
  9237                           ; BSR set to: 1
  9238  0019D2  0101               	movlb	1	; () banked
  9239  0019D4  5150               	movf	LEDwriteDisplay@status& (0+255),w,b
  9240  0019D6  0101               	movlb	1	; () banked
  9241  0019D8  B4D8               	btfsc	status,2,c
  9242  0019DA  0012               	return	
  9243                           
  9244                           ; BSR set to: 1
  9245                           ;LED_BarGraph.c: 178: if (timeOut == 100)
  9246                           
  9247                           ; BSR set to: 1
  9248                           
  9249                           ; BSR set to: 1
  9250                           ;LED_BarGraph.c: 177: break;
  9251  0019DC  0E64               	movlw	100
  9252  0019DE  0101               	movlb	1	; () banked
  9253  0019E0  194E               	xorwf	LEDwriteDisplay@timeOut& (0+255),w,b
  9254  0019E2  0101               	movlb	1	; () banked
  9255  0019E4  114F               	iorwf	(LEDwriteDisplay@timeOut+1)& (0+255),w,b
  9256  0019E6  B4D8               	btfsc	status,2,c
  9257  0019E8  0012               	return	
  9258                           
  9259                           ; BSR set to: 1
  9260                           ;LED_BarGraph.c: 180: if (status == I2C1_MESSAGE_FAIL)
  9261                           
  9262                           ; BSR set to: 1
  9263                           
  9264                           ; BSR set to: 1
  9265                           ;LED_BarGraph.c: 179: break;
  9266  0019EA  0101               	movlb	1	; () banked
  9267  0019EC  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
  9268  0019EE  B4D8               	btfsc	status,2,c
  9269  0019F0  0012               	return	
  9270                           
  9271                           ; BSR set to: 1
  9272                           ;LED_BarGraph.c: 182: else
  9273                           ;LED_BarGraph.c: 183: timeOut++;
  9274                           
  9275                           ; BSR set to: 1
  9276                           
  9277                           ; BSR set to: 1
  9278                           
  9279                           ; BSR set to: 1
  9280                           ;LED_BarGraph.c: 181: break;
  9281  0019F2  0101               	movlb	1	; () banked
  9282  0019F4  4B4E               	infsnz	LEDwriteDisplay@timeOut& (0+255),f,b
  9283  0019F6  2B4F               	incf	(LEDwriteDisplay@timeOut+1)& (0+255),f,b
  9284  0019F8                     l6733:
  9285                           
  9286                           ; BSR set to: 1
  9287  0019F8  0101               	movlb	1	; () banked
  9288  0019FA  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
  9289  0019FC  B4D8               	btfsc	status,2,c
  9290  0019FE  0012               	return	
  9291  001A00  D7D4               	goto	l6713
  9292  001A02                     __end_of_LEDwriteDisplay:
  9293                           	opt stack 0
  9294                           tosu	equ	0xFFF
  9295                           tosh	equ	0xFFE
  9296                           tosl	equ	0xFFD
  9297                           pclath	equ	0xFFA
  9298                           tblptru	equ	0xFF8
  9299                           tblptrh	equ	0xFF7
  9300                           tblptrl	equ	0xFF6
  9301                           tablat	equ	0xFF5
  9302                           prodh	equ	0xFF4
  9303                           prodl	equ	0xFF3
  9304                           intcon	equ	0xFF2
  9305                           intcon2	equ	0xFF1
  9306                           postinc0	equ	0xFEE
  9307                           wreg	equ	0xFE8
  9308                           indf2	equ	0xFDF
  9309                           postinc2	equ	0xFDE
  9310                           postdec2	equ	0xFDD
  9311                           plusw2	equ	0xFDB
  9312                           fsr2h	equ	0xFDA
  9313                           fsr2l	equ	0xFD9
  9314                           status	equ	0xFD8
  9315                           
  9316 ;; *************** function _LEDsetValue *****************
  9317 ;; Defined at:
  9318 ;;		line 11 in file "LED_BarGraph.c"
  9319 ;; Parameters:    Size  Location     Type
  9320 ;;  value           2   11[BANK1 ] int 
  9321 ;;  color           2   13[BANK1 ] int 
  9322 ;; Auto vars:     Size  Location     Type
  9323 ;;  k               2   16[BANK1 ] int 
  9324 ;; Return value:  Size  Location     Type
  9325 ;;                  1    wreg      void 
  9326 ;; Registers used:
  9327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9328 ;; Tracked objects:
  9329 ;;		On entry : 0/0
  9330 ;;		On exit  : 0/0
  9331 ;;		Unchanged: 0/0
  9332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9333 ;;      Params:         0       0       4       0       0       0       0
  9334 ;;      Locals:         0       0       2       0       0       0       0
  9335 ;;      Temps:          0       0       1       0       0       0       0
  9336 ;;      Totals:         0       0       7       0       0       0       0
  9337 ;;Total ram usage:        7 bytes
  9338 ;; Hardware stack levels used:    1
  9339 ;; Hardware stack levels required when called:    6
  9340 ;; This function calls:
  9341 ;;		_LEDsetBar
  9342 ;; This function is called by:
  9343 ;;		_main
  9344 ;; This function uses a non-reentrant model
  9345 ;;
  9346                           
  9347                           	psect	text51
  9348  0023C0                     __ptext51:
  9349                           	opt stack 0
  9350  0023C0                     _LEDsetValue:
  9351                           	opt stack 24
  9352                           
  9353                           ;LED_BarGraph.c: 12: if (value > 24) value = 24;
  9354                           
  9355                           ; BSR set to: 1
  9356                           ;incstack = 0
  9357  0023C0  0101               	movlb	1	; () banked
  9358  0023C2  BF45               	btfsc	(LEDsetValue@value+1)& (0+255),7,b
  9359  0023C4  D00D               	goto	l6633
  9360  0023C6  0101               	movlb	1	; () banked
  9361  0023C8  5145               	movf	(LEDsetValue@value+1)& (0+255),w,b
  9362  0023CA  E105               	bnz	u7410
  9363  0023CC  0E19               	movlw	25
  9364  0023CE  0101               	movlb	1	; () banked
  9365  0023D0  5D44               	subwf	LEDsetValue@value& (0+255),w,b
  9366  0023D2  A0D8               	btfss	status,0,c
  9367  0023D4  D005               	goto	l6633
  9368  0023D6                     u7410:
  9369                           
  9370                           ; BSR set to: 1
  9371  0023D6  0E00               	movlw	0
  9372  0023D8  0101               	movlb	1	; () banked
  9373  0023DA  6F45               	movwf	(LEDsetValue@value+1)& (0+255),b
  9374  0023DC  0E18               	movlw	24
  9375  0023DE  6F44               	movwf	LEDsetValue@value& (0+255),b
  9376  0023E0                     l6633:
  9377                           
  9378                           ; BSR set to: 1
  9379                           ;LED_BarGraph.c: 13: if (value < 0) value = 0;
  9380  0023E0  0101               	movlb	1	; () banked
  9381  0023E2  AF45               	btfss	(LEDsetValue@value+1)& (0+255),7,b
  9382  0023E4  D005               	goto	l614
  9383                           
  9384                           ; BSR set to: 1
  9385  0023E6  0E00               	movlw	0
  9386  0023E8  0101               	movlb	1	; () banked
  9387  0023EA  6F45               	movwf	(LEDsetValue@value+1)& (0+255),b
  9388  0023EC  0E00               	movlw	0
  9389  0023EE  6F44               	movwf	LEDsetValue@value& (0+255),b
  9390  0023F0                     l614:
  9391                           
  9392                           ; BSR set to: 1
  9393                           ;LED_BarGraph.c: 14: int k;
  9394                           ;LED_BarGraph.c: 15: for (k = 0; k < 24; k++) {
  9395  0023F0  0E00               	movlw	0
  9396  0023F2  0101               	movlb	1	; () banked
  9397  0023F4  6F4A               	movwf	(LEDsetValue@k+1)& (0+255),b
  9398  0023F6  0E00               	movlw	0
  9399  0023F8  6F49               	movwf	LEDsetValue@k& (0+255),b
  9400  0023FA                     l6637:
  9401                           
  9402                           ; BSR set to: 1
  9403  0023FA  0101               	movlb	1	; () banked
  9404  0023FC  BF4A               	btfsc	(LEDsetValue@k+1)& (0+255),7,b
  9405  0023FE  D008               	goto	l6641
  9406  002400  0101               	movlb	1	; () banked
  9407  002402  514A               	movf	(LEDsetValue@k+1)& (0+255),w,b
  9408  002404  E12E               	bnz	l619
  9409  002406  0E18               	movlw	24
  9410  002408  0101               	movlb	1	; () banked
  9411  00240A  5D49               	subwf	LEDsetValue@k& (0+255),w,b
  9412  00240C  B0D8               	btfsc	status,0,c
  9413  00240E  0012               	return	
  9414  002410                     l6641:
  9415                           
  9416                           ; BSR set to: 1
  9417                           ;LED_BarGraph.c: 16: if (k < value) LEDsetBar(k, color);
  9418  002410  0101               	movlb	1	; () banked
  9419  002412  5144               	movf	LEDsetValue@value& (0+255),w,b
  9420  002414  0101               	movlb	1	; () banked
  9421  002416  5D49               	subwf	LEDsetValue@k& (0+255),w,b
  9422  002418  0101               	movlb	1	; () banked
  9423  00241A  514A               	movf	(LEDsetValue@k+1)& (0+255),w,b
  9424  00241C  0A80               	xorlw	128
  9425  00241E  0101               	movlb	1	; () banked
  9426  002420  6F48               	movwf	??_LEDsetValue& (0+255),b
  9427  002422  0101               	movlb	1	; () banked
  9428  002424  5145               	movf	(LEDsetValue@value+1)& (0+255),w,b
  9429  002426  0A80               	xorlw	128
  9430  002428  0101               	movlb	1	; () banked
  9431  00242A  5948               	subwfb	??_LEDsetValue& (0+255),w,b
  9432  00242C  B0D8               	btfsc	status,0,c
  9433  00242E  D00B               	goto	l6645
  9434                           
  9435                           ; BSR set to: 1
  9436  002430  C149  F023         	movff	LEDsetValue@k,LEDsetBar@bar
  9437  002434  C14A  F024         	movff	LEDsetValue@k+1,LEDsetBar@bar+1
  9438  002438  C146  F025         	movff	LEDsetValue@color,LEDsetBar@color
  9439  00243C  C147  F026         	movff	LEDsetValue@color+1,LEDsetBar@color+1
  9440  002440  ECC4  F003         	call	_LEDsetBar	;wreg free
  9441  002444  D00A               	goto	l6647
  9442  002446                     l6645:
  9443                           
  9444                           ;LED_BarGraph.c: 17: else LEDsetBar(k, 0);
  9445  002446  C149  F023         	movff	LEDsetValue@k,LEDsetBar@bar
  9446  00244A  C14A  F024         	movff	LEDsetValue@k+1,LEDsetBar@bar+1
  9447  00244E  0E00               	movlw	0
  9448  002450  6E26               	movwf	LEDsetBar@color+1,c
  9449  002452  0E00               	movlw	0
  9450  002454  6E25               	movwf	LEDsetBar@color,c
  9451  002456  ECC4  F003         	call	_LEDsetBar	;wreg free
  9452  00245A                     l6647:
  9453  00245A  0101               	movlb	1	; () banked
  9454  00245C  4B49               	infsnz	LEDsetValue@k& (0+255),f,b
  9455  00245E  2B4A               	incf	(LEDsetValue@k+1)& (0+255),f,b
  9456  002460  D7CC               	goto	l6637
  9457  002462                     l619:
  9458                           
  9459                           ; BSR set to: 1
  9460  002462  0012               	return		;funcret
  9461  002464                     __end_of_LEDsetValue:
  9462                           	opt stack 0
  9463                           tosu	equ	0xFFF
  9464                           tosh	equ	0xFFE
  9465                           tosl	equ	0xFFD
  9466                           pclath	equ	0xFFA
  9467                           tblptru	equ	0xFF8
  9468                           tblptrh	equ	0xFF7
  9469                           tblptrl	equ	0xFF6
  9470                           tablat	equ	0xFF5
  9471                           prodh	equ	0xFF4
  9472                           prodl	equ	0xFF3
  9473                           intcon	equ	0xFF2
  9474                           intcon2	equ	0xFF1
  9475                           postinc0	equ	0xFEE
  9476                           wreg	equ	0xFE8
  9477                           indf2	equ	0xFDF
  9478                           postinc2	equ	0xFDE
  9479                           postdec2	equ	0xFDD
  9480                           plusw2	equ	0xFDB
  9481                           fsr2h	equ	0xFDA
  9482                           fsr2l	equ	0xFD9
  9483                           status	equ	0xFD8
  9484                           
  9485 ;; *************** function _LEDsetBar *****************
  9486 ;; Defined at:
  9487 ;;		line 193 in file "LED_BarGraph.c"
  9488 ;; Parameters:    Size  Location     Type
  9489 ;;  bar             2   34[COMRAM] int 
  9490 ;;  color           2   36[COMRAM] int 
  9491 ;; Auto vars:     Size  Location     Type
  9492 ;;  a               2   40[COMRAM] unsigned int 
  9493 ;;  c               2   38[COMRAM] unsigned int 
  9494 ;; Return value:  Size  Location     Type
  9495 ;;                  1    wreg      void 
  9496 ;; Registers used:
  9497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9498 ;; Tracked objects:
  9499 ;;		On entry : 0/0
  9500 ;;		On exit  : 0/0
  9501 ;;		Unchanged: 0/0
  9502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9503 ;;      Params:         4       0       0       0       0       0       0
  9504 ;;      Locals:         4       0       0       0       0       0       0
  9505 ;;      Temps:          0      16       0       0       0       0       0
  9506 ;;      Totals:         8      16       0       0       0       0       0
  9507 ;;Total ram usage:       24 bytes
  9508 ;; Hardware stack levels used:    1
  9509 ;; Hardware stack levels required when called:    5
  9510 ;; This function calls:
  9511 ;;		___awdiv
  9512 ;; This function is called by:
  9513 ;;		_LEDsetValue
  9514 ;; This function uses a non-reentrant model
  9515 ;;
  9516                           
  9517                           	psect	text52
  9518  000788                     __ptext52:
  9519                           	opt stack 0
  9520  000788                     _LEDsetBar:
  9521                           	opt stack 24
  9522                           
  9523                           ;LED_BarGraph.c: 194: uint16_t a, c;
  9524                           ;LED_BarGraph.c: 196: if (bar < 12)
  9525                           
  9526                           ; BSR set to: 1
  9527                           ;incstack = 0
  9528  000788  BE24               	btfsc	LEDsetBar@bar+1,7,c
  9529  00078A  D006               	goto	l6125
  9530  00078C  5024               	movf	LEDsetBar@bar+1,w,c
  9531  00078E  E10F               	bnz	l6127
  9532  000790  0E0C               	movlw	12
  9533  000792  5C23               	subwf	LEDsetBar@bar,w,c
  9534  000794  B0D8               	btfsc	status,0,c
  9535  000796  D00B               	goto	l6127
  9536  000798                     l6125:
  9537                           
  9538                           ;LED_BarGraph.c: 197: c = bar / 4;
  9539  000798  C023  F01B         	movff	LEDsetBar@bar,___awdiv@dividend
  9540  00079C  C024  F01C         	movff	LEDsetBar@bar+1,___awdiv@dividend+1
  9541  0007A0  0E00               	movlw	0
  9542  0007A2  6E1E               	movwf	___awdiv@divisor+1,c
  9543  0007A4  0E04               	movlw	4
  9544  0007A6  6E1D               	movwf	___awdiv@divisor,c
  9545  0007A8  ECA5  F013         	call	___awdiv	;wreg free
  9546  0007AC  D00C               	goto	L3
  9547  0007AE                     l6127:
  9548                           
  9549                           ;LED_BarGraph.c: 198: else
  9550                           ;LED_BarGraph.c: 199: c = (bar - 12) / 4;
  9551  0007AE  0EF4               	movlw	244
  9552  0007B0  2423               	addwf	LEDsetBar@bar,w,c
  9553  0007B2  6E1B               	movwf	___awdiv@dividend,c
  9554  0007B4  0EFF               	movlw	255
  9555  0007B6  2024               	addwfc	LEDsetBar@bar+1,w,c
  9556  0007B8  6E1C               	movwf	___awdiv@dividend+1,c
  9557  0007BA  0E00               	movlw	0
  9558  0007BC  6E1E               	movwf	___awdiv@divisor+1,c
  9559  0007BE  0E04               	movlw	4
  9560  0007C0  6E1D               	movwf	___awdiv@divisor,c
  9561  0007C2  ECA5  F013         	call	___awdiv	;wreg free
  9562  0007C6                     L3:
  9563  0007C6  C01B  F027         	movff	?___awdiv,LEDsetBar@c
  9564  0007CA  C01C  F028         	movff	?___awdiv+1,LEDsetBar@c+1
  9565                           
  9566                           ;LED_BarGraph.c: 201: a = bar % 4;
  9567  0007CE  0E03               	movlw	3
  9568  0007D0  1423               	andwf	LEDsetBar@bar,w,c
  9569  0007D2  6E29               	movwf	LEDsetBar@a,c
  9570  0007D4  6A2A               	clrf	LEDsetBar@a+1,c
  9571                           
  9572                           ;LED_BarGraph.c: 202: if (bar >= 12)
  9573  0007D6  BE24               	btfsc	LEDsetBar@bar+1,7,c
  9574  0007D8  D00A               	goto	l693
  9575  0007DA  5024               	movf	LEDsetBar@bar+1,w,c
  9576  0007DC  E104               	bnz	u6340
  9577  0007DE  0E0C               	movlw	12
  9578  0007E0  5C23               	subwf	LEDsetBar@bar,w,c
  9579  0007E2  A0D8               	btfss	status,0,c
  9580  0007E4  D004               	goto	l693
  9581  0007E6                     u6340:
  9582                           
  9583                           ;LED_BarGraph.c: 203: a += 4;
  9584  0007E6  0E04               	movlw	4
  9585  0007E8  2629               	addwf	LEDsetBar@a,f,c
  9586  0007EA  0E00               	movlw	0
  9587  0007EC  222A               	addwfc	LEDsetBar@a+1,f,c
  9588  0007EE                     l693:
  9589                           
  9590                           ;LED_BarGraph.c: 206: if (color == 1) {
  9591  0007EE  0425               	decf	LEDsetBar@color,w,c
  9592  0007F0  1026               	iorwf	LEDsetBar@color+1,w,c
  9593  0007F2  A4D8               	btfss	status,2,c
  9594  0007F4  D07D               	goto	l6137
  9595                           
  9596                           ;LED_BarGraph.c: 208: displaybuffer[c] |= (1<<(a));
  9597  0007F6  C029  F0EE         	movff	LEDsetBar@a,??_LEDsetBar
  9598  0007FA  0E01               	movlw	1
  9599  0007FC  0100               	movlb	0	; () banked
  9600  0007FE  6FEF               	movwf	(??_LEDsetBar+1)& (0+255),b
  9601  000800  0E00               	movlw	0
  9602  000802  0100               	movlb	0	; () banked
  9603  000804  6FF0               	movwf	(??_LEDsetBar+2)& (0+255),b
  9604  000806  0100               	movlb	0	; () banked
  9605  000808  2BEE               	incf	??_LEDsetBar& (0+255),f,b
  9606  00080A  D004               	goto	u6364
  9607  00080C                     u6365:
  9608  00080C  90D8               	bcf	status,0,c
  9609  00080E  0100               	movlb	0	; () banked
  9610  000810  37EF               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  9611  000812  37F0               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  9612  000814                     u6364:
  9613  000814  0100               	movlb	0	; () banked
  9614  000816  2FEE               	decfsz	??_LEDsetBar& (0+255),f,b
  9615  000818  D7F9               	goto	u6365
  9616  00081A  C0EF  F0F1         	movff	??_LEDsetBar+1,??_LEDsetBar+3
  9617  00081E  C0F0  F0F2         	movff	??_LEDsetBar+2,??_LEDsetBar+4
  9618  000822  0E00               	movlw	0
  9619  000824  0100               	movlb	0	; () banked
  9620  000826  BFF2               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
  9621  000828  0EFF               	movlw	255
  9622  00082A  6FF3               	movwf	(??_LEDsetBar+5)& (0+255),b
  9623  00082C  6FF4               	movwf	(??_LEDsetBar+6)& (0+255),b
  9624  00082E  0E60               	movlw	low _displaybuffer
  9625  000830  0100               	movlb	0	; () banked
  9626  000832  6FF5               	movwf	(??_LEDsetBar+7)& (0+255),b
  9627  000834  0E00               	movlw	high _displaybuffer
  9628  000836  0100               	movlb	0	; () banked
  9629  000838  6FF6               	movwf	(??_LEDsetBar+8)& (0+255),b
  9630  00083A  90D8               	bcf	status,0,c
  9631  00083C  3427               	rlcf	LEDsetBar@c,w,c
  9632  00083E  6ED9               	movwf	fsr2l,c
  9633  000840  3428               	rlcf	LEDsetBar@c+1,w,c
  9634  000842  6EDA               	movwf	fsr2h,c
  9635  000844  90D8               	bcf	status,0,c
  9636  000846  36D9               	rlcf	fsr2l,f,c
  9637  000848  36DA               	rlcf	fsr2h,f,c
  9638  00084A  0100               	movlb	0	; () banked
  9639  00084C  51F5               	movf	(??_LEDsetBar+7)& (0+255),w,b
  9640  00084E  26D9               	addwf	fsr2l,f,c
  9641  000850  0100               	movlb	0	; () banked
  9642  000852  51F6               	movf	(??_LEDsetBar+8)& (0+255),w,b
  9643  000854  22DA               	addwfc	fsr2h,f,c
  9644  000856  0100               	movlb	0	; () banked
  9645  000858  51F1               	movf	(??_LEDsetBar+3)& (0+255),w,b
  9646  00085A  12DE               	iorwf	postinc2,f,c
  9647  00085C  51F2               	movf	(??_LEDsetBar+4)& (0+255),w,b
  9648  00085E  12DE               	iorwf	postinc2,f,c
  9649  000860  51F3               	movf	(??_LEDsetBar+5)& (0+255),w,b
  9650  000862  12DE               	iorwf	postinc2,f,c
  9651  000864  51F4               	movf	(??_LEDsetBar+6)& (0+255),w,b
  9652  000866  12DE               	iorwf	postinc2,f,c
  9653                           
  9654                           ;LED_BarGraph.c: 210: displaybuffer[c] &= ~(1<<(a + 8));
  9655  000868  C029  F0EE         	movff	LEDsetBar@a,??_LEDsetBar
  9656  00086C  0E08               	movlw	8
  9657  00086E  0100               	movlb	0	; () banked
  9658  000870  27EE               	addwf	??_LEDsetBar& (0+255),f,b
  9659  000872  0E01               	movlw	1
  9660  000874  0100               	movlb	0	; () banked
  9661  000876  6FEF               	movwf	(??_LEDsetBar+1)& (0+255),b
  9662  000878  0E00               	movlw	0
  9663  00087A  0100               	movlb	0	; () banked
  9664  00087C  6FF0               	movwf	(??_LEDsetBar+2)& (0+255),b
  9665  00087E  0100               	movlb	0	; () banked
  9666  000880  2BEE               	incf	??_LEDsetBar& (0+255),f,b
  9667  000882  D004               	goto	u6374
  9668  000884                     u6375:
  9669  000884  90D8               	bcf	status,0,c
  9670  000886  0100               	movlb	0	; () banked
  9671  000888  37EF               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  9672  00088A  37F0               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  9673  00088C                     u6374:
  9674  00088C  0100               	movlb	0	; () banked
  9675  00088E  2FEE               	decfsz	??_LEDsetBar& (0+255),f,b
  9676  000890  D7F9               	goto	u6375
  9677  000892  0100               	movlb	0	; () banked
  9678  000894  1DEF               	comf	(??_LEDsetBar+1)& (0+255),w,b
  9679  000896  0100               	movlb	0	; () banked
  9680  000898  6FF1               	movwf	(??_LEDsetBar+3)& (0+255),b
  9681  00089A  0100               	movlb	0	; () banked
  9682  00089C  1DF0               	comf	(??_LEDsetBar+2)& (0+255),w,b
  9683  00089E  0100               	movlb	0	; () banked
  9684  0008A0  6FF2               	movwf	(??_LEDsetBar+4)& (0+255),b
  9685  0008A2  0100               	movlb	0	; () banked
  9686  0008A4  6BF3               	clrf	(??_LEDsetBar+5)& (0+255),b
  9687  0008A6  0100               	movlb	0	; () banked
  9688  0008A8  BFF2               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
  9689  0008AA  07F3               	decf	(??_LEDsetBar+5)& (0+255),f,b
  9690  0008AC  0100               	movlb	0	; () banked
  9691  0008AE  51F3               	movf	(??_LEDsetBar+5)& (0+255),w,b
  9692  0008B0  0100               	movlb	0	; () banked
  9693  0008B2  6FF4               	movwf	(??_LEDsetBar+6)& (0+255),b
  9694  0008B4  0E60               	movlw	low _displaybuffer
  9695  0008B6  0100               	movlb	0	; () banked
  9696  0008B8  6FF5               	movwf	(??_LEDsetBar+7)& (0+255),b
  9697  0008BA  0E00               	movlw	high _displaybuffer
  9698  0008BC  0100               	movlb	0	; () banked
  9699  0008BE  6FF6               	movwf	(??_LEDsetBar+8)& (0+255),b
  9700  0008C0  90D8               	bcf	status,0,c
  9701  0008C2  3427               	rlcf	LEDsetBar@c,w,c
  9702  0008C4  6ED9               	movwf	fsr2l,c
  9703  0008C6  3428               	rlcf	LEDsetBar@c+1,w,c
  9704  0008C8  6EDA               	movwf	fsr2h,c
  9705  0008CA  90D8               	bcf	status,0,c
  9706  0008CC  36D9               	rlcf	fsr2l,f,c
  9707  0008CE  36DA               	rlcf	fsr2h,f,c
  9708  0008D0  0100               	movlb	0	; () banked
  9709  0008D2  51F5               	movf	(??_LEDsetBar+7)& (0+255),w,b
  9710  0008D4  26D9               	addwf	fsr2l,f,c
  9711  0008D6  0100               	movlb	0	; () banked
  9712  0008D8  51F6               	movf	(??_LEDsetBar+8)& (0+255),w,b
  9713  0008DA  22DA               	addwfc	fsr2h,f,c
  9714  0008DC  0100               	movlb	0	; () banked
  9715  0008DE  51F1               	movf	(??_LEDsetBar+3)& (0+255),w,b
  9716  0008E0  16DE               	andwf	postinc2,f,c
  9717  0008E2  51F2               	movf	(??_LEDsetBar+4)& (0+255),w,b
  9718  0008E4  16DE               	andwf	postinc2,f,c
  9719  0008E6  51F3               	movf	(??_LEDsetBar+5)& (0+255),w,b
  9720  0008E8  16DE               	andwf	postinc2,f,c
  9721  0008EA  51F4               	movf	(??_LEDsetBar+6)& (0+255),w,b
  9722  0008EC  16DE               	andwf	postinc2,f,c
  9723                           
  9724                           ;LED_BarGraph.c: 211: } else if (color == 2) {
  9725  0008EE  0012               	return	
  9726  0008F0                     l6137:
  9727  0008F0  0E02               	movlw	2
  9728  0008F2  1825               	xorwf	LEDsetBar@color,w,c
  9729  0008F4  1026               	iorwf	LEDsetBar@color+1,w,c
  9730  0008F6  A4D8               	btfss	status,2,c
  9731  0008F8  D05A               	goto	l6141
  9732                           
  9733                           ;LED_BarGraph.c: 213: displaybuffer[c] |= (1<<(a)) | (1<<(a + 8));
  9734  0008FA  C029  F0EE         	movff	LEDsetBar@a,??_LEDsetBar
  9735  0008FE  0E08               	movlw	8
  9736  000900  0100               	movlb	0	; () banked
  9737  000902  27EE               	addwf	??_LEDsetBar& (0+255),f,b
  9738  000904  0E01               	movlw	1
  9739  000906  0100               	movlb	0	; () banked
  9740  000908  6FEF               	movwf	(??_LEDsetBar+1)& (0+255),b
  9741  00090A  0E00               	movlw	0
  9742  00090C  0100               	movlb	0	; () banked
  9743  00090E  6FF0               	movwf	(??_LEDsetBar+2)& (0+255),b
  9744  000910  0100               	movlb	0	; () banked
  9745  000912  2BEE               	incf	??_LEDsetBar& (0+255),f,b
  9746  000914  D004               	goto	u6394
  9747  000916                     u6395:
  9748  000916  90D8               	bcf	status,0,c
  9749  000918  0100               	movlb	0	; () banked
  9750  00091A  37EF               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  9751  00091C  37F0               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  9752  00091E                     u6394:
  9753  00091E  0100               	movlb	0	; () banked
  9754  000920  2FEE               	decfsz	??_LEDsetBar& (0+255),f,b
  9755  000922  D7F9               	goto	u6395
  9756  000924  C029  F0F1         	movff	LEDsetBar@a,??_LEDsetBar+3
  9757  000928  0E01               	movlw	1
  9758  00092A  0100               	movlb	0	; () banked
  9759  00092C  6FF2               	movwf	(??_LEDsetBar+4)& (0+255),b
  9760  00092E  0E00               	movlw	0
  9761  000930  0100               	movlb	0	; () banked
  9762  000932  6FF3               	movwf	(??_LEDsetBar+5)& (0+255),b
  9763  000934  0100               	movlb	0	; () banked
  9764  000936  2BF1               	incf	(??_LEDsetBar+3)& (0+255),f,b
  9765  000938  D004               	goto	u6404
  9766  00093A                     u6405:
  9767  00093A  90D8               	bcf	status,0,c
  9768  00093C  0100               	movlb	0	; () banked
  9769  00093E  37F2               	rlcf	(??_LEDsetBar+4)& (0+255),f,b
  9770  000940  37F3               	rlcf	(??_LEDsetBar+5)& (0+255),f,b
  9771  000942                     u6404:
  9772  000942  0100               	movlb	0	; () banked
  9773  000944  2FF1               	decfsz	(??_LEDsetBar+3)& (0+255),f,b
  9774  000946  D7F9               	goto	u6405
  9775  000948  0100               	movlb	0	; () banked
  9776  00094A  51EF               	movf	(??_LEDsetBar+1)& (0+255),w,b
  9777  00094C  0100               	movlb	0	; () banked
  9778  00094E  11F2               	iorwf	(??_LEDsetBar+4)& (0+255),w,b
  9779  000950  0100               	movlb	0	; () banked
  9780  000952  6FF4               	movwf	(??_LEDsetBar+6)& (0+255),b
  9781  000954  0100               	movlb	0	; () banked
  9782  000956  51F0               	movf	(??_LEDsetBar+2)& (0+255),w,b
  9783  000958  0100               	movlb	0	; () banked
  9784  00095A  11F3               	iorwf	(??_LEDsetBar+5)& (0+255),w,b
  9785  00095C  0100               	movlb	0	; () banked
  9786  00095E  6FF5               	movwf	(??_LEDsetBar+7)& (0+255),b
  9787  000960  0100               	movlb	0	; () banked
  9788  000962  6BF6               	clrf	(??_LEDsetBar+8)& (0+255),b
  9789  000964  0100               	movlb	0	; () banked
  9790  000966  BFF5               	btfsc	(??_LEDsetBar+7)& (0+255),7,b
  9791  000968  07F6               	decf	(??_LEDsetBar+8)& (0+255),f,b
  9792  00096A  0100               	movlb	0	; () banked
  9793  00096C  51F6               	movf	(??_LEDsetBar+8)& (0+255),w,b
  9794  00096E  0100               	movlb	0	; () banked
  9795  000970  6FF7               	movwf	(??_LEDsetBar+9)& (0+255),b
  9796  000972  0E60               	movlw	low _displaybuffer
  9797  000974  0100               	movlb	0	; () banked
  9798  000976  6FF8               	movwf	(??_LEDsetBar+10)& (0+255),b
  9799  000978  0E00               	movlw	high _displaybuffer
  9800  00097A  0100               	movlb	0	; () banked
  9801  00097C  6FF9               	movwf	(??_LEDsetBar+11)& (0+255),b
  9802  00097E  90D8               	bcf	status,0,c
  9803  000980  3427               	rlcf	LEDsetBar@c,w,c
  9804  000982  6ED9               	movwf	fsr2l,c
  9805  000984  3428               	rlcf	LEDsetBar@c+1,w,c
  9806  000986  6EDA               	movwf	fsr2h,c
  9807  000988  90D8               	bcf	status,0,c
  9808  00098A  36D9               	rlcf	fsr2l,f,c
  9809  00098C  36DA               	rlcf	fsr2h,f,c
  9810  00098E  0100               	movlb	0	; () banked
  9811  000990  51F8               	movf	(??_LEDsetBar+10)& (0+255),w,b
  9812  000992  26D9               	addwf	fsr2l,f,c
  9813  000994  0100               	movlb	0	; () banked
  9814  000996  51F9               	movf	(??_LEDsetBar+11)& (0+255),w,b
  9815  000998  22DA               	addwfc	fsr2h,f,c
  9816  00099A  0100               	movlb	0	; () banked
  9817  00099C  51F4               	movf	(??_LEDsetBar+6)& (0+255),w,b
  9818  00099E  12DE               	iorwf	postinc2,f,c
  9819  0009A0  51F5               	movf	(??_LEDsetBar+7)& (0+255),w,b
  9820  0009A2  12DE               	iorwf	postinc2,f,c
  9821  0009A4  51F6               	movf	(??_LEDsetBar+8)& (0+255),w,b
  9822  0009A6  12DE               	iorwf	postinc2,f,c
  9823  0009A8  51F7               	movf	(??_LEDsetBar+9)& (0+255),w,b
  9824  0009AA  12DE               	iorwf	postinc2,f,c
  9825                           
  9826                           ;LED_BarGraph.c: 214: } else if (color == 0) {
  9827  0009AC  0012               	return	
  9828  0009AE                     l6141:
  9829  0009AE  5025               	movf	LEDsetBar@color,w,c
  9830  0009B0  1026               	iorwf	LEDsetBar@color+1,w,c
  9831  0009B2  A4D8               	btfss	status,2,c
  9832  0009B4  D06A               	goto	l6145
  9833                           
  9834                           ;LED_BarGraph.c: 216: displaybuffer[c] &= ~(1<<(a)) & ~(1<<(a + 8));
  9835  0009B6  C029  F0EE         	movff	LEDsetBar@a,??_LEDsetBar
  9836  0009BA  0E08               	movlw	8
  9837  0009BC  0100               	movlb	0	; () banked
  9838  0009BE  27EE               	addwf	??_LEDsetBar& (0+255),f,b
  9839  0009C0  0E01               	movlw	1
  9840  0009C2  0100               	movlb	0	; () banked
  9841  0009C4  6FEF               	movwf	(??_LEDsetBar+1)& (0+255),b
  9842  0009C6  0E00               	movlw	0
  9843  0009C8  0100               	movlb	0	; () banked
  9844  0009CA  6FF0               	movwf	(??_LEDsetBar+2)& (0+255),b
  9845  0009CC  0100               	movlb	0	; () banked
  9846  0009CE  2BEE               	incf	??_LEDsetBar& (0+255),f,b
  9847  0009D0  D004               	goto	u6424
  9848  0009D2                     u6425:
  9849  0009D2  90D8               	bcf	status,0,c
  9850  0009D4  0100               	movlb	0	; () banked
  9851  0009D6  37EF               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  9852  0009D8  37F0               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  9853  0009DA                     u6424:
  9854  0009DA  0100               	movlb	0	; () banked
  9855  0009DC  2FEE               	decfsz	??_LEDsetBar& (0+255),f,b
  9856  0009DE  D7F9               	goto	u6425
  9857  0009E0  0100               	movlb	0	; () banked
  9858  0009E2  1DEF               	comf	(??_LEDsetBar+1)& (0+255),w,b
  9859  0009E4  0100               	movlb	0	; () banked
  9860  0009E6  6FF1               	movwf	(??_LEDsetBar+3)& (0+255),b
  9861  0009E8  0100               	movlb	0	; () banked
  9862  0009EA  1DF0               	comf	(??_LEDsetBar+2)& (0+255),w,b
  9863  0009EC  0100               	movlb	0	; () banked
  9864  0009EE  6FF2               	movwf	(??_LEDsetBar+4)& (0+255),b
  9865  0009F0  C029  F0F3         	movff	LEDsetBar@a,??_LEDsetBar+5
  9866  0009F4  0E01               	movlw	1
  9867  0009F6  0100               	movlb	0	; () banked
  9868  0009F8  6FF4               	movwf	(??_LEDsetBar+6)& (0+255),b
  9869  0009FA  0E00               	movlw	0
  9870  0009FC  0100               	movlb	0	; () banked
  9871  0009FE  6FF5               	movwf	(??_LEDsetBar+7)& (0+255),b
  9872  000A00  0100               	movlb	0	; () banked
  9873  000A02  2BF3               	incf	(??_LEDsetBar+5)& (0+255),f,b
  9874  000A04  D004               	goto	u6434
  9875  000A06                     u6435:
  9876  000A06  90D8               	bcf	status,0,c
  9877  000A08  0100               	movlb	0	; () banked
  9878  000A0A  37F4               	rlcf	(??_LEDsetBar+6)& (0+255),f,b
  9879  000A0C  37F5               	rlcf	(??_LEDsetBar+7)& (0+255),f,b
  9880  000A0E                     u6434:
  9881  000A0E  0100               	movlb	0	; () banked
  9882  000A10  2FF3               	decfsz	(??_LEDsetBar+5)& (0+255),f,b
  9883  000A12  D7F9               	goto	u6435
  9884  000A14  0100               	movlb	0	; () banked
  9885  000A16  1DF4               	comf	(??_LEDsetBar+6)& (0+255),w,b
  9886  000A18  0100               	movlb	0	; () banked
  9887  000A1A  6FF6               	movwf	(??_LEDsetBar+8)& (0+255),b
  9888  000A1C  0100               	movlb	0	; () banked
  9889  000A1E  1DF5               	comf	(??_LEDsetBar+7)& (0+255),w,b
  9890  000A20  0100               	movlb	0	; () banked
  9891  000A22  6FF7               	movwf	(??_LEDsetBar+9)& (0+255),b
  9892  000A24  0100               	movlb	0	; () banked
  9893  000A26  51F1               	movf	(??_LEDsetBar+3)& (0+255),w,b
  9894  000A28  0100               	movlb	0	; () banked
  9895  000A2A  15F6               	andwf	(??_LEDsetBar+8)& (0+255),w,b
  9896  000A2C  0100               	movlb	0	; () banked
  9897  000A2E  6FF8               	movwf	(??_LEDsetBar+10)& (0+255),b
  9898  000A30  0100               	movlb	0	; () banked
  9899  000A32  51F2               	movf	(??_LEDsetBar+4)& (0+255),w,b
  9900  000A34  0100               	movlb	0	; () banked
  9901  000A36  15F7               	andwf	(??_LEDsetBar+9)& (0+255),w,b
  9902  000A38  0100               	movlb	0	; () banked
  9903  000A3A  6FF9               	movwf	(??_LEDsetBar+11)& (0+255),b
  9904  000A3C  0100               	movlb	0	; () banked
  9905  000A3E  6BFA               	clrf	(??_LEDsetBar+12)& (0+255),b
  9906  000A40  0100               	movlb	0	; () banked
  9907  000A42  BFF9               	btfsc	(??_LEDsetBar+11)& (0+255),7,b
  9908  000A44  07FA               	decf	(??_LEDsetBar+12)& (0+255),f,b
  9909  000A46  0100               	movlb	0	; () banked
  9910  000A48  51FA               	movf	(??_LEDsetBar+12)& (0+255),w,b
  9911  000A4A  0100               	movlb	0	; () banked
  9912  000A4C  6FFB               	movwf	(??_LEDsetBar+13)& (0+255),b
  9913  000A4E  0E60               	movlw	low _displaybuffer
  9914  000A50  0100               	movlb	0	; () banked
  9915  000A52  6FFC               	movwf	(??_LEDsetBar+14)& (0+255),b
  9916  000A54  0E00               	movlw	high _displaybuffer
  9917  000A56  0100               	movlb	0	; () banked
  9918  000A58  6FFD               	movwf	(??_LEDsetBar+15)& (0+255),b
  9919  000A5A  90D8               	bcf	status,0,c
  9920  000A5C  3427               	rlcf	LEDsetBar@c,w,c
  9921  000A5E  6ED9               	movwf	fsr2l,c
  9922  000A60  3428               	rlcf	LEDsetBar@c+1,w,c
  9923  000A62  6EDA               	movwf	fsr2h,c
  9924  000A64  90D8               	bcf	status,0,c
  9925  000A66  36D9               	rlcf	fsr2l,f,c
  9926  000A68  36DA               	rlcf	fsr2h,f,c
  9927  000A6A  0100               	movlb	0	; () banked
  9928  000A6C  51FC               	movf	(??_LEDsetBar+14)& (0+255),w,b
  9929  000A6E  26D9               	addwf	fsr2l,f,c
  9930  000A70  0100               	movlb	0	; () banked
  9931  000A72  51FD               	movf	(??_LEDsetBar+15)& (0+255),w,b
  9932  000A74  22DA               	addwfc	fsr2h,f,c
  9933  000A76  0100               	movlb	0	; () banked
  9934  000A78  51F8               	movf	(??_LEDsetBar+10)& (0+255),w,b
  9935  000A7A  16DE               	andwf	postinc2,f,c
  9936  000A7C  51F9               	movf	(??_LEDsetBar+11)& (0+255),w,b
  9937  000A7E  16DE               	andwf	postinc2,f,c
  9938  000A80  51FA               	movf	(??_LEDsetBar+12)& (0+255),w,b
  9939  000A82  16DE               	andwf	postinc2,f,c
  9940  000A84  51FB               	movf	(??_LEDsetBar+13)& (0+255),w,b
  9941  000A86  16DE               	andwf	postinc2,f,c
  9942                           
  9943                           ;LED_BarGraph.c: 217: } else if (color == 3) {
  9944  000A88  0012               	return	
  9945  000A8A                     l6145:
  9946  000A8A  0E03               	movlw	3
  9947  000A8C  1825               	xorwf	LEDsetBar@color,w,c
  9948  000A8E  1026               	iorwf	LEDsetBar@color+1,w,c
  9949  000A90  A4D8               	btfss	status,2,c
  9950  000A92  0012               	return	
  9951                           
  9952                           ;LED_BarGraph.c: 219: displaybuffer[c] |= (1<<(a + 8));
  9953  000A94  C029  F0EE         	movff	LEDsetBar@a,??_LEDsetBar
  9954  000A98  0E08               	movlw	8
  9955  000A9A  0100               	movlb	0	; () banked
  9956  000A9C  27EE               	addwf	??_LEDsetBar& (0+255),f,b
  9957  000A9E  0E01               	movlw	1
  9958  000AA0  0100               	movlb	0	; () banked
  9959  000AA2  6FEF               	movwf	(??_LEDsetBar+1)& (0+255),b
  9960  000AA4  0E00               	movlw	0
  9961  000AA6  0100               	movlb	0	; () banked
  9962  000AA8  6FF0               	movwf	(??_LEDsetBar+2)& (0+255),b
  9963  000AAA  0100               	movlb	0	; () banked
  9964  000AAC  2BEE               	incf	??_LEDsetBar& (0+255),f,b
  9965  000AAE  D004               	goto	u6454
  9966  000AB0                     u6455:
  9967  000AB0  90D8               	bcf	status,0,c
  9968  000AB2  0100               	movlb	0	; () banked
  9969  000AB4  37EF               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  9970  000AB6  37F0               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  9971  000AB8                     u6454:
  9972  000AB8  0100               	movlb	0	; () banked
  9973  000ABA  2FEE               	decfsz	??_LEDsetBar& (0+255),f,b
  9974  000ABC  D7F9               	goto	u6455
  9975  000ABE  C0EF  F0F1         	movff	??_LEDsetBar+1,??_LEDsetBar+3
  9976  000AC2  C0F0  F0F2         	movff	??_LEDsetBar+2,??_LEDsetBar+4
  9977  000AC6  0E00               	movlw	0
  9978  000AC8  0100               	movlb	0	; () banked
  9979  000ACA  BFF2               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
  9980  000ACC  0EFF               	movlw	255
  9981  000ACE  6FF3               	movwf	(??_LEDsetBar+5)& (0+255),b
  9982  000AD0  6FF4               	movwf	(??_LEDsetBar+6)& (0+255),b
  9983  000AD2  0E60               	movlw	low _displaybuffer
  9984  000AD4  0100               	movlb	0	; () banked
  9985  000AD6  6FF5               	movwf	(??_LEDsetBar+7)& (0+255),b
  9986  000AD8  0E00               	movlw	high _displaybuffer
  9987  000ADA  0100               	movlb	0	; () banked
  9988  000ADC  6FF6               	movwf	(??_LEDsetBar+8)& (0+255),b
  9989  000ADE  90D8               	bcf	status,0,c
  9990  000AE0  3427               	rlcf	LEDsetBar@c,w,c
  9991  000AE2  6ED9               	movwf	fsr2l,c
  9992  000AE4  3428               	rlcf	LEDsetBar@c+1,w,c
  9993  000AE6  6EDA               	movwf	fsr2h,c
  9994  000AE8  90D8               	bcf	status,0,c
  9995  000AEA  36D9               	rlcf	fsr2l,f,c
  9996  000AEC  36DA               	rlcf	fsr2h,f,c
  9997  000AEE  0100               	movlb	0	; () banked
  9998  000AF0  51F5               	movf	(??_LEDsetBar+7)& (0+255),w,b
  9999  000AF2  26D9               	addwf	fsr2l,f,c
 10000  000AF4  0100               	movlb	0	; () banked
 10001  000AF6  51F6               	movf	(??_LEDsetBar+8)& (0+255),w,b
 10002  000AF8  22DA               	addwfc	fsr2h,f,c
 10003  000AFA  0100               	movlb	0	; () banked
 10004  000AFC  51F1               	movf	(??_LEDsetBar+3)& (0+255),w,b
 10005  000AFE  12DE               	iorwf	postinc2,f,c
 10006  000B00  51F2               	movf	(??_LEDsetBar+4)& (0+255),w,b
 10007  000B02  12DE               	iorwf	postinc2,f,c
 10008  000B04  51F3               	movf	(??_LEDsetBar+5)& (0+255),w,b
 10009  000B06  12DE               	iorwf	postinc2,f,c
 10010  000B08  51F4               	movf	(??_LEDsetBar+6)& (0+255),w,b
 10011  000B0A  12DE               	iorwf	postinc2,f,c
 10012                           
 10013                           ;LED_BarGraph.c: 221: displaybuffer[c] &= ~(1<<(a));
 10014  000B0C  C029  F0EE         	movff	LEDsetBar@a,??_LEDsetBar
 10015  000B10  0E01               	movlw	1
 10016  000B12  0100               	movlb	0	; () banked
 10017  000B14  6FEF               	movwf	(??_LEDsetBar+1)& (0+255),b
 10018  000B16  0E00               	movlw	0
 10019  000B18  0100               	movlb	0	; () banked
 10020  000B1A  6FF0               	movwf	(??_LEDsetBar+2)& (0+255),b
 10021  000B1C  0100               	movlb	0	; () banked
 10022  000B1E  2BEE               	incf	??_LEDsetBar& (0+255),f,b
 10023  000B20  D004               	goto	u6464
 10024  000B22                     u6465:
 10025  000B22  90D8               	bcf	status,0,c
 10026  000B24  0100               	movlb	0	; () banked
 10027  000B26  37EF               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 10028  000B28  37F0               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 10029  000B2A                     u6464:
 10030  000B2A  0100               	movlb	0	; () banked
 10031  000B2C  2FEE               	decfsz	??_LEDsetBar& (0+255),f,b
 10032  000B2E  D7F9               	goto	u6465
 10033  000B30  0100               	movlb	0	; () banked
 10034  000B32  1DEF               	comf	(??_LEDsetBar+1)& (0+255),w,b
 10035  000B34  0100               	movlb	0	; () banked
 10036  000B36  6FF1               	movwf	(??_LEDsetBar+3)& (0+255),b
 10037  000B38  0100               	movlb	0	; () banked
 10038  000B3A  1DF0               	comf	(??_LEDsetBar+2)& (0+255),w,b
 10039  000B3C  0100               	movlb	0	; () banked
 10040  000B3E  6FF2               	movwf	(??_LEDsetBar+4)& (0+255),b
 10041  000B40  0100               	movlb	0	; () banked
 10042  000B42  6BF3               	clrf	(??_LEDsetBar+5)& (0+255),b
 10043  000B44  0100               	movlb	0	; () banked
 10044  000B46  BFF2               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 10045  000B48  07F3               	decf	(??_LEDsetBar+5)& (0+255),f,b
 10046  000B4A  0100               	movlb	0	; () banked
 10047  000B4C  51F3               	movf	(??_LEDsetBar+5)& (0+255),w,b
 10048  000B4E  0100               	movlb	0	; () banked
 10049  000B50  6FF4               	movwf	(??_LEDsetBar+6)& (0+255),b
 10050  000B52  0E60               	movlw	low _displaybuffer
 10051  000B54  0100               	movlb	0	; () banked
 10052  000B56  6FF5               	movwf	(??_LEDsetBar+7)& (0+255),b
 10053  000B58  0E00               	movlw	high _displaybuffer
 10054  000B5A  0100               	movlb	0	; () banked
 10055  000B5C  6FF6               	movwf	(??_LEDsetBar+8)& (0+255),b
 10056  000B5E  90D8               	bcf	status,0,c
 10057  000B60  3427               	rlcf	LEDsetBar@c,w,c
 10058  000B62  6ED9               	movwf	fsr2l,c
 10059  000B64  3428               	rlcf	LEDsetBar@c+1,w,c
 10060  000B66  6EDA               	movwf	fsr2h,c
 10061  000B68  90D8               	bcf	status,0,c
 10062  000B6A  36D9               	rlcf	fsr2l,f,c
 10063  000B6C  36DA               	rlcf	fsr2h,f,c
 10064  000B6E  0100               	movlb	0	; () banked
 10065  000B70  51F5               	movf	(??_LEDsetBar+7)& (0+255),w,b
 10066  000B72  26D9               	addwf	fsr2l,f,c
 10067  000B74  0100               	movlb	0	; () banked
 10068  000B76  51F6               	movf	(??_LEDsetBar+8)& (0+255),w,b
 10069  000B78  22DA               	addwfc	fsr2h,f,c
 10070  000B7A  0100               	movlb	0	; () banked
 10071  000B7C  51F1               	movf	(??_LEDsetBar+3)& (0+255),w,b
 10072  000B7E  16DE               	andwf	postinc2,f,c
 10073  000B80  51F2               	movf	(??_LEDsetBar+4)& (0+255),w,b
 10074  000B82  16DE               	andwf	postinc2,f,c
 10075  000B84  51F3               	movf	(??_LEDsetBar+5)& (0+255),w,b
 10076  000B86  16DE               	andwf	postinc2,f,c
 10077  000B88  51F4               	movf	(??_LEDsetBar+6)& (0+255),w,b
 10078  000B8A  16DE               	andwf	postinc2,f,c
 10079                           
 10080                           ; BSR set to: 0
 10081                           
 10082                           ; BSR set to: 0
 10083                           
 10084                           ; BSR set to: 0
 10085  000B8C  0012               	return	
 10086  000B8E                     __end_of_LEDsetBar:
 10087                           	opt stack 0
 10088                           tosu	equ	0xFFF
 10089                           tosh	equ	0xFFE
 10090                           tosl	equ	0xFFD
 10091                           pclath	equ	0xFFA
 10092                           tblptru	equ	0xFF8
 10093                           tblptrh	equ	0xFF7
 10094                           tblptrl	equ	0xFF6
 10095                           tablat	equ	0xFF5
 10096                           prodh	equ	0xFF4
 10097                           prodl	equ	0xFF3
 10098                           intcon	equ	0xFF2
 10099                           intcon2	equ	0xFF1
 10100                           postinc0	equ	0xFEE
 10101                           wreg	equ	0xFE8
 10102                           indf2	equ	0xFDF
 10103                           postinc2	equ	0xFDE
 10104                           postdec2	equ	0xFDD
 10105                           plusw2	equ	0xFDB
 10106                           fsr2h	equ	0xFDA
 10107                           fsr2l	equ	0xFD9
 10108                           status	equ	0xFD8
 10109                           
 10110 ;; *************** function ___awdiv *****************
 10111 ;; Defined at:
 10112 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awdiv.c"
 10113 ;; Parameters:    Size  Location     Type
 10114 ;;  dividend        2   26[COMRAM] int 
 10115 ;;  divisor         2   28[COMRAM] int 
 10116 ;; Auto vars:     Size  Location     Type
 10117 ;;  quotient        2   32[COMRAM] int 
 10118 ;;  sign            1   31[COMRAM] unsigned char 
 10119 ;;  counter         1   30[COMRAM] unsigned char 
 10120 ;; Return value:  Size  Location     Type
 10121 ;;                  2   26[COMRAM] int 
 10122 ;; Registers used:
 10123 ;;		wreg, status,2, status,0
 10124 ;; Tracked objects:
 10125 ;;		On entry : 0/0
 10126 ;;		On exit  : 0/0
 10127 ;;		Unchanged: 0/0
 10128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10129 ;;      Params:         4       0       0       0       0       0       0
 10130 ;;      Locals:         4       0       0       0       0       0       0
 10131 ;;      Temps:          0       0       0       0       0       0       0
 10132 ;;      Totals:         8       0       0       0       0       0       0
 10133 ;;Total ram usage:        8 bytes
 10134 ;; Hardware stack levels used:    1
 10135 ;; Hardware stack levels required when called:    4
 10136 ;; This function calls:
 10137 ;;		Nothing
 10138 ;; This function is called by:
 10139 ;;		_LEDsetBar
 10140 ;;		_begin
 10141 ;; This function uses a non-reentrant model
 10142 ;;
 10143                           
 10144                           	psect	text53
 10145  00274A                     __ptext53:
 10146                           	opt stack 0
 10147  00274A                     ___awdiv:
 10148                           	opt stack 24
 10149                           
 10150                           ;incstack = 0
 10151  00274A  0E00               	movlw	0
 10152  00274C  6E20               	movwf	___awdiv@sign,c
 10153  00274E  AE1E               	btfss	___awdiv@divisor+1,7,c
 10154  002750  D006               	goto	l5997
 10155  002752  6C1D               	negf	___awdiv@divisor,c
 10156  002754  1E1E               	comf	___awdiv@divisor+1,f,c
 10157  002756  B0D8               	btfsc	status,0,c
 10158  002758  2A1E               	incf	___awdiv@divisor+1,f,c
 10159  00275A  0E01               	movlw	1
 10160  00275C  6E20               	movwf	___awdiv@sign,c
 10161  00275E                     l5997:
 10162  00275E  AE1C               	btfss	___awdiv@dividend+1,7,c
 10163  002760  D006               	goto	l6003
 10164  002762  6C1B               	negf	___awdiv@dividend,c
 10165  002764  1E1C               	comf	___awdiv@dividend+1,f,c
 10166  002766  B0D8               	btfsc	status,0,c
 10167  002768  2A1C               	incf	___awdiv@dividend+1,f,c
 10168  00276A  0E01               	movlw	1
 10169  00276C  1A20               	xorwf	___awdiv@sign,f,c
 10170  00276E                     l6003:
 10171  00276E  0E00               	movlw	0
 10172  002770  6E22               	movwf	___awdiv@quotient+1,c
 10173  002772  0E00               	movlw	0
 10174  002774  6E21               	movwf	___awdiv@quotient,c
 10175  002776  501D               	movf	___awdiv@divisor,w,c
 10176  002778  101E               	iorwf	___awdiv@divisor+1,w,c
 10177  00277A  B4D8               	btfsc	status,2,c
 10178  00277C  D01C               	goto	l6025
 10179  00277E  0E01               	movlw	1
 10180  002780  6E1F               	movwf	___awdiv@counter,c
 10181  002782  D004               	goto	l6011
 10182  002784                     l6009:
 10183  002784  90D8               	bcf	status,0,c
 10184  002786  361D               	rlcf	___awdiv@divisor,f,c
 10185  002788  361E               	rlcf	___awdiv@divisor+1,f,c
 10186  00278A  2A1F               	incf	___awdiv@counter,f,c
 10187  00278C                     l6011:
 10188  00278C  AE1E               	btfss	___awdiv@divisor+1,7,c
 10189  00278E  D7FA               	goto	l6009
 10190  002790                     l6013:
 10191  002790  90D8               	bcf	status,0,c
 10192  002792  3621               	rlcf	___awdiv@quotient,f,c
 10193  002794  3622               	rlcf	___awdiv@quotient+1,f,c
 10194  002796  501D               	movf	___awdiv@divisor,w,c
 10195  002798  5C1B               	subwf	___awdiv@dividend,w,c
 10196  00279A  501E               	movf	___awdiv@divisor+1,w,c
 10197  00279C  581C               	subwfb	___awdiv@dividend+1,w,c
 10198  00279E  A0D8               	btfss	status,0,c
 10199  0027A0  D005               	goto	l6021
 10200  0027A2  501D               	movf	___awdiv@divisor,w,c
 10201  0027A4  5E1B               	subwf	___awdiv@dividend,f,c
 10202  0027A6  501E               	movf	___awdiv@divisor+1,w,c
 10203  0027A8  5A1C               	subwfb	___awdiv@dividend+1,f,c
 10204  0027AA  8021               	bsf	___awdiv@quotient,0,c
 10205  0027AC                     l6021:
 10206  0027AC  90D8               	bcf	status,0,c
 10207  0027AE  321E               	rrcf	___awdiv@divisor+1,f,c
 10208  0027B0  321D               	rrcf	___awdiv@divisor,f,c
 10209  0027B2  2E1F               	decfsz	___awdiv@counter,f,c
 10210  0027B4  D7ED               	goto	l6013
 10211  0027B6                     l6025:
 10212  0027B6  5020               	movf	___awdiv@sign,w,c
 10213  0027B8  B4D8               	btfsc	status,2,c
 10214  0027BA  D004               	goto	l6029
 10215  0027BC  6C21               	negf	___awdiv@quotient,c
 10216  0027BE  1E22               	comf	___awdiv@quotient+1,f,c
 10217  0027C0  B0D8               	btfsc	status,0,c
 10218  0027C2  2A22               	incf	___awdiv@quotient+1,f,c
 10219  0027C4                     l6029:
 10220  0027C4  C021  F01B         	movff	___awdiv@quotient,?___awdiv
 10221  0027C8  C022  F01C         	movff	___awdiv@quotient+1,?___awdiv+1
 10222  0027CC  0012               	return	
 10223  0027CE                     __end_of___awdiv:
 10224                           	opt stack 0
 10225                           tosu	equ	0xFFF
 10226                           tosh	equ	0xFFE
 10227                           tosl	equ	0xFFD
 10228                           pclath	equ	0xFFA
 10229                           tblptru	equ	0xFF8
 10230                           tblptrh	equ	0xFF7
 10231                           tblptrl	equ	0xFF6
 10232                           tablat	equ	0xFF5
 10233                           prodh	equ	0xFF4
 10234                           prodl	equ	0xFF3
 10235                           intcon	equ	0xFF2
 10236                           intcon2	equ	0xFF1
 10237                           postinc0	equ	0xFEE
 10238                           wreg	equ	0xFE8
 10239                           indf2	equ	0xFDF
 10240                           postinc2	equ	0xFDE
 10241                           postdec2	equ	0xFDD
 10242                           plusw2	equ	0xFDB
 10243                           fsr2h	equ	0xFDA
 10244                           fsr2l	equ	0xFD9
 10245                           status	equ	0xFD8
 10246                           
 10247 ;; *************** function _LEDbegin *****************
 10248 ;; Defined at:
 10249 ;;		line 83 in file "LED_BarGraph.c"
 10250 ;; Parameters:    Size  Location     Type
 10251 ;;  i2c_addr        1    wreg     unsigned char 
 10252 ;; Auto vars:     Size  Location     Type
 10253 ;;  i2c_addr        1   13[BANK0 ] unsigned char 
 10254 ;;  writeBuffer     3    8[BANK0 ] unsigned char [3]
 10255 ;;  timeOut         2   11[BANK0 ] unsigned int 
 10256 ;;  status          1   14[BANK0 ] enum E7758
 10257 ;; Return value:  Size  Location     Type
 10258 ;;                  1    wreg      void 
 10259 ;; Registers used:
 10260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10261 ;; Tracked objects:
 10262 ;;		On entry : 0/0
 10263 ;;		On exit  : 0/0
 10264 ;;		Unchanged: 0/0
 10265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10266 ;;      Params:         0       0       0       0       0       0       0
 10267 ;;      Locals:         0       7       0       0       0       0       0
 10268 ;;      Temps:          0       0       0       0       0       0       0
 10269 ;;      Totals:         0       7       0       0       0       0       0
 10270 ;;Total ram usage:        7 bytes
 10271 ;; Hardware stack levels used:    1
 10272 ;; Hardware stack levels required when called:    7
 10273 ;; This function calls:
 10274 ;;		_I2C1_MasterWrite
 10275 ;;		_LEDBsetBrightness
 10276 ;;		_LEDblinkRate
 10277 ;; This function is called by:
 10278 ;;		_main
 10279 ;; This function uses a non-reentrant model
 10280 ;;
 10281                           
 10282                           	psect	text54
 10283  002464                     __ptext54:
 10284                           	opt stack 0
 10285  002464                     _LEDbegin:
 10286                           	opt stack 23
 10287                           
 10288                           ;incstack = 0
 10289                           ;LEDbegin@i2c_addr stored from wreg
 10290  002464  0100               	movlb	0	; () banked
 10291  002466  6FFB               	movwf	LEDbegin@i2c_addr& (0+255),b
 10292                           
 10293                           ;LED_BarGraph.c: 84: uint8_t writeBuffer[3];
 10294                           ;LED_BarGraph.c: 85: uint16_t timeOut;
 10295                           ;LED_BarGraph.c: 86: writeBuffer[0] = 0x21;
 10296  002468  0E21               	movlw	33
 10297  00246A  0100               	movlb	0	; () banked
 10298  00246C  6FF6               	movwf	LEDbegin@writeBuffer& (0+255),b
 10299                           
 10300                           ;LED_BarGraph.c: 87: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 10301  00246E  0E02               	movlw	2
 10302  002470  0100               	movlb	0	; () banked
 10303  002472  6FFC               	movwf	LEDbegin@status& (0+255),b
 10304                           
 10305                           ;LED_BarGraph.c: 89: timeOut = 0;
 10306  002474  0E00               	movlw	0
 10307  002476  0100               	movlb	0	; () banked
 10308  002478  6FFA               	movwf	(LEDbegin@timeOut+1)& (0+255),b
 10309  00247A  0E00               	movlw	0
 10310  00247C  6FF9               	movwf	LEDbegin@timeOut& (0+255),b
 10311                           
 10312                           ;LED_BarGraph.c: 90: while (status != I2C1_MESSAGE_FAIL) {
 10313  00247E  D027               	goto	l6615
 10314  002480                     l6595:
 10315                           
 10316                           ; BSR set to: 0
 10317                           ;LED_BarGraph.c: 92: I2C1_MasterWrite(&writeBuffer,
 10318                           ;LED_BarGraph.c: 93: 1,
 10319                           ;LED_BarGraph.c: 94: i2c_addr,
 10320                           ;LED_BarGraph.c: 95: &status);
 10321  002480  0EF6               	movlw	low LEDbegin@writeBuffer
 10322  002482  6E24               	movwf	I2C1_MasterWrite@pdata,c
 10323  002484  0E00               	movlw	high LEDbegin@writeBuffer
 10324  002486  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
 10325  002488  0E01               	movlw	1
 10326  00248A  6E26               	movwf	I2C1_MasterWrite@length,c
 10327  00248C  C0FB  F027         	movff	LEDbegin@i2c_addr,I2C1_MasterWrite@address
 10328  002490  6A28               	clrf	I2C1_MasterWrite@address+1,c
 10329  002492  0EFC               	movlw	low LEDbegin@status
 10330  002494  6E29               	movwf	I2C1_MasterWrite@pflag,c
 10331  002496  0E00               	movlw	high LEDbegin@status
 10332  002498  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
 10333  00249A  EC87  F015         	call	_I2C1_MasterWrite	;wreg free
 10334  00249E                     l6597:
 10335  00249E  0E02               	movlw	2
 10336  0024A0  0100               	movlb	0	; () banked
 10337  0024A2  19FC               	xorwf	LEDbegin@status& (0+255),w,b
 10338  0024A4  B4D8               	btfsc	status,2,c
 10339  0024A6  D7FB               	goto	l6597
 10340                           
 10341                           ; BSR set to: 0
 10342                           ;LED_BarGraph.c: 100: if (status == I2C1_MESSAGE_COMPLETE)
 10343                           
 10344                           ; BSR set to: 0
 10345  0024A8  0100               	movlb	0	; () banked
 10346  0024AA  51FC               	movf	LEDbegin@status& (0+255),w,b
 10347  0024AC  0100               	movlb	0	; () banked
 10348  0024AE  B4D8               	btfsc	status,2,c
 10349  0024B0  D012               	goto	l6617
 10350                           
 10351                           ; BSR set to: 0
 10352                           ;LED_BarGraph.c: 102: if (timeOut == 100)
 10353                           
 10354                           ; BSR set to: 0
 10355                           
 10356                           ; BSR set to: 0
 10357                           ;LED_BarGraph.c: 101: break;
 10358  0024B2  0E64               	movlw	100
 10359  0024B4  0100               	movlb	0	; () banked
 10360  0024B6  19F9               	xorwf	LEDbegin@timeOut& (0+255),w,b
 10361  0024B8  0100               	movlb	0	; () banked
 10362  0024BA  11FA               	iorwf	(LEDbegin@timeOut+1)& (0+255),w,b
 10363  0024BC  B4D8               	btfsc	status,2,c
 10364  0024BE  D00B               	goto	l6617
 10365                           
 10366                           ; BSR set to: 0
 10367                           ;LED_BarGraph.c: 104: if (status == I2C1_MESSAGE_FAIL)
 10368                           
 10369                           ; BSR set to: 0
 10370                           
 10371                           ; BSR set to: 0
 10372                           ;LED_BarGraph.c: 103: break;
 10373  0024C0  0100               	movlb	0	; () banked
 10374  0024C2  05FC               	decf	LEDbegin@status& (0+255),w,b
 10375  0024C4  B4D8               	btfsc	status,2,c
 10376  0024C6  D007               	goto	l6617
 10377                           
 10378                           ; BSR set to: 0
 10379                           ;LED_BarGraph.c: 106: else
 10380                           ;LED_BarGraph.c: 107: timeOut++;
 10381                           
 10382                           ; BSR set to: 0
 10383                           
 10384                           ; BSR set to: 0
 10385                           
 10386                           ; BSR set to: 0
 10387                           ;LED_BarGraph.c: 105: break;
 10388  0024C8  0100               	movlb	0	; () banked
 10389  0024CA  4BF9               	infsnz	LEDbegin@timeOut& (0+255),f,b
 10390  0024CC  2BFA               	incf	(LEDbegin@timeOut+1)& (0+255),f,b
 10391  0024CE                     l6615:
 10392                           
 10393                           ; BSR set to: 0
 10394  0024CE  0100               	movlb	0	; () banked
 10395  0024D0  05FC               	decf	LEDbegin@status& (0+255),w,b
 10396  0024D2  A4D8               	btfss	status,2,c
 10397  0024D4  D7D5               	goto	l6595
 10398  0024D6                     l6617:
 10399                           
 10400                           ; BSR set to: 0
 10401                           ;LED_BarGraph.c: 108: }
 10402                           ;LED_BarGraph.c: 110: LEDblinkRate(0, i2c_addr);
 10403  0024D6  0E00               	movlw	0
 10404  0024D8  0100               	movlb	0	; () banked
 10405  0024DA  6FEF               	movwf	(LEDblinkRate@b+1)& (0+255),b
 10406  0024DC  0E00               	movlw	0
 10407  0024DE  6FEE               	movwf	LEDblinkRate@b& (0+255),b
 10408  0024E0  C0FB  F0F0         	movff	LEDbegin@i2c_addr,LEDblinkRate@i2c_addr
 10409  0024E4  EC7E  F012         	call	_LEDblinkRate	;wreg free
 10410                           
 10411                           ;LED_BarGraph.c: 111: LEDBsetBrightness(15, i2c_addr);
 10412  0024E8  0E00               	movlw	0
 10413  0024EA  0100               	movlb	0	; () banked
 10414  0024EC  6FEF               	movwf	(LEDBsetBrightness@b+1)& (0+255),b
 10415  0024EE  0E0F               	movlw	15
 10416  0024F0  6FEE               	movwf	LEDBsetBrightness@b& (0+255),b
 10417  0024F2  C0FB  F0F0         	movff	LEDbegin@i2c_addr,LEDBsetBrightness@i2c_addr
 10418  0024F6  ECC9  F012         	call	_LEDBsetBrightness	;wreg free
 10419  0024FA  0012               	return		;funcret
 10420  0024FC                     __end_of_LEDbegin:
 10421                           	opt stack 0
 10422                           tosu	equ	0xFFF
 10423                           tosh	equ	0xFFE
 10424                           tosl	equ	0xFFD
 10425                           pclath	equ	0xFFA
 10426                           tblptru	equ	0xFF8
 10427                           tblptrh	equ	0xFF7
 10428                           tblptrl	equ	0xFF6
 10429                           tablat	equ	0xFF5
 10430                           prodh	equ	0xFF4
 10431                           prodl	equ	0xFF3
 10432                           intcon	equ	0xFF2
 10433                           intcon2	equ	0xFF1
 10434                           postinc0	equ	0xFEE
 10435                           wreg	equ	0xFE8
 10436                           indf2	equ	0xFDF
 10437                           postinc2	equ	0xFDE
 10438                           postdec2	equ	0xFDD
 10439                           plusw2	equ	0xFDB
 10440                           fsr2h	equ	0xFDA
 10441                           fsr2l	equ	0xFD9
 10442                           status	equ	0xFD8
 10443                           
 10444 ;; *************** function _LEDblinkRate *****************
 10445 ;; Defined at:
 10446 ;;		line 53 in file "LED_BarGraph.c"
 10447 ;; Parameters:    Size  Location     Type
 10448 ;;  b               2    0[BANK0 ] int 
 10449 ;;  i2c_addr        1    2[BANK0 ] unsigned char 
 10450 ;; Auto vars:     Size  Location     Type
 10451 ;;  writeBuffer     2    3[BANK0 ] unsigned char [2]
 10452 ;;  timeOut         2    5[BANK0 ] unsigned int 
 10453 ;;  status          1    7[BANK0 ] enum E7758
 10454 ;; Return value:  Size  Location     Type
 10455 ;;                  1    wreg      void 
 10456 ;; Registers used:
 10457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10458 ;; Tracked objects:
 10459 ;;		On entry : 0/0
 10460 ;;		On exit  : 0/0
 10461 ;;		Unchanged: 0/0
 10462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10463 ;;      Params:         0       3       0       0       0       0       0
 10464 ;;      Locals:         0       5       0       0       0       0       0
 10465 ;;      Temps:          0       0       0       0       0       0       0
 10466 ;;      Totals:         0       8       0       0       0       0       0
 10467 ;;Total ram usage:        8 bytes
 10468 ;; Hardware stack levels used:    1
 10469 ;; Hardware stack levels required when called:    6
 10470 ;; This function calls:
 10471 ;;		_I2C1_MasterWrite
 10472 ;; This function is called by:
 10473 ;;		_LEDbegin
 10474 ;; This function uses a non-reentrant model
 10475 ;;
 10476                           
 10477                           	psect	text55
 10478  0024FC                     __ptext55:
 10479                           	opt stack 0
 10480  0024FC                     _LEDblinkRate:
 10481                           	opt stack 23
 10482                           
 10483                           ;LED_BarGraph.c: 54: if (b > 3) b = 0;
 10484                           
 10485                           ;incstack = 0
 10486  0024FC  0100               	movlb	0	; () banked
 10487  0024FE  BFEF               	btfsc	(LEDblinkRate@b+1)& (0+255),7,b
 10488  002500  D00D               	goto	l6185
 10489  002502  0100               	movlb	0	; () banked
 10490  002504  51EF               	movf	(LEDblinkRate@b+1)& (0+255),w,b
 10491  002506  E105               	bnz	u6530
 10492  002508  0E04               	movlw	4
 10493  00250A  0100               	movlb	0	; () banked
 10494  00250C  5DEE               	subwf	LEDblinkRate@b& (0+255),w,b
 10495  00250E  A0D8               	btfss	status,0,c
 10496  002510  D005               	goto	l6185
 10497  002512                     u6530:
 10498                           
 10499                           ; BSR set to: 0
 10500  002512  0E00               	movlw	0
 10501  002514  0100               	movlb	0	; () banked
 10502  002516  6FEF               	movwf	(LEDblinkRate@b+1)& (0+255),b
 10503  002518  0E00               	movlw	0
 10504  00251A  6FEE               	movwf	LEDblinkRate@b& (0+255),b
 10505  00251C                     l6185:
 10506                           
 10507                           ; BSR set to: 0
 10508                           ;LED_BarGraph.c: 55: uint8_t writeBuffer[2];
 10509                           ;LED_BarGraph.c: 56: uint16_t timeOut;
 10510                           ;LED_BarGraph.c: 57: writeBuffer[0] = (0x80 | 0x01 | (b << 1));
 10511  00251C  0100               	movlb	0	; () banked
 10512  00251E  51EE               	movf	LEDblinkRate@b& (0+255),w,b
 10513  002520  25EE               	addwf	LEDblinkRate@b& (0+255),w,b
 10514  002522  0981               	iorlw	129
 10515  002524  0100               	movlb	0	; () banked
 10516  002526  6FF1               	movwf	LEDblinkRate@writeBuffer& (0+255),b
 10517                           
 10518                           ; BSR set to: 0
 10519                           ;LED_BarGraph.c: 58: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 10520  002528  0E02               	movlw	2
 10521  00252A  0100               	movlb	0	; () banked
 10522  00252C  6FF5               	movwf	LEDblinkRate@status& (0+255),b
 10523                           
 10524                           ; BSR set to: 0
 10525                           ;LED_BarGraph.c: 60: timeOut = 0;
 10526  00252E  0E00               	movlw	0
 10527  002530  0100               	movlb	0	; () banked
 10528  002532  6FF4               	movwf	(LEDblinkRate@timeOut+1)& (0+255),b
 10529  002534  0E00               	movlw	0
 10530  002536  6FF3               	movwf	LEDblinkRate@timeOut& (0+255),b
 10531                           
 10532                           ;LED_BarGraph.c: 61: while (status != I2C1_MESSAGE_FAIL) {
 10533  002538  D027               	goto	l6211
 10534  00253A                     l6191:
 10535                           
 10536                           ; BSR set to: 0
 10537                           ;LED_BarGraph.c: 63: I2C1_MasterWrite(&writeBuffer,
 10538                           ;LED_BarGraph.c: 64: 1,
 10539                           ;LED_BarGraph.c: 65: i2c_addr,
 10540                           ;LED_BarGraph.c: 66: &status);
 10541  00253A  0EF1               	movlw	low LEDblinkRate@writeBuffer
 10542  00253C  6E24               	movwf	I2C1_MasterWrite@pdata,c
 10543  00253E  0E00               	movlw	high LEDblinkRate@writeBuffer
 10544  002540  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
 10545  002542  0E01               	movlw	1
 10546  002544  6E26               	movwf	I2C1_MasterWrite@length,c
 10547  002546  C0F0  F027         	movff	LEDblinkRate@i2c_addr,I2C1_MasterWrite@address
 10548  00254A  6A28               	clrf	I2C1_MasterWrite@address+1,c
 10549  00254C  0EF5               	movlw	low LEDblinkRate@status
 10550  00254E  6E29               	movwf	I2C1_MasterWrite@pflag,c
 10551  002550  0E00               	movlw	high LEDblinkRate@status
 10552  002552  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
 10553  002554  EC87  F015         	call	_I2C1_MasterWrite	;wreg free
 10554  002558                     l6193:
 10555  002558  0E02               	movlw	2
 10556  00255A  0100               	movlb	0	; () banked
 10557  00255C  19F5               	xorwf	LEDblinkRate@status& (0+255),w,b
 10558  00255E  B4D8               	btfsc	status,2,c
 10559  002560  D7FB               	goto	l6193
 10560                           
 10561                           ; BSR set to: 0
 10562                           ;LED_BarGraph.c: 71: if (status == I2C1_MESSAGE_COMPLETE)
 10563                           
 10564                           ; BSR set to: 0
 10565  002562  0100               	movlb	0	; () banked
 10566  002564  51F5               	movf	LEDblinkRate@status& (0+255),w,b
 10567  002566  0100               	movlb	0	; () banked
 10568  002568  B4D8               	btfsc	status,2,c
 10569  00256A  0012               	return	
 10570                           
 10571                           ; BSR set to: 0
 10572                           ;LED_BarGraph.c: 73: if (timeOut == 100)
 10573                           
 10574                           ; BSR set to: 0
 10575                           
 10576                           ; BSR set to: 0
 10577                           ;LED_BarGraph.c: 72: break;
 10578  00256C  0E64               	movlw	100
 10579  00256E  0100               	movlb	0	; () banked
 10580  002570  19F3               	xorwf	LEDblinkRate@timeOut& (0+255),w,b
 10581  002572  0100               	movlb	0	; () banked
 10582  002574  11F4               	iorwf	(LEDblinkRate@timeOut+1)& (0+255),w,b
 10583  002576  B4D8               	btfsc	status,2,c
 10584  002578  0012               	return	
 10585                           
 10586                           ; BSR set to: 0
 10587                           ;LED_BarGraph.c: 75: if (status == I2C1_MESSAGE_FAIL)
 10588                           
 10589                           ; BSR set to: 0
 10590                           
 10591                           ; BSR set to: 0
 10592                           ;LED_BarGraph.c: 74: break;
 10593  00257A  0100               	movlb	0	; () banked
 10594  00257C  05F5               	decf	LEDblinkRate@status& (0+255),w,b
 10595  00257E  B4D8               	btfsc	status,2,c
 10596  002580  0012               	return	
 10597                           
 10598                           ; BSR set to: 0
 10599                           ;LED_BarGraph.c: 77: else
 10600                           ;LED_BarGraph.c: 78: timeOut++;
 10601                           
 10602                           ; BSR set to: 0
 10603                           
 10604                           ; BSR set to: 0
 10605                           
 10606                           ; BSR set to: 0
 10607                           ;LED_BarGraph.c: 76: break;
 10608  002582  0100               	movlb	0	; () banked
 10609  002584  4BF3               	infsnz	LEDblinkRate@timeOut& (0+255),f,b
 10610  002586  2BF4               	incf	(LEDblinkRate@timeOut+1)& (0+255),f,b
 10611  002588                     l6211:
 10612                           
 10613                           ; BSR set to: 0
 10614  002588  0100               	movlb	0	; () banked
 10615  00258A  05F5               	decf	LEDblinkRate@status& (0+255),w,b
 10616  00258C  B4D8               	btfsc	status,2,c
 10617  00258E  0012               	return	
 10618  002590  D7D4               	goto	l6191
 10619  002592                     __end_of_LEDblinkRate:
 10620                           	opt stack 0
 10621                           tosu	equ	0xFFF
 10622                           tosh	equ	0xFFE
 10623                           tosl	equ	0xFFD
 10624                           pclath	equ	0xFFA
 10625                           tblptru	equ	0xFF8
 10626                           tblptrh	equ	0xFF7
 10627                           tblptrl	equ	0xFF6
 10628                           tablat	equ	0xFF5
 10629                           prodh	equ	0xFF4
 10630                           prodl	equ	0xFF3
 10631                           intcon	equ	0xFF2
 10632                           intcon2	equ	0xFF1
 10633                           postinc0	equ	0xFEE
 10634                           wreg	equ	0xFE8
 10635                           indf2	equ	0xFDF
 10636                           postinc2	equ	0xFDE
 10637                           postdec2	equ	0xFDD
 10638                           plusw2	equ	0xFDB
 10639                           fsr2h	equ	0xFDA
 10640                           fsr2l	equ	0xFD9
 10641                           status	equ	0xFD8
 10642                           
 10643 ;; *************** function _LEDBsetBrightness *****************
 10644 ;; Defined at:
 10645 ;;		line 23 in file "LED_BarGraph.c"
 10646 ;; Parameters:    Size  Location     Type
 10647 ;;  b               2    0[BANK0 ] int 
 10648 ;;  i2c_addr        1    2[BANK0 ] unsigned char 
 10649 ;; Auto vars:     Size  Location     Type
 10650 ;;  writeBuffer     2    3[BANK0 ] unsigned char [2]
 10651 ;;  timeOut         2    5[BANK0 ] unsigned int 
 10652 ;;  status          1    7[BANK0 ] enum E7758
 10653 ;; Return value:  Size  Location     Type
 10654 ;;                  1    wreg      void 
 10655 ;; Registers used:
 10656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10657 ;; Tracked objects:
 10658 ;;		On entry : 0/0
 10659 ;;		On exit  : 0/0
 10660 ;;		Unchanged: 0/0
 10661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10662 ;;      Params:         0       3       0       0       0       0       0
 10663 ;;      Locals:         0       5       0       0       0       0       0
 10664 ;;      Temps:          0       0       0       0       0       0       0
 10665 ;;      Totals:         0       8       0       0       0       0       0
 10666 ;;Total ram usage:        8 bytes
 10667 ;; Hardware stack levels used:    1
 10668 ;; Hardware stack levels required when called:    6
 10669 ;; This function calls:
 10670 ;;		_I2C1_MasterWrite
 10671 ;; This function is called by:
 10672 ;;		_LEDbegin
 10673 ;; This function uses a non-reentrant model
 10674 ;;
 10675                           
 10676                           	psect	text56
 10677  002592                     __ptext56:
 10678                           	opt stack 0
 10679  002592                     _LEDBsetBrightness:
 10680                           	opt stack 23
 10681                           
 10682                           ;LED_BarGraph.c: 24: if (b > 15) b = 15;
 10683                           
 10684                           ; BSR set to: 0
 10685                           ;incstack = 0
 10686  002592  0100               	movlb	0	; () banked
 10687  002594  BFEF               	btfsc	(LEDBsetBrightness@b+1)& (0+255),7,b
 10688  002596  D00D               	goto	l6153
 10689  002598  0100               	movlb	0	; () banked
 10690  00259A  51EF               	movf	(LEDBsetBrightness@b+1)& (0+255),w,b
 10691  00259C  E105               	bnz	u6470
 10692  00259E  0E10               	movlw	16
 10693  0025A0  0100               	movlb	0	; () banked
 10694  0025A2  5DEE               	subwf	LEDBsetBrightness@b& (0+255),w,b
 10695  0025A4  A0D8               	btfss	status,0,c
 10696  0025A6  D005               	goto	l6153
 10697  0025A8                     u6470:
 10698                           
 10699                           ; BSR set to: 0
 10700  0025A8  0E00               	movlw	0
 10701  0025AA  0100               	movlb	0	; () banked
 10702  0025AC  6FEF               	movwf	(LEDBsetBrightness@b+1)& (0+255),b
 10703  0025AE  0E0F               	movlw	15
 10704  0025B0  6FEE               	movwf	LEDBsetBrightness@b& (0+255),b
 10705  0025B2                     l6153:
 10706                           
 10707                           ; BSR set to: 0
 10708                           ;LED_BarGraph.c: 25: uint8_t writeBuffer[2];
 10709                           ;LED_BarGraph.c: 26: uint16_t timeOut;
 10710                           ;LED_BarGraph.c: 27: writeBuffer[0] = (0xE0 | b);
 10711  0025B2  0100               	movlb	0	; () banked
 10712  0025B4  51EE               	movf	LEDBsetBrightness@b& (0+255),w,b
 10713  0025B6  09E0               	iorlw	224
 10714  0025B8  0100               	movlb	0	; () banked
 10715  0025BA  6FF1               	movwf	LEDBsetBrightness@writeBuffer& (0+255),b
 10716                           
 10717                           ; BSR set to: 0
 10718                           ;LED_BarGraph.c: 28: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 10719  0025BC  0E02               	movlw	2
 10720  0025BE  0100               	movlb	0	; () banked
 10721  0025C0  6FF5               	movwf	LEDBsetBrightness@status& (0+255),b
 10722                           
 10723                           ; BSR set to: 0
 10724                           ;LED_BarGraph.c: 30: timeOut = 0;
 10725  0025C2  0E00               	movlw	0
 10726  0025C4  0100               	movlb	0	; () banked
 10727  0025C6  6FF4               	movwf	(LEDBsetBrightness@timeOut+1)& (0+255),b
 10728  0025C8  0E00               	movlw	0
 10729  0025CA  6FF3               	movwf	LEDBsetBrightness@timeOut& (0+255),b
 10730                           
 10731                           ;LED_BarGraph.c: 31: while (status != I2C1_MESSAGE_FAIL) {
 10732  0025CC  D027               	goto	l6179
 10733  0025CE                     l6159:
 10734                           
 10735                           ; BSR set to: 0
 10736                           ;LED_BarGraph.c: 33: I2C1_MasterWrite(&writeBuffer,
 10737                           ;LED_BarGraph.c: 34: 1,
 10738                           ;LED_BarGraph.c: 35: i2c_addr,
 10739                           ;LED_BarGraph.c: 36: &status);
 10740  0025CE  0EF1               	movlw	low LEDBsetBrightness@writeBuffer
 10741  0025D0  6E24               	movwf	I2C1_MasterWrite@pdata,c
 10742  0025D2  0E00               	movlw	high LEDBsetBrightness@writeBuffer
 10743  0025D4  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
 10744  0025D6  0E01               	movlw	1
 10745  0025D8  6E26               	movwf	I2C1_MasterWrite@length,c
 10746  0025DA  C0F0  F027         	movff	LEDBsetBrightness@i2c_addr,I2C1_MasterWrite@address
 10747  0025DE  6A28               	clrf	I2C1_MasterWrite@address+1,c
 10748  0025E0  0EF5               	movlw	low LEDBsetBrightness@status
 10749  0025E2  6E29               	movwf	I2C1_MasterWrite@pflag,c
 10750  0025E4  0E00               	movlw	high LEDBsetBrightness@status
 10751  0025E6  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
 10752  0025E8  EC87  F015         	call	_I2C1_MasterWrite	;wreg free
 10753  0025EC                     l6161:
 10754  0025EC  0E02               	movlw	2
 10755  0025EE  0100               	movlb	0	; () banked
 10756  0025F0  19F5               	xorwf	LEDBsetBrightness@status& (0+255),w,b
 10757  0025F2  B4D8               	btfsc	status,2,c
 10758  0025F4  D7FB               	goto	l6161
 10759                           
 10760                           ; BSR set to: 0
 10761                           ;LED_BarGraph.c: 41: if (status == I2C1_MESSAGE_COMPLETE)
 10762                           
 10763                           ; BSR set to: 0
 10764  0025F6  0100               	movlb	0	; () banked
 10765  0025F8  51F5               	movf	LEDBsetBrightness@status& (0+255),w,b
 10766  0025FA  0100               	movlb	0	; () banked
 10767  0025FC  B4D8               	btfsc	status,2,c
 10768  0025FE  0012               	return	
 10769                           
 10770                           ; BSR set to: 0
 10771                           ;LED_BarGraph.c: 43: if (timeOut == 100)
 10772                           
 10773                           ; BSR set to: 0
 10774                           
 10775                           ; BSR set to: 0
 10776                           ;LED_BarGraph.c: 42: break;
 10777  002600  0E64               	movlw	100
 10778  002602  0100               	movlb	0	; () banked
 10779  002604  19F3               	xorwf	LEDBsetBrightness@timeOut& (0+255),w,b
 10780  002606  0100               	movlb	0	; () banked
 10781  002608  11F4               	iorwf	(LEDBsetBrightness@timeOut+1)& (0+255),w,b
 10782  00260A  B4D8               	btfsc	status,2,c
 10783  00260C  0012               	return	
 10784                           
 10785                           ; BSR set to: 0
 10786                           ;LED_BarGraph.c: 45: if (status == I2C1_MESSAGE_FAIL)
 10787                           
 10788                           ; BSR set to: 0
 10789                           
 10790                           ; BSR set to: 0
 10791                           ;LED_BarGraph.c: 44: break;
 10792  00260E  0100               	movlb	0	; () banked
 10793  002610  05F5               	decf	LEDBsetBrightness@status& (0+255),w,b
 10794  002612  B4D8               	btfsc	status,2,c
 10795  002614  0012               	return	
 10796                           
 10797                           ; BSR set to: 0
 10798                           ;LED_BarGraph.c: 47: else
 10799                           ;LED_BarGraph.c: 48: timeOut++;
 10800                           
 10801                           ; BSR set to: 0
 10802                           
 10803                           ; BSR set to: 0
 10804                           
 10805                           ; BSR set to: 0
 10806                           ;LED_BarGraph.c: 46: break;
 10807  002616  0100               	movlb	0	; () banked
 10808  002618  4BF3               	infsnz	LEDBsetBrightness@timeOut& (0+255),f,b
 10809  00261A  2BF4               	incf	(LEDBsetBrightness@timeOut+1)& (0+255),f,b
 10810  00261C                     l6179:
 10811                           
 10812                           ; BSR set to: 0
 10813  00261C  0100               	movlb	0	; () banked
 10814  00261E  05F5               	decf	LEDBsetBrightness@status& (0+255),w,b
 10815  002620  B4D8               	btfsc	status,2,c
 10816  002622  0012               	return	
 10817  002624  D7D4               	goto	l6159
 10818  002626                     __end_of_LEDBsetBrightness:
 10819                           	opt stack 0
 10820                           tosu	equ	0xFFF
 10821                           tosh	equ	0xFFE
 10822                           tosl	equ	0xFFD
 10823                           pclath	equ	0xFFA
 10824                           tblptru	equ	0xFF8
 10825                           tblptrh	equ	0xFF7
 10826                           tblptrl	equ	0xFF6
 10827                           tablat	equ	0xFF5
 10828                           prodh	equ	0xFF4
 10829                           prodl	equ	0xFF3
 10830                           intcon	equ	0xFF2
 10831                           intcon2	equ	0xFF1
 10832                           postinc0	equ	0xFEE
 10833                           wreg	equ	0xFE8
 10834                           indf2	equ	0xFDF
 10835                           postinc2	equ	0xFDE
 10836                           postdec2	equ	0xFDD
 10837                           plusw2	equ	0xFDB
 10838                           fsr2h	equ	0xFDA
 10839                           fsr2l	equ	0xFD9
 10840                           status	equ	0xFD8
 10841                           
 10842 ;; *************** function _I2C1_MasterWrite *****************
 10843 ;; Defined at:
 10844 ;;		line 551 in file "mcc_generated_files/i2c1.c"
 10845 ;; Parameters:    Size  Location     Type
 10846 ;;  pdata           2   35[COMRAM] PTR unsigned char 
 10847 ;;		 -> LEDwriteDisplay@writeBuffer(20), LEDbegin@writeBuffer(3), LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBu
      +ffer(2), 
 10848 ;;  length          1   37[COMRAM] unsigned char 
 10849 ;;  address         2   38[COMRAM] unsigned int 
 10850 ;;  pflag           2   40[COMRAM] PTR enum E7739
 10851 ;;		 -> LEDwriteDisplay@status(1), LEDbegin@status(1), LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
 10852 ;; Auto vars:     Size  Location     Type
 10853 ;;		None
 10854 ;; Return value:  Size  Location     Type
 10855 ;;                  1    wreg      void 
 10856 ;; Registers used:
 10857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10858 ;; Tracked objects:
 10859 ;;		On entry : 0/0
 10860 ;;		On exit  : 0/0
 10861 ;;		Unchanged: 0/0
 10862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10863 ;;      Params:         7       0       0       0       0       0       0
 10864 ;;      Locals:         0       0       0       0       0       0       0
 10865 ;;      Temps:          0       0       0       0       0       0       0
 10866 ;;      Totals:         7       0       0       0       0       0       0
 10867 ;;Total ram usage:        7 bytes
 10868 ;; Hardware stack levels used:    1
 10869 ;; Hardware stack levels required when called:    5
 10870 ;; This function calls:
 10871 ;;		_I2C1_MasterTRBInsert
 10872 ;;		_I2C1_MasterWriteTRBBuild
 10873 ;; This function is called by:
 10874 ;;		_LEDBsetBrightness
 10875 ;;		_LEDblinkRate
 10876 ;;		_LEDbegin
 10877 ;;		_LEDwriteDisplay
 10878 ;; This function uses a non-reentrant model
 10879 ;;
 10880                           
 10881                           	psect	text57
 10882  002B0E                     __ptext57:
 10883                           	opt stack 0
 10884  002B0E                     _I2C1_MasterWrite:
 10885                           	opt stack 24
 10886                           
 10887                           ;i2c1.c: 557: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
 10888                           ;i2c1.c: 560: if (i2c1_object.trStatus.s.full != 1)
 10889                           
 10890                           ; BSR set to: 0
 10891                           ;incstack = 0
 10892  002B0E  0100               	movlb	0	; () banked
 10893  002B10  B1BC               	btfsc	(_i2c1_object+4)& (0+255),0,b
 10894  002B12  D01C               	goto	l5751
 10895                           
 10896                           ; BSR set to: 0
 10897                           ;i2c1.c: 561: {
 10898                           ;i2c1.c: 562: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
 10899  002B14  0EE4               	movlw	low I2C1_MasterWrite@trBlock
 10900  002B16  6E1B               	movwf	I2C1_MasterWriteTRBBuild@ptrb,c
 10901  002B18  0E00               	movlw	high I2C1_MasterWrite@trBlock
 10902  002B1A  6E1C               	movwf	I2C1_MasterWriteTRBBuild@ptrb+1,c
 10903  002B1C  C024  F01D         	movff	I2C1_MasterWrite@pdata,I2C1_MasterWriteTRBBuild@pdata
 10904  002B20  C025  F01E         	movff	I2C1_MasterWrite@pdata+1,I2C1_MasterWriteTRBBuild@pdata+1
 10905  002B24  C026  F01F         	movff	I2C1_MasterWrite@length,I2C1_MasterWriteTRBBuild@length
 10906  002B28  C027  F020         	movff	I2C1_MasterWrite@address,I2C1_MasterWriteTRBBuild@address
 10907  002B2C  C028  F021         	movff	I2C1_MasterWrite@address+1,I2C1_MasterWriteTRBBuild@address+1
 10908  002B30  ECF4  F015         	call	_I2C1_MasterWriteTRBBuild	;wreg free
 10909                           
 10910                           ;i2c1.c: 563: I2C1_MasterTRBInsert(1, &trBlock, pflag);
 10911  002B34  0EE4               	movlw	low I2C1_MasterWrite@trBlock
 10912  002B36  6E1B               	movwf	I2C1_MasterTRBInsert@ptrb_list,c
 10913  002B38  0E00               	movlw	high I2C1_MasterWrite@trBlock
 10914  002B3A  6E1C               	movwf	I2C1_MasterTRBInsert@ptrb_list+1,c
 10915  002B3C  C029  F01D         	movff	I2C1_MasterWrite@pflag,I2C1_MasterTRBInsert@pflag
 10916  002B40  C02A  F01E         	movff	I2C1_MasterWrite@pflag+1,I2C1_MasterTRBInsert@pflag+1
 10917  002B44  0E01               	movlw	1
 10918  002B46  EC2C  F011         	call	_I2C1_MasterTRBInsert
 10919                           
 10920                           ;i2c1.c: 564: }
 10921  002B4A  0012               	return	
 10922  002B4C                     l5751:
 10923                           
 10924                           ;i2c1.c: 565: else
 10925                           ;i2c1.c: 566: {
 10926                           ;i2c1.c: 567: *pflag = I2C1_MESSAGE_FAIL;
 10927  002B4C  C029  FFD9         	movff	I2C1_MasterWrite@pflag,fsr2l
 10928  002B50  C02A  FFDA         	movff	I2C1_MasterWrite@pflag+1,fsr2h
 10929  002B54  0E01               	movlw	1
 10930  002B56  6EDF               	movwf	indf2,c
 10931  002B58  0012               	return	
 10932  002B5A                     __end_of_I2C1_MasterWrite:
 10933                           	opt stack 0
 10934                           tosu	equ	0xFFF
 10935                           tosh	equ	0xFFE
 10936                           tosl	equ	0xFFD
 10937                           pclath	equ	0xFFA
 10938                           tblptru	equ	0xFF8
 10939                           tblptrh	equ	0xFF7
 10940                           tblptrl	equ	0xFF6
 10941                           tablat	equ	0xFF5
 10942                           prodh	equ	0xFF4
 10943                           prodl	equ	0xFF3
 10944                           intcon	equ	0xFF2
 10945                           intcon2	equ	0xFF1
 10946                           postinc0	equ	0xFEE
 10947                           wreg	equ	0xFE8
 10948                           indf2	equ	0xFDF
 10949                           postinc2	equ	0xFDE
 10950                           postdec2	equ	0xFDD
 10951                           plusw2	equ	0xFDB
 10952                           fsr2h	equ	0xFDA
 10953                           fsr2l	equ	0xFD9
 10954                           status	equ	0xFD8
 10955                           
 10956 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 10957 ;; Defined at:
 10958 ;;		line 660 in file "mcc_generated_files/i2c1.c"
 10959 ;; Parameters:    Size  Location     Type
 10960 ;;  ptrb            2   26[COMRAM] PTR struct .
 10961 ;;		 -> I2C1_MasterWrite@trBlock(5), 
 10962 ;;  pdata           2   28[COMRAM] PTR unsigned char 
 10963 ;;		 -> LEDwriteDisplay@writeBuffer(20), LEDbegin@writeBuffer(3), LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBu
      +ffer(2), 
 10964 ;;  length          1   30[COMRAM] unsigned char 
 10965 ;;  address         2   31[COMRAM] unsigned int 
 10966 ;; Auto vars:     Size  Location     Type
 10967 ;;		None
 10968 ;; Return value:  Size  Location     Type
 10969 ;;                  1    wreg      void 
 10970 ;; Registers used:
 10971 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10972 ;; Tracked objects:
 10973 ;;		On entry : 0/0
 10974 ;;		On exit  : 0/0
 10975 ;;		Unchanged: 0/0
 10976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10977 ;;      Params:         7       0       0       0       0       0       0
 10978 ;;      Locals:         0       0       0       0       0       0       0
 10979 ;;      Temps:          2       0       0       0       0       0       0
 10980 ;;      Totals:         9       0       0       0       0       0       0
 10981 ;;Total ram usage:        9 bytes
 10982 ;; Hardware stack levels used:    1
 10983 ;; Hardware stack levels required when called:    4
 10984 ;; This function calls:
 10985 ;;		Nothing
 10986 ;; This function is called by:
 10987 ;;		_I2C1_MasterWrite
 10988 ;; This function uses a non-reentrant model
 10989 ;;
 10990                           
 10991                           	psect	text58
 10992  002BE8                     __ptext58:
 10993                           	opt stack 0
 10994  002BE8                     _I2C1_MasterWriteTRBBuild:
 10995                           	opt stack 24
 10996                           
 10997                           ;i2c1.c: 666: ptrb->address = address << 1;
 10998                           
 10999                           ;incstack = 0
 11000  002BE8  C020  F022         	movff	I2C1_MasterWriteTRBBuild@address,??_I2C1_MasterWriteTRBBuild
 11001  002BEC  C021  F023         	movff	I2C1_MasterWriteTRBBuild@address+1,??_I2C1_MasterWriteTRBBuild+1
 11002  002BF0  90D8               	bcf	status,0,c
 11003  002BF2  3622               	rlcf	??_I2C1_MasterWriteTRBBuild,f,c
 11004  002BF4  3623               	rlcf	??_I2C1_MasterWriteTRBBuild+1,f,c
 11005  002BF6  C01B  FFD9         	movff	I2C1_MasterWriteTRBBuild@ptrb,fsr2l
 11006  002BFA  C01C  FFDA         	movff	I2C1_MasterWriteTRBBuild@ptrb+1,fsr2h
 11007  002BFE  C022  FFDE         	movff	??_I2C1_MasterWriteTRBBuild,postinc2
 11008  002C02  C023  FFDD         	movff	??_I2C1_MasterWriteTRBBuild+1,postdec2
 11009                           
 11010                           ;i2c1.c: 667: ptrb->length = length;
 11011  002C06  EE20 F002          	lfsr	2,2
 11012  002C0A  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
 11013  002C0C  26D9               	addwf	fsr2l,f,c
 11014  002C0E  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
 11015  002C10  22DA               	addwfc	fsr2h,f,c
 11016  002C12  C01F  FFDF         	movff	I2C1_MasterWriteTRBBuild@length,indf2
 11017                           
 11018                           ;i2c1.c: 668: ptrb->pbuffer = pdata;
 11019  002C16  EE20 F003          	lfsr	2,3
 11020  002C1A  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
 11021  002C1C  26D9               	addwf	fsr2l,f,c
 11022  002C1E  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
 11023  002C20  22DA               	addwfc	fsr2h,f,c
 11024  002C22  C01D  FFDE         	movff	I2C1_MasterWriteTRBBuild@pdata,postinc2
 11025  002C26  C01E  FFDD         	movff	I2C1_MasterWriteTRBBuild@pdata+1,postdec2
 11026  002C2A  0012               	return		;funcret
 11027  002C2C                     __end_of_I2C1_MasterWriteTRBBuild:
 11028                           	opt stack 0
 11029                           tosu	equ	0xFFF
 11030                           tosh	equ	0xFFE
 11031                           tosl	equ	0xFFD
 11032                           pclath	equ	0xFFA
 11033                           tblptru	equ	0xFF8
 11034                           tblptrh	equ	0xFF7
 11035                           tblptrl	equ	0xFF6
 11036                           tablat	equ	0xFF5
 11037                           prodh	equ	0xFF4
 11038                           prodl	equ	0xFF3
 11039                           intcon	equ	0xFF2
 11040                           intcon2	equ	0xFF1
 11041                           postinc0	equ	0xFEE
 11042                           wreg	equ	0xFE8
 11043                           indf2	equ	0xFDF
 11044                           postinc2	equ	0xFDE
 11045                           postdec2	equ	0xFDD
 11046                           plusw2	equ	0xFDB
 11047                           fsr2h	equ	0xFDA
 11048                           fsr2l	equ	0xFD9
 11049                           status	equ	0xFD8
 11050                           
 11051 ;; *************** function _I2C1_MasterTRBInsert *****************
 11052 ;; Defined at:
 11053 ;;		line 594 in file "mcc_generated_files/i2c1.c"
 11054 ;; Parameters:    Size  Location     Type
 11055 ;;  count           1    wreg     unsigned char 
 11056 ;;  ptrb_list       2   26[COMRAM] PTR struct .
 11057 ;;		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
 11058 ;;  pflag           2   28[COMRAM] PTR enum E7739
 11059 ;;		 -> LEDwriteDisplay@status(1), LEDbegin@status(1), LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
 11060 ;; Auto vars:     Size  Location     Type
 11061 ;;  count           1   31[COMRAM] unsigned char 
 11062 ;; Return value:  Size  Location     Type
 11063 ;;                  1    wreg      void 
 11064 ;; Registers used:
 11065 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11066 ;; Tracked objects:
 11067 ;;		On entry : 0/0
 11068 ;;		On exit  : 0/0
 11069 ;;		Unchanged: 0/0
 11070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11071 ;;      Params:         4       0       0       0       0       0       0
 11072 ;;      Locals:         1       0       0       0       0       0       0
 11073 ;;      Temps:          1       0       0       0       0       0       0
 11074 ;;      Totals:         6       0       0       0       0       0       0
 11075 ;;Total ram usage:        6 bytes
 11076 ;; Hardware stack levels used:    1
 11077 ;; Hardware stack levels required when called:    4
 11078 ;; This function calls:
 11079 ;;		Nothing
 11080 ;; This function is called by:
 11081 ;;		_I2C1_MasterWrite
 11082 ;;		_I2C1_MasterRead
 11083 ;; This function uses a non-reentrant model
 11084 ;;
 11085                           
 11086                           	psect	text59
 11087  002258                     __ptext59:
 11088                           	opt stack 0
 11089  002258                     _I2C1_MasterTRBInsert:
 11090                           	opt stack 24
 11091                           
 11092                           ;incstack = 0
 11093                           ;I2C1_MasterTRBInsert@count stored from wreg
 11094  002258  6E20               	movwf	I2C1_MasterTRBInsert@count,c
 11095                           
 11096                           ;i2c1.c: 601: if (i2c1_object.trStatus.s.full != 1)
 11097  00225A  0100               	movlb	0	; () banked
 11098  00225C  B1BC               	btfsc	(_i2c1_object+4)& (0+255),0,b
 11099  00225E  D046               	goto	l5567
 11100                           
 11101                           ; BSR set to: 0
 11102                           ;i2c1.c: 602: {
 11103                           ;i2c1.c: 603: *pflag = I2C1_MESSAGE_PENDING;
 11104  002260  C01D  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 11105  002264  C01E  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 11106  002268  0E02               	movlw	2
 11107  00226A  6EDF               	movwf	indf2,c
 11108                           
 11109                           ; BSR set to: 0
 11110                           ;i2c1.c: 605: i2c1_object.pTrTail->ptrb_list = ptrb_list;
 11111  00226C  0100               	movlb	0	; () banked
 11112  00226E  EE20 F001          	lfsr	2,1
 11113  002272  51B8               	movf	_i2c1_object& (0+255),w,b
 11114  002274  26D9               	addwf	fsr2l,f,c
 11115  002276  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 11116  002278  22DA               	addwfc	fsr2h,f,c
 11117  00227A  C01B  FFDE         	movff	I2C1_MasterTRBInsert@ptrb_list,postinc2
 11118  00227E  C01C  FFDD         	movff	I2C1_MasterTRBInsert@ptrb_list+1,postdec2
 11119                           
 11120                           ; BSR set to: 0
 11121                           ;i2c1.c: 606: i2c1_object.pTrTail->count = count;
 11122  002282  C0B8  FFD9         	movff	_i2c1_object,fsr2l
 11123  002286  C0B9  FFDA         	movff	_i2c1_object+1,fsr2h
 11124  00228A  C020  FFDF         	movff	I2C1_MasterTRBInsert@count,indf2
 11125                           
 11126                           ; BSR set to: 0
 11127                           ;i2c1.c: 607: i2c1_object.pTrTail->pTrFlag = pflag;
 11128  00228E  0100               	movlb	0	; () banked
 11129  002290  EE20 F003          	lfsr	2,3
 11130  002294  51B8               	movf	_i2c1_object& (0+255),w,b
 11131  002296  26D9               	addwf	fsr2l,f,c
 11132  002298  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 11133  00229A  22DA               	addwfc	fsr2h,f,c
 11134  00229C  C01D  FFDE         	movff	I2C1_MasterTRBInsert@pflag,postinc2
 11135  0022A0  C01E  FFDD         	movff	I2C1_MasterTRBInsert@pflag+1,postdec2
 11136                           
 11137                           ; BSR set to: 0
 11138                           ;i2c1.c: 608: i2c1_object.pTrTail++;
 11139  0022A4  0E05               	movlw	5
 11140  0022A6  0100               	movlb	0	; () banked
 11141  0022A8  27B8               	addwf	_i2c1_object& (0+255),f,b
 11142  0022AA  0E00               	movlw	0
 11143  0022AC  23B9               	addwfc	(_i2c1_object+1)& (0+255),f,b
 11144                           
 11145                           ; BSR set to: 0
 11146                           ;i2c1.c: 611: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
 11147  0022AE  0EEE               	movlw	low (_i2c1_tr_queue+5)
 11148  0022B0  0100               	movlb	0	; () banked
 11149  0022B2  19B8               	xorwf	_i2c1_object& (0+255),w,b
 11150  0022B4  E10B               	bnz	l5563
 11151  0022B6  0E00               	movlw	high (_i2c1_tr_queue+5)
 11152  0022B8  0100               	movlb	0	; () banked
 11153  0022BA  19B9               	xorwf	(_i2c1_object+1)& (0+255),w,b
 11154  0022BC  A4D8               	btfss	status,2,c
 11155  0022BE  D006               	goto	l5563
 11156                           
 11157                           ; BSR set to: 0
 11158                           ;i2c1.c: 612: {
 11159                           ;i2c1.c: 614: i2c1_object.pTrTail = i2c1_tr_queue;
 11160  0022C0  0EE9               	movlw	low _i2c1_tr_queue
 11161  0022C2  0100               	movlb	0	; () banked
 11162  0022C4  6FB8               	movwf	_i2c1_object& (0+255),b
 11163  0022C6  0E00               	movlw	high _i2c1_tr_queue
 11164  0022C8  0100               	movlb	0	; () banked
 11165  0022CA  6FB9               	movwf	(_i2c1_object+1)& (0+255),b
 11166  0022CC                     l5563:
 11167                           
 11168                           ; BSR set to: 0
 11169                           ;i2c1.c: 615: }
 11170                           ;i2c1.c: 619: i2c1_object.trStatus.s.empty = 0;
 11171  0022CC  0100               	movlb	0	; () banked
 11172  0022CE  93BC               	bcf	(_i2c1_object+4)& (0+255),1,b
 11173                           
 11174                           ;i2c1.c: 622: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
 11175  0022D0  0100               	movlb	0	; () banked
 11176  0022D2  51B8               	movf	_i2c1_object& (0+255),w,b
 11177  0022D4  0100               	movlb	0	; () banked
 11178  0022D6  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 11179  0022D8  E10F               	bnz	l5569
 11180  0022DA  0100               	movlb	0	; () banked
 11181  0022DC  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 11182  0022DE  0100               	movlb	0	; () banked
 11183  0022E0  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 11184  0022E2  A4D8               	btfss	status,2,c
 11185  0022E4  D009               	goto	l5569
 11186                           
 11187                           ; BSR set to: 0
 11188                           ;i2c1.c: 623: {
 11189                           ;i2c1.c: 625: i2c1_object.trStatus.s.full = 1;
 11190  0022E6  0100               	movlb	0	; () banked
 11191  0022E8  81BC               	bsf	(_i2c1_object+4)& (0+255),0,b
 11192                           
 11193                           ; BSR set to: 0
 11194                           ;i2c1.c: 626: }
 11195                           ;i2c1.c: 628: }
 11196  0022EA  D006               	goto	l5569
 11197  0022EC                     l5567:
 11198                           
 11199                           ; BSR set to: 0
 11200                           ;i2c1.c: 629: else
 11201                           ;i2c1.c: 630: {
 11202                           ;i2c1.c: 631: *pflag = I2C1_MESSAGE_FAIL;
 11203  0022EC  C01D  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 11204  0022F0  C01E  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 11205  0022F4  0E01               	movlw	1
 11206  0022F6  6EDF               	movwf	indf2,c
 11207  0022F8                     l5569:
 11208                           
 11209                           ; BSR set to: 0
 11210                           ;i2c1.c: 632: }
 11211                           ;i2c1.c: 635: if (*pflag == I2C1_MESSAGE_PENDING)
 11212  0022F8  C01D  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 11213  0022FC  C01E  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 11214  002300  0E02               	movlw	2
 11215  002302  18DE               	xorwf	postinc2,w,c
 11216  002304  A4D8               	btfss	status,2,c
 11217  002306  0012               	return	
 11218  002308                     l5573:
 11219  002308  5038               	movf	_i2c1_state,w,c
 11220  00230A  A4D8               	btfss	status,2,c
 11221  00230C  D7FD               	goto	l5573
 11222                           
 11223                           ;i2c1.c: 638: {
 11224                           ;i2c1.c: 641: PIR1bits.SSP1IF = 1;
 11225  00230E  869E               	bsf	3998,3,c	;volatile
 11226  002310  0012               	return	
 11227  002312                     __end_of_I2C1_MasterTRBInsert:
 11228                           	opt stack 0
 11229                           tosu	equ	0xFFF
 11230                           tosh	equ	0xFFE
 11231                           tosl	equ	0xFFD
 11232                           pclath	equ	0xFFA
 11233                           tblptru	equ	0xFF8
 11234                           tblptrh	equ	0xFF7
 11235                           tblptrl	equ	0xFF6
 11236                           tablat	equ	0xFF5
 11237                           prodh	equ	0xFF4
 11238                           prodl	equ	0xFF3
 11239                           intcon	equ	0xFF2
 11240                           intcon2	equ	0xFF1
 11241                           postinc0	equ	0xFEE
 11242                           wreg	equ	0xFE8
 11243                           indf2	equ	0xFDF
 11244                           postinc2	equ	0xFDE
 11245                           postdec2	equ	0xFDD
 11246                           plusw2	equ	0xFDB
 11247                           fsr2h	equ	0xFDA
 11248                           fsr2l	equ	0xFD9
 11249                           status	equ	0xFD8
 11250                           
 11251 ;; *************** function _INTERRUPT_InterruptManager *****************
 11252 ;; Defined at:
 11253 ;;		line 75 in file "mcc_generated_files/interrupt_manager.c"
 11254 ;; Parameters:    Size  Location     Type
 11255 ;;		None
 11256 ;; Auto vars:     Size  Location     Type
 11257 ;;		None
 11258 ;; Return value:  Size  Location     Type
 11259 ;;                  1    wreg      void 
 11260 ;; Registers used:
 11261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 11262 ;; Tracked objects:
 11263 ;;		On entry : 0/0
 11264 ;;		On exit  : 0/0
 11265 ;;		Unchanged: 0/0
 11266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11267 ;;      Params:         0       0       0       0       0       0       0
 11268 ;;      Locals:         0       0       0       0       0       0       0
 11269 ;;      Temps:         14       0       0       0       0       0       0
 11270 ;;      Totals:        14       0       0       0       0       0       0
 11271 ;;Total ram usage:       14 bytes
 11272 ;; Hardware stack levels used:    1
 11273 ;; Hardware stack levels required when called:    3
 11274 ;; This function calls:
 11275 ;;		_ADC_ISR
 11276 ;;		_EUSART1_Receive_ISR
 11277 ;;		_EUSART1_Transmit_ISR
 11278 ;;		_I2C1_BusCollisionISR
 11279 ;;		_I2C1_ISR
 11280 ;;		_TMR0_ISR
 11281 ;;		_TMR2_ISR
 11282 ;; This function is called by:
 11283 ;;		Interrupt level 2
 11284 ;; This function uses a non-reentrant model
 11285 ;;
 11286                           
 11287                           	psect	intcode
 11288  000008                     __pintcode:
 11289                           	opt stack 0
 11290  000008                     _INTERRUPT_InterruptManager:
 11291                           	opt stack 21
 11292                           
 11293                           ;incstack = 0
 11294  000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11295  00000A  CFFA F00D          	movff	pclath,??_INTERRUPT_InterruptManager
 11296  00000E  CFFB F00E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 11297  000012  CFE9 F00F          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 11298  000016  CFEA F010          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 11299  00001A  CFE1 F011          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 11300  00001E  CFE2 F012          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 11301  000022  CFD9 F013          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 11302  000026  CFDA F014          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 11303  00002A  CFF3 F015          	movff	prodl,??_INTERRUPT_InterruptManager+8
 11304  00002E  CFF4 F016          	movff	prodh,??_INTERRUPT_InterruptManager+9
 11305  000032  CFF6 F017          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 11306  000036  CFF7 F018          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 11307  00003A  CFF8 F019          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 11308  00003E  CFF5 F01A          	movff	tablat,??_INTERRUPT_InterruptManager+13
 11309                           
 11310                           ;interrupt_manager.c: 78: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
 11311  000042  BA9D               	btfsc	3997,5,c	;volatile
 11312  000044  AA9E               	btfss	3998,5,c	;volatile
 11313  000046  D003               	goto	i2l318
 11314                           
 11315                           ;interrupt_manager.c: 79: {
 11316                           ;interrupt_manager.c: 80: EUSART1_Receive_ISR();
 11317  000048  ECA5  F017         	call	_EUSART1_Receive_ISR	;wreg free
 11318                           
 11319                           ;interrupt_manager.c: 81: }
 11320  00004C  D023               	goto	i2l332
 11321  00004E                     i2l318:
 11322                           
 11323                           ;interrupt_manager.c: 82: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
 11324  00004E  B89D               	btfsc	3997,4,c	;volatile
 11325  000050  A89E               	btfss	3998,4,c	;volatile
 11326  000052  D003               	goto	i2l320
 11327                           
 11328                           ;interrupt_manager.c: 83: {
 11329                           ;interrupt_manager.c: 84: EUSART1_Transmit_ISR();
 11330  000054  ECAA  F016         	call	_EUSART1_Transmit_ISR	;wreg free
 11331                           
 11332                           ;interrupt_manager.c: 85: }
 11333  000058  D01D               	goto	i2l332
 11334  00005A                     i2l320:
 11335                           
 11336                           ;interrupt_manager.c: 86: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 11337  00005A  BAF2               	btfsc	intcon,5,c	;volatile
 11338  00005C  A4F2               	btfss	intcon,2,c	;volatile
 11339  00005E  D003               	goto	i2l322
 11340                           
 11341                           ;interrupt_manager.c: 87: {
 11342                           ;interrupt_manager.c: 88: TMR0_ISR();
 11343  000060  EC00  F015         	call	_TMR0_ISR	;wreg free
 11344                           
 11345                           ;interrupt_manager.c: 89: }
 11346  000064  D017               	goto	i2l332
 11347  000066                     i2l322:
 11348                           
 11349                           ;interrupt_manager.c: 90: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
 11350  000066  B29D               	btfsc	3997,1,c	;volatile
 11351  000068  A29E               	btfss	3998,1,c	;volatile
 11352  00006A  D003               	goto	i2l324
 11353                           
 11354                           ;interrupt_manager.c: 91: {
 11355                           ;interrupt_manager.c: 92: TMR2_ISR();
 11356  00006C  EC1A  F018         	call	_TMR2_ISR	;wreg free
 11357                           
 11358                           ;interrupt_manager.c: 93: }
 11359  000070  D011               	goto	i2l332
 11360  000072                     i2l324:
 11361                           
 11362                           ;interrupt_manager.c: 94: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 11363  000072  BC9D               	btfsc	3997,6,c	;volatile
 11364  000074  AC9E               	btfss	3998,6,c	;volatile
 11365  000076  D003               	goto	i2l326
 11366                           
 11367                           ;interrupt_manager.c: 95: {
 11368                           ;interrupt_manager.c: 96: ADC_ISR();
 11369  000078  EC22  F018         	call	_ADC_ISR	;wreg free
 11370                           
 11371                           ;interrupt_manager.c: 97: }
 11372  00007C  D00B               	goto	i2l332
 11373  00007E                     i2l326:
 11374                           
 11375                           ;interrupt_manager.c: 98: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 11376  00007E  B69D               	btfsc	3997,3,c	;volatile
 11377  000080  A69E               	btfss	3998,3,c	;volatile
 11378  000082  D003               	goto	i2l328
 11379                           
 11380                           ;interrupt_manager.c: 99: {
 11381                           ;interrupt_manager.c: 100: I2C1_ISR();
 11382  000084  EC1C  F007         	call	_I2C1_ISR	;wreg free
 11383                           
 11384                           ;interrupt_manager.c: 101: }
 11385  000088  D005               	goto	i2l332
 11386  00008A                     i2l328:
 11387                           
 11388                           ;interrupt_manager.c: 102: else if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
 11389  00008A  B6A0               	btfsc	4000,3,c	;volatile
 11390  00008C  A6A1               	btfss	4001,3,c	;volatile
 11391  00008E  D002               	goto	i2l332
 11392                           
 11393                           ;interrupt_manager.c: 103: {
 11394                           ;interrupt_manager.c: 104: I2C1_BusCollisionISR();
 11395  000090  EC26  F018         	call	_I2C1_BusCollisionISR	;wreg free
 11396  000094                     i2l332:
 11397  000094  C01A  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 11398  000098  C019  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 11399  00009C  C018  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 11400  0000A0  C017  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 11401  0000A4  C016  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 11402  0000A8  C015  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 11403  0000AC  C014  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 11404  0000B0  C013  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 11405  0000B4  C012  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 11406  0000B8  C011  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 11407  0000BC  C010  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 11408  0000C0  C00F  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 11409  0000C4  C00E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 11410  0000C8  C00D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 11411  0000CC  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11412  0000CE  0011               	retfie		f
 11413  0000D0                     __end_of_INTERRUPT_InterruptManager:
 11414                           	opt stack 0
 11415                           tosu	equ	0xFFF
 11416                           tosh	equ	0xFFE
 11417                           tosl	equ	0xFFD
 11418                           pclatu	equ	0xFFB
 11419                           pclath	equ	0xFFA
 11420                           tblptru	equ	0xFF8
 11421                           tblptrh	equ	0xFF7
 11422                           tblptrl	equ	0xFF6
 11423                           tablat	equ	0xFF5
 11424                           prodh	equ	0xFF4
 11425                           prodl	equ	0xFF3
 11426                           intcon	equ	0xFF2
 11427                           intcon2	equ	0xFF1
 11428                           postinc0	equ	0xFEE
 11429                           fsr0h	equ	0xFEA
 11430                           fsr0l	equ	0xFE9
 11431                           wreg	equ	0xFE8
 11432                           fsr1h	equ	0xFE2
 11433                           fsr1l	equ	0xFE1
 11434                           indf2	equ	0xFDF
 11435                           postinc2	equ	0xFDE
 11436                           postdec2	equ	0xFDD
 11437                           plusw2	equ	0xFDB
 11438                           fsr2h	equ	0xFDA
 11439                           fsr2l	equ	0xFD9
 11440                           status	equ	0xFD8
 11441                           
 11442 ;; *************** function _TMR2_ISR *****************
 11443 ;; Defined at:
 11444 ;;		line 120 in file "mcc_generated_files/tmr2.c"
 11445 ;; Parameters:    Size  Location     Type
 11446 ;;		None
 11447 ;; Auto vars:     Size  Location     Type
 11448 ;;		None
 11449 ;; Return value:  Size  Location     Type
 11450 ;;                  2  294[None  ] int 
 11451 ;; Registers used:
 11452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 11453 ;; Tracked objects:
 11454 ;;		On entry : 0/0
 11455 ;;		On exit  : 0/0
 11456 ;;		Unchanged: 0/0
 11457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11458 ;;      Params:         0       0       0       0       0       0       0
 11459 ;;      Locals:         0       0       0       0       0       0       0
 11460 ;;      Temps:          0       0       0       0       0       0       0
 11461 ;;      Totals:         0       0       0       0       0       0       0
 11462 ;;Total ram usage:        0 bytes
 11463 ;; Hardware stack levels used:    1
 11464 ;; Hardware stack levels required when called:    2
 11465 ;; This function calls:
 11466 ;;		_TMR2_CallBack
 11467 ;; This function is called by:
 11468 ;;		_INTERRUPT_InterruptManager
 11469 ;; This function uses a non-reentrant model
 11470 ;;
 11471                           
 11472                           	psect	text61
 11473  003034                     __ptext61:
 11474                           	opt stack 0
 11475  003034                     _TMR2_ISR:
 11476                           	opt stack 21
 11477                           
 11478                           ;tmr2.c: 124: PIR1bits.TMR2IF = 0;
 11479                           
 11480                           ;incstack = 0
 11481  003034  929E               	bcf	3998,1,c	;volatile
 11482                           
 11483                           ;tmr2.c: 128: TMR2_CallBack();
 11484  003036  EC56  F008         	call	_TMR2_CallBack	;wreg free
 11485  00303A  0012               	return		;funcret
 11486  00303C                     __end_of_TMR2_ISR:
 11487                           	opt stack 0
 11488                           tosu	equ	0xFFF
 11489                           tosh	equ	0xFFE
 11490                           tosl	equ	0xFFD
 11491                           pclatu	equ	0xFFB
 11492                           pclath	equ	0xFFA
 11493                           tblptru	equ	0xFF8
 11494                           tblptrh	equ	0xFF7
 11495                           tblptrl	equ	0xFF6
 11496                           tablat	equ	0xFF5
 11497                           prodh	equ	0xFF4
 11498                           prodl	equ	0xFF3
 11499                           intcon	equ	0xFF2
 11500                           intcon2	equ	0xFF1
 11501                           postinc0	equ	0xFEE
 11502                           fsr0h	equ	0xFEA
 11503                           fsr0l	equ	0xFE9
 11504                           wreg	equ	0xFE8
 11505                           fsr1h	equ	0xFE2
 11506                           fsr1l	equ	0xFE1
 11507                           indf2	equ	0xFDF
 11508                           postinc2	equ	0xFDE
 11509                           postdec2	equ	0xFDD
 11510                           plusw2	equ	0xFDB
 11511                           fsr2h	equ	0xFDA
 11512                           fsr2l	equ	0xFD9
 11513                           status	equ	0xFD8
 11514                           
 11515 ;; *************** function _TMR2_CallBack *****************
 11516 ;; Defined at:
 11517 ;;		line 131 in file "mcc_generated_files/tmr2.c"
 11518 ;; Parameters:    Size  Location     Type
 11519 ;;		None
 11520 ;; Auto vars:     Size  Location     Type
 11521 ;;  i               2    2[COMRAM] int 
 11522 ;; Return value:  Size  Location     Type
 11523 ;;                  1    wreg      void 
 11524 ;; Registers used:
 11525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 11526 ;; Tracked objects:
 11527 ;;		On entry : 0/0
 11528 ;;		On exit  : 0/0
 11529 ;;		Unchanged: 0/0
 11530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11531 ;;      Params:         0       0       0       0       0       0       0
 11532 ;;      Locals:         2       0       0       0       0       0       0
 11533 ;;      Temps:          2       0       0       0       0       0       0
 11534 ;;      Totals:         4       0       0       0       0       0       0
 11535 ;;Total ram usage:        4 bytes
 11536 ;; Hardware stack levels used:    1
 11537 ;; Hardware stack levels required when called:    1
 11538 ;; This function calls:
 11539 ;;		Absolute function
 11540 ;;		_TMR2_DefaultInterruptHandler
 11541 ;; This function is called by:
 11542 ;;		_TMR2_ISR
 11543 ;; This function uses a non-reentrant model
 11544 ;;
 11545                           
 11546                           	psect	text62
 11547  0010AC                     __ptext62:
 11548                           	opt stack 0
 11549  0010AC                     _TMR2_CallBack:
 11550                           	opt stack 21
 11551                           
 11552                           ;tmr2.c: 133: int i = 0;
 11553                           
 11554                           ;incstack = 0
 11555  0010AC  0E00               	movlw	0
 11556  0010AE  6E04               	movwf	TMR2_CallBack@i+1,c
 11557  0010B0  0E00               	movlw	0
 11558  0010B2  6E03               	movwf	TMR2_CallBack@i,c
 11559                           
 11560                           ;tmr2.c: 134: while (i <= 5) {
 11561  0010B4  D0C3               	goto	i2l452
 11562  0010B6                     i2l4363:
 11563                           
 11564                           ;tmr2.c: 136: if (LEDNUM_ENAB[i] == 1) {
 11565  0010B6  90D8               	bcf	status,0,c
 11566  0010B8  3403               	rlcf	TMR2_CallBack@i,w,c
 11567  0010BA  6ED9               	movwf	fsr2l,c
 11568  0010BC  3404               	rlcf	TMR2_CallBack@i+1,w,c
 11569  0010BE  6EDA               	movwf	fsr2h,c
 11570  0010C0  0E98               	movlw	low _LEDNUM_ENAB
 11571  0010C2  26D9               	addwf	fsr2l,f,c
 11572  0010C4  0E00               	movlw	high _LEDNUM_ENAB
 11573  0010C6  22DA               	addwfc	fsr2h,f,c
 11574  0010C8  04DE               	decf	postinc2,w,c
 11575  0010CA  10DE               	iorwf	postinc2,w,c
 11576  0010CC  B4D8               	btfsc	status,2,c
 11577  0010CE  D098               	goto	i2l4381
 11578  0010D0  D0AF               	goto	i2l4383
 11579  0010D2                     i2l459:
 11580  0010D2  B68A               	btfsc	3978,3,c	;volatile
 11581  0010D4  D002               	goto	i2u364_40
 11582  0010D6  868A               	bsf	3978,3,c	;volatile
 11583  0010D8  D03B               	goto	i2l4371
 11584  0010DA                     i2u364_40:
 11585  0010DA  968A               	bcf	3978,3,c	;volatile
 11586                           
 11587                           ;tmr2.c: 142: break;
 11588  0010DC  D039               	goto	i2l4371
 11589  0010DE                     i2l463:
 11590  0010DE  BA8A               	btfsc	3978,5,c	;volatile
 11591  0010E0  D002               	goto	i2u366_40
 11592  0010E2  8A8A               	bsf	3978,5,c	;volatile
 11593  0010E4  D035               	goto	i2l4371
 11594  0010E6                     i2u366_40:
 11595  0010E6  9A8A               	bcf	3978,5,c	;volatile
 11596                           
 11597                           ;tmr2.c: 145: break;
 11598  0010E8  D033               	goto	i2l4371
 11599  0010EA                     i2l466:
 11600  0010EA  B28C               	btfsc	3980,1,c	;volatile
 11601  0010EC  D002               	goto	i2u368_40
 11602  0010EE  828C               	bsf	3980,1,c	;volatile
 11603  0010F0  D02F               	goto	i2l4371
 11604  0010F2                     i2u368_40:
 11605  0010F2  928C               	bcf	3980,1,c	;volatile
 11606                           
 11607                           ;tmr2.c: 148: break;
 11608  0010F4  D02D               	goto	i2l4371
 11609  0010F6                     i2l469:
 11610  0010F6  B48D               	btfsc	3981,2,c	;volatile
 11611  0010F8  D002               	goto	i2u370_40
 11612  0010FA  848D               	bsf	3981,2,c	;volatile
 11613  0010FC  D029               	goto	i2l4371
 11614  0010FE                     i2u370_40:
 11615  0010FE  948D               	bcf	3981,2,c	;volatile
 11616                           
 11617                           ;tmr2.c: 151: break;
 11618  001100  D027               	goto	i2l4371
 11619  001102                     i2l472:
 11620  001102  B28D               	btfsc	3981,1,c	;volatile
 11621  001104  D002               	goto	i2u372_40
 11622  001106  828D               	bsf	3981,1,c	;volatile
 11623  001108  D023               	goto	i2l4371
 11624  00110A                     i2u372_40:
 11625  00110A  928D               	bcf	3981,1,c	;volatile
 11626                           
 11627                           ;tmr2.c: 154: break;
 11628  00110C  D021               	goto	i2l4371
 11629  00110E                     i2l475:
 11630  00110E  B08D               	btfsc	3981,0,c	;volatile
 11631  001110  D002               	goto	i2u374_40
 11632  001112  808D               	bsf	3981,0,c	;volatile
 11633  001114  D01D               	goto	i2l4371
 11634  001116                     i2u374_40:
 11635  001116  908D               	bcf	3981,0,c	;volatile
 11636                           
 11637                           ;tmr2.c: 158: }
 11638                           
 11639                           ;tmr2.c: 157: break;
 11640  001118  D01B               	goto	i2l4371
 11641  00111A                     i2l4369:
 11642  00111A  C003  F001         	movff	TMR2_CallBack@i,??_TMR2_CallBack
 11643  00111E  C004  F002         	movff	TMR2_CallBack@i+1,??_TMR2_CallBack+1
 11644                           
 11645                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11646                           ; Switch size 1, requested type "space"
 11647                           ; Number of cases is 1, Range of values is 0 to 0
 11648                           ; switch strategies available:
 11649                           ; Name         Instructions Cycles
 11650                           ; simple_byte            4     3 (average)
 11651                           ;	Chosen strategy is simple_byte
 11652  001122  5002               	movf	??_TMR2_CallBack+1,w,c
 11653  001124  0A00               	xorlw	0	; case 0
 11654  001126  A4D8               	btfss	status,2,c
 11655  001128  D013               	goto	i2l4371
 11656                           
 11657                           ; Switch size 1, requested type "space"
 11658                           ; Number of cases is 6, Range of values is 0 to 5
 11659                           ; switch strategies available:
 11660                           ; Name         Instructions Cycles
 11661                           ; simple_byte           19    10 (average)
 11662                           ;	Chosen strategy is simple_byte
 11663  00112A  5001               	movf	??_TMR2_CallBack,w,c
 11664  00112C  0A00               	xorlw	0	; case 0
 11665  00112E  B4D8               	btfsc	status,2,c
 11666  001130  D7D0               	goto	i2l459
 11667  001132  0A01               	xorlw	1	; case 1
 11668  001134  B4D8               	btfsc	status,2,c
 11669  001136  D7D3               	goto	i2l463
 11670  001138  0A03               	xorlw	3	; case 2
 11671  00113A  B4D8               	btfsc	status,2,c
 11672  00113C  D7D6               	goto	i2l466
 11673  00113E  0A01               	xorlw	1	; case 3
 11674  001140  B4D8               	btfsc	status,2,c
 11675  001142  D7D9               	goto	i2l469
 11676  001144  0A07               	xorlw	7	; case 4
 11677  001146  B4D8               	btfsc	status,2,c
 11678  001148  D7DC               	goto	i2l472
 11679  00114A  0A01               	xorlw	1	; case 5
 11680  00114C  B4D8               	btfsc	status,2,c
 11681  00114E  D7DF               	goto	i2l475
 11682  001150                     i2l4371:
 11683                           
 11684                           ;tmr2.c: 159: LEDState[i] = 1;
 11685  001150  90D8               	bcf	status,0,c
 11686  001152  3403               	rlcf	TMR2_CallBack@i,w,c
 11687  001154  6ED9               	movwf	fsr2l,c
 11688  001156  3404               	rlcf	TMR2_CallBack@i+1,w,c
 11689  001158  6EDA               	movwf	fsr2h,c
 11690  00115A  0EA4               	movlw	low _LEDState
 11691  00115C  26D9               	addwf	fsr2l,f,c
 11692  00115E  0E00               	movlw	high _LEDState
 11693  001160  22DA               	addwfc	fsr2h,f,c
 11694  001162  0E01               	movlw	1
 11695  001164  D049               	goto	L4
 11696  001166                     i2l481:
 11697  001166  B68A               	btfsc	3978,3,c	;volatile
 11698  001168  D002               	goto	i2u376_40
 11699  00116A  868A               	bsf	3978,3,c	;volatile
 11700  00116C  D03B               	goto	i2l4377
 11701  00116E                     i2u376_40:
 11702  00116E  968A               	bcf	3978,3,c	;volatile
 11703                           
 11704                           ;tmr2.c: 165: break;
 11705  001170  D039               	goto	i2l4377
 11706  001172                     i2l485:
 11707  001172  BA8A               	btfsc	3978,5,c	;volatile
 11708  001174  D002               	goto	i2u378_40
 11709  001176  8A8A               	bsf	3978,5,c	;volatile
 11710  001178  D035               	goto	i2l4377
 11711  00117A                     i2u378_40:
 11712  00117A  9A8A               	bcf	3978,5,c	;volatile
 11713                           
 11714                           ;tmr2.c: 168: break;
 11715  00117C  D033               	goto	i2l4377
 11716  00117E                     i2l488:
 11717  00117E  B28C               	btfsc	3980,1,c	;volatile
 11718  001180  D002               	goto	i2u380_40
 11719  001182  828C               	bsf	3980,1,c	;volatile
 11720  001184  D02F               	goto	i2l4377
 11721  001186                     i2u380_40:
 11722  001186  928C               	bcf	3980,1,c	;volatile
 11723                           
 11724                           ;tmr2.c: 171: break;
 11725  001188  D02D               	goto	i2l4377
 11726  00118A                     i2l491:
 11727  00118A  B48D               	btfsc	3981,2,c	;volatile
 11728  00118C  D002               	goto	i2u382_40
 11729  00118E  848D               	bsf	3981,2,c	;volatile
 11730  001190  D029               	goto	i2l4377
 11731  001192                     i2u382_40:
 11732  001192  948D               	bcf	3981,2,c	;volatile
 11733                           
 11734                           ;tmr2.c: 174: break;
 11735  001194  D027               	goto	i2l4377
 11736  001196                     i2l494:
 11737  001196  B28D               	btfsc	3981,1,c	;volatile
 11738  001198  D002               	goto	i2u384_40
 11739  00119A  828D               	bsf	3981,1,c	;volatile
 11740  00119C  D023               	goto	i2l4377
 11741  00119E                     i2u384_40:
 11742  00119E  928D               	bcf	3981,1,c	;volatile
 11743                           
 11744                           ;tmr2.c: 177: break;
 11745  0011A0  D021               	goto	i2l4377
 11746  0011A2                     i2l497:
 11747  0011A2  B08D               	btfsc	3981,0,c	;volatile
 11748  0011A4  D002               	goto	i2u386_40
 11749  0011A6  808D               	bsf	3981,0,c	;volatile
 11750  0011A8  D01D               	goto	i2l4377
 11751  0011AA                     i2u386_40:
 11752  0011AA  908D               	bcf	3981,0,c	;volatile
 11753                           
 11754                           ;tmr2.c: 181: }
 11755                           
 11756                           ;tmr2.c: 180: break;
 11757  0011AC  D01B               	goto	i2l4377
 11758  0011AE                     i2l4375:
 11759  0011AE  C003  F001         	movff	TMR2_CallBack@i,??_TMR2_CallBack
 11760  0011B2  C004  F002         	movff	TMR2_CallBack@i+1,??_TMR2_CallBack+1
 11761                           
 11762                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11763                           ; Switch size 1, requested type "space"
 11764                           ; Number of cases is 1, Range of values is 0 to 0
 11765                           ; switch strategies available:
 11766                           ; Name         Instructions Cycles
 11767                           ; simple_byte            4     3 (average)
 11768                           ;	Chosen strategy is simple_byte
 11769  0011B6  5002               	movf	??_TMR2_CallBack+1,w,c
 11770  0011B8  0A00               	xorlw	0	; case 0
 11771  0011BA  A4D8               	btfss	status,2,c
 11772  0011BC  D013               	goto	i2l4377
 11773                           
 11774                           ; Switch size 1, requested type "space"
 11775                           ; Number of cases is 6, Range of values is 0 to 5
 11776                           ; switch strategies available:
 11777                           ; Name         Instructions Cycles
 11778                           ; simple_byte           19    10 (average)
 11779                           ;	Chosen strategy is simple_byte
 11780  0011BE  5001               	movf	??_TMR2_CallBack,w,c
 11781  0011C0  0A00               	xorlw	0	; case 0
 11782  0011C2  B4D8               	btfsc	status,2,c
 11783  0011C4  D7D0               	goto	i2l481
 11784  0011C6  0A01               	xorlw	1	; case 1
 11785  0011C8  B4D8               	btfsc	status,2,c
 11786  0011CA  D7D3               	goto	i2l485
 11787  0011CC  0A03               	xorlw	3	; case 2
 11788  0011CE  B4D8               	btfsc	status,2,c
 11789  0011D0  D7D6               	goto	i2l488
 11790  0011D2  0A01               	xorlw	1	; case 3
 11791  0011D4  B4D8               	btfsc	status,2,c
 11792  0011D6  D7D9               	goto	i2l491
 11793  0011D8  0A07               	xorlw	7	; case 4
 11794  0011DA  B4D8               	btfsc	status,2,c
 11795  0011DC  D7DC               	goto	i2l494
 11796  0011DE  0A01               	xorlw	1	; case 5
 11797  0011E0  B4D8               	btfsc	status,2,c
 11798  0011E2  D7DF               	goto	i2l497
 11799  0011E4                     i2l4377:
 11800                           
 11801                           ;tmr2.c: 182: LEDState[i] = 0;
 11802  0011E4  90D8               	bcf	status,0,c
 11803  0011E6  3403               	rlcf	TMR2_CallBack@i,w,c
 11804  0011E8  6ED9               	movwf	fsr2l,c
 11805  0011EA  3404               	rlcf	TMR2_CallBack@i+1,w,c
 11806  0011EC  6EDA               	movwf	fsr2h,c
 11807  0011EE  0EA4               	movlw	low _LEDState
 11808  0011F0  26D9               	addwf	fsr2l,f,c
 11809  0011F2  0E00               	movlw	high _LEDState
 11810  0011F4  22DA               	addwfc	fsr2h,f,c
 11811  0011F6  0E00               	movlw	0
 11812  0011F8                     L4:
 11813  0011F8  6EDE               	movwf	postinc2,c
 11814  0011FA  0E00               	movlw	0
 11815  0011FC  6EDD               	movwf	postdec2,c
 11816                           
 11817                           ;tmr2.c: 184: }
 11818                           
 11819                           ;tmr2.c: 183: break;
 11820  0011FE  D018               	goto	i2l4383
 11821  001200                     i2l4381:
 11822  001200  90D8               	bcf	status,0,c
 11823  001202  3403               	rlcf	TMR2_CallBack@i,w,c
 11824  001204  6ED9               	movwf	fsr2l,c
 11825  001206  3404               	rlcf	TMR2_CallBack@i+1,w,c
 11826  001208  6EDA               	movwf	fsr2h,c
 11827  00120A  0EA4               	movlw	low _LEDState
 11828  00120C  26D9               	addwf	fsr2l,f,c
 11829  00120E  0E00               	movlw	high _LEDState
 11830  001210  22DA               	addwfc	fsr2h,f,c
 11831  001212  CFDE F001          	movff	postinc2,??_TMR2_CallBack
 11832  001216  CFDD F002          	movff	postdec2,??_TMR2_CallBack+1
 11833                           
 11834                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11835                           ; Switch size 1, requested type "space"
 11836                           ; Number of cases is 1, Range of values is 0 to 0
 11837                           ; switch strategies available:
 11838                           ; Name         Instructions Cycles
 11839                           ; simple_byte            4     3 (average)
 11840                           ;	Chosen strategy is simple_byte
 11841  00121A  5002               	movf	??_TMR2_CallBack+1,w,c
 11842  00121C  0A00               	xorlw	0	; case 0
 11843  00121E  A4D8               	btfss	status,2,c
 11844  001220  D007               	goto	i2l4383
 11845                           
 11846                           ; Switch size 1, requested type "space"
 11847                           ; Number of cases is 2, Range of values is 0 to 1
 11848                           ; switch strategies available:
 11849                           ; Name         Instructions Cycles
 11850                           ; simple_byte            7     4 (average)
 11851                           ;	Chosen strategy is simple_byte
 11852  001222  5001               	movf	??_TMR2_CallBack,w,c
 11853  001224  0A00               	xorlw	0	; case 0
 11854  001226  B4D8               	btfsc	status,2,c
 11855  001228  D778               	goto	i2l4369
 11856  00122A  0A01               	xorlw	1	; case 1
 11857  00122C  B4D8               	btfsc	status,2,c
 11858  00122E  D7BF               	goto	i2l4375
 11859  001230                     i2l4383:
 11860                           
 11861                           ;tmr2.c: 185: }
 11862                           ;tmr2.c: 186: i = i + 1;
 11863  001230  0E01               	movlw	1
 11864  001232  2403               	addwf	TMR2_CallBack@i,w,c
 11865  001234  6E03               	movwf	TMR2_CallBack@i,c
 11866  001236  0E00               	movlw	0
 11867  001238  2004               	addwfc	TMR2_CallBack@i+1,w,c
 11868  00123A  6E04               	movwf	TMR2_CallBack@i+1,c
 11869  00123C                     i2l452:
 11870  00123C  BE04               	btfsc	TMR2_CallBack@i+1,7,c
 11871  00123E  D73B               	goto	i2l4363
 11872  001240  5004               	movf	TMR2_CallBack@i+1,w,c
 11873  001242  E104               	bnz	i2l4385
 11874  001244  0E06               	movlw	6
 11875  001246  5C03               	subwf	TMR2_CallBack@i,w,c
 11876  001248  A0D8               	btfss	status,0,c
 11877  00124A  D735               	goto	i2l4363
 11878  00124C                     i2l4385:
 11879                           
 11880                           ;tmr2.c: 187: }
 11881                           ;tmr2.c: 191: if(TMR2_InterruptHandler)
 11882  00124C  0100               	movlb	0	; () banked
 11883  00124E  51FE               	movf	_TMR2_InterruptHandler& (0+255),w,b
 11884  001250  0100               	movlb	0	; () banked
 11885  001252  11FF               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 11886  001254  B4D8               	btfsc	status,2,c
 11887  001256  0012               	return	
 11888                           
 11889                           ; BSR set to: 0
 11890                           ;tmr2.c: 192: {
 11891                           ;tmr2.c: 193: TMR2_InterruptHandler();
 11892  001258  D801               	call	i2u390_48
 11893  00125A  0012               	return	
 11894  00125C                     i2u390_48:
 11895  00125C  0005               	push	
 11896  00125E  0100               	movlb	0	; () banked
 11897  001260  6EFA               	movwf	pclath,c
 11898  001262  51FE               	movf	_TMR2_InterruptHandler& (0+255),w,b
 11899  001264  6EFD               	movwf	tosl,c
 11900  001266  51FF               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 11901  001268  6EFE               	movwf	tosh,c
 11902  00126A  50F8               	movf	tblptru,w,c
 11903  00126C  6EFF               	movwf	tosu,c
 11904  00126E  50FA               	movf	pclath,w,c
 11905  001270  0012               	return		;indir
 11906  001272                     __end_of_TMR2_CallBack:
 11907                           	opt stack 0
 11908                           tosu	equ	0xFFF
 11909                           tosh	equ	0xFFE
 11910                           tosl	equ	0xFFD
 11911                           pclatu	equ	0xFFB
 11912                           pclath	equ	0xFFA
 11913                           tblptru	equ	0xFF8
 11914                           tblptrh	equ	0xFF7
 11915                           tblptrl	equ	0xFF6
 11916                           tablat	equ	0xFF5
 11917                           prodh	equ	0xFF4
 11918                           prodl	equ	0xFF3
 11919                           intcon	equ	0xFF2
 11920                           intcon2	equ	0xFF1
 11921                           postinc0	equ	0xFEE
 11922                           fsr0h	equ	0xFEA
 11923                           fsr0l	equ	0xFE9
 11924                           wreg	equ	0xFE8
 11925                           fsr1h	equ	0xFE2
 11926                           fsr1l	equ	0xFE1
 11927                           indf2	equ	0xFDF
 11928                           postinc2	equ	0xFDE
 11929                           postdec2	equ	0xFDD
 11930                           plusw2	equ	0xFDB
 11931                           fsr2h	equ	0xFDA
 11932                           fsr2l	equ	0xFD9
 11933                           status	equ	0xFD8
 11934                           
 11935 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 11936 ;; Defined at:
 11937 ;;		line 297 in file "mcc_generated_files/tmr2.c"
 11938 ;; Parameters:    Size  Location     Type
 11939 ;;		None
 11940 ;; Auto vars:     Size  Location     Type
 11941 ;;		None
 11942 ;; Return value:  Size  Location     Type
 11943 ;;                  1    wreg      void 
 11944 ;; Registers used:
 11945 ;;		None
 11946 ;; Tracked objects:
 11947 ;;		On entry : 0/0
 11948 ;;		On exit  : 0/0
 11949 ;;		Unchanged: 0/0
 11950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11951 ;;      Params:         0       0       0       0       0       0       0
 11952 ;;      Locals:         0       0       0       0       0       0       0
 11953 ;;      Temps:          0       0       0       0       0       0       0
 11954 ;;      Totals:         0       0       0       0       0       0       0
 11955 ;;Total ram usage:        0 bytes
 11956 ;; Hardware stack levels used:    1
 11957 ;; This function calls:
 11958 ;;		Nothing
 11959 ;; This function is called by:
 11960 ;;		_TMR2_Initialize
 11961 ;;		_TMR2_CallBack
 11962 ;; This function uses a non-reentrant model
 11963 ;;
 11964                           
 11965                           	psect	text63
 11966  003048                     __ptext63:
 11967                           	opt stack 0
 11968  003048                     _TMR2_DefaultInterruptHandler:
 11969                           	opt stack 21
 11970                           
 11971                           ;incstack = 0
 11972  003048  0012               	return		;funcret
 11973  00304A                     __end_of_TMR2_DefaultInterruptHandler:
 11974                           	opt stack 0
 11975                           tosu	equ	0xFFF
 11976                           tosh	equ	0xFFE
 11977                           tosl	equ	0xFFD
 11978                           pclatu	equ	0xFFB
 11979                           pclath	equ	0xFFA
 11980                           tblptru	equ	0xFF8
 11981                           tblptrh	equ	0xFF7
 11982                           tblptrl	equ	0xFF6
 11983                           tablat	equ	0xFF5
 11984                           prodh	equ	0xFF4
 11985                           prodl	equ	0xFF3
 11986                           intcon	equ	0xFF2
 11987                           intcon2	equ	0xFF1
 11988                           postinc0	equ	0xFEE
 11989                           fsr0h	equ	0xFEA
 11990                           fsr0l	equ	0xFE9
 11991                           wreg	equ	0xFE8
 11992                           fsr1h	equ	0xFE2
 11993                           fsr1l	equ	0xFE1
 11994                           indf2	equ	0xFDF
 11995                           postinc2	equ	0xFDE
 11996                           postdec2	equ	0xFDD
 11997                           plusw2	equ	0xFDB
 11998                           fsr2h	equ	0xFDA
 11999                           fsr2l	equ	0xFD9
 12000                           status	equ	0xFD8
 12001                           
 12002 ;; *************** function _TMR0_ISR *****************
 12003 ;; Defined at:
 12004 ;;		line 81 in file "mcc_generated_files/tmr0.c"
 12005 ;; Parameters:    Size  Location     Type
 12006 ;;		None
 12007 ;; Auto vars:     Size  Location     Type
 12008 ;;  x               2    4[COMRAM] int 
 12009 ;; Return value:  Size  Location     Type
 12010 ;;                  1    wreg      void 
 12011 ;; Registers used:
 12012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12013 ;; Tracked objects:
 12014 ;;		On entry : 0/0
 12015 ;;		On exit  : 0/0
 12016 ;;		Unchanged: 0/0
 12017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12018 ;;      Params:         0       0       0       0       0       0       0
 12019 ;;      Locals:         2       0       0       0       0       0       0
 12020 ;;      Temps:          0       0       0       0       0       0       0
 12021 ;;      Totals:         2       0       0       0       0       0       0
 12022 ;;Total ram usage:        2 bytes
 12023 ;; Hardware stack levels used:    1
 12024 ;; Hardware stack levels required when called:    1
 12025 ;; This function calls:
 12026 ;;		_ReadButtonState
 12027 ;;		_TMR0_CallBack
 12028 ;; This function is called by:
 12029 ;;		_INTERRUPT_InterruptManager
 12030 ;; This function uses a non-reentrant model
 12031 ;;
 12032                           
 12033                           	psect	text64
 12034  002A00                     __ptext64:
 12035                           	opt stack 0
 12036  002A00                     _TMR0_ISR:
 12037                           	opt stack 22
 12038                           
 12039                           ;tmr0.c: 82: static volatile uint16_t CountCallBack = 0;
 12040                           ;tmr0.c: 85: TMR0H = timer0ReloadVal16bit >> 8;
 12041                           
 12042                           ;incstack = 0
 12043  002A00  5043               	movf	_timer0ReloadVal16bit+1,w,c	;volatile
 12044  002A02  6ED7               	movwf	4055,c	;volatile
 12045                           
 12046                           ;tmr0.c: 86: TMR0L = (uint8_t) timer0ReloadVal16bit;
 12047  002A04  C042  FFD6         	movff	_timer0ReloadVal16bit,4054	;volatile
 12048                           
 12049                           ;tmr0.c: 88: for (int x = 0; x < 8; x++) {
 12050  002A08  0E00               	movlw	0
 12051  002A0A  6E06               	movwf	TMR0_ISR@x+1,c
 12052  002A0C  0E00               	movlw	0
 12053  002A0E  6E05               	movwf	TMR0_ISR@x,c
 12054  002A10                     i2l4889:
 12055  002A10  BE06               	btfsc	TMR0_ISR@x+1,7,c
 12056  002A12  D006               	goto	i2l4893
 12057  002A14  5006               	movf	TMR0_ISR@x+1,w,c
 12058  002A16  E10D               	bnz	i2l4899
 12059  002A18  0E08               	movlw	8
 12060  002A1A  5C05               	subwf	TMR0_ISR@x,w,c
 12061  002A1C  B0D8               	btfsc	status,0,c
 12062  002A1E  D009               	goto	i2l4899
 12063  002A20                     i2l4893:
 12064                           
 12065                           ;tmr0.c: 89: ReadButtonState(x);
 12066  002A20  C005  F001         	movff	TMR0_ISR@x,ReadButtonState@btnnum
 12067  002A24  C006  F002         	movff	TMR0_ISR@x+1,ReadButtonState@btnnum+1
 12068  002A28  EC1B  F00E         	call	_ReadButtonState	;wreg free
 12069  002A2C  4A05               	infsnz	TMR0_ISR@x,f,c
 12070  002A2E  2A06               	incf	TMR0_ISR@x+1,f,c
 12071  002A30  D7EF               	goto	i2l4889
 12072  002A32                     i2l4899:
 12073                           
 12074                           ;tmr0.c: 90: }
 12075                           ;tmr0.c: 91: time++;
 12076  002A32  0100               	movlb	0	; () banked
 12077  002A34  4BDB               	infsnz	_time& (0+255),f,b	;volatile
 12078  002A36  2BDC               	incf	(_time+1)& (0+255),f,b	;volatile
 12079                           
 12080                           ; BSR set to: 0
 12081                           ;tmr0.c: 93: if (++CountCallBack >= 5) {
 12082  002A38  0100               	movlb	0	; () banked
 12083  002A3A  4BC1               	infsnz	TMR0_ISR@CountCallBack& (0+255),f,b	;volatile
 12084  002A3C  2BC2               	incf	(TMR0_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 12085  002A3E  0100               	movlb	0	; () banked
 12086  002A40  51C2               	movf	(TMR0_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 12087  002A42  E105               	bnz	i2u497_40
 12088  002A44  0E05               	movlw	5
 12089  002A46  0100               	movlb	0	; () banked
 12090  002A48  5DC1               	subwf	TMR0_ISR@CountCallBack& (0+255),w,b	;volatile
 12091  002A4A  A0D8               	btfss	status,0,c
 12092  002A4C  D007               	goto	i2l4907
 12093  002A4E                     i2u497_40:
 12094                           
 12095                           ; BSR set to: 0
 12096                           ;tmr0.c: 95: TMR0_CallBack();
 12097  002A4E  EC25  F018         	call	_TMR0_CallBack	;wreg free
 12098                           
 12099                           ;tmr0.c: 98: CountCallBack = 0;
 12100  002A52  0E00               	movlw	0
 12101  002A54  0100               	movlb	0	; () banked
 12102  002A56  6FC2               	movwf	(TMR0_ISR@CountCallBack+1)& (0+255),b	;volatile
 12103  002A58  0E00               	movlw	0
 12104  002A5A  6FC1               	movwf	TMR0_ISR@CountCallBack& (0+255),b	;volatile
 12105  002A5C                     i2l4907:
 12106                           
 12107                           ; BSR set to: 0
 12108                           ;tmr0.c: 99: }
 12109                           ;tmr0.c: 101: INTCONbits.TMR0IF = 0;
 12110  002A5C  94F2               	bcf	intcon,2,c	;volatile
 12111                           
 12112                           ; BSR set to: 0
 12113  002A5E  0012               	return		;funcret
 12114  002A60                     __end_of_TMR0_ISR:
 12115                           	opt stack 0
 12116                           tosu	equ	0xFFF
 12117                           tosh	equ	0xFFE
 12118                           tosl	equ	0xFFD
 12119                           pclatu	equ	0xFFB
 12120                           pclath	equ	0xFFA
 12121                           tblptru	equ	0xFF8
 12122                           tblptrh	equ	0xFF7
 12123                           tblptrl	equ	0xFF6
 12124                           tablat	equ	0xFF5
 12125                           prodh	equ	0xFF4
 12126                           prodl	equ	0xFF3
 12127                           intcon	equ	0xFF2
 12128                           intcon2	equ	0xFF1
 12129                           postinc0	equ	0xFEE
 12130                           fsr0h	equ	0xFEA
 12131                           fsr0l	equ	0xFE9
 12132                           wreg	equ	0xFE8
 12133                           fsr1h	equ	0xFE2
 12134                           fsr1l	equ	0xFE1
 12135                           indf2	equ	0xFDF
 12136                           postinc2	equ	0xFDE
 12137                           postdec2	equ	0xFDD
 12138                           plusw2	equ	0xFDB
 12139                           fsr2h	equ	0xFDA
 12140                           fsr2l	equ	0xFD9
 12141                           status	equ	0xFD8
 12142                           
 12143 ;; *************** function _TMR0_CallBack *****************
 12144 ;; Defined at:
 12145 ;;		line 104 in file "mcc_generated_files/tmr0.c"
 12146 ;; Parameters:    Size  Location     Type
 12147 ;;		None
 12148 ;; Auto vars:     Size  Location     Type
 12149 ;;		None
 12150 ;; Return value:  Size  Location     Type
 12151 ;;                  1    wreg      void 
 12152 ;; Registers used:
 12153 ;;		None
 12154 ;; Tracked objects:
 12155 ;;		On entry : 0/0
 12156 ;;		On exit  : 0/0
 12157 ;;		Unchanged: 0/0
 12158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12159 ;;      Params:         0       0       0       0       0       0       0
 12160 ;;      Locals:         0       0       0       0       0       0       0
 12161 ;;      Temps:          0       0       0       0       0       0       0
 12162 ;;      Totals:         0       0       0       0       0       0       0
 12163 ;;Total ram usage:        0 bytes
 12164 ;; Hardware stack levels used:    1
 12165 ;; This function calls:
 12166 ;;		Nothing
 12167 ;; This function is called by:
 12168 ;;		_TMR0_ISR
 12169 ;; This function uses a non-reentrant model
 12170 ;;
 12171                           
 12172                           	psect	text65
 12173  00304A                     __ptext65:
 12174                           	opt stack 0
 12175  00304A                     _TMR0_CallBack:
 12176                           	opt stack 22
 12177                           
 12178                           ; BSR set to: 0
 12179                           ;incstack = 0
 12180  00304A  0012               	return		;funcret
 12181  00304C                     __end_of_TMR0_CallBack:
 12182                           	opt stack 0
 12183                           tosu	equ	0xFFF
 12184                           tosh	equ	0xFFE
 12185                           tosl	equ	0xFFD
 12186                           pclatu	equ	0xFFB
 12187                           pclath	equ	0xFFA
 12188                           tblptru	equ	0xFF8
 12189                           tblptrh	equ	0xFF7
 12190                           tblptrl	equ	0xFF6
 12191                           tablat	equ	0xFF5
 12192                           prodh	equ	0xFF4
 12193                           prodl	equ	0xFF3
 12194                           intcon	equ	0xFF2
 12195                           intcon2	equ	0xFF1
 12196                           postinc0	equ	0xFEE
 12197                           fsr0h	equ	0xFEA
 12198                           fsr0l	equ	0xFE9
 12199                           wreg	equ	0xFE8
 12200                           fsr1h	equ	0xFE2
 12201                           fsr1l	equ	0xFE1
 12202                           indf2	equ	0xFDF
 12203                           postinc2	equ	0xFDE
 12204                           postdec2	equ	0xFDD
 12205                           plusw2	equ	0xFDB
 12206                           fsr2h	equ	0xFDA
 12207                           fsr2l	equ	0xFD9
 12208                           status	equ	0xFD8
 12209                           
 12210 ;; *************** function _ReadButtonState *****************
 12211 ;; Defined at:
 12212 ;;		line 154 in file "IO.c"
 12213 ;; Parameters:    Size  Location     Type
 12214 ;;  btnnum          2    0[COMRAM] int 
 12215 ;; Auto vars:     Size  Location     Type
 12216 ;;		None
 12217 ;; Return value:  Size  Location     Type
 12218 ;;                  1    wreg      void 
 12219 ;; Registers used:
 12220 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12221 ;; Tracked objects:
 12222 ;;		On entry : 0/0
 12223 ;;		On exit  : 0/0
 12224 ;;		Unchanged: 0/0
 12225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12226 ;;      Params:         2       0       0       0       0       0       0
 12227 ;;      Locals:         0       0       0       0       0       0       0
 12228 ;;      Temps:          2       0       0       0       0       0       0
 12229 ;;      Totals:         4       0       0       0       0       0       0
 12230 ;;Total ram usage:        4 bytes
 12231 ;; Hardware stack levels used:    1
 12232 ;; This function calls:
 12233 ;;		Nothing
 12234 ;; This function is called by:
 12235 ;;		_TMR0_ISR
 12236 ;; This function uses a non-reentrant model
 12237 ;;
 12238                           
 12239                           	psect	text66
 12240  001C36                     __ptext66:
 12241                           	opt stack 0
 12242  001C36                     _ReadButtonState:
 12243                           	opt stack 22
 12244                           
 12245                           ;IO.c: 155: switch (btnnum) {
 12246                           
 12247                           ;incstack = 0
 12248  001C36  D068               	goto	i2l4309
 12249  001C38                     i2l4291:
 12250                           
 12251                           ;IO.c: 157: butnarray[btnnum] = PORTDbits.RD5;
 12252  001C38  0EB0               	movlw	low _butnarray
 12253  001C3A  2401               	addwf	ReadButtonState@btnnum,w,c
 12254  001C3C  6ED9               	movwf	fsr2l,c
 12255  001C3E  0E00               	movlw	high _butnarray
 12256  001C40  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 12257  001C42  6EDA               	movwf	fsr2h,c
 12258  001C44  AA83               	btfss	3971,5,c	;volatile
 12259  001C46  D002               	goto	i2u355_40
 12260  001C48  0E01               	movlw	1
 12261  001C4A  D001               	goto	i2u355_46
 12262  001C4C                     i2u355_40:
 12263  001C4C  0E00               	movlw	0
 12264  001C4E                     i2u355_46:
 12265  001C4E  6EDF               	movwf	indf2,c
 12266                           
 12267                           ;IO.c: 158: break;
 12268  001C50  0012               	return	
 12269  001C52                     i2l4293:
 12270                           
 12271                           ;IO.c: 160: butnarray[btnnum] = PORTBbits.RB0;
 12272  001C52  0EB0               	movlw	low _butnarray
 12273  001C54  2401               	addwf	ReadButtonState@btnnum,w,c
 12274  001C56  6ED9               	movwf	fsr2l,c
 12275  001C58  0E00               	movlw	high _butnarray
 12276  001C5A  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 12277  001C5C  6EDA               	movwf	fsr2h,c
 12278  001C5E  A081               	btfss	3969,0,c	;volatile
 12279  001C60  D002               	goto	i2u356_40
 12280  001C62  0E01               	movlw	1
 12281  001C64  D001               	goto	i2u356_46
 12282  001C66                     i2u356_40:
 12283  001C66  0E00               	movlw	0
 12284  001C68                     i2u356_46:
 12285  001C68  6EDF               	movwf	indf2,c
 12286                           
 12287                           ;IO.c: 161: break;
 12288  001C6A  0012               	return	
 12289  001C6C                     i2l4295:
 12290                           
 12291                           ;IO.c: 163: butnarray[btnnum] = PORTBbits.RB1;
 12292  001C6C  0EB0               	movlw	low _butnarray
 12293  001C6E  2401               	addwf	ReadButtonState@btnnum,w,c
 12294  001C70  6ED9               	movwf	fsr2l,c
 12295  001C72  0E00               	movlw	high _butnarray
 12296  001C74  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 12297  001C76  6EDA               	movwf	fsr2h,c
 12298  001C78  A281               	btfss	3969,1,c	;volatile
 12299  001C7A  D002               	goto	i2u357_40
 12300  001C7C  0E01               	movlw	1
 12301  001C7E  D001               	goto	i2u357_46
 12302  001C80                     i2u357_40:
 12303  001C80  0E00               	movlw	0
 12304  001C82                     i2u357_46:
 12305  001C82  6EDF               	movwf	indf2,c
 12306                           
 12307                           ;IO.c: 164: break;
 12308  001C84  0012               	return	
 12309  001C86                     i2l4297:
 12310                           
 12311                           ;IO.c: 166: butnarray[btnnum] = PORTBbits.RB2;
 12312  001C86  0EB0               	movlw	low _butnarray
 12313  001C88  2401               	addwf	ReadButtonState@btnnum,w,c
 12314  001C8A  6ED9               	movwf	fsr2l,c
 12315  001C8C  0E00               	movlw	high _butnarray
 12316  001C8E  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 12317  001C90  6EDA               	movwf	fsr2h,c
 12318  001C92  A481               	btfss	3969,2,c	;volatile
 12319  001C94  D002               	goto	i2u358_40
 12320  001C96  0E01               	movlw	1
 12321  001C98  D001               	goto	i2u358_46
 12322  001C9A                     i2u358_40:
 12323  001C9A  0E00               	movlw	0
 12324  001C9C                     i2u358_46:
 12325  001C9C  6EDF               	movwf	indf2,c
 12326                           
 12327                           ;IO.c: 167: break;
 12328  001C9E  0012               	return	
 12329  001CA0                     i2l4299:
 12330                           
 12331                           ;IO.c: 169: butnarray[btnnum] = PORTBbits.RB4;
 12332  001CA0  0EB0               	movlw	low _butnarray
 12333  001CA2  2401               	addwf	ReadButtonState@btnnum,w,c
 12334  001CA4  6ED9               	movwf	fsr2l,c
 12335  001CA6  0E00               	movlw	high _butnarray
 12336  001CA8  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 12337  001CAA  6EDA               	movwf	fsr2h,c
 12338  001CAC  A881               	btfss	3969,4,c	;volatile
 12339  001CAE  D002               	goto	i2u359_40
 12340  001CB0  0E01               	movlw	1
 12341  001CB2  D001               	goto	i2u359_46
 12342  001CB4                     i2u359_40:
 12343  001CB4  0E00               	movlw	0
 12344  001CB6                     i2u359_46:
 12345  001CB6  6EDF               	movwf	indf2,c
 12346                           
 12347                           ;IO.c: 170: break;
 12348  001CB8  0012               	return	
 12349  001CBA                     i2l4301:
 12350                           
 12351                           ;IO.c: 172: butnarray[btnnum] = PORTAbits.RA0;
 12352  001CBA  0EB0               	movlw	low _butnarray
 12353  001CBC  2401               	addwf	ReadButtonState@btnnum,w,c
 12354  001CBE  6ED9               	movwf	fsr2l,c
 12355  001CC0  0E00               	movlw	high _butnarray
 12356  001CC2  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 12357  001CC4  6EDA               	movwf	fsr2h,c
 12358  001CC6  A080               	btfss	3968,0,c	;volatile
 12359  001CC8  D002               	goto	i2u360_40
 12360  001CCA  0E01               	movlw	1
 12361  001CCC  D001               	goto	i2u360_46
 12362  001CCE                     i2u360_40:
 12363  001CCE  0E00               	movlw	0
 12364  001CD0                     i2u360_46:
 12365  001CD0  6EDF               	movwf	indf2,c
 12366                           
 12367                           ;IO.c: 173: break;
 12368  001CD2  0012               	return	
 12369  001CD4                     i2l4303:
 12370                           
 12371                           ;IO.c: 175: butnarray[btnnum] = PORTAbits.RA1;
 12372  001CD4  0EB0               	movlw	low _butnarray
 12373  001CD6  2401               	addwf	ReadButtonState@btnnum,w,c
 12374  001CD8  6ED9               	movwf	fsr2l,c
 12375  001CDA  0E00               	movlw	high _butnarray
 12376  001CDC  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 12377  001CDE  6EDA               	movwf	fsr2h,c
 12378  001CE0  A280               	btfss	3968,1,c	;volatile
 12379  001CE2  D002               	goto	i2u361_40
 12380  001CE4  0E01               	movlw	1
 12381  001CE6  D001               	goto	i2u361_46
 12382  001CE8                     i2u361_40:
 12383  001CE8  0E00               	movlw	0
 12384  001CEA                     i2u361_46:
 12385  001CEA  6EDF               	movwf	indf2,c
 12386                           
 12387                           ;IO.c: 176: break;
 12388  001CEC  0012               	return	
 12389  001CEE                     i2l4305:
 12390                           
 12391                           ;IO.c: 178: butnarray[btnnum] = PORTAbits.RA2;
 12392  001CEE  0EB0               	movlw	low _butnarray
 12393  001CF0  2401               	addwf	ReadButtonState@btnnum,w,c
 12394  001CF2  6ED9               	movwf	fsr2l,c
 12395  001CF4  0E00               	movlw	high _butnarray
 12396  001CF6  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 12397  001CF8  6EDA               	movwf	fsr2h,c
 12398  001CFA  A480               	btfss	3968,2,c	;volatile
 12399  001CFC  D002               	goto	i2u362_40
 12400  001CFE  0E01               	movlw	1
 12401  001D00  D001               	goto	i2u362_46
 12402  001D02                     i2u362_40:
 12403  001D02  0E00               	movlw	0
 12404  001D04                     i2u362_46:
 12405  001D04  6EDF               	movwf	indf2,c
 12406                           
 12407                           ;IO.c: 181: }
 12408                           
 12409                           ;IO.c: 179: break;
 12410  001D06  0012               	return	
 12411  001D08                     i2l4309:
 12412  001D08  C001  F003         	movff	ReadButtonState@btnnum,??_ReadButtonState
 12413  001D0C  C002  F004         	movff	ReadButtonState@btnnum+1,??_ReadButtonState+1
 12414                           
 12415                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12416                           ; Switch size 1, requested type "space"
 12417                           ; Number of cases is 1, Range of values is 0 to 0
 12418                           ; switch strategies available:
 12419                           ; Name         Instructions Cycles
 12420                           ; simple_byte            4     3 (average)
 12421                           ;	Chosen strategy is simple_byte
 12422  001D10  5004               	movf	??_ReadButtonState+1,w,c
 12423  001D12  0A00               	xorlw	0	; case 0
 12424  001D14  A4D8               	btfss	status,2,c
 12425  001D16  0012               	return	
 12426                           
 12427                           ; Switch size 1, requested type "space"
 12428                           ; Number of cases is 8, Range of values is 0 to 7
 12429                           ; switch strategies available:
 12430                           ; Name         Instructions Cycles
 12431                           ; simple_byte           25    13 (average)
 12432                           ;	Chosen strategy is simple_byte
 12433  001D18  5003               	movf	??_ReadButtonState,w,c
 12434  001D1A  0A00               	xorlw	0	; case 0
 12435  001D1C  B4D8               	btfsc	status,2,c
 12436  001D1E  D78C               	goto	i2l4291
 12437  001D20  0A01               	xorlw	1	; case 1
 12438  001D22  B4D8               	btfsc	status,2,c
 12439  001D24  D796               	goto	i2l4293
 12440  001D26  0A03               	xorlw	3	; case 2
 12441  001D28  B4D8               	btfsc	status,2,c
 12442  001D2A  D7A0               	goto	i2l4295
 12443  001D2C  0A01               	xorlw	1	; case 3
 12444  001D2E  B4D8               	btfsc	status,2,c
 12445  001D30  D7AA               	goto	i2l4297
 12446  001D32  0A07               	xorlw	7	; case 4
 12447  001D34  B4D8               	btfsc	status,2,c
 12448  001D36  D7B4               	goto	i2l4299
 12449  001D38  0A01               	xorlw	1	; case 5
 12450  001D3A  B4D8               	btfsc	status,2,c
 12451  001D3C  D7BE               	goto	i2l4301
 12452  001D3E  0A03               	xorlw	3	; case 6
 12453  001D40  B4D8               	btfsc	status,2,c
 12454  001D42  D7C8               	goto	i2l4303
 12455  001D44  0A01               	xorlw	1	; case 7
 12456  001D46  A4D8               	btfss	status,2,c
 12457  001D48  0012               	return	
 12458  001D4A  D7D1               	goto	i2l4305
 12459  001D4C                     __end_of_ReadButtonState:
 12460                           	opt stack 0
 12461                           tosu	equ	0xFFF
 12462                           tosh	equ	0xFFE
 12463                           tosl	equ	0xFFD
 12464                           pclatu	equ	0xFFB
 12465                           pclath	equ	0xFFA
 12466                           tblptru	equ	0xFF8
 12467                           tblptrh	equ	0xFF7
 12468                           tblptrl	equ	0xFF6
 12469                           tablat	equ	0xFF5
 12470                           prodh	equ	0xFF4
 12471                           prodl	equ	0xFF3
 12472                           intcon	equ	0xFF2
 12473                           intcon2	equ	0xFF1
 12474                           postinc0	equ	0xFEE
 12475                           fsr0h	equ	0xFEA
 12476                           fsr0l	equ	0xFE9
 12477                           wreg	equ	0xFE8
 12478                           fsr1h	equ	0xFE2
 12479                           fsr1l	equ	0xFE1
 12480                           indf2	equ	0xFDF
 12481                           postinc2	equ	0xFDE
 12482                           postdec2	equ	0xFDD
 12483                           plusw2	equ	0xFDB
 12484                           fsr2h	equ	0xFDA
 12485                           fsr2l	equ	0xFD9
 12486                           status	equ	0xFD8
 12487                           
 12488 ;; *************** function _I2C1_ISR *****************
 12489 ;; Defined at:
 12490 ;;		line 186 in file "mcc_generated_files/i2c1.c"
 12491 ;; Parameters:    Size  Location     Type
 12492 ;;		None
 12493 ;; Auto vars:     Size  Location     Type
 12494 ;;		None
 12495 ;; Return value:  Size  Location     Type
 12496 ;;                  1    wreg      void 
 12497 ;; Registers used:
 12498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12499 ;; Tracked objects:
 12500 ;;		On entry : 0/0
 12501 ;;		On exit  : 0/0
 12502 ;;		Unchanged: 0/0
 12503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12504 ;;      Params:         0       0       0       0       0       0       0
 12505 ;;      Locals:         0       0       0       0       0       0       0
 12506 ;;      Temps:          2       0       0       0       0       0       0
 12507 ;;      Totals:         2       0       0       0       0       0       0
 12508 ;;Total ram usage:        2 bytes
 12509 ;; Hardware stack levels used:    1
 12510 ;; Hardware stack levels required when called:    1
 12511 ;; This function calls:
 12512 ;;		_I2C1_FunctionComplete
 12513 ;;		_I2C1_Stop
 12514 ;; This function is called by:
 12515 ;;		_INTERRUPT_InterruptManager
 12516 ;; This function uses a non-reentrant model
 12517 ;;
 12518                           
 12519                           	psect	text67
 12520  000E38                     __ptext67:
 12521                           	opt stack 0
 12522  000E38                     _I2C1_ISR:
 12523                           	opt stack 22
 12524                           
 12525                           ;i2c1.c: 189: static uint8_t *pi2c_buf_ptr;
 12526                           ;i2c1.c: 190: static uint16_t i2c_address = 0;
 12527                           ;i2c1.c: 191: static uint8_t i2c_bytes_left = 0;
 12528                           ;i2c1.c: 192: static uint8_t i2c_10bit_address_restart = 0;
 12529                           ;i2c1.c: 194: PIR1bits.SSP1IF = 0;
 12530                           
 12531                           ;incstack = 0
 12532  000E38  969E               	bcf	3998,3,c	;volatile
 12533                           
 12534                           ;i2c1.c: 198: if(SSP1CON1bits.WCOL)
 12535  000E3A  AEC6               	btfss	4038,7,c	;volatile
 12536  000E3C  D114               	goto	i2l6575
 12537                           
 12538                           ;i2c1.c: 199: {
 12539                           ;i2c1.c: 201: SSP1CON1bits.WCOL = 0;
 12540  000E3E  9EC6               	bcf	4038,7,c	;volatile
 12541                           
 12542                           ;i2c1.c: 202: i2c1_state = S_MASTER_IDLE;
 12543  000E40  0E00               	movlw	0
 12544  000E42  6E38               	movwf	_i2c1_state,c
 12545                           
 12546                           ;i2c1.c: 203: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
 12547  000E44  0100               	movlb	0	; () banked
 12548  000E46  EE20 F003          	lfsr	2,3
 12549  000E4A  51CF               	movf	_p_i2c1_current& (0+255),w,b
 12550  000E4C  26D9               	addwf	fsr2l,f,c
 12551  000E4E  51D0               	movf	(_p_i2c1_current+1)& (0+255),w,b
 12552  000E50  22DA               	addwfc	fsr2h,f,c
 12553  000E52  CFDE F004          	movff	postinc2,??_I2C1_ISR
 12554  000E56  CFDD F005          	movff	postdec2,??_I2C1_ISR+1
 12555  000E5A  C004  FFD9         	movff	??_I2C1_ISR,fsr2l
 12556  000E5E  C005  FFDA         	movff	??_I2C1_ISR+1,fsr2h
 12557  000E62  0E01               	movlw	1
 12558  000E64  6EDF               	movwf	indf2,c
 12559                           
 12560                           ; BSR set to: 0
 12561                           ;i2c1.c: 206: p_i2c1_current = (0);
 12562  000E66  0E00               	movlw	0
 12563  000E68  0100               	movlb	0	; () banked
 12564  000E6A  6FCF               	movwf	_p_i2c1_current& (0+255),b
 12565  000E6C  0E00               	movlw	0
 12566  000E6E  0100               	movlb	0	; () banked
 12567  000E70  6FD0               	movwf	(_p_i2c1_current+1)& (0+255),b
 12568                           
 12569                           ; BSR set to: 0
 12570                           ;i2c1.c: 208: return;
 12571  000E72  0012               	return	
 12572  000E74                     i2l60:
 12573                           
 12574                           ;i2c1.c: 216: if(i2c1_object.trStatus.s.empty != 1)
 12575  000E74  0100               	movlb	0	; () banked
 12576  000E76  B3BC               	btfsc	(_i2c1_object+4)& (0+255),1,b
 12577  000E78  0012               	return	
 12578                           
 12579                           ; BSR set to: 0
 12580                           ;i2c1.c: 217: {
 12581                           ;i2c1.c: 219: p_i2c1_current = i2c1_object.pTrHead;
 12582  000E7A  C0BA  F0CF         	movff	_i2c1_object+2,_p_i2c1_current
 12583  000E7E  C0BB  F0D0         	movff	_i2c1_object+3,_p_i2c1_current+1
 12584                           
 12585                           ; BSR set to: 0
 12586                           ;i2c1.c: 220: i2c1_trb_count = i2c1_object.pTrHead->count;
 12587  000E82  C0BA  FFD9         	movff	_i2c1_object+2,fsr2l
 12588  000E86  C0BB  FFDA         	movff	_i2c1_object+3,fsr2h
 12589  000E8A  50DF               	movf	indf2,w,c
 12590  000E8C  6E39               	movwf	_i2c1_trb_count,c
 12591                           
 12592                           ; BSR set to: 0
 12593                           ;i2c1.c: 221: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
 12594  000E8E  0100               	movlb	0	; () banked
 12595  000E90  EE20 F001          	lfsr	2,1
 12596  000E94  51BA               	movf	(_i2c1_object+2)& (0+255),w,b
 12597  000E96  26D9               	addwf	fsr2l,f,c
 12598  000E98  51BB               	movf	(_i2c1_object+3)& (0+255),w,b
 12599  000E9A  22DA               	addwfc	fsr2h,f,c
 12600  000E9C  CFDE F0D1          	movff	postinc2,_p_i2c1_trb_current
 12601  000EA0  CFDD F0D2          	movff	postdec2,_p_i2c1_trb_current+1
 12602                           
 12603                           ; BSR set to: 0
 12604                           ;i2c1.c: 223: i2c1_object.pTrHead++;
 12605  000EA4  0E05               	movlw	5
 12606  000EA6  0100               	movlb	0	; () banked
 12607  000EA8  27BA               	addwf	(_i2c1_object+2)& (0+255),f,b
 12608  000EAA  0E00               	movlw	0
 12609  000EAC  23BB               	addwfc	(_i2c1_object+3)& (0+255),f,b
 12610                           
 12611                           ; BSR set to: 0
 12612                           ;i2c1.c: 226: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
 12613  000EAE  0EEE               	movlw	low (_i2c1_tr_queue+5)
 12614  000EB0  0100               	movlb	0	; () banked
 12615  000EB2  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 12616  000EB4  E10B               	bnz	i2l6467
 12617  000EB6  0E00               	movlw	high (_i2c1_tr_queue+5)
 12618  000EB8  0100               	movlb	0	; () banked
 12619  000EBA  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 12620  000EBC  A4D8               	btfss	status,2,c
 12621  000EBE  D006               	goto	i2l6467
 12622                           
 12623                           ; BSR set to: 0
 12624                           ;i2c1.c: 227: {
 12625                           ;i2c1.c: 229: i2c1_object.pTrHead = i2c1_tr_queue;
 12626  000EC0  0EE9               	movlw	low _i2c1_tr_queue
 12627  000EC2  0100               	movlb	0	; () banked
 12628  000EC4  6FBA               	movwf	(_i2c1_object+2)& (0+255),b
 12629  000EC6  0E00               	movlw	high _i2c1_tr_queue
 12630  000EC8  0100               	movlb	0	; () banked
 12631  000ECA  6FBB               	movwf	(_i2c1_object+3)& (0+255),b
 12632  000ECC                     i2l6467:
 12633                           
 12634                           ; BSR set to: 0
 12635                           ;i2c1.c: 230: }
 12636                           ;i2c1.c: 234: i2c1_object.trStatus.s.full = 0;
 12637  000ECC  0100               	movlb	0	; () banked
 12638  000ECE  91BC               	bcf	(_i2c1_object+4)& (0+255),0,b
 12639                           
 12640                           ;i2c1.c: 237: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
 12641  000ED0  0100               	movlb	0	; () banked
 12642  000ED2  51B8               	movf	_i2c1_object& (0+255),w,b
 12643  000ED4  0100               	movlb	0	; () banked
 12644  000ED6  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 12645  000ED8  E108               	bnz	i2l63
 12646  000EDA  0100               	movlb	0	; () banked
 12647  000EDC  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 12648  000EDE  0100               	movlb	0	; () banked
 12649  000EE0  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 12650  000EE2  A4D8               	btfss	status,2,c
 12651  000EE4  D002               	goto	i2l63
 12652                           
 12653                           ; BSR set to: 0
 12654                           ;i2c1.c: 238: {
 12655                           ;i2c1.c: 240: i2c1_object.trStatus.s.empty = 1;
 12656  000EE6  0100               	movlb	0	; () banked
 12657  000EE8  83BC               	bsf	(_i2c1_object+4)& (0+255),1,b
 12658  000EEA                     i2l63:
 12659                           
 12660                           ; BSR set to: 0
 12661                           ;i2c1.c: 241: }
 12662                           ;i2c1.c: 244: SSP1CON2bits.SEN = 1;
 12663  000EEA  80C5               	bsf	4037,0,c	;volatile
 12664                           
 12665                           ; BSR set to: 0
 12666                           ;i2c1.c: 247: i2c1_state = S_MASTER_SEND_ADDR;
 12667  000EEC  0E02               	movlw	2
 12668  000EEE  6E38               	movwf	_i2c1_state,c
 12669                           
 12670                           ; BSR set to: 0
 12671                           ;i2c1.c: 248: }
 12672                           ;i2c1.c: 250: break;
 12673  000EF0  0012               	return	
 12674  000EF2                     i2l65:
 12675                           
 12676                           ;i2c1.c: 257: SSP1CON2bits.RSEN = 1;
 12677  000EF2  82C5               	bsf	4037,1,c	;volatile
 12678                           
 12679                           ;i2c1.c: 260: i2c1_state = S_MASTER_SEND_ADDR;
 12680  000EF4  0E02               	movlw	2
 12681  000EF6  6E38               	movwf	_i2c1_state,c
 12682                           
 12683                           ;i2c1.c: 262: break;
 12684  000EF8  0012               	return	
 12685  000EFA                     i2l66:
 12686                           
 12687                           ;i2c1.c: 266: if(SSP1CON2bits.ACKSTAT)
 12688  000EFA  ACC5               	btfss	4037,6,c	;volatile
 12689  000EFC  D006               	goto	i2l6479
 12690                           
 12691                           ;i2c1.c: 267: {
 12692                           ;i2c1.c: 268: i2c1_object.i2cErrors++;
 12693  000EFE  0100               	movlb	0	; () banked
 12694  000F00  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 12695                           
 12696                           ; BSR set to: 0
 12697                           ;i2c1.c: 269: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 12698  000F02  0E04               	movlw	4
 12699  000F04  EC16  F016         	call	_I2C1_Stop
 12700                           
 12701                           ;i2c1.c: 270: }
 12702  000F08  0012               	return	
 12703  000F0A                     i2l6479:
 12704                           
 12705                           ;i2c1.c: 271: else
 12706                           ;i2c1.c: 272: {
 12707                           ;i2c1.c: 274: SSP1BUF = (i2c_address >> 1) & 0x00FF;
 12708  000F0A  90D8               	bcf	status,0,c
 12709  000F0C  3041               	rrcf	I2C1_ISR@i2c_address+1,w,c
 12710  000F0E  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
 12711  000F10  3040               	rrcf	I2C1_ISR@i2c_address,w,c
 12712  000F12  6E04               	movwf	??_I2C1_ISR& (0+255),c
 12713  000F14  5004               	movf	??_I2C1_ISR,w,c
 12714  000F16  6EC9               	movwf	4041,c	;volatile
 12715                           
 12716                           ;i2c1.c: 277: if(i2c_address & 0x01)
 12717  000F18  A040               	btfss	I2C1_ISR@i2c_address,0,c
 12718  000F1A  D003               	goto	i2l6485
 12719                           
 12720                           ;i2c1.c: 278: {
 12721                           ;i2c1.c: 281: i2c1_state = S_MASTER_10BIT_RESTART;
 12722  000F1C  0E0B               	movlw	11
 12723  000F1E  6E38               	movwf	_i2c1_state,c
 12724                           
 12725                           ;i2c1.c: 282: }
 12726  000F20  0012               	return	
 12727  000F22                     i2l6485:
 12728                           
 12729                           ;i2c1.c: 283: else
 12730                           ;i2c1.c: 284: {
 12731                           ;i2c1.c: 286: i2c1_state = S_MASTER_SEND_DATA;
 12732  000F22  0E03               	movlw	3
 12733  000F24  6E38               	movwf	_i2c1_state,c
 12734                           
 12735                           ;i2c1.c: 287: }
 12736                           ;i2c1.c: 288: }
 12737                           ;i2c1.c: 290: break;
 12738  000F26  0012               	return	
 12739  000F28                     i2l71:
 12740                           
 12741                           ;i2c1.c: 294: if(SSP1CON2bits.ACKSTAT)
 12742  000F28  ACC5               	btfss	4037,6,c	;volatile
 12743  000F2A  D006               	goto	i2l72
 12744                           
 12745                           ;i2c1.c: 295: {
 12746                           ;i2c1.c: 296: i2c1_object.i2cErrors++;
 12747  000F2C  0100               	movlb	0	; () banked
 12748  000F2E  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 12749                           
 12750                           ; BSR set to: 0
 12751                           ;i2c1.c: 297: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 12752  000F30  0E04               	movlw	4
 12753  000F32  EC16  F016         	call	_I2C1_Stop
 12754                           
 12755                           ;i2c1.c: 298: }
 12756  000F36  0012               	return	
 12757  000F38                     i2l72:
 12758                           
 12759                           ;i2c1.c: 299: else
 12760                           ;i2c1.c: 300: {
 12761                           ;i2c1.c: 303: SSP1CON2bits.RSEN = 1;
 12762  000F38  82C5               	bsf	4037,1,c	;volatile
 12763                           
 12764                           ;i2c1.c: 307: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 12765  000F3A  C040  F004         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
 12766  000F3E  C041  F005         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
 12767  000F42  C005  F004         	movff	??_I2C1_ISR+1,??_I2C1_ISR
 12768  000F46  6A05               	clrf	??_I2C1_ISR+1,c
 12769  000F48  0E06               	movlw	6
 12770  000F4A  1604               	andwf	??_I2C1_ISR,f,c
 12771  000F4C  0E00               	movlw	0
 12772  000F4E  1605               	andwf	??_I2C1_ISR+1,f,c
 12773  000F50  0EF0               	movlw	240
 12774  000F52  1004               	iorwf	??_I2C1_ISR,w,c
 12775  000F54  6E40               	movwf	I2C1_ISR@i2c_address,c
 12776  000F56  5005               	movf	??_I2C1_ISR+1,w,c
 12777  000F58  6E41               	movwf	I2C1_ISR@i2c_address+1,c
 12778                           
 12779                           ;i2c1.c: 310: i2c_address |= 0x0001;
 12780  000F5A  8040               	bsf	I2C1_ISR@i2c_address,0,c
 12781                           
 12782                           ;i2c1.c: 313: i2c_10bit_address_restart = 1;
 12783  000F5C  0E01               	movlw	1
 12784  000F5E  6E34               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
 12785                           
 12786                           ;i2c1.c: 316: i2c1_state = S_MASTER_SEND_ADDR;
 12787  000F60  0E02               	movlw	2
 12788  000F62  6E38               	movwf	_i2c1_state,c
 12789                           
 12790                           ;i2c1.c: 317: }
 12791                           ;i2c1.c: 319: break;
 12792  000F64  0012               	return	
 12793  000F66                     i2l6499:
 12794                           
 12795                           ;i2c1.c: 334: if(i2c_10bit_address_restart != 1)
 12796  000F66  0434               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
 12797  000F68  B4D8               	btfsc	status,2,c
 12798  000F6A  D01C               	goto	i2l76
 12799                           
 12800                           ;i2c1.c: 335: {
 12801                           ;i2c1.c: 337: i2c_address = p_i2c1_trb_current->address;
 12802  000F6C  C0D1  FFD9         	movff	_p_i2c1_trb_current,fsr2l
 12803  000F70  C0D2  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
 12804  000F74  CFDE F040          	movff	postinc2,I2C1_ISR@i2c_address
 12805  000F78  CFDD F041          	movff	postdec2,I2C1_ISR@i2c_address+1
 12806                           
 12807                           ;i2c1.c: 338: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
 12808  000F7C  0100               	movlb	0	; () banked
 12809  000F7E  EE20 F003          	lfsr	2,3
 12810  000F82  51D1               	movf	_p_i2c1_trb_current& (0+255),w,b
 12811  000F84  26D9               	addwf	fsr2l,f,c
 12812  000F86  51D2               	movf	(_p_i2c1_trb_current+1)& (0+255),w,b
 12813  000F88  22DA               	addwfc	fsr2h,f,c
 12814  000F8A  CFDE F0BF          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
 12815  000F8E  CFDD F0C0          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
 12816                           
 12817                           ; BSR set to: 0
 12818                           ;i2c1.c: 339: i2c_bytes_left = p_i2c1_trb_current->length;
 12819  000F92  0100               	movlb	0	; () banked
 12820  000F94  EE20 F002          	lfsr	2,2
 12821  000F98  51D1               	movf	_p_i2c1_trb_current& (0+255),w,b
 12822  000F9A  26D9               	addwf	fsr2l,f,c
 12823  000F9C  51D2               	movf	(_p_i2c1_trb_current+1)& (0+255),w,b
 12824  000F9E  22DA               	addwfc	fsr2h,f,c
 12825  000FA0  50DF               	movf	indf2,w,c
 12826  000FA2  6E35               	movwf	I2C1_ISR@i2c_bytes_left,c
 12827  000FA4                     i2l76:
 12828                           
 12829                           ;i2c1.c: 362: else
 12830                           ;i2c1.c: 363: {
 12831                           ;i2c1.c: 365: SSP1BUF = i2c_address;
 12832  000FA4  C040  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
 12833                           
 12834                           ;i2c1.c: 366: if(i2c_address & 0x01)
 12835  000FA8  A040               	btfss	I2C1_ISR@i2c_address,0,c
 12836  000FAA  D003               	goto	i2l6519
 12837                           
 12838                           ;i2c1.c: 367: {
 12839                           ;i2c1.c: 369: i2c1_state = S_MASTER_ACK_ADDR;
 12840  000FAC  0E05               	movlw	5
 12841  000FAE  6E38               	movwf	_i2c1_state,c
 12842                           
 12843                           ;i2c1.c: 370: }
 12844  000FB0  0012               	return	
 12845  000FB2                     i2l6519:
 12846                           
 12847                           ;i2c1.c: 371: else
 12848                           ;i2c1.c: 372: {
 12849                           ;i2c1.c: 374: i2c1_state = S_MASTER_SEND_DATA;
 12850  000FB2  0E03               	movlw	3
 12851  000FB4  6E38               	movwf	_i2c1_state,c
 12852                           
 12853                           ;i2c1.c: 375: }
 12854                           ;i2c1.c: 376: }
 12855                           ;i2c1.c: 377: break;
 12856  000FB6  0012               	return	
 12857  000FB8                     i2l82:
 12858                           
 12859                           ;i2c1.c: 382: if(SSP1CON2bits.ACKSTAT)
 12860  000FB8  ACC5               	btfss	4037,6,c	;volatile
 12861  000FBA  D007               	goto	i2l6527
 12862                           
 12863                           ;i2c1.c: 383: {
 12864                           ;i2c1.c: 385: i2c1_object.i2cErrors++;
 12865  000FBC  0100               	movlb	0	; () banked
 12866  000FBE  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 12867                           
 12868                           ; BSR set to: 0
 12869                           ;i2c1.c: 388: SSP1CON2bits.ACKSTAT = 0;
 12870  000FC0  9CC5               	bcf	4037,6,c	;volatile
 12871                           
 12872                           ; BSR set to: 0
 12873                           ;i2c1.c: 391: I2C1_Stop(I2C1_DATA_NO_ACK);
 12874  000FC2  0E05               	movlw	5
 12875  000FC4  EC16  F016         	call	_I2C1_Stop
 12876                           
 12877                           ;i2c1.c: 393: }
 12878  000FC8  0012               	return	
 12879  000FCA                     i2l6527:
 12880                           
 12881                           ;i2c1.c: 394: else
 12882                           ;i2c1.c: 395: {
 12883                           ;i2c1.c: 397: if(i2c_bytes_left-- == 0U)
 12884  000FCA  0635               	decf	I2C1_ISR@i2c_bytes_left,f,c
 12885  000FCC  2835               	incf	I2C1_ISR@i2c_bytes_left,w,c
 12886  000FCE  A4D8               	btfss	status,2,c
 12887  000FD0  D00F               	goto	i2l6537
 12888                           
 12889                           ;i2c1.c: 398: {
 12890                           ;i2c1.c: 402: p_i2c1_trb_current++;
 12891  000FD2  0E05               	movlw	5
 12892  000FD4  0100               	movlb	0	; () banked
 12893  000FD6  27D1               	addwf	_p_i2c1_trb_current& (0+255),f,b
 12894  000FD8  0E00               	movlw	0
 12895  000FDA  23D2               	addwfc	(_p_i2c1_trb_current+1)& (0+255),f,b
 12896                           
 12897                           ; BSR set to: 0
 12898                           ;i2c1.c: 405: if(--i2c1_trb_count == 0)
 12899  000FDC  2E39               	decfsz	_i2c1_trb_count,f,c
 12900  000FDE  D004               	goto	i2l86
 12901                           
 12902                           ; BSR set to: 0
 12903                           ;i2c1.c: 406: {
 12904                           ;i2c1.c: 407: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 12905  000FE0  0E00               	movlw	0
 12906  000FE2  EC16  F016         	call	_I2C1_Stop
 12907                           
 12908                           ;i2c1.c: 408: }
 12909  000FE6  0012               	return	
 12910  000FE8                     i2l86:
 12911                           
 12912                           ; BSR set to: 0
 12913                           ;i2c1.c: 409: else
 12914                           ;i2c1.c: 410: {
 12915                           ;i2c1.c: 417: SSP1CON2bits.RSEN = 1;
 12916  000FE8  82C5               	bsf	4037,1,c	;volatile
 12917                           
 12918                           ; BSR set to: 0
 12919                           ;i2c1.c: 420: i2c1_state = S_MASTER_SEND_ADDR;
 12920  000FEA  0E02               	movlw	2
 12921  000FEC  6E38               	movwf	_i2c1_state,c
 12922                           
 12923                           ; BSR set to: 0
 12924                           ;i2c1.c: 422: }
 12925                           ;i2c1.c: 423: }
 12926  000FEE  0012               	return	
 12927  000FF0                     i2l6537:
 12928                           
 12929                           ;i2c1.c: 424: else
 12930                           ;i2c1.c: 425: {
 12931                           ;i2c1.c: 427: SSP1BUF = *pi2c_buf_ptr++;
 12932  000FF0  C0BF  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 12933  000FF4  C0C0  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 12934  000FF8  50DF               	movf	indf2,w,c
 12935  000FFA  6EC9               	movwf	4041,c	;volatile
 12936  000FFC  0100               	movlb	0	; () banked
 12937  000FFE  4BBF               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 12938  001000  2BC0               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 12939                           
 12940                           ; BSR set to: 0
 12941                           ;i2c1.c: 428: }
 12942                           ;i2c1.c: 429: }
 12943                           ;i2c1.c: 430: break;
 12944                           
 12945                           ; BSR set to: 0
 12946  001002  0012               	return	
 12947  001004                     i2l89:
 12948                           
 12949                           ;i2c1.c: 435: if(SSP1CON2bits.ACKSTAT)
 12950  001004  ACC5               	btfss	4037,6,c	;volatile
 12951  001006  D007               	goto	i2l90
 12952                           
 12953                           ;i2c1.c: 436: {
 12954                           ;i2c1.c: 439: i2c1_object.i2cErrors++;
 12955  001008  0100               	movlb	0	; () banked
 12956  00100A  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 12957                           
 12958                           ; BSR set to: 0
 12959                           ;i2c1.c: 442: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 12960  00100C  0E04               	movlw	4
 12961  00100E  EC16  F016         	call	_I2C1_Stop
 12962                           
 12963                           ;i2c1.c: 445: SSP1CON2bits.ACKSTAT = 0;
 12964  001012  9CC5               	bcf	4037,6,c	;volatile
 12965                           
 12966                           ;i2c1.c: 446: }
 12967  001014  0012               	return	
 12968  001016                     i2l90:
 12969                           
 12970                           ;i2c1.c: 447: else
 12971                           ;i2c1.c: 448: {
 12972                           ;i2c1.c: 449: SSP1CON2bits.RCEN = 1;
 12973  001016  86C5               	bsf	4037,3,c	;volatile
 12974                           
 12975                           ;i2c1.c: 450: i2c1_state = S_MASTER_ACK_RCV_DATA;
 12976  001018  0E08               	movlw	8
 12977  00101A  6E38               	movwf	_i2c1_state,c
 12978                           
 12979                           ;i2c1.c: 451: }
 12980                           ;i2c1.c: 452: break;
 12981  00101C  0012               	return	
 12982  00101E                     i2l6549:
 12983                           
 12984                           ;i2c1.c: 459: i2c1_state = S_MASTER_ACK_RCV_DATA;
 12985  00101E  0E08               	movlw	8
 12986  001020  6E38               	movwf	_i2c1_state,c
 12987                           
 12988                           ;i2c1.c: 462: SSP1CON2bits.RCEN = 1;
 12989  001022  86C5               	bsf	4037,3,c	;volatile
 12990                           
 12991                           ;i2c1.c: 464: break;
 12992  001024  0012               	return	
 12993  001026                     i2l6553:
 12994                           
 12995                           ;i2c1.c: 469: *pi2c_buf_ptr++ = SSP1BUF;
 12996  001026  C0BF  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 12997  00102A  C0C0  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 12998  00102E  CFC9 FFDF          	movff	4041,indf2	;volatile
 12999  001032  0100               	movlb	0	; () banked
 13000  001034  4BBF               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 13001  001036  2BC0               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 13002                           
 13003                           ; BSR set to: 0
 13004                           ;i2c1.c: 472: if(--i2c_bytes_left)
 13005  001038  0E01               	movlw	1
 13006  00103A  5E35               	subwf	I2C1_ISR@i2c_bytes_left,f,c
 13007  00103C  B4D8               	btfsc	status,2,c
 13008  00103E  D004               	goto	i2l94
 13009                           
 13010                           ; BSR set to: 0
 13011                           ;i2c1.c: 473: {
 13012                           ;i2c1.c: 479: SSP1CON2bits.ACKDT = 0;
 13013  001040  9AC5               	bcf	4037,5,c	;volatile
 13014                           
 13015                           ; BSR set to: 0
 13016                           ;i2c1.c: 482: i2c1_state = S_MASTER_RCV_DATA;
 13017  001042  0E06               	movlw	6
 13018  001044  6E38               	movwf	_i2c1_state,c
 13019                           
 13020                           ;i2c1.c: 483: }
 13021  001046  D003               	goto	i2l6565
 13022  001048                     i2l94:
 13023                           
 13024                           ; BSR set to: 0
 13025                           ;i2c1.c: 484: else
 13026                           ;i2c1.c: 485: {
 13027                           ;i2c1.c: 489: SSP1CON2bits.ACKDT = 1;
 13028  001048  8AC5               	bsf	4037,5,c	;volatile
 13029                           
 13030                           ; BSR set to: 0
 13031                           ;i2c1.c: 491: I2C1_FunctionComplete();
 13032  00104A  ECB4  F017         	call	_I2C1_FunctionComplete	;wreg free
 13033  00104E                     i2l6565:
 13034                           
 13035                           ;i2c1.c: 492: }
 13036                           ;i2c1.c: 495: SSP1CON2bits.ACKEN = 1;
 13037  00104E  88C5               	bsf	4037,4,c	;volatile
 13038                           
 13039                           ;i2c1.c: 496: break;
 13040  001050  0012               	return	
 13041  001052                     i2l6567:
 13042                           
 13043                           ;i2c1.c: 499: case S_MASTER_SEND_STOP:
 13044                           ;i2c1.c: 502: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 13045  001052  0E00               	movlw	0
 13046  001054  EC16  F016         	call	_I2C1_Stop
 13047                           
 13048                           ;i2c1.c: 503: break;
 13049  001058  0012               	return	
 13050  00105A                     i2l6569:
 13051                           
 13052                           ;i2c1.c: 509: i2c1_object.i2cErrors++;
 13053  00105A  0100               	movlb	0	; () banked
 13054  00105C  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 13055                           
 13056                           ; BSR set to: 0
 13057                           ;i2c1.c: 510: I2C1_Stop(I2C1_LOST_STATE);
 13058  00105E  0E06               	movlw	6
 13059  001060  EC16  F016         	call	_I2C1_Stop
 13060                           
 13061                           ;i2c1.c: 513: }
 13062                           
 13063                           ;i2c1.c: 511: break;
 13064  001064  0012               	return	
 13065  001066                     i2l6575:
 13066  001066  5038               	movf	_i2c1_state,w,c
 13067                           
 13068                           ; Switch size 1, requested type "space"
 13069                           ; Number of cases is 11, Range of values is 0 to 11
 13070                           ; switch strategies available:
 13071                           ; Name         Instructions Cycles
 13072                           ; simple_byte           34    18 (average)
 13073                           ;	Chosen strategy is simple_byte
 13074  001068  0A00               	xorlw	0	; case 0
 13075  00106A  B4D8               	btfsc	status,2,c
 13076  00106C  D703               	goto	i2l60
 13077  00106E  0A01               	xorlw	1	; case 1
 13078  001070  B4D8               	btfsc	status,2,c
 13079  001072  D73F               	goto	i2l65
 13080  001074  0A03               	xorlw	3	; case 2
 13081  001076  B4D8               	btfsc	status,2,c
 13082  001078  D776               	goto	i2l6499
 13083  00107A  0A01               	xorlw	1	; case 3
 13084  00107C  B4D8               	btfsc	status,2,c
 13085  00107E  D79C               	goto	i2l82
 13086  001080  0A07               	xorlw	7	; case 4
 13087  001082  B4D8               	btfsc	status,2,c
 13088  001084  D7E6               	goto	i2l6567
 13089  001086  0A01               	xorlw	1	; case 5
 13090  001088  B4D8               	btfsc	status,2,c
 13091  00108A  D7BC               	goto	i2l89
 13092  00108C  0A03               	xorlw	3	; case 6
 13093  00108E  B4D8               	btfsc	status,2,c
 13094  001090  D7C6               	goto	i2l6549
 13095  001092  0A01               	xorlw	1	; case 7
 13096  001094  B4D8               	btfsc	status,2,c
 13097  001096  D7DD               	goto	i2l6567
 13098  001098  0A0F               	xorlw	15	; case 8
 13099  00109A  B4D8               	btfsc	status,2,c
 13100  00109C  D7C4               	goto	i2l6553
 13101  00109E  0A02               	xorlw	2	; case 10
 13102  0010A0  B4D8               	btfsc	status,2,c
 13103  0010A2  D72B               	goto	i2l66
 13104  0010A4  0A01               	xorlw	1	; case 11
 13105  0010A6  B4D8               	btfsc	status,2,c
 13106  0010A8  D73F               	goto	i2l71
 13107  0010AA  D7D7               	goto	i2l6569
 13108  0010AC                     __end_of_I2C1_ISR:
 13109                           	opt stack 0
 13110                           tosu	equ	0xFFF
 13111                           tosh	equ	0xFFE
 13112                           tosl	equ	0xFFD
 13113                           pclatu	equ	0xFFB
 13114                           pclath	equ	0xFFA
 13115                           tblptru	equ	0xFF8
 13116                           tblptrh	equ	0xFF7
 13117                           tblptrl	equ	0xFF6
 13118                           tablat	equ	0xFF5
 13119                           prodh	equ	0xFF4
 13120                           prodl	equ	0xFF3
 13121                           intcon	equ	0xFF2
 13122                           intcon2	equ	0xFF1
 13123                           postinc0	equ	0xFEE
 13124                           fsr0h	equ	0xFEA
 13125                           fsr0l	equ	0xFE9
 13126                           wreg	equ	0xFE8
 13127                           fsr1h	equ	0xFE2
 13128                           fsr1l	equ	0xFE1
 13129                           indf2	equ	0xFDF
 13130                           postinc2	equ	0xFDE
 13131                           postdec2	equ	0xFDD
 13132                           plusw2	equ	0xFDB
 13133                           fsr2h	equ	0xFDA
 13134                           fsr2l	equ	0xFD9
 13135                           status	equ	0xFD8
 13136                           
 13137 ;; *************** function _I2C1_Stop *****************
 13138 ;; Defined at:
 13139 ;;		line 534 in file "mcc_generated_files/i2c1.c"
 13140 ;; Parameters:    Size  Location     Type
 13141 ;;  completion_c    1    wreg     enum E7739
 13142 ;; Auto vars:     Size  Location     Type
 13143 ;;  completion_c    1    2[COMRAM] enum E7739
 13144 ;; Return value:  Size  Location     Type
 13145 ;;                  1    wreg      void 
 13146 ;; Registers used:
 13147 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13148 ;; Tracked objects:
 13149 ;;		On entry : 0/0
 13150 ;;		On exit  : 0/0
 13151 ;;		Unchanged: 0/0
 13152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13153 ;;      Params:         0       0       0       0       0       0       0
 13154 ;;      Locals:         1       0       0       0       0       0       0
 13155 ;;      Temps:          2       0       0       0       0       0       0
 13156 ;;      Totals:         3       0       0       0       0       0       0
 13157 ;;Total ram usage:        3 bytes
 13158 ;; Hardware stack levels used:    1
 13159 ;; This function calls:
 13160 ;;		Nothing
 13161 ;; This function is called by:
 13162 ;;		_I2C1_ISR
 13163 ;; This function uses a non-reentrant model
 13164 ;;
 13165                           
 13166                           	psect	text68
 13167  002C2C                     __ptext68:
 13168                           	opt stack 0
 13169  002C2C                     _I2C1_Stop:
 13170                           	opt stack 22
 13171                           
 13172                           ;incstack = 0
 13173                           ;I2C1_Stop@completion_code stored from wreg
 13174  002C2C  6E03               	movwf	I2C1_Stop@completion_code,c
 13175                           
 13176                           ;i2c1.c: 537: SSP1CON2bits.PEN = 1;
 13177  002C2E  84C5               	bsf	4037,2,c	;volatile
 13178                           
 13179                           ;i2c1.c: 540: if (p_i2c1_current->pTrFlag != (0))
 13180  002C30  0100               	movlb	0	; () banked
 13181  002C32  EE20 F003          	lfsr	2,3
 13182  002C36  51CF               	movf	_p_i2c1_current& (0+255),w,b
 13183  002C38  26D9               	addwf	fsr2l,f,c
 13184  002C3A  51D0               	movf	(_p_i2c1_current+1)& (0+255),w,b
 13185  002C3C  22DA               	addwfc	fsr2h,f,c
 13186  002C3E  50DE               	movf	postinc2,w,c
 13187  002C40  10DE               	iorwf	postinc2,w,c
 13188  002C42  B4D8               	btfsc	status,2,c
 13189  002C44  D011               	goto	i2l6059
 13190                           
 13191                           ; BSR set to: 0
 13192                           ;i2c1.c: 541: {
 13193                           ;i2c1.c: 543: *(p_i2c1_current->pTrFlag) = completion_code;
 13194  002C46  0100               	movlb	0	; () banked
 13195  002C48  EE20 F003          	lfsr	2,3
 13196  002C4C  51CF               	movf	_p_i2c1_current& (0+255),w,b
 13197  002C4E  26D9               	addwf	fsr2l,f,c
 13198  002C50  51D0               	movf	(_p_i2c1_current+1)& (0+255),w,b
 13199  002C52  22DA               	addwfc	fsr2h,f,c
 13200  002C54  CFDE F001          	movff	postinc2,??_I2C1_Stop
 13201  002C58  CFDD F002          	movff	postdec2,??_I2C1_Stop+1
 13202  002C5C  C001  FFD9         	movff	??_I2C1_Stop,fsr2l
 13203  002C60  C002  FFDA         	movff	??_I2C1_Stop+1,fsr2h
 13204  002C64  C003  FFDF         	movff	I2C1_Stop@completion_code,indf2
 13205  002C68                     i2l6059:
 13206                           
 13207                           ; BSR set to: 0
 13208                           ;i2c1.c: 544: }
 13209                           ;i2c1.c: 547: i2c1_state = S_MASTER_IDLE;
 13210  002C68  0E00               	movlw	0
 13211  002C6A  6E38               	movwf	_i2c1_state,c
 13212                           
 13213                           ; BSR set to: 0
 13214  002C6C  0012               	return		;funcret
 13215  002C6E                     __end_of_I2C1_Stop:
 13216                           	opt stack 0
 13217                           tosu	equ	0xFFF
 13218                           tosh	equ	0xFFE
 13219                           tosl	equ	0xFFD
 13220                           pclatu	equ	0xFFB
 13221                           pclath	equ	0xFFA
 13222                           tblptru	equ	0xFF8
 13223                           tblptrh	equ	0xFF7
 13224                           tblptrl	equ	0xFF6
 13225                           tablat	equ	0xFF5
 13226                           prodh	equ	0xFF4
 13227                           prodl	equ	0xFF3
 13228                           intcon	equ	0xFF2
 13229                           intcon2	equ	0xFF1
 13230                           postinc0	equ	0xFEE
 13231                           fsr0h	equ	0xFEA
 13232                           fsr0l	equ	0xFE9
 13233                           wreg	equ	0xFE8
 13234                           fsr1h	equ	0xFE2
 13235                           fsr1l	equ	0xFE1
 13236                           indf2	equ	0xFDF
 13237                           postinc2	equ	0xFDE
 13238                           postdec2	equ	0xFDD
 13239                           plusw2	equ	0xFDB
 13240                           fsr2h	equ	0xFDA
 13241                           fsr2l	equ	0xFD9
 13242                           status	equ	0xFD8
 13243                           
 13244 ;; *************** function _I2C1_FunctionComplete *****************
 13245 ;; Defined at:
 13246 ;;		line 516 in file "mcc_generated_files/i2c1.c"
 13247 ;; Parameters:    Size  Location     Type
 13248 ;;		None
 13249 ;; Auto vars:     Size  Location     Type
 13250 ;;		None
 13251 ;; Return value:  Size  Location     Type
 13252 ;;                  1    wreg      void 
 13253 ;; Registers used:
 13254 ;;		wreg, status,2, status,0
 13255 ;; Tracked objects:
 13256 ;;		On entry : 0/0
 13257 ;;		On exit  : 0/0
 13258 ;;		Unchanged: 0/0
 13259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13260 ;;      Params:         0       0       0       0       0       0       0
 13261 ;;      Locals:         0       0       0       0       0       0       0
 13262 ;;      Temps:          0       0       0       0       0       0       0
 13263 ;;      Totals:         0       0       0       0       0       0       0
 13264 ;;Total ram usage:        0 bytes
 13265 ;; Hardware stack levels used:    1
 13266 ;; This function calls:
 13267 ;;		Nothing
 13268 ;; This function is called by:
 13269 ;;		_I2C1_ISR
 13270 ;; This function uses a non-reentrant model
 13271 ;;
 13272                           
 13273                           	psect	text69
 13274  002F68                     __ptext69:
 13275                           	opt stack 0
 13276  002F68                     _I2C1_FunctionComplete:
 13277                           	opt stack 22
 13278                           
 13279                           ;i2c1.c: 520: p_i2c1_trb_current++;
 13280                           
 13281                           ; BSR set to: 0
 13282                           ;incstack = 0
 13283  002F68  0E05               	movlw	5
 13284  002F6A  0100               	movlb	0	; () banked
 13285  002F6C  27D1               	addwf	_p_i2c1_trb_current& (0+255),f,b
 13286  002F6E  0E00               	movlw	0
 13287  002F70  23D2               	addwfc	(_p_i2c1_trb_current+1)& (0+255),f,b
 13288                           
 13289                           ; BSR set to: 0
 13290                           ;i2c1.c: 523: if(--i2c1_trb_count == 0)
 13291  002F72  2E39               	decfsz	_i2c1_trb_count,f,c
 13292  002F74  D003               	goto	i2l6067
 13293                           
 13294                           ; BSR set to: 0
 13295                           ;i2c1.c: 524: {
 13296                           ;i2c1.c: 525: i2c1_state = S_MASTER_SEND_STOP;
 13297  002F76  0E04               	movlw	4
 13298  002F78  6E38               	movwf	_i2c1_state,c
 13299                           
 13300                           ;i2c1.c: 526: }
 13301  002F7A  0012               	return	
 13302  002F7C                     i2l6067:
 13303                           
 13304                           ; BSR set to: 0
 13305                           ;i2c1.c: 527: else
 13306                           ;i2c1.c: 528: {
 13307                           ;i2c1.c: 529: i2c1_state = S_MASTER_RESTART;
 13308  002F7C  0E01               	movlw	1
 13309  002F7E  6E38               	movwf	_i2c1_state,c
 13310  002F80  0012               	return	
 13311  002F82                     __end_of_I2C1_FunctionComplete:
 13312                           	opt stack 0
 13313                           tosu	equ	0xFFF
 13314                           tosh	equ	0xFFE
 13315                           tosl	equ	0xFFD
 13316                           pclatu	equ	0xFFB
 13317                           pclath	equ	0xFFA
 13318                           tblptru	equ	0xFF8
 13319                           tblptrh	equ	0xFF7
 13320                           tblptrl	equ	0xFF6
 13321                           tablat	equ	0xFF5
 13322                           prodh	equ	0xFF4
 13323                           prodl	equ	0xFF3
 13324                           intcon	equ	0xFF2
 13325                           intcon2	equ	0xFF1
 13326                           postinc0	equ	0xFEE
 13327                           fsr0h	equ	0xFEA
 13328                           fsr0l	equ	0xFE9
 13329                           wreg	equ	0xFE8
 13330                           fsr1h	equ	0xFE2
 13331                           fsr1l	equ	0xFE1
 13332                           indf2	equ	0xFDF
 13333                           postinc2	equ	0xFDE
 13334                           postdec2	equ	0xFDD
 13335                           plusw2	equ	0xFDB
 13336                           fsr2h	equ	0xFDA
 13337                           fsr2l	equ	0xFD9
 13338                           status	equ	0xFD8
 13339                           
 13340 ;; *************** function _I2C1_BusCollisionISR *****************
 13341 ;; Defined at:
 13342 ;;		line 681 in file "mcc_generated_files/i2c1.c"
 13343 ;; Parameters:    Size  Location     Type
 13344 ;;		None
 13345 ;; Auto vars:     Size  Location     Type
 13346 ;;		None
 13347 ;; Return value:  Size  Location     Type
 13348 ;;                  1    wreg      void 
 13349 ;; Registers used:
 13350 ;;		None
 13351 ;; Tracked objects:
 13352 ;;		On entry : 0/0
 13353 ;;		On exit  : 0/0
 13354 ;;		Unchanged: 0/0
 13355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13356 ;;      Params:         0       0       0       0       0       0       0
 13357 ;;      Locals:         0       0       0       0       0       0       0
 13358 ;;      Temps:          0       0       0       0       0       0       0
 13359 ;;      Totals:         0       0       0       0       0       0       0
 13360 ;;Total ram usage:        0 bytes
 13361 ;; Hardware stack levels used:    1
 13362 ;; This function calls:
 13363 ;;		Nothing
 13364 ;; This function is called by:
 13365 ;;		_INTERRUPT_InterruptManager
 13366 ;; This function uses a non-reentrant model
 13367 ;;
 13368                           
 13369                           	psect	text70
 13370  00304C                     __ptext70:
 13371                           	opt stack 0
 13372  00304C                     _I2C1_BusCollisionISR:
 13373                           	opt stack 23
 13374                           
 13375                           ; BSR set to: 0
 13376                           ;incstack = 0
 13377  00304C  0012               	return		;funcret
 13378  00304E                     __end_of_I2C1_BusCollisionISR:
 13379                           	opt stack 0
 13380                           tosu	equ	0xFFF
 13381                           tosh	equ	0xFFE
 13382                           tosl	equ	0xFFD
 13383                           pclatu	equ	0xFFB
 13384                           pclath	equ	0xFFA
 13385                           tblptru	equ	0xFF8
 13386                           tblptrh	equ	0xFF7
 13387                           tblptrl	equ	0xFF6
 13388                           tablat	equ	0xFF5
 13389                           prodh	equ	0xFF4
 13390                           prodl	equ	0xFF3
 13391                           intcon	equ	0xFF2
 13392                           intcon2	equ	0xFF1
 13393                           postinc0	equ	0xFEE
 13394                           fsr0h	equ	0xFEA
 13395                           fsr0l	equ	0xFE9
 13396                           wreg	equ	0xFE8
 13397                           fsr1h	equ	0xFE2
 13398                           fsr1l	equ	0xFE1
 13399                           indf2	equ	0xFDF
 13400                           postinc2	equ	0xFDE
 13401                           postdec2	equ	0xFDD
 13402                           plusw2	equ	0xFDB
 13403                           fsr2h	equ	0xFDA
 13404                           fsr2l	equ	0xFD9
 13405                           status	equ	0xFD8
 13406                           
 13407 ;; *************** function _EUSART1_Transmit_ISR *****************
 13408 ;; Defined at:
 13409 ;;		line 150 in file "UART.c"
 13410 ;; Parameters:    Size  Location     Type
 13411 ;;		None
 13412 ;; Auto vars:     Size  Location     Type
 13413 ;;		None
 13414 ;; Return value:  Size  Location     Type
 13415 ;;                  1    wreg      void 
 13416 ;; Registers used:
 13417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13418 ;; Tracked objects:
 13419 ;;		On entry : 0/0
 13420 ;;		On exit  : 0/0
 13421 ;;		Unchanged: 0/0
 13422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13423 ;;      Params:         0       0       0       0       0       0       0
 13424 ;;      Locals:         0       0       0       0       0       0       0
 13425 ;;      Temps:          0       0       0       0       0       0       0
 13426 ;;      Totals:         0       0       0       0       0       0       0
 13427 ;;Total ram usage:        0 bytes
 13428 ;; Hardware stack levels used:    1
 13429 ;; Hardware stack levels required when called:    2
 13430 ;; This function calls:
 13431 ;;		i2_UART_buff_get
 13432 ;;		i2_UART_buff_size
 13433 ;; This function is called by:
 13434 ;;		_INTERRUPT_InterruptManager
 13435 ;; This function uses a non-reentrant model
 13436 ;;
 13437                           
 13438                           	psect	text71
 13439  002D54                     __ptext71:
 13440                           	opt stack 0
 13441  002D54                     _EUSART1_Transmit_ISR:
 13442                           	opt stack 21
 13443                           
 13444                           ;UART.c: 152: if (UART_buff_size(&output_buffer) > 0) {
 13445                           
 13446                           ;incstack = 0
 13447  002D54  0E00               	movlw	low _output_buffer
 13448  002D56  6E01               	movwf	i2UART_buff_size@_this,c
 13449  002D58  0E05               	movlw	high _output_buffer
 13450  002D5A  6E02               	movwf	i2UART_buff_size@_this+1,c
 13451  002D5C  ECE3  F017         	call	i2_UART_buff_size	;wreg free
 13452  002D60  BE02               	btfsc	?i2_UART_buff_size+1,7,c
 13453  002D62  D00D               	goto	i2l4919
 13454  002D64  5002               	movf	?i2_UART_buff_size+1,w,c
 13455  002D66  E103               	bnz	i2u499_40
 13456  002D68  0401               	decf	?i2_UART_buff_size,w,c
 13457  002D6A  A0D8               	btfss	status,0,c
 13458  002D6C  D008               	goto	i2l4919
 13459  002D6E                     i2u499_40:
 13460                           
 13461                           ;UART.c: 153: TXREG1 = UART_buff_get(&output_buffer);
 13462  002D6E  0E00               	movlw	low _output_buffer
 13463  002D70  6E07               	movwf	i2UART_buff_get@_this,c
 13464  002D72  0E05               	movlw	high _output_buffer
 13465  002D74  6E08               	movwf	i2UART_buff_get@_this+1,c
 13466  002D76  EC5C  F013         	call	i2_UART_buff_get	;wreg free
 13467  002D7A  6EAD               	movwf	4013,c	;volatile
 13468                           
 13469                           ;UART.c: 154: } else {
 13470  002D7C  0012               	return	
 13471  002D7E                     i2l4919:
 13472                           
 13473                           ;UART.c: 155: Transmit_stall = 1;
 13474  002D7E  0E01               	movlw	1
 13475  002D80  6E44               	movwf	_Transmit_stall,c
 13476                           
 13477                           ;UART.c: 156: PIE1bits.TX1IE = 0;
 13478  002D82  989D               	bcf	3997,4,c	;volatile
 13479  002D84  0012               	return	
 13480  002D86                     __end_of_EUSART1_Transmit_ISR:
 13481                           	opt stack 0
 13482                           tosu	equ	0xFFF
 13483                           tosh	equ	0xFFE
 13484                           tosl	equ	0xFFD
 13485                           pclatu	equ	0xFFB
 13486                           pclath	equ	0xFFA
 13487                           tblptru	equ	0xFF8
 13488                           tblptrh	equ	0xFF7
 13489                           tblptrl	equ	0xFF6
 13490                           tablat	equ	0xFF5
 13491                           prodh	equ	0xFF4
 13492                           prodl	equ	0xFF3
 13493                           intcon	equ	0xFF2
 13494                           intcon2	equ	0xFF1
 13495                           postinc0	equ	0xFEE
 13496                           fsr0h	equ	0xFEA
 13497                           fsr0l	equ	0xFE9
 13498                           wreg	equ	0xFE8
 13499                           fsr1h	equ	0xFE2
 13500                           fsr1l	equ	0xFE1
 13501                           indf2	equ	0xFDF
 13502                           postinc2	equ	0xFDE
 13503                           postdec2	equ	0xFDD
 13504                           plusw2	equ	0xFDB
 13505                           fsr2h	equ	0xFDA
 13506                           fsr2l	equ	0xFD9
 13507                           status	equ	0xFD8
 13508                           
 13509 ;; *************** function i2_UART_buff_size *****************
 13510 ;; Defined at:
 13511 ;;		line 102 in file "UART.c"
 13512 ;; Parameters:    Size  Location     Type
 13513 ;;  _this           2    0[COMRAM] PTR struct UART_ring_buf
 13514 ;;		 -> output_buffer(206), input_buffer(206), 
 13515 ;; Auto vars:     Size  Location     Type
 13516 ;;		None
 13517 ;; Return value:  Size  Location     Type
 13518 ;;                  2    0[COMRAM] int 
 13519 ;; Registers used:
 13520 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13521 ;; Tracked objects:
 13522 ;;		On entry : 0/0
 13523 ;;		On exit  : 0/0
 13524 ;;		Unchanged: 0/0
 13525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13526 ;;      Params:         2       0       0       0       0       0       0
 13527 ;;      Locals:         0       0       0       0       0       0       0
 13528 ;;      Temps:          0       0       0       0       0       0       0
 13529 ;;      Totals:         2       0       0       0       0       0       0
 13530 ;;Total ram usage:        2 bytes
 13531 ;; Hardware stack levels used:    1
 13532 ;; This function calls:
 13533 ;;		Nothing
 13534 ;; This function is called by:
 13535 ;;		_EUSART1_Transmit_ISR
 13536 ;; This function uses a non-reentrant model
 13537 ;;
 13538                           
 13539                           	psect	text72
 13540  002FC6                     __ptext72:
 13541                           	opt stack 0
 13542  002FC6                     i2_UART_buff_size:
 13543                           	opt stack 22
 13544                           
 13545                           ;UART.c: 103: return (_this->count);
 13546                           
 13547                           ;incstack = 0
 13548  002FC6  EE20 F0CC          	lfsr	2,204
 13549  002FCA  5001               	movf	i2UART_buff_size@_this,w,c
 13550  002FCC  26D9               	addwf	fsr2l,f,c
 13551  002FCE  5002               	movf	i2UART_buff_size@_this+1,w,c
 13552  002FD0  22DA               	addwfc	fsr2h,f,c
 13553  002FD2  CFDE F001          	movff	postinc2,?i2_UART_buff_size
 13554  002FD6  CFDD F002          	movff	postdec2,?i2_UART_buff_size+1
 13555  002FDA  0012               	return	
 13556  002FDC                     __end_ofi2_UART_buff_size:
 13557                           	opt stack 0
 13558                           tosu	equ	0xFFF
 13559                           tosh	equ	0xFFE
 13560                           tosl	equ	0xFFD
 13561                           pclatu	equ	0xFFB
 13562                           pclath	equ	0xFFA
 13563                           tblptru	equ	0xFF8
 13564                           tblptrh	equ	0xFF7
 13565                           tblptrl	equ	0xFF6
 13566                           tablat	equ	0xFF5
 13567                           prodh	equ	0xFF4
 13568                           prodl	equ	0xFF3
 13569                           intcon	equ	0xFF2
 13570                           intcon2	equ	0xFF1
 13571                           postinc0	equ	0xFEE
 13572                           fsr0h	equ	0xFEA
 13573                           fsr0l	equ	0xFE9
 13574                           wreg	equ	0xFE8
 13575                           fsr1h	equ	0xFE2
 13576                           fsr1l	equ	0xFE1
 13577                           indf2	equ	0xFDF
 13578                           postinc2	equ	0xFDE
 13579                           postdec2	equ	0xFDD
 13580                           plusw2	equ	0xFDB
 13581                           fsr2h	equ	0xFDA
 13582                           fsr2l	equ	0xFD9
 13583                           status	equ	0xFD8
 13584                           
 13585 ;; *************** function i2_UART_buff_get *****************
 13586 ;; Defined at:
 13587 ;;		line 81 in file "UART.c"
 13588 ;; Parameters:    Size  Location     Type
 13589 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 13590 ;;		 -> output_buffer(206), input_buffer(206), 
 13591 ;; Auto vars:     Size  Location     Type
 13592 ;;  UART_buff_ge    1   10[COMRAM] unsigned char 
 13593 ;; Return value:  Size  Location     Type
 13594 ;;                  1    wreg      unsigned char 
 13595 ;; Registers used:
 13596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13597 ;; Tracked objects:
 13598 ;;		On entry : 0/0
 13599 ;;		On exit  : 0/0
 13600 ;;		Unchanged: 0/0
 13601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13602 ;;      Params:         2       0       0       0       0       0       0
 13603 ;;      Locals:         1       0       0       0       0       0       0
 13604 ;;      Temps:          2       0       0       0       0       0       0
 13605 ;;      Totals:         5       0       0       0       0       0       0
 13606 ;;Total ram usage:        5 bytes
 13607 ;; Hardware stack levels used:    1
 13608 ;; Hardware stack levels required when called:    1
 13609 ;; This function calls:
 13610 ;;		i2_UART_buff_modulo_inc
 13611 ;; This function is called by:
 13612 ;;		_EUSART1_Transmit_ISR
 13613 ;; This function uses a non-reentrant model
 13614 ;;
 13615                           
 13616                           	psect	text73
 13617  0026B8                     __ptext73:
 13618                           	opt stack 0
 13619  0026B8                     i2_UART_buff_get:
 13620                           	opt stack 21
 13621                           
 13622                           ;UART.c: 82: unsigned char c;
 13623                           ;UART.c: 83: if (_this->count > 0) {
 13624                           
 13625                           ;incstack = 0
 13626  0026B8  EE20 F0CC          	lfsr	2,204
 13627  0026BC  5007               	movf	i2UART_buff_get@_this,w,c
 13628  0026BE  26D9               	addwf	fsr2l,f,c
 13629  0026C0  5008               	movf	i2UART_buff_get@_this+1,w,c
 13630  0026C2  22DA               	addwfc	fsr2h,f,c
 13631  0026C4  0E01               	movlw	1
 13632  0026C6  BEDB               	btfsc	plusw2,7,c
 13633  0026C8  D03C               	goto	i2l4743
 13634  0026CA  0E01               	movlw	1
 13635  0026CC  50DB               	movf	plusw2,w,c
 13636  0026CE  E103               	bnz	i2u479_40
 13637  0026D0  04DE               	decf	postinc2,w,c
 13638  0026D2  A0D8               	btfss	status,0,c
 13639  0026D4  D036               	goto	i2l4743
 13640  0026D6                     i2u479_40:
 13641                           
 13642                           ;UART.c: 84: c = _this->buf[_this->tail];
 13643  0026D6  EE20 F0CA          	lfsr	2,202
 13644  0026DA  5007               	movf	i2UART_buff_get@_this,w,c
 13645  0026DC  26D9               	addwf	fsr2l,f,c
 13646  0026DE  5008               	movf	i2UART_buff_get@_this+1,w,c
 13647  0026E0  22DA               	addwfc	fsr2h,f,c
 13648  0026E2  CFDE F009          	movff	postinc2,??i2_UART_buff_get
 13649  0026E6  CFDD F00A          	movff	postdec2,??i2_UART_buff_get+1
 13650  0026EA  5009               	movf	??i2_UART_buff_get,w,c
 13651  0026EC  2407               	addwf	i2UART_buff_get@_this,w,c
 13652  0026EE  6ED9               	movwf	fsr2l,c
 13653  0026F0  500A               	movf	??i2_UART_buff_get+1,w,c
 13654  0026F2  2008               	addwfc	i2UART_buff_get@_this+1,w,c
 13655  0026F4  6EDA               	movwf	fsr2h,c
 13656  0026F6  50DF               	movf	indf2,w,c
 13657  0026F8  6E0B               	movwf	i2UART_buff_get@c,c
 13658                           
 13659                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 13660  0026FA  EE20 F0CA          	lfsr	2,202
 13661  0026FE  5007               	movf	i2UART_buff_get@_this,w,c
 13662  002700  26D9               	addwf	fsr2l,f,c
 13663  002702  5008               	movf	i2UART_buff_get@_this+1,w,c
 13664  002704  22DA               	addwfc	fsr2h,f,c
 13665  002706  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 13666  00270A  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 13667  00270E  0E00               	movlw	0
 13668  002710  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 13669  002712  0EC8               	movlw	200
 13670  002714  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 13671  002716  EC1A  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 13672  00271A  EE20 F0CA          	lfsr	2,202
 13673  00271E  5007               	movf	i2UART_buff_get@_this,w,c
 13674  002720  26D9               	addwf	fsr2l,f,c
 13675  002722  5008               	movf	i2UART_buff_get@_this+1,w,c
 13676  002724  22DA               	addwfc	fsr2h,f,c
 13677  002726  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 13678  00272A  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 13679                           
 13680                           ;UART.c: 86: --_this->count;
 13681  00272E  EE20 F0CC          	lfsr	2,204
 13682  002732  5007               	movf	i2UART_buff_get@_this,w,c
 13683  002734  26D9               	addwf	fsr2l,f,c
 13684  002736  5008               	movf	i2UART_buff_get@_this+1,w,c
 13685  002738  22DA               	addwfc	fsr2h,f,c
 13686  00273A  06DE               	decf	postinc2,f,c
 13687  00273C  0E00               	movlw	0
 13688  00273E  5ADD               	subwfb	postdec2,f,c
 13689                           
 13690                           ;UART.c: 87: } else {
 13691  002740  D002               	goto	i2l1162
 13692  002742                     i2l4743:
 13693                           
 13694                           ;UART.c: 88: c = 0;
 13695  002742  0E00               	movlw	0
 13696  002744  6E0B               	movwf	i2UART_buff_get@c,c
 13697  002746                     i2l1162:
 13698                           
 13699                           ;UART.c: 89: }
 13700                           ;UART.c: 90: return (c);
 13701  002746  500B               	movf	i2UART_buff_get@c,w,c
 13702  002748  0012               	return	
 13703  00274A                     __end_ofi2_UART_buff_get:
 13704                           	opt stack 0
 13705                           tosu	equ	0xFFF
 13706                           tosh	equ	0xFFE
 13707                           tosl	equ	0xFFD
 13708                           pclatu	equ	0xFFB
 13709                           pclath	equ	0xFFA
 13710                           tblptru	equ	0xFF8
 13711                           tblptrh	equ	0xFF7
 13712                           tblptrl	equ	0xFF6
 13713                           tablat	equ	0xFF5
 13714                           prodh	equ	0xFF4
 13715                           prodl	equ	0xFF3
 13716                           intcon	equ	0xFF2
 13717                           intcon2	equ	0xFF1
 13718                           postinc0	equ	0xFEE
 13719                           fsr0h	equ	0xFEA
 13720                           fsr0l	equ	0xFE9
 13721                           wreg	equ	0xFE8
 13722                           fsr1h	equ	0xFE2
 13723                           fsr1l	equ	0xFE1
 13724                           indf2	equ	0xFDF
 13725                           postinc2	equ	0xFDE
 13726                           postdec2	equ	0xFDD
 13727                           plusw2	equ	0xFDB
 13728                           fsr2h	equ	0xFDA
 13729                           fsr2l	equ	0xFD9
 13730                           status	equ	0xFD8
 13731                           
 13732 ;; *************** function _EUSART1_Receive_ISR *****************
 13733 ;; Defined at:
 13734 ;;		line 139 in file "UART.c"
 13735 ;; Parameters:    Size  Location     Type
 13736 ;;		None
 13737 ;; Auto vars:     Size  Location     Type
 13738 ;;  data            1   11[COMRAM] unsigned char 
 13739 ;; Return value:  Size  Location     Type
 13740 ;;                  1    wreg      void 
 13741 ;; Registers used:
 13742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13743 ;; Tracked objects:
 13744 ;;		On entry : 0/0
 13745 ;;		On exit  : 0/0
 13746 ;;		Unchanged: 0/0
 13747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13748 ;;      Params:         0       0       0       0       0       0       0
 13749 ;;      Locals:         1       0       0       0       0       0       0
 13750 ;;      Temps:          0       0       0       0       0       0       0
 13751 ;;      Totals:         1       0       0       0       0       0       0
 13752 ;;Total ram usage:        1 bytes
 13753 ;; Hardware stack levels used:    1
 13754 ;; Hardware stack levels required when called:    2
 13755 ;; This function calls:
 13756 ;;		i2_UART_buff_put
 13757 ;; This function is called by:
 13758 ;;		_INTERRUPT_InterruptManager
 13759 ;; This function uses a non-reentrant model
 13760 ;;
 13761                           
 13762                           	psect	text74
 13763  002F4A                     __ptext74:
 13764                           	opt stack 0
 13765  002F4A                     _EUSART1_Receive_ISR:
 13766                           	opt stack 21
 13767                           
 13768                           ;UART.c: 140: if (1 == RC1STAbits.OERR) {
 13769                           
 13770                           ;incstack = 0
 13771  002F4A  A2AB               	btfss	4011,1,c	;volatile
 13772  002F4C  D002               	goto	i2l1193
 13773                           
 13774                           ;UART.c: 143: RC1STAbits.CREN = 0;
 13775  002F4E  98AB               	bcf	4011,4,c	;volatile
 13776                           
 13777                           ;UART.c: 144: RC1STAbits.CREN = 1;
 13778  002F50  88AB               	bsf	4011,4,c	;volatile
 13779  002F52                     i2l1193:
 13780                           
 13781                           ;UART.c: 145: }
 13782                           ;UART.c: 146: unsigned char data = RCREG1;
 13783  002F52  CFAE F00C          	movff	4014,EUSART1_Receive_ISR@data	;volatile
 13784                           
 13785                           ;UART.c: 147: UART_buff_put(&input_buffer, data);
 13786  002F56  0E00               	movlw	low _input_buffer
 13787  002F58  6E07               	movwf	i2UART_buff_put@_this,c
 13788  002F5A  0E04               	movlw	high _input_buffer
 13789  002F5C  6E08               	movwf	i2UART_buff_put@_this+1,c
 13790  002F5E  C00C  F009         	movff	EUSART1_Receive_ISR@data,i2UART_buff_put@c
 13791  002F62  EC8E  F00D         	call	i2_UART_buff_put	;wreg free
 13792  002F66  0012               	return		;funcret
 13793  002F68                     __end_of_EUSART1_Receive_ISR:
 13794                           	opt stack 0
 13795                           tosu	equ	0xFFF
 13796                           tosh	equ	0xFFE
 13797                           tosl	equ	0xFFD
 13798                           pclatu	equ	0xFFB
 13799                           pclath	equ	0xFFA
 13800                           tblptru	equ	0xFF8
 13801                           tblptrh	equ	0xFF7
 13802                           tblptrl	equ	0xFF6
 13803                           tablat	equ	0xFF5
 13804                           prodh	equ	0xFF4
 13805                           prodl	equ	0xFF3
 13806                           intcon	equ	0xFF2
 13807                           intcon2	equ	0xFF1
 13808                           postinc0	equ	0xFEE
 13809                           fsr0h	equ	0xFEA
 13810                           fsr0l	equ	0xFE9
 13811                           wreg	equ	0xFE8
 13812                           fsr1h	equ	0xFE2
 13813                           fsr1l	equ	0xFE1
 13814                           indf2	equ	0xFDF
 13815                           postinc2	equ	0xFDE
 13816                           postdec2	equ	0xFDD
 13817                           plusw2	equ	0xFDB
 13818                           fsr2h	equ	0xFDA
 13819                           fsr2l	equ	0xFD9
 13820                           status	equ	0xFD8
 13821                           
 13822 ;; *************** function i2_UART_buff_put *****************
 13823 ;; Defined at:
 13824 ;;		line 68 in file "UART.c"
 13825 ;; Parameters:    Size  Location     Type
 13826 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 13827 ;;		 -> output_buffer(206), input_buffer(206), 
 13828 ;;  c               1    8[COMRAM] const unsigned char 
 13829 ;; Auto vars:     Size  Location     Type
 13830 ;;		None
 13831 ;; Return value:  Size  Location     Type
 13832 ;;                  1    wreg      void 
 13833 ;; Registers used:
 13834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13835 ;; Tracked objects:
 13836 ;;		On entry : 0/0
 13837 ;;		On exit  : 0/0
 13838 ;;		Unchanged: 0/0
 13839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13840 ;;      Params:         3       0       0       0       0       0       0
 13841 ;;      Locals:         0       0       0       0       0       0       0
 13842 ;;      Temps:          2       0       0       0       0       0       0
 13843 ;;      Totals:         5       0       0       0       0       0       0
 13844 ;;Total ram usage:        5 bytes
 13845 ;; Hardware stack levels used:    1
 13846 ;; Hardware stack levels required when called:    1
 13847 ;; This function calls:
 13848 ;;		i2_UART_buff_modulo_inc
 13849 ;; This function is called by:
 13850 ;;		_EUSART1_Receive_ISR
 13851 ;; This function uses a non-reentrant model
 13852 ;;
 13853                           
 13854                           	psect	text75
 13855  001B1C                     __ptext75:
 13856                           	opt stack 0
 13857  001B1C                     i2_UART_buff_put:
 13858                           	opt stack 21
 13859                           
 13860                           ;UART.c: 69: if (_this->count < 200) {
 13861                           
 13862                           ;incstack = 0
 13863  001B1C  EE20 F0CC          	lfsr	2,204
 13864  001B20  5007               	movf	i2UART_buff_put@_this,w,c
 13865  001B22  26D9               	addwf	fsr2l,f,c
 13866  001B24  5008               	movf	i2UART_buff_put@_this+1,w,c
 13867  001B26  22DA               	addwfc	fsr2h,f,c
 13868  001B28  0E01               	movlw	1
 13869  001B2A  BEDB               	btfsc	plusw2,7,c
 13870  001B2C  D007               	goto	i2l4723
 13871  001B2E  0E01               	movlw	1
 13872  001B30  50DB               	movf	plusw2,w,c
 13873  001B32  E13A               	bnz	i2l4729
 13874  001B34  0EC8               	movlw	200
 13875  001B36  5CDE               	subwf	postinc2,w,c
 13876  001B38  B0D8               	btfsc	status,0,c
 13877  001B3A  D036               	goto	i2l4729
 13878  001B3C                     i2l4723:
 13879                           
 13880                           ;UART.c: 70: _this->buf[_this->head] = c;
 13881  001B3C  EE20 F0C8          	lfsr	2,200
 13882  001B40  5007               	movf	i2UART_buff_put@_this,w,c
 13883  001B42  26D9               	addwf	fsr2l,f,c
 13884  001B44  5008               	movf	i2UART_buff_put@_this+1,w,c
 13885  001B46  22DA               	addwfc	fsr2h,f,c
 13886  001B48  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 13887  001B4C  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 13888  001B50  500A               	movf	??i2_UART_buff_put,w,c
 13889  001B52  2407               	addwf	i2UART_buff_put@_this,w,c
 13890  001B54  6ED9               	movwf	fsr2l,c
 13891  001B56  500B               	movf	??i2_UART_buff_put+1,w,c
 13892  001B58  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 13893  001B5A  6EDA               	movwf	fsr2h,c
 13894  001B5C  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 13895                           
 13896                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
 13897  001B60  EE20 F0C8          	lfsr	2,200
 13898  001B64  5007               	movf	i2UART_buff_put@_this,w,c
 13899  001B66  26D9               	addwf	fsr2l,f,c
 13900  001B68  5008               	movf	i2UART_buff_put@_this+1,w,c
 13901  001B6A  22DA               	addwfc	fsr2h,f,c
 13902  001B6C  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 13903  001B70  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 13904  001B74  0E00               	movlw	0
 13905  001B76  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 13906  001B78  0EC8               	movlw	200
 13907  001B7A  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 13908  001B7C  EC1A  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 13909  001B80  EE20 F0C8          	lfsr	2,200
 13910  001B84  5007               	movf	i2UART_buff_put@_this,w,c
 13911  001B86  26D9               	addwf	fsr2l,f,c
 13912  001B88  5008               	movf	i2UART_buff_put@_this+1,w,c
 13913  001B8A  22DA               	addwfc	fsr2h,f,c
 13914  001B8C  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 13915  001B90  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 13916                           
 13917                           ;UART.c: 72: ++_this->count;
 13918  001B94  EE20 F0CC          	lfsr	2,204
 13919  001B98  5007               	movf	i2UART_buff_put@_this,w,c
 13920  001B9A  26D9               	addwf	fsr2l,f,c
 13921  001B9C  5008               	movf	i2UART_buff_put@_this+1,w,c
 13922  001B9E  22DA               	addwfc	fsr2h,f,c
 13923  001BA0  2ADE               	incf	postinc2,f,c
 13924  001BA2  0E00               	movlw	0
 13925  001BA4  22DD               	addwfc	postdec2,f,c
 13926                           
 13927                           ;UART.c: 73: } else {
 13928  001BA6  0012               	return	
 13929  001BA8                     i2l4729:
 13930                           
 13931                           ;UART.c: 74: _this->buf[_this->head] = c;
 13932  001BA8  EE20 F0C8          	lfsr	2,200
 13933  001BAC  5007               	movf	i2UART_buff_put@_this,w,c
 13934  001BAE  26D9               	addwf	fsr2l,f,c
 13935  001BB0  5008               	movf	i2UART_buff_put@_this+1,w,c
 13936  001BB2  22DA               	addwfc	fsr2h,f,c
 13937  001BB4  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 13938  001BB8  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 13939  001BBC  500A               	movf	??i2_UART_buff_put,w,c
 13940  001BBE  2407               	addwf	i2UART_buff_put@_this,w,c
 13941  001BC0  6ED9               	movwf	fsr2l,c
 13942  001BC2  500B               	movf	??i2_UART_buff_put+1,w,c
 13943  001BC4  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 13944  001BC6  6EDA               	movwf	fsr2h,c
 13945  001BC8  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 13946                           
 13947                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
 13948  001BCC  EE20 F0C8          	lfsr	2,200
 13949  001BD0  5007               	movf	i2UART_buff_put@_this,w,c
 13950  001BD2  26D9               	addwf	fsr2l,f,c
 13951  001BD4  5008               	movf	i2UART_buff_put@_this+1,w,c
 13952  001BD6  22DA               	addwfc	fsr2h,f,c
 13953  001BD8  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 13954  001BDC  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 13955  001BE0  0E00               	movlw	0
 13956  001BE2  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 13957  001BE4  0EC8               	movlw	200
 13958  001BE6  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 13959  001BE8  EC1A  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 13960  001BEC  EE20 F0C8          	lfsr	2,200
 13961  001BF0  5007               	movf	i2UART_buff_put@_this,w,c
 13962  001BF2  26D9               	addwf	fsr2l,f,c
 13963  001BF4  5008               	movf	i2UART_buff_put@_this+1,w,c
 13964  001BF6  22DA               	addwfc	fsr2h,f,c
 13965  001BF8  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 13966  001BFC  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 13967                           
 13968                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 13969  001C00  EE20 F0CA          	lfsr	2,202
 13970  001C04  5007               	movf	i2UART_buff_put@_this,w,c
 13971  001C06  26D9               	addwf	fsr2l,f,c
 13972  001C08  5008               	movf	i2UART_buff_put@_this+1,w,c
 13973  001C0A  22DA               	addwfc	fsr2h,f,c
 13974  001C0C  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 13975  001C10  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 13976  001C14  0E00               	movlw	0
 13977  001C16  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 13978  001C18  0EC8               	movlw	200
 13979  001C1A  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 13980  001C1C  EC1A  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 13981  001C20  EE20 F0CA          	lfsr	2,202
 13982  001C24  5007               	movf	i2UART_buff_put@_this,w,c
 13983  001C26  26D9               	addwf	fsr2l,f,c
 13984  001C28  5008               	movf	i2UART_buff_put@_this+1,w,c
 13985  001C2A  22DA               	addwfc	fsr2h,f,c
 13986  001C2C  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 13987  001C30  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 13988  001C34  0012               	return	
 13989  001C36                     __end_ofi2_UART_buff_put:
 13990                           	opt stack 0
 13991                           tosu	equ	0xFFF
 13992                           tosh	equ	0xFFE
 13993                           tosl	equ	0xFFD
 13994                           pclatu	equ	0xFFB
 13995                           pclath	equ	0xFFA
 13996                           tblptru	equ	0xFF8
 13997                           tblptrh	equ	0xFF7
 13998                           tblptrl	equ	0xFF6
 13999                           tablat	equ	0xFF5
 14000                           prodh	equ	0xFF4
 14001                           prodl	equ	0xFF3
 14002                           intcon	equ	0xFF2
 14003                           intcon2	equ	0xFF1
 14004                           postinc0	equ	0xFEE
 14005                           fsr0h	equ	0xFEA
 14006                           fsr0l	equ	0xFE9
 14007                           wreg	equ	0xFE8
 14008                           fsr1h	equ	0xFE2
 14009                           fsr1l	equ	0xFE1
 14010                           indf2	equ	0xFDF
 14011                           postinc2	equ	0xFDE
 14012                           postdec2	equ	0xFDD
 14013                           plusw2	equ	0xFDB
 14014                           fsr2h	equ	0xFDA
 14015                           fsr2l	equ	0xFD9
 14016                           status	equ	0xFD8
 14017                           
 14018 ;; *************** function i2_UART_buff_modulo_inc *****************
 14019 ;; Defined at:
 14020 ;;		line 106 in file "UART.c"
 14021 ;; Parameters:    Size  Location     Type
 14022 ;;  value           2    0[COMRAM] const unsigned int 
 14023 ;;  modulus         2    2[COMRAM] const unsigned int 
 14024 ;; Auto vars:     Size  Location     Type
 14025 ;;  UART_buff_mo    2    4[COMRAM] unsigned int 
 14026 ;; Return value:  Size  Location     Type
 14027 ;;                  2    0[COMRAM] unsigned int 
 14028 ;; Registers used:
 14029 ;;		wreg, status,2, status,0
 14030 ;; Tracked objects:
 14031 ;;		On entry : 0/0
 14032 ;;		On exit  : 0/0
 14033 ;;		Unchanged: 0/0
 14034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14035 ;;      Params:         4       0       0       0       0       0       0
 14036 ;;      Locals:         2       0       0       0       0       0       0
 14037 ;;      Temps:          0       0       0       0       0       0       0
 14038 ;;      Totals:         6       0       0       0       0       0       0
 14039 ;;Total ram usage:        6 bytes
 14040 ;; Hardware stack levels used:    1
 14041 ;; This function calls:
 14042 ;;		Nothing
 14043 ;; This function is called by:
 14044 ;;		i2_UART_buff_put
 14045 ;;		i2_UART_buff_get
 14046 ;; This function uses a non-reentrant model
 14047 ;;
 14048                           
 14049                           	psect	text76
 14050  002E34                     __ptext76:
 14051                           	opt stack 0
 14052  002E34                     i2_UART_buff_modulo_inc:
 14053                           	opt stack 21
 14054                           
 14055                           ;UART.c: 107: unsigned int my_value = value + 1;
 14056                           
 14057                           ;incstack = 0
 14058  002E34  0E01               	movlw	1
 14059  002E36  2401               	addwf	i2UART_buff_modulo_inc@value,w,c
 14060  002E38  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 14061  002E3A  0E00               	movlw	0
 14062  002E3C  2002               	addwfc	i2UART_buff_modulo_inc@value+1,w,c
 14063  002E3E  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 14064                           
 14065                           ;UART.c: 108: if (my_value >= modulus) {
 14066  002E40  5003               	movf	i2UART_buff_modulo_inc@modulus,w,c
 14067  002E42  5C05               	subwf	i2UART_buff_modulo_inc@my_value,w,c
 14068  002E44  5004               	movf	i2UART_buff_modulo_inc@modulus+1,w,c
 14069  002E46  5806               	subwfb	i2UART_buff_modulo_inc@my_value+1,w,c
 14070  002E48  A0D8               	btfss	status,0,c
 14071  002E4A  D004               	goto	i2l4241
 14072                           
 14073                           ;UART.c: 109: my_value = 0;
 14074  002E4C  0E00               	movlw	0
 14075  002E4E  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 14076  002E50  0E00               	movlw	0
 14077  002E52  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 14078  002E54                     i2l4241:
 14079                           
 14080                           ;UART.c: 110: }
 14081                           ;UART.c: 111: return (my_value);
 14082  002E54  C005  F001         	movff	i2UART_buff_modulo_inc@my_value,?i2_UART_buff_modulo_inc
 14083  002E58  C006  F002         	movff	i2UART_buff_modulo_inc@my_value+1,?i2_UART_buff_modulo_inc+1
 14084  002E5C  0012               	return	
 14085  002E5E                     __end_ofi2_UART_buff_modulo_inc:
 14086                           	opt stack 0
 14087                           tosu	equ	0xFFF
 14088                           tosh	equ	0xFFE
 14089                           tosl	equ	0xFFD
 14090                           pclatu	equ	0xFFB
 14091                           pclath	equ	0xFFA
 14092                           tblptru	equ	0xFF8
 14093                           tblptrh	equ	0xFF7
 14094                           tblptrl	equ	0xFF6
 14095                           tablat	equ	0xFF5
 14096                           prodh	equ	0xFF4
 14097                           prodl	equ	0xFF3
 14098                           intcon	equ	0xFF2
 14099                           intcon2	equ	0xFF1
 14100                           postinc0	equ	0xFEE
 14101                           fsr0h	equ	0xFEA
 14102                           fsr0l	equ	0xFE9
 14103                           wreg	equ	0xFE8
 14104                           fsr1h	equ	0xFE2
 14105                           fsr1l	equ	0xFE1
 14106                           indf2	equ	0xFDF
 14107                           postinc2	equ	0xFDE
 14108                           postdec2	equ	0xFDD
 14109                           plusw2	equ	0xFDB
 14110                           fsr2h	equ	0xFDA
 14111                           fsr2l	equ	0xFD9
 14112                           status	equ	0xFD8
 14113                           
 14114 ;; *************** function _ADC_ISR *****************
 14115 ;; Defined at:
 14116 ;;		line 128 in file "mcc_generated_files/adc.c"
 14117 ;; Parameters:    Size  Location     Type
 14118 ;;		None
 14119 ;; Auto vars:     Size  Location     Type
 14120 ;;		None
 14121 ;; Return value:  Size  Location     Type
 14122 ;;                  1    wreg      void 
 14123 ;; Registers used:
 14124 ;;		None
 14125 ;; Tracked objects:
 14126 ;;		On entry : 0/0
 14127 ;;		On exit  : 0/0
 14128 ;;		Unchanged: 0/0
 14129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14130 ;;      Params:         0       0       0       0       0       0       0
 14131 ;;      Locals:         0       0       0       0       0       0       0
 14132 ;;      Temps:          0       0       0       0       0       0       0
 14133 ;;      Totals:         0       0       0       0       0       0       0
 14134 ;;Total ram usage:        0 bytes
 14135 ;; Hardware stack levels used:    1
 14136 ;; This function calls:
 14137 ;;		Nothing
 14138 ;; This function is called by:
 14139 ;;		_INTERRUPT_InterruptManager
 14140 ;; This function uses a non-reentrant model
 14141 ;;
 14142                           
 14143                           	psect	text77
 14144  003044                     __ptext77:
 14145                           	opt stack 0
 14146  003044                     _ADC_ISR:
 14147                           	opt stack 23
 14148                           
 14149                           ;adc.c: 131: PIR1bits.ADIF = 0;
 14150                           
 14151                           ;incstack = 0
 14152  003044  9C9E               	bcf	3998,6,c	;volatile
 14153  003046  0012               	return		;funcret
 14154  003048                     __end_of_ADC_ISR:
 14155                           	opt stack 0
 14156  0000                     tosu	equ	0xFFF
 14157                           tosh	equ	0xFFE
 14158                           tosl	equ	0xFFD
 14159                           pclatu	equ	0xFFB
 14160                           pclath	equ	0xFFA
 14161                           tblptru	equ	0xFF8
 14162                           tblptrh	equ	0xFF7
 14163                           tblptrl	equ	0xFF6
 14164                           tablat	equ	0xFF5
 14165                           prodh	equ	0xFF4
 14166                           prodl	equ	0xFF3
 14167                           intcon	equ	0xFF2
 14168                           intcon2	equ	0xFF1
 14169                           postinc0	equ	0xFEE
 14170                           fsr0h	equ	0xFEA
 14171                           fsr0l	equ	0xFE9
 14172                           wreg	equ	0xFE8
 14173                           fsr1h	equ	0xFE2
 14174                           fsr1l	equ	0xFE1
 14175                           indf2	equ	0xFDF
 14176                           postinc2	equ	0xFDE
 14177                           postdec2	equ	0xFDD
 14178                           plusw2	equ	0xFDB
 14179                           fsr2h	equ	0xFDA
 14180                           fsr2l	equ	0xFD9
 14181                           status	equ	0xFD8
 14182                           tosu	equ	0xFFF
 14183                           tosh	equ	0xFFE
 14184                           tosl	equ	0xFFD
 14185                           pclatu	equ	0xFFB
 14186                           pclath	equ	0xFFA
 14187                           tblptru	equ	0xFF8
 14188                           tblptrh	equ	0xFF7
 14189                           tblptrl	equ	0xFF6
 14190                           tablat	equ	0xFF5
 14191                           prodh	equ	0xFF4
 14192                           prodl	equ	0xFF3
 14193                           intcon	equ	0xFF2
 14194                           intcon2	equ	0xFF1
 14195                           postinc0	equ	0xFEE
 14196                           fsr0h	equ	0xFEA
 14197                           fsr0l	equ	0xFE9
 14198                           wreg	equ	0xFE8
 14199                           fsr1h	equ	0xFE2
 14200                           fsr1l	equ	0xFE1
 14201                           indf2	equ	0xFDF
 14202                           postinc2	equ	0xFDE
 14203                           postdec2	equ	0xFDD
 14204                           plusw2	equ	0xFDB
 14205                           fsr2h	equ	0xFDA
 14206                           fsr2l	equ	0xFD9
 14207                           status	equ	0xFD8
 14208                           
 14209                           	psect	text78
 14210  000000                     __ptext78:
 14211                           	opt stack 0
 14212                           tosu	equ	0xFFF
 14213                           tosh	equ	0xFFE
 14214                           tosl	equ	0xFFD
 14215                           pclatu	equ	0xFFB
 14216                           pclath	equ	0xFFA
 14217                           tblptru	equ	0xFF8
 14218                           tblptrh	equ	0xFF7
 14219                           tblptrl	equ	0xFF6
 14220                           tablat	equ	0xFF5
 14221                           prodh	equ	0xFF4
 14222                           prodl	equ	0xFF3
 14223                           intcon	equ	0xFF2
 14224                           intcon2	equ	0xFF1
 14225                           postinc0	equ	0xFEE
 14226                           fsr0h	equ	0xFEA
 14227                           fsr0l	equ	0xFE9
 14228                           wreg	equ	0xFE8
 14229                           fsr1h	equ	0xFE2
 14230                           fsr1l	equ	0xFE1
 14231                           indf2	equ	0xFDF
 14232                           postinc2	equ	0xFDE
 14233                           postdec2	equ	0xFDD
 14234                           plusw2	equ	0xFDB
 14235                           fsr2h	equ	0xFDA
 14236                           fsr2l	equ	0xFD9
 14237                           status	equ	0xFD8
 14238                           
 14239                           	psect	rparam
 14240  0000                     tosu	equ	0xFFF
 14241                           tosh	equ	0xFFE
 14242                           tosl	equ	0xFFD
 14243                           pclatu	equ	0xFFB
 14244                           pclath	equ	0xFFA
 14245                           tblptru	equ	0xFF8
 14246                           tblptrh	equ	0xFF7
 14247                           tblptrl	equ	0xFF6
 14248                           tablat	equ	0xFF5
 14249                           prodh	equ	0xFF4
 14250                           prodl	equ	0xFF3
 14251                           intcon	equ	0xFF2
 14252                           intcon2	equ	0xFF1
 14253                           postinc0	equ	0xFEE
 14254                           fsr0h	equ	0xFEA
 14255                           fsr0l	equ	0xFE9
 14256                           wreg	equ	0xFE8
 14257                           fsr1h	equ	0xFE2
 14258                           fsr1l	equ	0xFE1
 14259                           indf2	equ	0xFDF
 14260                           postinc2	equ	0xFDE
 14261                           postdec2	equ	0xFDD
 14262                           plusw2	equ	0xFDB
 14263                           fsr2h	equ	0xFDA
 14264                           fsr2l	equ	0xFD9
 14265                           status	equ	0xFD8
 14266                           
 14267                           	psect	temp
 14268  000045                     btemp:
 14269                           	opt stack 0
 14270  000045                     	ds	1
 14271  0000                     int$flags	set	btemp
 14272                           tosu	equ	0xFFF
 14273                           tosh	equ	0xFFE
 14274                           tosl	equ	0xFFD
 14275                           pclatu	equ	0xFFB
 14276                           pclath	equ	0xFFA
 14277                           tblptru	equ	0xFF8
 14278                           tblptrh	equ	0xFF7
 14279                           tblptrl	equ	0xFF6
 14280                           tablat	equ	0xFF5
 14281                           prodh	equ	0xFF4
 14282                           prodl	equ	0xFF3
 14283                           intcon	equ	0xFF2
 14284                           intcon2	equ	0xFF1
 14285                           postinc0	equ	0xFEE
 14286                           fsr0h	equ	0xFEA
 14287                           fsr0l	equ	0xFE9
 14288                           wreg	equ	0xFE8
 14289                           fsr1h	equ	0xFE2
 14290                           fsr1l	equ	0xFE1
 14291                           indf2	equ	0xFDF
 14292                           postinc2	equ	0xFDE
 14293                           postdec2	equ	0xFDD
 14294                           plusw2	equ	0xFDB
 14295                           fsr2h	equ	0xFDA
 14296                           fsr2l	equ	0xFD9
 14297                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         1039
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      68
    BANK0           160     16     160
    BANK1           256     26      83
    BANK2           256      0     206
    BANK3           256      0     200
    BANK4           256      0     206
    BANK5           256      0     206

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_tr_queue.pTrFlag	PTR enum E7739 size(2) Largest target is 0
		 -> LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    memset@p1	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    memset@p	PTR unsigned char  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    UART_buff_peek@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> input_buffer(BANK4[206]), 

    UART_buff_size@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_get@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_put@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_init@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    crcBufS_get@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    crcBufS_status_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    crcBufS_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    sp__memset	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    FastTransfer_buffer_flush@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), 

    FastTransfer_buffer_put@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), 

    CRC8@data	PTR const unsigned char  size(2) Largest target is 206
		 -> CRCcheck@arrayHolder(BANK0[3]), receiveData@holder_2354(BANK1[3]), receiveData@holder(BANK1[3]), rx_buffer(BANK3[200]), 
		 -> ring_buffer(BANK2[206]), NULL(NULL[0]), 

    sendStructAddress	PTR unsigned char  size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), NULL(NULL[0]), 

    begin@stufftoreceive	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_get(), 

    serial_read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_get(), 

    begin@stuffpeek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_peek(), 

    serial_peek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_peek(), 

    begin@stuffavailable	PTR FTN()int  size(2) Largest target is 2
		 -> Receive_available(), 

    serial_available	PTR FTN()int  size(2) Largest target is 2
		 -> Absolute function(), Receive_available(), 

    begin@stufftosend	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Send_put(), 

    serial_write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), Send_put(), 

    begin@ptr	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK1[40]), 

    receiveArrayAddress	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK1[40]), NULL(NULL[0]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E7739 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E7739 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    F7851.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWrite@pflag	PTR enum E7739 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    F7846.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDblinkRate@b(BANK0[2]), 
		 -> LEDBsetBrightness@writeBuffer(BANK0[2]), LEDBsetBrightness@b(BANK0[2]), I2C1_ISR@i2c_address(COMRAM[2]), NULL(NULL[0]), 

    S21$pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E7739 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    S33$pTrFlag	PTR enum E7739 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E7739 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    S33$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), NULL(NULL[0]), 

    S44$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    S44$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 


Critical Paths under _main in COMRAM

    _main->___ftmul
    _updateComms->_handleIndicators
    _respondECU->_ToSend
    _respondECU->_sendData
    _sendData->_FastTransfer_buffer_flush
    _sendData->_Send_put
    _FastTransfer_buffer_flush->_memset
    _buttonsCollector->_GetButtonState
    _ToSend->_buttonsCollector
    _FastTransfer_buffer_put->_FastTransfer_buffer_modulo_inc
    _receiveData->_Send_put
    _Send_put->_UART_buff_get
    _Send_put->_UART_buff_put
    _UART_buff_put->_UART_buff_modulo_inc
    _Receive_peek->_UART_buff_peek
    _CRCcheck->_crcBufS_get
    _Receive_get->_UART_buff_get
    _UART_buff_get->_UART_buff_modulo_inc
    _Receive_available->_UART_buff_size
    _handleIndicators->_SetLEDOut
    _SetLEDOut->_Off_Led
    _SetLEDOut->_setLED
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    _begin->___awdiv
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART1_Initialize->_UART_buff_init
    _UART_buff_init->_memset
    _LEDwriteDisplay->_I2C1_MasterWrite
    _LEDsetValue->___ftmul
    _LEDsetBar->___awdiv
    _LEDbegin->_I2C1_MasterWrite
    _LEDblinkRate->_I2C1_MasterWrite
    _LEDBsetBrightness->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _TMR2_ISR->_TMR2_CallBack
    _TMR0_ISR->_ReadButtonState
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Transmit_ISR->i2_UART_buff_get
    i2_UART_buff_get->i2_UART_buff_modulo_inc
    _EUSART1_Receive_ISR->i2_UART_buff_put
    i2_UART_buff_put->i2_UART_buff_modulo_inc

Critical Paths under _main in BANK0

    _updateComms->_receiveData
    _respondECU->_ToSend
    _receiveData->_CRCcheck
    ___fttol->___ftmul
    _SYSTEM_Initialize->_begin
    _LEDsetValue->_LEDsetBar
    _LEDbegin->_LEDBsetBrightness
    _LEDbegin->_LEDblinkRate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LEDwriteDisplay
    _updateComms->_receiveData
    _LEDsetValue->___fttol

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   46563
                                             24 BANK1      2     2      0
                           _LEDbegin
                        _LEDsetValue
                    _LEDwriteDisplay
                  _SYSTEM_Initialize
                            ___ftmul
                            ___fttol
                           ___lwtoft
                        _updateComms
 ---------------------------------------------------------------------------------
 (1) _updateComms                                          0     0      0   21411
                        _TBbarGraphs
                   _handleIndicators
                        _receiveData
                         _respondECU
 ---------------------------------------------------------------------------------
 (2) _respondECU                                           0     0      0    7986
                              _Delay
                             _ToSend
                   _buttonsCollector
                           _sendData
 ---------------------------------------------------------------------------------
 (3) _sendData                                             5     5      0    5704
                                             38 COMRAM     5     5      0
                   Absolute function *
                               _CRC8
          _FastTransfer_buffer_flush
                           _Send_put *
                        _crcBufS_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_put                                          7     2      5     742
                                             26 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_flush                            4     0      4    1139
                                             34 COMRAM     4     0      4
                             _memset
 ---------------------------------------------------------------------------------
 (3) _buttonsCollector                                     9     7      2     309
                                             32 COMRAM     9     7      2
                     _GetButtonState
 ---------------------------------------------------------------------------------
 (4) _GetButtonState                                       6     4      2     108
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _ToSend                                               3     1      2    1751
                                             41 COMRAM     2     0      2
                                              0 BANK0      1     1      0
            _FastTransfer_buffer_put
                   _buttonsCollector (ARG)
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_put                              7     2      5    1535
                                             32 COMRAM     7     2      5
     _FastTransfer_buffer_modulo_inc
 ---------------------------------------------------------------------------------
 (5) _FastTransfer_buffer_modulo_inc                       6     2      4     746
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay                                                5     3      2     222
                                             26 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _receiveData                                         18    18      0   10715
                                              7 BANK0      6     6      0
                                              0 BANK1     12    12      0
                   Absolute function *
                               _CRC8
                           _CRCcheck
                  _Receive_available *
                        _Receive_get *
                       _Receive_peek *
                           _Send_put *
 ---------------------------------------------------------------------------------
 (4) _Send_put                                             1     1      0    2614
                                             37 COMRAM     1     1      0
                      _UART_buff_get
                      _UART_buff_put
 ---------------------------------------------------------------------------------
 (5) _UART_buff_put                                        5     2      3    1418
                                             32 COMRAM     5     2      3
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (3) _Receive_peek                                         0     0      0     139
                     _UART_buff_peek
 ---------------------------------------------------------------------------------
 (4) _UART_buff_peek                                       4     2      2     139
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _CRCcheck                                             7     7      0    5114
                                              0 BANK0      7     7      0
                   Absolute function *
                               _CRC8
                  _Receive_available *
                        _Receive_get *
                        _crcBufS_get
                 _crcBufS_status_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_status_put                                  10     6      4     908
                                             26 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (4) _crcBufS_get                                         12     8      4    1404
                                             26 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (3) _Receive_get                                          0     0      0    1165
                      _UART_buff_get
 ---------------------------------------------------------------------------------
 (5) _UART_buff_get                                        5     3      2    1165
                                             32 COMRAM     5     3      2
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (6) _UART_buff_modulo_inc                                 6     2      4     746
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Receive_available                                    2     0      2     150
                                             28 COMRAM     2     0      2
                     _UART_buff_size
 ---------------------------------------------------------------------------------
 (4) _UART_buff_size                                       2     0      2     150
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _CRC8                                                 7     4      3    1014
                                             26 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _handleIndicators                                     7     5      2    2494
                                             36 COMRAM     7     5      2
                          _SetLEDOut
 ---------------------------------------------------------------------------------
 (3) _SetLEDOut                                            6     2      4    2191
                                             30 COMRAM     6     2      4
                            _Off_Led
                             _setLED
 ---------------------------------------------------------------------------------
 (4) _setLED                                               4     2      2     493
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _Off_Led                                              4     2      2     955
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _TBbarGraphs                                          4     0      4     216
                                             26 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2529
                                             34 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     525
                                              9 BANK0      4     0      4
                                              0 BANK1     11    11      0
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3254
                                             37 COMRAM     6     0      6
                                              0 BANK0      9     9      0
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2344
                                             26 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2894
                     _ADC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                              _begin
 ---------------------------------------------------------------------------------
 (2) _begin                                               13     0     13    1771
                                              0 BANK0     13     0     13
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     108
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2     108
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0    1015
                     _UART_buff_init
 ---------------------------------------------------------------------------------
 (3) _UART_buff_init                                       2     0      2    1015
                                             34 COMRAM     2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6     830
                                             26 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDwriteDisplay                                     24    24      0    3911
                                              0 BANK1     24    24      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _LEDsetValue                                          7     3      4    2539
                                             11 BANK1      7     3      4
                          _LEDsetBar
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _LEDsetBar                                           24    20      4    1940
                                             34 COMRAM     8     4      4
                                              0 BANK0     16    16      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     907
                                             26 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LEDbegin                                             7     7      0    9497
                                              8 BANK0      7     7      0
                   _I2C1_MasterWrite
                  _LEDBsetBrightness
                       _LEDblinkRate
 ---------------------------------------------------------------------------------
 (2) _LEDblinkRate                                         8     5      3    3225
                                              0 BANK0      8     5      3
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _LEDBsetBrightness                                    8     5      3    3225
                                              0 BANK0      8     5      3
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _I2C1_MasterWrite                                     7     0      7    2683
                                             35 COMRAM     7     0      7
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterWriteTRBBuild                             9     2      7     494
                                             26 COMRAM     9     2      7
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterTRBInsert                                 6     2      4     494
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0    1748
                                             12 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0     178
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR2_CallBack                                        4     4      0     178
                                              0 COMRAM     4     4      0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             2     2      0     330
                                              4 COMRAM     2     2      0
                    _ReadButtonState
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR0_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ReadButtonState                                      4     2      2     262
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _I2C1_ISR                                             2     2      0      31
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (9) _I2C1_Stop                                            3     3      0      31
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0     528
                    i2_UART_buff_get
                   i2_UART_buff_size
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_size                                     2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_get                                      5     3      2     480
                                              6 COMRAM     5     3      2
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  1     1      0     681
                                             11 COMRAM     1     1      0
                    i2_UART_buff_put
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_put                                      5     2      3     658
                                              6 COMRAM     5     2      3
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (10) i2_UART_buff_modulo_inc                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LEDbegin
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
     _LEDBsetBrightness
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
     _LEDblinkRate
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
   _LEDsetValue
     _LEDsetBar
       ___awdiv
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   _LEDwriteDisplay
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _UART_buff_init
         _memset
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _begin
       ___awdiv
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _updateComms
     _TBbarGraphs
     _handleIndicators
       _SetLEDOut
         _Off_Led
         _setLED
     _receiveData
       Absolute function(Fake) *
       _CRC8 *
       _CRCcheck *
         Absolute function(Fake) *
         _CRC8 *
         _Receive_available *
           _UART_buff_size
         _Receive_get *
           _UART_buff_get
             _UART_buff_modulo_inc
         _crcBufS_get *
         _crcBufS_status_put *
       _Receive_available *
         _UART_buff_size
       _Receive_get *
         _UART_buff_get
           _UART_buff_modulo_inc
       _Receive_peek *
         _UART_buff_peek
       _Send_put *
         _UART_buff_get
           _UART_buff_modulo_inc
         _UART_buff_put
           _UART_buff_modulo_inc
     _respondECU
       _Delay
       _ToSend
         _FastTransfer_buffer_put
           _FastTransfer_buffer_modulo_inc
         _buttonsCollector (ARG)
           _GetButtonState
       _buttonsCollector
         _GetButtonState
       _sendData
         Absolute function(Fake) *
         _CRC8 *
         _FastTransfer_buffer_flush *
           _memset
         _Send_put *
           _UART_buff_get
             _UART_buff_modulo_inc
           _UART_buff_put
             _UART_buff_modulo_inc
         _crcBufS_put *

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
     i2_UART_buff_put
       i2_UART_buff_modulo_inc
   _EUSART1_Transmit_ISR
     i2_UART_buff_get
       i2_UART_buff_modulo_inc
     i2_UART_buff_size
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR
     _ReadButtonState
     _TMR0_CallBack
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      CE      15       80.5%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      CE      13       80.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      CE       8       80.5%
BITBANK1           100      0       0       5        0.0%
BANK1              100     1A      53       6       32.4%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     10      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      44       1       72.3%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     469       9        0.0%
DATA                 0      0     469      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Fri Mar 25 14:47:18 2016

       __end_of_FastTransfer_buffer_flush 2A00                    i2_UART_buff_modulo_inc 2E34  
        __end_of_TMR2_SetInterruptHandler 3034                                         _k 00CD  
                            _rx_array_inx 003E                              ___awdiv@sign 0020  
                LEDBsetBrightness@timeOut 00F3                                Off_Led@led 001B  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                                     l601 2D3E                                       l614 23F0  
                                     l619 2462                                       l924 283C  
                                     l932 2994                                       l693 07EE  
                            __CFG_CPB$OFF 000000                                       _PR2 000FBB  
                            __CFG_CPD$OFF 000000                           __end_of_ADC_ISR 3048  
    FastTransfer_buffer_flush@clearBuffer 0025                           _TMR2_Initialize 2ECE  
                                     prod 000FF3                                       tosl 000FFD  
                                     wreg 000FE8                               _TBbarGraphs 2FDC  
           i2UART_buff_modulo_inc@modulus 0003                              __CFG_LVP$OFF 000000  
                        __end_of_I2C1_ISR 10AC                                      l1003 2B8C  
                                    l1117 1536                                      l1162 26B4  
                                    l1430 23A0                                      l6011 278C  
                                    l6003 276E                                      l6021 27AC  
                                    l6013 2790                                      l6009 2784  
                                    l6025 27B6                                      l6211 2588  
                                    l6029 27C4                                      l6141 09AE  
                                    l6125 0798                                      l6127 07AE  
                                    l6311 04E2                                      l6223 0132  
                                    l6161 25EC                                      l6153 25B2  
                                    l6145 0A8A                                      l6137 08F0  
                                    l5505 2DBE                                      l5513 1A22  
                                    l6321 0564                                      l6313 04FC  
                                    l6241 01F2                                      l6411 2322  
                                    l5611 211A                                      l5603 20EA  
                                    l6323 057E                                      l6315 0516  
                                    l6243 01F8                                      l6219 0104  
                                    l6227 0136                                      l6251 0232  
                                    l5509 2DCE                                      l5533 26B0  
                                    l6325 05CC                                      l6317 0530  
                                    l6159 25CE                                      l6191 253A  
                                    l6423 236E                                      l6415 2330  
                                    l5615 2132                                      l5607 2102  
                                    l5519 1A8E                                      l6351 0672  
                                    l6319 054A                                      l6327 05E8  
                                    l6271 0294                                      l6239 01DA  
                                    l6193 2558                                      l6185 251C  
                                    l6425 238C                                      l6417 233A  
                                    l5625 2162                                      l6361 06F4  
                                    l6353 068C                                      l6337 05F4  
                                    l6257 023E                      receiveData@crcHolder 013F  
                                    l5563 22CC                                      l6179 261C  
                                    l6427 2396                                      l6419 2358  
                                    l5619 214A                                      l5811 0C60  
                                    l5643 2B76                                      l5651 2B92  
                                    l5491 2E2A                                      l5707 1ED8  
                                    l5723 208A                                      l5715 2004  
                                    l6363 070E                                      l6355 06A6  
                                    l6259 0264                                      l6275 02C6  
                                    l5573 2308                                      l5581 21C8  
                                    l5805 0C3C                                      l5901 0E00  
                                    l5637 2B60                                      l5653 2B98  
                                    l6365 075C                                      l6357 06C0  
                                    l6293 0428                                      l5567 22EC  
                                    l5751 2B4C                                      l6615 24CE  
                                    l5583 21DE                                      l5591 2220  
                                    l6359 06DA                                      l6367 0778  
                                    l6295 042E                                      l6287 038A  
                                    l6279 02EE                                      l6375 0784  
                                    l5569 22F8                                      l6617 24D6  
                                    l6641 2410                                      l6633 23E0  
                                    l6713 19AA                                      l5585 21F4  
                                    l5577 219C                                      l5841 0CEA  
                                    l5833 0CC8                                      l6297 0442  
                                    l5761 2D2A                                      l5673 129A  
                                    l6715 19C8                                      l6811 1618  
                                    l5587 220A                                      l5579 21B2  
                                    l5827 0CA4                                      l5819 0C82  
                                    l5691 1E4A                                      l5499 2E00  
                                    l5915 2956                                      l5931 16F8  
                                    l6645 2446                                      l6637 23FA  
                                    l6733 19F8                                      l6653 18F4  
                                    l6741 17DE                                      l6821 164E  
                                    l5933 1714                                      l5925 16AA  
                                    l6647 245A                                      l6655 1912  
                                    l6807 1604                                      l5599 20D2  
                                    l5871 0D74                                      l5863 0D52  
                                    l5855 0D30                                      l5783 0BD4  
                                    l5775 0BB2                                      l5767 0B90  
                                    l6399 2800                                      l5695 1E54  
                                    l5951 1402                                      l5943 177E  
                                    l5935 171E                                      l5927 16C4  
                                    l6673 1942                                      l6761 1852  
                                    l6825 166A                                      l6817 1634  
                                    l5849 0D0C                                      l5937 1748  
                                    l5929 16DE                                      l6595 2480  
                                    l6675 194A                                      l6771 1884  
                                    l6747 1810                                      l6819 1644  
                                    l5963 14B2                                      l5939 174C  
                                    l6597 249E                                      l6765 1868  
                                    l5893 0DDC                                      l5885 0DBA  
                                    l5877 0D98                                      l5797 0C1A  
                                    l5789 0BF8                                      l5973 1506  
                                    l5981 152E                                      l5949 13DA  
                                    l6775 189A                                      l5959 149C  
                                    l5977 1526                                      l6891 1E34  
                                    l6883 1D6E                                      l5997 275E  
                                    l6789 1572                                      _CRC8 2B5A  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      u6040 2994  
                                    u6034 2976                                      u6035 2970  
                                    u6108 1722                                      u7110 283C  
                                    u7104 281E                                      u7008 0676  
                                    u6128 1768                                      u7105 2818  
                                    u6138 13DE                                      u7018 0690  
                                    u6058 1694                                      u6139 13F2  
                                    u6404 0942                                      u6340 07E6  
                                    u7028 06AA                                      u6068 16AE  
                                    u6405 093A                                      u6158 1406  
                                    u7038 06C4                                      u6078 16C8  
                                    u6159 141A                                      u6424 09DA  
                                    u7080 27E0                                      u5640 2644  
                                    u6168 1422                                      u7048 06DE  
                                    u6088 16E2                                      u6425 09D2  
                                    u6169 1436                                      u6530 2512  
                                    u6434 0A0E                                      u7410 23D6  
                                    u6178 143E                                      u7058 06F8  
                                    u5730 1FE4                                      u6098 16FC  
                                    u6435 0A06                                      u6179 1452  
                                    i2l60 0E74                                      u6364 0814  
                                    u6188 145A                                      u7068 0712  
                                    u6365 080C                                      u6189 146E  
                                    u6470 25A8                                      u6454 0AB8  
                                    u6374 088C                                      u7078 0760  
                                    i2l71 0F28                                      i2l63 0EEA  
                                    u6455 0AB0                                      u6375 0884  
                                    u5751 1298                                      i2l72 0F38  
                                    u6464 0B2A                                      u6608 00DE  
                                    i2l65 0EF2                                      u6465 0B22  
                                    u6609 00F2                                      i2l90 1016  
                                    i2l82 0FB8                                      i2l66 0EFA  
                                    u6394 091E                                      u6395 0916  
                                    i2l76 0FA4                                      u6708 01AA  
                                    u6628 010E                                      u7621 154E  
                                    u6709 01BE                                      u6629 0122  
                                    i2l94 1048                                      i2l86 0FE8  
                                    u7640 1598                                      u6808 0298  
                                    u6728 01DE                                      u6648 013A  
                                    i2l89 1004                                      u7561 17C0  
                                    u6841 032E                                      u6809 02AC  
                                    u6649 014E                                      u6818 02CA  
                                    u6819 02DE                                      u6908 04E6  
                                    u6668 0158                                      u7581 17F2  
                                    u7645 158E                                      u6669 016C  
                                    u6918 0500                                      u6928 051A  
                                    u6768 0242                                      u6688 0176  
                                    u6769 0256                                      u6689 018A  
                                    u6938 0534                                      u6698 0190  
                                    u7850 1D82                                      u6699 01A4  
                                    u6948 054E                                      u6788 0268  
                                    u7860 1E32                                      u6789 027E  
                                    u6958 0568                                      u6968 0582  
                                    u7937 2D30                                      u6978 05D0  
                                    u6898 04CC                                      u6998 065C  
                                    _TMR2 000FBC                                      _WPUB 000F61  
                                    _main 1D4C                              ___ftpack@arg 001B  
                            ___ftpack@exp 001E                           _TMR0_StartTimer 3040  
                                    _time 00DB                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                  ??_I2C1_MasterTRBInsert 001F                                      btemp 0045  
                           __CFG_BORV$190 000000                                      pclat 000FFA  
                                    prodh 000FF4                                      prodl 000FF3  
         __end_of_FastTransfer_buffer_put 13DA                                      start 00D0  
                           __CFG_IESO$OFF 000000                              ___ftmul@cntr 00F5  
                            ___param_bank 000010                              ___ftmul@sign 00F6  
                         __end_of_Off_Led 219A            I2C1_MasterWriteTRBBuild@length 001F  
          i2UART_buff_modulo_inc@my_value 0005                          _handleIndicators 27CE  
                            ___fttol@exp1 0143                        __size_of_LEDsetBar 0406  
                            ___fttol@lval 013F                                     ?_CRC8 001B  
                 __end_of_TMR0_Initialize 2F2C                                _i2c1_state 0038  
                        __end_of_CRCcheck 1538            __size_of_OSCILLATOR_Initialize 000E  
               I2C1_MasterTRBInsert@count 0020             __end_of_OSCILLATOR_Initialize 302A  
               I2C1_MasterTRBInsert@pflag 001D                          LEDbegin@i2c_addr 00FB  
                      crcBufS_put@address 001D                          __end_of_LEDbegin 24FC  
                                   ?_main 0001                           __end_of___awdiv 27CE  
                       __end_of_I2C1_Stop 2C6E                           __end_of___ftmul 18D8  
                                   _T0CON 000FD5                           ___awdiv@divisor 001D  
                         __end_of___fttol 167C                                     _T2CON 000FBA  
                                   _LATA3 007C4B                                     _LATB3 007C53  
                                   _LATD1 007C61                                     _LATB5 007C55  
                                   _LATE0 007C68                                     _LATE1 007C69  
                                   _LATE2 007C6A                            __CFG_DEBUG$OFF 000000  
                                   i2l320 005A                                     i2l322 0066  
                                   i2l324 0072                                     i2l332 0094  
                                   i2l326 007E                                     i2l318 004E  
                                   i2l328 008A                                     i2l452 123C  
                                   i2l463 10DE                                     i2l472 1102  
                                   i2l481 1166                                     i2l466 10EA  
                                   i2l491 118A                                     i2l475 110E  
                                   i2l459 10D2                                     i2l485 1172  
                                   i2l469 10F6                                     i2l494 1196  
                                   i2l488 117E                                     i2l497 11A2  
                         ___awdiv@counter 001F                                     _TMR0H 000FD7  
                                   _TMR0L 000FD6                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                                   _Delay 2D20              __end_of_I2C1_BusCollisionISR 304E  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                       ?_buttonsCollector 0021                      _EUSART1_Transmit_ISR 2D54  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                         ??_I2C1_Initialize 001B  
                        __end_of_TMR0_ISR 2A60                          __end_of_TMR2_ISR 303C  
                           __CFG_WRTB$OFF 000000                              ?_LEDsetValue 0144  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                                   _begin 2A60                            __CFG_EBTRB$OFF 000000  
                                   _brake 00C7                        ??_buttonsCollector 0023  
                                   _group 002C                        __CFG_MCLRE$EXTMCLR 000000  
                           ___ftpack@sign 001F                                     pclath 000FFA  
                                   tablat 000FF5                             ??_Receive_get 0026  
                    __size_of_crcBufS_get 00E2                                     plusw2 000FDB  
                          begin@stuffpeek 00F9                      __size_of_crcBufS_put 00D8  
                                   status 000FD8                            __CFG_HFOFST$ON 000000  
                         _TMR2_StartTimer 303C                              ?_receiveData 0001  
                          SetLEDOut@state 0021                         ??_ReadButtonState 0003  
                          __CFG_PBADEN$ON 000000           I2C1_MasterWriteTRBBuild@address 0020  
                            __end_of_CRC8 2BA4                           CRCcheck@SentCRC 00EE  
                         __initialization 2846                     I2C1_MasterWrite@pdata 0024  
                   I2C1_MasterWrite@pflag 0029                __end_of_EUSART1_Initialize 2CE6  
                            __end_of_main 1E40                                ToSend@what 002A  
                                  ??_CRC8 001E                             ?_LEDblinkRate 00EE  
                 __end_of_TMR2_Initialize 2EF0                                 ??_ADC_ISR 0001  
             ?_INTERRUPT_InterruptManager 0001                               _i2c1_object 00B8  
                _TMR2_SetInterruptHandler 302A                                    ??_main 002C  
                           ___fttol@sign1 013E                             __activetblptr 000002  
                        __end_of_Send_put 2DB4                 __size_ofi2_UART_buff_size 0016  
                                  ?_Delay 001B                     ?_EUSART1_Transmit_ISR 0001  
           FastTransfer_buffer_put@towhat 0024                             ?_Receive_peek 0001  
                                  ?_begin 00EE                   __end_of_TMR0_StartTimer 3044  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                          ___awdiv@dividend 001B  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                          __end_of___ftpack 23C0  
                       __end_of_LEDsetBar 0B8E                           i2_UART_buff_get 26B8  
                                  _RC1STA 000FAB                                    i2l1162 2746  
                         i2_UART_buff_put 1B1C                                    i2l1193 2F52  
                                  i2l4301 1CBA                            __CFG_WDTEN$OFF 000000  
                                  i2l4303 1CD4                                    i2l4241 2E54  
                                  i2l4305 1CEE                                    Delay@x 001E  
                                  i2l4309 1D08               UART_buff_modulo_inc@modulus 001D  
                                  i2l4291 1C38                                    i2l4371 1150  
                                  i2l4363 10B6                                    i2l4293 1C52  
                                  i2l4381 1200                                    i2l4295 1C6C  
                                  i2l4375 11AE                                    i2l4383 1230  
                                  i2l4297 1C86                                    i2l4385 124C  
                                  i2l4377 11E4                                    i2l4369 111A  
                                  i2l4723 1B3C                                    i2l6067 2F7C  
                                  i2l6059 2C68                                    i2l4299 1CA0  
                                  i2l4743 2742                                    i2l4729 1BA8  
                                  i2l4907 2A5C                                    i2l4919 2D7E  
                                  i2l6527 0FCA                                    i2l6519 0FB2  
                                  i2l6553 1026                                    i2l6537 0FF0  
                                  i2l6467 0ECC                            _GetButtonState 2E5E  
                                  i2l6565 104E                                    i2l6549 101E  
                                  i2l6485 0F22                                    i2l4893 2A20  
                                  i2l6567 1052                                    i2l6479 0F0A  
                                  i2l6575 1066                                    i2l6569 105A  
                                  i2l4889 2A10                                    i2l6499 0F66  
                                  i2l4899 2A32                                    _RCREG1 000FAE  
                        __end_of___lwtoft 2ECE                                    _OSCCON 000FD3  
                                  _SPBRG1 000FAF                                    _TX1STA 000FAC  
                                  _TXREG1 000FAD                                 ??_Off_Led 001D  
                      __size_of_SetLEDOut 02AA                         ?_I2C1_MasterWrite 0024  
                          __CFG_XINST$OFF 000000                                    _ToSend 2EF0  
                      ??_I2C1_MasterWrite 002B                       __end_of_Receive_get 301C  
                        crcBufS_get@_this 001B               ??_FastTransfer_buffer_flush 0027  
                          _p_i2c1_current 00CF                             _output_buffer 0500  
                        crcBufS_get@space 001E                                 ??___awdiv 001F  
                               CRC8@tempI 0020                            __CFG_STVREN$ON 000000  
                               ??___ftmul 00EE                                 ??___fttol 0139  
                          ??_LEDblinkRate 002B                ??_I2C1_MasterWriteTRBBuild 0022  
                        ?_TMR0_Initialize 0001                                    _setLED 219A  
                                  _memset 2DB4                                 ?_I2C1_ISR 0001  
                                  clear_0 284C                                    clear_1 2858  
                                  clear_2 2864                                    clear_3 2870  
                                  clear_4 287C                                    clear_5 2888  
                                  clear_6 2894                          ___awdiv@quotient 0021  
                                  _rx_len 003F                          __end_of_sendData 17AC  
                   ___ftmul@f3_as_product 00F2                              __pdataCOMRAM 0044  
                           Send_put@_data 0026                            ??_Receive_peek 001F  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8          __size_of_FastTransfer_buffer_put 0168  
            __end_of_UART_buff_modulo_inc 2E34                     __end_of_TMR0_CallBack 304C  
                 __end_of_TMR2_StartTimer 3040  TMR2_SetInterruptHandler@InterruptHandler 001B  
                  __end_of_GetButtonState 2E86             I2C1_MasterWriteTRBBuild@pdata 001D  
                      LEDblinkRate@status 00F5             __size_of_INTERRUPT_Initialize 0012  
                         SetLEDOut@lednum 001F                         _SYSTEM_Initialize 28BA  
                              __accesstop 0060                   __end_of__initialization 28AC  
                               ?_CRCcheck 0001                     __end_of_TMR2_CallBack 1272  
                      ?_SYSTEM_Initialize 0001                                 ?_LEDbegin 0001  
                           ___rparam_used 000001                   ?i2_UART_buff_modulo_inc 0001  
                          _i2c1_trb_count 0039                              ?_updateComms 0001  
                            TBbarGraphs@b 001D                              TBbarGraphs@t 001B  
                           __end_of_Delay 2D54                                ___ftmul@f1 0026  
                              ___ftmul@f2 0029                     _I2C1_FunctionComplete 2F68  
                    _I2C1_BusCollisionISR 304C                                ___fttol@f1 00F7  
                  LEDwriteDisplay@timeOut 014E                            __pcstackCOMRAM 0001  
                  I2C1_MasterWrite@length 0026                        _crcBufS_status_put 1FFA  
                     ??_SYSTEM_Initialize 0025                          crcBufS_put@_this 001B  
                           __end_of_begin 2ABE                                 ?_TMR0_ISR 0001  
                               ?_TMR2_ISR 0001    __end_of_FastTransfer_buffer_modulo_inc 2E0A  
 __size_of_FastTransfer_buffer_modulo_inc 002A            _FastTransfer_buffer_modulo_inc 2DE0  
                              ??_I2C1_ISR 0004                          ?_TMR2_Initialize 0001  
            FastTransfer_buffer_put@_this 0021                               ToSend@where 00EE  
                              ___lwtoft@c 0023                        UART_buff_get@_this 0021  
                     ?_crcBufS_status_put 001B                     __end_of_UART_buff_get 26B8  
                  ??_EUSART1_Transmit_ISR 000C                     __end_of_UART_buff_put 1B1C  
                       __end_of_SetLEDOut 0E38                     TMR0_ISR@CountCallBack 00C1  
                                 ??_Delay 001D                            LEDbegin@status 00FC  
                 __end_ofi2_UART_buff_get 274A                   __end_ofi2_UART_buff_put 1C36  
                            ?_TBbarGraphs 001B               __end_of_EUSART1_Receive_ISR 2F68  
               _FastTransfer_buffer_flush 299E                                   CRC8@crc 0021  
                                 CRC8@len 001D                                   CRC8@sum 001E  
                                 ??_begin 0023                          ?_TMR0_StartTimer 0001  
                         ?_GetButtonState 001B                 __end_of_SYSTEM_Initialize 292E  
                __end_of_handleIndicators 2846                    receiveData@holder_2354 013C  
                     _addressErrorCounter 00C3                      __size_of_LEDsetValue 00A4  
                              __pbssBANK0 0060                                __pbssBANK1 0100  
                              __pbssBANK2 0200                                __pbssBANK3 0300  
                              __pbssBANK4 0400                                __pbssBANK5 0500  
                         __CFG_PLLCFG$OFF 000000                               _Receive_get 300E  
                              ??_CRCcheck 0027                      ??_crcBufS_status_put 001F  
          __end_ofi2_UART_buff_modulo_inc 2E5E                                __pnvCOMRAM 0042  
                       begin@givenAddress 00F1                   __size_of_UART_buff_init 001E  
                 __size_of_UART_buff_peek 0024                                ??_LEDbegin 002B  
                 __size_of_UART_buff_size 0016                                 ?_Send_put 0001  
                   ?_I2C1_BusCollisionISR 0001                      __size_of_receiveData 06B4  
                                 ?_ToSend 002A                        __CFG_CCP2MX$PORTC1 000000  
                __size_of_LEDwriteDisplay 012A                                ??_TMR0_ISR 0005  
                              ??_TMR2_ISR 0005                        __CFG_CCP3MX$PORTB5 000000  
     FastTransfer_buffer_modulo_inc@value 001B                           _I2C1_Initialize 2C6E  
                                 _ADC_ISR 3044                                   ?_setLED 001B  
                                 ?_memset 001B                                _crc_buffer 0128  
                               ?___ftpack 001B                                 TMR0_ISR@x 0005  
                 __size_of_ADC_Initialize 0018                                 ?___lwtoft 0023  
                      UART_buff_put@_this 0021                          i2_UART_buff_size 2FC6  
             i2UART_buff_modulo_inc@value 0001                                   _OSCCON2 000FD2  
                               _I2C1_Stop 2C2C                         _Receive_available 2F9A  
            UART_buff_modulo_inc@my_value 001F                         __CFG_PRICLKEN$OFF 000000  
                                 _OSCTUNE 000F9B                                   _SPBRGH1 000FB0  
                                 _SSP1ADD 000FC8                       sendData@whereToSend 0028  
                         _ReadButtonState 1C36                       _receiveArrayAddress 00D3  
                                 _SSP1BUF 000FC9                          ?_TMR2_StartTimer 0001  
                      ?_Receive_available 001D                                begin@error 00F2  
                    __end_of_LEDblinkRate 2592             I2C1_MasterTRBInsert@ptrb_list 001B  
                                 _Off_Led 20D0                       ??_Receive_available 001F  
                               ?_sendData 0001                         _alignErrorCounter 00C5  
                         __CFG_PWRTEN$OFF 000000                 __size_of_buttonsCollector 0070  
                  ?_I2C1_FunctionComplete 0001                                ??_Send_put 0026  
                                 __Hparam 0000             __size_of_I2C1_MasterTRBInsert 00BA  
                                 __Lparam 0000                ??_TMR2_SetInterruptHandler 001D  
                         __size_of_ToSend 001E                        _p_i2c1_trb_current 00D1  
                    __end_of_Receive_peek 300E                                 _AKNAKsend 0036  
                                 ___awdiv 274A                      _UART_buff_modulo_inc 2E0A  
                                 ___ftmul 17AC                                   ___fttol 1538  
                                 _calc_CS 0037                                   __pcinit 2846  
                              ??___ftpack 0020                           __size_of_setLED 00BE  
                         __size_of_memset 002C                                   __ramtop 0600  
                        i2UART_buff_get@c 000B                                   __ptext0 1D4C  
                                 __ptext1 2CE6                                   __ptext2 2BA4  
                                 __ptext3 167C                                   __ptext4 1F22  
                                 __ptext5 299E                                   __ptext6 292E  
                                 __ptext7 2E5E                                   __ptext8 2EF0  
                                 __ptext9 1272                                ??___lwtoft 0026  
                               _T0CONbits 000FD5                          i2UART_buff_put@c 0009  
                   _OSCILLATOR_Initialize 301C                 __end_of_Receive_available 2FB0  
                               _T2CONbits 000FBA                   _FastTransfer_buffer_put 1272  
                   CRCcheck@calculatedCRC 00EF                        _EUSART1_Initialize 2CAA  
                        ?i2_UART_buff_get 0007                  ??_PIN_MANAGER_Initialize 001B  
                        ?i2_UART_buff_put 0007                                ?_I2C1_Stop 0001  
            crcBufS_status_put@wantedTime 0023                            TMR2_CallBack@i 0003  
                           ??_crcBufS_get 001F                             ??_crcBufS_put 0020  
              __size_of_SYSTEM_Initialize 0074                      I2C1_ISR@pi2c_buf_ptr 00BF  
                    end_of_initialization 28AC                                 Delay@wait 001B  
                     ?_EUSART1_Initialize 0001                   LEDwriteDisplay@i2c_addr 014D  
                               _LED_array 0088                                   memset@c 001D  
                                 memset@n 001F                                   memset@p 0021  
                            LEDsetBar@bar 0023                             __Lmediumconst 0000  
                               _LEDsetBar 0788                    ??_I2C1_BusCollisionISR 0001  
                              ??_sendData 0027                   __end_of_I2C1_Initialize 2CAA  
                   ?_UART_buff_modulo_inc 001B                      __size_of_updateComms 003A  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                                _respondECU 2BA4  
                   ReadButtonState@btnnum 0001                          begin@stufftosend 00F3  
                     CRCcheck@arrayHolder 00F0                              LEDsetValue@k 0149  
                    ??_EUSART1_Initialize 0025                       LEDblinkRate@timeOut 00F3  
                               _PORTAbits 000F80                                 _PORTBbits 000F81  
                               _PORTDbits 000F83                         ??_LEDwriteDisplay 002B  
                 __end_of_ReadButtonState 1D4C                 __size_of_I2C1_MasterWrite 004C  
                  _dataAdressErrorCounter 00CB                         __size_of_I2C1_ISR 0274  
                              _rx_address 003D                                 _TRISCbits 000F94  
                    __size_of_TBbarGraphs 0012                   LEDBsetBrightness@status 00F5  
       I2C1_ISR@i2c_10bit_address_restart 0034                       LEDbegin@writeBuffer 00F6  
                            begin@maxSize 00F0        __size_of_FastTransfer_buffer_flush 0062  
                   i2UART_buff_size@_this 0001                            _UART_buff_init 2F2C  
                          _UART_buff_peek 2E86                            _UART_buff_size 2FB0  
                     __end_of_crcBufS_get 1F22                                ?_LEDsetBar 0023  
                     __end_of_crcBufS_put 1FFA                   I2C1_MasterWrite@address 0027  
                       __size_of_CRCcheck 015E                 LEDBsetBrightness@i2c_addr 00F0  
                             ___ftmul@exp 00F1                         __size_of_LEDbegin 0098  
                           _moduleAddress 003B                      _timer0ReloadVal16bit 0042  
                              CRCcheck@rt 00F3                            __end_of_ToSend 2F0E  
            __end_of_INTERRUPT_Initialize 3000      __end_of_TMR2_DefaultInterruptHandler 304A  
   __size_of_TMR2_DefaultInterruptHandler 0002              _TMR2_DefaultInterruptHandler 3048  
                         _crcErrorCounter 00C9                   I2C1_MasterWrite@trBlock 00E4  
                       crcBufS_put@oldCRC 001E                             __pidataCOMRAM 304E  
                       __size_of_TMR0_ISR 0060                  I2C1_Stop@completion_code 0003  
                       __size_of_TMR2_ISR 0008                            _ADC_Initialize 2F82  
               ??_FastTransfer_buffer_put 0026                    ?_OSCILLATOR_Initialize 0001  
                          __end_of_setLED 2258                            __end_of_memset 2DE0  
                       crcBufS_put@status 001F                   buttonsCollector@sendVal 0026  
                            receiveData@r 0143                __size_of_Receive_available 0016  
                            receiveData@u 0141                          ??_GetButtonState 001D  
                       _LEDBsetBrightness 2592                       start_initialization 2846  
                   __size_of_LEDblinkRate 0096                               ??_I2C1_Stop 0001  
                __size_of_TMR0_Initialize 001E           __size_of_PIN_MANAGER_Initialize 0050  
                   crcBufS_get@wantedTime 0025                        ?_LEDBsetBrightness 00EE  
                               _SetLEDOut 0B8E         __size_of_I2C1_MasterWriteTRBBuild 0044  
                       ?_handleIndicators 0025                 ?_I2C1_MasterWriteTRBBuild 001B  
                  __end_of_UART_buff_init 2F4A                    __end_of_UART_buff_peek 2EAA  
                          UART_buff_get@c 0025                    __end_of_UART_buff_size 2FC6  
                            ?_Receive_get 0001                            UART_buff_put@c 0023  
                      ??_handleIndicators 0027                           LEDbegin@timeOut 00F9  
                     ??_LEDBsetBrightness 002B                     __size_of_Receive_peek 000E  
                        _buttonsCollector 292E                  __end_ofi2_UART_buff_size 2FDC  
                        ?_I2C1_Initialize 0001                                  ??_ToSend 002C  
                  ??_UART_buff_modulo_inc 001F                                  CRC8@data 001B  
                         crcBufS_get@time 001D                         __size_of_Send_put 002E  
                             ?_respondECU 0001                LEDwriteDisplay@writeBuffer 0139  
                  __size_of_TMR0_CallBack 0002                    __end_of_ADC_Initialize 2F9A  
                              LEDsetBar@a 0029                                LEDsetBar@c 0027  
                                ?_ADC_ISR 0001                                  ??_setLED 001D  
                                ??_memset 0021                              _LEDblinkRate 24FC  
                       handleIndicators@i 002A             ?_TMR2_DefaultInterruptHandler 0001  
               __end_of_LEDBsetBrightness 2626              I2C1_MasterWriteTRBBuild@ptrb 001B  
                        ?_ReadButtonState 0001                         __size_of___ftpack 00AE  
                  __size_of_TMR2_CallBack 01C6                               __pbssCOMRAM 002C  
                       __size_of___lwtoft 0024             __size_of_EUSART1_Transmit_ISR 0032  
                           __pcstackBANK0 00EE                             __pcstackBANK1 0139  
                           ??_LEDsetValue 0148                  __size_of_TMR2_Initialize 0022  
                           _i2c1_tr_queue 00E9                     LEDwriteDisplay@status 0150  
                            _Receive_peek 3000                                ?_SetLEDOut 001F  
                     UART_buff_init@_this 0023                               _crcBufS_get 1E40  
                     UART_buff_peek@_this 001B                               _crcBufS_put 1F22  
                        LEDsetValue@color 0146                           ?_UART_buff_init 0023  
                         ?_UART_buff_peek 001B                           ?_UART_buff_size 001B  
                        LEDsetValue@value 0144                   ??_I2C1_FunctionComplete 0001  
            __size_of_EUSART1_Receive_ISR 001E                             ??_receiveData 00F5  
             __size_of_crcBufS_status_put 00D6                                sendData@CS 0029  
                                ?_Off_Led 001B                               ??_LEDsetBar 00EE  
                               __pnvBANK0 00FE                  __size_of_TMR0_StartTimer 0004  
                  __size_of_UART_buff_get 0092                    __size_of_UART_buff_put 011A  
                  _PIN_MANAGER_Initialize 2ABE                         __size_of_sendData 0130  
                               __pintcode 0008                                  ?___awdiv 001B  
                                ?___ftmul 0026                                  ?___fttol 00F7  
                         ?_ADC_Initialize 0001                                  _I2C1_ISR 0E38  
            ??_INTERRUPT_InterruptManager 000D              LEDBsetBrightness@writeBuffer 00F1  
                    i2UART_buff_get@_this 0007                          _I2C1_MasterWrite 2B0E  
                                _BAUD1CON 000FB8              __end_of_I2C1_MasterTRBInsert 2312  
                       buttonsCollector@i 0028                            __size_of_Delay 0034  
                               _butnarray 00B0                            __size_of_begin 005E  
                           _TMR0_CallBack 304A                       __size_of_respondECU 0044  
                    _INTERRUPT_Initialize 2FEE                      GetButtonState@btnnum 001B  
                            _receiveArray 0100                               _LEDNUM_ENAB 0098  
                  I2C1_MasterRead@trBlock 00DF                         ??_TMR0_Initialize 001B  
                     __end_of_LEDsetValue 2464                                  _CRCcheck 13DA  
                                _LATCbits 000F8B                                  _LEDState 00A4  
                     UART_buff_size@_this 001B                             _TMR2_CallBack 10AC  
                                _IPR1bits 000F9F                                  _LEDbegin 2464  
                                _IPR2bits 000FA2                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                             LEDblinkRate@b 00EE  
                __size_of_TMR2_StartTimer 0004                           _LEDwriteDisplay 18D8  
     __size_of_INTERRUPT_InterruptManager 00C8                                  i2u360_40 1CCE  
                                i2u360_46 1CD0                                  i2u361_40 1CE8  
                                _PIR1bits 000F9E                                  i2u361_46 1CEA  
                                i2u362_40 1D02                                  i2u370_40 10FE  
                                i2u362_46 1D04                                  i2u355_40 1C4C  
                                _PIR2bits 000FA1                                  i2u355_46 1C4E  
                                i2u356_40 1C66                                  i2u380_40 1186  
                                i2u372_40 110A                                  i2u364_40 10DA  
                                i2u356_46 1C68                                  i2u357_40 1C80  
                                i2u357_46 1C82                                  i2u358_40 1C9A  
                                i2u382_40 1192                                  i2u374_40 1116  
                                i2u366_40 10E6                                  i2u358_46 1C9C  
                                i2u359_40 1CB4                                  i2u390_48 125C  
                                i2u359_46 1CB6                                  i2u384_40 119E  
                                i2u376_40 116E                                  i2u368_40 10F2  
                                i2u386_40 11AA                                  i2u378_40 117A  
                                i2u479_40 26D6                                  i2u497_40 2A4E  
                                i2u499_40 2D6E                       begin@stuffavailable 00F7  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                     __end_of_receiveData 0788                                  _SSP1CON1 000FC6  
                                _SSP1CON3 000FCB                                  _TMR0_ISR 2A00  
                                _TMR2_ISR 3034                                 main@ADCNT 0151  
                                _SSP1STAT 000FC7            FastTransfer_buffer_flush@_this 0023  
                            _input_buffer 0400                                 _rx_buffer 0300  
                        __size_of_ADC_ISR 0004                                _ADCON0bits 000FC2  
              __size_of_LEDBsetBrightness 0094                      i2UART_buff_put@_this 0007  
                           _UART_buff_get 2626                             _UART_buff_put 1A02  
          ??_TMR2_DefaultInterruptHandler 0001         __size_of_TMR2_SetInterruptHandler 000A  
               ?_TMR2_SetInterruptHandler 001B                            ?_TMR0_CallBack 0001  
                ??i2_UART_buff_modulo_inc 0005                               ??_SetLEDOut 0023  
                             _INTCON2bits 000FF1                     ?_INTERRUPT_Initialize 0001  
                       _sendStructAddress 00D5                  __size_ofi2_UART_buff_get 0092  
                       ??_TMR2_Initialize 001D                  __size_ofi2_UART_buff_put 011A  
                          ?_TMR2_CallBack 0001                             ??_updateComms 002C  
                    __size_of_Receive_get 000E                          __size_of_Off_Led 00CA  
                                __Hrparam 0000                                  _Send_put 2D86  
           __size_of_I2C1_BusCollisionISR 0002                                  __Lrparam 0000  
                      __CFG_BOREN$SBORDIS 000000                                 setLED@led 001B  
                  I2C1_ISR@i2c_bytes_left 0035                         __CFG_P2BMX$PORTD2 000000  
                 LEDblinkRate@writeBuffer 00F1                   ??_OSCILLATOR_Initialize 001B  
                       ??_TMR0_StartTimer 001B                            LEDsetBar@color 0025  
                        __size_of___awdiv 0084                          __size_of___ftmul 012C  
                        __size_of___fttol 0144               __size_of_EUSART1_Initialize 003C  
                     begin@stufftoreceive 00F5                                  ___ftpack 2312  
        __end_of_I2C1_MasterWriteTRBBuild 2C2C                                  ___lwtoft 2EAA  
                          ?_UART_buff_get 0021                            ?_UART_buff_put 0021  
                             CRC8@extract 001F                  __end_of_buttonsCollector 299E  
                               sendData@i 002A                             ??_TBbarGraphs 001F  
                     I2C1_ISR@i2c_address 0040                               _LEDsetValue 23C0  
                crcBufS_status_put@status 001E                                  __ptext10 2DE0  
                                __ptext11 2D20                                  __ptext20 300E  
                                __ptext12 00D4                                  __ptext21 2626  
                                __ptext13 2D86                                  __ptext30 2FDC  
                                __ptext22 2E0A                                  __ptext14 1A02  
                                __ptext31 2EAA                                  __ptext23 2F9A  
                                __ptext15 3000                                  __ptext40 2F0E  
                                __ptext32 1538                                  __ptext24 2FB0  
                                __ptext16 2E86                                  __ptext41 3040  
                                __ptext33 17AC                                  __ptext25 2B5A  
                                __ptext17 13DA                                  __ptext50 18D8  
                                __ptext42 2ABE                                  __ptext34 2312  
                                __ptext26 27CE                                  __ptext18 1FFA  
                                __ptext51 23C0                                  __ptext43 301C  
                                __ptext35 28BA                                  __ptext27 0B8E  
                                __ptext19 1E40                                  __ptext52 0788  
                                __ptext44 2FEE                                  __ptext36 2A60  
                                __ptext28 219A                                  __ptext61 3034  
                                __ptext53 274A                                  __ptext45 2C6E  
                                __ptext37 2ECE                                  __ptext29 20D0  
                                __ptext70 304C                                  __ptext62 10AC  
                                __ptext54 2464                                  __ptext46 2CAA  
                                __ptext38 303C                                  __ptext71 2D54  
                                __ptext63 3048                                  __ptext55 24FC  
                                __ptext47 2F2C                                  __ptext39 302A  
                                __ptext72 2FC6                                  __ptext64 2A00  
                                __ptext56 2592                                  __ptext48 2DB4  
                                __ptext73 26B8                                  __ptext65 304A  
                                __ptext57 2B0E                                  __ptext49 2F82  
                                __ptext74 2F4A                                  __ptext66 1C36  
                                __ptext58 2BE8                                  __ptext75 1B1C  
                                __ptext67 0E38                                  __ptext59 2258  
                                __ptext76 2E34                                  __ptext68 2C2C  
                                __ptext77 3044                                  __ptext69 2F68  
                                __ptext78 0000                              _SSP1CON1bits 000FC6  
                            _SSP1CON2bits 000FC5                             __size_of_CRC8 004A  
                                begin@ptr 00EE                   EUSART1_Receive_ISR@data 000C  
                 __end_of_LEDwriteDisplay 1A02                             _returnAddress 003C  
                           __size_of_main 00F4                               _receiveData 00D4  
                          _Transmit_stall 0044                                  _sendData 167C  
                    _I2C1_MasterTRBInsert 2258                         ?i2_UART_buff_size 0001  
                              _RC1STAbits 000FAB                      LEDblinkRate@i2c_addr 00F0  
                            ??_respondECU 002C                        ??i2_UART_buff_size 0003  
                                int$flags 0045                 __size_of_handleIndicators 0078  
           handleIndicators@oldIndicators 00DD                              _serial_write 0032  
                                _throttle 00D9                         ??_TMR2_StartTimer 001B  
                     __end_of_updateComms 2D20        __end_of_INTERRUPT_InterruptManager 00D0  
              _INTERRUPT_InterruptManager 0008                       _EUSART1_Receive_ISR 2F4A  
                       receiveData@holder 0139                        LEDBsetBrightness@b 00EE  
                              _INTCONbits 000FF2                           ??_TMR0_CallBack 0001  
               UART_buff_modulo_inc@value 001B        handleIndicators@receivedIndicators 0025  
                        ??_UART_buff_init 0025                          ??_UART_buff_peek 001D  
                        ??_UART_buff_size 001D                    ??_INTERRUPT_Initialize 001B  
                                memset@p1 001B                          _serial_available 002E  
         __size_ofi2_UART_buff_modulo_inc 002A                              ?_crcBufS_get 001B  
                            ?_crcBufS_put 001B                                  intlevel2 0000  
                 crcBufS_status_put@_this 001B                           ??_TMR2_CallBack 0001  
                      __end_of_respondECU 2BE8                       __end_of_TBbarGraphs 2FEE  
                    ?_EUSART1_Receive_ISR 0001    FastTransfer_buffer_modulo_inc@my_value 001F  
          FastTransfer_buffer_put@towhere 0023                   ?_PIN_MANAGER_Initialize 0001  
                __end_of_I2C1_MasterWrite 2B5A            __size_of_I2C1_FunctionComplete 001A  
           __end_of_I2C1_FunctionComplete 2F82                     ?_I2C1_MasterTRBInsert 001B  
            __end_of_EUSART1_Transmit_ISR 2D86                               _ring_buffer 0200  
                        ??_ADC_Initialize 001B                ?_FastTransfer_buffer_flush 0023  
                       ??i2_UART_buff_get 0009                               _serial_peek 00D7  
                             _serial_read 0030                         ??i2_UART_buff_put 000A  
                ?_FastTransfer_buffer_put 0021             __size_of_UART_buff_modulo_inc 002A  
                __size_of_I2C1_Initialize 003C                           ??_UART_buff_get 0023  
                         ??_UART_buff_put 0024     FastTransfer_buffer_modulo_inc@modulus 001D  
                  crcBufS_status_put@time 001D                           _TMR0_Initialize 2F0E  
               receiveData@crcHolder_2355 0140                  _I2C1_MasterWriteTRBBuild 2BE8  
                       __CFG_T3CMX$PORTC0 000000                            _maxDataAddress 003A  
                __size_of_ReadButtonState 0116                __end_of_crcBufS_status_put 20D0  
                   ??_EUSART1_Receive_ISR 000C            __end_of_PIN_MANAGER_Initialize 2B0E  
        ??_FastTransfer_buffer_modulo_inc 001F           ?_FastTransfer_buffer_modulo_inc 001B  
                        ?_LEDwriteDisplay 0001                   __size_of_GetButtonState 0028  
                      __size_of_I2C1_Stop 0042                             _displaybuffer 0060  
                       __CFG_FOSC$INTIO67 000000                     _TMR2_InterruptHandler 00FE  
                             _updateComms 2CE6  
