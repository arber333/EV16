

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Thu Mar 24 18:17:11 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   101                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   102  0000                     
   103                           	psect	idataCOMRAM
   104  002EA4                     __pidataCOMRAM:
   105                           	opt stack 0
   106                           
   107                           ;initializer for _Transmit_stall
   108  002EA4  01                 	db	1
   109                           
   110                           	psect	nvCOMRAM
   111  000042                     __pnvCOMRAM:
   112                           	opt stack 0
   113  000042                     _timer0ReloadVal16bit:
   114                           	opt stack 0
   115  000042                     	ds	2
   116                           
   117                           	psect	nvBANK0
   118  0000FE                     __pnvBANK0:
   119                           	opt stack 0
   120  0000FE                     _TMR2_InterruptHandler:
   121                           	opt stack 0
   122  0000FE                     	ds	2
   123  0000                     _ANSELA	set	3896
   124  0000                     _ANSELB	set	3897
   125  0000                     _ANSELC	set	3898
   126  0000                     _ANSELD	set	3899
   127  0000                     _ANSELE	set	3900
   128  0000                     _ADCON0	set	4034
   129  0000                     _ADCON0bits	set	4034
   130  0000                     _ADCON1	set	4033
   131  0000                     _ADCON2	set	4032
   132  0000                     _ADRESH	set	4036
   133  0000                     _ADRESL	set	4035
   134  0000                     _BAUD1CON	set	4024
   135  0000                     _INTCON2bits	set	4081
   136  0000                     _INTCONbits	set	4082
   137  0000                     _IPR1bits	set	3999
   138  0000                     _IPR2bits	set	4002
   139  0000                     _LATA	set	3977
   140  0000                     _LATB	set	3978
   141  0000                     _LATC	set	3979
   142  0000                     _LATCbits	set	3979
   143  0000                     _LATD	set	3980
   144  0000                     _LATE	set	3981
   145  0000                     _OSCCON	set	4051
   146  0000                     _OSCCON2	set	4050
   147  0000                     _OSCTUNE	set	3995
   148  0000                     _PIE1bits	set	3997
   149  0000                     _PIE2bits	set	4000
   150  0000                     _PIR1bits	set	3998
   151  0000                     _PIR2bits	set	4001
   152  0000                     _PORTAbits	set	3968
   153  0000                     _PORTBbits	set	3969
   154  0000                     _PORTDbits	set	3971
   155  0000                     _PR2	set	4027
   156  0000                     _RC1STA	set	4011
   157  0000                     _RC1STAbits	set	4011
   158  0000                     _RCONbits	set	4048
   159  0000                     _RCREG1	set	4014
   160  0000                     _SPBRG1	set	4015
   161  0000                     _SPBRGH1	set	4016
   162  0000                     _SSP1ADD	set	4040
   163  0000                     _SSP1BUF	set	4041
   164  0000                     _SSP1CON1	set	4038
   165  0000                     _SSP1CON1bits	set	4038
   166  0000                     _SSP1CON2bits	set	4037
   167  0000                     _SSP1CON3	set	4043
   168  0000                     _SSP1STAT	set	4039
   169  0000                     _T0CON	set	4053
   170  0000                     _T0CONbits	set	4053
   171  0000                     _T2CON	set	4026
   172  0000                     _T2CONbits	set	4026
   173  0000                     _TMR0H	set	4055
   174  0000                     _TMR0L	set	4054
   175  0000                     _TMR2	set	4028
   176  0000                     _TRISA	set	3986
   177  0000                     _TRISB	set	3987
   178  0000                     _TRISC	set	3988
   179  0000                     _TRISCbits	set	3988
   180  0000                     _TRISD	set	3989
   181  0000                     _TRISE	set	3990
   182  0000                     _TX1STA	set	4012
   183  0000                     _TXREG1	set	4013
   184  0000                     _WPUB	set	3937
   185  0000                     _LATA3	set	31819
   186  0000                     _LATB3	set	31827
   187  0000                     _LATB5	set	31829
   188  0000                     _LATD1	set	31841
   189  0000                     _LATE0	set	31848
   190  0000                     _LATE1	set	31849
   191  0000                     _LATE2	set	31850
   192                           
   193                           ; #config settings
   194  0000                     
   195                           	psect	cinit
   196  002644                     __pcinit:
   197                           	opt stack 0
   198  002644                     start_initialization:
   199                           	opt stack 0
   200  002644                     __initialization:
   201                           	opt stack 0
   202                           
   203                           ; Clear objects allocated to BANK5 (206 bytes)
   204  002644  EE05  F000         	lfsr	0,__pbssBANK5
   205  002648  0ECE               	movlw	206
   206  00264A                     clear_0:
   207  00264A  6AEE               	clrf	postinc0,c
   208  00264C  06E8               	decf	wreg,f,c
   209  00264E  E1FD               	bnz	clear_0
   210                           
   211                           ; Clear objects allocated to BANK4 (206 bytes)
   212  002650  EE04  F000         	lfsr	0,__pbssBANK4
   213  002654  0ECE               	movlw	206
   214  002656                     clear_1:
   215  002656  6AEE               	clrf	postinc0,c
   216  002658  06E8               	decf	wreg,f,c
   217  00265A  E1FD               	bnz	clear_1
   218                           
   219                           ; Clear objects allocated to BANK3 (200 bytes)
   220  00265C  EE03  F000         	lfsr	0,__pbssBANK3
   221  002660  0EC8               	movlw	200
   222  002662                     clear_2:
   223  002662  6AEE               	clrf	postinc0,c
   224  002664  06E8               	decf	wreg,f,c
   225  002666  E1FD               	bnz	clear_2
   226                           
   227                           ; Clear objects allocated to BANK2 (206 bytes)
   228  002668  EE02  F000         	lfsr	0,__pbssBANK2
   229  00266C  0ECE               	movlw	206
   230  00266E                     clear_3:
   231  00266E  6AEE               	clrf	postinc0,c
   232  002670  06E8               	decf	wreg,f,c
   233  002672  E1FD               	bnz	clear_3
   234                           
   235                           ; Clear objects allocated to BANK1 (57 bytes)
   236  002674  EE01  F000         	lfsr	0,__pbssBANK1
   237  002678  0E39               	movlw	57
   238  00267A                     clear_4:
   239  00267A  6AEE               	clrf	postinc0,c
   240  00267C  06E8               	decf	wreg,f,c
   241  00267E  E1FD               	bnz	clear_4
   242                           
   243                           ; Clear objects allocated to BANK0 (142 bytes)
   244  002680  EE00  F060         	lfsr	0,__pbssBANK0
   245  002684  0E8E               	movlw	142
   246  002686                     clear_5:
   247  002686  6AEE               	clrf	postinc0,c
   248  002688  06E8               	decf	wreg,f,c
   249  00268A  E1FD               	bnz	clear_5
   250                           
   251                           ; Clear objects allocated to COMRAM (22 bytes)
   252  00268C  EE00  F02C         	lfsr	0,__pbssCOMRAM
   253  002690  0E16               	movlw	22
   254  002692                     clear_6:
   255  002692  6AEE               	clrf	postinc0,c
   256  002694  06E8               	decf	wreg,f,c
   257  002696  E1FD               	bnz	clear_6
   258                           
   259                           ; Initialize objects allocated to COMRAM (1 bytes)
   260                           ; load TBLPTR registers with __pidataCOMRAM
   261  002698  0EA4               	movlw	low __pidataCOMRAM
   262  00269A  6EF6               	movwf	tblptrl,c
   263  00269C  0E2E               	movlw	high __pidataCOMRAM
   264  00269E  6EF7               	movwf	tblptrh,c
   265  0026A0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   266  0026A2  6EF8               	movwf	tblptru,c
   267  0026A4  0009               	tblrd		*+	;fetch initializer
   268  0026A6  CFF5 F044          	movff	tablat,__pdataCOMRAM
   269  0026AA                     end_of_initialization:
   270                           	opt stack 0
   271  0026AA                     __end_of__initialization:
   272                           	opt stack 0
   273  0026AA  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   274  0026AC  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   275  0026AE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   276  0026B0  6EF8               	movwf	tblptru,c
   277  0026B2  0100               	movlb	0
   278  0026B4  EFC3  F00D         	goto	_main	;jump to C main() function
   279                           tblptru	equ	0xFF8
   280                           tblptrh	equ	0xFF7
   281                           tblptrl	equ	0xFF6
   282                           tablat	equ	0xFF5
   283                           postinc0	equ	0xFEE
   284                           wreg	equ	0xFE8
   285                           
   286                           	psect	bssCOMRAM
   287  00002C                     __pbssCOMRAM:
   288                           	opt stack 0
   289  00002C                     _group:
   290                           	opt stack 0
   291  00002C                     	ds	2
   292  00002E                     _serial_available:
   293                           	opt stack 0
   294  00002E                     	ds	2
   295  000030                     _serial_read:
   296                           	opt stack 0
   297  000030                     	ds	2
   298  000032                     _serial_write:
   299                           	opt stack 0
   300  000032                     	ds	2
   301  000034                     I2C1_ISR@i2c_10bit_address_restart:
   302                           	opt stack 0
   303  000034                     	ds	1
   304  000035                     I2C1_ISR@i2c_bytes_left:
   305                           	opt stack 0
   306  000035                     	ds	1
   307  000036                     _AKNAKsend:
   308                           	opt stack 0
   309  000036                     	ds	1
   310  000037                     _calc_CS:
   311                           	opt stack 0
   312  000037                     	ds	1
   313  000038                     _i2c1_state:
   314                           	opt stack 0
   315  000038                     	ds	1
   316  000039                     _i2c1_trb_count:
   317                           	opt stack 0
   318  000039                     	ds	1
   319  00003A                     _maxDataAddress:
   320                           	opt stack 0
   321  00003A                     	ds	1
   322  00003B                     _moduleAddress:
   323                           	opt stack 0
   324  00003B                     	ds	1
   325  00003C                     _returnAddress:
   326                           	opt stack 0
   327  00003C                     	ds	1
   328  00003D                     _rx_address:
   329                           	opt stack 0
   330  00003D                     	ds	1
   331  00003E                     _rx_array_inx:
   332                           	opt stack 0
   333  00003E                     	ds	1
   334  00003F                     _rx_len:
   335                           	opt stack 0
   336  00003F                     	ds	1
   337  000040                     I2C1_ISR@i2c_address:
   338                           	opt stack 0
   339  000040                     	ds	2
   340                           tblptru	equ	0xFF8
   341                           tblptrh	equ	0xFF7
   342                           tblptrl	equ	0xFF6
   343                           tablat	equ	0xFF5
   344                           postinc0	equ	0xFEE
   345                           wreg	equ	0xFE8
   346                           
   347                           	psect	dataCOMRAM
   348  000044                     __pdataCOMRAM:
   349                           	opt stack 0
   350  000044                     _Transmit_stall:
   351                           	opt stack 0
   352  000044                     	ds	1
   353                           tblptru	equ	0xFF8
   354                           tblptrh	equ	0xFF7
   355                           tblptrl	equ	0xFF6
   356                           tablat	equ	0xFF5
   357                           postinc0	equ	0xFEE
   358                           wreg	equ	0xFE8
   359                           
   360                           	psect	bssBANK0
   361  000060                     __pbssBANK0:
   362                           	opt stack 0
   363  000060                     _displaybuffer:
   364                           	opt stack 0
   365  000060                     	ds	40
   366  000088                     _LED_array:
   367                           	opt stack 0
   368  000088                     	ds	16
   369  000098                     _LEDNUM_ENAB:
   370                           	opt stack 0
   371  000098                     	ds	12
   372  0000A4                     _LEDState:
   373                           	opt stack 0
   374  0000A4                     	ds	12
   375  0000B0                     _butnarray:
   376                           	opt stack 0
   377  0000B0                     	ds	8
   378  0000B8                     _i2c1_object:
   379                           	opt stack 0
   380  0000B8                     	ds	7
   381  0000BF                     I2C1_ISR@pi2c_buf_ptr:
   382                           	opt stack 0
   383  0000BF                     	ds	2
   384  0000C1                     TMR0_ISR@CountCallBack:
   385                           	opt stack 0
   386  0000C1                     	ds	2
   387  0000C3                     _addressErrorCounter:
   388                           	opt stack 0
   389  0000C3                     	ds	2
   390  0000C5                     _alignErrorCounter:
   391                           	opt stack 0
   392  0000C5                     	ds	2
   393  0000C7                     _brake:
   394                           	opt stack 0
   395  0000C7                     	ds	2
   396  0000C9                     _crcErrorCounter:
   397                           	opt stack 0
   398  0000C9                     	ds	2
   399  0000CB                     _dataAdressErrorCounter:
   400                           	opt stack 0
   401  0000CB                     	ds	2
   402  0000CD                     _k:
   403                           	opt stack 0
   404  0000CD                     	ds	2
   405  0000CF                     _p_i2c1_current:
   406                           	opt stack 0
   407  0000CF                     	ds	2
   408  0000D1                     _p_i2c1_trb_current:
   409                           	opt stack 0
   410  0000D1                     	ds	2
   411  0000D3                     _receiveArrayAddress:
   412                           	opt stack 0
   413  0000D3                     	ds	2
   414  0000D5                     _sendStructAddress:
   415                           	opt stack 0
   416  0000D5                     	ds	2
   417  0000D7                     _serial_peek:
   418                           	opt stack 0
   419  0000D7                     	ds	2
   420  0000D9                     _throttle:
   421                           	opt stack 0
   422  0000D9                     	ds	2
   423  0000DB                     _time:
   424                           	opt stack 0
   425  0000DB                     	ds	2
   426  0000DD                     handleIndicators@oldIndicators:
   427                           	opt stack 0
   428  0000DD                     	ds	2
   429  0000DF                     I2C1_MasterRead@trBlock:
   430                           	opt stack 0
   431  0000DF                     	ds	5
   432  0000E4                     I2C1_MasterWrite@trBlock:
   433                           	opt stack 0
   434  0000E4                     	ds	5
   435  0000E9                     _i2c1_tr_queue:
   436                           	opt stack 0
   437  0000E9                     	ds	5
   438                           tblptru	equ	0xFF8
   439                           tblptrh	equ	0xFF7
   440                           tblptrl	equ	0xFF6
   441                           tablat	equ	0xFF5
   442                           postinc0	equ	0xFEE
   443                           wreg	equ	0xFE8
   444                           
   445                           	psect	bssBANK1
   446  000100                     __pbssBANK1:
   447                           	opt stack 0
   448  000100                     _receiveArray:
   449                           	opt stack 0
   450  000100                     	ds	40
   451  000128                     _crc_buffer:
   452                           	opt stack 0
   453  000128                     	ds	17
   454                           tblptru	equ	0xFF8
   455                           tblptrh	equ	0xFF7
   456                           tblptrl	equ	0xFF6
   457                           tablat	equ	0xFF5
   458                           postinc0	equ	0xFEE
   459                           wreg	equ	0xFE8
   460                           
   461                           	psect	bssBANK2
   462  000200                     __pbssBANK2:
   463                           	opt stack 0
   464  000200                     _ring_buffer:
   465                           	opt stack 0
   466  000200                     	ds	206
   467                           tblptru	equ	0xFF8
   468                           tblptrh	equ	0xFF7
   469                           tblptrl	equ	0xFF6
   470                           tablat	equ	0xFF5
   471                           postinc0	equ	0xFEE
   472                           wreg	equ	0xFE8
   473                           
   474                           	psect	bssBANK3
   475  000300                     __pbssBANK3:
   476                           	opt stack 0
   477  000300                     _rx_buffer:
   478                           	opt stack 0
   479  000300                     	ds	200
   480                           tblptru	equ	0xFF8
   481                           tblptrh	equ	0xFF7
   482                           tblptrl	equ	0xFF6
   483                           tablat	equ	0xFF5
   484                           postinc0	equ	0xFEE
   485                           wreg	equ	0xFE8
   486                           
   487                           	psect	bssBANK4
   488  000400                     __pbssBANK4:
   489                           	opt stack 0
   490  000400                     _input_buffer:
   491                           	opt stack 0
   492  000400                     	ds	206
   493                           tblptru	equ	0xFF8
   494                           tblptrh	equ	0xFF7
   495                           tblptrl	equ	0xFF6
   496                           tablat	equ	0xFF5
   497                           postinc0	equ	0xFEE
   498                           wreg	equ	0xFE8
   499                           
   500                           	psect	bssBANK5
   501  000500                     __pbssBANK5:
   502                           	opt stack 0
   503  000500                     _output_buffer:
   504                           	opt stack 0
   505  000500                     	ds	206
   506                           tblptru	equ	0xFF8
   507                           tblptrh	equ	0xFF7
   508                           tblptrl	equ	0xFF6
   509                           tablat	equ	0xFF5
   510                           postinc0	equ	0xFEE
   511                           wreg	equ	0xFE8
   512                           
   513                           	psect	cstackBANK1
   514  000139                     __pcstackBANK1:
   515                           	opt stack 0
   516  000139                     ??___fttol:
   517  000139                     receiveData@holder:
   518                           	opt stack 0
   519  000139                     LEDwriteDisplay@writeBuffer:
   520                           	opt stack 0
   521                           
   522                           ; 20 bytes @ 0x0
   523  000139                     	ds	3
   524  00013C                     receiveData@holder_2230:
   525                           	opt stack 0
   526                           
   527                           ; 3 bytes @ 0x3
   528  00013C                     	ds	2
   529  00013E                     ___fttol@sign1:
   530                           	opt stack 0
   531                           
   532                           ; 1 bytes @ 0x5
   533  00013E                     	ds	1
   534  00013F                     receiveData@crcHolder:
   535                           	opt stack 0
   536  00013F                     ___fttol@lval:
   537                           	opt stack 0
   538                           
   539                           ; 4 bytes @ 0x6
   540  00013F                     	ds	1
   541  000140                     receiveData@crcHolder_2231:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x7
   545  000140                     	ds	1
   546  000141                     receiveData@u:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x8
   550  000141                     	ds	2
   551  000143                     ___fttol@exp1:
   552                           	opt stack 0
   553  000143                     receiveData@r:
   554                           	opt stack 0
   555                           
   556                           ; 2 bytes @ 0xA
   557  000143                     	ds	1
   558  000144                     LEDsetValue@value:
   559                           	opt stack 0
   560                           
   561                           ; 2 bytes @ 0xB
   562  000144                     	ds	2
   563  000146                     LEDsetValue@color:
   564                           	opt stack 0
   565                           
   566                           ; 2 bytes @ 0xD
   567  000146                     	ds	2
   568  000148                     ??_LEDsetValue:
   569                           
   570                           ; 1 bytes @ 0xF
   571  000148                     	ds	1
   572  000149                     LEDsetValue@k:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0x10
   576  000149                     	ds	4
   577  00014D                     LEDwriteDisplay@i2c_addr:
   578                           	opt stack 0
   579                           
   580                           ; 1 bytes @ 0x14
   581  00014D                     	ds	1
   582  00014E                     LEDwriteDisplay@timeOut:
   583                           	opt stack 0
   584                           
   585                           ; 2 bytes @ 0x15
   586  00014E                     	ds	2
   587  000150                     LEDwriteDisplay@status:
   588                           	opt stack 0
   589                           
   590                           ; 1 bytes @ 0x17
   591  000150                     	ds	1
   592  000151                     main@ADCNT:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x18
   596  000151                     	ds	2
   597                           tblptru	equ	0xFF8
   598                           tblptrh	equ	0xFF7
   599                           tblptrl	equ	0xFF6
   600                           tablat	equ	0xFF5
   601                           postinc0	equ	0xFEE
   602                           wreg	equ	0xFE8
   603                           
   604                           	psect	cstackBANK0
   605  0000EE                     __pcstackBANK0:
   606                           	opt stack 0
   607  0000EE                     ??_LEDsetBar:
   608  0000EE                     ??___ftmul:
   609  0000EE                     ToSend@where:
   610                           	opt stack 0
   611  0000EE                     CRCcheck@SentCRC:
   612                           	opt stack 0
   613  0000EE                     LEDBsetBrightness@b:
   614                           	opt stack 0
   615  0000EE                     LEDblinkRate@b:
   616                           	opt stack 0
   617  0000EE                     begin@ptr:
   618                           	opt stack 0
   619                           
   620                           ; 2 bytes @ 0x0
   621  0000EE                     	ds	1
   622  0000EF                     CRCcheck@calculatedCRC:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x1
   626  0000EF                     	ds	1
   627  0000F0                     LEDBsetBrightness@i2c_addr:
   628                           	opt stack 0
   629  0000F0                     LEDblinkRate@i2c_addr:
   630                           	opt stack 0
   631  0000F0                     begin@maxSize:
   632                           	opt stack 0
   633  0000F0                     CRCcheck@arrayHolder:
   634                           	opt stack 0
   635                           
   636                           ; 3 bytes @ 0x2
   637  0000F0                     	ds	1
   638  0000F1                     begin@givenAddress:
   639                           	opt stack 0
   640  0000F1                     ___ftmul@exp:
   641                           	opt stack 0
   642  0000F1                     LEDBsetBrightness@writeBuffer:
   643                           	opt stack 0
   644  0000F1                     LEDblinkRate@writeBuffer:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0x3
   648  0000F1                     	ds	1
   649  0000F2                     begin@error:
   650                           	opt stack 0
   651  0000F2                     ___ftmul@f3_as_product:
   652                           	opt stack 0
   653                           
   654                           ; 3 bytes @ 0x4
   655  0000F2                     	ds	1
   656  0000F3                     LEDBsetBrightness@timeOut:
   657                           	opt stack 0
   658  0000F3                     LEDblinkRate@timeOut:
   659                           	opt stack 0
   660  0000F3                     begin@stufftosend:
   661                           	opt stack 0
   662  0000F3                     CRCcheck@rt:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0x5
   666  0000F3                     	ds	2
   667  0000F5                     ??_receiveData:
   668  0000F5                     LEDBsetBrightness@status:
   669                           	opt stack 0
   670  0000F5                     LEDblinkRate@status:
   671                           	opt stack 0
   672  0000F5                     ___ftmul@cntr:
   673                           	opt stack 0
   674  0000F5                     begin@stufftoreceive:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0x7
   678  0000F5                     	ds	1
   679  0000F6                     ___ftmul@sign:
   680                           	opt stack 0
   681  0000F6                     LEDbegin@writeBuffer:
   682                           	opt stack 0
   683                           
   684                           ; 3 bytes @ 0x8
   685  0000F6                     	ds	1
   686  0000F7                     ?___fttol:
   687                           	opt stack 0
   688  0000F7                     begin@stuffavailable:
   689                           	opt stack 0
   690  0000F7                     ___fttol@f1:
   691                           	opt stack 0
   692                           
   693                           ; 3 bytes @ 0x9
   694  0000F7                     	ds	2
   695  0000F9                     LEDbegin@timeOut:
   696                           	opt stack 0
   697  0000F9                     begin@stuffpeek:
   698                           	opt stack 0
   699                           
   700                           ; 2 bytes @ 0xB
   701  0000F9                     	ds	2
   702  0000FB                     LEDbegin@i2c_addr:
   703                           	opt stack 0
   704                           
   705                           ; 1 bytes @ 0xD
   706  0000FB                     	ds	1
   707  0000FC                     LEDbegin@status:
   708                           	opt stack 0
   709                           
   710                           ; 1 bytes @ 0xE
   711  0000FC                     	ds	2
   712                           tblptru	equ	0xFF8
   713                           tblptrh	equ	0xFF7
   714                           tblptrl	equ	0xFF6
   715                           tablat	equ	0xFF5
   716                           postinc0	equ	0xFEE
   717                           wreg	equ	0xFE8
   718                           
   719                           	psect	cstackCOMRAM
   720  000001                     __pcstackCOMRAM:
   721                           	opt stack 0
   722  000001                     ??_I2C1_Stop:
   723  000001                     ?i2_UART_buff_size:
   724                           	opt stack 0
   725  000001                     ?i2_UART_buff_modulo_inc:
   726                           	opt stack 0
   727  000001                     ReadButtonState@btnnum:
   728                           	opt stack 0
   729  000001                     i2UART_buff_size@_this:
   730                           	opt stack 0
   731  000001                     i2UART_buff_modulo_inc@value:
   732                           	opt stack 0
   733                           
   734                           ; 2 bytes @ 0x0
   735  000001                     	ds	2
   736  000003                     ??_ReadButtonState:
   737  000003                     I2C1_Stop@completion_code:
   738                           	opt stack 0
   739  000003                     i2UART_buff_modulo_inc@modulus:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x2
   743  000003                     	ds	1
   744  000004                     ??_I2C1_ISR:
   745                           
   746                           ; 1 bytes @ 0x3
   747  000004                     	ds	1
   748  000005                     TMR0_ISR@x:
   749                           	opt stack 0
   750  000005                     i2UART_buff_modulo_inc@my_value:
   751                           	opt stack 0
   752                           
   753                           ; 2 bytes @ 0x4
   754  000005                     	ds	2
   755  000007                     i2UART_buff_put@_this:
   756                           	opt stack 0
   757  000007                     i2UART_buff_get@_this:
   758                           	opt stack 0
   759                           
   760                           ; 2 bytes @ 0x6
   761  000007                     	ds	2
   762  000009                     ??i2_UART_buff_get:
   763  000009                     i2UART_buff_put@c:
   764                           	opt stack 0
   765                           
   766                           ; 1 bytes @ 0x8
   767  000009                     	ds	1
   768  00000A                     ??i2_UART_buff_put:
   769                           
   770                           ; 1 bytes @ 0x9
   771  00000A                     	ds	1
   772  00000B                     i2UART_buff_get@c:
   773                           	opt stack 0
   774                           
   775                           ; 1 bytes @ 0xA
   776  00000B                     	ds	1
   777  00000C                     EUSART1_Receive_ISR@data:
   778                           	opt stack 0
   779                           
   780                           ; 1 bytes @ 0xB
   781  00000C                     	ds	1
   782  00000D                     ??_INTERRUPT_InterruptManager:
   783                           
   784                           ; 1 bytes @ 0xC
   785  00000D                     	ds	14
   786  00001B                     ?_FastTransfer_buffer_modulo_inc:
   787                           	opt stack 0
   788  00001B                     ?_UART_buff_modulo_inc:
   789                           	opt stack 0
   790  00001B                     ?_UART_buff_size:
   791                           	opt stack 0
   792  00001B                     ?___awdiv:
   793                           	opt stack 0
   794  00001B                     ?___ftpack:
   795                           	opt stack 0
   796  00001B                     I2C1_MasterTRBInsert@ptrb_list:
   797                           	opt stack 0
   798  00001B                     I2C1_MasterWriteTRBBuild@ptrb:
   799                           	opt stack 0
   800  00001B                     Delay@wait:
   801                           	opt stack 0
   802  00001B                     GetButtonState@btnnum:
   803                           	opt stack 0
   804  00001B                     TBbarGraphs@t:
   805                           	opt stack 0
   806  00001B                     CRC8@data:
   807                           	opt stack 0
   808  00001B                     FastTransfer_buffer_modulo_inc@value:
   809                           	opt stack 0
   810  00001B                     crcBufS_put@_this:
   811                           	opt stack 0
   812  00001B                     crcBufS_status_put@_this:
   813                           	opt stack 0
   814  00001B                     crcBufS_get@_this:
   815                           	opt stack 0
   816  00001B                     UART_buff_size@_this:
   817                           	opt stack 0
   818  00001B                     UART_buff_modulo_inc@value:
   819                           	opt stack 0
   820  00001B                     UART_buff_peek@_this:
   821                           	opt stack 0
   822  00001B                     setLED@led:
   823                           	opt stack 0
   824  00001B                     Off_Led@led:
   825                           	opt stack 0
   826  00001B                     TMR2_SetInterruptHandler@InterruptHandler:
   827                           	opt stack 0
   828  00001B                     ___awdiv@dividend:
   829                           	opt stack 0
   830  00001B                     memset@p1:
   831                           	opt stack 0
   832  00001B                     ___ftpack@arg:
   833                           	opt stack 0
   834                           
   835                           ; 3 bytes @ 0x1A
   836  00001B                     	ds	2
   837  00001D                     ??_Off_Led:
   838  00001D                     ??_setLED:
   839  00001D                     ??_Delay:
   840  00001D                     ??_GetButtonState:
   841  00001D                     ??_UART_buff_peek:
   842  00001D                     ?_Receive_available:
   843                           	opt stack 0
   844  00001D                     CRC8@len:
   845                           	opt stack 0
   846  00001D                     crcBufS_put@address:
   847                           	opt stack 0
   848  00001D                     crcBufS_status_put@time:
   849                           	opt stack 0
   850  00001D                     crcBufS_get@time:
   851                           	opt stack 0
   852  00001D                     I2C1_MasterTRBInsert@pflag:
   853                           	opt stack 0
   854  00001D                     I2C1_MasterWriteTRBBuild@pdata:
   855                           	opt stack 0
   856  00001D                     TBbarGraphs@b:
   857                           	opt stack 0
   858  00001D                     FastTransfer_buffer_modulo_inc@modulus:
   859                           	opt stack 0
   860  00001D                     UART_buff_modulo_inc@modulus:
   861                           	opt stack 0
   862  00001D                     ___awdiv@divisor:
   863                           	opt stack 0
   864  00001D                     memset@c:
   865                           	opt stack 0
   866                           
   867                           ; 2 bytes @ 0x1C
   868  00001D                     	ds	1
   869  00001E                     CRC8@sum:
   870                           	opt stack 0
   871  00001E                     crcBufS_put@oldCRC:
   872                           	opt stack 0
   873  00001E                     crcBufS_status_put@status:
   874                           	opt stack 0
   875  00001E                     crcBufS_get@space:
   876                           	opt stack 0
   877  00001E                     ___ftpack@exp:
   878                           	opt stack 0
   879  00001E                     Delay@x:
   880                           	opt stack 0
   881                           
   882                           ; 2 bytes @ 0x1D
   883  00001E                     	ds	1
   884  00001F                     ??_crcBufS_get:
   885  00001F                     ??_crcBufS_status_put:
   886  00001F                     I2C1_MasterWriteTRBBuild@length:
   887                           	opt stack 0
   888  00001F                     CRC8@extract:
   889                           	opt stack 0
   890  00001F                     crcBufS_put@status:
   891                           	opt stack 0
   892  00001F                     ___awdiv@counter:
   893                           	opt stack 0
   894  00001F                     ___ftpack@sign:
   895                           	opt stack 0
   896  00001F                     SetLEDOut@lednum:
   897                           	opt stack 0
   898  00001F                     FastTransfer_buffer_modulo_inc@my_value:
   899                           	opt stack 0
   900  00001F                     UART_buff_modulo_inc@my_value:
   901                           	opt stack 0
   902  00001F                     memset@n:
   903                           	opt stack 0
   904                           
   905                           ; 2 bytes @ 0x1E
   906  00001F                     	ds	1
   907  000020                     ??_crcBufS_put:
   908  000020                     ??___ftpack:
   909  000020                     I2C1_MasterTRBInsert@count:
   910                           	opt stack 0
   911  000020                     CRC8@tempI:
   912                           	opt stack 0
   913  000020                     ___awdiv@sign:
   914                           	opt stack 0
   915  000020                     I2C1_MasterWriteTRBBuild@address:
   916                           	opt stack 0
   917                           
   918                           ; 2 bytes @ 0x1F
   919  000020                     	ds	1
   920  000021                     ?_buttonsCollector:
   921                           	opt stack 0
   922  000021                     CRC8@crc:
   923                           	opt stack 0
   924  000021                     SetLEDOut@state:
   925                           	opt stack 0
   926  000021                     FastTransfer_buffer_put@_this:
   927                           	opt stack 0
   928  000021                     UART_buff_put@_this:
   929                           	opt stack 0
   930  000021                     UART_buff_get@_this:
   931                           	opt stack 0
   932  000021                     ___awdiv@quotient:
   933                           	opt stack 0
   934  000021                     memset@p:
   935                           	opt stack 0
   936                           
   937                           ; 2 bytes @ 0x20
   938  000021                     	ds	1
   939  000022                     ??_I2C1_MasterWriteTRBBuild:
   940                           
   941                           ; 1 bytes @ 0x21
   942  000022                     	ds	1
   943  000023                     ??_buttonsCollector:
   944  000023                     ??_SetLEDOut:
   945  000023                     ??_UART_buff_get:
   946  000023                     ?___lwtoft:
   947                           	opt stack 0
   948  000023                     FastTransfer_buffer_put@towhere:
   949                           	opt stack 0
   950  000023                     UART_buff_put@c:
   951                           	opt stack 0
   952  000023                     LEDsetBar@bar:
   953                           	opt stack 0
   954  000023                     FastTransfer_buffer_flush@_this:
   955                           	opt stack 0
   956  000023                     crcBufS_status_put@wantedTime:
   957                           	opt stack 0
   958  000023                     UART_buff_init@_this:
   959                           	opt stack 0
   960  000023                     ___lwtoft@c:
   961                           	opt stack 0
   962                           
   963                           ; 2 bytes @ 0x22
   964  000023                     	ds	1
   965  000024                     ??_UART_buff_put:
   966  000024                     I2C1_MasterWrite@pdata:
   967                           	opt stack 0
   968  000024                     FastTransfer_buffer_put@towhat:
   969                           	opt stack 0
   970                           
   971                           ; 2 bytes @ 0x23
   972  000024                     	ds	1
   973  000025                     UART_buff_get@c:
   974                           	opt stack 0
   975  000025                     LEDsetBar@color:
   976                           	opt stack 0
   977  000025                     handleIndicators@receivedIndicators:
   978                           	opt stack 0
   979  000025                     FastTransfer_buffer_flush@clearBuffer:
   980                           	opt stack 0
   981  000025                     crcBufS_get@wantedTime:
   982                           	opt stack 0
   983                           
   984                           ; 2 bytes @ 0x24
   985  000025                     	ds	1
   986  000026                     ??_FastTransfer_buffer_put:
   987  000026                     ?___ftmul:
   988                           	opt stack 0
   989  000026                     I2C1_MasterWrite@length:
   990                           	opt stack 0
   991  000026                     Send_put@_data:
   992                           	opt stack 0
   993  000026                     buttonsCollector@sendVal:
   994                           	opt stack 0
   995  000026                     ___ftmul@f1:
   996                           	opt stack 0
   997                           
   998                           ; 3 bytes @ 0x25
   999  000026                     	ds	1
  1000  000027                     ??_handleIndicators:
  1001  000027                     ??_sendData:
  1002  000027                     I2C1_MasterWrite@address:
  1003                           	opt stack 0
  1004  000027                     LEDsetBar@c:
  1005                           	opt stack 0
  1006                           
  1007                           ; 2 bytes @ 0x26
  1008  000027                     	ds	1
  1009  000028                     sendData@whereToSend:
  1010                           	opt stack 0
  1011  000028                     buttonsCollector@i:
  1012                           	opt stack 0
  1013                           
  1014                           ; 2 bytes @ 0x27
  1015  000028                     	ds	1
  1016  000029                     sendData@CS:
  1017                           	opt stack 0
  1018  000029                     I2C1_MasterWrite@pflag:
  1019                           	opt stack 0
  1020  000029                     LEDsetBar@a:
  1021                           	opt stack 0
  1022  000029                     ___ftmul@f2:
  1023                           	opt stack 0
  1024                           
  1025                           ; 3 bytes @ 0x28
  1026  000029                     	ds	1
  1027  00002A                     handleIndicators@i:
  1028                           	opt stack 0
  1029  00002A                     sendData@i:
  1030                           	opt stack 0
  1031  00002A                     ToSend@what:
  1032                           	opt stack 0
  1033                           
  1034                           ; 2 bytes @ 0x29
  1035  00002A                     	ds	1
  1036  00002B                     
  1037                           ; 1 bytes @ 0x2A
  1038  00002B                     	ds	1
  1039  00002C                     tblptru	equ	0xFF8
  1040                           tblptrh	equ	0xFF7
  1041                           tblptrl	equ	0xFF6
  1042                           tablat	equ	0xFF5
  1043                           postinc0	equ	0xFEE
  1044                           wreg	equ	0xFE8
  1045                           
  1046                           ; 1 bytes @ 0x2B
  1047 ;;
  1048 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1049 ;;
  1050 ;; *************** function _main *****************
  1051 ;; Defined at:
  1052 ;;		line 32 in file "main.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;		None
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;  ADCNT           2   24[BANK1 ] int 
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      void 
  1059 ;; Registers used:
  1060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1066 ;;      Params:         0       0       0       0       0       0       0
  1067 ;;      Locals:         0       0       2       0       0       0       0
  1068 ;;      Temps:          0       0       0       0       0       0       0
  1069 ;;      Totals:         0       0       2       0       0       0       0
  1070 ;;Total ram usage:        2 bytes
  1071 ;; Hardware stack levels required when called:   10
  1072 ;; This function calls:
  1073 ;;		_LEDbegin
  1074 ;;		_LEDsetValue
  1075 ;;		_LEDwriteDisplay
  1076 ;;		_SYSTEM_Initialize
  1077 ;;		___ftmul
  1078 ;;		___fttol
  1079 ;;		___lwtoft
  1080 ;;		_updateComms
  1081 ;; This function is called by:
  1082 ;;		Startup code after reset
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086                           	psect	text0
  1087  001B86                     __ptext0:
  1088                           	opt stack 0
  1089  001B86                     _main:
  1090                           	opt stack 21
  1091                           
  1092                           ;main.c: 34: SYSTEM_Initialize();
  1093                           
  1094                           ;incstack = 0
  1095  001B86  EC5C  F013         	call	_SYSTEM_Initialize	;wreg free
  1096                           
  1097                           ;main.c: 53: (INTCONbits.GIE = 1);
  1098  001B8A  8EF2               	bsf	intcon,7,c	;volatile
  1099                           
  1100                           ;main.c: 56: (INTCONbits.PEIE = 1);
  1101  001B8C  8CF2               	bsf	intcon,6,c	;volatile
  1102                           
  1103                           ;main.c: 63: int ADCNT = 1;
  1104  001B8E  0E00               	movlw	0
  1105  001B90  0101               	movlb	1	; () banked
  1106  001B92  6F52               	movwf	(main@ADCNT+1)& (0+255),b
  1107  001B94  0E01               	movlw	1
  1108  001B96  6F51               	movwf	main@ADCNT& (0+255),b
  1109                           
  1110                           ; BSR set to: 1
  1111                           ;main.c: 64: LEDbegin(0x70);
  1112  001B98  0E70               	movlw	112
  1113  001B9A  ECEA  F010         	call	_LEDbegin
  1114                           
  1115                           ;main.c: 65: LEDbegin(0x71);
  1116  001B9E  0E71               	movlw	113
  1117  001BA0  ECEA  F010         	call	_LEDbegin
  1118                           
  1119                           ;main.c: 66: do { LATA3 = 1; } while(0);
  1120  001BA4  8689               	bsf	3977,3,c	;volatile
  1121                           
  1122                           ;main.c: 68: LATCbits.LATC5 = 0;
  1123  001BA6  9A8B               	bcf	3979,5,c	;volatile
  1124  001BA8                     l6556:
  1125                           
  1126                           ;main.c: 70: updateComms();
  1127  001BA8  EC9E  F015         	call	_updateComms	;wreg free
  1128                           
  1129                           ;main.c: 76: if (time > 1) {
  1130  001BAC  0100               	movlb	0	; () banked
  1131  001BAE  51DC               	movf	(_time+1)& (0+255),w,b	;volatile
  1132  001BB0  E105               	bnz	u7390
  1133  001BB2  0E02               	movlw	2
  1134  001BB4  0100               	movlb	0	; () banked
  1135  001BB6  5DDB               	subwf	_time& (0+255),w,b	;volatile
  1136  001BB8  A0D8               	btfss	status,0,c
  1137  001BBA  D7F6               	goto	l6556
  1138  001BBC                     u7390:
  1139                           
  1140                           ; BSR set to: 0
  1141                           ;main.c: 77: LEDsetValue((throttle)*(24.0 / 100.0), 1);
  1142  001BBC  0EC3               	movlw	195
  1143  001BBE  6E29               	movwf	___ftmul@f2,c
  1144  001BC0  0E75               	movlw	117
  1145  001BC2  6E2A               	movwf	___ftmul@f2+1,c
  1146  001BC4  0E3E               	movlw	62
  1147  001BC6  6E2B               	movwf	___ftmul@f2+2,c
  1148  001BC8  C0D9  F023         	movff	_throttle,___lwtoft@c
  1149  001BCC  C0DA  F024         	movff	_throttle+1,___lwtoft@c+1
  1150  001BD0  EC80  F016         	call	___lwtoft	;wreg free
  1151  001BD4  C023  F026         	movff	?___lwtoft,___ftmul@f1
  1152  001BD8  C024  F027         	movff	?___lwtoft+1,___ftmul@f1+1
  1153  001BDC  C025  F028         	movff	?___lwtoft+2,___ftmul@f1+2
  1154  001BE0  ECF3  F00A         	call	___ftmul	;wreg free
  1155  001BE4  C026  F0F7         	movff	?___ftmul,___fttol@f1
  1156  001BE8  C027  F0F8         	movff	?___ftmul+1,___fttol@f1+1
  1157  001BEC  C028  F0F9         	movff	?___ftmul+2,___fttol@f1+2
  1158  001BF0  ECB9  F009         	call	___fttol	;wreg free
  1159  001BF4  C0F7  F144         	movff	?___fttol,LEDsetValue@value
  1160  001BF8  C0F8  F145         	movff	?___fttol+1,LEDsetValue@value+1
  1161  001BFC  0E00               	movlw	0
  1162  001BFE  0101               	movlb	1	; () banked
  1163  001C00  6F47               	movwf	(LEDsetValue@color+1)& (0+255),b
  1164  001C02  0E01               	movlw	1
  1165  001C04  6F46               	movwf	LEDsetValue@color& (0+255),b
  1166  001C06  EC98  F010         	call	_LEDsetValue	;wreg free
  1167                           
  1168                           ;main.c: 78: LEDwriteDisplay(0x70);
  1169  001C0A  0E70               	movlw	112
  1170  001C0C  EC89  F00B         	call	_LEDwriteDisplay
  1171                           
  1172                           ;main.c: 79: LEDsetValue((brake)*(24.0 / 100.0), 1);
  1173  001C10  0EC3               	movlw	195
  1174  001C12  6E29               	movwf	___ftmul@f2,c
  1175  001C14  0E75               	movlw	117
  1176  001C16  6E2A               	movwf	___ftmul@f2+1,c
  1177  001C18  0E3E               	movlw	62
  1178  001C1A  6E2B               	movwf	___ftmul@f2+2,c
  1179  001C1C  C0C7  F023         	movff	_brake,___lwtoft@c
  1180  001C20  C0C8  F024         	movff	_brake+1,___lwtoft@c+1
  1181  001C24  EC80  F016         	call	___lwtoft	;wreg free
  1182  001C28  C023  F026         	movff	?___lwtoft,___ftmul@f1
  1183  001C2C  C024  F027         	movff	?___lwtoft+1,___ftmul@f1+1
  1184  001C30  C025  F028         	movff	?___lwtoft+2,___ftmul@f1+2
  1185  001C34  ECF3  F00A         	call	___ftmul	;wreg free
  1186  001C38  C026  F0F7         	movff	?___ftmul,___fttol@f1
  1187  001C3C  C027  F0F8         	movff	?___ftmul+1,___fttol@f1+1
  1188  001C40  C028  F0F9         	movff	?___ftmul+2,___fttol@f1+2
  1189  001C44  ECB9  F009         	call	___fttol	;wreg free
  1190  001C48  C0F7  F144         	movff	?___fttol,LEDsetValue@value
  1191  001C4C  C0F8  F145         	movff	?___fttol+1,LEDsetValue@value+1
  1192  001C50  0E00               	movlw	0
  1193  001C52  0101               	movlb	1	; () banked
  1194  001C54  6F47               	movwf	(LEDsetValue@color+1)& (0+255),b
  1195  001C56  0E01               	movlw	1
  1196  001C58  6F46               	movwf	LEDsetValue@color& (0+255),b
  1197  001C5A  EC98  F010         	call	_LEDsetValue	;wreg free
  1198                           
  1199                           ;main.c: 80: LEDwriteDisplay(0x71);
  1200  001C5E  0E71               	movlw	113
  1201  001C60  EC89  F00B         	call	_LEDwriteDisplay
  1202                           
  1203                           ;main.c: 81: do { LATA3 = ~LATA3; } while(0);
  1204  001C64  B689               	btfsc	3977,3,c	;volatile
  1205  001C66  D002               	goto	u7400
  1206  001C68  8689               	bsf	3977,3,c	;volatile
  1207  001C6A  D001               	goto	l6564
  1208  001C6C                     u7400:
  1209  001C6C  9689               	bcf	3977,3,c	;volatile
  1210  001C6E                     l6564:
  1211                           
  1212                           ;main.c: 82: time = 0;
  1213  001C6E  0E00               	movlw	0
  1214  001C70  0100               	movlb	0	; () banked
  1215  001C72  6FDC               	movwf	(_time+1)& (0+255),b	;volatile
  1216  001C74  0E00               	movlw	0
  1217  001C76  6FDB               	movwf	_time& (0+255),b	;volatile
  1218                           
  1219                           ; BSR set to: 0
  1220                           
  1221                           ; BSR set to: 0
  1222  001C78  D797               	goto	l6556
  1223  001C7A                     __end_of_main:
  1224                           	opt stack 0
  1225                           tblptru	equ	0xFF8
  1226                           tblptrh	equ	0xFF7
  1227                           tblptrl	equ	0xFF6
  1228                           tablat	equ	0xFF5
  1229                           intcon	equ	0xFF2
  1230                           postinc0	equ	0xFEE
  1231                           wreg	equ	0xFE8
  1232                           status	equ	0xFD8
  1233                           
  1234 ;; *************** function _updateComms *****************
  1235 ;; Defined at:
  1236 ;;		line 7 in file "Communications.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;		None
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;		None
  1241 ;; Return value:  Size  Location     Type
  1242 ;;                  1    wreg      void 
  1243 ;; Registers used:
  1244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1250 ;;      Params:         0       0       0       0       0       0       0
  1251 ;;      Locals:         0       0       0       0       0       0       0
  1252 ;;      Temps:          0       0       0       0       0       0       0
  1253 ;;      Totals:         0       0       0       0       0       0       0
  1254 ;;Total ram usage:        0 bytes
  1255 ;; Hardware stack levels used:    1
  1256 ;; Hardware stack levels required when called:    9
  1257 ;; This function calls:
  1258 ;;		_TBbarGraphs
  1259 ;;		_handleIndicators
  1260 ;;		_receiveData
  1261 ;;		_respondECU
  1262 ;; This function is called by:
  1263 ;;		_main
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           	psect	text1
  1268  002B3C                     __ptext1:
  1269                           	opt stack 0
  1270  002B3C                     _updateComms:
  1271                           	opt stack 21
  1272                           
  1273                           ;Communications.c: 8: if (receiveData()) {
  1274                           
  1275                           ; BSR set to: 0
  1276                           ;incstack = 0
  1277  002B3C  EC6A  F000         	call	_receiveData	;wreg free
  1278  002B40  0900               	iorlw	0
  1279  002B42  B4D8               	btfsc	status,2,c
  1280  002B44  0012               	return	
  1281                           
  1282                           ;Communications.c: 10: respondECU();
  1283  002B46  ECFD  F014         	call	_respondECU	;wreg free
  1284                           
  1285                           ;Communications.c: 12: handleIndicators(receiveArray[2]);
  1286  002B4A  C104  F025         	movff	_receiveArray+4,handleIndicators@receivedIndicators	;volatile
  1287  002B4E  C105  F026         	movff	_receiveArray+5,handleIndicators@receivedIndicators+1	;volatile
  1288  002B52  ECE6  F012         	call	_handleIndicators	;wreg free
  1289                           
  1290                           ;Communications.c: 13: TBbarGraphs(receiveArray[3], receiveArray[4]);
  1291  002B56  C106  F01B         	movff	_receiveArray+6,TBbarGraphs@t	;volatile
  1292  002B5A  C107  F01C         	movff	_receiveArray+7,TBbarGraphs@t+1	;volatile
  1293  002B5E  C108  F01D         	movff	_receiveArray+8,TBbarGraphs@b	;volatile
  1294  002B62  C109  F01E         	movff	_receiveArray+9,TBbarGraphs@b+1	;volatile
  1295  002B66  EC19  F017         	call	_TBbarGraphs	;wreg free
  1296                           
  1297                           ;Communications.c: 14: receiveArray[0] = 0;
  1298  002B6A  0E00               	movlw	0
  1299  002B6C  0101               	movlb	1	; () banked
  1300  002B6E  6F01               	movwf	(_receiveArray+1)& (0+255),b	;volatile
  1301  002B70  0E00               	movlw	0
  1302  002B72  6F00               	movwf	_receiveArray& (0+255),b	;volatile
  1303  002B74  0012               	return	
  1304  002B76                     __end_of_updateComms:
  1305                           	opt stack 0
  1306                           tblptru	equ	0xFF8
  1307                           tblptrh	equ	0xFF7
  1308                           tblptrl	equ	0xFF6
  1309                           tablat	equ	0xFF5
  1310                           intcon	equ	0xFF2
  1311                           postinc0	equ	0xFEE
  1312                           wreg	equ	0xFE8
  1313                           status	equ	0xFD8
  1314                           
  1315 ;; *************** function _respondECU *****************
  1316 ;; Defined at:
  1317 ;;		line 18 in file "Communications.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;		None
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;		None
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  1    wreg      void 
  1324 ;; Registers used:
  1325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1331 ;;      Params:         0       0       0       0       0       0       0
  1332 ;;      Locals:         0       0       0       0       0       0       0
  1333 ;;      Temps:          0       0       0       0       0       0       0
  1334 ;;      Totals:         0       0       0       0       0       0       0
  1335 ;;Total ram usage:        0 bytes
  1336 ;; Hardware stack levels used:    1
  1337 ;; Hardware stack levels required when called:    8
  1338 ;; This function calls:
  1339 ;;		_Delay
  1340 ;;		_ToSend
  1341 ;;		_buttonsCollector
  1342 ;;		_sendData
  1343 ;; This function is called by:
  1344 ;;		_updateComms
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           	psect	text2
  1349  0029FA                     __ptext2:
  1350                           	opt stack 0
  1351  0029FA                     _respondECU:
  1352                           	opt stack 21
  1353                           
  1354                           ;Communications.c: 19: LATCbits.LATC5 = 1;
  1355                           
  1356                           ;incstack = 0
  1357  0029FA  8A8B               	bsf	3979,5,c	;volatile
  1358                           
  1359                           ;Communications.c: 20: ToSend(0, 3);
  1360  0029FC  0E00               	movlw	0
  1361  0029FE  6E2B               	movwf	ToSend@what+1,c
  1362  002A00  0E03               	movlw	3
  1363  002A02  6E2A               	movwf	ToSend@what,c
  1364  002A04  0E00               	movlw	0
  1365  002A06  ECA3  F016         	call	_ToSend
  1366                           
  1367                           ;Communications.c: 21: ToSend(8, buttonsCollector());
  1368  002A0A  EC96  F013         	call	_buttonsCollector	;wreg free
  1369  002A0E  C021  F02A         	movff	?_buttonsCollector,ToSend@what
  1370  002A12  C022  F02B         	movff	?_buttonsCollector+1,ToSend@what+1
  1371  002A16  0E08               	movlw	8
  1372  002A18  ECA3  F016         	call	_ToSend
  1373                           
  1374                           ;Communications.c: 22: Delay(9);
  1375  002A1C  0E00               	movlw	0
  1376  002A1E  6E1C               	movwf	Delay@wait+1,c
  1377  002A20  0E09               	movlw	9
  1378  002A22  6E1B               	movwf	Delay@wait,c
  1379  002A24  ECBB  F015         	call	_Delay	;wreg free
  1380                           
  1381                           ;Communications.c: 23: sendData(1);
  1382  002A28  0E01               	movlw	1
  1383  002A2A  EC5B  F00A         	call	_sendData
  1384                           
  1385                           ;Communications.c: 24: Delay(3);
  1386  002A2E  0E00               	movlw	0
  1387  002A30  6E1C               	movwf	Delay@wait+1,c
  1388  002A32  0E03               	movlw	3
  1389  002A34  6E1B               	movwf	Delay@wait,c
  1390  002A36  ECBB  F015         	call	_Delay	;wreg free
  1391                           
  1392                           ;Communications.c: 25: LATCbits.LATC5 = 0;
  1393  002A3A  9A8B               	bcf	3979,5,c	;volatile
  1394  002A3C  0012               	return		;funcret
  1395  002A3E                     __end_of_respondECU:
  1396                           	opt stack 0
  1397                           tblptru	equ	0xFF8
  1398                           tblptrh	equ	0xFF7
  1399                           tblptrl	equ	0xFF6
  1400                           tablat	equ	0xFF5
  1401                           intcon	equ	0xFF2
  1402                           postinc0	equ	0xFEE
  1403                           wreg	equ	0xFE8
  1404                           status	equ	0xFD8
  1405                           
  1406 ;; *************** function _sendData *****************
  1407 ;; Defined at:
  1408 ;;		line 53 in file "FastTransfer.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;  whereToSend     1    wreg     unsigned char 
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;  whereToSend     1   39[COMRAM] unsigned char 
  1413 ;;  i               2   41[COMRAM] int 
  1414 ;;  CS              1   40[COMRAM] unsigned char 
  1415 ;; Return value:  Size  Location     Type
  1416 ;;                  1    wreg      void 
  1417 ;; Registers used:
  1418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1424 ;;      Params:         0       0       0       0       0       0       0
  1425 ;;      Locals:         4       0       0       0       0       0       0
  1426 ;;      Temps:          1       0       0       0       0       0       0
  1427 ;;      Totals:         5       0       0       0       0       0       0
  1428 ;;Total ram usage:        5 bytes
  1429 ;; Hardware stack levels used:    1
  1430 ;; Hardware stack levels required when called:    7
  1431 ;; This function calls:
  1432 ;;		Absolute function
  1433 ;;		_CRC8
  1434 ;;		_FastTransfer_buffer_flush
  1435 ;;		_Send_put
  1436 ;;		_crcBufS_put
  1437 ;; This function is called by:
  1438 ;;		_respondECU
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           	psect	text3
  1443  0014B6                     __ptext3:
  1444                           	opt stack 0
  1445  0014B6                     _sendData:
  1446                           	opt stack 21
  1447                           
  1448                           ;incstack = 0
  1449                           ;sendData@whereToSend stored from wreg
  1450  0014B6  6E28               	movwf	sendData@whereToSend,c
  1451                           
  1452                           ;FastTransfer.c: 56: unsigned char CS = CRC8(sendStructAddress, ring_buffer.count);
  1453  0014B8  C0D5  F01B         	movff	_sendStructAddress,CRC8@data
  1454  0014BC  C0D6  F01C         	movff	_sendStructAddress+1,CRC8@data+1
  1455  0014C0  C2CC  F01D         	movff	_ring_buffer+204,CRC8@len
  1456  0014C4  ECD8  F014         	call	_CRC8	;wreg free
  1457  0014C8  6E29               	movwf	sendData@CS,c
  1458                           
  1459                           ;FastTransfer.c: 58: serial_write(0x06);
  1460  0014CA  D801               	call	u5598
  1461  0014CC  D00B               	goto	l5594
  1462  0014CE                     u5598:
  1463  0014CE  0005               	push	
  1464  0014D0  6EFA               	movwf	pclath,c
  1465  0014D2  5032               	movf	_serial_write,w,c
  1466  0014D4  6EFD               	movwf	tosl,c
  1467  0014D6  5033               	movf	_serial_write+1,w,c
  1468  0014D8  6EFE               	movwf	tosh,c
  1469  0014DA  50F8               	movf	tblptru,w,c
  1470  0014DC  6EFF               	movwf	tosu,c
  1471  0014DE  50FA               	movf	pclath,w,c
  1472  0014E0  0E06               	movlw	6
  1473  0014E2  0012               	return		;indir
  1474  0014E4                     l5594:
  1475                           
  1476                           ;FastTransfer.c: 59: serial_write(0x85);
  1477  0014E4  D801               	call	u5608
  1478  0014E6  D00B               	goto	l5596
  1479  0014E8                     u5608:
  1480  0014E8  0005               	push	
  1481  0014EA  6EFA               	movwf	pclath,c
  1482  0014EC  5032               	movf	_serial_write,w,c
  1483  0014EE  6EFD               	movwf	tosl,c
  1484  0014F0  5033               	movf	_serial_write+1,w,c
  1485  0014F2  6EFE               	movwf	tosh,c
  1486  0014F4  50F8               	movf	tblptru,w,c
  1487  0014F6  6EFF               	movwf	tosu,c
  1488  0014F8  50FA               	movf	pclath,w,c
  1489  0014FA  0E85               	movlw	133
  1490  0014FC  0012               	return		;indir
  1491  0014FE                     l5596:
  1492                           
  1493                           ;FastTransfer.c: 60: serial_write(whereToSend);
  1494  0014FE  D801               	call	u5618
  1495  001500  D00B               	goto	l5598
  1496  001502                     u5618:
  1497  001502  0005               	push	
  1498  001504  6EFA               	movwf	pclath,c
  1499  001506  5032               	movf	_serial_write,w,c
  1500  001508  6EFD               	movwf	tosl,c
  1501  00150A  5033               	movf	_serial_write+1,w,c
  1502  00150C  6EFE               	movwf	tosh,c
  1503  00150E  50F8               	movf	tblptru,w,c
  1504  001510  6EFF               	movwf	tosu,c
  1505  001512  50FA               	movf	pclath,w,c
  1506  001514  5028               	movf	sendData@whereToSend,w,c
  1507  001516  0012               	return		;indir
  1508  001518                     l5598:
  1509                           
  1510                           ;FastTransfer.c: 61: serial_write(moduleAddress);
  1511  001518  D801               	call	u5628
  1512  00151A  D00B               	goto	l5600
  1513  00151C                     u5628:
  1514  00151C  0005               	push	
  1515  00151E  6EFA               	movwf	pclath,c
  1516  001520  5032               	movf	_serial_write,w,c
  1517  001522  6EFD               	movwf	tosl,c
  1518  001524  5033               	movf	_serial_write+1,w,c
  1519  001526  6EFE               	movwf	tosh,c
  1520  001528  50F8               	movf	tblptru,w,c
  1521  00152A  6EFF               	movwf	tosu,c
  1522  00152C  50FA               	movf	pclath,w,c
  1523  00152E  503B               	movf	_moduleAddress,w,c
  1524  001530  0012               	return		;indir
  1525  001532                     l5600:
  1526                           
  1527                           ;FastTransfer.c: 62: serial_write(ring_buffer.count);
  1528  001532  D801               	call	u5638
  1529  001534  D00C               	goto	l5602
  1530  001536                     u5638:
  1531  001536  0005               	push	
  1532  001538  6EFA               	movwf	pclath,c
  1533  00153A  5032               	movf	_serial_write,w,c
  1534  00153C  6EFD               	movwf	tosl,c
  1535  00153E  5033               	movf	_serial_write+1,w,c
  1536  001540  6EFE               	movwf	tosh,c
  1537  001542  50F8               	movf	tblptru,w,c
  1538  001544  6EFF               	movwf	tosu,c
  1539  001546  50FA               	movf	pclath,w,c
  1540  001548  0102               	movlb	2	; () banked
  1541  00154A  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  1542  00154C  0012               	return		;indir
  1543  00154E                     l5602:
  1544                           
  1545                           ;FastTransfer.c: 66: int i;
  1546                           ;FastTransfer.c: 67: for (i = 0; i < ring_buffer.count; i++) {
  1547  00154E  0E00               	movlw	0
  1548  001550  6E2B               	movwf	sendData@i+1,c
  1549  001552  0E00               	movlw	0
  1550  001554  6E2A               	movwf	sendData@i,c
  1551  001556  D017               	goto	l5608
  1552  001558                     l5604:
  1553                           
  1554                           ;FastTransfer.c: 68: serial_write(*(sendStructAddress + i));
  1555  001558  D801               	call	u5648
  1556  00155A  D013               	goto	l5606
  1557  00155C                     u5648:
  1558  00155C  0005               	push	
  1559  00155E  6EFA               	movwf	pclath,c
  1560  001560  5032               	movf	_serial_write,w,c
  1561  001562  6EFD               	movwf	tosl,c
  1562  001564  5033               	movf	_serial_write+1,w,c
  1563  001566  6EFE               	movwf	tosh,c
  1564  001568  50F8               	movf	tblptru,w,c
  1565  00156A  6EFF               	movwf	tosu,c
  1566  00156C  50FA               	movf	pclath,w,c
  1567  00156E  502A               	movf	sendData@i,w,c
  1568  001570  0100               	movlb	0	; () banked
  1569  001572  25D5               	addwf	_sendStructAddress& (0+255),w,b
  1570  001574  6ED9               	movwf	fsr2l,c
  1571  001576  502B               	movf	sendData@i+1,w,c
  1572  001578  0100               	movlb	0	; () banked
  1573  00157A  21D6               	addwfc	(_sendStructAddress+1)& (0+255),w,b
  1574  00157C  6EDA               	movwf	fsr2h,c
  1575  00157E  50DF               	movf	indf2,w,c
  1576  001580  0012               	return		;indir
  1577  001582                     l5606:
  1578  001582  4A2A               	infsnz	sendData@i,f,c
  1579  001584  2A2B               	incf	sendData@i+1,f,c
  1580  001586                     l5608:
  1581  001586  0102               	movlb	2	; () banked
  1582  001588  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  1583  00158A  5C2A               	subwf	sendData@i,w,c
  1584  00158C  502B               	movf	sendData@i+1,w,c
  1585  00158E  0A80               	xorlw	128
  1586  001590  6E27               	movwf	??_sendData& (0+255),c
  1587  001592  0102               	movlb	2	; () banked
  1588  001594  51CD               	movf	(_ring_buffer+205)& (0+255),w,b
  1589  001596  0A80               	xorlw	128
  1590  001598  5827               	subwfb	??_sendData& (0+255),w,c
  1591  00159A  A0D8               	btfss	status,0,c
  1592  00159C  D7DD               	goto	l5604
  1593                           
  1594                           ; BSR set to: 2
  1595                           ;FastTransfer.c: 69: }
  1596                           ;FastTransfer.c: 72: serial_write(CS);
  1597                           
  1598                           ; BSR set to: 2
  1599  00159E  D801               	call	u5668
  1600  0015A0  D00B               	goto	l5612
  1601  0015A2                     u5668:
  1602  0015A2  0005               	push	
  1603  0015A4  6EFA               	movwf	pclath,c
  1604  0015A6  5032               	movf	_serial_write,w,c
  1605  0015A8  6EFD               	movwf	tosl,c
  1606  0015AA  5033               	movf	_serial_write+1,w,c
  1607  0015AC  6EFE               	movwf	tosh,c
  1608  0015AE  50F8               	movf	tblptru,w,c
  1609  0015B0  6EFF               	movwf	tosu,c
  1610  0015B2  50FA               	movf	pclath,w,c
  1611  0015B4  5029               	movf	sendData@CS,w,c
  1612  0015B6  0012               	return		;indir
  1613  0015B8                     l5612:
  1614                           
  1615                           ;FastTransfer.c: 75: crcBufS_put(&crc_buffer, whereToSend, CS, 0);
  1616  0015B8  0E28               	movlw	low _crc_buffer
  1617  0015BA  6E1B               	movwf	crcBufS_put@_this,c
  1618  0015BC  0E01               	movlw	high _crc_buffer
  1619  0015BE  6E1C               	movwf	crcBufS_put@_this+1,c
  1620  0015C0  C028  F01D         	movff	sendData@whereToSend,crcBufS_put@address
  1621  0015C4  C029  F01E         	movff	sendData@CS,crcBufS_put@oldCRC
  1622  0015C8  0E00               	movlw	0
  1623  0015CA  6E1F               	movwf	crcBufS_put@status,c
  1624  0015CC  ECAE  F00E         	call	_crcBufS_put
  1625                           
  1626                           ;FastTransfer.c: 78: FastTransfer_buffer_flush(&ring_buffer, 1);
  1627  0015D0  0E00               	movlw	low _ring_buffer
  1628  0015D2  6E23               	movwf	FastTransfer_buffer_flush@_this,c
  1629  0015D4  0E02               	movlw	high _ring_buffer
  1630  0015D6  6E24               	movwf	FastTransfer_buffer_flush@_this+1,c
  1631  0015D8  0E00               	movlw	0
  1632  0015DA  6E26               	movwf	FastTransfer_buffer_flush@clearBuffer+1,c
  1633  0015DC  0E01               	movlw	1
  1634  0015DE  6E25               	movwf	FastTransfer_buffer_flush@clearBuffer,c
  1635  0015E0  ECCE  F013         	call	_FastTransfer_buffer_flush	;wreg free
  1636  0015E4  0012               	return		;funcret
  1637  0015E6                     __end_of_sendData:
  1638                           	opt stack 0
  1639                           tosu	equ	0xFFF
  1640                           tosh	equ	0xFFE
  1641                           tosl	equ	0xFFD
  1642                           pclath	equ	0xFFA
  1643                           tblptru	equ	0xFF8
  1644                           tblptrh	equ	0xFF7
  1645                           tblptrl	equ	0xFF6
  1646                           tablat	equ	0xFF5
  1647                           intcon	equ	0xFF2
  1648                           postinc0	equ	0xFEE
  1649                           wreg	equ	0xFE8
  1650                           indf2	equ	0xFDF
  1651                           fsr2h	equ	0xFDA
  1652                           fsr2l	equ	0xFD9
  1653                           status	equ	0xFD8
  1654                           
  1655 ;; *************** function _crcBufS_put *****************
  1656 ;; Defined at:
  1657 ;;		line 321 in file "FastTransfer.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  1660 ;;		 -> crc_buffer(17), 
  1661 ;;  address         1   28[COMRAM] unsigned char 
  1662 ;;  oldCRC          1   29[COMRAM] unsigned char 
  1663 ;;  status          1   30[COMRAM] unsigned char 
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;		None
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  1    wreg      void 
  1668 ;; Registers used:
  1669 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1675 ;;      Params:         5       0       0       0       0       0       0
  1676 ;;      Locals:         0       0       0       0       0       0       0
  1677 ;;      Temps:          2       0       0       0       0       0       0
  1678 ;;      Totals:         7       0       0       0       0       0       0
  1679 ;;Total ram usage:        7 bytes
  1680 ;; Hardware stack levels used:    1
  1681 ;; Hardware stack levels required when called:    4
  1682 ;; This function calls:
  1683 ;;		Nothing
  1684 ;; This function is called by:
  1685 ;;		_sendData
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           	psect	text4
  1690  001D5C                     __ptext4:
  1691                           	opt stack 0
  1692  001D5C                     _crcBufS_put:
  1693                           	opt stack 23
  1694                           
  1695                           ;FastTransfer.c: 322: _this->buf[_this->head] = address;
  1696                           
  1697                           ;incstack = 0
  1698  001D5C  EE20 F00F          	lfsr	2,15
  1699  001D60  501B               	movf	crcBufS_put@_this,w,c
  1700  001D62  26D9               	addwf	fsr2l,f,c
  1701  001D64  501C               	movf	crcBufS_put@_this+1,w,c
  1702  001D66  22DA               	addwfc	fsr2h,f,c
  1703  001D68  CFDE F020          	movff	postinc2,??_crcBufS_put
  1704  001D6C  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  1705  001D70  5020               	movf	??_crcBufS_put,w,c
  1706  001D72  241B               	addwf	crcBufS_put@_this,w,c
  1707  001D74  6ED9               	movwf	fsr2l,c
  1708  001D76  5021               	movf	??_crcBufS_put+1,w,c
  1709  001D78  201C               	addwfc	crcBufS_put@_this+1,w,c
  1710  001D7A  6EDA               	movwf	fsr2h,c
  1711  001D7C  C01D  FFDF         	movff	crcBufS_put@address,indf2
  1712                           
  1713                           ;FastTransfer.c: 323: _this->head++;
  1714  001D80  EE20 F00F          	lfsr	2,15
  1715  001D84  501B               	movf	crcBufS_put@_this,w,c
  1716  001D86  26D9               	addwf	fsr2l,f,c
  1717  001D88  501C               	movf	crcBufS_put@_this+1,w,c
  1718  001D8A  22DA               	addwfc	fsr2h,f,c
  1719  001D8C  2ADE               	incf	postinc2,f,c
  1720  001D8E  0E00               	movlw	0
  1721  001D90  22DD               	addwfc	postdec2,f,c
  1722                           
  1723                           ;FastTransfer.c: 324: _this->buf[_this->head] = oldCRC;
  1724  001D92  EE20 F00F          	lfsr	2,15
  1725  001D96  501B               	movf	crcBufS_put@_this,w,c
  1726  001D98  26D9               	addwf	fsr2l,f,c
  1727  001D9A  501C               	movf	crcBufS_put@_this+1,w,c
  1728  001D9C  22DA               	addwfc	fsr2h,f,c
  1729  001D9E  CFDE F020          	movff	postinc2,??_crcBufS_put
  1730  001DA2  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  1731  001DA6  5020               	movf	??_crcBufS_put,w,c
  1732  001DA8  241B               	addwf	crcBufS_put@_this,w,c
  1733  001DAA  6ED9               	movwf	fsr2l,c
  1734  001DAC  5021               	movf	??_crcBufS_put+1,w,c
  1735  001DAE  201C               	addwfc	crcBufS_put@_this+1,w,c
  1736  001DB0  6EDA               	movwf	fsr2h,c
  1737  001DB2  C01E  FFDF         	movff	crcBufS_put@oldCRC,indf2
  1738                           
  1739                           ;FastTransfer.c: 325: _this->head++;
  1740  001DB6  EE20 F00F          	lfsr	2,15
  1741  001DBA  501B               	movf	crcBufS_put@_this,w,c
  1742  001DBC  26D9               	addwf	fsr2l,f,c
  1743  001DBE  501C               	movf	crcBufS_put@_this+1,w,c
  1744  001DC0  22DA               	addwfc	fsr2h,f,c
  1745  001DC2  2ADE               	incf	postinc2,f,c
  1746  001DC4  0E00               	movlw	0
  1747  001DC6  22DD               	addwfc	postdec2,f,c
  1748                           
  1749                           ;FastTransfer.c: 326: _this->buf[_this->head] = status;
  1750  001DC8  EE20 F00F          	lfsr	2,15
  1751  001DCC  501B               	movf	crcBufS_put@_this,w,c
  1752  001DCE  26D9               	addwf	fsr2l,f,c
  1753  001DD0  501C               	movf	crcBufS_put@_this+1,w,c
  1754  001DD2  22DA               	addwfc	fsr2h,f,c
  1755  001DD4  CFDE F020          	movff	postinc2,??_crcBufS_put
  1756  001DD8  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  1757  001DDC  5020               	movf	??_crcBufS_put,w,c
  1758  001DDE  241B               	addwf	crcBufS_put@_this,w,c
  1759  001DE0  6ED9               	movwf	fsr2l,c
  1760  001DE2  5021               	movf	??_crcBufS_put+1,w,c
  1761  001DE4  201C               	addwfc	crcBufS_put@_this+1,w,c
  1762  001DE6  6EDA               	movwf	fsr2h,c
  1763  001DE8  C01F  FFDF         	movff	crcBufS_put@status,indf2
  1764                           
  1765                           ;FastTransfer.c: 327: _this->head++;
  1766  001DEC  EE20 F00F          	lfsr	2,15
  1767  001DF0  501B               	movf	crcBufS_put@_this,w,c
  1768  001DF2  26D9               	addwf	fsr2l,f,c
  1769  001DF4  501C               	movf	crcBufS_put@_this+1,w,c
  1770  001DF6  22DA               	addwfc	fsr2h,f,c
  1771  001DF8  2ADE               	incf	postinc2,f,c
  1772  001DFA  0E00               	movlw	0
  1773  001DFC  22DD               	addwfc	postdec2,f,c
  1774                           
  1775                           ;FastTransfer.c: 328: if (_this->head >= (5 * 3)) {
  1776  001DFE  EE20 F00F          	lfsr	2,15
  1777  001E02  501B               	movf	crcBufS_put@_this,w,c
  1778  001E04  26D9               	addwf	fsr2l,f,c
  1779  001E06  501C               	movf	crcBufS_put@_this+1,w,c
  1780  001E08  22DA               	addwfc	fsr2h,f,c
  1781  001E0A  0E01               	movlw	1
  1782  001E0C  BEDB               	btfsc	plusw2,7,c
  1783  001E0E  0012               	return	
  1784  001E10  0E01               	movlw	1
  1785  001E12  50DB               	movf	plusw2,w,c
  1786  001E14  E104               	bnz	u5270
  1787  001E16  0E0F               	movlw	15
  1788  001E18  5CDE               	subwf	postinc2,w,c
  1789  001E1A  A0D8               	btfss	status,0,c
  1790  001E1C  0012               	return	
  1791  001E1E                     u5270:
  1792                           
  1793                           ;FastTransfer.c: 329: _this->head = 0;
  1794  001E1E  EE20 F00F          	lfsr	2,15
  1795  001E22  501B               	movf	crcBufS_put@_this,w,c
  1796  001E24  26D9               	addwf	fsr2l,f,c
  1797  001E26  501C               	movf	crcBufS_put@_this+1,w,c
  1798  001E28  22DA               	addwfc	fsr2h,f,c
  1799  001E2A  0E00               	movlw	0
  1800  001E2C  6EDE               	movwf	postinc2,c
  1801  001E2E  0E00               	movlw	0
  1802  001E30  6EDD               	movwf	postdec2,c
  1803  001E32  0012               	return	
  1804  001E34                     __end_of_crcBufS_put:
  1805                           	opt stack 0
  1806                           tosu	equ	0xFFF
  1807                           tosh	equ	0xFFE
  1808                           tosl	equ	0xFFD
  1809                           pclath	equ	0xFFA
  1810                           tblptru	equ	0xFF8
  1811                           tblptrh	equ	0xFF7
  1812                           tblptrl	equ	0xFF6
  1813                           tablat	equ	0xFF5
  1814                           intcon	equ	0xFF2
  1815                           postinc0	equ	0xFEE
  1816                           wreg	equ	0xFE8
  1817                           indf2	equ	0xFDF
  1818                           postinc2	equ	0xFDE
  1819                           postdec2	equ	0xFDD
  1820                           plusw2	equ	0xFDB
  1821                           fsr2h	equ	0xFDA
  1822                           fsr2l	equ	0xFD9
  1823                           status	equ	0xFD8
  1824                           
  1825 ;; *************** function _FastTransfer_buffer_flush *****************
  1826 ;; Defined at:
  1827 ;;		line 261 in file "FastTransfer.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;  _this           2   34[COMRAM] PTR struct ringBufS
  1830 ;;		 -> ring_buffer(206), 
  1831 ;;  clearBuffer     2   36[COMRAM] const int 
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;		None
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      void 
  1836 ;; Registers used:
  1837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1843 ;;      Params:         4       0       0       0       0       0       0
  1844 ;;      Locals:         0       0       0       0       0       0       0
  1845 ;;      Temps:          0       0       0       0       0       0       0
  1846 ;;      Totals:         4       0       0       0       0       0       0
  1847 ;;Total ram usage:        4 bytes
  1848 ;; Hardware stack levels used:    1
  1849 ;; Hardware stack levels required when called:    5
  1850 ;; This function calls:
  1851 ;;		_memset
  1852 ;; This function is called by:
  1853 ;;		_sendData
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           	psect	text5
  1858  00279C                     __ptext5:
  1859                           	opt stack 0
  1860  00279C                     _FastTransfer_buffer_flush:
  1861                           	opt stack 22
  1862                           
  1863                           ;FastTransfer.c: 262: _this->count = 0;
  1864                           
  1865                           ;incstack = 0
  1866  00279C  EE20 F0CC          	lfsr	2,204
  1867  0027A0  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  1868  0027A2  26D9               	addwf	fsr2l,f,c
  1869  0027A4  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  1870  0027A6  22DA               	addwfc	fsr2h,f,c
  1871  0027A8  0E00               	movlw	0
  1872  0027AA  6EDE               	movwf	postinc2,c
  1873  0027AC  0E00               	movlw	0
  1874  0027AE  6EDD               	movwf	postdec2,c
  1875                           
  1876                           ;FastTransfer.c: 263: _this->head = 0;
  1877  0027B0  EE20 F0C8          	lfsr	2,200
  1878  0027B4  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  1879  0027B6  26D9               	addwf	fsr2l,f,c
  1880  0027B8  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  1881  0027BA  22DA               	addwfc	fsr2h,f,c
  1882  0027BC  0E00               	movlw	0
  1883  0027BE  6EDE               	movwf	postinc2,c
  1884  0027C0  0E00               	movlw	0
  1885  0027C2  6EDD               	movwf	postdec2,c
  1886                           
  1887                           ;FastTransfer.c: 264: _this->tail = 0;
  1888  0027C4  EE20 F0CA          	lfsr	2,202
  1889  0027C8  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  1890  0027CA  26D9               	addwf	fsr2l,f,c
  1891  0027CC  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  1892  0027CE  22DA               	addwfc	fsr2h,f,c
  1893  0027D0  0E00               	movlw	0
  1894  0027D2  6EDE               	movwf	postinc2,c
  1895  0027D4  0E00               	movlw	0
  1896  0027D6  6EDD               	movwf	postdec2,c
  1897                           
  1898                           ;FastTransfer.c: 265: if (clearBuffer) {
  1899  0027D8  5025               	movf	FastTransfer_buffer_flush@clearBuffer,w,c
  1900  0027DA  1026               	iorwf	FastTransfer_buffer_flush@clearBuffer+1,w,c
  1901  0027DC  B4D8               	btfsc	status,2,c
  1902  0027DE  0012               	return	
  1903                           
  1904                           ;FastTransfer.c: 266: memset(_this->buf, 0, sizeof (_this->buf));
  1905  0027E0  C023  F01B         	movff	FastTransfer_buffer_flush@_this,memset@p1
  1906  0027E4  C024  F01C         	movff	FastTransfer_buffer_flush@_this+1,memset@p1+1
  1907  0027E8  0E00               	movlw	0
  1908  0027EA  6E1E               	movwf	memset@c+1,c
  1909  0027EC  0E00               	movlw	0
  1910  0027EE  6E1D               	movwf	memset@c,c
  1911  0027F0  0E00               	movlw	0
  1912  0027F2  6E20               	movwf	memset@n+1,c
  1913  0027F4  0EC8               	movlw	200
  1914  0027F6  6E1F               	movwf	memset@n,c
  1915  0027F8  EC05  F016         	call	_memset	;wreg free
  1916  0027FC  0012               	return	
  1917  0027FE                     __end_of_FastTransfer_buffer_flush:
  1918                           	opt stack 0
  1919                           tosu	equ	0xFFF
  1920                           tosh	equ	0xFFE
  1921                           tosl	equ	0xFFD
  1922                           pclath	equ	0xFFA
  1923                           tblptru	equ	0xFF8
  1924                           tblptrh	equ	0xFF7
  1925                           tblptrl	equ	0xFF6
  1926                           tablat	equ	0xFF5
  1927                           intcon	equ	0xFF2
  1928                           postinc0	equ	0xFEE
  1929                           wreg	equ	0xFE8
  1930                           indf2	equ	0xFDF
  1931                           postinc2	equ	0xFDE
  1932                           postdec2	equ	0xFDD
  1933                           plusw2	equ	0xFDB
  1934                           fsr2h	equ	0xFDA
  1935                           fsr2l	equ	0xFD9
  1936                           status	equ	0xFD8
  1937                           
  1938 ;; *************** function _buttonsCollector *****************
  1939 ;; Defined at:
  1940 ;;		line 52 in file "Communications.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;		None
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;  i               2   39[COMRAM] int 
  1945 ;;  sendVal         2   37[COMRAM] unsigned int 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  2   32[COMRAM] unsigned int 
  1948 ;; Registers used:
  1949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1955 ;;      Params:         2       0       0       0       0       0       0
  1956 ;;      Locals:         4       0       0       0       0       0       0
  1957 ;;      Temps:          3       0       0       0       0       0       0
  1958 ;;      Totals:         9       0       0       0       0       0       0
  1959 ;;Total ram usage:        9 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; Hardware stack levels required when called:    5
  1962 ;; This function calls:
  1963 ;;		_GetButtonState
  1964 ;; This function is called by:
  1965 ;;		_respondECU
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           	psect	text6
  1970  00272C                     __ptext6:
  1971                           	opt stack 0
  1972  00272C                     _buttonsCollector:
  1973                           	opt stack 23
  1974                           
  1975                           ;Communications.c: 53: unsigned int sendVal = 0;
  1976                           
  1977                           ;incstack = 0
  1978  00272C  0E00               	movlw	0
  1979  00272E  6E27               	movwf	buttonsCollector@sendVal+1,c
  1980  002730  0E00               	movlw	0
  1981  002732  6E26               	movwf	buttonsCollector@sendVal,c
  1982                           
  1983                           ;Communications.c: 54: int i = 0;
  1984  002734  0E00               	movlw	0
  1985  002736  6E29               	movwf	buttonsCollector@i+1,c
  1986  002738  0E00               	movlw	0
  1987  00273A  6E28               	movwf	buttonsCollector@i,c
  1988                           
  1989                           ;Communications.c: 55: for (i = 0; i < 8; i++) {
  1990  00273C  0E00               	movlw	0
  1991  00273E  6E29               	movwf	buttonsCollector@i+1,c
  1992  002740  0E00               	movlw	0
  1993  002742  6E28               	movwf	buttonsCollector@i,c
  1994  002744  BE29               	btfsc	buttonsCollector@i+1,7,c
  1995  002746  D006               	goto	l5584
  1996  002748  5029               	movf	buttonsCollector@i+1,w,c
  1997  00274A  E123               	bnz	l757
  1998  00274C  0E08               	movlw	8
  1999  00274E  5C28               	subwf	buttonsCollector@i,w,c
  2000  002750  B0D8               	btfsc	status,0,c
  2001  002752  D01F               	goto	l757
  2002  002754                     l5584:
  2003                           
  2004                           ;Communications.c: 56: sendVal = sendVal | ((GetButtonState(i)&0x01) << i);
  2005  002754  C028  F023         	movff	buttonsCollector@i,??_buttonsCollector
  2006  002758  C028  F01B         	movff	buttonsCollector@i,GetButtonState@btnnum
  2007  00275C  C029  F01C         	movff	buttonsCollector@i+1,GetButtonState@btnnum+1
  2008  002760  EC5A  F016         	call	_GetButtonState	;wreg free
  2009  002764  0B01               	andlw	1
  2010  002766  6E24               	movwf	(??_buttonsCollector+1)& (0+255),c
  2011  002768  6A25               	clrf	(??_buttonsCollector+2)& (0+255),c
  2012  00276A  2A23               	incf	??_buttonsCollector,f,c
  2013  00276C  D003               	goto	u5574
  2014  00276E                     u5575:
  2015  00276E  90D8               	bcf	status,0,c
  2016  002770  3624               	rlcf	??_buttonsCollector+1,f,c
  2017  002772  3625               	rlcf	??_buttonsCollector+2,f,c
  2018  002774                     u5574:
  2019  002774  2E23               	decfsz	??_buttonsCollector,f,c
  2020  002776  D7FB               	goto	u5575
  2021  002778  5026               	movf	buttonsCollector@sendVal,w,c
  2022  00277A  1024               	iorwf	??_buttonsCollector+1,w,c
  2023  00277C  6E26               	movwf	buttonsCollector@sendVal,c
  2024  00277E  5027               	movf	buttonsCollector@sendVal+1,w,c
  2025  002780  1025               	iorwf	??_buttonsCollector+2,w,c
  2026  002782  6E27               	movwf	buttonsCollector@sendVal+1,c
  2027  002784  4A28               	infsnz	buttonsCollector@i,f,c
  2028  002786  2A29               	incf	buttonsCollector@i+1,f,c
  2029  002788  BE29               	btfsc	buttonsCollector@i+1,7,c
  2030  00278A  D7E4               	goto	l5584
  2031  00278C  5029               	movf	buttonsCollector@i+1,w,c
  2032  00278E  E101               	bnz	u5580
  2033  002790  D7DD               	goto	L1
  2034  002792                     u5580:
  2035  002792                     l757:
  2036                           
  2037                           ;Communications.c: 57: }
  2038                           ;Communications.c: 58: return sendVal;
  2039  002792  C026  F021         	movff	buttonsCollector@sendVal,?_buttonsCollector
  2040  002796  C027  F022         	movff	buttonsCollector@sendVal+1,?_buttonsCollector+1
  2041  00279A  0012               	return		;funcret
  2042  00279C                     __end_of_buttonsCollector:
  2043                           	opt stack 0
  2044                           tosu	equ	0xFFF
  2045                           tosh	equ	0xFFE
  2046                           tosl	equ	0xFFD
  2047                           pclath	equ	0xFFA
  2048                           tblptru	equ	0xFF8
  2049                           tblptrh	equ	0xFF7
  2050                           tblptrl	equ	0xFF6
  2051                           tablat	equ	0xFF5
  2052                           intcon	equ	0xFF2
  2053                           postinc0	equ	0xFEE
  2054                           wreg	equ	0xFE8
  2055                           indf2	equ	0xFDF
  2056                           postinc2	equ	0xFDE
  2057                           postdec2	equ	0xFDD
  2058                           plusw2	equ	0xFDB
  2059                           fsr2h	equ	0xFDA
  2060                           fsr2l	equ	0xFD9
  2061                           status	equ	0xFD8
  2062                           
  2063 ;; *************** function _GetButtonState *****************
  2064 ;; Defined at:
  2065 ;;		line 184 in file "IO.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;  btnnum          2   26[COMRAM] int 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;		None
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  1    wreg      unsigned char 
  2072 ;; Registers used:
  2073 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2079 ;;      Params:         2       0       0       0       0       0       0
  2080 ;;      Locals:         0       0       0       0       0       0       0
  2081 ;;      Temps:          4       0       0       0       0       0       0
  2082 ;;      Totals:         6       0       0       0       0       0       0
  2083 ;;Total ram usage:        6 bytes
  2084 ;; Hardware stack levels used:    1
  2085 ;; Hardware stack levels required when called:    4
  2086 ;; This function calls:
  2087 ;;		Nothing
  2088 ;; This function is called by:
  2089 ;;		_buttonsCollector
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           	psect	text7
  2094  002CB4                     __ptext7:
  2095                           	opt stack 0
  2096  002CB4                     _GetButtonState:
  2097                           	opt stack 23
  2098                           
  2099                           ;IO.c: 185: return butnarray[btnnum - 1];
  2100                           
  2101                           ;incstack = 0
  2102  002CB4  0EFF               	movlw	255
  2103  002CB6  6E1D               	movwf	??_GetButtonState& (0+255),c
  2104  002CB8  0EFF               	movlw	255
  2105  002CBA  6E1E               	movwf	(??_GetButtonState+1)& (0+255),c
  2106  002CBC  C01B  F01F         	movff	GetButtonState@btnnum,??_GetButtonState+2
  2107  002CC0  C01C  F020         	movff	GetButtonState@btnnum+1,??_GetButtonState+3
  2108  002CC4  501D               	movf	??_GetButtonState,w,c
  2109  002CC6  261F               	addwf	??_GetButtonState+2,f,c
  2110  002CC8  501E               	movf	??_GetButtonState+1,w,c
  2111  002CCA  2220               	addwfc	??_GetButtonState+3,f,c
  2112  002CCC  0EB0               	movlw	low _butnarray
  2113  002CCE  241F               	addwf	??_GetButtonState+2,w,c
  2114  002CD0  6ED9               	movwf	fsr2l,c
  2115  002CD2  0E00               	movlw	high _butnarray
  2116  002CD4  2020               	addwfc	??_GetButtonState+3,w,c
  2117  002CD6  6EDA               	movwf	fsr2h,c
  2118  002CD8  50DF               	movf	indf2,w,c
  2119  002CDA  0012               	return	
  2120  002CDC                     __end_of_GetButtonState:
  2121                           	opt stack 0
  2122                           tosu	equ	0xFFF
  2123                           tosh	equ	0xFFE
  2124                           tosl	equ	0xFFD
  2125                           pclath	equ	0xFFA
  2126                           tblptru	equ	0xFF8
  2127                           tblptrh	equ	0xFF7
  2128                           tblptrl	equ	0xFF6
  2129                           tablat	equ	0xFF5
  2130                           intcon	equ	0xFF2
  2131                           postinc0	equ	0xFEE
  2132                           wreg	equ	0xFE8
  2133                           indf2	equ	0xFDF
  2134                           postinc2	equ	0xFDE
  2135                           postdec2	equ	0xFDD
  2136                           plusw2	equ	0xFDB
  2137                           fsr2h	equ	0xFDA
  2138                           fsr2l	equ	0xFD9
  2139                           status	equ	0xFD8
  2140                           
  2141 ;; *************** function _ToSend *****************
  2142 ;; Defined at:
  2143 ;;		line 216 in file "FastTransfer.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;  where           1    wreg     unsigned char 
  2146 ;;  what            2   41[COMRAM] unsigned int 
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;  where           1    0[BANK0 ] unsigned char 
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      void 
  2151 ;; Registers used:
  2152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2158 ;;      Params:         2       0       0       0       0       0       0
  2159 ;;      Locals:         0       1       0       0       0       0       0
  2160 ;;      Temps:          0       0       0       0       0       0       0
  2161 ;;      Totals:         2       1       0       0       0       0       0
  2162 ;;Total ram usage:        3 bytes
  2163 ;; Hardware stack levels used:    1
  2164 ;; Hardware stack levels required when called:    6
  2165 ;; This function calls:
  2166 ;;		_FastTransfer_buffer_put
  2167 ;; This function is called by:
  2168 ;;		_respondECU
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           	psect	text8
  2173  002D46                     __ptext8:
  2174                           	opt stack 0
  2175  002D46                     _ToSend:
  2176                           	opt stack 22
  2177                           
  2178                           ;incstack = 0
  2179                           ;ToSend@where stored from wreg
  2180  002D46  0100               	movlb	0	; () banked
  2181  002D48  6FEE               	movwf	ToSend@where& (0+255),b
  2182                           
  2183                           ;FastTransfer.c: 217: FastTransfer_buffer_put(&ring_buffer, where, what);
  2184  002D4A  0E00               	movlw	low _ring_buffer
  2185  002D4C  6E21               	movwf	FastTransfer_buffer_put@_this,c
  2186  002D4E  0E02               	movlw	high _ring_buffer
  2187  002D50  6E22               	movwf	FastTransfer_buffer_put@_this+1,c
  2188  002D52  C0EE  F023         	movff	ToSend@where,FastTransfer_buffer_put@towhere
  2189  002D56  C02A  F024         	movff	ToSend@what,FastTransfer_buffer_put@towhat
  2190  002D5A  C02B  F025         	movff	ToSend@what+1,FastTransfer_buffer_put@towhat+1
  2191  002D5E  EC56  F008         	call	_FastTransfer_buffer_put	;wreg free
  2192  002D62  0012               	return		;funcret
  2193  002D64                     __end_of_ToSend:
  2194                           	opt stack 0
  2195                           tosu	equ	0xFFF
  2196                           tosh	equ	0xFFE
  2197                           tosl	equ	0xFFD
  2198                           pclath	equ	0xFFA
  2199                           tblptru	equ	0xFF8
  2200                           tblptrh	equ	0xFF7
  2201                           tblptrl	equ	0xFF6
  2202                           tablat	equ	0xFF5
  2203                           intcon	equ	0xFF2
  2204                           postinc0	equ	0xFEE
  2205                           wreg	equ	0xFE8
  2206                           indf2	equ	0xFDF
  2207                           postinc2	equ	0xFDE
  2208                           postdec2	equ	0xFDD
  2209                           plusw2	equ	0xFDB
  2210                           fsr2h	equ	0xFDA
  2211                           fsr2l	equ	0xFD9
  2212                           status	equ	0xFD8
  2213                           
  2214 ;; *************** function _FastTransfer_buffer_put *****************
  2215 ;; Defined at:
  2216 ;;		line 223 in file "FastTransfer.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;  _this           2   32[COMRAM] PTR struct ringBufS
  2219 ;;		 -> ring_buffer(206), 
  2220 ;;  towhere         1   34[COMRAM] unsigned char 
  2221 ;;  towhat          2   35[COMRAM] unsigned int 
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;		None
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  1    wreg      void 
  2226 ;; Registers used:
  2227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2233 ;;      Params:         5       0       0       0       0       0       0
  2234 ;;      Locals:         0       0       0       0       0       0       0
  2235 ;;      Temps:          2       0       0       0       0       0       0
  2236 ;;      Totals:         7       0       0       0       0       0       0
  2237 ;;Total ram usage:        7 bytes
  2238 ;; Hardware stack levels used:    1
  2239 ;; Hardware stack levels required when called:    5
  2240 ;; This function calls:
  2241 ;;		_FastTransfer_buffer_modulo_inc
  2242 ;; This function is called by:
  2243 ;;		_ToSend
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           	psect	text9
  2248  0010AC                     __ptext9:
  2249                           	opt stack 0
  2250  0010AC                     _FastTransfer_buffer_put:
  2251                           	opt stack 22
  2252                           
  2253                           ;FastTransfer.c: 225: group.integer = towhat;
  2254                           
  2255                           ;incstack = 0
  2256  0010AC  C024  F02C         	movff	FastTransfer_buffer_put@towhat,_group
  2257  0010B0  C025  F02D         	movff	FastTransfer_buffer_put@towhat+1,_group+1
  2258                           
  2259                           ;FastTransfer.c: 227: if (_this->count < (200 - 3)) {
  2260  0010B4  EE20 F0CC          	lfsr	2,204
  2261  0010B8  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2262  0010BA  26D9               	addwf	fsr2l,f,c
  2263  0010BC  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2264  0010BE  22DA               	addwfc	fsr2h,f,c
  2265  0010C0  0E01               	movlw	1
  2266  0010C2  BEDB               	btfsc	plusw2,7,c
  2267  0010C4  D007               	goto	l5346
  2268  0010C6  0E01               	movlw	1
  2269  0010C8  50DB               	movf	plusw2,w,c
  2270  0010CA  E103               	bnz	u5291
  2271  0010CC  0EC5               	movlw	197
  2272  0010CE  5CDE               	subwf	postinc2,w,c
  2273  0010D0  B0D8               	btfsc	status,0,c
  2274  0010D2                     u5291:
  2275  0010D2  0012               	return	
  2276  0010D4                     l5346:
  2277                           
  2278                           ;FastTransfer.c: 228: _this->buf[_this->head] = towhere;
  2279  0010D4  EE20 F0C8          	lfsr	2,200
  2280  0010D8  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2281  0010DA  26D9               	addwf	fsr2l,f,c
  2282  0010DC  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2283  0010DE  22DA               	addwfc	fsr2h,f,c
  2284  0010E0  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  2285  0010E4  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  2286  0010E8  5026               	movf	??_FastTransfer_buffer_put,w,c
  2287  0010EA  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  2288  0010EC  6ED9               	movwf	fsr2l,c
  2289  0010EE  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  2290  0010F0  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  2291  0010F2  6EDA               	movwf	fsr2h,c
  2292  0010F4  C023  FFDF         	movff	FastTransfer_buffer_put@towhere,indf2
  2293                           
  2294                           ;FastTransfer.c: 229: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  2295  0010F8  EE20 F0C8          	lfsr	2,200
  2296  0010FC  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2297  0010FE  26D9               	addwf	fsr2l,f,c
  2298  001100  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2299  001102  22DA               	addwfc	fsr2h,f,c
  2300  001104  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  2301  001108  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  2302  00110C  0E00               	movlw	0
  2303  00110E  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  2304  001110  0EC8               	movlw	200
  2305  001112  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  2306  001114  EC1B  F016         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  2307  001118  EE20 F0C8          	lfsr	2,200
  2308  00111C  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2309  00111E  26D9               	addwf	fsr2l,f,c
  2310  001120  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2311  001122  22DA               	addwfc	fsr2h,f,c
  2312  001124  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  2313  001128  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  2314                           
  2315                           ;FastTransfer.c: 230: ++_this->count;
  2316  00112C  EE20 F0CC          	lfsr	2,204
  2317  001130  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2318  001132  26D9               	addwf	fsr2l,f,c
  2319  001134  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2320  001136  22DA               	addwfc	fsr2h,f,c
  2321  001138  2ADE               	incf	postinc2,f,c
  2322  00113A  0E00               	movlw	0
  2323  00113C  22DD               	addwfc	postdec2,f,c
  2324                           
  2325                           ;FastTransfer.c: 231: _this->buf[_this->head] = group.parts[0];
  2326  00113E  EE20 F0C8          	lfsr	2,200
  2327  001142  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2328  001144  26D9               	addwf	fsr2l,f,c
  2329  001146  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2330  001148  22DA               	addwfc	fsr2h,f,c
  2331  00114A  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  2332  00114E  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  2333  001152  5026               	movf	??_FastTransfer_buffer_put,w,c
  2334  001154  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  2335  001156  6ED9               	movwf	fsr2l,c
  2336  001158  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  2337  00115A  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  2338  00115C  6EDA               	movwf	fsr2h,c
  2339  00115E  C02C  FFDF         	movff	_group,indf2
  2340                           
  2341                           ;FastTransfer.c: 232: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  2342  001162  EE20 F0C8          	lfsr	2,200
  2343  001166  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2344  001168  26D9               	addwf	fsr2l,f,c
  2345  00116A  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2346  00116C  22DA               	addwfc	fsr2h,f,c
  2347  00116E  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  2348  001172  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  2349  001176  0E00               	movlw	0
  2350  001178  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  2351  00117A  0EC8               	movlw	200
  2352  00117C  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  2353  00117E  EC1B  F016         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  2354  001182  EE20 F0C8          	lfsr	2,200
  2355  001186  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2356  001188  26D9               	addwf	fsr2l,f,c
  2357  00118A  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2358  00118C  22DA               	addwfc	fsr2h,f,c
  2359  00118E  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  2360  001192  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  2361                           
  2362                           ;FastTransfer.c: 233: ++_this->count;
  2363  001196  EE20 F0CC          	lfsr	2,204
  2364  00119A  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2365  00119C  26D9               	addwf	fsr2l,f,c
  2366  00119E  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2367  0011A0  22DA               	addwfc	fsr2h,f,c
  2368  0011A2  2ADE               	incf	postinc2,f,c
  2369  0011A4  0E00               	movlw	0
  2370  0011A6  22DD               	addwfc	postdec2,f,c
  2371                           
  2372                           ;FastTransfer.c: 234: _this->buf[_this->head] = group.parts[1];
  2373  0011A8  EE20 F0C8          	lfsr	2,200
  2374  0011AC  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2375  0011AE  26D9               	addwf	fsr2l,f,c
  2376  0011B0  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2377  0011B2  22DA               	addwfc	fsr2h,f,c
  2378  0011B4  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  2379  0011B8  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  2380  0011BC  5026               	movf	??_FastTransfer_buffer_put,w,c
  2381  0011BE  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  2382  0011C0  6ED9               	movwf	fsr2l,c
  2383  0011C2  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  2384  0011C4  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  2385  0011C6  6EDA               	movwf	fsr2h,c
  2386  0011C8  C02D  FFDF         	movff	_group+1,indf2
  2387                           
  2388                           ;FastTransfer.c: 235: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  2389  0011CC  EE20 F0C8          	lfsr	2,200
  2390  0011D0  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2391  0011D2  26D9               	addwf	fsr2l,f,c
  2392  0011D4  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2393  0011D6  22DA               	addwfc	fsr2h,f,c
  2394  0011D8  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  2395  0011DC  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  2396  0011E0  0E00               	movlw	0
  2397  0011E2  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  2398  0011E4  0EC8               	movlw	200
  2399  0011E6  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  2400  0011E8  EC1B  F016         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  2401  0011EC  EE20 F0C8          	lfsr	2,200
  2402  0011F0  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2403  0011F2  26D9               	addwf	fsr2l,f,c
  2404  0011F4  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2405  0011F6  22DA               	addwfc	fsr2h,f,c
  2406  0011F8  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  2407  0011FC  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  2408                           
  2409                           ;FastTransfer.c: 236: ++_this->count;
  2410  001200  EE20 F0CC          	lfsr	2,204
  2411  001204  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2412  001206  26D9               	addwf	fsr2l,f,c
  2413  001208  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2414  00120A  22DA               	addwfc	fsr2h,f,c
  2415  00120C  2ADE               	incf	postinc2,f,c
  2416  00120E  0E00               	movlw	0
  2417  001210  22DD               	addwfc	postdec2,f,c
  2418  001212  0012               	return	
  2419  001214                     __end_of_FastTransfer_buffer_put:
  2420                           	opt stack 0
  2421                           tosu	equ	0xFFF
  2422                           tosh	equ	0xFFE
  2423                           tosl	equ	0xFFD
  2424                           pclath	equ	0xFFA
  2425                           tblptru	equ	0xFF8
  2426                           tblptrh	equ	0xFF7
  2427                           tblptrl	equ	0xFF6
  2428                           tablat	equ	0xFF5
  2429                           intcon	equ	0xFF2
  2430                           postinc0	equ	0xFEE
  2431                           wreg	equ	0xFE8
  2432                           indf2	equ	0xFDF
  2433                           postinc2	equ	0xFDE
  2434                           postdec2	equ	0xFDD
  2435                           plusw2	equ	0xFDB
  2436                           fsr2h	equ	0xFDA
  2437                           fsr2l	equ	0xFD9
  2438                           status	equ	0xFD8
  2439                           
  2440 ;; *************** function _FastTransfer_buffer_modulo_inc *****************
  2441 ;; Defined at:
  2442 ;;		line 273 in file "FastTransfer.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  value           2   26[COMRAM] const unsigned int 
  2445 ;;  modulus         2   28[COMRAM] const unsigned int 
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  my_value        2   30[COMRAM] unsigned int 
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  2   26[COMRAM] unsigned int 
  2450 ;; Registers used:
  2451 ;;		wreg, status,2, status,0
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2457 ;;      Params:         4       0       0       0       0       0       0
  2458 ;;      Locals:         2       0       0       0       0       0       0
  2459 ;;      Temps:          0       0       0       0       0       0       0
  2460 ;;      Totals:         6       0       0       0       0       0       0
  2461 ;;Total ram usage:        6 bytes
  2462 ;; Hardware stack levels used:    1
  2463 ;; Hardware stack levels required when called:    4
  2464 ;; This function calls:
  2465 ;;		Nothing
  2466 ;; This function is called by:
  2467 ;;		_FastTransfer_buffer_put
  2468 ;;		_FastTransfer_buffer_get
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           	psect	text10
  2473  002C36                     __ptext10:
  2474                           	opt stack 0
  2475  002C36                     _FastTransfer_buffer_modulo_inc:
  2476                           	opt stack 22
  2477                           
  2478                           ;FastTransfer.c: 274: unsigned int my_value = value + 1;
  2479                           
  2480                           ;incstack = 0
  2481  002C36  0E01               	movlw	1
  2482  002C38  241B               	addwf	FastTransfer_buffer_modulo_inc@value,w,c
  2483  002C3A  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  2484  002C3C  0E00               	movlw	0
  2485  002C3E  201C               	addwfc	FastTransfer_buffer_modulo_inc@value+1,w,c
  2486  002C40  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  2487                           
  2488                           ;FastTransfer.c: 275: if (my_value >= modulus) {
  2489  002C42  501D               	movf	FastTransfer_buffer_modulo_inc@modulus,w,c
  2490  002C44  5C1F               	subwf	FastTransfer_buffer_modulo_inc@my_value,w,c
  2491  002C46  501E               	movf	FastTransfer_buffer_modulo_inc@modulus+1,w,c
  2492  002C48  5820               	subwfb	FastTransfer_buffer_modulo_inc@my_value+1,w,c
  2493  002C4A  A0D8               	btfss	status,0,c
  2494  002C4C  D004               	goto	l5172
  2495                           
  2496                           ;FastTransfer.c: 276: my_value = 0;
  2497  002C4E  0E00               	movlw	0
  2498  002C50  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  2499  002C52  0E00               	movlw	0
  2500  002C54  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  2501  002C56                     l5172:
  2502                           
  2503                           ;FastTransfer.c: 277: }
  2504                           ;FastTransfer.c: 278: return (my_value);
  2505  002C56  C01F  F01B         	movff	FastTransfer_buffer_modulo_inc@my_value,?_FastTransfer_buffer_modulo_inc
  2506  002C5A  C020  F01C         	movff	FastTransfer_buffer_modulo_inc@my_value+1,?_FastTransfer_buffer_modulo_inc+1
  2507  002C5E  0012               	return	
  2508  002C60                     __end_of_FastTransfer_buffer_modulo_inc:
  2509                           	opt stack 0
  2510                           tosu	equ	0xFFF
  2511                           tosh	equ	0xFFE
  2512                           tosl	equ	0xFFD
  2513                           pclath	equ	0xFFA
  2514                           tblptru	equ	0xFF8
  2515                           tblptrh	equ	0xFF7
  2516                           tblptrl	equ	0xFF6
  2517                           tablat	equ	0xFF5
  2518                           intcon	equ	0xFF2
  2519                           postinc0	equ	0xFEE
  2520                           wreg	equ	0xFE8
  2521                           indf2	equ	0xFDF
  2522                           postinc2	equ	0xFDE
  2523                           postdec2	equ	0xFDD
  2524                           plusw2	equ	0xFDB
  2525                           fsr2h	equ	0xFDA
  2526                           fsr2l	equ	0xFD9
  2527                           status	equ	0xFD8
  2528                           
  2529 ;; *************** function _Delay *****************
  2530 ;; Defined at:
  2531 ;;		line 118 in file "main.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;  wait            2   26[COMRAM] int 
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;  x               2   29[COMRAM] int 
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg, status,2, status,0
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2545 ;;      Params:         2       0       0       0       0       0       0
  2546 ;;      Locals:         2       0       0       0       0       0       0
  2547 ;;      Temps:          1       0       0       0       0       0       0
  2548 ;;      Totals:         5       0       0       0       0       0       0
  2549 ;;Total ram usage:        5 bytes
  2550 ;; Hardware stack levels used:    1
  2551 ;; Hardware stack levels required when called:    4
  2552 ;; This function calls:
  2553 ;;		Nothing
  2554 ;; This function is called by:
  2555 ;;		_respondECU
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559                           	psect	text11
  2560  002B76                     __ptext11:
  2561                           	opt stack 0
  2562  002B76                     _Delay:
  2563                           	opt stack 24
  2564                           
  2565                           ;main.c: 119: int x;
  2566                           ;main.c: 120: for (x = 0; x < wait; x++) {
  2567                           
  2568                           ;incstack = 0
  2569  002B76  0E00               	movlw	0
  2570  002B78  6E1F               	movwf	Delay@x+1,c
  2571  002B7A  0E00               	movlw	0
  2572  002B7C  6E1E               	movwf	Delay@x,c
  2573  002B7E  D00A               	goto	l426
  2574  002B80                     l5430:
  2575                           
  2576                           ;main.c: 121: _delay((unsigned long)((1)*(16000000/4000.0)));
  2577  002B80  0E06               	movlw	6
  2578  002B82  6E1D               	movwf	??_Delay& (0+255),c
  2579  002B84  0E30               	movlw	48
  2580  002B86                     u7477:
  2581  002B86  2EE8               	decfsz	wreg,f,c
  2582  002B88  D7FE               	goto	u7477
  2583  002B8A  2E1D               	decfsz	??_Delay& (0+255),f,c
  2584  002B8C  D7FC               	goto	u7477
  2585  002B8E  D000               	nop2	
  2586  002B90  4A1E               	infsnz	Delay@x,f,c
  2587  002B92  2A1F               	incf	Delay@x+1,f,c
  2588  002B94                     l426:
  2589  002B94  501B               	movf	Delay@wait,w,c
  2590  002B96  5C1E               	subwf	Delay@x,w,c
  2591  002B98  501F               	movf	Delay@x+1,w,c
  2592  002B9A  0A80               	xorlw	128
  2593  002B9C  6E1D               	movwf	??_Delay& (0+255),c
  2594  002B9E  501C               	movf	Delay@wait+1,w,c
  2595  002BA0  0A80               	xorlw	128
  2596  002BA2  581D               	subwfb	??_Delay& (0+255),w,c
  2597  002BA4  B0D8               	btfsc	status,0,c
  2598  002BA6  0012               	return	
  2599  002BA8  D7EB               	goto	l5430
  2600  002BAA                     __end_of_Delay:
  2601                           	opt stack 0
  2602                           tosu	equ	0xFFF
  2603                           tosh	equ	0xFFE
  2604                           tosl	equ	0xFFD
  2605                           pclath	equ	0xFFA
  2606                           tblptru	equ	0xFF8
  2607                           tblptrh	equ	0xFF7
  2608                           tblptrl	equ	0xFF6
  2609                           tablat	equ	0xFF5
  2610                           intcon	equ	0xFF2
  2611                           postinc0	equ	0xFEE
  2612                           wreg	equ	0xFE8
  2613                           indf2	equ	0xFDF
  2614                           postinc2	equ	0xFDE
  2615                           postdec2	equ	0xFDD
  2616                           plusw2	equ	0xFDB
  2617                           fsr2h	equ	0xFDA
  2618                           fsr2l	equ	0xFD9
  2619                           status	equ	0xFD8
  2620                           
  2621 ;; *************** function _receiveData *****************
  2622 ;; Defined at:
  2623 ;;		line 82 in file "FastTransfer.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;		None
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;  holder          3    3[BANK1 ] unsigned char [3]
  2628 ;;  crcHolder       1    7[BANK1 ] unsigned char 
  2629 ;;  holder          3    0[BANK1 ] unsigned char [3]
  2630 ;;  crcHolder       1    6[BANK1 ] unsigned char 
  2631 ;;  u               2    8[BANK1 ] int 
  2632 ;;  r               2   10[BANK1 ] int 
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  1    wreg      unsigned char 
  2635 ;; Registers used:
  2636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2642 ;;      Params:         0       0       0       0       0       0       0
  2643 ;;      Locals:         0       0      12       0       0       0       0
  2644 ;;      Temps:          0       6       0       0       0       0       0
  2645 ;;      Totals:         0       6      12       0       0       0       0
  2646 ;;Total ram usage:       18 bytes
  2647 ;; Hardware stack levels used:    1
  2648 ;; Hardware stack levels required when called:    8
  2649 ;; This function calls:
  2650 ;;		Absolute function
  2651 ;;		_CRC8
  2652 ;;		_CRCcheck
  2653 ;;		_Receive_available
  2654 ;;		_Receive_get
  2655 ;;		_Receive_peek
  2656 ;;		_Send_put
  2657 ;; This function is called by:
  2658 ;;		_updateComms
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           	psect	text12
  2663  0000D4                     __ptext12:
  2664                           	opt stack 0
  2665  0000D4                     _receiveData:
  2666                           	opt stack 21
  2667                           
  2668                           ;FastTransfer.c: 85: if (rx_len == 0) {
  2669                           
  2670                           ;incstack = 0
  2671  0000D4  503F               	movf	_rx_len,w,c
  2672  0000D6  A4D8               	btfss	status,2,c
  2673  0000D8  D0AC               	goto	l5924
  2674                           
  2675                           ;FastTransfer.c: 87: if (serial_available() > 4) {
  2676  0000DA  D801               	call	u6148
  2677  0000DC  D00A               	goto	u6149
  2678  0000DE                     u6148:
  2679  0000DE  0005               	push	
  2680  0000E0  6EFA               	movwf	pclath,c
  2681  0000E2  502E               	movf	_serial_available,w,c
  2682  0000E4  6EFD               	movwf	tosl,c
  2683  0000E6  502F               	movf	_serial_available+1,w,c
  2684  0000E8  6EFE               	movwf	tosh,c
  2685  0000EA  50F8               	movf	tblptru,w,c
  2686  0000EC  6EFF               	movwf	tosu,c
  2687  0000EE  50FA               	movf	pclath,w,c
  2688  0000F0  0012               	return		;indir
  2689  0000F2                     u6149:
  2690  0000F2  BE1E               	btfsc	?_Receive_available+1,7,c
  2691  0000F4  D09E               	goto	l5924
  2692  0000F6  501E               	movf	?_Receive_available+1,w,c
  2693  0000F8  E11E               	bnz	l5900
  2694  0000FA  0E05               	movlw	5
  2695  0000FC  5C1D               	subwf	?_Receive_available,w,c
  2696  0000FE  B0D8               	btfsc	status,0,c
  2697  000100  D01A               	goto	l5900
  2698  000102  D097               	goto	l5924
  2699  000104                     l5892:
  2700                           
  2701                           ;FastTransfer.c: 93: alignErrorCounter++;
  2702  000104  0100               	movlb	0	; () banked
  2703  000106  4BC5               	infsnz	_alignErrorCounter& (0+255),f,b
  2704  000108  2BC6               	incf	(_alignErrorCounter+1)& (0+255),f,b
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;FastTransfer.c: 94: if (serial_available() < 5)
  2708  00010A  D801               	call	u6168
  2709  00010C  D00A               	goto	u6169
  2710  00010E                     u6168:
  2711  00010E  0005               	push	
  2712  000110  6EFA               	movwf	pclath,c
  2713  000112  502E               	movf	_serial_available,w,c
  2714  000114  6EFD               	movwf	tosl,c
  2715  000116  502F               	movf	_serial_available+1,w,c
  2716  000118  6EFE               	movwf	tosh,c
  2717  00011A  50F8               	movf	tblptru,w,c
  2718  00011C  6EFF               	movwf	tosu,c
  2719  00011E  50FA               	movf	pclath,w,c
  2720  000120  0012               	return		;indir
  2721  000122                     u6169:
  2722  000122  BE1E               	btfsc	?_Receive_available+1,7,c
  2723  000124  D006               	goto	l5896
  2724  000126  501E               	movf	?_Receive_available+1,w,c
  2725  000128  E106               	bnz	l5900
  2726  00012A  0E05               	movlw	5
  2727  00012C  5C1D               	subwf	?_Receive_available,w,c
  2728  00012E  B0D8               	btfsc	status,0,c
  2729  000130  D002               	goto	l5900
  2730  000132                     l5896:
  2731                           
  2732                           ;FastTransfer.c: 95: return 0;
  2733  000132  0E00               	movlw	0
  2734  000134  0012               	return	
  2735  000136                     l5900:
  2736  000136  D801               	call	u6188
  2737  000138  D00A               	goto	u6189
  2738  00013A                     u6188:
  2739  00013A  0005               	push	
  2740  00013C  6EFA               	movwf	pclath,c
  2741  00013E  5030               	movf	_serial_read,w,c
  2742  000140  6EFD               	movwf	tosl,c
  2743  000142  5031               	movf	_serial_read+1,w,c
  2744  000144  6EFE               	movwf	tosh,c
  2745  000146  50F8               	movf	tblptru,w,c
  2746  000148  6EFF               	movwf	tosu,c
  2747  00014A  50FA               	movf	pclath,w,c
  2748  00014C  0012               	return		;indir
  2749  00014E                     u6189:
  2750  00014E  0A06               	xorlw	6
  2751  000150  A4D8               	btfss	status,2,c
  2752  000152  D7D8               	goto	l5892
  2753                           
  2754                           ;FastTransfer.c: 96: }
  2755                           ;FastTransfer.c: 97: if (serial_read() == 0x85) {
  2756  000154  D801               	call	u6208
  2757  000156  D00A               	goto	u6209
  2758  000158                     u6208:
  2759  000158  0005               	push	
  2760  00015A  6EFA               	movwf	pclath,c
  2761  00015C  5030               	movf	_serial_read,w,c
  2762  00015E  6EFD               	movwf	tosl,c
  2763  000160  5031               	movf	_serial_read+1,w,c
  2764  000162  6EFE               	movwf	tosh,c
  2765  000164  50F8               	movf	tblptru,w,c
  2766  000166  6EFF               	movwf	tosu,c
  2767  000168  50FA               	movf	pclath,w,c
  2768  00016A  0012               	return		;indir
  2769  00016C                     u6209:
  2770  00016C  0A85               	xorlw	133
  2771  00016E  A4D8               	btfss	status,2,c
  2772  000170  D060               	goto	l5924
  2773                           
  2774                           ;FastTransfer.c: 98: rx_address = serial_read();
  2775  000172  D801               	call	u6228
  2776  000174  D00A               	goto	u6229
  2777  000176                     u6228:
  2778  000176  0005               	push	
  2779  000178  6EFA               	movwf	pclath,c
  2780  00017A  5030               	movf	_serial_read,w,c
  2781  00017C  6EFD               	movwf	tosl,c
  2782  00017E  5031               	movf	_serial_read+1,w,c
  2783  000180  6EFE               	movwf	tosh,c
  2784  000182  50F8               	movf	tblptru,w,c
  2785  000184  6EFF               	movwf	tosu,c
  2786  000186  50FA               	movf	pclath,w,c
  2787  000188  0012               	return		;indir
  2788  00018A                     u6229:
  2789  00018A  6E3D               	movwf	_rx_address,c
  2790                           
  2791                           ;FastTransfer.c: 99: returnAddress = serial_read();
  2792  00018C  D801               	call	u6238
  2793  00018E  D00A               	goto	u6239
  2794  000190                     u6238:
  2795  000190  0005               	push	
  2796  000192  6EFA               	movwf	pclath,c
  2797  000194  5030               	movf	_serial_read,w,c
  2798  000196  6EFD               	movwf	tosl,c
  2799  000198  5031               	movf	_serial_read+1,w,c
  2800  00019A  6EFE               	movwf	tosh,c
  2801  00019C  50F8               	movf	tblptru,w,c
  2802  00019E  6EFF               	movwf	tosu,c
  2803  0001A0  50FA               	movf	pclath,w,c
  2804  0001A2  0012               	return		;indir
  2805  0001A4                     u6239:
  2806  0001A4  6E3C               	movwf	_returnAddress,c
  2807                           
  2808                           ;FastTransfer.c: 100: rx_len = serial_read();
  2809  0001A6  D801               	call	u6248
  2810  0001A8  D00A               	goto	u6249
  2811  0001AA                     u6248:
  2812  0001AA  0005               	push	
  2813  0001AC  6EFA               	movwf	pclath,c
  2814  0001AE  5030               	movf	_serial_read,w,c
  2815  0001B0  6EFD               	movwf	tosl,c
  2816  0001B2  5031               	movf	_serial_read+1,w,c
  2817  0001B4  6EFE               	movwf	tosh,c
  2818  0001B6  50F8               	movf	tblptru,w,c
  2819  0001B8  6EFF               	movwf	tosu,c
  2820  0001BA  50FA               	movf	pclath,w,c
  2821  0001BC  0012               	return		;indir
  2822  0001BE                     u6249:
  2823  0001BE  6E3F               	movwf	_rx_len,c
  2824                           
  2825                           ;FastTransfer.c: 102: if (rx_address != moduleAddress) {
  2826  0001C0  503B               	movf	_moduleAddress,w,c
  2827  0001C2  183D               	xorwf	_rx_address,w,c
  2828  0001C4  B4D8               	btfsc	status,2,c
  2829  0001C6  D035               	goto	l5924
  2830                           
  2831                           ;FastTransfer.c: 103: addressErrorCounter++;
  2832  0001C8  0100               	movlb	0	; () banked
  2833  0001CA  4BC3               	infsnz	_addressErrorCounter& (0+255),f,b
  2834  0001CC  2BC4               	incf	(_addressErrorCounter+1)& (0+255),f,b
  2835                           
  2836                           ; BSR set to: 0
  2837                           ;FastTransfer.c: 106: int u;
  2838                           ;FastTransfer.c: 107: for (u = 0; u <= (rx_len + 1); u++) {
  2839  0001CE  0E00               	movlw	0
  2840  0001D0  0101               	movlb	1	; () banked
  2841  0001D2  6F42               	movwf	(receiveData@u+1)& (0+255),b
  2842  0001D4  0E00               	movlw	0
  2843  0001D6  6F41               	movwf	receiveData@u& (0+255),b
  2844  0001D8  D00F               	goto	l5916
  2845  0001DA                     l5912:
  2846                           
  2847                           ;FastTransfer.c: 108: serial_read();
  2848  0001DA  D801               	call	u6268
  2849  0001DC  D00A               	goto	l5914
  2850  0001DE                     u6268:
  2851  0001DE  0005               	push	
  2852  0001E0  6EFA               	movwf	pclath,c
  2853  0001E2  5030               	movf	_serial_read,w,c
  2854  0001E4  6EFD               	movwf	tosl,c
  2855  0001E6  5031               	movf	_serial_read+1,w,c
  2856  0001E8  6EFE               	movwf	tosh,c
  2857  0001EA  50F8               	movf	tblptru,w,c
  2858  0001EC  6EFF               	movwf	tosu,c
  2859  0001EE  50FA               	movf	pclath,w,c
  2860  0001F0  0012               	return		;indir
  2861  0001F2                     l5914:
  2862  0001F2  0101               	movlb	1	; () banked
  2863  0001F4  4B41               	infsnz	receiveData@u& (0+255),f,b
  2864  0001F6  2B42               	incf	(receiveData@u+1)& (0+255),f,b
  2865  0001F8                     l5916:
  2866                           
  2867                           ; BSR set to: 1
  2868  0001F8  503F               	movf	_rx_len,w,c
  2869  0001FA  0100               	movlb	0	; () banked
  2870  0001FC  6FF5               	movwf	??_receiveData& (0+255),b
  2871  0001FE  6BF6               	clrf	(??_receiveData+1)& (0+255),b
  2872  000200  0E01               	movlw	1
  2873  000202  0100               	movlb	0	; () banked
  2874  000204  27F5               	addwf	??_receiveData& (0+255),f,b
  2875  000206  0E00               	movlw	0
  2876  000208  23F6               	addwfc	(??_receiveData+1)& (0+255),f,b
  2877  00020A  0101               	movlb	1	; () banked
  2878  00020C  5141               	movf	receiveData@u& (0+255),w,b
  2879  00020E  0100               	movlb	0	; () banked
  2880  000210  5DF5               	subwf	??_receiveData& (0+255),w,b
  2881  000212  0100               	movlb	0	; () banked
  2882  000214  51F6               	movf	(??_receiveData+1)& (0+255),w,b
  2883  000216  0A80               	xorlw	128
  2884  000218  0100               	movlb	0	; () banked
  2885  00021A  6FF7               	movwf	(??_receiveData+2)& (0+255),b
  2886  00021C  0101               	movlb	1	; () banked
  2887  00021E  5142               	movf	(receiveData@u+1)& (0+255),w,b
  2888  000220  0A80               	xorlw	128
  2889  000222  0100               	movlb	0	; () banked
  2890  000224  59F7               	subwfb	(??_receiveData+2)& (0+255),w,b
  2891  000226  B0D8               	btfsc	status,0,c
  2892  000228  D7D8               	goto	l5912
  2893                           
  2894                           ; BSR set to: 0
  2895                           ;FastTransfer.c: 109: }
  2896                           ;FastTransfer.c: 110: rx_len = 0;
  2897                           
  2898                           ; BSR set to: 0
  2899  00022A  0E00               	movlw	0
  2900  00022C  6E3F               	movwf	_rx_len,c
  2901                           
  2902                           ; BSR set to: 0
  2903                           ;FastTransfer.c: 111: return 0;
  2904  00022E  0E00               	movlw	0
  2905                           
  2906                           ; BSR set to: 0
  2907  000230  0012               	return	
  2908  000232                     l5924:
  2909                           
  2910                           ;FastTransfer.c: 112: }
  2911                           ;FastTransfer.c: 114: }
  2912                           ;FastTransfer.c: 115: }
  2913                           ;FastTransfer.c: 116: }
  2914                           ;FastTransfer.c: 119: if (rx_len != 0) {
  2915  000232  503F               	movf	_rx_len,w,c
  2916  000234  B4D8               	btfsc	status,2,c
  2917  000236  D2A6               	goto	l6048
  2918                           
  2919                           ;FastTransfer.c: 122: if (rx_array_inx == 0) {
  2920  000238  503E               	movf	_rx_array_inx,w,c
  2921  00023A  A4D8               	btfss	status,2,c
  2922  00023C  D044               	goto	l5948
  2923  00023E                     l5930:
  2924  00023E  D801               	call	u6308
  2925  000240  D00A               	goto	u6309
  2926  000242                     u6308:
  2927  000242  0005               	push	
  2928  000244  6EFA               	movwf	pclath,c
  2929  000246  502E               	movf	_serial_available,w,c
  2930  000248  6EFD               	movwf	tosl,c
  2931  00024A  502F               	movf	_serial_available+1,w,c
  2932  00024C  6EFE               	movwf	tosh,c
  2933  00024E  50F8               	movf	tblptru,w,c
  2934  000250  6EFF               	movwf	tosu,c
  2935  000252  50FA               	movf	pclath,w,c
  2936  000254  0012               	return		;indir
  2937  000256                     u6309:
  2938  000256  BE1E               	btfsc	?_Receive_available+1,7,c
  2939  000258  D7F2               	goto	l5930
  2940  00025A  501E               	movf	?_Receive_available+1,w,c
  2941  00025C  E103               	bnz	l5932
  2942  00025E  041D               	decf	?_Receive_available,w,c
  2943  000260  A0D8               	btfss	status,0,c
  2944  000262  D7ED               	goto	l5930
  2945  000264                     l5932:
  2946                           
  2947                           ;FastTransfer.c: 124: if (255 == serial_peek()) {
  2948  000264  D801               	call	u6328
  2949  000266  D00B               	goto	u6329
  2950  000268                     u6328:
  2951  000268  0005               	push	
  2952  00026A  0100               	movlb	0	; () banked
  2953  00026C  6EFA               	movwf	pclath,c
  2954  00026E  51D7               	movf	_serial_peek& (0+255),w,b
  2955  000270  6EFD               	movwf	tosl,c
  2956  000272  51D8               	movf	(_serial_peek+1)& (0+255),w,b
  2957  000274  6EFE               	movwf	tosh,c
  2958  000276  50F8               	movf	tblptru,w,c
  2959  000278  6EFF               	movwf	tosu,c
  2960  00027A  50FA               	movf	pclath,w,c
  2961  00027C  0012               	return		;indir
  2962  00027E                     u6329:
  2963  00027E  0AFF               	xorlw	255
  2964  000280  A4D8               	btfss	status,2,c
  2965  000282  D021               	goto	l5948
  2966                           
  2967                           ;FastTransfer.c: 125: CRCcheck();
  2968  000284  EC0A  F009         	call	_CRCcheck	;wreg free
  2969                           
  2970                           ;FastTransfer.c: 126: rx_len = 0;
  2971  000288  0E00               	movlw	0
  2972  00028A  6E3F               	movwf	_rx_len,c
  2973                           
  2974                           ;FastTransfer.c: 127: rx_array_inx = 0;
  2975  00028C  0E00               	movlw	0
  2976  00028E  6E3E               	movwf	_rx_array_inx,c
  2977                           
  2978                           ;FastTransfer.c: 128: return 0;
  2979  000290  0E00               	movlw	0
  2980  000292  0012               	return	
  2981  000294                     l5944:
  2982                           
  2983                           ;FastTransfer.c: 134: rx_buffer[rx_array_inx++] = serial_read();
  2984  000294  D801               	call	u6348
  2985  000296  D00A               	goto	u6349
  2986  000298                     u6348:
  2987  000298  0005               	push	
  2988  00029A  6EFA               	movwf	pclath,c
  2989  00029C  5030               	movf	_serial_read,w,c
  2990  00029E  6EFD               	movwf	tosl,c
  2991  0002A0  5031               	movf	_serial_read+1,w,c
  2992  0002A2  6EFE               	movwf	tosh,c
  2993  0002A4  50F8               	movf	tblptru,w,c
  2994  0002A6  6EFF               	movwf	tosu,c
  2995  0002A8  50FA               	movf	pclath,w,c
  2996  0002AA  0012               	return		;indir
  2997  0002AC                     u6349:
  2998  0002AC  0100               	movlb	0	; () banked
  2999  0002AE  6FF5               	movwf	??_receiveData& (0+255),b
  3000  0002B0  503E               	movf	_rx_array_inx,w,c
  3001  0002B2  0D01               	mullw	1
  3002  0002B4  0E00               	movlw	low _rx_buffer
  3003  0002B6  24F3               	addwf	prodl,w,c
  3004  0002B8  6ED9               	movwf	fsr2l,c
  3005  0002BA  0E03               	movlw	high _rx_buffer
  3006  0002BC  20F4               	addwfc	prodh,w,c
  3007  0002BE  6EDA               	movwf	fsr2h,c
  3008  0002C0  C0F5  FFDF         	movff	??_receiveData,indf2
  3009                           
  3010                           ; BSR set to: 0
  3011  0002C4  2A3E               	incf	_rx_array_inx,f,c
  3012  0002C6                     l5948:
  3013  0002C6  D801               	call	u6358
  3014  0002C8  D00A               	goto	u6359
  3015  0002CA                     u6358:
  3016  0002CA  0005               	push	
  3017  0002CC  6EFA               	movwf	pclath,c
  3018  0002CE  502E               	movf	_serial_available,w,c
  3019  0002D0  6EFD               	movwf	tosl,c
  3020  0002D2  502F               	movf	_serial_available+1,w,c
  3021  0002D4  6EFE               	movwf	tosh,c
  3022  0002D6  50F8               	movf	tblptru,w,c
  3023  0002D8  6EFF               	movwf	tosu,c
  3024  0002DA  50FA               	movf	pclath,w,c
  3025  0002DC  0012               	return		;indir
  3026  0002DE                     u6359:
  3027  0002DE  501D               	movf	?_Receive_available,w,c
  3028  0002E0  101E               	iorwf	?_Receive_available+1,w,c
  3029  0002E2  B4D8               	btfsc	status,2,c
  3030  0002E4  D004               	goto	l5952
  3031  0002E6  503E               	movf	_rx_array_inx,w,c
  3032  0002E8  5C3F               	subwf	_rx_len,w,c
  3033  0002EA  B0D8               	btfsc	status,0,c
  3034  0002EC  D7D3               	goto	l5944
  3035  0002EE                     l5952:
  3036                           
  3037                           ;FastTransfer.c: 135: }
  3038                           ;FastTransfer.c: 137: if (rx_len == (rx_array_inx - 1)) {
  3039  0002EE  503F               	movf	_rx_len,w,c
  3040  0002F0  0100               	movlb	0	; () banked
  3041  0002F2  6FF5               	movwf	??_receiveData& (0+255),b
  3042  0002F4  6BF6               	clrf	(??_receiveData+1)& (0+255),b
  3043  0002F6  0EFF               	movlw	255
  3044  0002F8  0100               	movlb	0	; () banked
  3045  0002FA  6FF7               	movwf	(??_receiveData+2)& (0+255),b
  3046  0002FC  0EFF               	movlw	255
  3047  0002FE  0100               	movlb	0	; () banked
  3048  000300  6FF8               	movwf	(??_receiveData+3)& (0+255),b
  3049  000302  503E               	movf	_rx_array_inx,w,c
  3050  000304  0100               	movlb	0	; () banked
  3051  000306  6FF9               	movwf	(??_receiveData+4)& (0+255),b
  3052  000308  6BFA               	clrf	(??_receiveData+5)& (0+255),b
  3053  00030A  0100               	movlb	0	; () banked
  3054  00030C  51F7               	movf	(??_receiveData+2)& (0+255),w,b
  3055  00030E  0100               	movlb	0	; () banked
  3056  000310  27F9               	addwf	(??_receiveData+4)& (0+255),f,b
  3057  000312  0100               	movlb	0	; () banked
  3058  000314  51F8               	movf	(??_receiveData+3)& (0+255),w,b
  3059  000316  0100               	movlb	0	; () banked
  3060  000318  23FA               	addwfc	(??_receiveData+5)& (0+255),f,b
  3061  00031A  0100               	movlb	0	; () banked
  3062  00031C  51F5               	movf	??_receiveData& (0+255),w,b
  3063  00031E  0100               	movlb	0	; () banked
  3064  000320  19F9               	xorwf	(??_receiveData+4)& (0+255),w,b
  3065  000322  E105               	bnz	u6381
  3066  000324  0100               	movlb	0	; () banked
  3067  000326  51F6               	movf	(??_receiveData+1)& (0+255),w,b
  3068  000328  0100               	movlb	0	; () banked
  3069  00032A  19FA               	xorwf	(??_receiveData+5)& (0+255),w,b
  3070  00032C  A4D8               	btfss	status,2,c
  3071  00032E                     u6381:
  3072  00032E  D22A               	goto	l6048
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;FastTransfer.c: 140: calc_CS = CRC8(rx_buffer, rx_len);
  3076  000330  0E00               	movlw	low _rx_buffer
  3077  000332  6E1B               	movwf	CRC8@data,c
  3078  000334  0E03               	movlw	high _rx_buffer
  3079  000336  6E1C               	movwf	CRC8@data+1,c
  3080  000338  C03F  F01D         	movff	_rx_len,CRC8@len
  3081  00033C  ECD8  F014         	call	_CRC8	;wreg free
  3082  000340  6E37               	movwf	_calc_CS,c
  3083                           
  3084                           ;FastTransfer.c: 144: if (calc_CS == rx_buffer[rx_array_inx - 1]) {
  3085  000342  0EFF               	movlw	255
  3086  000344  0100               	movlb	0	; () banked
  3087  000346  6FF5               	movwf	??_receiveData& (0+255),b
  3088  000348  0EFF               	movlw	255
  3089  00034A  0100               	movlb	0	; () banked
  3090  00034C  6FF6               	movwf	(??_receiveData+1)& (0+255),b
  3091  00034E  503E               	movf	_rx_array_inx,w,c
  3092  000350  0100               	movlb	0	; () banked
  3093  000352  6FF7               	movwf	(??_receiveData+2)& (0+255),b
  3094  000354  6BF8               	clrf	(??_receiveData+3)& (0+255),b
  3095  000356  0100               	movlb	0	; () banked
  3096  000358  51F5               	movf	??_receiveData& (0+255),w,b
  3097  00035A  0100               	movlb	0	; () banked
  3098  00035C  27F7               	addwf	(??_receiveData+2)& (0+255),f,b
  3099  00035E  0100               	movlb	0	; () banked
  3100  000360  51F6               	movf	(??_receiveData+1)& (0+255),w,b
  3101  000362  0100               	movlb	0	; () banked
  3102  000364  23F8               	addwfc	(??_receiveData+3)& (0+255),f,b
  3103  000366  0E00               	movlw	low _rx_buffer
  3104  000368  0100               	movlb	0	; () banked
  3105  00036A  25F7               	addwf	(??_receiveData+2)& (0+255),w,b
  3106  00036C  6ED9               	movwf	fsr2l,c
  3107  00036E  0E03               	movlw	high _rx_buffer
  3108  000370  0100               	movlb	0	; () banked
  3109  000372  21F8               	addwfc	(??_receiveData+3)& (0+255),w,b
  3110  000374  6EDA               	movwf	fsr2h,c
  3111  000376  5037               	movf	_calc_CS,w,c
  3112  000378  18DE               	xorwf	postinc2,w,c
  3113  00037A  A4D8               	btfss	status,2,c
  3114  00037C  D13B               	goto	l6010
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;FastTransfer.c: 147: int r;
  3118                           ;FastTransfer.c: 148: for (r = 0; r < rx_len; r = r + 3) {
  3119  00037E  0E00               	movlw	0
  3120  000380  0101               	movlb	1	; () banked
  3121  000382  6F44               	movwf	(receiveData@r+1)& (0+255),b
  3122  000384  0E00               	movlw	0
  3123  000386  6F43               	movwf	receiveData@r& (0+255),b
  3124  000388  D05C               	goto	l5970
  3125  00038A                     l5960:
  3126                           
  3127                           ;FastTransfer.c: 149: if (rx_buffer[r] < maxDataAddress) {
  3128  00038A  0E00               	movlw	low _rx_buffer
  3129  00038C  0101               	movlb	1	; () banked
  3130  00038E  2543               	addwf	receiveData@r& (0+255),w,b
  3131  000390  6ED9               	movwf	fsr2l,c
  3132  000392  0E03               	movlw	high _rx_buffer
  3133  000394  0101               	movlb	1	; () banked
  3134  000396  2144               	addwfc	(receiveData@r+1)& (0+255),w,b
  3135  000398  6EDA               	movwf	fsr2h,c
  3136  00039A  503A               	movf	_maxDataAddress,w,c
  3137  00039C  5CDE               	subwf	postinc2,w,c
  3138  00039E  B0D8               	btfsc	status,0,c
  3139  0003A0  D043               	goto	l5966
  3140                           
  3141                           ; BSR set to: 1
  3142                           ;FastTransfer.c: 150: group.parts[0] = rx_buffer[r + 1];
  3143  0003A2  0E01               	movlw	1
  3144  0003A4  0101               	movlb	1	; () banked
  3145  0003A6  2543               	addwf	receiveData@r& (0+255),w,b
  3146  0003A8  0100               	movlb	0	; () banked
  3147  0003AA  6FF5               	movwf	??_receiveData& (0+255),b
  3148  0003AC  0E00               	movlw	0
  3149  0003AE  0101               	movlb	1	; () banked
  3150  0003B0  2144               	addwfc	(receiveData@r+1)& (0+255),w,b
  3151  0003B2  0100               	movlb	0	; () banked
  3152  0003B4  6FF6               	movwf	(??_receiveData+1)& (0+255),b
  3153  0003B6  0E00               	movlw	low _rx_buffer
  3154  0003B8  0100               	movlb	0	; () banked
  3155  0003BA  25F5               	addwf	??_receiveData& (0+255),w,b
  3156  0003BC  6ED9               	movwf	fsr2l,c
  3157  0003BE  0E03               	movlw	high _rx_buffer
  3158  0003C0  0100               	movlb	0	; () banked
  3159  0003C2  21F6               	addwfc	(??_receiveData+1)& (0+255),w,b
  3160  0003C4  6EDA               	movwf	fsr2h,c
  3161  0003C6  50DF               	movf	indf2,w,c
  3162  0003C8  6E2C               	movwf	_group,c
  3163                           
  3164                           ;FastTransfer.c: 151: group.parts[1] = rx_buffer[r + 2];
  3165  0003CA  0E02               	movlw	2
  3166  0003CC  0101               	movlb	1	; () banked
  3167  0003CE  2543               	addwf	receiveData@r& (0+255),w,b
  3168  0003D0  0100               	movlb	0	; () banked
  3169  0003D2  6FF5               	movwf	??_receiveData& (0+255),b
  3170  0003D4  0E00               	movlw	0
  3171  0003D6  0101               	movlb	1	; () banked
  3172  0003D8  2144               	addwfc	(receiveData@r+1)& (0+255),w,b
  3173  0003DA  0100               	movlb	0	; () banked
  3174  0003DC  6FF6               	movwf	(??_receiveData+1)& (0+255),b
  3175  0003DE  0E00               	movlw	low _rx_buffer
  3176  0003E0  0100               	movlb	0	; () banked
  3177  0003E2  25F5               	addwf	??_receiveData& (0+255),w,b
  3178  0003E4  6ED9               	movwf	fsr2l,c
  3179  0003E6  0E03               	movlw	high _rx_buffer
  3180  0003E8  0100               	movlb	0	; () banked
  3181  0003EA  21F6               	addwfc	(??_receiveData+1)& (0+255),w,b
  3182  0003EC  6EDA               	movwf	fsr2h,c
  3183  0003EE  50DF               	movf	indf2,w,c
  3184  0003F0  6E2D               	movwf	_group+1,c
  3185                           
  3186                           ; BSR set to: 0
  3187                           ;FastTransfer.c: 152: receiveArrayAddress[(rx_buffer[r])] = group.integer;
  3188  0003F2  0E00               	movlw	low _rx_buffer
  3189  0003F4  0101               	movlb	1	; () banked
  3190  0003F6  2543               	addwf	receiveData@r& (0+255),w,b
  3191  0003F8  6ED9               	movwf	fsr2l,c
  3192  0003FA  0E03               	movlw	high _rx_buffer
  3193  0003FC  0101               	movlb	1	; () banked
  3194  0003FE  2144               	addwfc	(receiveData@r+1)& (0+255),w,b
  3195  000400  6EDA               	movwf	fsr2h,c
  3196  000402  50DF               	movf	indf2,w,c
  3197  000404  0100               	movlb	0	; () banked
  3198  000406  6FF5               	movwf	??_receiveData& (0+255),b
  3199  000408  0100               	movlb	0	; () banked
  3200  00040A  51F5               	movf	??_receiveData& (0+255),w,b
  3201  00040C  0D02               	mullw	2
  3202  00040E  50F3               	movf	prodl,w,c
  3203  000410  0100               	movlb	0	; () banked
  3204  000412  25D3               	addwf	_receiveArrayAddress& (0+255),w,b
  3205  000414  6ED9               	movwf	fsr2l,c
  3206  000416  50F4               	movf	prodh,w,c
  3207  000418  0100               	movlb	0	; () banked
  3208  00041A  21D4               	addwfc	(_receiveArrayAddress+1)& (0+255),w,b
  3209  00041C  6EDA               	movwf	fsr2h,c
  3210  00041E  C02C  FFDE         	movff	_group,postinc2
  3211  000422  C02D  FFDD         	movff	_group+1,postdec2
  3212                           
  3213                           ;FastTransfer.c: 153: } else {
  3214  000426  D003               	goto	l5968
  3215  000428                     l5966:
  3216                           
  3217                           ;FastTransfer.c: 154: dataAdressErrorCounter++;
  3218  000428  0100               	movlb	0	; () banked
  3219  00042A  4BCB               	infsnz	_dataAdressErrorCounter& (0+255),f,b
  3220  00042C  2BCC               	incf	(_dataAdressErrorCounter+1)& (0+255),f,b
  3221  00042E                     l5968:
  3222                           
  3223                           ; BSR set to: 0
  3224  00042E  0E03               	movlw	3
  3225  000430  0101               	movlb	1	; () banked
  3226  000432  2543               	addwf	receiveData@r& (0+255),w,b
  3227  000434  0101               	movlb	1	; () banked
  3228  000436  6F43               	movwf	receiveData@r& (0+255),b
  3229  000438  0E00               	movlw	0
  3230  00043A  0101               	movlb	1	; () banked
  3231  00043C  2144               	addwfc	(receiveData@r+1)& (0+255),w,b
  3232  00043E  0101               	movlb	1	; () banked
  3233  000440  6F44               	movwf	(receiveData@r+1)& (0+255),b
  3234  000442                     l5970:
  3235                           
  3236                           ; BSR set to: 1
  3237  000442  503F               	movf	_rx_len,w,c
  3238  000444  0100               	movlb	0	; () banked
  3239  000446  6FF5               	movwf	??_receiveData& (0+255),b
  3240  000448  6BF6               	clrf	(??_receiveData+1)& (0+255),b
  3241  00044A  0100               	movlb	0	; () banked
  3242  00044C  51F5               	movf	??_receiveData& (0+255),w,b
  3243  00044E  0101               	movlb	1	; () banked
  3244  000450  5D43               	subwf	receiveData@r& (0+255),w,b
  3245  000452  0101               	movlb	1	; () banked
  3246  000454  5144               	movf	(receiveData@r+1)& (0+255),w,b
  3247  000456  0A80               	xorlw	128
  3248  000458  0100               	movlb	0	; () banked
  3249  00045A  6FF7               	movwf	(??_receiveData+2)& (0+255),b
  3250  00045C  0100               	movlb	0	; () banked
  3251  00045E  51F6               	movf	(??_receiveData+1)& (0+255),w,b
  3252  000460  0A80               	xorlw	128
  3253  000462  0100               	movlb	0	; () banked
  3254  000464  59F7               	subwfb	(??_receiveData+2)& (0+255),w,b
  3255  000466  A0D8               	btfss	status,0,c
  3256  000468  D790               	goto	l5960
  3257                           
  3258                           ; BSR set to: 0
  3259                           ;FastTransfer.c: 155: }
  3260                           ;FastTransfer.c: 156: }
  3261                           ;FastTransfer.c: 159: if (AKNAKsend) {
  3262                           
  3263                           ; BSR set to: 0
  3264  00046A  5036               	movf	_AKNAKsend,w,c
  3265  00046C  B4D8               	btfsc	status,2,c
  3266  00046E  D0BC               	goto	l6000
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;FastTransfer.c: 160: unsigned char holder[3];
  3270                           ;FastTransfer.c: 161: holder[0] = 255;
  3271  000470  0101               	movlb	1	; () banked
  3272  000472  6939               	setf	receiveData@holder& (0+255),b
  3273                           
  3274                           ; BSR set to: 1
  3275                           ;FastTransfer.c: 162: holder[1] = 1;
  3276  000474  0E01               	movlw	1
  3277  000476  0101               	movlb	1	; () banked
  3278  000478  6F3A               	movwf	(receiveData@holder+1)& (0+255),b
  3279                           
  3280                           ; BSR set to: 1
  3281                           ;FastTransfer.c: 163: holder[2] = rx_buffer[rx_array_inx - 1];
  3282  00047A  0EFF               	movlw	255
  3283  00047C  0100               	movlb	0	; () banked
  3284  00047E  6FF5               	movwf	??_receiveData& (0+255),b
  3285  000480  0EFF               	movlw	255
  3286  000482  0100               	movlb	0	; () banked
  3287  000484  6FF6               	movwf	(??_receiveData+1)& (0+255),b
  3288  000486  503E               	movf	_rx_array_inx,w,c
  3289  000488  0100               	movlb	0	; () banked
  3290  00048A  6FF7               	movwf	(??_receiveData+2)& (0+255),b
  3291  00048C  6BF8               	clrf	(??_receiveData+3)& (0+255),b
  3292  00048E  0100               	movlb	0	; () banked
  3293  000490  51F5               	movf	??_receiveData& (0+255),w,b
  3294  000492  0100               	movlb	0	; () banked
  3295  000494  27F7               	addwf	(??_receiveData+2)& (0+255),f,b
  3296  000496  0100               	movlb	0	; () banked
  3297  000498  51F6               	movf	(??_receiveData+1)& (0+255),w,b
  3298  00049A  0100               	movlb	0	; () banked
  3299  00049C  23F8               	addwfc	(??_receiveData+3)& (0+255),f,b
  3300  00049E  0E00               	movlw	low _rx_buffer
  3301  0004A0  0100               	movlb	0	; () banked
  3302  0004A2  25F7               	addwf	(??_receiveData+2)& (0+255),w,b
  3303  0004A4  6ED9               	movwf	fsr2l,c
  3304  0004A6  0E03               	movlw	high _rx_buffer
  3305  0004A8  0100               	movlb	0	; () banked
  3306  0004AA  21F8               	addwfc	(??_receiveData+3)& (0+255),w,b
  3307  0004AC  6EDA               	movwf	fsr2h,c
  3308  0004AE  50DF               	movf	indf2,w,c
  3309  0004B0  0101               	movlb	1	; () banked
  3310  0004B2  6F3B               	movwf	(receiveData@holder+2)& (0+255),b
  3311                           
  3312                           ; BSR set to: 1
  3313                           ;FastTransfer.c: 164: unsigned char crcHolder = CRC8(holder, 3);
  3314  0004B4  0E39               	movlw	low receiveData@holder
  3315  0004B6  6E1B               	movwf	CRC8@data,c
  3316  0004B8  0E01               	movlw	high receiveData@holder
  3317  0004BA  6E1C               	movwf	CRC8@data+1,c
  3318  0004BC  0E03               	movlw	3
  3319  0004BE  6E1D               	movwf	CRC8@len,c
  3320  0004C0  ECD8  F014         	call	_CRC8	;wreg free
  3321  0004C4  0101               	movlb	1	; () banked
  3322  0004C6  6F3F               	movwf	receiveData@crcHolder& (0+255),b
  3323                           
  3324                           ; BSR set to: 1
  3325                           ;FastTransfer.c: 165: serial_write(0x06);
  3326  0004C8  D801               	call	u6438
  3327  0004CA  D00B               	goto	l5984
  3328  0004CC                     u6438:
  3329  0004CC  0005               	push	
  3330  0004CE  6EFA               	movwf	pclath,c
  3331  0004D0  5032               	movf	_serial_write,w,c
  3332  0004D2  6EFD               	movwf	tosl,c
  3333  0004D4  5033               	movf	_serial_write+1,w,c
  3334  0004D6  6EFE               	movwf	tosh,c
  3335  0004D8  50F8               	movf	tblptru,w,c
  3336  0004DA  6EFF               	movwf	tosu,c
  3337  0004DC  50FA               	movf	pclath,w,c
  3338  0004DE  0E06               	movlw	6
  3339  0004E0  0012               	return		;indir
  3340  0004E2                     l5984:
  3341                           
  3342                           ;FastTransfer.c: 166: serial_write(0x85);
  3343  0004E2  D801               	call	u6448
  3344  0004E4  D00B               	goto	l5986
  3345  0004E6                     u6448:
  3346  0004E6  0005               	push	
  3347  0004E8  6EFA               	movwf	pclath,c
  3348  0004EA  5032               	movf	_serial_write,w,c
  3349  0004EC  6EFD               	movwf	tosl,c
  3350  0004EE  5033               	movf	_serial_write+1,w,c
  3351  0004F0  6EFE               	movwf	tosh,c
  3352  0004F2  50F8               	movf	tblptru,w,c
  3353  0004F4  6EFF               	movwf	tosu,c
  3354  0004F6  50FA               	movf	pclath,w,c
  3355  0004F8  0E85               	movlw	133
  3356  0004FA  0012               	return		;indir
  3357  0004FC                     l5986:
  3358                           
  3359                           ;FastTransfer.c: 167: serial_write(returnAddress);
  3360  0004FC  D801               	call	u6458
  3361  0004FE  D00B               	goto	l5988
  3362  000500                     u6458:
  3363  000500  0005               	push	
  3364  000502  6EFA               	movwf	pclath,c
  3365  000504  5032               	movf	_serial_write,w,c
  3366  000506  6EFD               	movwf	tosl,c
  3367  000508  5033               	movf	_serial_write+1,w,c
  3368  00050A  6EFE               	movwf	tosh,c
  3369  00050C  50F8               	movf	tblptru,w,c
  3370  00050E  6EFF               	movwf	tosu,c
  3371  000510  50FA               	movf	pclath,w,c
  3372  000512  503C               	movf	_returnAddress,w,c
  3373  000514  0012               	return		;indir
  3374  000516                     l5988:
  3375                           
  3376                           ;FastTransfer.c: 168: serial_write(moduleAddress);
  3377  000516  D801               	call	u6468
  3378  000518  D00B               	goto	l5990
  3379  00051A                     u6468:
  3380  00051A  0005               	push	
  3381  00051C  6EFA               	movwf	pclath,c
  3382  00051E  5032               	movf	_serial_write,w,c
  3383  000520  6EFD               	movwf	tosl,c
  3384  000522  5033               	movf	_serial_write+1,w,c
  3385  000524  6EFE               	movwf	tosh,c
  3386  000526  50F8               	movf	tblptru,w,c
  3387  000528  6EFF               	movwf	tosu,c
  3388  00052A  50FA               	movf	pclath,w,c
  3389  00052C  503B               	movf	_moduleAddress,w,c
  3390  00052E  0012               	return		;indir
  3391  000530                     l5990:
  3392                           
  3393                           ;FastTransfer.c: 169: serial_write(3);
  3394  000530  D801               	call	u6478
  3395  000532  D00B               	goto	l5992
  3396  000534                     u6478:
  3397  000534  0005               	push	
  3398  000536  6EFA               	movwf	pclath,c
  3399  000538  5032               	movf	_serial_write,w,c
  3400  00053A  6EFD               	movwf	tosl,c
  3401  00053C  5033               	movf	_serial_write+1,w,c
  3402  00053E  6EFE               	movwf	tosh,c
  3403  000540  50F8               	movf	tblptru,w,c
  3404  000542  6EFF               	movwf	tosu,c
  3405  000544  50FA               	movf	pclath,w,c
  3406  000546  0E03               	movlw	3
  3407  000548  0012               	return		;indir
  3408  00054A                     l5992:
  3409                           
  3410                           ;FastTransfer.c: 170: serial_write(255);
  3411  00054A  D801               	call	u6488
  3412  00054C  D00B               	goto	l5994
  3413  00054E                     u6488:
  3414  00054E  0005               	push	
  3415  000550  6EFA               	movwf	pclath,c
  3416  000552  5032               	movf	_serial_write,w,c
  3417  000554  6EFD               	movwf	tosl,c
  3418  000556  5033               	movf	_serial_write+1,w,c
  3419  000558  6EFE               	movwf	tosh,c
  3420  00055A  50F8               	movf	tblptru,w,c
  3421  00055C  6EFF               	movwf	tosu,c
  3422  00055E  50FA               	movf	pclath,w,c
  3423  000560  0EFF               	movlw	255
  3424  000562  0012               	return		;indir
  3425  000564                     l5994:
  3426                           
  3427                           ;FastTransfer.c: 171: serial_write(1);
  3428  000564  D801               	call	u6498
  3429  000566  D00B               	goto	l5996
  3430  000568                     u6498:
  3431  000568  0005               	push	
  3432  00056A  6EFA               	movwf	pclath,c
  3433  00056C  5032               	movf	_serial_write,w,c
  3434  00056E  6EFD               	movwf	tosl,c
  3435  000570  5033               	movf	_serial_write+1,w,c
  3436  000572  6EFE               	movwf	tosh,c
  3437  000574  50F8               	movf	tblptru,w,c
  3438  000576  6EFF               	movwf	tosu,c
  3439  000578  50FA               	movf	pclath,w,c
  3440  00057A  0E01               	movlw	1
  3441  00057C  0012               	return		;indir
  3442  00057E                     l5996:
  3443                           
  3444                           ;FastTransfer.c: 172: serial_write(rx_buffer[rx_array_inx - 1]);
  3445  00057E  D801               	call	u6508
  3446  000580  D025               	goto	l5998
  3447  000582                     u6508:
  3448  000582  0005               	push	
  3449  000584  6EFA               	movwf	pclath,c
  3450  000586  5032               	movf	_serial_write,w,c
  3451  000588  6EFD               	movwf	tosl,c
  3452  00058A  5033               	movf	_serial_write+1,w,c
  3453  00058C  6EFE               	movwf	tosh,c
  3454  00058E  50F8               	movf	tblptru,w,c
  3455  000590  6EFF               	movwf	tosu,c
  3456  000592  50FA               	movf	pclath,w,c
  3457  000594  0EFF               	movlw	255
  3458  000596  0100               	movlb	0	; () banked
  3459  000598  6FF5               	movwf	??_receiveData& (0+255),b
  3460  00059A  0EFF               	movlw	255
  3461  00059C  0100               	movlb	0	; () banked
  3462  00059E  6FF6               	movwf	(??_receiveData+1)& (0+255),b
  3463  0005A0  503E               	movf	_rx_array_inx,w,c
  3464  0005A2  0100               	movlb	0	; () banked
  3465  0005A4  6FF7               	movwf	(??_receiveData+2)& (0+255),b
  3466  0005A6  6BF8               	clrf	(??_receiveData+3)& (0+255),b
  3467  0005A8  0100               	movlb	0	; () banked
  3468  0005AA  51F5               	movf	??_receiveData& (0+255),w,b
  3469  0005AC  0100               	movlb	0	; () banked
  3470  0005AE  27F7               	addwf	(??_receiveData+2)& (0+255),f,b
  3471  0005B0  0100               	movlb	0	; () banked
  3472  0005B2  51F6               	movf	(??_receiveData+1)& (0+255),w,b
  3473  0005B4  0100               	movlb	0	; () banked
  3474  0005B6  23F8               	addwfc	(??_receiveData+3)& (0+255),f,b
  3475  0005B8  0E00               	movlw	low _rx_buffer
  3476  0005BA  0100               	movlb	0	; () banked
  3477  0005BC  25F7               	addwf	(??_receiveData+2)& (0+255),w,b
  3478  0005BE  6ED9               	movwf	fsr2l,c
  3479  0005C0  0E03               	movlw	high _rx_buffer
  3480  0005C2  0100               	movlb	0	; () banked
  3481  0005C4  21F8               	addwfc	(??_receiveData+3)& (0+255),w,b
  3482  0005C6  6EDA               	movwf	fsr2h,c
  3483  0005C8  50DF               	movf	indf2,w,c
  3484  0005CA  0012               	return		;indir
  3485  0005CC                     l5998:
  3486                           
  3487                           ;FastTransfer.c: 173: serial_write(crcHolder);
  3488  0005CC  D801               	call	u6518
  3489  0005CE  D00C               	goto	l6000
  3490  0005D0                     u6518:
  3491  0005D0  0005               	push	
  3492  0005D2  6EFA               	movwf	pclath,c
  3493  0005D4  5032               	movf	_serial_write,w,c
  3494  0005D6  6EFD               	movwf	tosl,c
  3495  0005D8  5033               	movf	_serial_write+1,w,c
  3496  0005DA  6EFE               	movwf	tosh,c
  3497  0005DC  50F8               	movf	tblptru,w,c
  3498  0005DE  6EFF               	movwf	tosu,c
  3499  0005E0  50FA               	movf	pclath,w,c
  3500  0005E2  0101               	movlb	1	; () banked
  3501  0005E4  513F               	movf	receiveData@crcHolder& (0+255),w,b
  3502  0005E6  0012               	return		;indir
  3503  0005E8                     l6000:
  3504                           
  3505                           ;FastTransfer.c: 174: }
  3506                           ;FastTransfer.c: 178: rx_len = 0;
  3507  0005E8  0E00               	movlw	0
  3508  0005EA  6E3F               	movwf	_rx_len,c
  3509                           
  3510                           ;FastTransfer.c: 179: rx_array_inx = 0;
  3511  0005EC  0E00               	movlw	0
  3512  0005EE  6E3E               	movwf	_rx_array_inx,c
  3513                           
  3514                           ;FastTransfer.c: 180: return 1;
  3515  0005F0  0E01               	movlw	1
  3516  0005F2  0012               	return	
  3517  0005F4                     l6010:
  3518                           
  3519                           ;FastTransfer.c: 182: crcErrorCounter++;
  3520  0005F4  0100               	movlb	0	; () banked
  3521  0005F6  4BC9               	infsnz	_crcErrorCounter& (0+255),f,b
  3522  0005F8  2BCA               	incf	(_crcErrorCounter+1)& (0+255),f,b
  3523                           
  3524                           ; BSR set to: 0
  3525                           ;FastTransfer.c: 184: if (AKNAKsend) {
  3526  0005FA  5036               	movf	_AKNAKsend,w,c
  3527  0005FC  B4D8               	btfsc	status,2,c
  3528  0005FE  D0BC               	goto	l6040
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;FastTransfer.c: 185: unsigned char holder[3];
  3532                           ;FastTransfer.c: 186: holder[0] = 255;
  3533  000600  0101               	movlb	1	; () banked
  3534  000602  693C               	setf	receiveData@holder_2230& (0+255),b
  3535                           
  3536                           ; BSR set to: 1
  3537                           ;FastTransfer.c: 187: holder[1] = 2;
  3538  000604  0E02               	movlw	2
  3539  000606  0101               	movlb	1	; () banked
  3540  000608  6F3D               	movwf	(receiveData@holder_2230+1)& (0+255),b
  3541                           
  3542                           ; BSR set to: 1
  3543                           ;FastTransfer.c: 188: holder[2] = rx_buffer[rx_array_inx - 1];
  3544  00060A  0EFF               	movlw	255
  3545  00060C  0100               	movlb	0	; () banked
  3546  00060E  6FF5               	movwf	??_receiveData& (0+255),b
  3547  000610  0EFF               	movlw	255
  3548  000612  0100               	movlb	0	; () banked
  3549  000614  6FF6               	movwf	(??_receiveData+1)& (0+255),b
  3550  000616  503E               	movf	_rx_array_inx,w,c
  3551  000618  0100               	movlb	0	; () banked
  3552  00061A  6FF7               	movwf	(??_receiveData+2)& (0+255),b
  3553  00061C  6BF8               	clrf	(??_receiveData+3)& (0+255),b
  3554  00061E  0100               	movlb	0	; () banked
  3555  000620  51F5               	movf	??_receiveData& (0+255),w,b
  3556  000622  0100               	movlb	0	; () banked
  3557  000624  27F7               	addwf	(??_receiveData+2)& (0+255),f,b
  3558  000626  0100               	movlb	0	; () banked
  3559  000628  51F6               	movf	(??_receiveData+1)& (0+255),w,b
  3560  00062A  0100               	movlb	0	; () banked
  3561  00062C  23F8               	addwfc	(??_receiveData+3)& (0+255),f,b
  3562  00062E  0E00               	movlw	low _rx_buffer
  3563  000630  0100               	movlb	0	; () banked
  3564  000632  25F7               	addwf	(??_receiveData+2)& (0+255),w,b
  3565  000634  6ED9               	movwf	fsr2l,c
  3566  000636  0E03               	movlw	high _rx_buffer
  3567  000638  0100               	movlb	0	; () banked
  3568  00063A  21F8               	addwfc	(??_receiveData+3)& (0+255),w,b
  3569  00063C  6EDA               	movwf	fsr2h,c
  3570  00063E  50DF               	movf	indf2,w,c
  3571  000640  0101               	movlb	1	; () banked
  3572  000642  6F3E               	movwf	(receiveData@holder_2230+2)& (0+255),b
  3573                           
  3574                           ; BSR set to: 1
  3575                           ;FastTransfer.c: 189: unsigned char crcHolder = CRC8(holder, 3);
  3576  000644  0E3C               	movlw	low receiveData@holder_2230
  3577  000646  6E1B               	movwf	CRC8@data,c
  3578  000648  0E01               	movlw	high receiveData@holder_2230
  3579  00064A  6E1C               	movwf	CRC8@data+1,c
  3580  00064C  0E03               	movlw	3
  3581  00064E  6E1D               	movwf	CRC8@len,c
  3582  000650  ECD8  F014         	call	_CRC8
  3583  000654  0101               	movlb	1	; () banked
  3584  000656  6F40               	movwf	receiveData@crcHolder_2231& (0+255),b
  3585                           
  3586                           ; BSR set to: 1
  3587                           ;FastTransfer.c: 190: serial_write(0x06);
  3588  000658  D801               	call	u6538
  3589  00065A  D00B               	goto	l6024
  3590  00065C                     u6538:
  3591  00065C  0005               	push	
  3592  00065E  6EFA               	movwf	pclath,c
  3593  000660  5032               	movf	_serial_write,w,c
  3594  000662  6EFD               	movwf	tosl,c
  3595  000664  5033               	movf	_serial_write+1,w,c
  3596  000666  6EFE               	movwf	tosh,c
  3597  000668  50F8               	movf	tblptru,w,c
  3598  00066A  6EFF               	movwf	tosu,c
  3599  00066C  50FA               	movf	pclath,w,c
  3600  00066E  0E06               	movlw	6
  3601  000670  0012               	return		;indir
  3602  000672                     l6024:
  3603                           
  3604                           ;FastTransfer.c: 191: serial_write(0x85);
  3605  000672  D801               	call	u6548
  3606  000674  D00B               	goto	l6026
  3607  000676                     u6548:
  3608  000676  0005               	push	
  3609  000678  6EFA               	movwf	pclath,c
  3610  00067A  5032               	movf	_serial_write,w,c
  3611  00067C  6EFD               	movwf	tosl,c
  3612  00067E  5033               	movf	_serial_write+1,w,c
  3613  000680  6EFE               	movwf	tosh,c
  3614  000682  50F8               	movf	tblptru,w,c
  3615  000684  6EFF               	movwf	tosu,c
  3616  000686  50FA               	movf	pclath,w,c
  3617  000688  0E85               	movlw	133
  3618  00068A  0012               	return		;indir
  3619  00068C                     l6026:
  3620                           
  3621                           ;FastTransfer.c: 192: serial_write(returnAddress);
  3622  00068C  D801               	call	u6558
  3623  00068E  D00B               	goto	l6028
  3624  000690                     u6558:
  3625  000690  0005               	push	
  3626  000692  6EFA               	movwf	pclath,c
  3627  000694  5032               	movf	_serial_write,w,c
  3628  000696  6EFD               	movwf	tosl,c
  3629  000698  5033               	movf	_serial_write+1,w,c
  3630  00069A  6EFE               	movwf	tosh,c
  3631  00069C  50F8               	movf	tblptru,w,c
  3632  00069E  6EFF               	movwf	tosu,c
  3633  0006A0  50FA               	movf	pclath,w,c
  3634  0006A2  503C               	movf	_returnAddress,w,c
  3635  0006A4  0012               	return		;indir
  3636  0006A6                     l6028:
  3637                           
  3638                           ;FastTransfer.c: 193: serial_write(moduleAddress);
  3639  0006A6  D801               	call	u6568
  3640  0006A8  D00B               	goto	l6030
  3641  0006AA                     u6568:
  3642  0006AA  0005               	push	
  3643  0006AC  6EFA               	movwf	pclath,c
  3644  0006AE  5032               	movf	_serial_write,w,c
  3645  0006B0  6EFD               	movwf	tosl,c
  3646  0006B2  5033               	movf	_serial_write+1,w,c
  3647  0006B4  6EFE               	movwf	tosh,c
  3648  0006B6  50F8               	movf	tblptru,w,c
  3649  0006B8  6EFF               	movwf	tosu,c
  3650  0006BA  50FA               	movf	pclath,w,c
  3651  0006BC  503B               	movf	_moduleAddress,w,c
  3652  0006BE  0012               	return		;indir
  3653  0006C0                     l6030:
  3654                           
  3655                           ;FastTransfer.c: 194: serial_write(3);
  3656  0006C0  D801               	call	u6578
  3657  0006C2  D00B               	goto	l6032
  3658  0006C4                     u6578:
  3659  0006C4  0005               	push	
  3660  0006C6  6EFA               	movwf	pclath,c
  3661  0006C8  5032               	movf	_serial_write,w,c
  3662  0006CA  6EFD               	movwf	tosl,c
  3663  0006CC  5033               	movf	_serial_write+1,w,c
  3664  0006CE  6EFE               	movwf	tosh,c
  3665  0006D0  50F8               	movf	tblptru,w,c
  3666  0006D2  6EFF               	movwf	tosu,c
  3667  0006D4  50FA               	movf	pclath,w,c
  3668  0006D6  0E03               	movlw	3
  3669  0006D8  0012               	return		;indir
  3670  0006DA                     l6032:
  3671                           
  3672                           ;FastTransfer.c: 195: serial_write(255);
  3673  0006DA  D801               	call	u6588
  3674  0006DC  D00B               	goto	l6034
  3675  0006DE                     u6588:
  3676  0006DE  0005               	push	
  3677  0006E0  6EFA               	movwf	pclath,c
  3678  0006E2  5032               	movf	_serial_write,w,c
  3679  0006E4  6EFD               	movwf	tosl,c
  3680  0006E6  5033               	movf	_serial_write+1,w,c
  3681  0006E8  6EFE               	movwf	tosh,c
  3682  0006EA  50F8               	movf	tblptru,w,c
  3683  0006EC  6EFF               	movwf	tosu,c
  3684  0006EE  50FA               	movf	pclath,w,c
  3685  0006F0  0EFF               	movlw	255
  3686  0006F2  0012               	return		;indir
  3687  0006F4                     l6034:
  3688                           
  3689                           ;FastTransfer.c: 196: serial_write(2);
  3690  0006F4  D801               	call	u6598
  3691  0006F6  D00B               	goto	l6036
  3692  0006F8                     u6598:
  3693  0006F8  0005               	push	
  3694  0006FA  6EFA               	movwf	pclath,c
  3695  0006FC  5032               	movf	_serial_write,w,c
  3696  0006FE  6EFD               	movwf	tosl,c
  3697  000700  5033               	movf	_serial_write+1,w,c
  3698  000702  6EFE               	movwf	tosh,c
  3699  000704  50F8               	movf	tblptru,w,c
  3700  000706  6EFF               	movwf	tosu,c
  3701  000708  50FA               	movf	pclath,w,c
  3702  00070A  0E02               	movlw	2
  3703  00070C  0012               	return		;indir
  3704  00070E                     l6036:
  3705                           
  3706                           ;FastTransfer.c: 197: serial_write(rx_buffer[rx_array_inx - 1]);
  3707  00070E  D801               	call	u6608
  3708  000710  D025               	goto	l6038
  3709  000712                     u6608:
  3710  000712  0005               	push	
  3711  000714  6EFA               	movwf	pclath,c
  3712  000716  5032               	movf	_serial_write,w,c
  3713  000718  6EFD               	movwf	tosl,c
  3714  00071A  5033               	movf	_serial_write+1,w,c
  3715  00071C  6EFE               	movwf	tosh,c
  3716  00071E  50F8               	movf	tblptru,w,c
  3717  000720  6EFF               	movwf	tosu,c
  3718  000722  50FA               	movf	pclath,w,c
  3719  000724  0EFF               	movlw	255
  3720  000726  0100               	movlb	0	; () banked
  3721  000728  6FF5               	movwf	??_receiveData& (0+255),b
  3722  00072A  0EFF               	movlw	255
  3723  00072C  0100               	movlb	0	; () banked
  3724  00072E  6FF6               	movwf	(??_receiveData+1)& (0+255),b
  3725  000730  503E               	movf	_rx_array_inx,w,c
  3726  000732  0100               	movlb	0	; () banked
  3727  000734  6FF7               	movwf	(??_receiveData+2)& (0+255),b
  3728  000736  6BF8               	clrf	(??_receiveData+3)& (0+255),b
  3729  000738  0100               	movlb	0	; () banked
  3730  00073A  51F5               	movf	??_receiveData& (0+255),w,b
  3731  00073C  0100               	movlb	0	; () banked
  3732  00073E  27F7               	addwf	(??_receiveData+2)& (0+255),f,b
  3733  000740  0100               	movlb	0	; () banked
  3734  000742  51F6               	movf	(??_receiveData+1)& (0+255),w,b
  3735  000744  0100               	movlb	0	; () banked
  3736  000746  23F8               	addwfc	(??_receiveData+3)& (0+255),f,b
  3737  000748  0E00               	movlw	low _rx_buffer
  3738  00074A  0100               	movlb	0	; () banked
  3739  00074C  25F7               	addwf	(??_receiveData+2)& (0+255),w,b
  3740  00074E  6ED9               	movwf	fsr2l,c
  3741  000750  0E03               	movlw	high _rx_buffer
  3742  000752  0100               	movlb	0	; () banked
  3743  000754  21F8               	addwfc	(??_receiveData+3)& (0+255),w,b
  3744  000756  6EDA               	movwf	fsr2h,c
  3745  000758  50DF               	movf	indf2,w,c
  3746  00075A  0012               	return		;indir
  3747  00075C                     l6038:
  3748                           
  3749                           ;FastTransfer.c: 198: serial_write(crcHolder);
  3750  00075C  D801               	call	u6618
  3751  00075E  D00C               	goto	l6040
  3752  000760                     u6618:
  3753  000760  0005               	push	
  3754  000762  6EFA               	movwf	pclath,c
  3755  000764  5032               	movf	_serial_write,w,c
  3756  000766  6EFD               	movwf	tosl,c
  3757  000768  5033               	movf	_serial_write+1,w,c
  3758  00076A  6EFE               	movwf	tosh,c
  3759  00076C  50F8               	movf	tblptru,w,c
  3760  00076E  6EFF               	movwf	tosu,c
  3761  000770  50FA               	movf	pclath,w,c
  3762  000772  0101               	movlb	1	; () banked
  3763  000774  5140               	movf	receiveData@crcHolder_2231& (0+255),w,b
  3764  000776  0012               	return		;indir
  3765  000778                     l6040:
  3766                           
  3767                           ;FastTransfer.c: 199: }
  3768                           ;FastTransfer.c: 202: rx_len = 0;
  3769  000778  0E00               	movlw	0
  3770  00077A  6E3F               	movwf	_rx_len,c
  3771                           
  3772                           ;FastTransfer.c: 203: rx_array_inx = 0;
  3773  00077C  0E00               	movlw	0
  3774  00077E  6E3E               	movwf	_rx_array_inx,c
  3775                           
  3776                           ;FastTransfer.c: 204: return 0;
  3777  000780  0E00               	movlw	0
  3778  000782  0012               	return	
  3779  000784                     l6048:
  3780                           
  3781                           ;FastTransfer.c: 205: }
  3782                           ;FastTransfer.c: 206: }
  3783                           ;FastTransfer.c: 207: }
  3784                           ;FastTransfer.c: 210: return 0;
  3785  000784  0E00               	movlw	0
  3786  000786  0012               	return	
  3787  000788                     __end_of_receiveData:
  3788                           	opt stack 0
  3789                           tosu	equ	0xFFF
  3790                           tosh	equ	0xFFE
  3791                           tosl	equ	0xFFD
  3792                           pclath	equ	0xFFA
  3793                           tblptru	equ	0xFF8
  3794                           tblptrh	equ	0xFF7
  3795                           tblptrl	equ	0xFF6
  3796                           tablat	equ	0xFF5
  3797                           prodh	equ	0xFF4
  3798                           prodl	equ	0xFF3
  3799                           intcon	equ	0xFF2
  3800                           postinc0	equ	0xFEE
  3801                           wreg	equ	0xFE8
  3802                           indf2	equ	0xFDF
  3803                           postinc2	equ	0xFDE
  3804                           postdec2	equ	0xFDD
  3805                           plusw2	equ	0xFDB
  3806                           fsr2h	equ	0xFDA
  3807                           fsr2l	equ	0xFD9
  3808                           status	equ	0xFD8
  3809                           
  3810 ;; *************** function _Send_put *****************
  3811 ;; Defined at:
  3812 ;;		line 130 in file "UART.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;  _data           1    wreg     unsigned char 
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;  _data           1   37[COMRAM] unsigned char 
  3817 ;; Return value:  Size  Location     Type
  3818 ;;                  1    wreg      void 
  3819 ;; Registers used:
  3820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3821 ;; Tracked objects:
  3822 ;;		On entry : 0/0
  3823 ;;		On exit  : 0/0
  3824 ;;		Unchanged: 0/0
  3825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3826 ;;      Params:         0       0       0       0       0       0       0
  3827 ;;      Locals:         1       0       0       0       0       0       0
  3828 ;;      Temps:          0       0       0       0       0       0       0
  3829 ;;      Totals:         1       0       0       0       0       0       0
  3830 ;;Total ram usage:        1 bytes
  3831 ;; Hardware stack levels used:    1
  3832 ;; Hardware stack levels required when called:    6
  3833 ;; This function calls:
  3834 ;;		_UART_buff_get
  3835 ;;		_UART_buff_put
  3836 ;; This function is called by:
  3837 ;;		_SYSTEM_Initialize
  3838 ;;		_putch
  3839 ;;		_sendData
  3840 ;;		_receiveData
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844                           	psect	text13
  3845  002BDC                     __ptext13:
  3846                           	opt stack 0
  3847  002BDC                     _Send_put:
  3848                           	opt stack 21
  3849                           
  3850                           ;incstack = 0
  3851                           ;Send_put@_data stored from wreg
  3852  002BDC  6E26               	movwf	Send_put@_data,c
  3853                           
  3854                           ;UART.c: 131: UART_buff_put(&output_buffer, _data);
  3855  002BDE  0E00               	movlw	low _output_buffer
  3856  002BE0  6E21               	movwf	UART_buff_put@_this,c
  3857  002BE2  0E05               	movlw	high _output_buffer
  3858  002BE4  6E22               	movwf	UART_buff_put@_this+1,c
  3859  002BE6  C026  F023         	movff	Send_put@_data,UART_buff_put@c
  3860  002BEA  EC1E  F00C         	call	_UART_buff_put
  3861                           
  3862                           ;UART.c: 132: if (Transmit_stall == 1) {
  3863  002BEE  0444               	decf	_Transmit_stall,w,c
  3864  002BF0  A4D8               	btfss	status,2,c
  3865  002BF2  0012               	return	
  3866                           
  3867                           ;UART.c: 133: Transmit_stall = 0;
  3868  002BF4  0E00               	movlw	0
  3869  002BF6  6E44               	movwf	_Transmit_stall,c
  3870                           
  3871                           ;UART.c: 134: TXREG1 = UART_buff_get(&output_buffer);
  3872  002BF8  0E00               	movlw	low _output_buffer
  3873  002BFA  6E21               	movwf	UART_buff_get@_this,c
  3874  002BFC  0E05               	movlw	high _output_buffer
  3875  002BFE  6E22               	movwf	UART_buff_get@_this+1,c
  3876  002C00  ECCB  F011         	call	_UART_buff_get	;wreg free
  3877  002C04  6EAD               	movwf	4013,c	;volatile
  3878                           
  3879                           ;UART.c: 135: PIE1bits.TX1IE = 1;
  3880  002C06  889D               	bsf	3997,4,c	;volatile
  3881  002C08  0012               	return	
  3882  002C0A                     __end_of_Send_put:
  3883                           	opt stack 0
  3884                           tosu	equ	0xFFF
  3885                           tosh	equ	0xFFE
  3886                           tosl	equ	0xFFD
  3887                           pclath	equ	0xFFA
  3888                           tblptru	equ	0xFF8
  3889                           tblptrh	equ	0xFF7
  3890                           tblptrl	equ	0xFF6
  3891                           tablat	equ	0xFF5
  3892                           prodh	equ	0xFF4
  3893                           prodl	equ	0xFF3
  3894                           intcon	equ	0xFF2
  3895                           postinc0	equ	0xFEE
  3896                           wreg	equ	0xFE8
  3897                           indf2	equ	0xFDF
  3898                           postinc2	equ	0xFDE
  3899                           postdec2	equ	0xFDD
  3900                           plusw2	equ	0xFDB
  3901                           fsr2h	equ	0xFDA
  3902                           fsr2l	equ	0xFD9
  3903                           status	equ	0xFD8
  3904                           
  3905 ;; *************** function _UART_buff_put *****************
  3906 ;; Defined at:
  3907 ;;		line 68 in file "UART.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  3910 ;;		 -> output_buffer(206), input_buffer(206), 
  3911 ;;  c               1   34[COMRAM] const unsigned char 
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;		None
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  1    wreg      void 
  3916 ;; Registers used:
  3917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3923 ;;      Params:         3       0       0       0       0       0       0
  3924 ;;      Locals:         0       0       0       0       0       0       0
  3925 ;;      Temps:          2       0       0       0       0       0       0
  3926 ;;      Totals:         5       0       0       0       0       0       0
  3927 ;;Total ram usage:        5 bytes
  3928 ;; Hardware stack levels used:    1
  3929 ;; Hardware stack levels required when called:    5
  3930 ;; This function calls:
  3931 ;;		_UART_buff_modulo_inc
  3932 ;; This function is called by:
  3933 ;;		_Send_put
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           	psect	text14
  3938  00183C                     __ptext14:
  3939                           	opt stack 0
  3940  00183C                     _UART_buff_put:
  3941                           	opt stack 21
  3942                           
  3943                           ;UART.c: 69: if (_this->count < 200) {
  3944                           
  3945                           ;incstack = 0
  3946  00183C  EE20 F0CC          	lfsr	2,204
  3947  001840  5021               	movf	UART_buff_put@_this,w,c
  3948  001842  26D9               	addwf	fsr2l,f,c
  3949  001844  5022               	movf	UART_buff_put@_this+1,w,c
  3950  001846  22DA               	addwfc	fsr2h,f,c
  3951  001848  0E01               	movlw	1
  3952  00184A  BEDB               	btfsc	plusw2,7,c
  3953  00184C  D007               	goto	l5186
  3954  00184E  0E01               	movlw	1
  3955  001850  50DB               	movf	plusw2,w,c
  3956  001852  E13A               	bnz	l5192
  3957  001854  0EC8               	movlw	200
  3958  001856  5CDE               	subwf	postinc2,w,c
  3959  001858  B0D8               	btfsc	status,0,c
  3960  00185A  D036               	goto	l5192
  3961  00185C                     l5186:
  3962                           
  3963                           ;UART.c: 70: _this->buf[_this->head] = c;
  3964  00185C  EE20 F0C8          	lfsr	2,200
  3965  001860  5021               	movf	UART_buff_put@_this,w,c
  3966  001862  26D9               	addwf	fsr2l,f,c
  3967  001864  5022               	movf	UART_buff_put@_this+1,w,c
  3968  001866  22DA               	addwfc	fsr2h,f,c
  3969  001868  CFDE F024          	movff	postinc2,??_UART_buff_put
  3970  00186C  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  3971  001870  5024               	movf	??_UART_buff_put,w,c
  3972  001872  2421               	addwf	UART_buff_put@_this,w,c
  3973  001874  6ED9               	movwf	fsr2l,c
  3974  001876  5025               	movf	??_UART_buff_put+1,w,c
  3975  001878  2022               	addwfc	UART_buff_put@_this+1,w,c
  3976  00187A  6EDA               	movwf	fsr2h,c
  3977  00187C  C023  FFDF         	movff	UART_buff_put@c,indf2
  3978                           
  3979                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
  3980  001880  EE20 F0C8          	lfsr	2,200
  3981  001884  5021               	movf	UART_buff_put@_this,w,c
  3982  001886  26D9               	addwf	fsr2l,f,c
  3983  001888  5022               	movf	UART_buff_put@_this+1,w,c
  3984  00188A  22DA               	addwfc	fsr2h,f,c
  3985  00188C  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  3986  001890  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  3987  001894  0E00               	movlw	0
  3988  001896  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  3989  001898  0EC8               	movlw	200
  3990  00189A  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  3991  00189C  EC30  F016         	call	_UART_buff_modulo_inc	;wreg free
  3992  0018A0  EE20 F0C8          	lfsr	2,200
  3993  0018A4  5021               	movf	UART_buff_put@_this,w,c
  3994  0018A6  26D9               	addwf	fsr2l,f,c
  3995  0018A8  5022               	movf	UART_buff_put@_this+1,w,c
  3996  0018AA  22DA               	addwfc	fsr2h,f,c
  3997  0018AC  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  3998  0018B0  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  3999                           
  4000                           ;UART.c: 72: ++_this->count;
  4001  0018B4  EE20 F0CC          	lfsr	2,204
  4002  0018B8  5021               	movf	UART_buff_put@_this,w,c
  4003  0018BA  26D9               	addwf	fsr2l,f,c
  4004  0018BC  5022               	movf	UART_buff_put@_this+1,w,c
  4005  0018BE  22DA               	addwfc	fsr2h,f,c
  4006  0018C0  2ADE               	incf	postinc2,f,c
  4007  0018C2  0E00               	movlw	0
  4008  0018C4  22DD               	addwfc	postdec2,f,c
  4009                           
  4010                           ;UART.c: 73: } else {
  4011  0018C6  0012               	return	
  4012  0018C8                     l5192:
  4013                           
  4014                           ;UART.c: 74: _this->buf[_this->head] = c;
  4015  0018C8  EE20 F0C8          	lfsr	2,200
  4016  0018CC  5021               	movf	UART_buff_put@_this,w,c
  4017  0018CE  26D9               	addwf	fsr2l,f,c
  4018  0018D0  5022               	movf	UART_buff_put@_this+1,w,c
  4019  0018D2  22DA               	addwfc	fsr2h,f,c
  4020  0018D4  CFDE F024          	movff	postinc2,??_UART_buff_put
  4021  0018D8  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  4022  0018DC  5024               	movf	??_UART_buff_put,w,c
  4023  0018DE  2421               	addwf	UART_buff_put@_this,w,c
  4024  0018E0  6ED9               	movwf	fsr2l,c
  4025  0018E2  5025               	movf	??_UART_buff_put+1,w,c
  4026  0018E4  2022               	addwfc	UART_buff_put@_this+1,w,c
  4027  0018E6  6EDA               	movwf	fsr2h,c
  4028  0018E8  C023  FFDF         	movff	UART_buff_put@c,indf2
  4029                           
  4030                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
  4031  0018EC  EE20 F0C8          	lfsr	2,200
  4032  0018F0  5021               	movf	UART_buff_put@_this,w,c
  4033  0018F2  26D9               	addwf	fsr2l,f,c
  4034  0018F4  5022               	movf	UART_buff_put@_this+1,w,c
  4035  0018F6  22DA               	addwfc	fsr2h,f,c
  4036  0018F8  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  4037  0018FC  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  4038  001900  0E00               	movlw	0
  4039  001902  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  4040  001904  0EC8               	movlw	200
  4041  001906  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  4042  001908  EC30  F016         	call	_UART_buff_modulo_inc	;wreg free
  4043  00190C  EE20 F0C8          	lfsr	2,200
  4044  001910  5021               	movf	UART_buff_put@_this,w,c
  4045  001912  26D9               	addwf	fsr2l,f,c
  4046  001914  5022               	movf	UART_buff_put@_this+1,w,c
  4047  001916  22DA               	addwfc	fsr2h,f,c
  4048  001918  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4049  00191C  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4050                           
  4051                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  4052  001920  EE20 F0CA          	lfsr	2,202
  4053  001924  5021               	movf	UART_buff_put@_this,w,c
  4054  001926  26D9               	addwf	fsr2l,f,c
  4055  001928  5022               	movf	UART_buff_put@_this+1,w,c
  4056  00192A  22DA               	addwfc	fsr2h,f,c
  4057  00192C  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  4058  001930  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  4059  001934  0E00               	movlw	0
  4060  001936  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  4061  001938  0EC8               	movlw	200
  4062  00193A  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  4063  00193C  EC30  F016         	call	_UART_buff_modulo_inc	;wreg free
  4064  001940  EE20 F0CA          	lfsr	2,202
  4065  001944  5021               	movf	UART_buff_put@_this,w,c
  4066  001946  26D9               	addwf	fsr2l,f,c
  4067  001948  5022               	movf	UART_buff_put@_this+1,w,c
  4068  00194A  22DA               	addwfc	fsr2h,f,c
  4069  00194C  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4070  001950  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4071  001954  0012               	return	
  4072  001956                     __end_of_UART_buff_put:
  4073                           	opt stack 0
  4074                           tosu	equ	0xFFF
  4075                           tosh	equ	0xFFE
  4076                           tosl	equ	0xFFD
  4077                           pclath	equ	0xFFA
  4078                           tblptru	equ	0xFF8
  4079                           tblptrh	equ	0xFF7
  4080                           tblptrl	equ	0xFF6
  4081                           tablat	equ	0xFF5
  4082                           prodh	equ	0xFF4
  4083                           prodl	equ	0xFF3
  4084                           intcon	equ	0xFF2
  4085                           postinc0	equ	0xFEE
  4086                           wreg	equ	0xFE8
  4087                           indf2	equ	0xFDF
  4088                           postinc2	equ	0xFDE
  4089                           postdec2	equ	0xFDD
  4090                           plusw2	equ	0xFDB
  4091                           fsr2h	equ	0xFDA
  4092                           fsr2l	equ	0xFD9
  4093                           status	equ	0xFD8
  4094                           
  4095 ;; *************** function _Receive_peek *****************
  4096 ;; Defined at:
  4097 ;;		line 118 in file "UART.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;		None
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;		None
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  1    wreg      unsigned char 
  4104 ;; Registers used:
  4105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4111 ;;      Params:         0       0       0       0       0       0       0
  4112 ;;      Locals:         0       0       0       0       0       0       0
  4113 ;;      Temps:          0       0       0       0       0       0       0
  4114 ;;      Totals:         0       0       0       0       0       0       0
  4115 ;;Total ram usage:        0 bytes
  4116 ;; Hardware stack levels used:    1
  4117 ;; Hardware stack levels required when called:    5
  4118 ;; This function calls:
  4119 ;;		_UART_buff_peek
  4120 ;; This function is called by:
  4121 ;;		_SYSTEM_Initialize
  4122 ;;		_receiveData
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           	psect	text15
  4127  002E56                     __ptext15:
  4128                           	opt stack 0
  4129  002E56                     _Receive_peek:
  4130                           	opt stack 23
  4131                           
  4132                           ;UART.c: 119: return UART_buff_peek(&input_buffer);
  4133                           
  4134                           ;incstack = 0
  4135  002E56  0E00               	movlw	low _input_buffer
  4136  002E58  6E1B               	movwf	UART_buff_peek@_this,c
  4137  002E5A  0E04               	movlw	high _input_buffer
  4138  002E5C  6E1C               	movwf	UART_buff_peek@_this+1,c
  4139  002E5E  EC6E  F016         	call	_UART_buff_peek	;wreg free
  4140  002E62  0012               	return	
  4141  002E64                     __end_of_Receive_peek:
  4142                           	opt stack 0
  4143                           tosu	equ	0xFFF
  4144                           tosh	equ	0xFFE
  4145                           tosl	equ	0xFFD
  4146                           pclath	equ	0xFFA
  4147                           tblptru	equ	0xFF8
  4148                           tblptrh	equ	0xFF7
  4149                           tblptrl	equ	0xFF6
  4150                           tablat	equ	0xFF5
  4151                           prodh	equ	0xFF4
  4152                           prodl	equ	0xFF3
  4153                           intcon	equ	0xFF2
  4154                           postinc0	equ	0xFEE
  4155                           wreg	equ	0xFE8
  4156                           indf2	equ	0xFDF
  4157                           postinc2	equ	0xFDE
  4158                           postdec2	equ	0xFDD
  4159                           plusw2	equ	0xFDB
  4160                           fsr2h	equ	0xFDA
  4161                           fsr2l	equ	0xFD9
  4162                           status	equ	0xFD8
  4163                           
  4164 ;; *************** function _UART_buff_peek *****************
  4165 ;; Defined at:
  4166 ;;		line 114 in file "UART.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  4169 ;;		 -> input_buffer(206), 
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;		None
  4172 ;; Return value:  Size  Location     Type
  4173 ;;                  1    wreg      unsigned char 
  4174 ;; Registers used:
  4175 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4181 ;;      Params:         2       0       0       0       0       0       0
  4182 ;;      Locals:         0       0       0       0       0       0       0
  4183 ;;      Temps:          2       0       0       0       0       0       0
  4184 ;;      Totals:         4       0       0       0       0       0       0
  4185 ;;Total ram usage:        4 bytes
  4186 ;; Hardware stack levels used:    1
  4187 ;; Hardware stack levels required when called:    4
  4188 ;; This function calls:
  4189 ;;		Nothing
  4190 ;; This function is called by:
  4191 ;;		_Receive_peek
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           	psect	text16
  4196  002CDC                     __ptext16:
  4197                           	opt stack 0
  4198  002CDC                     _UART_buff_peek:
  4199                           	opt stack 23
  4200                           
  4201                           ;UART.c: 115: return _this->buf[_this->tail];
  4202                           
  4203                           ;incstack = 0
  4204  002CDC  EE20 F0CA          	lfsr	2,202
  4205  002CE0  501B               	movf	UART_buff_peek@_this,w,c
  4206  002CE2  26D9               	addwf	fsr2l,f,c
  4207  002CE4  501C               	movf	UART_buff_peek@_this+1,w,c
  4208  002CE6  22DA               	addwfc	fsr2h,f,c
  4209  002CE8  CFDE F01D          	movff	postinc2,??_UART_buff_peek
  4210  002CEC  CFDD F01E          	movff	postdec2,??_UART_buff_peek+1
  4211  002CF0  501D               	movf	??_UART_buff_peek,w,c
  4212  002CF2  241B               	addwf	UART_buff_peek@_this,w,c
  4213  002CF4  6ED9               	movwf	fsr2l,c
  4214  002CF6  501E               	movf	??_UART_buff_peek+1,w,c
  4215  002CF8  201C               	addwfc	UART_buff_peek@_this+1,w,c
  4216  002CFA  6EDA               	movwf	fsr2h,c
  4217  002CFC  50DF               	movf	indf2,w,c
  4218  002CFE  0012               	return	
  4219  002D00                     __end_of_UART_buff_peek:
  4220                           	opt stack 0
  4221                           tosu	equ	0xFFF
  4222                           tosh	equ	0xFFE
  4223                           tosl	equ	0xFFD
  4224                           pclath	equ	0xFFA
  4225                           tblptru	equ	0xFF8
  4226                           tblptrh	equ	0xFF7
  4227                           tblptrl	equ	0xFF6
  4228                           tablat	equ	0xFF5
  4229                           prodh	equ	0xFF4
  4230                           prodl	equ	0xFF3
  4231                           intcon	equ	0xFF2
  4232                           postinc0	equ	0xFEE
  4233                           wreg	equ	0xFE8
  4234                           indf2	equ	0xFDF
  4235                           postinc2	equ	0xFDE
  4236                           postdec2	equ	0xFDD
  4237                           plusw2	equ	0xFDB
  4238                           fsr2h	equ	0xFDA
  4239                           fsr2l	equ	0xFD9
  4240                           status	equ	0xFD8
  4241                           
  4242 ;; *************** function _CRCcheck *****************
  4243 ;; Defined at:
  4244 ;;		line 373 in file "FastTransfer.c"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;		None
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;  rt              2    5[BANK0 ] int 
  4249 ;;  arrayHolder     3    2[BANK0 ] unsigned char [3]
  4250 ;;  calculatedCR    1    1[BANK0 ] unsigned char 
  4251 ;;  SentCRC         1    0[BANK0 ] unsigned char 
  4252 ;; Return value:  Size  Location     Type
  4253 ;;                  1    wreg      void 
  4254 ;; Registers used:
  4255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  4256 ;; Tracked objects:
  4257 ;;		On entry : 0/0
  4258 ;;		On exit  : 0/0
  4259 ;;		Unchanged: 0/0
  4260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4261 ;;      Params:         0       0       0       0       0       0       0
  4262 ;;      Locals:         0       7       0       0       0       0       0
  4263 ;;      Temps:          0       0       0       0       0       0       0
  4264 ;;      Totals:         0       7       0       0       0       0       0
  4265 ;;Total ram usage:        7 bytes
  4266 ;; Hardware stack levels used:    1
  4267 ;; Hardware stack levels required when called:    7
  4268 ;; This function calls:
  4269 ;;		Absolute function
  4270 ;;		_CRC8
  4271 ;;		_Receive_available
  4272 ;;		_Receive_get
  4273 ;;		_crcBufS_get
  4274 ;;		_crcBufS_status_put
  4275 ;; This function is called by:
  4276 ;;		_receiveData
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text17
  4281  001214                     __ptext17:
  4282                           	opt stack 0
  4283  001214                     _CRCcheck:
  4284                           	opt stack 21
  4285  001214                     l5618:
  4286  001214  D801               	call	u5678
  4287  001216  D00A               	goto	u5679
  4288  001218                     u5678:
  4289  001218  0005               	push	
  4290  00121A  6EFA               	movwf	pclath,c
  4291  00121C  502E               	movf	_serial_available,w,c
  4292  00121E  6EFD               	movwf	tosl,c
  4293  001220  502F               	movf	_serial_available+1,w,c
  4294  001222  6EFE               	movwf	tosh,c
  4295  001224  50F8               	movf	tblptru,w,c
  4296  001226  6EFF               	movwf	tosu,c
  4297  001228  50FA               	movf	pclath,w,c
  4298  00122A  0012               	return		;indir
  4299  00122C                     u5679:
  4300  00122C  BE1E               	btfsc	?_Receive_available+1,7,c
  4301  00122E  D7F2               	goto	l5618
  4302  001230  501E               	movf	?_Receive_available+1,w,c
  4303  001232  E104               	bnz	l5620
  4304  001234  0E04               	movlw	4
  4305  001236  5C1D               	subwf	?_Receive_available,w,c
  4306  001238  A0D8               	btfss	status,0,c
  4307  00123A  D7EC               	goto	l5618
  4308  00123C                     l5620:
  4309                           
  4310                           ;FastTransfer.c: 377: unsigned char arrayHolder[3];
  4311                           ;FastTransfer.c: 378: arrayHolder[0] = serial_read();
  4312  00123C  D801               	call	u5698
  4313  00123E  D00A               	goto	u5699
  4314  001240                     u5698:
  4315  001240  0005               	push	
  4316  001242  6EFA               	movwf	pclath,c
  4317  001244  5030               	movf	_serial_read,w,c
  4318  001246  6EFD               	movwf	tosl,c
  4319  001248  5031               	movf	_serial_read+1,w,c
  4320  00124A  6EFE               	movwf	tosh,c
  4321  00124C  50F8               	movf	tblptru,w,c
  4322  00124E  6EFF               	movwf	tosu,c
  4323  001250  50FA               	movf	pclath,w,c
  4324  001252  0012               	return		;indir
  4325  001254                     u5699:
  4326  001254  0100               	movlb	0	; () banked
  4327  001256  6FF0               	movwf	CRCcheck@arrayHolder& (0+255),b
  4328                           
  4329                           ;FastTransfer.c: 379: arrayHolder[1] = serial_read();
  4330  001258  D801               	call	u5708
  4331  00125A  D00A               	goto	u5709
  4332  00125C                     u5708:
  4333  00125C  0005               	push	
  4334  00125E  6EFA               	movwf	pclath,c
  4335  001260  5030               	movf	_serial_read,w,c
  4336  001262  6EFD               	movwf	tosl,c
  4337  001264  5031               	movf	_serial_read+1,w,c
  4338  001266  6EFE               	movwf	tosh,c
  4339  001268  50F8               	movf	tblptru,w,c
  4340  00126A  6EFF               	movwf	tosu,c
  4341  00126C  50FA               	movf	pclath,w,c
  4342  00126E  0012               	return		;indir
  4343  001270                     u5709:
  4344  001270  0100               	movlb	0	; () banked
  4345  001272  6FF1               	movwf	(CRCcheck@arrayHolder+1)& (0+255),b
  4346                           
  4347                           ;FastTransfer.c: 380: arrayHolder[2] = serial_read();
  4348  001274  D801               	call	u5718
  4349  001276  D00A               	goto	u5719
  4350  001278                     u5718:
  4351  001278  0005               	push	
  4352  00127A  6EFA               	movwf	pclath,c
  4353  00127C  5030               	movf	_serial_read,w,c
  4354  00127E  6EFD               	movwf	tosl,c
  4355  001280  5031               	movf	_serial_read+1,w,c
  4356  001282  6EFE               	movwf	tosh,c
  4357  001284  50F8               	movf	tblptru,w,c
  4358  001286  6EFF               	movwf	tosu,c
  4359  001288  50FA               	movf	pclath,w,c
  4360  00128A  0012               	return		;indir
  4361  00128C                     u5719:
  4362  00128C  0100               	movlb	0	; () banked
  4363  00128E  6FF2               	movwf	(CRCcheck@arrayHolder+2)& (0+255),b
  4364                           
  4365                           ;FastTransfer.c: 381: unsigned char SentCRC = serial_read();
  4366  001290  D801               	call	u5728
  4367  001292  D00A               	goto	u5729
  4368  001294                     u5728:
  4369  001294  0005               	push	
  4370  001296  6EFA               	movwf	pclath,c
  4371  001298  5030               	movf	_serial_read,w,c
  4372  00129A  6EFD               	movwf	tosl,c
  4373  00129C  5031               	movf	_serial_read+1,w,c
  4374  00129E  6EFE               	movwf	tosh,c
  4375  0012A0  50F8               	movf	tblptru,w,c
  4376  0012A2  6EFF               	movwf	tosu,c
  4377  0012A4  50FA               	movf	pclath,w,c
  4378  0012A6  0012               	return		;indir
  4379  0012A8                     u5729:
  4380  0012A8  0100               	movlb	0	; () banked
  4381  0012AA  6FEE               	movwf	CRCcheck@SentCRC& (0+255),b
  4382                           
  4383                           ; BSR set to: 0
  4384                           ;FastTransfer.c: 382: unsigned char calculatedCRC = CRC8(arrayHolder, 3);
  4385  0012AC  0EF0               	movlw	low CRCcheck@arrayHolder
  4386  0012AE  6E1B               	movwf	CRC8@data,c
  4387  0012B0  0E00               	movlw	high CRCcheck@arrayHolder
  4388  0012B2  6E1C               	movwf	CRC8@data+1,c
  4389  0012B4  0E03               	movlw	3
  4390  0012B6  6E1D               	movwf	CRC8@len,c
  4391  0012B8  ECD8  F014         	call	_CRC8	;wreg free
  4392  0012BC  0100               	movlb	0	; () banked
  4393  0012BE  6FEF               	movwf	CRCcheck@calculatedCRC& (0+255),b
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;FastTransfer.c: 385: if (SentCRC == calculatedCRC) {
  4397  0012C0  0100               	movlb	0	; () banked
  4398  0012C2  51EF               	movf	CRCcheck@calculatedCRC& (0+255),w,b
  4399  0012C4  0100               	movlb	0	; () banked
  4400  0012C6  19EE               	xorwf	CRCcheck@SentCRC& (0+255),w,b
  4401  0012C8  A4D8               	btfss	status,2,c
  4402  0012CA  D04E               	goto	l5650
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;FastTransfer.c: 387: int rt;
  4406                           ;FastTransfer.c: 388: for (rt = 0; rt < 5; rt++) {
  4407  0012CC  0E00               	movlw	0
  4408  0012CE  0100               	movlb	0	; () banked
  4409  0012D0  6FF4               	movwf	(CRCcheck@rt+1)& (0+255),b
  4410  0012D2  0E00               	movlw	0
  4411  0012D4  6FF3               	movwf	CRCcheck@rt& (0+255),b
  4412  0012D6                     l5628:
  4413                           
  4414                           ; BSR set to: 0
  4415  0012D6  0100               	movlb	0	; () banked
  4416  0012D8  BFF4               	btfsc	(CRCcheck@rt+1)& (0+255),7,b
  4417  0012DA  D008               	goto	l5632
  4418  0012DC  0100               	movlb	0	; () banked
  4419  0012DE  51F4               	movf	(CRCcheck@rt+1)& (0+255),w,b
  4420  0012E0  E147               	bnz	l942
  4421  0012E2  0E05               	movlw	5
  4422  0012E4  0100               	movlb	0	; () banked
  4423  0012E6  5DF3               	subwf	CRCcheck@rt& (0+255),w,b
  4424  0012E8  B0D8               	btfsc	status,0,c
  4425  0012EA  0012               	return	
  4426  0012EC                     l5632:
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;FastTransfer.c: 389: if (returnAddress == crcBufS_get(&crc_buffer, rt, 0)) {
  4430  0012EC  0E28               	movlw	low _crc_buffer
  4431  0012EE  6E1B               	movwf	crcBufS_get@_this,c
  4432  0012F0  0E01               	movlw	high _crc_buffer
  4433  0012F2  6E1C               	movwf	crcBufS_get@_this+1,c
  4434  0012F4  C0F3  F01D         	movff	CRCcheck@rt,crcBufS_get@time
  4435  0012F8  0E00               	movlw	0
  4436  0012FA  6E1E               	movwf	crcBufS_get@space,c
  4437  0012FC  EC3D  F00E         	call	_crcBufS_get	;wreg free
  4438  001300  183C               	xorwf	_returnAddress,w,c
  4439  001302  A4D8               	btfss	status,2,c
  4440  001304  D02D               	goto	l5646
  4441                           
  4442                           ;FastTransfer.c: 390: if (arrayHolder[2] == crcBufS_get(&crc_buffer, rt, 1)) {
  4443  001306  0E28               	movlw	low _crc_buffer
  4444  001308  6E1B               	movwf	crcBufS_get@_this,c
  4445  00130A  0E01               	movlw	high _crc_buffer
  4446  00130C  6E1C               	movwf	crcBufS_get@_this+1,c
  4447  00130E  C0F3  F01D         	movff	CRCcheck@rt,crcBufS_get@time
  4448  001312  0E01               	movlw	1
  4449  001314  6E1E               	movwf	crcBufS_get@space,c
  4450  001316  EC3D  F00E         	call	_crcBufS_get	;wreg free
  4451  00131A  0100               	movlb	0	; () banked
  4452  00131C  19F2               	xorwf	(CRCcheck@arrayHolder+2)& (0+255),w,b
  4453  00131E  A4D8               	btfss	status,2,c
  4454  001320  D01F               	goto	l5646
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;FastTransfer.c: 391: if (arrayHolder[1] == 1) {
  4458  001322  0100               	movlb	0	; () banked
  4459  001324  05F1               	decf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  4460  001326  A4D8               	btfss	status,2,c
  4461  001328  D00B               	goto	l5642
  4462                           
  4463                           ; BSR set to: 0
  4464                           ;FastTransfer.c: 392: crcBufS_status_put(&crc_buffer, rt, 1);
  4465  00132A  0E28               	movlw	low _crc_buffer
  4466  00132C  6E1B               	movwf	crcBufS_status_put@_this,c
  4467  00132E  0E01               	movlw	high _crc_buffer
  4468  001330  6E1C               	movwf	crcBufS_status_put@_this+1,c
  4469  001332  C0F3  F01D         	movff	CRCcheck@rt,crcBufS_status_put@time
  4470  001336  0E01               	movlw	1
  4471  001338  6E1E               	movwf	crcBufS_status_put@status,c
  4472  00133A  EC1A  F00F         	call	_crcBufS_status_put	;wreg free
  4473                           
  4474                           ;FastTransfer.c: 393: break;
  4475  00133E  0012               	return	
  4476  001340                     l5642:
  4477  001340  0E02               	movlw	2
  4478  001342  0100               	movlb	0	; () banked
  4479  001344  19F1               	xorwf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  4480  001346  A4D8               	btfss	status,2,c
  4481  001348  D00B               	goto	l5646
  4482                           
  4483                           ; BSR set to: 0
  4484                           ;FastTransfer.c: 395: crcBufS_status_put(&crc_buffer, rt, 2);
  4485  00134A  0E28               	movlw	low _crc_buffer
  4486  00134C  6E1B               	movwf	crcBufS_status_put@_this,c
  4487  00134E  0E01               	movlw	high _crc_buffer
  4488  001350  6E1C               	movwf	crcBufS_status_put@_this+1,c
  4489  001352  C0F3  F01D         	movff	CRCcheck@rt,crcBufS_status_put@time
  4490  001356  0E02               	movlw	2
  4491  001358  6E1E               	movwf	crcBufS_status_put@status,c
  4492  00135A  EC1A  F00F         	call	_crcBufS_status_put	;wreg free
  4493                           
  4494                           ;FastTransfer.c: 396: break;
  4495  00135E  0012               	return	
  4496  001360                     l5646:
  4497  001360  0100               	movlb	0	; () banked
  4498  001362  4BF3               	infsnz	CRCcheck@rt& (0+255),f,b
  4499  001364  2BF4               	incf	(CRCcheck@rt+1)& (0+255),f,b
  4500  001366  D7B7               	goto	l5628
  4501  001368                     l5650:
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;FastTransfer.c: 402: crcErrorCounter++;
  4505  001368  0100               	movlb	0	; () banked
  4506  00136A  4BC9               	infsnz	_crcErrorCounter& (0+255),f,b
  4507  00136C  2BCA               	incf	(_crcErrorCounter+1)& (0+255),f,b
  4508  00136E  0012               	return	
  4509  001370                     l942:
  4510  001370  0012               	return		;funcret
  4511  001372                     __end_of_CRCcheck:
  4512                           	opt stack 0
  4513                           tosu	equ	0xFFF
  4514                           tosh	equ	0xFFE
  4515                           tosl	equ	0xFFD
  4516                           pclath	equ	0xFFA
  4517                           tblptru	equ	0xFF8
  4518                           tblptrh	equ	0xFF7
  4519                           tblptrl	equ	0xFF6
  4520                           tablat	equ	0xFF5
  4521                           prodh	equ	0xFF4
  4522                           prodl	equ	0xFF3
  4523                           intcon	equ	0xFF2
  4524                           postinc0	equ	0xFEE
  4525                           wreg	equ	0xFE8
  4526                           indf2	equ	0xFDF
  4527                           postinc2	equ	0xFDE
  4528                           postdec2	equ	0xFDD
  4529                           plusw2	equ	0xFDB
  4530                           fsr2h	equ	0xFDA
  4531                           fsr2l	equ	0xFD9
  4532                           status	equ	0xFD8
  4533                           
  4534 ;; *************** function _crcBufS_status_put *****************
  4535 ;; Defined at:
  4536 ;;		line 336 in file "FastTransfer.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  4539 ;;		 -> crc_buffer(17), 
  4540 ;;  time            1   28[COMRAM] unsigned char 
  4541 ;;  status          1   29[COMRAM] unsigned char 
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;  wantedTime      2   34[COMRAM] int 
  4544 ;; Return value:  Size  Location     Type
  4545 ;;                  1    wreg      void 
  4546 ;; Registers used:
  4547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4553 ;;      Params:         4       0       0       0       0       0       0
  4554 ;;      Locals:         2       0       0       0       0       0       0
  4555 ;;      Temps:          4       0       0       0       0       0       0
  4556 ;;      Totals:        10       0       0       0       0       0       0
  4557 ;;Total ram usage:       10 bytes
  4558 ;; Hardware stack levels used:    1
  4559 ;; Hardware stack levels required when called:    4
  4560 ;; This function calls:
  4561 ;;		Nothing
  4562 ;; This function is called by:
  4563 ;;		_CRCcheck
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567                           	psect	text18
  4568  001E34                     __ptext18:
  4569                           	opt stack 0
  4570  001E34                     _crcBufS_status_put:
  4571                           	opt stack 23
  4572                           
  4573                           ;FastTransfer.c: 337: if (time >= 5) {
  4574                           
  4575                           ;incstack = 0
  4576  001E34  0E04               	movlw	4
  4577  001E36  641D               	cpfsgt	crcBufS_status_put@time,c
  4578  001E38  D002               	goto	l5388
  4579                           
  4580                           ;FastTransfer.c: 338: time = 5 - 1;
  4581  001E3A  0E04               	movlw	4
  4582  001E3C  6E1D               	movwf	crcBufS_status_put@time,c
  4583  001E3E                     l5388:
  4584                           
  4585                           ;FastTransfer.c: 339: }
  4586                           ;FastTransfer.c: 340: time = time + 1;
  4587  001E3E  281D               	incf	crcBufS_status_put@time,w,c
  4588  001E40  6E1D               	movwf	crcBufS_status_put@time,c
  4589                           
  4590                           ;FastTransfer.c: 341: int wantedTime = time * 3;
  4591  001E42  501D               	movf	crcBufS_status_put@time,w,c
  4592  001E44  0D03               	mullw	3
  4593  001E46  CFF3 F023          	movff	prodl,crcBufS_status_put@wantedTime
  4594  001E4A  CFF4 F024          	movff	prodh,crcBufS_status_put@wantedTime+1
  4595                           
  4596                           ;FastTransfer.c: 342: if (wantedTime > _this->head) {
  4597  001E4E  EE20 F00F          	lfsr	2,15
  4598  001E52  501B               	movf	crcBufS_status_put@_this,w,c
  4599  001E54  26D9               	addwf	fsr2l,f,c
  4600  001E56  501C               	movf	crcBufS_status_put@_this+1,w,c
  4601  001E58  22DA               	addwfc	fsr2h,f,c
  4602  001E5A  5023               	movf	crcBufS_status_put@wantedTime,w,c
  4603  001E5C  5CDE               	subwf	postinc2,w,c
  4604  001E5E  50DE               	movf	postinc2,w,c
  4605  001E60  0A80               	xorlw	128
  4606  001E62  6E21               	movwf	(??_crcBufS_status_put+2)& (0+255),c
  4607  001E64  5024               	movf	crcBufS_status_put@wantedTime+1,w,c
  4608  001E66  0A80               	xorlw	128
  4609  001E68  5821               	subwfb	(??_crcBufS_status_put+2)& (0+255),w,c
  4610  001E6A  B0D8               	btfsc	status,0,c
  4611  001E6C  D02B               	goto	l5396
  4612                           
  4613                           ;FastTransfer.c: 343: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  4614  001E6E  EE20 F00F          	lfsr	2,15
  4615  001E72  501B               	movf	crcBufS_status_put@_this,w,c
  4616  001E74  26D9               	addwf	fsr2l,f,c
  4617  001E76  501C               	movf	crcBufS_status_put@_this+1,w,c
  4618  001E78  22DA               	addwfc	fsr2h,f,c
  4619  001E7A  CFDE F01F          	movff	postinc2,??_crcBufS_status_put
  4620  001E7E  CFDD F020          	movff	postdec2,??_crcBufS_status_put+1
  4621  001E82  1E1F               	comf	??_crcBufS_status_put,f,c
  4622  001E84  1E20               	comf	??_crcBufS_status_put+1,f,c
  4623  001E86  4A1F               	infsnz	??_crcBufS_status_put,f,c
  4624  001E88  2A20               	incf	??_crcBufS_status_put+1,f,c
  4625  001E8A  5023               	movf	crcBufS_status_put@wantedTime,w,c
  4626  001E8C  261F               	addwf	??_crcBufS_status_put,f,c
  4627  001E8E  5024               	movf	crcBufS_status_put@wantedTime+1,w,c
  4628  001E90  2220               	addwfc	??_crcBufS_status_put+1,f,c
  4629  001E92  1E1F               	comf	??_crcBufS_status_put,f,c
  4630  001E94  1E20               	comf	??_crcBufS_status_put+1,f,c
  4631  001E96  4A1F               	infsnz	??_crcBufS_status_put,f,c
  4632  001E98  2A20               	incf	??_crcBufS_status_put+1,f,c
  4633  001E9A  0E0F               	movlw	15
  4634  001E9C  241F               	addwf	??_crcBufS_status_put,w,c
  4635  001E9E  6E23               	movwf	crcBufS_status_put@wantedTime,c
  4636  001EA0  0E00               	movlw	0
  4637  001EA2  2020               	addwfc	??_crcBufS_status_put+1,w,c
  4638  001EA4  6E24               	movwf	crcBufS_status_put@wantedTime+1,c
  4639                           
  4640                           ;FastTransfer.c: 344: _this->buf[(wantedTime + 2)] = status;
  4641  001EA6  0E02               	movlw	2
  4642  001EA8  2423               	addwf	crcBufS_status_put@wantedTime,w,c
  4643  001EAA  6E1F               	movwf	??_crcBufS_status_put& (0+255),c
  4644  001EAC  0E00               	movlw	0
  4645  001EAE  2024               	addwfc	crcBufS_status_put@wantedTime+1,w,c
  4646  001EB0  6E20               	movwf	(??_crcBufS_status_put+1)& (0+255),c
  4647  001EB2  501F               	movf	??_crcBufS_status_put,w,c
  4648  001EB4  241B               	addwf	crcBufS_status_put@_this,w,c
  4649  001EB6  6ED9               	movwf	fsr2l,c
  4650  001EB8  5020               	movf	??_crcBufS_status_put+1,w,c
  4651  001EBA  201C               	addwfc	crcBufS_status_put@_this+1,w,c
  4652  001EBC  6EDA               	movwf	fsr2h,c
  4653  001EBE  C01E  FFDF         	movff	crcBufS_status_put@status,indf2
  4654                           
  4655                           ;FastTransfer.c: 345: } else {
  4656  001EC2  0012               	return	
  4657  001EC4                     l5396:
  4658                           
  4659                           ;FastTransfer.c: 346: _this->buf[(_this->head - wantedTime) + 2] = status;
  4660  001EC4  EE20 F00F          	lfsr	2,15
  4661  001EC8  501B               	movf	crcBufS_status_put@_this,w,c
  4662  001ECA  26D9               	addwf	fsr2l,f,c
  4663  001ECC  501C               	movf	crcBufS_status_put@_this+1,w,c
  4664  001ECE  22DA               	addwfc	fsr2h,f,c
  4665  001ED0  CFDE F01F          	movff	postinc2,??_crcBufS_status_put
  4666  001ED4  CFDD F020          	movff	postdec2,??_crcBufS_status_put+1
  4667  001ED8  C023  F021         	movff	crcBufS_status_put@wantedTime,??_crcBufS_status_put+2
  4668  001EDC  C024  F022         	movff	crcBufS_status_put@wantedTime+1,??_crcBufS_status_put+3
  4669  001EE0  1E21               	comf	??_crcBufS_status_put+2,f,c
  4670  001EE2  1E22               	comf	??_crcBufS_status_put+3,f,c
  4671  001EE4  4A21               	infsnz	??_crcBufS_status_put+2,f,c
  4672  001EE6  2A22               	incf	??_crcBufS_status_put+3,f,c
  4673  001EE8  501F               	movf	??_crcBufS_status_put,w,c
  4674  001EEA  2621               	addwf	??_crcBufS_status_put+2,f,c
  4675  001EEC  5020               	movf	??_crcBufS_status_put+1,w,c
  4676  001EEE  2222               	addwfc	??_crcBufS_status_put+3,f,c
  4677  001EF0  0E02               	movlw	2
  4678  001EF2  2621               	addwf	??_crcBufS_status_put+2,f,c
  4679  001EF4  0E00               	movlw	0
  4680  001EF6  2222               	addwfc	??_crcBufS_status_put+3,f,c
  4681  001EF8  5021               	movf	??_crcBufS_status_put+2,w,c
  4682  001EFA  241B               	addwf	crcBufS_status_put@_this,w,c
  4683  001EFC  6ED9               	movwf	fsr2l,c
  4684  001EFE  5022               	movf	??_crcBufS_status_put+3,w,c
  4685  001F00  201C               	addwfc	crcBufS_status_put@_this+1,w,c
  4686  001F02  6EDA               	movwf	fsr2h,c
  4687  001F04  C01E  FFDF         	movff	crcBufS_status_put@status,indf2
  4688  001F08  0012               	return	
  4689  001F0A                     __end_of_crcBufS_status_put:
  4690                           	opt stack 0
  4691                           tosu	equ	0xFFF
  4692                           tosh	equ	0xFFE
  4693                           tosl	equ	0xFFD
  4694                           pclath	equ	0xFFA
  4695                           tblptru	equ	0xFF8
  4696                           tblptrh	equ	0xFF7
  4697                           tblptrl	equ	0xFF6
  4698                           tablat	equ	0xFF5
  4699                           prodh	equ	0xFF4
  4700                           prodl	equ	0xFF3
  4701                           intcon	equ	0xFF2
  4702                           postinc0	equ	0xFEE
  4703                           wreg	equ	0xFE8
  4704                           indf2	equ	0xFDF
  4705                           postinc2	equ	0xFDE
  4706                           postdec2	equ	0xFDD
  4707                           plusw2	equ	0xFDB
  4708                           fsr2h	equ	0xFDA
  4709                           fsr2l	equ	0xFD9
  4710                           status	equ	0xFD8
  4711                           
  4712 ;; *************** function _crcBufS_get *****************
  4713 ;; Defined at:
  4714 ;;		line 353 in file "FastTransfer.c"
  4715 ;; Parameters:    Size  Location     Type
  4716 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  4717 ;;		 -> crc_buffer(17), 
  4718 ;;  time            1   28[COMRAM] unsigned char 
  4719 ;;  space           1   29[COMRAM] unsigned char 
  4720 ;; Auto vars:     Size  Location     Type
  4721 ;;  wantedTime      2   36[COMRAM] int 
  4722 ;; Return value:  Size  Location     Type
  4723 ;;                  1    wreg      unsigned char 
  4724 ;; Registers used:
  4725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4726 ;; Tracked objects:
  4727 ;;		On entry : 0/0
  4728 ;;		On exit  : 0/0
  4729 ;;		Unchanged: 0/0
  4730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4731 ;;      Params:         4       0       0       0       0       0       0
  4732 ;;      Locals:         2       0       0       0       0       0       0
  4733 ;;      Temps:          6       0       0       0       0       0       0
  4734 ;;      Totals:        12       0       0       0       0       0       0
  4735 ;;Total ram usage:       12 bytes
  4736 ;; Hardware stack levels used:    1
  4737 ;; Hardware stack levels required when called:    4
  4738 ;; This function calls:
  4739 ;;		Nothing
  4740 ;; This function is called by:
  4741 ;;		_CRCcheck
  4742 ;;		_AKNAK
  4743 ;; This function uses a non-reentrant model
  4744 ;;
  4745                           
  4746                           	psect	text19
  4747  001C7A                     __ptext19:
  4748                           	opt stack 0
  4749  001C7A                     _crcBufS_get:
  4750                           	opt stack 23
  4751                           
  4752                           ;FastTransfer.c: 354: if (time >= 5) {
  4753                           
  4754                           ;incstack = 0
  4755  001C7A  0E04               	movlw	4
  4756  001C7C  641D               	cpfsgt	crcBufS_get@time,c
  4757  001C7E  D002               	goto	l5364
  4758                           
  4759                           ;FastTransfer.c: 355: time = 5 - 1;
  4760  001C80  0E04               	movlw	4
  4761  001C82  6E1D               	movwf	crcBufS_get@time,c
  4762  001C84                     l5364:
  4763                           
  4764                           ;FastTransfer.c: 356: }
  4765                           ;FastTransfer.c: 357: if (space >= 3) {
  4766  001C84  0E02               	movlw	2
  4767  001C86  641E               	cpfsgt	crcBufS_get@space,c
  4768  001C88  D002               	goto	l5368
  4769                           
  4770                           ;FastTransfer.c: 358: space = 3 - 1;
  4771  001C8A  0E02               	movlw	2
  4772  001C8C  6E1E               	movwf	crcBufS_get@space,c
  4773  001C8E                     l5368:
  4774                           
  4775                           ;FastTransfer.c: 359: }
  4776                           ;FastTransfer.c: 360: time = time + 1;
  4777  001C8E  281D               	incf	crcBufS_get@time,w,c
  4778  001C90  6E1D               	movwf	crcBufS_get@time,c
  4779                           
  4780                           ;FastTransfer.c: 361: int wantedTime = time * 3;
  4781  001C92  501D               	movf	crcBufS_get@time,w,c
  4782  001C94  0D03               	mullw	3
  4783  001C96  CFF3 F025          	movff	prodl,crcBufS_get@wantedTime
  4784  001C9A  CFF4 F026          	movff	prodh,crcBufS_get@wantedTime+1
  4785                           
  4786                           ;FastTransfer.c: 362: if (wantedTime > _this->head) {
  4787  001C9E  EE20 F00F          	lfsr	2,15
  4788  001CA2  501B               	movf	crcBufS_get@_this,w,c
  4789  001CA4  26D9               	addwf	fsr2l,f,c
  4790  001CA6  501C               	movf	crcBufS_get@_this+1,w,c
  4791  001CA8  22DA               	addwfc	fsr2h,f,c
  4792  001CAA  5025               	movf	crcBufS_get@wantedTime,w,c
  4793  001CAC  5CDE               	subwf	postinc2,w,c
  4794  001CAE  50DE               	movf	postinc2,w,c
  4795  001CB0  0A80               	xorlw	128
  4796  001CB2  6E21               	movwf	(??_crcBufS_get+2)& (0+255),c
  4797  001CB4  5026               	movf	crcBufS_get@wantedTime+1,w,c
  4798  001CB6  0A80               	xorlw	128
  4799  001CB8  5821               	subwfb	(??_crcBufS_get+2)& (0+255),w,c
  4800  001CBA  B0D8               	btfsc	status,0,c
  4801  001CBC  D02A               	goto	l5380
  4802                           
  4803                           ;FastTransfer.c: 363: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  4804  001CBE  EE20 F00F          	lfsr	2,15
  4805  001CC2  501B               	movf	crcBufS_get@_this,w,c
  4806  001CC4  26D9               	addwf	fsr2l,f,c
  4807  001CC6  501C               	movf	crcBufS_get@_this+1,w,c
  4808  001CC8  22DA               	addwfc	fsr2h,f,c
  4809  001CCA  CFDE F01F          	movff	postinc2,??_crcBufS_get
  4810  001CCE  CFDD F020          	movff	postdec2,??_crcBufS_get+1
  4811  001CD2  1E1F               	comf	??_crcBufS_get,f,c
  4812  001CD4  1E20               	comf	??_crcBufS_get+1,f,c
  4813  001CD6  4A1F               	infsnz	??_crcBufS_get,f,c
  4814  001CD8  2A20               	incf	??_crcBufS_get+1,f,c
  4815  001CDA  5025               	movf	crcBufS_get@wantedTime,w,c
  4816  001CDC  261F               	addwf	??_crcBufS_get,f,c
  4817  001CDE  5026               	movf	crcBufS_get@wantedTime+1,w,c
  4818  001CE0  2220               	addwfc	??_crcBufS_get+1,f,c
  4819  001CE2  1E1F               	comf	??_crcBufS_get,f,c
  4820  001CE4  1E20               	comf	??_crcBufS_get+1,f,c
  4821  001CE6  4A1F               	infsnz	??_crcBufS_get,f,c
  4822  001CE8  2A20               	incf	??_crcBufS_get+1,f,c
  4823  001CEA  0E0F               	movlw	15
  4824  001CEC  241F               	addwf	??_crcBufS_get,w,c
  4825  001CEE  6E25               	movwf	crcBufS_get@wantedTime,c
  4826  001CF0  0E00               	movlw	0
  4827  001CF2  2020               	addwfc	??_crcBufS_get+1,w,c
  4828  001CF4  6E26               	movwf	crcBufS_get@wantedTime+1,c
  4829                           
  4830                           ;FastTransfer.c: 364: return (_this->buf[(wantedTime + space)]);
  4831  001CF6  501E               	movf	crcBufS_get@space,w,c
  4832  001CF8  2425               	addwf	crcBufS_get@wantedTime,w,c
  4833  001CFA  6E1F               	movwf	??_crcBufS_get& (0+255),c
  4834  001CFC  0E00               	movlw	0
  4835  001CFE  2026               	addwfc	crcBufS_get@wantedTime+1,w,c
  4836  001D00  6E20               	movwf	(??_crcBufS_get+1)& (0+255),c
  4837  001D02  501F               	movf	??_crcBufS_get,w,c
  4838  001D04  241B               	addwf	crcBufS_get@_this,w,c
  4839  001D06  6ED9               	movwf	fsr2l,c
  4840  001D08  5020               	movf	??_crcBufS_get+1,w,c
  4841  001D0A  201C               	addwfc	crcBufS_get@_this+1,w,c
  4842  001D0C  6EDA               	movwf	fsr2h,c
  4843  001D0E  50DF               	movf	indf2,w,c
  4844                           
  4845                           ;FastTransfer.c: 365: } else {
  4846  001D10  0012               	return	
  4847  001D12                     l5380:
  4848                           
  4849                           ;FastTransfer.c: 366: return (_this->buf[(_this->head - wantedTime) + space]);
  4850  001D12  EE20 F00F          	lfsr	2,15
  4851  001D16  501B               	movf	crcBufS_get@_this,w,c
  4852  001D18  26D9               	addwf	fsr2l,f,c
  4853  001D1A  501C               	movf	crcBufS_get@_this+1,w,c
  4854  001D1C  22DA               	addwfc	fsr2h,f,c
  4855  001D1E  CFDE F01F          	movff	postinc2,??_crcBufS_get
  4856  001D22  CFDD F020          	movff	postdec2,??_crcBufS_get+1
  4857  001D26  C025  F021         	movff	crcBufS_get@wantedTime,??_crcBufS_get+2
  4858  001D2A  C026  F022         	movff	crcBufS_get@wantedTime+1,??_crcBufS_get+3
  4859  001D2E  1E21               	comf	??_crcBufS_get+2,f,c
  4860  001D30  1E22               	comf	??_crcBufS_get+3,f,c
  4861  001D32  4A21               	infsnz	??_crcBufS_get+2,f,c
  4862  001D34  2A22               	incf	??_crcBufS_get+3,f,c
  4863  001D36  501E               	movf	crcBufS_get@space,w,c
  4864  001D38  6E23               	movwf	(??_crcBufS_get+4)& (0+255),c
  4865  001D3A  6A24               	clrf	(??_crcBufS_get+5)& (0+255),c
  4866  001D3C  5021               	movf	??_crcBufS_get+2,w,c
  4867  001D3E  2623               	addwf	??_crcBufS_get+4,f,c
  4868  001D40  5022               	movf	??_crcBufS_get+3,w,c
  4869  001D42  2224               	addwfc	??_crcBufS_get+5,f,c
  4870  001D44  501F               	movf	??_crcBufS_get,w,c
  4871  001D46  2623               	addwf	??_crcBufS_get+4,f,c
  4872  001D48  5020               	movf	??_crcBufS_get+1,w,c
  4873  001D4A  2224               	addwfc	??_crcBufS_get+5,f,c
  4874  001D4C  5023               	movf	??_crcBufS_get+4,w,c
  4875  001D4E  241B               	addwf	crcBufS_get@_this,w,c
  4876  001D50  6ED9               	movwf	fsr2l,c
  4877  001D52  5024               	movf	??_crcBufS_get+5,w,c
  4878  001D54  201C               	addwfc	crcBufS_get@_this+1,w,c
  4879  001D56  6EDA               	movwf	fsr2h,c
  4880  001D58  50DF               	movf	indf2,w,c
  4881  001D5A  0012               	return	
  4882  001D5C                     __end_of_crcBufS_get:
  4883                           	opt stack 0
  4884                           tosu	equ	0xFFF
  4885                           tosh	equ	0xFFE
  4886                           tosl	equ	0xFFD
  4887                           pclath	equ	0xFFA
  4888                           tblptru	equ	0xFF8
  4889                           tblptrh	equ	0xFF7
  4890                           tblptrl	equ	0xFF6
  4891                           tablat	equ	0xFF5
  4892                           prodh	equ	0xFF4
  4893                           prodl	equ	0xFF3
  4894                           intcon	equ	0xFF2
  4895                           postinc0	equ	0xFEE
  4896                           wreg	equ	0xFE8
  4897                           indf2	equ	0xFDF
  4898                           postinc2	equ	0xFDE
  4899                           postdec2	equ	0xFDD
  4900                           plusw2	equ	0xFDB
  4901                           fsr2h	equ	0xFDA
  4902                           fsr2l	equ	0xFD9
  4903                           status	equ	0xFD8
  4904                           
  4905 ;; *************** function _Receive_get *****************
  4906 ;; Defined at:
  4907 ;;		line 126 in file "UART.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;		None
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;		None
  4912 ;; Return value:  Size  Location     Type
  4913 ;;                  1    wreg      unsigned char 
  4914 ;; Registers used:
  4915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4921 ;;      Params:         0       0       0       0       0       0       0
  4922 ;;      Locals:         0       0       0       0       0       0       0
  4923 ;;      Temps:          0       0       0       0       0       0       0
  4924 ;;      Totals:         0       0       0       0       0       0       0
  4925 ;;Total ram usage:        0 bytes
  4926 ;; Hardware stack levels used:    1
  4927 ;; Hardware stack levels required when called:    6
  4928 ;; This function calls:
  4929 ;;		_UART_buff_get
  4930 ;; This function is called by:
  4931 ;;		_SYSTEM_Initialize
  4932 ;;		_getch
  4933 ;;		_CRCcheck
  4934 ;;		_receiveData
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           
  4938                           	psect	text20
  4939  002E64                     __ptext20:
  4940                           	opt stack 0
  4941  002E64                     _Receive_get:
  4942                           	opt stack 22
  4943                           
  4944                           ;UART.c: 127: return UART_buff_get(&input_buffer);
  4945                           
  4946                           ;incstack = 0
  4947  002E64  0E00               	movlw	low _input_buffer
  4948  002E66  6E21               	movwf	UART_buff_get@_this,c
  4949  002E68  0E04               	movlw	high _input_buffer
  4950  002E6A  6E22               	movwf	UART_buff_get@_this+1,c
  4951  002E6C  ECCB  F011         	call	_UART_buff_get	;wreg free
  4952  002E70  0012               	return	
  4953  002E72                     __end_of_Receive_get:
  4954                           	opt stack 0
  4955                           tosu	equ	0xFFF
  4956                           tosh	equ	0xFFE
  4957                           tosl	equ	0xFFD
  4958                           pclath	equ	0xFFA
  4959                           tblptru	equ	0xFF8
  4960                           tblptrh	equ	0xFF7
  4961                           tblptrl	equ	0xFF6
  4962                           tablat	equ	0xFF5
  4963                           prodh	equ	0xFF4
  4964                           prodl	equ	0xFF3
  4965                           intcon	equ	0xFF2
  4966                           postinc0	equ	0xFEE
  4967                           wreg	equ	0xFE8
  4968                           indf2	equ	0xFDF
  4969                           postinc2	equ	0xFDE
  4970                           postdec2	equ	0xFDD
  4971                           plusw2	equ	0xFDB
  4972                           fsr2h	equ	0xFDA
  4973                           fsr2l	equ	0xFD9
  4974                           status	equ	0xFD8
  4975                           
  4976 ;; *************** function _UART_buff_get *****************
  4977 ;; Defined at:
  4978 ;;		line 81 in file "UART.c"
  4979 ;; Parameters:    Size  Location     Type
  4980 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  4981 ;;		 -> output_buffer(206), input_buffer(206), 
  4982 ;; Auto vars:     Size  Location     Type
  4983 ;;  c               1   36[COMRAM] unsigned char 
  4984 ;; Return value:  Size  Location     Type
  4985 ;;                  1    wreg      unsigned char 
  4986 ;; Registers used:
  4987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4988 ;; Tracked objects:
  4989 ;;		On entry : 0/0
  4990 ;;		On exit  : 0/0
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4993 ;;      Params:         2       0       0       0       0       0       0
  4994 ;;      Locals:         1       0       0       0       0       0       0
  4995 ;;      Temps:          2       0       0       0       0       0       0
  4996 ;;      Totals:         5       0       0       0       0       0       0
  4997 ;;Total ram usage:        5 bytes
  4998 ;; Hardware stack levels used:    1
  4999 ;; Hardware stack levels required when called:    5
  5000 ;; This function calls:
  5001 ;;		_UART_buff_modulo_inc
  5002 ;; This function is called by:
  5003 ;;		_Receive_get
  5004 ;;		_Send_put
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           	psect	text21
  5009  002396                     __ptext21:
  5010                           	opt stack 0
  5011  002396                     _UART_buff_get:
  5012                           	opt stack 21
  5013                           
  5014                           ;UART.c: 82: unsigned char c;
  5015                           ;UART.c: 83: if (_this->count > 0) {
  5016                           
  5017                           ;incstack = 0
  5018  002396  EE20 F0CC          	lfsr	2,204
  5019  00239A  5021               	movf	UART_buff_get@_this,w,c
  5020  00239C  26D9               	addwf	fsr2l,f,c
  5021  00239E  5022               	movf	UART_buff_get@_this+1,w,c
  5022  0023A0  22DA               	addwfc	fsr2h,f,c
  5023  0023A2  0E01               	movlw	1
  5024  0023A4  BEDB               	btfsc	plusw2,7,c
  5025  0023A6  D03C               	goto	l5206
  5026  0023A8  0E01               	movlw	1
  5027  0023AA  50DB               	movf	plusw2,w,c
  5028  0023AC  E103               	bnz	u5180
  5029  0023AE  04DE               	decf	postinc2,w,c
  5030  0023B0  A0D8               	btfss	status,0,c
  5031  0023B2  D036               	goto	l5206
  5032  0023B4                     u5180:
  5033                           
  5034                           ;UART.c: 84: c = _this->buf[_this->tail];
  5035  0023B4  EE20 F0CA          	lfsr	2,202
  5036  0023B8  5021               	movf	UART_buff_get@_this,w,c
  5037  0023BA  26D9               	addwf	fsr2l,f,c
  5038  0023BC  5022               	movf	UART_buff_get@_this+1,w,c
  5039  0023BE  22DA               	addwfc	fsr2h,f,c
  5040  0023C0  CFDE F023          	movff	postinc2,??_UART_buff_get
  5041  0023C4  CFDD F024          	movff	postdec2,??_UART_buff_get+1
  5042  0023C8  5023               	movf	??_UART_buff_get,w,c
  5043  0023CA  2421               	addwf	UART_buff_get@_this,w,c
  5044  0023CC  6ED9               	movwf	fsr2l,c
  5045  0023CE  5024               	movf	??_UART_buff_get+1,w,c
  5046  0023D0  2022               	addwfc	UART_buff_get@_this+1,w,c
  5047  0023D2  6EDA               	movwf	fsr2h,c
  5048  0023D4  50DF               	movf	indf2,w,c
  5049  0023D6  6E25               	movwf	UART_buff_get@c,c
  5050                           
  5051                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  5052  0023D8  EE20 F0CA          	lfsr	2,202
  5053  0023DC  5021               	movf	UART_buff_get@_this,w,c
  5054  0023DE  26D9               	addwf	fsr2l,f,c
  5055  0023E0  5022               	movf	UART_buff_get@_this+1,w,c
  5056  0023E2  22DA               	addwfc	fsr2h,f,c
  5057  0023E4  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  5058  0023E8  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  5059  0023EC  0E00               	movlw	0
  5060  0023EE  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  5061  0023F0  0EC8               	movlw	200
  5062  0023F2  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  5063  0023F4  EC30  F016         	call	_UART_buff_modulo_inc	;wreg free
  5064  0023F8  EE20 F0CA          	lfsr	2,202
  5065  0023FC  5021               	movf	UART_buff_get@_this,w,c
  5066  0023FE  26D9               	addwf	fsr2l,f,c
  5067  002400  5022               	movf	UART_buff_get@_this+1,w,c
  5068  002402  22DA               	addwfc	fsr2h,f,c
  5069  002404  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  5070  002408  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  5071                           
  5072                           ;UART.c: 86: --_this->count;
  5073  00240C  EE20 F0CC          	lfsr	2,204
  5074  002410  5021               	movf	UART_buff_get@_this,w,c
  5075  002412  26D9               	addwf	fsr2l,f,c
  5076  002414  5022               	movf	UART_buff_get@_this+1,w,c
  5077  002416  22DA               	addwfc	fsr2h,f,c
  5078  002418  06DE               	decf	postinc2,f,c
  5079  00241A  0E00               	movlw	0
  5080  00241C  5ADD               	subwfb	postdec2,f,c
  5081                           
  5082                           ;UART.c: 87: } else {
  5083  00241E  D002               	goto	l987
  5084  002420                     l5206:
  5085                           
  5086                           ;UART.c: 88: c = 0;
  5087  002420  0E00               	movlw	0
  5088  002422  6E25               	movwf	UART_buff_get@c,c
  5089  002424                     l987:
  5090                           
  5091                           ;UART.c: 89: }
  5092                           ;UART.c: 90: return (c);
  5093  002424  5025               	movf	UART_buff_get@c,w,c
  5094  002426  0012               	return	
  5095  002428                     __end_of_UART_buff_get:
  5096                           	opt stack 0
  5097                           tosu	equ	0xFFF
  5098                           tosh	equ	0xFFE
  5099                           tosl	equ	0xFFD
  5100                           pclath	equ	0xFFA
  5101                           tblptru	equ	0xFF8
  5102                           tblptrh	equ	0xFF7
  5103                           tblptrl	equ	0xFF6
  5104                           tablat	equ	0xFF5
  5105                           prodh	equ	0xFF4
  5106                           prodl	equ	0xFF3
  5107                           intcon	equ	0xFF2
  5108                           postinc0	equ	0xFEE
  5109                           wreg	equ	0xFE8
  5110                           indf2	equ	0xFDF
  5111                           postinc2	equ	0xFDE
  5112                           postdec2	equ	0xFDD
  5113                           plusw2	equ	0xFDB
  5114                           fsr2h	equ	0xFDA
  5115                           fsr2l	equ	0xFD9
  5116                           status	equ	0xFD8
  5117                           
  5118 ;; *************** function _UART_buff_modulo_inc *****************
  5119 ;; Defined at:
  5120 ;;		line 106 in file "UART.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;  value           2   26[COMRAM] const unsigned int 
  5123 ;;  modulus         2   28[COMRAM] const unsigned int 
  5124 ;; Auto vars:     Size  Location     Type
  5125 ;;  my_value        2   30[COMRAM] unsigned int 
  5126 ;; Return value:  Size  Location     Type
  5127 ;;                  2   26[COMRAM] unsigned int 
  5128 ;; Registers used:
  5129 ;;		wreg, status,2, status,0
  5130 ;; Tracked objects:
  5131 ;;		On entry : 0/0
  5132 ;;		On exit  : 0/0
  5133 ;;		Unchanged: 0/0
  5134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5135 ;;      Params:         4       0       0       0       0       0       0
  5136 ;;      Locals:         2       0       0       0       0       0       0
  5137 ;;      Temps:          0       0       0       0       0       0       0
  5138 ;;      Totals:         6       0       0       0       0       0       0
  5139 ;;Total ram usage:        6 bytes
  5140 ;; Hardware stack levels used:    1
  5141 ;; Hardware stack levels required when called:    4
  5142 ;; This function calls:
  5143 ;;		Nothing
  5144 ;; This function is called by:
  5145 ;;		_UART_buff_put
  5146 ;;		_UART_buff_get
  5147 ;; This function uses a non-reentrant model
  5148 ;;
  5149                           
  5150                           	psect	text22
  5151  002C60                     __ptext22:
  5152                           	opt stack 0
  5153  002C60                     _UART_buff_modulo_inc:
  5154                           	opt stack 21
  5155                           
  5156                           ;UART.c: 107: unsigned int my_value = value + 1;
  5157                           
  5158                           ;incstack = 0
  5159  002C60  0E01               	movlw	1
  5160  002C62  241B               	addwf	UART_buff_modulo_inc@value,w,c
  5161  002C64  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  5162  002C66  0E00               	movlw	0
  5163  002C68  201C               	addwfc	UART_buff_modulo_inc@value+1,w,c
  5164  002C6A  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  5165                           
  5166                           ;UART.c: 108: if (my_value >= modulus) {
  5167  002C6C  501D               	movf	UART_buff_modulo_inc@modulus,w,c
  5168  002C6E  5C1F               	subwf	UART_buff_modulo_inc@my_value,w,c
  5169  002C70  501E               	movf	UART_buff_modulo_inc@modulus+1,w,c
  5170  002C72  5820               	subwfb	UART_buff_modulo_inc@my_value+1,w,c
  5171  002C74  A0D8               	btfss	status,0,c
  5172  002C76  D004               	goto	l5164
  5173                           
  5174                           ;UART.c: 109: my_value = 0;
  5175  002C78  0E00               	movlw	0
  5176  002C7A  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  5177  002C7C  0E00               	movlw	0
  5178  002C7E  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  5179  002C80                     l5164:
  5180                           
  5181                           ;UART.c: 110: }
  5182                           ;UART.c: 111: return (my_value);
  5183  002C80  C01F  F01B         	movff	UART_buff_modulo_inc@my_value,?_UART_buff_modulo_inc
  5184  002C84  C020  F01C         	movff	UART_buff_modulo_inc@my_value+1,?_UART_buff_modulo_inc+1
  5185  002C88  0012               	return	
  5186  002C8A                     __end_of_UART_buff_modulo_inc:
  5187                           	opt stack 0
  5188                           tosu	equ	0xFFF
  5189                           tosh	equ	0xFFE
  5190                           tosl	equ	0xFFD
  5191                           pclath	equ	0xFFA
  5192                           tblptru	equ	0xFF8
  5193                           tblptrh	equ	0xFF7
  5194                           tblptrl	equ	0xFF6
  5195                           tablat	equ	0xFF5
  5196                           prodh	equ	0xFF4
  5197                           prodl	equ	0xFF3
  5198                           intcon	equ	0xFF2
  5199                           postinc0	equ	0xFEE
  5200                           wreg	equ	0xFE8
  5201                           indf2	equ	0xFDF
  5202                           postinc2	equ	0xFDE
  5203                           postdec2	equ	0xFDD
  5204                           plusw2	equ	0xFDB
  5205                           fsr2h	equ	0xFDA
  5206                           fsr2l	equ	0xFD9
  5207                           status	equ	0xFD8
  5208                           
  5209 ;; *************** function _Receive_available *****************
  5210 ;; Defined at:
  5211 ;;		line 122 in file "UART.c"
  5212 ;; Parameters:    Size  Location     Type
  5213 ;;		None
  5214 ;; Auto vars:     Size  Location     Type
  5215 ;;		None
  5216 ;; Return value:  Size  Location     Type
  5217 ;;                  2   28[COMRAM] int 
  5218 ;; Registers used:
  5219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5220 ;; Tracked objects:
  5221 ;;		On entry : 0/0
  5222 ;;		On exit  : 0/0
  5223 ;;		Unchanged: 0/0
  5224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5225 ;;      Params:         2       0       0       0       0       0       0
  5226 ;;      Locals:         0       0       0       0       0       0       0
  5227 ;;      Temps:          0       0       0       0       0       0       0
  5228 ;;      Totals:         2       0       0       0       0       0       0
  5229 ;;Total ram usage:        2 bytes
  5230 ;; Hardware stack levels used:    1
  5231 ;; Hardware stack levels required when called:    5
  5232 ;; This function calls:
  5233 ;;		_UART_buff_size
  5234 ;; This function is called by:
  5235 ;;		_SYSTEM_Initialize
  5236 ;;		_CRCcheck
  5237 ;;		_receiveData
  5238 ;; This function uses a non-reentrant model
  5239 ;;
  5240                           
  5241                           	psect	text23
  5242  002DF0                     __ptext23:
  5243                           	opt stack 0
  5244  002DF0                     _Receive_available:
  5245                           	opt stack 23
  5246                           
  5247                           ;UART.c: 123: return UART_buff_size(&input_buffer);
  5248                           
  5249                           ;incstack = 0
  5250  002DF0  0E00               	movlw	low _input_buffer
  5251  002DF2  6E1B               	movwf	UART_buff_size@_this,c
  5252  002DF4  0E04               	movlw	high _input_buffer
  5253  002DF6  6E1C               	movwf	UART_buff_size@_this+1,c
  5254  002DF8  EC03  F017         	call	_UART_buff_size	;wreg free
  5255  002DFC  C01B  F01D         	movff	?_UART_buff_size,?_Receive_available
  5256  002E00  C01C  F01E         	movff	?_UART_buff_size+1,?_Receive_available+1
  5257  002E04  0012               	return	
  5258  002E06                     __end_of_Receive_available:
  5259                           	opt stack 0
  5260                           tosu	equ	0xFFF
  5261                           tosh	equ	0xFFE
  5262                           tosl	equ	0xFFD
  5263                           pclath	equ	0xFFA
  5264                           tblptru	equ	0xFF8
  5265                           tblptrh	equ	0xFF7
  5266                           tblptrl	equ	0xFF6
  5267                           tablat	equ	0xFF5
  5268                           prodh	equ	0xFF4
  5269                           prodl	equ	0xFF3
  5270                           intcon	equ	0xFF2
  5271                           postinc0	equ	0xFEE
  5272                           wreg	equ	0xFE8
  5273                           indf2	equ	0xFDF
  5274                           postinc2	equ	0xFDE
  5275                           postdec2	equ	0xFDD
  5276                           plusw2	equ	0xFDB
  5277                           fsr2h	equ	0xFDA
  5278                           fsr2l	equ	0xFD9
  5279                           status	equ	0xFD8
  5280                           
  5281 ;; *************** function _UART_buff_size *****************
  5282 ;; Defined at:
  5283 ;;		line 102 in file "UART.c"
  5284 ;; Parameters:    Size  Location     Type
  5285 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  5286 ;;		 -> output_buffer(206), input_buffer(206), 
  5287 ;; Auto vars:     Size  Location     Type
  5288 ;;		None
  5289 ;; Return value:  Size  Location     Type
  5290 ;;                  2   26[COMRAM] int 
  5291 ;; Registers used:
  5292 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5293 ;; Tracked objects:
  5294 ;;		On entry : 0/0
  5295 ;;		On exit  : 0/0
  5296 ;;		Unchanged: 0/0
  5297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5298 ;;      Params:         2       0       0       0       0       0       0
  5299 ;;      Locals:         0       0       0       0       0       0       0
  5300 ;;      Temps:          0       0       0       0       0       0       0
  5301 ;;      Totals:         2       0       0       0       0       0       0
  5302 ;;Total ram usage:        2 bytes
  5303 ;; Hardware stack levels used:    1
  5304 ;; Hardware stack levels required when called:    4
  5305 ;; This function calls:
  5306 ;;		Nothing
  5307 ;; This function is called by:
  5308 ;;		_Receive_available
  5309 ;; This function uses a non-reentrant model
  5310 ;;
  5311                           
  5312                           	psect	text24
  5313  002E06                     __ptext24:
  5314                           	opt stack 0
  5315  002E06                     _UART_buff_size:
  5316                           	opt stack 23
  5317                           
  5318                           ;UART.c: 103: return (_this->count);
  5319                           
  5320                           ;incstack = 0
  5321  002E06  EE20 F0CC          	lfsr	2,204
  5322  002E0A  501B               	movf	UART_buff_size@_this,w,c
  5323  002E0C  26D9               	addwf	fsr2l,f,c
  5324  002E0E  501C               	movf	UART_buff_size@_this+1,w,c
  5325  002E10  22DA               	addwfc	fsr2h,f,c
  5326  002E12  CFDE F01B          	movff	postinc2,?_UART_buff_size
  5327  002E16  CFDD F01C          	movff	postdec2,?_UART_buff_size+1
  5328  002E1A  0012               	return	
  5329  002E1C                     __end_of_UART_buff_size:
  5330                           	opt stack 0
  5331                           tosu	equ	0xFFF
  5332                           tosh	equ	0xFFE
  5333                           tosl	equ	0xFFD
  5334                           pclath	equ	0xFFA
  5335                           tblptru	equ	0xFF8
  5336                           tblptrh	equ	0xFF7
  5337                           tblptrl	equ	0xFF6
  5338                           tablat	equ	0xFF5
  5339                           prodh	equ	0xFF4
  5340                           prodl	equ	0xFF3
  5341                           intcon	equ	0xFF2
  5342                           postinc0	equ	0xFEE
  5343                           wreg	equ	0xFE8
  5344                           indf2	equ	0xFDF
  5345                           postinc2	equ	0xFDE
  5346                           postdec2	equ	0xFDD
  5347                           plusw2	equ	0xFDB
  5348                           fsr2h	equ	0xFDA
  5349                           fsr2l	equ	0xFD9
  5350                           status	equ	0xFD8
  5351                           
  5352 ;; *************** function _CRC8 *****************
  5353 ;; Defined at:
  5354 ;;		line 34 in file "FastTransfer.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;  data            2   26[COMRAM] PTR const unsigned char 
  5357 ;;		 -> CRCcheck@arrayHolder(3), receiveData@holder_2230(3), receiveData@holder(3), rx_buffer(200), 
  5358 ;;		 -> ring_buffer(206), NULL(0), 
  5359 ;;  len             1   28[COMRAM] unsigned char 
  5360 ;; Auto vars:     Size  Location     Type
  5361 ;;  sum             1   29[COMRAM] unsigned char 
  5362 ;;  tempI           1   31[COMRAM] unsigned char 
  5363 ;;  extract         1   30[COMRAM] unsigned char 
  5364 ;;  crc             1   32[COMRAM] unsigned char 
  5365 ;; Return value:  Size  Location     Type
  5366 ;;                  1    wreg      unsigned char 
  5367 ;; Registers used:
  5368 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5369 ;; Tracked objects:
  5370 ;;		On entry : 0/0
  5371 ;;		On exit  : 0/0
  5372 ;;		Unchanged: 0/0
  5373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5374 ;;      Params:         3       0       0       0       0       0       0
  5375 ;;      Locals:         4       0       0       0       0       0       0
  5376 ;;      Temps:          0       0       0       0       0       0       0
  5377 ;;      Totals:         7       0       0       0       0       0       0
  5378 ;;Total ram usage:        7 bytes
  5379 ;; Hardware stack levels used:    1
  5380 ;; Hardware stack levels required when called:    4
  5381 ;; This function calls:
  5382 ;;		Nothing
  5383 ;; This function is called by:
  5384 ;;		_sendData
  5385 ;;		_receiveData
  5386 ;;		_CRCcheck
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           	psect	text25
  5391  0029B0                     __ptext25:
  5392                           	opt stack 0
  5393  0029B0                     _CRC8:
  5394                           	opt stack 23
  5395                           
  5396                           ;FastTransfer.c: 35: unsigned char crc = 0x00;
  5397                           
  5398                           ;incstack = 0
  5399  0029B0  0E00               	movlw	0
  5400  0029B2  6E21               	movwf	CRC8@crc,c
  5401                           
  5402                           ;FastTransfer.c: 36: while (len--) {
  5403  0029B4  D01C               	goto	l5326
  5404  0029B6                     l5310:
  5405                           
  5406                           ;FastTransfer.c: 37: unsigned char extract = *data++;
  5407  0029B6  C01B  FFD9         	movff	CRC8@data,fsr2l
  5408  0029BA  C01C  FFDA         	movff	CRC8@data+1,fsr2h
  5409  0029BE  50DF               	movf	indf2,w,c
  5410  0029C0  6E1F               	movwf	CRC8@extract,c
  5411  0029C2  4A1B               	infsnz	CRC8@data,f,c
  5412  0029C4  2A1C               	incf	CRC8@data+1,f,c
  5413                           
  5414                           ;FastTransfer.c: 38: unsigned char tempI;
  5415                           ;FastTransfer.c: 39: for (tempI = 8; tempI; tempI--) {
  5416  0029C6  0E08               	movlw	8
  5417  0029C8  6E20               	movwf	CRC8@tempI,c
  5418  0029CA  D00E               	goto	l5324
  5419  0029CC                     l5316:
  5420                           
  5421                           ;FastTransfer.c: 40: unsigned char sum = (crc ^ extract) & 0x01;
  5422  0029CC  5021               	movf	CRC8@crc,w,c
  5423  0029CE  181F               	xorwf	CRC8@extract,w,c
  5424  0029D0  0B01               	andlw	1
  5425  0029D2  6E1E               	movwf	CRC8@sum,c
  5426                           
  5427                           ;FastTransfer.c: 41: crc >>= 1;
  5428  0029D4  90D8               	bcf	status,0,c
  5429  0029D6  3221               	rrcf	CRC8@crc,f,c
  5430                           
  5431                           ;FastTransfer.c: 42: if (sum) {
  5432  0029D8  501E               	movf	CRC8@sum,w,c
  5433  0029DA  B4D8               	btfsc	status,2,c
  5434  0029DC  D002               	goto	l828
  5435                           
  5436                           ;FastTransfer.c: 43: crc ^= 0x8C;
  5437  0029DE  0E8C               	movlw	140
  5438  0029E0  1A21               	xorwf	CRC8@crc,f,c
  5439  0029E2                     l828:
  5440                           
  5441                           ;FastTransfer.c: 44: }
  5442                           ;FastTransfer.c: 45: extract >>= 1;
  5443  0029E2  90D8               	bcf	status,0,c
  5444  0029E4  321F               	rrcf	CRC8@extract,f,c
  5445  0029E6  0620               	decf	CRC8@tempI,f,c
  5446  0029E8                     l5324:
  5447  0029E8  5020               	movf	CRC8@tempI,w,c
  5448  0029EA  A4D8               	btfss	status,2,c
  5449  0029EC  D7EF               	goto	l5316
  5450  0029EE                     l5326:
  5451  0029EE  061D               	decf	CRC8@len,f,c
  5452  0029F0  281D               	incf	CRC8@len,w,c
  5453  0029F2  A4D8               	btfss	status,2,c
  5454  0029F4  D7E0               	goto	l5310
  5455                           
  5456                           ;FastTransfer.c: 46: }
  5457                           ;FastTransfer.c: 47: }
  5458                           ;FastTransfer.c: 48: return crc;
  5459  0029F6  5021               	movf	CRC8@crc,w,c
  5460  0029F8  0012               	return	
  5461  0029FA                     __end_of_CRC8:
  5462                           	opt stack 0
  5463                           tosu	equ	0xFFF
  5464                           tosh	equ	0xFFE
  5465                           tosl	equ	0xFFD
  5466                           pclath	equ	0xFFA
  5467                           tblptru	equ	0xFF8
  5468                           tblptrh	equ	0xFF7
  5469                           tblptrl	equ	0xFF6
  5470                           tablat	equ	0xFF5
  5471                           prodh	equ	0xFF4
  5472                           prodl	equ	0xFF3
  5473                           intcon	equ	0xFF2
  5474                           postinc0	equ	0xFEE
  5475                           wreg	equ	0xFE8
  5476                           indf2	equ	0xFDF
  5477                           postinc2	equ	0xFDE
  5478                           postdec2	equ	0xFDD
  5479                           plusw2	equ	0xFDB
  5480                           fsr2h	equ	0xFDA
  5481                           fsr2l	equ	0xFD9
  5482                           status	equ	0xFD8
  5483                           
  5484 ;; *************** function _handleIndicators *****************
  5485 ;; Defined at:
  5486 ;;		line 31 in file "Communications.c"
  5487 ;; Parameters:    Size  Location     Type
  5488 ;;  receivedIndi    2   36[COMRAM] int 
  5489 ;; Auto vars:     Size  Location     Type
  5490 ;;  i               2   41[COMRAM] int 
  5491 ;; Return value:  Size  Location     Type
  5492 ;;                  1    wreg      void 
  5493 ;; Registers used:
  5494 ;;		wreg, status,2, status,0, cstack
  5495 ;; Tracked objects:
  5496 ;;		On entry : 0/0
  5497 ;;		On exit  : 0/0
  5498 ;;		Unchanged: 0/0
  5499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5500 ;;      Params:         2       0       0       0       0       0       0
  5501 ;;      Locals:         2       0       0       0       0       0       0
  5502 ;;      Temps:          3       0       0       0       0       0       0
  5503 ;;      Totals:         7       0       0       0       0       0       0
  5504 ;;Total ram usage:        7 bytes
  5505 ;; Hardware stack levels used:    1
  5506 ;; Hardware stack levels required when called:    6
  5507 ;; This function calls:
  5508 ;;		_SetLEDOut
  5509 ;; This function is called by:
  5510 ;;		_updateComms
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514                           	psect	text26
  5515  0025CC                     __ptext26:
  5516                           	opt stack 0
  5517  0025CC                     _handleIndicators:
  5518                           	opt stack 23
  5519                           
  5520                           ;Communications.c: 32: static int oldIndicators = 0;
  5521                           ;Communications.c: 33: if (receivedIndicators != oldIndicators) {
  5522                           
  5523                           ;incstack = 0
  5524  0025CC  0100               	movlb	0	; () banked
  5525  0025CE  51DD               	movf	handleIndicators@oldIndicators& (0+255),w,b
  5526  0025D0  1825               	xorwf	handleIndicators@receivedIndicators,w,c
  5527  0025D2  E105               	bnz	u6620
  5528  0025D4  0100               	movlb	0	; () banked
  5529  0025D6  51DE               	movf	(handleIndicators@oldIndicators+1)& (0+255),w,b
  5530  0025D8  1826               	xorwf	handleIndicators@receivedIndicators+1,w,c
  5531  0025DA  B4D8               	btfsc	status,2,c
  5532  0025DC  0012               	return	
  5533  0025DE                     u6620:
  5534                           
  5535                           ; BSR set to: 0
  5536                           ;Communications.c: 34: int i = 0;
  5537  0025DE  0E00               	movlw	0
  5538  0025E0  6E2B               	movwf	handleIndicators@i+1,c
  5539  0025E2  0E00               	movlw	0
  5540  0025E4  6E2A               	movwf	handleIndicators@i,c
  5541                           
  5542                           ;Communications.c: 35: for (i = 0; i < 6; i++) {
  5543  0025E6  0E00               	movlw	0
  5544  0025E8  6E2B               	movwf	handleIndicators@i+1,c
  5545  0025EA  0E00               	movlw	0
  5546  0025EC  6E2A               	movwf	handleIndicators@i,c
  5547                           
  5548                           ; BSR set to: 0
  5549  0025EE  BE2B               	btfsc	handleIndicators@i+1,7,c
  5550  0025F0  D006               	goto	l6072
  5551  0025F2  502B               	movf	handleIndicators@i+1,w,c
  5552  0025F4  E122               	bnz	l749
  5553  0025F6  0E06               	movlw	6
  5554  0025F8  5C2A               	subwf	handleIndicators@i,w,c
  5555  0025FA  B0D8               	btfsc	status,0,c
  5556  0025FC  D01E               	goto	l749
  5557  0025FE                     l6072:
  5558                           
  5559                           ;Communications.c: 36: SetLEDOut(i, ((receivedIndicators >> i)&0x01));
  5560  0025FE  C02A  F01F         	movff	handleIndicators@i,SetLEDOut@lednum
  5561  002602  C02B  F020         	movff	handleIndicators@i+1,SetLEDOut@lednum+1
  5562  002606  C02A  F027         	movff	handleIndicators@i,??_handleIndicators
  5563  00260A  C025  F028         	movff	handleIndicators@receivedIndicators,??_handleIndicators+1
  5564  00260E  C026  F029         	movff	handleIndicators@receivedIndicators+1,??_handleIndicators+2
  5565  002612  2A27               	incf	??_handleIndicators,f,c
  5566  002614  D003               	goto	u6644
  5567  002616                     u6645:
  5568  002616  3429               	rlcf	??_handleIndicators+2,w,c
  5569  002618  3229               	rrcf	??_handleIndicators+2,f,c
  5570  00261A  3228               	rrcf	??_handleIndicators+1,f,c
  5571  00261C                     u6644:
  5572  00261C  2E27               	decfsz	??_handleIndicators,f,c
  5573  00261E  D7FB               	goto	u6645
  5574  002620  0E01               	movlw	1
  5575  002622  1428               	andwf	??_handleIndicators+1,w,c
  5576  002624  6E21               	movwf	SetLEDOut@state,c
  5577  002626  6A22               	clrf	SetLEDOut@state+1,c
  5578  002628  ECC7  F005         	call	_SetLEDOut	;wreg free
  5579  00262C  4A2A               	infsnz	handleIndicators@i,f,c
  5580  00262E  2A2B               	incf	handleIndicators@i+1,f,c
  5581  002630  BE2B               	btfsc	handleIndicators@i+1,7,c
  5582  002632  D7E5               	goto	l6072
  5583  002634  502B               	movf	handleIndicators@i+1,w,c
  5584  002636  E101               	bnz	u6650
  5585  002638  D7DE               	goto	L2
  5586  00263A                     u6650:
  5587  00263A                     l749:
  5588                           
  5589                           ;Communications.c: 37: }
  5590                           ;Communications.c: 38: oldIndicators = receivedIndicators;
  5591  00263A  C025  F0DD         	movff	handleIndicators@receivedIndicators,handleIndicators@oldIndicators
  5592  00263E  C026  F0DE         	movff	handleIndicators@receivedIndicators+1,handleIndicators@oldIndicators+1
  5593  002642  0012               	return	
  5594  002644                     __end_of_handleIndicators:
  5595                           	opt stack 0
  5596                           tosu	equ	0xFFF
  5597                           tosh	equ	0xFFE
  5598                           tosl	equ	0xFFD
  5599                           pclath	equ	0xFFA
  5600                           tblptru	equ	0xFF8
  5601                           tblptrh	equ	0xFF7
  5602                           tblptrl	equ	0xFF6
  5603                           tablat	equ	0xFF5
  5604                           prodh	equ	0xFF4
  5605                           prodl	equ	0xFF3
  5606                           intcon	equ	0xFF2
  5607                           postinc0	equ	0xFEE
  5608                           wreg	equ	0xFE8
  5609                           indf2	equ	0xFDF
  5610                           postinc2	equ	0xFDE
  5611                           postdec2	equ	0xFDD
  5612                           plusw2	equ	0xFDB
  5613                           fsr2h	equ	0xFDA
  5614                           fsr2l	equ	0xFD9
  5615                           status	equ	0xFD8
  5616                           
  5617 ;; *************** function _SetLEDOut *****************
  5618 ;; Defined at:
  5619 ;;		line 25 in file "IO.c"
  5620 ;; Parameters:    Size  Location     Type
  5621 ;;  lednum          2   30[COMRAM] int 
  5622 ;;  state           2   32[COMRAM] int 
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;		None
  5625 ;; Return value:  Size  Location     Type
  5626 ;;                  1    wreg      void 
  5627 ;; Registers used:
  5628 ;;		wreg, status,2, status,0, cstack
  5629 ;; Tracked objects:
  5630 ;;		On entry : 0/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5634 ;;      Params:         4       0       0       0       0       0       0
  5635 ;;      Locals:         0       0       0       0       0       0       0
  5636 ;;      Temps:          2       0       0       0       0       0       0
  5637 ;;      Totals:         6       0       0       0       0       0       0
  5638 ;;Total ram usage:        6 bytes
  5639 ;; Hardware stack levels used:    1
  5640 ;; Hardware stack levels required when called:    5
  5641 ;; This function calls:
  5642 ;;		_Off_Led
  5643 ;;		_setLED
  5644 ;; This function is called by:
  5645 ;;		_handleIndicators
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           	psect	text27
  5650  000B8E                     __ptext27:
  5651                           	opt stack 0
  5652  000B8E                     _SetLEDOut:
  5653                           	opt stack 23
  5654                           
  5655                           ;IO.c: 26: switch (lednum) {
  5656                           
  5657                           ;incstack = 0
  5658  000B8E  D138               	goto	l5570
  5659  000B90                     l5436:
  5660                           
  5661                           ;IO.c: 28: if (state == 1) {
  5662  000B90  0421               	decf	SetLEDOut@state,w,c
  5663  000B92  1022               	iorwf	SetLEDOut@state+1,w,c
  5664  000B94  A4D8               	btfss	status,2,c
  5665  000B96  D00D               	goto	l5444
  5666                           
  5667                           ;IO.c: 29: Off_Led(0);
  5668  000B98  0E00               	movlw	0
  5669  000B9A  6E1C               	movwf	Off_Led@led+1,c
  5670  000B9C  0E00               	movlw	0
  5671  000B9E  6E1B               	movwf	Off_Led@led,c
  5672  000BA0  EC5D  F012         	call	_Off_Led	;wreg free
  5673                           
  5674                           ;IO.c: 30: do { LATB3 = 1; } while(0);
  5675  000BA4  868A               	bsf	3978,3,c	;volatile
  5676                           
  5677                           ;IO.c: 31: LED_array[0] = 1;
  5678  000BA6  0E00               	movlw	0
  5679  000BA8  0100               	movlb	0	; () banked
  5680  000BAA  6F89               	movwf	(_LED_array+1)& (0+255),b
  5681  000BAC  0E01               	movlw	1
  5682  000BAE  6F88               	movwf	_LED_array& (0+255),b
  5683                           
  5684                           ;IO.c: 32: } else if (state == 0) {
  5685  000BB0  0012               	return	
  5686  000BB2                     l5444:
  5687  000BB2  5021               	movf	SetLEDOut@state,w,c
  5688  000BB4  1022               	iorwf	SetLEDOut@state+1,w,c
  5689  000BB6  A4D8               	btfss	status,2,c
  5690  000BB8  D00D               	goto	l5452
  5691                           
  5692                           ;IO.c: 33: Off_Led(0);
  5693  000BBA  0E00               	movlw	0
  5694  000BBC  6E1C               	movwf	Off_Led@led+1,c
  5695  000BBE  0E00               	movlw	0
  5696  000BC0  6E1B               	movwf	Off_Led@led,c
  5697  000BC2  EC5D  F012         	call	_Off_Led	;wreg free
  5698                           
  5699                           ;IO.c: 34: do { LATB3 = 0; } while(0);
  5700  000BC6  968A               	bcf	3978,3,c	;volatile
  5701                           
  5702                           ;IO.c: 35: LED_array[0] = 0;
  5703  000BC8  0E00               	movlw	0
  5704  000BCA  0100               	movlb	0	; () banked
  5705  000BCC  6F89               	movwf	(_LED_array+1)& (0+255),b
  5706  000BCE  0E00               	movlw	0
  5707  000BD0  6F88               	movwf	_LED_array& (0+255),b
  5708                           
  5709                           ;IO.c: 36: }
  5710  000BD2  0012               	return	
  5711  000BD4                     l5452:
  5712                           
  5713                           ;IO.c: 37: else if (state == 2) {
  5714  000BD4  0E02               	movlw	2
  5715  000BD6  1821               	xorwf	SetLEDOut@state,w,c
  5716  000BD8  1022               	iorwf	SetLEDOut@state+1,w,c
  5717  000BDA  A4D8               	btfss	status,2,c
  5718  000BDC  0012               	return	
  5719                           
  5720                           ;IO.c: 39: do { LATB3 = 0; } while(0);
  5721  000BDE  968A               	bcf	3978,3,c	;volatile
  5722                           
  5723                           ;IO.c: 40: setLED(0);
  5724  000BE0  0E00               	movlw	0
  5725  000BE2  6E1C               	movwf	setLED@led+1,c
  5726  000BE4  0E00               	movlw	0
  5727  000BE6  6E1B               	movwf	setLED@led,c
  5728  000BE8  EC85  F00F         	call	_setLED	;wreg free
  5729                           
  5730                           ;IO.c: 41: LED_array[0] = 2;
  5731  000BEC  0E00               	movlw	0
  5732  000BEE  0100               	movlb	0	; () banked
  5733  000BF0  6F89               	movwf	(_LED_array+1)& (0+255),b
  5734  000BF2  0E02               	movlw	2
  5735  000BF4  6F88               	movwf	_LED_array& (0+255),b
  5736                           
  5737                           ; BSR set to: 0
  5738                           ;IO.c: 43: }
  5739                           ;IO.c: 44: break;
  5740                           
  5741                           ; BSR set to: 0
  5742                           
  5743                           ; BSR set to: 0
  5744  000BF6  0012               	return	
  5745  000BF8                     l5458:
  5746                           
  5747                           ;IO.c: 47: if (state == 1) {
  5748  000BF8  0421               	decf	SetLEDOut@state,w,c
  5749  000BFA  1022               	iorwf	SetLEDOut@state+1,w,c
  5750  000BFC  A4D8               	btfss	status,2,c
  5751  000BFE  D00D               	goto	l5466
  5752                           
  5753                           ;IO.c: 48: Off_Led(1);
  5754  000C00  0E00               	movlw	0
  5755  000C02  6E1C               	movwf	Off_Led@led+1,c
  5756  000C04  0E01               	movlw	1
  5757  000C06  6E1B               	movwf	Off_Led@led,c
  5758  000C08  EC5D  F012         	call	_Off_Led	;wreg free
  5759                           
  5760                           ;IO.c: 49: do { LATB5 = 1; } while(0);
  5761  000C0C  8A8A               	bsf	3978,5,c	;volatile
  5762                           
  5763                           ;IO.c: 50: LED_array[1] = 1;
  5764  000C0E  0E00               	movlw	0
  5765  000C10  0100               	movlb	0	; () banked
  5766  000C12  6F8B               	movwf	(_LED_array+3)& (0+255),b
  5767  000C14  0E01               	movlw	1
  5768  000C16  6F8A               	movwf	(_LED_array+2)& (0+255),b
  5769                           
  5770                           ;IO.c: 51: } else if (state == 0) {
  5771  000C18  0012               	return	
  5772  000C1A                     l5466:
  5773  000C1A  5021               	movf	SetLEDOut@state,w,c
  5774  000C1C  1022               	iorwf	SetLEDOut@state+1,w,c
  5775  000C1E  A4D8               	btfss	status,2,c
  5776  000C20  D00D               	goto	l5474
  5777                           
  5778                           ;IO.c: 52: Off_Led(1);
  5779  000C22  0E00               	movlw	0
  5780  000C24  6E1C               	movwf	Off_Led@led+1,c
  5781  000C26  0E01               	movlw	1
  5782  000C28  6E1B               	movwf	Off_Led@led,c
  5783  000C2A  EC5D  F012         	call	_Off_Led	;wreg free
  5784                           
  5785                           ;IO.c: 53: do { LATB5 = 0; } while(0);
  5786  000C2E  9A8A               	bcf	3978,5,c	;volatile
  5787                           
  5788                           ;IO.c: 54: LED_array[1] = 0;
  5789  000C30  0E00               	movlw	0
  5790  000C32  0100               	movlb	0	; () banked
  5791  000C34  6F8B               	movwf	(_LED_array+3)& (0+255),b
  5792  000C36  0E00               	movlw	0
  5793  000C38  6F8A               	movwf	(_LED_array+2)& (0+255),b
  5794                           
  5795                           ;IO.c: 55: } else if (state == 2) {
  5796  000C3A  0012               	return	
  5797  000C3C                     l5474:
  5798  000C3C  0E02               	movlw	2
  5799  000C3E  1821               	xorwf	SetLEDOut@state,w,c
  5800  000C40  1022               	iorwf	SetLEDOut@state+1,w,c
  5801  000C42  A4D8               	btfss	status,2,c
  5802  000C44  0012               	return	
  5803                           
  5804                           ;IO.c: 57: do { LATB5 = 0; } while(0);
  5805  000C46  9A8A               	bcf	3978,5,c	;volatile
  5806                           
  5807                           ;IO.c: 58: setLED(1);
  5808  000C48  0E00               	movlw	0
  5809  000C4A  6E1C               	movwf	setLED@led+1,c
  5810  000C4C  0E01               	movlw	1
  5811  000C4E  6E1B               	movwf	setLED@led,c
  5812  000C50  EC85  F00F         	call	_setLED	;wreg free
  5813                           
  5814                           ;IO.c: 59: LED_array[1] = 2;
  5815  000C54  0E00               	movlw	0
  5816  000C56  0100               	movlb	0	; () banked
  5817  000C58  6F8B               	movwf	(_LED_array+3)& (0+255),b
  5818  000C5A  0E02               	movlw	2
  5819  000C5C  6F8A               	movwf	(_LED_array+2)& (0+255),b
  5820                           
  5821                           ; BSR set to: 0
  5822                           ;IO.c: 61: }
  5823                           ;IO.c: 62: break;
  5824                           
  5825                           ; BSR set to: 0
  5826                           
  5827                           ; BSR set to: 0
  5828  000C5E  0012               	return	
  5829  000C60                     l5480:
  5830                           
  5831                           ;IO.c: 64: if (state == 1) {
  5832  000C60  0421               	decf	SetLEDOut@state,w,c
  5833  000C62  1022               	iorwf	SetLEDOut@state+1,w,c
  5834  000C64  A4D8               	btfss	status,2,c
  5835  000C66  D00D               	goto	l5488
  5836                           
  5837                           ;IO.c: 65: Off_Led(2);
  5838  000C68  0E00               	movlw	0
  5839  000C6A  6E1C               	movwf	Off_Led@led+1,c
  5840  000C6C  0E02               	movlw	2
  5841  000C6E  6E1B               	movwf	Off_Led@led,c
  5842  000C70  EC5D  F012         	call	_Off_Led	;wreg free
  5843                           
  5844                           ;IO.c: 66: do { LATD1 = 1; } while(0);
  5845  000C74  828C               	bsf	3980,1,c	;volatile
  5846                           
  5847                           ;IO.c: 67: LED_array[2] = 1;
  5848  000C76  0E00               	movlw	0
  5849  000C78  0100               	movlb	0	; () banked
  5850  000C7A  6F8D               	movwf	(_LED_array+5)& (0+255),b
  5851  000C7C  0E01               	movlw	1
  5852  000C7E  6F8C               	movwf	(_LED_array+4)& (0+255),b
  5853                           
  5854                           ;IO.c: 68: } else if (state == 0) {
  5855  000C80  0012               	return	
  5856  000C82                     l5488:
  5857  000C82  5021               	movf	SetLEDOut@state,w,c
  5858  000C84  1022               	iorwf	SetLEDOut@state+1,w,c
  5859  000C86  A4D8               	btfss	status,2,c
  5860  000C88  D00D               	goto	l5496
  5861                           
  5862                           ;IO.c: 69: Off_Led(2);
  5863  000C8A  0E00               	movlw	0
  5864  000C8C  6E1C               	movwf	Off_Led@led+1,c
  5865  000C8E  0E02               	movlw	2
  5866  000C90  6E1B               	movwf	Off_Led@led,c
  5867  000C92  EC5D  F012         	call	_Off_Led	;wreg free
  5868                           
  5869                           ;IO.c: 70: do { LATD1 = 0; } while(0);
  5870  000C96  928C               	bcf	3980,1,c	;volatile
  5871                           
  5872                           ;IO.c: 71: LED_array[2] = 0;
  5873  000C98  0E00               	movlw	0
  5874  000C9A  0100               	movlb	0	; () banked
  5875  000C9C  6F8D               	movwf	(_LED_array+5)& (0+255),b
  5876  000C9E  0E00               	movlw	0
  5877  000CA0  6F8C               	movwf	(_LED_array+4)& (0+255),b
  5878                           
  5879                           ;IO.c: 72: } else if (state == 2) {
  5880  000CA2  0012               	return	
  5881  000CA4                     l5496:
  5882  000CA4  0E02               	movlw	2
  5883  000CA6  1821               	xorwf	SetLEDOut@state,w,c
  5884  000CA8  1022               	iorwf	SetLEDOut@state+1,w,c
  5885  000CAA  A4D8               	btfss	status,2,c
  5886  000CAC  0012               	return	
  5887                           
  5888                           ;IO.c: 74: do { LATD1 = 0; } while(0);
  5889  000CAE  928C               	bcf	3980,1,c	;volatile
  5890                           
  5891                           ;IO.c: 75: setLED(2);
  5892  000CB0  0E00               	movlw	0
  5893  000CB2  6E1C               	movwf	setLED@led+1,c
  5894  000CB4  0E02               	movlw	2
  5895  000CB6  6E1B               	movwf	setLED@led,c
  5896  000CB8  EC85  F00F         	call	_setLED	;wreg free
  5897                           
  5898                           ;IO.c: 77: LED_array[2] = 2;
  5899  000CBC  0E00               	movlw	0
  5900  000CBE  0100               	movlb	0	; () banked
  5901  000CC0  6F8D               	movwf	(_LED_array+5)& (0+255),b
  5902  000CC2  0E02               	movlw	2
  5903  000CC4  6F8C               	movwf	(_LED_array+4)& (0+255),b
  5904                           
  5905                           ; BSR set to: 0
  5906                           ;IO.c: 79: }
  5907                           ;IO.c: 82: break;
  5908                           
  5909                           ; BSR set to: 0
  5910                           
  5911                           ; BSR set to: 0
  5912  000CC6  0012               	return	
  5913  000CC8                     l5502:
  5914                           
  5915                           ;IO.c: 85: if (state == 1) {
  5916  000CC8  0421               	decf	SetLEDOut@state,w,c
  5917  000CCA  1022               	iorwf	SetLEDOut@state+1,w,c
  5918  000CCC  A4D8               	btfss	status,2,c
  5919  000CCE  D00D               	goto	l5510
  5920                           
  5921                           ;IO.c: 86: Off_Led(3);
  5922  000CD0  0E00               	movlw	0
  5923  000CD2  6E1C               	movwf	Off_Led@led+1,c
  5924  000CD4  0E03               	movlw	3
  5925  000CD6  6E1B               	movwf	Off_Led@led,c
  5926  000CD8  EC5D  F012         	call	_Off_Led	;wreg free
  5927                           
  5928                           ;IO.c: 87: do { LATE2 = 1; } while(0);
  5929  000CDC  848D               	bsf	3981,2,c	;volatile
  5930                           
  5931                           ;IO.c: 88: LED_array[3] = 1;
  5932  000CDE  0E00               	movlw	0
  5933  000CE0  0100               	movlb	0	; () banked
  5934  000CE2  6F8F               	movwf	(_LED_array+7)& (0+255),b
  5935  000CE4  0E01               	movlw	1
  5936  000CE6  6F8E               	movwf	(_LED_array+6)& (0+255),b
  5937                           
  5938                           ;IO.c: 89: } else if (state == 0) {
  5939  000CE8  0012               	return	
  5940  000CEA                     l5510:
  5941  000CEA  5021               	movf	SetLEDOut@state,w,c
  5942  000CEC  1022               	iorwf	SetLEDOut@state+1,w,c
  5943  000CEE  A4D8               	btfss	status,2,c
  5944  000CF0  D00D               	goto	l5518
  5945                           
  5946                           ;IO.c: 90: Off_Led(3);
  5947  000CF2  0E00               	movlw	0
  5948  000CF4  6E1C               	movwf	Off_Led@led+1,c
  5949  000CF6  0E03               	movlw	3
  5950  000CF8  6E1B               	movwf	Off_Led@led,c
  5951  000CFA  EC5D  F012         	call	_Off_Led	;wreg free
  5952                           
  5953                           ;IO.c: 91: do { LATE2 = 0; } while(0);
  5954  000CFE  948D               	bcf	3981,2,c	;volatile
  5955                           
  5956                           ;IO.c: 92: LED_array[3] = 0;
  5957  000D00  0E00               	movlw	0
  5958  000D02  0100               	movlb	0	; () banked
  5959  000D04  6F8F               	movwf	(_LED_array+7)& (0+255),b
  5960  000D06  0E00               	movlw	0
  5961  000D08  6F8E               	movwf	(_LED_array+6)& (0+255),b
  5962                           
  5963                           ;IO.c: 93: }
  5964  000D0A  0012               	return	
  5965  000D0C                     l5518:
  5966                           
  5967                           ;IO.c: 94: else if (state == 2) {
  5968  000D0C  0E02               	movlw	2
  5969  000D0E  1821               	xorwf	SetLEDOut@state,w,c
  5970  000D10  1022               	iorwf	SetLEDOut@state+1,w,c
  5971  000D12  A4D8               	btfss	status,2,c
  5972  000D14  0012               	return	
  5973                           
  5974                           ;IO.c: 95: do { LATE2 = 0; } while(0);
  5975  000D16  948D               	bcf	3981,2,c	;volatile
  5976                           
  5977                           ;IO.c: 96: setLED(3);
  5978  000D18  0E00               	movlw	0
  5979  000D1A  6E1C               	movwf	setLED@led+1,c
  5980  000D1C  0E03               	movlw	3
  5981  000D1E  6E1B               	movwf	setLED@led,c
  5982  000D20  EC85  F00F         	call	_setLED	;wreg free
  5983                           
  5984                           ;IO.c: 97: LED_array[3] = 2;
  5985  000D24  0E00               	movlw	0
  5986  000D26  0100               	movlb	0	; () banked
  5987  000D28  6F8F               	movwf	(_LED_array+7)& (0+255),b
  5988  000D2A  0E02               	movlw	2
  5989  000D2C  6F8E               	movwf	(_LED_array+6)& (0+255),b
  5990                           
  5991                           ; BSR set to: 0
  5992                           ;IO.c: 99: }
  5993                           ;IO.c: 101: break;
  5994                           
  5995                           ; BSR set to: 0
  5996                           
  5997                           ; BSR set to: 0
  5998  000D2E  0012               	return	
  5999  000D30                     l5524:
  6000                           
  6001                           ;IO.c: 103: if (state == 1) {
  6002  000D30  0421               	decf	SetLEDOut@state,w,c
  6003  000D32  1022               	iorwf	SetLEDOut@state+1,w,c
  6004  000D34  A4D8               	btfss	status,2,c
  6005  000D36  D00D               	goto	l5532
  6006                           
  6007                           ;IO.c: 104: Off_Led(4);
  6008  000D38  0E00               	movlw	0
  6009  000D3A  6E1C               	movwf	Off_Led@led+1,c
  6010  000D3C  0E04               	movlw	4
  6011  000D3E  6E1B               	movwf	Off_Led@led,c
  6012  000D40  EC5D  F012         	call	_Off_Led	;wreg free
  6013                           
  6014                           ;IO.c: 105: do { LATE1 = 1; } while(0);
  6015  000D44  828D               	bsf	3981,1,c	;volatile
  6016                           
  6017                           ;IO.c: 106: LED_array[4] = 1;
  6018  000D46  0E00               	movlw	0
  6019  000D48  0100               	movlb	0	; () banked
  6020  000D4A  6F91               	movwf	(_LED_array+9)& (0+255),b
  6021  000D4C  0E01               	movlw	1
  6022  000D4E  6F90               	movwf	(_LED_array+8)& (0+255),b
  6023                           
  6024                           ;IO.c: 107: } else if (state == 0) {
  6025  000D50  0012               	return	
  6026  000D52                     l5532:
  6027  000D52  5021               	movf	SetLEDOut@state,w,c
  6028  000D54  1022               	iorwf	SetLEDOut@state+1,w,c
  6029  000D56  A4D8               	btfss	status,2,c
  6030  000D58  D00D               	goto	l5540
  6031                           
  6032                           ;IO.c: 108: Off_Led(4);
  6033  000D5A  0E00               	movlw	0
  6034  000D5C  6E1C               	movwf	Off_Led@led+1,c
  6035  000D5E  0E04               	movlw	4
  6036  000D60  6E1B               	movwf	Off_Led@led,c
  6037  000D62  EC5D  F012         	call	_Off_Led	;wreg free
  6038                           
  6039                           ;IO.c: 109: do { LATE1 = 0; } while(0);
  6040  000D66  928D               	bcf	3981,1,c	;volatile
  6041                           
  6042                           ;IO.c: 110: LED_array[4] = 0;
  6043  000D68  0E00               	movlw	0
  6044  000D6A  0100               	movlb	0	; () banked
  6045  000D6C  6F91               	movwf	(_LED_array+9)& (0+255),b
  6046  000D6E  0E00               	movlw	0
  6047  000D70  6F90               	movwf	(_LED_array+8)& (0+255),b
  6048                           
  6049                           ;IO.c: 111: }
  6050  000D72  0012               	return	
  6051  000D74                     l5540:
  6052                           
  6053                           ;IO.c: 112: else if (state == 2) {
  6054  000D74  0E02               	movlw	2
  6055  000D76  1821               	xorwf	SetLEDOut@state,w,c
  6056  000D78  1022               	iorwf	SetLEDOut@state+1,w,c
  6057  000D7A  A4D8               	btfss	status,2,c
  6058  000D7C  0012               	return	
  6059                           
  6060                           ;IO.c: 113: do { LATE1 = 0; } while(0);
  6061  000D7E  928D               	bcf	3981,1,c	;volatile
  6062                           
  6063                           ;IO.c: 114: setLED(4);
  6064  000D80  0E00               	movlw	0
  6065  000D82  6E1C               	movwf	setLED@led+1,c
  6066  000D84  0E04               	movlw	4
  6067  000D86  6E1B               	movwf	setLED@led,c
  6068  000D88  EC85  F00F         	call	_setLED	;wreg free
  6069                           
  6070                           ;IO.c: 115: LED_array[4] = 2;
  6071  000D8C  0E00               	movlw	0
  6072  000D8E  0100               	movlb	0	; () banked
  6073  000D90  6F91               	movwf	(_LED_array+9)& (0+255),b
  6074  000D92  0E02               	movlw	2
  6075  000D94  6F90               	movwf	(_LED_array+8)& (0+255),b
  6076                           
  6077                           ; BSR set to: 0
  6078                           ;IO.c: 116: }
  6079                           ;IO.c: 118: break;
  6080                           
  6081                           ; BSR set to: 0
  6082                           
  6083                           ; BSR set to: 0
  6084  000D96  0012               	return	
  6085  000D98                     l5546:
  6086                           
  6087                           ;IO.c: 120: if (state == 1) {
  6088  000D98  0421               	decf	SetLEDOut@state,w,c
  6089  000D9A  1022               	iorwf	SetLEDOut@state+1,w,c
  6090  000D9C  A4D8               	btfss	status,2,c
  6091  000D9E  D00D               	goto	l5554
  6092                           
  6093                           ;IO.c: 121: Off_Led(5);
  6094  000DA0  0E00               	movlw	0
  6095  000DA2  6E1C               	movwf	Off_Led@led+1,c
  6096  000DA4  0E05               	movlw	5
  6097  000DA6  6E1B               	movwf	Off_Led@led,c
  6098  000DA8  EC5D  F012         	call	_Off_Led	;wreg free
  6099                           
  6100                           ;IO.c: 122: do { LATE0 = 1; } while(0);
  6101  000DAC  808D               	bsf	3981,0,c	;volatile
  6102                           
  6103                           ;IO.c: 123: LED_array[5] = 1;
  6104  000DAE  0E00               	movlw	0
  6105  000DB0  0100               	movlb	0	; () banked
  6106  000DB2  6F93               	movwf	(_LED_array+11)& (0+255),b
  6107  000DB4  0E01               	movlw	1
  6108  000DB6  6F92               	movwf	(_LED_array+10)& (0+255),b
  6109                           
  6110                           ;IO.c: 124: } else if (state == 0) {
  6111  000DB8  0012               	return	
  6112  000DBA                     l5554:
  6113  000DBA  5021               	movf	SetLEDOut@state,w,c
  6114  000DBC  1022               	iorwf	SetLEDOut@state+1,w,c
  6115  000DBE  A4D8               	btfss	status,2,c
  6116  000DC0  D00D               	goto	l5562
  6117                           
  6118                           ;IO.c: 125: Off_Led(5);
  6119  000DC2  0E00               	movlw	0
  6120  000DC4  6E1C               	movwf	Off_Led@led+1,c
  6121  000DC6  0E05               	movlw	5
  6122  000DC8  6E1B               	movwf	Off_Led@led,c
  6123  000DCA  EC5D  F012         	call	_Off_Led	;wreg free
  6124                           
  6125                           ;IO.c: 126: do { LATE0 = 0; } while(0);
  6126  000DCE  908D               	bcf	3981,0,c	;volatile
  6127                           
  6128                           ;IO.c: 127: LED_array[5] = 0;
  6129  000DD0  0E00               	movlw	0
  6130  000DD2  0100               	movlb	0	; () banked
  6131  000DD4  6F93               	movwf	(_LED_array+11)& (0+255),b
  6132  000DD6  0E00               	movlw	0
  6133  000DD8  6F92               	movwf	(_LED_array+10)& (0+255),b
  6134                           
  6135                           ;IO.c: 128: }
  6136  000DDA  0012               	return	
  6137  000DDC                     l5562:
  6138                           
  6139                           ;IO.c: 129: else if (state == 2) {
  6140  000DDC  0E02               	movlw	2
  6141  000DDE  1821               	xorwf	SetLEDOut@state,w,c
  6142  000DE0  1022               	iorwf	SetLEDOut@state+1,w,c
  6143  000DE2  A4D8               	btfss	status,2,c
  6144  000DE4  0012               	return	
  6145                           
  6146                           ;IO.c: 130: do { LATE0 = 0; } while(0);
  6147  000DE6  908D               	bcf	3981,0,c	;volatile
  6148                           
  6149                           ;IO.c: 131: setLED(5);
  6150  000DE8  0E00               	movlw	0
  6151  000DEA  6E1C               	movwf	setLED@led+1,c
  6152  000DEC  0E05               	movlw	5
  6153  000DEE  6E1B               	movwf	setLED@led,c
  6154  000DF0  EC85  F00F         	call	_setLED	;wreg free
  6155                           
  6156                           ;IO.c: 132: LED_array[5] = 2;
  6157  000DF4  0E00               	movlw	0
  6158  000DF6  0100               	movlb	0	; () banked
  6159  000DF8  6F93               	movwf	(_LED_array+11)& (0+255),b
  6160  000DFA  0E02               	movlw	2
  6161  000DFC  6F92               	movwf	(_LED_array+10)& (0+255),b
  6162                           
  6163                           ; BSR set to: 0
  6164                           ;IO.c: 138: }
  6165                           
  6166                           ; BSR set to: 0
  6167                           ;IO.c: 134: }
  6168                           ;IO.c: 137: break;
  6169                           
  6170                           ; BSR set to: 0
  6171                           
  6172                           ; BSR set to: 0
  6173  000DFE  0012               	return	
  6174  000E00                     l5570:
  6175  000E00  C01F  F023         	movff	SetLEDOut@lednum,??_SetLEDOut
  6176  000E04  C020  F024         	movff	SetLEDOut@lednum+1,??_SetLEDOut+1
  6177                           
  6178                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6179                           ; Switch size 1, requested type "space"
  6180                           ; Number of cases is 1, Range of values is 0 to 0
  6181                           ; switch strategies available:
  6182                           ; Name         Instructions Cycles
  6183                           ; simple_byte            4     3 (average)
  6184                           ;	Chosen strategy is simple_byte
  6185  000E08  5024               	movf	??_SetLEDOut+1,w,c
  6186  000E0A  0A00               	xorlw	0	; case 0
  6187  000E0C  A4D8               	btfss	status,2,c
  6188  000E0E  0012               	return	
  6189                           
  6190                           ; Switch size 1, requested type "space"
  6191                           ; Number of cases is 6, Range of values is 0 to 5
  6192                           ; switch strategies available:
  6193                           ; Name         Instructions Cycles
  6194                           ; simple_byte           19    10 (average)
  6195                           ;	Chosen strategy is simple_byte
  6196  000E10  5023               	movf	??_SetLEDOut,w,c
  6197  000E12  0A00               	xorlw	0	; case 0
  6198  000E14  B4D8               	btfsc	status,2,c
  6199  000E16  D6BC               	goto	l5436
  6200  000E18  0A01               	xorlw	1	; case 1
  6201  000E1A  B4D8               	btfsc	status,2,c
  6202  000E1C  D6ED               	goto	l5458
  6203  000E1E  0A03               	xorlw	3	; case 2
  6204  000E20  B4D8               	btfsc	status,2,c
  6205  000E22  D71E               	goto	l5480
  6206  000E24  0A01               	xorlw	1	; case 3
  6207  000E26  B4D8               	btfsc	status,2,c
  6208  000E28  D74F               	goto	l5502
  6209  000E2A  0A07               	xorlw	7	; case 4
  6210  000E2C  B4D8               	btfsc	status,2,c
  6211  000E2E  D780               	goto	l5524
  6212  000E30  0A01               	xorlw	1	; case 5
  6213  000E32  A4D8               	btfss	status,2,c
  6214  000E34  0012               	return	
  6215  000E36  D7B0               	goto	l5546
  6216  000E38                     __end_of_SetLEDOut:
  6217                           	opt stack 0
  6218                           tosu	equ	0xFFF
  6219                           tosh	equ	0xFFE
  6220                           tosl	equ	0xFFD
  6221                           pclath	equ	0xFFA
  6222                           tblptru	equ	0xFF8
  6223                           tblptrh	equ	0xFF7
  6224                           tblptrl	equ	0xFF6
  6225                           tablat	equ	0xFF5
  6226                           prodh	equ	0xFF4
  6227                           prodl	equ	0xFF3
  6228                           intcon	equ	0xFF2
  6229                           postinc0	equ	0xFEE
  6230                           wreg	equ	0xFE8
  6231                           indf2	equ	0xFDF
  6232                           postinc2	equ	0xFDE
  6233                           postdec2	equ	0xFDD
  6234                           plusw2	equ	0xFDB
  6235                           fsr2h	equ	0xFDA
  6236                           fsr2l	equ	0xFD9
  6237                           status	equ	0xFD8
  6238                           
  6239 ;; *************** function _setLED *****************
  6240 ;; Defined at:
  6241 ;;		line 168 in file "mcc_generated_files/tmr2.c"
  6242 ;; Parameters:    Size  Location     Type
  6243 ;;  led             2   26[COMRAM] int 
  6244 ;; Auto vars:     Size  Location     Type
  6245 ;;		None
  6246 ;; Return value:  Size  Location     Type
  6247 ;;                  1    wreg      void 
  6248 ;; Registers used:
  6249 ;;		wreg, status,2, status,0
  6250 ;; Tracked objects:
  6251 ;;		On entry : 0/0
  6252 ;;		On exit  : 0/0
  6253 ;;		Unchanged: 0/0
  6254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6255 ;;      Params:         2       0       0       0       0       0       0
  6256 ;;      Locals:         0       0       0       0       0       0       0
  6257 ;;      Temps:          2       0       0       0       0       0       0
  6258 ;;      Totals:         4       0       0       0       0       0       0
  6259 ;;Total ram usage:        4 bytes
  6260 ;; Hardware stack levels used:    1
  6261 ;; Hardware stack levels required when called:    4
  6262 ;; This function calls:
  6263 ;;		Nothing
  6264 ;; This function is called by:
  6265 ;;		_SetLEDOut
  6266 ;; This function uses a non-reentrant model
  6267 ;;
  6268                           
  6269                           	psect	text28
  6270  001F0A                     __ptext28:
  6271                           	opt stack 0
  6272  001F0A                     _setLED:
  6273                           	opt stack 23
  6274                           
  6275                           ;tmr2.c: 169: switch (led){
  6276                           
  6277                           ;incstack = 0
  6278  001F0A  D042               	goto	l5298
  6279  001F0C                     l5284:
  6280                           
  6281                           ;tmr2.c: 171: LEDNUM_ENAB[0]=1;
  6282  001F0C  0E00               	movlw	0
  6283  001F0E  0100               	movlb	0	; () banked
  6284  001F10  6F99               	movwf	(_LEDNUM_ENAB+1)& (0+255),b
  6285  001F12  0E01               	movlw	1
  6286  001F14  6F98               	movwf	_LEDNUM_ENAB& (0+255),b
  6287                           
  6288                           ;tmr2.c: 172: LEDState[0]=0;
  6289  001F16  0E00               	movlw	0
  6290  001F18  0100               	movlb	0	; () banked
  6291  001F1A  6FA5               	movwf	(_LEDState+1)& (0+255),b
  6292  001F1C  0E00               	movlw	0
  6293  001F1E  6FA4               	movwf	_LEDState& (0+255),b
  6294                           
  6295                           ;tmr2.c: 173: break;
  6296  001F20  0012               	return	
  6297  001F22                     l5286:
  6298                           
  6299                           ;tmr2.c: 175: LEDNUM_ENAB[1]=1;
  6300  001F22  0E00               	movlw	0
  6301  001F24  0100               	movlb	0	; () banked
  6302  001F26  6F9B               	movwf	(_LEDNUM_ENAB+3)& (0+255),b
  6303  001F28  0E01               	movlw	1
  6304  001F2A  6F9A               	movwf	(_LEDNUM_ENAB+2)& (0+255),b
  6305                           
  6306                           ;tmr2.c: 176: LEDState[1]=0;
  6307  001F2C  0E00               	movlw	0
  6308  001F2E  0100               	movlb	0	; () banked
  6309  001F30  6FA7               	movwf	(_LEDState+3)& (0+255),b
  6310  001F32  0E00               	movlw	0
  6311  001F34  6FA6               	movwf	(_LEDState+2)& (0+255),b
  6312                           
  6313                           ;tmr2.c: 177: break;
  6314  001F36  0012               	return	
  6315  001F38                     l5288:
  6316                           
  6317                           ;tmr2.c: 179: LEDNUM_ENAB[2]=1;
  6318  001F38  0E00               	movlw	0
  6319  001F3A  0100               	movlb	0	; () banked
  6320  001F3C  6F9D               	movwf	(_LEDNUM_ENAB+5)& (0+255),b
  6321  001F3E  0E01               	movlw	1
  6322  001F40  6F9C               	movwf	(_LEDNUM_ENAB+4)& (0+255),b
  6323                           
  6324                           ;tmr2.c: 180: LEDState[2]=0;
  6325  001F42  0E00               	movlw	0
  6326  001F44  0100               	movlb	0	; () banked
  6327  001F46  6FA9               	movwf	(_LEDState+5)& (0+255),b
  6328  001F48  0E00               	movlw	0
  6329  001F4A  6FA8               	movwf	(_LEDState+4)& (0+255),b
  6330                           
  6331                           ;tmr2.c: 181: break;
  6332  001F4C  0012               	return	
  6333  001F4E                     l5290:
  6334                           
  6335                           ;tmr2.c: 183: LEDNUM_ENAB[3]=1;
  6336  001F4E  0E00               	movlw	0
  6337  001F50  0100               	movlb	0	; () banked
  6338  001F52  6F9F               	movwf	(_LEDNUM_ENAB+7)& (0+255),b
  6339  001F54  0E01               	movlw	1
  6340  001F56  6F9E               	movwf	(_LEDNUM_ENAB+6)& (0+255),b
  6341                           
  6342                           ;tmr2.c: 184: LEDState[3]=0;
  6343  001F58  0E00               	movlw	0
  6344  001F5A  0100               	movlb	0	; () banked
  6345  001F5C  6FAB               	movwf	(_LEDState+7)& (0+255),b
  6346  001F5E  0E00               	movlw	0
  6347  001F60  6FAA               	movwf	(_LEDState+6)& (0+255),b
  6348                           
  6349                           ;tmr2.c: 185: break;
  6350  001F62  0012               	return	
  6351  001F64                     l5292:
  6352                           
  6353                           ;tmr2.c: 187: LEDNUM_ENAB[4]=1;
  6354  001F64  0E00               	movlw	0
  6355  001F66  0100               	movlb	0	; () banked
  6356  001F68  6FA1               	movwf	(_LEDNUM_ENAB+9)& (0+255),b
  6357  001F6A  0E01               	movlw	1
  6358  001F6C  6FA0               	movwf	(_LEDNUM_ENAB+8)& (0+255),b
  6359                           
  6360                           ;tmr2.c: 188: LEDState[4]=0;
  6361  001F6E  0E00               	movlw	0
  6362  001F70  0100               	movlb	0	; () banked
  6363  001F72  6FAD               	movwf	(_LEDState+9)& (0+255),b
  6364  001F74  0E00               	movlw	0
  6365  001F76  6FAC               	movwf	(_LEDState+8)& (0+255),b
  6366                           
  6367                           ;tmr2.c: 189: break;
  6368  001F78  0012               	return	
  6369  001F7A                     l5294:
  6370                           
  6371                           ;tmr2.c: 191: LEDNUM_ENAB[5]=1;
  6372  001F7A  0E00               	movlw	0
  6373  001F7C  0100               	movlb	0	; () banked
  6374  001F7E  6FA3               	movwf	(_LEDNUM_ENAB+11)& (0+255),b
  6375  001F80  0E01               	movlw	1
  6376  001F82  6FA2               	movwf	(_LEDNUM_ENAB+10)& (0+255),b
  6377                           
  6378                           ;tmr2.c: 192: LEDState[5]=0;
  6379  001F84  0E00               	movlw	0
  6380  001F86  0100               	movlb	0	; () banked
  6381  001F88  6FAF               	movwf	(_LEDState+11)& (0+255),b
  6382  001F8A  0E00               	movlw	0
  6383  001F8C  6FAE               	movwf	(_LEDState+10)& (0+255),b
  6384                           
  6385                           ; BSR set to: 0
  6386                           ;tmr2.c: 194: }
  6387                           
  6388                           ;tmr2.c: 193: break;
  6389  001F8E  0012               	return	
  6390  001F90                     l5298:
  6391  001F90  C01B  F01D         	movff	setLED@led,??_setLED
  6392  001F94  C01C  F01E         	movff	setLED@led+1,??_setLED+1
  6393                           
  6394                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6395                           ; Switch size 1, requested type "space"
  6396                           ; Number of cases is 1, Range of values is 0 to 0
  6397                           ; switch strategies available:
  6398                           ; Name         Instructions Cycles
  6399                           ; simple_byte            4     3 (average)
  6400                           ;	Chosen strategy is simple_byte
  6401  001F98  501E               	movf	??_setLED+1,w,c
  6402  001F9A  0A00               	xorlw	0	; case 0
  6403  001F9C  A4D8               	btfss	status,2,c
  6404  001F9E  0012               	return	
  6405                           
  6406                           ; Switch size 1, requested type "space"
  6407                           ; Number of cases is 6, Range of values is 0 to 5
  6408                           ; switch strategies available:
  6409                           ; Name         Instructions Cycles
  6410                           ; simple_byte           19    10 (average)
  6411                           ;	Chosen strategy is simple_byte
  6412  001FA0  501D               	movf	??_setLED,w,c
  6413  001FA2  0A00               	xorlw	0	; case 0
  6414  001FA4  B4D8               	btfsc	status,2,c
  6415  001FA6  D7B2               	goto	l5284
  6416  001FA8  0A01               	xorlw	1	; case 1
  6417  001FAA  B4D8               	btfsc	status,2,c
  6418  001FAC  D7BA               	goto	l5286
  6419  001FAE  0A03               	xorlw	3	; case 2
  6420  001FB0  B4D8               	btfsc	status,2,c
  6421  001FB2  D7C2               	goto	l5288
  6422  001FB4  0A01               	xorlw	1	; case 3
  6423  001FB6  B4D8               	btfsc	status,2,c
  6424  001FB8  D7CA               	goto	l5290
  6425  001FBA  0A07               	xorlw	7	; case 4
  6426  001FBC  B4D8               	btfsc	status,2,c
  6427  001FBE  D7D2               	goto	l5292
  6428  001FC0  0A01               	xorlw	1	; case 5
  6429  001FC2  A4D8               	btfss	status,2,c
  6430  001FC4  0012               	return	
  6431  001FC6  D7D9               	goto	l5294
  6432  001FC8                     __end_of_setLED:
  6433                           	opt stack 0
  6434                           tosu	equ	0xFFF
  6435                           tosh	equ	0xFFE
  6436                           tosl	equ	0xFFD
  6437                           pclath	equ	0xFFA
  6438                           tblptru	equ	0xFF8
  6439                           tblptrh	equ	0xFF7
  6440                           tblptrl	equ	0xFF6
  6441                           tablat	equ	0xFF5
  6442                           prodh	equ	0xFF4
  6443                           prodl	equ	0xFF3
  6444                           intcon	equ	0xFF2
  6445                           postinc0	equ	0xFEE
  6446                           wreg	equ	0xFE8
  6447                           indf2	equ	0xFDF
  6448                           postinc2	equ	0xFDE
  6449                           postdec2	equ	0xFDD
  6450                           plusw2	equ	0xFDB
  6451                           fsr2h	equ	0xFDA
  6452                           fsr2l	equ	0xFD9
  6453                           status	equ	0xFD8
  6454                           
  6455 ;; *************** function _Off_Led *****************
  6456 ;; Defined at:
  6457 ;;		line 196 in file "mcc_generated_files/tmr2.c"
  6458 ;; Parameters:    Size  Location     Type
  6459 ;;  led             2   26[COMRAM] int 
  6460 ;; Auto vars:     Size  Location     Type
  6461 ;;		None
  6462 ;; Return value:  Size  Location     Type
  6463 ;;                  1    wreg      void 
  6464 ;; Registers used:
  6465 ;;		wreg, status,2, status,0
  6466 ;; Tracked objects:
  6467 ;;		On entry : 0/0
  6468 ;;		On exit  : 0/0
  6469 ;;		Unchanged: 0/0
  6470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6471 ;;      Params:         2       0       0       0       0       0       0
  6472 ;;      Locals:         0       0       0       0       0       0       0
  6473 ;;      Temps:          2       0       0       0       0       0       0
  6474 ;;      Totals:         4       0       0       0       0       0       0
  6475 ;;Total ram usage:        4 bytes
  6476 ;; Hardware stack levels used:    1
  6477 ;; Hardware stack levels required when called:    4
  6478 ;; This function calls:
  6479 ;;		Nothing
  6480 ;; This function is called by:
  6481 ;;		_SetLEDOut
  6482 ;; This function uses a non-reentrant model
  6483 ;;
  6484                           
  6485                           	psect	text29
  6486  0024BA                     __ptext29:
  6487                           	opt stack 0
  6488  0024BA                     _Off_Led:
  6489                           	opt stack 23
  6490                           
  6491                           ;tmr2.c: 197: switch (led){
  6492                           
  6493                           ;incstack = 0
  6494  0024BA  D02A               	goto	l5276
  6495  0024BC                     l5250:
  6496                           
  6497                           ;tmr2.c: 199: LEDNUM_ENAB[0]=0;
  6498  0024BC  0E00               	movlw	0
  6499  0024BE  0100               	movlb	0	; () banked
  6500  0024C0  6F99               	movwf	(_LEDNUM_ENAB+1)& (0+255),b
  6501  0024C2  0E00               	movlw	0
  6502  0024C4  6F98               	movwf	_LEDNUM_ENAB& (0+255),b
  6503                           
  6504                           ; BSR set to: 0
  6505                           
  6506                           ; BSR set to: 0
  6507                           
  6508                           ;tmr2.c: 200: do { LATB3 = 0; } while(0);
  6509  0024C6  968A               	bcf	3978,3,c	;volatile
  6510                           
  6511                           ; BSR set to: 0
  6512                           ;tmr2.c: 201: break;
  6513  0024C8  0012               	return	
  6514  0024CA                     l5254:
  6515                           
  6516                           ;tmr2.c: 203: LEDNUM_ENAB[1]=0;
  6517  0024CA  0E00               	movlw	0
  6518  0024CC  0100               	movlb	0	; () banked
  6519  0024CE  6F9B               	movwf	(_LEDNUM_ENAB+3)& (0+255),b
  6520  0024D0  0E00               	movlw	0
  6521  0024D2  6F9A               	movwf	(_LEDNUM_ENAB+2)& (0+255),b
  6522                           
  6523                           ; BSR set to: 0
  6524                           
  6525                           ; BSR set to: 0
  6526                           
  6527                           ;tmr2.c: 204: do { LATB5 = 0; } while(0);
  6528  0024D4  9A8A               	bcf	3978,5,c	;volatile
  6529                           
  6530                           ; BSR set to: 0
  6531                           ;tmr2.c: 205: break;
  6532  0024D6  0012               	return	
  6533  0024D8                     l5258:
  6534                           
  6535                           ;tmr2.c: 207: LEDNUM_ENAB[2]=0;
  6536  0024D8  0E00               	movlw	0
  6537  0024DA  0100               	movlb	0	; () banked
  6538  0024DC  6F9D               	movwf	(_LEDNUM_ENAB+5)& (0+255),b
  6539  0024DE  0E00               	movlw	0
  6540  0024E0  6F9C               	movwf	(_LEDNUM_ENAB+4)& (0+255),b
  6541                           
  6542                           ; BSR set to: 0
  6543                           
  6544                           ; BSR set to: 0
  6545                           
  6546                           ;tmr2.c: 208: do { LATD1 = 0; } while(0);
  6547  0024E2  928C               	bcf	3980,1,c	;volatile
  6548                           
  6549                           ; BSR set to: 0
  6550                           ;tmr2.c: 209: break;
  6551  0024E4  0012               	return	
  6552  0024E6                     l5262:
  6553                           
  6554                           ;tmr2.c: 211: LEDNUM_ENAB[3]=0;
  6555  0024E6  0E00               	movlw	0
  6556  0024E8  0100               	movlb	0	; () banked
  6557  0024EA  6F9F               	movwf	(_LEDNUM_ENAB+7)& (0+255),b
  6558  0024EC  0E00               	movlw	0
  6559  0024EE  6F9E               	movwf	(_LEDNUM_ENAB+6)& (0+255),b
  6560                           
  6561                           ; BSR set to: 0
  6562                           
  6563                           ; BSR set to: 0
  6564                           
  6565                           ;tmr2.c: 212: do { LATE2 = 0; } while(0);
  6566  0024F0  948D               	bcf	3981,2,c	;volatile
  6567                           
  6568                           ; BSR set to: 0
  6569                           ;tmr2.c: 213: break;
  6570  0024F2  0012               	return	
  6571  0024F4                     l5266:
  6572                           
  6573                           ;tmr2.c: 215: LEDNUM_ENAB[4]=0;
  6574  0024F4  0E00               	movlw	0
  6575  0024F6  0100               	movlb	0	; () banked
  6576  0024F8  6FA1               	movwf	(_LEDNUM_ENAB+9)& (0+255),b
  6577  0024FA  0E00               	movlw	0
  6578  0024FC  6FA0               	movwf	(_LEDNUM_ENAB+8)& (0+255),b
  6579                           
  6580                           ; BSR set to: 0
  6581                           
  6582                           ; BSR set to: 0
  6583                           
  6584                           ;tmr2.c: 216: do { LATE1 = 0; } while(0);
  6585  0024FE  928D               	bcf	3981,1,c	;volatile
  6586                           
  6587                           ; BSR set to: 0
  6588                           ;tmr2.c: 217: break;
  6589  002500  0012               	return	
  6590  002502                     l5270:
  6591                           
  6592                           ;tmr2.c: 219: LEDNUM_ENAB[5]=0;
  6593  002502  0E00               	movlw	0
  6594  002504  0100               	movlb	0	; () banked
  6595  002506  6FA3               	movwf	(_LEDNUM_ENAB+11)& (0+255),b
  6596  002508  0E00               	movlw	0
  6597  00250A  6FA2               	movwf	(_LEDNUM_ENAB+10)& (0+255),b
  6598                           
  6599                           ; BSR set to: 0
  6600                           
  6601                           ; BSR set to: 0
  6602                           
  6603                           ;tmr2.c: 220: do { LATE0 = 0; } while(0) ;
  6604  00250C  908D               	bcf	3981,0,c	;volatile
  6605                           
  6606                           ; BSR set to: 0
  6607                           ;tmr2.c: 222: }
  6608                           
  6609                           ; BSR set to: 0
  6610                           ;tmr2.c: 221: break;
  6611  00250E  0012               	return	
  6612  002510                     l5276:
  6613  002510  C01B  F01D         	movff	Off_Led@led,??_Off_Led
  6614  002514  C01C  F01E         	movff	Off_Led@led+1,??_Off_Led+1
  6615                           
  6616                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6617                           ; Switch size 1, requested type "space"
  6618                           ; Number of cases is 1, Range of values is 0 to 0
  6619                           ; switch strategies available:
  6620                           ; Name         Instructions Cycles
  6621                           ; simple_byte            4     3 (average)
  6622                           ;	Chosen strategy is simple_byte
  6623  002518  501E               	movf	??_Off_Led+1,w,c
  6624  00251A  0A00               	xorlw	0	; case 0
  6625  00251C  A4D8               	btfss	status,2,c
  6626  00251E  0012               	return	
  6627                           
  6628                           ; Switch size 1, requested type "space"
  6629                           ; Number of cases is 6, Range of values is 0 to 5
  6630                           ; switch strategies available:
  6631                           ; Name         Instructions Cycles
  6632                           ; simple_byte           19    10 (average)
  6633                           ;	Chosen strategy is simple_byte
  6634  002520  501D               	movf	??_Off_Led,w,c
  6635  002522  0A00               	xorlw	0	; case 0
  6636  002524  B4D8               	btfsc	status,2,c
  6637  002526  D7CA               	goto	l5250
  6638  002528  0A01               	xorlw	1	; case 1
  6639  00252A  B4D8               	btfsc	status,2,c
  6640  00252C  D7CE               	goto	l5254
  6641  00252E  0A03               	xorlw	3	; case 2
  6642  002530  B4D8               	btfsc	status,2,c
  6643  002532  D7D2               	goto	l5258
  6644  002534  0A01               	xorlw	1	; case 3
  6645  002536  B4D8               	btfsc	status,2,c
  6646  002538  D7D6               	goto	l5262
  6647  00253A  0A07               	xorlw	7	; case 4
  6648  00253C  B4D8               	btfsc	status,2,c
  6649  00253E  D7DA               	goto	l5266
  6650  002540  0A01               	xorlw	1	; case 5
  6651  002542  A4D8               	btfss	status,2,c
  6652  002544  0012               	return	
  6653  002546  D7DD               	goto	l5270
  6654  002548                     __end_of_Off_Led:
  6655                           	opt stack 0
  6656                           tosu	equ	0xFFF
  6657                           tosh	equ	0xFFE
  6658                           tosl	equ	0xFFD
  6659                           pclath	equ	0xFFA
  6660                           tblptru	equ	0xFF8
  6661                           tblptrh	equ	0xFF7
  6662                           tblptrl	equ	0xFF6
  6663                           tablat	equ	0xFF5
  6664                           prodh	equ	0xFF4
  6665                           prodl	equ	0xFF3
  6666                           intcon	equ	0xFF2
  6667                           postinc0	equ	0xFEE
  6668                           wreg	equ	0xFE8
  6669                           indf2	equ	0xFDF
  6670                           postinc2	equ	0xFDE
  6671                           postdec2	equ	0xFDD
  6672                           plusw2	equ	0xFDB
  6673                           fsr2h	equ	0xFDA
  6674                           fsr2l	equ	0xFD9
  6675                           status	equ	0xFD8
  6676                           
  6677 ;; *************** function _TBbarGraphs *****************
  6678 ;; Defined at:
  6679 ;;		line 43 in file "Communications.c"
  6680 ;; Parameters:    Size  Location     Type
  6681 ;;  t               2   26[COMRAM] int 
  6682 ;;  b               2   28[COMRAM] int 
  6683 ;; Auto vars:     Size  Location     Type
  6684 ;;		None
  6685 ;; Return value:  Size  Location     Type
  6686 ;;                  1    wreg      void 
  6687 ;; Registers used:
  6688 ;;		None
  6689 ;; Tracked objects:
  6690 ;;		On entry : 0/0
  6691 ;;		On exit  : 0/0
  6692 ;;		Unchanged: 0/0
  6693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6694 ;;      Params:         4       0       0       0       0       0       0
  6695 ;;      Locals:         0       0       0       0       0       0       0
  6696 ;;      Temps:          0       0       0       0       0       0       0
  6697 ;;      Totals:         4       0       0       0       0       0       0
  6698 ;;Total ram usage:        4 bytes
  6699 ;; Hardware stack levels used:    1
  6700 ;; Hardware stack levels required when called:    4
  6701 ;; This function calls:
  6702 ;;		Nothing
  6703 ;; This function is called by:
  6704 ;;		_updateComms
  6705 ;; This function uses a non-reentrant model
  6706 ;;
  6707                           
  6708                           	psect	text30
  6709  002E32                     __ptext30:
  6710                           	opt stack 0
  6711  002E32                     _TBbarGraphs:
  6712                           	opt stack 25
  6713                           
  6714                           ;Communications.c: 44: throttle = t;
  6715                           
  6716                           ;incstack = 0
  6717  002E32  C01B  F0D9         	movff	TBbarGraphs@t,_throttle
  6718  002E36  C01C  F0DA         	movff	TBbarGraphs@t+1,_throttle+1
  6719                           
  6720                           ;Communications.c: 45: brake = b;
  6721  002E3A  C01D  F0C7         	movff	TBbarGraphs@b,_brake
  6722  002E3E  C01E  F0C8         	movff	TBbarGraphs@b+1,_brake+1
  6723  002E42  0012               	return		;funcret
  6724  002E44                     __end_of_TBbarGraphs:
  6725                           	opt stack 0
  6726                           tosu	equ	0xFFF
  6727                           tosh	equ	0xFFE
  6728                           tosl	equ	0xFFD
  6729                           pclath	equ	0xFFA
  6730                           tblptru	equ	0xFF8
  6731                           tblptrh	equ	0xFF7
  6732                           tblptrl	equ	0xFF6
  6733                           tablat	equ	0xFF5
  6734                           prodh	equ	0xFF4
  6735                           prodl	equ	0xFF3
  6736                           intcon	equ	0xFF2
  6737                           postinc0	equ	0xFEE
  6738                           wreg	equ	0xFE8
  6739                           indf2	equ	0xFDF
  6740                           postinc2	equ	0xFDE
  6741                           postdec2	equ	0xFDD
  6742                           plusw2	equ	0xFDB
  6743                           fsr2h	equ	0xFDA
  6744                           fsr2l	equ	0xFD9
  6745                           status	equ	0xFD8
  6746                           
  6747 ;; *************** function ___lwtoft *****************
  6748 ;; Defined at:
  6749 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwtoft.c"
  6750 ;; Parameters:    Size  Location     Type
  6751 ;;  c               2   34[COMRAM] unsigned int 
  6752 ;; Auto vars:     Size  Location     Type
  6753 ;;		None
  6754 ;; Return value:  Size  Location     Type
  6755 ;;                  3   34[COMRAM] float 
  6756 ;; Registers used:
  6757 ;;		wreg, status,2, status,0, cstack
  6758 ;; Tracked objects:
  6759 ;;		On entry : 0/0
  6760 ;;		On exit  : 0/0
  6761 ;;		Unchanged: 0/0
  6762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6763 ;;      Params:         3       0       0       0       0       0       0
  6764 ;;      Locals:         0       0       0       0       0       0       0
  6765 ;;      Temps:          0       0       0       0       0       0       0
  6766 ;;      Totals:         3       0       0       0       0       0       0
  6767 ;;Total ram usage:        3 bytes
  6768 ;; Hardware stack levels used:    1
  6769 ;; Hardware stack levels required when called:    5
  6770 ;; This function calls:
  6771 ;;		___ftpack
  6772 ;; This function is called by:
  6773 ;;		_main
  6774 ;; This function uses a non-reentrant model
  6775 ;;
  6776                           
  6777                           	psect	text31
  6778  002D00                     __ptext31:
  6779                           	opt stack 0
  6780  002D00                     ___lwtoft:
  6781                           	opt stack 25
  6782                           
  6783                           ;incstack = 0
  6784  002D00  C023  F01B         	movff	___lwtoft@c,___ftpack@arg
  6785  002D04  C024  F01C         	movff	___lwtoft@c+1,___ftpack@arg+1
  6786  002D08  6A1D               	clrf	___ftpack@arg+2,c
  6787  002D0A  0E8E               	movlw	142
  6788  002D0C  6E1E               	movwf	___ftpack@exp,c
  6789  002D0E  0E00               	movlw	0
  6790  002D10  6E1F               	movwf	___ftpack@sign,c
  6791  002D12  EC41  F010         	call	___ftpack	;wreg free
  6792  002D16  C01B  F023         	movff	?___ftpack,?___lwtoft
  6793  002D1A  C01C  F024         	movff	?___ftpack+1,?___lwtoft+1
  6794  002D1E  C01D  F025         	movff	?___ftpack+2,?___lwtoft+2
  6795  002D22  0012               	return	
  6796  002D24                     __end_of___lwtoft:
  6797                           	opt stack 0
  6798                           tosu	equ	0xFFF
  6799                           tosh	equ	0xFFE
  6800                           tosl	equ	0xFFD
  6801                           pclath	equ	0xFFA
  6802                           tblptru	equ	0xFF8
  6803                           tblptrh	equ	0xFF7
  6804                           tblptrl	equ	0xFF6
  6805                           tablat	equ	0xFF5
  6806                           prodh	equ	0xFF4
  6807                           prodl	equ	0xFF3
  6808                           intcon	equ	0xFF2
  6809                           postinc0	equ	0xFEE
  6810                           wreg	equ	0xFE8
  6811                           indf2	equ	0xFDF
  6812                           postinc2	equ	0xFDE
  6813                           postdec2	equ	0xFDD
  6814                           plusw2	equ	0xFDB
  6815                           fsr2h	equ	0xFDA
  6816                           fsr2l	equ	0xFD9
  6817                           status	equ	0xFD8
  6818                           
  6819 ;; *************** function ___fttol *****************
  6820 ;; Defined at:
  6821 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\fttol.c"
  6822 ;; Parameters:    Size  Location     Type
  6823 ;;  f1              3    9[BANK0 ] float 
  6824 ;; Auto vars:     Size  Location     Type
  6825 ;;  lval            4    6[BANK1 ] unsigned long 
  6826 ;;  exp1            1   10[BANK1 ] unsigned char 
  6827 ;;  sign1           1    5[BANK1 ] unsigned char 
  6828 ;; Return value:  Size  Location     Type
  6829 ;;                  4    9[BANK0 ] long 
  6830 ;; Registers used:
  6831 ;;		wreg, status,2, status,0
  6832 ;; Tracked objects:
  6833 ;;		On entry : 0/0
  6834 ;;		On exit  : 0/0
  6835 ;;		Unchanged: 0/0
  6836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6837 ;;      Params:         0       4       0       0       0       0       0
  6838 ;;      Locals:         0       0       6       0       0       0       0
  6839 ;;      Temps:          0       0       5       0       0       0       0
  6840 ;;      Totals:         0       4      11       0       0       0       0
  6841 ;;Total ram usage:       15 bytes
  6842 ;; Hardware stack levels used:    1
  6843 ;; Hardware stack levels required when called:    4
  6844 ;; This function calls:
  6845 ;;		Nothing
  6846 ;; This function is called by:
  6847 ;;		_main
  6848 ;; This function uses a non-reentrant model
  6849 ;;
  6850                           
  6851                           	psect	text32
  6852  001372                     __ptext32:
  6853                           	opt stack 0
  6854  001372                     ___fttol:
  6855                           	opt stack 26
  6856                           
  6857                           ;incstack = 0
  6858  001372  C0F9  F139         	movff	___fttol@f1+2,??___fttol
  6859  001376  0101               	movlb	1	; () banked
  6860  001378  6B3A               	clrf	(??___fttol+1)& (0+255),b
  6861  00137A  6B3B               	clrf	(??___fttol+2)& (0+255),b
  6862  00137C  0100               	movlb	0	; () banked
  6863  00137E  35F8               	rlcf	(___fttol@f1+1)& (0+255),w,b
  6864  001380  0101               	movlb	1	; () banked
  6865  001382  3739               	rlcf	??___fttol& (0+255),f,b
  6866  001384  E301               	bnc	u7161
  6867  001386  813A               	bsf	(??___fttol+1)& (0+255),0,b
  6868  001388                     u7161:
  6869  001388  0101               	movlb	1	; () banked
  6870  00138A  5139               	movf	??___fttol& (0+255),w,b
  6871  00138C  0101               	movlb	1	; () banked
  6872  00138E  6F43               	movwf	___fttol@exp1& (0+255),b
  6873  001390  0101               	movlb	1	; () banked
  6874  001392  5143               	movf	___fttol@exp1& (0+255),w,b
  6875  001394  A4D8               	btfss	status,2,c
  6876  001396  D00A               	goto	l6462
  6877                           
  6878                           ; BSR set to: 1
  6879  001398  0E00               	movlw	0
  6880  00139A  0100               	movlb	0	; () banked
  6881  00139C  6FF7               	movwf	?___fttol& (0+255),b
  6882  00139E  0E00               	movlw	0
  6883  0013A0  6FF8               	movwf	(?___fttol+1)& (0+255),b
  6884  0013A2  0E00               	movlw	0
  6885  0013A4  6FF9               	movwf	(?___fttol+2)& (0+255),b
  6886  0013A6  0E00               	movlw	0
  6887  0013A8  6FFA               	movwf	(?___fttol+3)& (0+255),b
  6888                           
  6889                           ; BSR set to: 0
  6890  0013AA  0012               	return	
  6891  0013AC                     l6462:
  6892  0013AC  0E17               	movlw	23
  6893  0013AE  0101               	movlb	1	; () banked
  6894  0013B0  6F39               	movwf	??___fttol& (0+255),b
  6895  0013B2  C0F7  F13A         	movff	___fttol@f1,??___fttol+1
  6896  0013B6  C0F8  F13B         	movff	___fttol@f1+1,??___fttol+2
  6897  0013BA  C0F9  F13C         	movff	___fttol@f1+2,??___fttol+3
  6898  0013BE  0101               	movlb	1	; () banked
  6899  0013C0  2939               	incf	??___fttol& (0+255),w,b
  6900  0013C2  0101               	movlb	1	; () banked
  6901  0013C4  6F3D               	movwf	(??___fttol+4)& (0+255),b
  6902  0013C6  D005               	goto	u7180
  6903  0013C8                     u7185:
  6904  0013C8  0101               	movlb	1	; () banked
  6905  0013CA  90D8               	bcf	status,0,c
  6906  0013CC  333C               	rrcf	(??___fttol+3)& (0+255),f,b
  6907  0013CE  333B               	rrcf	(??___fttol+2)& (0+255),f,b
  6908  0013D0  333A               	rrcf	(??___fttol+1)& (0+255),f,b
  6909  0013D2                     u7180:
  6910  0013D2  0101               	movlb	1	; () banked
  6911  0013D4  2F3D               	decfsz	(??___fttol+4)& (0+255),f,b
  6912  0013D6  D7F8               	goto	u7185
  6913  0013D8  0101               	movlb	1	; () banked
  6914  0013DA  513A               	movf	(??___fttol+1)& (0+255),w,b
  6915  0013DC  0101               	movlb	1	; () banked
  6916  0013DE  6F3E               	movwf	___fttol@sign1& (0+255),b
  6917                           
  6918                           ; BSR set to: 1
  6919  0013E0  0100               	movlb	0	; () banked
  6920  0013E2  8FF8               	bsf	(___fttol@f1+1)& (0+255),7,b
  6921                           
  6922                           ; BSR set to: 0
  6923  0013E4  0EFF               	movlw	255
  6924  0013E6  0100               	movlb	0	; () banked
  6925  0013E8  17F7               	andwf	___fttol@f1& (0+255),f,b
  6926  0013EA  0EFF               	movlw	255
  6927  0013EC  0100               	movlb	0	; () banked
  6928  0013EE  17F8               	andwf	(___fttol@f1+1)& (0+255),f,b
  6929  0013F0  0E00               	movlw	0
  6930  0013F2  0100               	movlb	0	; () banked
  6931  0013F4  17F9               	andwf	(___fttol@f1+2)& (0+255),f,b
  6932                           
  6933                           ; BSR set to: 0
  6934  0013F6  0100               	movlb	0	; () banked
  6935  0013F8  51F7               	movf	___fttol@f1& (0+255),w,b
  6936  0013FA  0101               	movlb	1	; () banked
  6937  0013FC  6F3F               	movwf	___fttol@lval& (0+255),b
  6938  0013FE  0100               	movlb	0	; () banked
  6939  001400  51F8               	movf	(___fttol@f1+1)& (0+255),w,b
  6940  001402  0101               	movlb	1	; () banked
  6941  001404  6F40               	movwf	(___fttol@lval+1)& (0+255),b
  6942  001406  0100               	movlb	0	; () banked
  6943  001408  51F9               	movf	(___fttol@f1+2)& (0+255),w,b
  6944  00140A  0101               	movlb	1	; () banked
  6945  00140C  6F41               	movwf	(___fttol@lval+2)& (0+255),b
  6946  00140E  0101               	movlb	1	; () banked
  6947  001410  6B42               	clrf	(___fttol@lval+3)& (0+255),b
  6948                           
  6949                           ; BSR set to: 1
  6950  001412  0E8E               	movlw	142
  6951  001414  0101               	movlb	1	; () banked
  6952  001416  5F43               	subwf	___fttol@exp1& (0+255),f,b
  6953                           
  6954                           ; BSR set to: 1
  6955  001418  0101               	movlb	1	; () banked
  6956  00141A  AF43               	btfss	___fttol@exp1& (0+255),7,b
  6957  00141C  D01A               	goto	l6484
  6958                           
  6959                           ; BSR set to: 1
  6960  00141E  0101               	movlb	1	; () banked
  6961  001420  5143               	movf	___fttol@exp1& (0+255),w,b
  6962  001422  0A80               	xorlw	128
  6963  001424  0F8F               	addlw	143
  6964  001426  B0D8               	btfsc	status,0,c
  6965  001428  D00A               	goto	l6480
  6966                           
  6967                           ; BSR set to: 1
  6968  00142A  0E00               	movlw	0
  6969  00142C  0100               	movlb	0	; () banked
  6970  00142E  6FF7               	movwf	?___fttol& (0+255),b
  6971  001430  0E00               	movlw	0
  6972  001432  6FF8               	movwf	(?___fttol+1)& (0+255),b
  6973  001434  0E00               	movlw	0
  6974  001436  6FF9               	movwf	(?___fttol+2)& (0+255),b
  6975  001438  0E00               	movlw	0
  6976  00143A  6FFA               	movwf	(?___fttol+3)& (0+255),b
  6977                           
  6978                           ; BSR set to: 0
  6979  00143C  0012               	return	
  6980  00143E                     l6480:
  6981  00143E  0101               	movlb	1	; () banked
  6982  001440  90D8               	bcf	status,0,c
  6983  001442  3342               	rrcf	(___fttol@lval+3)& (0+255),f,b
  6984  001444  3341               	rrcf	(___fttol@lval+2)& (0+255),f,b
  6985  001446  3340               	rrcf	(___fttol@lval+1)& (0+255),f,b
  6986  001448  333F               	rrcf	___fttol@lval& (0+255),f,b
  6987                           
  6988                           ; BSR set to: 1
  6989  00144A  0101               	movlb	1	; () banked
  6990  00144C  3F43               	incfsz	___fttol@exp1& (0+255),f,b
  6991  00144E  D7F7               	goto	l6480
  6992                           
  6993                           ; BSR set to: 1
  6994  001450  D01B               	goto	l6494
  6995  001452                     l6484:
  6996                           
  6997                           ; BSR set to: 1
  6998  001452  0E17               	movlw	23
  6999  001454  0101               	movlb	1	; () banked
  7000  001456  6543               	cpfsgt	___fttol@exp1& (0+255),b
  7001  001458  D012               	goto	l6492
  7002                           
  7003                           ; BSR set to: 1
  7004  00145A  0E00               	movlw	0
  7005  00145C  0100               	movlb	0	; () banked
  7006  00145E  6FF7               	movwf	?___fttol& (0+255),b
  7007  001460  0E00               	movlw	0
  7008  001462  6FF8               	movwf	(?___fttol+1)& (0+255),b
  7009  001464  0E00               	movlw	0
  7010  001466  6FF9               	movwf	(?___fttol+2)& (0+255),b
  7011  001468  0E00               	movlw	0
  7012  00146A  6FFA               	movwf	(?___fttol+3)& (0+255),b
  7013                           
  7014                           ; BSR set to: 0
  7015  00146C  0012               	return	
  7016  00146E                     l6490:
  7017  00146E  0101               	movlb	1	; () banked
  7018  001470  90D8               	bcf	status,0,c
  7019  001472  373F               	rlcf	___fttol@lval& (0+255),f,b
  7020  001474  3740               	rlcf	(___fttol@lval+1)& (0+255),f,b
  7021  001476  3741               	rlcf	(___fttol@lval+2)& (0+255),f,b
  7022  001478  3742               	rlcf	(___fttol@lval+3)& (0+255),f,b
  7023  00147A  0101               	movlb	1	; () banked
  7024  00147C  0743               	decf	___fttol@exp1& (0+255),f,b
  7025  00147E                     l6492:
  7026  00147E  0101               	movlb	1	; () banked
  7027  001480  5143               	movf	___fttol@exp1& (0+255),w,b
  7028  001482  0101               	movlb	1	; () banked
  7029  001484  A4D8               	btfss	status,2,c
  7030  001486  D7F3               	goto	l6490
  7031  001488                     l6494:
  7032                           
  7033                           ; BSR set to: 1
  7034  001488  0101               	movlb	1	; () banked
  7035  00148A  513E               	movf	___fttol@sign1& (0+255),w,b
  7036  00148C  0101               	movlb	1	; () banked
  7037  00148E  B4D8               	btfsc	status,2,c
  7038  001490  D009               	goto	l6498
  7039                           
  7040                           ; BSR set to: 1
  7041  001492  0101               	movlb	1	; () banked
  7042  001494  1F42               	comf	(___fttol@lval+3)& (0+255),f,b
  7043  001496  1F41               	comf	(___fttol@lval+2)& (0+255),f,b
  7044  001498  1F40               	comf	(___fttol@lval+1)& (0+255),f,b
  7045  00149A  6D3F               	negf	___fttol@lval& (0+255),b
  7046  00149C  0E00               	movlw	0
  7047  00149E  2340               	addwfc	(___fttol@lval+1)& (0+255),f,b
  7048  0014A0  2341               	addwfc	(___fttol@lval+2)& (0+255),f,b
  7049  0014A2  2342               	addwfc	(___fttol@lval+3)& (0+255),f,b
  7050  0014A4                     l6498:
  7051                           
  7052                           ; BSR set to: 1
  7053  0014A4  C13F  F0F7         	movff	___fttol@lval,?___fttol
  7054  0014A8  C140  F0F8         	movff	___fttol@lval+1,?___fttol+1
  7055  0014AC  C141  F0F9         	movff	___fttol@lval+2,?___fttol+2
  7056  0014B0  C142  F0FA         	movff	___fttol@lval+3,?___fttol+3
  7057  0014B4  0012               	return	
  7058  0014B6                     __end_of___fttol:
  7059                           	opt stack 0
  7060                           tosu	equ	0xFFF
  7061                           tosh	equ	0xFFE
  7062                           tosl	equ	0xFFD
  7063                           pclath	equ	0xFFA
  7064                           tblptru	equ	0xFF8
  7065                           tblptrh	equ	0xFF7
  7066                           tblptrl	equ	0xFF6
  7067                           tablat	equ	0xFF5
  7068                           prodh	equ	0xFF4
  7069                           prodl	equ	0xFF3
  7070                           intcon	equ	0xFF2
  7071                           postinc0	equ	0xFEE
  7072                           wreg	equ	0xFE8
  7073                           indf2	equ	0xFDF
  7074                           postinc2	equ	0xFDE
  7075                           postdec2	equ	0xFDD
  7076                           plusw2	equ	0xFDB
  7077                           fsr2h	equ	0xFDA
  7078                           fsr2l	equ	0xFD9
  7079                           status	equ	0xFD8
  7080                           
  7081 ;; *************** function ___ftmul *****************
  7082 ;; Defined at:
  7083 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftmul.c"
  7084 ;; Parameters:    Size  Location     Type
  7085 ;;  f1              3   37[COMRAM] float 
  7086 ;;  f2              3   40[COMRAM] float 
  7087 ;; Auto vars:     Size  Location     Type
  7088 ;;  f3_as_produc    3    4[BANK0 ] unsigned um
  7089 ;;  sign            1    8[BANK0 ] unsigned char 
  7090 ;;  cntr            1    7[BANK0 ] unsigned char 
  7091 ;;  exp             1    3[BANK0 ] unsigned char 
  7092 ;; Return value:  Size  Location     Type
  7093 ;;                  3   37[COMRAM] float 
  7094 ;; Registers used:
  7095 ;;		wreg, status,2, status,0, cstack
  7096 ;; Tracked objects:
  7097 ;;		On entry : 0/0
  7098 ;;		On exit  : 0/0
  7099 ;;		Unchanged: 0/0
  7100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7101 ;;      Params:         6       0       0       0       0       0       0
  7102 ;;      Locals:         0       6       0       0       0       0       0
  7103 ;;      Temps:          0       3       0       0       0       0       0
  7104 ;;      Totals:         6       9       0       0       0       0       0
  7105 ;;Total ram usage:       15 bytes
  7106 ;; Hardware stack levels used:    1
  7107 ;; Hardware stack levels required when called:    5
  7108 ;; This function calls:
  7109 ;;		___ftpack
  7110 ;; This function is called by:
  7111 ;;		_main
  7112 ;; This function uses a non-reentrant model
  7113 ;;
  7114                           
  7115                           	psect	text33
  7116  0015E6                     __ptext33:
  7117                           	opt stack 0
  7118  0015E6                     ___ftmul:
  7119                           	opt stack 25
  7120                           
  7121                           ;incstack = 0
  7122  0015E6  C028  F0EE         	movff	___ftmul@f1+2,??___ftmul
  7123  0015EA  0100               	movlb	0	; () banked
  7124  0015EC  6BEF               	clrf	(??___ftmul+1)& (0+255),b
  7125  0015EE  6BF0               	clrf	(??___ftmul+2)& (0+255),b
  7126  0015F0  3427               	rlcf	___ftmul@f1+1,w,c
  7127  0015F2  0100               	movlb	0	; () banked
  7128  0015F4  37EE               	rlcf	??___ftmul& (0+255),f,b
  7129  0015F6  E301               	bnc	u7101
  7130  0015F8  81EF               	bsf	(??___ftmul+1)& (0+255),0,b
  7131  0015FA                     u7101:
  7132  0015FA  0100               	movlb	0	; () banked
  7133  0015FC  51EE               	movf	??___ftmul& (0+255),w,b
  7134  0015FE  0100               	movlb	0	; () banked
  7135  001600  6FF1               	movwf	___ftmul@exp& (0+255),b
  7136  001602  0100               	movlb	0	; () banked
  7137  001604  51F1               	movf	___ftmul@exp& (0+255),w,b
  7138  001606  A4D8               	btfss	status,2,c
  7139  001608  D007               	goto	l6414
  7140                           
  7141                           ; BSR set to: 0
  7142  00160A  0E00               	movlw	0
  7143  00160C  6E26               	movwf	?___ftmul,c
  7144  00160E  0E00               	movlw	0
  7145  001610  6E27               	movwf	?___ftmul+1,c
  7146  001612  0E00               	movlw	0
  7147  001614  6E28               	movwf	?___ftmul+2,c
  7148                           
  7149                           ; BSR set to: 0
  7150  001616  0012               	return	
  7151  001618                     l6414:
  7152                           
  7153                           ; BSR set to: 0
  7154  001618  C02B  F0EE         	movff	___ftmul@f2+2,??___ftmul
  7155  00161C  0100               	movlb	0	; () banked
  7156  00161E  6BEF               	clrf	(??___ftmul+1)& (0+255),b
  7157  001620  6BF0               	clrf	(??___ftmul+2)& (0+255),b
  7158  001622  342A               	rlcf	___ftmul@f2+1,w,c
  7159  001624  0100               	movlb	0	; () banked
  7160  001626  37EE               	rlcf	??___ftmul& (0+255),f,b
  7161  001628  E301               	bnc	u7121
  7162  00162A  81EF               	bsf	(??___ftmul+1)& (0+255),0,b
  7163  00162C                     u7121:
  7164  00162C  0100               	movlb	0	; () banked
  7165  00162E  51EE               	movf	??___ftmul& (0+255),w,b
  7166  001630  0100               	movlb	0	; () banked
  7167  001632  6FF6               	movwf	___ftmul@sign& (0+255),b
  7168  001634  0100               	movlb	0	; () banked
  7169  001636  51F6               	movf	___ftmul@sign& (0+255),w,b
  7170  001638  A4D8               	btfss	status,2,c
  7171  00163A  D007               	goto	l6420
  7172                           
  7173                           ; BSR set to: 0
  7174  00163C  0E00               	movlw	0
  7175  00163E  6E26               	movwf	?___ftmul,c
  7176  001640  0E00               	movlw	0
  7177  001642  6E27               	movwf	?___ftmul+1,c
  7178  001644  0E00               	movlw	0
  7179  001646  6E28               	movwf	?___ftmul+2,c
  7180                           
  7181                           ; BSR set to: 0
  7182  001648  0012               	return	
  7183  00164A                     l6420:
  7184                           
  7185                           ; BSR set to: 0
  7186  00164A  0100               	movlb	0	; () banked
  7187  00164C  51F6               	movf	___ftmul@sign& (0+255),w,b
  7188  00164E  0F7B               	addlw	123
  7189  001650  0100               	movlb	0	; () banked
  7190  001652  27F1               	addwf	___ftmul@exp& (0+255),f,b
  7191                           
  7192                           ; BSR set to: 0
  7193  001654  C028  F0F6         	movff	___ftmul@f1+2,___ftmul@sign
  7194  001658  502B               	movf	___ftmul@f2+2,w,c
  7195  00165A  0100               	movlb	0	; () banked
  7196  00165C  1BF6               	xorwf	___ftmul@sign& (0+255),f,b
  7197  00165E  0E80               	movlw	128
  7198  001660  0100               	movlb	0	; () banked
  7199  001662  17F6               	andwf	___ftmul@sign& (0+255),f,b
  7200                           
  7201                           ; BSR set to: 0
  7202  001664  8E27               	bsf	___ftmul@f1+1,7,c
  7203                           
  7204                           ; BSR set to: 0
  7205  001666  8E2A               	bsf	___ftmul@f2+1,7,c
  7206                           
  7207                           ; BSR set to: 0
  7208  001668  0EFF               	movlw	255
  7209  00166A  1629               	andwf	___ftmul@f2,f,c
  7210  00166C  0EFF               	movlw	255
  7211  00166E  162A               	andwf	___ftmul@f2+1,f,c
  7212  001670  0E00               	movlw	0
  7213  001672  162B               	andwf	___ftmul@f2+2,f,c
  7214                           
  7215                           ; BSR set to: 0
  7216  001674  0E00               	movlw	0
  7217  001676  0100               	movlb	0	; () banked
  7218  001678  6FF2               	movwf	___ftmul@f3_as_product& (0+255),b
  7219  00167A  0E00               	movlw	0
  7220  00167C  0100               	movlb	0	; () banked
  7221  00167E  6FF3               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  7222  001680  0E00               	movlw	0
  7223  001682  0100               	movlb	0	; () banked
  7224  001684  6FF4               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  7225                           
  7226                           ; BSR set to: 0
  7227  001686  0E07               	movlw	7
  7228  001688  0100               	movlb	0	; () banked
  7229  00168A  6FF5               	movwf	___ftmul@cntr& (0+255),b
  7230  00168C                     l6434:
  7231                           
  7232                           ; BSR set to: 0
  7233  00168C  A026               	btfss	___ftmul@f1,0,c
  7234  00168E  D009               	goto	l6438
  7235                           
  7236                           ; BSR set to: 0
  7237  001690  5029               	movf	___ftmul@f2,w,c
  7238  001692  0100               	movlb	0	; () banked
  7239  001694  27F2               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7240  001696  502A               	movf	___ftmul@f2+1,w,c
  7241  001698  0100               	movlb	0	; () banked
  7242  00169A  23F3               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7243  00169C  502B               	movf	___ftmul@f2+2,w,c
  7244  00169E  0100               	movlb	0	; () banked
  7245  0016A0  23F4               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7246  0016A2                     l6438:
  7247                           
  7248                           ; BSR set to: 0
  7249  0016A2  90D8               	bcf	status,0,c
  7250  0016A4  3228               	rrcf	___ftmul@f1+2,f,c
  7251  0016A6  3227               	rrcf	___ftmul@f1+1,f,c
  7252  0016A8  3226               	rrcf	___ftmul@f1,f,c
  7253  0016AA  90D8               	bcf	status,0,c
  7254  0016AC  3629               	rlcf	___ftmul@f2,f,c
  7255  0016AE  362A               	rlcf	___ftmul@f2+1,f,c
  7256  0016B0  362B               	rlcf	___ftmul@f2+2,f,c
  7257                           
  7258                           ; BSR set to: 0
  7259  0016B2  0100               	movlb	0	; () banked
  7260  0016B4  2FF5               	decfsz	___ftmul@cntr& (0+255),f,b
  7261  0016B6  D7EA               	goto	l6434
  7262                           
  7263                           ; BSR set to: 0
  7264                           
  7265                           ; BSR set to: 0
  7266  0016B8  0E09               	movlw	9
  7267  0016BA  0100               	movlb	0	; () banked
  7268  0016BC  6FF5               	movwf	___ftmul@cntr& (0+255),b
  7269  0016BE                     l6444:
  7270                           
  7271                           ; BSR set to: 0
  7272  0016BE  A026               	btfss	___ftmul@f1,0,c
  7273  0016C0  D009               	goto	l6448
  7274                           
  7275                           ; BSR set to: 0
  7276  0016C2  5029               	movf	___ftmul@f2,w,c
  7277  0016C4  0100               	movlb	0	; () banked
  7278  0016C6  27F2               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7279  0016C8  502A               	movf	___ftmul@f2+1,w,c
  7280  0016CA  0100               	movlb	0	; () banked
  7281  0016CC  23F3               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7282  0016CE  502B               	movf	___ftmul@f2+2,w,c
  7283  0016D0  0100               	movlb	0	; () banked
  7284  0016D2  23F4               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7285  0016D4                     l6448:
  7286                           
  7287                           ; BSR set to: 0
  7288  0016D4  90D8               	bcf	status,0,c
  7289  0016D6  3228               	rrcf	___ftmul@f1+2,f,c
  7290  0016D8  3227               	rrcf	___ftmul@f1+1,f,c
  7291  0016DA  3226               	rrcf	___ftmul@f1,f,c
  7292  0016DC  0100               	movlb	0	; () banked
  7293  0016DE  90D8               	bcf	status,0,c
  7294  0016E0  33F4               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  7295  0016E2  33F3               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  7296  0016E4  33F2               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  7297                           
  7298                           ; BSR set to: 0
  7299  0016E6  0100               	movlb	0	; () banked
  7300  0016E8  2FF5               	decfsz	___ftmul@cntr& (0+255),f,b
  7301  0016EA  D7E9               	goto	l6444
  7302                           
  7303                           ; BSR set to: 0
  7304                           
  7305                           ; BSR set to: 0
  7306  0016EC  C0F2  F01B         	movff	___ftmul@f3_as_product,___ftpack@arg
  7307  0016F0  C0F3  F01C         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7308  0016F4  C0F4  F01D         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7309  0016F8  C0F1  F01E         	movff	___ftmul@exp,___ftpack@exp
  7310  0016FC  C0F6  F01F         	movff	___ftmul@sign,___ftpack@sign
  7311  001700  EC41  F010         	call	___ftpack	;wreg free
  7312  001704  C01B  F026         	movff	?___ftpack,?___ftmul
  7313  001708  C01C  F027         	movff	?___ftpack+1,?___ftmul+1
  7314  00170C  C01D  F028         	movff	?___ftpack+2,?___ftmul+2
  7315  001710  0012               	return	
  7316  001712                     __end_of___ftmul:
  7317                           	opt stack 0
  7318                           tosu	equ	0xFFF
  7319                           tosh	equ	0xFFE
  7320                           tosl	equ	0xFFD
  7321                           pclath	equ	0xFFA
  7322                           tblptru	equ	0xFF8
  7323                           tblptrh	equ	0xFF7
  7324                           tblptrl	equ	0xFF6
  7325                           tablat	equ	0xFF5
  7326                           prodh	equ	0xFF4
  7327                           prodl	equ	0xFF3
  7328                           intcon	equ	0xFF2
  7329                           postinc0	equ	0xFEE
  7330                           wreg	equ	0xFE8
  7331                           indf2	equ	0xFDF
  7332                           postinc2	equ	0xFDE
  7333                           postdec2	equ	0xFDD
  7334                           plusw2	equ	0xFDB
  7335                           fsr2h	equ	0xFDA
  7336                           fsr2l	equ	0xFD9
  7337                           status	equ	0xFD8
  7338                           
  7339 ;; *************** function ___ftpack *****************
  7340 ;; Defined at:
  7341 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\float.c"
  7342 ;; Parameters:    Size  Location     Type
  7343 ;;  arg             3   26[COMRAM] unsigned um
  7344 ;;  exp             1   29[COMRAM] unsigned char 
  7345 ;;  sign            1   30[COMRAM] unsigned char 
  7346 ;; Auto vars:     Size  Location     Type
  7347 ;;		None
  7348 ;; Return value:  Size  Location     Type
  7349 ;;                  3   26[COMRAM] float 
  7350 ;; Registers used:
  7351 ;;		wreg, status,2, status,0
  7352 ;; Tracked objects:
  7353 ;;		On entry : 0/0
  7354 ;;		On exit  : 0/0
  7355 ;;		Unchanged: 0/0
  7356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7357 ;;      Params:         5       0       0       0       0       0       0
  7358 ;;      Locals:         0       0       0       0       0       0       0
  7359 ;;      Temps:          3       0       0       0       0       0       0
  7360 ;;      Totals:         8       0       0       0       0       0       0
  7361 ;;Total ram usage:        8 bytes
  7362 ;; Hardware stack levels used:    1
  7363 ;; Hardware stack levels required when called:    4
  7364 ;; This function calls:
  7365 ;;		Nothing
  7366 ;; This function is called by:
  7367 ;;		___ftmul
  7368 ;;		___lwtoft
  7369 ;; This function uses a non-reentrant model
  7370 ;;
  7371                           
  7372                           	psect	text34
  7373  002082                     __ptext34:
  7374                           	opt stack 0
  7375  002082                     ___ftpack:
  7376                           	opt stack 25
  7377                           
  7378                           ;incstack = 0
  7379  002082  501E               	movf	___ftpack@exp,w,c
  7380  002084  B4D8               	btfsc	status,2,c
  7381  002086  D005               	goto	l6084
  7382  002088  501B               	movf	___ftpack@arg,w,c
  7383  00208A  101C               	iorwf	___ftpack@arg+1,w,c
  7384  00208C  101D               	iorwf	___ftpack@arg+2,w,c
  7385  00208E  A4D8               	btfss	status,2,c
  7386  002090  D00C               	goto	l6090
  7387  002092                     l6084:
  7388  002092  0E00               	movlw	0
  7389  002094  6E1B               	movwf	?___ftpack,c
  7390  002096  0E00               	movlw	0
  7391  002098  6E1C               	movwf	?___ftpack+1,c
  7392  00209A  0E00               	movlw	0
  7393  00209C  6E1D               	movwf	?___ftpack+2,c
  7394  00209E  0012               	return	
  7395  0020A0                     l6088:
  7396  0020A0  2A1E               	incf	___ftpack@exp,f,c
  7397  0020A2  90D8               	bcf	status,0,c
  7398  0020A4  321D               	rrcf	___ftpack@arg+2,f,c
  7399  0020A6  321C               	rrcf	___ftpack@arg+1,f,c
  7400  0020A8  321B               	rrcf	___ftpack@arg,f,c
  7401  0020AA                     l6090:
  7402  0020AA  0E00               	movlw	0
  7403  0020AC  141B               	andwf	___ftpack@arg,w,c
  7404  0020AE  6E20               	movwf	??___ftpack& (0+255),c
  7405  0020B0  0E00               	movlw	0
  7406  0020B2  141C               	andwf	___ftpack@arg+1,w,c
  7407  0020B4  6E21               	movwf	(??___ftpack+1)& (0+255),c
  7408  0020B6  0EFE               	movlw	254
  7409  0020B8  141D               	andwf	___ftpack@arg+2,w,c
  7410  0020BA  6E22               	movwf	(??___ftpack+2)& (0+255),c
  7411  0020BC  5020               	movf	??___ftpack,w,c
  7412  0020BE  1021               	iorwf	??___ftpack+1,w,c
  7413  0020C0  1022               	iorwf	??___ftpack+2,w,c
  7414  0020C2  B4D8               	btfsc	status,2,c
  7415  0020C4  D00C               	goto	l6096
  7416  0020C6  D7EC               	goto	l6088
  7417  0020C8                     l6092:
  7418  0020C8  2A1E               	incf	___ftpack@exp,f,c
  7419  0020CA  0E01               	movlw	1
  7420  0020CC  261B               	addwf	___ftpack@arg,f,c
  7421  0020CE  0E00               	movlw	0
  7422  0020D0  221C               	addwfc	___ftpack@arg+1,f,c
  7423  0020D2  0E00               	movlw	0
  7424  0020D4  221D               	addwfc	___ftpack@arg+2,f,c
  7425  0020D6  90D8               	bcf	status,0,c
  7426  0020D8  321D               	rrcf	___ftpack@arg+2,f,c
  7427  0020DA  321C               	rrcf	___ftpack@arg+1,f,c
  7428  0020DC  321B               	rrcf	___ftpack@arg,f,c
  7429  0020DE                     l6096:
  7430  0020DE  0E00               	movlw	0
  7431  0020E0  141B               	andwf	___ftpack@arg,w,c
  7432  0020E2  6E20               	movwf	??___ftpack& (0+255),c
  7433  0020E4  0E00               	movlw	0
  7434  0020E6  141C               	andwf	___ftpack@arg+1,w,c
  7435  0020E8  6E21               	movwf	(??___ftpack+1)& (0+255),c
  7436  0020EA  0EFF               	movlw	255
  7437  0020EC  141D               	andwf	___ftpack@arg+2,w,c
  7438  0020EE  6E22               	movwf	(??___ftpack+2)& (0+255),c
  7439  0020F0  5020               	movf	??___ftpack,w,c
  7440  0020F2  1021               	iorwf	??___ftpack+1,w,c
  7441  0020F4  1022               	iorwf	??___ftpack+2,w,c
  7442  0020F6  B4D8               	btfsc	status,2,c
  7443  0020F8  D006               	goto	l6100
  7444  0020FA  D7E6               	goto	l6092
  7445  0020FC                     l6098:
  7446  0020FC  061E               	decf	___ftpack@exp,f,c
  7447  0020FE  90D8               	bcf	status,0,c
  7448  002100  361B               	rlcf	___ftpack@arg,f,c
  7449  002102  361C               	rlcf	___ftpack@arg+1,f,c
  7450  002104  361D               	rlcf	___ftpack@arg+2,f,c
  7451  002106                     l6100:
  7452  002106  BE1C               	btfsc	___ftpack@arg+1,7,c
  7453  002108  D003               	goto	l1375
  7454  00210A  0E02               	movlw	2
  7455  00210C  601E               	cpfslt	___ftpack@exp,c
  7456  00210E  D7F6               	goto	l6098
  7457  002110                     l1375:
  7458  002110  A01E               	btfss	___ftpack@exp,0,c
  7459  002112  9E1C               	bcf	___ftpack@arg+1,7,c
  7460  002114  90D8               	bcf	status,0,c
  7461  002116  321E               	rrcf	___ftpack@exp,f,c
  7462  002118  501E               	movf	___ftpack@exp,w,c
  7463  00211A  121D               	iorwf	___ftpack@arg+2,f,c
  7464  00211C  501F               	movf	___ftpack@sign,w,c
  7465  00211E  A4D8               	btfss	status,2,c
  7466  002120  8E1D               	bsf	___ftpack@arg+2,7,c
  7467  002122  C01B  F01B         	movff	___ftpack@arg,?___ftpack
  7468  002126  C01C  F01C         	movff	___ftpack@arg+1,?___ftpack+1
  7469  00212A  C01D  F01D         	movff	___ftpack@arg+2,?___ftpack+2
  7470  00212E  0012               	return	
  7471  002130                     __end_of___ftpack:
  7472                           	opt stack 0
  7473                           tosu	equ	0xFFF
  7474                           tosh	equ	0xFFE
  7475                           tosl	equ	0xFFD
  7476                           pclath	equ	0xFFA
  7477                           tblptru	equ	0xFF8
  7478                           tblptrh	equ	0xFF7
  7479                           tblptrl	equ	0xFF6
  7480                           tablat	equ	0xFF5
  7481                           prodh	equ	0xFF4
  7482                           prodl	equ	0xFF3
  7483                           intcon	equ	0xFF2
  7484                           postinc0	equ	0xFEE
  7485                           wreg	equ	0xFE8
  7486                           indf2	equ	0xFDF
  7487                           postinc2	equ	0xFDE
  7488                           postdec2	equ	0xFDD
  7489                           plusw2	equ	0xFDB
  7490                           fsr2h	equ	0xFDA
  7491                           fsr2l	equ	0xFD9
  7492                           status	equ	0xFD8
  7493                           
  7494 ;; *************** function _SYSTEM_Initialize *****************
  7495 ;; Defined at:
  7496 ;;		line 112 in file "mcc_generated_files/mcc.c"
  7497 ;; Parameters:    Size  Location     Type
  7498 ;;		None
  7499 ;; Auto vars:     Size  Location     Type
  7500 ;;		None
  7501 ;; Return value:  Size  Location     Type
  7502 ;;                  1    wreg      void 
  7503 ;; Registers used:
  7504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7505 ;; Tracked objects:
  7506 ;;		On entry : 0/0
  7507 ;;		On exit  : 0/0
  7508 ;;		Unchanged: 0/0
  7509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7510 ;;      Params:         0       0       0       0       0       0       0
  7511 ;;      Locals:         0       0       0       0       0       0       0
  7512 ;;      Temps:          0       0       0       0       0       0       0
  7513 ;;      Totals:         0       0       0       0       0       0       0
  7514 ;;Total ram usage:        0 bytes
  7515 ;; Hardware stack levels used:    1
  7516 ;; Hardware stack levels required when called:    7
  7517 ;; This function calls:
  7518 ;;		_ADC_Initialize
  7519 ;;		_EUSART1_Initialize
  7520 ;;		_I2C1_Initialize
  7521 ;;		_INTERRUPT_Initialize
  7522 ;;		_OSCILLATOR_Initialize
  7523 ;;		_PIN_MANAGER_Initialize
  7524 ;;		_TMR0_Initialize
  7525 ;;		_TMR2_Initialize
  7526 ;;		_begin
  7527 ;; This function is called by:
  7528 ;;		_main
  7529 ;; This function uses a non-reentrant model
  7530 ;;
  7531                           
  7532                           	psect	text35
  7533  0026B8                     __ptext35:
  7534                           	opt stack 0
  7535  0026B8                     _SYSTEM_Initialize:
  7536                           	opt stack 23
  7537                           
  7538                           ;mcc.c: 114: OSCILLATOR_Initialize();
  7539                           
  7540                           ;incstack = 0
  7541  0026B8  EC39  F017         	call	_OSCILLATOR_Initialize	;wreg free
  7542                           
  7543                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  7544  0026BC  EC8A  F014         	call	_PIN_MANAGER_Initialize	;wreg free
  7545                           
  7546                           ;mcc.c: 116: INTERRUPT_Initialize();
  7547  0026C0  EC22  F017         	call	_INTERRUPT_Initialize	;wreg free
  7548                           
  7549                           ;mcc.c: 117: ADC_Initialize();
  7550  0026C4  ECEC  F016         	call	_ADC_Initialize	;wreg free
  7551                           
  7552                           ;mcc.c: 118: TMR0_Initialize();
  7553  0026C8  ECB2  F016         	call	_TMR0_Initialize	;wreg free
  7554                           
  7555                           ;mcc.c: 119: TMR2_Initialize();
  7556  0026CC  EC92  F016         	call	_TMR2_Initialize	;wreg free
  7557                           
  7558                           ;mcc.c: 120: EUSART1_Initialize();
  7559  0026D0  EC80  F015         	call	_EUSART1_Initialize	;wreg free
  7560                           
  7561                           ;mcc.c: 121: begin(receiveArray, sizeof (receiveArray), 3, 0, Send_put, Receive_get, Rec
      +                          eive_available, Receive_peek);
  7562  0026D4  0E00               	movlw	low _receiveArray
  7563  0026D6  0100               	movlb	0	; () banked
  7564  0026D8  6FEE               	movwf	begin@ptr& (0+255),b
  7565  0026DA  0E01               	movlw	high _receiveArray
  7566  0026DC  0100               	movlb	0	; () banked
  7567  0026DE  6FEF               	movwf	(begin@ptr+1)& (0+255),b
  7568  0026E0  0E28               	movlw	40
  7569  0026E2  0100               	movlb	0	; () banked
  7570  0026E4  6FF0               	movwf	begin@maxSize& (0+255),b
  7571  0026E6  0E03               	movlw	3
  7572  0026E8  0100               	movlb	0	; () banked
  7573  0026EA  6FF1               	movwf	begin@givenAddress& (0+255),b
  7574  0026EC  0E00               	movlw	0
  7575  0026EE  0100               	movlb	0	; () banked
  7576  0026F0  6FF2               	movwf	begin@error& (0+255),b
  7577  0026F2  0EDC               	movlw	low _Send_put
  7578  0026F4  0100               	movlb	0	; () banked
  7579  0026F6  6FF3               	movwf	begin@stufftosend& (0+255),b
  7580  0026F8  0E2B               	movlw	high _Send_put
  7581  0026FA  0100               	movlb	0	; () banked
  7582  0026FC  6FF4               	movwf	(begin@stufftosend+1)& (0+255),b
  7583  0026FE  0E64               	movlw	low _Receive_get
  7584  002700  0100               	movlb	0	; () banked
  7585  002702  6FF5               	movwf	begin@stufftoreceive& (0+255),b
  7586  002704  0E2E               	movlw	high _Receive_get
  7587  002706  0100               	movlb	0	; () banked
  7588  002708  6FF6               	movwf	(begin@stufftoreceive+1)& (0+255),b
  7589  00270A  0EF0               	movlw	low _Receive_available
  7590  00270C  0100               	movlb	0	; () banked
  7591  00270E  6FF7               	movwf	begin@stuffavailable& (0+255),b
  7592  002710  0E2D               	movlw	high _Receive_available
  7593  002712  0100               	movlb	0	; () banked
  7594  002714  6FF8               	movwf	(begin@stuffavailable+1)& (0+255),b
  7595  002716  0E56               	movlw	low _Receive_peek
  7596  002718  0100               	movlb	0	; () banked
  7597  00271A  6FF9               	movwf	begin@stuffpeek& (0+255),b
  7598  00271C  0E2E               	movlw	high _Receive_peek
  7599  00271E  0100               	movlb	0	; () banked
  7600  002720  6FFA               	movwf	(begin@stuffpeek+1)& (0+255),b
  7601  002722  EC2F  F014         	call	_begin	;wreg free
  7602                           
  7603                           ;mcc.c: 122: I2C1_Initialize();
  7604  002726  EC62  F015         	call	_I2C1_Initialize	;wreg free
  7605  00272A  0012               	return		;funcret
  7606  00272C                     __end_of_SYSTEM_Initialize:
  7607                           	opt stack 0
  7608                           tosu	equ	0xFFF
  7609                           tosh	equ	0xFFE
  7610                           tosl	equ	0xFFD
  7611                           pclath	equ	0xFFA
  7612                           tblptru	equ	0xFF8
  7613                           tblptrh	equ	0xFF7
  7614                           tblptrl	equ	0xFF6
  7615                           tablat	equ	0xFF5
  7616                           prodh	equ	0xFF4
  7617                           prodl	equ	0xFF3
  7618                           intcon	equ	0xFF2
  7619                           postinc0	equ	0xFEE
  7620                           wreg	equ	0xFE8
  7621                           indf2	equ	0xFDF
  7622                           postinc2	equ	0xFDE
  7623                           postdec2	equ	0xFDD
  7624                           plusw2	equ	0xFDB
  7625                           fsr2h	equ	0xFDA
  7626                           fsr2l	equ	0xFD9
  7627                           status	equ	0xFD8
  7628                           
  7629 ;; *************** function _begin *****************
  7630 ;; Defined at:
  7631 ;;		line 18 in file "FastTransfer.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;  ptr             2    0[BANK0 ] PTR volatile int 
  7634 ;;		 -> receiveArray(40), 
  7635 ;;  maxSize         1    2[BANK0 ] unsigned char 
  7636 ;;  givenAddress    1    3[BANK0 ] unsigned char 
  7637 ;;  error           1    4[BANK0 ] unsigned char 
  7638 ;;  stufftosend     2    5[BANK0 ] PTR FTN(unsigned char ,)
  7639 ;;		 -> Send_put(1), 
  7640 ;;  stufftorecei    2    7[BANK0 ] PTR FTN()unsigned char 
  7641 ;;		 -> Receive_get(1), 
  7642 ;;  stuffavailab    2    9[BANK0 ] PTR FTN()int 
  7643 ;;		 -> Receive_available(2), 
  7644 ;;  stuffpeek       2   11[BANK0 ] PTR FTN()unsigned char 
  7645 ;;		 -> Receive_peek(1), 
  7646 ;; Auto vars:     Size  Location     Type
  7647 ;;		None
  7648 ;; Return value:  Size  Location     Type
  7649 ;;                  1    wreg      void 
  7650 ;; Registers used:
  7651 ;;		wreg, status,2, status,0, cstack
  7652 ;; Tracked objects:
  7653 ;;		On entry : 0/0
  7654 ;;		On exit  : 0/0
  7655 ;;		Unchanged: 0/0
  7656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7657 ;;      Params:         0      13       0       0       0       0       0
  7658 ;;      Locals:         0       0       0       0       0       0       0
  7659 ;;      Temps:          0       0       0       0       0       0       0
  7660 ;;      Totals:         0      13       0       0       0       0       0
  7661 ;;Total ram usage:       13 bytes
  7662 ;; Hardware stack levels used:    1
  7663 ;; Hardware stack levels required when called:    5
  7664 ;; This function calls:
  7665 ;;		___awdiv
  7666 ;; This function is called by:
  7667 ;;		_SYSTEM_Initialize
  7668 ;; This function uses a non-reentrant model
  7669 ;;
  7670                           
  7671                           	psect	text36
  7672  00285E                     __ptext36:
  7673                           	opt stack 0
  7674  00285E                     _begin:
  7675                           	opt stack 24
  7676                           
  7677                           ;FastTransfer.c: 19: receiveArrayAddress = ptr;
  7678                           
  7679                           ;incstack = 0
  7680  00285E  C0EE  F0D3         	movff	begin@ptr,_receiveArrayAddress
  7681  002862  C0EF  F0D4         	movff	begin@ptr+1,_receiveArrayAddress+1
  7682                           
  7683                           ;FastTransfer.c: 20: moduleAddress = givenAddress;
  7684  002866  C0F1  F03B         	movff	begin@givenAddress,_moduleAddress
  7685                           
  7686                           ;FastTransfer.c: 21: serial_write = stufftosend;
  7687  00286A  C0F3  F032         	movff	begin@stufftosend,_serial_write
  7688  00286E  C0F4  F033         	movff	begin@stufftosend+1,_serial_write+1
  7689                           
  7690                           ;FastTransfer.c: 22: serial_available = stuffavailable;
  7691  002872  C0F7  F02E         	movff	begin@stuffavailable,_serial_available
  7692  002876  C0F8  F02F         	movff	begin@stuffavailable+1,_serial_available+1
  7693                           
  7694                           ;FastTransfer.c: 23: serial_peek = stuffpeek;
  7695  00287A  C0F9  F0D7         	movff	begin@stuffpeek,_serial_peek
  7696  00287E  C0FA  F0D8         	movff	begin@stuffpeek+1,_serial_peek+1
  7697                           
  7698                           ;FastTransfer.c: 24: serial_read = stufftoreceive;
  7699  002882  C0F5  F030         	movff	begin@stufftoreceive,_serial_read
  7700  002886  C0F6  F031         	movff	begin@stufftoreceive+1,_serial_read+1
  7701                           
  7702                           ;FastTransfer.c: 25: maxDataAddress = maxSize / 2;
  7703  00288A  C0F0  F01B         	movff	begin@maxSize,___awdiv@dividend
  7704  00288E  6A1C               	clrf	___awdiv@dividend+1,c
  7705  002890  0E00               	movlw	0
  7706  002892  6E1E               	movwf	___awdiv@divisor+1,c
  7707  002894  0E02               	movlw	2
  7708  002896  6E1D               	movwf	___awdiv@divisor,c
  7709  002898  ECA4  F012         	call	___awdiv	;wreg free
  7710  00289C  501B               	movf	?___awdiv,w,c
  7711  00289E  6E3A               	movwf	_maxDataAddress,c
  7712                           
  7713                           ;FastTransfer.c: 26: sendStructAddress = (unsigned char*) & ring_buffer;
  7714  0028A0  0E00               	movlw	low _ring_buffer
  7715  0028A2  0100               	movlb	0	; () banked
  7716  0028A4  6FD5               	movwf	_sendStructAddress& (0+255),b
  7717  0028A6  0E02               	movlw	high _ring_buffer
  7718  0028A8  0100               	movlb	0	; () banked
  7719  0028AA  6FD6               	movwf	(_sendStructAddress+1)& (0+255),b
  7720                           
  7721                           ; BSR set to: 0
  7722                           ;FastTransfer.c: 27: AKNAKsend = error;
  7723  0028AC  C0F2  F036         	movff	begin@error,_AKNAKsend
  7724                           
  7725                           ; BSR set to: 0
  7726                           ;FastTransfer.c: 28: alignErrorCounter = 0;
  7727  0028B0  0E00               	movlw	0
  7728  0028B2  0100               	movlb	0	; () banked
  7729  0028B4  6FC6               	movwf	(_alignErrorCounter+1)& (0+255),b
  7730  0028B6  0E00               	movlw	0
  7731  0028B8  6FC5               	movwf	_alignErrorCounter& (0+255),b
  7732                           
  7733                           ; BSR set to: 0
  7734  0028BA  0012               	return		;funcret
  7735  0028BC                     __end_of_begin:
  7736                           	opt stack 0
  7737                           tosu	equ	0xFFF
  7738                           tosh	equ	0xFFE
  7739                           tosl	equ	0xFFD
  7740                           pclath	equ	0xFFA
  7741                           tblptru	equ	0xFF8
  7742                           tblptrh	equ	0xFF7
  7743                           tblptrl	equ	0xFF6
  7744                           tablat	equ	0xFF5
  7745                           prodh	equ	0xFF4
  7746                           prodl	equ	0xFF3
  7747                           intcon	equ	0xFF2
  7748                           postinc0	equ	0xFEE
  7749                           wreg	equ	0xFE8
  7750                           indf2	equ	0xFDF
  7751                           postinc2	equ	0xFDE
  7752                           postdec2	equ	0xFDD
  7753                           plusw2	equ	0xFDB
  7754                           fsr2h	equ	0xFDA
  7755                           fsr2l	equ	0xFD9
  7756                           status	equ	0xFD8
  7757                           
  7758 ;; *************** function _TMR2_Initialize *****************
  7759 ;; Defined at:
  7760 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;		None
  7763 ;; Auto vars:     Size  Location     Type
  7764 ;;		None
  7765 ;; Return value:  Size  Location     Type
  7766 ;;                  2  344[None  ] int 
  7767 ;; Registers used:
  7768 ;;		wreg, status,2, status,0, cstack
  7769 ;; Tracked objects:
  7770 ;;		On entry : 0/0
  7771 ;;		On exit  : 0/0
  7772 ;;		Unchanged: 0/0
  7773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7774 ;;      Params:         0       0       0       0       0       0       0
  7775 ;;      Locals:         0       0       0       0       0       0       0
  7776 ;;      Temps:          0       0       0       0       0       0       0
  7777 ;;      Totals:         0       0       0       0       0       0       0
  7778 ;;Total ram usage:        0 bytes
  7779 ;; Hardware stack levels used:    1
  7780 ;; Hardware stack levels required when called:    5
  7781 ;; This function calls:
  7782 ;;		_TMR2_SetInterruptHandler
  7783 ;;		_TMR2_StartTimer
  7784 ;; This function is called by:
  7785 ;;		_SYSTEM_Initialize
  7786 ;; This function uses a non-reentrant model
  7787 ;;
  7788                           
  7789                           	psect	text37
  7790  002D24                     __ptext37:
  7791                           	opt stack 0
  7792  002D24                     _TMR2_Initialize:
  7793                           	opt stack 24
  7794                           
  7795                           ;tmr2.c: 67: T2CON = 0x7D;
  7796                           
  7797                           ; BSR set to: 0
  7798                           ;incstack = 0
  7799  002D24  0E7D               	movlw	125
  7800  002D26  6EBA               	movwf	4026,c	;volatile
  7801                           
  7802                           ;tmr2.c: 70: PR2 = 0xC2;
  7803  002D28  0EC2               	movlw	194
  7804  002D2A  6EBB               	movwf	4027,c	;volatile
  7805                           
  7806                           ;tmr2.c: 73: TMR2 = 0x00;
  7807  002D2C  0E00               	movlw	0
  7808  002D2E  6EBC               	movwf	4028,c	;volatile
  7809                           
  7810                           ;tmr2.c: 76: PIR1bits.TMR2IF = 0;
  7811  002D30  929E               	bcf	3998,1,c	;volatile
  7812                           
  7813                           ;tmr2.c: 79: PIE1bits.TMR2IE = 1;
  7814  002D32  829D               	bsf	3997,1,c	;volatile
  7815                           
  7816                           ;tmr2.c: 82: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  7817  002D34  0E9E               	movlw	low _TMR2_DefaultInterruptHandler
  7818  002D36  6E1B               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  7819  002D38  0E2E               	movlw	high _TMR2_DefaultInterruptHandler
  7820  002D3A  6E1C               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  7821  002D3C  EC40  F017         	call	_TMR2_SetInterruptHandler	;wreg free
  7822                           
  7823                           ;tmr2.c: 85: TMR2_StartTimer();
  7824  002D40  EC49  F017         	call	_TMR2_StartTimer	;wreg free
  7825  002D44  0012               	return		;funcret
  7826  002D46                     __end_of_TMR2_Initialize:
  7827                           	opt stack 0
  7828                           tosu	equ	0xFFF
  7829                           tosh	equ	0xFFE
  7830                           tosl	equ	0xFFD
  7831                           pclath	equ	0xFFA
  7832                           tblptru	equ	0xFF8
  7833                           tblptrh	equ	0xFF7
  7834                           tblptrl	equ	0xFF6
  7835                           tablat	equ	0xFF5
  7836                           prodh	equ	0xFF4
  7837                           prodl	equ	0xFF3
  7838                           intcon	equ	0xFF2
  7839                           postinc0	equ	0xFEE
  7840                           wreg	equ	0xFE8
  7841                           indf2	equ	0xFDF
  7842                           postinc2	equ	0xFDE
  7843                           postdec2	equ	0xFDD
  7844                           plusw2	equ	0xFDB
  7845                           fsr2h	equ	0xFDA
  7846                           fsr2l	equ	0xFD9
  7847                           status	equ	0xFD8
  7848                           
  7849 ;; *************** function _TMR2_StartTimer *****************
  7850 ;; Defined at:
  7851 ;;		line 88 in file "mcc_generated_files/tmr2.c"
  7852 ;; Parameters:    Size  Location     Type
  7853 ;;		None
  7854 ;; Auto vars:     Size  Location     Type
  7855 ;;		None
  7856 ;; Return value:  Size  Location     Type
  7857 ;;                  1    wreg      void 
  7858 ;; Registers used:
  7859 ;;		None
  7860 ;; Tracked objects:
  7861 ;;		On entry : 0/0
  7862 ;;		On exit  : 0/0
  7863 ;;		Unchanged: 0/0
  7864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7865 ;;      Params:         0       0       0       0       0       0       0
  7866 ;;      Locals:         0       0       0       0       0       0       0
  7867 ;;      Temps:          0       0       0       0       0       0       0
  7868 ;;      Totals:         0       0       0       0       0       0       0
  7869 ;;Total ram usage:        0 bytes
  7870 ;; Hardware stack levels used:    1
  7871 ;; Hardware stack levels required when called:    4
  7872 ;; This function calls:
  7873 ;;		Nothing
  7874 ;; This function is called by:
  7875 ;;		_TMR2_Initialize
  7876 ;; This function uses a non-reentrant model
  7877 ;;
  7878                           
  7879                           	psect	text38
  7880  002E92                     __ptext38:
  7881                           	opt stack 0
  7882  002E92                     _TMR2_StartTimer:
  7883                           	opt stack 24
  7884                           
  7885                           ;tmr2.c: 91: T2CONbits.TMR2ON = 1;
  7886                           
  7887                           ;incstack = 0
  7888  002E92  84BA               	bsf	4026,2,c	;volatile
  7889  002E94  0012               	return		;funcret
  7890  002E96                     __end_of_TMR2_StartTimer:
  7891                           	opt stack 0
  7892                           tosu	equ	0xFFF
  7893                           tosh	equ	0xFFE
  7894                           tosl	equ	0xFFD
  7895                           pclath	equ	0xFFA
  7896                           tblptru	equ	0xFF8
  7897                           tblptrh	equ	0xFF7
  7898                           tblptrl	equ	0xFF6
  7899                           tablat	equ	0xFF5
  7900                           prodh	equ	0xFF4
  7901                           prodl	equ	0xFF3
  7902                           intcon	equ	0xFF2
  7903                           postinc0	equ	0xFEE
  7904                           wreg	equ	0xFE8
  7905                           indf2	equ	0xFDF
  7906                           postinc2	equ	0xFDE
  7907                           postdec2	equ	0xFDD
  7908                           plusw2	equ	0xFDB
  7909                           fsr2h	equ	0xFDA
  7910                           fsr2l	equ	0xFD9
  7911                           status	equ	0xFD8
  7912                           
  7913 ;; *************** function _TMR2_SetInterruptHandler *****************
  7914 ;; Defined at:
  7915 ;;		line 233 in file "mcc_generated_files/tmr2.c"
  7916 ;; Parameters:    Size  Location     Type
  7917 ;;  InterruptHan    2   26[COMRAM] PTR void 
  7918 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  7919 ;; Auto vars:     Size  Location     Type
  7920 ;;		None
  7921 ;; Return value:  Size  Location     Type
  7922 ;;                  1    wreg      void 
  7923 ;; Registers used:
  7924 ;;		wreg, status,2, status,0
  7925 ;; Tracked objects:
  7926 ;;		On entry : 0/0
  7927 ;;		On exit  : 0/0
  7928 ;;		Unchanged: 0/0
  7929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7930 ;;      Params:         2       0       0       0       0       0       0
  7931 ;;      Locals:         0       0       0       0       0       0       0
  7932 ;;      Temps:          0       0       0       0       0       0       0
  7933 ;;      Totals:         2       0       0       0       0       0       0
  7934 ;;Total ram usage:        2 bytes
  7935 ;; Hardware stack levels used:    1
  7936 ;; Hardware stack levels required when called:    4
  7937 ;; This function calls:
  7938 ;;		Nothing
  7939 ;; This function is called by:
  7940 ;;		_TMR2_Initialize
  7941 ;; This function uses a non-reentrant model
  7942 ;;
  7943                           
  7944                           	psect	text39
  7945  002E80                     __ptext39:
  7946                           	opt stack 0
  7947  002E80                     _TMR2_SetInterruptHandler:
  7948                           	opt stack 24
  7949                           
  7950                           ;tmr2.c: 234: TMR2_InterruptHandler = InterruptHandler;
  7951                           
  7952                           ;incstack = 0
  7953  002E80  C01B  F0FE         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  7954  002E84  C01C  F0FF         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  7955  002E88  0012               	return		;funcret
  7956  002E8A                     __end_of_TMR2_SetInterruptHandler:
  7957                           	opt stack 0
  7958                           tosu	equ	0xFFF
  7959                           tosh	equ	0xFFE
  7960                           tosl	equ	0xFFD
  7961                           pclath	equ	0xFFA
  7962                           tblptru	equ	0xFF8
  7963                           tblptrh	equ	0xFF7
  7964                           tblptrl	equ	0xFF6
  7965                           tablat	equ	0xFF5
  7966                           prodh	equ	0xFF4
  7967                           prodl	equ	0xFF3
  7968                           intcon	equ	0xFF2
  7969                           postinc0	equ	0xFEE
  7970                           wreg	equ	0xFE8
  7971                           indf2	equ	0xFDF
  7972                           postinc2	equ	0xFDE
  7973                           postdec2	equ	0xFDD
  7974                           plusw2	equ	0xFDB
  7975                           fsr2h	equ	0xFDA
  7976                           fsr2l	equ	0xFD9
  7977                           status	equ	0xFD8
  7978                           
  7979 ;; *************** function _TMR0_Initialize *****************
  7980 ;; Defined at:
  7981 ;;		line 22 in file "mcc_generated_files/tmr0.c"
  7982 ;; Parameters:    Size  Location     Type
  7983 ;;		None
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;		None
  7986 ;; Return value:  Size  Location     Type
  7987 ;;                  1    wreg      void 
  7988 ;; Registers used:
  7989 ;;		wreg, status,2, cstack
  7990 ;; Tracked objects:
  7991 ;;		On entry : 0/0
  7992 ;;		On exit  : 0/0
  7993 ;;		Unchanged: 0/0
  7994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7995 ;;      Params:         0       0       0       0       0       0       0
  7996 ;;      Locals:         0       0       0       0       0       0       0
  7997 ;;      Temps:          0       0       0       0       0       0       0
  7998 ;;      Totals:         0       0       0       0       0       0       0
  7999 ;;Total ram usage:        0 bytes
  8000 ;; Hardware stack levels used:    1
  8001 ;; Hardware stack levels required when called:    5
  8002 ;; This function calls:
  8003 ;;		_TMR0_StartTimer
  8004 ;; This function is called by:
  8005 ;;		_SYSTEM_Initialize
  8006 ;; This function uses a non-reentrant model
  8007 ;;
  8008                           
  8009                           	psect	text40
  8010  002D64                     __ptext40:
  8011                           	opt stack 0
  8012  002D64                     _TMR0_Initialize:
  8013                           	opt stack 24
  8014                           
  8015                           ;tmr0.c: 26: T0CON = 0x94;
  8016                           
  8017                           ;incstack = 0
  8018  002D64  0E94               	movlw	148
  8019  002D66  6ED5               	movwf	4053,c	;volatile
  8020                           
  8021                           ;tmr0.c: 29: TMR0H = 0xCF;
  8022  002D68  0ECF               	movlw	207
  8023  002D6A  6ED7               	movwf	4055,c	;volatile
  8024                           
  8025                           ;tmr0.c: 32: TMR0L = 0x2C;
  8026  002D6C  0E2C               	movlw	44
  8027  002D6E  6ED6               	movwf	4054,c	;volatile
  8028                           
  8029                           ;tmr0.c: 35: timer0ReloadVal16bit = 53036;
  8030  002D70  0ECF               	movlw	207
  8031  002D72  6E43               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  8032  002D74  0E2C               	movlw	44
  8033  002D76  6E42               	movwf	_timer0ReloadVal16bit,c	;volatile
  8034                           
  8035                           ;tmr0.c: 38: INTCONbits.TMR0IF = 0;
  8036  002D78  94F2               	bcf	intcon,2,c	;volatile
  8037                           
  8038                           ;tmr0.c: 41: INTCONbits.TMR0IE = 1;
  8039  002D7A  8AF2               	bsf	intcon,5,c	;volatile
  8040                           
  8041                           ;tmr0.c: 44: TMR0_StartTimer();
  8042  002D7C  EC4B  F017         	call	_TMR0_StartTimer	;wreg free
  8043  002D80  0012               	return		;funcret
  8044  002D82                     __end_of_TMR0_Initialize:
  8045                           	opt stack 0
  8046                           tosu	equ	0xFFF
  8047                           tosh	equ	0xFFE
  8048                           tosl	equ	0xFFD
  8049                           pclath	equ	0xFFA
  8050                           tblptru	equ	0xFF8
  8051                           tblptrh	equ	0xFF7
  8052                           tblptrl	equ	0xFF6
  8053                           tablat	equ	0xFF5
  8054                           prodh	equ	0xFF4
  8055                           prodl	equ	0xFF3
  8056                           intcon	equ	0xFF2
  8057                           postinc0	equ	0xFEE
  8058                           wreg	equ	0xFE8
  8059                           indf2	equ	0xFDF
  8060                           postinc2	equ	0xFDE
  8061                           postdec2	equ	0xFDD
  8062                           plusw2	equ	0xFDB
  8063                           fsr2h	equ	0xFDA
  8064                           fsr2l	equ	0xFD9
  8065                           status	equ	0xFD8
  8066                           
  8067 ;; *************** function _TMR0_StartTimer *****************
  8068 ;; Defined at:
  8069 ;;		line 47 in file "mcc_generated_files/tmr0.c"
  8070 ;; Parameters:    Size  Location     Type
  8071 ;;		None
  8072 ;; Auto vars:     Size  Location     Type
  8073 ;;		None
  8074 ;; Return value:  Size  Location     Type
  8075 ;;                  1    wreg      void 
  8076 ;; Registers used:
  8077 ;;		None
  8078 ;; Tracked objects:
  8079 ;;		On entry : 0/0
  8080 ;;		On exit  : 0/0
  8081 ;;		Unchanged: 0/0
  8082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8083 ;;      Params:         0       0       0       0       0       0       0
  8084 ;;      Locals:         0       0       0       0       0       0       0
  8085 ;;      Temps:          0       0       0       0       0       0       0
  8086 ;;      Totals:         0       0       0       0       0       0       0
  8087 ;;Total ram usage:        0 bytes
  8088 ;; Hardware stack levels used:    1
  8089 ;; Hardware stack levels required when called:    4
  8090 ;; This function calls:
  8091 ;;		Nothing
  8092 ;; This function is called by:
  8093 ;;		_TMR0_Initialize
  8094 ;; This function uses a non-reentrant model
  8095 ;;
  8096                           
  8097                           	psect	text41
  8098  002E96                     __ptext41:
  8099                           	opt stack 0
  8100  002E96                     _TMR0_StartTimer:
  8101                           	opt stack 24
  8102                           
  8103                           ;tmr0.c: 49: T0CONbits.TMR0ON = 1;
  8104                           
  8105                           ;incstack = 0
  8106  002E96  8ED5               	bsf	4053,7,c	;volatile
  8107  002E98  0012               	return		;funcret
  8108  002E9A                     __end_of_TMR0_StartTimer:
  8109                           	opt stack 0
  8110                           tosu	equ	0xFFF
  8111                           tosh	equ	0xFFE
  8112                           tosl	equ	0xFFD
  8113                           pclath	equ	0xFFA
  8114                           tblptru	equ	0xFF8
  8115                           tblptrh	equ	0xFF7
  8116                           tblptrl	equ	0xFF6
  8117                           tablat	equ	0xFF5
  8118                           prodh	equ	0xFF4
  8119                           prodl	equ	0xFF3
  8120                           intcon	equ	0xFF2
  8121                           postinc0	equ	0xFEE
  8122                           wreg	equ	0xFE8
  8123                           indf2	equ	0xFDF
  8124                           postinc2	equ	0xFDE
  8125                           postdec2	equ	0xFDD
  8126                           plusw2	equ	0xFDB
  8127                           fsr2h	equ	0xFDA
  8128                           fsr2l	equ	0xFD9
  8129                           status	equ	0xFD8
  8130                           
  8131 ;; *************** function _PIN_MANAGER_Initialize *****************
  8132 ;; Defined at:
  8133 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  8134 ;; Parameters:    Size  Location     Type
  8135 ;;		None
  8136 ;; Auto vars:     Size  Location     Type
  8137 ;;		None
  8138 ;; Return value:  Size  Location     Type
  8139 ;;                  1    wreg      void 
  8140 ;; Registers used:
  8141 ;;		wreg, status,2
  8142 ;; Tracked objects:
  8143 ;;		On entry : 0/0
  8144 ;;		On exit  : 0/0
  8145 ;;		Unchanged: 0/0
  8146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8147 ;;      Params:         0       0       0       0       0       0       0
  8148 ;;      Locals:         0       0       0       0       0       0       0
  8149 ;;      Temps:          0       0       0       0       0       0       0
  8150 ;;      Totals:         0       0       0       0       0       0       0
  8151 ;;Total ram usage:        0 bytes
  8152 ;; Hardware stack levels used:    1
  8153 ;; Hardware stack levels required when called:    4
  8154 ;; This function calls:
  8155 ;;		Nothing
  8156 ;; This function is called by:
  8157 ;;		_SYSTEM_Initialize
  8158 ;; This function uses a non-reentrant model
  8159 ;;
  8160                           
  8161                           	psect	text42
  8162  002914                     __ptext42:
  8163                           	opt stack 0
  8164  002914                     _PIN_MANAGER_Initialize:
  8165                           	opt stack 25
  8166                           
  8167                           ;pin_manager.c: 52: LATA = 0x00;
  8168                           
  8169                           ;incstack = 0
  8170  002914  0E00               	movlw	0
  8171  002916  6E89               	movwf	3977,c	;volatile
  8172                           
  8173                           ;pin_manager.c: 53: TRISA = 0xF7;
  8174  002918  0EF7               	movlw	247
  8175  00291A  6E92               	movwf	3986,c	;volatile
  8176                           
  8177                           ;pin_manager.c: 54: ANSELA = 0x20;
  8178  00291C  0E20               	movlw	32
  8179  00291E  010F               	movlb	15	; () banked
  8180  002920  6F38               	movwf	56,b	;volatile
  8181                           
  8182                           ;pin_manager.c: 56: LATB = 0x00;
  8183  002922  0E00               	movlw	0
  8184  002924  6E8A               	movwf	3978,c	;volatile
  8185                           
  8186                           ;pin_manager.c: 57: TRISB = 0xD7;
  8187  002926  0ED7               	movlw	215
  8188  002928  6E93               	movwf	3987,c	;volatile
  8189                           
  8190                           ;pin_manager.c: 58: ANSELB = 0x00;
  8191  00292A  0E00               	movlw	0
  8192  00292C  010F               	movlb	15	; () banked
  8193  00292E  6F39               	movwf	57,b	;volatile
  8194                           
  8195                           ;pin_manager.c: 59: WPUB = 0x00;
  8196  002930  0E00               	movlw	0
  8197  002932  6E61               	movwf	3937,c	;volatile
  8198                           
  8199                           ;pin_manager.c: 61: LATC = 0x18;
  8200  002934  0E18               	movlw	24
  8201  002936  6E8B               	movwf	3979,c	;volatile
  8202                           
  8203                           ;pin_manager.c: 62: TRISC = 0xDF;
  8204  002938  0EDF               	movlw	223
  8205  00293A  6E94               	movwf	3988,c	;volatile
  8206                           
  8207                           ;pin_manager.c: 63: ANSELC = 0x04;
  8208  00293C  0E04               	movlw	4
  8209  00293E  010F               	movlb	15	; () banked
  8210  002940  6F3A               	movwf	58,b	;volatile
  8211                           
  8212                           ;pin_manager.c: 65: LATD = 0x00;
  8213  002942  0E00               	movlw	0
  8214  002944  6E8C               	movwf	3980,c	;volatile
  8215                           
  8216                           ;pin_manager.c: 66: TRISD = 0xFD;
  8217  002946  0EFD               	movlw	253
  8218  002948  6E95               	movwf	3989,c	;volatile
  8219                           
  8220                           ;pin_manager.c: 67: ANSELD = 0xDD;
  8221  00294A  0EDD               	movlw	221
  8222  00294C  010F               	movlb	15	; () banked
  8223  00294E  6F3B               	movwf	59,b	;volatile
  8224                           
  8225                           ;pin_manager.c: 69: LATE = 0x00;
  8226  002950  0E00               	movlw	0
  8227  002952  6E8D               	movwf	3981,c	;volatile
  8228                           
  8229                           ;pin_manager.c: 70: TRISE = 0x00;
  8230  002954  0E00               	movlw	0
  8231  002956  6E96               	movwf	3990,c	;volatile
  8232                           
  8233                           ;pin_manager.c: 71: ANSELE = 0x00;
  8234  002958  0E00               	movlw	0
  8235  00295A  010F               	movlb	15	; () banked
  8236  00295C  6F3C               	movwf	60,b	;volatile
  8237                           
  8238                           ; BSR set to: 15
  8239                           ;pin_manager.c: 72: TRISCbits.TRISC5=0;
  8240  00295E  9A94               	bcf	3988,5,c	;volatile
  8241                           
  8242                           ; BSR set to: 15
  8243                           ;pin_manager.c: 73: INTCON2bits.nRBPU = 0x01;
  8244  002960  8EF1               	bsf	intcon2,7,c	;volatile
  8245                           
  8246                           ; BSR set to: 15
  8247  002962  0012               	return		;funcret
  8248  002964                     __end_of_PIN_MANAGER_Initialize:
  8249                           	opt stack 0
  8250                           tosu	equ	0xFFF
  8251                           tosh	equ	0xFFE
  8252                           tosl	equ	0xFFD
  8253                           pclath	equ	0xFFA
  8254                           tblptru	equ	0xFF8
  8255                           tblptrh	equ	0xFF7
  8256                           tblptrl	equ	0xFF6
  8257                           tablat	equ	0xFF5
  8258                           prodh	equ	0xFF4
  8259                           prodl	equ	0xFF3
  8260                           intcon	equ	0xFF2
  8261                           intcon2	equ	0xFF1
  8262                           postinc0	equ	0xFEE
  8263                           wreg	equ	0xFE8
  8264                           indf2	equ	0xFDF
  8265                           postinc2	equ	0xFDE
  8266                           postdec2	equ	0xFDD
  8267                           plusw2	equ	0xFDB
  8268                           fsr2h	equ	0xFDA
  8269                           fsr2l	equ	0xFD9
  8270                           status	equ	0xFD8
  8271                           
  8272 ;; *************** function _OSCILLATOR_Initialize *****************
  8273 ;; Defined at:
  8274 ;;		line 125 in file "mcc_generated_files/mcc.c"
  8275 ;; Parameters:    Size  Location     Type
  8276 ;;		None
  8277 ;; Auto vars:     Size  Location     Type
  8278 ;;		None
  8279 ;; Return value:  Size  Location     Type
  8280 ;;                  1    wreg      void 
  8281 ;; Registers used:
  8282 ;;		wreg, status,2
  8283 ;; Tracked objects:
  8284 ;;		On entry : 0/0
  8285 ;;		On exit  : 0/0
  8286 ;;		Unchanged: 0/0
  8287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8288 ;;      Params:         0       0       0       0       0       0       0
  8289 ;;      Locals:         0       0       0       0       0       0       0
  8290 ;;      Temps:          0       0       0       0       0       0       0
  8291 ;;      Totals:         0       0       0       0       0       0       0
  8292 ;;Total ram usage:        0 bytes
  8293 ;; Hardware stack levels used:    1
  8294 ;; Hardware stack levels required when called:    4
  8295 ;; This function calls:
  8296 ;;		Nothing
  8297 ;; This function is called by:
  8298 ;;		_SYSTEM_Initialize
  8299 ;; This function uses a non-reentrant model
  8300 ;;
  8301                           
  8302                           	psect	text43
  8303  002E72                     __ptext43:
  8304                           	opt stack 0
  8305  002E72                     _OSCILLATOR_Initialize:
  8306                           	opt stack 25
  8307                           
  8308                           ;mcc.c: 128: OSCCON = 0x72;
  8309                           
  8310                           ; BSR set to: 15
  8311                           ;incstack = 0
  8312  002E72  0E72               	movlw	114
  8313  002E74  6ED3               	movwf	4051,c	;volatile
  8314                           
  8315                           ;mcc.c: 130: OSCCON2 = 0x04;
  8316  002E76  0E04               	movlw	4
  8317  002E78  6ED2               	movwf	4050,c	;volatile
  8318                           
  8319                           ;mcc.c: 132: OSCTUNE = 0x00;
  8320  002E7A  0E00               	movlw	0
  8321  002E7C  6E9B               	movwf	3995,c	;volatile
  8322  002E7E  0012               	return		;funcret
  8323  002E80                     __end_of_OSCILLATOR_Initialize:
  8324                           	opt stack 0
  8325                           tosu	equ	0xFFF
  8326                           tosh	equ	0xFFE
  8327                           tosl	equ	0xFFD
  8328                           pclath	equ	0xFFA
  8329                           tblptru	equ	0xFF8
  8330                           tblptrh	equ	0xFF7
  8331                           tblptrl	equ	0xFF6
  8332                           tablat	equ	0xFF5
  8333                           prodh	equ	0xFF4
  8334                           prodl	equ	0xFF3
  8335                           intcon	equ	0xFF2
  8336                           intcon2	equ	0xFF1
  8337                           postinc0	equ	0xFEE
  8338                           wreg	equ	0xFE8
  8339                           indf2	equ	0xFDF
  8340                           postinc2	equ	0xFDE
  8341                           postdec2	equ	0xFDD
  8342                           plusw2	equ	0xFDB
  8343                           fsr2h	equ	0xFDA
  8344                           fsr2l	equ	0xFD9
  8345                           status	equ	0xFD8
  8346                           
  8347 ;; *************** function _INTERRUPT_Initialize *****************
  8348 ;; Defined at:
  8349 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8350 ;; Parameters:    Size  Location     Type
  8351 ;;		None
  8352 ;; Auto vars:     Size  Location     Type
  8353 ;;		None
  8354 ;; Return value:  Size  Location     Type
  8355 ;;                  1    wreg      void 
  8356 ;; Registers used:
  8357 ;;		None
  8358 ;; Tracked objects:
  8359 ;;		On entry : 0/0
  8360 ;;		On exit  : 0/0
  8361 ;;		Unchanged: 0/0
  8362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8363 ;;      Params:         0       0       0       0       0       0       0
  8364 ;;      Locals:         0       0       0       0       0       0       0
  8365 ;;      Temps:          0       0       0       0       0       0       0
  8366 ;;      Totals:         0       0       0       0       0       0       0
  8367 ;;Total ram usage:        0 bytes
  8368 ;; Hardware stack levels used:    1
  8369 ;; Hardware stack levels required when called:    4
  8370 ;; This function calls:
  8371 ;;		Nothing
  8372 ;; This function is called by:
  8373 ;;		_SYSTEM_Initialize
  8374 ;; This function uses a non-reentrant model
  8375 ;;
  8376                           
  8377                           	psect	text44
  8378  002E44                     __ptext44:
  8379                           	opt stack 0
  8380  002E44                     _INTERRUPT_Initialize:
  8381                           	opt stack 25
  8382                           
  8383                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  8384                           
  8385                           ;incstack = 0
  8386  002E44  9ED0               	bcf	4048,7,c	;volatile
  8387                           
  8388                           ;interrupt_manager.c: 60: IPR1bits.RC1IP = 0;
  8389  002E46  9A9F               	bcf	3999,5,c	;volatile
  8390                           
  8391                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
  8392  002E48  989F               	bcf	3999,4,c	;volatile
  8393                           
  8394                           ;interrupt_manager.c: 64: INTCON2bits.TMR0IP = 0;
  8395  002E4A  94F1               	bcf	intcon2,2,c	;volatile
  8396                           
  8397                           ;interrupt_manager.c: 66: IPR1bits.ADIP = 0;
  8398  002E4C  9C9F               	bcf	3999,6,c	;volatile
  8399                           
  8400                           ;interrupt_manager.c: 68: IPR1bits.SSP1IP = 0;
  8401  002E4E  969F               	bcf	3999,3,c	;volatile
  8402                           
  8403                           ;interrupt_manager.c: 70: IPR2bits.BCL1IP = 0;
  8404  002E50  96A2               	bcf	4002,3,c	;volatile
  8405                           
  8406                           ;interrupt_manager.c: 71: IPR1bits.TMR2IP=0;
  8407  002E52  929F               	bcf	3999,1,c	;volatile
  8408  002E54  0012               	return		;funcret
  8409  002E56                     __end_of_INTERRUPT_Initialize:
  8410                           	opt stack 0
  8411                           tosu	equ	0xFFF
  8412                           tosh	equ	0xFFE
  8413                           tosl	equ	0xFFD
  8414                           pclath	equ	0xFFA
  8415                           tblptru	equ	0xFF8
  8416                           tblptrh	equ	0xFF7
  8417                           tblptrl	equ	0xFF6
  8418                           tablat	equ	0xFF5
  8419                           prodh	equ	0xFF4
  8420                           prodl	equ	0xFF3
  8421                           intcon	equ	0xFF2
  8422                           intcon2	equ	0xFF1
  8423                           postinc0	equ	0xFEE
  8424                           wreg	equ	0xFE8
  8425                           indf2	equ	0xFDF
  8426                           postinc2	equ	0xFDE
  8427                           postdec2	equ	0xFDD
  8428                           plusw2	equ	0xFDB
  8429                           fsr2h	equ	0xFDA
  8430                           fsr2l	equ	0xFD9
  8431                           status	equ	0xFD8
  8432                           
  8433 ;; *************** function _I2C1_Initialize *****************
  8434 ;; Defined at:
  8435 ;;		line 151 in file "mcc_generated_files/i2c1.c"
  8436 ;; Parameters:    Size  Location     Type
  8437 ;;		None
  8438 ;; Auto vars:     Size  Location     Type
  8439 ;;		None
  8440 ;; Return value:  Size  Location     Type
  8441 ;;                  1    wreg      void 
  8442 ;; Registers used:
  8443 ;;		wreg, status,2, status,0
  8444 ;; Tracked objects:
  8445 ;;		On entry : 0/0
  8446 ;;		On exit  : 0/0
  8447 ;;		Unchanged: 0/0
  8448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8449 ;;      Params:         0       0       0       0       0       0       0
  8450 ;;      Locals:         0       0       0       0       0       0       0
  8451 ;;      Temps:          0       0       0       0       0       0       0
  8452 ;;      Totals:         0       0       0       0       0       0       0
  8453 ;;Total ram usage:        0 bytes
  8454 ;; Hardware stack levels used:    1
  8455 ;; Hardware stack levels required when called:    4
  8456 ;; This function calls:
  8457 ;;		Nothing
  8458 ;; This function is called by:
  8459 ;;		_SYSTEM_Initialize
  8460 ;; This function uses a non-reentrant model
  8461 ;;
  8462                           
  8463                           	psect	text45
  8464  002AC4                     __ptext45:
  8465                           	opt stack 0
  8466  002AC4                     _I2C1_Initialize:
  8467                           	opt stack 25
  8468                           
  8469                           ;i2c1.c: 153: i2c1_object.pTrHead = i2c1_tr_queue;
  8470                           
  8471                           ;incstack = 0
  8472  002AC4  0EE9               	movlw	low _i2c1_tr_queue
  8473  002AC6  0100               	movlb	0	; () banked
  8474  002AC8  6FBA               	movwf	(_i2c1_object+2)& (0+255),b
  8475  002ACA  0E00               	movlw	high _i2c1_tr_queue
  8476  002ACC  0100               	movlb	0	; () banked
  8477  002ACE  6FBB               	movwf	(_i2c1_object+3)& (0+255),b
  8478                           
  8479                           ;i2c1.c: 154: i2c1_object.pTrTail = i2c1_tr_queue;
  8480  002AD0  0EE9               	movlw	low _i2c1_tr_queue
  8481  002AD2  0100               	movlb	0	; () banked
  8482  002AD4  6FB8               	movwf	_i2c1_object& (0+255),b
  8483  002AD6  0E00               	movlw	high _i2c1_tr_queue
  8484  002AD8  0100               	movlb	0	; () banked
  8485  002ADA  6FB9               	movwf	(_i2c1_object+1)& (0+255),b
  8486                           
  8487                           ; BSR set to: 0
  8488                           ;i2c1.c: 155: i2c1_object.trStatus.s.empty = 1;
  8489  002ADC  0100               	movlb	0	; () banked
  8490  002ADE  83BC               	bsf	(_i2c1_object+4)& (0+255),1,b
  8491                           
  8492                           ; BSR set to: 0
  8493                           ;i2c1.c: 156: i2c1_object.trStatus.s.full = 0;
  8494  002AE0  0100               	movlb	0	; () banked
  8495  002AE2  91BC               	bcf	(_i2c1_object+4)& (0+255),0,b
  8496                           
  8497                           ; BSR set to: 0
  8498                           ;i2c1.c: 158: i2c1_object.i2cErrors = 0;
  8499  002AE4  0E00               	movlw	0
  8500  002AE6  0100               	movlb	0	; () banked
  8501  002AE8  6FBE               	movwf	(_i2c1_object+6)& (0+255),b
  8502                           
  8503                           ; BSR set to: 0
  8504                           ;i2c1.c: 161: SSP1STAT = 0x80;
  8505  002AEA  0E80               	movlw	128
  8506  002AEC  6EC7               	movwf	4039,c	;volatile
  8507                           
  8508                           ; BSR set to: 0
  8509                           ;i2c1.c: 163: SSP1CON1 = 0x28;
  8510  002AEE  0E28               	movlw	40
  8511  002AF0  6EC6               	movwf	4038,c	;volatile
  8512                           
  8513                           ; BSR set to: 0
  8514                           ;i2c1.c: 165: SSP1CON3 = 0x00;
  8515  002AF2  0E00               	movlw	0
  8516  002AF4  6ECB               	movwf	4043,c	;volatile
  8517                           
  8518                           ; BSR set to: 0
  8519                           ;i2c1.c: 167: SSP1ADD = 0x09;
  8520  002AF6  0E09               	movlw	9
  8521  002AF8  6EC8               	movwf	4040,c	;volatile
  8522                           
  8523                           ; BSR set to: 0
  8524                           ;i2c1.c: 171: PIR1bits.SSP1IF = 0;
  8525  002AFA  969E               	bcf	3998,3,c	;volatile
  8526                           
  8527                           ; BSR set to: 0
  8528                           ;i2c1.c: 173: PIE1bits.SSP1IE = 1;
  8529  002AFC  869D               	bsf	3997,3,c	;volatile
  8530                           
  8531                           ; BSR set to: 0
  8532  002AFE  0012               	return		;funcret
  8533  002B00                     __end_of_I2C1_Initialize:
  8534                           	opt stack 0
  8535                           tosu	equ	0xFFF
  8536                           tosh	equ	0xFFE
  8537                           tosl	equ	0xFFD
  8538                           pclath	equ	0xFFA
  8539                           tblptru	equ	0xFF8
  8540                           tblptrh	equ	0xFF7
  8541                           tblptrl	equ	0xFF6
  8542                           tablat	equ	0xFF5
  8543                           prodh	equ	0xFF4
  8544                           prodl	equ	0xFF3
  8545                           intcon	equ	0xFF2
  8546                           intcon2	equ	0xFF1
  8547                           postinc0	equ	0xFEE
  8548                           wreg	equ	0xFE8
  8549                           indf2	equ	0xFDF
  8550                           postinc2	equ	0xFDE
  8551                           postdec2	equ	0xFDD
  8552                           plusw2	equ	0xFDB
  8553                           fsr2h	equ	0xFDA
  8554                           fsr2l	equ	0xFD9
  8555                           status	equ	0xFD8
  8556                           
  8557 ;; *************** function _EUSART1_Initialize *****************
  8558 ;; Defined at:
  8559 ;;		line 21 in file "UART.c"
  8560 ;; Parameters:    Size  Location     Type
  8561 ;;		None
  8562 ;; Auto vars:     Size  Location     Type
  8563 ;;		None
  8564 ;; Return value:  Size  Location     Type
  8565 ;;                  1    wreg      void 
  8566 ;; Registers used:
  8567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8568 ;; Tracked objects:
  8569 ;;		On entry : 0/0
  8570 ;;		On exit  : 0/0
  8571 ;;		Unchanged: 0/0
  8572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8573 ;;      Params:         0       0       0       0       0       0       0
  8574 ;;      Locals:         0       0       0       0       0       0       0
  8575 ;;      Temps:          0       0       0       0       0       0       0
  8576 ;;      Totals:         0       0       0       0       0       0       0
  8577 ;;Total ram usage:        0 bytes
  8578 ;; Hardware stack levels used:    1
  8579 ;; Hardware stack levels required when called:    6
  8580 ;; This function calls:
  8581 ;;		_UART_buff_init
  8582 ;; This function is called by:
  8583 ;;		_SYSTEM_Initialize
  8584 ;; This function uses a non-reentrant model
  8585 ;;
  8586                           
  8587                           	psect	text46
  8588  002B00                     __ptext46:
  8589                           	opt stack 0
  8590  002B00                     _EUSART1_Initialize:
  8591                           	opt stack 23
  8592                           
  8593                           ;UART.c: 23: PIE1bits.RC1IE = 0;
  8594                           
  8595                           ; BSR set to: 0
  8596                           ;incstack = 0
  8597  002B00  9A9D               	bcf	3997,5,c	;volatile
  8598                           
  8599                           ;UART.c: 24: PIE1bits.TX1IE = 0;
  8600  002B02  989D               	bcf	3997,4,c	;volatile
  8601                           
  8602                           ;UART.c: 29: BAUD1CON = 0x48;
  8603  002B04  0E48               	movlw	72
  8604  002B06  6EB8               	movwf	4024,c	;volatile
  8605                           
  8606                           ;UART.c: 32: RC1STA = 0x98;
  8607  002B08  0E98               	movlw	152
  8608  002B0A  6EAB               	movwf	4011,c	;volatile
  8609                           
  8610                           ;UART.c: 35: TX1STA = 0x26;
  8611  002B0C  0E26               	movlw	38
  8612  002B0E  6EAC               	movwf	4012,c	;volatile
  8613                           
  8614                           ;UART.c: 38: SPBRG1 = (((16000000/38400)/4)-1);
  8615  002B10  0E67               	movlw	103
  8616  002B12  6EAF               	movwf	4015,c	;volatile
  8617                           
  8618                           ;UART.c: 41: SPBRGH1 = 0x00;
  8619  002B14  0E00               	movlw	0
  8620  002B16  6EB0               	movwf	4016,c	;volatile
  8621                           
  8622                           ;UART.c: 44: TXREG1 = 0x00;
  8623  002B18  0E00               	movlw	0
  8624  002B1A  6EAD               	movwf	4013,c	;volatile
  8625                           
  8626                           ;UART.c: 47: RCREG1 = 0x00;
  8627  002B1C  0E00               	movlw	0
  8628  002B1E  6EAE               	movwf	4014,c	;volatile
  8629                           
  8630                           ;UART.c: 49: UART_buff_init(&input_buffer);
  8631  002B20  0E00               	movlw	low _input_buffer
  8632  002B22  6E23               	movwf	UART_buff_init@_this,c
  8633  002B24  0E04               	movlw	high _input_buffer
  8634  002B26  6E24               	movwf	UART_buff_init@_this+1,c
  8635  002B28  ECC1  F016         	call	_UART_buff_init	;wreg free
  8636                           
  8637                           ;UART.c: 50: UART_buff_init(&output_buffer);
  8638  002B2C  0E00               	movlw	low _output_buffer
  8639  002B2E  6E23               	movwf	UART_buff_init@_this,c
  8640  002B30  0E05               	movlw	high _output_buffer
  8641  002B32  6E24               	movwf	UART_buff_init@_this+1,c
  8642  002B34  ECC1  F016         	call	_UART_buff_init	;wreg free
  8643                           
  8644                           ;UART.c: 52: PIE1bits.RC1IE = 1;
  8645  002B38  8A9D               	bsf	3997,5,c	;volatile
  8646  002B3A  0012               	return		;funcret
  8647  002B3C                     __end_of_EUSART1_Initialize:
  8648                           	opt stack 0
  8649                           tosu	equ	0xFFF
  8650                           tosh	equ	0xFFE
  8651                           tosl	equ	0xFFD
  8652                           pclath	equ	0xFFA
  8653                           tblptru	equ	0xFF8
  8654                           tblptrh	equ	0xFF7
  8655                           tblptrl	equ	0xFF6
  8656                           tablat	equ	0xFF5
  8657                           prodh	equ	0xFF4
  8658                           prodl	equ	0xFF3
  8659                           intcon	equ	0xFF2
  8660                           intcon2	equ	0xFF1
  8661                           postinc0	equ	0xFEE
  8662                           wreg	equ	0xFE8
  8663                           indf2	equ	0xFDF
  8664                           postinc2	equ	0xFDE
  8665                           postdec2	equ	0xFDD
  8666                           plusw2	equ	0xFDB
  8667                           fsr2h	equ	0xFDA
  8668                           fsr2l	equ	0xFD9
  8669                           status	equ	0xFD8
  8670                           
  8671 ;; *************** function _UART_buff_init *****************
  8672 ;; Defined at:
  8673 ;;		line 56 in file "UART.c"
  8674 ;; Parameters:    Size  Location     Type
  8675 ;;  _this           2   34[COMRAM] PTR struct UART_ring_buf
  8676 ;;		 -> output_buffer(206), input_buffer(206), 
  8677 ;; Auto vars:     Size  Location     Type
  8678 ;;		None
  8679 ;; Return value:  Size  Location     Type
  8680 ;;                  1    wreg      void 
  8681 ;; Registers used:
  8682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8683 ;; Tracked objects:
  8684 ;;		On entry : 0/0
  8685 ;;		On exit  : 0/0
  8686 ;;		Unchanged: 0/0
  8687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8688 ;;      Params:         2       0       0       0       0       0       0
  8689 ;;      Locals:         0       0       0       0       0       0       0
  8690 ;;      Temps:          0       0       0       0       0       0       0
  8691 ;;      Totals:         2       0       0       0       0       0       0
  8692 ;;Total ram usage:        2 bytes
  8693 ;; Hardware stack levels used:    1
  8694 ;; Hardware stack levels required when called:    5
  8695 ;; This function calls:
  8696 ;;		_memset
  8697 ;; This function is called by:
  8698 ;;		_EUSART1_Initialize
  8699 ;; This function uses a non-reentrant model
  8700 ;;
  8701                           
  8702                           	psect	text47
  8703  002D82                     __ptext47:
  8704                           	opt stack 0
  8705  002D82                     _UART_buff_init:
  8706                           	opt stack 23
  8707                           
  8708                           ;UART.c: 65: memset(_this, 0, sizeof (*_this));
  8709                           
  8710                           ;incstack = 0
  8711  002D82  C023  F01B         	movff	UART_buff_init@_this,memset@p1
  8712  002D86  C024  F01C         	movff	UART_buff_init@_this+1,memset@p1+1
  8713  002D8A  0E00               	movlw	0
  8714  002D8C  6E1E               	movwf	memset@c+1,c
  8715  002D8E  0E00               	movlw	0
  8716  002D90  6E1D               	movwf	memset@c,c
  8717  002D92  0E00               	movlw	0
  8718  002D94  6E20               	movwf	memset@n+1,c
  8719  002D96  0ECE               	movlw	206
  8720  002D98  6E1F               	movwf	memset@n,c
  8721  002D9A  EC05  F016         	call	_memset	;wreg free
  8722  002D9E  0012               	return		;funcret
  8723  002DA0                     __end_of_UART_buff_init:
  8724                           	opt stack 0
  8725                           tosu	equ	0xFFF
  8726                           tosh	equ	0xFFE
  8727                           tosl	equ	0xFFD
  8728                           pclath	equ	0xFFA
  8729                           tblptru	equ	0xFF8
  8730                           tblptrh	equ	0xFF7
  8731                           tblptrl	equ	0xFF6
  8732                           tablat	equ	0xFF5
  8733                           prodh	equ	0xFF4
  8734                           prodl	equ	0xFF3
  8735                           intcon	equ	0xFF2
  8736                           intcon2	equ	0xFF1
  8737                           postinc0	equ	0xFEE
  8738                           wreg	equ	0xFE8
  8739                           indf2	equ	0xFDF
  8740                           postinc2	equ	0xFDE
  8741                           postdec2	equ	0xFDD
  8742                           plusw2	equ	0xFDB
  8743                           fsr2h	equ	0xFDA
  8744                           fsr2l	equ	0xFD9
  8745                           status	equ	0xFD8
  8746                           
  8747 ;; *************** function _memset *****************
  8748 ;; Defined at:
  8749 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\memset.c"
  8750 ;; Parameters:    Size  Location     Type
  8751 ;;  p1              2   26[COMRAM] PTR void 
  8752 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  8753 ;;  c               2   28[COMRAM] int 
  8754 ;;  n               2   30[COMRAM] unsigned int 
  8755 ;; Auto vars:     Size  Location     Type
  8756 ;;  p               2   32[COMRAM] PTR unsigned char 
  8757 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  8758 ;; Return value:  Size  Location     Type
  8759 ;;                  2   26[COMRAM] PTR void 
  8760 ;; Registers used:
  8761 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8762 ;; Tracked objects:
  8763 ;;		On entry : 0/0
  8764 ;;		On exit  : 0/0
  8765 ;;		Unchanged: 0/0
  8766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8767 ;;      Params:         6       0       0       0       0       0       0
  8768 ;;      Locals:         2       0       0       0       0       0       0
  8769 ;;      Temps:          0       0       0       0       0       0       0
  8770 ;;      Totals:         8       0       0       0       0       0       0
  8771 ;;Total ram usage:        8 bytes
  8772 ;; Hardware stack levels used:    1
  8773 ;; Hardware stack levels required when called:    4
  8774 ;; This function calls:
  8775 ;;		Nothing
  8776 ;; This function is called by:
  8777 ;;		_FastTransfer_buffer_flush
  8778 ;;		_UART_buff_init
  8779 ;;		_UART_buff_flush
  8780 ;; This function uses a non-reentrant model
  8781 ;;
  8782                           
  8783                           	psect	text48
  8784  002C0A                     __ptext48:
  8785                           	opt stack 0
  8786  002C0A                     _memset:
  8787                           	opt stack 22
  8788                           
  8789                           ;incstack = 0
  8790  002C0A  C01B  F021         	movff	memset@p1,memset@p
  8791  002C0E  C01C  F022         	movff	memset@p1+1,memset@p+1
  8792  002C12  D008               	goto	l5182
  8793  002C14                     l5178:
  8794  002C14  C021  FFD9         	movff	memset@p,fsr2l
  8795  002C18  C022  FFDA         	movff	memset@p+1,fsr2h
  8796  002C1C  C01D  FFDF         	movff	memset@c,indf2
  8797  002C20  4A21               	infsnz	memset@p,f,c
  8798  002C22  2A22               	incf	memset@p+1,f,c
  8799  002C24                     l5182:
  8800  002C24  061F               	decf	memset@n,f,c
  8801  002C26  A0D8               	btfss	status,0,c
  8802  002C28  0620               	decf	memset@n+1,f,c
  8803  002C2A  281F               	incf	memset@n,w,c
  8804  002C2C  E1F3               	bnz	l5178
  8805  002C2E  2820               	incf	memset@n+1,w,c
  8806  002C30  B4D8               	btfsc	status,2,c
  8807  002C32  0012               	return	
  8808  002C34  D7EF               	goto	l5178
  8809  002C36                     __end_of_memset:
  8810                           	opt stack 0
  8811                           tosu	equ	0xFFF
  8812                           tosh	equ	0xFFE
  8813                           tosl	equ	0xFFD
  8814                           pclath	equ	0xFFA
  8815                           tblptru	equ	0xFF8
  8816                           tblptrh	equ	0xFF7
  8817                           tblptrl	equ	0xFF6
  8818                           tablat	equ	0xFF5
  8819                           prodh	equ	0xFF4
  8820                           prodl	equ	0xFF3
  8821                           intcon	equ	0xFF2
  8822                           intcon2	equ	0xFF1
  8823                           postinc0	equ	0xFEE
  8824                           wreg	equ	0xFE8
  8825                           indf2	equ	0xFDF
  8826                           postinc2	equ	0xFDE
  8827                           postdec2	equ	0xFDD
  8828                           plusw2	equ	0xFDB
  8829                           fsr2h	equ	0xFDA
  8830                           fsr2l	equ	0xFD9
  8831                           status	equ	0xFD8
  8832                           
  8833 ;; *************** function _ADC_Initialize *****************
  8834 ;; Defined at:
  8835 ;;		line 59 in file "mcc_generated_files/adc.c"
  8836 ;; Parameters:    Size  Location     Type
  8837 ;;		None
  8838 ;; Auto vars:     Size  Location     Type
  8839 ;;		None
  8840 ;; Return value:  Size  Location     Type
  8841 ;;                  1    wreg      void 
  8842 ;; Registers used:
  8843 ;;		wreg, status,2
  8844 ;; Tracked objects:
  8845 ;;		On entry : 0/0
  8846 ;;		On exit  : 0/0
  8847 ;;		Unchanged: 0/0
  8848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8849 ;;      Params:         0       0       0       0       0       0       0
  8850 ;;      Locals:         0       0       0       0       0       0       0
  8851 ;;      Temps:          0       0       0       0       0       0       0
  8852 ;;      Totals:         0       0       0       0       0       0       0
  8853 ;;Total ram usage:        0 bytes
  8854 ;; Hardware stack levels used:    1
  8855 ;; Hardware stack levels required when called:    4
  8856 ;; This function calls:
  8857 ;;		Nothing
  8858 ;; This function is called by:
  8859 ;;		_SYSTEM_Initialize
  8860 ;; This function uses a non-reentrant model
  8861 ;;
  8862                           
  8863                           	psect	text49
  8864  002DD8                     __ptext49:
  8865                           	opt stack 0
  8866  002DD8                     _ADC_Initialize:
  8867                           	opt stack 25
  8868                           
  8869                           ;adc.c: 64: ADCON0 = 0x01;
  8870                           
  8871                           ;incstack = 0
  8872  002DD8  0E01               	movlw	1
  8873  002DDA  6EC2               	movwf	4034,c	;volatile
  8874                           
  8875                           ;adc.c: 67: ADCON1 = 0x80;
  8876  002DDC  0E80               	movlw	128
  8877  002DDE  6EC1               	movwf	4033,c	;volatile
  8878                           
  8879                           ;adc.c: 70: ADCON2 = 0x05;
  8880  002DE0  0E05               	movlw	5
  8881  002DE2  6EC0               	movwf	4032,c	;volatile
  8882                           
  8883                           ;adc.c: 73: ADRESL = 0x00;
  8884  002DE4  0E00               	movlw	0
  8885  002DE6  6EC3               	movwf	4035,c	;volatile
  8886                           
  8887                           ;adc.c: 76: ADRESH = 0x00;
  8888  002DE8  0E00               	movlw	0
  8889  002DEA  6EC4               	movwf	4036,c	;volatile
  8890                           
  8891                           ;adc.c: 79: PIE1bits.ADIE = 1;
  8892  002DEC  8C9D               	bsf	3997,6,c	;volatile
  8893  002DEE  0012               	return		;funcret
  8894  002DF0                     __end_of_ADC_Initialize:
  8895                           	opt stack 0
  8896                           tosu	equ	0xFFF
  8897                           tosh	equ	0xFFE
  8898                           tosl	equ	0xFFD
  8899                           pclath	equ	0xFFA
  8900                           tblptru	equ	0xFF8
  8901                           tblptrh	equ	0xFF7
  8902                           tblptrl	equ	0xFF6
  8903                           tablat	equ	0xFF5
  8904                           prodh	equ	0xFF4
  8905                           prodl	equ	0xFF3
  8906                           intcon	equ	0xFF2
  8907                           intcon2	equ	0xFF1
  8908                           postinc0	equ	0xFEE
  8909                           wreg	equ	0xFE8
  8910                           indf2	equ	0xFDF
  8911                           postinc2	equ	0xFDE
  8912                           postdec2	equ	0xFDD
  8913                           plusw2	equ	0xFDB
  8914                           fsr2h	equ	0xFDA
  8915                           fsr2l	equ	0xFD9
  8916                           status	equ	0xFD8
  8917                           
  8918 ;; *************** function _LEDwriteDisplay *****************
  8919 ;; Defined at:
  8920 ;;		line 114 in file "LED_BarGraph.c"
  8921 ;; Parameters:    Size  Location     Type
  8922 ;;  i2c_addr        1    wreg     unsigned char 
  8923 ;; Auto vars:     Size  Location     Type
  8924 ;;  i2c_addr        1   20[BANK1 ] unsigned char 
  8925 ;;  writeBuffer    20    0[BANK1 ] unsigned char [20]
  8926 ;;  timeOut         2   21[BANK1 ] unsigned int 
  8927 ;;  status          1   23[BANK1 ] enum E7758
  8928 ;; Return value:  Size  Location     Type
  8929 ;;                  1    wreg      void 
  8930 ;; Registers used:
  8931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8932 ;; Tracked objects:
  8933 ;;		On entry : 0/0
  8934 ;;		On exit  : 0/0
  8935 ;;		Unchanged: 0/0
  8936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8937 ;;      Params:         0       0       0       0       0       0       0
  8938 ;;      Locals:         0       0      24       0       0       0       0
  8939 ;;      Temps:          0       0       0       0       0       0       0
  8940 ;;      Totals:         0       0      24       0       0       0       0
  8941 ;;Total ram usage:       24 bytes
  8942 ;; Hardware stack levels used:    1
  8943 ;; Hardware stack levels required when called:    6
  8944 ;; This function calls:
  8945 ;;		_I2C1_MasterWrite
  8946 ;; This function is called by:
  8947 ;;		_main
  8948 ;; This function uses a non-reentrant model
  8949 ;;
  8950                           
  8951                           	psect	text50
  8952  001712                     __ptext50:
  8953                           	opt stack 0
  8954  001712                     _LEDwriteDisplay:
  8955                           	opt stack 24
  8956                           
  8957                           ;incstack = 0
  8958                           ;LEDwriteDisplay@i2c_addr stored from wreg
  8959  001712  0101               	movlb	1	; () banked
  8960  001714  6F4D               	movwf	LEDwriteDisplay@i2c_addr& (0+255),b
  8961                           
  8962                           ;LED_BarGraph.c: 115: uint8_t writeBuffer[20];
  8963                           ;LED_BarGraph.c: 116: uint16_t timeOut;
  8964                           ;LED_BarGraph.c: 117: writeBuffer[0] = 0x00;
  8965  001716  0E00               	movlw	0
  8966  001718  0101               	movlb	1	; () banked
  8967  00171A  6F39               	movwf	LEDwriteDisplay@writeBuffer& (0+255),b
  8968                           
  8969                           ;LED_BarGraph.c: 118: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  8970  00171C  0E02               	movlw	2
  8971  00171E  0101               	movlb	1	; () banked
  8972  001720  6F50               	movwf	LEDwriteDisplay@status& (0+255),b
  8973                           
  8974                           ;LED_BarGraph.c: 120: timeOut = 0;
  8975  001722  0E00               	movlw	0
  8976  001724  0101               	movlb	1	; () banked
  8977  001726  6F4F               	movwf	(LEDwriteDisplay@timeOut+1)& (0+255),b
  8978  001728  0E00               	movlw	0
  8979  00172A  6F4E               	movwf	LEDwriteDisplay@timeOut& (0+255),b
  8980                           
  8981                           ;LED_BarGraph.c: 121: while (status != I2C1_MESSAGE_FAIL) {
  8982  00172C  D027               	goto	l6346
  8983  00172E                     l6326:
  8984                           
  8985                           ; BSR set to: 1
  8986                           ;LED_BarGraph.c: 123: I2C1_MasterWrite(&writeBuffer,
  8987                           ;LED_BarGraph.c: 124: 1,
  8988                           ;LED_BarGraph.c: 125: i2c_addr,
  8989                           ;LED_BarGraph.c: 126: &status);
  8990  00172E  0E39               	movlw	low LEDwriteDisplay@writeBuffer
  8991  001730  6E24               	movwf	I2C1_MasterWrite@pdata,c
  8992  001732  0E01               	movlw	high LEDwriteDisplay@writeBuffer
  8993  001734  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
  8994  001736  0E01               	movlw	1
  8995  001738  6E26               	movwf	I2C1_MasterWrite@length,c
  8996  00173A  C14D  F027         	movff	LEDwriteDisplay@i2c_addr,I2C1_MasterWrite@address
  8997  00173E  6A28               	clrf	I2C1_MasterWrite@address+1,c
  8998  001740  0E50               	movlw	low LEDwriteDisplay@status
  8999  001742  6E29               	movwf	I2C1_MasterWrite@pflag,c
  9000  001744  0E01               	movlw	high LEDwriteDisplay@status
  9001  001746  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
  9002  001748  ECB2  F014         	call	_I2C1_MasterWrite	;wreg free
  9003  00174C                     l6328:
  9004  00174C  0E02               	movlw	2
  9005  00174E  0101               	movlb	1	; () banked
  9006  001750  1950               	xorwf	LEDwriteDisplay@status& (0+255),w,b
  9007  001752  B4D8               	btfsc	status,2,c
  9008  001754  D7FB               	goto	l6328
  9009                           
  9010                           ; BSR set to: 1
  9011                           ;LED_BarGraph.c: 131: if (status == I2C1_MESSAGE_COMPLETE)
  9012                           
  9013                           ; BSR set to: 1
  9014  001756  0101               	movlb	1	; () banked
  9015  001758  5150               	movf	LEDwriteDisplay@status& (0+255),w,b
  9016  00175A  0101               	movlb	1	; () banked
  9017  00175C  B4D8               	btfsc	status,2,c
  9018  00175E  D012               	goto	l6348
  9019                           
  9020                           ; BSR set to: 1
  9021                           ;LED_BarGraph.c: 133: if (timeOut == 100)
  9022                           
  9023                           ; BSR set to: 1
  9024                           
  9025                           ; BSR set to: 1
  9026                           ;LED_BarGraph.c: 132: break;
  9027  001760  0E64               	movlw	100
  9028  001762  0101               	movlb	1	; () banked
  9029  001764  194E               	xorwf	LEDwriteDisplay@timeOut& (0+255),w,b
  9030  001766  0101               	movlb	1	; () banked
  9031  001768  114F               	iorwf	(LEDwriteDisplay@timeOut+1)& (0+255),w,b
  9032  00176A  B4D8               	btfsc	status,2,c
  9033  00176C  D00B               	goto	l6348
  9034                           
  9035                           ; BSR set to: 1
  9036                           ;LED_BarGraph.c: 135: if (status == I2C1_MESSAGE_FAIL)
  9037                           
  9038                           ; BSR set to: 1
  9039                           
  9040                           ; BSR set to: 1
  9041                           ;LED_BarGraph.c: 134: break;
  9042  00176E  0101               	movlb	1	; () banked
  9043  001770  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
  9044  001772  B4D8               	btfsc	status,2,c
  9045  001774  D007               	goto	l6348
  9046                           
  9047                           ; BSR set to: 1
  9048                           ;LED_BarGraph.c: 137: else
  9049                           ;LED_BarGraph.c: 138: timeOut++;
  9050                           
  9051                           ; BSR set to: 1
  9052                           
  9053                           ; BSR set to: 1
  9054                           
  9055                           ; BSR set to: 1
  9056                           ;LED_BarGraph.c: 136: break;
  9057  001776  0101               	movlb	1	; () banked
  9058  001778  4B4E               	infsnz	LEDwriteDisplay@timeOut& (0+255),f,b
  9059  00177A  2B4F               	incf	(LEDwriteDisplay@timeOut+1)& (0+255),f,b
  9060  00177C                     l6346:
  9061                           
  9062                           ; BSR set to: 1
  9063  00177C  0101               	movlb	1	; () banked
  9064  00177E  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
  9065  001780  A4D8               	btfss	status,2,c
  9066  001782  D7D5               	goto	l6326
  9067  001784                     l6348:
  9068                           
  9069                           ; BSR set to: 1
  9070                           ;LED_BarGraph.c: 139: }
  9071                           ;LED_BarGraph.c: 140: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  9072  001784  0E02               	movlw	2
  9073  001786  0101               	movlb	1	; () banked
  9074  001788  6F50               	movwf	LEDwriteDisplay@status& (0+255),b
  9075                           
  9076                           ;LED_BarGraph.c: 145: writeBuffer[0] = 0;
  9077  00178A  0E00               	movlw	0
  9078  00178C  0101               	movlb	1	; () banked
  9079  00178E  6F39               	movwf	LEDwriteDisplay@writeBuffer& (0+255),b
  9080                           
  9081                           ; BSR set to: 1
  9082                           ;LED_BarGraph.c: 146: writeBuffer[1] = displaybuffer[0] & 0xFF;
  9083  001790  C060  F13A         	movff	_displaybuffer,LEDwriteDisplay@writeBuffer+1
  9084                           
  9085                           ; BSR set to: 1
  9086                           ;LED_BarGraph.c: 147: writeBuffer[2] = displaybuffer[0] >> 8;
  9087  001794  C061  F13B         	movff	_displaybuffer+1,LEDwriteDisplay@writeBuffer+2
  9088                           
  9089                           ; BSR set to: 1
  9090                           ;LED_BarGraph.c: 148: writeBuffer[3] = displaybuffer[1] & 0xFF;
  9091  001798  C064  F13C         	movff	_displaybuffer+4,LEDwriteDisplay@writeBuffer+3
  9092                           
  9093                           ; BSR set to: 1
  9094                           ;LED_BarGraph.c: 149: writeBuffer[4] = displaybuffer[1] >> 8;
  9095  00179C  C065  F13D         	movff	_displaybuffer+5,LEDwriteDisplay@writeBuffer+4
  9096                           
  9097                           ; BSR set to: 1
  9098                           ;LED_BarGraph.c: 150: writeBuffer[5] = displaybuffer[2] & 0xFF;
  9099  0017A0  C068  F13E         	movff	_displaybuffer+8,LEDwriteDisplay@writeBuffer+5
  9100                           
  9101                           ; BSR set to: 1
  9102                           ;LED_BarGraph.c: 151: writeBuffer[6] = displaybuffer[2] >> 8;
  9103  0017A4  C069  F13F         	movff	_displaybuffer+9,LEDwriteDisplay@writeBuffer+6
  9104                           
  9105                           ; BSR set to: 1
  9106                           ;LED_BarGraph.c: 152: writeBuffer[7] = displaybuffer[3] & 0xFF;
  9107  0017A8  C06C  F140         	movff	_displaybuffer+12,LEDwriteDisplay@writeBuffer+7
  9108                           
  9109                           ; BSR set to: 1
  9110                           ;LED_BarGraph.c: 153: writeBuffer[8] = displaybuffer[3] >> 8;
  9111  0017AC  C06D  F141         	movff	_displaybuffer+13,LEDwriteDisplay@writeBuffer+8
  9112                           
  9113                           ; BSR set to: 1
  9114                           ;LED_BarGraph.c: 154: writeBuffer[9] = displaybuffer[4] & 0xFF;
  9115  0017B0  C070  F142         	movff	_displaybuffer+16,LEDwriteDisplay@writeBuffer+9
  9116                           
  9117                           ; BSR set to: 1
  9118                           ;LED_BarGraph.c: 155: writeBuffer[10] = displaybuffer[4] >> 8;
  9119  0017B4  C071  F143         	movff	_displaybuffer+17,LEDwriteDisplay@writeBuffer+10
  9120                           
  9121                           ; BSR set to: 1
  9122                           ;LED_BarGraph.c: 156: writeBuffer[11] = displaybuffer[5] & 0xFF;
  9123  0017B8  C074  F144         	movff	_displaybuffer+20,LEDwriteDisplay@writeBuffer+11
  9124                           
  9125                           ; BSR set to: 1
  9126                           ;LED_BarGraph.c: 157: writeBuffer[12] = displaybuffer[5] >> 8;
  9127  0017BC  C075  F145         	movff	_displaybuffer+21,LEDwriteDisplay@writeBuffer+12
  9128                           
  9129                           ; BSR set to: 1
  9130                           ;LED_BarGraph.c: 158: writeBuffer[13] = displaybuffer[6] & 0xFF;
  9131  0017C0  C078  F146         	movff	_displaybuffer+24,LEDwriteDisplay@writeBuffer+13
  9132                           
  9133                           ; BSR set to: 1
  9134                           ;LED_BarGraph.c: 159: writeBuffer[14] = displaybuffer[6] >> 8;
  9135  0017C4  C079  F147         	movff	_displaybuffer+25,LEDwriteDisplay@writeBuffer+14
  9136                           
  9137                           ; BSR set to: 1
  9138                           ;LED_BarGraph.c: 160: writeBuffer[15] = displaybuffer[7] & 0xFF;
  9139  0017C8  C07C  F148         	movff	_displaybuffer+28,LEDwriteDisplay@writeBuffer+15
  9140                           
  9141                           ; BSR set to: 1
  9142                           ;LED_BarGraph.c: 161: writeBuffer[16] = displaybuffer[7] >> 8;
  9143  0017CC  C07D  F149         	movff	_displaybuffer+29,LEDwriteDisplay@writeBuffer+16
  9144                           
  9145                           ; BSR set to: 1
  9146                           ;LED_BarGraph.c: 162: writeBuffer[17] = displaybuffer[8] & 0xFF;
  9147  0017D0  C080  F14A         	movff	_displaybuffer+32,LEDwriteDisplay@writeBuffer+17
  9148                           
  9149                           ; BSR set to: 1
  9150                           ;LED_BarGraph.c: 163: writeBuffer[18] = displaybuffer[8] >> 8;
  9151  0017D4  C081  F14B         	movff	_displaybuffer+33,LEDwriteDisplay@writeBuffer+18
  9152                           
  9153                           ;LED_BarGraph.c: 165: timeOut = 0;
  9154  0017D8  0E00               	movlw	0
  9155  0017DA  0101               	movlb	1	; () banked
  9156  0017DC  6F4F               	movwf	(LEDwriteDisplay@timeOut+1)& (0+255),b
  9157  0017DE  0E00               	movlw	0
  9158  0017E0  6F4E               	movwf	LEDwriteDisplay@timeOut& (0+255),b
  9159                           
  9160                           ;LED_BarGraph.c: 166: while (status != I2C1_MESSAGE_FAIL) {
  9161  0017E2  D027               	goto	l6406
  9162  0017E4                     l6386:
  9163                           
  9164                           ; BSR set to: 1
  9165                           ;LED_BarGraph.c: 168: I2C1_MasterWrite(&writeBuffer,
  9166                           ;LED_BarGraph.c: 169: 17,
  9167                           ;LED_BarGraph.c: 170: i2c_addr,
  9168                           ;LED_BarGraph.c: 171: &status);
  9169  0017E4  0E39               	movlw	low LEDwriteDisplay@writeBuffer
  9170  0017E6  6E24               	movwf	I2C1_MasterWrite@pdata,c
  9171  0017E8  0E01               	movlw	high LEDwriteDisplay@writeBuffer
  9172  0017EA  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
  9173  0017EC  0E11               	movlw	17
  9174  0017EE  6E26               	movwf	I2C1_MasterWrite@length,c
  9175  0017F0  C14D  F027         	movff	LEDwriteDisplay@i2c_addr,I2C1_MasterWrite@address
  9176  0017F4  6A28               	clrf	I2C1_MasterWrite@address+1,c
  9177  0017F6  0E50               	movlw	low LEDwriteDisplay@status
  9178  0017F8  6E29               	movwf	I2C1_MasterWrite@pflag,c
  9179  0017FA  0E01               	movlw	high LEDwriteDisplay@status
  9180  0017FC  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
  9181  0017FE  ECB2  F014         	call	_I2C1_MasterWrite	;wreg free
  9182  001802                     l6388:
  9183  001802  0E02               	movlw	2
  9184  001804  0101               	movlb	1	; () banked
  9185  001806  1950               	xorwf	LEDwriteDisplay@status& (0+255),w,b
  9186  001808  B4D8               	btfsc	status,2,c
  9187  00180A  D7FB               	goto	l6388
  9188                           
  9189                           ; BSR set to: 1
  9190                           ;LED_BarGraph.c: 176: if (status == I2C1_MESSAGE_COMPLETE)
  9191                           
  9192                           ; BSR set to: 1
  9193  00180C  0101               	movlb	1	; () banked
  9194  00180E  5150               	movf	LEDwriteDisplay@status& (0+255),w,b
  9195  001810  0101               	movlb	1	; () banked
  9196  001812  B4D8               	btfsc	status,2,c
  9197  001814  0012               	return	
  9198                           
  9199                           ; BSR set to: 1
  9200                           ;LED_BarGraph.c: 178: if (timeOut == 100)
  9201                           
  9202                           ; BSR set to: 1
  9203                           
  9204                           ; BSR set to: 1
  9205                           ;LED_BarGraph.c: 177: break;
  9206  001816  0E64               	movlw	100
  9207  001818  0101               	movlb	1	; () banked
  9208  00181A  194E               	xorwf	LEDwriteDisplay@timeOut& (0+255),w,b
  9209  00181C  0101               	movlb	1	; () banked
  9210  00181E  114F               	iorwf	(LEDwriteDisplay@timeOut+1)& (0+255),w,b
  9211  001820  B4D8               	btfsc	status,2,c
  9212  001822  0012               	return	
  9213                           
  9214                           ; BSR set to: 1
  9215                           ;LED_BarGraph.c: 180: if (status == I2C1_MESSAGE_FAIL)
  9216                           
  9217                           ; BSR set to: 1
  9218                           
  9219                           ; BSR set to: 1
  9220                           ;LED_BarGraph.c: 179: break;
  9221  001824  0101               	movlb	1	; () banked
  9222  001826  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
  9223  001828  B4D8               	btfsc	status,2,c
  9224  00182A  0012               	return	
  9225                           
  9226                           ; BSR set to: 1
  9227                           ;LED_BarGraph.c: 182: else
  9228                           ;LED_BarGraph.c: 183: timeOut++;
  9229                           
  9230                           ; BSR set to: 1
  9231                           
  9232                           ; BSR set to: 1
  9233                           
  9234                           ; BSR set to: 1
  9235                           ;LED_BarGraph.c: 181: break;
  9236  00182C  0101               	movlb	1	; () banked
  9237  00182E  4B4E               	infsnz	LEDwriteDisplay@timeOut& (0+255),f,b
  9238  001830  2B4F               	incf	(LEDwriteDisplay@timeOut+1)& (0+255),f,b
  9239  001832                     l6406:
  9240                           
  9241                           ; BSR set to: 1
  9242  001832  0101               	movlb	1	; () banked
  9243  001834  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
  9244  001836  B4D8               	btfsc	status,2,c
  9245  001838  0012               	return	
  9246  00183A  D7D4               	goto	l6386
  9247  00183C                     __end_of_LEDwriteDisplay:
  9248                           	opt stack 0
  9249                           tosu	equ	0xFFF
  9250                           tosh	equ	0xFFE
  9251                           tosl	equ	0xFFD
  9252                           pclath	equ	0xFFA
  9253                           tblptru	equ	0xFF8
  9254                           tblptrh	equ	0xFF7
  9255                           tblptrl	equ	0xFF6
  9256                           tablat	equ	0xFF5
  9257                           prodh	equ	0xFF4
  9258                           prodl	equ	0xFF3
  9259                           intcon	equ	0xFF2
  9260                           intcon2	equ	0xFF1
  9261                           postinc0	equ	0xFEE
  9262                           wreg	equ	0xFE8
  9263                           indf2	equ	0xFDF
  9264                           postinc2	equ	0xFDE
  9265                           postdec2	equ	0xFDD
  9266                           plusw2	equ	0xFDB
  9267                           fsr2h	equ	0xFDA
  9268                           fsr2l	equ	0xFD9
  9269                           status	equ	0xFD8
  9270                           
  9271 ;; *************** function _LEDsetValue *****************
  9272 ;; Defined at:
  9273 ;;		line 11 in file "LED_BarGraph.c"
  9274 ;; Parameters:    Size  Location     Type
  9275 ;;  value           2   11[BANK1 ] int 
  9276 ;;  color           2   13[BANK1 ] int 
  9277 ;; Auto vars:     Size  Location     Type
  9278 ;;  k               2   16[BANK1 ] int 
  9279 ;; Return value:  Size  Location     Type
  9280 ;;                  1    wreg      void 
  9281 ;; Registers used:
  9282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9283 ;; Tracked objects:
  9284 ;;		On entry : 0/0
  9285 ;;		On exit  : 0/0
  9286 ;;		Unchanged: 0/0
  9287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9288 ;;      Params:         0       0       4       0       0       0       0
  9289 ;;      Locals:         0       0       2       0       0       0       0
  9290 ;;      Temps:          0       0       1       0       0       0       0
  9291 ;;      Totals:         0       0       7       0       0       0       0
  9292 ;;Total ram usage:        7 bytes
  9293 ;; Hardware stack levels used:    1
  9294 ;; Hardware stack levels required when called:    6
  9295 ;; This function calls:
  9296 ;;		_LEDsetBar
  9297 ;; This function is called by:
  9298 ;;		_main
  9299 ;; This function uses a non-reentrant model
  9300 ;;
  9301                           
  9302                           	psect	text51
  9303  002130                     __ptext51:
  9304                           	opt stack 0
  9305  002130                     _LEDsetValue:
  9306                           	opt stack 24
  9307                           
  9308                           ;LED_BarGraph.c: 12: if (value > 24) value = 24;
  9309                           
  9310                           ; BSR set to: 1
  9311                           ;incstack = 0
  9312  002130  0101               	movlb	1	; () banked
  9313  002132  BF45               	btfsc	(LEDsetValue@value+1)& (0+255),7,b
  9314  002134  D00D               	goto	l6306
  9315  002136  0101               	movlb	1	; () banked
  9316  002138  5145               	movf	(LEDsetValue@value+1)& (0+255),w,b
  9317  00213A  E105               	bnz	u6950
  9318  00213C  0E19               	movlw	25
  9319  00213E  0101               	movlb	1	; () banked
  9320  002140  5D44               	subwf	LEDsetValue@value& (0+255),w,b
  9321  002142  A0D8               	btfss	status,0,c
  9322  002144  D005               	goto	l6306
  9323  002146                     u6950:
  9324                           
  9325                           ; BSR set to: 1
  9326  002146  0E00               	movlw	0
  9327  002148  0101               	movlb	1	; () banked
  9328  00214A  6F45               	movwf	(LEDsetValue@value+1)& (0+255),b
  9329  00214C  0E18               	movlw	24
  9330  00214E  6F44               	movwf	LEDsetValue@value& (0+255),b
  9331  002150                     l6306:
  9332                           
  9333                           ; BSR set to: 1
  9334                           ;LED_BarGraph.c: 13: if (value < 0) value = 0;
  9335  002150  0101               	movlb	1	; () banked
  9336  002152  AF45               	btfss	(LEDsetValue@value+1)& (0+255),7,b
  9337  002154  D005               	goto	l439
  9338                           
  9339                           ; BSR set to: 1
  9340  002156  0E00               	movlw	0
  9341  002158  0101               	movlb	1	; () banked
  9342  00215A  6F45               	movwf	(LEDsetValue@value+1)& (0+255),b
  9343  00215C  0E00               	movlw	0
  9344  00215E  6F44               	movwf	LEDsetValue@value& (0+255),b
  9345  002160                     l439:
  9346                           
  9347                           ; BSR set to: 1
  9348                           ;LED_BarGraph.c: 14: int k;
  9349                           ;LED_BarGraph.c: 15: for (k = 0; k < 24; k++) {
  9350  002160  0E00               	movlw	0
  9351  002162  0101               	movlb	1	; () banked
  9352  002164  6F4A               	movwf	(LEDsetValue@k+1)& (0+255),b
  9353  002166  0E00               	movlw	0
  9354  002168  6F49               	movwf	LEDsetValue@k& (0+255),b
  9355  00216A                     l6310:
  9356                           
  9357                           ; BSR set to: 1
  9358  00216A  0101               	movlb	1	; () banked
  9359  00216C  BF4A               	btfsc	(LEDsetValue@k+1)& (0+255),7,b
  9360  00216E  D008               	goto	l6314
  9361  002170  0101               	movlb	1	; () banked
  9362  002172  514A               	movf	(LEDsetValue@k+1)& (0+255),w,b
  9363  002174  E12E               	bnz	l444
  9364  002176  0E18               	movlw	24
  9365  002178  0101               	movlb	1	; () banked
  9366  00217A  5D49               	subwf	LEDsetValue@k& (0+255),w,b
  9367  00217C  B0D8               	btfsc	status,0,c
  9368  00217E  0012               	return	
  9369  002180                     l6314:
  9370                           
  9371                           ; BSR set to: 1
  9372                           ;LED_BarGraph.c: 16: if (k < value) LEDsetBar(k, color);
  9373  002180  0101               	movlb	1	; () banked
  9374  002182  5144               	movf	LEDsetValue@value& (0+255),w,b
  9375  002184  0101               	movlb	1	; () banked
  9376  002186  5D49               	subwf	LEDsetValue@k& (0+255),w,b
  9377  002188  0101               	movlb	1	; () banked
  9378  00218A  514A               	movf	(LEDsetValue@k+1)& (0+255),w,b
  9379  00218C  0A80               	xorlw	128
  9380  00218E  0101               	movlb	1	; () banked
  9381  002190  6F48               	movwf	??_LEDsetValue& (0+255),b
  9382  002192  0101               	movlb	1	; () banked
  9383  002194  5145               	movf	(LEDsetValue@value+1)& (0+255),w,b
  9384  002196  0A80               	xorlw	128
  9385  002198  0101               	movlb	1	; () banked
  9386  00219A  5948               	subwfb	??_LEDsetValue& (0+255),w,b
  9387  00219C  B0D8               	btfsc	status,0,c
  9388  00219E  D00B               	goto	l6318
  9389                           
  9390                           ; BSR set to: 1
  9391  0021A0  C149  F023         	movff	LEDsetValue@k,LEDsetBar@bar
  9392  0021A4  C14A  F024         	movff	LEDsetValue@k+1,LEDsetBar@bar+1
  9393  0021A8  C146  F025         	movff	LEDsetValue@color,LEDsetBar@color
  9394  0021AC  C147  F026         	movff	LEDsetValue@color+1,LEDsetBar@color+1
  9395  0021B0  ECC4  F003         	call	_LEDsetBar	;wreg free
  9396  0021B4  D00A               	goto	l6320
  9397  0021B6                     l6318:
  9398                           
  9399                           ;LED_BarGraph.c: 17: else LEDsetBar(k, 0);
  9400  0021B6  C149  F023         	movff	LEDsetValue@k,LEDsetBar@bar
  9401  0021BA  C14A  F024         	movff	LEDsetValue@k+1,LEDsetBar@bar+1
  9402  0021BE  0E00               	movlw	0
  9403  0021C0  6E26               	movwf	LEDsetBar@color+1,c
  9404  0021C2  0E00               	movlw	0
  9405  0021C4  6E25               	movwf	LEDsetBar@color,c
  9406  0021C6  ECC4  F003         	call	_LEDsetBar	;wreg free
  9407  0021CA                     l6320:
  9408  0021CA  0101               	movlb	1	; () banked
  9409  0021CC  4B49               	infsnz	LEDsetValue@k& (0+255),f,b
  9410  0021CE  2B4A               	incf	(LEDsetValue@k+1)& (0+255),f,b
  9411  0021D0  D7CC               	goto	l6310
  9412  0021D2                     l444:
  9413                           
  9414                           ; BSR set to: 1
  9415  0021D2  0012               	return		;funcret
  9416  0021D4                     __end_of_LEDsetValue:
  9417                           	opt stack 0
  9418                           tosu	equ	0xFFF
  9419                           tosh	equ	0xFFE
  9420                           tosl	equ	0xFFD
  9421                           pclath	equ	0xFFA
  9422                           tblptru	equ	0xFF8
  9423                           tblptrh	equ	0xFF7
  9424                           tblptrl	equ	0xFF6
  9425                           tablat	equ	0xFF5
  9426                           prodh	equ	0xFF4
  9427                           prodl	equ	0xFF3
  9428                           intcon	equ	0xFF2
  9429                           intcon2	equ	0xFF1
  9430                           postinc0	equ	0xFEE
  9431                           wreg	equ	0xFE8
  9432                           indf2	equ	0xFDF
  9433                           postinc2	equ	0xFDE
  9434                           postdec2	equ	0xFDD
  9435                           plusw2	equ	0xFDB
  9436                           fsr2h	equ	0xFDA
  9437                           fsr2l	equ	0xFD9
  9438                           status	equ	0xFD8
  9439                           
  9440 ;; *************** function _LEDsetBar *****************
  9441 ;; Defined at:
  9442 ;;		line 193 in file "LED_BarGraph.c"
  9443 ;; Parameters:    Size  Location     Type
  9444 ;;  bar             2   34[COMRAM] int 
  9445 ;;  color           2   36[COMRAM] int 
  9446 ;; Auto vars:     Size  Location     Type
  9447 ;;  a               2   40[COMRAM] unsigned int 
  9448 ;;  c               2   38[COMRAM] unsigned int 
  9449 ;; Return value:  Size  Location     Type
  9450 ;;                  1    wreg      void 
  9451 ;; Registers used:
  9452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9453 ;; Tracked objects:
  9454 ;;		On entry : 0/0
  9455 ;;		On exit  : 0/0
  9456 ;;		Unchanged: 0/0
  9457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9458 ;;      Params:         4       0       0       0       0       0       0
  9459 ;;      Locals:         4       0       0       0       0       0       0
  9460 ;;      Temps:          0      16       0       0       0       0       0
  9461 ;;      Totals:         8      16       0       0       0       0       0
  9462 ;;Total ram usage:       24 bytes
  9463 ;; Hardware stack levels used:    1
  9464 ;; Hardware stack levels required when called:    5
  9465 ;; This function calls:
  9466 ;;		___awdiv
  9467 ;; This function is called by:
  9468 ;;		_LEDsetValue
  9469 ;; This function uses a non-reentrant model
  9470 ;;
  9471                           
  9472                           	psect	text52
  9473  000788                     __ptext52:
  9474                           	opt stack 0
  9475  000788                     _LEDsetBar:
  9476                           	opt stack 24
  9477                           
  9478                           ;LED_BarGraph.c: 194: uint16_t a, c;
  9479                           ;LED_BarGraph.c: 196: if (bar < 12)
  9480                           
  9481                           ; BSR set to: 1
  9482                           ;incstack = 0
  9483  000788  BE24               	btfsc	LEDsetBar@bar+1,7,c
  9484  00078A  D006               	goto	l5798
  9485  00078C  5024               	movf	LEDsetBar@bar+1,w,c
  9486  00078E  E10F               	bnz	l5800
  9487  000790  0E0C               	movlw	12
  9488  000792  5C23               	subwf	LEDsetBar@bar,w,c
  9489  000794  B0D8               	btfsc	status,0,c
  9490  000796  D00B               	goto	l5800
  9491  000798                     l5798:
  9492                           
  9493                           ;LED_BarGraph.c: 197: c = bar / 4;
  9494  000798  C023  F01B         	movff	LEDsetBar@bar,___awdiv@dividend
  9495  00079C  C024  F01C         	movff	LEDsetBar@bar+1,___awdiv@dividend+1
  9496  0007A0  0E00               	movlw	0
  9497  0007A2  6E1E               	movwf	___awdiv@divisor+1,c
  9498  0007A4  0E04               	movlw	4
  9499  0007A6  6E1D               	movwf	___awdiv@divisor,c
  9500  0007A8  ECA4  F012         	call	___awdiv	;wreg free
  9501  0007AC  D00C               	goto	L3
  9502  0007AE                     l5800:
  9503                           
  9504                           ;LED_BarGraph.c: 198: else
  9505                           ;LED_BarGraph.c: 199: c = (bar - 12) / 4;
  9506  0007AE  0EF4               	movlw	244
  9507  0007B0  2423               	addwf	LEDsetBar@bar,w,c
  9508  0007B2  6E1B               	movwf	___awdiv@dividend,c
  9509  0007B4  0EFF               	movlw	255
  9510  0007B6  2024               	addwfc	LEDsetBar@bar+1,w,c
  9511  0007B8  6E1C               	movwf	___awdiv@dividend+1,c
  9512  0007BA  0E00               	movlw	0
  9513  0007BC  6E1E               	movwf	___awdiv@divisor+1,c
  9514  0007BE  0E04               	movlw	4
  9515  0007C0  6E1D               	movwf	___awdiv@divisor,c
  9516  0007C2  ECA4  F012         	call	___awdiv	;wreg free
  9517  0007C6                     L3:
  9518  0007C6  C01B  F027         	movff	?___awdiv,LEDsetBar@c
  9519  0007CA  C01C  F028         	movff	?___awdiv+1,LEDsetBar@c+1
  9520                           
  9521                           ;LED_BarGraph.c: 201: a = bar % 4;
  9522  0007CE  0E03               	movlw	3
  9523  0007D0  1423               	andwf	LEDsetBar@bar,w,c
  9524  0007D2  6E29               	movwf	LEDsetBar@a,c
  9525  0007D4  6A2A               	clrf	LEDsetBar@a+1,c
  9526                           
  9527                           ;LED_BarGraph.c: 202: if (bar >= 12)
  9528  0007D6  BE24               	btfsc	LEDsetBar@bar+1,7,c
  9529  0007D8  D00A               	goto	l518
  9530  0007DA  5024               	movf	LEDsetBar@bar+1,w,c
  9531  0007DC  E104               	bnz	u5880
  9532  0007DE  0E0C               	movlw	12
  9533  0007E0  5C23               	subwf	LEDsetBar@bar,w,c
  9534  0007E2  A0D8               	btfss	status,0,c
  9535  0007E4  D004               	goto	l518
  9536  0007E6                     u5880:
  9537                           
  9538                           ;LED_BarGraph.c: 203: a += 4;
  9539  0007E6  0E04               	movlw	4
  9540  0007E8  2629               	addwf	LEDsetBar@a,f,c
  9541  0007EA  0E00               	movlw	0
  9542  0007EC  222A               	addwfc	LEDsetBar@a+1,f,c
  9543  0007EE                     l518:
  9544                           
  9545                           ;LED_BarGraph.c: 206: if (color == 1) {
  9546  0007EE  0425               	decf	LEDsetBar@color,w,c
  9547  0007F0  1026               	iorwf	LEDsetBar@color+1,w,c
  9548  0007F2  A4D8               	btfss	status,2,c
  9549  0007F4  D07D               	goto	l5810
  9550                           
  9551                           ;LED_BarGraph.c: 208: displaybuffer[c] |= (1<<(a));
  9552  0007F6  C029  F0EE         	movff	LEDsetBar@a,??_LEDsetBar
  9553  0007FA  0E01               	movlw	1
  9554  0007FC  0100               	movlb	0	; () banked
  9555  0007FE  6FEF               	movwf	(??_LEDsetBar+1)& (0+255),b
  9556  000800  0E00               	movlw	0
  9557  000802  0100               	movlb	0	; () banked
  9558  000804  6FF0               	movwf	(??_LEDsetBar+2)& (0+255),b
  9559  000806  0100               	movlb	0	; () banked
  9560  000808  2BEE               	incf	??_LEDsetBar& (0+255),f,b
  9561  00080A  D004               	goto	u5904
  9562  00080C                     u5905:
  9563  00080C  90D8               	bcf	status,0,c
  9564  00080E  0100               	movlb	0	; () banked
  9565  000810  37EF               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  9566  000812  37F0               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  9567  000814                     u5904:
  9568  000814  0100               	movlb	0	; () banked
  9569  000816  2FEE               	decfsz	??_LEDsetBar& (0+255),f,b
  9570  000818  D7F9               	goto	u5905
  9571  00081A  C0EF  F0F1         	movff	??_LEDsetBar+1,??_LEDsetBar+3
  9572  00081E  C0F0  F0F2         	movff	??_LEDsetBar+2,??_LEDsetBar+4
  9573  000822  0E00               	movlw	0
  9574  000824  0100               	movlb	0	; () banked
  9575  000826  BFF2               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
  9576  000828  0EFF               	movlw	255
  9577  00082A  6FF3               	movwf	(??_LEDsetBar+5)& (0+255),b
  9578  00082C  6FF4               	movwf	(??_LEDsetBar+6)& (0+255),b
  9579  00082E  0E60               	movlw	low _displaybuffer
  9580  000830  0100               	movlb	0	; () banked
  9581  000832  6FF5               	movwf	(??_LEDsetBar+7)& (0+255),b
  9582  000834  0E00               	movlw	high _displaybuffer
  9583  000836  0100               	movlb	0	; () banked
  9584  000838  6FF6               	movwf	(??_LEDsetBar+8)& (0+255),b
  9585  00083A  90D8               	bcf	status,0,c
  9586  00083C  3427               	rlcf	LEDsetBar@c,w,c
  9587  00083E  6ED9               	movwf	fsr2l,c
  9588  000840  3428               	rlcf	LEDsetBar@c+1,w,c
  9589  000842  6EDA               	movwf	fsr2h,c
  9590  000844  90D8               	bcf	status,0,c
  9591  000846  36D9               	rlcf	fsr2l,f,c
  9592  000848  36DA               	rlcf	fsr2h,f,c
  9593  00084A  0100               	movlb	0	; () banked
  9594  00084C  51F5               	movf	(??_LEDsetBar+7)& (0+255),w,b
  9595  00084E  26D9               	addwf	fsr2l,f,c
  9596  000850  0100               	movlb	0	; () banked
  9597  000852  51F6               	movf	(??_LEDsetBar+8)& (0+255),w,b
  9598  000854  22DA               	addwfc	fsr2h,f,c
  9599  000856  0100               	movlb	0	; () banked
  9600  000858  51F1               	movf	(??_LEDsetBar+3)& (0+255),w,b
  9601  00085A  12DE               	iorwf	postinc2,f,c
  9602  00085C  51F2               	movf	(??_LEDsetBar+4)& (0+255),w,b
  9603  00085E  12DE               	iorwf	postinc2,f,c
  9604  000860  51F3               	movf	(??_LEDsetBar+5)& (0+255),w,b
  9605  000862  12DE               	iorwf	postinc2,f,c
  9606  000864  51F4               	movf	(??_LEDsetBar+6)& (0+255),w,b
  9607  000866  12DE               	iorwf	postinc2,f,c
  9608                           
  9609                           ;LED_BarGraph.c: 210: displaybuffer[c] &= ~(1<<(a + 8));
  9610  000868  C029  F0EE         	movff	LEDsetBar@a,??_LEDsetBar
  9611  00086C  0E08               	movlw	8
  9612  00086E  0100               	movlb	0	; () banked
  9613  000870  27EE               	addwf	??_LEDsetBar& (0+255),f,b
  9614  000872  0E01               	movlw	1
  9615  000874  0100               	movlb	0	; () banked
  9616  000876  6FEF               	movwf	(??_LEDsetBar+1)& (0+255),b
  9617  000878  0E00               	movlw	0
  9618  00087A  0100               	movlb	0	; () banked
  9619  00087C  6FF0               	movwf	(??_LEDsetBar+2)& (0+255),b
  9620  00087E  0100               	movlb	0	; () banked
  9621  000880  2BEE               	incf	??_LEDsetBar& (0+255),f,b
  9622  000882  D004               	goto	u5914
  9623  000884                     u5915:
  9624  000884  90D8               	bcf	status,0,c
  9625  000886  0100               	movlb	0	; () banked
  9626  000888  37EF               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  9627  00088A  37F0               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  9628  00088C                     u5914:
  9629  00088C  0100               	movlb	0	; () banked
  9630  00088E  2FEE               	decfsz	??_LEDsetBar& (0+255),f,b
  9631  000890  D7F9               	goto	u5915
  9632  000892  0100               	movlb	0	; () banked
  9633  000894  1DEF               	comf	(??_LEDsetBar+1)& (0+255),w,b
  9634  000896  0100               	movlb	0	; () banked
  9635  000898  6FF1               	movwf	(??_LEDsetBar+3)& (0+255),b
  9636  00089A  0100               	movlb	0	; () banked
  9637  00089C  1DF0               	comf	(??_LEDsetBar+2)& (0+255),w,b
  9638  00089E  0100               	movlb	0	; () banked
  9639  0008A0  6FF2               	movwf	(??_LEDsetBar+4)& (0+255),b
  9640  0008A2  0100               	movlb	0	; () banked
  9641  0008A4  6BF3               	clrf	(??_LEDsetBar+5)& (0+255),b
  9642  0008A6  0100               	movlb	0	; () banked
  9643  0008A8  BFF2               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
  9644  0008AA  07F3               	decf	(??_LEDsetBar+5)& (0+255),f,b
  9645  0008AC  0100               	movlb	0	; () banked
  9646  0008AE  51F3               	movf	(??_LEDsetBar+5)& (0+255),w,b
  9647  0008B0  0100               	movlb	0	; () banked
  9648  0008B2  6FF4               	movwf	(??_LEDsetBar+6)& (0+255),b
  9649  0008B4  0E60               	movlw	low _displaybuffer
  9650  0008B6  0100               	movlb	0	; () banked
  9651  0008B8  6FF5               	movwf	(??_LEDsetBar+7)& (0+255),b
  9652  0008BA  0E00               	movlw	high _displaybuffer
  9653  0008BC  0100               	movlb	0	; () banked
  9654  0008BE  6FF6               	movwf	(??_LEDsetBar+8)& (0+255),b
  9655  0008C0  90D8               	bcf	status,0,c
  9656  0008C2  3427               	rlcf	LEDsetBar@c,w,c
  9657  0008C4  6ED9               	movwf	fsr2l,c
  9658  0008C6  3428               	rlcf	LEDsetBar@c+1,w,c
  9659  0008C8  6EDA               	movwf	fsr2h,c
  9660  0008CA  90D8               	bcf	status,0,c
  9661  0008CC  36D9               	rlcf	fsr2l,f,c
  9662  0008CE  36DA               	rlcf	fsr2h,f,c
  9663  0008D0  0100               	movlb	0	; () banked
  9664  0008D2  51F5               	movf	(??_LEDsetBar+7)& (0+255),w,b
  9665  0008D4  26D9               	addwf	fsr2l,f,c
  9666  0008D6  0100               	movlb	0	; () banked
  9667  0008D8  51F6               	movf	(??_LEDsetBar+8)& (0+255),w,b
  9668  0008DA  22DA               	addwfc	fsr2h,f,c
  9669  0008DC  0100               	movlb	0	; () banked
  9670  0008DE  51F1               	movf	(??_LEDsetBar+3)& (0+255),w,b
  9671  0008E0  16DE               	andwf	postinc2,f,c
  9672  0008E2  51F2               	movf	(??_LEDsetBar+4)& (0+255),w,b
  9673  0008E4  16DE               	andwf	postinc2,f,c
  9674  0008E6  51F3               	movf	(??_LEDsetBar+5)& (0+255),w,b
  9675  0008E8  16DE               	andwf	postinc2,f,c
  9676  0008EA  51F4               	movf	(??_LEDsetBar+6)& (0+255),w,b
  9677  0008EC  16DE               	andwf	postinc2,f,c
  9678                           
  9679                           ;LED_BarGraph.c: 211: } else if (color == 2) {
  9680  0008EE  0012               	return	
  9681  0008F0                     l5810:
  9682  0008F0  0E02               	movlw	2
  9683  0008F2  1825               	xorwf	LEDsetBar@color,w,c
  9684  0008F4  1026               	iorwf	LEDsetBar@color+1,w,c
  9685  0008F6  A4D8               	btfss	status,2,c
  9686  0008F8  D05A               	goto	l5814
  9687                           
  9688                           ;LED_BarGraph.c: 213: displaybuffer[c] |= (1<<(a)) | (1<<(a + 8));
  9689  0008FA  C029  F0EE         	movff	LEDsetBar@a,??_LEDsetBar
  9690  0008FE  0E08               	movlw	8
  9691  000900  0100               	movlb	0	; () banked
  9692  000902  27EE               	addwf	??_LEDsetBar& (0+255),f,b
  9693  000904  0E01               	movlw	1
  9694  000906  0100               	movlb	0	; () banked
  9695  000908  6FEF               	movwf	(??_LEDsetBar+1)& (0+255),b
  9696  00090A  0E00               	movlw	0
  9697  00090C  0100               	movlb	0	; () banked
  9698  00090E  6FF0               	movwf	(??_LEDsetBar+2)& (0+255),b
  9699  000910  0100               	movlb	0	; () banked
  9700  000912  2BEE               	incf	??_LEDsetBar& (0+255),f,b
  9701  000914  D004               	goto	u5934
  9702  000916                     u5935:
  9703  000916  90D8               	bcf	status,0,c
  9704  000918  0100               	movlb	0	; () banked
  9705  00091A  37EF               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  9706  00091C  37F0               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  9707  00091E                     u5934:
  9708  00091E  0100               	movlb	0	; () banked
  9709  000920  2FEE               	decfsz	??_LEDsetBar& (0+255),f,b
  9710  000922  D7F9               	goto	u5935
  9711  000924  C029  F0F1         	movff	LEDsetBar@a,??_LEDsetBar+3
  9712  000928  0E01               	movlw	1
  9713  00092A  0100               	movlb	0	; () banked
  9714  00092C  6FF2               	movwf	(??_LEDsetBar+4)& (0+255),b
  9715  00092E  0E00               	movlw	0
  9716  000930  0100               	movlb	0	; () banked
  9717  000932  6FF3               	movwf	(??_LEDsetBar+5)& (0+255),b
  9718  000934  0100               	movlb	0	; () banked
  9719  000936  2BF1               	incf	(??_LEDsetBar+3)& (0+255),f,b
  9720  000938  D004               	goto	u5944
  9721  00093A                     u5945:
  9722  00093A  90D8               	bcf	status,0,c
  9723  00093C  0100               	movlb	0	; () banked
  9724  00093E  37F2               	rlcf	(??_LEDsetBar+4)& (0+255),f,b
  9725  000940  37F3               	rlcf	(??_LEDsetBar+5)& (0+255),f,b
  9726  000942                     u5944:
  9727  000942  0100               	movlb	0	; () banked
  9728  000944  2FF1               	decfsz	(??_LEDsetBar+3)& (0+255),f,b
  9729  000946  D7F9               	goto	u5945
  9730  000948  0100               	movlb	0	; () banked
  9731  00094A  51EF               	movf	(??_LEDsetBar+1)& (0+255),w,b
  9732  00094C  0100               	movlb	0	; () banked
  9733  00094E  11F2               	iorwf	(??_LEDsetBar+4)& (0+255),w,b
  9734  000950  0100               	movlb	0	; () banked
  9735  000952  6FF4               	movwf	(??_LEDsetBar+6)& (0+255),b
  9736  000954  0100               	movlb	0	; () banked
  9737  000956  51F0               	movf	(??_LEDsetBar+2)& (0+255),w,b
  9738  000958  0100               	movlb	0	; () banked
  9739  00095A  11F3               	iorwf	(??_LEDsetBar+5)& (0+255),w,b
  9740  00095C  0100               	movlb	0	; () banked
  9741  00095E  6FF5               	movwf	(??_LEDsetBar+7)& (0+255),b
  9742  000960  0100               	movlb	0	; () banked
  9743  000962  6BF6               	clrf	(??_LEDsetBar+8)& (0+255),b
  9744  000964  0100               	movlb	0	; () banked
  9745  000966  BFF5               	btfsc	(??_LEDsetBar+7)& (0+255),7,b
  9746  000968  07F6               	decf	(??_LEDsetBar+8)& (0+255),f,b
  9747  00096A  0100               	movlb	0	; () banked
  9748  00096C  51F6               	movf	(??_LEDsetBar+8)& (0+255),w,b
  9749  00096E  0100               	movlb	0	; () banked
  9750  000970  6FF7               	movwf	(??_LEDsetBar+9)& (0+255),b
  9751  000972  0E60               	movlw	low _displaybuffer
  9752  000974  0100               	movlb	0	; () banked
  9753  000976  6FF8               	movwf	(??_LEDsetBar+10)& (0+255),b
  9754  000978  0E00               	movlw	high _displaybuffer
  9755  00097A  0100               	movlb	0	; () banked
  9756  00097C  6FF9               	movwf	(??_LEDsetBar+11)& (0+255),b
  9757  00097E  90D8               	bcf	status,0,c
  9758  000980  3427               	rlcf	LEDsetBar@c,w,c
  9759  000982  6ED9               	movwf	fsr2l,c
  9760  000984  3428               	rlcf	LEDsetBar@c+1,w,c
  9761  000986  6EDA               	movwf	fsr2h,c
  9762  000988  90D8               	bcf	status,0,c
  9763  00098A  36D9               	rlcf	fsr2l,f,c
  9764  00098C  36DA               	rlcf	fsr2h,f,c
  9765  00098E  0100               	movlb	0	; () banked
  9766  000990  51F8               	movf	(??_LEDsetBar+10)& (0+255),w,b
  9767  000992  26D9               	addwf	fsr2l,f,c
  9768  000994  0100               	movlb	0	; () banked
  9769  000996  51F9               	movf	(??_LEDsetBar+11)& (0+255),w,b
  9770  000998  22DA               	addwfc	fsr2h,f,c
  9771  00099A  0100               	movlb	0	; () banked
  9772  00099C  51F4               	movf	(??_LEDsetBar+6)& (0+255),w,b
  9773  00099E  12DE               	iorwf	postinc2,f,c
  9774  0009A0  51F5               	movf	(??_LEDsetBar+7)& (0+255),w,b
  9775  0009A2  12DE               	iorwf	postinc2,f,c
  9776  0009A4  51F6               	movf	(??_LEDsetBar+8)& (0+255),w,b
  9777  0009A6  12DE               	iorwf	postinc2,f,c
  9778  0009A8  51F7               	movf	(??_LEDsetBar+9)& (0+255),w,b
  9779  0009AA  12DE               	iorwf	postinc2,f,c
  9780                           
  9781                           ;LED_BarGraph.c: 214: } else if (color == 0) {
  9782  0009AC  0012               	return	
  9783  0009AE                     l5814:
  9784  0009AE  5025               	movf	LEDsetBar@color,w,c
  9785  0009B0  1026               	iorwf	LEDsetBar@color+1,w,c
  9786  0009B2  A4D8               	btfss	status,2,c
  9787  0009B4  D06A               	goto	l5818
  9788                           
  9789                           ;LED_BarGraph.c: 216: displaybuffer[c] &= ~(1<<(a)) & ~(1<<(a + 8));
  9790  0009B6  C029  F0EE         	movff	LEDsetBar@a,??_LEDsetBar
  9791  0009BA  0E08               	movlw	8
  9792  0009BC  0100               	movlb	0	; () banked
  9793  0009BE  27EE               	addwf	??_LEDsetBar& (0+255),f,b
  9794  0009C0  0E01               	movlw	1
  9795  0009C2  0100               	movlb	0	; () banked
  9796  0009C4  6FEF               	movwf	(??_LEDsetBar+1)& (0+255),b
  9797  0009C6  0E00               	movlw	0
  9798  0009C8  0100               	movlb	0	; () banked
  9799  0009CA  6FF0               	movwf	(??_LEDsetBar+2)& (0+255),b
  9800  0009CC  0100               	movlb	0	; () banked
  9801  0009CE  2BEE               	incf	??_LEDsetBar& (0+255),f,b
  9802  0009D0  D004               	goto	u5964
  9803  0009D2                     u5965:
  9804  0009D2  90D8               	bcf	status,0,c
  9805  0009D4  0100               	movlb	0	; () banked
  9806  0009D6  37EF               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  9807  0009D8  37F0               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  9808  0009DA                     u5964:
  9809  0009DA  0100               	movlb	0	; () banked
  9810  0009DC  2FEE               	decfsz	??_LEDsetBar& (0+255),f,b
  9811  0009DE  D7F9               	goto	u5965
  9812  0009E0  0100               	movlb	0	; () banked
  9813  0009E2  1DEF               	comf	(??_LEDsetBar+1)& (0+255),w,b
  9814  0009E4  0100               	movlb	0	; () banked
  9815  0009E6  6FF1               	movwf	(??_LEDsetBar+3)& (0+255),b
  9816  0009E8  0100               	movlb	0	; () banked
  9817  0009EA  1DF0               	comf	(??_LEDsetBar+2)& (0+255),w,b
  9818  0009EC  0100               	movlb	0	; () banked
  9819  0009EE  6FF2               	movwf	(??_LEDsetBar+4)& (0+255),b
  9820  0009F0  C029  F0F3         	movff	LEDsetBar@a,??_LEDsetBar+5
  9821  0009F4  0E01               	movlw	1
  9822  0009F6  0100               	movlb	0	; () banked
  9823  0009F8  6FF4               	movwf	(??_LEDsetBar+6)& (0+255),b
  9824  0009FA  0E00               	movlw	0
  9825  0009FC  0100               	movlb	0	; () banked
  9826  0009FE  6FF5               	movwf	(??_LEDsetBar+7)& (0+255),b
  9827  000A00  0100               	movlb	0	; () banked
  9828  000A02  2BF3               	incf	(??_LEDsetBar+5)& (0+255),f,b
  9829  000A04  D004               	goto	u5974
  9830  000A06                     u5975:
  9831  000A06  90D8               	bcf	status,0,c
  9832  000A08  0100               	movlb	0	; () banked
  9833  000A0A  37F4               	rlcf	(??_LEDsetBar+6)& (0+255),f,b
  9834  000A0C  37F5               	rlcf	(??_LEDsetBar+7)& (0+255),f,b
  9835  000A0E                     u5974:
  9836  000A0E  0100               	movlb	0	; () banked
  9837  000A10  2FF3               	decfsz	(??_LEDsetBar+5)& (0+255),f,b
  9838  000A12  D7F9               	goto	u5975
  9839  000A14  0100               	movlb	0	; () banked
  9840  000A16  1DF4               	comf	(??_LEDsetBar+6)& (0+255),w,b
  9841  000A18  0100               	movlb	0	; () banked
  9842  000A1A  6FF6               	movwf	(??_LEDsetBar+8)& (0+255),b
  9843  000A1C  0100               	movlb	0	; () banked
  9844  000A1E  1DF5               	comf	(??_LEDsetBar+7)& (0+255),w,b
  9845  000A20  0100               	movlb	0	; () banked
  9846  000A22  6FF7               	movwf	(??_LEDsetBar+9)& (0+255),b
  9847  000A24  0100               	movlb	0	; () banked
  9848  000A26  51F1               	movf	(??_LEDsetBar+3)& (0+255),w,b
  9849  000A28  0100               	movlb	0	; () banked
  9850  000A2A  15F6               	andwf	(??_LEDsetBar+8)& (0+255),w,b
  9851  000A2C  0100               	movlb	0	; () banked
  9852  000A2E  6FF8               	movwf	(??_LEDsetBar+10)& (0+255),b
  9853  000A30  0100               	movlb	0	; () banked
  9854  000A32  51F2               	movf	(??_LEDsetBar+4)& (0+255),w,b
  9855  000A34  0100               	movlb	0	; () banked
  9856  000A36  15F7               	andwf	(??_LEDsetBar+9)& (0+255),w,b
  9857  000A38  0100               	movlb	0	; () banked
  9858  000A3A  6FF9               	movwf	(??_LEDsetBar+11)& (0+255),b
  9859  000A3C  0100               	movlb	0	; () banked
  9860  000A3E  6BFA               	clrf	(??_LEDsetBar+12)& (0+255),b
  9861  000A40  0100               	movlb	0	; () banked
  9862  000A42  BFF9               	btfsc	(??_LEDsetBar+11)& (0+255),7,b
  9863  000A44  07FA               	decf	(??_LEDsetBar+12)& (0+255),f,b
  9864  000A46  0100               	movlb	0	; () banked
  9865  000A48  51FA               	movf	(??_LEDsetBar+12)& (0+255),w,b
  9866  000A4A  0100               	movlb	0	; () banked
  9867  000A4C  6FFB               	movwf	(??_LEDsetBar+13)& (0+255),b
  9868  000A4E  0E60               	movlw	low _displaybuffer
  9869  000A50  0100               	movlb	0	; () banked
  9870  000A52  6FFC               	movwf	(??_LEDsetBar+14)& (0+255),b
  9871  000A54  0E00               	movlw	high _displaybuffer
  9872  000A56  0100               	movlb	0	; () banked
  9873  000A58  6FFD               	movwf	(??_LEDsetBar+15)& (0+255),b
  9874  000A5A  90D8               	bcf	status,0,c
  9875  000A5C  3427               	rlcf	LEDsetBar@c,w,c
  9876  000A5E  6ED9               	movwf	fsr2l,c
  9877  000A60  3428               	rlcf	LEDsetBar@c+1,w,c
  9878  000A62  6EDA               	movwf	fsr2h,c
  9879  000A64  90D8               	bcf	status,0,c
  9880  000A66  36D9               	rlcf	fsr2l,f,c
  9881  000A68  36DA               	rlcf	fsr2h,f,c
  9882  000A6A  0100               	movlb	0	; () banked
  9883  000A6C  51FC               	movf	(??_LEDsetBar+14)& (0+255),w,b
  9884  000A6E  26D9               	addwf	fsr2l,f,c
  9885  000A70  0100               	movlb	0	; () banked
  9886  000A72  51FD               	movf	(??_LEDsetBar+15)& (0+255),w,b
  9887  000A74  22DA               	addwfc	fsr2h,f,c
  9888  000A76  0100               	movlb	0	; () banked
  9889  000A78  51F8               	movf	(??_LEDsetBar+10)& (0+255),w,b
  9890  000A7A  16DE               	andwf	postinc2,f,c
  9891  000A7C  51F9               	movf	(??_LEDsetBar+11)& (0+255),w,b
  9892  000A7E  16DE               	andwf	postinc2,f,c
  9893  000A80  51FA               	movf	(??_LEDsetBar+12)& (0+255),w,b
  9894  000A82  16DE               	andwf	postinc2,f,c
  9895  000A84  51FB               	movf	(??_LEDsetBar+13)& (0+255),w,b
  9896  000A86  16DE               	andwf	postinc2,f,c
  9897                           
  9898                           ;LED_BarGraph.c: 217: } else if (color == 3) {
  9899  000A88  0012               	return	
  9900  000A8A                     l5818:
  9901  000A8A  0E03               	movlw	3
  9902  000A8C  1825               	xorwf	LEDsetBar@color,w,c
  9903  000A8E  1026               	iorwf	LEDsetBar@color+1,w,c
  9904  000A90  A4D8               	btfss	status,2,c
  9905  000A92  0012               	return	
  9906                           
  9907                           ;LED_BarGraph.c: 219: displaybuffer[c] |= (1<<(a + 8));
  9908  000A94  C029  F0EE         	movff	LEDsetBar@a,??_LEDsetBar
  9909  000A98  0E08               	movlw	8
  9910  000A9A  0100               	movlb	0	; () banked
  9911  000A9C  27EE               	addwf	??_LEDsetBar& (0+255),f,b
  9912  000A9E  0E01               	movlw	1
  9913  000AA0  0100               	movlb	0	; () banked
  9914  000AA2  6FEF               	movwf	(??_LEDsetBar+1)& (0+255),b
  9915  000AA4  0E00               	movlw	0
  9916  000AA6  0100               	movlb	0	; () banked
  9917  000AA8  6FF0               	movwf	(??_LEDsetBar+2)& (0+255),b
  9918  000AAA  0100               	movlb	0	; () banked
  9919  000AAC  2BEE               	incf	??_LEDsetBar& (0+255),f,b
  9920  000AAE  D004               	goto	u5994
  9921  000AB0                     u5995:
  9922  000AB0  90D8               	bcf	status,0,c
  9923  000AB2  0100               	movlb	0	; () banked
  9924  000AB4  37EF               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  9925  000AB6  37F0               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  9926  000AB8                     u5994:
  9927  000AB8  0100               	movlb	0	; () banked
  9928  000ABA  2FEE               	decfsz	??_LEDsetBar& (0+255),f,b
  9929  000ABC  D7F9               	goto	u5995
  9930  000ABE  C0EF  F0F1         	movff	??_LEDsetBar+1,??_LEDsetBar+3
  9931  000AC2  C0F0  F0F2         	movff	??_LEDsetBar+2,??_LEDsetBar+4
  9932  000AC6  0E00               	movlw	0
  9933  000AC8  0100               	movlb	0	; () banked
  9934  000ACA  BFF2               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
  9935  000ACC  0EFF               	movlw	255
  9936  000ACE  6FF3               	movwf	(??_LEDsetBar+5)& (0+255),b
  9937  000AD0  6FF4               	movwf	(??_LEDsetBar+6)& (0+255),b
  9938  000AD2  0E60               	movlw	low _displaybuffer
  9939  000AD4  0100               	movlb	0	; () banked
  9940  000AD6  6FF5               	movwf	(??_LEDsetBar+7)& (0+255),b
  9941  000AD8  0E00               	movlw	high _displaybuffer
  9942  000ADA  0100               	movlb	0	; () banked
  9943  000ADC  6FF6               	movwf	(??_LEDsetBar+8)& (0+255),b
  9944  000ADE  90D8               	bcf	status,0,c
  9945  000AE0  3427               	rlcf	LEDsetBar@c,w,c
  9946  000AE2  6ED9               	movwf	fsr2l,c
  9947  000AE4  3428               	rlcf	LEDsetBar@c+1,w,c
  9948  000AE6  6EDA               	movwf	fsr2h,c
  9949  000AE8  90D8               	bcf	status,0,c
  9950  000AEA  36D9               	rlcf	fsr2l,f,c
  9951  000AEC  36DA               	rlcf	fsr2h,f,c
  9952  000AEE  0100               	movlb	0	; () banked
  9953  000AF0  51F5               	movf	(??_LEDsetBar+7)& (0+255),w,b
  9954  000AF2  26D9               	addwf	fsr2l,f,c
  9955  000AF4  0100               	movlb	0	; () banked
  9956  000AF6  51F6               	movf	(??_LEDsetBar+8)& (0+255),w,b
  9957  000AF8  22DA               	addwfc	fsr2h,f,c
  9958  000AFA  0100               	movlb	0	; () banked
  9959  000AFC  51F1               	movf	(??_LEDsetBar+3)& (0+255),w,b
  9960  000AFE  12DE               	iorwf	postinc2,f,c
  9961  000B00  51F2               	movf	(??_LEDsetBar+4)& (0+255),w,b
  9962  000B02  12DE               	iorwf	postinc2,f,c
  9963  000B04  51F3               	movf	(??_LEDsetBar+5)& (0+255),w,b
  9964  000B06  12DE               	iorwf	postinc2,f,c
  9965  000B08  51F4               	movf	(??_LEDsetBar+6)& (0+255),w,b
  9966  000B0A  12DE               	iorwf	postinc2,f,c
  9967                           
  9968                           ;LED_BarGraph.c: 221: displaybuffer[c] &= ~(1<<(a));
  9969  000B0C  C029  F0EE         	movff	LEDsetBar@a,??_LEDsetBar
  9970  000B10  0E01               	movlw	1
  9971  000B12  0100               	movlb	0	; () banked
  9972  000B14  6FEF               	movwf	(??_LEDsetBar+1)& (0+255),b
  9973  000B16  0E00               	movlw	0
  9974  000B18  0100               	movlb	0	; () banked
  9975  000B1A  6FF0               	movwf	(??_LEDsetBar+2)& (0+255),b
  9976  000B1C  0100               	movlb	0	; () banked
  9977  000B1E  2BEE               	incf	??_LEDsetBar& (0+255),f,b
  9978  000B20  D004               	goto	u6004
  9979  000B22                     u6005:
  9980  000B22  90D8               	bcf	status,0,c
  9981  000B24  0100               	movlb	0	; () banked
  9982  000B26  37EF               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  9983  000B28  37F0               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  9984  000B2A                     u6004:
  9985  000B2A  0100               	movlb	0	; () banked
  9986  000B2C  2FEE               	decfsz	??_LEDsetBar& (0+255),f,b
  9987  000B2E  D7F9               	goto	u6005
  9988  000B30  0100               	movlb	0	; () banked
  9989  000B32  1DEF               	comf	(??_LEDsetBar+1)& (0+255),w,b
  9990  000B34  0100               	movlb	0	; () banked
  9991  000B36  6FF1               	movwf	(??_LEDsetBar+3)& (0+255),b
  9992  000B38  0100               	movlb	0	; () banked
  9993  000B3A  1DF0               	comf	(??_LEDsetBar+2)& (0+255),w,b
  9994  000B3C  0100               	movlb	0	; () banked
  9995  000B3E  6FF2               	movwf	(??_LEDsetBar+4)& (0+255),b
  9996  000B40  0100               	movlb	0	; () banked
  9997  000B42  6BF3               	clrf	(??_LEDsetBar+5)& (0+255),b
  9998  000B44  0100               	movlb	0	; () banked
  9999  000B46  BFF2               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 10000  000B48  07F3               	decf	(??_LEDsetBar+5)& (0+255),f,b
 10001  000B4A  0100               	movlb	0	; () banked
 10002  000B4C  51F3               	movf	(??_LEDsetBar+5)& (0+255),w,b
 10003  000B4E  0100               	movlb	0	; () banked
 10004  000B50  6FF4               	movwf	(??_LEDsetBar+6)& (0+255),b
 10005  000B52  0E60               	movlw	low _displaybuffer
 10006  000B54  0100               	movlb	0	; () banked
 10007  000B56  6FF5               	movwf	(??_LEDsetBar+7)& (0+255),b
 10008  000B58  0E00               	movlw	high _displaybuffer
 10009  000B5A  0100               	movlb	0	; () banked
 10010  000B5C  6FF6               	movwf	(??_LEDsetBar+8)& (0+255),b
 10011  000B5E  90D8               	bcf	status,0,c
 10012  000B60  3427               	rlcf	LEDsetBar@c,w,c
 10013  000B62  6ED9               	movwf	fsr2l,c
 10014  000B64  3428               	rlcf	LEDsetBar@c+1,w,c
 10015  000B66  6EDA               	movwf	fsr2h,c
 10016  000B68  90D8               	bcf	status,0,c
 10017  000B6A  36D9               	rlcf	fsr2l,f,c
 10018  000B6C  36DA               	rlcf	fsr2h,f,c
 10019  000B6E  0100               	movlb	0	; () banked
 10020  000B70  51F5               	movf	(??_LEDsetBar+7)& (0+255),w,b
 10021  000B72  26D9               	addwf	fsr2l,f,c
 10022  000B74  0100               	movlb	0	; () banked
 10023  000B76  51F6               	movf	(??_LEDsetBar+8)& (0+255),w,b
 10024  000B78  22DA               	addwfc	fsr2h,f,c
 10025  000B7A  0100               	movlb	0	; () banked
 10026  000B7C  51F1               	movf	(??_LEDsetBar+3)& (0+255),w,b
 10027  000B7E  16DE               	andwf	postinc2,f,c
 10028  000B80  51F2               	movf	(??_LEDsetBar+4)& (0+255),w,b
 10029  000B82  16DE               	andwf	postinc2,f,c
 10030  000B84  51F3               	movf	(??_LEDsetBar+5)& (0+255),w,b
 10031  000B86  16DE               	andwf	postinc2,f,c
 10032  000B88  51F4               	movf	(??_LEDsetBar+6)& (0+255),w,b
 10033  000B8A  16DE               	andwf	postinc2,f,c
 10034                           
 10035                           ; BSR set to: 0
 10036                           
 10037                           ; BSR set to: 0
 10038                           
 10039                           ; BSR set to: 0
 10040  000B8C  0012               	return	
 10041  000B8E                     __end_of_LEDsetBar:
 10042                           	opt stack 0
 10043                           tosu	equ	0xFFF
 10044                           tosh	equ	0xFFE
 10045                           tosl	equ	0xFFD
 10046                           pclath	equ	0xFFA
 10047                           tblptru	equ	0xFF8
 10048                           tblptrh	equ	0xFF7
 10049                           tblptrl	equ	0xFF6
 10050                           tablat	equ	0xFF5
 10051                           prodh	equ	0xFF4
 10052                           prodl	equ	0xFF3
 10053                           intcon	equ	0xFF2
 10054                           intcon2	equ	0xFF1
 10055                           postinc0	equ	0xFEE
 10056                           wreg	equ	0xFE8
 10057                           indf2	equ	0xFDF
 10058                           postinc2	equ	0xFDE
 10059                           postdec2	equ	0xFDD
 10060                           plusw2	equ	0xFDB
 10061                           fsr2h	equ	0xFDA
 10062                           fsr2l	equ	0xFD9
 10063                           status	equ	0xFD8
 10064                           
 10065 ;; *************** function ___awdiv *****************
 10066 ;; Defined at:
 10067 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awdiv.c"
 10068 ;; Parameters:    Size  Location     Type
 10069 ;;  dividend        2   26[COMRAM] int 
 10070 ;;  divisor         2   28[COMRAM] int 
 10071 ;; Auto vars:     Size  Location     Type
 10072 ;;  quotient        2   32[COMRAM] int 
 10073 ;;  sign            1   31[COMRAM] unsigned char 
 10074 ;;  counter         1   30[COMRAM] unsigned char 
 10075 ;; Return value:  Size  Location     Type
 10076 ;;                  2   26[COMRAM] int 
 10077 ;; Registers used:
 10078 ;;		wreg, status,2, status,0
 10079 ;; Tracked objects:
 10080 ;;		On entry : 0/0
 10081 ;;		On exit  : 0/0
 10082 ;;		Unchanged: 0/0
 10083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10084 ;;      Params:         4       0       0       0       0       0       0
 10085 ;;      Locals:         4       0       0       0       0       0       0
 10086 ;;      Temps:          0       0       0       0       0       0       0
 10087 ;;      Totals:         8       0       0       0       0       0       0
 10088 ;;Total ram usage:        8 bytes
 10089 ;; Hardware stack levels used:    1
 10090 ;; Hardware stack levels required when called:    4
 10091 ;; This function calls:
 10092 ;;		Nothing
 10093 ;; This function is called by:
 10094 ;;		_LEDsetBar
 10095 ;;		_begin
 10096 ;; This function uses a non-reentrant model
 10097 ;;
 10098                           
 10099                           	psect	text53
 10100  002548                     __ptext53:
 10101                           	opt stack 0
 10102  002548                     ___awdiv:
 10103                           	opt stack 24
 10104                           
 10105                           ;incstack = 0
 10106  002548  0E00               	movlw	0
 10107  00254A  6E20               	movwf	___awdiv@sign,c
 10108  00254C  AE1E               	btfss	___awdiv@divisor+1,7,c
 10109  00254E  D006               	goto	l5670
 10110  002550  6C1D               	negf	___awdiv@divisor,c
 10111  002552  1E1E               	comf	___awdiv@divisor+1,f,c
 10112  002554  B0D8               	btfsc	status,0,c
 10113  002556  2A1E               	incf	___awdiv@divisor+1,f,c
 10114  002558  0E01               	movlw	1
 10115  00255A  6E20               	movwf	___awdiv@sign,c
 10116  00255C                     l5670:
 10117  00255C  AE1C               	btfss	___awdiv@dividend+1,7,c
 10118  00255E  D006               	goto	l5676
 10119  002560  6C1B               	negf	___awdiv@dividend,c
 10120  002562  1E1C               	comf	___awdiv@dividend+1,f,c
 10121  002564  B0D8               	btfsc	status,0,c
 10122  002566  2A1C               	incf	___awdiv@dividend+1,f,c
 10123  002568  0E01               	movlw	1
 10124  00256A  1A20               	xorwf	___awdiv@sign,f,c
 10125  00256C                     l5676:
 10126  00256C  0E00               	movlw	0
 10127  00256E  6E22               	movwf	___awdiv@quotient+1,c
 10128  002570  0E00               	movlw	0
 10129  002572  6E21               	movwf	___awdiv@quotient,c
 10130  002574  501D               	movf	___awdiv@divisor,w,c
 10131  002576  101E               	iorwf	___awdiv@divisor+1,w,c
 10132  002578  B4D8               	btfsc	status,2,c
 10133  00257A  D01C               	goto	l5698
 10134  00257C  0E01               	movlw	1
 10135  00257E  6E1F               	movwf	___awdiv@counter,c
 10136  002580  D004               	goto	l5684
 10137  002582                     l5682:
 10138  002582  90D8               	bcf	status,0,c
 10139  002584  361D               	rlcf	___awdiv@divisor,f,c
 10140  002586  361E               	rlcf	___awdiv@divisor+1,f,c
 10141  002588  2A1F               	incf	___awdiv@counter,f,c
 10142  00258A                     l5684:
 10143  00258A  AE1E               	btfss	___awdiv@divisor+1,7,c
 10144  00258C  D7FA               	goto	l5682
 10145  00258E                     l5686:
 10146  00258E  90D8               	bcf	status,0,c
 10147  002590  3621               	rlcf	___awdiv@quotient,f,c
 10148  002592  3622               	rlcf	___awdiv@quotient+1,f,c
 10149  002594  501D               	movf	___awdiv@divisor,w,c
 10150  002596  5C1B               	subwf	___awdiv@dividend,w,c
 10151  002598  501E               	movf	___awdiv@divisor+1,w,c
 10152  00259A  581C               	subwfb	___awdiv@dividend+1,w,c
 10153  00259C  A0D8               	btfss	status,0,c
 10154  00259E  D005               	goto	l5694
 10155  0025A0  501D               	movf	___awdiv@divisor,w,c
 10156  0025A2  5E1B               	subwf	___awdiv@dividend,f,c
 10157  0025A4  501E               	movf	___awdiv@divisor+1,w,c
 10158  0025A6  5A1C               	subwfb	___awdiv@dividend+1,f,c
 10159  0025A8  8021               	bsf	___awdiv@quotient,0,c
 10160  0025AA                     l5694:
 10161  0025AA  90D8               	bcf	status,0,c
 10162  0025AC  321E               	rrcf	___awdiv@divisor+1,f,c
 10163  0025AE  321D               	rrcf	___awdiv@divisor,f,c
 10164  0025B0  2E1F               	decfsz	___awdiv@counter,f,c
 10165  0025B2  D7ED               	goto	l5686
 10166  0025B4                     l5698:
 10167  0025B4  5020               	movf	___awdiv@sign,w,c
 10168  0025B6  B4D8               	btfsc	status,2,c
 10169  0025B8  D004               	goto	l5702
 10170  0025BA  6C21               	negf	___awdiv@quotient,c
 10171  0025BC  1E22               	comf	___awdiv@quotient+1,f,c
 10172  0025BE  B0D8               	btfsc	status,0,c
 10173  0025C0  2A22               	incf	___awdiv@quotient+1,f,c
 10174  0025C2                     l5702:
 10175  0025C2  C021  F01B         	movff	___awdiv@quotient,?___awdiv
 10176  0025C6  C022  F01C         	movff	___awdiv@quotient+1,?___awdiv+1
 10177  0025CA  0012               	return	
 10178  0025CC                     __end_of___awdiv:
 10179                           	opt stack 0
 10180                           tosu	equ	0xFFF
 10181                           tosh	equ	0xFFE
 10182                           tosl	equ	0xFFD
 10183                           pclath	equ	0xFFA
 10184                           tblptru	equ	0xFF8
 10185                           tblptrh	equ	0xFF7
 10186                           tblptrl	equ	0xFF6
 10187                           tablat	equ	0xFF5
 10188                           prodh	equ	0xFF4
 10189                           prodl	equ	0xFF3
 10190                           intcon	equ	0xFF2
 10191                           intcon2	equ	0xFF1
 10192                           postinc0	equ	0xFEE
 10193                           wreg	equ	0xFE8
 10194                           indf2	equ	0xFDF
 10195                           postinc2	equ	0xFDE
 10196                           postdec2	equ	0xFDD
 10197                           plusw2	equ	0xFDB
 10198                           fsr2h	equ	0xFDA
 10199                           fsr2l	equ	0xFD9
 10200                           status	equ	0xFD8
 10201                           
 10202 ;; *************** function _LEDbegin *****************
 10203 ;; Defined at:
 10204 ;;		line 83 in file "LED_BarGraph.c"
 10205 ;; Parameters:    Size  Location     Type
 10206 ;;  i2c_addr        1    wreg     unsigned char 
 10207 ;; Auto vars:     Size  Location     Type
 10208 ;;  i2c_addr        1   13[BANK0 ] unsigned char 
 10209 ;;  writeBuffer     3    8[BANK0 ] unsigned char [3]
 10210 ;;  timeOut         2   11[BANK0 ] unsigned int 
 10211 ;;  status          1   14[BANK0 ] enum E7758
 10212 ;; Return value:  Size  Location     Type
 10213 ;;                  1    wreg      void 
 10214 ;; Registers used:
 10215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10216 ;; Tracked objects:
 10217 ;;		On entry : 0/0
 10218 ;;		On exit  : 0/0
 10219 ;;		Unchanged: 0/0
 10220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10221 ;;      Params:         0       0       0       0       0       0       0
 10222 ;;      Locals:         0       7       0       0       0       0       0
 10223 ;;      Temps:          0       0       0       0       0       0       0
 10224 ;;      Totals:         0       7       0       0       0       0       0
 10225 ;;Total ram usage:        7 bytes
 10226 ;; Hardware stack levels used:    1
 10227 ;; Hardware stack levels required when called:    7
 10228 ;; This function calls:
 10229 ;;		_I2C1_MasterWrite
 10230 ;;		_LEDBsetBrightness
 10231 ;;		_LEDblinkRate
 10232 ;; This function is called by:
 10233 ;;		_main
 10234 ;; This function uses a non-reentrant model
 10235 ;;
 10236                           
 10237                           	psect	text54
 10238  0021D4                     __ptext54:
 10239                           	opt stack 0
 10240  0021D4                     _LEDbegin:
 10241                           	opt stack 23
 10242                           
 10243                           ;incstack = 0
 10244                           ;LEDbegin@i2c_addr stored from wreg
 10245  0021D4  0100               	movlb	0	; () banked
 10246  0021D6  6FFB               	movwf	LEDbegin@i2c_addr& (0+255),b
 10247                           
 10248                           ;LED_BarGraph.c: 84: uint8_t writeBuffer[3];
 10249                           ;LED_BarGraph.c: 85: uint16_t timeOut;
 10250                           ;LED_BarGraph.c: 86: writeBuffer[0] = 0x21;
 10251  0021D8  0E21               	movlw	33
 10252  0021DA  0100               	movlb	0	; () banked
 10253  0021DC  6FF6               	movwf	LEDbegin@writeBuffer& (0+255),b
 10254                           
 10255                           ;LED_BarGraph.c: 87: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 10256  0021DE  0E02               	movlw	2
 10257  0021E0  0100               	movlb	0	; () banked
 10258  0021E2  6FFC               	movwf	LEDbegin@status& (0+255),b
 10259                           
 10260                           ;LED_BarGraph.c: 89: timeOut = 0;
 10261  0021E4  0E00               	movlw	0
 10262  0021E6  0100               	movlb	0	; () banked
 10263  0021E8  6FFA               	movwf	(LEDbegin@timeOut+1)& (0+255),b
 10264  0021EA  0E00               	movlw	0
 10265  0021EC  6FF9               	movwf	LEDbegin@timeOut& (0+255),b
 10266                           
 10267                           ;LED_BarGraph.c: 90: while (status != I2C1_MESSAGE_FAIL) {
 10268  0021EE  D027               	goto	l6288
 10269  0021F0                     l6268:
 10270                           
 10271                           ; BSR set to: 0
 10272                           ;LED_BarGraph.c: 92: I2C1_MasterWrite(&writeBuffer,
 10273                           ;LED_BarGraph.c: 93: 1,
 10274                           ;LED_BarGraph.c: 94: i2c_addr,
 10275                           ;LED_BarGraph.c: 95: &status);
 10276  0021F0  0EF6               	movlw	low LEDbegin@writeBuffer
 10277  0021F2  6E24               	movwf	I2C1_MasterWrite@pdata,c
 10278  0021F4  0E00               	movlw	high LEDbegin@writeBuffer
 10279  0021F6  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
 10280  0021F8  0E01               	movlw	1
 10281  0021FA  6E26               	movwf	I2C1_MasterWrite@length,c
 10282  0021FC  C0FB  F027         	movff	LEDbegin@i2c_addr,I2C1_MasterWrite@address
 10283  002200  6A28               	clrf	I2C1_MasterWrite@address+1,c
 10284  002202  0EFC               	movlw	low LEDbegin@status
 10285  002204  6E29               	movwf	I2C1_MasterWrite@pflag,c
 10286  002206  0E00               	movlw	high LEDbegin@status
 10287  002208  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
 10288  00220A  ECB2  F014         	call	_I2C1_MasterWrite	;wreg free
 10289  00220E                     l6270:
 10290  00220E  0E02               	movlw	2
 10291  002210  0100               	movlb	0	; () banked
 10292  002212  19FC               	xorwf	LEDbegin@status& (0+255),w,b
 10293  002214  B4D8               	btfsc	status,2,c
 10294  002216  D7FB               	goto	l6270
 10295                           
 10296                           ; BSR set to: 0
 10297                           ;LED_BarGraph.c: 100: if (status == I2C1_MESSAGE_COMPLETE)
 10298                           
 10299                           ; BSR set to: 0
 10300  002218  0100               	movlb	0	; () banked
 10301  00221A  51FC               	movf	LEDbegin@status& (0+255),w,b
 10302  00221C  0100               	movlb	0	; () banked
 10303  00221E  B4D8               	btfsc	status,2,c
 10304  002220  D012               	goto	l6290
 10305                           
 10306                           ; BSR set to: 0
 10307                           ;LED_BarGraph.c: 102: if (timeOut == 100)
 10308                           
 10309                           ; BSR set to: 0
 10310                           
 10311                           ; BSR set to: 0
 10312                           ;LED_BarGraph.c: 101: break;
 10313  002222  0E64               	movlw	100
 10314  002224  0100               	movlb	0	; () banked
 10315  002226  19F9               	xorwf	LEDbegin@timeOut& (0+255),w,b
 10316  002228  0100               	movlb	0	; () banked
 10317  00222A  11FA               	iorwf	(LEDbegin@timeOut+1)& (0+255),w,b
 10318  00222C  B4D8               	btfsc	status,2,c
 10319  00222E  D00B               	goto	l6290
 10320                           
 10321                           ; BSR set to: 0
 10322                           ;LED_BarGraph.c: 104: if (status == I2C1_MESSAGE_FAIL)
 10323                           
 10324                           ; BSR set to: 0
 10325                           
 10326                           ; BSR set to: 0
 10327                           ;LED_BarGraph.c: 103: break;
 10328  002230  0100               	movlb	0	; () banked
 10329  002232  05FC               	decf	LEDbegin@status& (0+255),w,b
 10330  002234  B4D8               	btfsc	status,2,c
 10331  002236  D007               	goto	l6290
 10332                           
 10333                           ; BSR set to: 0
 10334                           ;LED_BarGraph.c: 106: else
 10335                           ;LED_BarGraph.c: 107: timeOut++;
 10336                           
 10337                           ; BSR set to: 0
 10338                           
 10339                           ; BSR set to: 0
 10340                           
 10341                           ; BSR set to: 0
 10342                           ;LED_BarGraph.c: 105: break;
 10343  002238  0100               	movlb	0	; () banked
 10344  00223A  4BF9               	infsnz	LEDbegin@timeOut& (0+255),f,b
 10345  00223C  2BFA               	incf	(LEDbegin@timeOut+1)& (0+255),f,b
 10346  00223E                     l6288:
 10347                           
 10348                           ; BSR set to: 0
 10349  00223E  0100               	movlb	0	; () banked
 10350  002240  05FC               	decf	LEDbegin@status& (0+255),w,b
 10351  002242  A4D8               	btfss	status,2,c
 10352  002244  D7D5               	goto	l6268
 10353  002246                     l6290:
 10354                           
 10355                           ; BSR set to: 0
 10356                           ;LED_BarGraph.c: 108: }
 10357                           ;LED_BarGraph.c: 110: LEDblinkRate(0, i2c_addr);
 10358  002246  0E00               	movlw	0
 10359  002248  0100               	movlb	0	; () banked
 10360  00224A  6FEF               	movwf	(LEDblinkRate@b+1)& (0+255),b
 10361  00224C  0E00               	movlw	0
 10362  00224E  6FEE               	movwf	LEDblinkRate@b& (0+255),b
 10363  002250  C0FB  F0F0         	movff	LEDbegin@i2c_addr,LEDblinkRate@i2c_addr
 10364  002254  EC36  F011         	call	_LEDblinkRate	;wreg free
 10365                           
 10366                           ;LED_BarGraph.c: 111: LEDBsetBrightness(15, i2c_addr);
 10367  002258  0E00               	movlw	0
 10368  00225A  0100               	movlb	0	; () banked
 10369  00225C  6FEF               	movwf	(LEDBsetBrightness@b+1)& (0+255),b
 10370  00225E  0E0F               	movlw	15
 10371  002260  6FEE               	movwf	LEDBsetBrightness@b& (0+255),b
 10372  002262  C0FB  F0F0         	movff	LEDbegin@i2c_addr,LEDBsetBrightness@i2c_addr
 10373  002266  EC81  F011         	call	_LEDBsetBrightness	;wreg free
 10374  00226A  0012               	return		;funcret
 10375  00226C                     __end_of_LEDbegin:
 10376                           	opt stack 0
 10377                           tosu	equ	0xFFF
 10378                           tosh	equ	0xFFE
 10379                           tosl	equ	0xFFD
 10380                           pclath	equ	0xFFA
 10381                           tblptru	equ	0xFF8
 10382                           tblptrh	equ	0xFF7
 10383                           tblptrl	equ	0xFF6
 10384                           tablat	equ	0xFF5
 10385                           prodh	equ	0xFF4
 10386                           prodl	equ	0xFF3
 10387                           intcon	equ	0xFF2
 10388                           intcon2	equ	0xFF1
 10389                           postinc0	equ	0xFEE
 10390                           wreg	equ	0xFE8
 10391                           indf2	equ	0xFDF
 10392                           postinc2	equ	0xFDE
 10393                           postdec2	equ	0xFDD
 10394                           plusw2	equ	0xFDB
 10395                           fsr2h	equ	0xFDA
 10396                           fsr2l	equ	0xFD9
 10397                           status	equ	0xFD8
 10398                           
 10399 ;; *************** function _LEDblinkRate *****************
 10400 ;; Defined at:
 10401 ;;		line 53 in file "LED_BarGraph.c"
 10402 ;; Parameters:    Size  Location     Type
 10403 ;;  b               2    0[BANK0 ] int 
 10404 ;;  i2c_addr        1    2[BANK0 ] unsigned char 
 10405 ;; Auto vars:     Size  Location     Type
 10406 ;;  writeBuffer     2    3[BANK0 ] unsigned char [2]
 10407 ;;  timeOut         2    5[BANK0 ] unsigned int 
 10408 ;;  status          1    7[BANK0 ] enum E7758
 10409 ;; Return value:  Size  Location     Type
 10410 ;;                  1    wreg      void 
 10411 ;; Registers used:
 10412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10413 ;; Tracked objects:
 10414 ;;		On entry : 0/0
 10415 ;;		On exit  : 0/0
 10416 ;;		Unchanged: 0/0
 10417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10418 ;;      Params:         0       3       0       0       0       0       0
 10419 ;;      Locals:         0       5       0       0       0       0       0
 10420 ;;      Temps:          0       0       0       0       0       0       0
 10421 ;;      Totals:         0       8       0       0       0       0       0
 10422 ;;Total ram usage:        8 bytes
 10423 ;; Hardware stack levels used:    1
 10424 ;; Hardware stack levels required when called:    6
 10425 ;; This function calls:
 10426 ;;		_I2C1_MasterWrite
 10427 ;; This function is called by:
 10428 ;;		_LEDbegin
 10429 ;; This function uses a non-reentrant model
 10430 ;;
 10431                           
 10432                           	psect	text55
 10433  00226C                     __ptext55:
 10434                           	opt stack 0
 10435  00226C                     _LEDblinkRate:
 10436                           	opt stack 23
 10437                           
 10438                           ;LED_BarGraph.c: 54: if (b > 3) b = 0;
 10439                           
 10440                           ;incstack = 0
 10441  00226C  0100               	movlb	0	; () banked
 10442  00226E  BFEF               	btfsc	(LEDblinkRate@b+1)& (0+255),7,b
 10443  002270  D00D               	goto	l5858
 10444  002272  0100               	movlb	0	; () banked
 10445  002274  51EF               	movf	(LEDblinkRate@b+1)& (0+255),w,b
 10446  002276  E105               	bnz	u6070
 10447  002278  0E04               	movlw	4
 10448  00227A  0100               	movlb	0	; () banked
 10449  00227C  5DEE               	subwf	LEDblinkRate@b& (0+255),w,b
 10450  00227E  A0D8               	btfss	status,0,c
 10451  002280  D005               	goto	l5858
 10452  002282                     u6070:
 10453                           
 10454                           ; BSR set to: 0
 10455  002282  0E00               	movlw	0
 10456  002284  0100               	movlb	0	; () banked
 10457  002286  6FEF               	movwf	(LEDblinkRate@b+1)& (0+255),b
 10458  002288  0E00               	movlw	0
 10459  00228A  6FEE               	movwf	LEDblinkRate@b& (0+255),b
 10460  00228C                     l5858:
 10461                           
 10462                           ; BSR set to: 0
 10463                           ;LED_BarGraph.c: 55: uint8_t writeBuffer[2];
 10464                           ;LED_BarGraph.c: 56: uint16_t timeOut;
 10465                           ;LED_BarGraph.c: 57: writeBuffer[0] = (0x80 | 0x01 | (b << 1));
 10466  00228C  0100               	movlb	0	; () banked
 10467  00228E  51EE               	movf	LEDblinkRate@b& (0+255),w,b
 10468  002290  25EE               	addwf	LEDblinkRate@b& (0+255),w,b
 10469  002292  0981               	iorlw	129
 10470  002294  0100               	movlb	0	; () banked
 10471  002296  6FF1               	movwf	LEDblinkRate@writeBuffer& (0+255),b
 10472                           
 10473                           ; BSR set to: 0
 10474                           ;LED_BarGraph.c: 58: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 10475  002298  0E02               	movlw	2
 10476  00229A  0100               	movlb	0	; () banked
 10477  00229C  6FF5               	movwf	LEDblinkRate@status& (0+255),b
 10478                           
 10479                           ; BSR set to: 0
 10480                           ;LED_BarGraph.c: 60: timeOut = 0;
 10481  00229E  0E00               	movlw	0
 10482  0022A0  0100               	movlb	0	; () banked
 10483  0022A2  6FF4               	movwf	(LEDblinkRate@timeOut+1)& (0+255),b
 10484  0022A4  0E00               	movlw	0
 10485  0022A6  6FF3               	movwf	LEDblinkRate@timeOut& (0+255),b
 10486                           
 10487                           ;LED_BarGraph.c: 61: while (status != I2C1_MESSAGE_FAIL) {
 10488  0022A8  D027               	goto	l5884
 10489  0022AA                     l5864:
 10490                           
 10491                           ; BSR set to: 0
 10492                           ;LED_BarGraph.c: 63: I2C1_MasterWrite(&writeBuffer,
 10493                           ;LED_BarGraph.c: 64: 1,
 10494                           ;LED_BarGraph.c: 65: i2c_addr,
 10495                           ;LED_BarGraph.c: 66: &status);
 10496  0022AA  0EF1               	movlw	low LEDblinkRate@writeBuffer
 10497  0022AC  6E24               	movwf	I2C1_MasterWrite@pdata,c
 10498  0022AE  0E00               	movlw	high LEDblinkRate@writeBuffer
 10499  0022B0  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
 10500  0022B2  0E01               	movlw	1
 10501  0022B4  6E26               	movwf	I2C1_MasterWrite@length,c
 10502  0022B6  C0F0  F027         	movff	LEDblinkRate@i2c_addr,I2C1_MasterWrite@address
 10503  0022BA  6A28               	clrf	I2C1_MasterWrite@address+1,c
 10504  0022BC  0EF5               	movlw	low LEDblinkRate@status
 10505  0022BE  6E29               	movwf	I2C1_MasterWrite@pflag,c
 10506  0022C0  0E00               	movlw	high LEDblinkRate@status
 10507  0022C2  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
 10508  0022C4  ECB2  F014         	call	_I2C1_MasterWrite	;wreg free
 10509  0022C8                     l5866:
 10510  0022C8  0E02               	movlw	2
 10511  0022CA  0100               	movlb	0	; () banked
 10512  0022CC  19F5               	xorwf	LEDblinkRate@status& (0+255),w,b
 10513  0022CE  B4D8               	btfsc	status,2,c
 10514  0022D0  D7FB               	goto	l5866
 10515                           
 10516                           ; BSR set to: 0
 10517                           ;LED_BarGraph.c: 71: if (status == I2C1_MESSAGE_COMPLETE)
 10518                           
 10519                           ; BSR set to: 0
 10520  0022D2  0100               	movlb	0	; () banked
 10521  0022D4  51F5               	movf	LEDblinkRate@status& (0+255),w,b
 10522  0022D6  0100               	movlb	0	; () banked
 10523  0022D8  B4D8               	btfsc	status,2,c
 10524  0022DA  0012               	return	
 10525                           
 10526                           ; BSR set to: 0
 10527                           ;LED_BarGraph.c: 73: if (timeOut == 100)
 10528                           
 10529                           ; BSR set to: 0
 10530                           
 10531                           ; BSR set to: 0
 10532                           ;LED_BarGraph.c: 72: break;
 10533  0022DC  0E64               	movlw	100
 10534  0022DE  0100               	movlb	0	; () banked
 10535  0022E0  19F3               	xorwf	LEDblinkRate@timeOut& (0+255),w,b
 10536  0022E2  0100               	movlb	0	; () banked
 10537  0022E4  11F4               	iorwf	(LEDblinkRate@timeOut+1)& (0+255),w,b
 10538  0022E6  B4D8               	btfsc	status,2,c
 10539  0022E8  0012               	return	
 10540                           
 10541                           ; BSR set to: 0
 10542                           ;LED_BarGraph.c: 75: if (status == I2C1_MESSAGE_FAIL)
 10543                           
 10544                           ; BSR set to: 0
 10545                           
 10546                           ; BSR set to: 0
 10547                           ;LED_BarGraph.c: 74: break;
 10548  0022EA  0100               	movlb	0	; () banked
 10549  0022EC  05F5               	decf	LEDblinkRate@status& (0+255),w,b
 10550  0022EE  B4D8               	btfsc	status,2,c
 10551  0022F0  0012               	return	
 10552                           
 10553                           ; BSR set to: 0
 10554                           ;LED_BarGraph.c: 77: else
 10555                           ;LED_BarGraph.c: 78: timeOut++;
 10556                           
 10557                           ; BSR set to: 0
 10558                           
 10559                           ; BSR set to: 0
 10560                           
 10561                           ; BSR set to: 0
 10562                           ;LED_BarGraph.c: 76: break;
 10563  0022F2  0100               	movlb	0	; () banked
 10564  0022F4  4BF3               	infsnz	LEDblinkRate@timeOut& (0+255),f,b
 10565  0022F6  2BF4               	incf	(LEDblinkRate@timeOut+1)& (0+255),f,b
 10566  0022F8                     l5884:
 10567                           
 10568                           ; BSR set to: 0
 10569  0022F8  0100               	movlb	0	; () banked
 10570  0022FA  05F5               	decf	LEDblinkRate@status& (0+255),w,b
 10571  0022FC  B4D8               	btfsc	status,2,c
 10572  0022FE  0012               	return	
 10573  002300  D7D4               	goto	l5864
 10574  002302                     __end_of_LEDblinkRate:
 10575                           	opt stack 0
 10576                           tosu	equ	0xFFF
 10577                           tosh	equ	0xFFE
 10578                           tosl	equ	0xFFD
 10579                           pclath	equ	0xFFA
 10580                           tblptru	equ	0xFF8
 10581                           tblptrh	equ	0xFF7
 10582                           tblptrl	equ	0xFF6
 10583                           tablat	equ	0xFF5
 10584                           prodh	equ	0xFF4
 10585                           prodl	equ	0xFF3
 10586                           intcon	equ	0xFF2
 10587                           intcon2	equ	0xFF1
 10588                           postinc0	equ	0xFEE
 10589                           wreg	equ	0xFE8
 10590                           indf2	equ	0xFDF
 10591                           postinc2	equ	0xFDE
 10592                           postdec2	equ	0xFDD
 10593                           plusw2	equ	0xFDB
 10594                           fsr2h	equ	0xFDA
 10595                           fsr2l	equ	0xFD9
 10596                           status	equ	0xFD8
 10597                           
 10598 ;; *************** function _LEDBsetBrightness *****************
 10599 ;; Defined at:
 10600 ;;		line 23 in file "LED_BarGraph.c"
 10601 ;; Parameters:    Size  Location     Type
 10602 ;;  b               2    0[BANK0 ] int 
 10603 ;;  i2c_addr        1    2[BANK0 ] unsigned char 
 10604 ;; Auto vars:     Size  Location     Type
 10605 ;;  writeBuffer     2    3[BANK0 ] unsigned char [2]
 10606 ;;  timeOut         2    5[BANK0 ] unsigned int 
 10607 ;;  status          1    7[BANK0 ] enum E7758
 10608 ;; Return value:  Size  Location     Type
 10609 ;;                  1    wreg      void 
 10610 ;; Registers used:
 10611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10612 ;; Tracked objects:
 10613 ;;		On entry : 0/0
 10614 ;;		On exit  : 0/0
 10615 ;;		Unchanged: 0/0
 10616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10617 ;;      Params:         0       3       0       0       0       0       0
 10618 ;;      Locals:         0       5       0       0       0       0       0
 10619 ;;      Temps:          0       0       0       0       0       0       0
 10620 ;;      Totals:         0       8       0       0       0       0       0
 10621 ;;Total ram usage:        8 bytes
 10622 ;; Hardware stack levels used:    1
 10623 ;; Hardware stack levels required when called:    6
 10624 ;; This function calls:
 10625 ;;		_I2C1_MasterWrite
 10626 ;; This function is called by:
 10627 ;;		_LEDbegin
 10628 ;; This function uses a non-reentrant model
 10629 ;;
 10630                           
 10631                           	psect	text56
 10632  002302                     __ptext56:
 10633                           	opt stack 0
 10634  002302                     _LEDBsetBrightness:
 10635                           	opt stack 23
 10636                           
 10637                           ;LED_BarGraph.c: 24: if (b > 15) b = 15;
 10638                           
 10639                           ; BSR set to: 0
 10640                           ;incstack = 0
 10641  002302  0100               	movlb	0	; () banked
 10642  002304  BFEF               	btfsc	(LEDBsetBrightness@b+1)& (0+255),7,b
 10643  002306  D00D               	goto	l5826
 10644  002308  0100               	movlb	0	; () banked
 10645  00230A  51EF               	movf	(LEDBsetBrightness@b+1)& (0+255),w,b
 10646  00230C  E105               	bnz	u6010
 10647  00230E  0E10               	movlw	16
 10648  002310  0100               	movlb	0	; () banked
 10649  002312  5DEE               	subwf	LEDBsetBrightness@b& (0+255),w,b
 10650  002314  A0D8               	btfss	status,0,c
 10651  002316  D005               	goto	l5826
 10652  002318                     u6010:
 10653                           
 10654                           ; BSR set to: 0
 10655  002318  0E00               	movlw	0
 10656  00231A  0100               	movlb	0	; () banked
 10657  00231C  6FEF               	movwf	(LEDBsetBrightness@b+1)& (0+255),b
 10658  00231E  0E0F               	movlw	15
 10659  002320  6FEE               	movwf	LEDBsetBrightness@b& (0+255),b
 10660  002322                     l5826:
 10661                           
 10662                           ; BSR set to: 0
 10663                           ;LED_BarGraph.c: 25: uint8_t writeBuffer[2];
 10664                           ;LED_BarGraph.c: 26: uint16_t timeOut;
 10665                           ;LED_BarGraph.c: 27: writeBuffer[0] = (0xE0 | b);
 10666  002322  0100               	movlb	0	; () banked
 10667  002324  51EE               	movf	LEDBsetBrightness@b& (0+255),w,b
 10668  002326  09E0               	iorlw	224
 10669  002328  0100               	movlb	0	; () banked
 10670  00232A  6FF1               	movwf	LEDBsetBrightness@writeBuffer& (0+255),b
 10671                           
 10672                           ; BSR set to: 0
 10673                           ;LED_BarGraph.c: 28: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 10674  00232C  0E02               	movlw	2
 10675  00232E  0100               	movlb	0	; () banked
 10676  002330  6FF5               	movwf	LEDBsetBrightness@status& (0+255),b
 10677                           
 10678                           ; BSR set to: 0
 10679                           ;LED_BarGraph.c: 30: timeOut = 0;
 10680  002332  0E00               	movlw	0
 10681  002334  0100               	movlb	0	; () banked
 10682  002336  6FF4               	movwf	(LEDBsetBrightness@timeOut+1)& (0+255),b
 10683  002338  0E00               	movlw	0
 10684  00233A  6FF3               	movwf	LEDBsetBrightness@timeOut& (0+255),b
 10685                           
 10686                           ;LED_BarGraph.c: 31: while (status != I2C1_MESSAGE_FAIL) {
 10687  00233C  D027               	goto	l5852
 10688  00233E                     l5832:
 10689                           
 10690                           ; BSR set to: 0
 10691                           ;LED_BarGraph.c: 33: I2C1_MasterWrite(&writeBuffer,
 10692                           ;LED_BarGraph.c: 34: 1,
 10693                           ;LED_BarGraph.c: 35: i2c_addr,
 10694                           ;LED_BarGraph.c: 36: &status);
 10695  00233E  0EF1               	movlw	low LEDBsetBrightness@writeBuffer
 10696  002340  6E24               	movwf	I2C1_MasterWrite@pdata,c
 10697  002342  0E00               	movlw	high LEDBsetBrightness@writeBuffer
 10698  002344  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
 10699  002346  0E01               	movlw	1
 10700  002348  6E26               	movwf	I2C1_MasterWrite@length,c
 10701  00234A  C0F0  F027         	movff	LEDBsetBrightness@i2c_addr,I2C1_MasterWrite@address
 10702  00234E  6A28               	clrf	I2C1_MasterWrite@address+1,c
 10703  002350  0EF5               	movlw	low LEDBsetBrightness@status
 10704  002352  6E29               	movwf	I2C1_MasterWrite@pflag,c
 10705  002354  0E00               	movlw	high LEDBsetBrightness@status
 10706  002356  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
 10707  002358  ECB2  F014         	call	_I2C1_MasterWrite	;wreg free
 10708  00235C                     l5834:
 10709  00235C  0E02               	movlw	2
 10710  00235E  0100               	movlb	0	; () banked
 10711  002360  19F5               	xorwf	LEDBsetBrightness@status& (0+255),w,b
 10712  002362  B4D8               	btfsc	status,2,c
 10713  002364  D7FB               	goto	l5834
 10714                           
 10715                           ; BSR set to: 0
 10716                           ;LED_BarGraph.c: 41: if (status == I2C1_MESSAGE_COMPLETE)
 10717                           
 10718                           ; BSR set to: 0
 10719  002366  0100               	movlb	0	; () banked
 10720  002368  51F5               	movf	LEDBsetBrightness@status& (0+255),w,b
 10721  00236A  0100               	movlb	0	; () banked
 10722  00236C  B4D8               	btfsc	status,2,c
 10723  00236E  0012               	return	
 10724                           
 10725                           ; BSR set to: 0
 10726                           ;LED_BarGraph.c: 43: if (timeOut == 100)
 10727                           
 10728                           ; BSR set to: 0
 10729                           
 10730                           ; BSR set to: 0
 10731                           ;LED_BarGraph.c: 42: break;
 10732  002370  0E64               	movlw	100
 10733  002372  0100               	movlb	0	; () banked
 10734  002374  19F3               	xorwf	LEDBsetBrightness@timeOut& (0+255),w,b
 10735  002376  0100               	movlb	0	; () banked
 10736  002378  11F4               	iorwf	(LEDBsetBrightness@timeOut+1)& (0+255),w,b
 10737  00237A  B4D8               	btfsc	status,2,c
 10738  00237C  0012               	return	
 10739                           
 10740                           ; BSR set to: 0
 10741                           ;LED_BarGraph.c: 45: if (status == I2C1_MESSAGE_FAIL)
 10742                           
 10743                           ; BSR set to: 0
 10744                           
 10745                           ; BSR set to: 0
 10746                           ;LED_BarGraph.c: 44: break;
 10747  00237E  0100               	movlb	0	; () banked
 10748  002380  05F5               	decf	LEDBsetBrightness@status& (0+255),w,b
 10749  002382  B4D8               	btfsc	status,2,c
 10750  002384  0012               	return	
 10751                           
 10752                           ; BSR set to: 0
 10753                           ;LED_BarGraph.c: 47: else
 10754                           ;LED_BarGraph.c: 48: timeOut++;
 10755                           
 10756                           ; BSR set to: 0
 10757                           
 10758                           ; BSR set to: 0
 10759                           
 10760                           ; BSR set to: 0
 10761                           ;LED_BarGraph.c: 46: break;
 10762  002386  0100               	movlb	0	; () banked
 10763  002388  4BF3               	infsnz	LEDBsetBrightness@timeOut& (0+255),f,b
 10764  00238A  2BF4               	incf	(LEDBsetBrightness@timeOut+1)& (0+255),f,b
 10765  00238C                     l5852:
 10766                           
 10767                           ; BSR set to: 0
 10768  00238C  0100               	movlb	0	; () banked
 10769  00238E  05F5               	decf	LEDBsetBrightness@status& (0+255),w,b
 10770  002390  B4D8               	btfsc	status,2,c
 10771  002392  0012               	return	
 10772  002394  D7D4               	goto	l5832
 10773  002396                     __end_of_LEDBsetBrightness:
 10774                           	opt stack 0
 10775                           tosu	equ	0xFFF
 10776                           tosh	equ	0xFFE
 10777                           tosl	equ	0xFFD
 10778                           pclath	equ	0xFFA
 10779                           tblptru	equ	0xFF8
 10780                           tblptrh	equ	0xFF7
 10781                           tblptrl	equ	0xFF6
 10782                           tablat	equ	0xFF5
 10783                           prodh	equ	0xFF4
 10784                           prodl	equ	0xFF3
 10785                           intcon	equ	0xFF2
 10786                           intcon2	equ	0xFF1
 10787                           postinc0	equ	0xFEE
 10788                           wreg	equ	0xFE8
 10789                           indf2	equ	0xFDF
 10790                           postinc2	equ	0xFDE
 10791                           postdec2	equ	0xFDD
 10792                           plusw2	equ	0xFDB
 10793                           fsr2h	equ	0xFDA
 10794                           fsr2l	equ	0xFD9
 10795                           status	equ	0xFD8
 10796                           
 10797 ;; *************** function _I2C1_MasterWrite *****************
 10798 ;; Defined at:
 10799 ;;		line 551 in file "mcc_generated_files/i2c1.c"
 10800 ;; Parameters:    Size  Location     Type
 10801 ;;  pdata           2   35[COMRAM] PTR unsigned char 
 10802 ;;		 -> LEDwriteDisplay@writeBuffer(20), LEDbegin@writeBuffer(3), LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBu
      +ffer(2), 
 10803 ;;  length          1   37[COMRAM] unsigned char 
 10804 ;;  address         2   38[COMRAM] unsigned int 
 10805 ;;  pflag           2   40[COMRAM] PTR enum E7739
 10806 ;;		 -> LEDwriteDisplay@status(1), LEDbegin@status(1), LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
 10807 ;; Auto vars:     Size  Location     Type
 10808 ;;		None
 10809 ;; Return value:  Size  Location     Type
 10810 ;;                  1    wreg      void 
 10811 ;; Registers used:
 10812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10813 ;; Tracked objects:
 10814 ;;		On entry : 0/0
 10815 ;;		On exit  : 0/0
 10816 ;;		Unchanged: 0/0
 10817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10818 ;;      Params:         7       0       0       0       0       0       0
 10819 ;;      Locals:         0       0       0       0       0       0       0
 10820 ;;      Temps:          0       0       0       0       0       0       0
 10821 ;;      Totals:         7       0       0       0       0       0       0
 10822 ;;Total ram usage:        7 bytes
 10823 ;; Hardware stack levels used:    1
 10824 ;; Hardware stack levels required when called:    5
 10825 ;; This function calls:
 10826 ;;		_I2C1_MasterTRBInsert
 10827 ;;		_I2C1_MasterWriteTRBBuild
 10828 ;; This function is called by:
 10829 ;;		_LEDBsetBrightness
 10830 ;;		_LEDblinkRate
 10831 ;;		_LEDbegin
 10832 ;;		_LEDwriteDisplay
 10833 ;; This function uses a non-reentrant model
 10834 ;;
 10835                           
 10836                           	psect	text57
 10837  002964                     __ptext57:
 10838                           	opt stack 0
 10839  002964                     _I2C1_MasterWrite:
 10840                           	opt stack 24
 10841                           
 10842                           ;i2c1.c: 557: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
 10843                           ;i2c1.c: 560: if (i2c1_object.trStatus.s.full != 1)
 10844                           
 10845                           ; BSR set to: 0
 10846                           ;incstack = 0
 10847  002964  0100               	movlb	0	; () banked
 10848  002966  B1BC               	btfsc	(_i2c1_object+4)& (0+255),0,b
 10849  002968  D01C               	goto	l5424
 10850                           
 10851                           ; BSR set to: 0
 10852                           ;i2c1.c: 561: {
 10853                           ;i2c1.c: 562: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
 10854  00296A  0EE4               	movlw	low I2C1_MasterWrite@trBlock
 10855  00296C  6E1B               	movwf	I2C1_MasterWriteTRBBuild@ptrb,c
 10856  00296E  0E00               	movlw	high I2C1_MasterWrite@trBlock
 10857  002970  6E1C               	movwf	I2C1_MasterWriteTRBBuild@ptrb+1,c
 10858  002972  C024  F01D         	movff	I2C1_MasterWrite@pdata,I2C1_MasterWriteTRBBuild@pdata
 10859  002976  C025  F01E         	movff	I2C1_MasterWrite@pdata+1,I2C1_MasterWriteTRBBuild@pdata+1
 10860  00297A  C026  F01F         	movff	I2C1_MasterWrite@length,I2C1_MasterWriteTRBBuild@length
 10861  00297E  C027  F020         	movff	I2C1_MasterWrite@address,I2C1_MasterWriteTRBBuild@address
 10862  002982  C028  F021         	movff	I2C1_MasterWrite@address+1,I2C1_MasterWriteTRBBuild@address+1
 10863  002986  EC1F  F015         	call	_I2C1_MasterWriteTRBBuild	;wreg free
 10864                           
 10865                           ;i2c1.c: 563: I2C1_MasterTRBInsert(1, &trBlock, pflag);
 10866  00298A  0EE4               	movlw	low I2C1_MasterWrite@trBlock
 10867  00298C  6E1B               	movwf	I2C1_MasterTRBInsert@ptrb_list,c
 10868  00298E  0E00               	movlw	high I2C1_MasterWrite@trBlock
 10869  002990  6E1C               	movwf	I2C1_MasterTRBInsert@ptrb_list+1,c
 10870  002992  C029  F01D         	movff	I2C1_MasterWrite@pflag,I2C1_MasterTRBInsert@pflag
 10871  002996  C02A  F01E         	movff	I2C1_MasterWrite@pflag+1,I2C1_MasterTRBInsert@pflag+1
 10872  00299A  0E01               	movlw	1
 10873  00299C  ECE4  F00F         	call	_I2C1_MasterTRBInsert
 10874                           
 10875                           ;i2c1.c: 564: }
 10876  0029A0  0012               	return	
 10877  0029A2                     l5424:
 10878                           
 10879                           ;i2c1.c: 565: else
 10880                           ;i2c1.c: 566: {
 10881                           ;i2c1.c: 567: *pflag = I2C1_MESSAGE_FAIL;
 10882  0029A2  C029  FFD9         	movff	I2C1_MasterWrite@pflag,fsr2l
 10883  0029A6  C02A  FFDA         	movff	I2C1_MasterWrite@pflag+1,fsr2h
 10884  0029AA  0E01               	movlw	1
 10885  0029AC  6EDF               	movwf	indf2,c
 10886  0029AE  0012               	return	
 10887  0029B0                     __end_of_I2C1_MasterWrite:
 10888                           	opt stack 0
 10889                           tosu	equ	0xFFF
 10890                           tosh	equ	0xFFE
 10891                           tosl	equ	0xFFD
 10892                           pclath	equ	0xFFA
 10893                           tblptru	equ	0xFF8
 10894                           tblptrh	equ	0xFF7
 10895                           tblptrl	equ	0xFF6
 10896                           tablat	equ	0xFF5
 10897                           prodh	equ	0xFF4
 10898                           prodl	equ	0xFF3
 10899                           intcon	equ	0xFF2
 10900                           intcon2	equ	0xFF1
 10901                           postinc0	equ	0xFEE
 10902                           wreg	equ	0xFE8
 10903                           indf2	equ	0xFDF
 10904                           postinc2	equ	0xFDE
 10905                           postdec2	equ	0xFDD
 10906                           plusw2	equ	0xFDB
 10907                           fsr2h	equ	0xFDA
 10908                           fsr2l	equ	0xFD9
 10909                           status	equ	0xFD8
 10910                           
 10911 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 10912 ;; Defined at:
 10913 ;;		line 660 in file "mcc_generated_files/i2c1.c"
 10914 ;; Parameters:    Size  Location     Type
 10915 ;;  ptrb            2   26[COMRAM] PTR struct .
 10916 ;;		 -> I2C1_MasterWrite@trBlock(5), 
 10917 ;;  pdata           2   28[COMRAM] PTR unsigned char 
 10918 ;;		 -> LEDwriteDisplay@writeBuffer(20), LEDbegin@writeBuffer(3), LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBu
      +ffer(2), 
 10919 ;;  length          1   30[COMRAM] unsigned char 
 10920 ;;  address         2   31[COMRAM] unsigned int 
 10921 ;; Auto vars:     Size  Location     Type
 10922 ;;		None
 10923 ;; Return value:  Size  Location     Type
 10924 ;;                  1    wreg      void 
 10925 ;; Registers used:
 10926 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10927 ;; Tracked objects:
 10928 ;;		On entry : 0/0
 10929 ;;		On exit  : 0/0
 10930 ;;		Unchanged: 0/0
 10931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10932 ;;      Params:         7       0       0       0       0       0       0
 10933 ;;      Locals:         0       0       0       0       0       0       0
 10934 ;;      Temps:          2       0       0       0       0       0       0
 10935 ;;      Totals:         9       0       0       0       0       0       0
 10936 ;;Total ram usage:        9 bytes
 10937 ;; Hardware stack levels used:    1
 10938 ;; Hardware stack levels required when called:    4
 10939 ;; This function calls:
 10940 ;;		Nothing
 10941 ;; This function is called by:
 10942 ;;		_I2C1_MasterWrite
 10943 ;; This function uses a non-reentrant model
 10944 ;;
 10945                           
 10946                           	psect	text58
 10947  002A3E                     __ptext58:
 10948                           	opt stack 0
 10949  002A3E                     _I2C1_MasterWriteTRBBuild:
 10950                           	opt stack 24
 10951                           
 10952                           ;i2c1.c: 666: ptrb->address = address << 1;
 10953                           
 10954                           ;incstack = 0
 10955  002A3E  C020  F022         	movff	I2C1_MasterWriteTRBBuild@address,??_I2C1_MasterWriteTRBBuild
 10956  002A42  C021  F023         	movff	I2C1_MasterWriteTRBBuild@address+1,??_I2C1_MasterWriteTRBBuild+1
 10957  002A46  90D8               	bcf	status,0,c
 10958  002A48  3622               	rlcf	??_I2C1_MasterWriteTRBBuild,f,c
 10959  002A4A  3623               	rlcf	??_I2C1_MasterWriteTRBBuild+1,f,c
 10960  002A4C  C01B  FFD9         	movff	I2C1_MasterWriteTRBBuild@ptrb,fsr2l
 10961  002A50  C01C  FFDA         	movff	I2C1_MasterWriteTRBBuild@ptrb+1,fsr2h
 10962  002A54  C022  FFDE         	movff	??_I2C1_MasterWriteTRBBuild,postinc2
 10963  002A58  C023  FFDD         	movff	??_I2C1_MasterWriteTRBBuild+1,postdec2
 10964                           
 10965                           ;i2c1.c: 667: ptrb->length = length;
 10966  002A5C  EE20 F002          	lfsr	2,2
 10967  002A60  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
 10968  002A62  26D9               	addwf	fsr2l,f,c
 10969  002A64  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
 10970  002A66  22DA               	addwfc	fsr2h,f,c
 10971  002A68  C01F  FFDF         	movff	I2C1_MasterWriteTRBBuild@length,indf2
 10972                           
 10973                           ;i2c1.c: 668: ptrb->pbuffer = pdata;
 10974  002A6C  EE20 F003          	lfsr	2,3
 10975  002A70  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
 10976  002A72  26D9               	addwf	fsr2l,f,c
 10977  002A74  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
 10978  002A76  22DA               	addwfc	fsr2h,f,c
 10979  002A78  C01D  FFDE         	movff	I2C1_MasterWriteTRBBuild@pdata,postinc2
 10980  002A7C  C01E  FFDD         	movff	I2C1_MasterWriteTRBBuild@pdata+1,postdec2
 10981  002A80  0012               	return		;funcret
 10982  002A82                     __end_of_I2C1_MasterWriteTRBBuild:
 10983                           	opt stack 0
 10984                           tosu	equ	0xFFF
 10985                           tosh	equ	0xFFE
 10986                           tosl	equ	0xFFD
 10987                           pclath	equ	0xFFA
 10988                           tblptru	equ	0xFF8
 10989                           tblptrh	equ	0xFF7
 10990                           tblptrl	equ	0xFF6
 10991                           tablat	equ	0xFF5
 10992                           prodh	equ	0xFF4
 10993                           prodl	equ	0xFF3
 10994                           intcon	equ	0xFF2
 10995                           intcon2	equ	0xFF1
 10996                           postinc0	equ	0xFEE
 10997                           wreg	equ	0xFE8
 10998                           indf2	equ	0xFDF
 10999                           postinc2	equ	0xFDE
 11000                           postdec2	equ	0xFDD
 11001                           plusw2	equ	0xFDB
 11002                           fsr2h	equ	0xFDA
 11003                           fsr2l	equ	0xFD9
 11004                           status	equ	0xFD8
 11005                           
 11006 ;; *************** function _I2C1_MasterTRBInsert *****************
 11007 ;; Defined at:
 11008 ;;		line 594 in file "mcc_generated_files/i2c1.c"
 11009 ;; Parameters:    Size  Location     Type
 11010 ;;  count           1    wreg     unsigned char 
 11011 ;;  ptrb_list       2   26[COMRAM] PTR struct .
 11012 ;;		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
 11013 ;;  pflag           2   28[COMRAM] PTR enum E7739
 11014 ;;		 -> LEDwriteDisplay@status(1), LEDbegin@status(1), LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
 11015 ;; Auto vars:     Size  Location     Type
 11016 ;;  count           1   31[COMRAM] unsigned char 
 11017 ;; Return value:  Size  Location     Type
 11018 ;;                  1    wreg      void 
 11019 ;; Registers used:
 11020 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11021 ;; Tracked objects:
 11022 ;;		On entry : 0/0
 11023 ;;		On exit  : 0/0
 11024 ;;		Unchanged: 0/0
 11025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11026 ;;      Params:         4       0       0       0       0       0       0
 11027 ;;      Locals:         1       0       0       0       0       0       0
 11028 ;;      Temps:          1       0       0       0       0       0       0
 11029 ;;      Totals:         6       0       0       0       0       0       0
 11030 ;;Total ram usage:        6 bytes
 11031 ;; Hardware stack levels used:    1
 11032 ;; Hardware stack levels required when called:    4
 11033 ;; This function calls:
 11034 ;;		Nothing
 11035 ;; This function is called by:
 11036 ;;		_I2C1_MasterWrite
 11037 ;;		_I2C1_MasterRead
 11038 ;; This function uses a non-reentrant model
 11039 ;;
 11040                           
 11041                           	psect	text59
 11042  001FC8                     __ptext59:
 11043                           	opt stack 0
 11044  001FC8                     _I2C1_MasterTRBInsert:
 11045                           	opt stack 24
 11046                           
 11047                           ;incstack = 0
 11048                           ;I2C1_MasterTRBInsert@count stored from wreg
 11049  001FC8  6E20               	movwf	I2C1_MasterTRBInsert@count,c
 11050                           
 11051                           ;i2c1.c: 601: if (i2c1_object.trStatus.s.full != 1)
 11052  001FCA  0100               	movlb	0	; () banked
 11053  001FCC  B1BC               	btfsc	(_i2c1_object+4)& (0+255),0,b
 11054  001FCE  D046               	goto	l5240
 11055                           
 11056                           ; BSR set to: 0
 11057                           ;i2c1.c: 602: {
 11058                           ;i2c1.c: 603: *pflag = I2C1_MESSAGE_PENDING;
 11059  001FD0  C01D  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 11060  001FD4  C01E  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 11061  001FD8  0E02               	movlw	2
 11062  001FDA  6EDF               	movwf	indf2,c
 11063                           
 11064                           ; BSR set to: 0
 11065                           ;i2c1.c: 605: i2c1_object.pTrTail->ptrb_list = ptrb_list;
 11066  001FDC  0100               	movlb	0	; () banked
 11067  001FDE  EE20 F001          	lfsr	2,1
 11068  001FE2  51B8               	movf	_i2c1_object& (0+255),w,b
 11069  001FE4  26D9               	addwf	fsr2l,f,c
 11070  001FE6  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 11071  001FE8  22DA               	addwfc	fsr2h,f,c
 11072  001FEA  C01B  FFDE         	movff	I2C1_MasterTRBInsert@ptrb_list,postinc2
 11073  001FEE  C01C  FFDD         	movff	I2C1_MasterTRBInsert@ptrb_list+1,postdec2
 11074                           
 11075                           ; BSR set to: 0
 11076                           ;i2c1.c: 606: i2c1_object.pTrTail->count = count;
 11077  001FF2  C0B8  FFD9         	movff	_i2c1_object,fsr2l
 11078  001FF6  C0B9  FFDA         	movff	_i2c1_object+1,fsr2h
 11079  001FFA  C020  FFDF         	movff	I2C1_MasterTRBInsert@count,indf2
 11080                           
 11081                           ; BSR set to: 0
 11082                           ;i2c1.c: 607: i2c1_object.pTrTail->pTrFlag = pflag;
 11083  001FFE  0100               	movlb	0	; () banked
 11084  002000  EE20 F003          	lfsr	2,3
 11085  002004  51B8               	movf	_i2c1_object& (0+255),w,b
 11086  002006  26D9               	addwf	fsr2l,f,c
 11087  002008  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 11088  00200A  22DA               	addwfc	fsr2h,f,c
 11089  00200C  C01D  FFDE         	movff	I2C1_MasterTRBInsert@pflag,postinc2
 11090  002010  C01E  FFDD         	movff	I2C1_MasterTRBInsert@pflag+1,postdec2
 11091                           
 11092                           ; BSR set to: 0
 11093                           ;i2c1.c: 608: i2c1_object.pTrTail++;
 11094  002014  0E05               	movlw	5
 11095  002016  0100               	movlb	0	; () banked
 11096  002018  27B8               	addwf	_i2c1_object& (0+255),f,b
 11097  00201A  0E00               	movlw	0
 11098  00201C  23B9               	addwfc	(_i2c1_object+1)& (0+255),f,b
 11099                           
 11100                           ; BSR set to: 0
 11101                           ;i2c1.c: 611: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
 11102  00201E  0EEE               	movlw	low (_i2c1_tr_queue+5)
 11103  002020  0100               	movlb	0	; () banked
 11104  002022  19B8               	xorwf	_i2c1_object& (0+255),w,b
 11105  002024  E10B               	bnz	l5236
 11106  002026  0E00               	movlw	high (_i2c1_tr_queue+5)
 11107  002028  0100               	movlb	0	; () banked
 11108  00202A  19B9               	xorwf	(_i2c1_object+1)& (0+255),w,b
 11109  00202C  A4D8               	btfss	status,2,c
 11110  00202E  D006               	goto	l5236
 11111                           
 11112                           ; BSR set to: 0
 11113                           ;i2c1.c: 612: {
 11114                           ;i2c1.c: 614: i2c1_object.pTrTail = i2c1_tr_queue;
 11115  002030  0EE9               	movlw	low _i2c1_tr_queue
 11116  002032  0100               	movlb	0	; () banked
 11117  002034  6FB8               	movwf	_i2c1_object& (0+255),b
 11118  002036  0E00               	movlw	high _i2c1_tr_queue
 11119  002038  0100               	movlb	0	; () banked
 11120  00203A  6FB9               	movwf	(_i2c1_object+1)& (0+255),b
 11121  00203C                     l5236:
 11122                           
 11123                           ; BSR set to: 0
 11124                           ;i2c1.c: 615: }
 11125                           ;i2c1.c: 619: i2c1_object.trStatus.s.empty = 0;
 11126  00203C  0100               	movlb	0	; () banked
 11127  00203E  93BC               	bcf	(_i2c1_object+4)& (0+255),1,b
 11128                           
 11129                           ;i2c1.c: 622: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
 11130  002040  0100               	movlb	0	; () banked
 11131  002042  51B8               	movf	_i2c1_object& (0+255),w,b
 11132  002044  0100               	movlb	0	; () banked
 11133  002046  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 11134  002048  E10F               	bnz	l5242
 11135  00204A  0100               	movlb	0	; () banked
 11136  00204C  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 11137  00204E  0100               	movlb	0	; () banked
 11138  002050  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 11139  002052  A4D8               	btfss	status,2,c
 11140  002054  D009               	goto	l5242
 11141                           
 11142                           ; BSR set to: 0
 11143                           ;i2c1.c: 623: {
 11144                           ;i2c1.c: 625: i2c1_object.trStatus.s.full = 1;
 11145  002056  0100               	movlb	0	; () banked
 11146  002058  81BC               	bsf	(_i2c1_object+4)& (0+255),0,b
 11147                           
 11148                           ; BSR set to: 0
 11149                           ;i2c1.c: 626: }
 11150                           ;i2c1.c: 628: }
 11151  00205A  D006               	goto	l5242
 11152  00205C                     l5240:
 11153                           
 11154                           ; BSR set to: 0
 11155                           ;i2c1.c: 629: else
 11156                           ;i2c1.c: 630: {
 11157                           ;i2c1.c: 631: *pflag = I2C1_MESSAGE_FAIL;
 11158  00205C  C01D  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 11159  002060  C01E  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 11160  002064  0E01               	movlw	1
 11161  002066  6EDF               	movwf	indf2,c
 11162  002068                     l5242:
 11163                           
 11164                           ; BSR set to: 0
 11165                           ;i2c1.c: 632: }
 11166                           ;i2c1.c: 635: if (*pflag == I2C1_MESSAGE_PENDING)
 11167  002068  C01D  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 11168  00206C  C01E  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 11169  002070  0E02               	movlw	2
 11170  002072  18DE               	xorwf	postinc2,w,c
 11171  002074  A4D8               	btfss	status,2,c
 11172  002076  0012               	return	
 11173  002078                     l5246:
 11174  002078  5038               	movf	_i2c1_state,w,c
 11175  00207A  A4D8               	btfss	status,2,c
 11176  00207C  D7FD               	goto	l5246
 11177                           
 11178                           ;i2c1.c: 638: {
 11179                           ;i2c1.c: 641: PIR1bits.SSP1IF = 1;
 11180  00207E  869E               	bsf	3998,3,c	;volatile
 11181  002080  0012               	return	
 11182  002082                     __end_of_I2C1_MasterTRBInsert:
 11183                           	opt stack 0
 11184                           tosu	equ	0xFFF
 11185                           tosh	equ	0xFFE
 11186                           tosl	equ	0xFFD
 11187                           pclath	equ	0xFFA
 11188                           tblptru	equ	0xFF8
 11189                           tblptrh	equ	0xFF7
 11190                           tblptrl	equ	0xFF6
 11191                           tablat	equ	0xFF5
 11192                           prodh	equ	0xFF4
 11193                           prodl	equ	0xFF3
 11194                           intcon	equ	0xFF2
 11195                           intcon2	equ	0xFF1
 11196                           postinc0	equ	0xFEE
 11197                           wreg	equ	0xFE8
 11198                           indf2	equ	0xFDF
 11199                           postinc2	equ	0xFDE
 11200                           postdec2	equ	0xFDD
 11201                           plusw2	equ	0xFDB
 11202                           fsr2h	equ	0xFDA
 11203                           fsr2l	equ	0xFD9
 11204                           status	equ	0xFD8
 11205                           
 11206 ;; *************** function _INTERRUPT_InterruptManager *****************
 11207 ;; Defined at:
 11208 ;;		line 75 in file "mcc_generated_files/interrupt_manager.c"
 11209 ;; Parameters:    Size  Location     Type
 11210 ;;		None
 11211 ;; Auto vars:     Size  Location     Type
 11212 ;;		None
 11213 ;; Return value:  Size  Location     Type
 11214 ;;                  1    wreg      void 
 11215 ;; Registers used:
 11216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 11217 ;; Tracked objects:
 11218 ;;		On entry : 0/0
 11219 ;;		On exit  : 0/0
 11220 ;;		Unchanged: 0/0
 11221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11222 ;;      Params:         0       0       0       0       0       0       0
 11223 ;;      Locals:         0       0       0       0       0       0       0
 11224 ;;      Temps:         14       0       0       0       0       0       0
 11225 ;;      Totals:        14       0       0       0       0       0       0
 11226 ;;Total ram usage:       14 bytes
 11227 ;; Hardware stack levels used:    1
 11228 ;; Hardware stack levels required when called:    3
 11229 ;; This function calls:
 11230 ;;		_ADC_ISR
 11231 ;;		_EUSART1_Receive_ISR
 11232 ;;		_EUSART1_Transmit_ISR
 11233 ;;		_I2C1_BusCollisionISR
 11234 ;;		_I2C1_ISR
 11235 ;;		_TMR0_ISR
 11236 ;;		_TMR2_ISR
 11237 ;; This function is called by:
 11238 ;;		Interrupt level 2
 11239 ;; This function uses a non-reentrant model
 11240 ;;
 11241                           
 11242                           	psect	intcode
 11243  000008                     __pintcode:
 11244                           	opt stack 0
 11245  000008                     _INTERRUPT_InterruptManager:
 11246                           	opt stack 21
 11247                           
 11248                           ;incstack = 0
 11249  000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11250  00000A  CFFA F00D          	movff	pclath,??_INTERRUPT_InterruptManager
 11251  00000E  CFFB F00E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 11252  000012  CFE9 F00F          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 11253  000016  CFEA F010          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 11254  00001A  CFE1 F011          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 11255  00001E  CFE2 F012          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 11256  000022  CFD9 F013          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 11257  000026  CFDA F014          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 11258  00002A  CFF3 F015          	movff	prodl,??_INTERRUPT_InterruptManager+8
 11259  00002E  CFF4 F016          	movff	prodh,??_INTERRUPT_InterruptManager+9
 11260  000032  CFF6 F017          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 11261  000036  CFF7 F018          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 11262  00003A  CFF8 F019          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 11263  00003E  CFF5 F01A          	movff	tablat,??_INTERRUPT_InterruptManager+13
 11264                           
 11265                           ;interrupt_manager.c: 78: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
 11266  000042  BA9D               	btfsc	3997,5,c	;volatile
 11267  000044  AA9E               	btfss	3998,5,c	;volatile
 11268  000046  D003               	goto	i2l318
 11269                           
 11270                           ;interrupt_manager.c: 79: {
 11271                           ;interrupt_manager.c: 80: EUSART1_Receive_ISR();
 11272  000048  ECD0  F016         	call	_EUSART1_Receive_ISR	;wreg free
 11273                           
 11274                           ;interrupt_manager.c: 81: }
 11275  00004C  D023               	goto	i2l332
 11276  00004E                     i2l318:
 11277                           
 11278                           ;interrupt_manager.c: 82: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
 11279  00004E  B89D               	btfsc	3997,4,c	;volatile
 11280  000050  A89E               	btfss	3998,4,c	;volatile
 11281  000052  D003               	goto	i2l320
 11282                           
 11283                           ;interrupt_manager.c: 83: {
 11284                           ;interrupt_manager.c: 84: EUSART1_Transmit_ISR();
 11285  000054  ECD5  F015         	call	_EUSART1_Transmit_ISR	;wreg free
 11286                           
 11287                           ;interrupt_manager.c: 85: }
 11288  000058  D01D               	goto	i2l332
 11289  00005A                     i2l320:
 11290                           
 11291                           ;interrupt_manager.c: 86: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 11292  00005A  BAF2               	btfsc	intcon,5,c	;volatile
 11293  00005C  A4F2               	btfss	intcon,2,c	;volatile
 11294  00005E  D003               	goto	i2l322
 11295                           
 11296                           ;interrupt_manager.c: 87: {
 11297                           ;interrupt_manager.c: 88: TMR0_ISR();
 11298  000060  ECFF  F013         	call	_TMR0_ISR	;wreg free
 11299                           
 11300                           ;interrupt_manager.c: 89: }
 11301  000064  D017               	goto	i2l332
 11302  000066                     i2l322:
 11303                           
 11304                           ;interrupt_manager.c: 90: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
 11305  000066  B29D               	btfsc	3997,1,c	;volatile
 11306  000068  A29E               	btfss	3998,1,c	;volatile
 11307  00006A  D003               	goto	i2l324
 11308                           
 11309                           ;interrupt_manager.c: 91: {
 11310                           ;interrupt_manager.c: 92: TMR2_ISR();
 11311  00006C  EC45  F017         	call	_TMR2_ISR	;wreg free
 11312                           
 11313                           ;interrupt_manager.c: 93: }
 11314  000070  D011               	goto	i2l332
 11315  000072                     i2l324:
 11316                           
 11317                           ;interrupt_manager.c: 94: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 11318  000072  BC9D               	btfsc	3997,6,c	;volatile
 11319  000074  AC9E               	btfss	3998,6,c	;volatile
 11320  000076  D003               	goto	i2l326
 11321                           
 11322                           ;interrupt_manager.c: 95: {
 11323                           ;interrupt_manager.c: 96: ADC_ISR();
 11324  000078  EC4D  F017         	call	_ADC_ISR	;wreg free
 11325                           
 11326                           ;interrupt_manager.c: 97: }
 11327  00007C  D00B               	goto	i2l332
 11328  00007E                     i2l326:
 11329                           
 11330                           ;interrupt_manager.c: 98: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 11331  00007E  B69D               	btfsc	3997,3,c	;volatile
 11332  000080  A69E               	btfss	3998,3,c	;volatile
 11333  000082  D003               	goto	i2l328
 11334                           
 11335                           ;interrupt_manager.c: 99: {
 11336                           ;interrupt_manager.c: 100: I2C1_ISR();
 11337  000084  EC1C  F007         	call	_I2C1_ISR	;wreg free
 11338                           
 11339                           ;interrupt_manager.c: 101: }
 11340  000088  D005               	goto	i2l332
 11341  00008A                     i2l328:
 11342                           
 11343                           ;interrupt_manager.c: 102: else if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
 11344  00008A  B6A0               	btfsc	4000,3,c	;volatile
 11345  00008C  A6A1               	btfss	4001,3,c	;volatile
 11346  00008E  D002               	goto	i2l332
 11347                           
 11348                           ;interrupt_manager.c: 103: {
 11349                           ;interrupt_manager.c: 104: I2C1_BusCollisionISR();
 11350  000090  EC51  F017         	call	_I2C1_BusCollisionISR	;wreg free
 11351  000094                     i2l332:
 11352  000094  C01A  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 11353  000098  C019  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 11354  00009C  C018  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 11355  0000A0  C017  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 11356  0000A4  C016  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 11357  0000A8  C015  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 11358  0000AC  C014  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 11359  0000B0  C013  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 11360  0000B4  C012  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 11361  0000B8  C011  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 11362  0000BC  C010  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 11363  0000C0  C00F  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 11364  0000C4  C00E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 11365  0000C8  C00D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 11366  0000CC  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11367  0000CE  0011               	retfie		f
 11368  0000D0                     __end_of_INTERRUPT_InterruptManager:
 11369                           	opt stack 0
 11370                           tosu	equ	0xFFF
 11371                           tosh	equ	0xFFE
 11372                           tosl	equ	0xFFD
 11373                           pclatu	equ	0xFFB
 11374                           pclath	equ	0xFFA
 11375                           tblptru	equ	0xFF8
 11376                           tblptrh	equ	0xFF7
 11377                           tblptrl	equ	0xFF6
 11378                           tablat	equ	0xFF5
 11379                           prodh	equ	0xFF4
 11380                           prodl	equ	0xFF3
 11381                           intcon	equ	0xFF2
 11382                           intcon2	equ	0xFF1
 11383                           postinc0	equ	0xFEE
 11384                           fsr0h	equ	0xFEA
 11385                           fsr0l	equ	0xFE9
 11386                           wreg	equ	0xFE8
 11387                           fsr1h	equ	0xFE2
 11388                           fsr1l	equ	0xFE1
 11389                           indf2	equ	0xFDF
 11390                           postinc2	equ	0xFDE
 11391                           postdec2	equ	0xFDD
 11392                           plusw2	equ	0xFDB
 11393                           fsr2h	equ	0xFDA
 11394                           fsr2l	equ	0xFD9
 11395                           status	equ	0xFD8
 11396                           
 11397 ;; *************** function _TMR2_ISR *****************
 11398 ;; Defined at:
 11399 ;;		line 120 in file "mcc_generated_files/tmr2.c"
 11400 ;; Parameters:    Size  Location     Type
 11401 ;;		None
 11402 ;; Auto vars:     Size  Location     Type
 11403 ;;		None
 11404 ;; Return value:  Size  Location     Type
 11405 ;;                  2  294[None  ] int 
 11406 ;; Registers used:
 11407 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 11408 ;; Tracked objects:
 11409 ;;		On entry : 0/0
 11410 ;;		On exit  : 0/0
 11411 ;;		Unchanged: 0/0
 11412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11413 ;;      Params:         0       0       0       0       0       0       0
 11414 ;;      Locals:         0       0       0       0       0       0       0
 11415 ;;      Temps:          0       0       0       0       0       0       0
 11416 ;;      Totals:         0       0       0       0       0       0       0
 11417 ;;Total ram usage:        0 bytes
 11418 ;; Hardware stack levels used:    1
 11419 ;; Hardware stack levels required when called:    2
 11420 ;; This function calls:
 11421 ;;		_TMR2_CallBack
 11422 ;; This function is called by:
 11423 ;;		_INTERRUPT_InterruptManager
 11424 ;; This function uses a non-reentrant model
 11425 ;;
 11426                           
 11427                           	psect	text61
 11428  002E8A                     __ptext61:
 11429                           	opt stack 0
 11430  002E8A                     _TMR2_ISR:
 11431                           	opt stack 21
 11432                           
 11433                           ;tmr2.c: 124: PIR1bits.TMR2IF = 0;
 11434                           
 11435                           ;incstack = 0
 11436  002E8A  929E               	bcf	3998,1,c	;volatile
 11437                           
 11438                           ;tmr2.c: 128: TMR2_CallBack();
 11439  002E8C  EC5E  F014         	call	_TMR2_CallBack	;wreg free
 11440  002E90  0012               	return		;funcret
 11441  002E92                     __end_of_TMR2_ISR:
 11442                           	opt stack 0
 11443                           tosu	equ	0xFFF
 11444                           tosh	equ	0xFFE
 11445                           tosl	equ	0xFFD
 11446                           pclatu	equ	0xFFB
 11447                           pclath	equ	0xFFA
 11448                           tblptru	equ	0xFF8
 11449                           tblptrh	equ	0xFF7
 11450                           tblptrl	equ	0xFF6
 11451                           tablat	equ	0xFF5
 11452                           prodh	equ	0xFF4
 11453                           prodl	equ	0xFF3
 11454                           intcon	equ	0xFF2
 11455                           intcon2	equ	0xFF1
 11456                           postinc0	equ	0xFEE
 11457                           fsr0h	equ	0xFEA
 11458                           fsr0l	equ	0xFE9
 11459                           wreg	equ	0xFE8
 11460                           fsr1h	equ	0xFE2
 11461                           fsr1l	equ	0xFE1
 11462                           indf2	equ	0xFDF
 11463                           postinc2	equ	0xFDE
 11464                           postdec2	equ	0xFDD
 11465                           plusw2	equ	0xFDB
 11466                           fsr2h	equ	0xFDA
 11467                           fsr2l	equ	0xFD9
 11468                           status	equ	0xFD8
 11469                           
 11470 ;; *************** function _TMR2_CallBack *****************
 11471 ;; Defined at:
 11472 ;;		line 131 in file "mcc_generated_files/tmr2.c"
 11473 ;; Parameters:    Size  Location     Type
 11474 ;;		None
 11475 ;; Auto vars:     Size  Location     Type
 11476 ;;		None
 11477 ;; Return value:  Size  Location     Type
 11478 ;;                  1    wreg      void 
 11479 ;; Registers used:
 11480 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 11481 ;; Tracked objects:
 11482 ;;		On entry : 0/0
 11483 ;;		On exit  : 0/0
 11484 ;;		Unchanged: 0/0
 11485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11486 ;;      Params:         0       0       0       0       0       0       0
 11487 ;;      Locals:         0       0       0       0       0       0       0
 11488 ;;      Temps:          0       0       0       0       0       0       0
 11489 ;;      Totals:         0       0       0       0       0       0       0
 11490 ;;Total ram usage:        0 bytes
 11491 ;; Hardware stack levels used:    1
 11492 ;; Hardware stack levels required when called:    1
 11493 ;; This function calls:
 11494 ;;		Absolute function
 11495 ;;		_TMR2_DefaultInterruptHandler
 11496 ;; This function is called by:
 11497 ;;		_TMR2_ISR
 11498 ;; This function uses a non-reentrant model
 11499 ;;
 11500                           
 11501                           	psect	text62
 11502  0028BC                     __ptext62:
 11503                           	opt stack 0
 11504  0028BC                     _TMR2_CallBack:
 11505                           	opt stack 21
 11506                           
 11507                           ;tmr2.c: 132: if (k>=50){
 11508                           
 11509                           ;incstack = 0
 11510  0028BC  0100               	movlb	0	; () banked
 11511  0028BE  BFCE               	btfsc	(_k+1)& (0+255),7,b
 11512  0028C0  D013               	goto	i2l4458
 11513  0028C2  0100               	movlb	0	; () banked
 11514  0028C4  51CE               	movf	(_k+1)& (0+255),w,b
 11515  0028C6  E105               	bnz	i2u419_40
 11516  0028C8  0E32               	movlw	50
 11517  0028CA  0100               	movlb	0	; () banked
 11518  0028CC  5DCD               	subwf	_k& (0+255),w,b
 11519  0028CE  A0D8               	btfss	status,0,c
 11520  0028D0  D00B               	goto	i2l4458
 11521  0028D2                     i2u419_40:
 11522                           
 11523                           ; BSR set to: 0
 11524                           
 11525                           ;tmr2.c: 134: do { LATE1 = ~LATE1; } while(0);
 11526  0028D2  B28D               	btfsc	3981,1,c	;volatile
 11527  0028D4  D002               	goto	i2u420_40
 11528  0028D6  828D               	bsf	3981,1,c	;volatile
 11529  0028D8  D001               	goto	i2l4456
 11530  0028DA                     i2u420_40:
 11531  0028DA  928D               	bcf	3981,1,c	;volatile
 11532  0028DC                     i2l4456:
 11533                           
 11534                           ;tmr2.c: 135: k=0;}
 11535  0028DC  0E00               	movlw	0
 11536  0028DE  0100               	movlb	0	; () banked
 11537  0028E0  6FCE               	movwf	(_k+1)& (0+255),b
 11538  0028E2  0E00               	movlw	0
 11539  0028E4  6FCD               	movwf	_k& (0+255),b
 11540  0028E6  D003               	goto	i2l4460
 11541  0028E8                     i2l4458:
 11542                           
 11543                           ; BSR set to: 0
 11544                           ;tmr2.c: 136: else {
 11545                           ;tmr2.c: 137: k++;}
 11546  0028E8  0100               	movlb	0	; () banked
 11547  0028EA  4BCD               	infsnz	_k& (0+255),f,b
 11548  0028EC  2BCE               	incf	(_k+1)& (0+255),f,b
 11549  0028EE                     i2l4460:
 11550                           
 11551                           ; BSR set to: 0
 11552                           ;tmr2.c: 157: if(TMR2_InterruptHandler)
 11553  0028EE  0100               	movlb	0	; () banked
 11554  0028F0  51FE               	movf	_TMR2_InterruptHandler& (0+255),w,b
 11555  0028F2  0100               	movlb	0	; () banked
 11556  0028F4  11FF               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 11557  0028F6  B4D8               	btfsc	status,2,c
 11558  0028F8  0012               	return	
 11559                           
 11560                           ; BSR set to: 0
 11561                           ;tmr2.c: 158: {
 11562                           ;tmr2.c: 159: TMR2_InterruptHandler();
 11563  0028FA  D801               	call	i2u423_48
 11564  0028FC  0012               	return	
 11565  0028FE                     i2u423_48:
 11566  0028FE  0005               	push	
 11567  002900  0100               	movlb	0	; () banked
 11568  002902  6EFA               	movwf	pclath,c
 11569  002904  51FE               	movf	_TMR2_InterruptHandler& (0+255),w,b
 11570  002906  6EFD               	movwf	tosl,c
 11571  002908  51FF               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 11572  00290A  6EFE               	movwf	tosh,c
 11573  00290C  50F8               	movf	tblptru,w,c
 11574  00290E  6EFF               	movwf	tosu,c
 11575  002910  50FA               	movf	pclath,w,c
 11576  002912  0012               	return		;indir
 11577  002914                     __end_of_TMR2_CallBack:
 11578                           	opt stack 0
 11579                           tosu	equ	0xFFF
 11580                           tosh	equ	0xFFE
 11581                           tosl	equ	0xFFD
 11582                           pclatu	equ	0xFFB
 11583                           pclath	equ	0xFFA
 11584                           tblptru	equ	0xFF8
 11585                           tblptrh	equ	0xFF7
 11586                           tblptrl	equ	0xFF6
 11587                           tablat	equ	0xFF5
 11588                           prodh	equ	0xFF4
 11589                           prodl	equ	0xFF3
 11590                           intcon	equ	0xFF2
 11591                           intcon2	equ	0xFF1
 11592                           postinc0	equ	0xFEE
 11593                           fsr0h	equ	0xFEA
 11594                           fsr0l	equ	0xFE9
 11595                           wreg	equ	0xFE8
 11596                           fsr1h	equ	0xFE2
 11597                           fsr1l	equ	0xFE1
 11598                           indf2	equ	0xFDF
 11599                           postinc2	equ	0xFDE
 11600                           postdec2	equ	0xFDD
 11601                           plusw2	equ	0xFDB
 11602                           fsr2h	equ	0xFDA
 11603                           fsr2l	equ	0xFD9
 11604                           status	equ	0xFD8
 11605                           
 11606 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 11607 ;; Defined at:
 11608 ;;		line 237 in file "mcc_generated_files/tmr2.c"
 11609 ;; Parameters:    Size  Location     Type
 11610 ;;		None
 11611 ;; Auto vars:     Size  Location     Type
 11612 ;;		None
 11613 ;; Return value:  Size  Location     Type
 11614 ;;                  1    wreg      void 
 11615 ;; Registers used:
 11616 ;;		None
 11617 ;; Tracked objects:
 11618 ;;		On entry : 0/0
 11619 ;;		On exit  : 0/0
 11620 ;;		Unchanged: 0/0
 11621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11622 ;;      Params:         0       0       0       0       0       0       0
 11623 ;;      Locals:         0       0       0       0       0       0       0
 11624 ;;      Temps:          0       0       0       0       0       0       0
 11625 ;;      Totals:         0       0       0       0       0       0       0
 11626 ;;Total ram usage:        0 bytes
 11627 ;; Hardware stack levels used:    1
 11628 ;; This function calls:
 11629 ;;		Nothing
 11630 ;; This function is called by:
 11631 ;;		_TMR2_Initialize
 11632 ;;		_TMR2_CallBack
 11633 ;; This function uses a non-reentrant model
 11634 ;;
 11635                           
 11636                           	psect	text63
 11637  002E9E                     __ptext63:
 11638                           	opt stack 0
 11639  002E9E                     _TMR2_DefaultInterruptHandler:
 11640                           	opt stack 21
 11641                           
 11642                           ;incstack = 0
 11643  002E9E  0012               	return		;funcret
 11644  002EA0                     __end_of_TMR2_DefaultInterruptHandler:
 11645                           	opt stack 0
 11646                           tosu	equ	0xFFF
 11647                           tosh	equ	0xFFE
 11648                           tosl	equ	0xFFD
 11649                           pclatu	equ	0xFFB
 11650                           pclath	equ	0xFFA
 11651                           tblptru	equ	0xFF8
 11652                           tblptrh	equ	0xFF7
 11653                           tblptrl	equ	0xFF6
 11654                           tablat	equ	0xFF5
 11655                           prodh	equ	0xFF4
 11656                           prodl	equ	0xFF3
 11657                           intcon	equ	0xFF2
 11658                           intcon2	equ	0xFF1
 11659                           postinc0	equ	0xFEE
 11660                           fsr0h	equ	0xFEA
 11661                           fsr0l	equ	0xFE9
 11662                           wreg	equ	0xFE8
 11663                           fsr1h	equ	0xFE2
 11664                           fsr1l	equ	0xFE1
 11665                           indf2	equ	0xFDF
 11666                           postinc2	equ	0xFDE
 11667                           postdec2	equ	0xFDD
 11668                           plusw2	equ	0xFDB
 11669                           fsr2h	equ	0xFDA
 11670                           fsr2l	equ	0xFD9
 11671                           status	equ	0xFD8
 11672                           
 11673 ;; *************** function _TMR0_ISR *****************
 11674 ;; Defined at:
 11675 ;;		line 81 in file "mcc_generated_files/tmr0.c"
 11676 ;; Parameters:    Size  Location     Type
 11677 ;;		None
 11678 ;; Auto vars:     Size  Location     Type
 11679 ;;  x               2    4[COMRAM] int 
 11680 ;; Return value:  Size  Location     Type
 11681 ;;                  1    wreg      void 
 11682 ;; Registers used:
 11683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11684 ;; Tracked objects:
 11685 ;;		On entry : 0/0
 11686 ;;		On exit  : 0/0
 11687 ;;		Unchanged: 0/0
 11688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11689 ;;      Params:         0       0       0       0       0       0       0
 11690 ;;      Locals:         2       0       0       0       0       0       0
 11691 ;;      Temps:          0       0       0       0       0       0       0
 11692 ;;      Totals:         2       0       0       0       0       0       0
 11693 ;;Total ram usage:        2 bytes
 11694 ;; Hardware stack levels used:    1
 11695 ;; Hardware stack levels required when called:    1
 11696 ;; This function calls:
 11697 ;;		_ReadButtonState
 11698 ;;		_TMR0_CallBack
 11699 ;; This function is called by:
 11700 ;;		_INTERRUPT_InterruptManager
 11701 ;; This function uses a non-reentrant model
 11702 ;;
 11703                           
 11704                           	psect	text64
 11705  0027FE                     __ptext64:
 11706                           	opt stack 0
 11707  0027FE                     _TMR0_ISR:
 11708                           	opt stack 22
 11709                           
 11710                           ;tmr0.c: 82: static volatile uint16_t CountCallBack = 0;
 11711                           ;tmr0.c: 85: TMR0H = timer0ReloadVal16bit >> 8;
 11712                           
 11713                           ;incstack = 0
 11714  0027FE  5043               	movf	_timer0ReloadVal16bit+1,w,c	;volatile
 11715  002800  6ED7               	movwf	4055,c	;volatile
 11716                           
 11717                           ;tmr0.c: 86: TMR0L = (uint8_t) timer0ReloadVal16bit;
 11718  002802  C042  FFD6         	movff	_timer0ReloadVal16bit,4054	;volatile
 11719                           
 11720                           ;tmr0.c: 88: for (int x = 0; x < 8; x++) {
 11721  002806  0E00               	movlw	0
 11722  002808  6E06               	movwf	TMR0_ISR@x+1,c
 11723  00280A  0E00               	movlw	0
 11724  00280C  6E05               	movwf	TMR0_ISR@x,c
 11725  00280E                     i2l4668:
 11726  00280E  BE06               	btfsc	TMR0_ISR@x+1,7,c
 11727  002810  D006               	goto	i2l4672
 11728  002812  5006               	movf	TMR0_ISR@x+1,w,c
 11729  002814  E10D               	bnz	i2l4678
 11730  002816  0E08               	movlw	8
 11731  002818  5C05               	subwf	TMR0_ISR@x,w,c
 11732  00281A  B0D8               	btfsc	status,0,c
 11733  00281C  D009               	goto	i2l4678
 11734  00281E                     i2l4672:
 11735                           
 11736                           ;tmr0.c: 89: ReadButtonState(x);
 11737  00281E  C005  F001         	movff	TMR0_ISR@x,ReadButtonState@btnnum
 11738  002822  C006  F002         	movff	TMR0_ISR@x+1,ReadButtonState@btnnum+1
 11739  002826  EC38  F00D         	call	_ReadButtonState	;wreg free
 11740  00282A  4A05               	infsnz	TMR0_ISR@x,f,c
 11741  00282C  2A06               	incf	TMR0_ISR@x+1,f,c
 11742  00282E  D7EF               	goto	i2l4668
 11743  002830                     i2l4678:
 11744                           
 11745                           ;tmr0.c: 90: }
 11746                           ;tmr0.c: 91: time++;
 11747  002830  0100               	movlb	0	; () banked
 11748  002832  4BDB               	infsnz	_time& (0+255),f,b	;volatile
 11749  002834  2BDC               	incf	(_time+1)& (0+255),f,b	;volatile
 11750                           
 11751                           ; BSR set to: 0
 11752                           ;tmr0.c: 93: if (++CountCallBack >= 5) {
 11753  002836  0100               	movlb	0	; () banked
 11754  002838  4BC1               	infsnz	TMR0_ISR@CountCallBack& (0+255),f,b	;volatile
 11755  00283A  2BC2               	incf	(TMR0_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 11756  00283C  0100               	movlb	0	; () banked
 11757  00283E  51C2               	movf	(TMR0_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 11758  002840  E105               	bnz	i2u451_40
 11759  002842  0E05               	movlw	5
 11760  002844  0100               	movlb	0	; () banked
 11761  002846  5DC1               	subwf	TMR0_ISR@CountCallBack& (0+255),w,b	;volatile
 11762  002848  A0D8               	btfss	status,0,c
 11763  00284A  D007               	goto	i2l4686
 11764  00284C                     i2u451_40:
 11765                           
 11766                           ; BSR set to: 0
 11767                           ;tmr0.c: 95: TMR0_CallBack();
 11768  00284C  EC50  F017         	call	_TMR0_CallBack	;wreg free
 11769                           
 11770                           ;tmr0.c: 98: CountCallBack = 0;
 11771  002850  0E00               	movlw	0
 11772  002852  0100               	movlb	0	; () banked
 11773  002854  6FC2               	movwf	(TMR0_ISR@CountCallBack+1)& (0+255),b	;volatile
 11774  002856  0E00               	movlw	0
 11775  002858  6FC1               	movwf	TMR0_ISR@CountCallBack& (0+255),b	;volatile
 11776  00285A                     i2l4686:
 11777                           
 11778                           ; BSR set to: 0
 11779                           ;tmr0.c: 99: }
 11780                           ;tmr0.c: 101: INTCONbits.TMR0IF = 0;
 11781  00285A  94F2               	bcf	intcon,2,c	;volatile
 11782                           
 11783                           ; BSR set to: 0
 11784  00285C  0012               	return		;funcret
 11785  00285E                     __end_of_TMR0_ISR:
 11786                           	opt stack 0
 11787                           tosu	equ	0xFFF
 11788                           tosh	equ	0xFFE
 11789                           tosl	equ	0xFFD
 11790                           pclatu	equ	0xFFB
 11791                           pclath	equ	0xFFA
 11792                           tblptru	equ	0xFF8
 11793                           tblptrh	equ	0xFF7
 11794                           tblptrl	equ	0xFF6
 11795                           tablat	equ	0xFF5
 11796                           prodh	equ	0xFF4
 11797                           prodl	equ	0xFF3
 11798                           intcon	equ	0xFF2
 11799                           intcon2	equ	0xFF1
 11800                           postinc0	equ	0xFEE
 11801                           fsr0h	equ	0xFEA
 11802                           fsr0l	equ	0xFE9
 11803                           wreg	equ	0xFE8
 11804                           fsr1h	equ	0xFE2
 11805                           fsr1l	equ	0xFE1
 11806                           indf2	equ	0xFDF
 11807                           postinc2	equ	0xFDE
 11808                           postdec2	equ	0xFDD
 11809                           plusw2	equ	0xFDB
 11810                           fsr2h	equ	0xFDA
 11811                           fsr2l	equ	0xFD9
 11812                           status	equ	0xFD8
 11813                           
 11814 ;; *************** function _TMR0_CallBack *****************
 11815 ;; Defined at:
 11816 ;;		line 104 in file "mcc_generated_files/tmr0.c"
 11817 ;; Parameters:    Size  Location     Type
 11818 ;;		None
 11819 ;; Auto vars:     Size  Location     Type
 11820 ;;		None
 11821 ;; Return value:  Size  Location     Type
 11822 ;;                  1    wreg      void 
 11823 ;; Registers used:
 11824 ;;		None
 11825 ;; Tracked objects:
 11826 ;;		On entry : 0/0
 11827 ;;		On exit  : 0/0
 11828 ;;		Unchanged: 0/0
 11829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11830 ;;      Params:         0       0       0       0       0       0       0
 11831 ;;      Locals:         0       0       0       0       0       0       0
 11832 ;;      Temps:          0       0       0       0       0       0       0
 11833 ;;      Totals:         0       0       0       0       0       0       0
 11834 ;;Total ram usage:        0 bytes
 11835 ;; Hardware stack levels used:    1
 11836 ;; This function calls:
 11837 ;;		Nothing
 11838 ;; This function is called by:
 11839 ;;		_TMR0_ISR
 11840 ;; This function uses a non-reentrant model
 11841 ;;
 11842                           
 11843                           	psect	text65
 11844  002EA0                     __ptext65:
 11845                           	opt stack 0
 11846  002EA0                     _TMR0_CallBack:
 11847                           	opt stack 22
 11848                           
 11849                           ; BSR set to: 0
 11850                           ;incstack = 0
 11851  002EA0  0012               	return		;funcret
 11852  002EA2                     __end_of_TMR0_CallBack:
 11853                           	opt stack 0
 11854                           tosu	equ	0xFFF
 11855                           tosh	equ	0xFFE
 11856                           tosl	equ	0xFFD
 11857                           pclatu	equ	0xFFB
 11858                           pclath	equ	0xFFA
 11859                           tblptru	equ	0xFF8
 11860                           tblptrh	equ	0xFF7
 11861                           tblptrl	equ	0xFF6
 11862                           tablat	equ	0xFF5
 11863                           prodh	equ	0xFF4
 11864                           prodl	equ	0xFF3
 11865                           intcon	equ	0xFF2
 11866                           intcon2	equ	0xFF1
 11867                           postinc0	equ	0xFEE
 11868                           fsr0h	equ	0xFEA
 11869                           fsr0l	equ	0xFE9
 11870                           wreg	equ	0xFE8
 11871                           fsr1h	equ	0xFE2
 11872                           fsr1l	equ	0xFE1
 11873                           indf2	equ	0xFDF
 11874                           postinc2	equ	0xFDE
 11875                           postdec2	equ	0xFDD
 11876                           plusw2	equ	0xFDB
 11877                           fsr2h	equ	0xFDA
 11878                           fsr2l	equ	0xFD9
 11879                           status	equ	0xFD8
 11880                           
 11881 ;; *************** function _ReadButtonState *****************
 11882 ;; Defined at:
 11883 ;;		line 154 in file "IO.c"
 11884 ;; Parameters:    Size  Location     Type
 11885 ;;  btnnum          2    0[COMRAM] int 
 11886 ;; Auto vars:     Size  Location     Type
 11887 ;;		None
 11888 ;; Return value:  Size  Location     Type
 11889 ;;                  1    wreg      void 
 11890 ;; Registers used:
 11891 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11892 ;; Tracked objects:
 11893 ;;		On entry : 0/0
 11894 ;;		On exit  : 0/0
 11895 ;;		Unchanged: 0/0
 11896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11897 ;;      Params:         2       0       0       0       0       0       0
 11898 ;;      Locals:         0       0       0       0       0       0       0
 11899 ;;      Temps:          2       0       0       0       0       0       0
 11900 ;;      Totals:         4       0       0       0       0       0       0
 11901 ;;Total ram usage:        4 bytes
 11902 ;; Hardware stack levels used:    1
 11903 ;; This function calls:
 11904 ;;		Nothing
 11905 ;; This function is called by:
 11906 ;;		_TMR0_ISR
 11907 ;; This function uses a non-reentrant model
 11908 ;;
 11909                           
 11910                           	psect	text66
 11911  001A70                     __ptext66:
 11912                           	opt stack 0
 11913  001A70                     _ReadButtonState:
 11914                           	opt stack 22
 11915                           
 11916                           ;IO.c: 155: switch (btnnum) {
 11917                           
 11918                           ;incstack = 0
 11919  001A70  D068               	goto	i2l4118
 11920  001A72                     i2l4100:
 11921                           
 11922                           ;IO.c: 157: butnarray[btnnum] = PORTDbits.RD5;
 11923  001A72  0EB0               	movlw	low _butnarray
 11924  001A74  2401               	addwf	ReadButtonState@btnnum,w,c
 11925  001A76  6ED9               	movwf	fsr2l,c
 11926  001A78  0E00               	movlw	high _butnarray
 11927  001A7A  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 11928  001A7C  6EDA               	movwf	fsr2h,c
 11929  001A7E  AA83               	btfss	3971,5,c	;volatile
 11930  001A80  D002               	goto	i2u332_40
 11931  001A82  0E01               	movlw	1
 11932  001A84  D001               	goto	i2u332_46
 11933  001A86                     i2u332_40:
 11934  001A86  0E00               	movlw	0
 11935  001A88                     i2u332_46:
 11936  001A88  6EDF               	movwf	indf2,c
 11937                           
 11938                           ;IO.c: 158: break;
 11939  001A8A  0012               	return	
 11940  001A8C                     i2l4102:
 11941                           
 11942                           ;IO.c: 160: butnarray[btnnum] = PORTBbits.RB0;
 11943  001A8C  0EB0               	movlw	low _butnarray
 11944  001A8E  2401               	addwf	ReadButtonState@btnnum,w,c
 11945  001A90  6ED9               	movwf	fsr2l,c
 11946  001A92  0E00               	movlw	high _butnarray
 11947  001A94  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 11948  001A96  6EDA               	movwf	fsr2h,c
 11949  001A98  A081               	btfss	3969,0,c	;volatile
 11950  001A9A  D002               	goto	i2u333_40
 11951  001A9C  0E01               	movlw	1
 11952  001A9E  D001               	goto	i2u333_46
 11953  001AA0                     i2u333_40:
 11954  001AA0  0E00               	movlw	0
 11955  001AA2                     i2u333_46:
 11956  001AA2  6EDF               	movwf	indf2,c
 11957                           
 11958                           ;IO.c: 161: break;
 11959  001AA4  0012               	return	
 11960  001AA6                     i2l4104:
 11961                           
 11962                           ;IO.c: 163: butnarray[btnnum] = PORTBbits.RB1;
 11963  001AA6  0EB0               	movlw	low _butnarray
 11964  001AA8  2401               	addwf	ReadButtonState@btnnum,w,c
 11965  001AAA  6ED9               	movwf	fsr2l,c
 11966  001AAC  0E00               	movlw	high _butnarray
 11967  001AAE  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 11968  001AB0  6EDA               	movwf	fsr2h,c
 11969  001AB2  A281               	btfss	3969,1,c	;volatile
 11970  001AB4  D002               	goto	i2u334_40
 11971  001AB6  0E01               	movlw	1
 11972  001AB8  D001               	goto	i2u334_46
 11973  001ABA                     i2u334_40:
 11974  001ABA  0E00               	movlw	0
 11975  001ABC                     i2u334_46:
 11976  001ABC  6EDF               	movwf	indf2,c
 11977                           
 11978                           ;IO.c: 164: break;
 11979  001ABE  0012               	return	
 11980  001AC0                     i2l4106:
 11981                           
 11982                           ;IO.c: 166: butnarray[btnnum] = PORTBbits.RB2;
 11983  001AC0  0EB0               	movlw	low _butnarray
 11984  001AC2  2401               	addwf	ReadButtonState@btnnum,w,c
 11985  001AC4  6ED9               	movwf	fsr2l,c
 11986  001AC6  0E00               	movlw	high _butnarray
 11987  001AC8  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 11988  001ACA  6EDA               	movwf	fsr2h,c
 11989  001ACC  A481               	btfss	3969,2,c	;volatile
 11990  001ACE  D002               	goto	i2u335_40
 11991  001AD0  0E01               	movlw	1
 11992  001AD2  D001               	goto	i2u335_46
 11993  001AD4                     i2u335_40:
 11994  001AD4  0E00               	movlw	0
 11995  001AD6                     i2u335_46:
 11996  001AD6  6EDF               	movwf	indf2,c
 11997                           
 11998                           ;IO.c: 167: break;
 11999  001AD8  0012               	return	
 12000  001ADA                     i2l4108:
 12001                           
 12002                           ;IO.c: 169: butnarray[btnnum] = PORTBbits.RB4;
 12003  001ADA  0EB0               	movlw	low _butnarray
 12004  001ADC  2401               	addwf	ReadButtonState@btnnum,w,c
 12005  001ADE  6ED9               	movwf	fsr2l,c
 12006  001AE0  0E00               	movlw	high _butnarray
 12007  001AE2  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 12008  001AE4  6EDA               	movwf	fsr2h,c
 12009  001AE6  A881               	btfss	3969,4,c	;volatile
 12010  001AE8  D002               	goto	i2u336_40
 12011  001AEA  0E01               	movlw	1
 12012  001AEC  D001               	goto	i2u336_46
 12013  001AEE                     i2u336_40:
 12014  001AEE  0E00               	movlw	0
 12015  001AF0                     i2u336_46:
 12016  001AF0  6EDF               	movwf	indf2,c
 12017                           
 12018                           ;IO.c: 170: break;
 12019  001AF2  0012               	return	
 12020  001AF4                     i2l4110:
 12021                           
 12022                           ;IO.c: 172: butnarray[btnnum] = PORTAbits.RA0;
 12023  001AF4  0EB0               	movlw	low _butnarray
 12024  001AF6  2401               	addwf	ReadButtonState@btnnum,w,c
 12025  001AF8  6ED9               	movwf	fsr2l,c
 12026  001AFA  0E00               	movlw	high _butnarray
 12027  001AFC  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 12028  001AFE  6EDA               	movwf	fsr2h,c
 12029  001B00  A080               	btfss	3968,0,c	;volatile
 12030  001B02  D002               	goto	i2u337_40
 12031  001B04  0E01               	movlw	1
 12032  001B06  D001               	goto	i2u337_46
 12033  001B08                     i2u337_40:
 12034  001B08  0E00               	movlw	0
 12035  001B0A                     i2u337_46:
 12036  001B0A  6EDF               	movwf	indf2,c
 12037                           
 12038                           ;IO.c: 173: break;
 12039  001B0C  0012               	return	
 12040  001B0E                     i2l4112:
 12041                           
 12042                           ;IO.c: 175: butnarray[btnnum] = PORTAbits.RA1;
 12043  001B0E  0EB0               	movlw	low _butnarray
 12044  001B10  2401               	addwf	ReadButtonState@btnnum,w,c
 12045  001B12  6ED9               	movwf	fsr2l,c
 12046  001B14  0E00               	movlw	high _butnarray
 12047  001B16  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 12048  001B18  6EDA               	movwf	fsr2h,c
 12049  001B1A  A280               	btfss	3968,1,c	;volatile
 12050  001B1C  D002               	goto	i2u338_40
 12051  001B1E  0E01               	movlw	1
 12052  001B20  D001               	goto	i2u338_46
 12053  001B22                     i2u338_40:
 12054  001B22  0E00               	movlw	0
 12055  001B24                     i2u338_46:
 12056  001B24  6EDF               	movwf	indf2,c
 12057                           
 12058                           ;IO.c: 176: break;
 12059  001B26  0012               	return	
 12060  001B28                     i2l4114:
 12061                           
 12062                           ;IO.c: 178: butnarray[btnnum] = PORTAbits.RA2;
 12063  001B28  0EB0               	movlw	low _butnarray
 12064  001B2A  2401               	addwf	ReadButtonState@btnnum,w,c
 12065  001B2C  6ED9               	movwf	fsr2l,c
 12066  001B2E  0E00               	movlw	high _butnarray
 12067  001B30  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 12068  001B32  6EDA               	movwf	fsr2h,c
 12069  001B34  A480               	btfss	3968,2,c	;volatile
 12070  001B36  D002               	goto	i2u339_40
 12071  001B38  0E01               	movlw	1
 12072  001B3A  D001               	goto	i2u339_46
 12073  001B3C                     i2u339_40:
 12074  001B3C  0E00               	movlw	0
 12075  001B3E                     i2u339_46:
 12076  001B3E  6EDF               	movwf	indf2,c
 12077                           
 12078                           ;IO.c: 181: }
 12079                           
 12080                           ;IO.c: 179: break;
 12081  001B40  0012               	return	
 12082  001B42                     i2l4118:
 12083  001B42  C001  F003         	movff	ReadButtonState@btnnum,??_ReadButtonState
 12084  001B46  C002  F004         	movff	ReadButtonState@btnnum+1,??_ReadButtonState+1
 12085                           
 12086                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12087                           ; Switch size 1, requested type "space"
 12088                           ; Number of cases is 1, Range of values is 0 to 0
 12089                           ; switch strategies available:
 12090                           ; Name         Instructions Cycles
 12091                           ; simple_byte            4     3 (average)
 12092                           ;	Chosen strategy is simple_byte
 12093  001B4A  5004               	movf	??_ReadButtonState+1,w,c
 12094  001B4C  0A00               	xorlw	0	; case 0
 12095  001B4E  A4D8               	btfss	status,2,c
 12096  001B50  0012               	return	
 12097                           
 12098                           ; Switch size 1, requested type "space"
 12099                           ; Number of cases is 8, Range of values is 0 to 7
 12100                           ; switch strategies available:
 12101                           ; Name         Instructions Cycles
 12102                           ; simple_byte           25    13 (average)
 12103                           ;	Chosen strategy is simple_byte
 12104  001B52  5003               	movf	??_ReadButtonState,w,c
 12105  001B54  0A00               	xorlw	0	; case 0
 12106  001B56  B4D8               	btfsc	status,2,c
 12107  001B58  D78C               	goto	i2l4100
 12108  001B5A  0A01               	xorlw	1	; case 1
 12109  001B5C  B4D8               	btfsc	status,2,c
 12110  001B5E  D796               	goto	i2l4102
 12111  001B60  0A03               	xorlw	3	; case 2
 12112  001B62  B4D8               	btfsc	status,2,c
 12113  001B64  D7A0               	goto	i2l4104
 12114  001B66  0A01               	xorlw	1	; case 3
 12115  001B68  B4D8               	btfsc	status,2,c
 12116  001B6A  D7AA               	goto	i2l4106
 12117  001B6C  0A07               	xorlw	7	; case 4
 12118  001B6E  B4D8               	btfsc	status,2,c
 12119  001B70  D7B4               	goto	i2l4108
 12120  001B72  0A01               	xorlw	1	; case 5
 12121  001B74  B4D8               	btfsc	status,2,c
 12122  001B76  D7BE               	goto	i2l4110
 12123  001B78  0A03               	xorlw	3	; case 6
 12124  001B7A  B4D8               	btfsc	status,2,c
 12125  001B7C  D7C8               	goto	i2l4112
 12126  001B7E  0A01               	xorlw	1	; case 7
 12127  001B80  A4D8               	btfss	status,2,c
 12128  001B82  0012               	return	
 12129  001B84  D7D1               	goto	i2l4114
 12130  001B86                     __end_of_ReadButtonState:
 12131                           	opt stack 0
 12132                           tosu	equ	0xFFF
 12133                           tosh	equ	0xFFE
 12134                           tosl	equ	0xFFD
 12135                           pclatu	equ	0xFFB
 12136                           pclath	equ	0xFFA
 12137                           tblptru	equ	0xFF8
 12138                           tblptrh	equ	0xFF7
 12139                           tblptrl	equ	0xFF6
 12140                           tablat	equ	0xFF5
 12141                           prodh	equ	0xFF4
 12142                           prodl	equ	0xFF3
 12143                           intcon	equ	0xFF2
 12144                           intcon2	equ	0xFF1
 12145                           postinc0	equ	0xFEE
 12146                           fsr0h	equ	0xFEA
 12147                           fsr0l	equ	0xFE9
 12148                           wreg	equ	0xFE8
 12149                           fsr1h	equ	0xFE2
 12150                           fsr1l	equ	0xFE1
 12151                           indf2	equ	0xFDF
 12152                           postinc2	equ	0xFDE
 12153                           postdec2	equ	0xFDD
 12154                           plusw2	equ	0xFDB
 12155                           fsr2h	equ	0xFDA
 12156                           fsr2l	equ	0xFD9
 12157                           status	equ	0xFD8
 12158                           
 12159 ;; *************** function _I2C1_ISR *****************
 12160 ;; Defined at:
 12161 ;;		line 186 in file "mcc_generated_files/i2c1.c"
 12162 ;; Parameters:    Size  Location     Type
 12163 ;;		None
 12164 ;; Auto vars:     Size  Location     Type
 12165 ;;		None
 12166 ;; Return value:  Size  Location     Type
 12167 ;;                  1    wreg      void 
 12168 ;; Registers used:
 12169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12170 ;; Tracked objects:
 12171 ;;		On entry : 0/0
 12172 ;;		On exit  : 0/0
 12173 ;;		Unchanged: 0/0
 12174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12175 ;;      Params:         0       0       0       0       0       0       0
 12176 ;;      Locals:         0       0       0       0       0       0       0
 12177 ;;      Temps:          2       0       0       0       0       0       0
 12178 ;;      Totals:         2       0       0       0       0       0       0
 12179 ;;Total ram usage:        2 bytes
 12180 ;; Hardware stack levels used:    1
 12181 ;; Hardware stack levels required when called:    1
 12182 ;; This function calls:
 12183 ;;		_I2C1_FunctionComplete
 12184 ;;		_I2C1_Stop
 12185 ;; This function is called by:
 12186 ;;		_INTERRUPT_InterruptManager
 12187 ;; This function uses a non-reentrant model
 12188 ;;
 12189                           
 12190                           	psect	text67
 12191  000E38                     __ptext67:
 12192                           	opt stack 0
 12193  000E38                     _I2C1_ISR:
 12194                           	opt stack 22
 12195                           
 12196                           ;i2c1.c: 189: static uint8_t *pi2c_buf_ptr;
 12197                           ;i2c1.c: 190: static uint16_t i2c_address = 0;
 12198                           ;i2c1.c: 191: static uint8_t i2c_bytes_left = 0;
 12199                           ;i2c1.c: 192: static uint8_t i2c_10bit_address_restart = 0;
 12200                           ;i2c1.c: 194: PIR1bits.SSP1IF = 0;
 12201                           
 12202                           ;incstack = 0
 12203  000E38  969E               	bcf	3998,3,c	;volatile
 12204                           
 12205                           ;i2c1.c: 198: if(SSP1CON1bits.WCOL)
 12206  000E3A  AEC6               	btfss	4038,7,c	;volatile
 12207  000E3C  D114               	goto	i2l6248
 12208                           
 12209                           ;i2c1.c: 199: {
 12210                           ;i2c1.c: 201: SSP1CON1bits.WCOL = 0;
 12211  000E3E  9EC6               	bcf	4038,7,c	;volatile
 12212                           
 12213                           ;i2c1.c: 202: i2c1_state = S_MASTER_IDLE;
 12214  000E40  0E00               	movlw	0
 12215  000E42  6E38               	movwf	_i2c1_state,c
 12216                           
 12217                           ;i2c1.c: 203: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
 12218  000E44  0100               	movlb	0	; () banked
 12219  000E46  EE20 F003          	lfsr	2,3
 12220  000E4A  51CF               	movf	_p_i2c1_current& (0+255),w,b
 12221  000E4C  26D9               	addwf	fsr2l,f,c
 12222  000E4E  51D0               	movf	(_p_i2c1_current+1)& (0+255),w,b
 12223  000E50  22DA               	addwfc	fsr2h,f,c
 12224  000E52  CFDE F004          	movff	postinc2,??_I2C1_ISR
 12225  000E56  CFDD F005          	movff	postdec2,??_I2C1_ISR+1
 12226  000E5A  C004  FFD9         	movff	??_I2C1_ISR,fsr2l
 12227  000E5E  C005  FFDA         	movff	??_I2C1_ISR+1,fsr2h
 12228  000E62  0E01               	movlw	1
 12229  000E64  6EDF               	movwf	indf2,c
 12230                           
 12231                           ; BSR set to: 0
 12232                           ;i2c1.c: 206: p_i2c1_current = (0);
 12233  000E66  0E00               	movlw	0
 12234  000E68  0100               	movlb	0	; () banked
 12235  000E6A  6FCF               	movwf	_p_i2c1_current& (0+255),b
 12236  000E6C  0E00               	movlw	0
 12237  000E6E  0100               	movlb	0	; () banked
 12238  000E70  6FD0               	movwf	(_p_i2c1_current+1)& (0+255),b
 12239                           
 12240                           ; BSR set to: 0
 12241                           ;i2c1.c: 208: return;
 12242  000E72  0012               	return	
 12243  000E74                     i2l60:
 12244                           
 12245                           ;i2c1.c: 216: if(i2c1_object.trStatus.s.empty != 1)
 12246  000E74  0100               	movlb	0	; () banked
 12247  000E76  B3BC               	btfsc	(_i2c1_object+4)& (0+255),1,b
 12248  000E78  0012               	return	
 12249                           
 12250                           ; BSR set to: 0
 12251                           ;i2c1.c: 217: {
 12252                           ;i2c1.c: 219: p_i2c1_current = i2c1_object.pTrHead;
 12253  000E7A  C0BA  F0CF         	movff	_i2c1_object+2,_p_i2c1_current
 12254  000E7E  C0BB  F0D0         	movff	_i2c1_object+3,_p_i2c1_current+1
 12255                           
 12256                           ; BSR set to: 0
 12257                           ;i2c1.c: 220: i2c1_trb_count = i2c1_object.pTrHead->count;
 12258  000E82  C0BA  FFD9         	movff	_i2c1_object+2,fsr2l
 12259  000E86  C0BB  FFDA         	movff	_i2c1_object+3,fsr2h
 12260  000E8A  50DF               	movf	indf2,w,c
 12261  000E8C  6E39               	movwf	_i2c1_trb_count,c
 12262                           
 12263                           ; BSR set to: 0
 12264                           ;i2c1.c: 221: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
 12265  000E8E  0100               	movlb	0	; () banked
 12266  000E90  EE20 F001          	lfsr	2,1
 12267  000E94  51BA               	movf	(_i2c1_object+2)& (0+255),w,b
 12268  000E96  26D9               	addwf	fsr2l,f,c
 12269  000E98  51BB               	movf	(_i2c1_object+3)& (0+255),w,b
 12270  000E9A  22DA               	addwfc	fsr2h,f,c
 12271  000E9C  CFDE F0D1          	movff	postinc2,_p_i2c1_trb_current
 12272  000EA0  CFDD F0D2          	movff	postdec2,_p_i2c1_trb_current+1
 12273                           
 12274                           ; BSR set to: 0
 12275                           ;i2c1.c: 223: i2c1_object.pTrHead++;
 12276  000EA4  0E05               	movlw	5
 12277  000EA6  0100               	movlb	0	; () banked
 12278  000EA8  27BA               	addwf	(_i2c1_object+2)& (0+255),f,b
 12279  000EAA  0E00               	movlw	0
 12280  000EAC  23BB               	addwfc	(_i2c1_object+3)& (0+255),f,b
 12281                           
 12282                           ; BSR set to: 0
 12283                           ;i2c1.c: 226: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
 12284  000EAE  0EEE               	movlw	low (_i2c1_tr_queue+5)
 12285  000EB0  0100               	movlb	0	; () banked
 12286  000EB2  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 12287  000EB4  E10B               	bnz	i2l6140
 12288  000EB6  0E00               	movlw	high (_i2c1_tr_queue+5)
 12289  000EB8  0100               	movlb	0	; () banked
 12290  000EBA  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 12291  000EBC  A4D8               	btfss	status,2,c
 12292  000EBE  D006               	goto	i2l6140
 12293                           
 12294                           ; BSR set to: 0
 12295                           ;i2c1.c: 227: {
 12296                           ;i2c1.c: 229: i2c1_object.pTrHead = i2c1_tr_queue;
 12297  000EC0  0EE9               	movlw	low _i2c1_tr_queue
 12298  000EC2  0100               	movlb	0	; () banked
 12299  000EC4  6FBA               	movwf	(_i2c1_object+2)& (0+255),b
 12300  000EC6  0E00               	movlw	high _i2c1_tr_queue
 12301  000EC8  0100               	movlb	0	; () banked
 12302  000ECA  6FBB               	movwf	(_i2c1_object+3)& (0+255),b
 12303  000ECC                     i2l6140:
 12304                           
 12305                           ; BSR set to: 0
 12306                           ;i2c1.c: 230: }
 12307                           ;i2c1.c: 234: i2c1_object.trStatus.s.full = 0;
 12308  000ECC  0100               	movlb	0	; () banked
 12309  000ECE  91BC               	bcf	(_i2c1_object+4)& (0+255),0,b
 12310                           
 12311                           ;i2c1.c: 237: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
 12312  000ED0  0100               	movlb	0	; () banked
 12313  000ED2  51B8               	movf	_i2c1_object& (0+255),w,b
 12314  000ED4  0100               	movlb	0	; () banked
 12315  000ED6  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 12316  000ED8  E108               	bnz	i2l63
 12317  000EDA  0100               	movlb	0	; () banked
 12318  000EDC  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 12319  000EDE  0100               	movlb	0	; () banked
 12320  000EE0  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 12321  000EE2  A4D8               	btfss	status,2,c
 12322  000EE4  D002               	goto	i2l63
 12323                           
 12324                           ; BSR set to: 0
 12325                           ;i2c1.c: 238: {
 12326                           ;i2c1.c: 240: i2c1_object.trStatus.s.empty = 1;
 12327  000EE6  0100               	movlb	0	; () banked
 12328  000EE8  83BC               	bsf	(_i2c1_object+4)& (0+255),1,b
 12329  000EEA                     i2l63:
 12330                           
 12331                           ; BSR set to: 0
 12332                           ;i2c1.c: 241: }
 12333                           ;i2c1.c: 244: SSP1CON2bits.SEN = 1;
 12334  000EEA  80C5               	bsf	4037,0,c	;volatile
 12335                           
 12336                           ; BSR set to: 0
 12337                           ;i2c1.c: 247: i2c1_state = S_MASTER_SEND_ADDR;
 12338  000EEC  0E02               	movlw	2
 12339  000EEE  6E38               	movwf	_i2c1_state,c
 12340                           
 12341                           ; BSR set to: 0
 12342                           ;i2c1.c: 248: }
 12343                           ;i2c1.c: 250: break;
 12344  000EF0  0012               	return	
 12345  000EF2                     i2l65:
 12346                           
 12347                           ;i2c1.c: 257: SSP1CON2bits.RSEN = 1;
 12348  000EF2  82C5               	bsf	4037,1,c	;volatile
 12349                           
 12350                           ;i2c1.c: 260: i2c1_state = S_MASTER_SEND_ADDR;
 12351  000EF4  0E02               	movlw	2
 12352  000EF6  6E38               	movwf	_i2c1_state,c
 12353                           
 12354                           ;i2c1.c: 262: break;
 12355  000EF8  0012               	return	
 12356  000EFA                     i2l66:
 12357                           
 12358                           ;i2c1.c: 266: if(SSP1CON2bits.ACKSTAT)
 12359  000EFA  ACC5               	btfss	4037,6,c	;volatile
 12360  000EFC  D006               	goto	i2l6152
 12361                           
 12362                           ;i2c1.c: 267: {
 12363                           ;i2c1.c: 268: i2c1_object.i2cErrors++;
 12364  000EFE  0100               	movlb	0	; () banked
 12365  000F00  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 12366                           
 12367                           ; BSR set to: 0
 12368                           ;i2c1.c: 269: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 12369  000F02  0E04               	movlw	4
 12370  000F04  EC41  F015         	call	_I2C1_Stop
 12371                           
 12372                           ;i2c1.c: 270: }
 12373  000F08  0012               	return	
 12374  000F0A                     i2l6152:
 12375                           
 12376                           ;i2c1.c: 271: else
 12377                           ;i2c1.c: 272: {
 12378                           ;i2c1.c: 274: SSP1BUF = (i2c_address >> 1) & 0x00FF;
 12379  000F0A  90D8               	bcf	status,0,c
 12380  000F0C  3041               	rrcf	I2C1_ISR@i2c_address+1,w,c
 12381  000F0E  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
 12382  000F10  3040               	rrcf	I2C1_ISR@i2c_address,w,c
 12383  000F12  6E04               	movwf	??_I2C1_ISR& (0+255),c
 12384  000F14  5004               	movf	??_I2C1_ISR,w,c
 12385  000F16  6EC9               	movwf	4041,c	;volatile
 12386                           
 12387                           ;i2c1.c: 277: if(i2c_address & 0x01)
 12388  000F18  A040               	btfss	I2C1_ISR@i2c_address,0,c
 12389  000F1A  D003               	goto	i2l6158
 12390                           
 12391                           ;i2c1.c: 278: {
 12392                           ;i2c1.c: 281: i2c1_state = S_MASTER_10BIT_RESTART;
 12393  000F1C  0E0B               	movlw	11
 12394  000F1E  6E38               	movwf	_i2c1_state,c
 12395                           
 12396                           ;i2c1.c: 282: }
 12397  000F20  0012               	return	
 12398  000F22                     i2l6158:
 12399                           
 12400                           ;i2c1.c: 283: else
 12401                           ;i2c1.c: 284: {
 12402                           ;i2c1.c: 286: i2c1_state = S_MASTER_SEND_DATA;
 12403  000F22  0E03               	movlw	3
 12404  000F24  6E38               	movwf	_i2c1_state,c
 12405                           
 12406                           ;i2c1.c: 287: }
 12407                           ;i2c1.c: 288: }
 12408                           ;i2c1.c: 290: break;
 12409  000F26  0012               	return	
 12410  000F28                     i2l71:
 12411                           
 12412                           ;i2c1.c: 294: if(SSP1CON2bits.ACKSTAT)
 12413  000F28  ACC5               	btfss	4037,6,c	;volatile
 12414  000F2A  D006               	goto	i2l72
 12415                           
 12416                           ;i2c1.c: 295: {
 12417                           ;i2c1.c: 296: i2c1_object.i2cErrors++;
 12418  000F2C  0100               	movlb	0	; () banked
 12419  000F2E  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 12420                           
 12421                           ; BSR set to: 0
 12422                           ;i2c1.c: 297: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 12423  000F30  0E04               	movlw	4
 12424  000F32  EC41  F015         	call	_I2C1_Stop
 12425                           
 12426                           ;i2c1.c: 298: }
 12427  000F36  0012               	return	
 12428  000F38                     i2l72:
 12429                           
 12430                           ;i2c1.c: 299: else
 12431                           ;i2c1.c: 300: {
 12432                           ;i2c1.c: 303: SSP1CON2bits.RSEN = 1;
 12433  000F38  82C5               	bsf	4037,1,c	;volatile
 12434                           
 12435                           ;i2c1.c: 307: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 12436  000F3A  C040  F004         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
 12437  000F3E  C041  F005         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
 12438  000F42  C005  F004         	movff	??_I2C1_ISR+1,??_I2C1_ISR
 12439  000F46  6A05               	clrf	??_I2C1_ISR+1,c
 12440  000F48  0E06               	movlw	6
 12441  000F4A  1604               	andwf	??_I2C1_ISR,f,c
 12442  000F4C  0E00               	movlw	0
 12443  000F4E  1605               	andwf	??_I2C1_ISR+1,f,c
 12444  000F50  0EF0               	movlw	240
 12445  000F52  1004               	iorwf	??_I2C1_ISR,w,c
 12446  000F54  6E40               	movwf	I2C1_ISR@i2c_address,c
 12447  000F56  5005               	movf	??_I2C1_ISR+1,w,c
 12448  000F58  6E41               	movwf	I2C1_ISR@i2c_address+1,c
 12449                           
 12450                           ;i2c1.c: 310: i2c_address |= 0x0001;
 12451  000F5A  8040               	bsf	I2C1_ISR@i2c_address,0,c
 12452                           
 12453                           ;i2c1.c: 313: i2c_10bit_address_restart = 1;
 12454  000F5C  0E01               	movlw	1
 12455  000F5E  6E34               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
 12456                           
 12457                           ;i2c1.c: 316: i2c1_state = S_MASTER_SEND_ADDR;
 12458  000F60  0E02               	movlw	2
 12459  000F62  6E38               	movwf	_i2c1_state,c
 12460                           
 12461                           ;i2c1.c: 317: }
 12462                           ;i2c1.c: 319: break;
 12463  000F64  0012               	return	
 12464  000F66                     i2l6172:
 12465                           
 12466                           ;i2c1.c: 334: if(i2c_10bit_address_restart != 1)
 12467  000F66  0434               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
 12468  000F68  B4D8               	btfsc	status,2,c
 12469  000F6A  D01C               	goto	i2l76
 12470                           
 12471                           ;i2c1.c: 335: {
 12472                           ;i2c1.c: 337: i2c_address = p_i2c1_trb_current->address;
 12473  000F6C  C0D1  FFD9         	movff	_p_i2c1_trb_current,fsr2l
 12474  000F70  C0D2  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
 12475  000F74  CFDE F040          	movff	postinc2,I2C1_ISR@i2c_address
 12476  000F78  CFDD F041          	movff	postdec2,I2C1_ISR@i2c_address+1
 12477                           
 12478                           ;i2c1.c: 338: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
 12479  000F7C  0100               	movlb	0	; () banked
 12480  000F7E  EE20 F003          	lfsr	2,3
 12481  000F82  51D1               	movf	_p_i2c1_trb_current& (0+255),w,b
 12482  000F84  26D9               	addwf	fsr2l,f,c
 12483  000F86  51D2               	movf	(_p_i2c1_trb_current+1)& (0+255),w,b
 12484  000F88  22DA               	addwfc	fsr2h,f,c
 12485  000F8A  CFDE F0BF          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
 12486  000F8E  CFDD F0C0          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
 12487                           
 12488                           ; BSR set to: 0
 12489                           ;i2c1.c: 339: i2c_bytes_left = p_i2c1_trb_current->length;
 12490  000F92  0100               	movlb	0	; () banked
 12491  000F94  EE20 F002          	lfsr	2,2
 12492  000F98  51D1               	movf	_p_i2c1_trb_current& (0+255),w,b
 12493  000F9A  26D9               	addwf	fsr2l,f,c
 12494  000F9C  51D2               	movf	(_p_i2c1_trb_current+1)& (0+255),w,b
 12495  000F9E  22DA               	addwfc	fsr2h,f,c
 12496  000FA0  50DF               	movf	indf2,w,c
 12497  000FA2  6E35               	movwf	I2C1_ISR@i2c_bytes_left,c
 12498  000FA4                     i2l76:
 12499                           
 12500                           ;i2c1.c: 362: else
 12501                           ;i2c1.c: 363: {
 12502                           ;i2c1.c: 365: SSP1BUF = i2c_address;
 12503  000FA4  C040  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
 12504                           
 12505                           ;i2c1.c: 366: if(i2c_address & 0x01)
 12506  000FA8  A040               	btfss	I2C1_ISR@i2c_address,0,c
 12507  000FAA  D003               	goto	i2l6192
 12508                           
 12509                           ;i2c1.c: 367: {
 12510                           ;i2c1.c: 369: i2c1_state = S_MASTER_ACK_ADDR;
 12511  000FAC  0E05               	movlw	5
 12512  000FAE  6E38               	movwf	_i2c1_state,c
 12513                           
 12514                           ;i2c1.c: 370: }
 12515  000FB0  0012               	return	
 12516  000FB2                     i2l6192:
 12517                           
 12518                           ;i2c1.c: 371: else
 12519                           ;i2c1.c: 372: {
 12520                           ;i2c1.c: 374: i2c1_state = S_MASTER_SEND_DATA;
 12521  000FB2  0E03               	movlw	3
 12522  000FB4  6E38               	movwf	_i2c1_state,c
 12523                           
 12524                           ;i2c1.c: 375: }
 12525                           ;i2c1.c: 376: }
 12526                           ;i2c1.c: 377: break;
 12527  000FB6  0012               	return	
 12528  000FB8                     i2l82:
 12529                           
 12530                           ;i2c1.c: 382: if(SSP1CON2bits.ACKSTAT)
 12531  000FB8  ACC5               	btfss	4037,6,c	;volatile
 12532  000FBA  D007               	goto	i2l6200
 12533                           
 12534                           ;i2c1.c: 383: {
 12535                           ;i2c1.c: 385: i2c1_object.i2cErrors++;
 12536  000FBC  0100               	movlb	0	; () banked
 12537  000FBE  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 12538                           
 12539                           ; BSR set to: 0
 12540                           ;i2c1.c: 388: SSP1CON2bits.ACKSTAT = 0;
 12541  000FC0  9CC5               	bcf	4037,6,c	;volatile
 12542                           
 12543                           ; BSR set to: 0
 12544                           ;i2c1.c: 391: I2C1_Stop(I2C1_DATA_NO_ACK);
 12545  000FC2  0E05               	movlw	5
 12546  000FC4  EC41  F015         	call	_I2C1_Stop
 12547                           
 12548                           ;i2c1.c: 393: }
 12549  000FC8  0012               	return	
 12550  000FCA                     i2l6200:
 12551                           
 12552                           ;i2c1.c: 394: else
 12553                           ;i2c1.c: 395: {
 12554                           ;i2c1.c: 397: if(i2c_bytes_left-- == 0U)
 12555  000FCA  0635               	decf	I2C1_ISR@i2c_bytes_left,f,c
 12556  000FCC  2835               	incf	I2C1_ISR@i2c_bytes_left,w,c
 12557  000FCE  A4D8               	btfss	status,2,c
 12558  000FD0  D00F               	goto	i2l6210
 12559                           
 12560                           ;i2c1.c: 398: {
 12561                           ;i2c1.c: 402: p_i2c1_trb_current++;
 12562  000FD2  0E05               	movlw	5
 12563  000FD4  0100               	movlb	0	; () banked
 12564  000FD6  27D1               	addwf	_p_i2c1_trb_current& (0+255),f,b
 12565  000FD8  0E00               	movlw	0
 12566  000FDA  23D2               	addwfc	(_p_i2c1_trb_current+1)& (0+255),f,b
 12567                           
 12568                           ; BSR set to: 0
 12569                           ;i2c1.c: 405: if(--i2c1_trb_count == 0)
 12570  000FDC  2E39               	decfsz	_i2c1_trb_count,f,c
 12571  000FDE  D004               	goto	i2l86
 12572                           
 12573                           ; BSR set to: 0
 12574                           ;i2c1.c: 406: {
 12575                           ;i2c1.c: 407: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 12576  000FE0  0E00               	movlw	0
 12577  000FE2  EC41  F015         	call	_I2C1_Stop
 12578                           
 12579                           ;i2c1.c: 408: }
 12580  000FE6  0012               	return	
 12581  000FE8                     i2l86:
 12582                           
 12583                           ; BSR set to: 0
 12584                           ;i2c1.c: 409: else
 12585                           ;i2c1.c: 410: {
 12586                           ;i2c1.c: 417: SSP1CON2bits.RSEN = 1;
 12587  000FE8  82C5               	bsf	4037,1,c	;volatile
 12588                           
 12589                           ; BSR set to: 0
 12590                           ;i2c1.c: 420: i2c1_state = S_MASTER_SEND_ADDR;
 12591  000FEA  0E02               	movlw	2
 12592  000FEC  6E38               	movwf	_i2c1_state,c
 12593                           
 12594                           ; BSR set to: 0
 12595                           ;i2c1.c: 422: }
 12596                           ;i2c1.c: 423: }
 12597  000FEE  0012               	return	
 12598  000FF0                     i2l6210:
 12599                           
 12600                           ;i2c1.c: 424: else
 12601                           ;i2c1.c: 425: {
 12602                           ;i2c1.c: 427: SSP1BUF = *pi2c_buf_ptr++;
 12603  000FF0  C0BF  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 12604  000FF4  C0C0  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 12605  000FF8  50DF               	movf	indf2,w,c
 12606  000FFA  6EC9               	movwf	4041,c	;volatile
 12607  000FFC  0100               	movlb	0	; () banked
 12608  000FFE  4BBF               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 12609  001000  2BC0               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 12610                           
 12611                           ; BSR set to: 0
 12612                           ;i2c1.c: 428: }
 12613                           ;i2c1.c: 429: }
 12614                           ;i2c1.c: 430: break;
 12615                           
 12616                           ; BSR set to: 0
 12617  001002  0012               	return	
 12618  001004                     i2l89:
 12619                           
 12620                           ;i2c1.c: 435: if(SSP1CON2bits.ACKSTAT)
 12621  001004  ACC5               	btfss	4037,6,c	;volatile
 12622  001006  D007               	goto	i2l90
 12623                           
 12624                           ;i2c1.c: 436: {
 12625                           ;i2c1.c: 439: i2c1_object.i2cErrors++;
 12626  001008  0100               	movlb	0	; () banked
 12627  00100A  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 12628                           
 12629                           ; BSR set to: 0
 12630                           ;i2c1.c: 442: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 12631  00100C  0E04               	movlw	4
 12632  00100E  EC41  F015         	call	_I2C1_Stop
 12633                           
 12634                           ;i2c1.c: 445: SSP1CON2bits.ACKSTAT = 0;
 12635  001012  9CC5               	bcf	4037,6,c	;volatile
 12636                           
 12637                           ;i2c1.c: 446: }
 12638  001014  0012               	return	
 12639  001016                     i2l90:
 12640                           
 12641                           ;i2c1.c: 447: else
 12642                           ;i2c1.c: 448: {
 12643                           ;i2c1.c: 449: SSP1CON2bits.RCEN = 1;
 12644  001016  86C5               	bsf	4037,3,c	;volatile
 12645                           
 12646                           ;i2c1.c: 450: i2c1_state = S_MASTER_ACK_RCV_DATA;
 12647  001018  0E08               	movlw	8
 12648  00101A  6E38               	movwf	_i2c1_state,c
 12649                           
 12650                           ;i2c1.c: 451: }
 12651                           ;i2c1.c: 452: break;
 12652  00101C  0012               	return	
 12653  00101E                     i2l6222:
 12654                           
 12655                           ;i2c1.c: 459: i2c1_state = S_MASTER_ACK_RCV_DATA;
 12656  00101E  0E08               	movlw	8
 12657  001020  6E38               	movwf	_i2c1_state,c
 12658                           
 12659                           ;i2c1.c: 462: SSP1CON2bits.RCEN = 1;
 12660  001022  86C5               	bsf	4037,3,c	;volatile
 12661                           
 12662                           ;i2c1.c: 464: break;
 12663  001024  0012               	return	
 12664  001026                     i2l6226:
 12665                           
 12666                           ;i2c1.c: 469: *pi2c_buf_ptr++ = SSP1BUF;
 12667  001026  C0BF  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 12668  00102A  C0C0  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 12669  00102E  CFC9 FFDF          	movff	4041,indf2	;volatile
 12670  001032  0100               	movlb	0	; () banked
 12671  001034  4BBF               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 12672  001036  2BC0               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 12673                           
 12674                           ; BSR set to: 0
 12675                           ;i2c1.c: 472: if(--i2c_bytes_left)
 12676  001038  0E01               	movlw	1
 12677  00103A  5E35               	subwf	I2C1_ISR@i2c_bytes_left,f,c
 12678  00103C  B4D8               	btfsc	status,2,c
 12679  00103E  D004               	goto	i2l94
 12680                           
 12681                           ; BSR set to: 0
 12682                           ;i2c1.c: 473: {
 12683                           ;i2c1.c: 479: SSP1CON2bits.ACKDT = 0;
 12684  001040  9AC5               	bcf	4037,5,c	;volatile
 12685                           
 12686                           ; BSR set to: 0
 12687                           ;i2c1.c: 482: i2c1_state = S_MASTER_RCV_DATA;
 12688  001042  0E06               	movlw	6
 12689  001044  6E38               	movwf	_i2c1_state,c
 12690                           
 12691                           ;i2c1.c: 483: }
 12692  001046  D003               	goto	i2l6238
 12693  001048                     i2l94:
 12694                           
 12695                           ; BSR set to: 0
 12696                           ;i2c1.c: 484: else
 12697                           ;i2c1.c: 485: {
 12698                           ;i2c1.c: 489: SSP1CON2bits.ACKDT = 1;
 12699  001048  8AC5               	bsf	4037,5,c	;volatile
 12700                           
 12701                           ; BSR set to: 0
 12702                           ;i2c1.c: 491: I2C1_FunctionComplete();
 12703  00104A  ECDF  F016         	call	_I2C1_FunctionComplete	;wreg free
 12704  00104E                     i2l6238:
 12705                           
 12706                           ;i2c1.c: 492: }
 12707                           ;i2c1.c: 495: SSP1CON2bits.ACKEN = 1;
 12708  00104E  88C5               	bsf	4037,4,c	;volatile
 12709                           
 12710                           ;i2c1.c: 496: break;
 12711  001050  0012               	return	
 12712  001052                     i2l6240:
 12713                           
 12714                           ;i2c1.c: 499: case S_MASTER_SEND_STOP:
 12715                           ;i2c1.c: 502: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 12716  001052  0E00               	movlw	0
 12717  001054  EC41  F015         	call	_I2C1_Stop
 12718                           
 12719                           ;i2c1.c: 503: break;
 12720  001058  0012               	return	
 12721  00105A                     i2l6242:
 12722                           
 12723                           ;i2c1.c: 509: i2c1_object.i2cErrors++;
 12724  00105A  0100               	movlb	0	; () banked
 12725  00105C  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 12726                           
 12727                           ; BSR set to: 0
 12728                           ;i2c1.c: 510: I2C1_Stop(I2C1_LOST_STATE);
 12729  00105E  0E06               	movlw	6
 12730  001060  EC41  F015         	call	_I2C1_Stop
 12731                           
 12732                           ;i2c1.c: 513: }
 12733                           
 12734                           ;i2c1.c: 511: break;
 12735  001064  0012               	return	
 12736  001066                     i2l6248:
 12737  001066  5038               	movf	_i2c1_state,w,c
 12738                           
 12739                           ; Switch size 1, requested type "space"
 12740                           ; Number of cases is 11, Range of values is 0 to 11
 12741                           ; switch strategies available:
 12742                           ; Name         Instructions Cycles
 12743                           ; simple_byte           34    18 (average)
 12744                           ;	Chosen strategy is simple_byte
 12745  001068  0A00               	xorlw	0	; case 0
 12746  00106A  B4D8               	btfsc	status,2,c
 12747  00106C  D703               	goto	i2l60
 12748  00106E  0A01               	xorlw	1	; case 1
 12749  001070  B4D8               	btfsc	status,2,c
 12750  001072  D73F               	goto	i2l65
 12751  001074  0A03               	xorlw	3	; case 2
 12752  001076  B4D8               	btfsc	status,2,c
 12753  001078  D776               	goto	i2l6172
 12754  00107A  0A01               	xorlw	1	; case 3
 12755  00107C  B4D8               	btfsc	status,2,c
 12756  00107E  D79C               	goto	i2l82
 12757  001080  0A07               	xorlw	7	; case 4
 12758  001082  B4D8               	btfsc	status,2,c
 12759  001084  D7E6               	goto	i2l6240
 12760  001086  0A01               	xorlw	1	; case 5
 12761  001088  B4D8               	btfsc	status,2,c
 12762  00108A  D7BC               	goto	i2l89
 12763  00108C  0A03               	xorlw	3	; case 6
 12764  00108E  B4D8               	btfsc	status,2,c
 12765  001090  D7C6               	goto	i2l6222
 12766  001092  0A01               	xorlw	1	; case 7
 12767  001094  B4D8               	btfsc	status,2,c
 12768  001096  D7DD               	goto	i2l6240
 12769  001098  0A0F               	xorlw	15	; case 8
 12770  00109A  B4D8               	btfsc	status,2,c
 12771  00109C  D7C4               	goto	i2l6226
 12772  00109E  0A02               	xorlw	2	; case 10
 12773  0010A0  B4D8               	btfsc	status,2,c
 12774  0010A2  D72B               	goto	i2l66
 12775  0010A4  0A01               	xorlw	1	; case 11
 12776  0010A6  B4D8               	btfsc	status,2,c
 12777  0010A8  D73F               	goto	i2l71
 12778  0010AA  D7D7               	goto	i2l6242
 12779  0010AC                     __end_of_I2C1_ISR:
 12780                           	opt stack 0
 12781                           tosu	equ	0xFFF
 12782                           tosh	equ	0xFFE
 12783                           tosl	equ	0xFFD
 12784                           pclatu	equ	0xFFB
 12785                           pclath	equ	0xFFA
 12786                           tblptru	equ	0xFF8
 12787                           tblptrh	equ	0xFF7
 12788                           tblptrl	equ	0xFF6
 12789                           tablat	equ	0xFF5
 12790                           prodh	equ	0xFF4
 12791                           prodl	equ	0xFF3
 12792                           intcon	equ	0xFF2
 12793                           intcon2	equ	0xFF1
 12794                           postinc0	equ	0xFEE
 12795                           fsr0h	equ	0xFEA
 12796                           fsr0l	equ	0xFE9
 12797                           wreg	equ	0xFE8
 12798                           fsr1h	equ	0xFE2
 12799                           fsr1l	equ	0xFE1
 12800                           indf2	equ	0xFDF
 12801                           postinc2	equ	0xFDE
 12802                           postdec2	equ	0xFDD
 12803                           plusw2	equ	0xFDB
 12804                           fsr2h	equ	0xFDA
 12805                           fsr2l	equ	0xFD9
 12806                           status	equ	0xFD8
 12807                           
 12808 ;; *************** function _I2C1_Stop *****************
 12809 ;; Defined at:
 12810 ;;		line 534 in file "mcc_generated_files/i2c1.c"
 12811 ;; Parameters:    Size  Location     Type
 12812 ;;  completion_c    1    wreg     enum E7739
 12813 ;; Auto vars:     Size  Location     Type
 12814 ;;  completion_c    1    2[COMRAM] enum E7739
 12815 ;; Return value:  Size  Location     Type
 12816 ;;                  1    wreg      void 
 12817 ;; Registers used:
 12818 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12819 ;; Tracked objects:
 12820 ;;		On entry : 0/0
 12821 ;;		On exit  : 0/0
 12822 ;;		Unchanged: 0/0
 12823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12824 ;;      Params:         0       0       0       0       0       0       0
 12825 ;;      Locals:         1       0       0       0       0       0       0
 12826 ;;      Temps:          2       0       0       0       0       0       0
 12827 ;;      Totals:         3       0       0       0       0       0       0
 12828 ;;Total ram usage:        3 bytes
 12829 ;; Hardware stack levels used:    1
 12830 ;; This function calls:
 12831 ;;		Nothing
 12832 ;; This function is called by:
 12833 ;;		_I2C1_ISR
 12834 ;; This function uses a non-reentrant model
 12835 ;;
 12836                           
 12837                           	psect	text68
 12838  002A82                     __ptext68:
 12839                           	opt stack 0
 12840  002A82                     _I2C1_Stop:
 12841                           	opt stack 22
 12842                           
 12843                           ;incstack = 0
 12844                           ;I2C1_Stop@completion_code stored from wreg
 12845  002A82  6E03               	movwf	I2C1_Stop@completion_code,c
 12846                           
 12847                           ;i2c1.c: 537: SSP1CON2bits.PEN = 1;
 12848  002A84  84C5               	bsf	4037,2,c	;volatile
 12849                           
 12850                           ;i2c1.c: 540: if (p_i2c1_current->pTrFlag != (0))
 12851  002A86  0100               	movlb	0	; () banked
 12852  002A88  EE20 F003          	lfsr	2,3
 12853  002A8C  51CF               	movf	_p_i2c1_current& (0+255),w,b
 12854  002A8E  26D9               	addwf	fsr2l,f,c
 12855  002A90  51D0               	movf	(_p_i2c1_current+1)& (0+255),w,b
 12856  002A92  22DA               	addwfc	fsr2h,f,c
 12857  002A94  50DE               	movf	postinc2,w,c
 12858  002A96  10DE               	iorwf	postinc2,w,c
 12859  002A98  B4D8               	btfsc	status,2,c
 12860  002A9A  D011               	goto	i2l5732
 12861                           
 12862                           ; BSR set to: 0
 12863                           ;i2c1.c: 541: {
 12864                           ;i2c1.c: 543: *(p_i2c1_current->pTrFlag) = completion_code;
 12865  002A9C  0100               	movlb	0	; () banked
 12866  002A9E  EE20 F003          	lfsr	2,3
 12867  002AA2  51CF               	movf	_p_i2c1_current& (0+255),w,b
 12868  002AA4  26D9               	addwf	fsr2l,f,c
 12869  002AA6  51D0               	movf	(_p_i2c1_current+1)& (0+255),w,b
 12870  002AA8  22DA               	addwfc	fsr2h,f,c
 12871  002AAA  CFDE F001          	movff	postinc2,??_I2C1_Stop
 12872  002AAE  CFDD F002          	movff	postdec2,??_I2C1_Stop+1
 12873  002AB2  C001  FFD9         	movff	??_I2C1_Stop,fsr2l
 12874  002AB6  C002  FFDA         	movff	??_I2C1_Stop+1,fsr2h
 12875  002ABA  C003  FFDF         	movff	I2C1_Stop@completion_code,indf2
 12876  002ABE                     i2l5732:
 12877                           
 12878                           ; BSR set to: 0
 12879                           ;i2c1.c: 544: }
 12880                           ;i2c1.c: 547: i2c1_state = S_MASTER_IDLE;
 12881  002ABE  0E00               	movlw	0
 12882  002AC0  6E38               	movwf	_i2c1_state,c
 12883                           
 12884                           ; BSR set to: 0
 12885  002AC2  0012               	return		;funcret
 12886  002AC4                     __end_of_I2C1_Stop:
 12887                           	opt stack 0
 12888                           tosu	equ	0xFFF
 12889                           tosh	equ	0xFFE
 12890                           tosl	equ	0xFFD
 12891                           pclatu	equ	0xFFB
 12892                           pclath	equ	0xFFA
 12893                           tblptru	equ	0xFF8
 12894                           tblptrh	equ	0xFF7
 12895                           tblptrl	equ	0xFF6
 12896                           tablat	equ	0xFF5
 12897                           prodh	equ	0xFF4
 12898                           prodl	equ	0xFF3
 12899                           intcon	equ	0xFF2
 12900                           intcon2	equ	0xFF1
 12901                           postinc0	equ	0xFEE
 12902                           fsr0h	equ	0xFEA
 12903                           fsr0l	equ	0xFE9
 12904                           wreg	equ	0xFE8
 12905                           fsr1h	equ	0xFE2
 12906                           fsr1l	equ	0xFE1
 12907                           indf2	equ	0xFDF
 12908                           postinc2	equ	0xFDE
 12909                           postdec2	equ	0xFDD
 12910                           plusw2	equ	0xFDB
 12911                           fsr2h	equ	0xFDA
 12912                           fsr2l	equ	0xFD9
 12913                           status	equ	0xFD8
 12914                           
 12915 ;; *************** function _I2C1_FunctionComplete *****************
 12916 ;; Defined at:
 12917 ;;		line 516 in file "mcc_generated_files/i2c1.c"
 12918 ;; Parameters:    Size  Location     Type
 12919 ;;		None
 12920 ;; Auto vars:     Size  Location     Type
 12921 ;;		None
 12922 ;; Return value:  Size  Location     Type
 12923 ;;                  1    wreg      void 
 12924 ;; Registers used:
 12925 ;;		wreg, status,2, status,0
 12926 ;; Tracked objects:
 12927 ;;		On entry : 0/0
 12928 ;;		On exit  : 0/0
 12929 ;;		Unchanged: 0/0
 12930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12931 ;;      Params:         0       0       0       0       0       0       0
 12932 ;;      Locals:         0       0       0       0       0       0       0
 12933 ;;      Temps:          0       0       0       0       0       0       0
 12934 ;;      Totals:         0       0       0       0       0       0       0
 12935 ;;Total ram usage:        0 bytes
 12936 ;; Hardware stack levels used:    1
 12937 ;; This function calls:
 12938 ;;		Nothing
 12939 ;; This function is called by:
 12940 ;;		_I2C1_ISR
 12941 ;; This function uses a non-reentrant model
 12942 ;;
 12943                           
 12944                           	psect	text69
 12945  002DBE                     __ptext69:
 12946                           	opt stack 0
 12947  002DBE                     _I2C1_FunctionComplete:
 12948                           	opt stack 22
 12949                           
 12950                           ;i2c1.c: 520: p_i2c1_trb_current++;
 12951                           
 12952                           ; BSR set to: 0
 12953                           ;incstack = 0
 12954  002DBE  0E05               	movlw	5
 12955  002DC0  0100               	movlb	0	; () banked
 12956  002DC2  27D1               	addwf	_p_i2c1_trb_current& (0+255),f,b
 12957  002DC4  0E00               	movlw	0
 12958  002DC6  23D2               	addwfc	(_p_i2c1_trb_current+1)& (0+255),f,b
 12959                           
 12960                           ; BSR set to: 0
 12961                           ;i2c1.c: 523: if(--i2c1_trb_count == 0)
 12962  002DC8  2E39               	decfsz	_i2c1_trb_count,f,c
 12963  002DCA  D003               	goto	i2l5740
 12964                           
 12965                           ; BSR set to: 0
 12966                           ;i2c1.c: 524: {
 12967                           ;i2c1.c: 525: i2c1_state = S_MASTER_SEND_STOP;
 12968  002DCC  0E04               	movlw	4
 12969  002DCE  6E38               	movwf	_i2c1_state,c
 12970                           
 12971                           ;i2c1.c: 526: }
 12972  002DD0  0012               	return	
 12973  002DD2                     i2l5740:
 12974                           
 12975                           ; BSR set to: 0
 12976                           ;i2c1.c: 527: else
 12977                           ;i2c1.c: 528: {
 12978                           ;i2c1.c: 529: i2c1_state = S_MASTER_RESTART;
 12979  002DD2  0E01               	movlw	1
 12980  002DD4  6E38               	movwf	_i2c1_state,c
 12981  002DD6  0012               	return	
 12982  002DD8                     __end_of_I2C1_FunctionComplete:
 12983                           	opt stack 0
 12984                           tosu	equ	0xFFF
 12985                           tosh	equ	0xFFE
 12986                           tosl	equ	0xFFD
 12987                           pclatu	equ	0xFFB
 12988                           pclath	equ	0xFFA
 12989                           tblptru	equ	0xFF8
 12990                           tblptrh	equ	0xFF7
 12991                           tblptrl	equ	0xFF6
 12992                           tablat	equ	0xFF5
 12993                           prodh	equ	0xFF4
 12994                           prodl	equ	0xFF3
 12995                           intcon	equ	0xFF2
 12996                           intcon2	equ	0xFF1
 12997                           postinc0	equ	0xFEE
 12998                           fsr0h	equ	0xFEA
 12999                           fsr0l	equ	0xFE9
 13000                           wreg	equ	0xFE8
 13001                           fsr1h	equ	0xFE2
 13002                           fsr1l	equ	0xFE1
 13003                           indf2	equ	0xFDF
 13004                           postinc2	equ	0xFDE
 13005                           postdec2	equ	0xFDD
 13006                           plusw2	equ	0xFDB
 13007                           fsr2h	equ	0xFDA
 13008                           fsr2l	equ	0xFD9
 13009                           status	equ	0xFD8
 13010                           
 13011 ;; *************** function _I2C1_BusCollisionISR *****************
 13012 ;; Defined at:
 13013 ;;		line 681 in file "mcc_generated_files/i2c1.c"
 13014 ;; Parameters:    Size  Location     Type
 13015 ;;		None
 13016 ;; Auto vars:     Size  Location     Type
 13017 ;;		None
 13018 ;; Return value:  Size  Location     Type
 13019 ;;                  1    wreg      void 
 13020 ;; Registers used:
 13021 ;;		None
 13022 ;; Tracked objects:
 13023 ;;		On entry : 0/0
 13024 ;;		On exit  : 0/0
 13025 ;;		Unchanged: 0/0
 13026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13027 ;;      Params:         0       0       0       0       0       0       0
 13028 ;;      Locals:         0       0       0       0       0       0       0
 13029 ;;      Temps:          0       0       0       0       0       0       0
 13030 ;;      Totals:         0       0       0       0       0       0       0
 13031 ;;Total ram usage:        0 bytes
 13032 ;; Hardware stack levels used:    1
 13033 ;; This function calls:
 13034 ;;		Nothing
 13035 ;; This function is called by:
 13036 ;;		_INTERRUPT_InterruptManager
 13037 ;; This function uses a non-reentrant model
 13038 ;;
 13039                           
 13040                           	psect	text70
 13041  002EA2                     __ptext70:
 13042                           	opt stack 0
 13043  002EA2                     _I2C1_BusCollisionISR:
 13044                           	opt stack 23
 13045                           
 13046                           ; BSR set to: 0
 13047                           ;incstack = 0
 13048  002EA2  0012               	return		;funcret
 13049  002EA4                     __end_of_I2C1_BusCollisionISR:
 13050                           	opt stack 0
 13051                           tosu	equ	0xFFF
 13052                           tosh	equ	0xFFE
 13053                           tosl	equ	0xFFD
 13054                           pclatu	equ	0xFFB
 13055                           pclath	equ	0xFFA
 13056                           tblptru	equ	0xFF8
 13057                           tblptrh	equ	0xFF7
 13058                           tblptrl	equ	0xFF6
 13059                           tablat	equ	0xFF5
 13060                           prodh	equ	0xFF4
 13061                           prodl	equ	0xFF3
 13062                           intcon	equ	0xFF2
 13063                           intcon2	equ	0xFF1
 13064                           postinc0	equ	0xFEE
 13065                           fsr0h	equ	0xFEA
 13066                           fsr0l	equ	0xFE9
 13067                           wreg	equ	0xFE8
 13068                           fsr1h	equ	0xFE2
 13069                           fsr1l	equ	0xFE1
 13070                           indf2	equ	0xFDF
 13071                           postinc2	equ	0xFDE
 13072                           postdec2	equ	0xFDD
 13073                           plusw2	equ	0xFDB
 13074                           fsr2h	equ	0xFDA
 13075                           fsr2l	equ	0xFD9
 13076                           status	equ	0xFD8
 13077                           
 13078 ;; *************** function _EUSART1_Transmit_ISR *****************
 13079 ;; Defined at:
 13080 ;;		line 150 in file "UART.c"
 13081 ;; Parameters:    Size  Location     Type
 13082 ;;		None
 13083 ;; Auto vars:     Size  Location     Type
 13084 ;;		None
 13085 ;; Return value:  Size  Location     Type
 13086 ;;                  1    wreg      void 
 13087 ;; Registers used:
 13088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13089 ;; Tracked objects:
 13090 ;;		On entry : 0/0
 13091 ;;		On exit  : 0/0
 13092 ;;		Unchanged: 0/0
 13093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13094 ;;      Params:         0       0       0       0       0       0       0
 13095 ;;      Locals:         0       0       0       0       0       0       0
 13096 ;;      Temps:          0       0       0       0       0       0       0
 13097 ;;      Totals:         0       0       0       0       0       0       0
 13098 ;;Total ram usage:        0 bytes
 13099 ;; Hardware stack levels used:    1
 13100 ;; Hardware stack levels required when called:    2
 13101 ;; This function calls:
 13102 ;;		i2_UART_buff_get
 13103 ;;		i2_UART_buff_size
 13104 ;; This function is called by:
 13105 ;;		_INTERRUPT_InterruptManager
 13106 ;; This function uses a non-reentrant model
 13107 ;;
 13108                           
 13109                           	psect	text71
 13110  002BAA                     __ptext71:
 13111                           	opt stack 0
 13112  002BAA                     _EUSART1_Transmit_ISR:
 13113                           	opt stack 21
 13114                           
 13115                           ;UART.c: 152: if (UART_buff_size(&output_buffer) > 0) {
 13116                           
 13117                           ;incstack = 0
 13118  002BAA  0E00               	movlw	low _output_buffer
 13119  002BAC  6E01               	movwf	i2UART_buff_size@_this,c
 13120  002BAE  0E05               	movlw	high _output_buffer
 13121  002BB0  6E02               	movwf	i2UART_buff_size@_this+1,c
 13122  002BB2  EC0E  F017         	call	i2_UART_buff_size	;wreg free
 13123  002BB6  BE02               	btfsc	?i2_UART_buff_size+1,7,c
 13124  002BB8  D00D               	goto	i2l4698
 13125  002BBA  5002               	movf	?i2_UART_buff_size+1,w,c
 13126  002BBC  E103               	bnz	i2u453_40
 13127  002BBE  0401               	decf	?i2_UART_buff_size,w,c
 13128  002BC0  A0D8               	btfss	status,0,c
 13129  002BC2  D008               	goto	i2l4698
 13130  002BC4                     i2u453_40:
 13131                           
 13132                           ;UART.c: 153: TXREG1 = UART_buff_get(&output_buffer);
 13133  002BC4  0E00               	movlw	low _output_buffer
 13134  002BC6  6E07               	movwf	i2UART_buff_get@_this,c
 13135  002BC8  0E05               	movlw	high _output_buffer
 13136  002BCA  6E08               	movwf	i2UART_buff_get@_this+1,c
 13137  002BCC  EC14  F012         	call	i2_UART_buff_get	;wreg free
 13138  002BD0  6EAD               	movwf	4013,c	;volatile
 13139                           
 13140                           ;UART.c: 154: } else {
 13141  002BD2  0012               	return	
 13142  002BD4                     i2l4698:
 13143                           
 13144                           ;UART.c: 155: Transmit_stall = 1;
 13145  002BD4  0E01               	movlw	1
 13146  002BD6  6E44               	movwf	_Transmit_stall,c
 13147                           
 13148                           ;UART.c: 156: PIE1bits.TX1IE = 0;
 13149  002BD8  989D               	bcf	3997,4,c	;volatile
 13150  002BDA  0012               	return	
 13151  002BDC                     __end_of_EUSART1_Transmit_ISR:
 13152                           	opt stack 0
 13153                           tosu	equ	0xFFF
 13154                           tosh	equ	0xFFE
 13155                           tosl	equ	0xFFD
 13156                           pclatu	equ	0xFFB
 13157                           pclath	equ	0xFFA
 13158                           tblptru	equ	0xFF8
 13159                           tblptrh	equ	0xFF7
 13160                           tblptrl	equ	0xFF6
 13161                           tablat	equ	0xFF5
 13162                           prodh	equ	0xFF4
 13163                           prodl	equ	0xFF3
 13164                           intcon	equ	0xFF2
 13165                           intcon2	equ	0xFF1
 13166                           postinc0	equ	0xFEE
 13167                           fsr0h	equ	0xFEA
 13168                           fsr0l	equ	0xFE9
 13169                           wreg	equ	0xFE8
 13170                           fsr1h	equ	0xFE2
 13171                           fsr1l	equ	0xFE1
 13172                           indf2	equ	0xFDF
 13173                           postinc2	equ	0xFDE
 13174                           postdec2	equ	0xFDD
 13175                           plusw2	equ	0xFDB
 13176                           fsr2h	equ	0xFDA
 13177                           fsr2l	equ	0xFD9
 13178                           status	equ	0xFD8
 13179                           
 13180 ;; *************** function i2_UART_buff_size *****************
 13181 ;; Defined at:
 13182 ;;		line 102 in file "UART.c"
 13183 ;; Parameters:    Size  Location     Type
 13184 ;;  _this           2    0[COMRAM] PTR struct UART_ring_buf
 13185 ;;		 -> output_buffer(206), input_buffer(206), 
 13186 ;; Auto vars:     Size  Location     Type
 13187 ;;		None
 13188 ;; Return value:  Size  Location     Type
 13189 ;;                  2    0[COMRAM] int 
 13190 ;; Registers used:
 13191 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13192 ;; Tracked objects:
 13193 ;;		On entry : 0/0
 13194 ;;		On exit  : 0/0
 13195 ;;		Unchanged: 0/0
 13196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13197 ;;      Params:         2       0       0       0       0       0       0
 13198 ;;      Locals:         0       0       0       0       0       0       0
 13199 ;;      Temps:          0       0       0       0       0       0       0
 13200 ;;      Totals:         2       0       0       0       0       0       0
 13201 ;;Total ram usage:        2 bytes
 13202 ;; Hardware stack levels used:    1
 13203 ;; This function calls:
 13204 ;;		Nothing
 13205 ;; This function is called by:
 13206 ;;		_EUSART1_Transmit_ISR
 13207 ;; This function uses a non-reentrant model
 13208 ;;
 13209                           
 13210                           	psect	text72
 13211  002E1C                     __ptext72:
 13212                           	opt stack 0
 13213  002E1C                     i2_UART_buff_size:
 13214                           	opt stack 22
 13215                           
 13216                           ;UART.c: 103: return (_this->count);
 13217                           
 13218                           ;incstack = 0
 13219  002E1C  EE20 F0CC          	lfsr	2,204
 13220  002E20  5001               	movf	i2UART_buff_size@_this,w,c
 13221  002E22  26D9               	addwf	fsr2l,f,c
 13222  002E24  5002               	movf	i2UART_buff_size@_this+1,w,c
 13223  002E26  22DA               	addwfc	fsr2h,f,c
 13224  002E28  CFDE F001          	movff	postinc2,?i2_UART_buff_size
 13225  002E2C  CFDD F002          	movff	postdec2,?i2_UART_buff_size+1
 13226  002E30  0012               	return	
 13227  002E32                     __end_ofi2_UART_buff_size:
 13228                           	opt stack 0
 13229                           tosu	equ	0xFFF
 13230                           tosh	equ	0xFFE
 13231                           tosl	equ	0xFFD
 13232                           pclatu	equ	0xFFB
 13233                           pclath	equ	0xFFA
 13234                           tblptru	equ	0xFF8
 13235                           tblptrh	equ	0xFF7
 13236                           tblptrl	equ	0xFF6
 13237                           tablat	equ	0xFF5
 13238                           prodh	equ	0xFF4
 13239                           prodl	equ	0xFF3
 13240                           intcon	equ	0xFF2
 13241                           intcon2	equ	0xFF1
 13242                           postinc0	equ	0xFEE
 13243                           fsr0h	equ	0xFEA
 13244                           fsr0l	equ	0xFE9
 13245                           wreg	equ	0xFE8
 13246                           fsr1h	equ	0xFE2
 13247                           fsr1l	equ	0xFE1
 13248                           indf2	equ	0xFDF
 13249                           postinc2	equ	0xFDE
 13250                           postdec2	equ	0xFDD
 13251                           plusw2	equ	0xFDB
 13252                           fsr2h	equ	0xFDA
 13253                           fsr2l	equ	0xFD9
 13254                           status	equ	0xFD8
 13255                           
 13256 ;; *************** function i2_UART_buff_get *****************
 13257 ;; Defined at:
 13258 ;;		line 81 in file "UART.c"
 13259 ;; Parameters:    Size  Location     Type
 13260 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 13261 ;;		 -> output_buffer(206), input_buffer(206), 
 13262 ;; Auto vars:     Size  Location     Type
 13263 ;;  UART_buff_ge    1   10[COMRAM] unsigned char 
 13264 ;; Return value:  Size  Location     Type
 13265 ;;                  1    wreg      unsigned char 
 13266 ;; Registers used:
 13267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13268 ;; Tracked objects:
 13269 ;;		On entry : 0/0
 13270 ;;		On exit  : 0/0
 13271 ;;		Unchanged: 0/0
 13272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13273 ;;      Params:         2       0       0       0       0       0       0
 13274 ;;      Locals:         1       0       0       0       0       0       0
 13275 ;;      Temps:          2       0       0       0       0       0       0
 13276 ;;      Totals:         5       0       0       0       0       0       0
 13277 ;;Total ram usage:        5 bytes
 13278 ;; Hardware stack levels used:    1
 13279 ;; Hardware stack levels required when called:    1
 13280 ;; This function calls:
 13281 ;;		i2_UART_buff_modulo_inc
 13282 ;; This function is called by:
 13283 ;;		_EUSART1_Transmit_ISR
 13284 ;; This function uses a non-reentrant model
 13285 ;;
 13286                           
 13287                           	psect	text73
 13288  002428                     __ptext73:
 13289                           	opt stack 0
 13290  002428                     i2_UART_buff_get:
 13291                           	opt stack 21
 13292                           
 13293                           ;UART.c: 82: unsigned char c;
 13294                           ;UART.c: 83: if (_this->count > 0) {
 13295                           
 13296                           ;incstack = 0
 13297  002428  EE20 F0CC          	lfsr	2,204
 13298  00242C  5007               	movf	i2UART_buff_get@_this,w,c
 13299  00242E  26D9               	addwf	fsr2l,f,c
 13300  002430  5008               	movf	i2UART_buff_get@_this+1,w,c
 13301  002432  22DA               	addwfc	fsr2h,f,c
 13302  002434  0E01               	movlw	1
 13303  002436  BEDB               	btfsc	plusw2,7,c
 13304  002438  D03C               	goto	i2l4522
 13305  00243A  0E01               	movlw	1
 13306  00243C  50DB               	movf	plusw2,w,c
 13307  00243E  E103               	bnz	i2u433_40
 13308  002440  04DE               	decf	postinc2,w,c
 13309  002442  A0D8               	btfss	status,0,c
 13310  002444  D036               	goto	i2l4522
 13311  002446                     i2u433_40:
 13312                           
 13313                           ;UART.c: 84: c = _this->buf[_this->tail];
 13314  002446  EE20 F0CA          	lfsr	2,202
 13315  00244A  5007               	movf	i2UART_buff_get@_this,w,c
 13316  00244C  26D9               	addwf	fsr2l,f,c
 13317  00244E  5008               	movf	i2UART_buff_get@_this+1,w,c
 13318  002450  22DA               	addwfc	fsr2h,f,c
 13319  002452  CFDE F009          	movff	postinc2,??i2_UART_buff_get
 13320  002456  CFDD F00A          	movff	postdec2,??i2_UART_buff_get+1
 13321  00245A  5009               	movf	??i2_UART_buff_get,w,c
 13322  00245C  2407               	addwf	i2UART_buff_get@_this,w,c
 13323  00245E  6ED9               	movwf	fsr2l,c
 13324  002460  500A               	movf	??i2_UART_buff_get+1,w,c
 13325  002462  2008               	addwfc	i2UART_buff_get@_this+1,w,c
 13326  002464  6EDA               	movwf	fsr2h,c
 13327  002466  50DF               	movf	indf2,w,c
 13328  002468  6E0B               	movwf	i2UART_buff_get@c,c
 13329                           
 13330                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 13331  00246A  EE20 F0CA          	lfsr	2,202
 13332  00246E  5007               	movf	i2UART_buff_get@_this,w,c
 13333  002470  26D9               	addwf	fsr2l,f,c
 13334  002472  5008               	movf	i2UART_buff_get@_this+1,w,c
 13335  002474  22DA               	addwfc	fsr2h,f,c
 13336  002476  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 13337  00247A  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 13338  00247E  0E00               	movlw	0
 13339  002480  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 13340  002482  0EC8               	movlw	200
 13341  002484  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 13342  002486  EC45  F016         	call	i2_UART_buff_modulo_inc	;wreg free
 13343  00248A  EE20 F0CA          	lfsr	2,202
 13344  00248E  5007               	movf	i2UART_buff_get@_this,w,c
 13345  002490  26D9               	addwf	fsr2l,f,c
 13346  002492  5008               	movf	i2UART_buff_get@_this+1,w,c
 13347  002494  22DA               	addwfc	fsr2h,f,c
 13348  002496  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 13349  00249A  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 13350                           
 13351                           ;UART.c: 86: --_this->count;
 13352  00249E  EE20 F0CC          	lfsr	2,204
 13353  0024A2  5007               	movf	i2UART_buff_get@_this,w,c
 13354  0024A4  26D9               	addwf	fsr2l,f,c
 13355  0024A6  5008               	movf	i2UART_buff_get@_this+1,w,c
 13356  0024A8  22DA               	addwfc	fsr2h,f,c
 13357  0024AA  06DE               	decf	postinc2,f,c
 13358  0024AC  0E00               	movlw	0
 13359  0024AE  5ADD               	subwfb	postdec2,f,c
 13360                           
 13361                           ;UART.c: 87: } else {
 13362  0024B0  D002               	goto	i2l987
 13363  0024B2                     i2l4522:
 13364                           
 13365                           ;UART.c: 88: c = 0;
 13366  0024B2  0E00               	movlw	0
 13367  0024B4  6E0B               	movwf	i2UART_buff_get@c,c
 13368  0024B6                     i2l987:
 13369                           
 13370                           ;UART.c: 89: }
 13371                           ;UART.c: 90: return (c);
 13372  0024B6  500B               	movf	i2UART_buff_get@c,w,c
 13373  0024B8  0012               	return	
 13374  0024BA                     __end_ofi2_UART_buff_get:
 13375                           	opt stack 0
 13376                           tosu	equ	0xFFF
 13377                           tosh	equ	0xFFE
 13378                           tosl	equ	0xFFD
 13379                           pclatu	equ	0xFFB
 13380                           pclath	equ	0xFFA
 13381                           tblptru	equ	0xFF8
 13382                           tblptrh	equ	0xFF7
 13383                           tblptrl	equ	0xFF6
 13384                           tablat	equ	0xFF5
 13385                           prodh	equ	0xFF4
 13386                           prodl	equ	0xFF3
 13387                           intcon	equ	0xFF2
 13388                           intcon2	equ	0xFF1
 13389                           postinc0	equ	0xFEE
 13390                           fsr0h	equ	0xFEA
 13391                           fsr0l	equ	0xFE9
 13392                           wreg	equ	0xFE8
 13393                           fsr1h	equ	0xFE2
 13394                           fsr1l	equ	0xFE1
 13395                           indf2	equ	0xFDF
 13396                           postinc2	equ	0xFDE
 13397                           postdec2	equ	0xFDD
 13398                           plusw2	equ	0xFDB
 13399                           fsr2h	equ	0xFDA
 13400                           fsr2l	equ	0xFD9
 13401                           status	equ	0xFD8
 13402                           
 13403 ;; *************** function _EUSART1_Receive_ISR *****************
 13404 ;; Defined at:
 13405 ;;		line 139 in file "UART.c"
 13406 ;; Parameters:    Size  Location     Type
 13407 ;;		None
 13408 ;; Auto vars:     Size  Location     Type
 13409 ;;  data            1   11[COMRAM] unsigned char 
 13410 ;; Return value:  Size  Location     Type
 13411 ;;                  1    wreg      void 
 13412 ;; Registers used:
 13413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13414 ;; Tracked objects:
 13415 ;;		On entry : 0/0
 13416 ;;		On exit  : 0/0
 13417 ;;		Unchanged: 0/0
 13418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13419 ;;      Params:         0       0       0       0       0       0       0
 13420 ;;      Locals:         1       0       0       0       0       0       0
 13421 ;;      Temps:          0       0       0       0       0       0       0
 13422 ;;      Totals:         1       0       0       0       0       0       0
 13423 ;;Total ram usage:        1 bytes
 13424 ;; Hardware stack levels used:    1
 13425 ;; Hardware stack levels required when called:    2
 13426 ;; This function calls:
 13427 ;;		i2_UART_buff_put
 13428 ;; This function is called by:
 13429 ;;		_INTERRUPT_InterruptManager
 13430 ;; This function uses a non-reentrant model
 13431 ;;
 13432                           
 13433                           	psect	text74
 13434  002DA0                     __ptext74:
 13435                           	opt stack 0
 13436  002DA0                     _EUSART1_Receive_ISR:
 13437                           	opt stack 21
 13438                           
 13439                           ;UART.c: 140: if (1 == RC1STAbits.OERR) {
 13440                           
 13441                           ;incstack = 0
 13442  002DA0  A2AB               	btfss	4011,1,c	;volatile
 13443  002DA2  D002               	goto	i2l1018
 13444                           
 13445                           ;UART.c: 143: RC1STAbits.CREN = 0;
 13446  002DA4  98AB               	bcf	4011,4,c	;volatile
 13447                           
 13448                           ;UART.c: 144: RC1STAbits.CREN = 1;
 13449  002DA6  88AB               	bsf	4011,4,c	;volatile
 13450  002DA8                     i2l1018:
 13451                           
 13452                           ;UART.c: 145: }
 13453                           ;UART.c: 146: unsigned char data = RCREG1;
 13454  002DA8  CFAE F00C          	movff	4014,EUSART1_Receive_ISR@data	;volatile
 13455                           
 13456                           ;UART.c: 147: UART_buff_put(&input_buffer, data);
 13457  002DAC  0E00               	movlw	low _input_buffer
 13458  002DAE  6E07               	movwf	i2UART_buff_put@_this,c
 13459  002DB0  0E04               	movlw	high _input_buffer
 13460  002DB2  6E08               	movwf	i2UART_buff_put@_this+1,c
 13461  002DB4  C00C  F009         	movff	EUSART1_Receive_ISR@data,i2UART_buff_put@c
 13462  002DB8  ECAB  F00C         	call	i2_UART_buff_put	;wreg free
 13463  002DBC  0012               	return		;funcret
 13464  002DBE                     __end_of_EUSART1_Receive_ISR:
 13465                           	opt stack 0
 13466                           tosu	equ	0xFFF
 13467                           tosh	equ	0xFFE
 13468                           tosl	equ	0xFFD
 13469                           pclatu	equ	0xFFB
 13470                           pclath	equ	0xFFA
 13471                           tblptru	equ	0xFF8
 13472                           tblptrh	equ	0xFF7
 13473                           tblptrl	equ	0xFF6
 13474                           tablat	equ	0xFF5
 13475                           prodh	equ	0xFF4
 13476                           prodl	equ	0xFF3
 13477                           intcon	equ	0xFF2
 13478                           intcon2	equ	0xFF1
 13479                           postinc0	equ	0xFEE
 13480                           fsr0h	equ	0xFEA
 13481                           fsr0l	equ	0xFE9
 13482                           wreg	equ	0xFE8
 13483                           fsr1h	equ	0xFE2
 13484                           fsr1l	equ	0xFE1
 13485                           indf2	equ	0xFDF
 13486                           postinc2	equ	0xFDE
 13487                           postdec2	equ	0xFDD
 13488                           plusw2	equ	0xFDB
 13489                           fsr2h	equ	0xFDA
 13490                           fsr2l	equ	0xFD9
 13491                           status	equ	0xFD8
 13492                           
 13493 ;; *************** function i2_UART_buff_put *****************
 13494 ;; Defined at:
 13495 ;;		line 68 in file "UART.c"
 13496 ;; Parameters:    Size  Location     Type
 13497 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 13498 ;;		 -> output_buffer(206), input_buffer(206), 
 13499 ;;  c               1    8[COMRAM] const unsigned char 
 13500 ;; Auto vars:     Size  Location     Type
 13501 ;;		None
 13502 ;; Return value:  Size  Location     Type
 13503 ;;                  1    wreg      void 
 13504 ;; Registers used:
 13505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13506 ;; Tracked objects:
 13507 ;;		On entry : 0/0
 13508 ;;		On exit  : 0/0
 13509 ;;		Unchanged: 0/0
 13510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13511 ;;      Params:         3       0       0       0       0       0       0
 13512 ;;      Locals:         0       0       0       0       0       0       0
 13513 ;;      Temps:          2       0       0       0       0       0       0
 13514 ;;      Totals:         5       0       0       0       0       0       0
 13515 ;;Total ram usage:        5 bytes
 13516 ;; Hardware stack levels used:    1
 13517 ;; Hardware stack levels required when called:    1
 13518 ;; This function calls:
 13519 ;;		i2_UART_buff_modulo_inc
 13520 ;; This function is called by:
 13521 ;;		_EUSART1_Receive_ISR
 13522 ;; This function uses a non-reentrant model
 13523 ;;
 13524                           
 13525                           	psect	text75
 13526  001956                     __ptext75:
 13527                           	opt stack 0
 13528  001956                     i2_UART_buff_put:
 13529                           	opt stack 21
 13530                           
 13531                           ;UART.c: 69: if (_this->count < 200) {
 13532                           
 13533                           ;incstack = 0
 13534  001956  EE20 F0CC          	lfsr	2,204
 13535  00195A  5007               	movf	i2UART_buff_put@_this,w,c
 13536  00195C  26D9               	addwf	fsr2l,f,c
 13537  00195E  5008               	movf	i2UART_buff_put@_this+1,w,c
 13538  001960  22DA               	addwfc	fsr2h,f,c
 13539  001962  0E01               	movlw	1
 13540  001964  BEDB               	btfsc	plusw2,7,c
 13541  001966  D007               	goto	i2l4502
 13542  001968  0E01               	movlw	1
 13543  00196A  50DB               	movf	plusw2,w,c
 13544  00196C  E13A               	bnz	i2l4508
 13545  00196E  0EC8               	movlw	200
 13546  001970  5CDE               	subwf	postinc2,w,c
 13547  001972  B0D8               	btfsc	status,0,c
 13548  001974  D036               	goto	i2l4508
 13549  001976                     i2l4502:
 13550                           
 13551                           ;UART.c: 70: _this->buf[_this->head] = c;
 13552  001976  EE20 F0C8          	lfsr	2,200
 13553  00197A  5007               	movf	i2UART_buff_put@_this,w,c
 13554  00197C  26D9               	addwf	fsr2l,f,c
 13555  00197E  5008               	movf	i2UART_buff_put@_this+1,w,c
 13556  001980  22DA               	addwfc	fsr2h,f,c
 13557  001982  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 13558  001986  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 13559  00198A  500A               	movf	??i2_UART_buff_put,w,c
 13560  00198C  2407               	addwf	i2UART_buff_put@_this,w,c
 13561  00198E  6ED9               	movwf	fsr2l,c
 13562  001990  500B               	movf	??i2_UART_buff_put+1,w,c
 13563  001992  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 13564  001994  6EDA               	movwf	fsr2h,c
 13565  001996  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 13566                           
 13567                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
 13568  00199A  EE20 F0C8          	lfsr	2,200
 13569  00199E  5007               	movf	i2UART_buff_put@_this,w,c
 13570  0019A0  26D9               	addwf	fsr2l,f,c
 13571  0019A2  5008               	movf	i2UART_buff_put@_this+1,w,c
 13572  0019A4  22DA               	addwfc	fsr2h,f,c
 13573  0019A6  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 13574  0019AA  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 13575  0019AE  0E00               	movlw	0
 13576  0019B0  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 13577  0019B2  0EC8               	movlw	200
 13578  0019B4  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 13579  0019B6  EC45  F016         	call	i2_UART_buff_modulo_inc	;wreg free
 13580  0019BA  EE20 F0C8          	lfsr	2,200
 13581  0019BE  5007               	movf	i2UART_buff_put@_this,w,c
 13582  0019C0  26D9               	addwf	fsr2l,f,c
 13583  0019C2  5008               	movf	i2UART_buff_put@_this+1,w,c
 13584  0019C4  22DA               	addwfc	fsr2h,f,c
 13585  0019C6  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 13586  0019CA  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 13587                           
 13588                           ;UART.c: 72: ++_this->count;
 13589  0019CE  EE20 F0CC          	lfsr	2,204
 13590  0019D2  5007               	movf	i2UART_buff_put@_this,w,c
 13591  0019D4  26D9               	addwf	fsr2l,f,c
 13592  0019D6  5008               	movf	i2UART_buff_put@_this+1,w,c
 13593  0019D8  22DA               	addwfc	fsr2h,f,c
 13594  0019DA  2ADE               	incf	postinc2,f,c
 13595  0019DC  0E00               	movlw	0
 13596  0019DE  22DD               	addwfc	postdec2,f,c
 13597                           
 13598                           ;UART.c: 73: } else {
 13599  0019E0  0012               	return	
 13600  0019E2                     i2l4508:
 13601                           
 13602                           ;UART.c: 74: _this->buf[_this->head] = c;
 13603  0019E2  EE20 F0C8          	lfsr	2,200
 13604  0019E6  5007               	movf	i2UART_buff_put@_this,w,c
 13605  0019E8  26D9               	addwf	fsr2l,f,c
 13606  0019EA  5008               	movf	i2UART_buff_put@_this+1,w,c
 13607  0019EC  22DA               	addwfc	fsr2h,f,c
 13608  0019EE  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 13609  0019F2  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 13610  0019F6  500A               	movf	??i2_UART_buff_put,w,c
 13611  0019F8  2407               	addwf	i2UART_buff_put@_this,w,c
 13612  0019FA  6ED9               	movwf	fsr2l,c
 13613  0019FC  500B               	movf	??i2_UART_buff_put+1,w,c
 13614  0019FE  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 13615  001A00  6EDA               	movwf	fsr2h,c
 13616  001A02  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 13617                           
 13618                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
 13619  001A06  EE20 F0C8          	lfsr	2,200
 13620  001A0A  5007               	movf	i2UART_buff_put@_this,w,c
 13621  001A0C  26D9               	addwf	fsr2l,f,c
 13622  001A0E  5008               	movf	i2UART_buff_put@_this+1,w,c
 13623  001A10  22DA               	addwfc	fsr2h,f,c
 13624  001A12  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 13625  001A16  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 13626  001A1A  0E00               	movlw	0
 13627  001A1C  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 13628  001A1E  0EC8               	movlw	200
 13629  001A20  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 13630  001A22  EC45  F016         	call	i2_UART_buff_modulo_inc	;wreg free
 13631  001A26  EE20 F0C8          	lfsr	2,200
 13632  001A2A  5007               	movf	i2UART_buff_put@_this,w,c
 13633  001A2C  26D9               	addwf	fsr2l,f,c
 13634  001A2E  5008               	movf	i2UART_buff_put@_this+1,w,c
 13635  001A30  22DA               	addwfc	fsr2h,f,c
 13636  001A32  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 13637  001A36  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 13638                           
 13639                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 13640  001A3A  EE20 F0CA          	lfsr	2,202
 13641  001A3E  5007               	movf	i2UART_buff_put@_this,w,c
 13642  001A40  26D9               	addwf	fsr2l,f,c
 13643  001A42  5008               	movf	i2UART_buff_put@_this+1,w,c
 13644  001A44  22DA               	addwfc	fsr2h,f,c
 13645  001A46  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 13646  001A4A  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 13647  001A4E  0E00               	movlw	0
 13648  001A50  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 13649  001A52  0EC8               	movlw	200
 13650  001A54  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 13651  001A56  EC45  F016         	call	i2_UART_buff_modulo_inc	;wreg free
 13652  001A5A  EE20 F0CA          	lfsr	2,202
 13653  001A5E  5007               	movf	i2UART_buff_put@_this,w,c
 13654  001A60  26D9               	addwf	fsr2l,f,c
 13655  001A62  5008               	movf	i2UART_buff_put@_this+1,w,c
 13656  001A64  22DA               	addwfc	fsr2h,f,c
 13657  001A66  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 13658  001A6A  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 13659  001A6E  0012               	return	
 13660  001A70                     __end_ofi2_UART_buff_put:
 13661                           	opt stack 0
 13662                           tosu	equ	0xFFF
 13663                           tosh	equ	0xFFE
 13664                           tosl	equ	0xFFD
 13665                           pclatu	equ	0xFFB
 13666                           pclath	equ	0xFFA
 13667                           tblptru	equ	0xFF8
 13668                           tblptrh	equ	0xFF7
 13669                           tblptrl	equ	0xFF6
 13670                           tablat	equ	0xFF5
 13671                           prodh	equ	0xFF4
 13672                           prodl	equ	0xFF3
 13673                           intcon	equ	0xFF2
 13674                           intcon2	equ	0xFF1
 13675                           postinc0	equ	0xFEE
 13676                           fsr0h	equ	0xFEA
 13677                           fsr0l	equ	0xFE9
 13678                           wreg	equ	0xFE8
 13679                           fsr1h	equ	0xFE2
 13680                           fsr1l	equ	0xFE1
 13681                           indf2	equ	0xFDF
 13682                           postinc2	equ	0xFDE
 13683                           postdec2	equ	0xFDD
 13684                           plusw2	equ	0xFDB
 13685                           fsr2h	equ	0xFDA
 13686                           fsr2l	equ	0xFD9
 13687                           status	equ	0xFD8
 13688                           
 13689 ;; *************** function i2_UART_buff_modulo_inc *****************
 13690 ;; Defined at:
 13691 ;;		line 106 in file "UART.c"
 13692 ;; Parameters:    Size  Location     Type
 13693 ;;  value           2    0[COMRAM] const unsigned int 
 13694 ;;  modulus         2    2[COMRAM] const unsigned int 
 13695 ;; Auto vars:     Size  Location     Type
 13696 ;;  UART_buff_mo    2    4[COMRAM] unsigned int 
 13697 ;; Return value:  Size  Location     Type
 13698 ;;                  2    0[COMRAM] unsigned int 
 13699 ;; Registers used:
 13700 ;;		wreg, status,2, status,0
 13701 ;; Tracked objects:
 13702 ;;		On entry : 0/0
 13703 ;;		On exit  : 0/0
 13704 ;;		Unchanged: 0/0
 13705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13706 ;;      Params:         4       0       0       0       0       0       0
 13707 ;;      Locals:         2       0       0       0       0       0       0
 13708 ;;      Temps:          0       0       0       0       0       0       0
 13709 ;;      Totals:         6       0       0       0       0       0       0
 13710 ;;Total ram usage:        6 bytes
 13711 ;; Hardware stack levels used:    1
 13712 ;; This function calls:
 13713 ;;		Nothing
 13714 ;; This function is called by:
 13715 ;;		i2_UART_buff_put
 13716 ;;		i2_UART_buff_get
 13717 ;; This function uses a non-reentrant model
 13718 ;;
 13719                           
 13720                           	psect	text76
 13721  002C8A                     __ptext76:
 13722                           	opt stack 0
 13723  002C8A                     i2_UART_buff_modulo_inc:
 13724                           	opt stack 21
 13725                           
 13726                           ;UART.c: 107: unsigned int my_value = value + 1;
 13727                           
 13728                           ;incstack = 0
 13729  002C8A  0E01               	movlw	1
 13730  002C8C  2401               	addwf	i2UART_buff_modulo_inc@value,w,c
 13731  002C8E  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 13732  002C90  0E00               	movlw	0
 13733  002C92  2002               	addwfc	i2UART_buff_modulo_inc@value+1,w,c
 13734  002C94  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 13735                           
 13736                           ;UART.c: 108: if (my_value >= modulus) {
 13737  002C96  5003               	movf	i2UART_buff_modulo_inc@modulus,w,c
 13738  002C98  5C05               	subwf	i2UART_buff_modulo_inc@my_value,w,c
 13739  002C9A  5004               	movf	i2UART_buff_modulo_inc@modulus+1,w,c
 13740  002C9C  5806               	subwfb	i2UART_buff_modulo_inc@my_value+1,w,c
 13741  002C9E  A0D8               	btfss	status,0,c
 13742  002CA0  D004               	goto	i2l4050
 13743                           
 13744                           ;UART.c: 109: my_value = 0;
 13745  002CA2  0E00               	movlw	0
 13746  002CA4  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 13747  002CA6  0E00               	movlw	0
 13748  002CA8  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 13749  002CAA                     i2l4050:
 13750                           
 13751                           ;UART.c: 110: }
 13752                           ;UART.c: 111: return (my_value);
 13753  002CAA  C005  F001         	movff	i2UART_buff_modulo_inc@my_value,?i2_UART_buff_modulo_inc
 13754  002CAE  C006  F002         	movff	i2UART_buff_modulo_inc@my_value+1,?i2_UART_buff_modulo_inc+1
 13755  002CB2  0012               	return	
 13756  002CB4                     __end_ofi2_UART_buff_modulo_inc:
 13757                           	opt stack 0
 13758                           tosu	equ	0xFFF
 13759                           tosh	equ	0xFFE
 13760                           tosl	equ	0xFFD
 13761                           pclatu	equ	0xFFB
 13762                           pclath	equ	0xFFA
 13763                           tblptru	equ	0xFF8
 13764                           tblptrh	equ	0xFF7
 13765                           tblptrl	equ	0xFF6
 13766                           tablat	equ	0xFF5
 13767                           prodh	equ	0xFF4
 13768                           prodl	equ	0xFF3
 13769                           intcon	equ	0xFF2
 13770                           intcon2	equ	0xFF1
 13771                           postinc0	equ	0xFEE
 13772                           fsr0h	equ	0xFEA
 13773                           fsr0l	equ	0xFE9
 13774                           wreg	equ	0xFE8
 13775                           fsr1h	equ	0xFE2
 13776                           fsr1l	equ	0xFE1
 13777                           indf2	equ	0xFDF
 13778                           postinc2	equ	0xFDE
 13779                           postdec2	equ	0xFDD
 13780                           plusw2	equ	0xFDB
 13781                           fsr2h	equ	0xFDA
 13782                           fsr2l	equ	0xFD9
 13783                           status	equ	0xFD8
 13784                           
 13785 ;; *************** function _ADC_ISR *****************
 13786 ;; Defined at:
 13787 ;;		line 128 in file "mcc_generated_files/adc.c"
 13788 ;; Parameters:    Size  Location     Type
 13789 ;;		None
 13790 ;; Auto vars:     Size  Location     Type
 13791 ;;		None
 13792 ;; Return value:  Size  Location     Type
 13793 ;;                  1    wreg      void 
 13794 ;; Registers used:
 13795 ;;		None
 13796 ;; Tracked objects:
 13797 ;;		On entry : 0/0
 13798 ;;		On exit  : 0/0
 13799 ;;		Unchanged: 0/0
 13800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13801 ;;      Params:         0       0       0       0       0       0       0
 13802 ;;      Locals:         0       0       0       0       0       0       0
 13803 ;;      Temps:          0       0       0       0       0       0       0
 13804 ;;      Totals:         0       0       0       0       0       0       0
 13805 ;;Total ram usage:        0 bytes
 13806 ;; Hardware stack levels used:    1
 13807 ;; This function calls:
 13808 ;;		Nothing
 13809 ;; This function is called by:
 13810 ;;		_INTERRUPT_InterruptManager
 13811 ;; This function uses a non-reentrant model
 13812 ;;
 13813                           
 13814                           	psect	text77
 13815  002E9A                     __ptext77:
 13816                           	opt stack 0
 13817  002E9A                     _ADC_ISR:
 13818                           	opt stack 23
 13819                           
 13820                           ;adc.c: 131: PIR1bits.ADIF = 0;
 13821                           
 13822                           ;incstack = 0
 13823  002E9A  9C9E               	bcf	3998,6,c	;volatile
 13824  002E9C  0012               	return		;funcret
 13825  002E9E                     __end_of_ADC_ISR:
 13826                           	opt stack 0
 13827  0000                     tosu	equ	0xFFF
 13828                           tosh	equ	0xFFE
 13829                           tosl	equ	0xFFD
 13830                           pclatu	equ	0xFFB
 13831                           pclath	equ	0xFFA
 13832                           tblptru	equ	0xFF8
 13833                           tblptrh	equ	0xFF7
 13834                           tblptrl	equ	0xFF6
 13835                           tablat	equ	0xFF5
 13836                           prodh	equ	0xFF4
 13837                           prodl	equ	0xFF3
 13838                           intcon	equ	0xFF2
 13839                           intcon2	equ	0xFF1
 13840                           postinc0	equ	0xFEE
 13841                           fsr0h	equ	0xFEA
 13842                           fsr0l	equ	0xFE9
 13843                           wreg	equ	0xFE8
 13844                           fsr1h	equ	0xFE2
 13845                           fsr1l	equ	0xFE1
 13846                           indf2	equ	0xFDF
 13847                           postinc2	equ	0xFDE
 13848                           postdec2	equ	0xFDD
 13849                           plusw2	equ	0xFDB
 13850                           fsr2h	equ	0xFDA
 13851                           fsr2l	equ	0xFD9
 13852                           status	equ	0xFD8
 13853                           tosu	equ	0xFFF
 13854                           tosh	equ	0xFFE
 13855                           tosl	equ	0xFFD
 13856                           pclatu	equ	0xFFB
 13857                           pclath	equ	0xFFA
 13858                           tblptru	equ	0xFF8
 13859                           tblptrh	equ	0xFF7
 13860                           tblptrl	equ	0xFF6
 13861                           tablat	equ	0xFF5
 13862                           prodh	equ	0xFF4
 13863                           prodl	equ	0xFF3
 13864                           intcon	equ	0xFF2
 13865                           intcon2	equ	0xFF1
 13866                           postinc0	equ	0xFEE
 13867                           fsr0h	equ	0xFEA
 13868                           fsr0l	equ	0xFE9
 13869                           wreg	equ	0xFE8
 13870                           fsr1h	equ	0xFE2
 13871                           fsr1l	equ	0xFE1
 13872                           indf2	equ	0xFDF
 13873                           postinc2	equ	0xFDE
 13874                           postdec2	equ	0xFDD
 13875                           plusw2	equ	0xFDB
 13876                           fsr2h	equ	0xFDA
 13877                           fsr2l	equ	0xFD9
 13878                           status	equ	0xFD8
 13879                           
 13880                           	psect	text78
 13881  000000                     __ptext78:
 13882                           	opt stack 0
 13883                           tosu	equ	0xFFF
 13884                           tosh	equ	0xFFE
 13885                           tosl	equ	0xFFD
 13886                           pclatu	equ	0xFFB
 13887                           pclath	equ	0xFFA
 13888                           tblptru	equ	0xFF8
 13889                           tblptrh	equ	0xFF7
 13890                           tblptrl	equ	0xFF6
 13891                           tablat	equ	0xFF5
 13892                           prodh	equ	0xFF4
 13893                           prodl	equ	0xFF3
 13894                           intcon	equ	0xFF2
 13895                           intcon2	equ	0xFF1
 13896                           postinc0	equ	0xFEE
 13897                           fsr0h	equ	0xFEA
 13898                           fsr0l	equ	0xFE9
 13899                           wreg	equ	0xFE8
 13900                           fsr1h	equ	0xFE2
 13901                           fsr1l	equ	0xFE1
 13902                           indf2	equ	0xFDF
 13903                           postinc2	equ	0xFDE
 13904                           postdec2	equ	0xFDD
 13905                           plusw2	equ	0xFDB
 13906                           fsr2h	equ	0xFDA
 13907                           fsr2l	equ	0xFD9
 13908                           status	equ	0xFD8
 13909                           
 13910                           	psect	rparam
 13911  0000                     tosu	equ	0xFFF
 13912                           tosh	equ	0xFFE
 13913                           tosl	equ	0xFFD
 13914                           pclatu	equ	0xFFB
 13915                           pclath	equ	0xFFA
 13916                           tblptru	equ	0xFF8
 13917                           tblptrh	equ	0xFF7
 13918                           tblptrl	equ	0xFF6
 13919                           tablat	equ	0xFF5
 13920                           prodh	equ	0xFF4
 13921                           prodl	equ	0xFF3
 13922                           intcon	equ	0xFF2
 13923                           intcon2	equ	0xFF1
 13924                           postinc0	equ	0xFEE
 13925                           fsr0h	equ	0xFEA
 13926                           fsr0l	equ	0xFE9
 13927                           wreg	equ	0xFE8
 13928                           fsr1h	equ	0xFE2
 13929                           fsr1l	equ	0xFE1
 13930                           indf2	equ	0xFDF
 13931                           postinc2	equ	0xFDE
 13932                           postdec2	equ	0xFDD
 13933                           plusw2	equ	0xFDB
 13934                           fsr2h	equ	0xFDA
 13935                           fsr2l	equ	0xFD9
 13936                           status	equ	0xFD8
 13937                           
 13938                           	psect	temp
 13939  000045                     btemp:
 13940                           	opt stack 0
 13941  000045                     	ds	1
 13942  0000                     int$flags	set	btemp
 13943                           tosu	equ	0xFFF
 13944                           tosh	equ	0xFFE
 13945                           tosl	equ	0xFFD
 13946                           pclatu	equ	0xFFB
 13947                           pclath	equ	0xFFA
 13948                           tblptru	equ	0xFF8
 13949                           tblptrh	equ	0xFF7
 13950                           tblptrl	equ	0xFF6
 13951                           tablat	equ	0xFF5
 13952                           prodh	equ	0xFF4
 13953                           prodl	equ	0xFF3
 13954                           intcon	equ	0xFF2
 13955                           intcon2	equ	0xFF1
 13956                           postinc0	equ	0xFEE
 13957                           fsr0h	equ	0xFEA
 13958                           fsr0l	equ	0xFE9
 13959                           wreg	equ	0xFE8
 13960                           fsr1h	equ	0xFE2
 13961                           fsr1l	equ	0xFE1
 13962                           indf2	equ	0xFDF
 13963                           postinc2	equ	0xFDE
 13964                           postdec2	equ	0xFDD
 13965                           plusw2	equ	0xFDB
 13966                           fsr2h	equ	0xFDA
 13967                           fsr2l	equ	0xFD9
 13968                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         1039
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      68
    BANK0           160     16     160
    BANK1           256     26      83
    BANK2           256      0     206
    BANK3           256      0     200
    BANK4           256      0     206
    BANK5           256      0     206

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_tr_queue.pTrFlag	PTR enum E7739 size(2) Largest target is 0
		 -> LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    memset@p1	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    memset@p	PTR unsigned char  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 

    UART_buff_peek@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> input_buffer(BANK4[206]), 

    UART_buff_size@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_get@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_put@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_init@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    crcBufS_get@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    crcBufS_status_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    crcBufS_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    sp__memset	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    FastTransfer_buffer_flush@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), 

    FastTransfer_buffer_put@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), 

    CRC8@data	PTR const unsigned char  size(2) Largest target is 206
		 -> CRCcheck@arrayHolder(BANK0[3]), receiveData@holder_2230(BANK1[3]), receiveData@holder(BANK1[3]), rx_buffer(BANK3[200]), 
		 -> ring_buffer(BANK2[206]), NULL(NULL[0]), 

    sendStructAddress	PTR unsigned char  size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), NULL(NULL[0]), 

    begin@stufftoreceive	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_get(), 

    serial_read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_get(), 

    begin@stuffpeek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_peek(), 

    serial_peek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_peek(), 

    begin@stuffavailable	PTR FTN()int  size(2) Largest target is 2
		 -> Receive_available(), 

    serial_available	PTR FTN()int  size(2) Largest target is 2
		 -> Absolute function(), Receive_available(), 

    begin@stufftosend	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Send_put(), 

    serial_write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), Send_put(), 

    begin@ptr	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK1[40]), 

    receiveArrayAddress	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK1[40]), NULL(NULL[0]), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E7739 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E7739 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    F7851.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWrite@pflag	PTR enum E7739 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    F7846.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDblinkRate@b(BANK0[2]), 
		 -> LEDBsetBrightness@writeBuffer(BANK0[2]), LEDBsetBrightness@b(BANK0[2]), I2C1_ISR@i2c_address(COMRAM[2]), NULL(NULL[0]), 

    S21$pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E7739 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    S33$pTrFlag	PTR enum E7739 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E7739 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    S33$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), NULL(NULL[0]), 

    S44$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    S44$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 


Critical Paths under _main in COMRAM

    _main->___ftmul
    _updateComms->_handleIndicators
    _respondECU->_ToSend
    _respondECU->_sendData
    _sendData->_FastTransfer_buffer_flush
    _sendData->_Send_put
    _FastTransfer_buffer_flush->_memset
    _buttonsCollector->_GetButtonState
    _ToSend->_buttonsCollector
    _FastTransfer_buffer_put->_FastTransfer_buffer_modulo_inc
    _receiveData->_Send_put
    _Send_put->_UART_buff_get
    _Send_put->_UART_buff_put
    _UART_buff_put->_UART_buff_modulo_inc
    _Receive_peek->_UART_buff_peek
    _CRCcheck->_crcBufS_get
    _Receive_get->_UART_buff_get
    _UART_buff_get->_UART_buff_modulo_inc
    _Receive_available->_UART_buff_size
    _handleIndicators->_SetLEDOut
    _SetLEDOut->_Off_Led
    _SetLEDOut->_setLED
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    _begin->___awdiv
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART1_Initialize->_UART_buff_init
    _UART_buff_init->_memset
    _LEDwriteDisplay->_I2C1_MasterWrite
    _LEDsetValue->___ftmul
    _LEDsetBar->___awdiv
    _LEDbegin->_I2C1_MasterWrite
    _LEDblinkRate->_I2C1_MasterWrite
    _LEDBsetBrightness->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _TMR0_ISR->_ReadButtonState
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Transmit_ISR->i2_UART_buff_get
    i2_UART_buff_get->i2_UART_buff_modulo_inc
    _EUSART1_Receive_ISR->i2_UART_buff_put
    i2_UART_buff_put->i2_UART_buff_modulo_inc

Critical Paths under _main in BANK0

    _updateComms->_receiveData
    _respondECU->_ToSend
    _receiveData->_CRCcheck
    ___fttol->___ftmul
    _SYSTEM_Initialize->_begin
    _LEDsetValue->_LEDsetBar
    _LEDbegin->_LEDBsetBrightness
    _LEDbegin->_LEDblinkRate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LEDwriteDisplay
    _updateComms->_receiveData
    _LEDsetValue->___fttol

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   46563
                                             24 BANK1      2     2      0
                           _LEDbegin
                        _LEDsetValue
                    _LEDwriteDisplay
                  _SYSTEM_Initialize
                            ___ftmul
                            ___fttol
                           ___lwtoft
                        _updateComms
 ---------------------------------------------------------------------------------
 (1) _updateComms                                          0     0      0   21411
                        _TBbarGraphs
                   _handleIndicators
                        _receiveData
                         _respondECU
 ---------------------------------------------------------------------------------
 (2) _respondECU                                           0     0      0    7986
                              _Delay
                             _ToSend
                   _buttonsCollector
                           _sendData
 ---------------------------------------------------------------------------------
 (3) _sendData                                             5     5      0    5704
                                             38 COMRAM     5     5      0
                   Absolute function *
                               _CRC8
          _FastTransfer_buffer_flush
                           _Send_put *
                        _crcBufS_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_put                                          7     2      5     742
                                             26 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_flush                            4     0      4    1139
                                             34 COMRAM     4     0      4
                             _memset
 ---------------------------------------------------------------------------------
 (3) _buttonsCollector                                     9     7      2     309
                                             32 COMRAM     9     7      2
                     _GetButtonState
 ---------------------------------------------------------------------------------
 (4) _GetButtonState                                       6     4      2     108
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _ToSend                                               3     1      2    1751
                                             41 COMRAM     2     0      2
                                              0 BANK0      1     1      0
            _FastTransfer_buffer_put
                   _buttonsCollector (ARG)
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_put                              7     2      5    1535
                                             32 COMRAM     7     2      5
     _FastTransfer_buffer_modulo_inc
 ---------------------------------------------------------------------------------
 (5) _FastTransfer_buffer_modulo_inc                       6     2      4     746
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay                                                5     3      2     222
                                             26 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _receiveData                                         18    18      0   10715
                                              7 BANK0      6     6      0
                                              0 BANK1     12    12      0
                   Absolute function *
                               _CRC8
                           _CRCcheck
                  _Receive_available *
                        _Receive_get *
                       _Receive_peek *
                           _Send_put *
 ---------------------------------------------------------------------------------
 (4) _Send_put                                             1     1      0    2614
                                             37 COMRAM     1     1      0
                      _UART_buff_get
                      _UART_buff_put
 ---------------------------------------------------------------------------------
 (5) _UART_buff_put                                        5     2      3    1418
                                             32 COMRAM     5     2      3
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (3) _Receive_peek                                         0     0      0     139
                     _UART_buff_peek
 ---------------------------------------------------------------------------------
 (4) _UART_buff_peek                                       4     2      2     139
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _CRCcheck                                             7     7      0    5114
                                              0 BANK0      7     7      0
                   Absolute function *
                               _CRC8
                  _Receive_available *
                        _Receive_get *
                        _crcBufS_get
                 _crcBufS_status_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_status_put                                  10     6      4     908
                                             26 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (4) _crcBufS_get                                         12     8      4    1404
                                             26 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (3) _Receive_get                                          0     0      0    1165
                      _UART_buff_get
 ---------------------------------------------------------------------------------
 (5) _UART_buff_get                                        5     3      2    1165
                                             32 COMRAM     5     3      2
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (6) _UART_buff_modulo_inc                                 6     2      4     746
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Receive_available                                    2     0      2     150
                                             28 COMRAM     2     0      2
                     _UART_buff_size
 ---------------------------------------------------------------------------------
 (4) _UART_buff_size                                       2     0      2     150
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _CRC8                                                 7     4      3    1014
                                             26 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _handleIndicators                                     7     5      2    2494
                                             36 COMRAM     7     5      2
                          _SetLEDOut
 ---------------------------------------------------------------------------------
 (3) _SetLEDOut                                            6     2      4    2191
                                             30 COMRAM     6     2      4
                            _Off_Led
                             _setLED
 ---------------------------------------------------------------------------------
 (4) _setLED                                               4     2      2     493
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _Off_Led                                              4     2      2     955
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _TBbarGraphs                                          4     0      4     216
                                             26 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2529
                                             34 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     525
                                              9 BANK0      4     0      4
                                              0 BANK1     11    11      0
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3254
                                             37 COMRAM     6     0      6
                                              0 BANK0      9     9      0
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2344
                                             26 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2894
                     _ADC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                              _begin
 ---------------------------------------------------------------------------------
 (2) _begin                                               13     0     13    1771
                                              0 BANK0     13     0     13
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     108
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2     108
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0    1015
                     _UART_buff_init
 ---------------------------------------------------------------------------------
 (3) _UART_buff_init                                       2     0      2    1015
                                             34 COMRAM     2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6     830
                                             26 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDwriteDisplay                                     24    24      0    3911
                                              0 BANK1     24    24      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _LEDsetValue                                          7     3      4    2539
                                             11 BANK1      7     3      4
                          _LEDsetBar
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _LEDsetBar                                           24    20      4    1940
                                             34 COMRAM     8     4      4
                                              0 BANK0     16    16      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     907
                                             26 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LEDbegin                                             7     7      0    9497
                                              8 BANK0      7     7      0
                   _I2C1_MasterWrite
                  _LEDBsetBrightness
                       _LEDblinkRate
 ---------------------------------------------------------------------------------
 (2) _LEDblinkRate                                         8     5      3    3225
                                              0 BANK0      8     5      3
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _LEDBsetBrightness                                    8     5      3    3225
                                              0 BANK0      8     5      3
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _I2C1_MasterWrite                                     7     0      7    2683
                                             35 COMRAM     7     0      7
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterWriteTRBBuild                             9     2      7     494
                                             26 COMRAM     9     2      7
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterTRBInsert                                 6     2      4     494
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0    1570
                                             12 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             2     2      0     330
                                              4 COMRAM     2     2      0
                    _ReadButtonState
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR0_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ReadButtonState                                      4     2      2     262
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _I2C1_ISR                                             2     2      0      31
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (9) _I2C1_Stop                                            3     3      0      31
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0     528
                    i2_UART_buff_get
                   i2_UART_buff_size
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_size                                     2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_get                                      5     3      2     480
                                              6 COMRAM     5     3      2
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  1     1      0     681
                                             11 COMRAM     1     1      0
                    i2_UART_buff_put
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_put                                      5     2      3     658
                                              6 COMRAM     5     2      3
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (10) i2_UART_buff_modulo_inc                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LEDbegin
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
     _LEDBsetBrightness
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
     _LEDblinkRate
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
   _LEDsetValue
     _LEDsetBar
       ___awdiv
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   _LEDwriteDisplay
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _UART_buff_init
         _memset
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _begin
       ___awdiv
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _updateComms
     _TBbarGraphs
     _handleIndicators
       _SetLEDOut
         _Off_Led
         _setLED
     _receiveData
       Absolute function(Fake) *
       _CRC8 *
       _CRCcheck *
         Absolute function(Fake) *
         _CRC8 *
         _Receive_available *
           _UART_buff_size
         _Receive_get *
           _UART_buff_get
             _UART_buff_modulo_inc
         _crcBufS_get *
         _crcBufS_status_put *
       _Receive_available *
         _UART_buff_size
       _Receive_get *
         _UART_buff_get
           _UART_buff_modulo_inc
       _Receive_peek *
         _UART_buff_peek
       _Send_put *
         _UART_buff_get
           _UART_buff_modulo_inc
         _UART_buff_put
           _UART_buff_modulo_inc
     _respondECU
       _Delay
       _ToSend
         _FastTransfer_buffer_put
           _FastTransfer_buffer_modulo_inc
         _buttonsCollector (ARG)
           _GetButtonState
       _buttonsCollector
         _GetButtonState
       _sendData
         Absolute function(Fake) *
         _CRC8 *
         _FastTransfer_buffer_flush *
           _memset
         _Send_put *
           _UART_buff_get
             _UART_buff_modulo_inc
           _UART_buff_put
             _UART_buff_modulo_inc
         _crcBufS_put *

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
     i2_UART_buff_put
       i2_UART_buff_modulo_inc
   _EUSART1_Transmit_ISR
     i2_UART_buff_get
       i2_UART_buff_modulo_inc
     i2_UART_buff_size
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR
     _ReadButtonState
     _TMR0_CallBack
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      CE      15       80.5%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      CE      13       80.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      CE       8       80.5%
BITBANK1           100      0       0       5        0.0%
BANK1              100     1A      53       6       32.4%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     10      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      44       1       72.3%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     469       9        0.0%
DATA                 0      0     469      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Thu Mar 24 18:17:11 2016

       __end_of_FastTransfer_buffer_flush 27FE                    i2_UART_buff_modulo_inc 2C8A  
        __end_of_TMR2_SetInterruptHandler 2E8A                                         _k 00CD  
                            _rx_array_inx 003E                              ___awdiv@sign 0020  
                LEDBsetBrightness@timeOut 00F3                                Off_Led@led 001B  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                                     l426 2B94                                       l444 21D2  
                                     l518 07EE                                       l439 2160  
                                     l828 29E2                                       l749 263A  
                                     l757 2792                                       l942 1370  
                                     l987 2424                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                         __end_of_ADC_ISR 2E9E      FastTransfer_buffer_flush@clearBuffer 0025  
                         _TMR2_Initialize 2D24                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
                             _TBbarGraphs 2E32             i2UART_buff_modulo_inc@modulus 0003  
                            __CFG_LVP$OFF 000000                          __end_of_I2C1_ISR 10AC  
                                    l1375 2110                                      l6000 05E8  
                                    l6010 05F4                                      l6100 2106  
                                    l5310 29B6                                      l5206 2420  
                                    l6030 06C0                                      l5240 205C  
                                    l6032 06DA                                      l6024 0672  
                                    l6040 0778                                      l5242 2068  
                                    l5250 24BC                                      l6034 06F4  
                                    l6026 068C                                      l5236 203C  
                                    l5316 29CC                                      l5324 29E8  
                                    l5164 2C80                                      l6036 070E  
                                    l6028 06A6                                      l5172 2C56  
                                    l5246 2078                                      l6310 216A  
                                    l5182 2C24                                      l5270 2502  
                                    l5262 24E6                                      l5254 24CA  
                                    l5510 0CEA                                      l5502 0CC8  
                                    l5326 29EE                                      l6038 075C  
                                    l5430 2B80                                      l5424 29A2  
                                    l6320 21CA                                      l6072 25FE  
                                    l5192 18C8                                      l6048 0784  
                                    l5600 1532                                      l6314 2180  
                                    l6306 2150                                      l5178 2C14  
                                    l6090 20AA                                      l5266 24F4  
                                    l5258 24D8                                      l5290 1F4E  
                                    l5186 185C                                      l5346 10D4  
                                    l5602 154E                                      l6092 20C8  
                                    l6084 2092                                      l6420 164A  
                                    l5276 2510                                      l5292 1F64  
                                    l5284 1F0C                                      l5540 0D74  
                                    l5532 0D52                                      l5524 0D30  
                                    l5452 0BD4                                      l5444 0BB2  
                                    l5436 0B90                                      l5380 1D12  
                                    l5364 1C84                                      l5620 123C  
                                    l5612 15B8                                      l5604 1558  
                                    l6270 220E                                      l5702 25C2  
                                    l6318 21B6                                      l6406 1832  
                                    l6326 172E                                      l6414 1618  
                                    l5294 1F7A                                      l5286 1F22  
                                    l5518 0D0C                                      l5606 1582  
                                    l5800 07AE                                      l6328 174C  
                                    l6096 20DE                                      l6088 20A0  
                                    l5288 1F38                                      l5480 0C60  
                                    l5368 1C8E                                      l5632 12EC  
                                    l5608 1586                      receiveData@crcHolder 013F  
                                    l6290 2246                                      l5810 08F0  
                                    l6346 177C                                      l6098 20FC  
                                    l6434 168C                                      l5298 1F90  
                                    l5562 0DDC                                      l5554 0DBA  
                                    l5546 0D98                                      l5474 0C3C  
                                    l5466 0C1A                                      l5458 0BF8  
                                    l5570 0E00                                      l5642 1340  
                                    l5650 1368                                      l5618 1214  
                                    l6268 21F0                                      l6348 1784  
                                    l6444 16BE                                      l5396 1EC4  
                                    l5388 1E3E                                      l5628 12D6  
                                    l5900 0136                                      l5670 255C  
                                    l5814 09AE                                      l6438 16A2  
                                    l6462 13AC                                      l5646 1360  
                                    l5832 233E                                      l6288 223E  
                                    l6448 16D4                                      l6480 143E  
                                    l5496 0CA4                                      l5488 0C82  
                                    l5912 01DA                                      l5584 2754  
                                    l5834 235C                                      l5826 2322  
                                    l5682 2582                                      l5818 0A8A  
                                    l6386 17E4                                      l6490 146E  
                                    l5930 023E                                      l5914 01F2  
                                    l5594 14E4                                      l5852 238C  
                                    l5684 258A                                      l5676 256C  
                                    l6388 1802                                      l6492 147E  
                                    l6484 1452                                      l5932 0264  
                                    l5916 01F8                                      l5924 0232  
                                    l5596 14FE                                      l6564 1C6E  
                                    l6556 1BA8                                      l5694 25AA  
                                    l5686 258E                                      l6494 1488  
                                    l5598 1518                                      l5864 22AA  
                                    l5960 038A                                      l5952 02EE  
                                    l5944 0294                                      l5866 22C8  
                                    l5858 228C                                      l5698 25B4  
                                    l6498 14A4                                      l5970 0442  
                                    l5884 22F8                                      l5948 02C6  
                                    l5892 0104                                      l5798 0798  
                                    l5990 0530                                      l5966 0428  
                                    l5992 054A                                      l5984 04E2  
                                    l5968 042E                                      l5896 0132  
                                    l5994 0564                                      l5986 04FC  
                                    l5996 057E                                      l5988 0516  
                                    l5998 05CC                                      _CRC8 29B0  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      u6010 2318  
                                    u6004 0B2A                                      u6005 0B22  
                                    u5180 23B4                                      u7101 15FA  
                                    u6070 2282                                      u5270 1E1E  
                                    u6208 0158                                      u7121 162C  
                                    u6209 016C                                      u5291 10D2  
                                    u6308 0242                                      u6228 0176  
                                    u6148 00DE                                      u6309 0256  
                                    u6229 018A                                      u6149 00F2  
                                    u6238 0190                                      u6239 01A4  
                                    u6328 0268                                      u6248 01AA  
                                    u6168 010E                                      u5608 14E8  
                                    u7400 1C6C                                      u7161 1388  
                                    u6329 027E                                      u6249 01BE  
                                    u6169 0122                                      u5618 1502  
                                    i2l60 0E74                                      u7180 13D2  
                                    u6620 25DE                                      u5708 125C  
                                    u6508 0582                                      u6348 0298  
                                    u6268 01DE                                      u6188 013A  
                                    u5580 2792                                      u5628 151C  
                                    u5709 1270                                      u6381 032E  
                                    u6349 02AC                                      u6189 014E  
                                    u5718 1278                                      u6518 05D0  
                                    u6438 04CC                                      u6358 02CA  
                                    u5574 2774                                      u5638 1536  
                                    i2l71 0F28                                      i2l63 0EEA  
                                    u5719 128C                                      u6359 02DE  
                                    u5575 276E                                      i2l72 0F38  
                                    u5904 0814                                      u5728 1294  
                                    u6608 0712                                      u6448 04E6  
                                    u5648 155C                                      i2l65 0EF2  
                                    u5905 080C                                      u7185 13C8  
                                    u5729 12A8                                      i2l90 1016  
                                    i2l82 0FB8                                      i2l66 0EFA  
                                    u5914 088C                                      u6650 263A  
                                    u6618 0760                                      u6538 065C  
                                    u6458 0500                                      u5915 0884  
                                    i2l76 0FA4                                      u6644 261C  
                                    u6548 0676                                      u6468 051A  
                                    u5668 15A2                                      u6645 2616  
                                    i2l94 1048                                      i2l86 0FE8  
                                    u5934 091E                                      u5678 1218  
                                    u6558 0690                                      u6478 0534  
                                    u5598 14CE                                      u7390 1BBC  
                                    u5935 0916                                      u5679 122C  
                                    u5944 0942                                      u5880 07E6  
                                    u6568 06AA                                      u6488 054E  
                                    i2l89 1004                                      u5945 093A  
                                    u5698 1240                                      u6578 06C4  
                                    u6498 0568                                      u5699 1254  
                                    u5964 09DA                                      u6588 06DE  
                                    u5965 09D2                                      u7477 2B86  
                                    u5974 0A0E                                      u6950 2146  
                                    u6598 06F8                                      u5975 0A06  
                                    u5994 0AB8                                      u5995 0AB0  
                                    _TMR2 000FBC                                      _WPUB 000F61  
                                    _main 1B86                              ___ftpack@arg 001B  
                            ___ftpack@exp 001E                           _TMR0_StartTimer 2E96  
                                    _time 00DB                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                  ??_I2C1_MasterTRBInsert 001F                                      btemp 0045  
                           __CFG_BORV$190 000000                                      pclat 000FFA  
                                    prodh 000FF4                                      prodl 000FF3  
         __end_of_FastTransfer_buffer_put 1214                                      start 00D0  
                           __CFG_IESO$OFF 000000                              ___ftmul@cntr 00F5  
                            ___param_bank 000010                              ___ftmul@sign 00F6  
                         __end_of_Off_Led 2548            I2C1_MasterWriteTRBBuild@length 001F  
          i2UART_buff_modulo_inc@my_value 0005                          _handleIndicators 25CC  
                            ___fttol@exp1 0143                        __size_of_LEDsetBar 0406  
                            ___fttol@lval 013F                                     ?_CRC8 001B  
                 __end_of_TMR0_Initialize 2D82                                _i2c1_state 0038  
                        __end_of_CRCcheck 1372            __size_of_OSCILLATOR_Initialize 000E  
               I2C1_MasterTRBInsert@count 0020             __end_of_OSCILLATOR_Initialize 2E80  
               I2C1_MasterTRBInsert@pflag 001D                          LEDbegin@i2c_addr 00FB  
                      crcBufS_put@address 001D                          __end_of_LEDbegin 226C  
                                   ?_main 0001                           __end_of___awdiv 25CC  
                       __end_of_I2C1_Stop 2AC4                           __end_of___ftmul 1712  
                                   _T0CON 000FD5                           ___awdiv@divisor 001D  
                         __end_of___fttol 14B6                                     _T2CON 000FBA  
                                   _LATA3 007C4B                                     _LATB3 007C53  
                                   _LATD1 007C61                                     _LATB5 007C55  
                                   _LATE0 007C68                                     _LATE1 007C69  
                                   _LATE2 007C6A                            __CFG_DEBUG$OFF 000000  
                                   i2l320 005A                                     i2l322 0066  
                                   i2l324 0072                                     i2l332 0094  
                                   i2l326 007E                                     i2l318 004E  
                                   i2l328 008A                           ___awdiv@counter 001F  
                                   i2l987 24B6                                     _TMR0H 000FD7  
                                   _TMR0L 000FD6                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                                   _Delay 2B76              __end_of_I2C1_BusCollisionISR 2EA4  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                       ?_buttonsCollector 0021                      _EUSART1_Transmit_ISR 2BAA  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                         ??_I2C1_Initialize 001B  
                        __end_of_TMR0_ISR 285E                          __end_of_TMR2_ISR 2E92  
                           __CFG_WRTB$OFF 000000                              ?_LEDsetValue 0144  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                                   _begin 285E                            __CFG_EBTRB$OFF 000000  
                                   _brake 00C7                        ??_buttonsCollector 0023  
                                   _group 002C                        __CFG_MCLRE$EXTMCLR 000000  
                           ___ftpack@sign 001F                                     pclath 000FFA  
                                   tablat 000FF5                             ??_Receive_get 0026  
                    __size_of_crcBufS_get 00E2                                     plusw2 000FDB  
                          begin@stuffpeek 00F9                      __size_of_crcBufS_put 00D8  
                                   status 000FD8                            __CFG_HFOFST$ON 000000  
                         _TMR2_StartTimer 2E92                              ?_receiveData 0001  
                          SetLEDOut@state 0021                         ??_ReadButtonState 0003  
                          __CFG_PBADEN$ON 000000           I2C1_MasterWriteTRBBuild@address 0020  
                            __end_of_CRC8 29FA                           CRCcheck@SentCRC 00EE  
                         __initialization 2644                     I2C1_MasterWrite@pdata 0024  
                   I2C1_MasterWrite@pflag 0029                __end_of_EUSART1_Initialize 2B3C  
                            __end_of_main 1C7A                                ToSend@what 002A  
                                  ??_CRC8 001E                             ?_LEDblinkRate 00EE  
                 __end_of_TMR2_Initialize 2D46                                 ??_ADC_ISR 0001  
             ?_INTERRUPT_InterruptManager 0001                               _i2c1_object 00B8  
                _TMR2_SetInterruptHandler 2E80                                    ??_main 002C  
                           ___fttol@sign1 013E                             __activetblptr 000002  
                        __end_of_Send_put 2C0A                 __size_ofi2_UART_buff_size 0016  
                                  ?_Delay 001B                     ?_EUSART1_Transmit_ISR 0001  
           FastTransfer_buffer_put@towhat 0024                             ?_Receive_peek 0001  
                                  ?_begin 00EE                   __end_of_TMR0_StartTimer 2E9A  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                          ___awdiv@dividend 001B  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                          __end_of___ftpack 2130  
                       __end_of_LEDsetBar 0B8E                           i2_UART_buff_get 2428  
                                  _RC1STA 000FAB                                    i2l1018 2DA8  
                         i2_UART_buff_put 1956                                    i2l4100 1A72  
                                  i2l4110 1AF4                                    i2l4102 1A8C  
                                  i2l4112 1B0E                                    i2l4104 1AA6  
                                  i2l4050 2CAA                                    i2l4114 1B28  
                                  i2l4106 1AC0                                    i2l4108 1ADA  
                                  i2l4118 1B42                            __CFG_WDTEN$OFF 000000  
                                  Delay@x 001E                                    i2l4502 1976  
                                  i2l6200 0FCA               UART_buff_modulo_inc@modulus 001D  
                                  i2l4522 24B2                                    i2l6210 0FF0  
                                  i2l4508 19E2                                    i2l6140 0ECC  
                                  i2l4460 28EE                                    i2l6222 101E  
                                  i2l6240 1052                                    i2l6152 0F0A  
                                  i2l4456 28DC                                    i2l6242 105A  
                                  i2l6226 1026                                    i2l4458 28E8  
                                  i2l6172 0F66                                    i2l6238 104E  
                                  i2l6158 0F22                                    i2l6192 0FB2  
                                  i2l6248 1066                                    i2l4672 281E  
                                  i2l5740 2DD2                                    i2l5732 2ABE  
                                  i2l4668 280E                                    i2l4686 285A  
                                  i2l4678 2830                                    i2l4698 2BD4  
                          _GetButtonState 2CB4                                    _RCREG1 000FAE  
                        __end_of___lwtoft 2D24                                    _OSCCON 000FD3  
                                  _SPBRG1 000FAF                                    _TX1STA 000FAC  
                                  _TXREG1 000FAD                                 ??_Off_Led 001D  
                      __size_of_SetLEDOut 02AA                         ?_I2C1_MasterWrite 0024  
                          __CFG_XINST$OFF 000000                                    _ToSend 2D46  
                      ??_I2C1_MasterWrite 002B                       __end_of_Receive_get 2E72  
                        crcBufS_get@_this 001B               ??_FastTransfer_buffer_flush 0027  
                          _p_i2c1_current 00CF                             _output_buffer 0500  
                        crcBufS_get@space 001E                                 ??___awdiv 001F  
                               CRC8@tempI 0020                            __CFG_STVREN$ON 000000  
                               ??___ftmul 00EE                                 ??___fttol 0139  
                          ??_LEDblinkRate 002B                ??_I2C1_MasterWriteTRBBuild 0022  
                        ?_TMR0_Initialize 0001                                    _setLED 1F0A  
                                  _memset 2C0A                                 ?_I2C1_ISR 0001  
                                  clear_0 264A                                    clear_1 2656  
                                  clear_2 2662                                    clear_3 266E  
                                  clear_4 267A                                    clear_5 2686  
                                  clear_6 2692                          ___awdiv@quotient 0021  
                                  _rx_len 003F                          __end_of_sendData 15E6  
                   ___ftmul@f3_as_product 00F2                              __pdataCOMRAM 0044  
                           Send_put@_data 0026                            ??_Receive_peek 001F  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8          __size_of_FastTransfer_buffer_put 0168  
            __end_of_UART_buff_modulo_inc 2C8A                     __end_of_TMR0_CallBack 2EA2  
                 __end_of_TMR2_StartTimer 2E96  TMR2_SetInterruptHandler@InterruptHandler 001B  
                  __end_of_GetButtonState 2CDC             I2C1_MasterWriteTRBBuild@pdata 001D  
                      LEDblinkRate@status 00F5             __size_of_INTERRUPT_Initialize 0012  
                         SetLEDOut@lednum 001F                         _SYSTEM_Initialize 26B8  
                              __accesstop 0060                   __end_of__initialization 26AA  
                               ?_CRCcheck 0001                     __end_of_TMR2_CallBack 2914  
                      ?_SYSTEM_Initialize 0001                                 ?_LEDbegin 0001  
                           ___rparam_used 000001                   ?i2_UART_buff_modulo_inc 0001  
                          _i2c1_trb_count 0039                              ?_updateComms 0001  
                            TBbarGraphs@b 001D                              TBbarGraphs@t 001B  
                           __end_of_Delay 2BAA                                ___ftmul@f1 0026  
                              ___ftmul@f2 0029                     _I2C1_FunctionComplete 2DBE  
                    _I2C1_BusCollisionISR 2EA2                                ___fttol@f1 00F7  
                  LEDwriteDisplay@timeOut 014E                            __pcstackCOMRAM 0001  
                  I2C1_MasterWrite@length 0026                        _crcBufS_status_put 1E34  
                     ??_SYSTEM_Initialize 0025                          crcBufS_put@_this 001B  
                           __end_of_begin 28BC                                 ?_TMR0_ISR 0001  
                               ?_TMR2_ISR 0001    __end_of_FastTransfer_buffer_modulo_inc 2C60  
 __size_of_FastTransfer_buffer_modulo_inc 002A            _FastTransfer_buffer_modulo_inc 2C36  
                              ??_I2C1_ISR 0004                          ?_TMR2_Initialize 0001  
            FastTransfer_buffer_put@_this 0021                               ToSend@where 00EE  
                              ___lwtoft@c 0023                        UART_buff_get@_this 0021  
                     ?_crcBufS_status_put 001B                     __end_of_UART_buff_get 2428  
                  ??_EUSART1_Transmit_ISR 000C                     __end_of_UART_buff_put 1956  
                       __end_of_SetLEDOut 0E38                     TMR0_ISR@CountCallBack 00C1  
                                 ??_Delay 001D                            LEDbegin@status 00FC  
                 __end_ofi2_UART_buff_get 24BA                   __end_ofi2_UART_buff_put 1A70  
                            ?_TBbarGraphs 001B               __end_of_EUSART1_Receive_ISR 2DBE  
               _FastTransfer_buffer_flush 279C                                   CRC8@crc 0021  
                                 CRC8@len 001D                                   CRC8@sum 001E  
                                 ??_begin 0023                          ?_TMR0_StartTimer 0001  
                         ?_GetButtonState 001B                 __end_of_SYSTEM_Initialize 272C  
                  receiveData@holder_2230 013C                  __end_of_handleIndicators 2644  
                     _addressErrorCounter 00C3                      __size_of_LEDsetValue 00A4  
                              __pbssBANK0 0060                                __pbssBANK1 0100  
                              __pbssBANK2 0200                                __pbssBANK3 0300  
                              __pbssBANK4 0400                                __pbssBANK5 0500  
                         __CFG_PLLCFG$OFF 000000                               _Receive_get 2E64  
                              ??_CRCcheck 0027                      ??_crcBufS_status_put 001F  
          __end_ofi2_UART_buff_modulo_inc 2CB4                                __pnvCOMRAM 0042  
                       begin@givenAddress 00F1                   __size_of_UART_buff_init 001E  
                 __size_of_UART_buff_peek 0024                                ??_LEDbegin 002B  
                 __size_of_UART_buff_size 0016                                 ?_Send_put 0001  
                   ?_I2C1_BusCollisionISR 0001                      __size_of_receiveData 06B4  
                                 ?_ToSend 002A                        __CFG_CCP2MX$PORTC1 000000  
                __size_of_LEDwriteDisplay 012A                                ??_TMR0_ISR 0005  
                              ??_TMR2_ISR 0001                        __CFG_CCP3MX$PORTB5 000000  
     FastTransfer_buffer_modulo_inc@value 001B                           _I2C1_Initialize 2AC4  
                                 _ADC_ISR 2E9A                                   ?_setLED 001B  
                                 ?_memset 001B                                _crc_buffer 0128  
                               ?___ftpack 001B                                 TMR0_ISR@x 0005  
                 __size_of_ADC_Initialize 0018                                 ?___lwtoft 0023  
                      UART_buff_put@_this 0021                          i2_UART_buff_size 2E1C  
             i2UART_buff_modulo_inc@value 0001                                   _OSCCON2 000FD2  
                               _I2C1_Stop 2A82                         _Receive_available 2DF0  
            UART_buff_modulo_inc@my_value 001F                         __CFG_PRICLKEN$OFF 000000  
                                 _OSCTUNE 000F9B                                   _SPBRGH1 000FB0  
                                 _SSP1ADD 000FC8                       sendData@whereToSend 0028  
                         _ReadButtonState 1A70                       _receiveArrayAddress 00D3  
                                 _SSP1BUF 000FC9                          ?_TMR2_StartTimer 0001  
                      ?_Receive_available 001D                                begin@error 00F2  
                    __end_of_LEDblinkRate 2302             I2C1_MasterTRBInsert@ptrb_list 001B  
                                 _Off_Led 24BA                       ??_Receive_available 001F  
                               ?_sendData 0001                         _alignErrorCounter 00C5  
                         __CFG_PWRTEN$OFF 000000                 __size_of_buttonsCollector 0070  
                  ?_I2C1_FunctionComplete 0001                                ??_Send_put 0026  
                                 __Hparam 0000             __size_of_I2C1_MasterTRBInsert 00BA  
                                 __Lparam 0000                ??_TMR2_SetInterruptHandler 001D  
                         __size_of_ToSend 001E                        _p_i2c1_trb_current 00D1  
                    __end_of_Receive_peek 2E64                                 _AKNAKsend 0036  
                                 ___awdiv 2548                      _UART_buff_modulo_inc 2C60  
                                 ___ftmul 15E6                                   ___fttol 1372  
                                 _calc_CS 0037                                   __pcinit 2644  
                              ??___ftpack 0020                           __size_of_setLED 00BE  
                         __size_of_memset 002C                                   __ramtop 0600  
                        i2UART_buff_get@c 000B                                   __ptext0 1B86  
                                 __ptext1 2B3C                                   __ptext2 29FA  
                                 __ptext3 14B6                                   __ptext4 1D5C  
                                 __ptext5 279C                                   __ptext6 272C  
                                 __ptext7 2CB4                                   __ptext8 2D46  
                                 __ptext9 10AC                                ??___lwtoft 0026  
                               _T0CONbits 000FD5                          i2UART_buff_put@c 0009  
                   _OSCILLATOR_Initialize 2E72                 __end_of_Receive_available 2E06  
                               _T2CONbits 000FBA                   _FastTransfer_buffer_put 10AC  
                   CRCcheck@calculatedCRC 00EF                        _EUSART1_Initialize 2B00  
                        ?i2_UART_buff_get 0007                  ??_PIN_MANAGER_Initialize 001B  
                        ?i2_UART_buff_put 0007                                ?_I2C1_Stop 0001  
            crcBufS_status_put@wantedTime 0023                             ??_crcBufS_get 001F  
                           ??_crcBufS_put 0020                __size_of_SYSTEM_Initialize 0074  
                    I2C1_ISR@pi2c_buf_ptr 00BF                      end_of_initialization 26AA  
                               Delay@wait 001B                       ?_EUSART1_Initialize 0001  
                 LEDwriteDisplay@i2c_addr 014D                                 _LED_array 0088  
                                 memset@c 001D                                   memset@n 001F  
                                 memset@p 0021                              LEDsetBar@bar 0023  
                           __Lmediumconst 0000                                 _LEDsetBar 0788  
                  ??_I2C1_BusCollisionISR 0001                                ??_sendData 0027  
                 __end_of_I2C1_Initialize 2B00                     ?_UART_buff_modulo_inc 001B  
                    __size_of_updateComms 003A                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc2 000FDE  
                              _respondECU 29FA                     ReadButtonState@btnnum 0001  
                        begin@stufftosend 00F3                       CRCcheck@arrayHolder 00F0  
                            LEDsetValue@k 0149                      ??_EUSART1_Initialize 0025  
                     LEDblinkRate@timeOut 00F3                                 _PORTAbits 000F80  
                               _PORTBbits 000F81                                 _PORTDbits 000F83  
                       ??_LEDwriteDisplay 002B                   __end_of_ReadButtonState 1B86  
               __size_of_I2C1_MasterWrite 004C                    _dataAdressErrorCounter 00CB  
                       __size_of_I2C1_ISR 0274                                _rx_address 003D  
                               _TRISCbits 000F94                      __size_of_TBbarGraphs 0012  
                 LEDBsetBrightness@status 00F5         I2C1_ISR@i2c_10bit_address_restart 0034  
                     LEDbegin@writeBuffer 00F6                              begin@maxSize 00F0  
      __size_of_FastTransfer_buffer_flush 0062                     i2UART_buff_size@_this 0001  
                          _UART_buff_init 2D82                            _UART_buff_peek 2CDC  
                          _UART_buff_size 2E06                       __end_of_crcBufS_get 1D5C  
                              ?_LEDsetBar 0023                       __end_of_crcBufS_put 1E34  
                 I2C1_MasterWrite@address 0027                         __size_of_CRCcheck 015E  
               LEDBsetBrightness@i2c_addr 00F0                               ___ftmul@exp 00F1  
                       __size_of_LEDbegin 0098                             _moduleAddress 003B  
                    _timer0ReloadVal16bit 0042                                CRCcheck@rt 00F3  
                          __end_of_ToSend 2D64              __end_of_INTERRUPT_Initialize 2E56  
    __end_of_TMR2_DefaultInterruptHandler 2EA0     __size_of_TMR2_DefaultInterruptHandler 0002  
            _TMR2_DefaultInterruptHandler 2E9E                           _crcErrorCounter 00C9  
                 I2C1_MasterWrite@trBlock 00E4                         crcBufS_put@oldCRC 001E  
                           __pidataCOMRAM 2EA4                         __size_of_TMR0_ISR 0060  
                I2C1_Stop@completion_code 0003                         __size_of_TMR2_ISR 0008  
                          _ADC_Initialize 2DD8                 ??_FastTransfer_buffer_put 0026  
                  ?_OSCILLATOR_Initialize 0001                            __end_of_setLED 1FC8  
                          __end_of_memset 2C36                         crcBufS_put@status 001F  
                 buttonsCollector@sendVal 0026                              receiveData@r 0143  
              __size_of_Receive_available 0016                              receiveData@u 0141  
                        ??_GetButtonState 001D                         _LEDBsetBrightness 2302  
                     start_initialization 2644                     __size_of_LEDblinkRate 0096  
                             ??_I2C1_Stop 0001                  __size_of_TMR0_Initialize 001E  
         __size_of_PIN_MANAGER_Initialize 0050                     crcBufS_get@wantedTime 0025  
                      ?_LEDBsetBrightness 00EE                                 _SetLEDOut 0B8E  
       __size_of_I2C1_MasterWriteTRBBuild 0044                         ?_handleIndicators 0025  
               ?_I2C1_MasterWriteTRBBuild 001B                    __end_of_UART_buff_init 2DA0  
                  __end_of_UART_buff_peek 2D00                            UART_buff_get@c 0025  
                  __end_of_UART_buff_size 2E1C                              ?_Receive_get 0001  
                          UART_buff_put@c 0023                        ??_handleIndicators 0027  
                         LEDbegin@timeOut 00F9                       ??_LEDBsetBrightness 002B  
                   __size_of_Receive_peek 000E                          _buttonsCollector 272C  
                __end_ofi2_UART_buff_size 2E32                          ?_I2C1_Initialize 0001  
                                ??_ToSend 002C                    ??_UART_buff_modulo_inc 001F  
                                CRC8@data 001B                           crcBufS_get@time 001D  
                       __size_of_Send_put 002E                               ?_respondECU 0001  
              LEDwriteDisplay@writeBuffer 0139                    __size_of_TMR0_CallBack 0002  
                  __end_of_ADC_Initialize 2DF0                                LEDsetBar@a 0029  
                              LEDsetBar@c 0027                                  ?_ADC_ISR 0001  
                                ??_setLED 001D                                  ??_memset 0021  
                            _LEDblinkRate 226C                         handleIndicators@i 002A  
           ?_TMR2_DefaultInterruptHandler 0001                 __end_of_LEDBsetBrightness 2396  
            I2C1_MasterWriteTRBBuild@ptrb 001B                          ?_ReadButtonState 0001  
                       __size_of___ftpack 00AE                    __size_of_TMR2_CallBack 0058  
                             __pbssCOMRAM 002C                         __size_of___lwtoft 0024  
           __size_of_EUSART1_Transmit_ISR 0032                             __pcstackBANK0 00EE  
                           __pcstackBANK1 0139                             ??_LEDsetValue 0148  
                __size_of_TMR2_Initialize 0022                             _i2c1_tr_queue 00E9  
                   LEDwriteDisplay@status 0150                              _Receive_peek 2E56  
                              ?_SetLEDOut 001F                       UART_buff_init@_this 0023  
                             _crcBufS_get 1C7A                       UART_buff_peek@_this 001B  
                             _crcBufS_put 1D5C                          LEDsetValue@color 0146  
                         ?_UART_buff_init 0023                           ?_UART_buff_peek 001B  
                         ?_UART_buff_size 001B                          LEDsetValue@value 0144  
                 ??_I2C1_FunctionComplete 0001              __size_of_EUSART1_Receive_ISR 001E  
                           ??_receiveData 00F5               __size_of_crcBufS_status_put 00D6  
                              sendData@CS 0029                                  ?_Off_Led 001B  
                             ??_LEDsetBar 00EE                                 __pnvBANK0 00FE  
                __size_of_TMR0_StartTimer 0004                    __size_of_UART_buff_get 0092  
                  __size_of_UART_buff_put 011A                    _PIN_MANAGER_Initialize 2914  
                       __size_of_sendData 0130                                 __pintcode 0008  
                                ?___awdiv 001B                                  ?___ftmul 0026  
                                ?___fttol 00F7                           ?_ADC_Initialize 0001  
                                _I2C1_ISR 0E38              ??_INTERRUPT_InterruptManager 000D  
            LEDBsetBrightness@writeBuffer 00F1                      i2UART_buff_get@_this 0007  
                        _I2C1_MasterWrite 2964                                  _BAUD1CON 000FB8  
            __end_of_I2C1_MasterTRBInsert 2082                         buttonsCollector@i 0028  
                          __size_of_Delay 0034                                 _butnarray 00B0  
                          __size_of_begin 005E                             _TMR0_CallBack 2EA0  
                     __size_of_respondECU 0044                      _INTERRUPT_Initialize 2E44  
                    GetButtonState@btnnum 001B                              _receiveArray 0100  
                             _LEDNUM_ENAB 0098                    I2C1_MasterRead@trBlock 00DF  
                       ??_TMR0_Initialize 001B                       __end_of_LEDsetValue 21D4  
                                _CRCcheck 1214                                  _LATCbits 000F8B  
                                _LEDState 00A4                       UART_buff_size@_this 001B  
                           _TMR2_CallBack 28BC                                  _IPR1bits 000F9F  
                                _LEDbegin 21D4                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                           LEDblinkRate@b 00EE                  __size_of_TMR2_StartTimer 0004  
                         _LEDwriteDisplay 1712       __size_of_INTERRUPT_InterruptManager 00C8  
                                i2u332_40 1A86                                  i2u420_40 28DA  
                                i2u332_46 1A88                                  i2u333_40 1AA0  
                                i2u333_46 1AA2                                  i2u334_40 1ABA  
                                i2u334_46 1ABC                                  i2u335_40 1AD4  
                                i2u335_46 1AD6                                  i2u336_40 1AEE  
                                i2u423_48 28FE                                  i2u336_46 1AF0  
                                i2u433_40 2446                                  i2u337_40 1B08  
                                _PIR1bits 000F9E                                  i2u337_46 1B0A  
                                i2u338_40 1B22                                  i2u338_46 1B24  
                                i2u339_40 1B3C                                  i2u451_40 284C  
                                i2u419_40 28D2                                  _PIR2bits 000FA1  
                                i2u339_46 1B3E                                  i2u453_40 2BC4  
                     begin@stuffavailable 00F7                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                       __end_of_receiveData 0788  
                                _SSP1CON1 000FC6                                  _SSP1CON3 000FCB  
                                _TMR0_ISR 27FE                                  _TMR2_ISR 2E8A  
                               main@ADCNT 0151                                  _SSP1STAT 000FC7  
          FastTransfer_buffer_flush@_this 0023                              _input_buffer 0400  
                               _rx_buffer 0300                          __size_of_ADC_ISR 0004  
                              _ADCON0bits 000FC2                __size_of_LEDBsetBrightness 0094  
                    i2UART_buff_put@_this 0007                             _UART_buff_get 2396  
                           _UART_buff_put 183C            ??_TMR2_DefaultInterruptHandler 0001  
       __size_of_TMR2_SetInterruptHandler 000A                 ?_TMR2_SetInterruptHandler 001B  
                          ?_TMR0_CallBack 0001                  ??i2_UART_buff_modulo_inc 0005  
                             ??_SetLEDOut 0023                               _INTCON2bits 000FF1  
                   ?_INTERRUPT_Initialize 0001                         _sendStructAddress 00D5  
                __size_ofi2_UART_buff_get 0092                         ??_TMR2_Initialize 001D  
                __size_ofi2_UART_buff_put 011A                            ?_TMR2_CallBack 0001  
                           ??_updateComms 002C                      __size_of_Receive_get 000E  
                        __size_of_Off_Led 008E                                  __Hrparam 0000  
                                _Send_put 2BDC             __size_of_I2C1_BusCollisionISR 0002  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                               setLED@led 001B                    I2C1_ISR@i2c_bytes_left 0035  
                       __CFG_P2BMX$PORTD2 000000                   LEDblinkRate@writeBuffer 00F1  
                 ??_OSCILLATOR_Initialize 001B                         ??_TMR0_StartTimer 001B  
                          LEDsetBar@color 0025                          __size_of___awdiv 0084  
                        __size_of___ftmul 012C                          __size_of___fttol 0144  
             __size_of_EUSART1_Initialize 003C                       begin@stufftoreceive 00F5  
                                ___ftpack 2082          __end_of_I2C1_MasterWriteTRBBuild 2A82  
                                ___lwtoft 2D00                            ?_UART_buff_get 0021  
                          ?_UART_buff_put 0021                               CRC8@extract 001F  
                __end_of_buttonsCollector 279C                                 sendData@i 002A  
                           ??_TBbarGraphs 001F                       I2C1_ISR@i2c_address 0040  
                             _LEDsetValue 2130                  crcBufS_status_put@status 001E  
                                __ptext10 2C36                                  __ptext11 2B76  
                                __ptext20 2E64                                  __ptext12 00D4  
                                __ptext21 2396                                  __ptext13 2BDC  
                                __ptext30 2E32                                  __ptext22 2C60  
                                __ptext14 183C                                  __ptext31 2D00  
                                __ptext23 2DF0                                  __ptext15 2E56  
                                __ptext40 2D64                                  __ptext32 1372  
                                __ptext24 2E06                                  __ptext16 2CDC  
                                __ptext41 2E96                                  __ptext33 15E6  
                                __ptext25 29B0                                  __ptext17 1214  
                                __ptext50 1712                                  __ptext42 2914  
                                __ptext34 2082                                  __ptext26 25CC  
                                __ptext18 1E34                                  __ptext51 2130  
                                __ptext43 2E72                                  __ptext35 26B8  
                                __ptext27 0B8E                                  __ptext19 1C7A  
                                __ptext52 0788                                  __ptext44 2E44  
                                __ptext36 285E                                  __ptext28 1F0A  
                                __ptext61 2E8A                                  __ptext53 2548  
                                __ptext45 2AC4                                  __ptext37 2D24  
                                __ptext29 24BA                                  __ptext70 2EA2  
                                __ptext62 28BC                                  __ptext54 21D4  
                                __ptext46 2B00                                  __ptext38 2E92  
                                __ptext71 2BAA                                  __ptext63 2E9E  
                                __ptext55 226C                                  __ptext47 2D82  
                                __ptext39 2E80                                  __ptext72 2E1C  
                                __ptext64 27FE                                  __ptext56 2302  
                                __ptext48 2C0A                                  __ptext73 2428  
                                __ptext65 2EA0                                  __ptext57 2964  
                                __ptext49 2DD8                                  __ptext74 2DA0  
                                __ptext66 1A70                                  __ptext58 2A3E  
                                __ptext75 1956                                  __ptext67 0E38  
                                __ptext59 1FC8                                  __ptext76 2C8A  
                                __ptext68 2A82                                  __ptext77 2E9A  
                                __ptext69 2DBE                                  __ptext78 0000  
                            _SSP1CON1bits 000FC6                              _SSP1CON2bits 000FC5  
                           __size_of_CRC8 004A                                  begin@ptr 00EE  
                 EUSART1_Receive_ISR@data 000C                   __end_of_LEDwriteDisplay 183C  
                           _returnAddress 003C                             __size_of_main 00F4  
                             _receiveData 00D4                            _Transmit_stall 0044  
                                _sendData 14B6                      _I2C1_MasterTRBInsert 1FC8  
                       ?i2_UART_buff_size 0001                                _RC1STAbits 000FAB  
                    LEDblinkRate@i2c_addr 00F0                              ??_respondECU 002C  
                      ??i2_UART_buff_size 0003                                  int$flags 0045  
               __size_of_handleIndicators 0078             handleIndicators@oldIndicators 00DD  
                            _serial_write 0032                                  _throttle 00D9  
                       ??_TMR2_StartTimer 001B                       __end_of_updateComms 2B76  
      __end_of_INTERRUPT_InterruptManager 00D0                _INTERRUPT_InterruptManager 0008  
                     _EUSART1_Receive_ISR 2DA0                         receiveData@holder 0139  
                      LEDBsetBrightness@b 00EE                                _INTCONbits 000FF2  
                         ??_TMR0_CallBack 0001                 UART_buff_modulo_inc@value 001B  
      handleIndicators@receivedIndicators 0025                          ??_UART_buff_init 0025  
                        ??_UART_buff_peek 001D                          ??_UART_buff_size 001D  
                  ??_INTERRUPT_Initialize 001B                                  memset@p1 001B  
                        _serial_available 002E           __size_ofi2_UART_buff_modulo_inc 002A  
                            ?_crcBufS_get 001B                              ?_crcBufS_put 001B  
                                intlevel2 0000                   crcBufS_status_put@_this 001B  
                         ??_TMR2_CallBack 0001                        __end_of_respondECU 2A3E  
                     __end_of_TBbarGraphs 2E44                      ?_EUSART1_Receive_ISR 0001  
  FastTransfer_buffer_modulo_inc@my_value 001F            FastTransfer_buffer_put@towhere 0023  
                 ?_PIN_MANAGER_Initialize 0001                  __end_of_I2C1_MasterWrite 29B0  
          __size_of_I2C1_FunctionComplete 001A             __end_of_I2C1_FunctionComplete 2DD8  
                   ?_I2C1_MasterTRBInsert 001B              __end_of_EUSART1_Transmit_ISR 2BDC  
                             _ring_buffer 0200                          ??_ADC_Initialize 001B  
              ?_FastTransfer_buffer_flush 0023                         ??i2_UART_buff_get 0009  
                             _serial_peek 00D7                               _serial_read 0030  
                       ??i2_UART_buff_put 000A                  ?_FastTransfer_buffer_put 0021  
           __size_of_UART_buff_modulo_inc 002A                  __size_of_I2C1_Initialize 003C  
                         ??_UART_buff_get 0023                           ??_UART_buff_put 0024  
   FastTransfer_buffer_modulo_inc@modulus 001D                    crcBufS_status_put@time 001D  
                         _TMR0_Initialize 2D64                 receiveData@crcHolder_2231 0140  
                _I2C1_MasterWriteTRBBuild 2A3E                         __CFG_T3CMX$PORTC0 000000  
                          _maxDataAddress 003A                  __size_of_ReadButtonState 0116  
              __end_of_crcBufS_status_put 1F0A                     ??_EUSART1_Receive_ISR 000C  
          __end_of_PIN_MANAGER_Initialize 2964          ??_FastTransfer_buffer_modulo_inc 001F  
         ?_FastTransfer_buffer_modulo_inc 001B                          ?_LEDwriteDisplay 0001  
                 __size_of_GetButtonState 0028                        __size_of_I2C1_Stop 0042  
                           _displaybuffer 0060                         __CFG_FOSC$INTIO67 000000  
                   _TMR2_InterruptHandler 00FE                               _updateComms 2B3C  
