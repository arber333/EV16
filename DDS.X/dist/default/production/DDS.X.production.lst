

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sun May 01 04:43:54 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   102                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   103  0000                     
   104                           	psect	idataCOMRAM
   105  00304E                     __pidataCOMRAM:
   106                           	opt stack 0
   107                           
   108                           ;initializer for _Transmit_stall
   109  00304E  01                 	db	1
   110                           
   111                           	psect	mediumconst
   112  007CE2                     __pmediumconst:
   113                           	opt stack 0
   114  007CE2  00                 	db	0
   115  007CE3                     _OledFont:
   116                           	opt stack 0
   117  007CE3  00                 	db	0
   118  007CE4  00                 	db	0
   119  007CE5  00                 	db	0
   120  007CE6  00                 	db	0
   121  007CE7  00                 	db	0
   122  007CE8  00                 	db	0
   123  007CE9  00                 	db	0
   124  007CEA  00                 	db	0
   125  007CEB  00                 	db	0
   126  007CEC  00                 	db	0
   127  007CED  5F                 	db	95
   128  007CEE  00                 	db	0
   129  007CEF  00                 	db	0
   130  007CF0  00                 	db	0
   131  007CF1  00                 	db	0
   132  007CF2  00                 	db	0
   133  007CF3  00                 	db	0
   134  007CF4  00                 	db	0
   135  007CF5  07                 	db	7
   136  007CF6  00                 	db	0
   137  007CF7  07                 	db	7
   138  007CF8  00                 	db	0
   139  007CF9  00                 	db	0
   140  007CFA  00                 	db	0
   141  007CFB  00                 	db	0
   142  007CFC  14                 	db	20
   143  007CFD  7F                 	db	127
   144  007CFE  14                 	db	20
   145  007CFF  7F                 	db	127
   146  007D00  14                 	db	20
   147  007D01  00                 	db	0
   148  007D02  00                 	db	0
   149  007D03  00                 	db	0
   150  007D04  24                 	db	36
   151  007D05  2A                 	db	42
   152  007D06  7F                 	db	127
   153  007D07  2A                 	db	42
   154  007D08  12                 	db	18
   155  007D09  00                 	db	0
   156  007D0A  00                 	db	0
   157  007D0B  00                 	db	0
   158  007D0C  23                 	db	35
   159  007D0D  13                 	db	19
   160  007D0E  08                 	db	8
   161  007D0F  64                 	db	100
   162  007D10  62                 	db	98
   163  007D11  00                 	db	0
   164  007D12  00                 	db	0
   165  007D13  00                 	db	0
   166  007D14  36                 	db	54
   167  007D15  49                 	db	73
   168  007D16  55                 	db	85
   169  007D17  22                 	db	34
   170  007D18  50                 	db	80
   171  007D19  00                 	db	0
   172  007D1A  00                 	db	0
   173  007D1B  00                 	db	0
   174  007D1C  00                 	db	0
   175  007D1D  05                 	db	5
   176  007D1E  03                 	db	3
   177  007D1F  00                 	db	0
   178  007D20  00                 	db	0
   179  007D21  00                 	db	0
   180  007D22  00                 	db	0
   181  007D23  00                 	db	0
   182  007D24  1C                 	db	28
   183  007D25  22                 	db	34
   184  007D26  41                 	db	65
   185  007D27  00                 	db	0
   186  007D28  00                 	db	0
   187  007D29  00                 	db	0
   188  007D2A  00                 	db	0
   189  007D2B  00                 	db	0
   190  007D2C  41                 	db	65
   191  007D2D  22                 	db	34
   192  007D2E  1C                 	db	28
   193  007D2F  00                 	db	0
   194  007D30  00                 	db	0
   195  007D31  00                 	db	0
   196  007D32  00                 	db	0
   197  007D33  00                 	db	0
   198  007D34  08                 	db	8
   199  007D35  2A                 	db	42
   200  007D36  1C                 	db	28
   201  007D37  2A                 	db	42
   202  007D38  08                 	db	8
   203  007D39  00                 	db	0
   204  007D3A  00                 	db	0
   205  007D3B  00                 	db	0
   206  007D3C  08                 	db	8
   207  007D3D  08                 	db	8
   208  007D3E  3E                 	db	62
   209  007D3F  08                 	db	8
   210  007D40  08                 	db	8
   211  007D41  00                 	db	0
   212  007D42  00                 	db	0
   213  007D43  00                 	db	0
   214  007D44  A0                 	db	160
   215  007D45  60                 	db	96
   216  007D46  00                 	db	0
   217  007D47  00                 	db	0
   218  007D48  00                 	db	0
   219  007D49  00                 	db	0
   220  007D4A  00                 	db	0
   221  007D4B  00                 	db	0
   222  007D4C  08                 	db	8
   223  007D4D  08                 	db	8
   224  007D4E  08                 	db	8
   225  007D4F  08                 	db	8
   226  007D50  08                 	db	8
   227  007D51  00                 	db	0
   228  007D52  00                 	db	0
   229  007D53  00                 	db	0
   230  007D54  60                 	db	96
   231  007D55  60                 	db	96
   232  007D56  00                 	db	0
   233  007D57  00                 	db	0
   234  007D58  00                 	db	0
   235  007D59  00                 	db	0
   236  007D5A  00                 	db	0
   237  007D5B  00                 	db	0
   238  007D5C  20                 	db	32
   239  007D5D  10                 	db	16
   240  007D5E  08                 	db	8
   241  007D5F  04                 	db	4
   242  007D60  02                 	db	2
   243  007D61  00                 	db	0
   244  007D62  00                 	db	0
   245  007D63  00                 	db	0
   246  007D64  3E                 	db	62
   247  007D65  51                 	db	81
   248  007D66  49                 	db	73
   249  007D67  45                 	db	69
   250  007D68  3E                 	db	62
   251  007D69  00                 	db	0
   252  007D6A  00                 	db	0
   253  007D6B  00                 	db	0
   254  007D6C  00                 	db	0
   255  007D6D  42                 	db	66
   256  007D6E  7F                 	db	127
   257  007D6F  40                 	db	64
   258  007D70  00                 	db	0
   259  007D71  00                 	db	0
   260  007D72  00                 	db	0
   261  007D73  00                 	db	0
   262  007D74  62                 	db	98
   263  007D75  51                 	db	81
   264  007D76  49                 	db	73
   265  007D77  49                 	db	73
   266  007D78  46                 	db	70
   267  007D79  00                 	db	0
   268  007D7A  00                 	db	0
   269  007D7B  00                 	db	0
   270  007D7C  22                 	db	34
   271  007D7D  41                 	db	65
   272  007D7E  49                 	db	73
   273  007D7F  49                 	db	73
   274  007D80  36                 	db	54
   275  007D81  00                 	db	0
   276  007D82  00                 	db	0
   277  007D83  00                 	db	0
   278  007D84  18                 	db	24
   279  007D85  14                 	db	20
   280  007D86  12                 	db	18
   281  007D87  7F                 	db	127
   282  007D88  10                 	db	16
   283  007D89  00                 	db	0
   284  007D8A  00                 	db	0
   285  007D8B  00                 	db	0
   286  007D8C  27                 	db	39
   287  007D8D  45                 	db	69
   288  007D8E  45                 	db	69
   289  007D8F  45                 	db	69
   290  007D90  39                 	db	57
   291  007D91  00                 	db	0
   292  007D92  00                 	db	0
   293  007D93  00                 	db	0
   294  007D94  3C                 	db	60
   295  007D95  4A                 	db	74
   296  007D96  49                 	db	73
   297  007D97  49                 	db	73
   298  007D98  30                 	db	48
   299  007D99  00                 	db	0
   300  007D9A  00                 	db	0
   301  007D9B  00                 	db	0
   302  007D9C  01                 	db	1
   303  007D9D  71                 	db	113
   304  007D9E  09                 	db	9
   305  007D9F  05                 	db	5
   306  007DA0  03                 	db	3
   307  007DA1  00                 	db	0
   308  007DA2  00                 	db	0
   309  007DA3  00                 	db	0
   310  007DA4  36                 	db	54
   311  007DA5  49                 	db	73
   312  007DA6  49                 	db	73
   313  007DA7  49                 	db	73
   314  007DA8  36                 	db	54
   315  007DA9  00                 	db	0
   316  007DAA  00                 	db	0
   317  007DAB  00                 	db	0
   318  007DAC  06                 	db	6
   319  007DAD  49                 	db	73
   320  007DAE  49                 	db	73
   321  007DAF  29                 	db	41
   322  007DB0  1E                 	db	30
   323  007DB1  00                 	db	0
   324  007DB2  00                 	db	0
   325  007DB3  00                 	db	0
   326  007DB4  00                 	db	0
   327  007DB5  36                 	db	54
   328  007DB6  36                 	db	54
   329  007DB7  00                 	db	0
   330  007DB8  00                 	db	0
   331  007DB9  00                 	db	0
   332  007DBA  00                 	db	0
   333  007DBB  00                 	db	0
   334  007DBC  00                 	db	0
   335  007DBD  AC                 	db	172
   336  007DBE  6C                 	db	108
   337  007DBF  00                 	db	0
   338  007DC0  00                 	db	0
   339  007DC1  00                 	db	0
   340  007DC2  00                 	db	0
   341  007DC3  00                 	db	0
   342  007DC4  08                 	db	8
   343  007DC5  14                 	db	20
   344  007DC6  22                 	db	34
   345  007DC7  41                 	db	65
   346  007DC8  00                 	db	0
   347  007DC9  00                 	db	0
   348  007DCA  00                 	db	0
   349  007DCB  00                 	db	0
   350  007DCC  14                 	db	20
   351  007DCD  14                 	db	20
   352  007DCE  14                 	db	20
   353  007DCF  14                 	db	20
   354  007DD0  14                 	db	20
   355  007DD1  00                 	db	0
   356  007DD2  00                 	db	0
   357  007DD3  00                 	db	0
   358  007DD4  41                 	db	65
   359  007DD5  22                 	db	34
   360  007DD6  14                 	db	20
   361  007DD7  08                 	db	8
   362  007DD8  00                 	db	0
   363  007DD9  00                 	db	0
   364  007DDA  00                 	db	0
   365  007DDB  00                 	db	0
   366  007DDC  02                 	db	2
   367  007DDD  01                 	db	1
   368  007DDE  51                 	db	81
   369  007DDF  09                 	db	9
   370  007DE0  06                 	db	6
   371  007DE1  00                 	db	0
   372  007DE2  00                 	db	0
   373  007DE3  00                 	db	0
   374  007DE4  32                 	db	50
   375  007DE5  49                 	db	73
   376  007DE6  79                 	db	121
   377  007DE7  41                 	db	65
   378  007DE8  3E                 	db	62
   379  007DE9  00                 	db	0
   380  007DEA  00                 	db	0
   381  007DEB  00                 	db	0
   382  007DEC  7E                 	db	126
   383  007DED  09                 	db	9
   384  007DEE  09                 	db	9
   385  007DEF  09                 	db	9
   386  007DF0  7E                 	db	126
   387  007DF1  00                 	db	0
   388  007DF2  00                 	db	0
   389  007DF3  00                 	db	0
   390  007DF4  7F                 	db	127
   391  007DF5  49                 	db	73
   392  007DF6  49                 	db	73
   393  007DF7  49                 	db	73
   394  007DF8  36                 	db	54
   395  007DF9  00                 	db	0
   396  007DFA  00                 	db	0
   397  007DFB  00                 	db	0
   398  007DFC  3E                 	db	62
   399  007DFD  41                 	db	65
   400  007DFE  41                 	db	65
   401  007DFF  41                 	db	65
   402  007E00  22                 	db	34
   403  007E01  00                 	db	0
   404  007E02  00                 	db	0
   405  007E03  00                 	db	0
   406  007E04  7F                 	db	127
   407  007E05  41                 	db	65
   408  007E06  41                 	db	65
   409  007E07  22                 	db	34
   410  007E08  1C                 	db	28
   411  007E09  00                 	db	0
   412  007E0A  00                 	db	0
   413  007E0B  00                 	db	0
   414  007E0C  7F                 	db	127
   415  007E0D  49                 	db	73
   416  007E0E  49                 	db	73
   417  007E0F  49                 	db	73
   418  007E10  41                 	db	65
   419  007E11  00                 	db	0
   420  007E12  00                 	db	0
   421  007E13  00                 	db	0
   422  007E14  7F                 	db	127
   423  007E15  09                 	db	9
   424  007E16  09                 	db	9
   425  007E17  09                 	db	9
   426  007E18  01                 	db	1
   427  007E19  00                 	db	0
   428  007E1A  00                 	db	0
   429  007E1B  00                 	db	0
   430  007E1C  3E                 	db	62
   431  007E1D  41                 	db	65
   432  007E1E  41                 	db	65
   433  007E1F  51                 	db	81
   434  007E20  72                 	db	114
   435  007E21  00                 	db	0
   436  007E22  00                 	db	0
   437  007E23  00                 	db	0
   438  007E24  7F                 	db	127
   439  007E25  08                 	db	8
   440  007E26  08                 	db	8
   441  007E27  08                 	db	8
   442  007E28  7F                 	db	127
   443  007E29  00                 	db	0
   444  007E2A  00                 	db	0
   445  007E2B  00                 	db	0
   446  007E2C  41                 	db	65
   447  007E2D  7F                 	db	127
   448  007E2E  41                 	db	65
   449  007E2F  00                 	db	0
   450  007E30  00                 	db	0
   451  007E31  00                 	db	0
   452  007E32  00                 	db	0
   453  007E33  00                 	db	0
   454  007E34  20                 	db	32
   455  007E35  40                 	db	64
   456  007E36  41                 	db	65
   457  007E37  3F                 	db	63
   458  007E38  01                 	db	1
   459  007E39  00                 	db	0
   460  007E3A  00                 	db	0
   461  007E3B  00                 	db	0
   462  007E3C  7F                 	db	127
   463  007E3D  08                 	db	8
   464  007E3E  14                 	db	20
   465  007E3F  22                 	db	34
   466  007E40  41                 	db	65
   467  007E41  00                 	db	0
   468  007E42  00                 	db	0
   469  007E43  00                 	db	0
   470  007E44  7F                 	db	127
   471  007E45  40                 	db	64
   472  007E46  40                 	db	64
   473  007E47  40                 	db	64
   474  007E48  40                 	db	64
   475  007E49  00                 	db	0
   476  007E4A  00                 	db	0
   477  007E4B  00                 	db	0
   478  007E4C  7F                 	db	127
   479  007E4D  02                 	db	2
   480  007E4E  0C                 	db	12
   481  007E4F  02                 	db	2
   482  007E50  7F                 	db	127
   483  007E51  00                 	db	0
   484  007E52  00                 	db	0
   485  007E53  00                 	db	0
   486  007E54  7F                 	db	127
   487  007E55  04                 	db	4
   488  007E56  08                 	db	8
   489  007E57  10                 	db	16
   490  007E58  7F                 	db	127
   491  007E59  00                 	db	0
   492  007E5A  00                 	db	0
   493  007E5B  00                 	db	0
   494  007E5C  3E                 	db	62
   495  007E5D  41                 	db	65
   496  007E5E  41                 	db	65
   497  007E5F  41                 	db	65
   498  007E60  3E                 	db	62
   499  007E61  00                 	db	0
   500  007E62  00                 	db	0
   501  007E63  00                 	db	0
   502  007E64  7F                 	db	127
   503  007E65  09                 	db	9
   504  007E66  09                 	db	9
   505  007E67  09                 	db	9
   506  007E68  06                 	db	6
   507  007E69  00                 	db	0
   508  007E6A  00                 	db	0
   509  007E6B  00                 	db	0
   510  007E6C  3E                 	db	62
   511  007E6D  41                 	db	65
   512  007E6E  51                 	db	81
   513  007E6F  21                 	db	33
   514  007E70  5E                 	db	94
   515  007E71  00                 	db	0
   516  007E72  00                 	db	0
   517  007E73  00                 	db	0
   518  007E74  7F                 	db	127
   519  007E75  09                 	db	9
   520  007E76  19                 	db	25
   521  007E77  29                 	db	41
   522  007E78  46                 	db	70
   523  007E79  00                 	db	0
   524  007E7A  00                 	db	0
   525  007E7B  00                 	db	0
   526  007E7C  26                 	db	38
   527  007E7D  49                 	db	73
   528  007E7E  49                 	db	73
   529  007E7F  49                 	db	73
   530  007E80  32                 	db	50
   531  007E81  00                 	db	0
   532  007E82  00                 	db	0
   533  007E83  00                 	db	0
   534  007E84  01                 	db	1
   535  007E85  01                 	db	1
   536  007E86  7F                 	db	127
   537  007E87  01                 	db	1
   538  007E88  01                 	db	1
   539  007E89  00                 	db	0
   540  007E8A  00                 	db	0
   541  007E8B  00                 	db	0
   542  007E8C  3F                 	db	63
   543  007E8D  40                 	db	64
   544  007E8E  40                 	db	64
   545  007E8F  40                 	db	64
   546  007E90  3F                 	db	63
   547  007E91  00                 	db	0
   548  007E92  00                 	db	0
   549  007E93  00                 	db	0
   550  007E94  1F                 	db	31
   551  007E95  20                 	db	32
   552  007E96  40                 	db	64
   553  007E97  20                 	db	32
   554  007E98  1F                 	db	31
   555  007E99  00                 	db	0
   556  007E9A  00                 	db	0
   557  007E9B  00                 	db	0
   558  007E9C  3F                 	db	63
   559  007E9D  40                 	db	64
   560  007E9E  38                 	db	56
   561  007E9F  40                 	db	64
   562  007EA0  3F                 	db	63
   563  007EA1  00                 	db	0
   564  007EA2  00                 	db	0
   565  007EA3  00                 	db	0
   566  007EA4  63                 	db	99
   567  007EA5  14                 	db	20
   568  007EA6  08                 	db	8
   569  007EA7  14                 	db	20
   570  007EA8  63                 	db	99
   571  007EA9  00                 	db	0
   572  007EAA  00                 	db	0
   573  007EAB  00                 	db	0
   574  007EAC  03                 	db	3
   575  007EAD  04                 	db	4
   576  007EAE  78                 	db	120
   577  007EAF  04                 	db	4
   578  007EB0  03                 	db	3
   579  007EB1  00                 	db	0
   580  007EB2  00                 	db	0
   581  007EB3  00                 	db	0
   582  007EB4  61                 	db	97
   583  007EB5  51                 	db	81
   584  007EB6  49                 	db	73
   585  007EB7  45                 	db	69
   586  007EB8  43                 	db	67
   587  007EB9  00                 	db	0
   588  007EBA  00                 	db	0
   589  007EBB  00                 	db	0
   590  007EBC  7F                 	db	127
   591  007EBD  41                 	db	65
   592  007EBE  41                 	db	65
   593  007EBF  00                 	db	0
   594  007EC0  00                 	db	0
   595  007EC1  00                 	db	0
   596  007EC2  00                 	db	0
   597  007EC3  00                 	db	0
   598  007EC4  02                 	db	2
   599  007EC5  04                 	db	4
   600  007EC6  08                 	db	8
   601  007EC7  10                 	db	16
   602  007EC8  20                 	db	32
   603  007EC9  00                 	db	0
   604  007ECA  00                 	db	0
   605  007ECB  00                 	db	0
   606  007ECC  41                 	db	65
   607  007ECD  41                 	db	65
   608  007ECE  7F                 	db	127
   609  007ECF  00                 	db	0
   610  007ED0  00                 	db	0
   611  007ED1  00                 	db	0
   612  007ED2  00                 	db	0
   613  007ED3  00                 	db	0
   614  007ED4  04                 	db	4
   615  007ED5  02                 	db	2
   616  007ED6  01                 	db	1
   617  007ED7  02                 	db	2
   618  007ED8  04                 	db	4
   619  007ED9  00                 	db	0
   620  007EDA  00                 	db	0
   621  007EDB  00                 	db	0
   622  007EDC  80                 	db	128
   623  007EDD  80                 	db	128
   624  007EDE  80                 	db	128
   625  007EDF  80                 	db	128
   626  007EE0  80                 	db	128
   627  007EE1  00                 	db	0
   628  007EE2  00                 	db	0
   629  007EE3  00                 	db	0
   630  007EE4  01                 	db	1
   631  007EE5  02                 	db	2
   632  007EE6  04                 	db	4
   633  007EE7  00                 	db	0
   634  007EE8  00                 	db	0
   635  007EE9  00                 	db	0
   636  007EEA  00                 	db	0
   637  007EEB  00                 	db	0
   638  007EEC  20                 	db	32
   639  007EED  54                 	db	84
   640  007EEE  54                 	db	84
   641  007EEF  54                 	db	84
   642  007EF0  78                 	db	120
   643  007EF1  00                 	db	0
   644  007EF2  00                 	db	0
   645  007EF3  00                 	db	0
   646  007EF4  7F                 	db	127
   647  007EF5  48                 	db	72
   648  007EF6  44                 	db	68
   649  007EF7  44                 	db	68
   650  007EF8  38                 	db	56
   651  007EF9  00                 	db	0
   652  007EFA  00                 	db	0
   653  007EFB  00                 	db	0
   654  007EFC  38                 	db	56
   655  007EFD  44                 	db	68
   656  007EFE  44                 	db	68
   657  007EFF  28                 	db	40
   658  007F00  00                 	db	0
   659  007F01  00                 	db	0
   660  007F02  00                 	db	0
   661  007F03  00                 	db	0
   662  007F04  38                 	db	56
   663  007F05  44                 	db	68
   664  007F06  44                 	db	68
   665  007F07  48                 	db	72
   666  007F08  7F                 	db	127
   667  007F09  00                 	db	0
   668  007F0A  00                 	db	0
   669  007F0B  00                 	db	0
   670  007F0C  38                 	db	56
   671  007F0D  54                 	db	84
   672  007F0E  54                 	db	84
   673  007F0F  54                 	db	84
   674  007F10  18                 	db	24
   675  007F11  00                 	db	0
   676  007F12  00                 	db	0
   677  007F13  00                 	db	0
   678  007F14  08                 	db	8
   679  007F15  7E                 	db	126
   680  007F16  09                 	db	9
   681  007F17  02                 	db	2
   682  007F18  00                 	db	0
   683  007F19  00                 	db	0
   684  007F1A  00                 	db	0
   685  007F1B  00                 	db	0
   686  007F1C  18                 	db	24
   687  007F1D  A4                 	db	164
   688  007F1E  A4                 	db	164
   689  007F1F  A4                 	db	164
   690  007F20  7C                 	db	124
   691  007F21  00                 	db	0
   692  007F22  00                 	db	0
   693  007F23  00                 	db	0
   694  007F24  7F                 	db	127
   695  007F25  08                 	db	8
   696  007F26  04                 	db	4
   697  007F27  04                 	db	4
   698  007F28  78                 	db	120
   699  007F29  00                 	db	0
   700  007F2A  00                 	db	0
   701  007F2B  00                 	db	0
   702  007F2C  00                 	db	0
   703  007F2D  7D                 	db	125
   704  007F2E  00                 	db	0
   705  007F2F  00                 	db	0
   706  007F30  00                 	db	0
   707  007F31  00                 	db	0
   708  007F32  00                 	db	0
   709  007F33  00                 	db	0
   710  007F34  80                 	db	128
   711  007F35  84                 	db	132
   712  007F36  7D                 	db	125
   713  007F37  00                 	db	0
   714  007F38  00                 	db	0
   715  007F39  00                 	db	0
   716  007F3A  00                 	db	0
   717  007F3B  00                 	db	0
   718  007F3C  7F                 	db	127
   719  007F3D  10                 	db	16
   720  007F3E  28                 	db	40
   721  007F3F  44                 	db	68
   722  007F40  00                 	db	0
   723  007F41  00                 	db	0
   724  007F42  00                 	db	0
   725  007F43  00                 	db	0
   726  007F44  41                 	db	65
   727  007F45  7F                 	db	127
   728  007F46  40                 	db	64
   729  007F47  00                 	db	0
   730  007F48  00                 	db	0
   731  007F49  00                 	db	0
   732  007F4A  00                 	db	0
   733  007F4B  00                 	db	0
   734  007F4C  7C                 	db	124
   735  007F4D  04                 	db	4
   736  007F4E  18                 	db	24
   737  007F4F  04                 	db	4
   738  007F50  78                 	db	120
   739  007F51  00                 	db	0
   740  007F52  00                 	db	0
   741  007F53  00                 	db	0
   742  007F54  7C                 	db	124
   743  007F55  08                 	db	8
   744  007F56  04                 	db	4
   745  007F57  7C                 	db	124
   746  007F58  00                 	db	0
   747  007F59  00                 	db	0
   748  007F5A  00                 	db	0
   749  007F5B  00                 	db	0
   750  007F5C  38                 	db	56
   751  007F5D  44                 	db	68
   752  007F5E  44                 	db	68
   753  007F5F  38                 	db	56
   754  007F60  00                 	db	0
   755  007F61  00                 	db	0
   756  007F62  00                 	db	0
   757  007F63  00                 	db	0
   758  007F64  FC                 	db	252
   759  007F65  24                 	db	36
   760  007F66  24                 	db	36
   761  007F67  18                 	db	24
   762  007F68  00                 	db	0
   763  007F69  00                 	db	0
   764  007F6A  00                 	db	0
   765  007F6B  00                 	db	0
   766  007F6C  18                 	db	24
   767  007F6D  24                 	db	36
   768  007F6E  24                 	db	36
   769  007F6F  FC                 	db	252
   770  007F70  00                 	db	0
   771  007F71  00                 	db	0
   772  007F72  00                 	db	0
   773  007F73  00                 	db	0
   774  007F74  00                 	db	0
   775  007F75  7C                 	db	124
   776  007F76  08                 	db	8
   777  007F77  04                 	db	4
   778  007F78  00                 	db	0
   779  007F79  00                 	db	0
   780  007F7A  00                 	db	0
   781  007F7B  00                 	db	0
   782  007F7C  48                 	db	72
   783  007F7D  54                 	db	84
   784  007F7E  54                 	db	84
   785  007F7F  24                 	db	36
   786  007F80  00                 	db	0
   787  007F81  00                 	db	0
   788  007F82  00                 	db	0
   789  007F83  00                 	db	0
   790  007F84  04                 	db	4
   791  007F85  7F                 	db	127
   792  007F86  44                 	db	68
   793  007F87  00                 	db	0
   794  007F88  00                 	db	0
   795  007F89  00                 	db	0
   796  007F8A  00                 	db	0
   797  007F8B  00                 	db	0
   798  007F8C  3C                 	db	60
   799  007F8D  40                 	db	64
   800  007F8E  40                 	db	64
   801  007F8F  7C                 	db	124
   802  007F90  00                 	db	0
   803  007F91  00                 	db	0
   804  007F92  00                 	db	0
   805  007F93  00                 	db	0
   806  007F94  1C                 	db	28
   807  007F95  20                 	db	32
   808  007F96  40                 	db	64
   809  007F97  20                 	db	32
   810  007F98  1C                 	db	28
   811  007F99  00                 	db	0
   812  007F9A  00                 	db	0
   813  007F9B  00                 	db	0
   814  007F9C  3C                 	db	60
   815  007F9D  40                 	db	64
   816  007F9E  30                 	db	48
   817  007F9F  40                 	db	64
   818  007FA0  3C                 	db	60
   819  007FA1  00                 	db	0
   820  007FA2  00                 	db	0
   821  007FA3  00                 	db	0
   822  007FA4  44                 	db	68
   823  007FA5  28                 	db	40
   824  007FA6  10                 	db	16
   825  007FA7  28                 	db	40
   826  007FA8  44                 	db	68
   827  007FA9  00                 	db	0
   828  007FAA  00                 	db	0
   829  007FAB  00                 	db	0
   830  007FAC  1C                 	db	28
   831  007FAD  A0                 	db	160
   832  007FAE  A0                 	db	160
   833  007FAF  7C                 	db	124
   834  007FB0  00                 	db	0
   835  007FB1  00                 	db	0
   836  007FB2  00                 	db	0
   837  007FB3  00                 	db	0
   838  007FB4  44                 	db	68
   839  007FB5  64                 	db	100
   840  007FB6  54                 	db	84
   841  007FB7  4C                 	db	76
   842  007FB8  44                 	db	68
   843  007FB9  00                 	db	0
   844  007FBA  00                 	db	0
   845  007FBB  00                 	db	0
   846  007FBC  08                 	db	8
   847  007FBD  36                 	db	54
   848  007FBE  41                 	db	65
   849  007FBF  00                 	db	0
   850  007FC0  00                 	db	0
   851  007FC1  00                 	db	0
   852  007FC2  00                 	db	0
   853  007FC3  00                 	db	0
   854  007FC4  00                 	db	0
   855  007FC5  7F                 	db	127
   856  007FC6  00                 	db	0
   857  007FC7  00                 	db	0
   858  007FC8  00                 	db	0
   859  007FC9  00                 	db	0
   860  007FCA  00                 	db	0
   861  007FCB  00                 	db	0
   862  007FCC  41                 	db	65
   863  007FCD  36                 	db	54
   864  007FCE  08                 	db	8
   865  007FCF  00                 	db	0
   866  007FD0  00                 	db	0
   867  007FD1  00                 	db	0
   868  007FD2  00                 	db	0
   869  007FD3  00                 	db	0
   870  007FD4  02                 	db	2
   871  007FD5  01                 	db	1
   872  007FD6  01                 	db	1
   873  007FD7  02                 	db	2
   874  007FD8  01                 	db	1
   875  007FD9  00                 	db	0
   876  007FDA  00                 	db	0
   877  007FDB  00                 	db	0
   878  007FDC  02                 	db	2
   879  007FDD  05                 	db	5
   880  007FDE  05                 	db	5
   881  007FDF  02                 	db	2
   882  007FE0  00                 	db	0
   883  007FE1  00                 	db	0
   884  007FE2  00                 	db	0
   885  007FE3                     __end_of_OledFont:
   886                           	opt stack 0
   887  007FE3                     STR_1:
   888  007FE3  55                 	db	85	;'U'
   889  007FE4  6E                 	db	110	;'n'
   890  007FE5  69                 	db	105	;'i'
   891  007FE6  76                 	db	118	;'v'
   892  007FE7  65                 	db	101	;'e'
   893  007FE8  72                 	db	114	;'r'
   894  007FE9  73                 	db	115	;'s'
   895  007FEA  69                 	db	105	;'i'
   896  007FEB  74                 	db	116	;'t'
   897  007FEC  79                 	db	121	;'y'
   898  007FED  00                 	db	0
   899  007FEE                     STR_4:
   900  007FEE  5A                 	db	90	;'Z'
   901  007FEF  49                 	db	73	;'I'
   902  007FF0  50                 	db	80	;'P'
   903  007FF1  53                 	db	83	;'S'
   904  007FF2  2D                 	db	45
   905  007FF3  45                 	db	69	;'E'
   906  007FF4  56                 	db	86	;'V'
   907  007FF5  00                 	db	0
   908  007FF6                     STR_3:
   909  007FF6  41                 	db	65	;'A'
   910  007FF7  6B                 	db	107	;'k'
   911  007FF8  72                 	db	114	;'r'
   912  007FF9  6F                 	db	111	;'o'
   913  007FFA  6E                 	db	110	;'n'
   914  007FFB  00                 	db	0
   915  007FFC                     STR_2:
   916  007FFC  4F                 	db	79	;'O'
   917  007FFD  46                 	db	70	;'F'
   918  007FFE  00                 	db	0
   919  0000                     
   920                           ; #config settings
   921  007FFF  00                 	db	0	; dummy byte at the end
   922  0000                     
   923                           	psect	nvCOMRAM
   924  000042                     __pnvCOMRAM:
   925                           	opt stack 0
   926  000042                     _timer0ReloadVal16bit:
   927                           	opt stack 0
   928  000042                     	ds	2
   929                           
   930                           	psect	nvBANK0
   931  0000FE                     __pnvBANK0:
   932                           	opt stack 0
   933  0000FE                     _TMR2_InterruptHandler:
   934                           	opt stack 0
   935  0000FE                     	ds	2
   936  0000                     _ANSELA	set	3896
   937  0000                     _ANSELB	set	3897
   938  0000                     _ANSELC	set	3898
   939  0000                     _ANSELD	set	3899
   940  0000                     _ANSELE	set	3900
   941  0000                     _ADCON0	set	4034
   942  0000                     _ADCON0bits	set	4034
   943  0000                     _ADCON1	set	4033
   944  0000                     _ADCON2	set	4032
   945  0000                     _ADRESH	set	4036
   946  0000                     _ADRESL	set	4035
   947  0000                     _BAUD1CON	set	4024
   948  0000                     _INTCON2bits	set	4081
   949  0000                     _INTCONbits	set	4082
   950  0000                     _IPR1bits	set	3999
   951  0000                     _IPR2bits	set	4002
   952  0000                     _LATA	set	3977
   953  0000                     _LATB	set	3978
   954  0000                     _LATC	set	3979
   955  0000                     _LATCbits	set	3979
   956  0000                     _LATD	set	3980
   957  0000                     _LATE	set	3981
   958  0000                     _OSCCON	set	4051
   959  0000                     _OSCCON2	set	4050
   960  0000                     _OSCTUNE	set	3995
   961  0000                     _PIE1bits	set	3997
   962  0000                     _PIE2bits	set	4000
   963  0000                     _PIR1bits	set	3998
   964  0000                     _PIR2bits	set	4001
   965  0000                     _PORTAbits	set	3968
   966  0000                     _PORTBbits	set	3969
   967  0000                     _PORTDbits	set	3971
   968  0000                     _PR2	set	4027
   969  0000                     _RC1STA	set	4011
   970  0000                     _RC1STAbits	set	4011
   971  0000                     _RCONbits	set	4048
   972  0000                     _RCREG1	set	4014
   973  0000                     _SPBRG1	set	4015
   974  0000                     _SPBRGH1	set	4016
   975  0000                     _SSP1ADD	set	4040
   976  0000                     _SSP1BUF	set	4041
   977  0000                     _SSP1CON1	set	4038
   978  0000                     _SSP1CON1bits	set	4038
   979  0000                     _SSP1CON2bits	set	4037
   980  0000                     _SSP1CON3	set	4043
   981  0000                     _SSP1STAT	set	4039
   982  0000                     _T0CON	set	4053
   983  0000                     _T0CONbits	set	4053
   984  0000                     _T2CON	set	4026
   985  0000                     _T2CONbits	set	4026
   986  0000                     _TMR0H	set	4055
   987  0000                     _TMR0L	set	4054
   988  0000                     _TMR2	set	4028
   989  0000                     _TRISA	set	3986
   990  0000                     _TRISB	set	3987
   991  0000                     _TRISC	set	3988
   992  0000                     _TRISCbits	set	3988
   993  0000                     _TRISD	set	3989
   994  0000                     _TRISE	set	3990
   995  0000                     _TX1STA	set	4012
   996  0000                     _TXREG1	set	4013
   997  0000                     _WPUB	set	3937
   998  0000                     _LATA3	set	31819
   999  0000                     _LATB3	set	31827
  1000  0000                     _LATB5	set	31829
  1001  0000                     _LATD1	set	31841
  1002  0000                     _LATE0	set	31848
  1003  0000                     _LATE1	set	31849
  1004  0000                     _LATE2	set	31850
  1005                           
  1006                           	psect	cinit
  1007  002846                     __pcinit:
  1008                           	opt stack 0
  1009  002846                     start_initialization:
  1010                           	opt stack 0
  1011  002846                     __initialization:
  1012                           	opt stack 0
  1013                           
  1014                           ; Clear objects allocated to BANK5 (206 bytes)
  1015  002846  EE05  F000         	lfsr	0,__pbssBANK5
  1016  00284A  0ECE               	movlw	206
  1017  00284C                     clear_0:
  1018  00284C  6AEE               	clrf	postinc0,c
  1019  00284E  06E8               	decf	wreg,f,c
  1020  002850  E1FD               	bnz	clear_0
  1021                           
  1022                           ; Clear objects allocated to BANK4 (206 bytes)
  1023  002852  EE04  F000         	lfsr	0,__pbssBANK4
  1024  002856  0ECE               	movlw	206
  1025  002858                     clear_1:
  1026  002858  6AEE               	clrf	postinc0,c
  1027  00285A  06E8               	decf	wreg,f,c
  1028  00285C  E1FD               	bnz	clear_1
  1029                           
  1030                           ; Clear objects allocated to BANK3 (200 bytes)
  1031  00285E  EE03  F000         	lfsr	0,__pbssBANK3
  1032  002862  0EC8               	movlw	200
  1033  002864                     clear_2:
  1034  002864  6AEE               	clrf	postinc0,c
  1035  002866  06E8               	decf	wreg,f,c
  1036  002868  E1FD               	bnz	clear_2
  1037                           
  1038                           ; Clear objects allocated to BANK2 (206 bytes)
  1039  00286A  EE02  F000         	lfsr	0,__pbssBANK2
  1040  00286E  0ECE               	movlw	206
  1041  002870                     clear_3:
  1042  002870  6AEE               	clrf	postinc0,c
  1043  002872  06E8               	decf	wreg,f,c
  1044  002874  E1FD               	bnz	clear_3
  1045                           
  1046                           ; Clear objects allocated to BANK1 (57 bytes)
  1047  002876  EE01  F000         	lfsr	0,__pbssBANK1
  1048  00287A  0E39               	movlw	57
  1049  00287C                     clear_4:
  1050  00287C  6AEE               	clrf	postinc0,c
  1051  00287E  06E8               	decf	wreg,f,c
  1052  002880  E1FD               	bnz	clear_4
  1053                           
  1054                           ; Clear objects allocated to BANK0 (148 bytes)
  1055  002882  EE00  F060         	lfsr	0,__pbssBANK0
  1056  002886  0E94               	movlw	148
  1057  002888                     clear_5:
  1058  002888  6AEE               	clrf	postinc0,c
  1059  00288A  06E8               	decf	wreg,f,c
  1060  00288C  E1FD               	bnz	clear_5
  1061                           
  1062                           ; Clear objects allocated to COMRAM (22 bytes)
  1063  00288E  EE00  F02C         	lfsr	0,__pbssCOMRAM
  1064  002892  0E16               	movlw	22
  1065  002894                     clear_6:
  1066  002894  6AEE               	clrf	postinc0,c
  1067  002896  06E8               	decf	wreg,f,c
  1068  002898  E1FD               	bnz	clear_6
  1069                           
  1070                           ; Initialize objects allocated to COMRAM (1 bytes)
  1071                           ; load TBLPTR registers with __pidataCOMRAM
  1072  00289A  0E4E               	movlw	low __pidataCOMRAM
  1073  00289C  6EF6               	movwf	tblptrl,c
  1074  00289E  0E30               	movlw	high __pidataCOMRAM
  1075  0028A0  6EF7               	movwf	tblptrh,c
  1076  0028A2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1077  0028A4  6EF8               	movwf	tblptru,c
  1078  0028A6  0009               	tblrd		*+	;fetch initializer
  1079  0028A8  CFF5 F044          	movff	tablat,__pdataCOMRAM
  1080  0028AC                     end_of_initialization:
  1081                           	opt stack 0
  1082  0028AC                     __end_of__initialization:
  1083                           	opt stack 0
  1084  0028AC  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1085  0028AE  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1086  0028B0  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1087  0028B2  6EF8               	movwf	tblptru,c
  1088  0028B4  0100               	movlb	0
  1089  0028B6  EFA6  F00E         	goto	_main	;jump to C main() function
  1090                           tblptru	equ	0xFF8
  1091                           tblptrh	equ	0xFF7
  1092                           tblptrl	equ	0xFF6
  1093                           tablat	equ	0xFF5
  1094                           postinc0	equ	0xFEE
  1095                           wreg	equ	0xFE8
  1096                           
  1097                           	psect	bssCOMRAM
  1098  00002C                     __pbssCOMRAM:
  1099                           	opt stack 0
  1100  00002C                     _group:
  1101                           	opt stack 0
  1102  00002C                     	ds	2
  1103  00002E                     _serial_available:
  1104                           	opt stack 0
  1105  00002E                     	ds	2
  1106  000030                     _serial_read:
  1107                           	opt stack 0
  1108  000030                     	ds	2
  1109  000032                     _serial_write:
  1110                           	opt stack 0
  1111  000032                     	ds	2
  1112  000034                     I2C1_ISR@i2c_10bit_address_restart:
  1113                           	opt stack 0
  1114  000034                     	ds	1
  1115  000035                     I2C1_ISR@i2c_bytes_left:
  1116                           	opt stack 0
  1117  000035                     	ds	1
  1118  000036                     _AKNAKsend:
  1119                           	opt stack 0
  1120  000036                     	ds	1
  1121  000037                     _calc_CS:
  1122                           	opt stack 0
  1123  000037                     	ds	1
  1124  000038                     _i2c1_state:
  1125                           	opt stack 0
  1126  000038                     	ds	1
  1127  000039                     _i2c1_trb_count:
  1128                           	opt stack 0
  1129  000039                     	ds	1
  1130  00003A                     _maxDataAddress:
  1131                           	opt stack 0
  1132  00003A                     	ds	1
  1133  00003B                     _moduleAddress:
  1134                           	opt stack 0
  1135  00003B                     	ds	1
  1136  00003C                     _returnAddress:
  1137                           	opt stack 0
  1138  00003C                     	ds	1
  1139  00003D                     _rx_address:
  1140                           	opt stack 0
  1141  00003D                     	ds	1
  1142  00003E                     _rx_array_inx:
  1143                           	opt stack 0
  1144  00003E                     	ds	1
  1145  00003F                     _rx_len:
  1146                           	opt stack 0
  1147  00003F                     	ds	1
  1148  000040                     I2C1_ISR@i2c_address:
  1149                           	opt stack 0
  1150  000040                     	ds	2
  1151                           tblptru	equ	0xFF8
  1152                           tblptrh	equ	0xFF7
  1153                           tblptrl	equ	0xFF6
  1154                           tablat	equ	0xFF5
  1155                           postinc0	equ	0xFEE
  1156                           wreg	equ	0xFE8
  1157                           
  1158                           	psect	dataCOMRAM
  1159  000044                     __pdataCOMRAM:
  1160                           	opt stack 0
  1161  000044                     _Transmit_stall:
  1162                           	opt stack 0
  1163  000044                     	ds	1
  1164                           tblptru	equ	0xFF8
  1165                           tblptrh	equ	0xFF7
  1166                           tblptrl	equ	0xFF6
  1167                           tablat	equ	0xFF5
  1168                           postinc0	equ	0xFEE
  1169                           wreg	equ	0xFE8
  1170                           
  1171                           	psect	bssBANK0
  1172  000060                     __pbssBANK0:
  1173                           	opt stack 0
  1174  000060                     _displaybuffer:
  1175                           	opt stack 0
  1176  000060                     	ds	40
  1177  000088                     _LED_array:
  1178                           	opt stack 0
  1179  000088                     	ds	16
  1180  000098                     _LEDNUM_ENAB:
  1181                           	opt stack 0
  1182  000098                     	ds	12
  1183  0000A4                     _LEDState:
  1184                           	opt stack 0
  1185  0000A4                     	ds	12
  1186  0000B0                     _butnarray:
  1187                           	opt stack 0
  1188  0000B0                     	ds	8
  1189  0000B8                     _i2c1_object:
  1190                           	opt stack 0
  1191  0000B8                     	ds	7
  1192  0000BF                     I2C1_ISR@pi2c_buf_ptr:
  1193                           	opt stack 0
  1194  0000BF                     	ds	2
  1195  0000C1                     TMR0_ISR@CountCallBack:
  1196                           	opt stack 0
  1197  0000C1                     	ds	2
  1198  0000C3                     _addressErrorCounter:
  1199                           	opt stack 0
  1200  0000C3                     	ds	2
  1201  0000C5                     _alignErrorCounter:
  1202                           	opt stack 0
  1203  0000C5                     	ds	2
  1204  0000C7                     _brake:
  1205                           	opt stack 0
  1206  0000C7                     	ds	2
  1207  0000C9                     _crcErrorCounter:
  1208                           	opt stack 0
  1209  0000C9                     	ds	2
  1210  0000CB                     _dataAdressErrorCounter:
  1211                           	opt stack 0
  1212  0000CB                     	ds	2
  1213  0000CD                     _i:
  1214                           	opt stack 0
  1215  0000CD                     	ds	2
  1216  0000CF                     _k:
  1217                           	opt stack 0
  1218  0000CF                     	ds	2
  1219  0000D1                     _p_i2c1_current:
  1220                           	opt stack 0
  1221  0000D1                     	ds	2
  1222  0000D3                     _p_i2c1_trb_current:
  1223                           	opt stack 0
  1224  0000D3                     	ds	2
  1225  0000D5                     _receiveArrayAddress:
  1226                           	opt stack 0
  1227  0000D5                     	ds	2
  1228  0000D7                     _sendStructAddress:
  1229                           	opt stack 0
  1230  0000D7                     	ds	2
  1231  0000D9                     _serial_peek:
  1232                           	opt stack 0
  1233  0000D9                     	ds	2
  1234  0000DB                     _throttle:
  1235                           	opt stack 0
  1236  0000DB                     	ds	2
  1237  0000DD                     _time:
  1238                           	opt stack 0
  1239  0000DD                     	ds	2
  1240  0000DF                     _timeOut:
  1241                           	opt stack 0
  1242  0000DF                     	ds	2
  1243  0000E1                     handleIndicators@oldIndicators:
  1244                           	opt stack 0
  1245  0000E1                     	ds	2
  1246  0000E3                     I2C1_MasterRead@trBlock:
  1247                           	opt stack 0
  1248  0000E3                     	ds	5
  1249  0000E8                     I2C1_MasterWrite@trBlock:
  1250                           	opt stack 0
  1251  0000E8                     	ds	5
  1252  0000ED                     _i2c1_tr_queue:
  1253                           	opt stack 0
  1254  0000ED                     	ds	5
  1255  0000F2                     _Buff:
  1256                           	opt stack 0
  1257  0000F2                     	ds	2
  1258                           tblptru	equ	0xFF8
  1259                           tblptrh	equ	0xFF7
  1260                           tblptrl	equ	0xFF6
  1261                           tablat	equ	0xFF5
  1262                           postinc0	equ	0xFEE
  1263                           wreg	equ	0xFE8
  1264                           
  1265                           	psect	bssBANK1
  1266  000100                     __pbssBANK1:
  1267                           	opt stack 0
  1268  000100                     _receiveArray:
  1269                           	opt stack 0
  1270  000100                     	ds	40
  1271  000128                     _crc_buffer:
  1272                           	opt stack 0
  1273  000128                     	ds	17
  1274                           tblptru	equ	0xFF8
  1275                           tblptrh	equ	0xFF7
  1276                           tblptrl	equ	0xFF6
  1277                           tablat	equ	0xFF5
  1278                           postinc0	equ	0xFEE
  1279                           wreg	equ	0xFE8
  1280                           
  1281                           	psect	bssBANK2
  1282  000200                     __pbssBANK2:
  1283                           	opt stack 0
  1284  000200                     _ring_buffer:
  1285                           	opt stack 0
  1286  000200                     	ds	206
  1287                           tblptru	equ	0xFF8
  1288                           tblptrh	equ	0xFF7
  1289                           tblptrl	equ	0xFF6
  1290                           tablat	equ	0xFF5
  1291                           postinc0	equ	0xFEE
  1292                           wreg	equ	0xFE8
  1293                           
  1294                           	psect	bssBANK3
  1295  000300                     __pbssBANK3:
  1296                           	opt stack 0
  1297  000300                     _rx_buffer:
  1298                           	opt stack 0
  1299  000300                     	ds	200
  1300                           tblptru	equ	0xFF8
  1301                           tblptrh	equ	0xFF7
  1302                           tblptrl	equ	0xFF6
  1303                           tablat	equ	0xFF5
  1304                           postinc0	equ	0xFEE
  1305                           wreg	equ	0xFE8
  1306                           
  1307                           	psect	bssBANK4
  1308  000400                     __pbssBANK4:
  1309                           	opt stack 0
  1310  000400                     _input_buffer:
  1311                           	opt stack 0
  1312  000400                     	ds	206
  1313                           tblptru	equ	0xFF8
  1314                           tblptrh	equ	0xFF7
  1315                           tblptrl	equ	0xFF6
  1316                           tablat	equ	0xFF5
  1317                           postinc0	equ	0xFEE
  1318                           wreg	equ	0xFE8
  1319                           
  1320                           	psect	bssBANK5
  1321  000500                     __pbssBANK5:
  1322                           	opt stack 0
  1323  000500                     _output_buffer:
  1324                           	opt stack 0
  1325  000500                     	ds	206
  1326                           tblptru	equ	0xFF8
  1327                           tblptrh	equ	0xFF7
  1328                           tblptrl	equ	0xFF6
  1329                           tablat	equ	0xFF5
  1330                           postinc0	equ	0xFEE
  1331                           wreg	equ	0xFE8
  1332                           
  1333                           	psect	cstackBANK1
  1334  000139                     __pcstackBANK1:
  1335                           	opt stack 0
  1336  000139                     ??_LEDsetBar:
  1337  000139                     ??_receiveData:
  1338  000139                     ?___fttol:
  1339                           	opt stack 0
  1340  000139                     begin@ptr:
  1341                           	opt stack 0
  1342  000139                     LEDbegin@writeBuffer:
  1343                           	opt stack 0
  1344  000139                     ___fttol@f1:
  1345                           	opt stack 0
  1346  000139                     LEDwriteDisplay@writeBuffer:
  1347                           	opt stack 0
  1348                           
  1349                           ; 20 bytes @ 0x0
  1350  000139                     	ds	2
  1351  00013B                     begin@maxSize:
  1352                           	opt stack 0
  1353                           
  1354                           ; 1 bytes @ 0x2
  1355  00013B                     	ds	1
  1356  00013C                     begin@givenAddress:
  1357                           	opt stack 0
  1358  00013C                     LEDbegin@timeOut:
  1359                           	opt stack 0
  1360                           
  1361                           ; 2 bytes @ 0x3
  1362  00013C                     	ds	1
  1363  00013D                     ??___fttol:
  1364  00013D                     begin@error:
  1365                           	opt stack 0
  1366                           
  1367                           ; 1 bytes @ 0x4
  1368  00013D                     	ds	1
  1369  00013E                     LEDbegin@i2c_addr:
  1370                           	opt stack 0
  1371  00013E                     begin@stufftosend:
  1372                           	opt stack 0
  1373                           
  1374                           ; 2 bytes @ 0x5
  1375  00013E                     	ds	1
  1376  00013F                     LEDbegin@status:
  1377                           	opt stack 0
  1378  00013F                     receiveData@holder:
  1379                           	opt stack 0
  1380                           
  1381                           ; 3 bytes @ 0x6
  1382  00013F                     	ds	1
  1383  000140                     begin@stufftoreceive:
  1384                           	opt stack 0
  1385                           
  1386                           ; 2 bytes @ 0x7
  1387  000140                     	ds	2
  1388  000142                     ___fttol@sign1:
  1389                           	opt stack 0
  1390  000142                     begin@stuffavailable:
  1391                           	opt stack 0
  1392  000142                     receiveData@holder_2354:
  1393                           	opt stack 0
  1394                           
  1395                           ; 3 bytes @ 0x9
  1396  000142                     	ds	1
  1397  000143                     ___fttol@lval:
  1398                           	opt stack 0
  1399                           
  1400                           ; 4 bytes @ 0xA
  1401  000143                     	ds	1
  1402  000144                     begin@stuffpeek:
  1403                           	opt stack 0
  1404                           
  1405                           ; 2 bytes @ 0xB
  1406  000144                     	ds	1
  1407  000145                     receiveData@crcHolder:
  1408                           	opt stack 0
  1409                           
  1410                           ; 1 bytes @ 0xC
  1411  000145                     	ds	1
  1412  000146                     receiveData@crcHolder_2355:
  1413                           	opt stack 0
  1414                           
  1415                           ; 1 bytes @ 0xD
  1416  000146                     	ds	1
  1417  000147                     ___fttol@exp1:
  1418                           	opt stack 0
  1419  000147                     receiveData@u:
  1420                           	opt stack 0
  1421                           
  1422                           ; 2 bytes @ 0xE
  1423  000147                     	ds	2
  1424  000149                     LEDsetValue@value:
  1425                           	opt stack 0
  1426  000149                     receiveData@r:
  1427                           	opt stack 0
  1428                           
  1429                           ; 2 bytes @ 0x10
  1430  000149                     	ds	2
  1431  00014B                     LEDsetValue@color:
  1432                           	opt stack 0
  1433                           
  1434                           ; 2 bytes @ 0x12
  1435  00014B                     	ds	2
  1436  00014D                     LEDwriteDisplay@i2c_addr:
  1437                           	opt stack 0
  1438  00014D                     LEDsetValue@k:
  1439                           	opt stack 0
  1440                           
  1441                           ; 2 bytes @ 0x14
  1442  00014D                     	ds	1
  1443  00014E                     LEDwriteDisplay@timeOut:
  1444                           	opt stack 0
  1445                           
  1446                           ; 2 bytes @ 0x15
  1447  00014E                     	ds	2
  1448  000150                     LEDwriteDisplay@status:
  1449                           	opt stack 0
  1450                           
  1451                           ; 1 bytes @ 0x17
  1452  000150                     	ds	1
  1453  000151                     main@ADCNT:
  1454                           	opt stack 0
  1455                           
  1456                           ; 2 bytes @ 0x18
  1457  000151                     	ds	2
  1458                           tblptru	equ	0xFF8
  1459                           tblptrh	equ	0xFF7
  1460                           tblptrl	equ	0xFF6
  1461                           tablat	equ	0xFF5
  1462                           postinc0	equ	0xFEE
  1463                           wreg	equ	0xFE8
  1464                           
  1465                           	psect	cstackBANK0
  1466  0000F4                     __pcstackBANK0:
  1467                           	opt stack 0
  1468  0000F4                     ??___ftmul:
  1469  0000F4                     ToSend@where:
  1470                           	opt stack 0
  1471  0000F4                     CRCcheck@SentCRC:
  1472                           	opt stack 0
  1473  0000F4                     LEDBsetBrightness@b:
  1474                           	opt stack 0
  1475  0000F4                     LEDblinkRate@b:
  1476                           	opt stack 0
  1477                           
  1478                           ; 2 bytes @ 0x0
  1479  0000F4                     	ds	1
  1480  0000F5                     CRCcheck@calculatedCRC:
  1481                           	opt stack 0
  1482                           
  1483                           ; 1 bytes @ 0x1
  1484  0000F5                     	ds	1
  1485  0000F6                     LEDBsetBrightness@i2c_addr:
  1486                           	opt stack 0
  1487  0000F6                     LEDblinkRate@i2c_addr:
  1488                           	opt stack 0
  1489  0000F6                     CRCcheck@arrayHolder:
  1490                           	opt stack 0
  1491                           
  1492                           ; 3 bytes @ 0x2
  1493  0000F6                     	ds	1
  1494  0000F7                     ___ftmul@exp:
  1495                           	opt stack 0
  1496  0000F7                     LEDBsetBrightness@writeBuffer:
  1497                           	opt stack 0
  1498  0000F7                     LEDblinkRate@writeBuffer:
  1499                           	opt stack 0
  1500                           
  1501                           ; 2 bytes @ 0x3
  1502  0000F7                     	ds	1
  1503  0000F8                     ___ftmul@f3_as_product:
  1504                           	opt stack 0
  1505                           
  1506                           ; 3 bytes @ 0x4
  1507  0000F8                     	ds	1
  1508  0000F9                     LEDBsetBrightness@timeOut:
  1509                           	opt stack 0
  1510  0000F9                     LEDblinkRate@timeOut:
  1511                           	opt stack 0
  1512  0000F9                     CRCcheck@rt:
  1513                           	opt stack 0
  1514                           
  1515                           ; 2 bytes @ 0x5
  1516  0000F9                     	ds	2
  1517  0000FB                     LEDBsetBrightness@status:
  1518                           	opt stack 0
  1519  0000FB                     LEDblinkRate@status:
  1520                           	opt stack 0
  1521  0000FB                     ___ftmul@cntr:
  1522                           	opt stack 0
  1523                           
  1524                           ; 1 bytes @ 0x7
  1525  0000FB                     	ds	1
  1526  0000FC                     ___ftmul@sign:
  1527                           	opt stack 0
  1528                           
  1529                           ; 1 bytes @ 0x8
  1530  0000FC                     	ds	1
  1531  0000FD                     ??_LEDsetValue:
  1532                           
  1533                           ; 1 bytes @ 0x9
  1534  0000FD                     	ds	1
  1535                           tblptru	equ	0xFF8
  1536                           tblptrh	equ	0xFF7
  1537                           tblptrl	equ	0xFF6
  1538                           tablat	equ	0xFF5
  1539                           postinc0	equ	0xFEE
  1540                           wreg	equ	0xFE8
  1541                           
  1542                           	psect	cstackCOMRAM
  1543  000001                     __pcstackCOMRAM:
  1544                           	opt stack 0
  1545  000001                     ??_I2C1_Stop:
  1546  000001                     ??_TMR2_CallBack:
  1547  000001                     ?i2_UART_buff_size:
  1548                           	opt stack 0
  1549  000001                     ?i2_UART_buff_modulo_inc:
  1550                           	opt stack 0
  1551  000001                     ReadButtonState@btnnum:
  1552                           	opt stack 0
  1553  000001                     i2UART_buff_size@_this:
  1554                           	opt stack 0
  1555  000001                     i2UART_buff_modulo_inc@value:
  1556                           	opt stack 0
  1557                           
  1558                           ; 2 bytes @ 0x0
  1559  000001                     	ds	2
  1560  000003                     ??_ReadButtonState:
  1561  000003                     I2C1_Stop@completion_code:
  1562                           	opt stack 0
  1563  000003                     TMR2_CallBack@i:
  1564                           	opt stack 0
  1565  000003                     i2UART_buff_modulo_inc@modulus:
  1566                           	opt stack 0
  1567                           
  1568                           ; 2 bytes @ 0x2
  1569  000003                     	ds	1
  1570  000004                     ??_I2C1_ISR:
  1571                           
  1572                           ; 1 bytes @ 0x3
  1573  000004                     	ds	1
  1574  000005                     TMR0_ISR@x:
  1575                           	opt stack 0
  1576  000005                     i2UART_buff_modulo_inc@my_value:
  1577                           	opt stack 0
  1578                           
  1579                           ; 2 bytes @ 0x4
  1580  000005                     	ds	2
  1581  000007                     i2UART_buff_put@_this:
  1582                           	opt stack 0
  1583  000007                     i2UART_buff_get@_this:
  1584                           	opt stack 0
  1585                           
  1586                           ; 2 bytes @ 0x6
  1587  000007                     	ds	2
  1588  000009                     ??i2_UART_buff_get:
  1589  000009                     i2UART_buff_put@c:
  1590                           	opt stack 0
  1591                           
  1592                           ; 1 bytes @ 0x8
  1593  000009                     	ds	1
  1594  00000A                     ??i2_UART_buff_put:
  1595                           
  1596                           ; 1 bytes @ 0x9
  1597  00000A                     	ds	1
  1598  00000B                     i2UART_buff_get@c:
  1599                           	opt stack 0
  1600                           
  1601                           ; 1 bytes @ 0xA
  1602  00000B                     	ds	1
  1603  00000C                     EUSART1_Receive_ISR@data:
  1604                           	opt stack 0
  1605                           
  1606                           ; 1 bytes @ 0xB
  1607  00000C                     	ds	1
  1608  00000D                     ??_INTERRUPT_InterruptManager:
  1609                           
  1610                           ; 1 bytes @ 0xC
  1611  00000D                     	ds	14
  1612  00001B                     ?_FastTransfer_buffer_modulo_inc:
  1613                           	opt stack 0
  1614  00001B                     ?_UART_buff_modulo_inc:
  1615                           	opt stack 0
  1616  00001B                     ?_UART_buff_size:
  1617                           	opt stack 0
  1618  00001B                     ?___awdiv:
  1619                           	opt stack 0
  1620  00001B                     ?___ftpack:
  1621                           	opt stack 0
  1622  00001B                     I2C1_MasterTRBInsert@ptrb_list:
  1623                           	opt stack 0
  1624  00001B                     I2C1_MasterWriteTRBBuild@ptrb:
  1625                           	opt stack 0
  1626  00001B                     setLED@led:
  1627                           	opt stack 0
  1628  00001B                     Off_Led@led:
  1629                           	opt stack 0
  1630  00001B                     TMR2_SetInterruptHandler@InterruptHandler:
  1631                           	opt stack 0
  1632  00001B                     Delay@wait:
  1633                           	opt stack 0
  1634  00001B                     GetButtonState@btnnum:
  1635                           	opt stack 0
  1636  00001B                     TBbarGraphs@t:
  1637                           	opt stack 0
  1638  00001B                     CRC8@data:
  1639                           	opt stack 0
  1640  00001B                     FastTransfer_buffer_modulo_inc@value:
  1641                           	opt stack 0
  1642  00001B                     crcBufS_put@_this:
  1643                           	opt stack 0
  1644  00001B                     crcBufS_status_put@_this:
  1645                           	opt stack 0
  1646  00001B                     crcBufS_get@_this:
  1647                           	opt stack 0
  1648  00001B                     UART_buff_size@_this:
  1649                           	opt stack 0
  1650  00001B                     UART_buff_modulo_inc@value:
  1651                           	opt stack 0
  1652  00001B                     UART_buff_peek@_this:
  1653                           	opt stack 0
  1654  00001B                     ___awdiv@dividend:
  1655                           	opt stack 0
  1656  00001B                     memset@p1:
  1657                           	opt stack 0
  1658  00001B                     ___ftpack@arg:
  1659                           	opt stack 0
  1660                           
  1661                           ; 3 bytes @ 0x1A
  1662  00001B                     	ds	2
  1663  00001D                     ??_setLED:
  1664  00001D                     ??_Off_Led:
  1665  00001D                     ??_Delay:
  1666  00001D                     ??_GetButtonState:
  1667  00001D                     ??_UART_buff_peek:
  1668  00001D                     ?_Receive_available:
  1669                           	opt stack 0
  1670  00001D                     CRC8@len:
  1671                           	opt stack 0
  1672  00001D                     crcBufS_put@address:
  1673                           	opt stack 0
  1674  00001D                     crcBufS_status_put@time:
  1675                           	opt stack 0
  1676  00001D                     crcBufS_get@time:
  1677                           	opt stack 0
  1678  00001D                     I2C1_MasterTRBInsert@pflag:
  1679                           	opt stack 0
  1680  00001D                     I2C1_MasterWriteTRBBuild@pdata:
  1681                           	opt stack 0
  1682  00001D                     TBbarGraphs@b:
  1683                           	opt stack 0
  1684  00001D                     FastTransfer_buffer_modulo_inc@modulus:
  1685                           	opt stack 0
  1686  00001D                     UART_buff_modulo_inc@modulus:
  1687                           	opt stack 0
  1688  00001D                     ___awdiv@divisor:
  1689                           	opt stack 0
  1690  00001D                     memset@c:
  1691                           	opt stack 0
  1692                           
  1693                           ; 2 bytes @ 0x1C
  1694  00001D                     	ds	1
  1695  00001E                     CRC8@sum:
  1696                           	opt stack 0
  1697  00001E                     crcBufS_put@oldCRC:
  1698                           	opt stack 0
  1699  00001E                     crcBufS_status_put@status:
  1700                           	opt stack 0
  1701  00001E                     crcBufS_get@space:
  1702                           	opt stack 0
  1703  00001E                     ___ftpack@exp:
  1704                           	opt stack 0
  1705  00001E                     Delay@x:
  1706                           	opt stack 0
  1707                           
  1708                           ; 2 bytes @ 0x1D
  1709  00001E                     	ds	1
  1710  00001F                     ??_crcBufS_get:
  1711  00001F                     ??_crcBufS_status_put:
  1712  00001F                     I2C1_MasterWriteTRBBuild@length:
  1713                           	opt stack 0
  1714  00001F                     CRC8@extract:
  1715                           	opt stack 0
  1716  00001F                     crcBufS_put@status:
  1717                           	opt stack 0
  1718  00001F                     ___awdiv@counter:
  1719                           	opt stack 0
  1720  00001F                     ___ftpack@sign:
  1721                           	opt stack 0
  1722  00001F                     SetLEDOut@lednum:
  1723                           	opt stack 0
  1724  00001F                     FastTransfer_buffer_modulo_inc@my_value:
  1725                           	opt stack 0
  1726  00001F                     UART_buff_modulo_inc@my_value:
  1727                           	opt stack 0
  1728  00001F                     memset@n:
  1729                           	opt stack 0
  1730                           
  1731                           ; 2 bytes @ 0x1E
  1732  00001F                     	ds	1
  1733  000020                     ??_crcBufS_put:
  1734  000020                     ??___ftpack:
  1735  000020                     I2C1_MasterTRBInsert@count:
  1736                           	opt stack 0
  1737  000020                     CRC8@tempI:
  1738                           	opt stack 0
  1739  000020                     ___awdiv@sign:
  1740                           	opt stack 0
  1741  000020                     I2C1_MasterWriteTRBBuild@address:
  1742                           	opt stack 0
  1743                           
  1744                           ; 2 bytes @ 0x1F
  1745  000020                     	ds	1
  1746  000021                     ?_buttonsCollector:
  1747                           	opt stack 0
  1748  000021                     CRC8@crc:
  1749                           	opt stack 0
  1750  000021                     SetLEDOut@state:
  1751                           	opt stack 0
  1752  000021                     FastTransfer_buffer_put@_this:
  1753                           	opt stack 0
  1754  000021                     UART_buff_put@_this:
  1755                           	opt stack 0
  1756  000021                     UART_buff_get@_this:
  1757                           	opt stack 0
  1758  000021                     ___awdiv@quotient:
  1759                           	opt stack 0
  1760  000021                     memset@p:
  1761                           	opt stack 0
  1762                           
  1763                           ; 2 bytes @ 0x20
  1764  000021                     	ds	1
  1765  000022                     ??_I2C1_MasterWriteTRBBuild:
  1766                           
  1767                           ; 1 bytes @ 0x21
  1768  000022                     	ds	1
  1769  000023                     ??_buttonsCollector:
  1770  000023                     ??_SetLEDOut:
  1771  000023                     ??_UART_buff_get:
  1772  000023                     ?___lwtoft:
  1773                           	opt stack 0
  1774  000023                     FastTransfer_buffer_put@towhere:
  1775                           	opt stack 0
  1776  000023                     UART_buff_put@c:
  1777                           	opt stack 0
  1778  000023                     LEDsetBar@bar:
  1779                           	opt stack 0
  1780  000023                     FastTransfer_buffer_flush@_this:
  1781                           	opt stack 0
  1782  000023                     crcBufS_status_put@wantedTime:
  1783                           	opt stack 0
  1784  000023                     UART_buff_init@_this:
  1785                           	opt stack 0
  1786  000023                     ___lwtoft@c:
  1787                           	opt stack 0
  1788                           
  1789                           ; 2 bytes @ 0x22
  1790  000023                     	ds	1
  1791  000024                     ??_UART_buff_put:
  1792  000024                     I2C1_MasterWrite@pdata:
  1793                           	opt stack 0
  1794  000024                     FastTransfer_buffer_put@towhat:
  1795                           	opt stack 0
  1796                           
  1797                           ; 2 bytes @ 0x23
  1798  000024                     	ds	1
  1799  000025                     UART_buff_get@c:
  1800                           	opt stack 0
  1801  000025                     LEDsetBar@color:
  1802                           	opt stack 0
  1803  000025                     handleIndicators@receivedIndicators:
  1804                           	opt stack 0
  1805  000025                     FastTransfer_buffer_flush@clearBuffer:
  1806                           	opt stack 0
  1807  000025                     crcBufS_get@wantedTime:
  1808                           	opt stack 0
  1809                           
  1810                           ; 2 bytes @ 0x24
  1811  000025                     	ds	1
  1812  000026                     ??_FastTransfer_buffer_put:
  1813  000026                     ?___ftmul:
  1814                           	opt stack 0
  1815  000026                     I2C1_MasterWrite@length:
  1816                           	opt stack 0
  1817  000026                     Send_put@_data:
  1818                           	opt stack 0
  1819  000026                     buttonsCollector@sendVal:
  1820                           	opt stack 0
  1821  000026                     ___ftmul@f1:
  1822                           	opt stack 0
  1823                           
  1824                           ; 3 bytes @ 0x25
  1825  000026                     	ds	1
  1826  000027                     ??_handleIndicators:
  1827  000027                     ??_sendData:
  1828  000027                     I2C1_MasterWrite@address:
  1829                           	opt stack 0
  1830  000027                     LEDsetBar@c:
  1831                           	opt stack 0
  1832                           
  1833                           ; 2 bytes @ 0x26
  1834  000027                     	ds	1
  1835  000028                     sendData@whereToSend:
  1836                           	opt stack 0
  1837  000028                     buttonsCollector@i:
  1838                           	opt stack 0
  1839                           
  1840                           ; 2 bytes @ 0x27
  1841  000028                     	ds	1
  1842  000029                     sendData@CS:
  1843                           	opt stack 0
  1844  000029                     I2C1_MasterWrite@pflag:
  1845                           	opt stack 0
  1846  000029                     LEDsetBar@a:
  1847                           	opt stack 0
  1848  000029                     ___ftmul@f2:
  1849                           	opt stack 0
  1850                           
  1851                           ; 3 bytes @ 0x28
  1852  000029                     	ds	1
  1853  00002A                     handleIndicators@i:
  1854                           	opt stack 0
  1855  00002A                     sendData@i:
  1856                           	opt stack 0
  1857  00002A                     ToSend@what:
  1858                           	opt stack 0
  1859                           
  1860                           ; 2 bytes @ 0x29
  1861  00002A                     	ds	1
  1862  00002B                     
  1863                           ; 1 bytes @ 0x2A
  1864  00002B                     	ds	1
  1865  00002C                     tblptru	equ	0xFF8
  1866                           tblptrh	equ	0xFF7
  1867                           tblptrl	equ	0xFF6
  1868                           tablat	equ	0xFF5
  1869                           postinc0	equ	0xFEE
  1870                           wreg	equ	0xFE8
  1871                           
  1872                           ; 1 bytes @ 0x2B
  1873 ;;
  1874 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1875 ;;
  1876 ;; *************** function _main *****************
  1877 ;; Defined at:
  1878 ;;		line 32 in file "main.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;		None
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;  ADCNT           2   24[BANK1 ] int 
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      void 
  1885 ;; Registers used:
  1886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1892 ;;      Params:         0       0       0       0       0       0       0
  1893 ;;      Locals:         0       0       2       0       0       0       0
  1894 ;;      Temps:          0       0       0       0       0       0       0
  1895 ;;      Totals:         0       0       2       0       0       0       0
  1896 ;;Total ram usage:        2 bytes
  1897 ;; Hardware stack levels required when called:   10
  1898 ;; This function calls:
  1899 ;;		_LEDbegin
  1900 ;;		_LEDsetValue
  1901 ;;		_LEDwriteDisplay
  1902 ;;		_SYSTEM_Initialize
  1903 ;;		___ftmul
  1904 ;;		___fttol
  1905 ;;		___lwtoft
  1906 ;;		_updateComms
  1907 ;; This function is called by:
  1908 ;;		Startup code after reset
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           	psect	text0
  1913  001D4C                     __ptext0:
  1914                           	opt stack 0
  1915  001D4C                     _main:
  1916                           	opt stack 21
  1917                           
  1918                           ;main.c: 34: SYSTEM_Initialize();
  1919                           
  1920                           ;incstack = 0
  1921  001D4C  EC5D  F014         	call	_SYSTEM_Initialize	;wreg free
  1922                           
  1923                           ;main.c: 53: (INTCONbits.GIE = 1);
  1924  001D50  8EF2               	bsf	intcon,7,c	;volatile
  1925                           
  1926                           ;main.c: 56: (INTCONbits.PEIE = 1);
  1927  001D52  8CF2               	bsf	intcon,6,c	;volatile
  1928                           
  1929                           ;main.c: 63: int ADCNT = 1;
  1930  001D54  0E00               	movlw	0
  1931  001D56  0101               	movlb	1	; () banked
  1932  001D58  6F52               	movwf	(main@ADCNT+1)& (0+255),b
  1933  001D5A  0E01               	movlw	1
  1934  001D5C  6F51               	movwf	main@ADCNT& (0+255),b
  1935                           
  1936                           ; BSR set to: 1
  1937                           ;main.c: 64: LEDbegin(0x70);
  1938  001D5E  0E70               	movlw	112
  1939  001D60  EC32  F012         	call	_LEDbegin
  1940                           
  1941                           ;main.c: 65: LEDbegin(0x71);
  1942  001D64  0E71               	movlw	113
  1943  001D66  EC32  F012         	call	_LEDbegin
  1944                           
  1945                           ;main.c: 66: do { LATA3 = 1; } while(0);
  1946  001D6A  8689               	bsf	3977,3,c	;volatile
  1947                           
  1948                           ;main.c: 67: LATCbits.LATC5 = 0;
  1949  001D6C  9A8B               	bcf	3979,5,c	;volatile
  1950  001D6E                     l7472:
  1951                           
  1952                           ;main.c: 69: updateComms();
  1953  001D6E  EC73  F016         	call	_updateComms	;wreg free
  1954                           
  1955                           ;main.c: 75: if (time > 1) {
  1956  001D72  0100               	movlb	0	; () banked
  1957  001D74  51DE               	movf	(_time+1)& (0+255),w,b	;volatile
  1958  001D76  E105               	bnz	u8650
  1959  001D78  0E02               	movlw	2
  1960  001D7A  0100               	movlb	0	; () banked
  1961  001D7C  5DDD               	subwf	_time& (0+255),w,b	;volatile
  1962  001D7E  A0D8               	btfss	status,0,c
  1963  001D80  D7F6               	goto	l7472
  1964  001D82                     u8650:
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;main.c: 76: LEDsetValue((throttle)*(24.0 / 100.0), 1);
  1968  001D82  0EC3               	movlw	195
  1969  001D84  6E29               	movwf	___ftmul@f2,c
  1970  001D86  0E75               	movlw	117
  1971  001D88  6E2A               	movwf	___ftmul@f2+1,c
  1972  001D8A  0E3E               	movlw	62
  1973  001D8C  6E2B               	movwf	___ftmul@f2+2,c
  1974  001D8E  C0DB  F023         	movff	_throttle,___lwtoft@c
  1975  001D92  C0DC  F024         	movff	_throttle+1,___lwtoft@c+1
  1976  001D96  EC55  F017         	call	___lwtoft	;wreg free
  1977  001D9A  C023  F026         	movff	?___lwtoft,___ftmul@f1
  1978  001D9E  C024  F027         	movff	?___lwtoft+1,___ftmul@f1+1
  1979  001DA2  C025  F028         	movff	?___lwtoft+2,___ftmul@f1+2
  1980  001DA6  ECD6  F00B         	call	___ftmul	;wreg free
  1981  001DAA  C026  F139         	movff	?___ftmul,___fttol@f1
  1982  001DAE  C027  F13A         	movff	?___ftmul+1,___fttol@f1+1
  1983  001DB2  C028  F13B         	movff	?___ftmul+2,___fttol@f1+2
  1984  001DB6  EC9C  F00A         	call	___fttol	;wreg free
  1985  001DBA  C139  F149         	movff	?___fttol,LEDsetValue@value
  1986  001DBE  C13A  F14A         	movff	?___fttol+1,LEDsetValue@value+1
  1987  001DC2  0E00               	movlw	0
  1988  001DC4  0101               	movlb	1	; () banked
  1989  001DC6  6F4C               	movwf	(LEDsetValue@color+1)& (0+255),b
  1990  001DC8  0E01               	movlw	1
  1991  001DCA  6F4B               	movwf	LEDsetValue@color& (0+255),b
  1992  001DCC  ECE0  F011         	call	_LEDsetValue	;wreg free
  1993                           
  1994                           ;main.c: 77: LEDwriteDisplay(0x70);
  1995  001DD0  0E70               	movlw	112
  1996  001DD2  EC6C  F00C         	call	_LEDwriteDisplay
  1997                           
  1998                           ;main.c: 78: LEDsetValue((brake)*(24.0 / 100.0), 1);
  1999  001DD6  0EC3               	movlw	195
  2000  001DD8  6E29               	movwf	___ftmul@f2,c
  2001  001DDA  0E75               	movlw	117
  2002  001DDC  6E2A               	movwf	___ftmul@f2+1,c
  2003  001DDE  0E3E               	movlw	62
  2004  001DE0  6E2B               	movwf	___ftmul@f2+2,c
  2005  001DE2  C0C7  F023         	movff	_brake,___lwtoft@c
  2006  001DE6  C0C8  F024         	movff	_brake+1,___lwtoft@c+1
  2007  001DEA  EC55  F017         	call	___lwtoft	;wreg free
  2008  001DEE  C023  F026         	movff	?___lwtoft,___ftmul@f1
  2009  001DF2  C024  F027         	movff	?___lwtoft+1,___ftmul@f1+1
  2010  001DF6  C025  F028         	movff	?___lwtoft+2,___ftmul@f1+2
  2011  001DFA  ECD6  F00B         	call	___ftmul	;wreg free
  2012  001DFE  C026  F139         	movff	?___ftmul,___fttol@f1
  2013  001E02  C027  F13A         	movff	?___ftmul+1,___fttol@f1+1
  2014  001E06  C028  F13B         	movff	?___ftmul+2,___fttol@f1+2
  2015  001E0A  EC9C  F00A         	call	___fttol	;wreg free
  2016  001E0E  C139  F149         	movff	?___fttol,LEDsetValue@value
  2017  001E12  C13A  F14A         	movff	?___fttol+1,LEDsetValue@value+1
  2018  001E16  0E00               	movlw	0
  2019  001E18  0101               	movlb	1	; () banked
  2020  001E1A  6F4C               	movwf	(LEDsetValue@color+1)& (0+255),b
  2021  001E1C  0E01               	movlw	1
  2022  001E1E  6F4B               	movwf	LEDsetValue@color& (0+255),b
  2023  001E20  ECE0  F011         	call	_LEDsetValue	;wreg free
  2024                           
  2025                           ;main.c: 79: LEDwriteDisplay(0x71);
  2026  001E24  0E71               	movlw	113
  2027  001E26  EC6C  F00C         	call	_LEDwriteDisplay
  2028                           
  2029                           ;main.c: 80: do { LATA3 = ~LATA3; } while(0);
  2030  001E2A  B689               	btfsc	3977,3,c	;volatile
  2031  001E2C  D002               	goto	u8660
  2032  001E2E  8689               	bsf	3977,3,c	;volatile
  2033  001E30  D001               	goto	l7480
  2034  001E32                     u8660:
  2035  001E32  9689               	bcf	3977,3,c	;volatile
  2036  001E34                     l7480:
  2037                           
  2038                           ;main.c: 81: time = 0;
  2039  001E34  0E00               	movlw	0
  2040  001E36  0100               	movlb	0	; () banked
  2041  001E38  6FDE               	movwf	(_time+1)& (0+255),b	;volatile
  2042  001E3A  0E00               	movlw	0
  2043  001E3C  6FDD               	movwf	_time& (0+255),b	;volatile
  2044                           
  2045                           ; BSR set to: 0
  2046                           
  2047                           ; BSR set to: 0
  2048  001E3E  D797               	goto	l7472
  2049  001E40                     __end_of_main:
  2050                           	opt stack 0
  2051                           tblptru	equ	0xFF8
  2052                           tblptrh	equ	0xFF7
  2053                           tblptrl	equ	0xFF6
  2054                           tablat	equ	0xFF5
  2055                           intcon	equ	0xFF2
  2056                           postinc0	equ	0xFEE
  2057                           wreg	equ	0xFE8
  2058                           status	equ	0xFD8
  2059                           
  2060 ;; *************** function _updateComms *****************
  2061 ;; Defined at:
  2062 ;;		line 7 in file "Communications.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;		None
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;		None
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  1    wreg      void 
  2069 ;; Registers used:
  2070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2076 ;;      Params:         0       0       0       0       0       0       0
  2077 ;;      Locals:         0       0       0       0       0       0       0
  2078 ;;      Temps:          0       0       0       0       0       0       0
  2079 ;;      Totals:         0       0       0       0       0       0       0
  2080 ;;Total ram usage:        0 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; Hardware stack levels required when called:    9
  2083 ;; This function calls:
  2084 ;;		_TBbarGraphs
  2085 ;;		_handleIndicators
  2086 ;;		_receiveData
  2087 ;;		_respondECU
  2088 ;; This function is called by:
  2089 ;;		_main
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           	psect	text1
  2094  002CE6                     __ptext1:
  2095                           	opt stack 0
  2096  002CE6                     _updateComms:
  2097                           	opt stack 21
  2098                           
  2099                           ;Communications.c: 8: if (receiveData()) {
  2100                           
  2101                           ; BSR set to: 0
  2102                           ;incstack = 0
  2103  002CE6  EC6A  F000         	call	_receiveData	;wreg free
  2104  002CEA  0900               	iorlw	0
  2105  002CEC  B4D8               	btfsc	status,2,c
  2106  002CEE  0012               	return	
  2107                           
  2108                           ;Communications.c: 10: respondECU();
  2109  002CF0  ECD2  F015         	call	_respondECU	;wreg free
  2110                           
  2111                           ;Communications.c: 12: handleIndicators(receiveArray[2]);
  2112  002CF4  C104  F025         	movff	_receiveArray+4,handleIndicators@receivedIndicators	;volatile
  2113  002CF8  C105  F026         	movff	_receiveArray+5,handleIndicators@receivedIndicators+1	;volatile
  2114  002CFC  ECE7  F013         	call	_handleIndicators	;wreg free
  2115                           
  2116                           ;Communications.c: 13: TBbarGraphs(receiveArray[3], receiveArray[4]);
  2117  002D00  C106  F01B         	movff	_receiveArray+6,TBbarGraphs@t	;volatile
  2118  002D04  C107  F01C         	movff	_receiveArray+7,TBbarGraphs@t+1	;volatile
  2119  002D08  C108  F01D         	movff	_receiveArray+8,TBbarGraphs@b	;volatile
  2120  002D0C  C109  F01E         	movff	_receiveArray+9,TBbarGraphs@b+1	;volatile
  2121  002D10  ECEE  F017         	call	_TBbarGraphs	;wreg free
  2122                           
  2123                           ;Communications.c: 14: receiveArray[0] = 0;
  2124  002D14  0E00               	movlw	0
  2125  002D16  0101               	movlb	1	; () banked
  2126  002D18  6F01               	movwf	(_receiveArray+1)& (0+255),b	;volatile
  2127  002D1A  0E00               	movlw	0
  2128  002D1C  6F00               	movwf	_receiveArray& (0+255),b	;volatile
  2129  002D1E  0012               	return	
  2130  002D20                     __end_of_updateComms:
  2131                           	opt stack 0
  2132                           tblptru	equ	0xFF8
  2133                           tblptrh	equ	0xFF7
  2134                           tblptrl	equ	0xFF6
  2135                           tablat	equ	0xFF5
  2136                           intcon	equ	0xFF2
  2137                           postinc0	equ	0xFEE
  2138                           wreg	equ	0xFE8
  2139                           status	equ	0xFD8
  2140                           
  2141 ;; *************** function _respondECU *****************
  2142 ;; Defined at:
  2143 ;;		line 18 in file "Communications.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;		None
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;		None
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  1    wreg      void 
  2150 ;; Registers used:
  2151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2157 ;;      Params:         0       0       0       0       0       0       0
  2158 ;;      Locals:         0       0       0       0       0       0       0
  2159 ;;      Temps:          0       0       0       0       0       0       0
  2160 ;;      Totals:         0       0       0       0       0       0       0
  2161 ;;Total ram usage:        0 bytes
  2162 ;; Hardware stack levels used:    1
  2163 ;; Hardware stack levels required when called:    8
  2164 ;; This function calls:
  2165 ;;		_Delay
  2166 ;;		_ToSend
  2167 ;;		_buttonsCollector
  2168 ;;		_sendData
  2169 ;; This function is called by:
  2170 ;;		_updateComms
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text2
  2175  002BA4                     __ptext2:
  2176                           	opt stack 0
  2177  002BA4                     _respondECU:
  2178                           	opt stack 21
  2179                           
  2180                           ;Communications.c: 19: LATCbits.LATC5 = 1;
  2181                           
  2182                           ;incstack = 0
  2183  002BA4  8A8B               	bsf	3979,5,c	;volatile
  2184                           
  2185                           ;Communications.c: 20: ToSend(0, 3);
  2186  002BA6  0E00               	movlw	0
  2187  002BA8  6E2B               	movwf	ToSend@what+1,c
  2188  002BAA  0E03               	movlw	3
  2189  002BAC  6E2A               	movwf	ToSend@what,c
  2190  002BAE  0E00               	movlw	0
  2191  002BB0  EC78  F017         	call	_ToSend
  2192                           
  2193                           ;Communications.c: 21: ToSend(8, buttonsCollector());
  2194  002BB4  EC97  F014         	call	_buttonsCollector	;wreg free
  2195  002BB8  C021  F02A         	movff	?_buttonsCollector,ToSend@what
  2196  002BBC  C022  F02B         	movff	?_buttonsCollector+1,ToSend@what+1
  2197  002BC0  0E08               	movlw	8
  2198  002BC2  EC78  F017         	call	_ToSend
  2199                           
  2200                           ;Communications.c: 22: Delay(9);
  2201  002BC6  0E00               	movlw	0
  2202  002BC8  6E1C               	movwf	Delay@wait+1,c
  2203  002BCA  0E09               	movlw	9
  2204  002BCC  6E1B               	movwf	Delay@wait,c
  2205  002BCE  EC90  F016         	call	_Delay	;wreg free
  2206                           
  2207                           ;Communications.c: 23: sendData(1);
  2208  002BD2  0E01               	movlw	1
  2209  002BD4  EC3E  F00B         	call	_sendData
  2210                           
  2211                           ;Communications.c: 24: Delay(3);
  2212  002BD8  0E00               	movlw	0
  2213  002BDA  6E1C               	movwf	Delay@wait+1,c
  2214  002BDC  0E03               	movlw	3
  2215  002BDE  6E1B               	movwf	Delay@wait,c
  2216  002BE0  EC90  F016         	call	_Delay	;wreg free
  2217                           
  2218                           ;Communications.c: 25: LATCbits.LATC5 = 0;
  2219  002BE4  9A8B               	bcf	3979,5,c	;volatile
  2220  002BE6  0012               	return		;funcret
  2221  002BE8                     __end_of_respondECU:
  2222                           	opt stack 0
  2223                           tblptru	equ	0xFF8
  2224                           tblptrh	equ	0xFF7
  2225                           tblptrl	equ	0xFF6
  2226                           tablat	equ	0xFF5
  2227                           intcon	equ	0xFF2
  2228                           postinc0	equ	0xFEE
  2229                           wreg	equ	0xFE8
  2230                           status	equ	0xFD8
  2231                           
  2232 ;; *************** function _sendData *****************
  2233 ;; Defined at:
  2234 ;;		line 53 in file "FastTransfer.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;  whereToSend     1    wreg     unsigned char 
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;  whereToSend     1   39[COMRAM] unsigned char 
  2239 ;;  i               2   41[COMRAM] int 
  2240 ;;  CS              1   40[COMRAM] unsigned char 
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  1    wreg      void 
  2243 ;; Registers used:
  2244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2250 ;;      Params:         0       0       0       0       0       0       0
  2251 ;;      Locals:         4       0       0       0       0       0       0
  2252 ;;      Temps:          1       0       0       0       0       0       0
  2253 ;;      Totals:         5       0       0       0       0       0       0
  2254 ;;Total ram usage:        5 bytes
  2255 ;; Hardware stack levels used:    1
  2256 ;; Hardware stack levels required when called:    7
  2257 ;; This function calls:
  2258 ;;		Absolute function
  2259 ;;		_CRC8
  2260 ;;		_FastTransfer_buffer_flush
  2261 ;;		_Send_put
  2262 ;;		_crcBufS_put
  2263 ;; This function is called by:
  2264 ;;		_respondECU
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           	psect	text3
  2269  00167C                     __ptext3:
  2270                           	opt stack 0
  2271  00167C                     _sendData:
  2272                           	opt stack 21
  2273                           
  2274                           ;incstack = 0
  2275                           ;sendData@whereToSend stored from wreg
  2276  00167C  6E28               	movwf	sendData@whereToSend,c
  2277                           
  2278                           ;FastTransfer.c: 56: unsigned char CS = CRC8(sendStructAddress, ring_buffer.count);
  2279  00167E  C0D7  F01B         	movff	_sendStructAddress,CRC8@data
  2280  001682  C0D8  F01C         	movff	_sendStructAddress+1,CRC8@data+1
  2281  001686  C2CC  F01D         	movff	_ring_buffer+204,CRC8@len
  2282  00168A  ECAD  F015         	call	_CRC8	;wreg free
  2283  00168E  6E29               	movwf	sendData@CS,c
  2284                           
  2285                           ;FastTransfer.c: 58: serial_write(0x06);
  2286  001690  D801               	call	u6648
  2287  001692  D00B               	goto	l6402
  2288  001694                     u6648:
  2289  001694  0005               	push	
  2290  001696  6EFA               	movwf	pclath,c
  2291  001698  5032               	movf	_serial_write,w,c
  2292  00169A  6EFD               	movwf	tosl,c
  2293  00169C  5033               	movf	_serial_write+1,w,c
  2294  00169E  6EFE               	movwf	tosh,c
  2295  0016A0  50F8               	movf	tblptru,w,c
  2296  0016A2  6EFF               	movwf	tosu,c
  2297  0016A4  50FA               	movf	pclath,w,c
  2298  0016A6  0E06               	movlw	6
  2299  0016A8  0012               	return		;indir
  2300  0016AA                     l6402:
  2301                           
  2302                           ;FastTransfer.c: 59: serial_write(0x85);
  2303  0016AA  D801               	call	u6658
  2304  0016AC  D00B               	goto	l6404
  2305  0016AE                     u6658:
  2306  0016AE  0005               	push	
  2307  0016B0  6EFA               	movwf	pclath,c
  2308  0016B2  5032               	movf	_serial_write,w,c
  2309  0016B4  6EFD               	movwf	tosl,c
  2310  0016B6  5033               	movf	_serial_write+1,w,c
  2311  0016B8  6EFE               	movwf	tosh,c
  2312  0016BA  50F8               	movf	tblptru,w,c
  2313  0016BC  6EFF               	movwf	tosu,c
  2314  0016BE  50FA               	movf	pclath,w,c
  2315  0016C0  0E85               	movlw	133
  2316  0016C2  0012               	return		;indir
  2317  0016C4                     l6404:
  2318                           
  2319                           ;FastTransfer.c: 60: serial_write(whereToSend);
  2320  0016C4  D801               	call	u6668
  2321  0016C6  D00B               	goto	l6406
  2322  0016C8                     u6668:
  2323  0016C8  0005               	push	
  2324  0016CA  6EFA               	movwf	pclath,c
  2325  0016CC  5032               	movf	_serial_write,w,c
  2326  0016CE  6EFD               	movwf	tosl,c
  2327  0016D0  5033               	movf	_serial_write+1,w,c
  2328  0016D2  6EFE               	movwf	tosh,c
  2329  0016D4  50F8               	movf	tblptru,w,c
  2330  0016D6  6EFF               	movwf	tosu,c
  2331  0016D8  50FA               	movf	pclath,w,c
  2332  0016DA  5028               	movf	sendData@whereToSend,w,c
  2333  0016DC  0012               	return		;indir
  2334  0016DE                     l6406:
  2335                           
  2336                           ;FastTransfer.c: 61: serial_write(moduleAddress);
  2337  0016DE  D801               	call	u6678
  2338  0016E0  D00B               	goto	l6408
  2339  0016E2                     u6678:
  2340  0016E2  0005               	push	
  2341  0016E4  6EFA               	movwf	pclath,c
  2342  0016E6  5032               	movf	_serial_write,w,c
  2343  0016E8  6EFD               	movwf	tosl,c
  2344  0016EA  5033               	movf	_serial_write+1,w,c
  2345  0016EC  6EFE               	movwf	tosh,c
  2346  0016EE  50F8               	movf	tblptru,w,c
  2347  0016F0  6EFF               	movwf	tosu,c
  2348  0016F2  50FA               	movf	pclath,w,c
  2349  0016F4  503B               	movf	_moduleAddress,w,c
  2350  0016F6  0012               	return		;indir
  2351  0016F8                     l6408:
  2352                           
  2353                           ;FastTransfer.c: 62: serial_write(ring_buffer.count);
  2354  0016F8  D801               	call	u6688
  2355  0016FA  D00C               	goto	l6410
  2356  0016FC                     u6688:
  2357  0016FC  0005               	push	
  2358  0016FE  6EFA               	movwf	pclath,c
  2359  001700  5032               	movf	_serial_write,w,c
  2360  001702  6EFD               	movwf	tosl,c
  2361  001704  5033               	movf	_serial_write+1,w,c
  2362  001706  6EFE               	movwf	tosh,c
  2363  001708  50F8               	movf	tblptru,w,c
  2364  00170A  6EFF               	movwf	tosu,c
  2365  00170C  50FA               	movf	pclath,w,c
  2366  00170E  0102               	movlb	2	; () banked
  2367  001710  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  2368  001712  0012               	return		;indir
  2369  001714                     l6410:
  2370                           
  2371                           ;FastTransfer.c: 66: int i;
  2372                           ;FastTransfer.c: 67: for (i = 0; i < ring_buffer.count; i++) {
  2373  001714  0E00               	movlw	0
  2374  001716  6E2B               	movwf	sendData@i+1,c
  2375  001718  0E00               	movlw	0
  2376  00171A  6E2A               	movwf	sendData@i,c
  2377  00171C  D017               	goto	l6416
  2378  00171E                     l6412:
  2379                           
  2380                           ;FastTransfer.c: 68: serial_write(*(sendStructAddress + i));
  2381  00171E  D801               	call	u6698
  2382  001720  D013               	goto	l6414
  2383  001722                     u6698:
  2384  001722  0005               	push	
  2385  001724  6EFA               	movwf	pclath,c
  2386  001726  5032               	movf	_serial_write,w,c
  2387  001728  6EFD               	movwf	tosl,c
  2388  00172A  5033               	movf	_serial_write+1,w,c
  2389  00172C  6EFE               	movwf	tosh,c
  2390  00172E  50F8               	movf	tblptru,w,c
  2391  001730  6EFF               	movwf	tosu,c
  2392  001732  50FA               	movf	pclath,w,c
  2393  001734  502A               	movf	sendData@i,w,c
  2394  001736  0100               	movlb	0	; () banked
  2395  001738  25D7               	addwf	_sendStructAddress& (0+255),w,b
  2396  00173A  6ED9               	movwf	fsr2l,c
  2397  00173C  502B               	movf	sendData@i+1,w,c
  2398  00173E  0100               	movlb	0	; () banked
  2399  001740  21D8               	addwfc	(_sendStructAddress+1)& (0+255),w,b
  2400  001742  6EDA               	movwf	fsr2h,c
  2401  001744  50DF               	movf	indf2,w,c
  2402  001746  0012               	return		;indir
  2403  001748                     l6414:
  2404  001748  4A2A               	infsnz	sendData@i,f,c
  2405  00174A  2A2B               	incf	sendData@i+1,f,c
  2406  00174C                     l6416:
  2407  00174C  0102               	movlb	2	; () banked
  2408  00174E  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  2409  001750  5C2A               	subwf	sendData@i,w,c
  2410  001752  502B               	movf	sendData@i+1,w,c
  2411  001754  0A80               	xorlw	128
  2412  001756  6E27               	movwf	??_sendData& (0+255),c
  2413  001758  0102               	movlb	2	; () banked
  2414  00175A  51CD               	movf	(_ring_buffer+205)& (0+255),w,b
  2415  00175C  0A80               	xorlw	128
  2416  00175E  5827               	subwfb	??_sendData& (0+255),w,c
  2417  001760  A0D8               	btfss	status,0,c
  2418  001762  D7DD               	goto	l6412
  2419                           
  2420                           ; BSR set to: 2
  2421                           ;FastTransfer.c: 69: }
  2422                           ;FastTransfer.c: 72: serial_write(CS);
  2423                           
  2424                           ; BSR set to: 2
  2425  001764  D801               	call	u6718
  2426  001766  D00B               	goto	l6420
  2427  001768                     u6718:
  2428  001768  0005               	push	
  2429  00176A  6EFA               	movwf	pclath,c
  2430  00176C  5032               	movf	_serial_write,w,c
  2431  00176E  6EFD               	movwf	tosl,c
  2432  001770  5033               	movf	_serial_write+1,w,c
  2433  001772  6EFE               	movwf	tosh,c
  2434  001774  50F8               	movf	tblptru,w,c
  2435  001776  6EFF               	movwf	tosu,c
  2436  001778  50FA               	movf	pclath,w,c
  2437  00177A  5029               	movf	sendData@CS,w,c
  2438  00177C  0012               	return		;indir
  2439  00177E                     l6420:
  2440                           
  2441                           ;FastTransfer.c: 75: crcBufS_put(&crc_buffer, whereToSend, CS, 0);
  2442  00177E  0E28               	movlw	low _crc_buffer
  2443  001780  6E1B               	movwf	crcBufS_put@_this,c
  2444  001782  0E01               	movlw	high _crc_buffer
  2445  001784  6E1C               	movwf	crcBufS_put@_this+1,c
  2446  001786  C028  F01D         	movff	sendData@whereToSend,crcBufS_put@address
  2447  00178A  C029  F01E         	movff	sendData@CS,crcBufS_put@oldCRC
  2448  00178E  0E00               	movlw	0
  2449  001790  6E1F               	movwf	crcBufS_put@status,c
  2450  001792  EC91  F00F         	call	_crcBufS_put
  2451                           
  2452                           ;FastTransfer.c: 78: FastTransfer_buffer_flush(&ring_buffer, 1);
  2453  001796  0E00               	movlw	low _ring_buffer
  2454  001798  6E23               	movwf	FastTransfer_buffer_flush@_this,c
  2455  00179A  0E02               	movlw	high _ring_buffer
  2456  00179C  6E24               	movwf	FastTransfer_buffer_flush@_this+1,c
  2457  00179E  0E00               	movlw	0
  2458  0017A0  6E26               	movwf	FastTransfer_buffer_flush@clearBuffer+1,c
  2459  0017A2  0E01               	movlw	1
  2460  0017A4  6E25               	movwf	FastTransfer_buffer_flush@clearBuffer,c
  2461  0017A6  ECCF  F014         	call	_FastTransfer_buffer_flush	;wreg free
  2462  0017AA  0012               	return		;funcret
  2463  0017AC                     __end_of_sendData:
  2464                           	opt stack 0
  2465                           tosu	equ	0xFFF
  2466                           tosh	equ	0xFFE
  2467                           tosl	equ	0xFFD
  2468                           pclath	equ	0xFFA
  2469                           tblptru	equ	0xFF8
  2470                           tblptrh	equ	0xFF7
  2471                           tblptrl	equ	0xFF6
  2472                           tablat	equ	0xFF5
  2473                           intcon	equ	0xFF2
  2474                           postinc0	equ	0xFEE
  2475                           wreg	equ	0xFE8
  2476                           indf2	equ	0xFDF
  2477                           fsr2h	equ	0xFDA
  2478                           fsr2l	equ	0xFD9
  2479                           status	equ	0xFD8
  2480                           
  2481 ;; *************** function _crcBufS_put *****************
  2482 ;; Defined at:
  2483 ;;		line 321 in file "FastTransfer.c"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  2486 ;;		 -> crc_buffer(17), 
  2487 ;;  address         1   28[COMRAM] unsigned char 
  2488 ;;  oldCRC          1   29[COMRAM] unsigned char 
  2489 ;;  status          1   30[COMRAM] unsigned char 
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;		None
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  1    wreg      void 
  2494 ;; Registers used:
  2495 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2501 ;;      Params:         5       0       0       0       0       0       0
  2502 ;;      Locals:         0       0       0       0       0       0       0
  2503 ;;      Temps:          2       0       0       0       0       0       0
  2504 ;;      Totals:         7       0       0       0       0       0       0
  2505 ;;Total ram usage:        7 bytes
  2506 ;; Hardware stack levels used:    1
  2507 ;; Hardware stack levels required when called:    4
  2508 ;; This function calls:
  2509 ;;		Nothing
  2510 ;; This function is called by:
  2511 ;;		_sendData
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           	psect	text4
  2516  001F22                     __ptext4:
  2517                           	opt stack 0
  2518  001F22                     _crcBufS_put:
  2519                           	opt stack 23
  2520                           
  2521                           ;FastTransfer.c: 322: _this->buf[_this->head] = address;
  2522                           
  2523                           ;incstack = 0
  2524  001F22  EE20 F00F          	lfsr	2,15
  2525  001F26  501B               	movf	crcBufS_put@_this,w,c
  2526  001F28  26D9               	addwf	fsr2l,f,c
  2527  001F2A  501C               	movf	crcBufS_put@_this+1,w,c
  2528  001F2C  22DA               	addwfc	fsr2h,f,c
  2529  001F2E  CFDE F020          	movff	postinc2,??_crcBufS_put
  2530  001F32  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  2531  001F36  5020               	movf	??_crcBufS_put,w,c
  2532  001F38  241B               	addwf	crcBufS_put@_this,w,c
  2533  001F3A  6ED9               	movwf	fsr2l,c
  2534  001F3C  5021               	movf	??_crcBufS_put+1,w,c
  2535  001F3E  201C               	addwfc	crcBufS_put@_this+1,w,c
  2536  001F40  6EDA               	movwf	fsr2h,c
  2537  001F42  C01D  FFDF         	movff	crcBufS_put@address,indf2
  2538                           
  2539                           ;FastTransfer.c: 323: _this->head++;
  2540  001F46  EE20 F00F          	lfsr	2,15
  2541  001F4A  501B               	movf	crcBufS_put@_this,w,c
  2542  001F4C  26D9               	addwf	fsr2l,f,c
  2543  001F4E  501C               	movf	crcBufS_put@_this+1,w,c
  2544  001F50  22DA               	addwfc	fsr2h,f,c
  2545  001F52  2ADE               	incf	postinc2,f,c
  2546  001F54  0E00               	movlw	0
  2547  001F56  22DD               	addwfc	postdec2,f,c
  2548                           
  2549                           ;FastTransfer.c: 324: _this->buf[_this->head] = oldCRC;
  2550  001F58  EE20 F00F          	lfsr	2,15
  2551  001F5C  501B               	movf	crcBufS_put@_this,w,c
  2552  001F5E  26D9               	addwf	fsr2l,f,c
  2553  001F60  501C               	movf	crcBufS_put@_this+1,w,c
  2554  001F62  22DA               	addwfc	fsr2h,f,c
  2555  001F64  CFDE F020          	movff	postinc2,??_crcBufS_put
  2556  001F68  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  2557  001F6C  5020               	movf	??_crcBufS_put,w,c
  2558  001F6E  241B               	addwf	crcBufS_put@_this,w,c
  2559  001F70  6ED9               	movwf	fsr2l,c
  2560  001F72  5021               	movf	??_crcBufS_put+1,w,c
  2561  001F74  201C               	addwfc	crcBufS_put@_this+1,w,c
  2562  001F76  6EDA               	movwf	fsr2h,c
  2563  001F78  C01E  FFDF         	movff	crcBufS_put@oldCRC,indf2
  2564                           
  2565                           ;FastTransfer.c: 325: _this->head++;
  2566  001F7C  EE20 F00F          	lfsr	2,15
  2567  001F80  501B               	movf	crcBufS_put@_this,w,c
  2568  001F82  26D9               	addwf	fsr2l,f,c
  2569  001F84  501C               	movf	crcBufS_put@_this+1,w,c
  2570  001F86  22DA               	addwfc	fsr2h,f,c
  2571  001F88  2ADE               	incf	postinc2,f,c
  2572  001F8A  0E00               	movlw	0
  2573  001F8C  22DD               	addwfc	postdec2,f,c
  2574                           
  2575                           ;FastTransfer.c: 326: _this->buf[_this->head] = status;
  2576  001F8E  EE20 F00F          	lfsr	2,15
  2577  001F92  501B               	movf	crcBufS_put@_this,w,c
  2578  001F94  26D9               	addwf	fsr2l,f,c
  2579  001F96  501C               	movf	crcBufS_put@_this+1,w,c
  2580  001F98  22DA               	addwfc	fsr2h,f,c
  2581  001F9A  CFDE F020          	movff	postinc2,??_crcBufS_put
  2582  001F9E  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  2583  001FA2  5020               	movf	??_crcBufS_put,w,c
  2584  001FA4  241B               	addwf	crcBufS_put@_this,w,c
  2585  001FA6  6ED9               	movwf	fsr2l,c
  2586  001FA8  5021               	movf	??_crcBufS_put+1,w,c
  2587  001FAA  201C               	addwfc	crcBufS_put@_this+1,w,c
  2588  001FAC  6EDA               	movwf	fsr2h,c
  2589  001FAE  C01F  FFDF         	movff	crcBufS_put@status,indf2
  2590                           
  2591                           ;FastTransfer.c: 327: _this->head++;
  2592  001FB2  EE20 F00F          	lfsr	2,15
  2593  001FB6  501B               	movf	crcBufS_put@_this,w,c
  2594  001FB8  26D9               	addwf	fsr2l,f,c
  2595  001FBA  501C               	movf	crcBufS_put@_this+1,w,c
  2596  001FBC  22DA               	addwfc	fsr2h,f,c
  2597  001FBE  2ADE               	incf	postinc2,f,c
  2598  001FC0  0E00               	movlw	0
  2599  001FC2  22DD               	addwfc	postdec2,f,c
  2600                           
  2601                           ;FastTransfer.c: 328: if (_this->head >= (5 * 3)) {
  2602  001FC4  EE20 F00F          	lfsr	2,15
  2603  001FC8  501B               	movf	crcBufS_put@_this,w,c
  2604  001FCA  26D9               	addwf	fsr2l,f,c
  2605  001FCC  501C               	movf	crcBufS_put@_this+1,w,c
  2606  001FCE  22DA               	addwfc	fsr2h,f,c
  2607  001FD0  0E01               	movlw	1
  2608  001FD2  BEDB               	btfsc	plusw2,7,c
  2609  001FD4  0012               	return	
  2610  001FD6  0E01               	movlw	1
  2611  001FD8  50DB               	movf	plusw2,w,c
  2612  001FDA  E104               	bnz	u6320
  2613  001FDC  0E0F               	movlw	15
  2614  001FDE  5CDE               	subwf	postinc2,w,c
  2615  001FE0  A0D8               	btfss	status,0,c
  2616  001FE2  0012               	return	
  2617  001FE4                     u6320:
  2618                           
  2619                           ;FastTransfer.c: 329: _this->head = 0;
  2620  001FE4  EE20 F00F          	lfsr	2,15
  2621  001FE8  501B               	movf	crcBufS_put@_this,w,c
  2622  001FEA  26D9               	addwf	fsr2l,f,c
  2623  001FEC  501C               	movf	crcBufS_put@_this+1,w,c
  2624  001FEE  22DA               	addwfc	fsr2h,f,c
  2625  001FF0  0E00               	movlw	0
  2626  001FF2  6EDE               	movwf	postinc2,c
  2627  001FF4  0E00               	movlw	0
  2628  001FF6  6EDD               	movwf	postdec2,c
  2629  001FF8  0012               	return	
  2630  001FFA                     __end_of_crcBufS_put:
  2631                           	opt stack 0
  2632                           tosu	equ	0xFFF
  2633                           tosh	equ	0xFFE
  2634                           tosl	equ	0xFFD
  2635                           pclath	equ	0xFFA
  2636                           tblptru	equ	0xFF8
  2637                           tblptrh	equ	0xFF7
  2638                           tblptrl	equ	0xFF6
  2639                           tablat	equ	0xFF5
  2640                           intcon	equ	0xFF2
  2641                           postinc0	equ	0xFEE
  2642                           wreg	equ	0xFE8
  2643                           indf2	equ	0xFDF
  2644                           postinc2	equ	0xFDE
  2645                           postdec2	equ	0xFDD
  2646                           plusw2	equ	0xFDB
  2647                           fsr2h	equ	0xFDA
  2648                           fsr2l	equ	0xFD9
  2649                           status	equ	0xFD8
  2650                           
  2651 ;; *************** function _FastTransfer_buffer_flush *****************
  2652 ;; Defined at:
  2653 ;;		line 261 in file "FastTransfer.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;  _this           2   34[COMRAM] PTR struct ringBufS
  2656 ;;		 -> ring_buffer(206), 
  2657 ;;  clearBuffer     2   36[COMRAM] const int 
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;		None
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  1    wreg      void 
  2662 ;; Registers used:
  2663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2669 ;;      Params:         4       0       0       0       0       0       0
  2670 ;;      Locals:         0       0       0       0       0       0       0
  2671 ;;      Temps:          0       0       0       0       0       0       0
  2672 ;;      Totals:         4       0       0       0       0       0       0
  2673 ;;Total ram usage:        4 bytes
  2674 ;; Hardware stack levels used:    1
  2675 ;; Hardware stack levels required when called:    5
  2676 ;; This function calls:
  2677 ;;		_memset
  2678 ;; This function is called by:
  2679 ;;		_sendData
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           	psect	text5
  2684  00299E                     __ptext5:
  2685                           	opt stack 0
  2686  00299E                     _FastTransfer_buffer_flush:
  2687                           	opt stack 22
  2688                           
  2689                           ;FastTransfer.c: 262: _this->count = 0;
  2690                           
  2691                           ;incstack = 0
  2692  00299E  EE20 F0CC          	lfsr	2,204
  2693  0029A2  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  2694  0029A4  26D9               	addwf	fsr2l,f,c
  2695  0029A6  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  2696  0029A8  22DA               	addwfc	fsr2h,f,c
  2697  0029AA  0E00               	movlw	0
  2698  0029AC  6EDE               	movwf	postinc2,c
  2699  0029AE  0E00               	movlw	0
  2700  0029B0  6EDD               	movwf	postdec2,c
  2701                           
  2702                           ;FastTransfer.c: 263: _this->head = 0;
  2703  0029B2  EE20 F0C8          	lfsr	2,200
  2704  0029B6  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  2705  0029B8  26D9               	addwf	fsr2l,f,c
  2706  0029BA  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  2707  0029BC  22DA               	addwfc	fsr2h,f,c
  2708  0029BE  0E00               	movlw	0
  2709  0029C0  6EDE               	movwf	postinc2,c
  2710  0029C2  0E00               	movlw	0
  2711  0029C4  6EDD               	movwf	postdec2,c
  2712                           
  2713                           ;FastTransfer.c: 264: _this->tail = 0;
  2714  0029C6  EE20 F0CA          	lfsr	2,202
  2715  0029CA  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  2716  0029CC  26D9               	addwf	fsr2l,f,c
  2717  0029CE  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  2718  0029D0  22DA               	addwfc	fsr2h,f,c
  2719  0029D2  0E00               	movlw	0
  2720  0029D4  6EDE               	movwf	postinc2,c
  2721  0029D6  0E00               	movlw	0
  2722  0029D8  6EDD               	movwf	postdec2,c
  2723                           
  2724                           ;FastTransfer.c: 265: if (clearBuffer) {
  2725  0029DA  5025               	movf	FastTransfer_buffer_flush@clearBuffer,w,c
  2726  0029DC  1026               	iorwf	FastTransfer_buffer_flush@clearBuffer+1,w,c
  2727  0029DE  B4D8               	btfsc	status,2,c
  2728  0029E0  0012               	return	
  2729                           
  2730                           ;FastTransfer.c: 266: memset(_this->buf, 0, sizeof (_this->buf));
  2731  0029E2  C023  F01B         	movff	FastTransfer_buffer_flush@_this,memset@p1
  2732  0029E6  C024  F01C         	movff	FastTransfer_buffer_flush@_this+1,memset@p1+1
  2733  0029EA  0E00               	movlw	0
  2734  0029EC  6E1E               	movwf	memset@c+1,c
  2735  0029EE  0E00               	movlw	0
  2736  0029F0  6E1D               	movwf	memset@c,c
  2737  0029F2  0E00               	movlw	0
  2738  0029F4  6E20               	movwf	memset@n+1,c
  2739  0029F6  0EC8               	movlw	200
  2740  0029F8  6E1F               	movwf	memset@n,c
  2741  0029FA  ECDA  F016         	call	_memset	;wreg free
  2742  0029FE  0012               	return	
  2743  002A00                     __end_of_FastTransfer_buffer_flush:
  2744                           	opt stack 0
  2745                           tosu	equ	0xFFF
  2746                           tosh	equ	0xFFE
  2747                           tosl	equ	0xFFD
  2748                           pclath	equ	0xFFA
  2749                           tblptru	equ	0xFF8
  2750                           tblptrh	equ	0xFF7
  2751                           tblptrl	equ	0xFF6
  2752                           tablat	equ	0xFF5
  2753                           intcon	equ	0xFF2
  2754                           postinc0	equ	0xFEE
  2755                           wreg	equ	0xFE8
  2756                           indf2	equ	0xFDF
  2757                           postinc2	equ	0xFDE
  2758                           postdec2	equ	0xFDD
  2759                           plusw2	equ	0xFDB
  2760                           fsr2h	equ	0xFDA
  2761                           fsr2l	equ	0xFD9
  2762                           status	equ	0xFD8
  2763                           
  2764 ;; *************** function _buttonsCollector *****************
  2765 ;; Defined at:
  2766 ;;		line 52 in file "Communications.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;		None
  2769 ;; Auto vars:     Size  Location     Type
  2770 ;;  i               2   39[COMRAM] int 
  2771 ;;  sendVal         2   37[COMRAM] unsigned int 
  2772 ;; Return value:  Size  Location     Type
  2773 ;;                  2   32[COMRAM] unsigned int 
  2774 ;; Registers used:
  2775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2776 ;; Tracked objects:
  2777 ;;		On entry : 0/0
  2778 ;;		On exit  : 0/0
  2779 ;;		Unchanged: 0/0
  2780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2781 ;;      Params:         2       0       0       0       0       0       0
  2782 ;;      Locals:         4       0       0       0       0       0       0
  2783 ;;      Temps:          3       0       0       0       0       0       0
  2784 ;;      Totals:         9       0       0       0       0       0       0
  2785 ;;Total ram usage:        9 bytes
  2786 ;; Hardware stack levels used:    1
  2787 ;; Hardware stack levels required when called:    5
  2788 ;; This function calls:
  2789 ;;		_GetButtonState
  2790 ;; This function is called by:
  2791 ;;		_respondECU
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           	psect	text6
  2796  00292E                     __ptext6:
  2797                           	opt stack 0
  2798  00292E                     _buttonsCollector:
  2799                           	opt stack 23
  2800                           
  2801                           ;Communications.c: 53: unsigned int sendVal = 0;
  2802                           
  2803                           ;incstack = 0
  2804  00292E  0E00               	movlw	0
  2805  002930  6E27               	movwf	buttonsCollector@sendVal+1,c
  2806  002932  0E00               	movlw	0
  2807  002934  6E26               	movwf	buttonsCollector@sendVal,c
  2808                           
  2809                           ;Communications.c: 54: int i = 0;
  2810  002936  0E00               	movlw	0
  2811  002938  6E29               	movwf	buttonsCollector@i+1,c
  2812  00293A  0E00               	movlw	0
  2813  00293C  6E28               	movwf	buttonsCollector@i,c
  2814                           
  2815                           ;Communications.c: 55: for (i = 0; i < 8; i++) {
  2816  00293E  0E00               	movlw	0
  2817  002940  6E29               	movwf	buttonsCollector@i+1,c
  2818  002942  0E00               	movlw	0
  2819  002944  6E28               	movwf	buttonsCollector@i,c
  2820  002946  BE29               	btfsc	buttonsCollector@i+1,7,c
  2821  002948  D006               	goto	l6392
  2822  00294A  5029               	movf	buttonsCollector@i+1,w,c
  2823  00294C  E123               	bnz	l932
  2824  00294E  0E08               	movlw	8
  2825  002950  5C28               	subwf	buttonsCollector@i,w,c
  2826  002952  B0D8               	btfsc	status,0,c
  2827  002954  D01F               	goto	l932
  2828  002956                     l6392:
  2829                           
  2830                           ;Communications.c: 56: sendVal = sendVal | ((GetButtonState(i)&0x01) << i);
  2831  002956  C028  F023         	movff	buttonsCollector@i,??_buttonsCollector
  2832  00295A  C028  F01B         	movff	buttonsCollector@i,GetButtonState@btnnum
  2833  00295E  C029  F01C         	movff	buttonsCollector@i+1,GetButtonState@btnnum+1
  2834  002962  EC2F  F017         	call	_GetButtonState	;wreg free
  2835  002966  0B01               	andlw	1
  2836  002968  6E24               	movwf	(??_buttonsCollector+1)& (0+255),c
  2837  00296A  6A25               	clrf	(??_buttonsCollector+2)& (0+255),c
  2838  00296C  2A23               	incf	??_buttonsCollector,f,c
  2839  00296E  D003               	goto	u6624
  2840  002970                     u6625:
  2841  002970  90D8               	bcf	status,0,c
  2842  002972  3624               	rlcf	??_buttonsCollector+1,f,c
  2843  002974  3625               	rlcf	??_buttonsCollector+2,f,c
  2844  002976                     u6624:
  2845  002976  2E23               	decfsz	??_buttonsCollector,f,c
  2846  002978  D7FB               	goto	u6625
  2847  00297A  5026               	movf	buttonsCollector@sendVal,w,c
  2848  00297C  1024               	iorwf	??_buttonsCollector+1,w,c
  2849  00297E  6E26               	movwf	buttonsCollector@sendVal,c
  2850  002980  5027               	movf	buttonsCollector@sendVal+1,w,c
  2851  002982  1025               	iorwf	??_buttonsCollector+2,w,c
  2852  002984  6E27               	movwf	buttonsCollector@sendVal+1,c
  2853  002986  4A28               	infsnz	buttonsCollector@i,f,c
  2854  002988  2A29               	incf	buttonsCollector@i+1,f,c
  2855  00298A  BE29               	btfsc	buttonsCollector@i+1,7,c
  2856  00298C  D7E4               	goto	l6392
  2857  00298E  5029               	movf	buttonsCollector@i+1,w,c
  2858  002990  E101               	bnz	u6630
  2859  002992  D7DD               	goto	L1
  2860  002994                     u6630:
  2861  002994                     l932:
  2862                           
  2863                           ;Communications.c: 57: }
  2864                           ;Communications.c: 58: return sendVal;
  2865  002994  C026  F021         	movff	buttonsCollector@sendVal,?_buttonsCollector
  2866  002998  C027  F022         	movff	buttonsCollector@sendVal+1,?_buttonsCollector+1
  2867  00299C  0012               	return		;funcret
  2868  00299E                     __end_of_buttonsCollector:
  2869                           	opt stack 0
  2870                           tosu	equ	0xFFF
  2871                           tosh	equ	0xFFE
  2872                           tosl	equ	0xFFD
  2873                           pclath	equ	0xFFA
  2874                           tblptru	equ	0xFF8
  2875                           tblptrh	equ	0xFF7
  2876                           tblptrl	equ	0xFF6
  2877                           tablat	equ	0xFF5
  2878                           intcon	equ	0xFF2
  2879                           postinc0	equ	0xFEE
  2880                           wreg	equ	0xFE8
  2881                           indf2	equ	0xFDF
  2882                           postinc2	equ	0xFDE
  2883                           postdec2	equ	0xFDD
  2884                           plusw2	equ	0xFDB
  2885                           fsr2h	equ	0xFDA
  2886                           fsr2l	equ	0xFD9
  2887                           status	equ	0xFD8
  2888                           
  2889 ;; *************** function _GetButtonState *****************
  2890 ;; Defined at:
  2891 ;;		line 184 in file "IO.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;  btnnum          2   26[COMRAM] int 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;		None
  2896 ;; Return value:  Size  Location     Type
  2897 ;;                  1    wreg      unsigned char 
  2898 ;; Registers used:
  2899 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2905 ;;      Params:         2       0       0       0       0       0       0
  2906 ;;      Locals:         0       0       0       0       0       0       0
  2907 ;;      Temps:          4       0       0       0       0       0       0
  2908 ;;      Totals:         6       0       0       0       0       0       0
  2909 ;;Total ram usage:        6 bytes
  2910 ;; Hardware stack levels used:    1
  2911 ;; Hardware stack levels required when called:    4
  2912 ;; This function calls:
  2913 ;;		Nothing
  2914 ;; This function is called by:
  2915 ;;		_buttonsCollector
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           	psect	text7
  2920  002E5E                     __ptext7:
  2921                           	opt stack 0
  2922  002E5E                     _GetButtonState:
  2923                           	opt stack 23
  2924                           
  2925                           ;IO.c: 185: return butnarray[btnnum - 1];
  2926                           
  2927                           ;incstack = 0
  2928  002E5E  0EFF               	movlw	255
  2929  002E60  6E1D               	movwf	??_GetButtonState& (0+255),c
  2930  002E62  0EFF               	movlw	255
  2931  002E64  6E1E               	movwf	(??_GetButtonState+1)& (0+255),c
  2932  002E66  C01B  F01F         	movff	GetButtonState@btnnum,??_GetButtonState+2
  2933  002E6A  C01C  F020         	movff	GetButtonState@btnnum+1,??_GetButtonState+3
  2934  002E6E  501D               	movf	??_GetButtonState,w,c
  2935  002E70  261F               	addwf	??_GetButtonState+2,f,c
  2936  002E72  501E               	movf	??_GetButtonState+1,w,c
  2937  002E74  2220               	addwfc	??_GetButtonState+3,f,c
  2938  002E76  0EB0               	movlw	low _butnarray
  2939  002E78  241F               	addwf	??_GetButtonState+2,w,c
  2940  002E7A  6ED9               	movwf	fsr2l,c
  2941  002E7C  0E00               	movlw	high _butnarray
  2942  002E7E  2020               	addwfc	??_GetButtonState+3,w,c
  2943  002E80  6EDA               	movwf	fsr2h,c
  2944  002E82  50DF               	movf	indf2,w,c
  2945  002E84  0012               	return	
  2946  002E86                     __end_of_GetButtonState:
  2947                           	opt stack 0
  2948                           tosu	equ	0xFFF
  2949                           tosh	equ	0xFFE
  2950                           tosl	equ	0xFFD
  2951                           pclath	equ	0xFFA
  2952                           tblptru	equ	0xFF8
  2953                           tblptrh	equ	0xFF7
  2954                           tblptrl	equ	0xFF6
  2955                           tablat	equ	0xFF5
  2956                           intcon	equ	0xFF2
  2957                           postinc0	equ	0xFEE
  2958                           wreg	equ	0xFE8
  2959                           indf2	equ	0xFDF
  2960                           postinc2	equ	0xFDE
  2961                           postdec2	equ	0xFDD
  2962                           plusw2	equ	0xFDB
  2963                           fsr2h	equ	0xFDA
  2964                           fsr2l	equ	0xFD9
  2965                           status	equ	0xFD8
  2966                           
  2967 ;; *************** function _ToSend *****************
  2968 ;; Defined at:
  2969 ;;		line 216 in file "FastTransfer.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;  where           1    wreg     unsigned char 
  2972 ;;  what            2   41[COMRAM] unsigned int 
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;  where           1    0[BANK0 ] unsigned char 
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  1    wreg      void 
  2977 ;; Registers used:
  2978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2984 ;;      Params:         2       0       0       0       0       0       0
  2985 ;;      Locals:         0       1       0       0       0       0       0
  2986 ;;      Temps:          0       0       0       0       0       0       0
  2987 ;;      Totals:         2       1       0       0       0       0       0
  2988 ;;Total ram usage:        3 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    6
  2991 ;; This function calls:
  2992 ;;		_FastTransfer_buffer_put
  2993 ;; This function is called by:
  2994 ;;		_respondECU
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text8
  2999  002EF0                     __ptext8:
  3000                           	opt stack 0
  3001  002EF0                     _ToSend:
  3002                           	opt stack 22
  3003                           
  3004                           ;incstack = 0
  3005                           ;ToSend@where stored from wreg
  3006  002EF0  0100               	movlb	0	; () banked
  3007  002EF2  6FF4               	movwf	ToSend@where& (0+255),b
  3008                           
  3009                           ;FastTransfer.c: 217: FastTransfer_buffer_put(&ring_buffer, where, what);
  3010  002EF4  0E00               	movlw	low _ring_buffer
  3011  002EF6  6E21               	movwf	FastTransfer_buffer_put@_this,c
  3012  002EF8  0E02               	movlw	high _ring_buffer
  3013  002EFA  6E22               	movwf	FastTransfer_buffer_put@_this+1,c
  3014  002EFC  C0F4  F023         	movff	ToSend@where,FastTransfer_buffer_put@towhere
  3015  002F00  C02A  F024         	movff	ToSend@what,FastTransfer_buffer_put@towhat
  3016  002F04  C02B  F025         	movff	ToSend@what+1,FastTransfer_buffer_put@towhat+1
  3017  002F08  EC39  F009         	call	_FastTransfer_buffer_put	;wreg free
  3018  002F0C  0012               	return		;funcret
  3019  002F0E                     __end_of_ToSend:
  3020                           	opt stack 0
  3021                           tosu	equ	0xFFF
  3022                           tosh	equ	0xFFE
  3023                           tosl	equ	0xFFD
  3024                           pclath	equ	0xFFA
  3025                           tblptru	equ	0xFF8
  3026                           tblptrh	equ	0xFF7
  3027                           tblptrl	equ	0xFF6
  3028                           tablat	equ	0xFF5
  3029                           intcon	equ	0xFF2
  3030                           postinc0	equ	0xFEE
  3031                           wreg	equ	0xFE8
  3032                           indf2	equ	0xFDF
  3033                           postinc2	equ	0xFDE
  3034                           postdec2	equ	0xFDD
  3035                           plusw2	equ	0xFDB
  3036                           fsr2h	equ	0xFDA
  3037                           fsr2l	equ	0xFD9
  3038                           status	equ	0xFD8
  3039                           
  3040 ;; *************** function _FastTransfer_buffer_put *****************
  3041 ;; Defined at:
  3042 ;;		line 223 in file "FastTransfer.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;  _this           2   32[COMRAM] PTR struct ringBufS
  3045 ;;		 -> ring_buffer(206), 
  3046 ;;  towhere         1   34[COMRAM] unsigned char 
  3047 ;;  towhat          2   35[COMRAM] unsigned int 
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;		None
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  1    wreg      void 
  3052 ;; Registers used:
  3053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3059 ;;      Params:         5       0       0       0       0       0       0
  3060 ;;      Locals:         0       0       0       0       0       0       0
  3061 ;;      Temps:          2       0       0       0       0       0       0
  3062 ;;      Totals:         7       0       0       0       0       0       0
  3063 ;;Total ram usage:        7 bytes
  3064 ;; Hardware stack levels used:    1
  3065 ;; Hardware stack levels required when called:    5
  3066 ;; This function calls:
  3067 ;;		_FastTransfer_buffer_modulo_inc
  3068 ;; This function is called by:
  3069 ;;		_ToSend
  3070 ;; This function uses a non-reentrant model
  3071 ;;
  3072                           
  3073                           	psect	text9
  3074  001272                     __ptext9:
  3075                           	opt stack 0
  3076  001272                     _FastTransfer_buffer_put:
  3077                           	opt stack 22
  3078                           
  3079                           ;FastTransfer.c: 225: group.integer = towhat;
  3080                           
  3081                           ;incstack = 0
  3082  001272  C024  F02C         	movff	FastTransfer_buffer_put@towhat,_group
  3083  001276  C025  F02D         	movff	FastTransfer_buffer_put@towhat+1,_group+1
  3084                           
  3085                           ;FastTransfer.c: 227: if (_this->count < (200 - 3)) {
  3086  00127A  EE20 F0CC          	lfsr	2,204
  3087  00127E  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3088  001280  26D9               	addwf	fsr2l,f,c
  3089  001282  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3090  001284  22DA               	addwfc	fsr2h,f,c
  3091  001286  0E01               	movlw	1
  3092  001288  BEDB               	btfsc	plusw2,7,c
  3093  00128A  D007               	goto	l6150
  3094  00128C  0E01               	movlw	1
  3095  00128E  50DB               	movf	plusw2,w,c
  3096  001290  E103               	bnz	u6341
  3097  001292  0EC5               	movlw	197
  3098  001294  5CDE               	subwf	postinc2,w,c
  3099  001296  B0D8               	btfsc	status,0,c
  3100  001298                     u6341:
  3101  001298  0012               	return	
  3102  00129A                     l6150:
  3103                           
  3104                           ;FastTransfer.c: 228: _this->buf[_this->head] = towhere;
  3105  00129A  EE20 F0C8          	lfsr	2,200
  3106  00129E  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3107  0012A0  26D9               	addwf	fsr2l,f,c
  3108  0012A2  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3109  0012A4  22DA               	addwfc	fsr2h,f,c
  3110  0012A6  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  3111  0012AA  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  3112  0012AE  5026               	movf	??_FastTransfer_buffer_put,w,c
  3113  0012B0  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  3114  0012B2  6ED9               	movwf	fsr2l,c
  3115  0012B4  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  3116  0012B6  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  3117  0012B8  6EDA               	movwf	fsr2h,c
  3118  0012BA  C023  FFDF         	movff	FastTransfer_buffer_put@towhere,indf2
  3119                           
  3120                           ;FastTransfer.c: 229: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  3121  0012BE  EE20 F0C8          	lfsr	2,200
  3122  0012C2  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3123  0012C4  26D9               	addwf	fsr2l,f,c
  3124  0012C6  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3125  0012C8  22DA               	addwfc	fsr2h,f,c
  3126  0012CA  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  3127  0012CE  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  3128  0012D2  0E00               	movlw	0
  3129  0012D4  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  3130  0012D6  0EC8               	movlw	200
  3131  0012D8  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  3132  0012DA  ECF0  F016         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  3133  0012DE  EE20 F0C8          	lfsr	2,200
  3134  0012E2  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3135  0012E4  26D9               	addwf	fsr2l,f,c
  3136  0012E6  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3137  0012E8  22DA               	addwfc	fsr2h,f,c
  3138  0012EA  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  3139  0012EE  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  3140                           
  3141                           ;FastTransfer.c: 230: ++_this->count;
  3142  0012F2  EE20 F0CC          	lfsr	2,204
  3143  0012F6  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3144  0012F8  26D9               	addwf	fsr2l,f,c
  3145  0012FA  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3146  0012FC  22DA               	addwfc	fsr2h,f,c
  3147  0012FE  2ADE               	incf	postinc2,f,c
  3148  001300  0E00               	movlw	0
  3149  001302  22DD               	addwfc	postdec2,f,c
  3150                           
  3151                           ;FastTransfer.c: 231: _this->buf[_this->head] = group.parts[0];
  3152  001304  EE20 F0C8          	lfsr	2,200
  3153  001308  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3154  00130A  26D9               	addwf	fsr2l,f,c
  3155  00130C  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3156  00130E  22DA               	addwfc	fsr2h,f,c
  3157  001310  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  3158  001314  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  3159  001318  5026               	movf	??_FastTransfer_buffer_put,w,c
  3160  00131A  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  3161  00131C  6ED9               	movwf	fsr2l,c
  3162  00131E  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  3163  001320  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  3164  001322  6EDA               	movwf	fsr2h,c
  3165  001324  C02C  FFDF         	movff	_group,indf2
  3166                           
  3167                           ;FastTransfer.c: 232: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  3168  001328  EE20 F0C8          	lfsr	2,200
  3169  00132C  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3170  00132E  26D9               	addwf	fsr2l,f,c
  3171  001330  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3172  001332  22DA               	addwfc	fsr2h,f,c
  3173  001334  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  3174  001338  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  3175  00133C  0E00               	movlw	0
  3176  00133E  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  3177  001340  0EC8               	movlw	200
  3178  001342  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  3179  001344  ECF0  F016         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  3180  001348  EE20 F0C8          	lfsr	2,200
  3181  00134C  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3182  00134E  26D9               	addwf	fsr2l,f,c
  3183  001350  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3184  001352  22DA               	addwfc	fsr2h,f,c
  3185  001354  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  3186  001358  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  3187                           
  3188                           ;FastTransfer.c: 233: ++_this->count;
  3189  00135C  EE20 F0CC          	lfsr	2,204
  3190  001360  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3191  001362  26D9               	addwf	fsr2l,f,c
  3192  001364  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3193  001366  22DA               	addwfc	fsr2h,f,c
  3194  001368  2ADE               	incf	postinc2,f,c
  3195  00136A  0E00               	movlw	0
  3196  00136C  22DD               	addwfc	postdec2,f,c
  3197                           
  3198                           ;FastTransfer.c: 234: _this->buf[_this->head] = group.parts[1];
  3199  00136E  EE20 F0C8          	lfsr	2,200
  3200  001372  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3201  001374  26D9               	addwf	fsr2l,f,c
  3202  001376  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3203  001378  22DA               	addwfc	fsr2h,f,c
  3204  00137A  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  3205  00137E  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  3206  001382  5026               	movf	??_FastTransfer_buffer_put,w,c
  3207  001384  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  3208  001386  6ED9               	movwf	fsr2l,c
  3209  001388  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  3210  00138A  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  3211  00138C  6EDA               	movwf	fsr2h,c
  3212  00138E  C02D  FFDF         	movff	_group+1,indf2
  3213                           
  3214                           ;FastTransfer.c: 235: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  3215  001392  EE20 F0C8          	lfsr	2,200
  3216  001396  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3217  001398  26D9               	addwf	fsr2l,f,c
  3218  00139A  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3219  00139C  22DA               	addwfc	fsr2h,f,c
  3220  00139E  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  3221  0013A2  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  3222  0013A6  0E00               	movlw	0
  3223  0013A8  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  3224  0013AA  0EC8               	movlw	200
  3225  0013AC  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  3226  0013AE  ECF0  F016         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  3227  0013B2  EE20 F0C8          	lfsr	2,200
  3228  0013B6  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3229  0013B8  26D9               	addwf	fsr2l,f,c
  3230  0013BA  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3231  0013BC  22DA               	addwfc	fsr2h,f,c
  3232  0013BE  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  3233  0013C2  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  3234                           
  3235                           ;FastTransfer.c: 236: ++_this->count;
  3236  0013C6  EE20 F0CC          	lfsr	2,204
  3237  0013CA  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3238  0013CC  26D9               	addwf	fsr2l,f,c
  3239  0013CE  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3240  0013D0  22DA               	addwfc	fsr2h,f,c
  3241  0013D2  2ADE               	incf	postinc2,f,c
  3242  0013D4  0E00               	movlw	0
  3243  0013D6  22DD               	addwfc	postdec2,f,c
  3244  0013D8  0012               	return	
  3245  0013DA                     __end_of_FastTransfer_buffer_put:
  3246                           	opt stack 0
  3247                           tosu	equ	0xFFF
  3248                           tosh	equ	0xFFE
  3249                           tosl	equ	0xFFD
  3250                           pclath	equ	0xFFA
  3251                           tblptru	equ	0xFF8
  3252                           tblptrh	equ	0xFF7
  3253                           tblptrl	equ	0xFF6
  3254                           tablat	equ	0xFF5
  3255                           intcon	equ	0xFF2
  3256                           postinc0	equ	0xFEE
  3257                           wreg	equ	0xFE8
  3258                           indf2	equ	0xFDF
  3259                           postinc2	equ	0xFDE
  3260                           postdec2	equ	0xFDD
  3261                           plusw2	equ	0xFDB
  3262                           fsr2h	equ	0xFDA
  3263                           fsr2l	equ	0xFD9
  3264                           status	equ	0xFD8
  3265                           
  3266 ;; *************** function _FastTransfer_buffer_modulo_inc *****************
  3267 ;; Defined at:
  3268 ;;		line 273 in file "FastTransfer.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;  value           2   26[COMRAM] const unsigned int 
  3271 ;;  modulus         2   28[COMRAM] const unsigned int 
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;  my_value        2   30[COMRAM] unsigned int 
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  2   26[COMRAM] unsigned int 
  3276 ;; Registers used:
  3277 ;;		wreg, status,2, status,0
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3283 ;;      Params:         4       0       0       0       0       0       0
  3284 ;;      Locals:         2       0       0       0       0       0       0
  3285 ;;      Temps:          0       0       0       0       0       0       0
  3286 ;;      Totals:         6       0       0       0       0       0       0
  3287 ;;Total ram usage:        6 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; Hardware stack levels required when called:    4
  3290 ;; This function calls:
  3291 ;;		Nothing
  3292 ;; This function is called by:
  3293 ;;		_FastTransfer_buffer_put
  3294 ;;		_FastTransfer_buffer_get
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           	psect	text10
  3299  002DE0                     __ptext10:
  3300                           	opt stack 0
  3301  002DE0                     _FastTransfer_buffer_modulo_inc:
  3302                           	opt stack 22
  3303                           
  3304                           ;FastTransfer.c: 274: unsigned int my_value = value + 1;
  3305                           
  3306                           ;incstack = 0
  3307  002DE0  0E01               	movlw	1
  3308  002DE2  241B               	addwf	FastTransfer_buffer_modulo_inc@value,w,c
  3309  002DE4  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  3310  002DE6  0E00               	movlw	0
  3311  002DE8  201C               	addwfc	FastTransfer_buffer_modulo_inc@value+1,w,c
  3312  002DEA  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  3313                           
  3314                           ;FastTransfer.c: 275: if (my_value >= modulus) {
  3315  002DEC  501D               	movf	FastTransfer_buffer_modulo_inc@modulus,w,c
  3316  002DEE  5C1F               	subwf	FastTransfer_buffer_modulo_inc@my_value,w,c
  3317  002DF0  501E               	movf	FastTransfer_buffer_modulo_inc@modulus+1,w,c
  3318  002DF2  5820               	subwfb	FastTransfer_buffer_modulo_inc@my_value+1,w,c
  3319  002DF4  A0D8               	btfss	status,0,c
  3320  002DF6  D004               	goto	l5976
  3321                           
  3322                           ;FastTransfer.c: 276: my_value = 0;
  3323  002DF8  0E00               	movlw	0
  3324  002DFA  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  3325  002DFC  0E00               	movlw	0
  3326  002DFE  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  3327  002E00                     l5976:
  3328                           
  3329                           ;FastTransfer.c: 277: }
  3330                           ;FastTransfer.c: 278: return (my_value);
  3331  002E00  C01F  F01B         	movff	FastTransfer_buffer_modulo_inc@my_value,?_FastTransfer_buffer_modulo_inc
  3332  002E04  C020  F01C         	movff	FastTransfer_buffer_modulo_inc@my_value+1,?_FastTransfer_buffer_modulo_inc+1
  3333  002E08  0012               	return	
  3334  002E0A                     __end_of_FastTransfer_buffer_modulo_inc:
  3335                           	opt stack 0
  3336                           tosu	equ	0xFFF
  3337                           tosh	equ	0xFFE
  3338                           tosl	equ	0xFFD
  3339                           pclath	equ	0xFFA
  3340                           tblptru	equ	0xFF8
  3341                           tblptrh	equ	0xFF7
  3342                           tblptrl	equ	0xFF6
  3343                           tablat	equ	0xFF5
  3344                           intcon	equ	0xFF2
  3345                           postinc0	equ	0xFEE
  3346                           wreg	equ	0xFE8
  3347                           indf2	equ	0xFDF
  3348                           postinc2	equ	0xFDE
  3349                           postdec2	equ	0xFDD
  3350                           plusw2	equ	0xFDB
  3351                           fsr2h	equ	0xFDA
  3352                           fsr2l	equ	0xFD9
  3353                           status	equ	0xFD8
  3354                           
  3355 ;; *************** function _Delay *****************
  3356 ;; Defined at:
  3357 ;;		line 117 in file "main.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  wait            2   26[COMRAM] int 
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;  x               2   29[COMRAM] int 
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  1    wreg      void 
  3364 ;; Registers used:
  3365 ;;		wreg, status,2, status,0
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3371 ;;      Params:         2       0       0       0       0       0       0
  3372 ;;      Locals:         2       0       0       0       0       0       0
  3373 ;;      Temps:          1       0       0       0       0       0       0
  3374 ;;      Totals:         5       0       0       0       0       0       0
  3375 ;;Total ram usage:        5 bytes
  3376 ;; Hardware stack levels used:    1
  3377 ;; Hardware stack levels required when called:    4
  3378 ;; This function calls:
  3379 ;;		Nothing
  3380 ;; This function is called by:
  3381 ;;		_respondECU
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385                           	psect	text11
  3386  002D20                     __ptext11:
  3387                           	opt stack 0
  3388  002D20                     _Delay:
  3389                           	opt stack 24
  3390                           
  3391                           ;main.c: 118: int x;
  3392                           ;main.c: 119: for (x = 0; x < wait; x++) {
  3393                           
  3394                           ;incstack = 0
  3395  002D20  0E00               	movlw	0
  3396  002D22  6E1F               	movwf	Delay@x+1,c
  3397  002D24  0E00               	movlw	0
  3398  002D26  6E1E               	movwf	Delay@x,c
  3399  002D28  D00A               	goto	l601
  3400  002D2A                     l6238:
  3401                           
  3402                           ;main.c: 120: _delay((unsigned long)((1)*(16000000/4000.0)));
  3403  002D2A  0E06               	movlw	6
  3404  002D2C  6E1D               	movwf	??_Delay& (0+255),c
  3405  002D2E  0E30               	movlw	48
  3406  002D30                     u8797:
  3407  002D30  2EE8               	decfsz	wreg,f,c
  3408  002D32  D7FE               	goto	u8797
  3409  002D34  2E1D               	decfsz	??_Delay& (0+255),f,c
  3410  002D36  D7FC               	goto	u8797
  3411  002D38  D000               	nop2	
  3412  002D3A  4A1E               	infsnz	Delay@x,f,c
  3413  002D3C  2A1F               	incf	Delay@x+1,f,c
  3414  002D3E                     l601:
  3415  002D3E  501B               	movf	Delay@wait,w,c
  3416  002D40  5C1E               	subwf	Delay@x,w,c
  3417  002D42  501F               	movf	Delay@x+1,w,c
  3418  002D44  0A80               	xorlw	128
  3419  002D46  6E1D               	movwf	??_Delay& (0+255),c
  3420  002D48  501C               	movf	Delay@wait+1,w,c
  3421  002D4A  0A80               	xorlw	128
  3422  002D4C  581D               	subwfb	??_Delay& (0+255),w,c
  3423  002D4E  B0D8               	btfsc	status,0,c
  3424  002D50  0012               	return	
  3425  002D52  D7EB               	goto	l6238
  3426  002D54                     __end_of_Delay:
  3427                           	opt stack 0
  3428                           tosu	equ	0xFFF
  3429                           tosh	equ	0xFFE
  3430                           tosl	equ	0xFFD
  3431                           pclath	equ	0xFFA
  3432                           tblptru	equ	0xFF8
  3433                           tblptrh	equ	0xFF7
  3434                           tblptrl	equ	0xFF6
  3435                           tablat	equ	0xFF5
  3436                           intcon	equ	0xFF2
  3437                           postinc0	equ	0xFEE
  3438                           wreg	equ	0xFE8
  3439                           indf2	equ	0xFDF
  3440                           postinc2	equ	0xFDE
  3441                           postdec2	equ	0xFDD
  3442                           plusw2	equ	0xFDB
  3443                           fsr2h	equ	0xFDA
  3444                           fsr2l	equ	0xFD9
  3445                           status	equ	0xFD8
  3446                           
  3447 ;; *************** function _receiveData *****************
  3448 ;; Defined at:
  3449 ;;		line 82 in file "FastTransfer.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;		None
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;  holder          3    9[BANK1 ] unsigned char [3]
  3454 ;;  crcHolder       1   13[BANK1 ] unsigned char 
  3455 ;;  holder          3    6[BANK1 ] unsigned char [3]
  3456 ;;  crcHolder       1   12[BANK1 ] unsigned char 
  3457 ;;  u               2   14[BANK1 ] int 
  3458 ;;  r               2   16[BANK1 ] int 
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  1    wreg      unsigned char 
  3461 ;; Registers used:
  3462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3468 ;;      Params:         0       0       0       0       0       0       0
  3469 ;;      Locals:         0       0      12       0       0       0       0
  3470 ;;      Temps:          0       0       6       0       0       0       0
  3471 ;;      Totals:         0       0      18       0       0       0       0
  3472 ;;Total ram usage:       18 bytes
  3473 ;; Hardware stack levels used:    1
  3474 ;; Hardware stack levels required when called:    8
  3475 ;; This function calls:
  3476 ;;		Absolute function
  3477 ;;		_CRC8
  3478 ;;		_CRCcheck
  3479 ;;		_Receive_available
  3480 ;;		_Receive_get
  3481 ;;		_Receive_peek
  3482 ;;		_Send_put
  3483 ;; This function is called by:
  3484 ;;		_updateComms
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text12
  3489  0000D4                     __ptext12:
  3490                           	opt stack 0
  3491  0000D4                     _receiveData:
  3492                           	opt stack 21
  3493                           
  3494                           ;FastTransfer.c: 85: if (rx_len == 0) {
  3495                           
  3496                           ;incstack = 0
  3497  0000D4  503F               	movf	_rx_len,w,c
  3498  0000D6  A4D8               	btfss	status,2,c
  3499  0000D8  D0AC               	goto	l6758
  3500                           
  3501                           ;FastTransfer.c: 87: if (serial_available() > 4) {
  3502  0000DA  D801               	call	u7248
  3503  0000DC  D00A               	goto	u7249
  3504  0000DE                     u7248:
  3505  0000DE  0005               	push	
  3506  0000E0  6EFA               	movwf	pclath,c
  3507  0000E2  502E               	movf	_serial_available,w,c
  3508  0000E4  6EFD               	movwf	tosl,c
  3509  0000E6  502F               	movf	_serial_available+1,w,c
  3510  0000E8  6EFE               	movwf	tosh,c
  3511  0000EA  50F8               	movf	tblptru,w,c
  3512  0000EC  6EFF               	movwf	tosu,c
  3513  0000EE  50FA               	movf	pclath,w,c
  3514  0000F0  0012               	return		;indir
  3515  0000F2                     u7249:
  3516  0000F2  BE1E               	btfsc	?_Receive_available+1,7,c
  3517  0000F4  D09E               	goto	l6758
  3518  0000F6  501E               	movf	?_Receive_available+1,w,c
  3519  0000F8  E11E               	bnz	l6734
  3520  0000FA  0E05               	movlw	5
  3521  0000FC  5C1D               	subwf	?_Receive_available,w,c
  3522  0000FE  B0D8               	btfsc	status,0,c
  3523  000100  D01A               	goto	l6734
  3524  000102  D097               	goto	l6758
  3525  000104                     l6726:
  3526                           
  3527                           ;FastTransfer.c: 93: alignErrorCounter++;
  3528  000104  0100               	movlb	0	; () banked
  3529  000106  4BC5               	infsnz	_alignErrorCounter& (0+255),f,b
  3530  000108  2BC6               	incf	(_alignErrorCounter+1)& (0+255),f,b
  3531                           
  3532                           ; BSR set to: 0
  3533                           ;FastTransfer.c: 94: if (serial_available() < 5)
  3534  00010A  D801               	call	u7268
  3535  00010C  D00A               	goto	u7269
  3536  00010E                     u7268:
  3537  00010E  0005               	push	
  3538  000110  6EFA               	movwf	pclath,c
  3539  000112  502E               	movf	_serial_available,w,c
  3540  000114  6EFD               	movwf	tosl,c
  3541  000116  502F               	movf	_serial_available+1,w,c
  3542  000118  6EFE               	movwf	tosh,c
  3543  00011A  50F8               	movf	tblptru,w,c
  3544  00011C  6EFF               	movwf	tosu,c
  3545  00011E  50FA               	movf	pclath,w,c
  3546  000120  0012               	return		;indir
  3547  000122                     u7269:
  3548  000122  BE1E               	btfsc	?_Receive_available+1,7,c
  3549  000124  D006               	goto	l6730
  3550  000126  501E               	movf	?_Receive_available+1,w,c
  3551  000128  E106               	bnz	l6734
  3552  00012A  0E05               	movlw	5
  3553  00012C  5C1D               	subwf	?_Receive_available,w,c
  3554  00012E  B0D8               	btfsc	status,0,c
  3555  000130  D002               	goto	l6734
  3556  000132                     l6730:
  3557                           
  3558                           ;FastTransfer.c: 95: return 0;
  3559  000132  0E00               	movlw	0
  3560  000134  0012               	return	
  3561  000136                     l6734:
  3562  000136  D801               	call	u7288
  3563  000138  D00A               	goto	u7289
  3564  00013A                     u7288:
  3565  00013A  0005               	push	
  3566  00013C  6EFA               	movwf	pclath,c
  3567  00013E  5030               	movf	_serial_read,w,c
  3568  000140  6EFD               	movwf	tosl,c
  3569  000142  5031               	movf	_serial_read+1,w,c
  3570  000144  6EFE               	movwf	tosh,c
  3571  000146  50F8               	movf	tblptru,w,c
  3572  000148  6EFF               	movwf	tosu,c
  3573  00014A  50FA               	movf	pclath,w,c
  3574  00014C  0012               	return		;indir
  3575  00014E                     u7289:
  3576  00014E  0A06               	xorlw	6
  3577  000150  A4D8               	btfss	status,2,c
  3578  000152  D7D8               	goto	l6726
  3579                           
  3580                           ;FastTransfer.c: 96: }
  3581                           ;FastTransfer.c: 97: if (serial_read() == 0x85) {
  3582  000154  D801               	call	u7308
  3583  000156  D00A               	goto	u7309
  3584  000158                     u7308:
  3585  000158  0005               	push	
  3586  00015A  6EFA               	movwf	pclath,c
  3587  00015C  5030               	movf	_serial_read,w,c
  3588  00015E  6EFD               	movwf	tosl,c
  3589  000160  5031               	movf	_serial_read+1,w,c
  3590  000162  6EFE               	movwf	tosh,c
  3591  000164  50F8               	movf	tblptru,w,c
  3592  000166  6EFF               	movwf	tosu,c
  3593  000168  50FA               	movf	pclath,w,c
  3594  00016A  0012               	return		;indir
  3595  00016C                     u7309:
  3596  00016C  0A85               	xorlw	133
  3597  00016E  A4D8               	btfss	status,2,c
  3598  000170  D060               	goto	l6758
  3599                           
  3600                           ;FastTransfer.c: 98: rx_address = serial_read();
  3601  000172  D801               	call	u7328
  3602  000174  D00A               	goto	u7329
  3603  000176                     u7328:
  3604  000176  0005               	push	
  3605  000178  6EFA               	movwf	pclath,c
  3606  00017A  5030               	movf	_serial_read,w,c
  3607  00017C  6EFD               	movwf	tosl,c
  3608  00017E  5031               	movf	_serial_read+1,w,c
  3609  000180  6EFE               	movwf	tosh,c
  3610  000182  50F8               	movf	tblptru,w,c
  3611  000184  6EFF               	movwf	tosu,c
  3612  000186  50FA               	movf	pclath,w,c
  3613  000188  0012               	return		;indir
  3614  00018A                     u7329:
  3615  00018A  6E3D               	movwf	_rx_address,c
  3616                           
  3617                           ;FastTransfer.c: 99: returnAddress = serial_read();
  3618  00018C  D801               	call	u7338
  3619  00018E  D00A               	goto	u7339
  3620  000190                     u7338:
  3621  000190  0005               	push	
  3622  000192  6EFA               	movwf	pclath,c
  3623  000194  5030               	movf	_serial_read,w,c
  3624  000196  6EFD               	movwf	tosl,c
  3625  000198  5031               	movf	_serial_read+1,w,c
  3626  00019A  6EFE               	movwf	tosh,c
  3627  00019C  50F8               	movf	tblptru,w,c
  3628  00019E  6EFF               	movwf	tosu,c
  3629  0001A0  50FA               	movf	pclath,w,c
  3630  0001A2  0012               	return		;indir
  3631  0001A4                     u7339:
  3632  0001A4  6E3C               	movwf	_returnAddress,c
  3633                           
  3634                           ;FastTransfer.c: 100: rx_len = serial_read();
  3635  0001A6  D801               	call	u7348
  3636  0001A8  D00A               	goto	u7349
  3637  0001AA                     u7348:
  3638  0001AA  0005               	push	
  3639  0001AC  6EFA               	movwf	pclath,c
  3640  0001AE  5030               	movf	_serial_read,w,c
  3641  0001B0  6EFD               	movwf	tosl,c
  3642  0001B2  5031               	movf	_serial_read+1,w,c
  3643  0001B4  6EFE               	movwf	tosh,c
  3644  0001B6  50F8               	movf	tblptru,w,c
  3645  0001B8  6EFF               	movwf	tosu,c
  3646  0001BA  50FA               	movf	pclath,w,c
  3647  0001BC  0012               	return		;indir
  3648  0001BE                     u7349:
  3649  0001BE  6E3F               	movwf	_rx_len,c
  3650                           
  3651                           ;FastTransfer.c: 102: if (rx_address != moduleAddress) {
  3652  0001C0  503B               	movf	_moduleAddress,w,c
  3653  0001C2  183D               	xorwf	_rx_address,w,c
  3654  0001C4  B4D8               	btfsc	status,2,c
  3655  0001C6  D035               	goto	l6758
  3656                           
  3657                           ;FastTransfer.c: 103: addressErrorCounter++;
  3658  0001C8  0100               	movlb	0	; () banked
  3659  0001CA  4BC3               	infsnz	_addressErrorCounter& (0+255),f,b
  3660  0001CC  2BC4               	incf	(_addressErrorCounter+1)& (0+255),f,b
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;FastTransfer.c: 106: int u;
  3664                           ;FastTransfer.c: 107: for (u = 0; u <= (rx_len + 1); u++) {
  3665  0001CE  0E00               	movlw	0
  3666  0001D0  0101               	movlb	1	; () banked
  3667  0001D2  6F48               	movwf	(receiveData@u+1)& (0+255),b
  3668  0001D4  0E00               	movlw	0
  3669  0001D6  6F47               	movwf	receiveData@u& (0+255),b
  3670  0001D8  D00F               	goto	l6750
  3671  0001DA                     l6746:
  3672                           
  3673                           ; BSR set to: 1
  3674                           ;FastTransfer.c: 108: serial_read();
  3675  0001DA  D801               	call	u7368
  3676  0001DC  D00A               	goto	l6748
  3677  0001DE                     u7368:
  3678  0001DE  0005               	push	
  3679  0001E0  6EFA               	movwf	pclath,c
  3680  0001E2  5030               	movf	_serial_read,w,c
  3681  0001E4  6EFD               	movwf	tosl,c
  3682  0001E6  5031               	movf	_serial_read+1,w,c
  3683  0001E8  6EFE               	movwf	tosh,c
  3684  0001EA  50F8               	movf	tblptru,w,c
  3685  0001EC  6EFF               	movwf	tosu,c
  3686  0001EE  50FA               	movf	pclath,w,c
  3687  0001F0  0012               	return		;indir
  3688  0001F2                     l6748:
  3689  0001F2  0101               	movlb	1	; () banked
  3690  0001F4  4B47               	infsnz	receiveData@u& (0+255),f,b
  3691  0001F6  2B48               	incf	(receiveData@u+1)& (0+255),f,b
  3692  0001F8                     l6750:
  3693                           
  3694                           ; BSR set to: 1
  3695  0001F8  503F               	movf	_rx_len,w,c
  3696  0001FA  0101               	movlb	1	; () banked
  3697  0001FC  6F39               	movwf	??_receiveData& (0+255),b
  3698  0001FE  6B3A               	clrf	(??_receiveData+1)& (0+255),b
  3699  000200  0E01               	movlw	1
  3700  000202  0101               	movlb	1	; () banked
  3701  000204  2739               	addwf	??_receiveData& (0+255),f,b
  3702  000206  0E00               	movlw	0
  3703  000208  233A               	addwfc	(??_receiveData+1)& (0+255),f,b
  3704  00020A  0101               	movlb	1	; () banked
  3705  00020C  5147               	movf	receiveData@u& (0+255),w,b
  3706  00020E  0101               	movlb	1	; () banked
  3707  000210  5D39               	subwf	??_receiveData& (0+255),w,b
  3708  000212  0101               	movlb	1	; () banked
  3709  000214  513A               	movf	(??_receiveData+1)& (0+255),w,b
  3710  000216  0A80               	xorlw	128
  3711  000218  0101               	movlb	1	; () banked
  3712  00021A  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  3713  00021C  0101               	movlb	1	; () banked
  3714  00021E  5148               	movf	(receiveData@u+1)& (0+255),w,b
  3715  000220  0A80               	xorlw	128
  3716  000222  0101               	movlb	1	; () banked
  3717  000224  593B               	subwfb	(??_receiveData+2)& (0+255),w,b
  3718  000226  B0D8               	btfsc	status,0,c
  3719  000228  D7D8               	goto	l6746
  3720                           
  3721                           ; BSR set to: 1
  3722                           ;FastTransfer.c: 109: }
  3723                           ;FastTransfer.c: 110: rx_len = 0;
  3724                           
  3725                           ; BSR set to: 1
  3726  00022A  0E00               	movlw	0
  3727  00022C  6E3F               	movwf	_rx_len,c
  3728                           
  3729                           ; BSR set to: 1
  3730                           ;FastTransfer.c: 111: return 0;
  3731  00022E  0E00               	movlw	0
  3732                           
  3733                           ; BSR set to: 1
  3734  000230  0012               	return	
  3735  000232                     l6758:
  3736                           
  3737                           ;FastTransfer.c: 112: }
  3738                           ;FastTransfer.c: 114: }
  3739                           ;FastTransfer.c: 115: }
  3740                           ;FastTransfer.c: 116: }
  3741                           ;FastTransfer.c: 119: if (rx_len != 0) {
  3742  000232  503F               	movf	_rx_len,w,c
  3743  000234  B4D8               	btfsc	status,2,c
  3744  000236  D2A6               	goto	l6882
  3745                           
  3746                           ;FastTransfer.c: 122: if (rx_array_inx == 0) {
  3747  000238  503E               	movf	_rx_array_inx,w,c
  3748  00023A  A4D8               	btfss	status,2,c
  3749  00023C  D044               	goto	l6782
  3750  00023E                     l6764:
  3751  00023E  D801               	call	u7408
  3752  000240  D00A               	goto	u7409
  3753  000242                     u7408:
  3754  000242  0005               	push	
  3755  000244  6EFA               	movwf	pclath,c
  3756  000246  502E               	movf	_serial_available,w,c
  3757  000248  6EFD               	movwf	tosl,c
  3758  00024A  502F               	movf	_serial_available+1,w,c
  3759  00024C  6EFE               	movwf	tosh,c
  3760  00024E  50F8               	movf	tblptru,w,c
  3761  000250  6EFF               	movwf	tosu,c
  3762  000252  50FA               	movf	pclath,w,c
  3763  000254  0012               	return		;indir
  3764  000256                     u7409:
  3765  000256  BE1E               	btfsc	?_Receive_available+1,7,c
  3766  000258  D7F2               	goto	l6764
  3767  00025A  501E               	movf	?_Receive_available+1,w,c
  3768  00025C  E103               	bnz	l6766
  3769  00025E  041D               	decf	?_Receive_available,w,c
  3770  000260  A0D8               	btfss	status,0,c
  3771  000262  D7ED               	goto	l6764
  3772  000264                     l6766:
  3773                           
  3774                           ;FastTransfer.c: 124: if (255 == serial_peek()) {
  3775  000264  D801               	call	u7428
  3776  000266  D00B               	goto	u7429
  3777  000268                     u7428:
  3778  000268  0005               	push	
  3779  00026A  0100               	movlb	0	; () banked
  3780  00026C  6EFA               	movwf	pclath,c
  3781  00026E  51D9               	movf	_serial_peek& (0+255),w,b
  3782  000270  6EFD               	movwf	tosl,c
  3783  000272  51DA               	movf	(_serial_peek+1)& (0+255),w,b
  3784  000274  6EFE               	movwf	tosh,c
  3785  000276  50F8               	movf	tblptru,w,c
  3786  000278  6EFF               	movwf	tosu,c
  3787  00027A  50FA               	movf	pclath,w,c
  3788  00027C  0012               	return		;indir
  3789  00027E                     u7429:
  3790  00027E  0AFF               	xorlw	255
  3791  000280  A4D8               	btfss	status,2,c
  3792  000282  D021               	goto	l6782
  3793                           
  3794                           ;FastTransfer.c: 125: CRCcheck();
  3795  000284  ECED  F009         	call	_CRCcheck	;wreg free
  3796                           
  3797                           ;FastTransfer.c: 126: rx_len = 0;
  3798  000288  0E00               	movlw	0
  3799  00028A  6E3F               	movwf	_rx_len,c
  3800                           
  3801                           ;FastTransfer.c: 127: rx_array_inx = 0;
  3802  00028C  0E00               	movlw	0
  3803  00028E  6E3E               	movwf	_rx_array_inx,c
  3804                           
  3805                           ;FastTransfer.c: 128: return 0;
  3806  000290  0E00               	movlw	0
  3807  000292  0012               	return	
  3808  000294                     l6778:
  3809                           
  3810                           ;FastTransfer.c: 134: rx_buffer[rx_array_inx++] = serial_read();
  3811  000294  D801               	call	u7448
  3812  000296  D00A               	goto	u7449
  3813  000298                     u7448:
  3814  000298  0005               	push	
  3815  00029A  6EFA               	movwf	pclath,c
  3816  00029C  5030               	movf	_serial_read,w,c
  3817  00029E  6EFD               	movwf	tosl,c
  3818  0002A0  5031               	movf	_serial_read+1,w,c
  3819  0002A2  6EFE               	movwf	tosh,c
  3820  0002A4  50F8               	movf	tblptru,w,c
  3821  0002A6  6EFF               	movwf	tosu,c
  3822  0002A8  50FA               	movf	pclath,w,c
  3823  0002AA  0012               	return		;indir
  3824  0002AC                     u7449:
  3825  0002AC  0101               	movlb	1	; () banked
  3826  0002AE  6F39               	movwf	??_receiveData& (0+255),b
  3827  0002B0  503E               	movf	_rx_array_inx,w,c
  3828  0002B2  0D01               	mullw	1
  3829  0002B4  0E00               	movlw	low _rx_buffer
  3830  0002B6  24F3               	addwf	prodl,w,c
  3831  0002B8  6ED9               	movwf	fsr2l,c
  3832  0002BA  0E03               	movlw	high _rx_buffer
  3833  0002BC  20F4               	addwfc	prodh,w,c
  3834  0002BE  6EDA               	movwf	fsr2h,c
  3835  0002C0  C139  FFDF         	movff	??_receiveData,indf2
  3836                           
  3837                           ; BSR set to: 1
  3838  0002C4  2A3E               	incf	_rx_array_inx,f,c
  3839  0002C6                     l6782:
  3840  0002C6  D801               	call	u7458
  3841  0002C8  D00A               	goto	u7459
  3842  0002CA                     u7458:
  3843  0002CA  0005               	push	
  3844  0002CC  6EFA               	movwf	pclath,c
  3845  0002CE  502E               	movf	_serial_available,w,c
  3846  0002D0  6EFD               	movwf	tosl,c
  3847  0002D2  502F               	movf	_serial_available+1,w,c
  3848  0002D4  6EFE               	movwf	tosh,c
  3849  0002D6  50F8               	movf	tblptru,w,c
  3850  0002D8  6EFF               	movwf	tosu,c
  3851  0002DA  50FA               	movf	pclath,w,c
  3852  0002DC  0012               	return		;indir
  3853  0002DE                     u7459:
  3854  0002DE  501D               	movf	?_Receive_available,w,c
  3855  0002E0  101E               	iorwf	?_Receive_available+1,w,c
  3856  0002E2  B4D8               	btfsc	status,2,c
  3857  0002E4  D004               	goto	l6786
  3858  0002E6  503E               	movf	_rx_array_inx,w,c
  3859  0002E8  5C3F               	subwf	_rx_len,w,c
  3860  0002EA  B0D8               	btfsc	status,0,c
  3861  0002EC  D7D3               	goto	l6778
  3862  0002EE                     l6786:
  3863                           
  3864                           ;FastTransfer.c: 135: }
  3865                           ;FastTransfer.c: 137: if (rx_len == (rx_array_inx - 1)) {
  3866  0002EE  503F               	movf	_rx_len,w,c
  3867  0002F0  0101               	movlb	1	; () banked
  3868  0002F2  6F39               	movwf	??_receiveData& (0+255),b
  3869  0002F4  6B3A               	clrf	(??_receiveData+1)& (0+255),b
  3870  0002F6  0EFF               	movlw	255
  3871  0002F8  0101               	movlb	1	; () banked
  3872  0002FA  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  3873  0002FC  0EFF               	movlw	255
  3874  0002FE  0101               	movlb	1	; () banked
  3875  000300  6F3C               	movwf	(??_receiveData+3)& (0+255),b
  3876  000302  503E               	movf	_rx_array_inx,w,c
  3877  000304  0101               	movlb	1	; () banked
  3878  000306  6F3D               	movwf	(??_receiveData+4)& (0+255),b
  3879  000308  6B3E               	clrf	(??_receiveData+5)& (0+255),b
  3880  00030A  0101               	movlb	1	; () banked
  3881  00030C  513B               	movf	(??_receiveData+2)& (0+255),w,b
  3882  00030E  0101               	movlb	1	; () banked
  3883  000310  273D               	addwf	(??_receiveData+4)& (0+255),f,b
  3884  000312  0101               	movlb	1	; () banked
  3885  000314  513C               	movf	(??_receiveData+3)& (0+255),w,b
  3886  000316  0101               	movlb	1	; () banked
  3887  000318  233E               	addwfc	(??_receiveData+5)& (0+255),f,b
  3888  00031A  0101               	movlb	1	; () banked
  3889  00031C  5139               	movf	??_receiveData& (0+255),w,b
  3890  00031E  0101               	movlb	1	; () banked
  3891  000320  193D               	xorwf	(??_receiveData+4)& (0+255),w,b
  3892  000322  E105               	bnz	u7481
  3893  000324  0101               	movlb	1	; () banked
  3894  000326  513A               	movf	(??_receiveData+1)& (0+255),w,b
  3895  000328  0101               	movlb	1	; () banked
  3896  00032A  193E               	xorwf	(??_receiveData+5)& (0+255),w,b
  3897  00032C  A4D8               	btfss	status,2,c
  3898  00032E                     u7481:
  3899  00032E  D22A               	goto	l6882
  3900                           
  3901                           ; BSR set to: 1
  3902                           ;FastTransfer.c: 140: calc_CS = CRC8(rx_buffer, rx_len);
  3903  000330  0E00               	movlw	low _rx_buffer
  3904  000332  6E1B               	movwf	CRC8@data,c
  3905  000334  0E03               	movlw	high _rx_buffer
  3906  000336  6E1C               	movwf	CRC8@data+1,c
  3907  000338  C03F  F01D         	movff	_rx_len,CRC8@len
  3908  00033C  ECAD  F015         	call	_CRC8	;wreg free
  3909  000340  6E37               	movwf	_calc_CS,c
  3910                           
  3911                           ;FastTransfer.c: 144: if (calc_CS == rx_buffer[rx_array_inx - 1]) {
  3912  000342  0EFF               	movlw	255
  3913  000344  0101               	movlb	1	; () banked
  3914  000346  6F39               	movwf	??_receiveData& (0+255),b
  3915  000348  0EFF               	movlw	255
  3916  00034A  0101               	movlb	1	; () banked
  3917  00034C  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  3918  00034E  503E               	movf	_rx_array_inx,w,c
  3919  000350  0101               	movlb	1	; () banked
  3920  000352  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  3921  000354  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  3922  000356  0101               	movlb	1	; () banked
  3923  000358  5139               	movf	??_receiveData& (0+255),w,b
  3924  00035A  0101               	movlb	1	; () banked
  3925  00035C  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  3926  00035E  0101               	movlb	1	; () banked
  3927  000360  513A               	movf	(??_receiveData+1)& (0+255),w,b
  3928  000362  0101               	movlb	1	; () banked
  3929  000364  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  3930  000366  0E00               	movlw	low _rx_buffer
  3931  000368  0101               	movlb	1	; () banked
  3932  00036A  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  3933  00036C  6ED9               	movwf	fsr2l,c
  3934  00036E  0E03               	movlw	high _rx_buffer
  3935  000370  0101               	movlb	1	; () banked
  3936  000372  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  3937  000374  6EDA               	movwf	fsr2h,c
  3938  000376  5037               	movf	_calc_CS,w,c
  3939  000378  18DE               	xorwf	postinc2,w,c
  3940  00037A  A4D8               	btfss	status,2,c
  3941  00037C  D13B               	goto	l6844
  3942                           
  3943                           ; BSR set to: 1
  3944                           ;FastTransfer.c: 147: int r;
  3945                           ;FastTransfer.c: 148: for (r = 0; r < rx_len; r = r + 3) {
  3946  00037E  0E00               	movlw	0
  3947  000380  0101               	movlb	1	; () banked
  3948  000382  6F4A               	movwf	(receiveData@r+1)& (0+255),b
  3949  000384  0E00               	movlw	0
  3950  000386  6F49               	movwf	receiveData@r& (0+255),b
  3951  000388  D05C               	goto	l6804
  3952  00038A                     l6794:
  3953                           
  3954                           ; BSR set to: 1
  3955                           ;FastTransfer.c: 149: if (rx_buffer[r] < maxDataAddress) {
  3956  00038A  0E00               	movlw	low _rx_buffer
  3957  00038C  0101               	movlb	1	; () banked
  3958  00038E  2549               	addwf	receiveData@r& (0+255),w,b
  3959  000390  6ED9               	movwf	fsr2l,c
  3960  000392  0E03               	movlw	high _rx_buffer
  3961  000394  0101               	movlb	1	; () banked
  3962  000396  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  3963  000398  6EDA               	movwf	fsr2h,c
  3964  00039A  503A               	movf	_maxDataAddress,w,c
  3965  00039C  5CDE               	subwf	postinc2,w,c
  3966  00039E  B0D8               	btfsc	status,0,c
  3967  0003A0  D043               	goto	l6800
  3968                           
  3969                           ; BSR set to: 1
  3970                           ;FastTransfer.c: 150: group.parts[0] = rx_buffer[r + 1];
  3971  0003A2  0E01               	movlw	1
  3972  0003A4  0101               	movlb	1	; () banked
  3973  0003A6  2549               	addwf	receiveData@r& (0+255),w,b
  3974  0003A8  0101               	movlb	1	; () banked
  3975  0003AA  6F39               	movwf	??_receiveData& (0+255),b
  3976  0003AC  0E00               	movlw	0
  3977  0003AE  0101               	movlb	1	; () banked
  3978  0003B0  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  3979  0003B2  0101               	movlb	1	; () banked
  3980  0003B4  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  3981  0003B6  0E00               	movlw	low _rx_buffer
  3982  0003B8  0101               	movlb	1	; () banked
  3983  0003BA  2539               	addwf	??_receiveData& (0+255),w,b
  3984  0003BC  6ED9               	movwf	fsr2l,c
  3985  0003BE  0E03               	movlw	high _rx_buffer
  3986  0003C0  0101               	movlb	1	; () banked
  3987  0003C2  213A               	addwfc	(??_receiveData+1)& (0+255),w,b
  3988  0003C4  6EDA               	movwf	fsr2h,c
  3989  0003C6  50DF               	movf	indf2,w,c
  3990  0003C8  6E2C               	movwf	_group,c
  3991                           
  3992                           ;FastTransfer.c: 151: group.parts[1] = rx_buffer[r + 2];
  3993  0003CA  0E02               	movlw	2
  3994  0003CC  0101               	movlb	1	; () banked
  3995  0003CE  2549               	addwf	receiveData@r& (0+255),w,b
  3996  0003D0  0101               	movlb	1	; () banked
  3997  0003D2  6F39               	movwf	??_receiveData& (0+255),b
  3998  0003D4  0E00               	movlw	0
  3999  0003D6  0101               	movlb	1	; () banked
  4000  0003D8  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  4001  0003DA  0101               	movlb	1	; () banked
  4002  0003DC  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4003  0003DE  0E00               	movlw	low _rx_buffer
  4004  0003E0  0101               	movlb	1	; () banked
  4005  0003E2  2539               	addwf	??_receiveData& (0+255),w,b
  4006  0003E4  6ED9               	movwf	fsr2l,c
  4007  0003E6  0E03               	movlw	high _rx_buffer
  4008  0003E8  0101               	movlb	1	; () banked
  4009  0003EA  213A               	addwfc	(??_receiveData+1)& (0+255),w,b
  4010  0003EC  6EDA               	movwf	fsr2h,c
  4011  0003EE  50DF               	movf	indf2,w,c
  4012  0003F0  6E2D               	movwf	_group+1,c
  4013                           
  4014                           ; BSR set to: 1
  4015                           ;FastTransfer.c: 152: receiveArrayAddress[(rx_buffer[r])] = group.integer;
  4016  0003F2  0E00               	movlw	low _rx_buffer
  4017  0003F4  0101               	movlb	1	; () banked
  4018  0003F6  2549               	addwf	receiveData@r& (0+255),w,b
  4019  0003F8  6ED9               	movwf	fsr2l,c
  4020  0003FA  0E03               	movlw	high _rx_buffer
  4021  0003FC  0101               	movlb	1	; () banked
  4022  0003FE  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  4023  000400  6EDA               	movwf	fsr2h,c
  4024  000402  50DF               	movf	indf2,w,c
  4025  000404  0101               	movlb	1	; () banked
  4026  000406  6F39               	movwf	??_receiveData& (0+255),b
  4027  000408  0101               	movlb	1	; () banked
  4028  00040A  5139               	movf	??_receiveData& (0+255),w,b
  4029  00040C  0D02               	mullw	2
  4030  00040E  50F3               	movf	prodl,w,c
  4031  000410  0100               	movlb	0	; () banked
  4032  000412  25D5               	addwf	_receiveArrayAddress& (0+255),w,b
  4033  000414  6ED9               	movwf	fsr2l,c
  4034  000416  50F4               	movf	prodh,w,c
  4035  000418  0100               	movlb	0	; () banked
  4036  00041A  21D6               	addwfc	(_receiveArrayAddress+1)& (0+255),w,b
  4037  00041C  6EDA               	movwf	fsr2h,c
  4038  00041E  C02C  FFDE         	movff	_group,postinc2
  4039  000422  C02D  FFDD         	movff	_group+1,postdec2
  4040                           
  4041                           ;FastTransfer.c: 153: } else {
  4042  000426  D003               	goto	l6802
  4043  000428                     l6800:
  4044                           
  4045                           ;FastTransfer.c: 154: dataAdressErrorCounter++;
  4046  000428  0100               	movlb	0	; () banked
  4047  00042A  4BCB               	infsnz	_dataAdressErrorCounter& (0+255),f,b
  4048  00042C  2BCC               	incf	(_dataAdressErrorCounter+1)& (0+255),f,b
  4049  00042E                     l6802:
  4050                           
  4051                           ; BSR set to: 0
  4052  00042E  0E03               	movlw	3
  4053  000430  0101               	movlb	1	; () banked
  4054  000432  2549               	addwf	receiveData@r& (0+255),w,b
  4055  000434  0101               	movlb	1	; () banked
  4056  000436  6F49               	movwf	receiveData@r& (0+255),b
  4057  000438  0E00               	movlw	0
  4058  00043A  0101               	movlb	1	; () banked
  4059  00043C  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  4060  00043E  0101               	movlb	1	; () banked
  4061  000440  6F4A               	movwf	(receiveData@r+1)& (0+255),b
  4062  000442                     l6804:
  4063                           
  4064                           ; BSR set to: 1
  4065  000442  503F               	movf	_rx_len,w,c
  4066  000444  0101               	movlb	1	; () banked
  4067  000446  6F39               	movwf	??_receiveData& (0+255),b
  4068  000448  6B3A               	clrf	(??_receiveData+1)& (0+255),b
  4069  00044A  0101               	movlb	1	; () banked
  4070  00044C  5139               	movf	??_receiveData& (0+255),w,b
  4071  00044E  0101               	movlb	1	; () banked
  4072  000450  5D49               	subwf	receiveData@r& (0+255),w,b
  4073  000452  0101               	movlb	1	; () banked
  4074  000454  514A               	movf	(receiveData@r+1)& (0+255),w,b
  4075  000456  0A80               	xorlw	128
  4076  000458  0101               	movlb	1	; () banked
  4077  00045A  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4078  00045C  0101               	movlb	1	; () banked
  4079  00045E  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4080  000460  0A80               	xorlw	128
  4081  000462  0101               	movlb	1	; () banked
  4082  000464  593B               	subwfb	(??_receiveData+2)& (0+255),w,b
  4083  000466  A0D8               	btfss	status,0,c
  4084  000468  D790               	goto	l6794
  4085                           
  4086                           ; BSR set to: 1
  4087                           ;FastTransfer.c: 155: }
  4088                           ;FastTransfer.c: 156: }
  4089                           ;FastTransfer.c: 159: if (AKNAKsend) {
  4090                           
  4091                           ; BSR set to: 1
  4092  00046A  5036               	movf	_AKNAKsend,w,c
  4093  00046C  B4D8               	btfsc	status,2,c
  4094  00046E  D0BC               	goto	l6834
  4095                           
  4096                           ; BSR set to: 1
  4097                           ;FastTransfer.c: 160: unsigned char holder[3];
  4098                           ;FastTransfer.c: 161: holder[0] = 255;
  4099  000470  0101               	movlb	1	; () banked
  4100  000472  693F               	setf	receiveData@holder& (0+255),b
  4101                           
  4102                           ; BSR set to: 1
  4103                           ;FastTransfer.c: 162: holder[1] = 1;
  4104  000474  0E01               	movlw	1
  4105  000476  0101               	movlb	1	; () banked
  4106  000478  6F40               	movwf	(receiveData@holder+1)& (0+255),b
  4107                           
  4108                           ; BSR set to: 1
  4109                           ;FastTransfer.c: 163: holder[2] = rx_buffer[rx_array_inx - 1];
  4110  00047A  0EFF               	movlw	255
  4111  00047C  0101               	movlb	1	; () banked
  4112  00047E  6F39               	movwf	??_receiveData& (0+255),b
  4113  000480  0EFF               	movlw	255
  4114  000482  0101               	movlb	1	; () banked
  4115  000484  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4116  000486  503E               	movf	_rx_array_inx,w,c
  4117  000488  0101               	movlb	1	; () banked
  4118  00048A  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4119  00048C  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  4120  00048E  0101               	movlb	1	; () banked
  4121  000490  5139               	movf	??_receiveData& (0+255),w,b
  4122  000492  0101               	movlb	1	; () banked
  4123  000494  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  4124  000496  0101               	movlb	1	; () banked
  4125  000498  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4126  00049A  0101               	movlb	1	; () banked
  4127  00049C  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  4128  00049E  0E00               	movlw	low _rx_buffer
  4129  0004A0  0101               	movlb	1	; () banked
  4130  0004A2  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  4131  0004A4  6ED9               	movwf	fsr2l,c
  4132  0004A6  0E03               	movlw	high _rx_buffer
  4133  0004A8  0101               	movlb	1	; () banked
  4134  0004AA  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  4135  0004AC  6EDA               	movwf	fsr2h,c
  4136  0004AE  50DF               	movf	indf2,w,c
  4137  0004B0  0101               	movlb	1	; () banked
  4138  0004B2  6F41               	movwf	(receiveData@holder+2)& (0+255),b
  4139                           
  4140                           ; BSR set to: 1
  4141                           ;FastTransfer.c: 164: unsigned char crcHolder = CRC8(holder, 3);
  4142  0004B4  0E3F               	movlw	low receiveData@holder
  4143  0004B6  6E1B               	movwf	CRC8@data,c
  4144  0004B8  0E01               	movlw	high receiveData@holder
  4145  0004BA  6E1C               	movwf	CRC8@data+1,c
  4146  0004BC  0E03               	movlw	3
  4147  0004BE  6E1D               	movwf	CRC8@len,c
  4148  0004C0  ECAD  F015         	call	_CRC8	;wreg free
  4149  0004C4  0101               	movlb	1	; () banked
  4150  0004C6  6F45               	movwf	receiveData@crcHolder& (0+255),b
  4151                           
  4152                           ; BSR set to: 1
  4153                           ;FastTransfer.c: 165: serial_write(0x06);
  4154  0004C8  D801               	call	u7538
  4155  0004CA  D00B               	goto	l6818
  4156  0004CC                     u7538:
  4157  0004CC  0005               	push	
  4158  0004CE  6EFA               	movwf	pclath,c
  4159  0004D0  5032               	movf	_serial_write,w,c
  4160  0004D2  6EFD               	movwf	tosl,c
  4161  0004D4  5033               	movf	_serial_write+1,w,c
  4162  0004D6  6EFE               	movwf	tosh,c
  4163  0004D8  50F8               	movf	tblptru,w,c
  4164  0004DA  6EFF               	movwf	tosu,c
  4165  0004DC  50FA               	movf	pclath,w,c
  4166  0004DE  0E06               	movlw	6
  4167  0004E0  0012               	return		;indir
  4168  0004E2                     l6818:
  4169                           
  4170                           ;FastTransfer.c: 166: serial_write(0x85);
  4171  0004E2  D801               	call	u7548
  4172  0004E4  D00B               	goto	l6820
  4173  0004E6                     u7548:
  4174  0004E6  0005               	push	
  4175  0004E8  6EFA               	movwf	pclath,c
  4176  0004EA  5032               	movf	_serial_write,w,c
  4177  0004EC  6EFD               	movwf	tosl,c
  4178  0004EE  5033               	movf	_serial_write+1,w,c
  4179  0004F0  6EFE               	movwf	tosh,c
  4180  0004F2  50F8               	movf	tblptru,w,c
  4181  0004F4  6EFF               	movwf	tosu,c
  4182  0004F6  50FA               	movf	pclath,w,c
  4183  0004F8  0E85               	movlw	133
  4184  0004FA  0012               	return		;indir
  4185  0004FC                     l6820:
  4186                           
  4187                           ;FastTransfer.c: 167: serial_write(returnAddress);
  4188  0004FC  D801               	call	u7558
  4189  0004FE  D00B               	goto	l6822
  4190  000500                     u7558:
  4191  000500  0005               	push	
  4192  000502  6EFA               	movwf	pclath,c
  4193  000504  5032               	movf	_serial_write,w,c
  4194  000506  6EFD               	movwf	tosl,c
  4195  000508  5033               	movf	_serial_write+1,w,c
  4196  00050A  6EFE               	movwf	tosh,c
  4197  00050C  50F8               	movf	tblptru,w,c
  4198  00050E  6EFF               	movwf	tosu,c
  4199  000510  50FA               	movf	pclath,w,c
  4200  000512  503C               	movf	_returnAddress,w,c
  4201  000514  0012               	return		;indir
  4202  000516                     l6822:
  4203                           
  4204                           ;FastTransfer.c: 168: serial_write(moduleAddress);
  4205  000516  D801               	call	u7568
  4206  000518  D00B               	goto	l6824
  4207  00051A                     u7568:
  4208  00051A  0005               	push	
  4209  00051C  6EFA               	movwf	pclath,c
  4210  00051E  5032               	movf	_serial_write,w,c
  4211  000520  6EFD               	movwf	tosl,c
  4212  000522  5033               	movf	_serial_write+1,w,c
  4213  000524  6EFE               	movwf	tosh,c
  4214  000526  50F8               	movf	tblptru,w,c
  4215  000528  6EFF               	movwf	tosu,c
  4216  00052A  50FA               	movf	pclath,w,c
  4217  00052C  503B               	movf	_moduleAddress,w,c
  4218  00052E  0012               	return		;indir
  4219  000530                     l6824:
  4220                           
  4221                           ;FastTransfer.c: 169: serial_write(3);
  4222  000530  D801               	call	u7578
  4223  000532  D00B               	goto	l6826
  4224  000534                     u7578:
  4225  000534  0005               	push	
  4226  000536  6EFA               	movwf	pclath,c
  4227  000538  5032               	movf	_serial_write,w,c
  4228  00053A  6EFD               	movwf	tosl,c
  4229  00053C  5033               	movf	_serial_write+1,w,c
  4230  00053E  6EFE               	movwf	tosh,c
  4231  000540  50F8               	movf	tblptru,w,c
  4232  000542  6EFF               	movwf	tosu,c
  4233  000544  50FA               	movf	pclath,w,c
  4234  000546  0E03               	movlw	3
  4235  000548  0012               	return		;indir
  4236  00054A                     l6826:
  4237                           
  4238                           ;FastTransfer.c: 170: serial_write(255);
  4239  00054A  D801               	call	u7588
  4240  00054C  D00B               	goto	l6828
  4241  00054E                     u7588:
  4242  00054E  0005               	push	
  4243  000550  6EFA               	movwf	pclath,c
  4244  000552  5032               	movf	_serial_write,w,c
  4245  000554  6EFD               	movwf	tosl,c
  4246  000556  5033               	movf	_serial_write+1,w,c
  4247  000558  6EFE               	movwf	tosh,c
  4248  00055A  50F8               	movf	tblptru,w,c
  4249  00055C  6EFF               	movwf	tosu,c
  4250  00055E  50FA               	movf	pclath,w,c
  4251  000560  0EFF               	movlw	255
  4252  000562  0012               	return		;indir
  4253  000564                     l6828:
  4254                           
  4255                           ;FastTransfer.c: 171: serial_write(1);
  4256  000564  D801               	call	u7598
  4257  000566  D00B               	goto	l6830
  4258  000568                     u7598:
  4259  000568  0005               	push	
  4260  00056A  6EFA               	movwf	pclath,c
  4261  00056C  5032               	movf	_serial_write,w,c
  4262  00056E  6EFD               	movwf	tosl,c
  4263  000570  5033               	movf	_serial_write+1,w,c
  4264  000572  6EFE               	movwf	tosh,c
  4265  000574  50F8               	movf	tblptru,w,c
  4266  000576  6EFF               	movwf	tosu,c
  4267  000578  50FA               	movf	pclath,w,c
  4268  00057A  0E01               	movlw	1
  4269  00057C  0012               	return		;indir
  4270  00057E                     l6830:
  4271                           
  4272                           ;FastTransfer.c: 172: serial_write(rx_buffer[rx_array_inx - 1]);
  4273  00057E  D801               	call	u7608
  4274  000580  D025               	goto	l6832
  4275  000582                     u7608:
  4276  000582  0005               	push	
  4277  000584  6EFA               	movwf	pclath,c
  4278  000586  5032               	movf	_serial_write,w,c
  4279  000588  6EFD               	movwf	tosl,c
  4280  00058A  5033               	movf	_serial_write+1,w,c
  4281  00058C  6EFE               	movwf	tosh,c
  4282  00058E  50F8               	movf	tblptru,w,c
  4283  000590  6EFF               	movwf	tosu,c
  4284  000592  50FA               	movf	pclath,w,c
  4285  000594  0EFF               	movlw	255
  4286  000596  0101               	movlb	1	; () banked
  4287  000598  6F39               	movwf	??_receiveData& (0+255),b
  4288  00059A  0EFF               	movlw	255
  4289  00059C  0101               	movlb	1	; () banked
  4290  00059E  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4291  0005A0  503E               	movf	_rx_array_inx,w,c
  4292  0005A2  0101               	movlb	1	; () banked
  4293  0005A4  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4294  0005A6  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  4295  0005A8  0101               	movlb	1	; () banked
  4296  0005AA  5139               	movf	??_receiveData& (0+255),w,b
  4297  0005AC  0101               	movlb	1	; () banked
  4298  0005AE  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  4299  0005B0  0101               	movlb	1	; () banked
  4300  0005B2  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4301  0005B4  0101               	movlb	1	; () banked
  4302  0005B6  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  4303  0005B8  0E00               	movlw	low _rx_buffer
  4304  0005BA  0101               	movlb	1	; () banked
  4305  0005BC  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  4306  0005BE  6ED9               	movwf	fsr2l,c
  4307  0005C0  0E03               	movlw	high _rx_buffer
  4308  0005C2  0101               	movlb	1	; () banked
  4309  0005C4  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  4310  0005C6  6EDA               	movwf	fsr2h,c
  4311  0005C8  50DF               	movf	indf2,w,c
  4312  0005CA  0012               	return		;indir
  4313  0005CC                     l6832:
  4314                           
  4315                           ;FastTransfer.c: 173: serial_write(crcHolder);
  4316  0005CC  D801               	call	u7618
  4317  0005CE  D00C               	goto	l6834
  4318  0005D0                     u7618:
  4319  0005D0  0005               	push	
  4320  0005D2  6EFA               	movwf	pclath,c
  4321  0005D4  5032               	movf	_serial_write,w,c
  4322  0005D6  6EFD               	movwf	tosl,c
  4323  0005D8  5033               	movf	_serial_write+1,w,c
  4324  0005DA  6EFE               	movwf	tosh,c
  4325  0005DC  50F8               	movf	tblptru,w,c
  4326  0005DE  6EFF               	movwf	tosu,c
  4327  0005E0  50FA               	movf	pclath,w,c
  4328  0005E2  0101               	movlb	1	; () banked
  4329  0005E4  5145               	movf	receiveData@crcHolder& (0+255),w,b
  4330  0005E6  0012               	return		;indir
  4331  0005E8                     l6834:
  4332                           
  4333                           ;FastTransfer.c: 174: }
  4334                           ;FastTransfer.c: 178: rx_len = 0;
  4335  0005E8  0E00               	movlw	0
  4336  0005EA  6E3F               	movwf	_rx_len,c
  4337                           
  4338                           ;FastTransfer.c: 179: rx_array_inx = 0;
  4339  0005EC  0E00               	movlw	0
  4340  0005EE  6E3E               	movwf	_rx_array_inx,c
  4341                           
  4342                           ;FastTransfer.c: 180: return 1;
  4343  0005F0  0E01               	movlw	1
  4344  0005F2  0012               	return	
  4345  0005F4                     l6844:
  4346                           
  4347                           ;FastTransfer.c: 182: crcErrorCounter++;
  4348  0005F4  0100               	movlb	0	; () banked
  4349  0005F6  4BC9               	infsnz	_crcErrorCounter& (0+255),f,b
  4350  0005F8  2BCA               	incf	(_crcErrorCounter+1)& (0+255),f,b
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;FastTransfer.c: 184: if (AKNAKsend) {
  4354  0005FA  5036               	movf	_AKNAKsend,w,c
  4355  0005FC  B4D8               	btfsc	status,2,c
  4356  0005FE  D0BC               	goto	l6874
  4357                           
  4358                           ; BSR set to: 0
  4359                           ;FastTransfer.c: 185: unsigned char holder[3];
  4360                           ;FastTransfer.c: 186: holder[0] = 255;
  4361  000600  0101               	movlb	1	; () banked
  4362  000602  6942               	setf	receiveData@holder_2354& (0+255),b
  4363                           
  4364                           ; BSR set to: 1
  4365                           ;FastTransfer.c: 187: holder[1] = 2;
  4366  000604  0E02               	movlw	2
  4367  000606  0101               	movlb	1	; () banked
  4368  000608  6F43               	movwf	(receiveData@holder_2354+1)& (0+255),b
  4369                           
  4370                           ; BSR set to: 1
  4371                           ;FastTransfer.c: 188: holder[2] = rx_buffer[rx_array_inx - 1];
  4372  00060A  0EFF               	movlw	255
  4373  00060C  0101               	movlb	1	; () banked
  4374  00060E  6F39               	movwf	??_receiveData& (0+255),b
  4375  000610  0EFF               	movlw	255
  4376  000612  0101               	movlb	1	; () banked
  4377  000614  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4378  000616  503E               	movf	_rx_array_inx,w,c
  4379  000618  0101               	movlb	1	; () banked
  4380  00061A  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4381  00061C  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  4382  00061E  0101               	movlb	1	; () banked
  4383  000620  5139               	movf	??_receiveData& (0+255),w,b
  4384  000622  0101               	movlb	1	; () banked
  4385  000624  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  4386  000626  0101               	movlb	1	; () banked
  4387  000628  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4388  00062A  0101               	movlb	1	; () banked
  4389  00062C  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  4390  00062E  0E00               	movlw	low _rx_buffer
  4391  000630  0101               	movlb	1	; () banked
  4392  000632  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  4393  000634  6ED9               	movwf	fsr2l,c
  4394  000636  0E03               	movlw	high _rx_buffer
  4395  000638  0101               	movlb	1	; () banked
  4396  00063A  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  4397  00063C  6EDA               	movwf	fsr2h,c
  4398  00063E  50DF               	movf	indf2,w,c
  4399  000640  0101               	movlb	1	; () banked
  4400  000642  6F44               	movwf	(receiveData@holder_2354+2)& (0+255),b
  4401                           
  4402                           ; BSR set to: 1
  4403                           ;FastTransfer.c: 189: unsigned char crcHolder = CRC8(holder, 3);
  4404  000644  0E42               	movlw	low receiveData@holder_2354
  4405  000646  6E1B               	movwf	CRC8@data,c
  4406  000648  0E01               	movlw	high receiveData@holder_2354
  4407  00064A  6E1C               	movwf	CRC8@data+1,c
  4408  00064C  0E03               	movlw	3
  4409  00064E  6E1D               	movwf	CRC8@len,c
  4410  000650  ECAD  F015         	call	_CRC8
  4411  000654  0101               	movlb	1	; () banked
  4412  000656  6F46               	movwf	receiveData@crcHolder_2355& (0+255),b
  4413                           
  4414                           ; BSR set to: 1
  4415                           ;FastTransfer.c: 190: serial_write(0x06);
  4416  000658  D801               	call	u7638
  4417  00065A  D00B               	goto	l6858
  4418  00065C                     u7638:
  4419  00065C  0005               	push	
  4420  00065E  6EFA               	movwf	pclath,c
  4421  000660  5032               	movf	_serial_write,w,c
  4422  000662  6EFD               	movwf	tosl,c
  4423  000664  5033               	movf	_serial_write+1,w,c
  4424  000666  6EFE               	movwf	tosh,c
  4425  000668  50F8               	movf	tblptru,w,c
  4426  00066A  6EFF               	movwf	tosu,c
  4427  00066C  50FA               	movf	pclath,w,c
  4428  00066E  0E06               	movlw	6
  4429  000670  0012               	return		;indir
  4430  000672                     l6858:
  4431                           
  4432                           ;FastTransfer.c: 191: serial_write(0x85);
  4433  000672  D801               	call	u7648
  4434  000674  D00B               	goto	l6860
  4435  000676                     u7648:
  4436  000676  0005               	push	
  4437  000678  6EFA               	movwf	pclath,c
  4438  00067A  5032               	movf	_serial_write,w,c
  4439  00067C  6EFD               	movwf	tosl,c
  4440  00067E  5033               	movf	_serial_write+1,w,c
  4441  000680  6EFE               	movwf	tosh,c
  4442  000682  50F8               	movf	tblptru,w,c
  4443  000684  6EFF               	movwf	tosu,c
  4444  000686  50FA               	movf	pclath,w,c
  4445  000688  0E85               	movlw	133
  4446  00068A  0012               	return		;indir
  4447  00068C                     l6860:
  4448                           
  4449                           ;FastTransfer.c: 192: serial_write(returnAddress);
  4450  00068C  D801               	call	u7658
  4451  00068E  D00B               	goto	l6862
  4452  000690                     u7658:
  4453  000690  0005               	push	
  4454  000692  6EFA               	movwf	pclath,c
  4455  000694  5032               	movf	_serial_write,w,c
  4456  000696  6EFD               	movwf	tosl,c
  4457  000698  5033               	movf	_serial_write+1,w,c
  4458  00069A  6EFE               	movwf	tosh,c
  4459  00069C  50F8               	movf	tblptru,w,c
  4460  00069E  6EFF               	movwf	tosu,c
  4461  0006A0  50FA               	movf	pclath,w,c
  4462  0006A2  503C               	movf	_returnAddress,w,c
  4463  0006A4  0012               	return		;indir
  4464  0006A6                     l6862:
  4465                           
  4466                           ;FastTransfer.c: 193: serial_write(moduleAddress);
  4467  0006A6  D801               	call	u7668
  4468  0006A8  D00B               	goto	l6864
  4469  0006AA                     u7668:
  4470  0006AA  0005               	push	
  4471  0006AC  6EFA               	movwf	pclath,c
  4472  0006AE  5032               	movf	_serial_write,w,c
  4473  0006B0  6EFD               	movwf	tosl,c
  4474  0006B2  5033               	movf	_serial_write+1,w,c
  4475  0006B4  6EFE               	movwf	tosh,c
  4476  0006B6  50F8               	movf	tblptru,w,c
  4477  0006B8  6EFF               	movwf	tosu,c
  4478  0006BA  50FA               	movf	pclath,w,c
  4479  0006BC  503B               	movf	_moduleAddress,w,c
  4480  0006BE  0012               	return		;indir
  4481  0006C0                     l6864:
  4482                           
  4483                           ;FastTransfer.c: 194: serial_write(3);
  4484  0006C0  D801               	call	u7678
  4485  0006C2  D00B               	goto	l6866
  4486  0006C4                     u7678:
  4487  0006C4  0005               	push	
  4488  0006C6  6EFA               	movwf	pclath,c
  4489  0006C8  5032               	movf	_serial_write,w,c
  4490  0006CA  6EFD               	movwf	tosl,c
  4491  0006CC  5033               	movf	_serial_write+1,w,c
  4492  0006CE  6EFE               	movwf	tosh,c
  4493  0006D0  50F8               	movf	tblptru,w,c
  4494  0006D2  6EFF               	movwf	tosu,c
  4495  0006D4  50FA               	movf	pclath,w,c
  4496  0006D6  0E03               	movlw	3
  4497  0006D8  0012               	return		;indir
  4498  0006DA                     l6866:
  4499                           
  4500                           ;FastTransfer.c: 195: serial_write(255);
  4501  0006DA  D801               	call	u7688
  4502  0006DC  D00B               	goto	l6868
  4503  0006DE                     u7688:
  4504  0006DE  0005               	push	
  4505  0006E0  6EFA               	movwf	pclath,c
  4506  0006E2  5032               	movf	_serial_write,w,c
  4507  0006E4  6EFD               	movwf	tosl,c
  4508  0006E6  5033               	movf	_serial_write+1,w,c
  4509  0006E8  6EFE               	movwf	tosh,c
  4510  0006EA  50F8               	movf	tblptru,w,c
  4511  0006EC  6EFF               	movwf	tosu,c
  4512  0006EE  50FA               	movf	pclath,w,c
  4513  0006F0  0EFF               	movlw	255
  4514  0006F2  0012               	return		;indir
  4515  0006F4                     l6868:
  4516                           
  4517                           ;FastTransfer.c: 196: serial_write(2);
  4518  0006F4  D801               	call	u7698
  4519  0006F6  D00B               	goto	l6870
  4520  0006F8                     u7698:
  4521  0006F8  0005               	push	
  4522  0006FA  6EFA               	movwf	pclath,c
  4523  0006FC  5032               	movf	_serial_write,w,c
  4524  0006FE  6EFD               	movwf	tosl,c
  4525  000700  5033               	movf	_serial_write+1,w,c
  4526  000702  6EFE               	movwf	tosh,c
  4527  000704  50F8               	movf	tblptru,w,c
  4528  000706  6EFF               	movwf	tosu,c
  4529  000708  50FA               	movf	pclath,w,c
  4530  00070A  0E02               	movlw	2
  4531  00070C  0012               	return		;indir
  4532  00070E                     l6870:
  4533                           
  4534                           ;FastTransfer.c: 197: serial_write(rx_buffer[rx_array_inx - 1]);
  4535  00070E  D801               	call	u7708
  4536  000710  D025               	goto	l6872
  4537  000712                     u7708:
  4538  000712  0005               	push	
  4539  000714  6EFA               	movwf	pclath,c
  4540  000716  5032               	movf	_serial_write,w,c
  4541  000718  6EFD               	movwf	tosl,c
  4542  00071A  5033               	movf	_serial_write+1,w,c
  4543  00071C  6EFE               	movwf	tosh,c
  4544  00071E  50F8               	movf	tblptru,w,c
  4545  000720  6EFF               	movwf	tosu,c
  4546  000722  50FA               	movf	pclath,w,c
  4547  000724  0EFF               	movlw	255
  4548  000726  0101               	movlb	1	; () banked
  4549  000728  6F39               	movwf	??_receiveData& (0+255),b
  4550  00072A  0EFF               	movlw	255
  4551  00072C  0101               	movlb	1	; () banked
  4552  00072E  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4553  000730  503E               	movf	_rx_array_inx,w,c
  4554  000732  0101               	movlb	1	; () banked
  4555  000734  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4556  000736  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  4557  000738  0101               	movlb	1	; () banked
  4558  00073A  5139               	movf	??_receiveData& (0+255),w,b
  4559  00073C  0101               	movlb	1	; () banked
  4560  00073E  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  4561  000740  0101               	movlb	1	; () banked
  4562  000742  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4563  000744  0101               	movlb	1	; () banked
  4564  000746  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  4565  000748  0E00               	movlw	low _rx_buffer
  4566  00074A  0101               	movlb	1	; () banked
  4567  00074C  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  4568  00074E  6ED9               	movwf	fsr2l,c
  4569  000750  0E03               	movlw	high _rx_buffer
  4570  000752  0101               	movlb	1	; () banked
  4571  000754  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  4572  000756  6EDA               	movwf	fsr2h,c
  4573  000758  50DF               	movf	indf2,w,c
  4574  00075A  0012               	return		;indir
  4575  00075C                     l6872:
  4576                           
  4577                           ;FastTransfer.c: 198: serial_write(crcHolder);
  4578  00075C  D801               	call	u7718
  4579  00075E  D00C               	goto	l6874
  4580  000760                     u7718:
  4581  000760  0005               	push	
  4582  000762  6EFA               	movwf	pclath,c
  4583  000764  5032               	movf	_serial_write,w,c
  4584  000766  6EFD               	movwf	tosl,c
  4585  000768  5033               	movf	_serial_write+1,w,c
  4586  00076A  6EFE               	movwf	tosh,c
  4587  00076C  50F8               	movf	tblptru,w,c
  4588  00076E  6EFF               	movwf	tosu,c
  4589  000770  50FA               	movf	pclath,w,c
  4590  000772  0101               	movlb	1	; () banked
  4591  000774  5146               	movf	receiveData@crcHolder_2355& (0+255),w,b
  4592  000776  0012               	return		;indir
  4593  000778                     l6874:
  4594                           
  4595                           ;FastTransfer.c: 199: }
  4596                           ;FastTransfer.c: 202: rx_len = 0;
  4597  000778  0E00               	movlw	0
  4598  00077A  6E3F               	movwf	_rx_len,c
  4599                           
  4600                           ;FastTransfer.c: 203: rx_array_inx = 0;
  4601  00077C  0E00               	movlw	0
  4602  00077E  6E3E               	movwf	_rx_array_inx,c
  4603                           
  4604                           ;FastTransfer.c: 204: return 0;
  4605  000780  0E00               	movlw	0
  4606  000782  0012               	return	
  4607  000784                     l6882:
  4608                           
  4609                           ;FastTransfer.c: 205: }
  4610                           ;FastTransfer.c: 206: }
  4611                           ;FastTransfer.c: 207: }
  4612                           ;FastTransfer.c: 210: return 0;
  4613  000784  0E00               	movlw	0
  4614  000786  0012               	return	
  4615  000788                     __end_of_receiveData:
  4616                           	opt stack 0
  4617                           tosu	equ	0xFFF
  4618                           tosh	equ	0xFFE
  4619                           tosl	equ	0xFFD
  4620                           pclath	equ	0xFFA
  4621                           tblptru	equ	0xFF8
  4622                           tblptrh	equ	0xFF7
  4623                           tblptrl	equ	0xFF6
  4624                           tablat	equ	0xFF5
  4625                           prodh	equ	0xFF4
  4626                           prodl	equ	0xFF3
  4627                           intcon	equ	0xFF2
  4628                           postinc0	equ	0xFEE
  4629                           wreg	equ	0xFE8
  4630                           indf2	equ	0xFDF
  4631                           postinc2	equ	0xFDE
  4632                           postdec2	equ	0xFDD
  4633                           plusw2	equ	0xFDB
  4634                           fsr2h	equ	0xFDA
  4635                           fsr2l	equ	0xFD9
  4636                           status	equ	0xFD8
  4637                           
  4638 ;; *************** function _Send_put *****************
  4639 ;; Defined at:
  4640 ;;		line 130 in file "UART.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;  _data           1    wreg     unsigned char 
  4643 ;; Auto vars:     Size  Location     Type
  4644 ;;  _data           1   37[COMRAM] unsigned char 
  4645 ;; Return value:  Size  Location     Type
  4646 ;;                  1    wreg      void 
  4647 ;; Registers used:
  4648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4649 ;; Tracked objects:
  4650 ;;		On entry : 0/0
  4651 ;;		On exit  : 0/0
  4652 ;;		Unchanged: 0/0
  4653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4654 ;;      Params:         0       0       0       0       0       0       0
  4655 ;;      Locals:         1       0       0       0       0       0       0
  4656 ;;      Temps:          0       0       0       0       0       0       0
  4657 ;;      Totals:         1       0       0       0       0       0       0
  4658 ;;Total ram usage:        1 bytes
  4659 ;; Hardware stack levels used:    1
  4660 ;; Hardware stack levels required when called:    6
  4661 ;; This function calls:
  4662 ;;		_UART_buff_get
  4663 ;;		_UART_buff_put
  4664 ;; This function is called by:
  4665 ;;		_SYSTEM_Initialize
  4666 ;;		_putch
  4667 ;;		_sendData
  4668 ;;		_receiveData
  4669 ;; This function uses a non-reentrant model
  4670 ;;
  4671                           
  4672                           	psect	text13
  4673  002D86                     __ptext13:
  4674                           	opt stack 0
  4675  002D86                     _Send_put:
  4676                           	opt stack 21
  4677                           
  4678                           ;incstack = 0
  4679                           ;Send_put@_data stored from wreg
  4680  002D86  6E26               	movwf	Send_put@_data,c
  4681                           
  4682                           ;UART.c: 131: UART_buff_put(&output_buffer, _data);
  4683  002D88  0E00               	movlw	low _output_buffer
  4684  002D8A  6E21               	movwf	UART_buff_put@_this,c
  4685  002D8C  0E05               	movlw	high _output_buffer
  4686  002D8E  6E22               	movwf	UART_buff_put@_this+1,c
  4687  002D90  C026  F023         	movff	Send_put@_data,UART_buff_put@c
  4688  002D94  EC01  F00D         	call	_UART_buff_put
  4689                           
  4690                           ;UART.c: 132: if (Transmit_stall == 1) {
  4691  002D98  0444               	decf	_Transmit_stall,w,c
  4692  002D9A  A4D8               	btfss	status,2,c
  4693  002D9C  0012               	return	
  4694                           
  4695                           ;UART.c: 133: Transmit_stall = 0;
  4696  002D9E  0E00               	movlw	0
  4697  002DA0  6E44               	movwf	_Transmit_stall,c
  4698                           
  4699                           ;UART.c: 134: TXREG1 = UART_buff_get(&output_buffer);
  4700  002DA2  0E00               	movlw	low _output_buffer
  4701  002DA4  6E21               	movwf	UART_buff_get@_this,c
  4702  002DA6  0E05               	movlw	high _output_buffer
  4703  002DA8  6E22               	movwf	UART_buff_get@_this+1,c
  4704  002DAA  EC13  F013         	call	_UART_buff_get	;wreg free
  4705  002DAE  6EAD               	movwf	4013,c	;volatile
  4706                           
  4707                           ;UART.c: 135: PIE1bits.TX1IE = 1;
  4708  002DB0  889D               	bsf	3997,4,c	;volatile
  4709  002DB2  0012               	return	
  4710  002DB4                     __end_of_Send_put:
  4711                           	opt stack 0
  4712                           tosu	equ	0xFFF
  4713                           tosh	equ	0xFFE
  4714                           tosl	equ	0xFFD
  4715                           pclath	equ	0xFFA
  4716                           tblptru	equ	0xFF8
  4717                           tblptrh	equ	0xFF7
  4718                           tblptrl	equ	0xFF6
  4719                           tablat	equ	0xFF5
  4720                           prodh	equ	0xFF4
  4721                           prodl	equ	0xFF3
  4722                           intcon	equ	0xFF2
  4723                           postinc0	equ	0xFEE
  4724                           wreg	equ	0xFE8
  4725                           indf2	equ	0xFDF
  4726                           postinc2	equ	0xFDE
  4727                           postdec2	equ	0xFDD
  4728                           plusw2	equ	0xFDB
  4729                           fsr2h	equ	0xFDA
  4730                           fsr2l	equ	0xFD9
  4731                           status	equ	0xFD8
  4732                           
  4733 ;; *************** function _UART_buff_put *****************
  4734 ;; Defined at:
  4735 ;;		line 68 in file "UART.c"
  4736 ;; Parameters:    Size  Location     Type
  4737 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  4738 ;;		 -> output_buffer(206), input_buffer(206), 
  4739 ;;  c               1   34[COMRAM] const unsigned char 
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;		None
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  1    wreg      void 
  4744 ;; Registers used:
  4745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4751 ;;      Params:         3       0       0       0       0       0       0
  4752 ;;      Locals:         0       0       0       0       0       0       0
  4753 ;;      Temps:          2       0       0       0       0       0       0
  4754 ;;      Totals:         5       0       0       0       0       0       0
  4755 ;;Total ram usage:        5 bytes
  4756 ;; Hardware stack levels used:    1
  4757 ;; Hardware stack levels required when called:    5
  4758 ;; This function calls:
  4759 ;;		_UART_buff_modulo_inc
  4760 ;; This function is called by:
  4761 ;;		_Send_put
  4762 ;; This function uses a non-reentrant model
  4763 ;;
  4764                           
  4765                           	psect	text14
  4766  001A02                     __ptext14:
  4767                           	opt stack 0
  4768  001A02                     _UART_buff_put:
  4769                           	opt stack 21
  4770                           
  4771                           ;UART.c: 69: if (_this->count < 200) {
  4772                           
  4773                           ;incstack = 0
  4774  001A02  EE20 F0CC          	lfsr	2,204
  4775  001A06  5021               	movf	UART_buff_put@_this,w,c
  4776  001A08  26D9               	addwf	fsr2l,f,c
  4777  001A0A  5022               	movf	UART_buff_put@_this+1,w,c
  4778  001A0C  22DA               	addwfc	fsr2h,f,c
  4779  001A0E  0E01               	movlw	1
  4780  001A10  BEDB               	btfsc	plusw2,7,c
  4781  001A12  D007               	goto	l5990
  4782  001A14  0E01               	movlw	1
  4783  001A16  50DB               	movf	plusw2,w,c
  4784  001A18  E13A               	bnz	l5996
  4785  001A1A  0EC8               	movlw	200
  4786  001A1C  5CDE               	subwf	postinc2,w,c
  4787  001A1E  B0D8               	btfsc	status,0,c
  4788  001A20  D036               	goto	l5996
  4789  001A22                     l5990:
  4790                           
  4791                           ;UART.c: 70: _this->buf[_this->head] = c;
  4792  001A22  EE20 F0C8          	lfsr	2,200
  4793  001A26  5021               	movf	UART_buff_put@_this,w,c
  4794  001A28  26D9               	addwf	fsr2l,f,c
  4795  001A2A  5022               	movf	UART_buff_put@_this+1,w,c
  4796  001A2C  22DA               	addwfc	fsr2h,f,c
  4797  001A2E  CFDE F024          	movff	postinc2,??_UART_buff_put
  4798  001A32  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  4799  001A36  5024               	movf	??_UART_buff_put,w,c
  4800  001A38  2421               	addwf	UART_buff_put@_this,w,c
  4801  001A3A  6ED9               	movwf	fsr2l,c
  4802  001A3C  5025               	movf	??_UART_buff_put+1,w,c
  4803  001A3E  2022               	addwfc	UART_buff_put@_this+1,w,c
  4804  001A40  6EDA               	movwf	fsr2h,c
  4805  001A42  C023  FFDF         	movff	UART_buff_put@c,indf2
  4806                           
  4807                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
  4808  001A46  EE20 F0C8          	lfsr	2,200
  4809  001A4A  5021               	movf	UART_buff_put@_this,w,c
  4810  001A4C  26D9               	addwf	fsr2l,f,c
  4811  001A4E  5022               	movf	UART_buff_put@_this+1,w,c
  4812  001A50  22DA               	addwfc	fsr2h,f,c
  4813  001A52  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  4814  001A56  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  4815  001A5A  0E00               	movlw	0
  4816  001A5C  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  4817  001A5E  0EC8               	movlw	200
  4818  001A60  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  4819  001A62  EC05  F017         	call	_UART_buff_modulo_inc	;wreg free
  4820  001A66  EE20 F0C8          	lfsr	2,200
  4821  001A6A  5021               	movf	UART_buff_put@_this,w,c
  4822  001A6C  26D9               	addwf	fsr2l,f,c
  4823  001A6E  5022               	movf	UART_buff_put@_this+1,w,c
  4824  001A70  22DA               	addwfc	fsr2h,f,c
  4825  001A72  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4826  001A76  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4827                           
  4828                           ;UART.c: 72: ++_this->count;
  4829  001A7A  EE20 F0CC          	lfsr	2,204
  4830  001A7E  5021               	movf	UART_buff_put@_this,w,c
  4831  001A80  26D9               	addwf	fsr2l,f,c
  4832  001A82  5022               	movf	UART_buff_put@_this+1,w,c
  4833  001A84  22DA               	addwfc	fsr2h,f,c
  4834  001A86  2ADE               	incf	postinc2,f,c
  4835  001A88  0E00               	movlw	0
  4836  001A8A  22DD               	addwfc	postdec2,f,c
  4837                           
  4838                           ;UART.c: 73: } else {
  4839  001A8C  0012               	return	
  4840  001A8E                     l5996:
  4841                           
  4842                           ;UART.c: 74: _this->buf[_this->head] = c;
  4843  001A8E  EE20 F0C8          	lfsr	2,200
  4844  001A92  5021               	movf	UART_buff_put@_this,w,c
  4845  001A94  26D9               	addwf	fsr2l,f,c
  4846  001A96  5022               	movf	UART_buff_put@_this+1,w,c
  4847  001A98  22DA               	addwfc	fsr2h,f,c
  4848  001A9A  CFDE F024          	movff	postinc2,??_UART_buff_put
  4849  001A9E  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  4850  001AA2  5024               	movf	??_UART_buff_put,w,c
  4851  001AA4  2421               	addwf	UART_buff_put@_this,w,c
  4852  001AA6  6ED9               	movwf	fsr2l,c
  4853  001AA8  5025               	movf	??_UART_buff_put+1,w,c
  4854  001AAA  2022               	addwfc	UART_buff_put@_this+1,w,c
  4855  001AAC  6EDA               	movwf	fsr2h,c
  4856  001AAE  C023  FFDF         	movff	UART_buff_put@c,indf2
  4857                           
  4858                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
  4859  001AB2  EE20 F0C8          	lfsr	2,200
  4860  001AB6  5021               	movf	UART_buff_put@_this,w,c
  4861  001AB8  26D9               	addwf	fsr2l,f,c
  4862  001ABA  5022               	movf	UART_buff_put@_this+1,w,c
  4863  001ABC  22DA               	addwfc	fsr2h,f,c
  4864  001ABE  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  4865  001AC2  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  4866  001AC6  0E00               	movlw	0
  4867  001AC8  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  4868  001ACA  0EC8               	movlw	200
  4869  001ACC  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  4870  001ACE  EC05  F017         	call	_UART_buff_modulo_inc	;wreg free
  4871  001AD2  EE20 F0C8          	lfsr	2,200
  4872  001AD6  5021               	movf	UART_buff_put@_this,w,c
  4873  001AD8  26D9               	addwf	fsr2l,f,c
  4874  001ADA  5022               	movf	UART_buff_put@_this+1,w,c
  4875  001ADC  22DA               	addwfc	fsr2h,f,c
  4876  001ADE  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4877  001AE2  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4878                           
  4879                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  4880  001AE6  EE20 F0CA          	lfsr	2,202
  4881  001AEA  5021               	movf	UART_buff_put@_this,w,c
  4882  001AEC  26D9               	addwf	fsr2l,f,c
  4883  001AEE  5022               	movf	UART_buff_put@_this+1,w,c
  4884  001AF0  22DA               	addwfc	fsr2h,f,c
  4885  001AF2  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  4886  001AF6  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  4887  001AFA  0E00               	movlw	0
  4888  001AFC  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  4889  001AFE  0EC8               	movlw	200
  4890  001B00  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  4891  001B02  EC05  F017         	call	_UART_buff_modulo_inc	;wreg free
  4892  001B06  EE20 F0CA          	lfsr	2,202
  4893  001B0A  5021               	movf	UART_buff_put@_this,w,c
  4894  001B0C  26D9               	addwf	fsr2l,f,c
  4895  001B0E  5022               	movf	UART_buff_put@_this+1,w,c
  4896  001B10  22DA               	addwfc	fsr2h,f,c
  4897  001B12  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4898  001B16  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4899  001B1A  0012               	return	
  4900  001B1C                     __end_of_UART_buff_put:
  4901                           	opt stack 0
  4902                           tosu	equ	0xFFF
  4903                           tosh	equ	0xFFE
  4904                           tosl	equ	0xFFD
  4905                           pclath	equ	0xFFA
  4906                           tblptru	equ	0xFF8
  4907                           tblptrh	equ	0xFF7
  4908                           tblptrl	equ	0xFF6
  4909                           tablat	equ	0xFF5
  4910                           prodh	equ	0xFF4
  4911                           prodl	equ	0xFF3
  4912                           intcon	equ	0xFF2
  4913                           postinc0	equ	0xFEE
  4914                           wreg	equ	0xFE8
  4915                           indf2	equ	0xFDF
  4916                           postinc2	equ	0xFDE
  4917                           postdec2	equ	0xFDD
  4918                           plusw2	equ	0xFDB
  4919                           fsr2h	equ	0xFDA
  4920                           fsr2l	equ	0xFD9
  4921                           status	equ	0xFD8
  4922                           
  4923 ;; *************** function _Receive_peek *****************
  4924 ;; Defined at:
  4925 ;;		line 118 in file "UART.c"
  4926 ;; Parameters:    Size  Location     Type
  4927 ;;		None
  4928 ;; Auto vars:     Size  Location     Type
  4929 ;;		None
  4930 ;; Return value:  Size  Location     Type
  4931 ;;                  1    wreg      unsigned char 
  4932 ;; Registers used:
  4933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4934 ;; Tracked objects:
  4935 ;;		On entry : 0/0
  4936 ;;		On exit  : 0/0
  4937 ;;		Unchanged: 0/0
  4938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4939 ;;      Params:         0       0       0       0       0       0       0
  4940 ;;      Locals:         0       0       0       0       0       0       0
  4941 ;;      Temps:          0       0       0       0       0       0       0
  4942 ;;      Totals:         0       0       0       0       0       0       0
  4943 ;;Total ram usage:        0 bytes
  4944 ;; Hardware stack levels used:    1
  4945 ;; Hardware stack levels required when called:    5
  4946 ;; This function calls:
  4947 ;;		_UART_buff_peek
  4948 ;; This function is called by:
  4949 ;;		_SYSTEM_Initialize
  4950 ;;		_receiveData
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           	psect	text15
  4955  003000                     __ptext15:
  4956                           	opt stack 0
  4957  003000                     _Receive_peek:
  4958                           	opt stack 23
  4959                           
  4960                           ;UART.c: 119: return UART_buff_peek(&input_buffer);
  4961                           
  4962                           ;incstack = 0
  4963  003000  0E00               	movlw	low _input_buffer
  4964  003002  6E1B               	movwf	UART_buff_peek@_this,c
  4965  003004  0E04               	movlw	high _input_buffer
  4966  003006  6E1C               	movwf	UART_buff_peek@_this+1,c
  4967  003008  EC43  F017         	call	_UART_buff_peek	;wreg free
  4968  00300C  0012               	return	
  4969  00300E                     __end_of_Receive_peek:
  4970                           	opt stack 0
  4971                           tosu	equ	0xFFF
  4972                           tosh	equ	0xFFE
  4973                           tosl	equ	0xFFD
  4974                           pclath	equ	0xFFA
  4975                           tblptru	equ	0xFF8
  4976                           tblptrh	equ	0xFF7
  4977                           tblptrl	equ	0xFF6
  4978                           tablat	equ	0xFF5
  4979                           prodh	equ	0xFF4
  4980                           prodl	equ	0xFF3
  4981                           intcon	equ	0xFF2
  4982                           postinc0	equ	0xFEE
  4983                           wreg	equ	0xFE8
  4984                           indf2	equ	0xFDF
  4985                           postinc2	equ	0xFDE
  4986                           postdec2	equ	0xFDD
  4987                           plusw2	equ	0xFDB
  4988                           fsr2h	equ	0xFDA
  4989                           fsr2l	equ	0xFD9
  4990                           status	equ	0xFD8
  4991                           
  4992 ;; *************** function _UART_buff_peek *****************
  4993 ;; Defined at:
  4994 ;;		line 114 in file "UART.c"
  4995 ;; Parameters:    Size  Location     Type
  4996 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  4997 ;;		 -> input_buffer(206), 
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;		None
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  1    wreg      unsigned char 
  5002 ;; Registers used:
  5003 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5009 ;;      Params:         2       0       0       0       0       0       0
  5010 ;;      Locals:         0       0       0       0       0       0       0
  5011 ;;      Temps:          2       0       0       0       0       0       0
  5012 ;;      Totals:         4       0       0       0       0       0       0
  5013 ;;Total ram usage:        4 bytes
  5014 ;; Hardware stack levels used:    1
  5015 ;; Hardware stack levels required when called:    4
  5016 ;; This function calls:
  5017 ;;		Nothing
  5018 ;; This function is called by:
  5019 ;;		_Receive_peek
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           	psect	text16
  5024  002E86                     __ptext16:
  5025                           	opt stack 0
  5026  002E86                     _UART_buff_peek:
  5027                           	opt stack 23
  5028                           
  5029                           ;UART.c: 115: return _this->buf[_this->tail];
  5030                           
  5031                           ;incstack = 0
  5032  002E86  EE20 F0CA          	lfsr	2,202
  5033  002E8A  501B               	movf	UART_buff_peek@_this,w,c
  5034  002E8C  26D9               	addwf	fsr2l,f,c
  5035  002E8E  501C               	movf	UART_buff_peek@_this+1,w,c
  5036  002E90  22DA               	addwfc	fsr2h,f,c
  5037  002E92  CFDE F01D          	movff	postinc2,??_UART_buff_peek
  5038  002E96  CFDD F01E          	movff	postdec2,??_UART_buff_peek+1
  5039  002E9A  501D               	movf	??_UART_buff_peek,w,c
  5040  002E9C  241B               	addwf	UART_buff_peek@_this,w,c
  5041  002E9E  6ED9               	movwf	fsr2l,c
  5042  002EA0  501E               	movf	??_UART_buff_peek+1,w,c
  5043  002EA2  201C               	addwfc	UART_buff_peek@_this+1,w,c
  5044  002EA4  6EDA               	movwf	fsr2h,c
  5045  002EA6  50DF               	movf	indf2,w,c
  5046  002EA8  0012               	return	
  5047  002EAA                     __end_of_UART_buff_peek:
  5048                           	opt stack 0
  5049                           tosu	equ	0xFFF
  5050                           tosh	equ	0xFFE
  5051                           tosl	equ	0xFFD
  5052                           pclath	equ	0xFFA
  5053                           tblptru	equ	0xFF8
  5054                           tblptrh	equ	0xFF7
  5055                           tblptrl	equ	0xFF6
  5056                           tablat	equ	0xFF5
  5057                           prodh	equ	0xFF4
  5058                           prodl	equ	0xFF3
  5059                           intcon	equ	0xFF2
  5060                           postinc0	equ	0xFEE
  5061                           wreg	equ	0xFE8
  5062                           indf2	equ	0xFDF
  5063                           postinc2	equ	0xFDE
  5064                           postdec2	equ	0xFDD
  5065                           plusw2	equ	0xFDB
  5066                           fsr2h	equ	0xFDA
  5067                           fsr2l	equ	0xFD9
  5068                           status	equ	0xFD8
  5069                           
  5070 ;; *************** function _CRCcheck *****************
  5071 ;; Defined at:
  5072 ;;		line 373 in file "FastTransfer.c"
  5073 ;; Parameters:    Size  Location     Type
  5074 ;;		None
  5075 ;; Auto vars:     Size  Location     Type
  5076 ;;  rt              2    5[BANK0 ] int 
  5077 ;;  arrayHolder     3    2[BANK0 ] unsigned char [3]
  5078 ;;  calculatedCR    1    1[BANK0 ] unsigned char 
  5079 ;;  SentCRC         1    0[BANK0 ] unsigned char 
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  1    wreg      void 
  5082 ;; Registers used:
  5083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5089 ;;      Params:         0       0       0       0       0       0       0
  5090 ;;      Locals:         0       7       0       0       0       0       0
  5091 ;;      Temps:          0       0       0       0       0       0       0
  5092 ;;      Totals:         0       7       0       0       0       0       0
  5093 ;;Total ram usage:        7 bytes
  5094 ;; Hardware stack levels used:    1
  5095 ;; Hardware stack levels required when called:    7
  5096 ;; This function calls:
  5097 ;;		Absolute function
  5098 ;;		_CRC8
  5099 ;;		_Receive_available
  5100 ;;		_Receive_get
  5101 ;;		_crcBufS_get
  5102 ;;		_crcBufS_status_put
  5103 ;; This function is called by:
  5104 ;;		_receiveData
  5105 ;; This function uses a non-reentrant model
  5106 ;;
  5107                           
  5108                           	psect	text17
  5109  0013DA                     __ptext17:
  5110                           	opt stack 0
  5111  0013DA                     _CRCcheck:
  5112                           	opt stack 21
  5113  0013DA                     l6426:
  5114  0013DA  D801               	call	u6728
  5115  0013DC  D00A               	goto	u6729
  5116  0013DE                     u6728:
  5117  0013DE  0005               	push	
  5118  0013E0  6EFA               	movwf	pclath,c
  5119  0013E2  502E               	movf	_serial_available,w,c
  5120  0013E4  6EFD               	movwf	tosl,c
  5121  0013E6  502F               	movf	_serial_available+1,w,c
  5122  0013E8  6EFE               	movwf	tosh,c
  5123  0013EA  50F8               	movf	tblptru,w,c
  5124  0013EC  6EFF               	movwf	tosu,c
  5125  0013EE  50FA               	movf	pclath,w,c
  5126  0013F0  0012               	return		;indir
  5127  0013F2                     u6729:
  5128  0013F2  BE1E               	btfsc	?_Receive_available+1,7,c
  5129  0013F4  D7F2               	goto	l6426
  5130  0013F6  501E               	movf	?_Receive_available+1,w,c
  5131  0013F8  E104               	bnz	l6428
  5132  0013FA  0E04               	movlw	4
  5133  0013FC  5C1D               	subwf	?_Receive_available,w,c
  5134  0013FE  A0D8               	btfss	status,0,c
  5135  001400  D7EC               	goto	l6426
  5136  001402                     l6428:
  5137                           
  5138                           ;FastTransfer.c: 377: unsigned char arrayHolder[3];
  5139                           ;FastTransfer.c: 378: arrayHolder[0] = serial_read();
  5140  001402  D801               	call	u6748
  5141  001404  D00A               	goto	u6749
  5142  001406                     u6748:
  5143  001406  0005               	push	
  5144  001408  6EFA               	movwf	pclath,c
  5145  00140A  5030               	movf	_serial_read,w,c
  5146  00140C  6EFD               	movwf	tosl,c
  5147  00140E  5031               	movf	_serial_read+1,w,c
  5148  001410  6EFE               	movwf	tosh,c
  5149  001412  50F8               	movf	tblptru,w,c
  5150  001414  6EFF               	movwf	tosu,c
  5151  001416  50FA               	movf	pclath,w,c
  5152  001418  0012               	return		;indir
  5153  00141A                     u6749:
  5154  00141A  0100               	movlb	0	; () banked
  5155  00141C  6FF6               	movwf	CRCcheck@arrayHolder& (0+255),b
  5156                           
  5157                           ;FastTransfer.c: 379: arrayHolder[1] = serial_read();
  5158  00141E  D801               	call	u6758
  5159  001420  D00A               	goto	u6759
  5160  001422                     u6758:
  5161  001422  0005               	push	
  5162  001424  6EFA               	movwf	pclath,c
  5163  001426  5030               	movf	_serial_read,w,c
  5164  001428  6EFD               	movwf	tosl,c
  5165  00142A  5031               	movf	_serial_read+1,w,c
  5166  00142C  6EFE               	movwf	tosh,c
  5167  00142E  50F8               	movf	tblptru,w,c
  5168  001430  6EFF               	movwf	tosu,c
  5169  001432  50FA               	movf	pclath,w,c
  5170  001434  0012               	return		;indir
  5171  001436                     u6759:
  5172  001436  0100               	movlb	0	; () banked
  5173  001438  6FF7               	movwf	(CRCcheck@arrayHolder+1)& (0+255),b
  5174                           
  5175                           ;FastTransfer.c: 380: arrayHolder[2] = serial_read();
  5176  00143A  D801               	call	u6768
  5177  00143C  D00A               	goto	u6769
  5178  00143E                     u6768:
  5179  00143E  0005               	push	
  5180  001440  6EFA               	movwf	pclath,c
  5181  001442  5030               	movf	_serial_read,w,c
  5182  001444  6EFD               	movwf	tosl,c
  5183  001446  5031               	movf	_serial_read+1,w,c
  5184  001448  6EFE               	movwf	tosh,c
  5185  00144A  50F8               	movf	tblptru,w,c
  5186  00144C  6EFF               	movwf	tosu,c
  5187  00144E  50FA               	movf	pclath,w,c
  5188  001450  0012               	return		;indir
  5189  001452                     u6769:
  5190  001452  0100               	movlb	0	; () banked
  5191  001454  6FF8               	movwf	(CRCcheck@arrayHolder+2)& (0+255),b
  5192                           
  5193                           ;FastTransfer.c: 381: unsigned char SentCRC = serial_read();
  5194  001456  D801               	call	u6778
  5195  001458  D00A               	goto	u6779
  5196  00145A                     u6778:
  5197  00145A  0005               	push	
  5198  00145C  6EFA               	movwf	pclath,c
  5199  00145E  5030               	movf	_serial_read,w,c
  5200  001460  6EFD               	movwf	tosl,c
  5201  001462  5031               	movf	_serial_read+1,w,c
  5202  001464  6EFE               	movwf	tosh,c
  5203  001466  50F8               	movf	tblptru,w,c
  5204  001468  6EFF               	movwf	tosu,c
  5205  00146A  50FA               	movf	pclath,w,c
  5206  00146C  0012               	return		;indir
  5207  00146E                     u6779:
  5208  00146E  0100               	movlb	0	; () banked
  5209  001470  6FF4               	movwf	CRCcheck@SentCRC& (0+255),b
  5210                           
  5211                           ; BSR set to: 0
  5212                           ;FastTransfer.c: 382: unsigned char calculatedCRC = CRC8(arrayHolder, 3);
  5213  001472  0EF6               	movlw	low CRCcheck@arrayHolder
  5214  001474  6E1B               	movwf	CRC8@data,c
  5215  001476  0E00               	movlw	high CRCcheck@arrayHolder
  5216  001478  6E1C               	movwf	CRC8@data+1,c
  5217  00147A  0E03               	movlw	3
  5218  00147C  6E1D               	movwf	CRC8@len,c
  5219  00147E  ECAD  F015         	call	_CRC8	;wreg free
  5220  001482  0100               	movlb	0	; () banked
  5221  001484  6FF5               	movwf	CRCcheck@calculatedCRC& (0+255),b
  5222                           
  5223                           ; BSR set to: 0
  5224                           ;FastTransfer.c: 385: if (SentCRC == calculatedCRC) {
  5225  001486  0100               	movlb	0	; () banked
  5226  001488  51F5               	movf	CRCcheck@calculatedCRC& (0+255),w,b
  5227  00148A  0100               	movlb	0	; () banked
  5228  00148C  19F4               	xorwf	CRCcheck@SentCRC& (0+255),w,b
  5229  00148E  A4D8               	btfss	status,2,c
  5230  001490  D04E               	goto	l6458
  5231                           
  5232                           ; BSR set to: 0
  5233                           ;FastTransfer.c: 387: int rt;
  5234                           ;FastTransfer.c: 388: for (rt = 0; rt < 5; rt++) {
  5235  001492  0E00               	movlw	0
  5236  001494  0100               	movlb	0	; () banked
  5237  001496  6FFA               	movwf	(CRCcheck@rt+1)& (0+255),b
  5238  001498  0E00               	movlw	0
  5239  00149A  6FF9               	movwf	CRCcheck@rt& (0+255),b
  5240  00149C                     l6436:
  5241                           
  5242                           ; BSR set to: 0
  5243  00149C  0100               	movlb	0	; () banked
  5244  00149E  BFFA               	btfsc	(CRCcheck@rt+1)& (0+255),7,b
  5245  0014A0  D008               	goto	l6440
  5246  0014A2  0100               	movlb	0	; () banked
  5247  0014A4  51FA               	movf	(CRCcheck@rt+1)& (0+255),w,b
  5248  0014A6  E147               	bnz	l1117
  5249  0014A8  0E05               	movlw	5
  5250  0014AA  0100               	movlb	0	; () banked
  5251  0014AC  5DF9               	subwf	CRCcheck@rt& (0+255),w,b
  5252  0014AE  B0D8               	btfsc	status,0,c
  5253  0014B0  0012               	return	
  5254  0014B2                     l6440:
  5255                           
  5256                           ; BSR set to: 0
  5257                           ;FastTransfer.c: 389: if (returnAddress == crcBufS_get(&crc_buffer, rt, 0)) {
  5258  0014B2  0E28               	movlw	low _crc_buffer
  5259  0014B4  6E1B               	movwf	crcBufS_get@_this,c
  5260  0014B6  0E01               	movlw	high _crc_buffer
  5261  0014B8  6E1C               	movwf	crcBufS_get@_this+1,c
  5262  0014BA  C0F9  F01D         	movff	CRCcheck@rt,crcBufS_get@time
  5263  0014BE  0E00               	movlw	0
  5264  0014C0  6E1E               	movwf	crcBufS_get@space,c
  5265  0014C2  EC20  F00F         	call	_crcBufS_get	;wreg free
  5266  0014C6  183C               	xorwf	_returnAddress,w,c
  5267  0014C8  A4D8               	btfss	status,2,c
  5268  0014CA  D02D               	goto	l6454
  5269                           
  5270                           ;FastTransfer.c: 390: if (arrayHolder[2] == crcBufS_get(&crc_buffer, rt, 1)) {
  5271  0014CC  0E28               	movlw	low _crc_buffer
  5272  0014CE  6E1B               	movwf	crcBufS_get@_this,c
  5273  0014D0  0E01               	movlw	high _crc_buffer
  5274  0014D2  6E1C               	movwf	crcBufS_get@_this+1,c
  5275  0014D4  C0F9  F01D         	movff	CRCcheck@rt,crcBufS_get@time
  5276  0014D8  0E01               	movlw	1
  5277  0014DA  6E1E               	movwf	crcBufS_get@space,c
  5278  0014DC  EC20  F00F         	call	_crcBufS_get	;wreg free
  5279  0014E0  0100               	movlb	0	; () banked
  5280  0014E2  19F8               	xorwf	(CRCcheck@arrayHolder+2)& (0+255),w,b
  5281  0014E4  A4D8               	btfss	status,2,c
  5282  0014E6  D01F               	goto	l6454
  5283                           
  5284                           ; BSR set to: 0
  5285                           ;FastTransfer.c: 391: if (arrayHolder[1] == 1) {
  5286  0014E8  0100               	movlb	0	; () banked
  5287  0014EA  05F7               	decf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  5288  0014EC  A4D8               	btfss	status,2,c
  5289  0014EE  D00B               	goto	l6450
  5290                           
  5291                           ; BSR set to: 0
  5292                           ;FastTransfer.c: 392: crcBufS_status_put(&crc_buffer, rt, 1);
  5293  0014F0  0E28               	movlw	low _crc_buffer
  5294  0014F2  6E1B               	movwf	crcBufS_status_put@_this,c
  5295  0014F4  0E01               	movlw	high _crc_buffer
  5296  0014F6  6E1C               	movwf	crcBufS_status_put@_this+1,c
  5297  0014F8  C0F9  F01D         	movff	CRCcheck@rt,crcBufS_status_put@time
  5298  0014FC  0E01               	movlw	1
  5299  0014FE  6E1E               	movwf	crcBufS_status_put@status,c
  5300  001500  ECFD  F00F         	call	_crcBufS_status_put	;wreg free
  5301                           
  5302                           ;FastTransfer.c: 393: break;
  5303  001504  0012               	return	
  5304  001506                     l6450:
  5305  001506  0E02               	movlw	2
  5306  001508  0100               	movlb	0	; () banked
  5307  00150A  19F7               	xorwf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  5308  00150C  A4D8               	btfss	status,2,c
  5309  00150E  D00B               	goto	l6454
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;FastTransfer.c: 395: crcBufS_status_put(&crc_buffer, rt, 2);
  5313  001510  0E28               	movlw	low _crc_buffer
  5314  001512  6E1B               	movwf	crcBufS_status_put@_this,c
  5315  001514  0E01               	movlw	high _crc_buffer
  5316  001516  6E1C               	movwf	crcBufS_status_put@_this+1,c
  5317  001518  C0F9  F01D         	movff	CRCcheck@rt,crcBufS_status_put@time
  5318  00151C  0E02               	movlw	2
  5319  00151E  6E1E               	movwf	crcBufS_status_put@status,c
  5320  001520  ECFD  F00F         	call	_crcBufS_status_put	;wreg free
  5321                           
  5322                           ;FastTransfer.c: 396: break;
  5323  001524  0012               	return	
  5324  001526                     l6454:
  5325  001526  0100               	movlb	0	; () banked
  5326  001528  4BF9               	infsnz	CRCcheck@rt& (0+255),f,b
  5327  00152A  2BFA               	incf	(CRCcheck@rt+1)& (0+255),f,b
  5328  00152C  D7B7               	goto	l6436
  5329  00152E                     l6458:
  5330                           
  5331                           ; BSR set to: 0
  5332                           ;FastTransfer.c: 402: crcErrorCounter++;
  5333  00152E  0100               	movlb	0	; () banked
  5334  001530  4BC9               	infsnz	_crcErrorCounter& (0+255),f,b
  5335  001532  2BCA               	incf	(_crcErrorCounter+1)& (0+255),f,b
  5336  001534  0012               	return	
  5337  001536                     l1117:
  5338  001536  0012               	return		;funcret
  5339  001538                     __end_of_CRCcheck:
  5340                           	opt stack 0
  5341                           tosu	equ	0xFFF
  5342                           tosh	equ	0xFFE
  5343                           tosl	equ	0xFFD
  5344                           pclath	equ	0xFFA
  5345                           tblptru	equ	0xFF8
  5346                           tblptrh	equ	0xFF7
  5347                           tblptrl	equ	0xFF6
  5348                           tablat	equ	0xFF5
  5349                           prodh	equ	0xFF4
  5350                           prodl	equ	0xFF3
  5351                           intcon	equ	0xFF2
  5352                           postinc0	equ	0xFEE
  5353                           wreg	equ	0xFE8
  5354                           indf2	equ	0xFDF
  5355                           postinc2	equ	0xFDE
  5356                           postdec2	equ	0xFDD
  5357                           plusw2	equ	0xFDB
  5358                           fsr2h	equ	0xFDA
  5359                           fsr2l	equ	0xFD9
  5360                           status	equ	0xFD8
  5361                           
  5362 ;; *************** function _crcBufS_status_put *****************
  5363 ;; Defined at:
  5364 ;;		line 336 in file "FastTransfer.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  5367 ;;		 -> crc_buffer(17), 
  5368 ;;  time            1   28[COMRAM] unsigned char 
  5369 ;;  status          1   29[COMRAM] unsigned char 
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;  wantedTime      2   34[COMRAM] int 
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  1    wreg      void 
  5374 ;; Registers used:
  5375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5381 ;;      Params:         4       0       0       0       0       0       0
  5382 ;;      Locals:         2       0       0       0       0       0       0
  5383 ;;      Temps:          4       0       0       0       0       0       0
  5384 ;;      Totals:        10       0       0       0       0       0       0
  5385 ;;Total ram usage:       10 bytes
  5386 ;; Hardware stack levels used:    1
  5387 ;; Hardware stack levels required when called:    4
  5388 ;; This function calls:
  5389 ;;		Nothing
  5390 ;; This function is called by:
  5391 ;;		_CRCcheck
  5392 ;; This function uses a non-reentrant model
  5393 ;;
  5394                           
  5395                           	psect	text18
  5396  001FFA                     __ptext18:
  5397                           	opt stack 0
  5398  001FFA                     _crcBufS_status_put:
  5399                           	opt stack 23
  5400                           
  5401                           ;FastTransfer.c: 337: if (time >= 5) {
  5402                           
  5403                           ;incstack = 0
  5404  001FFA  0E04               	movlw	4
  5405  001FFC  641D               	cpfsgt	crcBufS_status_put@time,c
  5406  001FFE  D002               	goto	l6192
  5407                           
  5408                           ;FastTransfer.c: 338: time = 5 - 1;
  5409  002000  0E04               	movlw	4
  5410  002002  6E1D               	movwf	crcBufS_status_put@time,c
  5411  002004                     l6192:
  5412                           
  5413                           ;FastTransfer.c: 339: }
  5414                           ;FastTransfer.c: 340: time = time + 1;
  5415  002004  281D               	incf	crcBufS_status_put@time,w,c
  5416  002006  6E1D               	movwf	crcBufS_status_put@time,c
  5417                           
  5418                           ;FastTransfer.c: 341: int wantedTime = time * 3;
  5419  002008  501D               	movf	crcBufS_status_put@time,w,c
  5420  00200A  0D03               	mullw	3
  5421  00200C  CFF3 F023          	movff	prodl,crcBufS_status_put@wantedTime
  5422  002010  CFF4 F024          	movff	prodh,crcBufS_status_put@wantedTime+1
  5423                           
  5424                           ;FastTransfer.c: 342: if (wantedTime > _this->head) {
  5425  002014  EE20 F00F          	lfsr	2,15
  5426  002018  501B               	movf	crcBufS_status_put@_this,w,c
  5427  00201A  26D9               	addwf	fsr2l,f,c
  5428  00201C  501C               	movf	crcBufS_status_put@_this+1,w,c
  5429  00201E  22DA               	addwfc	fsr2h,f,c
  5430  002020  5023               	movf	crcBufS_status_put@wantedTime,w,c
  5431  002022  5CDE               	subwf	postinc2,w,c
  5432  002024  50DE               	movf	postinc2,w,c
  5433  002026  0A80               	xorlw	128
  5434  002028  6E21               	movwf	(??_crcBufS_status_put+2)& (0+255),c
  5435  00202A  5024               	movf	crcBufS_status_put@wantedTime+1,w,c
  5436  00202C  0A80               	xorlw	128
  5437  00202E  5821               	subwfb	(??_crcBufS_status_put+2)& (0+255),w,c
  5438  002030  B0D8               	btfsc	status,0,c
  5439  002032  D02B               	goto	l6200
  5440                           
  5441                           ;FastTransfer.c: 343: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  5442  002034  EE20 F00F          	lfsr	2,15
  5443  002038  501B               	movf	crcBufS_status_put@_this,w,c
  5444  00203A  26D9               	addwf	fsr2l,f,c
  5445  00203C  501C               	movf	crcBufS_status_put@_this+1,w,c
  5446  00203E  22DA               	addwfc	fsr2h,f,c
  5447  002040  CFDE F01F          	movff	postinc2,??_crcBufS_status_put
  5448  002044  CFDD F020          	movff	postdec2,??_crcBufS_status_put+1
  5449  002048  1E1F               	comf	??_crcBufS_status_put,f,c
  5450  00204A  1E20               	comf	??_crcBufS_status_put+1,f,c
  5451  00204C  4A1F               	infsnz	??_crcBufS_status_put,f,c
  5452  00204E  2A20               	incf	??_crcBufS_status_put+1,f,c
  5453  002050  5023               	movf	crcBufS_status_put@wantedTime,w,c
  5454  002052  261F               	addwf	??_crcBufS_status_put,f,c
  5455  002054  5024               	movf	crcBufS_status_put@wantedTime+1,w,c
  5456  002056  2220               	addwfc	??_crcBufS_status_put+1,f,c
  5457  002058  1E1F               	comf	??_crcBufS_status_put,f,c
  5458  00205A  1E20               	comf	??_crcBufS_status_put+1,f,c
  5459  00205C  4A1F               	infsnz	??_crcBufS_status_put,f,c
  5460  00205E  2A20               	incf	??_crcBufS_status_put+1,f,c
  5461  002060  0E0F               	movlw	15
  5462  002062  241F               	addwf	??_crcBufS_status_put,w,c
  5463  002064  6E23               	movwf	crcBufS_status_put@wantedTime,c
  5464  002066  0E00               	movlw	0
  5465  002068  2020               	addwfc	??_crcBufS_status_put+1,w,c
  5466  00206A  6E24               	movwf	crcBufS_status_put@wantedTime+1,c
  5467                           
  5468                           ;FastTransfer.c: 344: _this->buf[(wantedTime + 2)] = status;
  5469  00206C  0E02               	movlw	2
  5470  00206E  2423               	addwf	crcBufS_status_put@wantedTime,w,c
  5471  002070  6E1F               	movwf	??_crcBufS_status_put& (0+255),c
  5472  002072  0E00               	movlw	0
  5473  002074  2024               	addwfc	crcBufS_status_put@wantedTime+1,w,c
  5474  002076  6E20               	movwf	(??_crcBufS_status_put+1)& (0+255),c
  5475  002078  501F               	movf	??_crcBufS_status_put,w,c
  5476  00207A  241B               	addwf	crcBufS_status_put@_this,w,c
  5477  00207C  6ED9               	movwf	fsr2l,c
  5478  00207E  5020               	movf	??_crcBufS_status_put+1,w,c
  5479  002080  201C               	addwfc	crcBufS_status_put@_this+1,w,c
  5480  002082  6EDA               	movwf	fsr2h,c
  5481  002084  C01E  FFDF         	movff	crcBufS_status_put@status,indf2
  5482                           
  5483                           ;FastTransfer.c: 345: } else {
  5484  002088  0012               	return	
  5485  00208A                     l6200:
  5486                           
  5487                           ;FastTransfer.c: 346: _this->buf[(_this->head - wantedTime) + 2] = status;
  5488  00208A  EE20 F00F          	lfsr	2,15
  5489  00208E  501B               	movf	crcBufS_status_put@_this,w,c
  5490  002090  26D9               	addwf	fsr2l,f,c
  5491  002092  501C               	movf	crcBufS_status_put@_this+1,w,c
  5492  002094  22DA               	addwfc	fsr2h,f,c
  5493  002096  CFDE F01F          	movff	postinc2,??_crcBufS_status_put
  5494  00209A  CFDD F020          	movff	postdec2,??_crcBufS_status_put+1
  5495  00209E  C023  F021         	movff	crcBufS_status_put@wantedTime,??_crcBufS_status_put+2
  5496  0020A2  C024  F022         	movff	crcBufS_status_put@wantedTime+1,??_crcBufS_status_put+3
  5497  0020A6  1E21               	comf	??_crcBufS_status_put+2,f,c
  5498  0020A8  1E22               	comf	??_crcBufS_status_put+3,f,c
  5499  0020AA  4A21               	infsnz	??_crcBufS_status_put+2,f,c
  5500  0020AC  2A22               	incf	??_crcBufS_status_put+3,f,c
  5501  0020AE  501F               	movf	??_crcBufS_status_put,w,c
  5502  0020B0  2621               	addwf	??_crcBufS_status_put+2,f,c
  5503  0020B2  5020               	movf	??_crcBufS_status_put+1,w,c
  5504  0020B4  2222               	addwfc	??_crcBufS_status_put+3,f,c
  5505  0020B6  0E02               	movlw	2
  5506  0020B8  2621               	addwf	??_crcBufS_status_put+2,f,c
  5507  0020BA  0E00               	movlw	0
  5508  0020BC  2222               	addwfc	??_crcBufS_status_put+3,f,c
  5509  0020BE  5021               	movf	??_crcBufS_status_put+2,w,c
  5510  0020C0  241B               	addwf	crcBufS_status_put@_this,w,c
  5511  0020C2  6ED9               	movwf	fsr2l,c
  5512  0020C4  5022               	movf	??_crcBufS_status_put+3,w,c
  5513  0020C6  201C               	addwfc	crcBufS_status_put@_this+1,w,c
  5514  0020C8  6EDA               	movwf	fsr2h,c
  5515  0020CA  C01E  FFDF         	movff	crcBufS_status_put@status,indf2
  5516  0020CE  0012               	return	
  5517  0020D0                     __end_of_crcBufS_status_put:
  5518                           	opt stack 0
  5519                           tosu	equ	0xFFF
  5520                           tosh	equ	0xFFE
  5521                           tosl	equ	0xFFD
  5522                           pclath	equ	0xFFA
  5523                           tblptru	equ	0xFF8
  5524                           tblptrh	equ	0xFF7
  5525                           tblptrl	equ	0xFF6
  5526                           tablat	equ	0xFF5
  5527                           prodh	equ	0xFF4
  5528                           prodl	equ	0xFF3
  5529                           intcon	equ	0xFF2
  5530                           postinc0	equ	0xFEE
  5531                           wreg	equ	0xFE8
  5532                           indf2	equ	0xFDF
  5533                           postinc2	equ	0xFDE
  5534                           postdec2	equ	0xFDD
  5535                           plusw2	equ	0xFDB
  5536                           fsr2h	equ	0xFDA
  5537                           fsr2l	equ	0xFD9
  5538                           status	equ	0xFD8
  5539                           
  5540 ;; *************** function _crcBufS_get *****************
  5541 ;; Defined at:
  5542 ;;		line 353 in file "FastTransfer.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  5545 ;;		 -> crc_buffer(17), 
  5546 ;;  time            1   28[COMRAM] unsigned char 
  5547 ;;  space           1   29[COMRAM] unsigned char 
  5548 ;; Auto vars:     Size  Location     Type
  5549 ;;  wantedTime      2   36[COMRAM] int 
  5550 ;; Return value:  Size  Location     Type
  5551 ;;                  1    wreg      unsigned char 
  5552 ;; Registers used:
  5553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5554 ;; Tracked objects:
  5555 ;;		On entry : 0/0
  5556 ;;		On exit  : 0/0
  5557 ;;		Unchanged: 0/0
  5558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5559 ;;      Params:         4       0       0       0       0       0       0
  5560 ;;      Locals:         2       0       0       0       0       0       0
  5561 ;;      Temps:          6       0       0       0       0       0       0
  5562 ;;      Totals:        12       0       0       0       0       0       0
  5563 ;;Total ram usage:       12 bytes
  5564 ;; Hardware stack levels used:    1
  5565 ;; Hardware stack levels required when called:    4
  5566 ;; This function calls:
  5567 ;;		Nothing
  5568 ;; This function is called by:
  5569 ;;		_CRCcheck
  5570 ;;		_AKNAK
  5571 ;; This function uses a non-reentrant model
  5572 ;;
  5573                           
  5574                           	psect	text19
  5575  001E40                     __ptext19:
  5576                           	opt stack 0
  5577  001E40                     _crcBufS_get:
  5578                           	opt stack 23
  5579                           
  5580                           ;FastTransfer.c: 354: if (time >= 5) {
  5581                           
  5582                           ;incstack = 0
  5583  001E40  0E04               	movlw	4
  5584  001E42  641D               	cpfsgt	crcBufS_get@time,c
  5585  001E44  D002               	goto	l6168
  5586                           
  5587                           ;FastTransfer.c: 355: time = 5 - 1;
  5588  001E46  0E04               	movlw	4
  5589  001E48  6E1D               	movwf	crcBufS_get@time,c
  5590  001E4A                     l6168:
  5591                           
  5592                           ;FastTransfer.c: 356: }
  5593                           ;FastTransfer.c: 357: if (space >= 3) {
  5594  001E4A  0E02               	movlw	2
  5595  001E4C  641E               	cpfsgt	crcBufS_get@space,c
  5596  001E4E  D002               	goto	l6172
  5597                           
  5598                           ;FastTransfer.c: 358: space = 3 - 1;
  5599  001E50  0E02               	movlw	2
  5600  001E52  6E1E               	movwf	crcBufS_get@space,c
  5601  001E54                     l6172:
  5602                           
  5603                           ;FastTransfer.c: 359: }
  5604                           ;FastTransfer.c: 360: time = time + 1;
  5605  001E54  281D               	incf	crcBufS_get@time,w,c
  5606  001E56  6E1D               	movwf	crcBufS_get@time,c
  5607                           
  5608                           ;FastTransfer.c: 361: int wantedTime = time * 3;
  5609  001E58  501D               	movf	crcBufS_get@time,w,c
  5610  001E5A  0D03               	mullw	3
  5611  001E5C  CFF3 F025          	movff	prodl,crcBufS_get@wantedTime
  5612  001E60  CFF4 F026          	movff	prodh,crcBufS_get@wantedTime+1
  5613                           
  5614                           ;FastTransfer.c: 362: if (wantedTime > _this->head) {
  5615  001E64  EE20 F00F          	lfsr	2,15
  5616  001E68  501B               	movf	crcBufS_get@_this,w,c
  5617  001E6A  26D9               	addwf	fsr2l,f,c
  5618  001E6C  501C               	movf	crcBufS_get@_this+1,w,c
  5619  001E6E  22DA               	addwfc	fsr2h,f,c
  5620  001E70  5025               	movf	crcBufS_get@wantedTime,w,c
  5621  001E72  5CDE               	subwf	postinc2,w,c
  5622  001E74  50DE               	movf	postinc2,w,c
  5623  001E76  0A80               	xorlw	128
  5624  001E78  6E21               	movwf	(??_crcBufS_get+2)& (0+255),c
  5625  001E7A  5026               	movf	crcBufS_get@wantedTime+1,w,c
  5626  001E7C  0A80               	xorlw	128
  5627  001E7E  5821               	subwfb	(??_crcBufS_get+2)& (0+255),w,c
  5628  001E80  B0D8               	btfsc	status,0,c
  5629  001E82  D02A               	goto	l6184
  5630                           
  5631                           ;FastTransfer.c: 363: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  5632  001E84  EE20 F00F          	lfsr	2,15
  5633  001E88  501B               	movf	crcBufS_get@_this,w,c
  5634  001E8A  26D9               	addwf	fsr2l,f,c
  5635  001E8C  501C               	movf	crcBufS_get@_this+1,w,c
  5636  001E8E  22DA               	addwfc	fsr2h,f,c
  5637  001E90  CFDE F01F          	movff	postinc2,??_crcBufS_get
  5638  001E94  CFDD F020          	movff	postdec2,??_crcBufS_get+1
  5639  001E98  1E1F               	comf	??_crcBufS_get,f,c
  5640  001E9A  1E20               	comf	??_crcBufS_get+1,f,c
  5641  001E9C  4A1F               	infsnz	??_crcBufS_get,f,c
  5642  001E9E  2A20               	incf	??_crcBufS_get+1,f,c
  5643  001EA0  5025               	movf	crcBufS_get@wantedTime,w,c
  5644  001EA2  261F               	addwf	??_crcBufS_get,f,c
  5645  001EA4  5026               	movf	crcBufS_get@wantedTime+1,w,c
  5646  001EA6  2220               	addwfc	??_crcBufS_get+1,f,c
  5647  001EA8  1E1F               	comf	??_crcBufS_get,f,c
  5648  001EAA  1E20               	comf	??_crcBufS_get+1,f,c
  5649  001EAC  4A1F               	infsnz	??_crcBufS_get,f,c
  5650  001EAE  2A20               	incf	??_crcBufS_get+1,f,c
  5651  001EB0  0E0F               	movlw	15
  5652  001EB2  241F               	addwf	??_crcBufS_get,w,c
  5653  001EB4  6E25               	movwf	crcBufS_get@wantedTime,c
  5654  001EB6  0E00               	movlw	0
  5655  001EB8  2020               	addwfc	??_crcBufS_get+1,w,c
  5656  001EBA  6E26               	movwf	crcBufS_get@wantedTime+1,c
  5657                           
  5658                           ;FastTransfer.c: 364: return (_this->buf[(wantedTime + space)]);
  5659  001EBC  501E               	movf	crcBufS_get@space,w,c
  5660  001EBE  2425               	addwf	crcBufS_get@wantedTime,w,c
  5661  001EC0  6E1F               	movwf	??_crcBufS_get& (0+255),c
  5662  001EC2  0E00               	movlw	0
  5663  001EC4  2026               	addwfc	crcBufS_get@wantedTime+1,w,c
  5664  001EC6  6E20               	movwf	(??_crcBufS_get+1)& (0+255),c
  5665  001EC8  501F               	movf	??_crcBufS_get,w,c
  5666  001ECA  241B               	addwf	crcBufS_get@_this,w,c
  5667  001ECC  6ED9               	movwf	fsr2l,c
  5668  001ECE  5020               	movf	??_crcBufS_get+1,w,c
  5669  001ED0  201C               	addwfc	crcBufS_get@_this+1,w,c
  5670  001ED2  6EDA               	movwf	fsr2h,c
  5671  001ED4  50DF               	movf	indf2,w,c
  5672                           
  5673                           ;FastTransfer.c: 365: } else {
  5674  001ED6  0012               	return	
  5675  001ED8                     l6184:
  5676                           
  5677                           ;FastTransfer.c: 366: return (_this->buf[(_this->head - wantedTime) + space]);
  5678  001ED8  EE20 F00F          	lfsr	2,15
  5679  001EDC  501B               	movf	crcBufS_get@_this,w,c
  5680  001EDE  26D9               	addwf	fsr2l,f,c
  5681  001EE0  501C               	movf	crcBufS_get@_this+1,w,c
  5682  001EE2  22DA               	addwfc	fsr2h,f,c
  5683  001EE4  CFDE F01F          	movff	postinc2,??_crcBufS_get
  5684  001EE8  CFDD F020          	movff	postdec2,??_crcBufS_get+1
  5685  001EEC  C025  F021         	movff	crcBufS_get@wantedTime,??_crcBufS_get+2
  5686  001EF0  C026  F022         	movff	crcBufS_get@wantedTime+1,??_crcBufS_get+3
  5687  001EF4  1E21               	comf	??_crcBufS_get+2,f,c
  5688  001EF6  1E22               	comf	??_crcBufS_get+3,f,c
  5689  001EF8  4A21               	infsnz	??_crcBufS_get+2,f,c
  5690  001EFA  2A22               	incf	??_crcBufS_get+3,f,c
  5691  001EFC  501E               	movf	crcBufS_get@space,w,c
  5692  001EFE  6E23               	movwf	(??_crcBufS_get+4)& (0+255),c
  5693  001F00  6A24               	clrf	(??_crcBufS_get+5)& (0+255),c
  5694  001F02  5021               	movf	??_crcBufS_get+2,w,c
  5695  001F04  2623               	addwf	??_crcBufS_get+4,f,c
  5696  001F06  5022               	movf	??_crcBufS_get+3,w,c
  5697  001F08  2224               	addwfc	??_crcBufS_get+5,f,c
  5698  001F0A  501F               	movf	??_crcBufS_get,w,c
  5699  001F0C  2623               	addwf	??_crcBufS_get+4,f,c
  5700  001F0E  5020               	movf	??_crcBufS_get+1,w,c
  5701  001F10  2224               	addwfc	??_crcBufS_get+5,f,c
  5702  001F12  5023               	movf	??_crcBufS_get+4,w,c
  5703  001F14  241B               	addwf	crcBufS_get@_this,w,c
  5704  001F16  6ED9               	movwf	fsr2l,c
  5705  001F18  5024               	movf	??_crcBufS_get+5,w,c
  5706  001F1A  201C               	addwfc	crcBufS_get@_this+1,w,c
  5707  001F1C  6EDA               	movwf	fsr2h,c
  5708  001F1E  50DF               	movf	indf2,w,c
  5709  001F20  0012               	return	
  5710  001F22                     __end_of_crcBufS_get:
  5711                           	opt stack 0
  5712                           tosu	equ	0xFFF
  5713                           tosh	equ	0xFFE
  5714                           tosl	equ	0xFFD
  5715                           pclath	equ	0xFFA
  5716                           tblptru	equ	0xFF8
  5717                           tblptrh	equ	0xFF7
  5718                           tblptrl	equ	0xFF6
  5719                           tablat	equ	0xFF5
  5720                           prodh	equ	0xFF4
  5721                           prodl	equ	0xFF3
  5722                           intcon	equ	0xFF2
  5723                           postinc0	equ	0xFEE
  5724                           wreg	equ	0xFE8
  5725                           indf2	equ	0xFDF
  5726                           postinc2	equ	0xFDE
  5727                           postdec2	equ	0xFDD
  5728                           plusw2	equ	0xFDB
  5729                           fsr2h	equ	0xFDA
  5730                           fsr2l	equ	0xFD9
  5731                           status	equ	0xFD8
  5732                           
  5733 ;; *************** function _Receive_get *****************
  5734 ;; Defined at:
  5735 ;;		line 126 in file "UART.c"
  5736 ;; Parameters:    Size  Location     Type
  5737 ;;		None
  5738 ;; Auto vars:     Size  Location     Type
  5739 ;;		None
  5740 ;; Return value:  Size  Location     Type
  5741 ;;                  1    wreg      unsigned char 
  5742 ;; Registers used:
  5743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5744 ;; Tracked objects:
  5745 ;;		On entry : 0/0
  5746 ;;		On exit  : 0/0
  5747 ;;		Unchanged: 0/0
  5748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5749 ;;      Params:         0       0       0       0       0       0       0
  5750 ;;      Locals:         0       0       0       0       0       0       0
  5751 ;;      Temps:          0       0       0       0       0       0       0
  5752 ;;      Totals:         0       0       0       0       0       0       0
  5753 ;;Total ram usage:        0 bytes
  5754 ;; Hardware stack levels used:    1
  5755 ;; Hardware stack levels required when called:    6
  5756 ;; This function calls:
  5757 ;;		_UART_buff_get
  5758 ;; This function is called by:
  5759 ;;		_SYSTEM_Initialize
  5760 ;;		_getch
  5761 ;;		_CRCcheck
  5762 ;;		_receiveData
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           
  5766                           	psect	text20
  5767  00300E                     __ptext20:
  5768                           	opt stack 0
  5769  00300E                     _Receive_get:
  5770                           	opt stack 22
  5771                           
  5772                           ;UART.c: 127: return UART_buff_get(&input_buffer);
  5773                           
  5774                           ;incstack = 0
  5775  00300E  0E00               	movlw	low _input_buffer
  5776  003010  6E21               	movwf	UART_buff_get@_this,c
  5777  003012  0E04               	movlw	high _input_buffer
  5778  003014  6E22               	movwf	UART_buff_get@_this+1,c
  5779  003016  EC13  F013         	call	_UART_buff_get	;wreg free
  5780  00301A  0012               	return	
  5781  00301C                     __end_of_Receive_get:
  5782                           	opt stack 0
  5783                           tosu	equ	0xFFF
  5784                           tosh	equ	0xFFE
  5785                           tosl	equ	0xFFD
  5786                           pclath	equ	0xFFA
  5787                           tblptru	equ	0xFF8
  5788                           tblptrh	equ	0xFF7
  5789                           tblptrl	equ	0xFF6
  5790                           tablat	equ	0xFF5
  5791                           prodh	equ	0xFF4
  5792                           prodl	equ	0xFF3
  5793                           intcon	equ	0xFF2
  5794                           postinc0	equ	0xFEE
  5795                           wreg	equ	0xFE8
  5796                           indf2	equ	0xFDF
  5797                           postinc2	equ	0xFDE
  5798                           postdec2	equ	0xFDD
  5799                           plusw2	equ	0xFDB
  5800                           fsr2h	equ	0xFDA
  5801                           fsr2l	equ	0xFD9
  5802                           status	equ	0xFD8
  5803                           
  5804 ;; *************** function _UART_buff_get *****************
  5805 ;; Defined at:
  5806 ;;		line 81 in file "UART.c"
  5807 ;; Parameters:    Size  Location     Type
  5808 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  5809 ;;		 -> output_buffer(206), input_buffer(206), 
  5810 ;; Auto vars:     Size  Location     Type
  5811 ;;  c               1   36[COMRAM] unsigned char 
  5812 ;; Return value:  Size  Location     Type
  5813 ;;                  1    wreg      unsigned char 
  5814 ;; Registers used:
  5815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5816 ;; Tracked objects:
  5817 ;;		On entry : 0/0
  5818 ;;		On exit  : 0/0
  5819 ;;		Unchanged: 0/0
  5820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5821 ;;      Params:         2       0       0       0       0       0       0
  5822 ;;      Locals:         1       0       0       0       0       0       0
  5823 ;;      Temps:          2       0       0       0       0       0       0
  5824 ;;      Totals:         5       0       0       0       0       0       0
  5825 ;;Total ram usage:        5 bytes
  5826 ;; Hardware stack levels used:    1
  5827 ;; Hardware stack levels required when called:    5
  5828 ;; This function calls:
  5829 ;;		_UART_buff_modulo_inc
  5830 ;; This function is called by:
  5831 ;;		_Receive_get
  5832 ;;		_Send_put
  5833 ;; This function uses a non-reentrant model
  5834 ;;
  5835                           
  5836                           	psect	text21
  5837  002626                     __ptext21:
  5838                           	opt stack 0
  5839  002626                     _UART_buff_get:
  5840                           	opt stack 21
  5841                           
  5842                           ;UART.c: 82: unsigned char c;
  5843                           ;UART.c: 83: if (_this->count > 0) {
  5844                           
  5845                           ;incstack = 0
  5846  002626  EE20 F0CC          	lfsr	2,204
  5847  00262A  5021               	movf	UART_buff_get@_this,w,c
  5848  00262C  26D9               	addwf	fsr2l,f,c
  5849  00262E  5022               	movf	UART_buff_get@_this+1,w,c
  5850  002630  22DA               	addwfc	fsr2h,f,c
  5851  002632  0E01               	movlw	1
  5852  002634  BEDB               	btfsc	plusw2,7,c
  5853  002636  D03C               	goto	l6010
  5854  002638  0E01               	movlw	1
  5855  00263A  50DB               	movf	plusw2,w,c
  5856  00263C  E103               	bnz	u6230
  5857  00263E  04DE               	decf	postinc2,w,c
  5858  002640  A0D8               	btfss	status,0,c
  5859  002642  D036               	goto	l6010
  5860  002644                     u6230:
  5861                           
  5862                           ;UART.c: 84: c = _this->buf[_this->tail];
  5863  002644  EE20 F0CA          	lfsr	2,202
  5864  002648  5021               	movf	UART_buff_get@_this,w,c
  5865  00264A  26D9               	addwf	fsr2l,f,c
  5866  00264C  5022               	movf	UART_buff_get@_this+1,w,c
  5867  00264E  22DA               	addwfc	fsr2h,f,c
  5868  002650  CFDE F023          	movff	postinc2,??_UART_buff_get
  5869  002654  CFDD F024          	movff	postdec2,??_UART_buff_get+1
  5870  002658  5023               	movf	??_UART_buff_get,w,c
  5871  00265A  2421               	addwf	UART_buff_get@_this,w,c
  5872  00265C  6ED9               	movwf	fsr2l,c
  5873  00265E  5024               	movf	??_UART_buff_get+1,w,c
  5874  002660  2022               	addwfc	UART_buff_get@_this+1,w,c
  5875  002662  6EDA               	movwf	fsr2h,c
  5876  002664  50DF               	movf	indf2,w,c
  5877  002666  6E25               	movwf	UART_buff_get@c,c
  5878                           
  5879                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  5880  002668  EE20 F0CA          	lfsr	2,202
  5881  00266C  5021               	movf	UART_buff_get@_this,w,c
  5882  00266E  26D9               	addwf	fsr2l,f,c
  5883  002670  5022               	movf	UART_buff_get@_this+1,w,c
  5884  002672  22DA               	addwfc	fsr2h,f,c
  5885  002674  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  5886  002678  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  5887  00267C  0E00               	movlw	0
  5888  00267E  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  5889  002680  0EC8               	movlw	200
  5890  002682  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  5891  002684  EC05  F017         	call	_UART_buff_modulo_inc	;wreg free
  5892  002688  EE20 F0CA          	lfsr	2,202
  5893  00268C  5021               	movf	UART_buff_get@_this,w,c
  5894  00268E  26D9               	addwf	fsr2l,f,c
  5895  002690  5022               	movf	UART_buff_get@_this+1,w,c
  5896  002692  22DA               	addwfc	fsr2h,f,c
  5897  002694  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  5898  002698  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  5899                           
  5900                           ;UART.c: 86: --_this->count;
  5901  00269C  EE20 F0CC          	lfsr	2,204
  5902  0026A0  5021               	movf	UART_buff_get@_this,w,c
  5903  0026A2  26D9               	addwf	fsr2l,f,c
  5904  0026A4  5022               	movf	UART_buff_get@_this+1,w,c
  5905  0026A6  22DA               	addwfc	fsr2h,f,c
  5906  0026A8  06DE               	decf	postinc2,f,c
  5907  0026AA  0E00               	movlw	0
  5908  0026AC  5ADD               	subwfb	postdec2,f,c
  5909                           
  5910                           ;UART.c: 87: } else {
  5911  0026AE  D002               	goto	l1162
  5912  0026B0                     l6010:
  5913                           
  5914                           ;UART.c: 88: c = 0;
  5915  0026B0  0E00               	movlw	0
  5916  0026B2  6E25               	movwf	UART_buff_get@c,c
  5917  0026B4                     l1162:
  5918                           
  5919                           ;UART.c: 89: }
  5920                           ;UART.c: 90: return (c);
  5921  0026B4  5025               	movf	UART_buff_get@c,w,c
  5922  0026B6  0012               	return	
  5923  0026B8                     __end_of_UART_buff_get:
  5924                           	opt stack 0
  5925                           tosu	equ	0xFFF
  5926                           tosh	equ	0xFFE
  5927                           tosl	equ	0xFFD
  5928                           pclath	equ	0xFFA
  5929                           tblptru	equ	0xFF8
  5930                           tblptrh	equ	0xFF7
  5931                           tblptrl	equ	0xFF6
  5932                           tablat	equ	0xFF5
  5933                           prodh	equ	0xFF4
  5934                           prodl	equ	0xFF3
  5935                           intcon	equ	0xFF2
  5936                           postinc0	equ	0xFEE
  5937                           wreg	equ	0xFE8
  5938                           indf2	equ	0xFDF
  5939                           postinc2	equ	0xFDE
  5940                           postdec2	equ	0xFDD
  5941                           plusw2	equ	0xFDB
  5942                           fsr2h	equ	0xFDA
  5943                           fsr2l	equ	0xFD9
  5944                           status	equ	0xFD8
  5945                           
  5946 ;; *************** function _UART_buff_modulo_inc *****************
  5947 ;; Defined at:
  5948 ;;		line 106 in file "UART.c"
  5949 ;; Parameters:    Size  Location     Type
  5950 ;;  value           2   26[COMRAM] const unsigned int 
  5951 ;;  modulus         2   28[COMRAM] const unsigned int 
  5952 ;; Auto vars:     Size  Location     Type
  5953 ;;  my_value        2   30[COMRAM] unsigned int 
  5954 ;; Return value:  Size  Location     Type
  5955 ;;                  2   26[COMRAM] unsigned int 
  5956 ;; Registers used:
  5957 ;;		wreg, status,2, status,0
  5958 ;; Tracked objects:
  5959 ;;		On entry : 0/0
  5960 ;;		On exit  : 0/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5963 ;;      Params:         4       0       0       0       0       0       0
  5964 ;;      Locals:         2       0       0       0       0       0       0
  5965 ;;      Temps:          0       0       0       0       0       0       0
  5966 ;;      Totals:         6       0       0       0       0       0       0
  5967 ;;Total ram usage:        6 bytes
  5968 ;; Hardware stack levels used:    1
  5969 ;; Hardware stack levels required when called:    4
  5970 ;; This function calls:
  5971 ;;		Nothing
  5972 ;; This function is called by:
  5973 ;;		_UART_buff_put
  5974 ;;		_UART_buff_get
  5975 ;; This function uses a non-reentrant model
  5976 ;;
  5977                           
  5978                           	psect	text22
  5979  002E0A                     __ptext22:
  5980                           	opt stack 0
  5981  002E0A                     _UART_buff_modulo_inc:
  5982                           	opt stack 21
  5983                           
  5984                           ;UART.c: 107: unsigned int my_value = value + 1;
  5985                           
  5986                           ;incstack = 0
  5987  002E0A  0E01               	movlw	1
  5988  002E0C  241B               	addwf	UART_buff_modulo_inc@value,w,c
  5989  002E0E  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  5990  002E10  0E00               	movlw	0
  5991  002E12  201C               	addwfc	UART_buff_modulo_inc@value+1,w,c
  5992  002E14  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  5993                           
  5994                           ;UART.c: 108: if (my_value >= modulus) {
  5995  002E16  501D               	movf	UART_buff_modulo_inc@modulus,w,c
  5996  002E18  5C1F               	subwf	UART_buff_modulo_inc@my_value,w,c
  5997  002E1A  501E               	movf	UART_buff_modulo_inc@modulus+1,w,c
  5998  002E1C  5820               	subwfb	UART_buff_modulo_inc@my_value+1,w,c
  5999  002E1E  A0D8               	btfss	status,0,c
  6000  002E20  D004               	goto	l5968
  6001                           
  6002                           ;UART.c: 109: my_value = 0;
  6003  002E22  0E00               	movlw	0
  6004  002E24  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  6005  002E26  0E00               	movlw	0
  6006  002E28  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  6007  002E2A                     l5968:
  6008                           
  6009                           ;UART.c: 110: }
  6010                           ;UART.c: 111: return (my_value);
  6011  002E2A  C01F  F01B         	movff	UART_buff_modulo_inc@my_value,?_UART_buff_modulo_inc
  6012  002E2E  C020  F01C         	movff	UART_buff_modulo_inc@my_value+1,?_UART_buff_modulo_inc+1
  6013  002E32  0012               	return	
  6014  002E34                     __end_of_UART_buff_modulo_inc:
  6015                           	opt stack 0
  6016                           tosu	equ	0xFFF
  6017                           tosh	equ	0xFFE
  6018                           tosl	equ	0xFFD
  6019                           pclath	equ	0xFFA
  6020                           tblptru	equ	0xFF8
  6021                           tblptrh	equ	0xFF7
  6022                           tblptrl	equ	0xFF6
  6023                           tablat	equ	0xFF5
  6024                           prodh	equ	0xFF4
  6025                           prodl	equ	0xFF3
  6026                           intcon	equ	0xFF2
  6027                           postinc0	equ	0xFEE
  6028                           wreg	equ	0xFE8
  6029                           indf2	equ	0xFDF
  6030                           postinc2	equ	0xFDE
  6031                           postdec2	equ	0xFDD
  6032                           plusw2	equ	0xFDB
  6033                           fsr2h	equ	0xFDA
  6034                           fsr2l	equ	0xFD9
  6035                           status	equ	0xFD8
  6036                           
  6037 ;; *************** function _Receive_available *****************
  6038 ;; Defined at:
  6039 ;;		line 122 in file "UART.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;		None
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;		None
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  2   28[COMRAM] int 
  6046 ;; Registers used:
  6047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6053 ;;      Params:         2       0       0       0       0       0       0
  6054 ;;      Locals:         0       0       0       0       0       0       0
  6055 ;;      Temps:          0       0       0       0       0       0       0
  6056 ;;      Totals:         2       0       0       0       0       0       0
  6057 ;;Total ram usage:        2 bytes
  6058 ;; Hardware stack levels used:    1
  6059 ;; Hardware stack levels required when called:    5
  6060 ;; This function calls:
  6061 ;;		_UART_buff_size
  6062 ;; This function is called by:
  6063 ;;		_SYSTEM_Initialize
  6064 ;;		_CRCcheck
  6065 ;;		_receiveData
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069                           	psect	text23
  6070  002F9A                     __ptext23:
  6071                           	opt stack 0
  6072  002F9A                     _Receive_available:
  6073                           	opt stack 23
  6074                           
  6075                           ;UART.c: 123: return UART_buff_size(&input_buffer);
  6076                           
  6077                           ;incstack = 0
  6078  002F9A  0E00               	movlw	low _input_buffer
  6079  002F9C  6E1B               	movwf	UART_buff_size@_this,c
  6080  002F9E  0E04               	movlw	high _input_buffer
  6081  002FA0  6E1C               	movwf	UART_buff_size@_this+1,c
  6082  002FA2  ECD8  F017         	call	_UART_buff_size	;wreg free
  6083  002FA6  C01B  F01D         	movff	?_UART_buff_size,?_Receive_available
  6084  002FAA  C01C  F01E         	movff	?_UART_buff_size+1,?_Receive_available+1
  6085  002FAE  0012               	return	
  6086  002FB0                     __end_of_Receive_available:
  6087                           	opt stack 0
  6088                           tosu	equ	0xFFF
  6089                           tosh	equ	0xFFE
  6090                           tosl	equ	0xFFD
  6091                           pclath	equ	0xFFA
  6092                           tblptru	equ	0xFF8
  6093                           tblptrh	equ	0xFF7
  6094                           tblptrl	equ	0xFF6
  6095                           tablat	equ	0xFF5
  6096                           prodh	equ	0xFF4
  6097                           prodl	equ	0xFF3
  6098                           intcon	equ	0xFF2
  6099                           postinc0	equ	0xFEE
  6100                           wreg	equ	0xFE8
  6101                           indf2	equ	0xFDF
  6102                           postinc2	equ	0xFDE
  6103                           postdec2	equ	0xFDD
  6104                           plusw2	equ	0xFDB
  6105                           fsr2h	equ	0xFDA
  6106                           fsr2l	equ	0xFD9
  6107                           status	equ	0xFD8
  6108                           
  6109 ;; *************** function _UART_buff_size *****************
  6110 ;; Defined at:
  6111 ;;		line 102 in file "UART.c"
  6112 ;; Parameters:    Size  Location     Type
  6113 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  6114 ;;		 -> output_buffer(206), input_buffer(206), 
  6115 ;; Auto vars:     Size  Location     Type
  6116 ;;		None
  6117 ;; Return value:  Size  Location     Type
  6118 ;;                  2   26[COMRAM] int 
  6119 ;; Registers used:
  6120 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6121 ;; Tracked objects:
  6122 ;;		On entry : 0/0
  6123 ;;		On exit  : 0/0
  6124 ;;		Unchanged: 0/0
  6125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6126 ;;      Params:         2       0       0       0       0       0       0
  6127 ;;      Locals:         0       0       0       0       0       0       0
  6128 ;;      Temps:          0       0       0       0       0       0       0
  6129 ;;      Totals:         2       0       0       0       0       0       0
  6130 ;;Total ram usage:        2 bytes
  6131 ;; Hardware stack levels used:    1
  6132 ;; Hardware stack levels required when called:    4
  6133 ;; This function calls:
  6134 ;;		Nothing
  6135 ;; This function is called by:
  6136 ;;		_Receive_available
  6137 ;; This function uses a non-reentrant model
  6138 ;;
  6139                           
  6140                           	psect	text24
  6141  002FB0                     __ptext24:
  6142                           	opt stack 0
  6143  002FB0                     _UART_buff_size:
  6144                           	opt stack 23
  6145                           
  6146                           ;UART.c: 103: return (_this->count);
  6147                           
  6148                           ;incstack = 0
  6149  002FB0  EE20 F0CC          	lfsr	2,204
  6150  002FB4  501B               	movf	UART_buff_size@_this,w,c
  6151  002FB6  26D9               	addwf	fsr2l,f,c
  6152  002FB8  501C               	movf	UART_buff_size@_this+1,w,c
  6153  002FBA  22DA               	addwfc	fsr2h,f,c
  6154  002FBC  CFDE F01B          	movff	postinc2,?_UART_buff_size
  6155  002FC0  CFDD F01C          	movff	postdec2,?_UART_buff_size+1
  6156  002FC4  0012               	return	
  6157  002FC6                     __end_of_UART_buff_size:
  6158                           	opt stack 0
  6159                           tosu	equ	0xFFF
  6160                           tosh	equ	0xFFE
  6161                           tosl	equ	0xFFD
  6162                           pclath	equ	0xFFA
  6163                           tblptru	equ	0xFF8
  6164                           tblptrh	equ	0xFF7
  6165                           tblptrl	equ	0xFF6
  6166                           tablat	equ	0xFF5
  6167                           prodh	equ	0xFF4
  6168                           prodl	equ	0xFF3
  6169                           intcon	equ	0xFF2
  6170                           postinc0	equ	0xFEE
  6171                           wreg	equ	0xFE8
  6172                           indf2	equ	0xFDF
  6173                           postinc2	equ	0xFDE
  6174                           postdec2	equ	0xFDD
  6175                           plusw2	equ	0xFDB
  6176                           fsr2h	equ	0xFDA
  6177                           fsr2l	equ	0xFD9
  6178                           status	equ	0xFD8
  6179                           
  6180 ;; *************** function _CRC8 *****************
  6181 ;; Defined at:
  6182 ;;		line 34 in file "FastTransfer.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;  data            2   26[COMRAM] PTR const unsigned char 
  6185 ;;		 -> CRCcheck@arrayHolder(3), receiveData@holder_2354(3), receiveData@holder(3), rx_buffer(200), 
  6186 ;;		 -> ring_buffer(206), NULL(0), 
  6187 ;;  len             1   28[COMRAM] unsigned char 
  6188 ;; Auto vars:     Size  Location     Type
  6189 ;;  sum             1   29[COMRAM] unsigned char 
  6190 ;;  tempI           1   31[COMRAM] unsigned char 
  6191 ;;  extract         1   30[COMRAM] unsigned char 
  6192 ;;  crc             1   32[COMRAM] unsigned char 
  6193 ;; Return value:  Size  Location     Type
  6194 ;;                  1    wreg      unsigned char 
  6195 ;; Registers used:
  6196 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6197 ;; Tracked objects:
  6198 ;;		On entry : 0/0
  6199 ;;		On exit  : 0/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6202 ;;      Params:         3       0       0       0       0       0       0
  6203 ;;      Locals:         4       0       0       0       0       0       0
  6204 ;;      Temps:          0       0       0       0       0       0       0
  6205 ;;      Totals:         7       0       0       0       0       0       0
  6206 ;;Total ram usage:        7 bytes
  6207 ;; Hardware stack levels used:    1
  6208 ;; Hardware stack levels required when called:    4
  6209 ;; This function calls:
  6210 ;;		Nothing
  6211 ;; This function is called by:
  6212 ;;		_sendData
  6213 ;;		_receiveData
  6214 ;;		_CRCcheck
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218                           	psect	text25
  6219  002B5A                     __ptext25:
  6220                           	opt stack 0
  6221  002B5A                     _CRC8:
  6222                           	opt stack 23
  6223                           
  6224                           ;FastTransfer.c: 35: unsigned char crc = 0x00;
  6225                           
  6226                           ;incstack = 0
  6227  002B5A  0E00               	movlw	0
  6228  002B5C  6E21               	movwf	CRC8@crc,c
  6229                           
  6230                           ;FastTransfer.c: 36: while (len--) {
  6231  002B5E  D01C               	goto	l6130
  6232  002B60                     l6114:
  6233                           
  6234                           ;FastTransfer.c: 37: unsigned char extract = *data++;
  6235  002B60  C01B  FFD9         	movff	CRC8@data,fsr2l
  6236  002B64  C01C  FFDA         	movff	CRC8@data+1,fsr2h
  6237  002B68  50DF               	movf	indf2,w,c
  6238  002B6A  6E1F               	movwf	CRC8@extract,c
  6239  002B6C  4A1B               	infsnz	CRC8@data,f,c
  6240  002B6E  2A1C               	incf	CRC8@data+1,f,c
  6241                           
  6242                           ;FastTransfer.c: 38: unsigned char tempI;
  6243                           ;FastTransfer.c: 39: for (tempI = 8; tempI; tempI--) {
  6244  002B70  0E08               	movlw	8
  6245  002B72  6E20               	movwf	CRC8@tempI,c
  6246  002B74  D00E               	goto	l6128
  6247  002B76                     l6120:
  6248                           
  6249                           ;FastTransfer.c: 40: unsigned char sum = (crc ^ extract) & 0x01;
  6250  002B76  5021               	movf	CRC8@crc,w,c
  6251  002B78  181F               	xorwf	CRC8@extract,w,c
  6252  002B7A  0B01               	andlw	1
  6253  002B7C  6E1E               	movwf	CRC8@sum,c
  6254                           
  6255                           ;FastTransfer.c: 41: crc >>= 1;
  6256  002B7E  90D8               	bcf	status,0,c
  6257  002B80  3221               	rrcf	CRC8@crc,f,c
  6258                           
  6259                           ;FastTransfer.c: 42: if (sum) {
  6260  002B82  501E               	movf	CRC8@sum,w,c
  6261  002B84  B4D8               	btfsc	status,2,c
  6262  002B86  D002               	goto	l1003
  6263                           
  6264                           ;FastTransfer.c: 43: crc ^= 0x8C;
  6265  002B88  0E8C               	movlw	140
  6266  002B8A  1A21               	xorwf	CRC8@crc,f,c
  6267  002B8C                     l1003:
  6268                           
  6269                           ;FastTransfer.c: 44: }
  6270                           ;FastTransfer.c: 45: extract >>= 1;
  6271  002B8C  90D8               	bcf	status,0,c
  6272  002B8E  321F               	rrcf	CRC8@extract,f,c
  6273  002B90  0620               	decf	CRC8@tempI,f,c
  6274  002B92                     l6128:
  6275  002B92  5020               	movf	CRC8@tempI,w,c
  6276  002B94  A4D8               	btfss	status,2,c
  6277  002B96  D7EF               	goto	l6120
  6278  002B98                     l6130:
  6279  002B98  061D               	decf	CRC8@len,f,c
  6280  002B9A  281D               	incf	CRC8@len,w,c
  6281  002B9C  A4D8               	btfss	status,2,c
  6282  002B9E  D7E0               	goto	l6114
  6283                           
  6284                           ;FastTransfer.c: 46: }
  6285                           ;FastTransfer.c: 47: }
  6286                           ;FastTransfer.c: 48: return crc;
  6287  002BA0  5021               	movf	CRC8@crc,w,c
  6288  002BA2  0012               	return	
  6289  002BA4                     __end_of_CRC8:
  6290                           	opt stack 0
  6291                           tosu	equ	0xFFF
  6292                           tosh	equ	0xFFE
  6293                           tosl	equ	0xFFD
  6294                           pclath	equ	0xFFA
  6295                           tblptru	equ	0xFF8
  6296                           tblptrh	equ	0xFF7
  6297                           tblptrl	equ	0xFF6
  6298                           tablat	equ	0xFF5
  6299                           prodh	equ	0xFF4
  6300                           prodl	equ	0xFF3
  6301                           intcon	equ	0xFF2
  6302                           postinc0	equ	0xFEE
  6303                           wreg	equ	0xFE8
  6304                           indf2	equ	0xFDF
  6305                           postinc2	equ	0xFDE
  6306                           postdec2	equ	0xFDD
  6307                           plusw2	equ	0xFDB
  6308                           fsr2h	equ	0xFDA
  6309                           fsr2l	equ	0xFD9
  6310                           status	equ	0xFD8
  6311                           
  6312 ;; *************** function _handleIndicators *****************
  6313 ;; Defined at:
  6314 ;;		line 31 in file "Communications.c"
  6315 ;; Parameters:    Size  Location     Type
  6316 ;;  receivedIndi    2   36[COMRAM] int 
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;  i               2   41[COMRAM] int 
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  1    wreg      void 
  6321 ;; Registers used:
  6322 ;;		wreg, status,2, status,0, cstack
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6328 ;;      Params:         2       0       0       0       0       0       0
  6329 ;;      Locals:         2       0       0       0       0       0       0
  6330 ;;      Temps:          3       0       0       0       0       0       0
  6331 ;;      Totals:         7       0       0       0       0       0       0
  6332 ;;Total ram usage:        7 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; Hardware stack levels required when called:    6
  6335 ;; This function calls:
  6336 ;;		_SetLEDOut
  6337 ;; This function is called by:
  6338 ;;		_updateComms
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           	psect	text26
  6343  0027CE                     __ptext26:
  6344                           	opt stack 0
  6345  0027CE                     _handleIndicators:
  6346                           	opt stack 23
  6347                           
  6348                           ;Communications.c: 32: static int oldIndicators = 0;
  6349                           ;Communications.c: 33: if (receivedIndicators != oldIndicators) {
  6350                           
  6351                           ;incstack = 0
  6352  0027CE  0100               	movlb	0	; () banked
  6353  0027D0  51E1               	movf	handleIndicators@oldIndicators& (0+255),w,b
  6354  0027D2  1825               	xorwf	handleIndicators@receivedIndicators,w,c
  6355  0027D4  E105               	bnz	u7720
  6356  0027D6  0100               	movlb	0	; () banked
  6357  0027D8  51E2               	movf	(handleIndicators@oldIndicators+1)& (0+255),w,b
  6358  0027DA  1826               	xorwf	handleIndicators@receivedIndicators+1,w,c
  6359  0027DC  B4D8               	btfsc	status,2,c
  6360  0027DE  0012               	return	
  6361  0027E0                     u7720:
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;Communications.c: 34: int i = 0;
  6365  0027E0  0E00               	movlw	0
  6366  0027E2  6E2B               	movwf	handleIndicators@i+1,c
  6367  0027E4  0E00               	movlw	0
  6368  0027E6  6E2A               	movwf	handleIndicators@i,c
  6369                           
  6370                           ;Communications.c: 35: for (i = 0; i < 6; i++) {
  6371  0027E8  0E00               	movlw	0
  6372  0027EA  6E2B               	movwf	handleIndicators@i+1,c
  6373  0027EC  0E00               	movlw	0
  6374  0027EE  6E2A               	movwf	handleIndicators@i,c
  6375                           
  6376                           ; BSR set to: 0
  6377  0027F0  BE2B               	btfsc	handleIndicators@i+1,7,c
  6378  0027F2  D006               	goto	l6906
  6379  0027F4  502B               	movf	handleIndicators@i+1,w,c
  6380  0027F6  E122               	bnz	l924
  6381  0027F8  0E06               	movlw	6
  6382  0027FA  5C2A               	subwf	handleIndicators@i,w,c
  6383  0027FC  B0D8               	btfsc	status,0,c
  6384  0027FE  D01E               	goto	l924
  6385  002800                     l6906:
  6386                           
  6387                           ;Communications.c: 36: SetLEDOut(i, ((receivedIndicators >> i)&0x01));
  6388  002800  C02A  F01F         	movff	handleIndicators@i,SetLEDOut@lednum
  6389  002804  C02B  F020         	movff	handleIndicators@i+1,SetLEDOut@lednum+1
  6390  002808  C02A  F027         	movff	handleIndicators@i,??_handleIndicators
  6391  00280C  C025  F028         	movff	handleIndicators@receivedIndicators,??_handleIndicators+1
  6392  002810  C026  F029         	movff	handleIndicators@receivedIndicators+1,??_handleIndicators+2
  6393  002814  2A27               	incf	??_handleIndicators,f,c
  6394  002816  D003               	goto	u7744
  6395  002818                     u7745:
  6396  002818  3429               	rlcf	??_handleIndicators+2,w,c
  6397  00281A  3229               	rrcf	??_handleIndicators+2,f,c
  6398  00281C  3228               	rrcf	??_handleIndicators+1,f,c
  6399  00281E                     u7744:
  6400  00281E  2E27               	decfsz	??_handleIndicators,f,c
  6401  002820  D7FB               	goto	u7745
  6402  002822  0E01               	movlw	1
  6403  002824  1428               	andwf	??_handleIndicators+1,w,c
  6404  002826  6E21               	movwf	SetLEDOut@state,c
  6405  002828  6A22               	clrf	SetLEDOut@state+1,c
  6406  00282A  ECC7  F005         	call	_SetLEDOut	;wreg free
  6407  00282E  4A2A               	infsnz	handleIndicators@i,f,c
  6408  002830  2A2B               	incf	handleIndicators@i+1,f,c
  6409  002832  BE2B               	btfsc	handleIndicators@i+1,7,c
  6410  002834  D7E5               	goto	l6906
  6411  002836  502B               	movf	handleIndicators@i+1,w,c
  6412  002838  E101               	bnz	u7750
  6413  00283A  D7DE               	goto	L2
  6414  00283C                     u7750:
  6415  00283C                     l924:
  6416                           
  6417                           ;Communications.c: 37: }
  6418                           ;Communications.c: 38: oldIndicators = receivedIndicators;
  6419  00283C  C025  F0E1         	movff	handleIndicators@receivedIndicators,handleIndicators@oldIndicators
  6420  002840  C026  F0E2         	movff	handleIndicators@receivedIndicators+1,handleIndicators@oldIndicators+1
  6421  002844  0012               	return	
  6422  002846                     __end_of_handleIndicators:
  6423                           	opt stack 0
  6424                           tosu	equ	0xFFF
  6425                           tosh	equ	0xFFE
  6426                           tosl	equ	0xFFD
  6427                           pclath	equ	0xFFA
  6428                           tblptru	equ	0xFF8
  6429                           tblptrh	equ	0xFF7
  6430                           tblptrl	equ	0xFF6
  6431                           tablat	equ	0xFF5
  6432                           prodh	equ	0xFF4
  6433                           prodl	equ	0xFF3
  6434                           intcon	equ	0xFF2
  6435                           postinc0	equ	0xFEE
  6436                           wreg	equ	0xFE8
  6437                           indf2	equ	0xFDF
  6438                           postinc2	equ	0xFDE
  6439                           postdec2	equ	0xFDD
  6440                           plusw2	equ	0xFDB
  6441                           fsr2h	equ	0xFDA
  6442                           fsr2l	equ	0xFD9
  6443                           status	equ	0xFD8
  6444                           
  6445 ;; *************** function _SetLEDOut *****************
  6446 ;; Defined at:
  6447 ;;		line 25 in file "IO.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;  lednum          2   30[COMRAM] int 
  6450 ;;  state           2   32[COMRAM] int 
  6451 ;; Auto vars:     Size  Location     Type
  6452 ;;		None
  6453 ;; Return value:  Size  Location     Type
  6454 ;;                  1    wreg      void 
  6455 ;; Registers used:
  6456 ;;		wreg, status,2, status,0, cstack
  6457 ;; Tracked objects:
  6458 ;;		On entry : 0/0
  6459 ;;		On exit  : 0/0
  6460 ;;		Unchanged: 0/0
  6461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6462 ;;      Params:         4       0       0       0       0       0       0
  6463 ;;      Locals:         0       0       0       0       0       0       0
  6464 ;;      Temps:          2       0       0       0       0       0       0
  6465 ;;      Totals:         6       0       0       0       0       0       0
  6466 ;;Total ram usage:        6 bytes
  6467 ;; Hardware stack levels used:    1
  6468 ;; Hardware stack levels required when called:    5
  6469 ;; This function calls:
  6470 ;;		_Off_Led
  6471 ;;		_setLED
  6472 ;; This function is called by:
  6473 ;;		_handleIndicators
  6474 ;; This function uses a non-reentrant model
  6475 ;;
  6476                           
  6477                           	psect	text27
  6478  000B8E                     __ptext27:
  6479                           	opt stack 0
  6480  000B8E                     _SetLEDOut:
  6481                           	opt stack 23
  6482                           
  6483                           ;IO.c: 26: switch (lednum) {
  6484                           
  6485                           ;incstack = 0
  6486  000B8E  D138               	goto	l6378
  6487  000B90                     l6244:
  6488                           
  6489                           ;IO.c: 28: if (state == 1) {
  6490  000B90  0421               	decf	SetLEDOut@state,w,c
  6491  000B92  1022               	iorwf	SetLEDOut@state+1,w,c
  6492  000B94  A4D8               	btfss	status,2,c
  6493  000B96  D00D               	goto	l6252
  6494                           
  6495                           ;IO.c: 29: Off_Led(0);
  6496  000B98  0E00               	movlw	0
  6497  000B9A  6E1C               	movwf	Off_Led@led+1,c
  6498  000B9C  0E00               	movlw	0
  6499  000B9E  6E1B               	movwf	Off_Led@led,c
  6500  000BA0  EC68  F010         	call	_Off_Led	;wreg free
  6501                           
  6502                           ;IO.c: 30: do { LATB3 = 1; } while(0);
  6503  000BA4  868A               	bsf	3978,3,c	;volatile
  6504                           
  6505                           ;IO.c: 31: LED_array[0] = 1;
  6506  000BA6  0E00               	movlw	0
  6507  000BA8  0100               	movlb	0	; () banked
  6508  000BAA  6F89               	movwf	(_LED_array+1)& (0+255),b
  6509  000BAC  0E01               	movlw	1
  6510  000BAE  6F88               	movwf	_LED_array& (0+255),b
  6511                           
  6512                           ;IO.c: 32: } else if (state == 0) {
  6513  000BB0  0012               	return	
  6514  000BB2                     l6252:
  6515  000BB2  5021               	movf	SetLEDOut@state,w,c
  6516  000BB4  1022               	iorwf	SetLEDOut@state+1,w,c
  6517  000BB6  A4D8               	btfss	status,2,c
  6518  000BB8  D00D               	goto	l6260
  6519                           
  6520                           ;IO.c: 33: Off_Led(0);
  6521  000BBA  0E00               	movlw	0
  6522  000BBC  6E1C               	movwf	Off_Led@led+1,c
  6523  000BBE  0E00               	movlw	0
  6524  000BC0  6E1B               	movwf	Off_Led@led,c
  6525  000BC2  EC68  F010         	call	_Off_Led	;wreg free
  6526                           
  6527                           ;IO.c: 34: do { LATB3 = 0; } while(0);
  6528  000BC6  968A               	bcf	3978,3,c	;volatile
  6529                           
  6530                           ;IO.c: 35: LED_array[0] = 0;
  6531  000BC8  0E00               	movlw	0
  6532  000BCA  0100               	movlb	0	; () banked
  6533  000BCC  6F89               	movwf	(_LED_array+1)& (0+255),b
  6534  000BCE  0E00               	movlw	0
  6535  000BD0  6F88               	movwf	_LED_array& (0+255),b
  6536                           
  6537                           ;IO.c: 36: }
  6538  000BD2  0012               	return	
  6539  000BD4                     l6260:
  6540                           
  6541                           ;IO.c: 37: else if (state == 2) {
  6542  000BD4  0E02               	movlw	2
  6543  000BD6  1821               	xorwf	SetLEDOut@state,w,c
  6544  000BD8  1022               	iorwf	SetLEDOut@state+1,w,c
  6545  000BDA  A4D8               	btfss	status,2,c
  6546  000BDC  0012               	return	
  6547                           
  6548                           ;IO.c: 39: do { LATB3 = 0; } while(0);
  6549  000BDE  968A               	bcf	3978,3,c	;volatile
  6550                           
  6551                           ;IO.c: 40: setLED(0);
  6552  000BE0  0E00               	movlw	0
  6553  000BE2  6E1C               	movwf	setLED@led+1,c
  6554  000BE4  0E00               	movlw	0
  6555  000BE6  6E1B               	movwf	setLED@led,c
  6556  000BE8  ECCD  F010         	call	_setLED	;wreg free
  6557                           
  6558                           ;IO.c: 41: LED_array[0] = 2;
  6559  000BEC  0E00               	movlw	0
  6560  000BEE  0100               	movlb	0	; () banked
  6561  000BF0  6F89               	movwf	(_LED_array+1)& (0+255),b
  6562  000BF2  0E02               	movlw	2
  6563  000BF4  6F88               	movwf	_LED_array& (0+255),b
  6564                           
  6565                           ; BSR set to: 0
  6566                           ;IO.c: 43: }
  6567                           ;IO.c: 44: break;
  6568                           
  6569                           ; BSR set to: 0
  6570                           
  6571                           ; BSR set to: 0
  6572  000BF6  0012               	return	
  6573  000BF8                     l6266:
  6574                           
  6575                           ;IO.c: 47: if (state == 1) {
  6576  000BF8  0421               	decf	SetLEDOut@state,w,c
  6577  000BFA  1022               	iorwf	SetLEDOut@state+1,w,c
  6578  000BFC  A4D8               	btfss	status,2,c
  6579  000BFE  D00D               	goto	l6274
  6580                           
  6581                           ;IO.c: 48: Off_Led(1);
  6582  000C00  0E00               	movlw	0
  6583  000C02  6E1C               	movwf	Off_Led@led+1,c
  6584  000C04  0E01               	movlw	1
  6585  000C06  6E1B               	movwf	Off_Led@led,c
  6586  000C08  EC68  F010         	call	_Off_Led	;wreg free
  6587                           
  6588                           ;IO.c: 49: do { LATB5 = 1; } while(0);
  6589  000C0C  8A8A               	bsf	3978,5,c	;volatile
  6590                           
  6591                           ;IO.c: 50: LED_array[1] = 1;
  6592  000C0E  0E00               	movlw	0
  6593  000C10  0100               	movlb	0	; () banked
  6594  000C12  6F8B               	movwf	(_LED_array+3)& (0+255),b
  6595  000C14  0E01               	movlw	1
  6596  000C16  6F8A               	movwf	(_LED_array+2)& (0+255),b
  6597                           
  6598                           ;IO.c: 51: } else if (state == 0) {
  6599  000C18  0012               	return	
  6600  000C1A                     l6274:
  6601  000C1A  5021               	movf	SetLEDOut@state,w,c
  6602  000C1C  1022               	iorwf	SetLEDOut@state+1,w,c
  6603  000C1E  A4D8               	btfss	status,2,c
  6604  000C20  D00D               	goto	l6282
  6605                           
  6606                           ;IO.c: 52: Off_Led(1);
  6607  000C22  0E00               	movlw	0
  6608  000C24  6E1C               	movwf	Off_Led@led+1,c
  6609  000C26  0E01               	movlw	1
  6610  000C28  6E1B               	movwf	Off_Led@led,c
  6611  000C2A  EC68  F010         	call	_Off_Led	;wreg free
  6612                           
  6613                           ;IO.c: 53: do { LATB5 = 0; } while(0);
  6614  000C2E  9A8A               	bcf	3978,5,c	;volatile
  6615                           
  6616                           ;IO.c: 54: LED_array[1] = 0;
  6617  000C30  0E00               	movlw	0
  6618  000C32  0100               	movlb	0	; () banked
  6619  000C34  6F8B               	movwf	(_LED_array+3)& (0+255),b
  6620  000C36  0E00               	movlw	0
  6621  000C38  6F8A               	movwf	(_LED_array+2)& (0+255),b
  6622                           
  6623                           ;IO.c: 55: } else if (state == 2) {
  6624  000C3A  0012               	return	
  6625  000C3C                     l6282:
  6626  000C3C  0E02               	movlw	2
  6627  000C3E  1821               	xorwf	SetLEDOut@state,w,c
  6628  000C40  1022               	iorwf	SetLEDOut@state+1,w,c
  6629  000C42  A4D8               	btfss	status,2,c
  6630  000C44  0012               	return	
  6631                           
  6632                           ;IO.c: 57: do { LATB5 = 0; } while(0);
  6633  000C46  9A8A               	bcf	3978,5,c	;volatile
  6634                           
  6635                           ;IO.c: 58: setLED(1);
  6636  000C48  0E00               	movlw	0
  6637  000C4A  6E1C               	movwf	setLED@led+1,c
  6638  000C4C  0E01               	movlw	1
  6639  000C4E  6E1B               	movwf	setLED@led,c
  6640  000C50  ECCD  F010         	call	_setLED	;wreg free
  6641                           
  6642                           ;IO.c: 59: LED_array[1] = 2;
  6643  000C54  0E00               	movlw	0
  6644  000C56  0100               	movlb	0	; () banked
  6645  000C58  6F8B               	movwf	(_LED_array+3)& (0+255),b
  6646  000C5A  0E02               	movlw	2
  6647  000C5C  6F8A               	movwf	(_LED_array+2)& (0+255),b
  6648                           
  6649                           ; BSR set to: 0
  6650                           ;IO.c: 61: }
  6651                           ;IO.c: 62: break;
  6652                           
  6653                           ; BSR set to: 0
  6654                           
  6655                           ; BSR set to: 0
  6656  000C5E  0012               	return	
  6657  000C60                     l6288:
  6658                           
  6659                           ;IO.c: 64: if (state == 1) {
  6660  000C60  0421               	decf	SetLEDOut@state,w,c
  6661  000C62  1022               	iorwf	SetLEDOut@state+1,w,c
  6662  000C64  A4D8               	btfss	status,2,c
  6663  000C66  D00D               	goto	l6296
  6664                           
  6665                           ;IO.c: 65: Off_Led(2);
  6666  000C68  0E00               	movlw	0
  6667  000C6A  6E1C               	movwf	Off_Led@led+1,c
  6668  000C6C  0E02               	movlw	2
  6669  000C6E  6E1B               	movwf	Off_Led@led,c
  6670  000C70  EC68  F010         	call	_Off_Led	;wreg free
  6671                           
  6672                           ;IO.c: 66: do { LATD1 = 1; } while(0);
  6673  000C74  828C               	bsf	3980,1,c	;volatile
  6674                           
  6675                           ;IO.c: 67: LED_array[2] = 1;
  6676  000C76  0E00               	movlw	0
  6677  000C78  0100               	movlb	0	; () banked
  6678  000C7A  6F8D               	movwf	(_LED_array+5)& (0+255),b
  6679  000C7C  0E01               	movlw	1
  6680  000C7E  6F8C               	movwf	(_LED_array+4)& (0+255),b
  6681                           
  6682                           ;IO.c: 68: } else if (state == 0) {
  6683  000C80  0012               	return	
  6684  000C82                     l6296:
  6685  000C82  5021               	movf	SetLEDOut@state,w,c
  6686  000C84  1022               	iorwf	SetLEDOut@state+1,w,c
  6687  000C86  A4D8               	btfss	status,2,c
  6688  000C88  D00D               	goto	l6304
  6689                           
  6690                           ;IO.c: 69: Off_Led(2);
  6691  000C8A  0E00               	movlw	0
  6692  000C8C  6E1C               	movwf	Off_Led@led+1,c
  6693  000C8E  0E02               	movlw	2
  6694  000C90  6E1B               	movwf	Off_Led@led,c
  6695  000C92  EC68  F010         	call	_Off_Led	;wreg free
  6696                           
  6697                           ;IO.c: 70: do { LATD1 = 0; } while(0);
  6698  000C96  928C               	bcf	3980,1,c	;volatile
  6699                           
  6700                           ;IO.c: 71: LED_array[2] = 0;
  6701  000C98  0E00               	movlw	0
  6702  000C9A  0100               	movlb	0	; () banked
  6703  000C9C  6F8D               	movwf	(_LED_array+5)& (0+255),b
  6704  000C9E  0E00               	movlw	0
  6705  000CA0  6F8C               	movwf	(_LED_array+4)& (0+255),b
  6706                           
  6707                           ;IO.c: 72: } else if (state == 2) {
  6708  000CA2  0012               	return	
  6709  000CA4                     l6304:
  6710  000CA4  0E02               	movlw	2
  6711  000CA6  1821               	xorwf	SetLEDOut@state,w,c
  6712  000CA8  1022               	iorwf	SetLEDOut@state+1,w,c
  6713  000CAA  A4D8               	btfss	status,2,c
  6714  000CAC  0012               	return	
  6715                           
  6716                           ;IO.c: 74: do { LATD1 = 0; } while(0);
  6717  000CAE  928C               	bcf	3980,1,c	;volatile
  6718                           
  6719                           ;IO.c: 75: setLED(2);
  6720  000CB0  0E00               	movlw	0
  6721  000CB2  6E1C               	movwf	setLED@led+1,c
  6722  000CB4  0E02               	movlw	2
  6723  000CB6  6E1B               	movwf	setLED@led,c
  6724  000CB8  ECCD  F010         	call	_setLED	;wreg free
  6725                           
  6726                           ;IO.c: 77: LED_array[2] = 2;
  6727  000CBC  0E00               	movlw	0
  6728  000CBE  0100               	movlb	0	; () banked
  6729  000CC0  6F8D               	movwf	(_LED_array+5)& (0+255),b
  6730  000CC2  0E02               	movlw	2
  6731  000CC4  6F8C               	movwf	(_LED_array+4)& (0+255),b
  6732                           
  6733                           ; BSR set to: 0
  6734                           ;IO.c: 79: }
  6735                           ;IO.c: 82: break;
  6736                           
  6737                           ; BSR set to: 0
  6738                           
  6739                           ; BSR set to: 0
  6740  000CC6  0012               	return	
  6741  000CC8                     l6310:
  6742                           
  6743                           ;IO.c: 85: if (state == 1) {
  6744  000CC8  0421               	decf	SetLEDOut@state,w,c
  6745  000CCA  1022               	iorwf	SetLEDOut@state+1,w,c
  6746  000CCC  A4D8               	btfss	status,2,c
  6747  000CCE  D00D               	goto	l6318
  6748                           
  6749                           ;IO.c: 86: Off_Led(3);
  6750  000CD0  0E00               	movlw	0
  6751  000CD2  6E1C               	movwf	Off_Led@led+1,c
  6752  000CD4  0E03               	movlw	3
  6753  000CD6  6E1B               	movwf	Off_Led@led,c
  6754  000CD8  EC68  F010         	call	_Off_Led	;wreg free
  6755                           
  6756                           ;IO.c: 87: do { LATE2 = 1; } while(0);
  6757  000CDC  848D               	bsf	3981,2,c	;volatile
  6758                           
  6759                           ;IO.c: 88: LED_array[3] = 1;
  6760  000CDE  0E00               	movlw	0
  6761  000CE0  0100               	movlb	0	; () banked
  6762  000CE2  6F8F               	movwf	(_LED_array+7)& (0+255),b
  6763  000CE4  0E01               	movlw	1
  6764  000CE6  6F8E               	movwf	(_LED_array+6)& (0+255),b
  6765                           
  6766                           ;IO.c: 89: } else if (state == 0) {
  6767  000CE8  0012               	return	
  6768  000CEA                     l6318:
  6769  000CEA  5021               	movf	SetLEDOut@state,w,c
  6770  000CEC  1022               	iorwf	SetLEDOut@state+1,w,c
  6771  000CEE  A4D8               	btfss	status,2,c
  6772  000CF0  D00D               	goto	l6326
  6773                           
  6774                           ;IO.c: 90: Off_Led(3);
  6775  000CF2  0E00               	movlw	0
  6776  000CF4  6E1C               	movwf	Off_Led@led+1,c
  6777  000CF6  0E03               	movlw	3
  6778  000CF8  6E1B               	movwf	Off_Led@led,c
  6779  000CFA  EC68  F010         	call	_Off_Led	;wreg free
  6780                           
  6781                           ;IO.c: 91: do { LATE2 = 0; } while(0);
  6782  000CFE  948D               	bcf	3981,2,c	;volatile
  6783                           
  6784                           ;IO.c: 92: LED_array[3] = 0;
  6785  000D00  0E00               	movlw	0
  6786  000D02  0100               	movlb	0	; () banked
  6787  000D04  6F8F               	movwf	(_LED_array+7)& (0+255),b
  6788  000D06  0E00               	movlw	0
  6789  000D08  6F8E               	movwf	(_LED_array+6)& (0+255),b
  6790                           
  6791                           ;IO.c: 93: }
  6792  000D0A  0012               	return	
  6793  000D0C                     l6326:
  6794                           
  6795                           ;IO.c: 94: else if (state == 2) {
  6796  000D0C  0E02               	movlw	2
  6797  000D0E  1821               	xorwf	SetLEDOut@state,w,c
  6798  000D10  1022               	iorwf	SetLEDOut@state+1,w,c
  6799  000D12  A4D8               	btfss	status,2,c
  6800  000D14  0012               	return	
  6801                           
  6802                           ;IO.c: 95: do { LATE2 = 0; } while(0);
  6803  000D16  948D               	bcf	3981,2,c	;volatile
  6804                           
  6805                           ;IO.c: 96: setLED(3);
  6806  000D18  0E00               	movlw	0
  6807  000D1A  6E1C               	movwf	setLED@led+1,c
  6808  000D1C  0E03               	movlw	3
  6809  000D1E  6E1B               	movwf	setLED@led,c
  6810  000D20  ECCD  F010         	call	_setLED	;wreg free
  6811                           
  6812                           ;IO.c: 97: LED_array[3] = 2;
  6813  000D24  0E00               	movlw	0
  6814  000D26  0100               	movlb	0	; () banked
  6815  000D28  6F8F               	movwf	(_LED_array+7)& (0+255),b
  6816  000D2A  0E02               	movlw	2
  6817  000D2C  6F8E               	movwf	(_LED_array+6)& (0+255),b
  6818                           
  6819                           ; BSR set to: 0
  6820                           ;IO.c: 99: }
  6821                           ;IO.c: 101: break;
  6822                           
  6823                           ; BSR set to: 0
  6824                           
  6825                           ; BSR set to: 0
  6826  000D2E  0012               	return	
  6827  000D30                     l6332:
  6828                           
  6829                           ;IO.c: 103: if (state == 1) {
  6830  000D30  0421               	decf	SetLEDOut@state,w,c
  6831  000D32  1022               	iorwf	SetLEDOut@state+1,w,c
  6832  000D34  A4D8               	btfss	status,2,c
  6833  000D36  D00D               	goto	l6340
  6834                           
  6835                           ;IO.c: 104: Off_Led(4);
  6836  000D38  0E00               	movlw	0
  6837  000D3A  6E1C               	movwf	Off_Led@led+1,c
  6838  000D3C  0E04               	movlw	4
  6839  000D3E  6E1B               	movwf	Off_Led@led,c
  6840  000D40  EC68  F010         	call	_Off_Led	;wreg free
  6841                           
  6842                           ;IO.c: 105: do { LATE1 = 1; } while(0);
  6843  000D44  828D               	bsf	3981,1,c	;volatile
  6844                           
  6845                           ;IO.c: 106: LED_array[4] = 1;
  6846  000D46  0E00               	movlw	0
  6847  000D48  0100               	movlb	0	; () banked
  6848  000D4A  6F91               	movwf	(_LED_array+9)& (0+255),b
  6849  000D4C  0E01               	movlw	1
  6850  000D4E  6F90               	movwf	(_LED_array+8)& (0+255),b
  6851                           
  6852                           ;IO.c: 107: } else if (state == 0) {
  6853  000D50  0012               	return	
  6854  000D52                     l6340:
  6855  000D52  5021               	movf	SetLEDOut@state,w,c
  6856  000D54  1022               	iorwf	SetLEDOut@state+1,w,c
  6857  000D56  A4D8               	btfss	status,2,c
  6858  000D58  D00D               	goto	l6348
  6859                           
  6860                           ;IO.c: 108: Off_Led(4);
  6861  000D5A  0E00               	movlw	0
  6862  000D5C  6E1C               	movwf	Off_Led@led+1,c
  6863  000D5E  0E04               	movlw	4
  6864  000D60  6E1B               	movwf	Off_Led@led,c
  6865  000D62  EC68  F010         	call	_Off_Led	;wreg free
  6866                           
  6867                           ;IO.c: 109: do { LATE1 = 0; } while(0);
  6868  000D66  928D               	bcf	3981,1,c	;volatile
  6869                           
  6870                           ;IO.c: 110: LED_array[4] = 0;
  6871  000D68  0E00               	movlw	0
  6872  000D6A  0100               	movlb	0	; () banked
  6873  000D6C  6F91               	movwf	(_LED_array+9)& (0+255),b
  6874  000D6E  0E00               	movlw	0
  6875  000D70  6F90               	movwf	(_LED_array+8)& (0+255),b
  6876                           
  6877                           ;IO.c: 111: }
  6878  000D72  0012               	return	
  6879  000D74                     l6348:
  6880                           
  6881                           ;IO.c: 112: else if (state == 2) {
  6882  000D74  0E02               	movlw	2
  6883  000D76  1821               	xorwf	SetLEDOut@state,w,c
  6884  000D78  1022               	iorwf	SetLEDOut@state+1,w,c
  6885  000D7A  A4D8               	btfss	status,2,c
  6886  000D7C  0012               	return	
  6887                           
  6888                           ;IO.c: 113: do { LATE1 = 0; } while(0);
  6889  000D7E  928D               	bcf	3981,1,c	;volatile
  6890                           
  6891                           ;IO.c: 114: setLED(4);
  6892  000D80  0E00               	movlw	0
  6893  000D82  6E1C               	movwf	setLED@led+1,c
  6894  000D84  0E04               	movlw	4
  6895  000D86  6E1B               	movwf	setLED@led,c
  6896  000D88  ECCD  F010         	call	_setLED	;wreg free
  6897                           
  6898                           ;IO.c: 115: LED_array[4] = 2;
  6899  000D8C  0E00               	movlw	0
  6900  000D8E  0100               	movlb	0	; () banked
  6901  000D90  6F91               	movwf	(_LED_array+9)& (0+255),b
  6902  000D92  0E02               	movlw	2
  6903  000D94  6F90               	movwf	(_LED_array+8)& (0+255),b
  6904                           
  6905                           ; BSR set to: 0
  6906                           ;IO.c: 116: }
  6907                           ;IO.c: 118: break;
  6908                           
  6909                           ; BSR set to: 0
  6910                           
  6911                           ; BSR set to: 0
  6912  000D96  0012               	return	
  6913  000D98                     l6354:
  6914                           
  6915                           ;IO.c: 120: if (state == 1) {
  6916  000D98  0421               	decf	SetLEDOut@state,w,c
  6917  000D9A  1022               	iorwf	SetLEDOut@state+1,w,c
  6918  000D9C  A4D8               	btfss	status,2,c
  6919  000D9E  D00D               	goto	l6362
  6920                           
  6921                           ;IO.c: 121: Off_Led(5);
  6922  000DA0  0E00               	movlw	0
  6923  000DA2  6E1C               	movwf	Off_Led@led+1,c
  6924  000DA4  0E05               	movlw	5
  6925  000DA6  6E1B               	movwf	Off_Led@led,c
  6926  000DA8  EC68  F010         	call	_Off_Led	;wreg free
  6927                           
  6928                           ;IO.c: 122: do { LATE0 = 1; } while(0);
  6929  000DAC  808D               	bsf	3981,0,c	;volatile
  6930                           
  6931                           ;IO.c: 123: LED_array[5] = 1;
  6932  000DAE  0E00               	movlw	0
  6933  000DB0  0100               	movlb	0	; () banked
  6934  000DB2  6F93               	movwf	(_LED_array+11)& (0+255),b
  6935  000DB4  0E01               	movlw	1
  6936  000DB6  6F92               	movwf	(_LED_array+10)& (0+255),b
  6937                           
  6938                           ;IO.c: 124: } else if (state == 0) {
  6939  000DB8  0012               	return	
  6940  000DBA                     l6362:
  6941  000DBA  5021               	movf	SetLEDOut@state,w,c
  6942  000DBC  1022               	iorwf	SetLEDOut@state+1,w,c
  6943  000DBE  A4D8               	btfss	status,2,c
  6944  000DC0  D00D               	goto	l6370
  6945                           
  6946                           ;IO.c: 125: Off_Led(5);
  6947  000DC2  0E00               	movlw	0
  6948  000DC4  6E1C               	movwf	Off_Led@led+1,c
  6949  000DC6  0E05               	movlw	5
  6950  000DC8  6E1B               	movwf	Off_Led@led,c
  6951  000DCA  EC68  F010         	call	_Off_Led	;wreg free
  6952                           
  6953                           ;IO.c: 126: do { LATE0 = 0; } while(0);
  6954  000DCE  908D               	bcf	3981,0,c	;volatile
  6955                           
  6956                           ;IO.c: 127: LED_array[5] = 0;
  6957  000DD0  0E00               	movlw	0
  6958  000DD2  0100               	movlb	0	; () banked
  6959  000DD4  6F93               	movwf	(_LED_array+11)& (0+255),b
  6960  000DD6  0E00               	movlw	0
  6961  000DD8  6F92               	movwf	(_LED_array+10)& (0+255),b
  6962                           
  6963                           ;IO.c: 128: }
  6964  000DDA  0012               	return	
  6965  000DDC                     l6370:
  6966                           
  6967                           ;IO.c: 129: else if (state == 2) {
  6968  000DDC  0E02               	movlw	2
  6969  000DDE  1821               	xorwf	SetLEDOut@state,w,c
  6970  000DE0  1022               	iorwf	SetLEDOut@state+1,w,c
  6971  000DE2  A4D8               	btfss	status,2,c
  6972  000DE4  0012               	return	
  6973                           
  6974                           ;IO.c: 130: do { LATE0 = 0; } while(0);
  6975  000DE6  908D               	bcf	3981,0,c	;volatile
  6976                           
  6977                           ;IO.c: 131: setLED(5);
  6978  000DE8  0E00               	movlw	0
  6979  000DEA  6E1C               	movwf	setLED@led+1,c
  6980  000DEC  0E05               	movlw	5
  6981  000DEE  6E1B               	movwf	setLED@led,c
  6982  000DF0  ECCD  F010         	call	_setLED	;wreg free
  6983                           
  6984                           ;IO.c: 132: LED_array[5] = 2;
  6985  000DF4  0E00               	movlw	0
  6986  000DF6  0100               	movlb	0	; () banked
  6987  000DF8  6F93               	movwf	(_LED_array+11)& (0+255),b
  6988  000DFA  0E02               	movlw	2
  6989  000DFC  6F92               	movwf	(_LED_array+10)& (0+255),b
  6990                           
  6991                           ; BSR set to: 0
  6992                           ;IO.c: 138: }
  6993                           
  6994                           ; BSR set to: 0
  6995                           ;IO.c: 134: }
  6996                           ;IO.c: 137: break;
  6997                           
  6998                           ; BSR set to: 0
  6999                           
  7000                           ; BSR set to: 0
  7001  000DFE  0012               	return	
  7002  000E00                     l6378:
  7003  000E00  C01F  F023         	movff	SetLEDOut@lednum,??_SetLEDOut
  7004  000E04  C020  F024         	movff	SetLEDOut@lednum+1,??_SetLEDOut+1
  7005                           
  7006                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7007                           ; Switch size 1, requested type "space"
  7008                           ; Number of cases is 1, Range of values is 0 to 0
  7009                           ; switch strategies available:
  7010                           ; Name         Instructions Cycles
  7011                           ; simple_byte            4     3 (average)
  7012                           ;	Chosen strategy is simple_byte
  7013  000E08  5024               	movf	??_SetLEDOut+1,w,c
  7014  000E0A  0A00               	xorlw	0	; case 0
  7015  000E0C  A4D8               	btfss	status,2,c
  7016  000E0E  0012               	return	
  7017                           
  7018                           ; Switch size 1, requested type "space"
  7019                           ; Number of cases is 6, Range of values is 0 to 5
  7020                           ; switch strategies available:
  7021                           ; Name         Instructions Cycles
  7022                           ; simple_byte           19    10 (average)
  7023                           ;	Chosen strategy is simple_byte
  7024  000E10  5023               	movf	??_SetLEDOut,w,c
  7025  000E12  0A00               	xorlw	0	; case 0
  7026  000E14  B4D8               	btfsc	status,2,c
  7027  000E16  D6BC               	goto	l6244
  7028  000E18  0A01               	xorlw	1	; case 1
  7029  000E1A  B4D8               	btfsc	status,2,c
  7030  000E1C  D6ED               	goto	l6266
  7031  000E1E  0A03               	xorlw	3	; case 2
  7032  000E20  B4D8               	btfsc	status,2,c
  7033  000E22  D71E               	goto	l6288
  7034  000E24  0A01               	xorlw	1	; case 3
  7035  000E26  B4D8               	btfsc	status,2,c
  7036  000E28  D74F               	goto	l6310
  7037  000E2A  0A07               	xorlw	7	; case 4
  7038  000E2C  B4D8               	btfsc	status,2,c
  7039  000E2E  D780               	goto	l6332
  7040  000E30  0A01               	xorlw	1	; case 5
  7041  000E32  A4D8               	btfss	status,2,c
  7042  000E34  0012               	return	
  7043  000E36  D7B0               	goto	l6354
  7044  000E38                     __end_of_SetLEDOut:
  7045                           	opt stack 0
  7046                           tosu	equ	0xFFF
  7047                           tosh	equ	0xFFE
  7048                           tosl	equ	0xFFD
  7049                           pclath	equ	0xFFA
  7050                           tblptru	equ	0xFF8
  7051                           tblptrh	equ	0xFF7
  7052                           tblptrl	equ	0xFF6
  7053                           tablat	equ	0xFF5
  7054                           prodh	equ	0xFF4
  7055                           prodl	equ	0xFF3
  7056                           intcon	equ	0xFF2
  7057                           postinc0	equ	0xFEE
  7058                           wreg	equ	0xFE8
  7059                           indf2	equ	0xFDF
  7060                           postinc2	equ	0xFDE
  7061                           postdec2	equ	0xFDD
  7062                           plusw2	equ	0xFDB
  7063                           fsr2h	equ	0xFDA
  7064                           fsr2l	equ	0xFD9
  7065                           status	equ	0xFD8
  7066                           
  7067 ;; *************** function _setLED *****************
  7068 ;; Defined at:
  7069 ;;		line 202 in file "mcc_generated_files/tmr2.c"
  7070 ;; Parameters:    Size  Location     Type
  7071 ;;  led             2   26[COMRAM] int 
  7072 ;; Auto vars:     Size  Location     Type
  7073 ;;		None
  7074 ;; Return value:  Size  Location     Type
  7075 ;;                  1    wreg      void 
  7076 ;; Registers used:
  7077 ;;		wreg, status,2, status,0
  7078 ;; Tracked objects:
  7079 ;;		On entry : 0/0
  7080 ;;		On exit  : 0/0
  7081 ;;		Unchanged: 0/0
  7082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7083 ;;      Params:         2       0       0       0       0       0       0
  7084 ;;      Locals:         0       0       0       0       0       0       0
  7085 ;;      Temps:          2       0       0       0       0       0       0
  7086 ;;      Totals:         4       0       0       0       0       0       0
  7087 ;;Total ram usage:        4 bytes
  7088 ;; Hardware stack levels used:    1
  7089 ;; Hardware stack levels required when called:    4
  7090 ;; This function calls:
  7091 ;;		Nothing
  7092 ;; This function is called by:
  7093 ;;		_SetLEDOut
  7094 ;; This function uses a non-reentrant model
  7095 ;;
  7096                           
  7097                           	psect	text28
  7098  00219A                     __ptext28:
  7099                           	opt stack 0
  7100  00219A                     _setLED:
  7101                           	opt stack 23
  7102                           
  7103                           ;tmr2.c: 203: switch (led){
  7104                           
  7105                           ;incstack = 0
  7106  00219A  D042               	goto	l6068
  7107  00219C                     l6054:
  7108                           
  7109                           ;tmr2.c: 205: LEDNUM_ENAB[0]=1;
  7110  00219C  0E00               	movlw	0
  7111  00219E  0100               	movlb	0	; () banked
  7112  0021A0  6F99               	movwf	(_LEDNUM_ENAB+1)& (0+255),b
  7113  0021A2  0E01               	movlw	1
  7114  0021A4  6F98               	movwf	_LEDNUM_ENAB& (0+255),b
  7115                           
  7116                           ;tmr2.c: 206: LEDState[0]=0;
  7117  0021A6  0E00               	movlw	0
  7118  0021A8  0100               	movlb	0	; () banked
  7119  0021AA  6FA5               	movwf	(_LEDState+1)& (0+255),b
  7120  0021AC  0E00               	movlw	0
  7121  0021AE  6FA4               	movwf	_LEDState& (0+255),b
  7122                           
  7123                           ;tmr2.c: 207: break;
  7124  0021B0  0012               	return	
  7125  0021B2                     l6056:
  7126                           
  7127                           ;tmr2.c: 209: LEDNUM_ENAB[1]=1;
  7128  0021B2  0E00               	movlw	0
  7129  0021B4  0100               	movlb	0	; () banked
  7130  0021B6  6F9B               	movwf	(_LEDNUM_ENAB+3)& (0+255),b
  7131  0021B8  0E01               	movlw	1
  7132  0021BA  6F9A               	movwf	(_LEDNUM_ENAB+2)& (0+255),b
  7133                           
  7134                           ;tmr2.c: 210: LEDState[1]=0;
  7135  0021BC  0E00               	movlw	0
  7136  0021BE  0100               	movlb	0	; () banked
  7137  0021C0  6FA7               	movwf	(_LEDState+3)& (0+255),b
  7138  0021C2  0E00               	movlw	0
  7139  0021C4  6FA6               	movwf	(_LEDState+2)& (0+255),b
  7140                           
  7141                           ;tmr2.c: 211: break;
  7142  0021C6  0012               	return	
  7143  0021C8                     l6058:
  7144                           
  7145                           ;tmr2.c: 213: LEDNUM_ENAB[2]=1;
  7146  0021C8  0E00               	movlw	0
  7147  0021CA  0100               	movlb	0	; () banked
  7148  0021CC  6F9D               	movwf	(_LEDNUM_ENAB+5)& (0+255),b
  7149  0021CE  0E01               	movlw	1
  7150  0021D0  6F9C               	movwf	(_LEDNUM_ENAB+4)& (0+255),b
  7151                           
  7152                           ;tmr2.c: 214: LEDState[2]=0;
  7153  0021D2  0E00               	movlw	0
  7154  0021D4  0100               	movlb	0	; () banked
  7155  0021D6  6FA9               	movwf	(_LEDState+5)& (0+255),b
  7156  0021D8  0E00               	movlw	0
  7157  0021DA  6FA8               	movwf	(_LEDState+4)& (0+255),b
  7158                           
  7159                           ;tmr2.c: 215: break;
  7160  0021DC  0012               	return	
  7161  0021DE                     l6060:
  7162                           
  7163                           ;tmr2.c: 217: LEDNUM_ENAB[3]=1;
  7164  0021DE  0E00               	movlw	0
  7165  0021E0  0100               	movlb	0	; () banked
  7166  0021E2  6F9F               	movwf	(_LEDNUM_ENAB+7)& (0+255),b
  7167  0021E4  0E01               	movlw	1
  7168  0021E6  6F9E               	movwf	(_LEDNUM_ENAB+6)& (0+255),b
  7169                           
  7170                           ;tmr2.c: 218: LEDState[3]=0;
  7171  0021E8  0E00               	movlw	0
  7172  0021EA  0100               	movlb	0	; () banked
  7173  0021EC  6FAB               	movwf	(_LEDState+7)& (0+255),b
  7174  0021EE  0E00               	movlw	0
  7175  0021F0  6FAA               	movwf	(_LEDState+6)& (0+255),b
  7176                           
  7177                           ;tmr2.c: 219: break;
  7178  0021F2  0012               	return	
  7179  0021F4                     l6062:
  7180                           
  7181                           ;tmr2.c: 221: LEDNUM_ENAB[4]=1;
  7182  0021F4  0E00               	movlw	0
  7183  0021F6  0100               	movlb	0	; () banked
  7184  0021F8  6FA1               	movwf	(_LEDNUM_ENAB+9)& (0+255),b
  7185  0021FA  0E01               	movlw	1
  7186  0021FC  6FA0               	movwf	(_LEDNUM_ENAB+8)& (0+255),b
  7187                           
  7188                           ;tmr2.c: 222: LEDState[4]=0;
  7189  0021FE  0E00               	movlw	0
  7190  002200  0100               	movlb	0	; () banked
  7191  002202  6FAD               	movwf	(_LEDState+9)& (0+255),b
  7192  002204  0E00               	movlw	0
  7193  002206  6FAC               	movwf	(_LEDState+8)& (0+255),b
  7194                           
  7195                           ;tmr2.c: 223: break;
  7196  002208  0012               	return	
  7197  00220A                     l6064:
  7198                           
  7199                           ;tmr2.c: 225: LEDNUM_ENAB[5]=1;
  7200  00220A  0E00               	movlw	0
  7201  00220C  0100               	movlb	0	; () banked
  7202  00220E  6FA3               	movwf	(_LEDNUM_ENAB+11)& (0+255),b
  7203  002210  0E01               	movlw	1
  7204  002212  6FA2               	movwf	(_LEDNUM_ENAB+10)& (0+255),b
  7205                           
  7206                           ;tmr2.c: 226: LEDState[5]=0;
  7207  002214  0E00               	movlw	0
  7208  002216  0100               	movlb	0	; () banked
  7209  002218  6FAF               	movwf	(_LEDState+11)& (0+255),b
  7210  00221A  0E00               	movlw	0
  7211  00221C  6FAE               	movwf	(_LEDState+10)& (0+255),b
  7212                           
  7213                           ; BSR set to: 0
  7214                           ;tmr2.c: 228: }
  7215                           
  7216                           ;tmr2.c: 227: break;
  7217  00221E  0012               	return	
  7218  002220                     l6068:
  7219  002220  C01B  F01D         	movff	setLED@led,??_setLED
  7220  002224  C01C  F01E         	movff	setLED@led+1,??_setLED+1
  7221                           
  7222                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7223                           ; Switch size 1, requested type "space"
  7224                           ; Number of cases is 1, Range of values is 0 to 0
  7225                           ; switch strategies available:
  7226                           ; Name         Instructions Cycles
  7227                           ; simple_byte            4     3 (average)
  7228                           ;	Chosen strategy is simple_byte
  7229  002228  501E               	movf	??_setLED+1,w,c
  7230  00222A  0A00               	xorlw	0	; case 0
  7231  00222C  A4D8               	btfss	status,2,c
  7232  00222E  0012               	return	
  7233                           
  7234                           ; Switch size 1, requested type "space"
  7235                           ; Number of cases is 6, Range of values is 0 to 5
  7236                           ; switch strategies available:
  7237                           ; Name         Instructions Cycles
  7238                           ; simple_byte           19    10 (average)
  7239                           ;	Chosen strategy is simple_byte
  7240  002230  501D               	movf	??_setLED,w,c
  7241  002232  0A00               	xorlw	0	; case 0
  7242  002234  B4D8               	btfsc	status,2,c
  7243  002236  D7B2               	goto	l6054
  7244  002238  0A01               	xorlw	1	; case 1
  7245  00223A  B4D8               	btfsc	status,2,c
  7246  00223C  D7BA               	goto	l6056
  7247  00223E  0A03               	xorlw	3	; case 2
  7248  002240  B4D8               	btfsc	status,2,c
  7249  002242  D7C2               	goto	l6058
  7250  002244  0A01               	xorlw	1	; case 3
  7251  002246  B4D8               	btfsc	status,2,c
  7252  002248  D7CA               	goto	l6060
  7253  00224A  0A07               	xorlw	7	; case 4
  7254  00224C  B4D8               	btfsc	status,2,c
  7255  00224E  D7D2               	goto	l6062
  7256  002250  0A01               	xorlw	1	; case 5
  7257  002252  A4D8               	btfss	status,2,c
  7258  002254  0012               	return	
  7259  002256  D7D9               	goto	l6064
  7260  002258                     __end_of_setLED:
  7261                           	opt stack 0
  7262                           tosu	equ	0xFFF
  7263                           tosh	equ	0xFFE
  7264                           tosl	equ	0xFFD
  7265                           pclath	equ	0xFFA
  7266                           tblptru	equ	0xFF8
  7267                           tblptrh	equ	0xFF7
  7268                           tblptrl	equ	0xFF6
  7269                           tablat	equ	0xFF5
  7270                           prodh	equ	0xFF4
  7271                           prodl	equ	0xFF3
  7272                           intcon	equ	0xFF2
  7273                           postinc0	equ	0xFEE
  7274                           wreg	equ	0xFE8
  7275                           indf2	equ	0xFDF
  7276                           postinc2	equ	0xFDE
  7277                           postdec2	equ	0xFDD
  7278                           plusw2	equ	0xFDB
  7279                           fsr2h	equ	0xFDA
  7280                           fsr2l	equ	0xFD9
  7281                           status	equ	0xFD8
  7282                           
  7283 ;; *************** function _Off_Led *****************
  7284 ;; Defined at:
  7285 ;;		line 230 in file "mcc_generated_files/tmr2.c"
  7286 ;; Parameters:    Size  Location     Type
  7287 ;;  led             2   26[COMRAM] int 
  7288 ;; Auto vars:     Size  Location     Type
  7289 ;;		None
  7290 ;; Return value:  Size  Location     Type
  7291 ;;                  1    wreg      void 
  7292 ;; Registers used:
  7293 ;;		wreg, status,2, status,0
  7294 ;; Tracked objects:
  7295 ;;		On entry : 0/0
  7296 ;;		On exit  : 0/0
  7297 ;;		Unchanged: 0/0
  7298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7299 ;;      Params:         2       0       0       0       0       0       0
  7300 ;;      Locals:         0       0       0       0       0       0       0
  7301 ;;      Temps:          2       0       0       0       0       0       0
  7302 ;;      Totals:         4       0       0       0       0       0       0
  7303 ;;Total ram usage:        4 bytes
  7304 ;; Hardware stack levels used:    1
  7305 ;; Hardware stack levels required when called:    4
  7306 ;; This function calls:
  7307 ;;		Nothing
  7308 ;; This function is called by:
  7309 ;;		_SetLEDOut
  7310 ;; This function uses a non-reentrant model
  7311 ;;
  7312                           
  7313                           	psect	text29
  7314  0020D0                     __ptext29:
  7315                           	opt stack 0
  7316  0020D0                     _Off_Led:
  7317                           	opt stack 23
  7318                           
  7319                           ;tmr2.c: 231: switch (led){
  7320                           
  7321                           ;incstack = 0
  7322  0020D0  D048               	goto	l6102
  7323  0020D2                     l6076:
  7324                           
  7325                           ;tmr2.c: 233: LEDNUM_ENAB[0]=0;
  7326  0020D2  0E00               	movlw	0
  7327  0020D4  0100               	movlb	0	; () banked
  7328  0020D6  6F99               	movwf	(_LEDNUM_ENAB+1)& (0+255),b
  7329  0020D8  0E00               	movlw	0
  7330  0020DA  6F98               	movwf	_LEDNUM_ENAB& (0+255),b
  7331                           
  7332                           ;tmr2.c: 234: LEDState[0]=0;
  7333  0020DC  0E00               	movlw	0
  7334  0020DE  0100               	movlb	0	; () banked
  7335  0020E0  6FA5               	movwf	(_LEDState+1)& (0+255),b
  7336  0020E2  0E00               	movlw	0
  7337  0020E4  6FA4               	movwf	_LEDState& (0+255),b
  7338                           
  7339                           ; BSR set to: 0
  7340                           
  7341                           ; BSR set to: 0
  7342                           
  7343                           ;tmr2.c: 235: do { LATB3 = 0; } while(0);
  7344  0020E6  968A               	bcf	3978,3,c	;volatile
  7345                           
  7346                           ; BSR set to: 0
  7347                           ;tmr2.c: 236: break;
  7348  0020E8  0012               	return	
  7349  0020EA                     l6080:
  7350                           
  7351                           ;tmr2.c: 238: LEDNUM_ENAB[1]=0;
  7352  0020EA  0E00               	movlw	0
  7353  0020EC  0100               	movlb	0	; () banked
  7354  0020EE  6F9B               	movwf	(_LEDNUM_ENAB+3)& (0+255),b
  7355  0020F0  0E00               	movlw	0
  7356  0020F2  6F9A               	movwf	(_LEDNUM_ENAB+2)& (0+255),b
  7357                           
  7358                           ;tmr2.c: 239: LEDState[1]=0;
  7359  0020F4  0E00               	movlw	0
  7360  0020F6  0100               	movlb	0	; () banked
  7361  0020F8  6FA7               	movwf	(_LEDState+3)& (0+255),b
  7362  0020FA  0E00               	movlw	0
  7363  0020FC  6FA6               	movwf	(_LEDState+2)& (0+255),b
  7364                           
  7365                           ; BSR set to: 0
  7366                           
  7367                           ; BSR set to: 0
  7368                           
  7369                           ;tmr2.c: 240: do { LATB5 = 0; } while(0);
  7370  0020FE  9A8A               	bcf	3978,5,c	;volatile
  7371                           
  7372                           ; BSR set to: 0
  7373                           ;tmr2.c: 241: break;
  7374  002100  0012               	return	
  7375  002102                     l6084:
  7376                           
  7377                           ;tmr2.c: 243: LEDNUM_ENAB[2]=0;
  7378  002102  0E00               	movlw	0
  7379  002104  0100               	movlb	0	; () banked
  7380  002106  6F9D               	movwf	(_LEDNUM_ENAB+5)& (0+255),b
  7381  002108  0E00               	movlw	0
  7382  00210A  6F9C               	movwf	(_LEDNUM_ENAB+4)& (0+255),b
  7383                           
  7384                           ;tmr2.c: 244: LEDState[2]=0;
  7385  00210C  0E00               	movlw	0
  7386  00210E  0100               	movlb	0	; () banked
  7387  002110  6FA9               	movwf	(_LEDState+5)& (0+255),b
  7388  002112  0E00               	movlw	0
  7389  002114  6FA8               	movwf	(_LEDState+4)& (0+255),b
  7390                           
  7391                           ; BSR set to: 0
  7392                           
  7393                           ; BSR set to: 0
  7394                           
  7395                           ;tmr2.c: 245: do { LATD1 = 0; } while(0);
  7396  002116  928C               	bcf	3980,1,c	;volatile
  7397                           
  7398                           ; BSR set to: 0
  7399                           ;tmr2.c: 246: break;
  7400  002118  0012               	return	
  7401  00211A                     l6088:
  7402                           
  7403                           ;tmr2.c: 248: LEDNUM_ENAB[3]=0;
  7404  00211A  0E00               	movlw	0
  7405  00211C  0100               	movlb	0	; () banked
  7406  00211E  6F9F               	movwf	(_LEDNUM_ENAB+7)& (0+255),b
  7407  002120  0E00               	movlw	0
  7408  002122  6F9E               	movwf	(_LEDNUM_ENAB+6)& (0+255),b
  7409                           
  7410                           ;tmr2.c: 249: LEDState[3]=0;
  7411  002124  0E00               	movlw	0
  7412  002126  0100               	movlb	0	; () banked
  7413  002128  6FAB               	movwf	(_LEDState+7)& (0+255),b
  7414  00212A  0E00               	movlw	0
  7415  00212C  6FAA               	movwf	(_LEDState+6)& (0+255),b
  7416                           
  7417                           ; BSR set to: 0
  7418                           
  7419                           ; BSR set to: 0
  7420                           
  7421                           ;tmr2.c: 250: do { LATE2 = 0; } while(0);
  7422  00212E  948D               	bcf	3981,2,c	;volatile
  7423                           
  7424                           ; BSR set to: 0
  7425                           ;tmr2.c: 251: break;
  7426  002130  0012               	return	
  7427  002132                     l6092:
  7428                           
  7429                           ;tmr2.c: 253: LEDNUM_ENAB[4]=0;
  7430  002132  0E00               	movlw	0
  7431  002134  0100               	movlb	0	; () banked
  7432  002136  6FA1               	movwf	(_LEDNUM_ENAB+9)& (0+255),b
  7433  002138  0E00               	movlw	0
  7434  00213A  6FA0               	movwf	(_LEDNUM_ENAB+8)& (0+255),b
  7435                           
  7436                           ;tmr2.c: 254: LEDState[4]=0;
  7437  00213C  0E00               	movlw	0
  7438  00213E  0100               	movlb	0	; () banked
  7439  002140  6FAD               	movwf	(_LEDState+9)& (0+255),b
  7440  002142  0E00               	movlw	0
  7441  002144  6FAC               	movwf	(_LEDState+8)& (0+255),b
  7442                           
  7443                           ; BSR set to: 0
  7444                           
  7445                           ; BSR set to: 0
  7446                           
  7447                           ;tmr2.c: 255: do { LATE1 = 0; } while(0);
  7448  002146  928D               	bcf	3981,1,c	;volatile
  7449                           
  7450                           ; BSR set to: 0
  7451                           ;tmr2.c: 256: break;
  7452  002148  0012               	return	
  7453  00214A                     l6096:
  7454                           
  7455                           ;tmr2.c: 258: LEDNUM_ENAB[5]=0;
  7456  00214A  0E00               	movlw	0
  7457  00214C  0100               	movlb	0	; () banked
  7458  00214E  6FA3               	movwf	(_LEDNUM_ENAB+11)& (0+255),b
  7459  002150  0E00               	movlw	0
  7460  002152  6FA2               	movwf	(_LEDNUM_ENAB+10)& (0+255),b
  7461                           
  7462                           ;tmr2.c: 259: LEDState[5]=0;
  7463  002154  0E00               	movlw	0
  7464  002156  0100               	movlb	0	; () banked
  7465  002158  6FAF               	movwf	(_LEDState+11)& (0+255),b
  7466  00215A  0E00               	movlw	0
  7467  00215C  6FAE               	movwf	(_LEDState+10)& (0+255),b
  7468                           
  7469                           ; BSR set to: 0
  7470                           
  7471                           ; BSR set to: 0
  7472                           
  7473                           ;tmr2.c: 260: do { LATE0 = 0; } while(0) ;
  7474  00215E  908D               	bcf	3981,0,c	;volatile
  7475                           
  7476                           ; BSR set to: 0
  7477                           ;tmr2.c: 262: }
  7478                           
  7479                           ; BSR set to: 0
  7480                           ;tmr2.c: 261: break;
  7481  002160  0012               	return	
  7482  002162                     l6102:
  7483  002162  C01B  F01D         	movff	Off_Led@led,??_Off_Led
  7484  002166  C01C  F01E         	movff	Off_Led@led+1,??_Off_Led+1
  7485                           
  7486                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7487                           ; Switch size 1, requested type "space"
  7488                           ; Number of cases is 1, Range of values is 0 to 0
  7489                           ; switch strategies available:
  7490                           ; Name         Instructions Cycles
  7491                           ; simple_byte            4     3 (average)
  7492                           ;	Chosen strategy is simple_byte
  7493  00216A  501E               	movf	??_Off_Led+1,w,c
  7494  00216C  0A00               	xorlw	0	; case 0
  7495  00216E  A4D8               	btfss	status,2,c
  7496  002170  0012               	return	
  7497                           
  7498                           ; Switch size 1, requested type "space"
  7499                           ; Number of cases is 6, Range of values is 0 to 5
  7500                           ; switch strategies available:
  7501                           ; Name         Instructions Cycles
  7502                           ; simple_byte           19    10 (average)
  7503                           ;	Chosen strategy is simple_byte
  7504  002172  501D               	movf	??_Off_Led,w,c
  7505  002174  0A00               	xorlw	0	; case 0
  7506  002176  B4D8               	btfsc	status,2,c
  7507  002178  D7AC               	goto	l6076
  7508  00217A  0A01               	xorlw	1	; case 1
  7509  00217C  B4D8               	btfsc	status,2,c
  7510  00217E  D7B5               	goto	l6080
  7511  002180  0A03               	xorlw	3	; case 2
  7512  002182  B4D8               	btfsc	status,2,c
  7513  002184  D7BE               	goto	l6084
  7514  002186  0A01               	xorlw	1	; case 3
  7515  002188  B4D8               	btfsc	status,2,c
  7516  00218A  D7C7               	goto	l6088
  7517  00218C  0A07               	xorlw	7	; case 4
  7518  00218E  B4D8               	btfsc	status,2,c
  7519  002190  D7D0               	goto	l6092
  7520  002192  0A01               	xorlw	1	; case 5
  7521  002194  A4D8               	btfss	status,2,c
  7522  002196  0012               	return	
  7523  002198  D7D8               	goto	l6096
  7524  00219A                     __end_of_Off_Led:
  7525                           	opt stack 0
  7526                           tosu	equ	0xFFF
  7527                           tosh	equ	0xFFE
  7528                           tosl	equ	0xFFD
  7529                           pclath	equ	0xFFA
  7530                           tblptru	equ	0xFF8
  7531                           tblptrh	equ	0xFF7
  7532                           tblptrl	equ	0xFF6
  7533                           tablat	equ	0xFF5
  7534                           prodh	equ	0xFF4
  7535                           prodl	equ	0xFF3
  7536                           intcon	equ	0xFF2
  7537                           postinc0	equ	0xFEE
  7538                           wreg	equ	0xFE8
  7539                           indf2	equ	0xFDF
  7540                           postinc2	equ	0xFDE
  7541                           postdec2	equ	0xFDD
  7542                           plusw2	equ	0xFDB
  7543                           fsr2h	equ	0xFDA
  7544                           fsr2l	equ	0xFD9
  7545                           status	equ	0xFD8
  7546                           
  7547 ;; *************** function _TBbarGraphs *****************
  7548 ;; Defined at:
  7549 ;;		line 43 in file "Communications.c"
  7550 ;; Parameters:    Size  Location     Type
  7551 ;;  t               2   26[COMRAM] int 
  7552 ;;  b               2   28[COMRAM] int 
  7553 ;; Auto vars:     Size  Location     Type
  7554 ;;		None
  7555 ;; Return value:  Size  Location     Type
  7556 ;;                  1    wreg      void 
  7557 ;; Registers used:
  7558 ;;		None
  7559 ;; Tracked objects:
  7560 ;;		On entry : 0/0
  7561 ;;		On exit  : 0/0
  7562 ;;		Unchanged: 0/0
  7563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7564 ;;      Params:         4       0       0       0       0       0       0
  7565 ;;      Locals:         0       0       0       0       0       0       0
  7566 ;;      Temps:          0       0       0       0       0       0       0
  7567 ;;      Totals:         4       0       0       0       0       0       0
  7568 ;;Total ram usage:        4 bytes
  7569 ;; Hardware stack levels used:    1
  7570 ;; Hardware stack levels required when called:    4
  7571 ;; This function calls:
  7572 ;;		Nothing
  7573 ;; This function is called by:
  7574 ;;		_updateComms
  7575 ;; This function uses a non-reentrant model
  7576 ;;
  7577                           
  7578                           	psect	text30
  7579  002FDC                     __ptext30:
  7580                           	opt stack 0
  7581  002FDC                     _TBbarGraphs:
  7582                           	opt stack 25
  7583                           
  7584                           ;Communications.c: 44: throttle = t;
  7585                           
  7586                           ;incstack = 0
  7587  002FDC  C01B  F0DB         	movff	TBbarGraphs@t,_throttle
  7588  002FE0  C01C  F0DC         	movff	TBbarGraphs@t+1,_throttle+1
  7589                           
  7590                           ;Communications.c: 45: brake = b;
  7591  002FE4  C01D  F0C7         	movff	TBbarGraphs@b,_brake
  7592  002FE8  C01E  F0C8         	movff	TBbarGraphs@b+1,_brake+1
  7593  002FEC  0012               	return		;funcret
  7594  002FEE                     __end_of_TBbarGraphs:
  7595                           	opt stack 0
  7596                           tosu	equ	0xFFF
  7597                           tosh	equ	0xFFE
  7598                           tosl	equ	0xFFD
  7599                           pclath	equ	0xFFA
  7600                           tblptru	equ	0xFF8
  7601                           tblptrh	equ	0xFF7
  7602                           tblptrl	equ	0xFF6
  7603                           tablat	equ	0xFF5
  7604                           prodh	equ	0xFF4
  7605                           prodl	equ	0xFF3
  7606                           intcon	equ	0xFF2
  7607                           postinc0	equ	0xFEE
  7608                           wreg	equ	0xFE8
  7609                           indf2	equ	0xFDF
  7610                           postinc2	equ	0xFDE
  7611                           postdec2	equ	0xFDD
  7612                           plusw2	equ	0xFDB
  7613                           fsr2h	equ	0xFDA
  7614                           fsr2l	equ	0xFD9
  7615                           status	equ	0xFD8
  7616                           
  7617 ;; *************** function ___lwtoft *****************
  7618 ;; Defined at:
  7619 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwtoft.c"
  7620 ;; Parameters:    Size  Location     Type
  7621 ;;  c               2   34[COMRAM] unsigned int 
  7622 ;; Auto vars:     Size  Location     Type
  7623 ;;		None
  7624 ;; Return value:  Size  Location     Type
  7625 ;;                  3   34[COMRAM] float 
  7626 ;; Registers used:
  7627 ;;		wreg, status,2, status,0, cstack
  7628 ;; Tracked objects:
  7629 ;;		On entry : 0/0
  7630 ;;		On exit  : 0/0
  7631 ;;		Unchanged: 0/0
  7632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7633 ;;      Params:         3       0       0       0       0       0       0
  7634 ;;      Locals:         0       0       0       0       0       0       0
  7635 ;;      Temps:          0       0       0       0       0       0       0
  7636 ;;      Totals:         3       0       0       0       0       0       0
  7637 ;;Total ram usage:        3 bytes
  7638 ;; Hardware stack levels used:    1
  7639 ;; Hardware stack levels required when called:    5
  7640 ;; This function calls:
  7641 ;;		___ftpack
  7642 ;; This function is called by:
  7643 ;;		_main
  7644 ;; This function uses a non-reentrant model
  7645 ;;
  7646                           
  7647                           	psect	text31
  7648  002EAA                     __ptext31:
  7649                           	opt stack 0
  7650  002EAA                     ___lwtoft:
  7651                           	opt stack 25
  7652                           
  7653                           ;incstack = 0
  7654  002EAA  C023  F01B         	movff	___lwtoft@c,___ftpack@arg
  7655  002EAE  C024  F01C         	movff	___lwtoft@c+1,___ftpack@arg+1
  7656  002EB2  6A1D               	clrf	___ftpack@arg+2,c
  7657  002EB4  0E8E               	movlw	142
  7658  002EB6  6E1E               	movwf	___ftpack@exp,c
  7659  002EB8  0E00               	movlw	0
  7660  002EBA  6E1F               	movwf	___ftpack@sign,c
  7661  002EBC  EC89  F011         	call	___ftpack	;wreg free
  7662  002EC0  C01B  F023         	movff	?___ftpack,?___lwtoft
  7663  002EC4  C01C  F024         	movff	?___ftpack+1,?___lwtoft+1
  7664  002EC8  C01D  F025         	movff	?___ftpack+2,?___lwtoft+2
  7665  002ECC  0012               	return	
  7666  002ECE                     __end_of___lwtoft:
  7667                           	opt stack 0
  7668                           tosu	equ	0xFFF
  7669                           tosh	equ	0xFFE
  7670                           tosl	equ	0xFFD
  7671                           pclath	equ	0xFFA
  7672                           tblptru	equ	0xFF8
  7673                           tblptrh	equ	0xFF7
  7674                           tblptrl	equ	0xFF6
  7675                           tablat	equ	0xFF5
  7676                           prodh	equ	0xFF4
  7677                           prodl	equ	0xFF3
  7678                           intcon	equ	0xFF2
  7679                           postinc0	equ	0xFEE
  7680                           wreg	equ	0xFE8
  7681                           indf2	equ	0xFDF
  7682                           postinc2	equ	0xFDE
  7683                           postdec2	equ	0xFDD
  7684                           plusw2	equ	0xFDB
  7685                           fsr2h	equ	0xFDA
  7686                           fsr2l	equ	0xFD9
  7687                           status	equ	0xFD8
  7688                           
  7689 ;; *************** function ___fttol *****************
  7690 ;; Defined at:
  7691 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\fttol.c"
  7692 ;; Parameters:    Size  Location     Type
  7693 ;;  f1              3    0[BANK1 ] float 
  7694 ;; Auto vars:     Size  Location     Type
  7695 ;;  lval            4   10[BANK1 ] unsigned long 
  7696 ;;  exp1            1   14[BANK1 ] unsigned char 
  7697 ;;  sign1           1    9[BANK1 ] unsigned char 
  7698 ;; Return value:  Size  Location     Type
  7699 ;;                  4    0[BANK1 ] long 
  7700 ;; Registers used:
  7701 ;;		wreg, status,2, status,0
  7702 ;; Tracked objects:
  7703 ;;		On entry : 0/0
  7704 ;;		On exit  : 0/0
  7705 ;;		Unchanged: 0/0
  7706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7707 ;;      Params:         0       0       4       0       0       0       0
  7708 ;;      Locals:         0       0       6       0       0       0       0
  7709 ;;      Temps:          0       0       5       0       0       0       0
  7710 ;;      Totals:         0       0      15       0       0       0       0
  7711 ;;Total ram usage:       15 bytes
  7712 ;; Hardware stack levels used:    1
  7713 ;; Hardware stack levels required when called:    4
  7714 ;; This function calls:
  7715 ;;		Nothing
  7716 ;; This function is called by:
  7717 ;;		_main
  7718 ;; This function uses a non-reentrant model
  7719 ;;
  7720                           
  7721                           	psect	text32
  7722  001538                     __ptext32:
  7723                           	opt stack 0
  7724  001538                     ___fttol:
  7725                           	opt stack 26
  7726                           
  7727                           ;incstack = 0
  7728  001538  C13B  F13D         	movff	___fttol@f1+2,??___fttol
  7729  00153C  0101               	movlb	1	; () banked
  7730  00153E  6B3E               	clrf	(??___fttol+1)& (0+255),b
  7731  001540  6B3F               	clrf	(??___fttol+2)& (0+255),b
  7732  001542  0101               	movlb	1	; () banked
  7733  001544  353A               	rlcf	(___fttol@f1+1)& (0+255),w,b
  7734  001546  0101               	movlb	1	; () banked
  7735  001548  373D               	rlcf	??___fttol& (0+255),f,b
  7736  00154A  E301               	bnc	u8421
  7737  00154C  813E               	bsf	(??___fttol+1)& (0+255),0,b
  7738  00154E                     u8421:
  7739  00154E  0101               	movlb	1	; () banked
  7740  001550  513D               	movf	??___fttol& (0+255),w,b
  7741  001552  0101               	movlb	1	; () banked
  7742  001554  6F47               	movwf	___fttol@exp1& (0+255),b
  7743  001556  0101               	movlb	1	; () banked
  7744  001558  5147               	movf	___fttol@exp1& (0+255),w,b
  7745  00155A  A4D8               	btfss	status,2,c
  7746  00155C  D00A               	goto	l7378
  7747                           
  7748                           ; BSR set to: 1
  7749  00155E  0E00               	movlw	0
  7750  001560  0101               	movlb	1	; () banked
  7751  001562  6F39               	movwf	?___fttol& (0+255),b
  7752  001564  0E00               	movlw	0
  7753  001566  6F3A               	movwf	(?___fttol+1)& (0+255),b
  7754  001568  0E00               	movlw	0
  7755  00156A  6F3B               	movwf	(?___fttol+2)& (0+255),b
  7756  00156C  0E00               	movlw	0
  7757  00156E  6F3C               	movwf	(?___fttol+3)& (0+255),b
  7758                           
  7759                           ; BSR set to: 1
  7760  001570  0012               	return	
  7761  001572                     l7378:
  7762                           
  7763                           ; BSR set to: 1
  7764  001572  0E17               	movlw	23
  7765  001574  0101               	movlb	1	; () banked
  7766  001576  6F3D               	movwf	??___fttol& (0+255),b
  7767  001578  C139  F13E         	movff	___fttol@f1,??___fttol+1
  7768  00157C  C13A  F13F         	movff	___fttol@f1+1,??___fttol+2
  7769  001580  C13B  F140         	movff	___fttol@f1+2,??___fttol+3
  7770  001584  0101               	movlb	1	; () banked
  7771  001586  293D               	incf	??___fttol& (0+255),w,b
  7772  001588  0101               	movlb	1	; () banked
  7773  00158A  6F41               	movwf	(??___fttol+4)& (0+255),b
  7774  00158C  D005               	goto	u8440
  7775  00158E                     u8445:
  7776  00158E  0101               	movlb	1	; () banked
  7777  001590  90D8               	bcf	status,0,c
  7778  001592  3340               	rrcf	(??___fttol+3)& (0+255),f,b
  7779  001594  333F               	rrcf	(??___fttol+2)& (0+255),f,b
  7780  001596  333E               	rrcf	(??___fttol+1)& (0+255),f,b
  7781  001598                     u8440:
  7782  001598  0101               	movlb	1	; () banked
  7783  00159A  2F41               	decfsz	(??___fttol+4)& (0+255),f,b
  7784  00159C  D7F8               	goto	u8445
  7785  00159E  0101               	movlb	1	; () banked
  7786  0015A0  513E               	movf	(??___fttol+1)& (0+255),w,b
  7787  0015A2  0101               	movlb	1	; () banked
  7788  0015A4  6F42               	movwf	___fttol@sign1& (0+255),b
  7789                           
  7790                           ; BSR set to: 1
  7791  0015A6  0101               	movlb	1	; () banked
  7792  0015A8  8F3A               	bsf	(___fttol@f1+1)& (0+255),7,b
  7793                           
  7794                           ; BSR set to: 1
  7795  0015AA  0EFF               	movlw	255
  7796  0015AC  0101               	movlb	1	; () banked
  7797  0015AE  1739               	andwf	___fttol@f1& (0+255),f,b
  7798  0015B0  0EFF               	movlw	255
  7799  0015B2  0101               	movlb	1	; () banked
  7800  0015B4  173A               	andwf	(___fttol@f1+1)& (0+255),f,b
  7801  0015B6  0E00               	movlw	0
  7802  0015B8  0101               	movlb	1	; () banked
  7803  0015BA  173B               	andwf	(___fttol@f1+2)& (0+255),f,b
  7804                           
  7805                           ; BSR set to: 1
  7806  0015BC  0101               	movlb	1	; () banked
  7807  0015BE  5139               	movf	___fttol@f1& (0+255),w,b
  7808  0015C0  0101               	movlb	1	; () banked
  7809  0015C2  6F43               	movwf	___fttol@lval& (0+255),b
  7810  0015C4  0101               	movlb	1	; () banked
  7811  0015C6  513A               	movf	(___fttol@f1+1)& (0+255),w,b
  7812  0015C8  0101               	movlb	1	; () banked
  7813  0015CA  6F44               	movwf	(___fttol@lval+1)& (0+255),b
  7814  0015CC  0101               	movlb	1	; () banked
  7815  0015CE  513B               	movf	(___fttol@f1+2)& (0+255),w,b
  7816  0015D0  0101               	movlb	1	; () banked
  7817  0015D2  6F45               	movwf	(___fttol@lval+2)& (0+255),b
  7818  0015D4  0101               	movlb	1	; () banked
  7819  0015D6  6B46               	clrf	(___fttol@lval+3)& (0+255),b
  7820                           
  7821                           ; BSR set to: 1
  7822  0015D8  0E8E               	movlw	142
  7823  0015DA  0101               	movlb	1	; () banked
  7824  0015DC  5F47               	subwf	___fttol@exp1& (0+255),f,b
  7825                           
  7826                           ; BSR set to: 1
  7827  0015DE  0101               	movlb	1	; () banked
  7828  0015E0  AF47               	btfss	___fttol@exp1& (0+255),7,b
  7829  0015E2  D01A               	goto	l7400
  7830                           
  7831                           ; BSR set to: 1
  7832  0015E4  0101               	movlb	1	; () banked
  7833  0015E6  5147               	movf	___fttol@exp1& (0+255),w,b
  7834  0015E8  0A80               	xorlw	128
  7835  0015EA  0F8F               	addlw	143
  7836  0015EC  B0D8               	btfsc	status,0,c
  7837  0015EE  D00A               	goto	l7396
  7838                           
  7839                           ; BSR set to: 1
  7840  0015F0  0E00               	movlw	0
  7841  0015F2  0101               	movlb	1	; () banked
  7842  0015F4  6F39               	movwf	?___fttol& (0+255),b
  7843  0015F6  0E00               	movlw	0
  7844  0015F8  6F3A               	movwf	(?___fttol+1)& (0+255),b
  7845  0015FA  0E00               	movlw	0
  7846  0015FC  6F3B               	movwf	(?___fttol+2)& (0+255),b
  7847  0015FE  0E00               	movlw	0
  7848  001600  6F3C               	movwf	(?___fttol+3)& (0+255),b
  7849                           
  7850                           ; BSR set to: 1
  7851  001602  0012               	return	
  7852  001604                     l7396:
  7853                           
  7854                           ; BSR set to: 1
  7855  001604  0101               	movlb	1	; () banked
  7856  001606  90D8               	bcf	status,0,c
  7857  001608  3346               	rrcf	(___fttol@lval+3)& (0+255),f,b
  7858  00160A  3345               	rrcf	(___fttol@lval+2)& (0+255),f,b
  7859  00160C  3344               	rrcf	(___fttol@lval+1)& (0+255),f,b
  7860  00160E  3343               	rrcf	___fttol@lval& (0+255),f,b
  7861                           
  7862                           ; BSR set to: 1
  7863  001610  0101               	movlb	1	; () banked
  7864  001612  3F47               	incfsz	___fttol@exp1& (0+255),f,b
  7865  001614  D7F7               	goto	l7396
  7866                           
  7867                           ; BSR set to: 1
  7868  001616  D01B               	goto	l7410
  7869  001618                     l7400:
  7870                           
  7871                           ; BSR set to: 1
  7872  001618  0E17               	movlw	23
  7873  00161A  0101               	movlb	1	; () banked
  7874  00161C  6547               	cpfsgt	___fttol@exp1& (0+255),b
  7875  00161E  D012               	goto	l7408
  7876                           
  7877                           ; BSR set to: 1
  7878  001620  0E00               	movlw	0
  7879  001622  0101               	movlb	1	; () banked
  7880  001624  6F39               	movwf	?___fttol& (0+255),b
  7881  001626  0E00               	movlw	0
  7882  001628  6F3A               	movwf	(?___fttol+1)& (0+255),b
  7883  00162A  0E00               	movlw	0
  7884  00162C  6F3B               	movwf	(?___fttol+2)& (0+255),b
  7885  00162E  0E00               	movlw	0
  7886  001630  6F3C               	movwf	(?___fttol+3)& (0+255),b
  7887                           
  7888                           ; BSR set to: 1
  7889  001632  0012               	return	
  7890  001634                     l7406:
  7891                           
  7892                           ; BSR set to: 1
  7893  001634  0101               	movlb	1	; () banked
  7894  001636  90D8               	bcf	status,0,c
  7895  001638  3743               	rlcf	___fttol@lval& (0+255),f,b
  7896  00163A  3744               	rlcf	(___fttol@lval+1)& (0+255),f,b
  7897  00163C  3745               	rlcf	(___fttol@lval+2)& (0+255),f,b
  7898  00163E  3746               	rlcf	(___fttol@lval+3)& (0+255),f,b
  7899  001640  0101               	movlb	1	; () banked
  7900  001642  0747               	decf	___fttol@exp1& (0+255),f,b
  7901  001644                     l7408:
  7902                           
  7903                           ; BSR set to: 1
  7904  001644  0101               	movlb	1	; () banked
  7905  001646  5147               	movf	___fttol@exp1& (0+255),w,b
  7906  001648  0101               	movlb	1	; () banked
  7907  00164A  A4D8               	btfss	status,2,c
  7908  00164C  D7F3               	goto	l7406
  7909  00164E                     l7410:
  7910                           
  7911                           ; BSR set to: 1
  7912  00164E  0101               	movlb	1	; () banked
  7913  001650  5142               	movf	___fttol@sign1& (0+255),w,b
  7914  001652  0101               	movlb	1	; () banked
  7915  001654  B4D8               	btfsc	status,2,c
  7916  001656  D009               	goto	l7414
  7917                           
  7918                           ; BSR set to: 1
  7919  001658  0101               	movlb	1	; () banked
  7920  00165A  1F46               	comf	(___fttol@lval+3)& (0+255),f,b
  7921  00165C  1F45               	comf	(___fttol@lval+2)& (0+255),f,b
  7922  00165E  1F44               	comf	(___fttol@lval+1)& (0+255),f,b
  7923  001660  6D43               	negf	___fttol@lval& (0+255),b
  7924  001662  0E00               	movlw	0
  7925  001664  2344               	addwfc	(___fttol@lval+1)& (0+255),f,b
  7926  001666  2345               	addwfc	(___fttol@lval+2)& (0+255),f,b
  7927  001668  2346               	addwfc	(___fttol@lval+3)& (0+255),f,b
  7928  00166A                     l7414:
  7929                           
  7930                           ; BSR set to: 1
  7931  00166A  C143  F139         	movff	___fttol@lval,?___fttol
  7932  00166E  C144  F13A         	movff	___fttol@lval+1,?___fttol+1
  7933  001672  C145  F13B         	movff	___fttol@lval+2,?___fttol+2
  7934  001676  C146  F13C         	movff	___fttol@lval+3,?___fttol+3
  7935  00167A  0012               	return	
  7936  00167C                     __end_of___fttol:
  7937                           	opt stack 0
  7938                           tosu	equ	0xFFF
  7939                           tosh	equ	0xFFE
  7940                           tosl	equ	0xFFD
  7941                           pclath	equ	0xFFA
  7942                           tblptru	equ	0xFF8
  7943                           tblptrh	equ	0xFF7
  7944                           tblptrl	equ	0xFF6
  7945                           tablat	equ	0xFF5
  7946                           prodh	equ	0xFF4
  7947                           prodl	equ	0xFF3
  7948                           intcon	equ	0xFF2
  7949                           postinc0	equ	0xFEE
  7950                           wreg	equ	0xFE8
  7951                           indf2	equ	0xFDF
  7952                           postinc2	equ	0xFDE
  7953                           postdec2	equ	0xFDD
  7954                           plusw2	equ	0xFDB
  7955                           fsr2h	equ	0xFDA
  7956                           fsr2l	equ	0xFD9
  7957                           status	equ	0xFD8
  7958                           
  7959 ;; *************** function ___ftmul *****************
  7960 ;; Defined at:
  7961 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftmul.c"
  7962 ;; Parameters:    Size  Location     Type
  7963 ;;  f1              3   37[COMRAM] float 
  7964 ;;  f2              3   40[COMRAM] float 
  7965 ;; Auto vars:     Size  Location     Type
  7966 ;;  f3_as_produc    3    4[BANK0 ] unsigned um
  7967 ;;  sign            1    8[BANK0 ] unsigned char 
  7968 ;;  cntr            1    7[BANK0 ] unsigned char 
  7969 ;;  exp             1    3[BANK0 ] unsigned char 
  7970 ;; Return value:  Size  Location     Type
  7971 ;;                  3   37[COMRAM] float 
  7972 ;; Registers used:
  7973 ;;		wreg, status,2, status,0, cstack
  7974 ;; Tracked objects:
  7975 ;;		On entry : 0/0
  7976 ;;		On exit  : 0/0
  7977 ;;		Unchanged: 0/0
  7978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7979 ;;      Params:         6       0       0       0       0       0       0
  7980 ;;      Locals:         0       6       0       0       0       0       0
  7981 ;;      Temps:          0       3       0       0       0       0       0
  7982 ;;      Totals:         6       9       0       0       0       0       0
  7983 ;;Total ram usage:       15 bytes
  7984 ;; Hardware stack levels used:    1
  7985 ;; Hardware stack levels required when called:    5
  7986 ;; This function calls:
  7987 ;;		___ftpack
  7988 ;; This function is called by:
  7989 ;;		_main
  7990 ;; This function uses a non-reentrant model
  7991 ;;
  7992                           
  7993                           	psect	text33
  7994  0017AC                     __ptext33:
  7995                           	opt stack 0
  7996  0017AC                     ___ftmul:
  7997                           	opt stack 25
  7998                           
  7999                           ; BSR set to: 1
  8000                           ;incstack = 0
  8001  0017AC  C028  F0F4         	movff	___ftmul@f1+2,??___ftmul
  8002  0017B0  0100               	movlb	0	; () banked
  8003  0017B2  6BF5               	clrf	(??___ftmul+1)& (0+255),b
  8004  0017B4  6BF6               	clrf	(??___ftmul+2)& (0+255),b
  8005  0017B6  3427               	rlcf	___ftmul@f1+1,w,c
  8006  0017B8  0100               	movlb	0	; () banked
  8007  0017BA  37F4               	rlcf	??___ftmul& (0+255),f,b
  8008  0017BC  E301               	bnc	u8361
  8009  0017BE  81F5               	bsf	(??___ftmul+1)& (0+255),0,b
  8010  0017C0                     u8361:
  8011  0017C0  0100               	movlb	0	; () banked
  8012  0017C2  51F4               	movf	??___ftmul& (0+255),w,b
  8013  0017C4  0100               	movlb	0	; () banked
  8014  0017C6  6FF7               	movwf	___ftmul@exp& (0+255),b
  8015  0017C8  0100               	movlb	0	; () banked
  8016  0017CA  51F7               	movf	___ftmul@exp& (0+255),w,b
  8017  0017CC  A4D8               	btfss	status,2,c
  8018  0017CE  D007               	goto	l7330
  8019                           
  8020                           ; BSR set to: 0
  8021  0017D0  0E00               	movlw	0
  8022  0017D2  6E26               	movwf	?___ftmul,c
  8023  0017D4  0E00               	movlw	0
  8024  0017D6  6E27               	movwf	?___ftmul+1,c
  8025  0017D8  0E00               	movlw	0
  8026  0017DA  6E28               	movwf	?___ftmul+2,c
  8027                           
  8028                           ; BSR set to: 0
  8029  0017DC  0012               	return	
  8030  0017DE                     l7330:
  8031                           
  8032                           ; BSR set to: 0
  8033  0017DE  C02B  F0F4         	movff	___ftmul@f2+2,??___ftmul
  8034  0017E2  0100               	movlb	0	; () banked
  8035  0017E4  6BF5               	clrf	(??___ftmul+1)& (0+255),b
  8036  0017E6  6BF6               	clrf	(??___ftmul+2)& (0+255),b
  8037  0017E8  342A               	rlcf	___ftmul@f2+1,w,c
  8038  0017EA  0100               	movlb	0	; () banked
  8039  0017EC  37F4               	rlcf	??___ftmul& (0+255),f,b
  8040  0017EE  E301               	bnc	u8381
  8041  0017F0  81F5               	bsf	(??___ftmul+1)& (0+255),0,b
  8042  0017F2                     u8381:
  8043  0017F2  0100               	movlb	0	; () banked
  8044  0017F4  51F4               	movf	??___ftmul& (0+255),w,b
  8045  0017F6  0100               	movlb	0	; () banked
  8046  0017F8  6FFC               	movwf	___ftmul@sign& (0+255),b
  8047  0017FA  0100               	movlb	0	; () banked
  8048  0017FC  51FC               	movf	___ftmul@sign& (0+255),w,b
  8049  0017FE  A4D8               	btfss	status,2,c
  8050  001800  D007               	goto	l7336
  8051                           
  8052                           ; BSR set to: 0
  8053  001802  0E00               	movlw	0
  8054  001804  6E26               	movwf	?___ftmul,c
  8055  001806  0E00               	movlw	0
  8056  001808  6E27               	movwf	?___ftmul+1,c
  8057  00180A  0E00               	movlw	0
  8058  00180C  6E28               	movwf	?___ftmul+2,c
  8059                           
  8060                           ; BSR set to: 0
  8061  00180E  0012               	return	
  8062  001810                     l7336:
  8063                           
  8064                           ; BSR set to: 0
  8065  001810  0100               	movlb	0	; () banked
  8066  001812  51FC               	movf	___ftmul@sign& (0+255),w,b
  8067  001814  0F7B               	addlw	123
  8068  001816  0100               	movlb	0	; () banked
  8069  001818  27F7               	addwf	___ftmul@exp& (0+255),f,b
  8070                           
  8071                           ; BSR set to: 0
  8072  00181A  C028  F0FC         	movff	___ftmul@f1+2,___ftmul@sign
  8073  00181E  502B               	movf	___ftmul@f2+2,w,c
  8074  001820  0100               	movlb	0	; () banked
  8075  001822  1BFC               	xorwf	___ftmul@sign& (0+255),f,b
  8076  001824  0E80               	movlw	128
  8077  001826  0100               	movlb	0	; () banked
  8078  001828  17FC               	andwf	___ftmul@sign& (0+255),f,b
  8079                           
  8080                           ; BSR set to: 0
  8081  00182A  8E27               	bsf	___ftmul@f1+1,7,c
  8082                           
  8083                           ; BSR set to: 0
  8084  00182C  8E2A               	bsf	___ftmul@f2+1,7,c
  8085                           
  8086                           ; BSR set to: 0
  8087  00182E  0EFF               	movlw	255
  8088  001830  1629               	andwf	___ftmul@f2,f,c
  8089  001832  0EFF               	movlw	255
  8090  001834  162A               	andwf	___ftmul@f2+1,f,c
  8091  001836  0E00               	movlw	0
  8092  001838  162B               	andwf	___ftmul@f2+2,f,c
  8093                           
  8094                           ; BSR set to: 0
  8095  00183A  0E00               	movlw	0
  8096  00183C  0100               	movlb	0	; () banked
  8097  00183E  6FF8               	movwf	___ftmul@f3_as_product& (0+255),b
  8098  001840  0E00               	movlw	0
  8099  001842  0100               	movlb	0	; () banked
  8100  001844  6FF9               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  8101  001846  0E00               	movlw	0
  8102  001848  0100               	movlb	0	; () banked
  8103  00184A  6FFA               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  8104                           
  8105                           ; BSR set to: 0
  8106  00184C  0E07               	movlw	7
  8107  00184E  0100               	movlb	0	; () banked
  8108  001850  6FFB               	movwf	___ftmul@cntr& (0+255),b
  8109  001852                     l7350:
  8110                           
  8111                           ; BSR set to: 0
  8112  001852  A026               	btfss	___ftmul@f1,0,c
  8113  001854  D009               	goto	l7354
  8114                           
  8115                           ; BSR set to: 0
  8116  001856  5029               	movf	___ftmul@f2,w,c
  8117  001858  0100               	movlb	0	; () banked
  8118  00185A  27F8               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8119  00185C  502A               	movf	___ftmul@f2+1,w,c
  8120  00185E  0100               	movlb	0	; () banked
  8121  001860  23F9               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8122  001862  502B               	movf	___ftmul@f2+2,w,c
  8123  001864  0100               	movlb	0	; () banked
  8124  001866  23FA               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8125  001868                     l7354:
  8126                           
  8127                           ; BSR set to: 0
  8128  001868  90D8               	bcf	status,0,c
  8129  00186A  3228               	rrcf	___ftmul@f1+2,f,c
  8130  00186C  3227               	rrcf	___ftmul@f1+1,f,c
  8131  00186E  3226               	rrcf	___ftmul@f1,f,c
  8132  001870  90D8               	bcf	status,0,c
  8133  001872  3629               	rlcf	___ftmul@f2,f,c
  8134  001874  362A               	rlcf	___ftmul@f2+1,f,c
  8135  001876  362B               	rlcf	___ftmul@f2+2,f,c
  8136                           
  8137                           ; BSR set to: 0
  8138  001878  0100               	movlb	0	; () banked
  8139  00187A  2FFB               	decfsz	___ftmul@cntr& (0+255),f,b
  8140  00187C  D7EA               	goto	l7350
  8141                           
  8142                           ; BSR set to: 0
  8143                           
  8144                           ; BSR set to: 0
  8145  00187E  0E09               	movlw	9
  8146  001880  0100               	movlb	0	; () banked
  8147  001882  6FFB               	movwf	___ftmul@cntr& (0+255),b
  8148  001884                     l7360:
  8149                           
  8150                           ; BSR set to: 0
  8151  001884  A026               	btfss	___ftmul@f1,0,c
  8152  001886  D009               	goto	l7364
  8153                           
  8154                           ; BSR set to: 0
  8155  001888  5029               	movf	___ftmul@f2,w,c
  8156  00188A  0100               	movlb	0	; () banked
  8157  00188C  27F8               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8158  00188E  502A               	movf	___ftmul@f2+1,w,c
  8159  001890  0100               	movlb	0	; () banked
  8160  001892  23F9               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8161  001894  502B               	movf	___ftmul@f2+2,w,c
  8162  001896  0100               	movlb	0	; () banked
  8163  001898  23FA               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8164  00189A                     l7364:
  8165                           
  8166                           ; BSR set to: 0
  8167  00189A  90D8               	bcf	status,0,c
  8168  00189C  3228               	rrcf	___ftmul@f1+2,f,c
  8169  00189E  3227               	rrcf	___ftmul@f1+1,f,c
  8170  0018A0  3226               	rrcf	___ftmul@f1,f,c
  8171  0018A2  0100               	movlb	0	; () banked
  8172  0018A4  90D8               	bcf	status,0,c
  8173  0018A6  33FA               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  8174  0018A8  33F9               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  8175  0018AA  33F8               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  8176                           
  8177                           ; BSR set to: 0
  8178  0018AC  0100               	movlb	0	; () banked
  8179  0018AE  2FFB               	decfsz	___ftmul@cntr& (0+255),f,b
  8180  0018B0  D7E9               	goto	l7360
  8181                           
  8182                           ; BSR set to: 0
  8183                           
  8184                           ; BSR set to: 0
  8185  0018B2  C0F8  F01B         	movff	___ftmul@f3_as_product,___ftpack@arg
  8186  0018B6  C0F9  F01C         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  8187  0018BA  C0FA  F01D         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  8188  0018BE  C0F7  F01E         	movff	___ftmul@exp,___ftpack@exp
  8189  0018C2  C0FC  F01F         	movff	___ftmul@sign,___ftpack@sign
  8190  0018C6  EC89  F011         	call	___ftpack	;wreg free
  8191  0018CA  C01B  F026         	movff	?___ftpack,?___ftmul
  8192  0018CE  C01C  F027         	movff	?___ftpack+1,?___ftmul+1
  8193  0018D2  C01D  F028         	movff	?___ftpack+2,?___ftmul+2
  8194  0018D6  0012               	return	
  8195  0018D8                     __end_of___ftmul:
  8196                           	opt stack 0
  8197                           tosu	equ	0xFFF
  8198                           tosh	equ	0xFFE
  8199                           tosl	equ	0xFFD
  8200                           pclath	equ	0xFFA
  8201                           tblptru	equ	0xFF8
  8202                           tblptrh	equ	0xFF7
  8203                           tblptrl	equ	0xFF6
  8204                           tablat	equ	0xFF5
  8205                           prodh	equ	0xFF4
  8206                           prodl	equ	0xFF3
  8207                           intcon	equ	0xFF2
  8208                           postinc0	equ	0xFEE
  8209                           wreg	equ	0xFE8
  8210                           indf2	equ	0xFDF
  8211                           postinc2	equ	0xFDE
  8212                           postdec2	equ	0xFDD
  8213                           plusw2	equ	0xFDB
  8214                           fsr2h	equ	0xFDA
  8215                           fsr2l	equ	0xFD9
  8216                           status	equ	0xFD8
  8217                           
  8218 ;; *************** function ___ftpack *****************
  8219 ;; Defined at:
  8220 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\float.c"
  8221 ;; Parameters:    Size  Location     Type
  8222 ;;  arg             3   26[COMRAM] unsigned um
  8223 ;;  exp             1   29[COMRAM] unsigned char 
  8224 ;;  sign            1   30[COMRAM] unsigned char 
  8225 ;; Auto vars:     Size  Location     Type
  8226 ;;		None
  8227 ;; Return value:  Size  Location     Type
  8228 ;;                  3   26[COMRAM] float 
  8229 ;; Registers used:
  8230 ;;		wreg, status,2, status,0
  8231 ;; Tracked objects:
  8232 ;;		On entry : 0/0
  8233 ;;		On exit  : 0/0
  8234 ;;		Unchanged: 0/0
  8235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8236 ;;      Params:         5       0       0       0       0       0       0
  8237 ;;      Locals:         0       0       0       0       0       0       0
  8238 ;;      Temps:          3       0       0       0       0       0       0
  8239 ;;      Totals:         8       0       0       0       0       0       0
  8240 ;;Total ram usage:        8 bytes
  8241 ;; Hardware stack levels used:    1
  8242 ;; Hardware stack levels required when called:    4
  8243 ;; This function calls:
  8244 ;;		Nothing
  8245 ;; This function is called by:
  8246 ;;		___ftmul
  8247 ;;		___lwtoft
  8248 ;; This function uses a non-reentrant model
  8249 ;;
  8250                           
  8251                           	psect	text34
  8252  002312                     __ptext34:
  8253                           	opt stack 0
  8254  002312                     ___ftpack:
  8255                           	opt stack 25
  8256                           
  8257                           ;incstack = 0
  8258  002312  501E               	movf	___ftpack@exp,w,c
  8259  002314  B4D8               	btfsc	status,2,c
  8260  002316  D005               	goto	l6966
  8261  002318  501B               	movf	___ftpack@arg,w,c
  8262  00231A  101C               	iorwf	___ftpack@arg+1,w,c
  8263  00231C  101D               	iorwf	___ftpack@arg+2,w,c
  8264  00231E  A4D8               	btfss	status,2,c
  8265  002320  D00C               	goto	l6972
  8266  002322                     l6966:
  8267  002322  0E00               	movlw	0
  8268  002324  6E1B               	movwf	?___ftpack,c
  8269  002326  0E00               	movlw	0
  8270  002328  6E1C               	movwf	?___ftpack+1,c
  8271  00232A  0E00               	movlw	0
  8272  00232C  6E1D               	movwf	?___ftpack+2,c
  8273  00232E  0012               	return	
  8274  002330                     l6970:
  8275  002330  2A1E               	incf	___ftpack@exp,f,c
  8276  002332  90D8               	bcf	status,0,c
  8277  002334  321D               	rrcf	___ftpack@arg+2,f,c
  8278  002336  321C               	rrcf	___ftpack@arg+1,f,c
  8279  002338  321B               	rrcf	___ftpack@arg,f,c
  8280  00233A                     l6972:
  8281  00233A  0E00               	movlw	0
  8282  00233C  141B               	andwf	___ftpack@arg,w,c
  8283  00233E  6E20               	movwf	??___ftpack& (0+255),c
  8284  002340  0E00               	movlw	0
  8285  002342  141C               	andwf	___ftpack@arg+1,w,c
  8286  002344  6E21               	movwf	(??___ftpack+1)& (0+255),c
  8287  002346  0EFE               	movlw	254
  8288  002348  141D               	andwf	___ftpack@arg+2,w,c
  8289  00234A  6E22               	movwf	(??___ftpack+2)& (0+255),c
  8290  00234C  5020               	movf	??___ftpack,w,c
  8291  00234E  1021               	iorwf	??___ftpack+1,w,c
  8292  002350  1022               	iorwf	??___ftpack+2,w,c
  8293  002352  B4D8               	btfsc	status,2,c
  8294  002354  D00C               	goto	l6978
  8295  002356  D7EC               	goto	l6970
  8296  002358                     l6974:
  8297  002358  2A1E               	incf	___ftpack@exp,f,c
  8298  00235A  0E01               	movlw	1
  8299  00235C  261B               	addwf	___ftpack@arg,f,c
  8300  00235E  0E00               	movlw	0
  8301  002360  221C               	addwfc	___ftpack@arg+1,f,c
  8302  002362  0E00               	movlw	0
  8303  002364  221D               	addwfc	___ftpack@arg+2,f,c
  8304  002366  90D8               	bcf	status,0,c
  8305  002368  321D               	rrcf	___ftpack@arg+2,f,c
  8306  00236A  321C               	rrcf	___ftpack@arg+1,f,c
  8307  00236C  321B               	rrcf	___ftpack@arg,f,c
  8308  00236E                     l6978:
  8309  00236E  0E00               	movlw	0
  8310  002370  141B               	andwf	___ftpack@arg,w,c
  8311  002372  6E20               	movwf	??___ftpack& (0+255),c
  8312  002374  0E00               	movlw	0
  8313  002376  141C               	andwf	___ftpack@arg+1,w,c
  8314  002378  6E21               	movwf	(??___ftpack+1)& (0+255),c
  8315  00237A  0EFF               	movlw	255
  8316  00237C  141D               	andwf	___ftpack@arg+2,w,c
  8317  00237E  6E22               	movwf	(??___ftpack+2)& (0+255),c
  8318  002380  5020               	movf	??___ftpack,w,c
  8319  002382  1021               	iorwf	??___ftpack+1,w,c
  8320  002384  1022               	iorwf	??___ftpack+2,w,c
  8321  002386  B4D8               	btfsc	status,2,c
  8322  002388  D006               	goto	l6982
  8323  00238A  D7E6               	goto	l6974
  8324  00238C                     l6980:
  8325  00238C  061E               	decf	___ftpack@exp,f,c
  8326  00238E  90D8               	bcf	status,0,c
  8327  002390  361B               	rlcf	___ftpack@arg,f,c
  8328  002392  361C               	rlcf	___ftpack@arg+1,f,c
  8329  002394  361D               	rlcf	___ftpack@arg+2,f,c
  8330  002396                     l6982:
  8331  002396  BE1C               	btfsc	___ftpack@arg+1,7,c
  8332  002398  D003               	goto	l1523
  8333  00239A  0E02               	movlw	2
  8334  00239C  601E               	cpfslt	___ftpack@exp,c
  8335  00239E  D7F6               	goto	l6980
  8336  0023A0                     l1523:
  8337  0023A0  A01E               	btfss	___ftpack@exp,0,c
  8338  0023A2  9E1C               	bcf	___ftpack@arg+1,7,c
  8339  0023A4  90D8               	bcf	status,0,c
  8340  0023A6  321E               	rrcf	___ftpack@exp,f,c
  8341  0023A8  501E               	movf	___ftpack@exp,w,c
  8342  0023AA  121D               	iorwf	___ftpack@arg+2,f,c
  8343  0023AC  501F               	movf	___ftpack@sign,w,c
  8344  0023AE  A4D8               	btfss	status,2,c
  8345  0023B0  8E1D               	bsf	___ftpack@arg+2,7,c
  8346  0023B2  C01B  F01B         	movff	___ftpack@arg,?___ftpack
  8347  0023B6  C01C  F01C         	movff	___ftpack@arg+1,?___ftpack+1
  8348  0023BA  C01D  F01D         	movff	___ftpack@arg+2,?___ftpack+2
  8349  0023BE  0012               	return	
  8350  0023C0                     __end_of___ftpack:
  8351                           	opt stack 0
  8352                           tosu	equ	0xFFF
  8353                           tosh	equ	0xFFE
  8354                           tosl	equ	0xFFD
  8355                           pclath	equ	0xFFA
  8356                           tblptru	equ	0xFF8
  8357                           tblptrh	equ	0xFF7
  8358                           tblptrl	equ	0xFF6
  8359                           tablat	equ	0xFF5
  8360                           prodh	equ	0xFF4
  8361                           prodl	equ	0xFF3
  8362                           intcon	equ	0xFF2
  8363                           postinc0	equ	0xFEE
  8364                           wreg	equ	0xFE8
  8365                           indf2	equ	0xFDF
  8366                           postinc2	equ	0xFDE
  8367                           postdec2	equ	0xFDD
  8368                           plusw2	equ	0xFDB
  8369                           fsr2h	equ	0xFDA
  8370                           fsr2l	equ	0xFD9
  8371                           status	equ	0xFD8
  8372                           
  8373 ;; *************** function _SYSTEM_Initialize *****************
  8374 ;; Defined at:
  8375 ;;		line 112 in file "mcc_generated_files/mcc.c"
  8376 ;; Parameters:    Size  Location     Type
  8377 ;;		None
  8378 ;; Auto vars:     Size  Location     Type
  8379 ;;		None
  8380 ;; Return value:  Size  Location     Type
  8381 ;;                  1    wreg      void 
  8382 ;; Registers used:
  8383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8384 ;; Tracked objects:
  8385 ;;		On entry : 0/0
  8386 ;;		On exit  : 0/0
  8387 ;;		Unchanged: 0/0
  8388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8389 ;;      Params:         0       0       0       0       0       0       0
  8390 ;;      Locals:         0       0       0       0       0       0       0
  8391 ;;      Temps:          0       0       0       0       0       0       0
  8392 ;;      Totals:         0       0       0       0       0       0       0
  8393 ;;Total ram usage:        0 bytes
  8394 ;; Hardware stack levels used:    1
  8395 ;; Hardware stack levels required when called:    7
  8396 ;; This function calls:
  8397 ;;		_ADC_Initialize
  8398 ;;		_EUSART1_Initialize
  8399 ;;		_I2C1_Initialize
  8400 ;;		_INTERRUPT_Initialize
  8401 ;;		_OSCILLATOR_Initialize
  8402 ;;		_PIN_MANAGER_Initialize
  8403 ;;		_TMR0_Initialize
  8404 ;;		_TMR2_Initialize
  8405 ;;		_begin
  8406 ;; This function is called by:
  8407 ;;		_main
  8408 ;; This function uses a non-reentrant model
  8409 ;;
  8410                           
  8411                           	psect	text35
  8412  0028BA                     __ptext35:
  8413                           	opt stack 0
  8414  0028BA                     _SYSTEM_Initialize:
  8415                           	opt stack 23
  8416                           
  8417                           ;mcc.c: 114: OSCILLATOR_Initialize();
  8418                           
  8419                           ;incstack = 0
  8420  0028BA  EC0E  F018         	call	_OSCILLATOR_Initialize	;wreg free
  8421                           
  8422                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  8423  0028BE  EC5F  F015         	call	_PIN_MANAGER_Initialize	;wreg free
  8424                           
  8425                           ;mcc.c: 116: INTERRUPT_Initialize();
  8426  0028C2  ECF7  F017         	call	_INTERRUPT_Initialize	;wreg free
  8427                           
  8428                           ;mcc.c: 117: ADC_Initialize();
  8429  0028C6  ECC1  F017         	call	_ADC_Initialize	;wreg free
  8430                           
  8431                           ;mcc.c: 118: TMR0_Initialize();
  8432  0028CA  EC87  F017         	call	_TMR0_Initialize	;wreg free
  8433                           
  8434                           ;mcc.c: 119: TMR2_Initialize();
  8435  0028CE  EC67  F017         	call	_TMR2_Initialize	;wreg free
  8436                           
  8437                           ;mcc.c: 120: EUSART1_Initialize();
  8438  0028D2  EC55  F016         	call	_EUSART1_Initialize	;wreg free
  8439                           
  8440                           ;mcc.c: 121: begin(receiveArray, sizeof (receiveArray), 3, 0, Send_put, Receive_get, Rec
      +                          eive_available, Receive_peek);
  8441  0028D6  0E00               	movlw	low _receiveArray
  8442  0028D8  0101               	movlb	1	; () banked
  8443  0028DA  6F39               	movwf	begin@ptr& (0+255),b
  8444  0028DC  0E01               	movlw	high _receiveArray
  8445  0028DE  0101               	movlb	1	; () banked
  8446  0028E0  6F3A               	movwf	(begin@ptr+1)& (0+255),b
  8447  0028E2  0E28               	movlw	40
  8448  0028E4  0101               	movlb	1	; () banked
  8449  0028E6  6F3B               	movwf	begin@maxSize& (0+255),b
  8450  0028E8  0E03               	movlw	3
  8451  0028EA  0101               	movlb	1	; () banked
  8452  0028EC  6F3C               	movwf	begin@givenAddress& (0+255),b
  8453  0028EE  0E00               	movlw	0
  8454  0028F0  0101               	movlb	1	; () banked
  8455  0028F2  6F3D               	movwf	begin@error& (0+255),b
  8456  0028F4  0E86               	movlw	low _Send_put
  8457  0028F6  0101               	movlb	1	; () banked
  8458  0028F8  6F3E               	movwf	begin@stufftosend& (0+255),b
  8459  0028FA  0E2D               	movlw	high _Send_put
  8460  0028FC  0101               	movlb	1	; () banked
  8461  0028FE  6F3F               	movwf	(begin@stufftosend+1)& (0+255),b
  8462  002900  0E0E               	movlw	low _Receive_get
  8463  002902  0101               	movlb	1	; () banked
  8464  002904  6F40               	movwf	begin@stufftoreceive& (0+255),b
  8465  002906  0E30               	movlw	high _Receive_get
  8466  002908  0101               	movlb	1	; () banked
  8467  00290A  6F41               	movwf	(begin@stufftoreceive+1)& (0+255),b
  8468  00290C  0E9A               	movlw	low _Receive_available
  8469  00290E  0101               	movlb	1	; () banked
  8470  002910  6F42               	movwf	begin@stuffavailable& (0+255),b
  8471  002912  0E2F               	movlw	high _Receive_available
  8472  002914  0101               	movlb	1	; () banked
  8473  002916  6F43               	movwf	(begin@stuffavailable+1)& (0+255),b
  8474  002918  0E00               	movlw	low _Receive_peek
  8475  00291A  0101               	movlb	1	; () banked
  8476  00291C  6F44               	movwf	begin@stuffpeek& (0+255),b
  8477  00291E  0E30               	movlw	high _Receive_peek
  8478  002920  0101               	movlb	1	; () banked
  8479  002922  6F45               	movwf	(begin@stuffpeek+1)& (0+255),b
  8480  002924  EC30  F015         	call	_begin	;wreg free
  8481                           
  8482                           ;mcc.c: 122: I2C1_Initialize();
  8483  002928  EC37  F016         	call	_I2C1_Initialize	;wreg free
  8484  00292C  0012               	return		;funcret
  8485  00292E                     __end_of_SYSTEM_Initialize:
  8486                           	opt stack 0
  8487                           tosu	equ	0xFFF
  8488                           tosh	equ	0xFFE
  8489                           tosl	equ	0xFFD
  8490                           pclath	equ	0xFFA
  8491                           tblptru	equ	0xFF8
  8492                           tblptrh	equ	0xFF7
  8493                           tblptrl	equ	0xFF6
  8494                           tablat	equ	0xFF5
  8495                           prodh	equ	0xFF4
  8496                           prodl	equ	0xFF3
  8497                           intcon	equ	0xFF2
  8498                           postinc0	equ	0xFEE
  8499                           wreg	equ	0xFE8
  8500                           indf2	equ	0xFDF
  8501                           postinc2	equ	0xFDE
  8502                           postdec2	equ	0xFDD
  8503                           plusw2	equ	0xFDB
  8504                           fsr2h	equ	0xFDA
  8505                           fsr2l	equ	0xFD9
  8506                           status	equ	0xFD8
  8507                           
  8508 ;; *************** function _begin *****************
  8509 ;; Defined at:
  8510 ;;		line 18 in file "FastTransfer.c"
  8511 ;; Parameters:    Size  Location     Type
  8512 ;;  ptr             2    0[BANK1 ] PTR volatile int 
  8513 ;;		 -> receiveArray(40), 
  8514 ;;  maxSize         1    2[BANK1 ] unsigned char 
  8515 ;;  givenAddress    1    3[BANK1 ] unsigned char 
  8516 ;;  error           1    4[BANK1 ] unsigned char 
  8517 ;;  stufftosend     2    5[BANK1 ] PTR FTN(unsigned char ,)
  8518 ;;		 -> Send_put(1), 
  8519 ;;  stufftorecei    2    7[BANK1 ] PTR FTN()unsigned char 
  8520 ;;		 -> Receive_get(1), 
  8521 ;;  stuffavailab    2    9[BANK1 ] PTR FTN()int 
  8522 ;;		 -> Receive_available(2), 
  8523 ;;  stuffpeek       2   11[BANK1 ] PTR FTN()unsigned char 
  8524 ;;		 -> Receive_peek(1), 
  8525 ;; Auto vars:     Size  Location     Type
  8526 ;;		None
  8527 ;; Return value:  Size  Location     Type
  8528 ;;                  1    wreg      void 
  8529 ;; Registers used:
  8530 ;;		wreg, status,2, status,0, cstack
  8531 ;; Tracked objects:
  8532 ;;		On entry : 0/0
  8533 ;;		On exit  : 0/0
  8534 ;;		Unchanged: 0/0
  8535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8536 ;;      Params:         0       0      13       0       0       0       0
  8537 ;;      Locals:         0       0       0       0       0       0       0
  8538 ;;      Temps:          0       0       0       0       0       0       0
  8539 ;;      Totals:         0       0      13       0       0       0       0
  8540 ;;Total ram usage:       13 bytes
  8541 ;; Hardware stack levels used:    1
  8542 ;; Hardware stack levels required when called:    5
  8543 ;; This function calls:
  8544 ;;		___awdiv
  8545 ;; This function is called by:
  8546 ;;		_SYSTEM_Initialize
  8547 ;; This function uses a non-reentrant model
  8548 ;;
  8549                           
  8550                           	psect	text36
  8551  002A60                     __ptext36:
  8552                           	opt stack 0
  8553  002A60                     _begin:
  8554                           	opt stack 24
  8555                           
  8556                           ;FastTransfer.c: 19: receiveArrayAddress = ptr;
  8557                           
  8558                           ;incstack = 0
  8559  002A60  C139  F0D5         	movff	begin@ptr,_receiveArrayAddress
  8560  002A64  C13A  F0D6         	movff	begin@ptr+1,_receiveArrayAddress+1
  8561                           
  8562                           ;FastTransfer.c: 20: moduleAddress = givenAddress;
  8563  002A68  C13C  F03B         	movff	begin@givenAddress,_moduleAddress
  8564                           
  8565                           ;FastTransfer.c: 21: serial_write = stufftosend;
  8566  002A6C  C13E  F032         	movff	begin@stufftosend,_serial_write
  8567  002A70  C13F  F033         	movff	begin@stufftosend+1,_serial_write+1
  8568                           
  8569                           ;FastTransfer.c: 22: serial_available = stuffavailable;
  8570  002A74  C142  F02E         	movff	begin@stuffavailable,_serial_available
  8571  002A78  C143  F02F         	movff	begin@stuffavailable+1,_serial_available+1
  8572                           
  8573                           ;FastTransfer.c: 23: serial_peek = stuffpeek;
  8574  002A7C  C144  F0D9         	movff	begin@stuffpeek,_serial_peek
  8575  002A80  C145  F0DA         	movff	begin@stuffpeek+1,_serial_peek+1
  8576                           
  8577                           ;FastTransfer.c: 24: serial_read = stufftoreceive;
  8578  002A84  C140  F030         	movff	begin@stufftoreceive,_serial_read
  8579  002A88  C141  F031         	movff	begin@stufftoreceive+1,_serial_read+1
  8580                           
  8581                           ;FastTransfer.c: 25: maxDataAddress = maxSize / 2;
  8582  002A8C  C13B  F01B         	movff	begin@maxSize,___awdiv@dividend
  8583  002A90  6A1C               	clrf	___awdiv@dividend+1,c
  8584  002A92  0E00               	movlw	0
  8585  002A94  6E1E               	movwf	___awdiv@divisor+1,c
  8586  002A96  0E02               	movlw	2
  8587  002A98  6E1D               	movwf	___awdiv@divisor,c
  8588  002A9A  ECA5  F013         	call	___awdiv	;wreg free
  8589  002A9E  501B               	movf	?___awdiv,w,c
  8590  002AA0  6E3A               	movwf	_maxDataAddress,c
  8591                           
  8592                           ;FastTransfer.c: 26: sendStructAddress = (unsigned char*) & ring_buffer;
  8593  002AA2  0E00               	movlw	low _ring_buffer
  8594  002AA4  0100               	movlb	0	; () banked
  8595  002AA6  6FD7               	movwf	_sendStructAddress& (0+255),b
  8596  002AA8  0E02               	movlw	high _ring_buffer
  8597  002AAA  0100               	movlb	0	; () banked
  8598  002AAC  6FD8               	movwf	(_sendStructAddress+1)& (0+255),b
  8599                           
  8600                           ; BSR set to: 0
  8601                           ;FastTransfer.c: 27: AKNAKsend = error;
  8602  002AAE  C13D  F036         	movff	begin@error,_AKNAKsend
  8603                           
  8604                           ; BSR set to: 0
  8605                           ;FastTransfer.c: 28: alignErrorCounter = 0;
  8606  002AB2  0E00               	movlw	0
  8607  002AB4  0100               	movlb	0	; () banked
  8608  002AB6  6FC6               	movwf	(_alignErrorCounter+1)& (0+255),b
  8609  002AB8  0E00               	movlw	0
  8610  002ABA  6FC5               	movwf	_alignErrorCounter& (0+255),b
  8611                           
  8612                           ; BSR set to: 0
  8613  002ABC  0012               	return		;funcret
  8614  002ABE                     __end_of_begin:
  8615                           	opt stack 0
  8616                           tosu	equ	0xFFF
  8617                           tosh	equ	0xFFE
  8618                           tosl	equ	0xFFD
  8619                           pclath	equ	0xFFA
  8620                           tblptru	equ	0xFF8
  8621                           tblptrh	equ	0xFF7
  8622                           tblptrl	equ	0xFF6
  8623                           tablat	equ	0xFF5
  8624                           prodh	equ	0xFF4
  8625                           prodl	equ	0xFF3
  8626                           intcon	equ	0xFF2
  8627                           postinc0	equ	0xFEE
  8628                           wreg	equ	0xFE8
  8629                           indf2	equ	0xFDF
  8630                           postinc2	equ	0xFDE
  8631                           postdec2	equ	0xFDD
  8632                           plusw2	equ	0xFDB
  8633                           fsr2h	equ	0xFDA
  8634                           fsr2l	equ	0xFD9
  8635                           status	equ	0xFD8
  8636                           
  8637 ;; *************** function _TMR2_Initialize *****************
  8638 ;; Defined at:
  8639 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  8640 ;; Parameters:    Size  Location     Type
  8641 ;;		None
  8642 ;; Auto vars:     Size  Location     Type
  8643 ;;		None
  8644 ;; Return value:  Size  Location     Type
  8645 ;;                  2  344[None  ] int 
  8646 ;; Registers used:
  8647 ;;		wreg, status,2, status,0, cstack
  8648 ;; Tracked objects:
  8649 ;;		On entry : 0/0
  8650 ;;		On exit  : 0/0
  8651 ;;		Unchanged: 0/0
  8652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8653 ;;      Params:         0       0       0       0       0       0       0
  8654 ;;      Locals:         0       0       0       0       0       0       0
  8655 ;;      Temps:          0       0       0       0       0       0       0
  8656 ;;      Totals:         0       0       0       0       0       0       0
  8657 ;;Total ram usage:        0 bytes
  8658 ;; Hardware stack levels used:    1
  8659 ;; Hardware stack levels required when called:    5
  8660 ;; This function calls:
  8661 ;;		_TMR2_SetInterruptHandler
  8662 ;;		_TMR2_StartTimer
  8663 ;; This function is called by:
  8664 ;;		_SYSTEM_Initialize
  8665 ;; This function uses a non-reentrant model
  8666 ;;
  8667                           
  8668                           	psect	text37
  8669  002ECE                     __ptext37:
  8670                           	opt stack 0
  8671  002ECE                     _TMR2_Initialize:
  8672                           	opt stack 24
  8673                           
  8674                           ;tmr2.c: 67: T2CON = 0x7E;
  8675                           
  8676                           ; BSR set to: 0
  8677                           ;incstack = 0
  8678  002ECE  0E7E               	movlw	126
  8679  002ED0  6EBA               	movwf	4026,c	;volatile
  8680                           
  8681                           ;tmr2.c: 70: PR2 = 0x30;
  8682  002ED2  0E30               	movlw	48
  8683  002ED4  6EBB               	movwf	4027,c	;volatile
  8684                           
  8685                           ;tmr2.c: 73: TMR2 = 0x00;
  8686  002ED6  0E00               	movlw	0
  8687  002ED8  6EBC               	movwf	4028,c	;volatile
  8688                           
  8689                           ;tmr2.c: 76: PIR1bits.TMR2IF = 0;
  8690  002EDA  929E               	bcf	3998,1,c	;volatile
  8691                           
  8692                           ;tmr2.c: 79: PIE1bits.TMR2IE = 1;
  8693  002EDC  829D               	bsf	3997,1,c	;volatile
  8694                           
  8695                           ;tmr2.c: 82: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  8696  002EDE  0E48               	movlw	low _TMR2_DefaultInterruptHandler
  8697  002EE0  6E1B               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  8698  002EE2  0E30               	movlw	high _TMR2_DefaultInterruptHandler
  8699  002EE4  6E1C               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  8700  002EE6  EC15  F018         	call	_TMR2_SetInterruptHandler	;wreg free
  8701                           
  8702                           ;tmr2.c: 85: TMR2_StartTimer();
  8703  002EEA  EC1E  F018         	call	_TMR2_StartTimer	;wreg free
  8704  002EEE  0012               	return		;funcret
  8705  002EF0                     __end_of_TMR2_Initialize:
  8706                           	opt stack 0
  8707                           tosu	equ	0xFFF
  8708                           tosh	equ	0xFFE
  8709                           tosl	equ	0xFFD
  8710                           pclath	equ	0xFFA
  8711                           tblptru	equ	0xFF8
  8712                           tblptrh	equ	0xFF7
  8713                           tblptrl	equ	0xFF6
  8714                           tablat	equ	0xFF5
  8715                           prodh	equ	0xFF4
  8716                           prodl	equ	0xFF3
  8717                           intcon	equ	0xFF2
  8718                           postinc0	equ	0xFEE
  8719                           wreg	equ	0xFE8
  8720                           indf2	equ	0xFDF
  8721                           postinc2	equ	0xFDE
  8722                           postdec2	equ	0xFDD
  8723                           plusw2	equ	0xFDB
  8724                           fsr2h	equ	0xFDA
  8725                           fsr2l	equ	0xFD9
  8726                           status	equ	0xFD8
  8727                           
  8728 ;; *************** function _TMR2_StartTimer *****************
  8729 ;; Defined at:
  8730 ;;		line 88 in file "mcc_generated_files/tmr2.c"
  8731 ;; Parameters:    Size  Location     Type
  8732 ;;		None
  8733 ;; Auto vars:     Size  Location     Type
  8734 ;;		None
  8735 ;; Return value:  Size  Location     Type
  8736 ;;                  1    wreg      void 
  8737 ;; Registers used:
  8738 ;;		None
  8739 ;; Tracked objects:
  8740 ;;		On entry : 0/0
  8741 ;;		On exit  : 0/0
  8742 ;;		Unchanged: 0/0
  8743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8744 ;;      Params:         0       0       0       0       0       0       0
  8745 ;;      Locals:         0       0       0       0       0       0       0
  8746 ;;      Temps:          0       0       0       0       0       0       0
  8747 ;;      Totals:         0       0       0       0       0       0       0
  8748 ;;Total ram usage:        0 bytes
  8749 ;; Hardware stack levels used:    1
  8750 ;; Hardware stack levels required when called:    4
  8751 ;; This function calls:
  8752 ;;		Nothing
  8753 ;; This function is called by:
  8754 ;;		_TMR2_Initialize
  8755 ;; This function uses a non-reentrant model
  8756 ;;
  8757                           
  8758                           	psect	text38
  8759  00303C                     __ptext38:
  8760                           	opt stack 0
  8761  00303C                     _TMR2_StartTimer:
  8762                           	opt stack 24
  8763                           
  8764                           ;tmr2.c: 91: T2CONbits.TMR2ON = 1;
  8765                           
  8766                           ;incstack = 0
  8767  00303C  84BA               	bsf	4026,2,c	;volatile
  8768  00303E  0012               	return		;funcret
  8769  003040                     __end_of_TMR2_StartTimer:
  8770                           	opt stack 0
  8771                           tosu	equ	0xFFF
  8772                           tosh	equ	0xFFE
  8773                           tosl	equ	0xFFD
  8774                           pclath	equ	0xFFA
  8775                           tblptru	equ	0xFF8
  8776                           tblptrh	equ	0xFF7
  8777                           tblptrl	equ	0xFF6
  8778                           tablat	equ	0xFF5
  8779                           prodh	equ	0xFF4
  8780                           prodl	equ	0xFF3
  8781                           intcon	equ	0xFF2
  8782                           postinc0	equ	0xFEE
  8783                           wreg	equ	0xFE8
  8784                           indf2	equ	0xFDF
  8785                           postinc2	equ	0xFDE
  8786                           postdec2	equ	0xFDD
  8787                           plusw2	equ	0xFDB
  8788                           fsr2h	equ	0xFDA
  8789                           fsr2l	equ	0xFD9
  8790                           status	equ	0xFD8
  8791                           
  8792 ;; *************** function _TMR2_SetInterruptHandler *****************
  8793 ;; Defined at:
  8794 ;;		line 293 in file "mcc_generated_files/tmr2.c"
  8795 ;; Parameters:    Size  Location     Type
  8796 ;;  InterruptHan    2   26[COMRAM] PTR void 
  8797 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  8798 ;; Auto vars:     Size  Location     Type
  8799 ;;		None
  8800 ;; Return value:  Size  Location     Type
  8801 ;;                  1    wreg      void 
  8802 ;; Registers used:
  8803 ;;		wreg, status,2, status,0
  8804 ;; Tracked objects:
  8805 ;;		On entry : 0/0
  8806 ;;		On exit  : 0/0
  8807 ;;		Unchanged: 0/0
  8808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8809 ;;      Params:         2       0       0       0       0       0       0
  8810 ;;      Locals:         0       0       0       0       0       0       0
  8811 ;;      Temps:          0       0       0       0       0       0       0
  8812 ;;      Totals:         2       0       0       0       0       0       0
  8813 ;;Total ram usage:        2 bytes
  8814 ;; Hardware stack levels used:    1
  8815 ;; Hardware stack levels required when called:    4
  8816 ;; This function calls:
  8817 ;;		Nothing
  8818 ;; This function is called by:
  8819 ;;		_TMR2_Initialize
  8820 ;; This function uses a non-reentrant model
  8821 ;;
  8822                           
  8823                           	psect	text39
  8824  00302A                     __ptext39:
  8825                           	opt stack 0
  8826  00302A                     _TMR2_SetInterruptHandler:
  8827                           	opt stack 24
  8828                           
  8829                           ;tmr2.c: 294: TMR2_InterruptHandler = InterruptHandler;
  8830                           
  8831                           ;incstack = 0
  8832  00302A  C01B  F0FE         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  8833  00302E  C01C  F0FF         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  8834  003032  0012               	return		;funcret
  8835  003034                     __end_of_TMR2_SetInterruptHandler:
  8836                           	opt stack 0
  8837                           tosu	equ	0xFFF
  8838                           tosh	equ	0xFFE
  8839                           tosl	equ	0xFFD
  8840                           pclath	equ	0xFFA
  8841                           tblptru	equ	0xFF8
  8842                           tblptrh	equ	0xFF7
  8843                           tblptrl	equ	0xFF6
  8844                           tablat	equ	0xFF5
  8845                           prodh	equ	0xFF4
  8846                           prodl	equ	0xFF3
  8847                           intcon	equ	0xFF2
  8848                           postinc0	equ	0xFEE
  8849                           wreg	equ	0xFE8
  8850                           indf2	equ	0xFDF
  8851                           postinc2	equ	0xFDE
  8852                           postdec2	equ	0xFDD
  8853                           plusw2	equ	0xFDB
  8854                           fsr2h	equ	0xFDA
  8855                           fsr2l	equ	0xFD9
  8856                           status	equ	0xFD8
  8857                           
  8858 ;; *************** function _TMR0_Initialize *****************
  8859 ;; Defined at:
  8860 ;;		line 22 in file "mcc_generated_files/tmr0.c"
  8861 ;; Parameters:    Size  Location     Type
  8862 ;;		None
  8863 ;; Auto vars:     Size  Location     Type
  8864 ;;		None
  8865 ;; Return value:  Size  Location     Type
  8866 ;;                  1    wreg      void 
  8867 ;; Registers used:
  8868 ;;		wreg, status,2, cstack
  8869 ;; Tracked objects:
  8870 ;;		On entry : 0/0
  8871 ;;		On exit  : 0/0
  8872 ;;		Unchanged: 0/0
  8873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8874 ;;      Params:         0       0       0       0       0       0       0
  8875 ;;      Locals:         0       0       0       0       0       0       0
  8876 ;;      Temps:          0       0       0       0       0       0       0
  8877 ;;      Totals:         0       0       0       0       0       0       0
  8878 ;;Total ram usage:        0 bytes
  8879 ;; Hardware stack levels used:    1
  8880 ;; Hardware stack levels required when called:    5
  8881 ;; This function calls:
  8882 ;;		_TMR0_StartTimer
  8883 ;; This function is called by:
  8884 ;;		_SYSTEM_Initialize
  8885 ;; This function uses a non-reentrant model
  8886 ;;
  8887                           
  8888                           	psect	text40
  8889  002F0E                     __ptext40:
  8890                           	opt stack 0
  8891  002F0E                     _TMR0_Initialize:
  8892                           	opt stack 24
  8893                           
  8894                           ;tmr0.c: 26: T0CON = 0x94;
  8895                           
  8896                           ;incstack = 0
  8897  002F0E  0E94               	movlw	148
  8898  002F10  6ED5               	movwf	4053,c	;volatile
  8899                           
  8900                           ;tmr0.c: 29: TMR0H = 0xCF;
  8901  002F12  0ECF               	movlw	207
  8902  002F14  6ED7               	movwf	4055,c	;volatile
  8903                           
  8904                           ;tmr0.c: 32: TMR0L = 0x2C;
  8905  002F16  0E2C               	movlw	44
  8906  002F18  6ED6               	movwf	4054,c	;volatile
  8907                           
  8908                           ;tmr0.c: 35: timer0ReloadVal16bit = 53036;
  8909  002F1A  0ECF               	movlw	207
  8910  002F1C  6E43               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  8911  002F1E  0E2C               	movlw	44
  8912  002F20  6E42               	movwf	_timer0ReloadVal16bit,c	;volatile
  8913                           
  8914                           ;tmr0.c: 38: INTCONbits.TMR0IF = 0;
  8915  002F22  94F2               	bcf	intcon,2,c	;volatile
  8916                           
  8917                           ;tmr0.c: 41: INTCONbits.TMR0IE = 1;
  8918  002F24  8AF2               	bsf	intcon,5,c	;volatile
  8919                           
  8920                           ;tmr0.c: 44: TMR0_StartTimer();
  8921  002F26  EC20  F018         	call	_TMR0_StartTimer	;wreg free
  8922  002F2A  0012               	return		;funcret
  8923  002F2C                     __end_of_TMR0_Initialize:
  8924                           	opt stack 0
  8925                           tosu	equ	0xFFF
  8926                           tosh	equ	0xFFE
  8927                           tosl	equ	0xFFD
  8928                           pclath	equ	0xFFA
  8929                           tblptru	equ	0xFF8
  8930                           tblptrh	equ	0xFF7
  8931                           tblptrl	equ	0xFF6
  8932                           tablat	equ	0xFF5
  8933                           prodh	equ	0xFF4
  8934                           prodl	equ	0xFF3
  8935                           intcon	equ	0xFF2
  8936                           postinc0	equ	0xFEE
  8937                           wreg	equ	0xFE8
  8938                           indf2	equ	0xFDF
  8939                           postinc2	equ	0xFDE
  8940                           postdec2	equ	0xFDD
  8941                           plusw2	equ	0xFDB
  8942                           fsr2h	equ	0xFDA
  8943                           fsr2l	equ	0xFD9
  8944                           status	equ	0xFD8
  8945                           
  8946 ;; *************** function _TMR0_StartTimer *****************
  8947 ;; Defined at:
  8948 ;;		line 47 in file "mcc_generated_files/tmr0.c"
  8949 ;; Parameters:    Size  Location     Type
  8950 ;;		None
  8951 ;; Auto vars:     Size  Location     Type
  8952 ;;		None
  8953 ;; Return value:  Size  Location     Type
  8954 ;;                  1    wreg      void 
  8955 ;; Registers used:
  8956 ;;		None
  8957 ;; Tracked objects:
  8958 ;;		On entry : 0/0
  8959 ;;		On exit  : 0/0
  8960 ;;		Unchanged: 0/0
  8961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8962 ;;      Params:         0       0       0       0       0       0       0
  8963 ;;      Locals:         0       0       0       0       0       0       0
  8964 ;;      Temps:          0       0       0       0       0       0       0
  8965 ;;      Totals:         0       0       0       0       0       0       0
  8966 ;;Total ram usage:        0 bytes
  8967 ;; Hardware stack levels used:    1
  8968 ;; Hardware stack levels required when called:    4
  8969 ;; This function calls:
  8970 ;;		Nothing
  8971 ;; This function is called by:
  8972 ;;		_TMR0_Initialize
  8973 ;; This function uses a non-reentrant model
  8974 ;;
  8975                           
  8976                           	psect	text41
  8977  003040                     __ptext41:
  8978                           	opt stack 0
  8979  003040                     _TMR0_StartTimer:
  8980                           	opt stack 24
  8981                           
  8982                           ;tmr0.c: 49: T0CONbits.TMR0ON = 1;
  8983                           
  8984                           ;incstack = 0
  8985  003040  8ED5               	bsf	4053,7,c	;volatile
  8986  003042  0012               	return		;funcret
  8987  003044                     __end_of_TMR0_StartTimer:
  8988                           	opt stack 0
  8989                           tosu	equ	0xFFF
  8990                           tosh	equ	0xFFE
  8991                           tosl	equ	0xFFD
  8992                           pclath	equ	0xFFA
  8993                           tblptru	equ	0xFF8
  8994                           tblptrh	equ	0xFF7
  8995                           tblptrl	equ	0xFF6
  8996                           tablat	equ	0xFF5
  8997                           prodh	equ	0xFF4
  8998                           prodl	equ	0xFF3
  8999                           intcon	equ	0xFF2
  9000                           postinc0	equ	0xFEE
  9001                           wreg	equ	0xFE8
  9002                           indf2	equ	0xFDF
  9003                           postinc2	equ	0xFDE
  9004                           postdec2	equ	0xFDD
  9005                           plusw2	equ	0xFDB
  9006                           fsr2h	equ	0xFDA
  9007                           fsr2l	equ	0xFD9
  9008                           status	equ	0xFD8
  9009                           
  9010 ;; *************** function _PIN_MANAGER_Initialize *****************
  9011 ;; Defined at:
  9012 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  9013 ;; Parameters:    Size  Location     Type
  9014 ;;		None
  9015 ;; Auto vars:     Size  Location     Type
  9016 ;;		None
  9017 ;; Return value:  Size  Location     Type
  9018 ;;                  1    wreg      void 
  9019 ;; Registers used:
  9020 ;;		wreg, status,2
  9021 ;; Tracked objects:
  9022 ;;		On entry : 0/0
  9023 ;;		On exit  : 0/0
  9024 ;;		Unchanged: 0/0
  9025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9026 ;;      Params:         0       0       0       0       0       0       0
  9027 ;;      Locals:         0       0       0       0       0       0       0
  9028 ;;      Temps:          0       0       0       0       0       0       0
  9029 ;;      Totals:         0       0       0       0       0       0       0
  9030 ;;Total ram usage:        0 bytes
  9031 ;; Hardware stack levels used:    1
  9032 ;; Hardware stack levels required when called:    4
  9033 ;; This function calls:
  9034 ;;		Nothing
  9035 ;; This function is called by:
  9036 ;;		_SYSTEM_Initialize
  9037 ;; This function uses a non-reentrant model
  9038 ;;
  9039                           
  9040                           	psect	text42
  9041  002ABE                     __ptext42:
  9042                           	opt stack 0
  9043  002ABE                     _PIN_MANAGER_Initialize:
  9044                           	opt stack 25
  9045                           
  9046                           ;pin_manager.c: 52: LATA = 0x00;
  9047                           
  9048                           ;incstack = 0
  9049  002ABE  0E00               	movlw	0
  9050  002AC0  6E89               	movwf	3977,c	;volatile
  9051                           
  9052                           ;pin_manager.c: 53: TRISA = 0xF7;
  9053  002AC2  0EF7               	movlw	247
  9054  002AC4  6E92               	movwf	3986,c	;volatile
  9055                           
  9056                           ;pin_manager.c: 54: ANSELA = 0x20;
  9057  002AC6  0E20               	movlw	32
  9058  002AC8  010F               	movlb	15	; () banked
  9059  002ACA  6F38               	movwf	56,b	;volatile
  9060                           
  9061                           ;pin_manager.c: 56: LATB = 0x00;
  9062  002ACC  0E00               	movlw	0
  9063  002ACE  6E8A               	movwf	3978,c	;volatile
  9064                           
  9065                           ;pin_manager.c: 57: TRISB = 0xD7;
  9066  002AD0  0ED7               	movlw	215
  9067  002AD2  6E93               	movwf	3987,c	;volatile
  9068                           
  9069                           ;pin_manager.c: 58: ANSELB = 0x00;
  9070  002AD4  0E00               	movlw	0
  9071  002AD6  010F               	movlb	15	; () banked
  9072  002AD8  6F39               	movwf	57,b	;volatile
  9073                           
  9074                           ;pin_manager.c: 59: WPUB = 0x00;
  9075  002ADA  0E00               	movlw	0
  9076  002ADC  6E61               	movwf	3937,c	;volatile
  9077                           
  9078                           ;pin_manager.c: 61: LATC = 0x18;
  9079  002ADE  0E18               	movlw	24
  9080  002AE0  6E8B               	movwf	3979,c	;volatile
  9081                           
  9082                           ;pin_manager.c: 62: TRISC = 0xDF;
  9083  002AE2  0EDF               	movlw	223
  9084  002AE4  6E94               	movwf	3988,c	;volatile
  9085                           
  9086                           ;pin_manager.c: 63: ANSELC = 0x04;
  9087  002AE6  0E04               	movlw	4
  9088  002AE8  010F               	movlb	15	; () banked
  9089  002AEA  6F3A               	movwf	58,b	;volatile
  9090                           
  9091                           ;pin_manager.c: 65: LATD = 0x00;
  9092  002AEC  0E00               	movlw	0
  9093  002AEE  6E8C               	movwf	3980,c	;volatile
  9094                           
  9095                           ;pin_manager.c: 66: TRISD = 0xFD;
  9096  002AF0  0EFD               	movlw	253
  9097  002AF2  6E95               	movwf	3989,c	;volatile
  9098                           
  9099                           ;pin_manager.c: 67: ANSELD = 0xDD;
  9100  002AF4  0EDD               	movlw	221
  9101  002AF6  010F               	movlb	15	; () banked
  9102  002AF8  6F3B               	movwf	59,b	;volatile
  9103                           
  9104                           ;pin_manager.c: 69: LATE = 0x00;
  9105  002AFA  0E00               	movlw	0
  9106  002AFC  6E8D               	movwf	3981,c	;volatile
  9107                           
  9108                           ;pin_manager.c: 70: TRISE = 0x00;
  9109  002AFE  0E00               	movlw	0
  9110  002B00  6E96               	movwf	3990,c	;volatile
  9111                           
  9112                           ;pin_manager.c: 71: ANSELE = 0x00;
  9113  002B02  0E00               	movlw	0
  9114  002B04  010F               	movlb	15	; () banked
  9115  002B06  6F3C               	movwf	60,b	;volatile
  9116                           
  9117                           ; BSR set to: 15
  9118                           ;pin_manager.c: 72: TRISCbits.TRISC5=0;
  9119  002B08  9A94               	bcf	3988,5,c	;volatile
  9120                           
  9121                           ; BSR set to: 15
  9122                           ;pin_manager.c: 73: INTCON2bits.nRBPU = 0x01;
  9123  002B0A  8EF1               	bsf	intcon2,7,c	;volatile
  9124                           
  9125                           ; BSR set to: 15
  9126  002B0C  0012               	return		;funcret
  9127  002B0E                     __end_of_PIN_MANAGER_Initialize:
  9128                           	opt stack 0
  9129                           tosu	equ	0xFFF
  9130                           tosh	equ	0xFFE
  9131                           tosl	equ	0xFFD
  9132                           pclath	equ	0xFFA
  9133                           tblptru	equ	0xFF8
  9134                           tblptrh	equ	0xFF7
  9135                           tblptrl	equ	0xFF6
  9136                           tablat	equ	0xFF5
  9137                           prodh	equ	0xFF4
  9138                           prodl	equ	0xFF3
  9139                           intcon	equ	0xFF2
  9140                           intcon2	equ	0xFF1
  9141                           postinc0	equ	0xFEE
  9142                           wreg	equ	0xFE8
  9143                           indf2	equ	0xFDF
  9144                           postinc2	equ	0xFDE
  9145                           postdec2	equ	0xFDD
  9146                           plusw2	equ	0xFDB
  9147                           fsr2h	equ	0xFDA
  9148                           fsr2l	equ	0xFD9
  9149                           status	equ	0xFD8
  9150                           
  9151 ;; *************** function _OSCILLATOR_Initialize *****************
  9152 ;; Defined at:
  9153 ;;		line 125 in file "mcc_generated_files/mcc.c"
  9154 ;; Parameters:    Size  Location     Type
  9155 ;;		None
  9156 ;; Auto vars:     Size  Location     Type
  9157 ;;		None
  9158 ;; Return value:  Size  Location     Type
  9159 ;;                  1    wreg      void 
  9160 ;; Registers used:
  9161 ;;		wreg, status,2
  9162 ;; Tracked objects:
  9163 ;;		On entry : 0/0
  9164 ;;		On exit  : 0/0
  9165 ;;		Unchanged: 0/0
  9166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9167 ;;      Params:         0       0       0       0       0       0       0
  9168 ;;      Locals:         0       0       0       0       0       0       0
  9169 ;;      Temps:          0       0       0       0       0       0       0
  9170 ;;      Totals:         0       0       0       0       0       0       0
  9171 ;;Total ram usage:        0 bytes
  9172 ;; Hardware stack levels used:    1
  9173 ;; Hardware stack levels required when called:    4
  9174 ;; This function calls:
  9175 ;;		Nothing
  9176 ;; This function is called by:
  9177 ;;		_SYSTEM_Initialize
  9178 ;; This function uses a non-reentrant model
  9179 ;;
  9180                           
  9181                           	psect	text43
  9182  00301C                     __ptext43:
  9183                           	opt stack 0
  9184  00301C                     _OSCILLATOR_Initialize:
  9185                           	opt stack 25
  9186                           
  9187                           ;mcc.c: 128: OSCCON = 0x72;
  9188                           
  9189                           ; BSR set to: 15
  9190                           ;incstack = 0
  9191  00301C  0E72               	movlw	114
  9192  00301E  6ED3               	movwf	4051,c	;volatile
  9193                           
  9194                           ;mcc.c: 130: OSCCON2 = 0x04;
  9195  003020  0E04               	movlw	4
  9196  003022  6ED2               	movwf	4050,c	;volatile
  9197                           
  9198                           ;mcc.c: 132: OSCTUNE = 0x00;
  9199  003024  0E00               	movlw	0
  9200  003026  6E9B               	movwf	3995,c	;volatile
  9201  003028  0012               	return		;funcret
  9202  00302A                     __end_of_OSCILLATOR_Initialize:
  9203                           	opt stack 0
  9204                           tosu	equ	0xFFF
  9205                           tosh	equ	0xFFE
  9206                           tosl	equ	0xFFD
  9207                           pclath	equ	0xFFA
  9208                           tblptru	equ	0xFF8
  9209                           tblptrh	equ	0xFF7
  9210                           tblptrl	equ	0xFF6
  9211                           tablat	equ	0xFF5
  9212                           prodh	equ	0xFF4
  9213                           prodl	equ	0xFF3
  9214                           intcon	equ	0xFF2
  9215                           intcon2	equ	0xFF1
  9216                           postinc0	equ	0xFEE
  9217                           wreg	equ	0xFE8
  9218                           indf2	equ	0xFDF
  9219                           postinc2	equ	0xFDE
  9220                           postdec2	equ	0xFDD
  9221                           plusw2	equ	0xFDB
  9222                           fsr2h	equ	0xFDA
  9223                           fsr2l	equ	0xFD9
  9224                           status	equ	0xFD8
  9225                           
  9226 ;; *************** function _INTERRUPT_Initialize *****************
  9227 ;; Defined at:
  9228 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9229 ;; Parameters:    Size  Location     Type
  9230 ;;		None
  9231 ;; Auto vars:     Size  Location     Type
  9232 ;;		None
  9233 ;; Return value:  Size  Location     Type
  9234 ;;                  1    wreg      void 
  9235 ;; Registers used:
  9236 ;;		None
  9237 ;; Tracked objects:
  9238 ;;		On entry : 0/0
  9239 ;;		On exit  : 0/0
  9240 ;;		Unchanged: 0/0
  9241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9242 ;;      Params:         0       0       0       0       0       0       0
  9243 ;;      Locals:         0       0       0       0       0       0       0
  9244 ;;      Temps:          0       0       0       0       0       0       0
  9245 ;;      Totals:         0       0       0       0       0       0       0
  9246 ;;Total ram usage:        0 bytes
  9247 ;; Hardware stack levels used:    1
  9248 ;; Hardware stack levels required when called:    4
  9249 ;; This function calls:
  9250 ;;		Nothing
  9251 ;; This function is called by:
  9252 ;;		_SYSTEM_Initialize
  9253 ;; This function uses a non-reentrant model
  9254 ;;
  9255                           
  9256                           	psect	text44
  9257  002FEE                     __ptext44:
  9258                           	opt stack 0
  9259  002FEE                     _INTERRUPT_Initialize:
  9260                           	opt stack 25
  9261                           
  9262                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  9263                           
  9264                           ;incstack = 0
  9265  002FEE  9ED0               	bcf	4048,7,c	;volatile
  9266                           
  9267                           ;interrupt_manager.c: 60: IPR1bits.RC1IP = 0;
  9268  002FF0  9A9F               	bcf	3999,5,c	;volatile
  9269                           
  9270                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
  9271  002FF2  989F               	bcf	3999,4,c	;volatile
  9272                           
  9273                           ;interrupt_manager.c: 64: INTCON2bits.TMR0IP = 0;
  9274  002FF4  94F1               	bcf	intcon2,2,c	;volatile
  9275                           
  9276                           ;interrupt_manager.c: 66: IPR1bits.ADIP = 0;
  9277  002FF6  9C9F               	bcf	3999,6,c	;volatile
  9278                           
  9279                           ;interrupt_manager.c: 68: IPR1bits.SSP1IP = 0;
  9280  002FF8  969F               	bcf	3999,3,c	;volatile
  9281                           
  9282                           ;interrupt_manager.c: 70: IPR2bits.BCL1IP = 0;
  9283  002FFA  96A2               	bcf	4002,3,c	;volatile
  9284                           
  9285                           ;interrupt_manager.c: 71: IPR1bits.TMR2IP=0;
  9286  002FFC  929F               	bcf	3999,1,c	;volatile
  9287  002FFE  0012               	return		;funcret
  9288  003000                     __end_of_INTERRUPT_Initialize:
  9289                           	opt stack 0
  9290                           tosu	equ	0xFFF
  9291                           tosh	equ	0xFFE
  9292                           tosl	equ	0xFFD
  9293                           pclath	equ	0xFFA
  9294                           tblptru	equ	0xFF8
  9295                           tblptrh	equ	0xFF7
  9296                           tblptrl	equ	0xFF6
  9297                           tablat	equ	0xFF5
  9298                           prodh	equ	0xFF4
  9299                           prodl	equ	0xFF3
  9300                           intcon	equ	0xFF2
  9301                           intcon2	equ	0xFF1
  9302                           postinc0	equ	0xFEE
  9303                           wreg	equ	0xFE8
  9304                           indf2	equ	0xFDF
  9305                           postinc2	equ	0xFDE
  9306                           postdec2	equ	0xFDD
  9307                           plusw2	equ	0xFDB
  9308                           fsr2h	equ	0xFDA
  9309                           fsr2l	equ	0xFD9
  9310                           status	equ	0xFD8
  9311                           
  9312 ;; *************** function _I2C1_Initialize *****************
  9313 ;; Defined at:
  9314 ;;		line 151 in file "mcc_generated_files/i2c1.c"
  9315 ;; Parameters:    Size  Location     Type
  9316 ;;		None
  9317 ;; Auto vars:     Size  Location     Type
  9318 ;;		None
  9319 ;; Return value:  Size  Location     Type
  9320 ;;                  1    wreg      void 
  9321 ;; Registers used:
  9322 ;;		wreg, status,2, status,0
  9323 ;; Tracked objects:
  9324 ;;		On entry : 0/0
  9325 ;;		On exit  : 0/0
  9326 ;;		Unchanged: 0/0
  9327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9328 ;;      Params:         0       0       0       0       0       0       0
  9329 ;;      Locals:         0       0       0       0       0       0       0
  9330 ;;      Temps:          0       0       0       0       0       0       0
  9331 ;;      Totals:         0       0       0       0       0       0       0
  9332 ;;Total ram usage:        0 bytes
  9333 ;; Hardware stack levels used:    1
  9334 ;; Hardware stack levels required when called:    4
  9335 ;; This function calls:
  9336 ;;		Nothing
  9337 ;; This function is called by:
  9338 ;;		_SYSTEM_Initialize
  9339 ;; This function uses a non-reentrant model
  9340 ;;
  9341                           
  9342                           	psect	text45
  9343  002C6E                     __ptext45:
  9344                           	opt stack 0
  9345  002C6E                     _I2C1_Initialize:
  9346                           	opt stack 25
  9347                           
  9348                           ;i2c1.c: 153: i2c1_object.pTrHead = i2c1_tr_queue;
  9349                           
  9350                           ;incstack = 0
  9351  002C6E  0EED               	movlw	low _i2c1_tr_queue
  9352  002C70  0100               	movlb	0	; () banked
  9353  002C72  6FBA               	movwf	(_i2c1_object+2)& (0+255),b
  9354  002C74  0E00               	movlw	high _i2c1_tr_queue
  9355  002C76  0100               	movlb	0	; () banked
  9356  002C78  6FBB               	movwf	(_i2c1_object+3)& (0+255),b
  9357                           
  9358                           ;i2c1.c: 154: i2c1_object.pTrTail = i2c1_tr_queue;
  9359  002C7A  0EED               	movlw	low _i2c1_tr_queue
  9360  002C7C  0100               	movlb	0	; () banked
  9361  002C7E  6FB8               	movwf	_i2c1_object& (0+255),b
  9362  002C80  0E00               	movlw	high _i2c1_tr_queue
  9363  002C82  0100               	movlb	0	; () banked
  9364  002C84  6FB9               	movwf	(_i2c1_object+1)& (0+255),b
  9365                           
  9366                           ; BSR set to: 0
  9367                           ;i2c1.c: 155: i2c1_object.trStatus.s.empty = 1;
  9368  002C86  0100               	movlb	0	; () banked
  9369  002C88  83BC               	bsf	(_i2c1_object+4)& (0+255),1,b
  9370                           
  9371                           ; BSR set to: 0
  9372                           ;i2c1.c: 156: i2c1_object.trStatus.s.full = 0;
  9373  002C8A  0100               	movlb	0	; () banked
  9374  002C8C  91BC               	bcf	(_i2c1_object+4)& (0+255),0,b
  9375                           
  9376                           ; BSR set to: 0
  9377                           ;i2c1.c: 158: i2c1_object.i2cErrors = 0;
  9378  002C8E  0E00               	movlw	0
  9379  002C90  0100               	movlb	0	; () banked
  9380  002C92  6FBE               	movwf	(_i2c1_object+6)& (0+255),b
  9381                           
  9382                           ; BSR set to: 0
  9383                           ;i2c1.c: 161: SSP1STAT = 0x80;
  9384  002C94  0E80               	movlw	128
  9385  002C96  6EC7               	movwf	4039,c	;volatile
  9386                           
  9387                           ; BSR set to: 0
  9388                           ;i2c1.c: 163: SSP1CON1 = 0x28;
  9389  002C98  0E28               	movlw	40
  9390  002C9A  6EC6               	movwf	4038,c	;volatile
  9391                           
  9392                           ; BSR set to: 0
  9393                           ;i2c1.c: 165: SSP1CON3 = 0x00;
  9394  002C9C  0E00               	movlw	0
  9395  002C9E  6ECB               	movwf	4043,c	;volatile
  9396                           
  9397                           ; BSR set to: 0
  9398                           ;i2c1.c: 167: SSP1ADD = 0x09;
  9399  002CA0  0E09               	movlw	9
  9400  002CA2  6EC8               	movwf	4040,c	;volatile
  9401                           
  9402                           ; BSR set to: 0
  9403                           ;i2c1.c: 171: PIR1bits.SSP1IF = 0;
  9404  002CA4  969E               	bcf	3998,3,c	;volatile
  9405                           
  9406                           ; BSR set to: 0
  9407                           ;i2c1.c: 173: PIE1bits.SSP1IE = 1;
  9408  002CA6  869D               	bsf	3997,3,c	;volatile
  9409                           
  9410                           ; BSR set to: 0
  9411  002CA8  0012               	return		;funcret
  9412  002CAA                     __end_of_I2C1_Initialize:
  9413                           	opt stack 0
  9414                           tosu	equ	0xFFF
  9415                           tosh	equ	0xFFE
  9416                           tosl	equ	0xFFD
  9417                           pclath	equ	0xFFA
  9418                           tblptru	equ	0xFF8
  9419                           tblptrh	equ	0xFF7
  9420                           tblptrl	equ	0xFF6
  9421                           tablat	equ	0xFF5
  9422                           prodh	equ	0xFF4
  9423                           prodl	equ	0xFF3
  9424                           intcon	equ	0xFF2
  9425                           intcon2	equ	0xFF1
  9426                           postinc0	equ	0xFEE
  9427                           wreg	equ	0xFE8
  9428                           indf2	equ	0xFDF
  9429                           postinc2	equ	0xFDE
  9430                           postdec2	equ	0xFDD
  9431                           plusw2	equ	0xFDB
  9432                           fsr2h	equ	0xFDA
  9433                           fsr2l	equ	0xFD9
  9434                           status	equ	0xFD8
  9435                           
  9436 ;; *************** function _EUSART1_Initialize *****************
  9437 ;; Defined at:
  9438 ;;		line 21 in file "UART.c"
  9439 ;; Parameters:    Size  Location     Type
  9440 ;;		None
  9441 ;; Auto vars:     Size  Location     Type
  9442 ;;		None
  9443 ;; Return value:  Size  Location     Type
  9444 ;;                  1    wreg      void 
  9445 ;; Registers used:
  9446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9447 ;; Tracked objects:
  9448 ;;		On entry : 0/0
  9449 ;;		On exit  : 0/0
  9450 ;;		Unchanged: 0/0
  9451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9452 ;;      Params:         0       0       0       0       0       0       0
  9453 ;;      Locals:         0       0       0       0       0       0       0
  9454 ;;      Temps:          0       0       0       0       0       0       0
  9455 ;;      Totals:         0       0       0       0       0       0       0
  9456 ;;Total ram usage:        0 bytes
  9457 ;; Hardware stack levels used:    1
  9458 ;; Hardware stack levels required when called:    6
  9459 ;; This function calls:
  9460 ;;		_UART_buff_init
  9461 ;; This function is called by:
  9462 ;;		_SYSTEM_Initialize
  9463 ;; This function uses a non-reentrant model
  9464 ;;
  9465                           
  9466                           	psect	text46
  9467  002CAA                     __ptext46:
  9468                           	opt stack 0
  9469  002CAA                     _EUSART1_Initialize:
  9470                           	opt stack 23
  9471                           
  9472                           ;UART.c: 23: PIE1bits.RC1IE = 0;
  9473                           
  9474                           ; BSR set to: 0
  9475                           ;incstack = 0
  9476  002CAA  9A9D               	bcf	3997,5,c	;volatile
  9477                           
  9478                           ;UART.c: 24: PIE1bits.TX1IE = 0;
  9479  002CAC  989D               	bcf	3997,4,c	;volatile
  9480                           
  9481                           ;UART.c: 29: BAUD1CON = 0x48;
  9482  002CAE  0E48               	movlw	72
  9483  002CB0  6EB8               	movwf	4024,c	;volatile
  9484                           
  9485                           ;UART.c: 32: RC1STA = 0x98;
  9486  002CB2  0E98               	movlw	152
  9487  002CB4  6EAB               	movwf	4011,c	;volatile
  9488                           
  9489                           ;UART.c: 35: TX1STA = 0x26;
  9490  002CB6  0E26               	movlw	38
  9491  002CB8  6EAC               	movwf	4012,c	;volatile
  9492                           
  9493                           ;UART.c: 38: SPBRG1 = (((16000000/38400)/4)-1);
  9494  002CBA  0E67               	movlw	103
  9495  002CBC  6EAF               	movwf	4015,c	;volatile
  9496                           
  9497                           ;UART.c: 41: SPBRGH1 = 0x00;
  9498  002CBE  0E00               	movlw	0
  9499  002CC0  6EB0               	movwf	4016,c	;volatile
  9500                           
  9501                           ;UART.c: 44: TXREG1 = 0x00;
  9502  002CC2  0E00               	movlw	0
  9503  002CC4  6EAD               	movwf	4013,c	;volatile
  9504                           
  9505                           ;UART.c: 47: RCREG1 = 0x00;
  9506  002CC6  0E00               	movlw	0
  9507  002CC8  6EAE               	movwf	4014,c	;volatile
  9508                           
  9509                           ;UART.c: 49: UART_buff_init(&input_buffer);
  9510  002CCA  0E00               	movlw	low _input_buffer
  9511  002CCC  6E23               	movwf	UART_buff_init@_this,c
  9512  002CCE  0E04               	movlw	high _input_buffer
  9513  002CD0  6E24               	movwf	UART_buff_init@_this+1,c
  9514  002CD2  EC96  F017         	call	_UART_buff_init	;wreg free
  9515                           
  9516                           ;UART.c: 50: UART_buff_init(&output_buffer);
  9517  002CD6  0E00               	movlw	low _output_buffer
  9518  002CD8  6E23               	movwf	UART_buff_init@_this,c
  9519  002CDA  0E05               	movlw	high _output_buffer
  9520  002CDC  6E24               	movwf	UART_buff_init@_this+1,c
  9521  002CDE  EC96  F017         	call	_UART_buff_init	;wreg free
  9522                           
  9523                           ;UART.c: 52: PIE1bits.RC1IE = 1;
  9524  002CE2  8A9D               	bsf	3997,5,c	;volatile
  9525  002CE4  0012               	return		;funcret
  9526  002CE6                     __end_of_EUSART1_Initialize:
  9527                           	opt stack 0
  9528                           tosu	equ	0xFFF
  9529                           tosh	equ	0xFFE
  9530                           tosl	equ	0xFFD
  9531                           pclath	equ	0xFFA
  9532                           tblptru	equ	0xFF8
  9533                           tblptrh	equ	0xFF7
  9534                           tblptrl	equ	0xFF6
  9535                           tablat	equ	0xFF5
  9536                           prodh	equ	0xFF4
  9537                           prodl	equ	0xFF3
  9538                           intcon	equ	0xFF2
  9539                           intcon2	equ	0xFF1
  9540                           postinc0	equ	0xFEE
  9541                           wreg	equ	0xFE8
  9542                           indf2	equ	0xFDF
  9543                           postinc2	equ	0xFDE
  9544                           postdec2	equ	0xFDD
  9545                           plusw2	equ	0xFDB
  9546                           fsr2h	equ	0xFDA
  9547                           fsr2l	equ	0xFD9
  9548                           status	equ	0xFD8
  9549                           
  9550 ;; *************** function _UART_buff_init *****************
  9551 ;; Defined at:
  9552 ;;		line 56 in file "UART.c"
  9553 ;; Parameters:    Size  Location     Type
  9554 ;;  _this           2   34[COMRAM] PTR struct UART_ring_buf
  9555 ;;		 -> output_buffer(206), input_buffer(206), 
  9556 ;; Auto vars:     Size  Location     Type
  9557 ;;		None
  9558 ;; Return value:  Size  Location     Type
  9559 ;;                  1    wreg      void 
  9560 ;; Registers used:
  9561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9562 ;; Tracked objects:
  9563 ;;		On entry : 0/0
  9564 ;;		On exit  : 0/0
  9565 ;;		Unchanged: 0/0
  9566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9567 ;;      Params:         2       0       0       0       0       0       0
  9568 ;;      Locals:         0       0       0       0       0       0       0
  9569 ;;      Temps:          0       0       0       0       0       0       0
  9570 ;;      Totals:         2       0       0       0       0       0       0
  9571 ;;Total ram usage:        2 bytes
  9572 ;; Hardware stack levels used:    1
  9573 ;; Hardware stack levels required when called:    5
  9574 ;; This function calls:
  9575 ;;		_memset
  9576 ;; This function is called by:
  9577 ;;		_EUSART1_Initialize
  9578 ;; This function uses a non-reentrant model
  9579 ;;
  9580                           
  9581                           	psect	text47
  9582  002F2C                     __ptext47:
  9583                           	opt stack 0
  9584  002F2C                     _UART_buff_init:
  9585                           	opt stack 23
  9586                           
  9587                           ;UART.c: 65: memset(_this, 0, sizeof (*_this));
  9588                           
  9589                           ;incstack = 0
  9590  002F2C  C023  F01B         	movff	UART_buff_init@_this,memset@p1
  9591  002F30  C024  F01C         	movff	UART_buff_init@_this+1,memset@p1+1
  9592  002F34  0E00               	movlw	0
  9593  002F36  6E1E               	movwf	memset@c+1,c
  9594  002F38  0E00               	movlw	0
  9595  002F3A  6E1D               	movwf	memset@c,c
  9596  002F3C  0E00               	movlw	0
  9597  002F3E  6E20               	movwf	memset@n+1,c
  9598  002F40  0ECE               	movlw	206
  9599  002F42  6E1F               	movwf	memset@n,c
  9600  002F44  ECDA  F016         	call	_memset	;wreg free
  9601  002F48  0012               	return		;funcret
  9602  002F4A                     __end_of_UART_buff_init:
  9603                           	opt stack 0
  9604                           tosu	equ	0xFFF
  9605                           tosh	equ	0xFFE
  9606                           tosl	equ	0xFFD
  9607                           pclath	equ	0xFFA
  9608                           tblptru	equ	0xFF8
  9609                           tblptrh	equ	0xFF7
  9610                           tblptrl	equ	0xFF6
  9611                           tablat	equ	0xFF5
  9612                           prodh	equ	0xFF4
  9613                           prodl	equ	0xFF3
  9614                           intcon	equ	0xFF2
  9615                           intcon2	equ	0xFF1
  9616                           postinc0	equ	0xFEE
  9617                           wreg	equ	0xFE8
  9618                           indf2	equ	0xFDF
  9619                           postinc2	equ	0xFDE
  9620                           postdec2	equ	0xFDD
  9621                           plusw2	equ	0xFDB
  9622                           fsr2h	equ	0xFDA
  9623                           fsr2l	equ	0xFD9
  9624                           status	equ	0xFD8
  9625                           
  9626 ;; *************** function _memset *****************
  9627 ;; Defined at:
  9628 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\memset.c"
  9629 ;; Parameters:    Size  Location     Type
  9630 ;;  p1              2   26[COMRAM] PTR void 
  9631 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  9632 ;;  c               2   28[COMRAM] int 
  9633 ;;  n               2   30[COMRAM] unsigned int 
  9634 ;; Auto vars:     Size  Location     Type
  9635 ;;  p               2   32[COMRAM] PTR unsigned char 
  9636 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  9637 ;; Return value:  Size  Location     Type
  9638 ;;                  2   26[COMRAM] PTR void 
  9639 ;; Registers used:
  9640 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9641 ;; Tracked objects:
  9642 ;;		On entry : 0/0
  9643 ;;		On exit  : 0/0
  9644 ;;		Unchanged: 0/0
  9645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9646 ;;      Params:         6       0       0       0       0       0       0
  9647 ;;      Locals:         2       0       0       0       0       0       0
  9648 ;;      Temps:          0       0       0       0       0       0       0
  9649 ;;      Totals:         8       0       0       0       0       0       0
  9650 ;;Total ram usage:        8 bytes
  9651 ;; Hardware stack levels used:    1
  9652 ;; Hardware stack levels required when called:    4
  9653 ;; This function calls:
  9654 ;;		Nothing
  9655 ;; This function is called by:
  9656 ;;		_FastTransfer_buffer_flush
  9657 ;;		_UART_buff_init
  9658 ;;		_UART_buff_flush
  9659 ;; This function uses a non-reentrant model
  9660 ;;
  9661                           
  9662                           	psect	text48
  9663  002DB4                     __ptext48:
  9664                           	opt stack 0
  9665  002DB4                     _memset:
  9666                           	opt stack 22
  9667                           
  9668                           ;incstack = 0
  9669  002DB4  C01B  F021         	movff	memset@p1,memset@p
  9670  002DB8  C01C  F022         	movff	memset@p1+1,memset@p+1
  9671  002DBC  D008               	goto	l5986
  9672  002DBE                     l5982:
  9673  002DBE  C021  FFD9         	movff	memset@p,fsr2l
  9674  002DC2  C022  FFDA         	movff	memset@p+1,fsr2h
  9675  002DC6  C01D  FFDF         	movff	memset@c,indf2
  9676  002DCA  4A21               	infsnz	memset@p,f,c
  9677  002DCC  2A22               	incf	memset@p+1,f,c
  9678  002DCE                     l5986:
  9679  002DCE  061F               	decf	memset@n,f,c
  9680  002DD0  A0D8               	btfss	status,0,c
  9681  002DD2  0620               	decf	memset@n+1,f,c
  9682  002DD4  281F               	incf	memset@n,w,c
  9683  002DD6  E1F3               	bnz	l5982
  9684  002DD8  2820               	incf	memset@n+1,w,c
  9685  002DDA  B4D8               	btfsc	status,2,c
  9686  002DDC  0012               	return	
  9687  002DDE  D7EF               	goto	l5982
  9688  002DE0                     __end_of_memset:
  9689                           	opt stack 0
  9690                           tosu	equ	0xFFF
  9691                           tosh	equ	0xFFE
  9692                           tosl	equ	0xFFD
  9693                           pclath	equ	0xFFA
  9694                           tblptru	equ	0xFF8
  9695                           tblptrh	equ	0xFF7
  9696                           tblptrl	equ	0xFF6
  9697                           tablat	equ	0xFF5
  9698                           prodh	equ	0xFF4
  9699                           prodl	equ	0xFF3
  9700                           intcon	equ	0xFF2
  9701                           intcon2	equ	0xFF1
  9702                           postinc0	equ	0xFEE
  9703                           wreg	equ	0xFE8
  9704                           indf2	equ	0xFDF
  9705                           postinc2	equ	0xFDE
  9706                           postdec2	equ	0xFDD
  9707                           plusw2	equ	0xFDB
  9708                           fsr2h	equ	0xFDA
  9709                           fsr2l	equ	0xFD9
  9710                           status	equ	0xFD8
  9711                           
  9712 ;; *************** function _ADC_Initialize *****************
  9713 ;; Defined at:
  9714 ;;		line 59 in file "mcc_generated_files/adc.c"
  9715 ;; Parameters:    Size  Location     Type
  9716 ;;		None
  9717 ;; Auto vars:     Size  Location     Type
  9718 ;;		None
  9719 ;; Return value:  Size  Location     Type
  9720 ;;                  1    wreg      void 
  9721 ;; Registers used:
  9722 ;;		wreg, status,2
  9723 ;; Tracked objects:
  9724 ;;		On entry : 0/0
  9725 ;;		On exit  : 0/0
  9726 ;;		Unchanged: 0/0
  9727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9728 ;;      Params:         0       0       0       0       0       0       0
  9729 ;;      Locals:         0       0       0       0       0       0       0
  9730 ;;      Temps:          0       0       0       0       0       0       0
  9731 ;;      Totals:         0       0       0       0       0       0       0
  9732 ;;Total ram usage:        0 bytes
  9733 ;; Hardware stack levels used:    1
  9734 ;; Hardware stack levels required when called:    4
  9735 ;; This function calls:
  9736 ;;		Nothing
  9737 ;; This function is called by:
  9738 ;;		_SYSTEM_Initialize
  9739 ;; This function uses a non-reentrant model
  9740 ;;
  9741                           
  9742                           	psect	text49
  9743  002F82                     __ptext49:
  9744                           	opt stack 0
  9745  002F82                     _ADC_Initialize:
  9746                           	opt stack 25
  9747                           
  9748                           ;adc.c: 64: ADCON0 = 0x01;
  9749                           
  9750                           ;incstack = 0
  9751  002F82  0E01               	movlw	1
  9752  002F84  6EC2               	movwf	4034,c	;volatile
  9753                           
  9754                           ;adc.c: 67: ADCON1 = 0x80;
  9755  002F86  0E80               	movlw	128
  9756  002F88  6EC1               	movwf	4033,c	;volatile
  9757                           
  9758                           ;adc.c: 70: ADCON2 = 0x05;
  9759  002F8A  0E05               	movlw	5
  9760  002F8C  6EC0               	movwf	4032,c	;volatile
  9761                           
  9762                           ;adc.c: 73: ADRESL = 0x00;
  9763  002F8E  0E00               	movlw	0
  9764  002F90  6EC3               	movwf	4035,c	;volatile
  9765                           
  9766                           ;adc.c: 76: ADRESH = 0x00;
  9767  002F92  0E00               	movlw	0
  9768  002F94  6EC4               	movwf	4036,c	;volatile
  9769                           
  9770                           ;adc.c: 79: PIE1bits.ADIE = 1;
  9771  002F96  8C9D               	bsf	3997,6,c	;volatile
  9772  002F98  0012               	return		;funcret
  9773  002F9A                     __end_of_ADC_Initialize:
  9774                           	opt stack 0
  9775                           tosu	equ	0xFFF
  9776                           tosh	equ	0xFFE
  9777                           tosl	equ	0xFFD
  9778                           pclath	equ	0xFFA
  9779                           tblptru	equ	0xFF8
  9780                           tblptrh	equ	0xFF7
  9781                           tblptrl	equ	0xFF6
  9782                           tablat	equ	0xFF5
  9783                           prodh	equ	0xFF4
  9784                           prodl	equ	0xFF3
  9785                           intcon	equ	0xFF2
  9786                           intcon2	equ	0xFF1
  9787                           postinc0	equ	0xFEE
  9788                           wreg	equ	0xFE8
  9789                           indf2	equ	0xFDF
  9790                           postinc2	equ	0xFDE
  9791                           postdec2	equ	0xFDD
  9792                           plusw2	equ	0xFDB
  9793                           fsr2h	equ	0xFDA
  9794                           fsr2l	equ	0xFD9
  9795                           status	equ	0xFD8
  9796                           
  9797 ;; *************** function _LEDwriteDisplay *****************
  9798 ;; Defined at:
  9799 ;;		line 114 in file "LED_BarGraph.c"
  9800 ;; Parameters:    Size  Location     Type
  9801 ;;  i2c_addr        1    wreg     unsigned char 
  9802 ;; Auto vars:     Size  Location     Type
  9803 ;;  i2c_addr        1   20[BANK1 ] unsigned char 
  9804 ;;  writeBuffer    20    0[BANK1 ] unsigned char [20]
  9805 ;;  timeOut         2   21[BANK1 ] unsigned int 
  9806 ;;  status          1   23[BANK1 ] enum E8697
  9807 ;; Return value:  Size  Location     Type
  9808 ;;                  1    wreg      void 
  9809 ;; Registers used:
  9810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9811 ;; Tracked objects:
  9812 ;;		On entry : 0/0
  9813 ;;		On exit  : 0/0
  9814 ;;		Unchanged: 0/0
  9815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9816 ;;      Params:         0       0       0       0       0       0       0
  9817 ;;      Locals:         0       0      24       0       0       0       0
  9818 ;;      Temps:          0       0       0       0       0       0       0
  9819 ;;      Totals:         0       0      24       0       0       0       0
  9820 ;;Total ram usage:       24 bytes
  9821 ;; Hardware stack levels used:    1
  9822 ;; Hardware stack levels required when called:    6
  9823 ;; This function calls:
  9824 ;;		_I2C1_MasterWrite
  9825 ;; This function is called by:
  9826 ;;		_main
  9827 ;; This function uses a non-reentrant model
  9828 ;;
  9829                           
  9830                           	psect	text50
  9831  0018D8                     __ptext50:
  9832                           	opt stack 0
  9833  0018D8                     _LEDwriteDisplay:
  9834                           	opt stack 24
  9835                           
  9836                           ;incstack = 0
  9837                           ;LEDwriteDisplay@i2c_addr stored from wreg
  9838  0018D8  0101               	movlb	1	; () banked
  9839  0018DA  6F4D               	movwf	LEDwriteDisplay@i2c_addr& (0+255),b
  9840                           
  9841                           ;LED_BarGraph.c: 115: uint8_t writeBuffer[20];
  9842                           ;LED_BarGraph.c: 116: uint16_t timeOut;
  9843                           ;LED_BarGraph.c: 117: writeBuffer[0] = 0x00;
  9844  0018DC  0E00               	movlw	0
  9845  0018DE  0101               	movlb	1	; () banked
  9846  0018E0  6F39               	movwf	LEDwriteDisplay@writeBuffer& (0+255),b
  9847                           
  9848                           ;LED_BarGraph.c: 118: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  9849  0018E2  0E02               	movlw	2
  9850  0018E4  0101               	movlb	1	; () banked
  9851  0018E6  6F50               	movwf	LEDwriteDisplay@status& (0+255),b
  9852                           
  9853                           ;LED_BarGraph.c: 120: timeOut = 0;
  9854  0018E8  0E00               	movlw	0
  9855  0018EA  0101               	movlb	1	; () banked
  9856  0018EC  6F4F               	movwf	(LEDwriteDisplay@timeOut+1)& (0+255),b
  9857  0018EE  0E00               	movlw	0
  9858  0018F0  6F4E               	movwf	LEDwriteDisplay@timeOut& (0+255),b
  9859                           
  9860                           ;LED_BarGraph.c: 121: while (status != I2C1_MESSAGE_FAIL) {
  9861  0018F2  D027               	goto	l7228
  9862  0018F4                     l7208:
  9863                           
  9864                           ; BSR set to: 1
  9865                           ;LED_BarGraph.c: 123: I2C1_MasterWrite(&writeBuffer,
  9866                           ;LED_BarGraph.c: 124: 1,
  9867                           ;LED_BarGraph.c: 125: i2c_addr,
  9868                           ;LED_BarGraph.c: 126: &status);
  9869  0018F4  0E39               	movlw	low LEDwriteDisplay@writeBuffer
  9870  0018F6  6E24               	movwf	I2C1_MasterWrite@pdata,c
  9871  0018F8  0E01               	movlw	high LEDwriteDisplay@writeBuffer
  9872  0018FA  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
  9873  0018FC  0E01               	movlw	1
  9874  0018FE  6E26               	movwf	I2C1_MasterWrite@length,c
  9875  001900  C14D  F027         	movff	LEDwriteDisplay@i2c_addr,I2C1_MasterWrite@address
  9876  001904  6A28               	clrf	I2C1_MasterWrite@address+1,c
  9877  001906  0E50               	movlw	low LEDwriteDisplay@status
  9878  001908  6E29               	movwf	I2C1_MasterWrite@pflag,c
  9879  00190A  0E01               	movlw	high LEDwriteDisplay@status
  9880  00190C  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
  9881  00190E  EC87  F015         	call	_I2C1_MasterWrite	;wreg free
  9882  001912                     l7210:
  9883  001912  0E02               	movlw	2
  9884  001914  0101               	movlb	1	; () banked
  9885  001916  1950               	xorwf	LEDwriteDisplay@status& (0+255),w,b
  9886  001918  B4D8               	btfsc	status,2,c
  9887  00191A  D7FB               	goto	l7210
  9888                           
  9889                           ; BSR set to: 1
  9890                           ;LED_BarGraph.c: 131: if (status == I2C1_MESSAGE_COMPLETE)
  9891                           
  9892                           ; BSR set to: 1
  9893  00191C  0101               	movlb	1	; () banked
  9894  00191E  5150               	movf	LEDwriteDisplay@status& (0+255),w,b
  9895  001920  0101               	movlb	1	; () banked
  9896  001922  B4D8               	btfsc	status,2,c
  9897  001924  D012               	goto	l7230
  9898                           
  9899                           ; BSR set to: 1
  9900                           ;LED_BarGraph.c: 133: if (timeOut == 100)
  9901                           
  9902                           ; BSR set to: 1
  9903                           
  9904                           ; BSR set to: 1
  9905                           ;LED_BarGraph.c: 132: break;
  9906  001926  0E64               	movlw	100
  9907  001928  0101               	movlb	1	; () banked
  9908  00192A  194E               	xorwf	LEDwriteDisplay@timeOut& (0+255),w,b
  9909  00192C  0101               	movlb	1	; () banked
  9910  00192E  114F               	iorwf	(LEDwriteDisplay@timeOut+1)& (0+255),w,b
  9911  001930  B4D8               	btfsc	status,2,c
  9912  001932  D00B               	goto	l7230
  9913                           
  9914                           ; BSR set to: 1
  9915                           ;LED_BarGraph.c: 135: if (status == I2C1_MESSAGE_FAIL)
  9916                           
  9917                           ; BSR set to: 1
  9918                           
  9919                           ; BSR set to: 1
  9920                           ;LED_BarGraph.c: 134: break;
  9921  001934  0101               	movlb	1	; () banked
  9922  001936  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
  9923  001938  B4D8               	btfsc	status,2,c
  9924  00193A  D007               	goto	l7230
  9925                           
  9926                           ; BSR set to: 1
  9927                           ;LED_BarGraph.c: 137: else
  9928                           ;LED_BarGraph.c: 138: timeOut++;
  9929                           
  9930                           ; BSR set to: 1
  9931                           
  9932                           ; BSR set to: 1
  9933                           
  9934                           ; BSR set to: 1
  9935                           ;LED_BarGraph.c: 136: break;
  9936  00193C  0101               	movlb	1	; () banked
  9937  00193E  4B4E               	infsnz	LEDwriteDisplay@timeOut& (0+255),f,b
  9938  001940  2B4F               	incf	(LEDwriteDisplay@timeOut+1)& (0+255),f,b
  9939  001942                     l7228:
  9940                           
  9941                           ; BSR set to: 1
  9942  001942  0101               	movlb	1	; () banked
  9943  001944  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
  9944  001946  A4D8               	btfss	status,2,c
  9945  001948  D7D5               	goto	l7208
  9946  00194A                     l7230:
  9947                           
  9948                           ; BSR set to: 1
  9949                           ;LED_BarGraph.c: 139: }
  9950                           ;LED_BarGraph.c: 140: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  9951  00194A  0E02               	movlw	2
  9952  00194C  0101               	movlb	1	; () banked
  9953  00194E  6F50               	movwf	LEDwriteDisplay@status& (0+255),b
  9954                           
  9955                           ;LED_BarGraph.c: 145: writeBuffer[0] = 0;
  9956  001950  0E00               	movlw	0
  9957  001952  0101               	movlb	1	; () banked
  9958  001954  6F39               	movwf	LEDwriteDisplay@writeBuffer& (0+255),b
  9959                           
  9960                           ; BSR set to: 1
  9961                           ;LED_BarGraph.c: 146: writeBuffer[1] = displaybuffer[0] & 0xFF;
  9962  001956  C060  F13A         	movff	_displaybuffer,LEDwriteDisplay@writeBuffer+1
  9963                           
  9964                           ; BSR set to: 1
  9965                           ;LED_BarGraph.c: 147: writeBuffer[2] = displaybuffer[0] >> 8;
  9966  00195A  C061  F13B         	movff	_displaybuffer+1,LEDwriteDisplay@writeBuffer+2
  9967                           
  9968                           ; BSR set to: 1
  9969                           ;LED_BarGraph.c: 148: writeBuffer[3] = displaybuffer[1] & 0xFF;
  9970  00195E  C064  F13C         	movff	_displaybuffer+4,LEDwriteDisplay@writeBuffer+3
  9971                           
  9972                           ; BSR set to: 1
  9973                           ;LED_BarGraph.c: 149: writeBuffer[4] = displaybuffer[1] >> 8;
  9974  001962  C065  F13D         	movff	_displaybuffer+5,LEDwriteDisplay@writeBuffer+4
  9975                           
  9976                           ; BSR set to: 1
  9977                           ;LED_BarGraph.c: 150: writeBuffer[5] = displaybuffer[2] & 0xFF;
  9978  001966  C068  F13E         	movff	_displaybuffer+8,LEDwriteDisplay@writeBuffer+5
  9979                           
  9980                           ; BSR set to: 1
  9981                           ;LED_BarGraph.c: 151: writeBuffer[6] = displaybuffer[2] >> 8;
  9982  00196A  C069  F13F         	movff	_displaybuffer+9,LEDwriteDisplay@writeBuffer+6
  9983                           
  9984                           ; BSR set to: 1
  9985                           ;LED_BarGraph.c: 152: writeBuffer[7] = displaybuffer[3] & 0xFF;
  9986  00196E  C06C  F140         	movff	_displaybuffer+12,LEDwriteDisplay@writeBuffer+7
  9987                           
  9988                           ; BSR set to: 1
  9989                           ;LED_BarGraph.c: 153: writeBuffer[8] = displaybuffer[3] >> 8;
  9990  001972  C06D  F141         	movff	_displaybuffer+13,LEDwriteDisplay@writeBuffer+8
  9991                           
  9992                           ; BSR set to: 1
  9993                           ;LED_BarGraph.c: 154: writeBuffer[9] = displaybuffer[4] & 0xFF;
  9994  001976  C070  F142         	movff	_displaybuffer+16,LEDwriteDisplay@writeBuffer+9
  9995                           
  9996                           ; BSR set to: 1
  9997                           ;LED_BarGraph.c: 155: writeBuffer[10] = displaybuffer[4] >> 8;
  9998  00197A  C071  F143         	movff	_displaybuffer+17,LEDwriteDisplay@writeBuffer+10
  9999                           
 10000                           ; BSR set to: 1
 10001                           ;LED_BarGraph.c: 156: writeBuffer[11] = displaybuffer[5] & 0xFF;
 10002  00197E  C074  F144         	movff	_displaybuffer+20,LEDwriteDisplay@writeBuffer+11
 10003                           
 10004                           ; BSR set to: 1
 10005                           ;LED_BarGraph.c: 157: writeBuffer[12] = displaybuffer[5] >> 8;
 10006  001982  C075  F145         	movff	_displaybuffer+21,LEDwriteDisplay@writeBuffer+12
 10007                           
 10008                           ; BSR set to: 1
 10009                           ;LED_BarGraph.c: 158: writeBuffer[13] = displaybuffer[6] & 0xFF;
 10010  001986  C078  F146         	movff	_displaybuffer+24,LEDwriteDisplay@writeBuffer+13
 10011                           
 10012                           ; BSR set to: 1
 10013                           ;LED_BarGraph.c: 159: writeBuffer[14] = displaybuffer[6] >> 8;
 10014  00198A  C079  F147         	movff	_displaybuffer+25,LEDwriteDisplay@writeBuffer+14
 10015                           
 10016                           ; BSR set to: 1
 10017                           ;LED_BarGraph.c: 160: writeBuffer[15] = displaybuffer[7] & 0xFF;
 10018  00198E  C07C  F148         	movff	_displaybuffer+28,LEDwriteDisplay@writeBuffer+15
 10019                           
 10020                           ; BSR set to: 1
 10021                           ;LED_BarGraph.c: 161: writeBuffer[16] = displaybuffer[7] >> 8;
 10022  001992  C07D  F149         	movff	_displaybuffer+29,LEDwriteDisplay@writeBuffer+16
 10023                           
 10024                           ; BSR set to: 1
 10025                           ;LED_BarGraph.c: 162: writeBuffer[17] = displaybuffer[8] & 0xFF;
 10026  001996  C080  F14A         	movff	_displaybuffer+32,LEDwriteDisplay@writeBuffer+17
 10027                           
 10028                           ; BSR set to: 1
 10029                           ;LED_BarGraph.c: 163: writeBuffer[18] = displaybuffer[8] >> 8;
 10030  00199A  C081  F14B         	movff	_displaybuffer+33,LEDwriteDisplay@writeBuffer+18
 10031                           
 10032                           ;LED_BarGraph.c: 165: timeOut = 0;
 10033  00199E  0E00               	movlw	0
 10034  0019A0  0101               	movlb	1	; () banked
 10035  0019A2  6F4F               	movwf	(LEDwriteDisplay@timeOut+1)& (0+255),b
 10036  0019A4  0E00               	movlw	0
 10037  0019A6  6F4E               	movwf	LEDwriteDisplay@timeOut& (0+255),b
 10038                           
 10039                           ;LED_BarGraph.c: 166: while (status != I2C1_MESSAGE_FAIL) {
 10040  0019A8  D027               	goto	l7288
 10041  0019AA                     l7268:
 10042                           
 10043                           ; BSR set to: 1
 10044                           ;LED_BarGraph.c: 168: I2C1_MasterWrite(&writeBuffer,
 10045                           ;LED_BarGraph.c: 169: 17,
 10046                           ;LED_BarGraph.c: 170: i2c_addr,
 10047                           ;LED_BarGraph.c: 171: &status);
 10048  0019AA  0E39               	movlw	low LEDwriteDisplay@writeBuffer
 10049  0019AC  6E24               	movwf	I2C1_MasterWrite@pdata,c
 10050  0019AE  0E01               	movlw	high LEDwriteDisplay@writeBuffer
 10051  0019B0  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
 10052  0019B2  0E11               	movlw	17
 10053  0019B4  6E26               	movwf	I2C1_MasterWrite@length,c
 10054  0019B6  C14D  F027         	movff	LEDwriteDisplay@i2c_addr,I2C1_MasterWrite@address
 10055  0019BA  6A28               	clrf	I2C1_MasterWrite@address+1,c
 10056  0019BC  0E50               	movlw	low LEDwriteDisplay@status
 10057  0019BE  6E29               	movwf	I2C1_MasterWrite@pflag,c
 10058  0019C0  0E01               	movlw	high LEDwriteDisplay@status
 10059  0019C2  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
 10060  0019C4  EC87  F015         	call	_I2C1_MasterWrite	;wreg free
 10061  0019C8                     l7270:
 10062  0019C8  0E02               	movlw	2
 10063  0019CA  0101               	movlb	1	; () banked
 10064  0019CC  1950               	xorwf	LEDwriteDisplay@status& (0+255),w,b
 10065  0019CE  B4D8               	btfsc	status,2,c
 10066  0019D0  D7FB               	goto	l7270
 10067                           
 10068                           ; BSR set to: 1
 10069                           ;LED_BarGraph.c: 176: if (status == I2C1_MESSAGE_COMPLETE)
 10070                           
 10071                           ; BSR set to: 1
 10072  0019D2  0101               	movlb	1	; () banked
 10073  0019D4  5150               	movf	LEDwriteDisplay@status& (0+255),w,b
 10074  0019D6  0101               	movlb	1	; () banked
 10075  0019D8  B4D8               	btfsc	status,2,c
 10076  0019DA  0012               	return	
 10077                           
 10078                           ; BSR set to: 1
 10079                           ;LED_BarGraph.c: 178: if (timeOut == 100)
 10080                           
 10081                           ; BSR set to: 1
 10082                           
 10083                           ; BSR set to: 1
 10084                           ;LED_BarGraph.c: 177: break;
 10085  0019DC  0E64               	movlw	100
 10086  0019DE  0101               	movlb	1	; () banked
 10087  0019E0  194E               	xorwf	LEDwriteDisplay@timeOut& (0+255),w,b
 10088  0019E2  0101               	movlb	1	; () banked
 10089  0019E4  114F               	iorwf	(LEDwriteDisplay@timeOut+1)& (0+255),w,b
 10090  0019E6  B4D8               	btfsc	status,2,c
 10091  0019E8  0012               	return	
 10092                           
 10093                           ; BSR set to: 1
 10094                           ;LED_BarGraph.c: 180: if (status == I2C1_MESSAGE_FAIL)
 10095                           
 10096                           ; BSR set to: 1
 10097                           
 10098                           ; BSR set to: 1
 10099                           ;LED_BarGraph.c: 179: break;
 10100  0019EA  0101               	movlb	1	; () banked
 10101  0019EC  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
 10102  0019EE  B4D8               	btfsc	status,2,c
 10103  0019F0  0012               	return	
 10104                           
 10105                           ; BSR set to: 1
 10106                           ;LED_BarGraph.c: 182: else
 10107                           ;LED_BarGraph.c: 183: timeOut++;
 10108                           
 10109                           ; BSR set to: 1
 10110                           
 10111                           ; BSR set to: 1
 10112                           
 10113                           ; BSR set to: 1
 10114                           ;LED_BarGraph.c: 181: break;
 10115  0019F2  0101               	movlb	1	; () banked
 10116  0019F4  4B4E               	infsnz	LEDwriteDisplay@timeOut& (0+255),f,b
 10117  0019F6  2B4F               	incf	(LEDwriteDisplay@timeOut+1)& (0+255),f,b
 10118  0019F8                     l7288:
 10119                           
 10120                           ; BSR set to: 1
 10121  0019F8  0101               	movlb	1	; () banked
 10122  0019FA  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
 10123  0019FC  B4D8               	btfsc	status,2,c
 10124  0019FE  0012               	return	
 10125  001A00  D7D4               	goto	l7268
 10126  001A02                     __end_of_LEDwriteDisplay:
 10127                           	opt stack 0
 10128                           tosu	equ	0xFFF
 10129                           tosh	equ	0xFFE
 10130                           tosl	equ	0xFFD
 10131                           pclath	equ	0xFFA
 10132                           tblptru	equ	0xFF8
 10133                           tblptrh	equ	0xFF7
 10134                           tblptrl	equ	0xFF6
 10135                           tablat	equ	0xFF5
 10136                           prodh	equ	0xFF4
 10137                           prodl	equ	0xFF3
 10138                           intcon	equ	0xFF2
 10139                           intcon2	equ	0xFF1
 10140                           postinc0	equ	0xFEE
 10141                           wreg	equ	0xFE8
 10142                           indf2	equ	0xFDF
 10143                           postinc2	equ	0xFDE
 10144                           postdec2	equ	0xFDD
 10145                           plusw2	equ	0xFDB
 10146                           fsr2h	equ	0xFDA
 10147                           fsr2l	equ	0xFD9
 10148                           status	equ	0xFD8
 10149                           
 10150 ;; *************** function _LEDsetValue *****************
 10151 ;; Defined at:
 10152 ;;		line 11 in file "LED_BarGraph.c"
 10153 ;; Parameters:    Size  Location     Type
 10154 ;;  value           2   16[BANK1 ] int 
 10155 ;;  color           2   18[BANK1 ] int 
 10156 ;; Auto vars:     Size  Location     Type
 10157 ;;  k               2   20[BANK1 ] int 
 10158 ;; Return value:  Size  Location     Type
 10159 ;;                  1    wreg      void 
 10160 ;; Registers used:
 10161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10162 ;; Tracked objects:
 10163 ;;		On entry : 0/0
 10164 ;;		On exit  : 0/0
 10165 ;;		Unchanged: 0/0
 10166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10167 ;;      Params:         0       0       4       0       0       0       0
 10168 ;;      Locals:         0       0       2       0       0       0       0
 10169 ;;      Temps:          0       1       0       0       0       0       0
 10170 ;;      Totals:         0       1       6       0       0       0       0
 10171 ;;Total ram usage:        7 bytes
 10172 ;; Hardware stack levels used:    1
 10173 ;; Hardware stack levels required when called:    6
 10174 ;; This function calls:
 10175 ;;		_LEDsetBar
 10176 ;; This function is called by:
 10177 ;;		_main
 10178 ;; This function uses a non-reentrant model
 10179 ;;
 10180                           
 10181                           	psect	text51
 10182  0023C0                     __ptext51:
 10183                           	opt stack 0
 10184  0023C0                     _LEDsetValue:
 10185                           	opt stack 24
 10186                           
 10187                           ;LED_BarGraph.c: 12: if (value > 24) value = 24;
 10188                           
 10189                           ; BSR set to: 1
 10190                           ;incstack = 0
 10191  0023C0  0101               	movlb	1	; () banked
 10192  0023C2  BF4A               	btfsc	(LEDsetValue@value+1)& (0+255),7,b
 10193  0023C4  D00D               	goto	l7188
 10194  0023C6  0101               	movlb	1	; () banked
 10195  0023C8  514A               	movf	(LEDsetValue@value+1)& (0+255),w,b
 10196  0023CA  E105               	bnz	u8140
 10197  0023CC  0E19               	movlw	25
 10198  0023CE  0101               	movlb	1	; () banked
 10199  0023D0  5D49               	subwf	LEDsetValue@value& (0+255),w,b
 10200  0023D2  A0D8               	btfss	status,0,c
 10201  0023D4  D005               	goto	l7188
 10202  0023D6                     u8140:
 10203                           
 10204                           ; BSR set to: 1
 10205  0023D6  0E00               	movlw	0
 10206  0023D8  0101               	movlb	1	; () banked
 10207  0023DA  6F4A               	movwf	(LEDsetValue@value+1)& (0+255),b
 10208  0023DC  0E18               	movlw	24
 10209  0023DE  6F49               	movwf	LEDsetValue@value& (0+255),b
 10210  0023E0                     l7188:
 10211                           
 10212                           ; BSR set to: 1
 10213                           ;LED_BarGraph.c: 13: if (value < 0) value = 0;
 10214  0023E0  0101               	movlb	1	; () banked
 10215  0023E2  AF4A               	btfss	(LEDsetValue@value+1)& (0+255),7,b
 10216  0023E4  D005               	goto	l614
 10217                           
 10218                           ; BSR set to: 1
 10219  0023E6  0E00               	movlw	0
 10220  0023E8  0101               	movlb	1	; () banked
 10221  0023EA  6F4A               	movwf	(LEDsetValue@value+1)& (0+255),b
 10222  0023EC  0E00               	movlw	0
 10223  0023EE  6F49               	movwf	LEDsetValue@value& (0+255),b
 10224  0023F0                     l614:
 10225                           
 10226                           ; BSR set to: 1
 10227                           ;LED_BarGraph.c: 14: int k;
 10228                           ;LED_BarGraph.c: 15: for (k = 0; k < 24; k++) {
 10229  0023F0  0E00               	movlw	0
 10230  0023F2  0101               	movlb	1	; () banked
 10231  0023F4  6F4E               	movwf	(LEDsetValue@k+1)& (0+255),b
 10232  0023F6  0E00               	movlw	0
 10233  0023F8  6F4D               	movwf	LEDsetValue@k& (0+255),b
 10234  0023FA                     l7192:
 10235                           
 10236                           ; BSR set to: 1
 10237  0023FA  0101               	movlb	1	; () banked
 10238  0023FC  BF4E               	btfsc	(LEDsetValue@k+1)& (0+255),7,b
 10239  0023FE  D008               	goto	l7196
 10240  002400  0101               	movlb	1	; () banked
 10241  002402  514E               	movf	(LEDsetValue@k+1)& (0+255),w,b
 10242  002404  E12E               	bnz	l619
 10243  002406  0E18               	movlw	24
 10244  002408  0101               	movlb	1	; () banked
 10245  00240A  5D4D               	subwf	LEDsetValue@k& (0+255),w,b
 10246  00240C  B0D8               	btfsc	status,0,c
 10247  00240E  0012               	return	
 10248  002410                     l7196:
 10249                           
 10250                           ; BSR set to: 1
 10251                           ;LED_BarGraph.c: 16: if (k < value) LEDsetBar(k, color);
 10252  002410  0101               	movlb	1	; () banked
 10253  002412  5149               	movf	LEDsetValue@value& (0+255),w,b
 10254  002414  0101               	movlb	1	; () banked
 10255  002416  5D4D               	subwf	LEDsetValue@k& (0+255),w,b
 10256  002418  0101               	movlb	1	; () banked
 10257  00241A  514E               	movf	(LEDsetValue@k+1)& (0+255),w,b
 10258  00241C  0A80               	xorlw	128
 10259  00241E  0100               	movlb	0	; () banked
 10260  002420  6FFD               	movwf	??_LEDsetValue& (0+255),b
 10261  002422  0101               	movlb	1	; () banked
 10262  002424  514A               	movf	(LEDsetValue@value+1)& (0+255),w,b
 10263  002426  0A80               	xorlw	128
 10264  002428  0100               	movlb	0	; () banked
 10265  00242A  59FD               	subwfb	??_LEDsetValue& (0+255),w,b
 10266  00242C  B0D8               	btfsc	status,0,c
 10267  00242E  D00B               	goto	l7200
 10268                           
 10269                           ; BSR set to: 0
 10270  002430  C14D  F023         	movff	LEDsetValue@k,LEDsetBar@bar
 10271  002434  C14E  F024         	movff	LEDsetValue@k+1,LEDsetBar@bar+1
 10272  002438  C14B  F025         	movff	LEDsetValue@color,LEDsetBar@color
 10273  00243C  C14C  F026         	movff	LEDsetValue@color+1,LEDsetBar@color+1
 10274  002440  ECC4  F003         	call	_LEDsetBar	;wreg free
 10275  002444  D00A               	goto	l7202
 10276  002446                     l7200:
 10277                           
 10278                           ;LED_BarGraph.c: 17: else LEDsetBar(k, 0);
 10279  002446  C14D  F023         	movff	LEDsetValue@k,LEDsetBar@bar
 10280  00244A  C14E  F024         	movff	LEDsetValue@k+1,LEDsetBar@bar+1
 10281  00244E  0E00               	movlw	0
 10282  002450  6E26               	movwf	LEDsetBar@color+1,c
 10283  002452  0E00               	movlw	0
 10284  002454  6E25               	movwf	LEDsetBar@color,c
 10285  002456  ECC4  F003         	call	_LEDsetBar	;wreg free
 10286  00245A                     l7202:
 10287  00245A  0101               	movlb	1	; () banked
 10288  00245C  4B4D               	infsnz	LEDsetValue@k& (0+255),f,b
 10289  00245E  2B4E               	incf	(LEDsetValue@k+1)& (0+255),f,b
 10290  002460  D7CC               	goto	l7192
 10291  002462                     l619:
 10292                           
 10293                           ; BSR set to: 1
 10294  002462  0012               	return		;funcret
 10295  002464                     __end_of_LEDsetValue:
 10296                           	opt stack 0
 10297                           tosu	equ	0xFFF
 10298                           tosh	equ	0xFFE
 10299                           tosl	equ	0xFFD
 10300                           pclath	equ	0xFFA
 10301                           tblptru	equ	0xFF8
 10302                           tblptrh	equ	0xFF7
 10303                           tblptrl	equ	0xFF6
 10304                           tablat	equ	0xFF5
 10305                           prodh	equ	0xFF4
 10306                           prodl	equ	0xFF3
 10307                           intcon	equ	0xFF2
 10308                           intcon2	equ	0xFF1
 10309                           postinc0	equ	0xFEE
 10310                           wreg	equ	0xFE8
 10311                           indf2	equ	0xFDF
 10312                           postinc2	equ	0xFDE
 10313                           postdec2	equ	0xFDD
 10314                           plusw2	equ	0xFDB
 10315                           fsr2h	equ	0xFDA
 10316                           fsr2l	equ	0xFD9
 10317                           status	equ	0xFD8
 10318                           
 10319 ;; *************** function _LEDsetBar *****************
 10320 ;; Defined at:
 10321 ;;		line 193 in file "LED_BarGraph.c"
 10322 ;; Parameters:    Size  Location     Type
 10323 ;;  bar             2   34[COMRAM] int 
 10324 ;;  color           2   36[COMRAM] int 
 10325 ;; Auto vars:     Size  Location     Type
 10326 ;;  a               2   40[COMRAM] unsigned int 
 10327 ;;  c               2   38[COMRAM] unsigned int 
 10328 ;; Return value:  Size  Location     Type
 10329 ;;                  1    wreg      void 
 10330 ;; Registers used:
 10331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10332 ;; Tracked objects:
 10333 ;;		On entry : 0/0
 10334 ;;		On exit  : 0/0
 10335 ;;		Unchanged: 0/0
 10336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10337 ;;      Params:         4       0       0       0       0       0       0
 10338 ;;      Locals:         4       0       0       0       0       0       0
 10339 ;;      Temps:          0       0      16       0       0       0       0
 10340 ;;      Totals:         8       0      16       0       0       0       0
 10341 ;;Total ram usage:       24 bytes
 10342 ;; Hardware stack levels used:    1
 10343 ;; Hardware stack levels required when called:    5
 10344 ;; This function calls:
 10345 ;;		___awdiv
 10346 ;; This function is called by:
 10347 ;;		_LEDsetValue
 10348 ;; This function uses a non-reentrant model
 10349 ;;
 10350                           
 10351                           	psect	text52
 10352  000788                     __ptext52:
 10353                           	opt stack 0
 10354  000788                     _LEDsetBar:
 10355                           	opt stack 24
 10356                           
 10357                           ;LED_BarGraph.c: 194: uint16_t a, c;
 10358                           ;LED_BarGraph.c: 196: if (bar < 12)
 10359                           
 10360                           ; BSR set to: 1
 10361                           ;incstack = 0
 10362  000788  BE24               	btfsc	LEDsetBar@bar+1,7,c
 10363  00078A  D006               	goto	l6632
 10364  00078C  5024               	movf	LEDsetBar@bar+1,w,c
 10365  00078E  E10F               	bnz	l6634
 10366  000790  0E0C               	movlw	12
 10367  000792  5C23               	subwf	LEDsetBar@bar,w,c
 10368  000794  B0D8               	btfsc	status,0,c
 10369  000796  D00B               	goto	l6634
 10370  000798                     l6632:
 10371                           
 10372                           ;LED_BarGraph.c: 197: c = bar / 4;
 10373  000798  C023  F01B         	movff	LEDsetBar@bar,___awdiv@dividend
 10374  00079C  C024  F01C         	movff	LEDsetBar@bar+1,___awdiv@dividend+1
 10375  0007A0  0E00               	movlw	0
 10376  0007A2  6E1E               	movwf	___awdiv@divisor+1,c
 10377  0007A4  0E04               	movlw	4
 10378  0007A6  6E1D               	movwf	___awdiv@divisor,c
 10379  0007A8  ECA5  F013         	call	___awdiv	;wreg free
 10380  0007AC  D00C               	goto	L3
 10381  0007AE                     l6634:
 10382                           
 10383                           ;LED_BarGraph.c: 198: else
 10384                           ;LED_BarGraph.c: 199: c = (bar - 12) / 4;
 10385  0007AE  0EF4               	movlw	244
 10386  0007B0  2423               	addwf	LEDsetBar@bar,w,c
 10387  0007B2  6E1B               	movwf	___awdiv@dividend,c
 10388  0007B4  0EFF               	movlw	255
 10389  0007B6  2024               	addwfc	LEDsetBar@bar+1,w,c
 10390  0007B8  6E1C               	movwf	___awdiv@dividend+1,c
 10391  0007BA  0E00               	movlw	0
 10392  0007BC  6E1E               	movwf	___awdiv@divisor+1,c
 10393  0007BE  0E04               	movlw	4
 10394  0007C0  6E1D               	movwf	___awdiv@divisor,c
 10395  0007C2  ECA5  F013         	call	___awdiv	;wreg free
 10396  0007C6                     L3:
 10397  0007C6  C01B  F027         	movff	?___awdiv,LEDsetBar@c
 10398  0007CA  C01C  F028         	movff	?___awdiv+1,LEDsetBar@c+1
 10399                           
 10400                           ;LED_BarGraph.c: 201: a = bar % 4;
 10401  0007CE  0E03               	movlw	3
 10402  0007D0  1423               	andwf	LEDsetBar@bar,w,c
 10403  0007D2  6E29               	movwf	LEDsetBar@a,c
 10404  0007D4  6A2A               	clrf	LEDsetBar@a+1,c
 10405                           
 10406                           ;LED_BarGraph.c: 202: if (bar >= 12)
 10407  0007D6  BE24               	btfsc	LEDsetBar@bar+1,7,c
 10408  0007D8  D00A               	goto	l693
 10409  0007DA  5024               	movf	LEDsetBar@bar+1,w,c
 10410  0007DC  E104               	bnz	u6980
 10411  0007DE  0E0C               	movlw	12
 10412  0007E0  5C23               	subwf	LEDsetBar@bar,w,c
 10413  0007E2  A0D8               	btfss	status,0,c
 10414  0007E4  D004               	goto	l693
 10415  0007E6                     u6980:
 10416                           
 10417                           ;LED_BarGraph.c: 203: a += 4;
 10418  0007E6  0E04               	movlw	4
 10419  0007E8  2629               	addwf	LEDsetBar@a,f,c
 10420  0007EA  0E00               	movlw	0
 10421  0007EC  222A               	addwfc	LEDsetBar@a+1,f,c
 10422  0007EE                     l693:
 10423                           
 10424                           ;LED_BarGraph.c: 206: if (color == 1) {
 10425  0007EE  0425               	decf	LEDsetBar@color,w,c
 10426  0007F0  1026               	iorwf	LEDsetBar@color+1,w,c
 10427  0007F2  A4D8               	btfss	status,2,c
 10428  0007F4  D07D               	goto	l6644
 10429                           
 10430                           ;LED_BarGraph.c: 208: displaybuffer[c] |= (1<<(a));
 10431  0007F6  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 10432  0007FA  0E01               	movlw	1
 10433  0007FC  0101               	movlb	1	; () banked
 10434  0007FE  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 10435  000800  0E00               	movlw	0
 10436  000802  0101               	movlb	1	; () banked
 10437  000804  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 10438  000806  0101               	movlb	1	; () banked
 10439  000808  2B39               	incf	??_LEDsetBar& (0+255),f,b
 10440  00080A  D004               	goto	u7004
 10441  00080C                     u7005:
 10442  00080C  90D8               	bcf	status,0,c
 10443  00080E  0101               	movlb	1	; () banked
 10444  000810  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 10445  000812  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 10446  000814                     u7004:
 10447  000814  0101               	movlb	1	; () banked
 10448  000816  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 10449  000818  D7F9               	goto	u7005
 10450  00081A  C13A  F13C         	movff	??_LEDsetBar+1,??_LEDsetBar+3
 10451  00081E  C13B  F13D         	movff	??_LEDsetBar+2,??_LEDsetBar+4
 10452  000822  0E00               	movlw	0
 10453  000824  0101               	movlb	1	; () banked
 10454  000826  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 10455  000828  0EFF               	movlw	255
 10456  00082A  6F3E               	movwf	(??_LEDsetBar+5)& (0+255),b
 10457  00082C  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 10458  00082E  0E60               	movlw	low _displaybuffer
 10459  000830  0101               	movlb	1	; () banked
 10460  000832  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 10461  000834  0E00               	movlw	high _displaybuffer
 10462  000836  0101               	movlb	1	; () banked
 10463  000838  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 10464  00083A  90D8               	bcf	status,0,c
 10465  00083C  3427               	rlcf	LEDsetBar@c,w,c
 10466  00083E  6ED9               	movwf	fsr2l,c
 10467  000840  3428               	rlcf	LEDsetBar@c+1,w,c
 10468  000842  6EDA               	movwf	fsr2h,c
 10469  000844  90D8               	bcf	status,0,c
 10470  000846  36D9               	rlcf	fsr2l,f,c
 10471  000848  36DA               	rlcf	fsr2h,f,c
 10472  00084A  0101               	movlb	1	; () banked
 10473  00084C  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 10474  00084E  26D9               	addwf	fsr2l,f,c
 10475  000850  0101               	movlb	1	; () banked
 10476  000852  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 10477  000854  22DA               	addwfc	fsr2h,f,c
 10478  000856  0101               	movlb	1	; () banked
 10479  000858  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 10480  00085A  12DE               	iorwf	postinc2,f,c
 10481  00085C  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 10482  00085E  12DE               	iorwf	postinc2,f,c
 10483  000860  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 10484  000862  12DE               	iorwf	postinc2,f,c
 10485  000864  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 10486  000866  12DE               	iorwf	postinc2,f,c
 10487                           
 10488                           ;LED_BarGraph.c: 210: displaybuffer[c] &= ~(1<<(a + 8));
 10489  000868  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 10490  00086C  0E08               	movlw	8
 10491  00086E  0101               	movlb	1	; () banked
 10492  000870  2739               	addwf	??_LEDsetBar& (0+255),f,b
 10493  000872  0E01               	movlw	1
 10494  000874  0101               	movlb	1	; () banked
 10495  000876  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 10496  000878  0E00               	movlw	0
 10497  00087A  0101               	movlb	1	; () banked
 10498  00087C  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 10499  00087E  0101               	movlb	1	; () banked
 10500  000880  2B39               	incf	??_LEDsetBar& (0+255),f,b
 10501  000882  D004               	goto	u7014
 10502  000884                     u7015:
 10503  000884  90D8               	bcf	status,0,c
 10504  000886  0101               	movlb	1	; () banked
 10505  000888  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 10506  00088A  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 10507  00088C                     u7014:
 10508  00088C  0101               	movlb	1	; () banked
 10509  00088E  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 10510  000890  D7F9               	goto	u7015
 10511  000892  0101               	movlb	1	; () banked
 10512  000894  1D3A               	comf	(??_LEDsetBar+1)& (0+255),w,b
 10513  000896  0101               	movlb	1	; () banked
 10514  000898  6F3C               	movwf	(??_LEDsetBar+3)& (0+255),b
 10515  00089A  0101               	movlb	1	; () banked
 10516  00089C  1D3B               	comf	(??_LEDsetBar+2)& (0+255),w,b
 10517  00089E  0101               	movlb	1	; () banked
 10518  0008A0  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 10519  0008A2  0101               	movlb	1	; () banked
 10520  0008A4  6B3E               	clrf	(??_LEDsetBar+5)& (0+255),b
 10521  0008A6  0101               	movlb	1	; () banked
 10522  0008A8  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 10523  0008AA  073E               	decf	(??_LEDsetBar+5)& (0+255),f,b
 10524  0008AC  0101               	movlb	1	; () banked
 10525  0008AE  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 10526  0008B0  0101               	movlb	1	; () banked
 10527  0008B2  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 10528  0008B4  0E60               	movlw	low _displaybuffer
 10529  0008B6  0101               	movlb	1	; () banked
 10530  0008B8  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 10531  0008BA  0E00               	movlw	high _displaybuffer
 10532  0008BC  0101               	movlb	1	; () banked
 10533  0008BE  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 10534  0008C0  90D8               	bcf	status,0,c
 10535  0008C2  3427               	rlcf	LEDsetBar@c,w,c
 10536  0008C4  6ED9               	movwf	fsr2l,c
 10537  0008C6  3428               	rlcf	LEDsetBar@c+1,w,c
 10538  0008C8  6EDA               	movwf	fsr2h,c
 10539  0008CA  90D8               	bcf	status,0,c
 10540  0008CC  36D9               	rlcf	fsr2l,f,c
 10541  0008CE  36DA               	rlcf	fsr2h,f,c
 10542  0008D0  0101               	movlb	1	; () banked
 10543  0008D2  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 10544  0008D4  26D9               	addwf	fsr2l,f,c
 10545  0008D6  0101               	movlb	1	; () banked
 10546  0008D8  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 10547  0008DA  22DA               	addwfc	fsr2h,f,c
 10548  0008DC  0101               	movlb	1	; () banked
 10549  0008DE  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 10550  0008E0  16DE               	andwf	postinc2,f,c
 10551  0008E2  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 10552  0008E4  16DE               	andwf	postinc2,f,c
 10553  0008E6  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 10554  0008E8  16DE               	andwf	postinc2,f,c
 10555  0008EA  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 10556  0008EC  16DE               	andwf	postinc2,f,c
 10557                           
 10558                           ;LED_BarGraph.c: 211: } else if (color == 2) {
 10559  0008EE  0012               	return	
 10560  0008F0                     l6644:
 10561  0008F0  0E02               	movlw	2
 10562  0008F2  1825               	xorwf	LEDsetBar@color,w,c
 10563  0008F4  1026               	iorwf	LEDsetBar@color+1,w,c
 10564  0008F6  A4D8               	btfss	status,2,c
 10565  0008F8  D05A               	goto	l6648
 10566                           
 10567                           ;LED_BarGraph.c: 213: displaybuffer[c] |= (1<<(a)) | (1<<(a + 8));
 10568  0008FA  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 10569  0008FE  0E08               	movlw	8
 10570  000900  0101               	movlb	1	; () banked
 10571  000902  2739               	addwf	??_LEDsetBar& (0+255),f,b
 10572  000904  0E01               	movlw	1
 10573  000906  0101               	movlb	1	; () banked
 10574  000908  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 10575  00090A  0E00               	movlw	0
 10576  00090C  0101               	movlb	1	; () banked
 10577  00090E  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 10578  000910  0101               	movlb	1	; () banked
 10579  000912  2B39               	incf	??_LEDsetBar& (0+255),f,b
 10580  000914  D004               	goto	u7034
 10581  000916                     u7035:
 10582  000916  90D8               	bcf	status,0,c
 10583  000918  0101               	movlb	1	; () banked
 10584  00091A  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 10585  00091C  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 10586  00091E                     u7034:
 10587  00091E  0101               	movlb	1	; () banked
 10588  000920  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 10589  000922  D7F9               	goto	u7035
 10590  000924  C029  F13C         	movff	LEDsetBar@a,??_LEDsetBar+3
 10591  000928  0E01               	movlw	1
 10592  00092A  0101               	movlb	1	; () banked
 10593  00092C  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 10594  00092E  0E00               	movlw	0
 10595  000930  0101               	movlb	1	; () banked
 10596  000932  6F3E               	movwf	(??_LEDsetBar+5)& (0+255),b
 10597  000934  0101               	movlb	1	; () banked
 10598  000936  2B3C               	incf	(??_LEDsetBar+3)& (0+255),f,b
 10599  000938  D004               	goto	u7044
 10600  00093A                     u7045:
 10601  00093A  90D8               	bcf	status,0,c
 10602  00093C  0101               	movlb	1	; () banked
 10603  00093E  373D               	rlcf	(??_LEDsetBar+4)& (0+255),f,b
 10604  000940  373E               	rlcf	(??_LEDsetBar+5)& (0+255),f,b
 10605  000942                     u7044:
 10606  000942  0101               	movlb	1	; () banked
 10607  000944  2F3C               	decfsz	(??_LEDsetBar+3)& (0+255),f,b
 10608  000946  D7F9               	goto	u7045
 10609  000948  0101               	movlb	1	; () banked
 10610  00094A  513A               	movf	(??_LEDsetBar+1)& (0+255),w,b
 10611  00094C  0101               	movlb	1	; () banked
 10612  00094E  113D               	iorwf	(??_LEDsetBar+4)& (0+255),w,b
 10613  000950  0101               	movlb	1	; () banked
 10614  000952  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 10615  000954  0101               	movlb	1	; () banked
 10616  000956  513B               	movf	(??_LEDsetBar+2)& (0+255),w,b
 10617  000958  0101               	movlb	1	; () banked
 10618  00095A  113E               	iorwf	(??_LEDsetBar+5)& (0+255),w,b
 10619  00095C  0101               	movlb	1	; () banked
 10620  00095E  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 10621  000960  0101               	movlb	1	; () banked
 10622  000962  6B41               	clrf	(??_LEDsetBar+8)& (0+255),b
 10623  000964  0101               	movlb	1	; () banked
 10624  000966  BF40               	btfsc	(??_LEDsetBar+7)& (0+255),7,b
 10625  000968  0741               	decf	(??_LEDsetBar+8)& (0+255),f,b
 10626  00096A  0101               	movlb	1	; () banked
 10627  00096C  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 10628  00096E  0101               	movlb	1	; () banked
 10629  000970  6F42               	movwf	(??_LEDsetBar+9)& (0+255),b
 10630  000972  0E60               	movlw	low _displaybuffer
 10631  000974  0101               	movlb	1	; () banked
 10632  000976  6F43               	movwf	(??_LEDsetBar+10)& (0+255),b
 10633  000978  0E00               	movlw	high _displaybuffer
 10634  00097A  0101               	movlb	1	; () banked
 10635  00097C  6F44               	movwf	(??_LEDsetBar+11)& (0+255),b
 10636  00097E  90D8               	bcf	status,0,c
 10637  000980  3427               	rlcf	LEDsetBar@c,w,c
 10638  000982  6ED9               	movwf	fsr2l,c
 10639  000984  3428               	rlcf	LEDsetBar@c+1,w,c
 10640  000986  6EDA               	movwf	fsr2h,c
 10641  000988  90D8               	bcf	status,0,c
 10642  00098A  36D9               	rlcf	fsr2l,f,c
 10643  00098C  36DA               	rlcf	fsr2h,f,c
 10644  00098E  0101               	movlb	1	; () banked
 10645  000990  5143               	movf	(??_LEDsetBar+10)& (0+255),w,b
 10646  000992  26D9               	addwf	fsr2l,f,c
 10647  000994  0101               	movlb	1	; () banked
 10648  000996  5144               	movf	(??_LEDsetBar+11)& (0+255),w,b
 10649  000998  22DA               	addwfc	fsr2h,f,c
 10650  00099A  0101               	movlb	1	; () banked
 10651  00099C  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 10652  00099E  12DE               	iorwf	postinc2,f,c
 10653  0009A0  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 10654  0009A2  12DE               	iorwf	postinc2,f,c
 10655  0009A4  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 10656  0009A6  12DE               	iorwf	postinc2,f,c
 10657  0009A8  5142               	movf	(??_LEDsetBar+9)& (0+255),w,b
 10658  0009AA  12DE               	iorwf	postinc2,f,c
 10659                           
 10660                           ;LED_BarGraph.c: 214: } else if (color == 0) {
 10661  0009AC  0012               	return	
 10662  0009AE                     l6648:
 10663  0009AE  5025               	movf	LEDsetBar@color,w,c
 10664  0009B0  1026               	iorwf	LEDsetBar@color+1,w,c
 10665  0009B2  A4D8               	btfss	status,2,c
 10666  0009B4  D06A               	goto	l6652
 10667                           
 10668                           ;LED_BarGraph.c: 216: displaybuffer[c] &= ~(1<<(a)) & ~(1<<(a + 8));
 10669  0009B6  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 10670  0009BA  0E08               	movlw	8
 10671  0009BC  0101               	movlb	1	; () banked
 10672  0009BE  2739               	addwf	??_LEDsetBar& (0+255),f,b
 10673  0009C0  0E01               	movlw	1
 10674  0009C2  0101               	movlb	1	; () banked
 10675  0009C4  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 10676  0009C6  0E00               	movlw	0
 10677  0009C8  0101               	movlb	1	; () banked
 10678  0009CA  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 10679  0009CC  0101               	movlb	1	; () banked
 10680  0009CE  2B39               	incf	??_LEDsetBar& (0+255),f,b
 10681  0009D0  D004               	goto	u7064
 10682  0009D2                     u7065:
 10683  0009D2  90D8               	bcf	status,0,c
 10684  0009D4  0101               	movlb	1	; () banked
 10685  0009D6  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 10686  0009D8  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 10687  0009DA                     u7064:
 10688  0009DA  0101               	movlb	1	; () banked
 10689  0009DC  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 10690  0009DE  D7F9               	goto	u7065
 10691  0009E0  0101               	movlb	1	; () banked
 10692  0009E2  1D3A               	comf	(??_LEDsetBar+1)& (0+255),w,b
 10693  0009E4  0101               	movlb	1	; () banked
 10694  0009E6  6F3C               	movwf	(??_LEDsetBar+3)& (0+255),b
 10695  0009E8  0101               	movlb	1	; () banked
 10696  0009EA  1D3B               	comf	(??_LEDsetBar+2)& (0+255),w,b
 10697  0009EC  0101               	movlb	1	; () banked
 10698  0009EE  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 10699  0009F0  C029  F13E         	movff	LEDsetBar@a,??_LEDsetBar+5
 10700  0009F4  0E01               	movlw	1
 10701  0009F6  0101               	movlb	1	; () banked
 10702  0009F8  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 10703  0009FA  0E00               	movlw	0
 10704  0009FC  0101               	movlb	1	; () banked
 10705  0009FE  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 10706  000A00  0101               	movlb	1	; () banked
 10707  000A02  2B3E               	incf	(??_LEDsetBar+5)& (0+255),f,b
 10708  000A04  D004               	goto	u7074
 10709  000A06                     u7075:
 10710  000A06  90D8               	bcf	status,0,c
 10711  000A08  0101               	movlb	1	; () banked
 10712  000A0A  373F               	rlcf	(??_LEDsetBar+6)& (0+255),f,b
 10713  000A0C  3740               	rlcf	(??_LEDsetBar+7)& (0+255),f,b
 10714  000A0E                     u7074:
 10715  000A0E  0101               	movlb	1	; () banked
 10716  000A10  2F3E               	decfsz	(??_LEDsetBar+5)& (0+255),f,b
 10717  000A12  D7F9               	goto	u7075
 10718  000A14  0101               	movlb	1	; () banked
 10719  000A16  1D3F               	comf	(??_LEDsetBar+6)& (0+255),w,b
 10720  000A18  0101               	movlb	1	; () banked
 10721  000A1A  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 10722  000A1C  0101               	movlb	1	; () banked
 10723  000A1E  1D40               	comf	(??_LEDsetBar+7)& (0+255),w,b
 10724  000A20  0101               	movlb	1	; () banked
 10725  000A22  6F42               	movwf	(??_LEDsetBar+9)& (0+255),b
 10726  000A24  0101               	movlb	1	; () banked
 10727  000A26  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 10728  000A28  0101               	movlb	1	; () banked
 10729  000A2A  1541               	andwf	(??_LEDsetBar+8)& (0+255),w,b
 10730  000A2C  0101               	movlb	1	; () banked
 10731  000A2E  6F43               	movwf	(??_LEDsetBar+10)& (0+255),b
 10732  000A30  0101               	movlb	1	; () banked
 10733  000A32  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 10734  000A34  0101               	movlb	1	; () banked
 10735  000A36  1542               	andwf	(??_LEDsetBar+9)& (0+255),w,b
 10736  000A38  0101               	movlb	1	; () banked
 10737  000A3A  6F44               	movwf	(??_LEDsetBar+11)& (0+255),b
 10738  000A3C  0101               	movlb	1	; () banked
 10739  000A3E  6B45               	clrf	(??_LEDsetBar+12)& (0+255),b
 10740  000A40  0101               	movlb	1	; () banked
 10741  000A42  BF44               	btfsc	(??_LEDsetBar+11)& (0+255),7,b
 10742  000A44  0745               	decf	(??_LEDsetBar+12)& (0+255),f,b
 10743  000A46  0101               	movlb	1	; () banked
 10744  000A48  5145               	movf	(??_LEDsetBar+12)& (0+255),w,b
 10745  000A4A  0101               	movlb	1	; () banked
 10746  000A4C  6F46               	movwf	(??_LEDsetBar+13)& (0+255),b
 10747  000A4E  0E60               	movlw	low _displaybuffer
 10748  000A50  0101               	movlb	1	; () banked
 10749  000A52  6F47               	movwf	(??_LEDsetBar+14)& (0+255),b
 10750  000A54  0E00               	movlw	high _displaybuffer
 10751  000A56  0101               	movlb	1	; () banked
 10752  000A58  6F48               	movwf	(??_LEDsetBar+15)& (0+255),b
 10753  000A5A  90D8               	bcf	status,0,c
 10754  000A5C  3427               	rlcf	LEDsetBar@c,w,c
 10755  000A5E  6ED9               	movwf	fsr2l,c
 10756  000A60  3428               	rlcf	LEDsetBar@c+1,w,c
 10757  000A62  6EDA               	movwf	fsr2h,c
 10758  000A64  90D8               	bcf	status,0,c
 10759  000A66  36D9               	rlcf	fsr2l,f,c
 10760  000A68  36DA               	rlcf	fsr2h,f,c
 10761  000A6A  0101               	movlb	1	; () banked
 10762  000A6C  5147               	movf	(??_LEDsetBar+14)& (0+255),w,b
 10763  000A6E  26D9               	addwf	fsr2l,f,c
 10764  000A70  0101               	movlb	1	; () banked
 10765  000A72  5148               	movf	(??_LEDsetBar+15)& (0+255),w,b
 10766  000A74  22DA               	addwfc	fsr2h,f,c
 10767  000A76  0101               	movlb	1	; () banked
 10768  000A78  5143               	movf	(??_LEDsetBar+10)& (0+255),w,b
 10769  000A7A  16DE               	andwf	postinc2,f,c
 10770  000A7C  5144               	movf	(??_LEDsetBar+11)& (0+255),w,b
 10771  000A7E  16DE               	andwf	postinc2,f,c
 10772  000A80  5145               	movf	(??_LEDsetBar+12)& (0+255),w,b
 10773  000A82  16DE               	andwf	postinc2,f,c
 10774  000A84  5146               	movf	(??_LEDsetBar+13)& (0+255),w,b
 10775  000A86  16DE               	andwf	postinc2,f,c
 10776                           
 10777                           ;LED_BarGraph.c: 217: } else if (color == 3) {
 10778  000A88  0012               	return	
 10779  000A8A                     l6652:
 10780  000A8A  0E03               	movlw	3
 10781  000A8C  1825               	xorwf	LEDsetBar@color,w,c
 10782  000A8E  1026               	iorwf	LEDsetBar@color+1,w,c
 10783  000A90  A4D8               	btfss	status,2,c
 10784  000A92  0012               	return	
 10785                           
 10786                           ;LED_BarGraph.c: 219: displaybuffer[c] |= (1<<(a + 8));
 10787  000A94  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 10788  000A98  0E08               	movlw	8
 10789  000A9A  0101               	movlb	1	; () banked
 10790  000A9C  2739               	addwf	??_LEDsetBar& (0+255),f,b
 10791  000A9E  0E01               	movlw	1
 10792  000AA0  0101               	movlb	1	; () banked
 10793  000AA2  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 10794  000AA4  0E00               	movlw	0
 10795  000AA6  0101               	movlb	1	; () banked
 10796  000AA8  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 10797  000AAA  0101               	movlb	1	; () banked
 10798  000AAC  2B39               	incf	??_LEDsetBar& (0+255),f,b
 10799  000AAE  D004               	goto	u7094
 10800  000AB0                     u7095:
 10801  000AB0  90D8               	bcf	status,0,c
 10802  000AB2  0101               	movlb	1	; () banked
 10803  000AB4  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 10804  000AB6  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 10805  000AB8                     u7094:
 10806  000AB8  0101               	movlb	1	; () banked
 10807  000ABA  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 10808  000ABC  D7F9               	goto	u7095
 10809  000ABE  C13A  F13C         	movff	??_LEDsetBar+1,??_LEDsetBar+3
 10810  000AC2  C13B  F13D         	movff	??_LEDsetBar+2,??_LEDsetBar+4
 10811  000AC6  0E00               	movlw	0
 10812  000AC8  0101               	movlb	1	; () banked
 10813  000ACA  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 10814  000ACC  0EFF               	movlw	255
 10815  000ACE  6F3E               	movwf	(??_LEDsetBar+5)& (0+255),b
 10816  000AD0  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 10817  000AD2  0E60               	movlw	low _displaybuffer
 10818  000AD4  0101               	movlb	1	; () banked
 10819  000AD6  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 10820  000AD8  0E00               	movlw	high _displaybuffer
 10821  000ADA  0101               	movlb	1	; () banked
 10822  000ADC  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 10823  000ADE  90D8               	bcf	status,0,c
 10824  000AE0  3427               	rlcf	LEDsetBar@c,w,c
 10825  000AE2  6ED9               	movwf	fsr2l,c
 10826  000AE4  3428               	rlcf	LEDsetBar@c+1,w,c
 10827  000AE6  6EDA               	movwf	fsr2h,c
 10828  000AE8  90D8               	bcf	status,0,c
 10829  000AEA  36D9               	rlcf	fsr2l,f,c
 10830  000AEC  36DA               	rlcf	fsr2h,f,c
 10831  000AEE  0101               	movlb	1	; () banked
 10832  000AF0  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 10833  000AF2  26D9               	addwf	fsr2l,f,c
 10834  000AF4  0101               	movlb	1	; () banked
 10835  000AF6  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 10836  000AF8  22DA               	addwfc	fsr2h,f,c
 10837  000AFA  0101               	movlb	1	; () banked
 10838  000AFC  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 10839  000AFE  12DE               	iorwf	postinc2,f,c
 10840  000B00  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 10841  000B02  12DE               	iorwf	postinc2,f,c
 10842  000B04  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 10843  000B06  12DE               	iorwf	postinc2,f,c
 10844  000B08  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 10845  000B0A  12DE               	iorwf	postinc2,f,c
 10846                           
 10847                           ;LED_BarGraph.c: 221: displaybuffer[c] &= ~(1<<(a));
 10848  000B0C  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 10849  000B10  0E01               	movlw	1
 10850  000B12  0101               	movlb	1	; () banked
 10851  000B14  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 10852  000B16  0E00               	movlw	0
 10853  000B18  0101               	movlb	1	; () banked
 10854  000B1A  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 10855  000B1C  0101               	movlb	1	; () banked
 10856  000B1E  2B39               	incf	??_LEDsetBar& (0+255),f,b
 10857  000B20  D004               	goto	u7104
 10858  000B22                     u7105:
 10859  000B22  90D8               	bcf	status,0,c
 10860  000B24  0101               	movlb	1	; () banked
 10861  000B26  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 10862  000B28  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 10863  000B2A                     u7104:
 10864  000B2A  0101               	movlb	1	; () banked
 10865  000B2C  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 10866  000B2E  D7F9               	goto	u7105
 10867  000B30  0101               	movlb	1	; () banked
 10868  000B32  1D3A               	comf	(??_LEDsetBar+1)& (0+255),w,b
 10869  000B34  0101               	movlb	1	; () banked
 10870  000B36  6F3C               	movwf	(??_LEDsetBar+3)& (0+255),b
 10871  000B38  0101               	movlb	1	; () banked
 10872  000B3A  1D3B               	comf	(??_LEDsetBar+2)& (0+255),w,b
 10873  000B3C  0101               	movlb	1	; () banked
 10874  000B3E  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 10875  000B40  0101               	movlb	1	; () banked
 10876  000B42  6B3E               	clrf	(??_LEDsetBar+5)& (0+255),b
 10877  000B44  0101               	movlb	1	; () banked
 10878  000B46  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 10879  000B48  073E               	decf	(??_LEDsetBar+5)& (0+255),f,b
 10880  000B4A  0101               	movlb	1	; () banked
 10881  000B4C  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 10882  000B4E  0101               	movlb	1	; () banked
 10883  000B50  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 10884  000B52  0E60               	movlw	low _displaybuffer
 10885  000B54  0101               	movlb	1	; () banked
 10886  000B56  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 10887  000B58  0E00               	movlw	high _displaybuffer
 10888  000B5A  0101               	movlb	1	; () banked
 10889  000B5C  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 10890  000B5E  90D8               	bcf	status,0,c
 10891  000B60  3427               	rlcf	LEDsetBar@c,w,c
 10892  000B62  6ED9               	movwf	fsr2l,c
 10893  000B64  3428               	rlcf	LEDsetBar@c+1,w,c
 10894  000B66  6EDA               	movwf	fsr2h,c
 10895  000B68  90D8               	bcf	status,0,c
 10896  000B6A  36D9               	rlcf	fsr2l,f,c
 10897  000B6C  36DA               	rlcf	fsr2h,f,c
 10898  000B6E  0101               	movlb	1	; () banked
 10899  000B70  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 10900  000B72  26D9               	addwf	fsr2l,f,c
 10901  000B74  0101               	movlb	1	; () banked
 10902  000B76  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 10903  000B78  22DA               	addwfc	fsr2h,f,c
 10904  000B7A  0101               	movlb	1	; () banked
 10905  000B7C  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 10906  000B7E  16DE               	andwf	postinc2,f,c
 10907  000B80  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 10908  000B82  16DE               	andwf	postinc2,f,c
 10909  000B84  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 10910  000B86  16DE               	andwf	postinc2,f,c
 10911  000B88  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 10912  000B8A  16DE               	andwf	postinc2,f,c
 10913                           
 10914                           ; BSR set to: 1
 10915                           
 10916                           ; BSR set to: 1
 10917                           
 10918                           ; BSR set to: 1
 10919  000B8C  0012               	return	
 10920  000B8E                     __end_of_LEDsetBar:
 10921                           	opt stack 0
 10922                           tosu	equ	0xFFF
 10923                           tosh	equ	0xFFE
 10924                           tosl	equ	0xFFD
 10925                           pclath	equ	0xFFA
 10926                           tblptru	equ	0xFF8
 10927                           tblptrh	equ	0xFF7
 10928                           tblptrl	equ	0xFF6
 10929                           tablat	equ	0xFF5
 10930                           prodh	equ	0xFF4
 10931                           prodl	equ	0xFF3
 10932                           intcon	equ	0xFF2
 10933                           intcon2	equ	0xFF1
 10934                           postinc0	equ	0xFEE
 10935                           wreg	equ	0xFE8
 10936                           indf2	equ	0xFDF
 10937                           postinc2	equ	0xFDE
 10938                           postdec2	equ	0xFDD
 10939                           plusw2	equ	0xFDB
 10940                           fsr2h	equ	0xFDA
 10941                           fsr2l	equ	0xFD9
 10942                           status	equ	0xFD8
 10943                           
 10944 ;; *************** function ___awdiv *****************
 10945 ;; Defined at:
 10946 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awdiv.c"
 10947 ;; Parameters:    Size  Location     Type
 10948 ;;  dividend        2   26[COMRAM] int 
 10949 ;;  divisor         2   28[COMRAM] int 
 10950 ;; Auto vars:     Size  Location     Type
 10951 ;;  quotient        2   32[COMRAM] int 
 10952 ;;  sign            1   31[COMRAM] unsigned char 
 10953 ;;  counter         1   30[COMRAM] unsigned char 
 10954 ;; Return value:  Size  Location     Type
 10955 ;;                  2   26[COMRAM] int 
 10956 ;; Registers used:
 10957 ;;		wreg, status,2, status,0
 10958 ;; Tracked objects:
 10959 ;;		On entry : 0/0
 10960 ;;		On exit  : 0/0
 10961 ;;		Unchanged: 0/0
 10962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10963 ;;      Params:         4       0       0       0       0       0       0
 10964 ;;      Locals:         4       0       0       0       0       0       0
 10965 ;;      Temps:          0       0       0       0       0       0       0
 10966 ;;      Totals:         8       0       0       0       0       0       0
 10967 ;;Total ram usage:        8 bytes
 10968 ;; Hardware stack levels used:    1
 10969 ;; Hardware stack levels required when called:    4
 10970 ;; This function calls:
 10971 ;;		Nothing
 10972 ;; This function is called by:
 10973 ;;		_LEDsetBar
 10974 ;;		_begin
 10975 ;; This function uses a non-reentrant model
 10976 ;;
 10977                           
 10978                           	psect	text53
 10979  00274A                     __ptext53:
 10980                           	opt stack 0
 10981  00274A                     ___awdiv:
 10982                           	opt stack 24
 10983                           
 10984                           ;incstack = 0
 10985  00274A  0E00               	movlw	0
 10986  00274C  6E20               	movwf	___awdiv@sign,c
 10987  00274E  AE1E               	btfss	___awdiv@divisor+1,7,c
 10988  002750  D006               	goto	l6504
 10989  002752  6C1D               	negf	___awdiv@divisor,c
 10990  002754  1E1E               	comf	___awdiv@divisor+1,f,c
 10991  002756  B0D8               	btfsc	status,0,c
 10992  002758  2A1E               	incf	___awdiv@divisor+1,f,c
 10993  00275A  0E01               	movlw	1
 10994  00275C  6E20               	movwf	___awdiv@sign,c
 10995  00275E                     l6504:
 10996  00275E  AE1C               	btfss	___awdiv@dividend+1,7,c
 10997  002760  D006               	goto	l6510
 10998  002762  6C1B               	negf	___awdiv@dividend,c
 10999  002764  1E1C               	comf	___awdiv@dividend+1,f,c
 11000  002766  B0D8               	btfsc	status,0,c
 11001  002768  2A1C               	incf	___awdiv@dividend+1,f,c
 11002  00276A  0E01               	movlw	1
 11003  00276C  1A20               	xorwf	___awdiv@sign,f,c
 11004  00276E                     l6510:
 11005  00276E  0E00               	movlw	0
 11006  002770  6E22               	movwf	___awdiv@quotient+1,c
 11007  002772  0E00               	movlw	0
 11008  002774  6E21               	movwf	___awdiv@quotient,c
 11009  002776  501D               	movf	___awdiv@divisor,w,c
 11010  002778  101E               	iorwf	___awdiv@divisor+1,w,c
 11011  00277A  B4D8               	btfsc	status,2,c
 11012  00277C  D01C               	goto	l6532
 11013  00277E  0E01               	movlw	1
 11014  002780  6E1F               	movwf	___awdiv@counter,c
 11015  002782  D004               	goto	l6518
 11016  002784                     l6516:
 11017  002784  90D8               	bcf	status,0,c
 11018  002786  361D               	rlcf	___awdiv@divisor,f,c
 11019  002788  361E               	rlcf	___awdiv@divisor+1,f,c
 11020  00278A  2A1F               	incf	___awdiv@counter,f,c
 11021  00278C                     l6518:
 11022  00278C  AE1E               	btfss	___awdiv@divisor+1,7,c
 11023  00278E  D7FA               	goto	l6516
 11024  002790                     l6520:
 11025  002790  90D8               	bcf	status,0,c
 11026  002792  3621               	rlcf	___awdiv@quotient,f,c
 11027  002794  3622               	rlcf	___awdiv@quotient+1,f,c
 11028  002796  501D               	movf	___awdiv@divisor,w,c
 11029  002798  5C1B               	subwf	___awdiv@dividend,w,c
 11030  00279A  501E               	movf	___awdiv@divisor+1,w,c
 11031  00279C  581C               	subwfb	___awdiv@dividend+1,w,c
 11032  00279E  A0D8               	btfss	status,0,c
 11033  0027A0  D005               	goto	l6528
 11034  0027A2  501D               	movf	___awdiv@divisor,w,c
 11035  0027A4  5E1B               	subwf	___awdiv@dividend,f,c
 11036  0027A6  501E               	movf	___awdiv@divisor+1,w,c
 11037  0027A8  5A1C               	subwfb	___awdiv@dividend+1,f,c
 11038  0027AA  8021               	bsf	___awdiv@quotient,0,c
 11039  0027AC                     l6528:
 11040  0027AC  90D8               	bcf	status,0,c
 11041  0027AE  321E               	rrcf	___awdiv@divisor+1,f,c
 11042  0027B0  321D               	rrcf	___awdiv@divisor,f,c
 11043  0027B2  2E1F               	decfsz	___awdiv@counter,f,c
 11044  0027B4  D7ED               	goto	l6520
 11045  0027B6                     l6532:
 11046  0027B6  5020               	movf	___awdiv@sign,w,c
 11047  0027B8  B4D8               	btfsc	status,2,c
 11048  0027BA  D004               	goto	l6536
 11049  0027BC  6C21               	negf	___awdiv@quotient,c
 11050  0027BE  1E22               	comf	___awdiv@quotient+1,f,c
 11051  0027C0  B0D8               	btfsc	status,0,c
 11052  0027C2  2A22               	incf	___awdiv@quotient+1,f,c
 11053  0027C4                     l6536:
 11054  0027C4  C021  F01B         	movff	___awdiv@quotient,?___awdiv
 11055  0027C8  C022  F01C         	movff	___awdiv@quotient+1,?___awdiv+1
 11056  0027CC  0012               	return	
 11057  0027CE                     __end_of___awdiv:
 11058                           	opt stack 0
 11059                           tosu	equ	0xFFF
 11060                           tosh	equ	0xFFE
 11061                           tosl	equ	0xFFD
 11062                           pclath	equ	0xFFA
 11063                           tblptru	equ	0xFF8
 11064                           tblptrh	equ	0xFF7
 11065                           tblptrl	equ	0xFF6
 11066                           tablat	equ	0xFF5
 11067                           prodh	equ	0xFF4
 11068                           prodl	equ	0xFF3
 11069                           intcon	equ	0xFF2
 11070                           intcon2	equ	0xFF1
 11071                           postinc0	equ	0xFEE
 11072                           wreg	equ	0xFE8
 11073                           indf2	equ	0xFDF
 11074                           postinc2	equ	0xFDE
 11075                           postdec2	equ	0xFDD
 11076                           plusw2	equ	0xFDB
 11077                           fsr2h	equ	0xFDA
 11078                           fsr2l	equ	0xFD9
 11079                           status	equ	0xFD8
 11080                           
 11081 ;; *************** function _LEDbegin *****************
 11082 ;; Defined at:
 11083 ;;		line 83 in file "LED_BarGraph.c"
 11084 ;; Parameters:    Size  Location     Type
 11085 ;;  i2c_addr        1    wreg     unsigned char 
 11086 ;; Auto vars:     Size  Location     Type
 11087 ;;  i2c_addr        1    5[BANK1 ] unsigned char 
 11088 ;;  writeBuffer     3    0[BANK1 ] unsigned char [3]
 11089 ;;  timeOut         2    3[BANK1 ] unsigned int 
 11090 ;;  status          1    6[BANK1 ] enum E8697
 11091 ;; Return value:  Size  Location     Type
 11092 ;;                  1    wreg      void 
 11093 ;; Registers used:
 11094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11095 ;; Tracked objects:
 11096 ;;		On entry : 0/0
 11097 ;;		On exit  : 0/0
 11098 ;;		Unchanged: 0/0
 11099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11100 ;;      Params:         0       0       0       0       0       0       0
 11101 ;;      Locals:         0       0       7       0       0       0       0
 11102 ;;      Temps:          0       0       0       0       0       0       0
 11103 ;;      Totals:         0       0       7       0       0       0       0
 11104 ;;Total ram usage:        7 bytes
 11105 ;; Hardware stack levels used:    1
 11106 ;; Hardware stack levels required when called:    7
 11107 ;; This function calls:
 11108 ;;		_I2C1_MasterWrite
 11109 ;;		_LEDBsetBrightness
 11110 ;;		_LEDblinkRate
 11111 ;; This function is called by:
 11112 ;;		_main
 11113 ;; This function uses a non-reentrant model
 11114 ;;
 11115                           
 11116                           	psect	text54
 11117  002464                     __ptext54:
 11118                           	opt stack 0
 11119  002464                     _LEDbegin:
 11120                           	opt stack 23
 11121                           
 11122                           ;incstack = 0
 11123                           ;LEDbegin@i2c_addr stored from wreg
 11124  002464  0101               	movlb	1	; () banked
 11125  002466  6F3E               	movwf	LEDbegin@i2c_addr& (0+255),b
 11126                           
 11127                           ;LED_BarGraph.c: 84: uint8_t writeBuffer[3];
 11128                           ;LED_BarGraph.c: 85: uint16_t timeOut;
 11129                           ;LED_BarGraph.c: 86: writeBuffer[0] = 0x21;
 11130  002468  0E21               	movlw	33
 11131  00246A  0101               	movlb	1	; () banked
 11132  00246C  6F39               	movwf	LEDbegin@writeBuffer& (0+255),b
 11133                           
 11134                           ;LED_BarGraph.c: 87: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 11135  00246E  0E02               	movlw	2
 11136  002470  0101               	movlb	1	; () banked
 11137  002472  6F3F               	movwf	LEDbegin@status& (0+255),b
 11138                           
 11139                           ;LED_BarGraph.c: 89: timeOut = 0;
 11140  002474  0E00               	movlw	0
 11141  002476  0101               	movlb	1	; () banked
 11142  002478  6F3D               	movwf	(LEDbegin@timeOut+1)& (0+255),b
 11143  00247A  0E00               	movlw	0
 11144  00247C  6F3C               	movwf	LEDbegin@timeOut& (0+255),b
 11145                           
 11146                           ;LED_BarGraph.c: 90: while (status != I2C1_MESSAGE_FAIL) {
 11147  00247E  D027               	goto	l7170
 11148  002480                     l7150:
 11149                           
 11150                           ; BSR set to: 1
 11151                           ;LED_BarGraph.c: 92: I2C1_MasterWrite(&writeBuffer,
 11152                           ;LED_BarGraph.c: 93: 1,
 11153                           ;LED_BarGraph.c: 94: i2c_addr,
 11154                           ;LED_BarGraph.c: 95: &status);
 11155  002480  0E39               	movlw	low LEDbegin@writeBuffer
 11156  002482  6E24               	movwf	I2C1_MasterWrite@pdata,c
 11157  002484  0E01               	movlw	high LEDbegin@writeBuffer
 11158  002486  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
 11159  002488  0E01               	movlw	1
 11160  00248A  6E26               	movwf	I2C1_MasterWrite@length,c
 11161  00248C  C13E  F027         	movff	LEDbegin@i2c_addr,I2C1_MasterWrite@address
 11162  002490  6A28               	clrf	I2C1_MasterWrite@address+1,c
 11163  002492  0E3F               	movlw	low LEDbegin@status
 11164  002494  6E29               	movwf	I2C1_MasterWrite@pflag,c
 11165  002496  0E01               	movlw	high LEDbegin@status
 11166  002498  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
 11167  00249A  EC87  F015         	call	_I2C1_MasterWrite	;wreg free
 11168  00249E                     l7152:
 11169  00249E  0E02               	movlw	2
 11170  0024A0  0101               	movlb	1	; () banked
 11171  0024A2  193F               	xorwf	LEDbegin@status& (0+255),w,b
 11172  0024A4  B4D8               	btfsc	status,2,c
 11173  0024A6  D7FB               	goto	l7152
 11174                           
 11175                           ; BSR set to: 1
 11176                           ;LED_BarGraph.c: 100: if (status == I2C1_MESSAGE_COMPLETE)
 11177                           
 11178                           ; BSR set to: 1
 11179  0024A8  0101               	movlb	1	; () banked
 11180  0024AA  513F               	movf	LEDbegin@status& (0+255),w,b
 11181  0024AC  0101               	movlb	1	; () banked
 11182  0024AE  B4D8               	btfsc	status,2,c
 11183  0024B0  D012               	goto	l7172
 11184                           
 11185                           ; BSR set to: 1
 11186                           ;LED_BarGraph.c: 102: if (timeOut == 100)
 11187                           
 11188                           ; BSR set to: 1
 11189                           
 11190                           ; BSR set to: 1
 11191                           ;LED_BarGraph.c: 101: break;
 11192  0024B2  0E64               	movlw	100
 11193  0024B4  0101               	movlb	1	; () banked
 11194  0024B6  193C               	xorwf	LEDbegin@timeOut& (0+255),w,b
 11195  0024B8  0101               	movlb	1	; () banked
 11196  0024BA  113D               	iorwf	(LEDbegin@timeOut+1)& (0+255),w,b
 11197  0024BC  B4D8               	btfsc	status,2,c
 11198  0024BE  D00B               	goto	l7172
 11199                           
 11200                           ; BSR set to: 1
 11201                           ;LED_BarGraph.c: 104: if (status == I2C1_MESSAGE_FAIL)
 11202                           
 11203                           ; BSR set to: 1
 11204                           
 11205                           ; BSR set to: 1
 11206                           ;LED_BarGraph.c: 103: break;
 11207  0024C0  0101               	movlb	1	; () banked
 11208  0024C2  053F               	decf	LEDbegin@status& (0+255),w,b
 11209  0024C4  B4D8               	btfsc	status,2,c
 11210  0024C6  D007               	goto	l7172
 11211                           
 11212                           ; BSR set to: 1
 11213                           ;LED_BarGraph.c: 106: else
 11214                           ;LED_BarGraph.c: 107: timeOut++;
 11215                           
 11216                           ; BSR set to: 1
 11217                           
 11218                           ; BSR set to: 1
 11219                           
 11220                           ; BSR set to: 1
 11221                           ;LED_BarGraph.c: 105: break;
 11222  0024C8  0101               	movlb	1	; () banked
 11223  0024CA  4B3C               	infsnz	LEDbegin@timeOut& (0+255),f,b
 11224  0024CC  2B3D               	incf	(LEDbegin@timeOut+1)& (0+255),f,b
 11225  0024CE                     l7170:
 11226                           
 11227                           ; BSR set to: 1
 11228  0024CE  0101               	movlb	1	; () banked
 11229  0024D0  053F               	decf	LEDbegin@status& (0+255),w,b
 11230  0024D2  A4D8               	btfss	status,2,c
 11231  0024D4  D7D5               	goto	l7150
 11232  0024D6                     l7172:
 11233                           
 11234                           ; BSR set to: 1
 11235                           ;LED_BarGraph.c: 108: }
 11236                           ;LED_BarGraph.c: 110: LEDblinkRate(0, i2c_addr);
 11237  0024D6  0E00               	movlw	0
 11238  0024D8  0100               	movlb	0	; () banked
 11239  0024DA  6FF5               	movwf	(LEDblinkRate@b+1)& (0+255),b
 11240  0024DC  0E00               	movlw	0
 11241  0024DE  6FF4               	movwf	LEDblinkRate@b& (0+255),b
 11242  0024E0  C13E  F0F6         	movff	LEDbegin@i2c_addr,LEDblinkRate@i2c_addr
 11243  0024E4  EC7E  F012         	call	_LEDblinkRate	;wreg free
 11244                           
 11245                           ;LED_BarGraph.c: 111: LEDBsetBrightness(15, i2c_addr);
 11246  0024E8  0E00               	movlw	0
 11247  0024EA  0100               	movlb	0	; () banked
 11248  0024EC  6FF5               	movwf	(LEDBsetBrightness@b+1)& (0+255),b
 11249  0024EE  0E0F               	movlw	15
 11250  0024F0  6FF4               	movwf	LEDBsetBrightness@b& (0+255),b
 11251  0024F2  C13E  F0F6         	movff	LEDbegin@i2c_addr,LEDBsetBrightness@i2c_addr
 11252  0024F6  ECC9  F012         	call	_LEDBsetBrightness	;wreg free
 11253  0024FA  0012               	return		;funcret
 11254  0024FC                     __end_of_LEDbegin:
 11255                           	opt stack 0
 11256                           tosu	equ	0xFFF
 11257                           tosh	equ	0xFFE
 11258                           tosl	equ	0xFFD
 11259                           pclath	equ	0xFFA
 11260                           tblptru	equ	0xFF8
 11261                           tblptrh	equ	0xFF7
 11262                           tblptrl	equ	0xFF6
 11263                           tablat	equ	0xFF5
 11264                           prodh	equ	0xFF4
 11265                           prodl	equ	0xFF3
 11266                           intcon	equ	0xFF2
 11267                           intcon2	equ	0xFF1
 11268                           postinc0	equ	0xFEE
 11269                           wreg	equ	0xFE8
 11270                           indf2	equ	0xFDF
 11271                           postinc2	equ	0xFDE
 11272                           postdec2	equ	0xFDD
 11273                           plusw2	equ	0xFDB
 11274                           fsr2h	equ	0xFDA
 11275                           fsr2l	equ	0xFD9
 11276                           status	equ	0xFD8
 11277                           
 11278 ;; *************** function _LEDblinkRate *****************
 11279 ;; Defined at:
 11280 ;;		line 53 in file "LED_BarGraph.c"
 11281 ;; Parameters:    Size  Location     Type
 11282 ;;  b               2    0[BANK0 ] int 
 11283 ;;  i2c_addr        1    2[BANK0 ] unsigned char 
 11284 ;; Auto vars:     Size  Location     Type
 11285 ;;  writeBuffer     2    3[BANK0 ] unsigned char [2]
 11286 ;;  timeOut         2    5[BANK0 ] unsigned int 
 11287 ;;  status          1    7[BANK0 ] enum E8697
 11288 ;; Return value:  Size  Location     Type
 11289 ;;                  1    wreg      void 
 11290 ;; Registers used:
 11291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11292 ;; Tracked objects:
 11293 ;;		On entry : 0/0
 11294 ;;		On exit  : 0/0
 11295 ;;		Unchanged: 0/0
 11296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11297 ;;      Params:         0       3       0       0       0       0       0
 11298 ;;      Locals:         0       5       0       0       0       0       0
 11299 ;;      Temps:          0       0       0       0       0       0       0
 11300 ;;      Totals:         0       8       0       0       0       0       0
 11301 ;;Total ram usage:        8 bytes
 11302 ;; Hardware stack levels used:    1
 11303 ;; Hardware stack levels required when called:    6
 11304 ;; This function calls:
 11305 ;;		_I2C1_MasterWrite
 11306 ;; This function is called by:
 11307 ;;		_LEDbegin
 11308 ;; This function uses a non-reentrant model
 11309 ;;
 11310                           
 11311                           	psect	text55
 11312  0024FC                     __ptext55:
 11313                           	opt stack 0
 11314  0024FC                     _LEDblinkRate:
 11315                           	opt stack 23
 11316                           
 11317                           ;LED_BarGraph.c: 54: if (b > 3) b = 0;
 11318                           
 11319                           ;incstack = 0
 11320  0024FC  0100               	movlb	0	; () banked
 11321  0024FE  BFF5               	btfsc	(LEDblinkRate@b+1)& (0+255),7,b
 11322  002500  D00D               	goto	l6692
 11323  002502  0100               	movlb	0	; () banked
 11324  002504  51F5               	movf	(LEDblinkRate@b+1)& (0+255),w,b
 11325  002506  E105               	bnz	u7170
 11326  002508  0E04               	movlw	4
 11327  00250A  0100               	movlb	0	; () banked
 11328  00250C  5DF4               	subwf	LEDblinkRate@b& (0+255),w,b
 11329  00250E  A0D8               	btfss	status,0,c
 11330  002510  D005               	goto	l6692
 11331  002512                     u7170:
 11332                           
 11333                           ; BSR set to: 0
 11334  002512  0E00               	movlw	0
 11335  002514  0100               	movlb	0	; () banked
 11336  002516  6FF5               	movwf	(LEDblinkRate@b+1)& (0+255),b
 11337  002518  0E00               	movlw	0
 11338  00251A  6FF4               	movwf	LEDblinkRate@b& (0+255),b
 11339  00251C                     l6692:
 11340                           
 11341                           ; BSR set to: 0
 11342                           ;LED_BarGraph.c: 55: uint8_t writeBuffer[2];
 11343                           ;LED_BarGraph.c: 56: uint16_t timeOut;
 11344                           ;LED_BarGraph.c: 57: writeBuffer[0] = (0x80 | 0x01 | (b << 1));
 11345  00251C  0100               	movlb	0	; () banked
 11346  00251E  51F4               	movf	LEDblinkRate@b& (0+255),w,b
 11347  002520  25F4               	addwf	LEDblinkRate@b& (0+255),w,b
 11348  002522  0981               	iorlw	129
 11349  002524  0100               	movlb	0	; () banked
 11350  002526  6FF7               	movwf	LEDblinkRate@writeBuffer& (0+255),b
 11351                           
 11352                           ; BSR set to: 0
 11353                           ;LED_BarGraph.c: 58: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 11354  002528  0E02               	movlw	2
 11355  00252A  0100               	movlb	0	; () banked
 11356  00252C  6FFB               	movwf	LEDblinkRate@status& (0+255),b
 11357                           
 11358                           ; BSR set to: 0
 11359                           ;LED_BarGraph.c: 60: timeOut = 0;
 11360  00252E  0E00               	movlw	0
 11361  002530  0100               	movlb	0	; () banked
 11362  002532  6FFA               	movwf	(LEDblinkRate@timeOut+1)& (0+255),b
 11363  002534  0E00               	movlw	0
 11364  002536  6FF9               	movwf	LEDblinkRate@timeOut& (0+255),b
 11365                           
 11366                           ;LED_BarGraph.c: 61: while (status != I2C1_MESSAGE_FAIL) {
 11367  002538  D027               	goto	l6718
 11368  00253A                     l6698:
 11369                           
 11370                           ; BSR set to: 0
 11371                           ;LED_BarGraph.c: 63: I2C1_MasterWrite(&writeBuffer,
 11372                           ;LED_BarGraph.c: 64: 1,
 11373                           ;LED_BarGraph.c: 65: i2c_addr,
 11374                           ;LED_BarGraph.c: 66: &status);
 11375  00253A  0EF7               	movlw	low LEDblinkRate@writeBuffer
 11376  00253C  6E24               	movwf	I2C1_MasterWrite@pdata,c
 11377  00253E  0E00               	movlw	high LEDblinkRate@writeBuffer
 11378  002540  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
 11379  002542  0E01               	movlw	1
 11380  002544  6E26               	movwf	I2C1_MasterWrite@length,c
 11381  002546  C0F6  F027         	movff	LEDblinkRate@i2c_addr,I2C1_MasterWrite@address
 11382  00254A  6A28               	clrf	I2C1_MasterWrite@address+1,c
 11383  00254C  0EFB               	movlw	low LEDblinkRate@status
 11384  00254E  6E29               	movwf	I2C1_MasterWrite@pflag,c
 11385  002550  0E00               	movlw	high LEDblinkRate@status
 11386  002552  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
 11387  002554  EC87  F015         	call	_I2C1_MasterWrite	;wreg free
 11388  002558                     l6700:
 11389  002558  0E02               	movlw	2
 11390  00255A  0100               	movlb	0	; () banked
 11391  00255C  19FB               	xorwf	LEDblinkRate@status& (0+255),w,b
 11392  00255E  B4D8               	btfsc	status,2,c
 11393  002560  D7FB               	goto	l6700
 11394                           
 11395                           ; BSR set to: 0
 11396                           ;LED_BarGraph.c: 71: if (status == I2C1_MESSAGE_COMPLETE)
 11397                           
 11398                           ; BSR set to: 0
 11399  002562  0100               	movlb	0	; () banked
 11400  002564  51FB               	movf	LEDblinkRate@status& (0+255),w,b
 11401  002566  0100               	movlb	0	; () banked
 11402  002568  B4D8               	btfsc	status,2,c
 11403  00256A  0012               	return	
 11404                           
 11405                           ; BSR set to: 0
 11406                           ;LED_BarGraph.c: 73: if (timeOut == 100)
 11407                           
 11408                           ; BSR set to: 0
 11409                           
 11410                           ; BSR set to: 0
 11411                           ;LED_BarGraph.c: 72: break;
 11412  00256C  0E64               	movlw	100
 11413  00256E  0100               	movlb	0	; () banked
 11414  002570  19F9               	xorwf	LEDblinkRate@timeOut& (0+255),w,b
 11415  002572  0100               	movlb	0	; () banked
 11416  002574  11FA               	iorwf	(LEDblinkRate@timeOut+1)& (0+255),w,b
 11417  002576  B4D8               	btfsc	status,2,c
 11418  002578  0012               	return	
 11419                           
 11420                           ; BSR set to: 0
 11421                           ;LED_BarGraph.c: 75: if (status == I2C1_MESSAGE_FAIL)
 11422                           
 11423                           ; BSR set to: 0
 11424                           
 11425                           ; BSR set to: 0
 11426                           ;LED_BarGraph.c: 74: break;
 11427  00257A  0100               	movlb	0	; () banked
 11428  00257C  05FB               	decf	LEDblinkRate@status& (0+255),w,b
 11429  00257E  B4D8               	btfsc	status,2,c
 11430  002580  0012               	return	
 11431                           
 11432                           ; BSR set to: 0
 11433                           ;LED_BarGraph.c: 77: else
 11434                           ;LED_BarGraph.c: 78: timeOut++;
 11435                           
 11436                           ; BSR set to: 0
 11437                           
 11438                           ; BSR set to: 0
 11439                           
 11440                           ; BSR set to: 0
 11441                           ;LED_BarGraph.c: 76: break;
 11442  002582  0100               	movlb	0	; () banked
 11443  002584  4BF9               	infsnz	LEDblinkRate@timeOut& (0+255),f,b
 11444  002586  2BFA               	incf	(LEDblinkRate@timeOut+1)& (0+255),f,b
 11445  002588                     l6718:
 11446                           
 11447                           ; BSR set to: 0
 11448  002588  0100               	movlb	0	; () banked
 11449  00258A  05FB               	decf	LEDblinkRate@status& (0+255),w,b
 11450  00258C  B4D8               	btfsc	status,2,c
 11451  00258E  0012               	return	
 11452  002590  D7D4               	goto	l6698
 11453  002592                     __end_of_LEDblinkRate:
 11454                           	opt stack 0
 11455                           tosu	equ	0xFFF
 11456                           tosh	equ	0xFFE
 11457                           tosl	equ	0xFFD
 11458                           pclath	equ	0xFFA
 11459                           tblptru	equ	0xFF8
 11460                           tblptrh	equ	0xFF7
 11461                           tblptrl	equ	0xFF6
 11462                           tablat	equ	0xFF5
 11463                           prodh	equ	0xFF4
 11464                           prodl	equ	0xFF3
 11465                           intcon	equ	0xFF2
 11466                           intcon2	equ	0xFF1
 11467                           postinc0	equ	0xFEE
 11468                           wreg	equ	0xFE8
 11469                           indf2	equ	0xFDF
 11470                           postinc2	equ	0xFDE
 11471                           postdec2	equ	0xFDD
 11472                           plusw2	equ	0xFDB
 11473                           fsr2h	equ	0xFDA
 11474                           fsr2l	equ	0xFD9
 11475                           status	equ	0xFD8
 11476                           
 11477 ;; *************** function _LEDBsetBrightness *****************
 11478 ;; Defined at:
 11479 ;;		line 23 in file "LED_BarGraph.c"
 11480 ;; Parameters:    Size  Location     Type
 11481 ;;  b               2    0[BANK0 ] int 
 11482 ;;  i2c_addr        1    2[BANK0 ] unsigned char 
 11483 ;; Auto vars:     Size  Location     Type
 11484 ;;  writeBuffer     2    3[BANK0 ] unsigned char [2]
 11485 ;;  timeOut         2    5[BANK0 ] unsigned int 
 11486 ;;  status          1    7[BANK0 ] enum E8697
 11487 ;; Return value:  Size  Location     Type
 11488 ;;                  1    wreg      void 
 11489 ;; Registers used:
 11490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11491 ;; Tracked objects:
 11492 ;;		On entry : 0/0
 11493 ;;		On exit  : 0/0
 11494 ;;		Unchanged: 0/0
 11495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11496 ;;      Params:         0       3       0       0       0       0       0
 11497 ;;      Locals:         0       5       0       0       0       0       0
 11498 ;;      Temps:          0       0       0       0       0       0       0
 11499 ;;      Totals:         0       8       0       0       0       0       0
 11500 ;;Total ram usage:        8 bytes
 11501 ;; Hardware stack levels used:    1
 11502 ;; Hardware stack levels required when called:    6
 11503 ;; This function calls:
 11504 ;;		_I2C1_MasterWrite
 11505 ;; This function is called by:
 11506 ;;		_LEDbegin
 11507 ;; This function uses a non-reentrant model
 11508 ;;
 11509                           
 11510                           	psect	text56
 11511  002592                     __ptext56:
 11512                           	opt stack 0
 11513  002592                     _LEDBsetBrightness:
 11514                           	opt stack 23
 11515                           
 11516                           ;LED_BarGraph.c: 24: if (b > 15) b = 15;
 11517                           
 11518                           ; BSR set to: 0
 11519                           ;incstack = 0
 11520  002592  0100               	movlb	0	; () banked
 11521  002594  BFF5               	btfsc	(LEDBsetBrightness@b+1)& (0+255),7,b
 11522  002596  D00D               	goto	l6660
 11523  002598  0100               	movlb	0	; () banked
 11524  00259A  51F5               	movf	(LEDBsetBrightness@b+1)& (0+255),w,b
 11525  00259C  E105               	bnz	u7110
 11526  00259E  0E10               	movlw	16
 11527  0025A0  0100               	movlb	0	; () banked
 11528  0025A2  5DF4               	subwf	LEDBsetBrightness@b& (0+255),w,b
 11529  0025A4  A0D8               	btfss	status,0,c
 11530  0025A6  D005               	goto	l6660
 11531  0025A8                     u7110:
 11532                           
 11533                           ; BSR set to: 0
 11534  0025A8  0E00               	movlw	0
 11535  0025AA  0100               	movlb	0	; () banked
 11536  0025AC  6FF5               	movwf	(LEDBsetBrightness@b+1)& (0+255),b
 11537  0025AE  0E0F               	movlw	15
 11538  0025B0  6FF4               	movwf	LEDBsetBrightness@b& (0+255),b
 11539  0025B2                     l6660:
 11540                           
 11541                           ; BSR set to: 0
 11542                           ;LED_BarGraph.c: 25: uint8_t writeBuffer[2];
 11543                           ;LED_BarGraph.c: 26: uint16_t timeOut;
 11544                           ;LED_BarGraph.c: 27: writeBuffer[0] = (0xE0 | b);
 11545  0025B2  0100               	movlb	0	; () banked
 11546  0025B4  51F4               	movf	LEDBsetBrightness@b& (0+255),w,b
 11547  0025B6  09E0               	iorlw	224
 11548  0025B8  0100               	movlb	0	; () banked
 11549  0025BA  6FF7               	movwf	LEDBsetBrightness@writeBuffer& (0+255),b
 11550                           
 11551                           ; BSR set to: 0
 11552                           ;LED_BarGraph.c: 28: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 11553  0025BC  0E02               	movlw	2
 11554  0025BE  0100               	movlb	0	; () banked
 11555  0025C0  6FFB               	movwf	LEDBsetBrightness@status& (0+255),b
 11556                           
 11557                           ; BSR set to: 0
 11558                           ;LED_BarGraph.c: 30: timeOut = 0;
 11559  0025C2  0E00               	movlw	0
 11560  0025C4  0100               	movlb	0	; () banked
 11561  0025C6  6FFA               	movwf	(LEDBsetBrightness@timeOut+1)& (0+255),b
 11562  0025C8  0E00               	movlw	0
 11563  0025CA  6FF9               	movwf	LEDBsetBrightness@timeOut& (0+255),b
 11564                           
 11565                           ;LED_BarGraph.c: 31: while (status != I2C1_MESSAGE_FAIL) {
 11566  0025CC  D027               	goto	l6686
 11567  0025CE                     l6666:
 11568                           
 11569                           ; BSR set to: 0
 11570                           ;LED_BarGraph.c: 33: I2C1_MasterWrite(&writeBuffer,
 11571                           ;LED_BarGraph.c: 34: 1,
 11572                           ;LED_BarGraph.c: 35: i2c_addr,
 11573                           ;LED_BarGraph.c: 36: &status);
 11574  0025CE  0EF7               	movlw	low LEDBsetBrightness@writeBuffer
 11575  0025D0  6E24               	movwf	I2C1_MasterWrite@pdata,c
 11576  0025D2  0E00               	movlw	high LEDBsetBrightness@writeBuffer
 11577  0025D4  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
 11578  0025D6  0E01               	movlw	1
 11579  0025D8  6E26               	movwf	I2C1_MasterWrite@length,c
 11580  0025DA  C0F6  F027         	movff	LEDBsetBrightness@i2c_addr,I2C1_MasterWrite@address
 11581  0025DE  6A28               	clrf	I2C1_MasterWrite@address+1,c
 11582  0025E0  0EFB               	movlw	low LEDBsetBrightness@status
 11583  0025E2  6E29               	movwf	I2C1_MasterWrite@pflag,c
 11584  0025E4  0E00               	movlw	high LEDBsetBrightness@status
 11585  0025E6  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
 11586  0025E8  EC87  F015         	call	_I2C1_MasterWrite	;wreg free
 11587  0025EC                     l6668:
 11588  0025EC  0E02               	movlw	2
 11589  0025EE  0100               	movlb	0	; () banked
 11590  0025F0  19FB               	xorwf	LEDBsetBrightness@status& (0+255),w,b
 11591  0025F2  B4D8               	btfsc	status,2,c
 11592  0025F4  D7FB               	goto	l6668
 11593                           
 11594                           ; BSR set to: 0
 11595                           ;LED_BarGraph.c: 41: if (status == I2C1_MESSAGE_COMPLETE)
 11596                           
 11597                           ; BSR set to: 0
 11598  0025F6  0100               	movlb	0	; () banked
 11599  0025F8  51FB               	movf	LEDBsetBrightness@status& (0+255),w,b
 11600  0025FA  0100               	movlb	0	; () banked
 11601  0025FC  B4D8               	btfsc	status,2,c
 11602  0025FE  0012               	return	
 11603                           
 11604                           ; BSR set to: 0
 11605                           ;LED_BarGraph.c: 43: if (timeOut == 100)
 11606                           
 11607                           ; BSR set to: 0
 11608                           
 11609                           ; BSR set to: 0
 11610                           ;LED_BarGraph.c: 42: break;
 11611  002600  0E64               	movlw	100
 11612  002602  0100               	movlb	0	; () banked
 11613  002604  19F9               	xorwf	LEDBsetBrightness@timeOut& (0+255),w,b
 11614  002606  0100               	movlb	0	; () banked
 11615  002608  11FA               	iorwf	(LEDBsetBrightness@timeOut+1)& (0+255),w,b
 11616  00260A  B4D8               	btfsc	status,2,c
 11617  00260C  0012               	return	
 11618                           
 11619                           ; BSR set to: 0
 11620                           ;LED_BarGraph.c: 45: if (status == I2C1_MESSAGE_FAIL)
 11621                           
 11622                           ; BSR set to: 0
 11623                           
 11624                           ; BSR set to: 0
 11625                           ;LED_BarGraph.c: 44: break;
 11626  00260E  0100               	movlb	0	; () banked
 11627  002610  05FB               	decf	LEDBsetBrightness@status& (0+255),w,b
 11628  002612  B4D8               	btfsc	status,2,c
 11629  002614  0012               	return	
 11630                           
 11631                           ; BSR set to: 0
 11632                           ;LED_BarGraph.c: 47: else
 11633                           ;LED_BarGraph.c: 48: timeOut++;
 11634                           
 11635                           ; BSR set to: 0
 11636                           
 11637                           ; BSR set to: 0
 11638                           
 11639                           ; BSR set to: 0
 11640                           ;LED_BarGraph.c: 46: break;
 11641  002616  0100               	movlb	0	; () banked
 11642  002618  4BF9               	infsnz	LEDBsetBrightness@timeOut& (0+255),f,b
 11643  00261A  2BFA               	incf	(LEDBsetBrightness@timeOut+1)& (0+255),f,b
 11644  00261C                     l6686:
 11645                           
 11646                           ; BSR set to: 0
 11647  00261C  0100               	movlb	0	; () banked
 11648  00261E  05FB               	decf	LEDBsetBrightness@status& (0+255),w,b
 11649  002620  B4D8               	btfsc	status,2,c
 11650  002622  0012               	return	
 11651  002624  D7D4               	goto	l6666
 11652  002626                     __end_of_LEDBsetBrightness:
 11653                           	opt stack 0
 11654                           tosu	equ	0xFFF
 11655                           tosh	equ	0xFFE
 11656                           tosl	equ	0xFFD
 11657                           pclath	equ	0xFFA
 11658                           tblptru	equ	0xFF8
 11659                           tblptrh	equ	0xFF7
 11660                           tblptrl	equ	0xFF6
 11661                           tablat	equ	0xFF5
 11662                           prodh	equ	0xFF4
 11663                           prodl	equ	0xFF3
 11664                           intcon	equ	0xFF2
 11665                           intcon2	equ	0xFF1
 11666                           postinc0	equ	0xFEE
 11667                           wreg	equ	0xFE8
 11668                           indf2	equ	0xFDF
 11669                           postinc2	equ	0xFDE
 11670                           postdec2	equ	0xFDD
 11671                           plusw2	equ	0xFDB
 11672                           fsr2h	equ	0xFDA
 11673                           fsr2l	equ	0xFD9
 11674                           status	equ	0xFD8
 11675                           
 11676 ;; *************** function _I2C1_MasterWrite *****************
 11677 ;; Defined at:
 11678 ;;		line 551 in file "mcc_generated_files/i2c1.c"
 11679 ;; Parameters:    Size  Location     Type
 11680 ;;  pdata           2   35[COMRAM] PTR unsigned char 
 11681 ;;		 -> oledPutChar@bytes(9), Buff(2), LEDwriteDisplay@writeBuffer(20), LEDbegin@writeBuffer(3), 
 11682 ;;		 -> LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBuffer(2), 
 11683 ;;  length          1   37[COMRAM] unsigned char 
 11684 ;;  address         2   38[COMRAM] unsigned int 
 11685 ;;  pflag           2   40[COMRAM] PTR enum E8678
 11686 ;;		 -> oledPutChar@status(1), OLED_command@status(1), LEDwriteDisplay@status(1), LEDbegin@status(1), 
 11687 ;;		 -> LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
 11688 ;; Auto vars:     Size  Location     Type
 11689 ;;		None
 11690 ;; Return value:  Size  Location     Type
 11691 ;;                  1    wreg      void 
 11692 ;; Registers used:
 11693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11694 ;; Tracked objects:
 11695 ;;		On entry : 0/0
 11696 ;;		On exit  : 0/0
 11697 ;;		Unchanged: 0/0
 11698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11699 ;;      Params:         7       0       0       0       0       0       0
 11700 ;;      Locals:         0       0       0       0       0       0       0
 11701 ;;      Temps:          0       0       0       0       0       0       0
 11702 ;;      Totals:         7       0       0       0       0       0       0
 11703 ;;Total ram usage:        7 bytes
 11704 ;; Hardware stack levels used:    1
 11705 ;; Hardware stack levels required when called:    5
 11706 ;; This function calls:
 11707 ;;		_I2C1_MasterTRBInsert
 11708 ;;		_I2C1_MasterWriteTRBBuild
 11709 ;; This function is called by:
 11710 ;;		_LEDBsetBrightness
 11711 ;;		_LEDblinkRate
 11712 ;;		_LEDbegin
 11713 ;;		_LEDwriteDisplay
 11714 ;;		_OLED_command
 11715 ;;		_oledPutChar
 11716 ;; This function uses a non-reentrant model
 11717 ;;
 11718                           
 11719                           	psect	text57
 11720  002B0E                     __ptext57:
 11721                           	opt stack 0
 11722  002B0E                     _I2C1_MasterWrite:
 11723                           	opt stack 24
 11724                           
 11725                           ;i2c1.c: 557: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
 11726                           ;i2c1.c: 560: if (i2c1_object.trStatus.s.full != 1)
 11727                           
 11728                           ; BSR set to: 0
 11729                           ;incstack = 0
 11730  002B0E  0100               	movlb	0	; () banked
 11731  002B10  B1BC               	btfsc	(_i2c1_object+4)& (0+255),0,b
 11732  002B12  D01C               	goto	l6228
 11733                           
 11734                           ; BSR set to: 0
 11735                           ;i2c1.c: 561: {
 11736                           ;i2c1.c: 562: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
 11737  002B14  0EE8               	movlw	low I2C1_MasterWrite@trBlock
 11738  002B16  6E1B               	movwf	I2C1_MasterWriteTRBBuild@ptrb,c
 11739  002B18  0E00               	movlw	high I2C1_MasterWrite@trBlock
 11740  002B1A  6E1C               	movwf	I2C1_MasterWriteTRBBuild@ptrb+1,c
 11741  002B1C  C024  F01D         	movff	I2C1_MasterWrite@pdata,I2C1_MasterWriteTRBBuild@pdata
 11742  002B20  C025  F01E         	movff	I2C1_MasterWrite@pdata+1,I2C1_MasterWriteTRBBuild@pdata+1
 11743  002B24  C026  F01F         	movff	I2C1_MasterWrite@length,I2C1_MasterWriteTRBBuild@length
 11744  002B28  C027  F020         	movff	I2C1_MasterWrite@address,I2C1_MasterWriteTRBBuild@address
 11745  002B2C  C028  F021         	movff	I2C1_MasterWrite@address+1,I2C1_MasterWriteTRBBuild@address+1
 11746  002B30  ECF4  F015         	call	_I2C1_MasterWriteTRBBuild	;wreg free
 11747                           
 11748                           ;i2c1.c: 563: I2C1_MasterTRBInsert(1, &trBlock, pflag);
 11749  002B34  0EE8               	movlw	low I2C1_MasterWrite@trBlock
 11750  002B36  6E1B               	movwf	I2C1_MasterTRBInsert@ptrb_list,c
 11751  002B38  0E00               	movlw	high I2C1_MasterWrite@trBlock
 11752  002B3A  6E1C               	movwf	I2C1_MasterTRBInsert@ptrb_list+1,c
 11753  002B3C  C029  F01D         	movff	I2C1_MasterWrite@pflag,I2C1_MasterTRBInsert@pflag
 11754  002B40  C02A  F01E         	movff	I2C1_MasterWrite@pflag+1,I2C1_MasterTRBInsert@pflag+1
 11755  002B44  0E01               	movlw	1
 11756  002B46  EC2C  F011         	call	_I2C1_MasterTRBInsert
 11757                           
 11758                           ;i2c1.c: 564: }
 11759  002B4A  0012               	return	
 11760  002B4C                     l6228:
 11761                           
 11762                           ;i2c1.c: 565: else
 11763                           ;i2c1.c: 566: {
 11764                           ;i2c1.c: 567: *pflag = I2C1_MESSAGE_FAIL;
 11765  002B4C  C029  FFD9         	movff	I2C1_MasterWrite@pflag,fsr2l
 11766  002B50  C02A  FFDA         	movff	I2C1_MasterWrite@pflag+1,fsr2h
 11767  002B54  0E01               	movlw	1
 11768  002B56  6EDF               	movwf	indf2,c
 11769  002B58  0012               	return	
 11770  002B5A                     __end_of_I2C1_MasterWrite:
 11771                           	opt stack 0
 11772                           tosu	equ	0xFFF
 11773                           tosh	equ	0xFFE
 11774                           tosl	equ	0xFFD
 11775                           pclath	equ	0xFFA
 11776                           tblptru	equ	0xFF8
 11777                           tblptrh	equ	0xFF7
 11778                           tblptrl	equ	0xFF6
 11779                           tablat	equ	0xFF5
 11780                           prodh	equ	0xFF4
 11781                           prodl	equ	0xFF3
 11782                           intcon	equ	0xFF2
 11783                           intcon2	equ	0xFF1
 11784                           postinc0	equ	0xFEE
 11785                           wreg	equ	0xFE8
 11786                           indf2	equ	0xFDF
 11787                           postinc2	equ	0xFDE
 11788                           postdec2	equ	0xFDD
 11789                           plusw2	equ	0xFDB
 11790                           fsr2h	equ	0xFDA
 11791                           fsr2l	equ	0xFD9
 11792                           status	equ	0xFD8
 11793                           
 11794 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 11795 ;; Defined at:
 11796 ;;		line 660 in file "mcc_generated_files/i2c1.c"
 11797 ;; Parameters:    Size  Location     Type
 11798 ;;  ptrb            2   26[COMRAM] PTR struct .
 11799 ;;		 -> I2C1_MasterWrite@trBlock(5), 
 11800 ;;  pdata           2   28[COMRAM] PTR unsigned char 
 11801 ;;		 -> oledPutChar@bytes(9), Buff(2), LEDwriteDisplay@writeBuffer(20), LEDbegin@writeBuffer(3), 
 11802 ;;		 -> LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBuffer(2), 
 11803 ;;  length          1   30[COMRAM] unsigned char 
 11804 ;;  address         2   31[COMRAM] unsigned int 
 11805 ;; Auto vars:     Size  Location     Type
 11806 ;;		None
 11807 ;; Return value:  Size  Location     Type
 11808 ;;                  1    wreg      void 
 11809 ;; Registers used:
 11810 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11811 ;; Tracked objects:
 11812 ;;		On entry : 0/0
 11813 ;;		On exit  : 0/0
 11814 ;;		Unchanged: 0/0
 11815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11816 ;;      Params:         7       0       0       0       0       0       0
 11817 ;;      Locals:         0       0       0       0       0       0       0
 11818 ;;      Temps:          2       0       0       0       0       0       0
 11819 ;;      Totals:         9       0       0       0       0       0       0
 11820 ;;Total ram usage:        9 bytes
 11821 ;; Hardware stack levels used:    1
 11822 ;; Hardware stack levels required when called:    4
 11823 ;; This function calls:
 11824 ;;		Nothing
 11825 ;; This function is called by:
 11826 ;;		_I2C1_MasterWrite
 11827 ;; This function uses a non-reentrant model
 11828 ;;
 11829                           
 11830                           	psect	text58
 11831  002BE8                     __ptext58:
 11832                           	opt stack 0
 11833  002BE8                     _I2C1_MasterWriteTRBBuild:
 11834                           	opt stack 24
 11835                           
 11836                           ;i2c1.c: 666: ptrb->address = address << 1;
 11837                           
 11838                           ;incstack = 0
 11839  002BE8  C020  F022         	movff	I2C1_MasterWriteTRBBuild@address,??_I2C1_MasterWriteTRBBuild
 11840  002BEC  C021  F023         	movff	I2C1_MasterWriteTRBBuild@address+1,??_I2C1_MasterWriteTRBBuild+1
 11841  002BF0  90D8               	bcf	status,0,c
 11842  002BF2  3622               	rlcf	??_I2C1_MasterWriteTRBBuild,f,c
 11843  002BF4  3623               	rlcf	??_I2C1_MasterWriteTRBBuild+1,f,c
 11844  002BF6  C01B  FFD9         	movff	I2C1_MasterWriteTRBBuild@ptrb,fsr2l
 11845  002BFA  C01C  FFDA         	movff	I2C1_MasterWriteTRBBuild@ptrb+1,fsr2h
 11846  002BFE  C022  FFDE         	movff	??_I2C1_MasterWriteTRBBuild,postinc2
 11847  002C02  C023  FFDD         	movff	??_I2C1_MasterWriteTRBBuild+1,postdec2
 11848                           
 11849                           ;i2c1.c: 667: ptrb->length = length;
 11850  002C06  EE20 F002          	lfsr	2,2
 11851  002C0A  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
 11852  002C0C  26D9               	addwf	fsr2l,f,c
 11853  002C0E  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
 11854  002C10  22DA               	addwfc	fsr2h,f,c
 11855  002C12  C01F  FFDF         	movff	I2C1_MasterWriteTRBBuild@length,indf2
 11856                           
 11857                           ;i2c1.c: 668: ptrb->pbuffer = pdata;
 11858  002C16  EE20 F003          	lfsr	2,3
 11859  002C1A  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
 11860  002C1C  26D9               	addwf	fsr2l,f,c
 11861  002C1E  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
 11862  002C20  22DA               	addwfc	fsr2h,f,c
 11863  002C22  C01D  FFDE         	movff	I2C1_MasterWriteTRBBuild@pdata,postinc2
 11864  002C26  C01E  FFDD         	movff	I2C1_MasterWriteTRBBuild@pdata+1,postdec2
 11865  002C2A  0012               	return		;funcret
 11866  002C2C                     __end_of_I2C1_MasterWriteTRBBuild:
 11867                           	opt stack 0
 11868                           tosu	equ	0xFFF
 11869                           tosh	equ	0xFFE
 11870                           tosl	equ	0xFFD
 11871                           pclath	equ	0xFFA
 11872                           tblptru	equ	0xFF8
 11873                           tblptrh	equ	0xFF7
 11874                           tblptrl	equ	0xFF6
 11875                           tablat	equ	0xFF5
 11876                           prodh	equ	0xFF4
 11877                           prodl	equ	0xFF3
 11878                           intcon	equ	0xFF2
 11879                           intcon2	equ	0xFF1
 11880                           postinc0	equ	0xFEE
 11881                           wreg	equ	0xFE8
 11882                           indf2	equ	0xFDF
 11883                           postinc2	equ	0xFDE
 11884                           postdec2	equ	0xFDD
 11885                           plusw2	equ	0xFDB
 11886                           fsr2h	equ	0xFDA
 11887                           fsr2l	equ	0xFD9
 11888                           status	equ	0xFD8
 11889                           
 11890 ;; *************** function _I2C1_MasterTRBInsert *****************
 11891 ;; Defined at:
 11892 ;;		line 594 in file "mcc_generated_files/i2c1.c"
 11893 ;; Parameters:    Size  Location     Type
 11894 ;;  count           1    wreg     unsigned char 
 11895 ;;  ptrb_list       2   26[COMRAM] PTR struct .
 11896 ;;		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
 11897 ;;  pflag           2   28[COMRAM] PTR enum E8678
 11898 ;;		 -> oledPutChar@status(1), OLED_command@status(1), LEDwriteDisplay@status(1), LEDbegin@status(1), 
 11899 ;;		 -> LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
 11900 ;; Auto vars:     Size  Location     Type
 11901 ;;  count           1   31[COMRAM] unsigned char 
 11902 ;; Return value:  Size  Location     Type
 11903 ;;                  1    wreg      void 
 11904 ;; Registers used:
 11905 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11906 ;; Tracked objects:
 11907 ;;		On entry : 0/0
 11908 ;;		On exit  : 0/0
 11909 ;;		Unchanged: 0/0
 11910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11911 ;;      Params:         4       0       0       0       0       0       0
 11912 ;;      Locals:         1       0       0       0       0       0       0
 11913 ;;      Temps:          1       0       0       0       0       0       0
 11914 ;;      Totals:         6       0       0       0       0       0       0
 11915 ;;Total ram usage:        6 bytes
 11916 ;; Hardware stack levels used:    1
 11917 ;; Hardware stack levels required when called:    4
 11918 ;; This function calls:
 11919 ;;		Nothing
 11920 ;; This function is called by:
 11921 ;;		_I2C1_MasterWrite
 11922 ;;		_I2C1_MasterRead
 11923 ;; This function uses a non-reentrant model
 11924 ;;
 11925                           
 11926                           	psect	text59
 11927  002258                     __ptext59:
 11928                           	opt stack 0
 11929  002258                     _I2C1_MasterTRBInsert:
 11930                           	opt stack 24
 11931                           
 11932                           ;incstack = 0
 11933                           ;I2C1_MasterTRBInsert@count stored from wreg
 11934  002258  6E20               	movwf	I2C1_MasterTRBInsert@count,c
 11935                           
 11936                           ;i2c1.c: 601: if (i2c1_object.trStatus.s.full != 1)
 11937  00225A  0100               	movlb	0	; () banked
 11938  00225C  B1BC               	btfsc	(_i2c1_object+4)& (0+255),0,b
 11939  00225E  D046               	goto	l6044
 11940                           
 11941                           ; BSR set to: 0
 11942                           ;i2c1.c: 602: {
 11943                           ;i2c1.c: 603: *pflag = I2C1_MESSAGE_PENDING;
 11944  002260  C01D  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 11945  002264  C01E  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 11946  002268  0E02               	movlw	2
 11947  00226A  6EDF               	movwf	indf2,c
 11948                           
 11949                           ; BSR set to: 0
 11950                           ;i2c1.c: 605: i2c1_object.pTrTail->ptrb_list = ptrb_list;
 11951  00226C  0100               	movlb	0	; () banked
 11952  00226E  EE20 F001          	lfsr	2,1
 11953  002272  51B8               	movf	_i2c1_object& (0+255),w,b
 11954  002274  26D9               	addwf	fsr2l,f,c
 11955  002276  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 11956  002278  22DA               	addwfc	fsr2h,f,c
 11957  00227A  C01B  FFDE         	movff	I2C1_MasterTRBInsert@ptrb_list,postinc2
 11958  00227E  C01C  FFDD         	movff	I2C1_MasterTRBInsert@ptrb_list+1,postdec2
 11959                           
 11960                           ; BSR set to: 0
 11961                           ;i2c1.c: 606: i2c1_object.pTrTail->count = count;
 11962  002282  C0B8  FFD9         	movff	_i2c1_object,fsr2l
 11963  002286  C0B9  FFDA         	movff	_i2c1_object+1,fsr2h
 11964  00228A  C020  FFDF         	movff	I2C1_MasterTRBInsert@count,indf2
 11965                           
 11966                           ; BSR set to: 0
 11967                           ;i2c1.c: 607: i2c1_object.pTrTail->pTrFlag = pflag;
 11968  00228E  0100               	movlb	0	; () banked
 11969  002290  EE20 F003          	lfsr	2,3
 11970  002294  51B8               	movf	_i2c1_object& (0+255),w,b
 11971  002296  26D9               	addwf	fsr2l,f,c
 11972  002298  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 11973  00229A  22DA               	addwfc	fsr2h,f,c
 11974  00229C  C01D  FFDE         	movff	I2C1_MasterTRBInsert@pflag,postinc2
 11975  0022A0  C01E  FFDD         	movff	I2C1_MasterTRBInsert@pflag+1,postdec2
 11976                           
 11977                           ; BSR set to: 0
 11978                           ;i2c1.c: 608: i2c1_object.pTrTail++;
 11979  0022A4  0E05               	movlw	5
 11980  0022A6  0100               	movlb	0	; () banked
 11981  0022A8  27B8               	addwf	_i2c1_object& (0+255),f,b
 11982  0022AA  0E00               	movlw	0
 11983  0022AC  23B9               	addwfc	(_i2c1_object+1)& (0+255),f,b
 11984                           
 11985                           ; BSR set to: 0
 11986                           ;i2c1.c: 611: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
 11987  0022AE  0EF2               	movlw	low (_i2c1_tr_queue+5)
 11988  0022B0  0100               	movlb	0	; () banked
 11989  0022B2  19B8               	xorwf	_i2c1_object& (0+255),w,b
 11990  0022B4  E10B               	bnz	l6040
 11991  0022B6  0E00               	movlw	high (_i2c1_tr_queue+5)
 11992  0022B8  0100               	movlb	0	; () banked
 11993  0022BA  19B9               	xorwf	(_i2c1_object+1)& (0+255),w,b
 11994  0022BC  A4D8               	btfss	status,2,c
 11995  0022BE  D006               	goto	l6040
 11996                           
 11997                           ; BSR set to: 0
 11998                           ;i2c1.c: 612: {
 11999                           ;i2c1.c: 614: i2c1_object.pTrTail = i2c1_tr_queue;
 12000  0022C0  0EED               	movlw	low _i2c1_tr_queue
 12001  0022C2  0100               	movlb	0	; () banked
 12002  0022C4  6FB8               	movwf	_i2c1_object& (0+255),b
 12003  0022C6  0E00               	movlw	high _i2c1_tr_queue
 12004  0022C8  0100               	movlb	0	; () banked
 12005  0022CA  6FB9               	movwf	(_i2c1_object+1)& (0+255),b
 12006  0022CC                     l6040:
 12007                           
 12008                           ; BSR set to: 0
 12009                           ;i2c1.c: 615: }
 12010                           ;i2c1.c: 619: i2c1_object.trStatus.s.empty = 0;
 12011  0022CC  0100               	movlb	0	; () banked
 12012  0022CE  93BC               	bcf	(_i2c1_object+4)& (0+255),1,b
 12013                           
 12014                           ;i2c1.c: 622: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
 12015  0022D0  0100               	movlb	0	; () banked
 12016  0022D2  51B8               	movf	_i2c1_object& (0+255),w,b
 12017  0022D4  0100               	movlb	0	; () banked
 12018  0022D6  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 12019  0022D8  E10F               	bnz	l6046
 12020  0022DA  0100               	movlb	0	; () banked
 12021  0022DC  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 12022  0022DE  0100               	movlb	0	; () banked
 12023  0022E0  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 12024  0022E2  A4D8               	btfss	status,2,c
 12025  0022E4  D009               	goto	l6046
 12026                           
 12027                           ; BSR set to: 0
 12028                           ;i2c1.c: 623: {
 12029                           ;i2c1.c: 625: i2c1_object.trStatus.s.full = 1;
 12030  0022E6  0100               	movlb	0	; () banked
 12031  0022E8  81BC               	bsf	(_i2c1_object+4)& (0+255),0,b
 12032                           
 12033                           ; BSR set to: 0
 12034                           ;i2c1.c: 626: }
 12035                           ;i2c1.c: 628: }
 12036  0022EA  D006               	goto	l6046
 12037  0022EC                     l6044:
 12038                           
 12039                           ; BSR set to: 0
 12040                           ;i2c1.c: 629: else
 12041                           ;i2c1.c: 630: {
 12042                           ;i2c1.c: 631: *pflag = I2C1_MESSAGE_FAIL;
 12043  0022EC  C01D  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 12044  0022F0  C01E  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 12045  0022F4  0E01               	movlw	1
 12046  0022F6  6EDF               	movwf	indf2,c
 12047  0022F8                     l6046:
 12048                           
 12049                           ; BSR set to: 0
 12050                           ;i2c1.c: 632: }
 12051                           ;i2c1.c: 635: if (*pflag == I2C1_MESSAGE_PENDING)
 12052  0022F8  C01D  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 12053  0022FC  C01E  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 12054  002300  0E02               	movlw	2
 12055  002302  18DE               	xorwf	postinc2,w,c
 12056  002304  A4D8               	btfss	status,2,c
 12057  002306  0012               	return	
 12058  002308                     l6050:
 12059  002308  5038               	movf	_i2c1_state,w,c
 12060  00230A  A4D8               	btfss	status,2,c
 12061  00230C  D7FD               	goto	l6050
 12062                           
 12063                           ;i2c1.c: 638: {
 12064                           ;i2c1.c: 641: PIR1bits.SSP1IF = 1;
 12065  00230E  869E               	bsf	3998,3,c	;volatile
 12066  002310  0012               	return	
 12067  002312                     __end_of_I2C1_MasterTRBInsert:
 12068                           	opt stack 0
 12069                           tosu	equ	0xFFF
 12070                           tosh	equ	0xFFE
 12071                           tosl	equ	0xFFD
 12072                           pclath	equ	0xFFA
 12073                           tblptru	equ	0xFF8
 12074                           tblptrh	equ	0xFF7
 12075                           tblptrl	equ	0xFF6
 12076                           tablat	equ	0xFF5
 12077                           prodh	equ	0xFF4
 12078                           prodl	equ	0xFF3
 12079                           intcon	equ	0xFF2
 12080                           intcon2	equ	0xFF1
 12081                           postinc0	equ	0xFEE
 12082                           wreg	equ	0xFE8
 12083                           indf2	equ	0xFDF
 12084                           postinc2	equ	0xFDE
 12085                           postdec2	equ	0xFDD
 12086                           plusw2	equ	0xFDB
 12087                           fsr2h	equ	0xFDA
 12088                           fsr2l	equ	0xFD9
 12089                           status	equ	0xFD8
 12090                           
 12091 ;; *************** function _INTERRUPT_InterruptManager *****************
 12092 ;; Defined at:
 12093 ;;		line 75 in file "mcc_generated_files/interrupt_manager.c"
 12094 ;; Parameters:    Size  Location     Type
 12095 ;;		None
 12096 ;; Auto vars:     Size  Location     Type
 12097 ;;		None
 12098 ;; Return value:  Size  Location     Type
 12099 ;;                  1    wreg      void 
 12100 ;; Registers used:
 12101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 12102 ;; Tracked objects:
 12103 ;;		On entry : 0/0
 12104 ;;		On exit  : 0/0
 12105 ;;		Unchanged: 0/0
 12106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12107 ;;      Params:         0       0       0       0       0       0       0
 12108 ;;      Locals:         0       0       0       0       0       0       0
 12109 ;;      Temps:         14       0       0       0       0       0       0
 12110 ;;      Totals:        14       0       0       0       0       0       0
 12111 ;;Total ram usage:       14 bytes
 12112 ;; Hardware stack levels used:    1
 12113 ;; Hardware stack levels required when called:    3
 12114 ;; This function calls:
 12115 ;;		_ADC_ISR
 12116 ;;		_EUSART1_Receive_ISR
 12117 ;;		_EUSART1_Transmit_ISR
 12118 ;;		_I2C1_BusCollisionISR
 12119 ;;		_I2C1_ISR
 12120 ;;		_TMR0_ISR
 12121 ;;		_TMR2_ISR
 12122 ;; This function is called by:
 12123 ;;		Interrupt level 2
 12124 ;; This function uses a non-reentrant model
 12125 ;;
 12126                           
 12127                           	psect	intcode
 12128  000008                     __pintcode:
 12129                           	opt stack 0
 12130  000008                     _INTERRUPT_InterruptManager:
 12131                           	opt stack 21
 12132                           
 12133                           ;incstack = 0
 12134  000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12135  00000A  CFFA F00D          	movff	pclath,??_INTERRUPT_InterruptManager
 12136  00000E  CFFB F00E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 12137  000012  CFE9 F00F          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 12138  000016  CFEA F010          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 12139  00001A  CFE1 F011          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 12140  00001E  CFE2 F012          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 12141  000022  CFD9 F013          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 12142  000026  CFDA F014          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 12143  00002A  CFF3 F015          	movff	prodl,??_INTERRUPT_InterruptManager+8
 12144  00002E  CFF4 F016          	movff	prodh,??_INTERRUPT_InterruptManager+9
 12145  000032  CFF6 F017          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 12146  000036  CFF7 F018          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 12147  00003A  CFF8 F019          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 12148  00003E  CFF5 F01A          	movff	tablat,??_INTERRUPT_InterruptManager+13
 12149                           
 12150                           ;interrupt_manager.c: 78: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
 12151  000042  BA9D               	btfsc	3997,5,c	;volatile
 12152  000044  AA9E               	btfss	3998,5,c	;volatile
 12153  000046  D003               	goto	i2l318
 12154                           
 12155                           ;interrupt_manager.c: 79: {
 12156                           ;interrupt_manager.c: 80: EUSART1_Receive_ISR();
 12157  000048  ECA5  F017         	call	_EUSART1_Receive_ISR	;wreg free
 12158                           
 12159                           ;interrupt_manager.c: 81: }
 12160  00004C  D023               	goto	i2l332
 12161  00004E                     i2l318:
 12162                           
 12163                           ;interrupt_manager.c: 82: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
 12164  00004E  B89D               	btfsc	3997,4,c	;volatile
 12165  000050  A89E               	btfss	3998,4,c	;volatile
 12166  000052  D003               	goto	i2l320
 12167                           
 12168                           ;interrupt_manager.c: 83: {
 12169                           ;interrupt_manager.c: 84: EUSART1_Transmit_ISR();
 12170  000054  ECAA  F016         	call	_EUSART1_Transmit_ISR	;wreg free
 12171                           
 12172                           ;interrupt_manager.c: 85: }
 12173  000058  D01D               	goto	i2l332
 12174  00005A                     i2l320:
 12175                           
 12176                           ;interrupt_manager.c: 86: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 12177  00005A  BAF2               	btfsc	intcon,5,c	;volatile
 12178  00005C  A4F2               	btfss	intcon,2,c	;volatile
 12179  00005E  D003               	goto	i2l322
 12180                           
 12181                           ;interrupt_manager.c: 87: {
 12182                           ;interrupt_manager.c: 88: TMR0_ISR();
 12183  000060  EC00  F015         	call	_TMR0_ISR	;wreg free
 12184                           
 12185                           ;interrupt_manager.c: 89: }
 12186  000064  D017               	goto	i2l332
 12187  000066                     i2l322:
 12188                           
 12189                           ;interrupt_manager.c: 90: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
 12190  000066  B29D               	btfsc	3997,1,c	;volatile
 12191  000068  A29E               	btfss	3998,1,c	;volatile
 12192  00006A  D003               	goto	i2l324
 12193                           
 12194                           ;interrupt_manager.c: 91: {
 12195                           ;interrupt_manager.c: 92: TMR2_ISR();
 12196  00006C  EC1A  F018         	call	_TMR2_ISR	;wreg free
 12197                           
 12198                           ;interrupt_manager.c: 93: }
 12199  000070  D011               	goto	i2l332
 12200  000072                     i2l324:
 12201                           
 12202                           ;interrupt_manager.c: 94: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 12203  000072  BC9D               	btfsc	3997,6,c	;volatile
 12204  000074  AC9E               	btfss	3998,6,c	;volatile
 12205  000076  D003               	goto	i2l326
 12206                           
 12207                           ;interrupt_manager.c: 95: {
 12208                           ;interrupt_manager.c: 96: ADC_ISR();
 12209  000078  EC22  F018         	call	_ADC_ISR	;wreg free
 12210                           
 12211                           ;interrupt_manager.c: 97: }
 12212  00007C  D00B               	goto	i2l332
 12213  00007E                     i2l326:
 12214                           
 12215                           ;interrupt_manager.c: 98: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 12216  00007E  B69D               	btfsc	3997,3,c	;volatile
 12217  000080  A69E               	btfss	3998,3,c	;volatile
 12218  000082  D003               	goto	i2l328
 12219                           
 12220                           ;interrupt_manager.c: 99: {
 12221                           ;interrupt_manager.c: 100: I2C1_ISR();
 12222  000084  EC1C  F007         	call	_I2C1_ISR	;wreg free
 12223                           
 12224                           ;interrupt_manager.c: 101: }
 12225  000088  D005               	goto	i2l332
 12226  00008A                     i2l328:
 12227                           
 12228                           ;interrupt_manager.c: 102: else if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
 12229  00008A  B6A0               	btfsc	4000,3,c	;volatile
 12230  00008C  A6A1               	btfss	4001,3,c	;volatile
 12231  00008E  D002               	goto	i2l332
 12232                           
 12233                           ;interrupt_manager.c: 103: {
 12234                           ;interrupt_manager.c: 104: I2C1_BusCollisionISR();
 12235  000090  EC26  F018         	call	_I2C1_BusCollisionISR	;wreg free
 12236  000094                     i2l332:
 12237  000094  C01A  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 12238  000098  C019  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 12239  00009C  C018  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 12240  0000A0  C017  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 12241  0000A4  C016  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 12242  0000A8  C015  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 12243  0000AC  C014  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 12244  0000B0  C013  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 12245  0000B4  C012  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 12246  0000B8  C011  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 12247  0000BC  C010  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 12248  0000C0  C00F  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 12249  0000C4  C00E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 12250  0000C8  C00D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 12251  0000CC  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12252  0000CE  0011               	retfie		f
 12253  0000D0                     __end_of_INTERRUPT_InterruptManager:
 12254                           	opt stack 0
 12255                           tosu	equ	0xFFF
 12256                           tosh	equ	0xFFE
 12257                           tosl	equ	0xFFD
 12258                           pclatu	equ	0xFFB
 12259                           pclath	equ	0xFFA
 12260                           tblptru	equ	0xFF8
 12261                           tblptrh	equ	0xFF7
 12262                           tblptrl	equ	0xFF6
 12263                           tablat	equ	0xFF5
 12264                           prodh	equ	0xFF4
 12265                           prodl	equ	0xFF3
 12266                           intcon	equ	0xFF2
 12267                           intcon2	equ	0xFF1
 12268                           postinc0	equ	0xFEE
 12269                           fsr0h	equ	0xFEA
 12270                           fsr0l	equ	0xFE9
 12271                           wreg	equ	0xFE8
 12272                           fsr1h	equ	0xFE2
 12273                           fsr1l	equ	0xFE1
 12274                           indf2	equ	0xFDF
 12275                           postinc2	equ	0xFDE
 12276                           postdec2	equ	0xFDD
 12277                           plusw2	equ	0xFDB
 12278                           fsr2h	equ	0xFDA
 12279                           fsr2l	equ	0xFD9
 12280                           status	equ	0xFD8
 12281                           
 12282 ;; *************** function _TMR2_ISR *****************
 12283 ;; Defined at:
 12284 ;;		line 120 in file "mcc_generated_files/tmr2.c"
 12285 ;; Parameters:    Size  Location     Type
 12286 ;;		None
 12287 ;; Auto vars:     Size  Location     Type
 12288 ;;		None
 12289 ;; Return value:  Size  Location     Type
 12290 ;;                  2  294[None  ] int 
 12291 ;; Registers used:
 12292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 12293 ;; Tracked objects:
 12294 ;;		On entry : 0/0
 12295 ;;		On exit  : 0/0
 12296 ;;		Unchanged: 0/0
 12297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12298 ;;      Params:         0       0       0       0       0       0       0
 12299 ;;      Locals:         0       0       0       0       0       0       0
 12300 ;;      Temps:          0       0       0       0       0       0       0
 12301 ;;      Totals:         0       0       0       0       0       0       0
 12302 ;;Total ram usage:        0 bytes
 12303 ;; Hardware stack levels used:    1
 12304 ;; Hardware stack levels required when called:    2
 12305 ;; This function calls:
 12306 ;;		_TMR2_CallBack
 12307 ;; This function is called by:
 12308 ;;		_INTERRUPT_InterruptManager
 12309 ;; This function uses a non-reentrant model
 12310 ;;
 12311                           
 12312                           	psect	text61
 12313  003034                     __ptext61:
 12314                           	opt stack 0
 12315  003034                     _TMR2_ISR:
 12316                           	opt stack 21
 12317                           
 12318                           ;tmr2.c: 124: PIR1bits.TMR2IF = 0;
 12319                           
 12320                           ;incstack = 0
 12321  003034  929E               	bcf	3998,1,c	;volatile
 12322                           
 12323                           ;tmr2.c: 128: TMR2_CallBack();
 12324  003036  EC56  F008         	call	_TMR2_CallBack	;wreg free
 12325  00303A  0012               	return		;funcret
 12326  00303C                     __end_of_TMR2_ISR:
 12327                           	opt stack 0
 12328                           tosu	equ	0xFFF
 12329                           tosh	equ	0xFFE
 12330                           tosl	equ	0xFFD
 12331                           pclatu	equ	0xFFB
 12332                           pclath	equ	0xFFA
 12333                           tblptru	equ	0xFF8
 12334                           tblptrh	equ	0xFF7
 12335                           tblptrl	equ	0xFF6
 12336                           tablat	equ	0xFF5
 12337                           prodh	equ	0xFF4
 12338                           prodl	equ	0xFF3
 12339                           intcon	equ	0xFF2
 12340                           intcon2	equ	0xFF1
 12341                           postinc0	equ	0xFEE
 12342                           fsr0h	equ	0xFEA
 12343                           fsr0l	equ	0xFE9
 12344                           wreg	equ	0xFE8
 12345                           fsr1h	equ	0xFE2
 12346                           fsr1l	equ	0xFE1
 12347                           indf2	equ	0xFDF
 12348                           postinc2	equ	0xFDE
 12349                           postdec2	equ	0xFDD
 12350                           plusw2	equ	0xFDB
 12351                           fsr2h	equ	0xFDA
 12352                           fsr2l	equ	0xFD9
 12353                           status	equ	0xFD8
 12354                           
 12355 ;; *************** function _TMR2_CallBack *****************
 12356 ;; Defined at:
 12357 ;;		line 131 in file "mcc_generated_files/tmr2.c"
 12358 ;; Parameters:    Size  Location     Type
 12359 ;;		None
 12360 ;; Auto vars:     Size  Location     Type
 12361 ;;  i               2    2[COMRAM] int 
 12362 ;; Return value:  Size  Location     Type
 12363 ;;                  1    wreg      void 
 12364 ;; Registers used:
 12365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 12366 ;; Tracked objects:
 12367 ;;		On entry : 0/0
 12368 ;;		On exit  : 0/0
 12369 ;;		Unchanged: 0/0
 12370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12371 ;;      Params:         0       0       0       0       0       0       0
 12372 ;;      Locals:         2       0       0       0       0       0       0
 12373 ;;      Temps:          2       0       0       0       0       0       0
 12374 ;;      Totals:         4       0       0       0       0       0       0
 12375 ;;Total ram usage:        4 bytes
 12376 ;; Hardware stack levels used:    1
 12377 ;; Hardware stack levels required when called:    1
 12378 ;; This function calls:
 12379 ;;		Absolute function
 12380 ;;		_TMR2_DefaultInterruptHandler
 12381 ;; This function is called by:
 12382 ;;		_TMR2_ISR
 12383 ;; This function uses a non-reentrant model
 12384 ;;
 12385                           
 12386                           	psect	text62
 12387  0010AC                     __ptext62:
 12388                           	opt stack 0
 12389  0010AC                     _TMR2_CallBack:
 12390                           	opt stack 21
 12391                           
 12392                           ;tmr2.c: 133: int i = 0;
 12393                           
 12394                           ;incstack = 0
 12395  0010AC  0E00               	movlw	0
 12396  0010AE  6E04               	movwf	TMR2_CallBack@i+1,c
 12397  0010B0  0E00               	movlw	0
 12398  0010B2  6E03               	movwf	TMR2_CallBack@i,c
 12399                           
 12400                           ;tmr2.c: 134: while (i <= 5) {
 12401  0010B4  D0C3               	goto	i2l452
 12402  0010B6                     i2l4680:
 12403                           
 12404                           ;tmr2.c: 136: if (LEDNUM_ENAB[i] == 1) {
 12405  0010B6  90D8               	bcf	status,0,c
 12406  0010B8  3403               	rlcf	TMR2_CallBack@i,w,c
 12407  0010BA  6ED9               	movwf	fsr2l,c
 12408  0010BC  3404               	rlcf	TMR2_CallBack@i+1,w,c
 12409  0010BE  6EDA               	movwf	fsr2h,c
 12410  0010C0  0E98               	movlw	low _LEDNUM_ENAB
 12411  0010C2  26D9               	addwf	fsr2l,f,c
 12412  0010C4  0E00               	movlw	high _LEDNUM_ENAB
 12413  0010C6  22DA               	addwfc	fsr2h,f,c
 12414  0010C8  04DE               	decf	postinc2,w,c
 12415  0010CA  10DE               	iorwf	postinc2,w,c
 12416  0010CC  B4D8               	btfsc	status,2,c
 12417  0010CE  D098               	goto	i2l4698
 12418  0010D0  D0AF               	goto	i2l4700
 12419  0010D2                     i2l459:
 12420  0010D2  B68A               	btfsc	3978,3,c	;volatile
 12421  0010D4  D002               	goto	i2u396_40
 12422  0010D6  868A               	bsf	3978,3,c	;volatile
 12423  0010D8  D03B               	goto	i2l4688
 12424  0010DA                     i2u396_40:
 12425  0010DA  968A               	bcf	3978,3,c	;volatile
 12426                           
 12427                           ;tmr2.c: 142: break;
 12428  0010DC  D039               	goto	i2l4688
 12429  0010DE                     i2l463:
 12430  0010DE  BA8A               	btfsc	3978,5,c	;volatile
 12431  0010E0  D002               	goto	i2u398_40
 12432  0010E2  8A8A               	bsf	3978,5,c	;volatile
 12433  0010E4  D035               	goto	i2l4688
 12434  0010E6                     i2u398_40:
 12435  0010E6  9A8A               	bcf	3978,5,c	;volatile
 12436                           
 12437                           ;tmr2.c: 145: break;
 12438  0010E8  D033               	goto	i2l4688
 12439  0010EA                     i2l466:
 12440  0010EA  B28C               	btfsc	3980,1,c	;volatile
 12441  0010EC  D002               	goto	i2u400_40
 12442  0010EE  828C               	bsf	3980,1,c	;volatile
 12443  0010F0  D02F               	goto	i2l4688
 12444  0010F2                     i2u400_40:
 12445  0010F2  928C               	bcf	3980,1,c	;volatile
 12446                           
 12447                           ;tmr2.c: 148: break;
 12448  0010F4  D02D               	goto	i2l4688
 12449  0010F6                     i2l469:
 12450  0010F6  B48D               	btfsc	3981,2,c	;volatile
 12451  0010F8  D002               	goto	i2u402_40
 12452  0010FA  848D               	bsf	3981,2,c	;volatile
 12453  0010FC  D029               	goto	i2l4688
 12454  0010FE                     i2u402_40:
 12455  0010FE  948D               	bcf	3981,2,c	;volatile
 12456                           
 12457                           ;tmr2.c: 151: break;
 12458  001100  D027               	goto	i2l4688
 12459  001102                     i2l472:
 12460  001102  B28D               	btfsc	3981,1,c	;volatile
 12461  001104  D002               	goto	i2u404_40
 12462  001106  828D               	bsf	3981,1,c	;volatile
 12463  001108  D023               	goto	i2l4688
 12464  00110A                     i2u404_40:
 12465  00110A  928D               	bcf	3981,1,c	;volatile
 12466                           
 12467                           ;tmr2.c: 154: break;
 12468  00110C  D021               	goto	i2l4688
 12469  00110E                     i2l475:
 12470  00110E  B08D               	btfsc	3981,0,c	;volatile
 12471  001110  D002               	goto	i2u406_40
 12472  001112  808D               	bsf	3981,0,c	;volatile
 12473  001114  D01D               	goto	i2l4688
 12474  001116                     i2u406_40:
 12475  001116  908D               	bcf	3981,0,c	;volatile
 12476                           
 12477                           ;tmr2.c: 158: }
 12478                           
 12479                           ;tmr2.c: 157: break;
 12480  001118  D01B               	goto	i2l4688
 12481  00111A                     i2l4686:
 12482  00111A  C003  F001         	movff	TMR2_CallBack@i,??_TMR2_CallBack
 12483  00111E  C004  F002         	movff	TMR2_CallBack@i+1,??_TMR2_CallBack+1
 12484                           
 12485                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12486                           ; Switch size 1, requested type "space"
 12487                           ; Number of cases is 1, Range of values is 0 to 0
 12488                           ; switch strategies available:
 12489                           ; Name         Instructions Cycles
 12490                           ; simple_byte            4     3 (average)
 12491                           ;	Chosen strategy is simple_byte
 12492  001122  5002               	movf	??_TMR2_CallBack+1,w,c
 12493  001124  0A00               	xorlw	0	; case 0
 12494  001126  A4D8               	btfss	status,2,c
 12495  001128  D013               	goto	i2l4688
 12496                           
 12497                           ; Switch size 1, requested type "space"
 12498                           ; Number of cases is 6, Range of values is 0 to 5
 12499                           ; switch strategies available:
 12500                           ; Name         Instructions Cycles
 12501                           ; simple_byte           19    10 (average)
 12502                           ;	Chosen strategy is simple_byte
 12503  00112A  5001               	movf	??_TMR2_CallBack,w,c
 12504  00112C  0A00               	xorlw	0	; case 0
 12505  00112E  B4D8               	btfsc	status,2,c
 12506  001130  D7D0               	goto	i2l459
 12507  001132  0A01               	xorlw	1	; case 1
 12508  001134  B4D8               	btfsc	status,2,c
 12509  001136  D7D3               	goto	i2l463
 12510  001138  0A03               	xorlw	3	; case 2
 12511  00113A  B4D8               	btfsc	status,2,c
 12512  00113C  D7D6               	goto	i2l466
 12513  00113E  0A01               	xorlw	1	; case 3
 12514  001140  B4D8               	btfsc	status,2,c
 12515  001142  D7D9               	goto	i2l469
 12516  001144  0A07               	xorlw	7	; case 4
 12517  001146  B4D8               	btfsc	status,2,c
 12518  001148  D7DC               	goto	i2l472
 12519  00114A  0A01               	xorlw	1	; case 5
 12520  00114C  B4D8               	btfsc	status,2,c
 12521  00114E  D7DF               	goto	i2l475
 12522  001150                     i2l4688:
 12523                           
 12524                           ;tmr2.c: 159: LEDState[i] = 1;
 12525  001150  90D8               	bcf	status,0,c
 12526  001152  3403               	rlcf	TMR2_CallBack@i,w,c
 12527  001154  6ED9               	movwf	fsr2l,c
 12528  001156  3404               	rlcf	TMR2_CallBack@i+1,w,c
 12529  001158  6EDA               	movwf	fsr2h,c
 12530  00115A  0EA4               	movlw	low _LEDState
 12531  00115C  26D9               	addwf	fsr2l,f,c
 12532  00115E  0E00               	movlw	high _LEDState
 12533  001160  22DA               	addwfc	fsr2h,f,c
 12534  001162  0E01               	movlw	1
 12535  001164  D049               	goto	L4
 12536  001166                     i2l481:
 12537  001166  B68A               	btfsc	3978,3,c	;volatile
 12538  001168  D002               	goto	i2u408_40
 12539  00116A  868A               	bsf	3978,3,c	;volatile
 12540  00116C  D03B               	goto	i2l4694
 12541  00116E                     i2u408_40:
 12542  00116E  968A               	bcf	3978,3,c	;volatile
 12543                           
 12544                           ;tmr2.c: 165: break;
 12545  001170  D039               	goto	i2l4694
 12546  001172                     i2l485:
 12547  001172  BA8A               	btfsc	3978,5,c	;volatile
 12548  001174  D002               	goto	i2u410_40
 12549  001176  8A8A               	bsf	3978,5,c	;volatile
 12550  001178  D035               	goto	i2l4694
 12551  00117A                     i2u410_40:
 12552  00117A  9A8A               	bcf	3978,5,c	;volatile
 12553                           
 12554                           ;tmr2.c: 168: break;
 12555  00117C  D033               	goto	i2l4694
 12556  00117E                     i2l488:
 12557  00117E  B28C               	btfsc	3980,1,c	;volatile
 12558  001180  D002               	goto	i2u412_40
 12559  001182  828C               	bsf	3980,1,c	;volatile
 12560  001184  D02F               	goto	i2l4694
 12561  001186                     i2u412_40:
 12562  001186  928C               	bcf	3980,1,c	;volatile
 12563                           
 12564                           ;tmr2.c: 171: break;
 12565  001188  D02D               	goto	i2l4694
 12566  00118A                     i2l491:
 12567  00118A  B48D               	btfsc	3981,2,c	;volatile
 12568  00118C  D002               	goto	i2u414_40
 12569  00118E  848D               	bsf	3981,2,c	;volatile
 12570  001190  D029               	goto	i2l4694
 12571  001192                     i2u414_40:
 12572  001192  948D               	bcf	3981,2,c	;volatile
 12573                           
 12574                           ;tmr2.c: 174: break;
 12575  001194  D027               	goto	i2l4694
 12576  001196                     i2l494:
 12577  001196  B28D               	btfsc	3981,1,c	;volatile
 12578  001198  D002               	goto	i2u416_40
 12579  00119A  828D               	bsf	3981,1,c	;volatile
 12580  00119C  D023               	goto	i2l4694
 12581  00119E                     i2u416_40:
 12582  00119E  928D               	bcf	3981,1,c	;volatile
 12583                           
 12584                           ;tmr2.c: 177: break;
 12585  0011A0  D021               	goto	i2l4694
 12586  0011A2                     i2l497:
 12587  0011A2  B08D               	btfsc	3981,0,c	;volatile
 12588  0011A4  D002               	goto	i2u418_40
 12589  0011A6  808D               	bsf	3981,0,c	;volatile
 12590  0011A8  D01D               	goto	i2l4694
 12591  0011AA                     i2u418_40:
 12592  0011AA  908D               	bcf	3981,0,c	;volatile
 12593                           
 12594                           ;tmr2.c: 181: }
 12595                           
 12596                           ;tmr2.c: 180: break;
 12597  0011AC  D01B               	goto	i2l4694
 12598  0011AE                     i2l4692:
 12599  0011AE  C003  F001         	movff	TMR2_CallBack@i,??_TMR2_CallBack
 12600  0011B2  C004  F002         	movff	TMR2_CallBack@i+1,??_TMR2_CallBack+1
 12601                           
 12602                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12603                           ; Switch size 1, requested type "space"
 12604                           ; Number of cases is 1, Range of values is 0 to 0
 12605                           ; switch strategies available:
 12606                           ; Name         Instructions Cycles
 12607                           ; simple_byte            4     3 (average)
 12608                           ;	Chosen strategy is simple_byte
 12609  0011B6  5002               	movf	??_TMR2_CallBack+1,w,c
 12610  0011B8  0A00               	xorlw	0	; case 0
 12611  0011BA  A4D8               	btfss	status,2,c
 12612  0011BC  D013               	goto	i2l4694
 12613                           
 12614                           ; Switch size 1, requested type "space"
 12615                           ; Number of cases is 6, Range of values is 0 to 5
 12616                           ; switch strategies available:
 12617                           ; Name         Instructions Cycles
 12618                           ; simple_byte           19    10 (average)
 12619                           ;	Chosen strategy is simple_byte
 12620  0011BE  5001               	movf	??_TMR2_CallBack,w,c
 12621  0011C0  0A00               	xorlw	0	; case 0
 12622  0011C2  B4D8               	btfsc	status,2,c
 12623  0011C4  D7D0               	goto	i2l481
 12624  0011C6  0A01               	xorlw	1	; case 1
 12625  0011C8  B4D8               	btfsc	status,2,c
 12626  0011CA  D7D3               	goto	i2l485
 12627  0011CC  0A03               	xorlw	3	; case 2
 12628  0011CE  B4D8               	btfsc	status,2,c
 12629  0011D0  D7D6               	goto	i2l488
 12630  0011D2  0A01               	xorlw	1	; case 3
 12631  0011D4  B4D8               	btfsc	status,2,c
 12632  0011D6  D7D9               	goto	i2l491
 12633  0011D8  0A07               	xorlw	7	; case 4
 12634  0011DA  B4D8               	btfsc	status,2,c
 12635  0011DC  D7DC               	goto	i2l494
 12636  0011DE  0A01               	xorlw	1	; case 5
 12637  0011E0  B4D8               	btfsc	status,2,c
 12638  0011E2  D7DF               	goto	i2l497
 12639  0011E4                     i2l4694:
 12640                           
 12641                           ;tmr2.c: 182: LEDState[i] = 0;
 12642  0011E4  90D8               	bcf	status,0,c
 12643  0011E6  3403               	rlcf	TMR2_CallBack@i,w,c
 12644  0011E8  6ED9               	movwf	fsr2l,c
 12645  0011EA  3404               	rlcf	TMR2_CallBack@i+1,w,c
 12646  0011EC  6EDA               	movwf	fsr2h,c
 12647  0011EE  0EA4               	movlw	low _LEDState
 12648  0011F0  26D9               	addwf	fsr2l,f,c
 12649  0011F2  0E00               	movlw	high _LEDState
 12650  0011F4  22DA               	addwfc	fsr2h,f,c
 12651  0011F6  0E00               	movlw	0
 12652  0011F8                     L4:
 12653  0011F8  6EDE               	movwf	postinc2,c
 12654  0011FA  0E00               	movlw	0
 12655  0011FC  6EDD               	movwf	postdec2,c
 12656                           
 12657                           ;tmr2.c: 184: }
 12658                           
 12659                           ;tmr2.c: 183: break;
 12660  0011FE  D018               	goto	i2l4700
 12661  001200                     i2l4698:
 12662  001200  90D8               	bcf	status,0,c
 12663  001202  3403               	rlcf	TMR2_CallBack@i,w,c
 12664  001204  6ED9               	movwf	fsr2l,c
 12665  001206  3404               	rlcf	TMR2_CallBack@i+1,w,c
 12666  001208  6EDA               	movwf	fsr2h,c
 12667  00120A  0EA4               	movlw	low _LEDState
 12668  00120C  26D9               	addwf	fsr2l,f,c
 12669  00120E  0E00               	movlw	high _LEDState
 12670  001210  22DA               	addwfc	fsr2h,f,c
 12671  001212  CFDE F001          	movff	postinc2,??_TMR2_CallBack
 12672  001216  CFDD F002          	movff	postdec2,??_TMR2_CallBack+1
 12673                           
 12674                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12675                           ; Switch size 1, requested type "space"
 12676                           ; Number of cases is 1, Range of values is 0 to 0
 12677                           ; switch strategies available:
 12678                           ; Name         Instructions Cycles
 12679                           ; simple_byte            4     3 (average)
 12680                           ;	Chosen strategy is simple_byte
 12681  00121A  5002               	movf	??_TMR2_CallBack+1,w,c
 12682  00121C  0A00               	xorlw	0	; case 0
 12683  00121E  A4D8               	btfss	status,2,c
 12684  001220  D007               	goto	i2l4700
 12685                           
 12686                           ; Switch size 1, requested type "space"
 12687                           ; Number of cases is 2, Range of values is 0 to 1
 12688                           ; switch strategies available:
 12689                           ; Name         Instructions Cycles
 12690                           ; simple_byte            7     4 (average)
 12691                           ;	Chosen strategy is simple_byte
 12692  001222  5001               	movf	??_TMR2_CallBack,w,c
 12693  001224  0A00               	xorlw	0	; case 0
 12694  001226  B4D8               	btfsc	status,2,c
 12695  001228  D778               	goto	i2l4686
 12696  00122A  0A01               	xorlw	1	; case 1
 12697  00122C  B4D8               	btfsc	status,2,c
 12698  00122E  D7BF               	goto	i2l4692
 12699  001230                     i2l4700:
 12700                           
 12701                           ;tmr2.c: 185: }
 12702                           ;tmr2.c: 186: i = i + 1;
 12703  001230  0E01               	movlw	1
 12704  001232  2403               	addwf	TMR2_CallBack@i,w,c
 12705  001234  6E03               	movwf	TMR2_CallBack@i,c
 12706  001236  0E00               	movlw	0
 12707  001238  2004               	addwfc	TMR2_CallBack@i+1,w,c
 12708  00123A  6E04               	movwf	TMR2_CallBack@i+1,c
 12709  00123C                     i2l452:
 12710  00123C  BE04               	btfsc	TMR2_CallBack@i+1,7,c
 12711  00123E  D73B               	goto	i2l4680
 12712  001240  5004               	movf	TMR2_CallBack@i+1,w,c
 12713  001242  E104               	bnz	i2l4702
 12714  001244  0E06               	movlw	6
 12715  001246  5C03               	subwf	TMR2_CallBack@i,w,c
 12716  001248  A0D8               	btfss	status,0,c
 12717  00124A  D735               	goto	i2l4680
 12718  00124C                     i2l4702:
 12719                           
 12720                           ;tmr2.c: 187: }
 12721                           ;tmr2.c: 191: if(TMR2_InterruptHandler)
 12722  00124C  0100               	movlb	0	; () banked
 12723  00124E  51FE               	movf	_TMR2_InterruptHandler& (0+255),w,b
 12724  001250  0100               	movlb	0	; () banked
 12725  001252  11FF               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 12726  001254  B4D8               	btfsc	status,2,c
 12727  001256  0012               	return	
 12728                           
 12729                           ; BSR set to: 0
 12730                           ;tmr2.c: 192: {
 12731                           ;tmr2.c: 193: TMR2_InterruptHandler();
 12732  001258  D801               	call	i2u422_48
 12733  00125A  0012               	return	
 12734  00125C                     i2u422_48:
 12735  00125C  0005               	push	
 12736  00125E  0100               	movlb	0	; () banked
 12737  001260  6EFA               	movwf	pclath,c
 12738  001262  51FE               	movf	_TMR2_InterruptHandler& (0+255),w,b
 12739  001264  6EFD               	movwf	tosl,c
 12740  001266  51FF               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 12741  001268  6EFE               	movwf	tosh,c
 12742  00126A  50F8               	movf	tblptru,w,c
 12743  00126C  6EFF               	movwf	tosu,c
 12744  00126E  50FA               	movf	pclath,w,c
 12745  001270  0012               	return		;indir
 12746  001272                     __end_of_TMR2_CallBack:
 12747                           	opt stack 0
 12748                           tosu	equ	0xFFF
 12749                           tosh	equ	0xFFE
 12750                           tosl	equ	0xFFD
 12751                           pclatu	equ	0xFFB
 12752                           pclath	equ	0xFFA
 12753                           tblptru	equ	0xFF8
 12754                           tblptrh	equ	0xFF7
 12755                           tblptrl	equ	0xFF6
 12756                           tablat	equ	0xFF5
 12757                           prodh	equ	0xFF4
 12758                           prodl	equ	0xFF3
 12759                           intcon	equ	0xFF2
 12760                           intcon2	equ	0xFF1
 12761                           postinc0	equ	0xFEE
 12762                           fsr0h	equ	0xFEA
 12763                           fsr0l	equ	0xFE9
 12764                           wreg	equ	0xFE8
 12765                           fsr1h	equ	0xFE2
 12766                           fsr1l	equ	0xFE1
 12767                           indf2	equ	0xFDF
 12768                           postinc2	equ	0xFDE
 12769                           postdec2	equ	0xFDD
 12770                           plusw2	equ	0xFDB
 12771                           fsr2h	equ	0xFDA
 12772                           fsr2l	equ	0xFD9
 12773                           status	equ	0xFD8
 12774                           
 12775 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 12776 ;; Defined at:
 12777 ;;		line 297 in file "mcc_generated_files/tmr2.c"
 12778 ;; Parameters:    Size  Location     Type
 12779 ;;		None
 12780 ;; Auto vars:     Size  Location     Type
 12781 ;;		None
 12782 ;; Return value:  Size  Location     Type
 12783 ;;                  1    wreg      void 
 12784 ;; Registers used:
 12785 ;;		None
 12786 ;; Tracked objects:
 12787 ;;		On entry : 0/0
 12788 ;;		On exit  : 0/0
 12789 ;;		Unchanged: 0/0
 12790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12791 ;;      Params:         0       0       0       0       0       0       0
 12792 ;;      Locals:         0       0       0       0       0       0       0
 12793 ;;      Temps:          0       0       0       0       0       0       0
 12794 ;;      Totals:         0       0       0       0       0       0       0
 12795 ;;Total ram usage:        0 bytes
 12796 ;; Hardware stack levels used:    1
 12797 ;; This function calls:
 12798 ;;		Nothing
 12799 ;; This function is called by:
 12800 ;;		_TMR2_Initialize
 12801 ;;		_TMR2_CallBack
 12802 ;; This function uses a non-reentrant model
 12803 ;;
 12804                           
 12805                           	psect	text63
 12806  003048                     __ptext63:
 12807                           	opt stack 0
 12808  003048                     _TMR2_DefaultInterruptHandler:
 12809                           	opt stack 21
 12810                           
 12811                           ;incstack = 0
 12812  003048  0012               	return		;funcret
 12813  00304A                     __end_of_TMR2_DefaultInterruptHandler:
 12814                           	opt stack 0
 12815                           tosu	equ	0xFFF
 12816                           tosh	equ	0xFFE
 12817                           tosl	equ	0xFFD
 12818                           pclatu	equ	0xFFB
 12819                           pclath	equ	0xFFA
 12820                           tblptru	equ	0xFF8
 12821                           tblptrh	equ	0xFF7
 12822                           tblptrl	equ	0xFF6
 12823                           tablat	equ	0xFF5
 12824                           prodh	equ	0xFF4
 12825                           prodl	equ	0xFF3
 12826                           intcon	equ	0xFF2
 12827                           intcon2	equ	0xFF1
 12828                           postinc0	equ	0xFEE
 12829                           fsr0h	equ	0xFEA
 12830                           fsr0l	equ	0xFE9
 12831                           wreg	equ	0xFE8
 12832                           fsr1h	equ	0xFE2
 12833                           fsr1l	equ	0xFE1
 12834                           indf2	equ	0xFDF
 12835                           postinc2	equ	0xFDE
 12836                           postdec2	equ	0xFDD
 12837                           plusw2	equ	0xFDB
 12838                           fsr2h	equ	0xFDA
 12839                           fsr2l	equ	0xFD9
 12840                           status	equ	0xFD8
 12841                           
 12842 ;; *************** function _TMR0_ISR *****************
 12843 ;; Defined at:
 12844 ;;		line 81 in file "mcc_generated_files/tmr0.c"
 12845 ;; Parameters:    Size  Location     Type
 12846 ;;		None
 12847 ;; Auto vars:     Size  Location     Type
 12848 ;;  x               2    4[COMRAM] int 
 12849 ;; Return value:  Size  Location     Type
 12850 ;;                  1    wreg      void 
 12851 ;; Registers used:
 12852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12853 ;; Tracked objects:
 12854 ;;		On entry : 0/0
 12855 ;;		On exit  : 0/0
 12856 ;;		Unchanged: 0/0
 12857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12858 ;;      Params:         0       0       0       0       0       0       0
 12859 ;;      Locals:         2       0       0       0       0       0       0
 12860 ;;      Temps:          0       0       0       0       0       0       0
 12861 ;;      Totals:         2       0       0       0       0       0       0
 12862 ;;Total ram usage:        2 bytes
 12863 ;; Hardware stack levels used:    1
 12864 ;; Hardware stack levels required when called:    1
 12865 ;; This function calls:
 12866 ;;		_ReadButtonState
 12867 ;;		_TMR0_CallBack
 12868 ;; This function is called by:
 12869 ;;		_INTERRUPT_InterruptManager
 12870 ;; This function uses a non-reentrant model
 12871 ;;
 12872                           
 12873                           	psect	text64
 12874  002A00                     __ptext64:
 12875                           	opt stack 0
 12876  002A00                     _TMR0_ISR:
 12877                           	opt stack 22
 12878                           
 12879                           ;tmr0.c: 82: static volatile uint16_t CountCallBack = 0;
 12880                           ;tmr0.c: 85: TMR0H = timer0ReloadVal16bit >> 8;
 12881                           
 12882                           ;incstack = 0
 12883  002A00  5043               	movf	_timer0ReloadVal16bit+1,w,c	;volatile
 12884  002A02  6ED7               	movwf	4055,c	;volatile
 12885                           
 12886                           ;tmr0.c: 86: TMR0L = (uint8_t) timer0ReloadVal16bit;
 12887  002A04  C042  FFD6         	movff	_timer0ReloadVal16bit,4054	;volatile
 12888                           
 12889                           ;tmr0.c: 88: for (int x = 0; x < 8; x++) {
 12890  002A08  0E00               	movlw	0
 12891  002A0A  6E06               	movwf	TMR0_ISR@x+1,c
 12892  002A0C  0E00               	movlw	0
 12893  002A0E  6E05               	movwf	TMR0_ISR@x,c
 12894  002A10                     i2l5254:
 12895  002A10  BE06               	btfsc	TMR0_ISR@x+1,7,c
 12896  002A12  D006               	goto	i2l5258
 12897  002A14  5006               	movf	TMR0_ISR@x+1,w,c
 12898  002A16  E10D               	bnz	i2l5264
 12899  002A18  0E08               	movlw	8
 12900  002A1A  5C05               	subwf	TMR0_ISR@x,w,c
 12901  002A1C  B0D8               	btfsc	status,0,c
 12902  002A1E  D009               	goto	i2l5264
 12903  002A20                     i2l5258:
 12904                           
 12905                           ;tmr0.c: 89: ReadButtonState(x);
 12906  002A20  C005  F001         	movff	TMR0_ISR@x,ReadButtonState@btnnum
 12907  002A24  C006  F002         	movff	TMR0_ISR@x+1,ReadButtonState@btnnum+1
 12908  002A28  EC1B  F00E         	call	_ReadButtonState	;wreg free
 12909  002A2C  4A05               	infsnz	TMR0_ISR@x,f,c
 12910  002A2E  2A06               	incf	TMR0_ISR@x+1,f,c
 12911  002A30  D7EF               	goto	i2l5254
 12912  002A32                     i2l5264:
 12913                           
 12914                           ;tmr0.c: 90: }
 12915                           ;tmr0.c: 91: time++;
 12916  002A32  0100               	movlb	0	; () banked
 12917  002A34  4BDD               	infsnz	_time& (0+255),f,b	;volatile
 12918  002A36  2BDE               	incf	(_time+1)& (0+255),f,b	;volatile
 12919                           
 12920                           ; BSR set to: 0
 12921                           ;tmr0.c: 93: if (++CountCallBack >= 5) {
 12922  002A38  0100               	movlb	0	; () banked
 12923  002A3A  4BC1               	infsnz	TMR0_ISR@CountCallBack& (0+255),f,b	;volatile
 12924  002A3C  2BC2               	incf	(TMR0_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 12925  002A3E  0100               	movlb	0	; () banked
 12926  002A40  51C2               	movf	(TMR0_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 12927  002A42  E105               	bnz	i2u538_40
 12928  002A44  0E05               	movlw	5
 12929  002A46  0100               	movlb	0	; () banked
 12930  002A48  5DC1               	subwf	TMR0_ISR@CountCallBack& (0+255),w,b	;volatile
 12931  002A4A  A0D8               	btfss	status,0,c
 12932  002A4C  D007               	goto	i2l5272
 12933  002A4E                     i2u538_40:
 12934                           
 12935                           ; BSR set to: 0
 12936                           ;tmr0.c: 95: TMR0_CallBack();
 12937  002A4E  EC25  F018         	call	_TMR0_CallBack	;wreg free
 12938                           
 12939                           ;tmr0.c: 98: CountCallBack = 0;
 12940  002A52  0E00               	movlw	0
 12941  002A54  0100               	movlb	0	; () banked
 12942  002A56  6FC2               	movwf	(TMR0_ISR@CountCallBack+1)& (0+255),b	;volatile
 12943  002A58  0E00               	movlw	0
 12944  002A5A  6FC1               	movwf	TMR0_ISR@CountCallBack& (0+255),b	;volatile
 12945  002A5C                     i2l5272:
 12946                           
 12947                           ; BSR set to: 0
 12948                           ;tmr0.c: 99: }
 12949                           ;tmr0.c: 101: INTCONbits.TMR0IF = 0;
 12950  002A5C  94F2               	bcf	intcon,2,c	;volatile
 12951                           
 12952                           ; BSR set to: 0
 12953  002A5E  0012               	return		;funcret
 12954  002A60                     __end_of_TMR0_ISR:
 12955                           	opt stack 0
 12956                           tosu	equ	0xFFF
 12957                           tosh	equ	0xFFE
 12958                           tosl	equ	0xFFD
 12959                           pclatu	equ	0xFFB
 12960                           pclath	equ	0xFFA
 12961                           tblptru	equ	0xFF8
 12962                           tblptrh	equ	0xFF7
 12963                           tblptrl	equ	0xFF6
 12964                           tablat	equ	0xFF5
 12965                           prodh	equ	0xFF4
 12966                           prodl	equ	0xFF3
 12967                           intcon	equ	0xFF2
 12968                           intcon2	equ	0xFF1
 12969                           postinc0	equ	0xFEE
 12970                           fsr0h	equ	0xFEA
 12971                           fsr0l	equ	0xFE9
 12972                           wreg	equ	0xFE8
 12973                           fsr1h	equ	0xFE2
 12974                           fsr1l	equ	0xFE1
 12975                           indf2	equ	0xFDF
 12976                           postinc2	equ	0xFDE
 12977                           postdec2	equ	0xFDD
 12978                           plusw2	equ	0xFDB
 12979                           fsr2h	equ	0xFDA
 12980                           fsr2l	equ	0xFD9
 12981                           status	equ	0xFD8
 12982                           
 12983 ;; *************** function _TMR0_CallBack *****************
 12984 ;; Defined at:
 12985 ;;		line 104 in file "mcc_generated_files/tmr0.c"
 12986 ;; Parameters:    Size  Location     Type
 12987 ;;		None
 12988 ;; Auto vars:     Size  Location     Type
 12989 ;;		None
 12990 ;; Return value:  Size  Location     Type
 12991 ;;                  1    wreg      void 
 12992 ;; Registers used:
 12993 ;;		None
 12994 ;; Tracked objects:
 12995 ;;		On entry : 0/0
 12996 ;;		On exit  : 0/0
 12997 ;;		Unchanged: 0/0
 12998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12999 ;;      Params:         0       0       0       0       0       0       0
 13000 ;;      Locals:         0       0       0       0       0       0       0
 13001 ;;      Temps:          0       0       0       0       0       0       0
 13002 ;;      Totals:         0       0       0       0       0       0       0
 13003 ;;Total ram usage:        0 bytes
 13004 ;; Hardware stack levels used:    1
 13005 ;; This function calls:
 13006 ;;		Nothing
 13007 ;; This function is called by:
 13008 ;;		_TMR0_ISR
 13009 ;; This function uses a non-reentrant model
 13010 ;;
 13011                           
 13012                           	psect	text65
 13013  00304A                     __ptext65:
 13014                           	opt stack 0
 13015  00304A                     _TMR0_CallBack:
 13016                           	opt stack 22
 13017                           
 13018                           ; BSR set to: 0
 13019                           ;incstack = 0
 13020  00304A  0012               	return		;funcret
 13021  00304C                     __end_of_TMR0_CallBack:
 13022                           	opt stack 0
 13023                           tosu	equ	0xFFF
 13024                           tosh	equ	0xFFE
 13025                           tosl	equ	0xFFD
 13026                           pclatu	equ	0xFFB
 13027                           pclath	equ	0xFFA
 13028                           tblptru	equ	0xFF8
 13029                           tblptrh	equ	0xFF7
 13030                           tblptrl	equ	0xFF6
 13031                           tablat	equ	0xFF5
 13032                           prodh	equ	0xFF4
 13033                           prodl	equ	0xFF3
 13034                           intcon	equ	0xFF2
 13035                           intcon2	equ	0xFF1
 13036                           postinc0	equ	0xFEE
 13037                           fsr0h	equ	0xFEA
 13038                           fsr0l	equ	0xFE9
 13039                           wreg	equ	0xFE8
 13040                           fsr1h	equ	0xFE2
 13041                           fsr1l	equ	0xFE1
 13042                           indf2	equ	0xFDF
 13043                           postinc2	equ	0xFDE
 13044                           postdec2	equ	0xFDD
 13045                           plusw2	equ	0xFDB
 13046                           fsr2h	equ	0xFDA
 13047                           fsr2l	equ	0xFD9
 13048                           status	equ	0xFD8
 13049                           
 13050 ;; *************** function _ReadButtonState *****************
 13051 ;; Defined at:
 13052 ;;		line 154 in file "IO.c"
 13053 ;; Parameters:    Size  Location     Type
 13054 ;;  btnnum          2    0[COMRAM] int 
 13055 ;; Auto vars:     Size  Location     Type
 13056 ;;		None
 13057 ;; Return value:  Size  Location     Type
 13058 ;;                  1    wreg      void 
 13059 ;; Registers used:
 13060 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13061 ;; Tracked objects:
 13062 ;;		On entry : 0/0
 13063 ;;		On exit  : 0/0
 13064 ;;		Unchanged: 0/0
 13065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13066 ;;      Params:         2       0       0       0       0       0       0
 13067 ;;      Locals:         0       0       0       0       0       0       0
 13068 ;;      Temps:          2       0       0       0       0       0       0
 13069 ;;      Totals:         4       0       0       0       0       0       0
 13070 ;;Total ram usage:        4 bytes
 13071 ;; Hardware stack levels used:    1
 13072 ;; This function calls:
 13073 ;;		Nothing
 13074 ;; This function is called by:
 13075 ;;		_TMR0_ISR
 13076 ;; This function uses a non-reentrant model
 13077 ;;
 13078                           
 13079                           	psect	text66
 13080  001C36                     __ptext66:
 13081                           	opt stack 0
 13082  001C36                     _ReadButtonState:
 13083                           	opt stack 22
 13084                           
 13085                           ;IO.c: 155: switch (btnnum) {
 13086                           
 13087                           ;incstack = 0
 13088  001C36  D068               	goto	i2l4626
 13089  001C38                     i2l4608:
 13090                           
 13091                           ;IO.c: 157: butnarray[btnnum] = PORTDbits.RD5;
 13092  001C38  0EB0               	movlw	low _butnarray
 13093  001C3A  2401               	addwf	ReadButtonState@btnnum,w,c
 13094  001C3C  6ED9               	movwf	fsr2l,c
 13095  001C3E  0E00               	movlw	high _butnarray
 13096  001C40  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13097  001C42  6EDA               	movwf	fsr2h,c
 13098  001C44  AA83               	btfss	3971,5,c	;volatile
 13099  001C46  D002               	goto	i2u387_40
 13100  001C48  0E01               	movlw	1
 13101  001C4A  D001               	goto	i2u387_46
 13102  001C4C                     i2u387_40:
 13103  001C4C  0E00               	movlw	0
 13104  001C4E                     i2u387_46:
 13105  001C4E  6EDF               	movwf	indf2,c
 13106                           
 13107                           ;IO.c: 158: break;
 13108  001C50  0012               	return	
 13109  001C52                     i2l4610:
 13110                           
 13111                           ;IO.c: 160: butnarray[btnnum] = PORTBbits.RB0;
 13112  001C52  0EB0               	movlw	low _butnarray
 13113  001C54  2401               	addwf	ReadButtonState@btnnum,w,c
 13114  001C56  6ED9               	movwf	fsr2l,c
 13115  001C58  0E00               	movlw	high _butnarray
 13116  001C5A  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13117  001C5C  6EDA               	movwf	fsr2h,c
 13118  001C5E  A081               	btfss	3969,0,c	;volatile
 13119  001C60  D002               	goto	i2u388_40
 13120  001C62  0E01               	movlw	1
 13121  001C64  D001               	goto	i2u388_46
 13122  001C66                     i2u388_40:
 13123  001C66  0E00               	movlw	0
 13124  001C68                     i2u388_46:
 13125  001C68  6EDF               	movwf	indf2,c
 13126                           
 13127                           ;IO.c: 161: break;
 13128  001C6A  0012               	return	
 13129  001C6C                     i2l4612:
 13130                           
 13131                           ;IO.c: 163: butnarray[btnnum] = PORTBbits.RB1;
 13132  001C6C  0EB0               	movlw	low _butnarray
 13133  001C6E  2401               	addwf	ReadButtonState@btnnum,w,c
 13134  001C70  6ED9               	movwf	fsr2l,c
 13135  001C72  0E00               	movlw	high _butnarray
 13136  001C74  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13137  001C76  6EDA               	movwf	fsr2h,c
 13138  001C78  A281               	btfss	3969,1,c	;volatile
 13139  001C7A  D002               	goto	i2u389_40
 13140  001C7C  0E01               	movlw	1
 13141  001C7E  D001               	goto	i2u389_46
 13142  001C80                     i2u389_40:
 13143  001C80  0E00               	movlw	0
 13144  001C82                     i2u389_46:
 13145  001C82  6EDF               	movwf	indf2,c
 13146                           
 13147                           ;IO.c: 164: break;
 13148  001C84  0012               	return	
 13149  001C86                     i2l4614:
 13150                           
 13151                           ;IO.c: 166: butnarray[btnnum] = PORTBbits.RB2;
 13152  001C86  0EB0               	movlw	low _butnarray
 13153  001C88  2401               	addwf	ReadButtonState@btnnum,w,c
 13154  001C8A  6ED9               	movwf	fsr2l,c
 13155  001C8C  0E00               	movlw	high _butnarray
 13156  001C8E  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13157  001C90  6EDA               	movwf	fsr2h,c
 13158  001C92  A481               	btfss	3969,2,c	;volatile
 13159  001C94  D002               	goto	i2u390_40
 13160  001C96  0E01               	movlw	1
 13161  001C98  D001               	goto	i2u390_46
 13162  001C9A                     i2u390_40:
 13163  001C9A  0E00               	movlw	0
 13164  001C9C                     i2u390_46:
 13165  001C9C  6EDF               	movwf	indf2,c
 13166                           
 13167                           ;IO.c: 167: break;
 13168  001C9E  0012               	return	
 13169  001CA0                     i2l4616:
 13170                           
 13171                           ;IO.c: 169: butnarray[btnnum] = PORTBbits.RB4;
 13172  001CA0  0EB0               	movlw	low _butnarray
 13173  001CA2  2401               	addwf	ReadButtonState@btnnum,w,c
 13174  001CA4  6ED9               	movwf	fsr2l,c
 13175  001CA6  0E00               	movlw	high _butnarray
 13176  001CA8  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13177  001CAA  6EDA               	movwf	fsr2h,c
 13178  001CAC  A881               	btfss	3969,4,c	;volatile
 13179  001CAE  D002               	goto	i2u391_40
 13180  001CB0  0E01               	movlw	1
 13181  001CB2  D001               	goto	i2u391_46
 13182  001CB4                     i2u391_40:
 13183  001CB4  0E00               	movlw	0
 13184  001CB6                     i2u391_46:
 13185  001CB6  6EDF               	movwf	indf2,c
 13186                           
 13187                           ;IO.c: 170: break;
 13188  001CB8  0012               	return	
 13189  001CBA                     i2l4618:
 13190                           
 13191                           ;IO.c: 172: butnarray[btnnum] = PORTAbits.RA0;
 13192  001CBA  0EB0               	movlw	low _butnarray
 13193  001CBC  2401               	addwf	ReadButtonState@btnnum,w,c
 13194  001CBE  6ED9               	movwf	fsr2l,c
 13195  001CC0  0E00               	movlw	high _butnarray
 13196  001CC2  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13197  001CC4  6EDA               	movwf	fsr2h,c
 13198  001CC6  A080               	btfss	3968,0,c	;volatile
 13199  001CC8  D002               	goto	i2u392_40
 13200  001CCA  0E01               	movlw	1
 13201  001CCC  D001               	goto	i2u392_46
 13202  001CCE                     i2u392_40:
 13203  001CCE  0E00               	movlw	0
 13204  001CD0                     i2u392_46:
 13205  001CD0  6EDF               	movwf	indf2,c
 13206                           
 13207                           ;IO.c: 173: break;
 13208  001CD2  0012               	return	
 13209  001CD4                     i2l4620:
 13210                           
 13211                           ;IO.c: 175: butnarray[btnnum] = PORTAbits.RA1;
 13212  001CD4  0EB0               	movlw	low _butnarray
 13213  001CD6  2401               	addwf	ReadButtonState@btnnum,w,c
 13214  001CD8  6ED9               	movwf	fsr2l,c
 13215  001CDA  0E00               	movlw	high _butnarray
 13216  001CDC  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13217  001CDE  6EDA               	movwf	fsr2h,c
 13218  001CE0  A280               	btfss	3968,1,c	;volatile
 13219  001CE2  D002               	goto	i2u393_40
 13220  001CE4  0E01               	movlw	1
 13221  001CE6  D001               	goto	i2u393_46
 13222  001CE8                     i2u393_40:
 13223  001CE8  0E00               	movlw	0
 13224  001CEA                     i2u393_46:
 13225  001CEA  6EDF               	movwf	indf2,c
 13226                           
 13227                           ;IO.c: 176: break;
 13228  001CEC  0012               	return	
 13229  001CEE                     i2l4622:
 13230                           
 13231                           ;IO.c: 178: butnarray[btnnum] = PORTAbits.RA2;
 13232  001CEE  0EB0               	movlw	low _butnarray
 13233  001CF0  2401               	addwf	ReadButtonState@btnnum,w,c
 13234  001CF2  6ED9               	movwf	fsr2l,c
 13235  001CF4  0E00               	movlw	high _butnarray
 13236  001CF6  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13237  001CF8  6EDA               	movwf	fsr2h,c
 13238  001CFA  A480               	btfss	3968,2,c	;volatile
 13239  001CFC  D002               	goto	i2u394_40
 13240  001CFE  0E01               	movlw	1
 13241  001D00  D001               	goto	i2u394_46
 13242  001D02                     i2u394_40:
 13243  001D02  0E00               	movlw	0
 13244  001D04                     i2u394_46:
 13245  001D04  6EDF               	movwf	indf2,c
 13246                           
 13247                           ;IO.c: 181: }
 13248                           
 13249                           ;IO.c: 179: break;
 13250  001D06  0012               	return	
 13251  001D08                     i2l4626:
 13252  001D08  C001  F003         	movff	ReadButtonState@btnnum,??_ReadButtonState
 13253  001D0C  C002  F004         	movff	ReadButtonState@btnnum+1,??_ReadButtonState+1
 13254                           
 13255                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13256                           ; Switch size 1, requested type "space"
 13257                           ; Number of cases is 1, Range of values is 0 to 0
 13258                           ; switch strategies available:
 13259                           ; Name         Instructions Cycles
 13260                           ; simple_byte            4     3 (average)
 13261                           ;	Chosen strategy is simple_byte
 13262  001D10  5004               	movf	??_ReadButtonState+1,w,c
 13263  001D12  0A00               	xorlw	0	; case 0
 13264  001D14  A4D8               	btfss	status,2,c
 13265  001D16  0012               	return	
 13266                           
 13267                           ; Switch size 1, requested type "space"
 13268                           ; Number of cases is 8, Range of values is 0 to 7
 13269                           ; switch strategies available:
 13270                           ; Name         Instructions Cycles
 13271                           ; simple_byte           25    13 (average)
 13272                           ;	Chosen strategy is simple_byte
 13273  001D18  5003               	movf	??_ReadButtonState,w,c
 13274  001D1A  0A00               	xorlw	0	; case 0
 13275  001D1C  B4D8               	btfsc	status,2,c
 13276  001D1E  D78C               	goto	i2l4608
 13277  001D20  0A01               	xorlw	1	; case 1
 13278  001D22  B4D8               	btfsc	status,2,c
 13279  001D24  D796               	goto	i2l4610
 13280  001D26  0A03               	xorlw	3	; case 2
 13281  001D28  B4D8               	btfsc	status,2,c
 13282  001D2A  D7A0               	goto	i2l4612
 13283  001D2C  0A01               	xorlw	1	; case 3
 13284  001D2E  B4D8               	btfsc	status,2,c
 13285  001D30  D7AA               	goto	i2l4614
 13286  001D32  0A07               	xorlw	7	; case 4
 13287  001D34  B4D8               	btfsc	status,2,c
 13288  001D36  D7B4               	goto	i2l4616
 13289  001D38  0A01               	xorlw	1	; case 5
 13290  001D3A  B4D8               	btfsc	status,2,c
 13291  001D3C  D7BE               	goto	i2l4618
 13292  001D3E  0A03               	xorlw	3	; case 6
 13293  001D40  B4D8               	btfsc	status,2,c
 13294  001D42  D7C8               	goto	i2l4620
 13295  001D44  0A01               	xorlw	1	; case 7
 13296  001D46  A4D8               	btfss	status,2,c
 13297  001D48  0012               	return	
 13298  001D4A  D7D1               	goto	i2l4622
 13299  001D4C                     __end_of_ReadButtonState:
 13300                           	opt stack 0
 13301                           tosu	equ	0xFFF
 13302                           tosh	equ	0xFFE
 13303                           tosl	equ	0xFFD
 13304                           pclatu	equ	0xFFB
 13305                           pclath	equ	0xFFA
 13306                           tblptru	equ	0xFF8
 13307                           tblptrh	equ	0xFF7
 13308                           tblptrl	equ	0xFF6
 13309                           tablat	equ	0xFF5
 13310                           prodh	equ	0xFF4
 13311                           prodl	equ	0xFF3
 13312                           intcon	equ	0xFF2
 13313                           intcon2	equ	0xFF1
 13314                           postinc0	equ	0xFEE
 13315                           fsr0h	equ	0xFEA
 13316                           fsr0l	equ	0xFE9
 13317                           wreg	equ	0xFE8
 13318                           fsr1h	equ	0xFE2
 13319                           fsr1l	equ	0xFE1
 13320                           indf2	equ	0xFDF
 13321                           postinc2	equ	0xFDE
 13322                           postdec2	equ	0xFDD
 13323                           plusw2	equ	0xFDB
 13324                           fsr2h	equ	0xFDA
 13325                           fsr2l	equ	0xFD9
 13326                           status	equ	0xFD8
 13327                           
 13328 ;; *************** function _I2C1_ISR *****************
 13329 ;; Defined at:
 13330 ;;		line 186 in file "mcc_generated_files/i2c1.c"
 13331 ;; Parameters:    Size  Location     Type
 13332 ;;		None
 13333 ;; Auto vars:     Size  Location     Type
 13334 ;;		None
 13335 ;; Return value:  Size  Location     Type
 13336 ;;                  1    wreg      void 
 13337 ;; Registers used:
 13338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13339 ;; Tracked objects:
 13340 ;;		On entry : 0/0
 13341 ;;		On exit  : 0/0
 13342 ;;		Unchanged: 0/0
 13343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13344 ;;      Params:         0       0       0       0       0       0       0
 13345 ;;      Locals:         0       0       0       0       0       0       0
 13346 ;;      Temps:          2       0       0       0       0       0       0
 13347 ;;      Totals:         2       0       0       0       0       0       0
 13348 ;;Total ram usage:        2 bytes
 13349 ;; Hardware stack levels used:    1
 13350 ;; Hardware stack levels required when called:    1
 13351 ;; This function calls:
 13352 ;;		_I2C1_FunctionComplete
 13353 ;;		_I2C1_Stop
 13354 ;; This function is called by:
 13355 ;;		_INTERRUPT_InterruptManager
 13356 ;; This function uses a non-reentrant model
 13357 ;;
 13358                           
 13359                           	psect	text67
 13360  000E38                     __ptext67:
 13361                           	opt stack 0
 13362  000E38                     _I2C1_ISR:
 13363                           	opt stack 22
 13364                           
 13365                           ;i2c1.c: 189: static uint8_t *pi2c_buf_ptr;
 13366                           ;i2c1.c: 190: static uint16_t i2c_address = 0;
 13367                           ;i2c1.c: 191: static uint8_t i2c_bytes_left = 0;
 13368                           ;i2c1.c: 192: static uint8_t i2c_10bit_address_restart = 0;
 13369                           ;i2c1.c: 194: PIR1bits.SSP1IF = 0;
 13370                           
 13371                           ;incstack = 0
 13372  000E38  969E               	bcf	3998,3,c	;volatile
 13373                           
 13374                           ;i2c1.c: 198: if(SSP1CON1bits.WCOL)
 13375  000E3A  AEC6               	btfss	4038,7,c	;volatile
 13376  000E3C  D114               	goto	i2l7130
 13377                           
 13378                           ;i2c1.c: 199: {
 13379                           ;i2c1.c: 201: SSP1CON1bits.WCOL = 0;
 13380  000E3E  9EC6               	bcf	4038,7,c	;volatile
 13381                           
 13382                           ;i2c1.c: 202: i2c1_state = S_MASTER_IDLE;
 13383  000E40  0E00               	movlw	0
 13384  000E42  6E38               	movwf	_i2c1_state,c
 13385                           
 13386                           ;i2c1.c: 203: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
 13387  000E44  0100               	movlb	0	; () banked
 13388  000E46  EE20 F003          	lfsr	2,3
 13389  000E4A  51D1               	movf	_p_i2c1_current& (0+255),w,b
 13390  000E4C  26D9               	addwf	fsr2l,f,c
 13391  000E4E  51D2               	movf	(_p_i2c1_current+1)& (0+255),w,b
 13392  000E50  22DA               	addwfc	fsr2h,f,c
 13393  000E52  CFDE F004          	movff	postinc2,??_I2C1_ISR
 13394  000E56  CFDD F005          	movff	postdec2,??_I2C1_ISR+1
 13395  000E5A  C004  FFD9         	movff	??_I2C1_ISR,fsr2l
 13396  000E5E  C005  FFDA         	movff	??_I2C1_ISR+1,fsr2h
 13397  000E62  0E01               	movlw	1
 13398  000E64  6EDF               	movwf	indf2,c
 13399                           
 13400                           ; BSR set to: 0
 13401                           ;i2c1.c: 206: p_i2c1_current = (0);
 13402  000E66  0E00               	movlw	0
 13403  000E68  0100               	movlb	0	; () banked
 13404  000E6A  6FD1               	movwf	_p_i2c1_current& (0+255),b
 13405  000E6C  0E00               	movlw	0
 13406  000E6E  0100               	movlb	0	; () banked
 13407  000E70  6FD2               	movwf	(_p_i2c1_current+1)& (0+255),b
 13408                           
 13409                           ; BSR set to: 0
 13410                           ;i2c1.c: 208: return;
 13411  000E72  0012               	return	
 13412  000E74                     i2l60:
 13413                           
 13414                           ;i2c1.c: 216: if(i2c1_object.trStatus.s.empty != 1)
 13415  000E74  0100               	movlb	0	; () banked
 13416  000E76  B3BC               	btfsc	(_i2c1_object+4)& (0+255),1,b
 13417  000E78  0012               	return	
 13418                           
 13419                           ; BSR set to: 0
 13420                           ;i2c1.c: 217: {
 13421                           ;i2c1.c: 219: p_i2c1_current = i2c1_object.pTrHead;
 13422  000E7A  C0BA  F0D1         	movff	_i2c1_object+2,_p_i2c1_current
 13423  000E7E  C0BB  F0D2         	movff	_i2c1_object+3,_p_i2c1_current+1
 13424                           
 13425                           ; BSR set to: 0
 13426                           ;i2c1.c: 220: i2c1_trb_count = i2c1_object.pTrHead->count;
 13427  000E82  C0BA  FFD9         	movff	_i2c1_object+2,fsr2l
 13428  000E86  C0BB  FFDA         	movff	_i2c1_object+3,fsr2h
 13429  000E8A  50DF               	movf	indf2,w,c
 13430  000E8C  6E39               	movwf	_i2c1_trb_count,c
 13431                           
 13432                           ; BSR set to: 0
 13433                           ;i2c1.c: 221: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
 13434  000E8E  0100               	movlb	0	; () banked
 13435  000E90  EE20 F001          	lfsr	2,1
 13436  000E94  51BA               	movf	(_i2c1_object+2)& (0+255),w,b
 13437  000E96  26D9               	addwf	fsr2l,f,c
 13438  000E98  51BB               	movf	(_i2c1_object+3)& (0+255),w,b
 13439  000E9A  22DA               	addwfc	fsr2h,f,c
 13440  000E9C  CFDE F0D3          	movff	postinc2,_p_i2c1_trb_current
 13441  000EA0  CFDD F0D4          	movff	postdec2,_p_i2c1_trb_current+1
 13442                           
 13443                           ; BSR set to: 0
 13444                           ;i2c1.c: 223: i2c1_object.pTrHead++;
 13445  000EA4  0E05               	movlw	5
 13446  000EA6  0100               	movlb	0	; () banked
 13447  000EA8  27BA               	addwf	(_i2c1_object+2)& (0+255),f,b
 13448  000EAA  0E00               	movlw	0
 13449  000EAC  23BB               	addwfc	(_i2c1_object+3)& (0+255),f,b
 13450                           
 13451                           ; BSR set to: 0
 13452                           ;i2c1.c: 226: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
 13453  000EAE  0EF2               	movlw	low (_i2c1_tr_queue+5)
 13454  000EB0  0100               	movlb	0	; () banked
 13455  000EB2  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 13456  000EB4  E10B               	bnz	i2l7022
 13457  000EB6  0E00               	movlw	high (_i2c1_tr_queue+5)
 13458  000EB8  0100               	movlb	0	; () banked
 13459  000EBA  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 13460  000EBC  A4D8               	btfss	status,2,c
 13461  000EBE  D006               	goto	i2l7022
 13462                           
 13463                           ; BSR set to: 0
 13464                           ;i2c1.c: 227: {
 13465                           ;i2c1.c: 229: i2c1_object.pTrHead = i2c1_tr_queue;
 13466  000EC0  0EED               	movlw	low _i2c1_tr_queue
 13467  000EC2  0100               	movlb	0	; () banked
 13468  000EC4  6FBA               	movwf	(_i2c1_object+2)& (0+255),b
 13469  000EC6  0E00               	movlw	high _i2c1_tr_queue
 13470  000EC8  0100               	movlb	0	; () banked
 13471  000ECA  6FBB               	movwf	(_i2c1_object+3)& (0+255),b
 13472  000ECC                     i2l7022:
 13473                           
 13474                           ; BSR set to: 0
 13475                           ;i2c1.c: 230: }
 13476                           ;i2c1.c: 234: i2c1_object.trStatus.s.full = 0;
 13477  000ECC  0100               	movlb	0	; () banked
 13478  000ECE  91BC               	bcf	(_i2c1_object+4)& (0+255),0,b
 13479                           
 13480                           ;i2c1.c: 237: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
 13481  000ED0  0100               	movlb	0	; () banked
 13482  000ED2  51B8               	movf	_i2c1_object& (0+255),w,b
 13483  000ED4  0100               	movlb	0	; () banked
 13484  000ED6  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 13485  000ED8  E108               	bnz	i2l63
 13486  000EDA  0100               	movlb	0	; () banked
 13487  000EDC  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 13488  000EDE  0100               	movlb	0	; () banked
 13489  000EE0  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 13490  000EE2  A4D8               	btfss	status,2,c
 13491  000EE4  D002               	goto	i2l63
 13492                           
 13493                           ; BSR set to: 0
 13494                           ;i2c1.c: 238: {
 13495                           ;i2c1.c: 240: i2c1_object.trStatus.s.empty = 1;
 13496  000EE6  0100               	movlb	0	; () banked
 13497  000EE8  83BC               	bsf	(_i2c1_object+4)& (0+255),1,b
 13498  000EEA                     i2l63:
 13499                           
 13500                           ; BSR set to: 0
 13501                           ;i2c1.c: 241: }
 13502                           ;i2c1.c: 244: SSP1CON2bits.SEN = 1;
 13503  000EEA  80C5               	bsf	4037,0,c	;volatile
 13504                           
 13505                           ; BSR set to: 0
 13506                           ;i2c1.c: 247: i2c1_state = S_MASTER_SEND_ADDR;
 13507  000EEC  0E02               	movlw	2
 13508  000EEE  6E38               	movwf	_i2c1_state,c
 13509                           
 13510                           ; BSR set to: 0
 13511                           ;i2c1.c: 248: }
 13512                           ;i2c1.c: 250: break;
 13513  000EF0  0012               	return	
 13514  000EF2                     i2l65:
 13515                           
 13516                           ;i2c1.c: 257: SSP1CON2bits.RSEN = 1;
 13517  000EF2  82C5               	bsf	4037,1,c	;volatile
 13518                           
 13519                           ;i2c1.c: 260: i2c1_state = S_MASTER_SEND_ADDR;
 13520  000EF4  0E02               	movlw	2
 13521  000EF6  6E38               	movwf	_i2c1_state,c
 13522                           
 13523                           ;i2c1.c: 262: break;
 13524  000EF8  0012               	return	
 13525  000EFA                     i2l66:
 13526                           
 13527                           ;i2c1.c: 266: if(SSP1CON2bits.ACKSTAT)
 13528  000EFA  ACC5               	btfss	4037,6,c	;volatile
 13529  000EFC  D006               	goto	i2l7034
 13530                           
 13531                           ;i2c1.c: 267: {
 13532                           ;i2c1.c: 268: i2c1_object.i2cErrors++;
 13533  000EFE  0100               	movlb	0	; () banked
 13534  000F00  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 13535                           
 13536                           ; BSR set to: 0
 13537                           ;i2c1.c: 269: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 13538  000F02  0E04               	movlw	4
 13539  000F04  EC16  F016         	call	_I2C1_Stop
 13540                           
 13541                           ;i2c1.c: 270: }
 13542  000F08  0012               	return	
 13543  000F0A                     i2l7034:
 13544                           
 13545                           ;i2c1.c: 271: else
 13546                           ;i2c1.c: 272: {
 13547                           ;i2c1.c: 274: SSP1BUF = (i2c_address >> 1) & 0x00FF;
 13548  000F0A  90D8               	bcf	status,0,c
 13549  000F0C  3041               	rrcf	I2C1_ISR@i2c_address+1,w,c
 13550  000F0E  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
 13551  000F10  3040               	rrcf	I2C1_ISR@i2c_address,w,c
 13552  000F12  6E04               	movwf	??_I2C1_ISR& (0+255),c
 13553  000F14  5004               	movf	??_I2C1_ISR,w,c
 13554  000F16  6EC9               	movwf	4041,c	;volatile
 13555                           
 13556                           ;i2c1.c: 277: if(i2c_address & 0x01)
 13557  000F18  A040               	btfss	I2C1_ISR@i2c_address,0,c
 13558  000F1A  D003               	goto	i2l7040
 13559                           
 13560                           ;i2c1.c: 278: {
 13561                           ;i2c1.c: 281: i2c1_state = S_MASTER_10BIT_RESTART;
 13562  000F1C  0E0B               	movlw	11
 13563  000F1E  6E38               	movwf	_i2c1_state,c
 13564                           
 13565                           ;i2c1.c: 282: }
 13566  000F20  0012               	return	
 13567  000F22                     i2l7040:
 13568                           
 13569                           ;i2c1.c: 283: else
 13570                           ;i2c1.c: 284: {
 13571                           ;i2c1.c: 286: i2c1_state = S_MASTER_SEND_DATA;
 13572  000F22  0E03               	movlw	3
 13573  000F24  6E38               	movwf	_i2c1_state,c
 13574                           
 13575                           ;i2c1.c: 287: }
 13576                           ;i2c1.c: 288: }
 13577                           ;i2c1.c: 290: break;
 13578  000F26  0012               	return	
 13579  000F28                     i2l71:
 13580                           
 13581                           ;i2c1.c: 294: if(SSP1CON2bits.ACKSTAT)
 13582  000F28  ACC5               	btfss	4037,6,c	;volatile
 13583  000F2A  D006               	goto	i2l72
 13584                           
 13585                           ;i2c1.c: 295: {
 13586                           ;i2c1.c: 296: i2c1_object.i2cErrors++;
 13587  000F2C  0100               	movlb	0	; () banked
 13588  000F2E  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 13589                           
 13590                           ; BSR set to: 0
 13591                           ;i2c1.c: 297: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 13592  000F30  0E04               	movlw	4
 13593  000F32  EC16  F016         	call	_I2C1_Stop
 13594                           
 13595                           ;i2c1.c: 298: }
 13596  000F36  0012               	return	
 13597  000F38                     i2l72:
 13598                           
 13599                           ;i2c1.c: 299: else
 13600                           ;i2c1.c: 300: {
 13601                           ;i2c1.c: 303: SSP1CON2bits.RSEN = 1;
 13602  000F38  82C5               	bsf	4037,1,c	;volatile
 13603                           
 13604                           ;i2c1.c: 307: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 13605  000F3A  C040  F004         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
 13606  000F3E  C041  F005         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
 13607  000F42  C005  F004         	movff	??_I2C1_ISR+1,??_I2C1_ISR
 13608  000F46  6A05               	clrf	??_I2C1_ISR+1,c
 13609  000F48  0E06               	movlw	6
 13610  000F4A  1604               	andwf	??_I2C1_ISR,f,c
 13611  000F4C  0E00               	movlw	0
 13612  000F4E  1605               	andwf	??_I2C1_ISR+1,f,c
 13613  000F50  0EF0               	movlw	240
 13614  000F52  1004               	iorwf	??_I2C1_ISR,w,c
 13615  000F54  6E40               	movwf	I2C1_ISR@i2c_address,c
 13616  000F56  5005               	movf	??_I2C1_ISR+1,w,c
 13617  000F58  6E41               	movwf	I2C1_ISR@i2c_address+1,c
 13618                           
 13619                           ;i2c1.c: 310: i2c_address |= 0x0001;
 13620  000F5A  8040               	bsf	I2C1_ISR@i2c_address,0,c
 13621                           
 13622                           ;i2c1.c: 313: i2c_10bit_address_restart = 1;
 13623  000F5C  0E01               	movlw	1
 13624  000F5E  6E34               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
 13625                           
 13626                           ;i2c1.c: 316: i2c1_state = S_MASTER_SEND_ADDR;
 13627  000F60  0E02               	movlw	2
 13628  000F62  6E38               	movwf	_i2c1_state,c
 13629                           
 13630                           ;i2c1.c: 317: }
 13631                           ;i2c1.c: 319: break;
 13632  000F64  0012               	return	
 13633  000F66                     i2l7054:
 13634                           
 13635                           ;i2c1.c: 334: if(i2c_10bit_address_restart != 1)
 13636  000F66  0434               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
 13637  000F68  B4D8               	btfsc	status,2,c
 13638  000F6A  D01C               	goto	i2l76
 13639                           
 13640                           ;i2c1.c: 335: {
 13641                           ;i2c1.c: 337: i2c_address = p_i2c1_trb_current->address;
 13642  000F6C  C0D3  FFD9         	movff	_p_i2c1_trb_current,fsr2l
 13643  000F70  C0D4  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
 13644  000F74  CFDE F040          	movff	postinc2,I2C1_ISR@i2c_address
 13645  000F78  CFDD F041          	movff	postdec2,I2C1_ISR@i2c_address+1
 13646                           
 13647                           ;i2c1.c: 338: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
 13648  000F7C  0100               	movlb	0	; () banked
 13649  000F7E  EE20 F003          	lfsr	2,3
 13650  000F82  51D3               	movf	_p_i2c1_trb_current& (0+255),w,b
 13651  000F84  26D9               	addwf	fsr2l,f,c
 13652  000F86  51D4               	movf	(_p_i2c1_trb_current+1)& (0+255),w,b
 13653  000F88  22DA               	addwfc	fsr2h,f,c
 13654  000F8A  CFDE F0BF          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
 13655  000F8E  CFDD F0C0          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
 13656                           
 13657                           ; BSR set to: 0
 13658                           ;i2c1.c: 339: i2c_bytes_left = p_i2c1_trb_current->length;
 13659  000F92  0100               	movlb	0	; () banked
 13660  000F94  EE20 F002          	lfsr	2,2
 13661  000F98  51D3               	movf	_p_i2c1_trb_current& (0+255),w,b
 13662  000F9A  26D9               	addwf	fsr2l,f,c
 13663  000F9C  51D4               	movf	(_p_i2c1_trb_current+1)& (0+255),w,b
 13664  000F9E  22DA               	addwfc	fsr2h,f,c
 13665  000FA0  50DF               	movf	indf2,w,c
 13666  000FA2  6E35               	movwf	I2C1_ISR@i2c_bytes_left,c
 13667  000FA4                     i2l76:
 13668                           
 13669                           ;i2c1.c: 362: else
 13670                           ;i2c1.c: 363: {
 13671                           ;i2c1.c: 365: SSP1BUF = i2c_address;
 13672  000FA4  C040  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
 13673                           
 13674                           ;i2c1.c: 366: if(i2c_address & 0x01)
 13675  000FA8  A040               	btfss	I2C1_ISR@i2c_address,0,c
 13676  000FAA  D003               	goto	i2l7074
 13677                           
 13678                           ;i2c1.c: 367: {
 13679                           ;i2c1.c: 369: i2c1_state = S_MASTER_ACK_ADDR;
 13680  000FAC  0E05               	movlw	5
 13681  000FAE  6E38               	movwf	_i2c1_state,c
 13682                           
 13683                           ;i2c1.c: 370: }
 13684  000FB0  0012               	return	
 13685  000FB2                     i2l7074:
 13686                           
 13687                           ;i2c1.c: 371: else
 13688                           ;i2c1.c: 372: {
 13689                           ;i2c1.c: 374: i2c1_state = S_MASTER_SEND_DATA;
 13690  000FB2  0E03               	movlw	3
 13691  000FB4  6E38               	movwf	_i2c1_state,c
 13692                           
 13693                           ;i2c1.c: 375: }
 13694                           ;i2c1.c: 376: }
 13695                           ;i2c1.c: 377: break;
 13696  000FB6  0012               	return	
 13697  000FB8                     i2l82:
 13698                           
 13699                           ;i2c1.c: 382: if(SSP1CON2bits.ACKSTAT)
 13700  000FB8  ACC5               	btfss	4037,6,c	;volatile
 13701  000FBA  D007               	goto	i2l7082
 13702                           
 13703                           ;i2c1.c: 383: {
 13704                           ;i2c1.c: 385: i2c1_object.i2cErrors++;
 13705  000FBC  0100               	movlb	0	; () banked
 13706  000FBE  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 13707                           
 13708                           ; BSR set to: 0
 13709                           ;i2c1.c: 388: SSP1CON2bits.ACKSTAT = 0;
 13710  000FC0  9CC5               	bcf	4037,6,c	;volatile
 13711                           
 13712                           ; BSR set to: 0
 13713                           ;i2c1.c: 391: I2C1_Stop(I2C1_DATA_NO_ACK);
 13714  000FC2  0E05               	movlw	5
 13715  000FC4  EC16  F016         	call	_I2C1_Stop
 13716                           
 13717                           ;i2c1.c: 393: }
 13718  000FC8  0012               	return	
 13719  000FCA                     i2l7082:
 13720                           
 13721                           ;i2c1.c: 394: else
 13722                           ;i2c1.c: 395: {
 13723                           ;i2c1.c: 397: if(i2c_bytes_left-- == 0U)
 13724  000FCA  0635               	decf	I2C1_ISR@i2c_bytes_left,f,c
 13725  000FCC  2835               	incf	I2C1_ISR@i2c_bytes_left,w,c
 13726  000FCE  A4D8               	btfss	status,2,c
 13727  000FD0  D00F               	goto	i2l7092
 13728                           
 13729                           ;i2c1.c: 398: {
 13730                           ;i2c1.c: 402: p_i2c1_trb_current++;
 13731  000FD2  0E05               	movlw	5
 13732  000FD4  0100               	movlb	0	; () banked
 13733  000FD6  27D3               	addwf	_p_i2c1_trb_current& (0+255),f,b
 13734  000FD8  0E00               	movlw	0
 13735  000FDA  23D4               	addwfc	(_p_i2c1_trb_current+1)& (0+255),f,b
 13736                           
 13737                           ; BSR set to: 0
 13738                           ;i2c1.c: 405: if(--i2c1_trb_count == 0)
 13739  000FDC  2E39               	decfsz	_i2c1_trb_count,f,c
 13740  000FDE  D004               	goto	i2l86
 13741                           
 13742                           ; BSR set to: 0
 13743                           ;i2c1.c: 406: {
 13744                           ;i2c1.c: 407: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 13745  000FE0  0E00               	movlw	0
 13746  000FE2  EC16  F016         	call	_I2C1_Stop
 13747                           
 13748                           ;i2c1.c: 408: }
 13749  000FE6  0012               	return	
 13750  000FE8                     i2l86:
 13751                           
 13752                           ; BSR set to: 0
 13753                           ;i2c1.c: 409: else
 13754                           ;i2c1.c: 410: {
 13755                           ;i2c1.c: 417: SSP1CON2bits.RSEN = 1;
 13756  000FE8  82C5               	bsf	4037,1,c	;volatile
 13757                           
 13758                           ; BSR set to: 0
 13759                           ;i2c1.c: 420: i2c1_state = S_MASTER_SEND_ADDR;
 13760  000FEA  0E02               	movlw	2
 13761  000FEC  6E38               	movwf	_i2c1_state,c
 13762                           
 13763                           ; BSR set to: 0
 13764                           ;i2c1.c: 422: }
 13765                           ;i2c1.c: 423: }
 13766  000FEE  0012               	return	
 13767  000FF0                     i2l7092:
 13768                           
 13769                           ;i2c1.c: 424: else
 13770                           ;i2c1.c: 425: {
 13771                           ;i2c1.c: 427: SSP1BUF = *pi2c_buf_ptr++;
 13772  000FF0  C0BF  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 13773  000FF4  C0C0  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 13774  000FF8  50DF               	movf	indf2,w,c
 13775  000FFA  6EC9               	movwf	4041,c	;volatile
 13776  000FFC  0100               	movlb	0	; () banked
 13777  000FFE  4BBF               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 13778  001000  2BC0               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 13779                           
 13780                           ; BSR set to: 0
 13781                           ;i2c1.c: 428: }
 13782                           ;i2c1.c: 429: }
 13783                           ;i2c1.c: 430: break;
 13784                           
 13785                           ; BSR set to: 0
 13786  001002  0012               	return	
 13787  001004                     i2l89:
 13788                           
 13789                           ;i2c1.c: 435: if(SSP1CON2bits.ACKSTAT)
 13790  001004  ACC5               	btfss	4037,6,c	;volatile
 13791  001006  D007               	goto	i2l90
 13792                           
 13793                           ;i2c1.c: 436: {
 13794                           ;i2c1.c: 439: i2c1_object.i2cErrors++;
 13795  001008  0100               	movlb	0	; () banked
 13796  00100A  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 13797                           
 13798                           ; BSR set to: 0
 13799                           ;i2c1.c: 442: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 13800  00100C  0E04               	movlw	4
 13801  00100E  EC16  F016         	call	_I2C1_Stop
 13802                           
 13803                           ;i2c1.c: 445: SSP1CON2bits.ACKSTAT = 0;
 13804  001012  9CC5               	bcf	4037,6,c	;volatile
 13805                           
 13806                           ;i2c1.c: 446: }
 13807  001014  0012               	return	
 13808  001016                     i2l90:
 13809                           
 13810                           ;i2c1.c: 447: else
 13811                           ;i2c1.c: 448: {
 13812                           ;i2c1.c: 449: SSP1CON2bits.RCEN = 1;
 13813  001016  86C5               	bsf	4037,3,c	;volatile
 13814                           
 13815                           ;i2c1.c: 450: i2c1_state = S_MASTER_ACK_RCV_DATA;
 13816  001018  0E08               	movlw	8
 13817  00101A  6E38               	movwf	_i2c1_state,c
 13818                           
 13819                           ;i2c1.c: 451: }
 13820                           ;i2c1.c: 452: break;
 13821  00101C  0012               	return	
 13822  00101E                     i2l7104:
 13823                           
 13824                           ;i2c1.c: 459: i2c1_state = S_MASTER_ACK_RCV_DATA;
 13825  00101E  0E08               	movlw	8
 13826  001020  6E38               	movwf	_i2c1_state,c
 13827                           
 13828                           ;i2c1.c: 462: SSP1CON2bits.RCEN = 1;
 13829  001022  86C5               	bsf	4037,3,c	;volatile
 13830                           
 13831                           ;i2c1.c: 464: break;
 13832  001024  0012               	return	
 13833  001026                     i2l7108:
 13834                           
 13835                           ;i2c1.c: 469: *pi2c_buf_ptr++ = SSP1BUF;
 13836  001026  C0BF  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 13837  00102A  C0C0  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 13838  00102E  CFC9 FFDF          	movff	4041,indf2	;volatile
 13839  001032  0100               	movlb	0	; () banked
 13840  001034  4BBF               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 13841  001036  2BC0               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 13842                           
 13843                           ; BSR set to: 0
 13844                           ;i2c1.c: 472: if(--i2c_bytes_left)
 13845  001038  0E01               	movlw	1
 13846  00103A  5E35               	subwf	I2C1_ISR@i2c_bytes_left,f,c
 13847  00103C  B4D8               	btfsc	status,2,c
 13848  00103E  D004               	goto	i2l94
 13849                           
 13850                           ; BSR set to: 0
 13851                           ;i2c1.c: 473: {
 13852                           ;i2c1.c: 479: SSP1CON2bits.ACKDT = 0;
 13853  001040  9AC5               	bcf	4037,5,c	;volatile
 13854                           
 13855                           ; BSR set to: 0
 13856                           ;i2c1.c: 482: i2c1_state = S_MASTER_RCV_DATA;
 13857  001042  0E06               	movlw	6
 13858  001044  6E38               	movwf	_i2c1_state,c
 13859                           
 13860                           ;i2c1.c: 483: }
 13861  001046  D003               	goto	i2l7120
 13862  001048                     i2l94:
 13863                           
 13864                           ; BSR set to: 0
 13865                           ;i2c1.c: 484: else
 13866                           ;i2c1.c: 485: {
 13867                           ;i2c1.c: 489: SSP1CON2bits.ACKDT = 1;
 13868  001048  8AC5               	bsf	4037,5,c	;volatile
 13869                           
 13870                           ; BSR set to: 0
 13871                           ;i2c1.c: 491: I2C1_FunctionComplete();
 13872  00104A  ECB4  F017         	call	_I2C1_FunctionComplete	;wreg free
 13873  00104E                     i2l7120:
 13874                           
 13875                           ;i2c1.c: 492: }
 13876                           ;i2c1.c: 495: SSP1CON2bits.ACKEN = 1;
 13877  00104E  88C5               	bsf	4037,4,c	;volatile
 13878                           
 13879                           ;i2c1.c: 496: break;
 13880  001050  0012               	return	
 13881  001052                     i2l7122:
 13882                           
 13883                           ;i2c1.c: 499: case S_MASTER_SEND_STOP:
 13884                           ;i2c1.c: 502: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 13885  001052  0E00               	movlw	0
 13886  001054  EC16  F016         	call	_I2C1_Stop
 13887                           
 13888                           ;i2c1.c: 503: break;
 13889  001058  0012               	return	
 13890  00105A                     i2l7124:
 13891                           
 13892                           ;i2c1.c: 509: i2c1_object.i2cErrors++;
 13893  00105A  0100               	movlb	0	; () banked
 13894  00105C  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 13895                           
 13896                           ; BSR set to: 0
 13897                           ;i2c1.c: 510: I2C1_Stop(I2C1_LOST_STATE);
 13898  00105E  0E06               	movlw	6
 13899  001060  EC16  F016         	call	_I2C1_Stop
 13900                           
 13901                           ;i2c1.c: 513: }
 13902                           
 13903                           ;i2c1.c: 511: break;
 13904  001064  0012               	return	
 13905  001066                     i2l7130:
 13906  001066  5038               	movf	_i2c1_state,w,c
 13907                           
 13908                           ; Switch size 1, requested type "space"
 13909                           ; Number of cases is 11, Range of values is 0 to 11
 13910                           ; switch strategies available:
 13911                           ; Name         Instructions Cycles
 13912                           ; simple_byte           34    18 (average)
 13913                           ;	Chosen strategy is simple_byte
 13914  001068  0A00               	xorlw	0	; case 0
 13915  00106A  B4D8               	btfsc	status,2,c
 13916  00106C  D703               	goto	i2l60
 13917  00106E  0A01               	xorlw	1	; case 1
 13918  001070  B4D8               	btfsc	status,2,c
 13919  001072  D73F               	goto	i2l65
 13920  001074  0A03               	xorlw	3	; case 2
 13921  001076  B4D8               	btfsc	status,2,c
 13922  001078  D776               	goto	i2l7054
 13923  00107A  0A01               	xorlw	1	; case 3
 13924  00107C  B4D8               	btfsc	status,2,c
 13925  00107E  D79C               	goto	i2l82
 13926  001080  0A07               	xorlw	7	; case 4
 13927  001082  B4D8               	btfsc	status,2,c
 13928  001084  D7E6               	goto	i2l7122
 13929  001086  0A01               	xorlw	1	; case 5
 13930  001088  B4D8               	btfsc	status,2,c
 13931  00108A  D7BC               	goto	i2l89
 13932  00108C  0A03               	xorlw	3	; case 6
 13933  00108E  B4D8               	btfsc	status,2,c
 13934  001090  D7C6               	goto	i2l7104
 13935  001092  0A01               	xorlw	1	; case 7
 13936  001094  B4D8               	btfsc	status,2,c
 13937  001096  D7DD               	goto	i2l7122
 13938  001098  0A0F               	xorlw	15	; case 8
 13939  00109A  B4D8               	btfsc	status,2,c
 13940  00109C  D7C4               	goto	i2l7108
 13941  00109E  0A02               	xorlw	2	; case 10
 13942  0010A0  B4D8               	btfsc	status,2,c
 13943  0010A2  D72B               	goto	i2l66
 13944  0010A4  0A01               	xorlw	1	; case 11
 13945  0010A6  B4D8               	btfsc	status,2,c
 13946  0010A8  D73F               	goto	i2l71
 13947  0010AA  D7D7               	goto	i2l7124
 13948  0010AC                     __end_of_I2C1_ISR:
 13949                           	opt stack 0
 13950                           tosu	equ	0xFFF
 13951                           tosh	equ	0xFFE
 13952                           tosl	equ	0xFFD
 13953                           pclatu	equ	0xFFB
 13954                           pclath	equ	0xFFA
 13955                           tblptru	equ	0xFF8
 13956                           tblptrh	equ	0xFF7
 13957                           tblptrl	equ	0xFF6
 13958                           tablat	equ	0xFF5
 13959                           prodh	equ	0xFF4
 13960                           prodl	equ	0xFF3
 13961                           intcon	equ	0xFF2
 13962                           intcon2	equ	0xFF1
 13963                           postinc0	equ	0xFEE
 13964                           fsr0h	equ	0xFEA
 13965                           fsr0l	equ	0xFE9
 13966                           wreg	equ	0xFE8
 13967                           fsr1h	equ	0xFE2
 13968                           fsr1l	equ	0xFE1
 13969                           indf2	equ	0xFDF
 13970                           postinc2	equ	0xFDE
 13971                           postdec2	equ	0xFDD
 13972                           plusw2	equ	0xFDB
 13973                           fsr2h	equ	0xFDA
 13974                           fsr2l	equ	0xFD9
 13975                           status	equ	0xFD8
 13976                           
 13977 ;; *************** function _I2C1_Stop *****************
 13978 ;; Defined at:
 13979 ;;		line 534 in file "mcc_generated_files/i2c1.c"
 13980 ;; Parameters:    Size  Location     Type
 13981 ;;  completion_c    1    wreg     enum E8678
 13982 ;; Auto vars:     Size  Location     Type
 13983 ;;  completion_c    1    2[COMRAM] enum E8678
 13984 ;; Return value:  Size  Location     Type
 13985 ;;                  1    wreg      void 
 13986 ;; Registers used:
 13987 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13988 ;; Tracked objects:
 13989 ;;		On entry : 0/0
 13990 ;;		On exit  : 0/0
 13991 ;;		Unchanged: 0/0
 13992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13993 ;;      Params:         0       0       0       0       0       0       0
 13994 ;;      Locals:         1       0       0       0       0       0       0
 13995 ;;      Temps:          2       0       0       0       0       0       0
 13996 ;;      Totals:         3       0       0       0       0       0       0
 13997 ;;Total ram usage:        3 bytes
 13998 ;; Hardware stack levels used:    1
 13999 ;; This function calls:
 14000 ;;		Nothing
 14001 ;; This function is called by:
 14002 ;;		_I2C1_ISR
 14003 ;; This function uses a non-reentrant model
 14004 ;;
 14005                           
 14006                           	psect	text68
 14007  002C2C                     __ptext68:
 14008                           	opt stack 0
 14009  002C2C                     _I2C1_Stop:
 14010                           	opt stack 22
 14011                           
 14012                           ;incstack = 0
 14013                           ;I2C1_Stop@completion_code stored from wreg
 14014  002C2C  6E03               	movwf	I2C1_Stop@completion_code,c
 14015                           
 14016                           ;i2c1.c: 537: SSP1CON2bits.PEN = 1;
 14017  002C2E  84C5               	bsf	4037,2,c	;volatile
 14018                           
 14019                           ;i2c1.c: 540: if (p_i2c1_current->pTrFlag != (0))
 14020  002C30  0100               	movlb	0	; () banked
 14021  002C32  EE20 F003          	lfsr	2,3
 14022  002C36  51D1               	movf	_p_i2c1_current& (0+255),w,b
 14023  002C38  26D9               	addwf	fsr2l,f,c
 14024  002C3A  51D2               	movf	(_p_i2c1_current+1)& (0+255),w,b
 14025  002C3C  22DA               	addwfc	fsr2h,f,c
 14026  002C3E  50DE               	movf	postinc2,w,c
 14027  002C40  10DE               	iorwf	postinc2,w,c
 14028  002C42  B4D8               	btfsc	status,2,c
 14029  002C44  D011               	goto	i2l6566
 14030                           
 14031                           ; BSR set to: 0
 14032                           ;i2c1.c: 541: {
 14033                           ;i2c1.c: 543: *(p_i2c1_current->pTrFlag) = completion_code;
 14034  002C46  0100               	movlb	0	; () banked
 14035  002C48  EE20 F003          	lfsr	2,3
 14036  002C4C  51D1               	movf	_p_i2c1_current& (0+255),w,b
 14037  002C4E  26D9               	addwf	fsr2l,f,c
 14038  002C50  51D2               	movf	(_p_i2c1_current+1)& (0+255),w,b
 14039  002C52  22DA               	addwfc	fsr2h,f,c
 14040  002C54  CFDE F001          	movff	postinc2,??_I2C1_Stop
 14041  002C58  CFDD F002          	movff	postdec2,??_I2C1_Stop+1
 14042  002C5C  C001  FFD9         	movff	??_I2C1_Stop,fsr2l
 14043  002C60  C002  FFDA         	movff	??_I2C1_Stop+1,fsr2h
 14044  002C64  C003  FFDF         	movff	I2C1_Stop@completion_code,indf2
 14045  002C68                     i2l6566:
 14046                           
 14047                           ; BSR set to: 0
 14048                           ;i2c1.c: 544: }
 14049                           ;i2c1.c: 547: i2c1_state = S_MASTER_IDLE;
 14050  002C68  0E00               	movlw	0
 14051  002C6A  6E38               	movwf	_i2c1_state,c
 14052                           
 14053                           ; BSR set to: 0
 14054  002C6C  0012               	return		;funcret
 14055  002C6E                     __end_of_I2C1_Stop:
 14056                           	opt stack 0
 14057                           tosu	equ	0xFFF
 14058                           tosh	equ	0xFFE
 14059                           tosl	equ	0xFFD
 14060                           pclatu	equ	0xFFB
 14061                           pclath	equ	0xFFA
 14062                           tblptru	equ	0xFF8
 14063                           tblptrh	equ	0xFF7
 14064                           tblptrl	equ	0xFF6
 14065                           tablat	equ	0xFF5
 14066                           prodh	equ	0xFF4
 14067                           prodl	equ	0xFF3
 14068                           intcon	equ	0xFF2
 14069                           intcon2	equ	0xFF1
 14070                           postinc0	equ	0xFEE
 14071                           fsr0h	equ	0xFEA
 14072                           fsr0l	equ	0xFE9
 14073                           wreg	equ	0xFE8
 14074                           fsr1h	equ	0xFE2
 14075                           fsr1l	equ	0xFE1
 14076                           indf2	equ	0xFDF
 14077                           postinc2	equ	0xFDE
 14078                           postdec2	equ	0xFDD
 14079                           plusw2	equ	0xFDB
 14080                           fsr2h	equ	0xFDA
 14081                           fsr2l	equ	0xFD9
 14082                           status	equ	0xFD8
 14083                           
 14084 ;; *************** function _I2C1_FunctionComplete *****************
 14085 ;; Defined at:
 14086 ;;		line 516 in file "mcc_generated_files/i2c1.c"
 14087 ;; Parameters:    Size  Location     Type
 14088 ;;		None
 14089 ;; Auto vars:     Size  Location     Type
 14090 ;;		None
 14091 ;; Return value:  Size  Location     Type
 14092 ;;                  1    wreg      void 
 14093 ;; Registers used:
 14094 ;;		wreg, status,2, status,0
 14095 ;; Tracked objects:
 14096 ;;		On entry : 0/0
 14097 ;;		On exit  : 0/0
 14098 ;;		Unchanged: 0/0
 14099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14100 ;;      Params:         0       0       0       0       0       0       0
 14101 ;;      Locals:         0       0       0       0       0       0       0
 14102 ;;      Temps:          0       0       0       0       0       0       0
 14103 ;;      Totals:         0       0       0       0       0       0       0
 14104 ;;Total ram usage:        0 bytes
 14105 ;; Hardware stack levels used:    1
 14106 ;; This function calls:
 14107 ;;		Nothing
 14108 ;; This function is called by:
 14109 ;;		_I2C1_ISR
 14110 ;; This function uses a non-reentrant model
 14111 ;;
 14112                           
 14113                           	psect	text69
 14114  002F68                     __ptext69:
 14115                           	opt stack 0
 14116  002F68                     _I2C1_FunctionComplete:
 14117                           	opt stack 22
 14118                           
 14119                           ;i2c1.c: 520: p_i2c1_trb_current++;
 14120                           
 14121                           ; BSR set to: 0
 14122                           ;incstack = 0
 14123  002F68  0E05               	movlw	5
 14124  002F6A  0100               	movlb	0	; () banked
 14125  002F6C  27D3               	addwf	_p_i2c1_trb_current& (0+255),f,b
 14126  002F6E  0E00               	movlw	0
 14127  002F70  23D4               	addwfc	(_p_i2c1_trb_current+1)& (0+255),f,b
 14128                           
 14129                           ; BSR set to: 0
 14130                           ;i2c1.c: 523: if(--i2c1_trb_count == 0)
 14131  002F72  2E39               	decfsz	_i2c1_trb_count,f,c
 14132  002F74  D003               	goto	i2l6574
 14133                           
 14134                           ; BSR set to: 0
 14135                           ;i2c1.c: 524: {
 14136                           ;i2c1.c: 525: i2c1_state = S_MASTER_SEND_STOP;
 14137  002F76  0E04               	movlw	4
 14138  002F78  6E38               	movwf	_i2c1_state,c
 14139                           
 14140                           ;i2c1.c: 526: }
 14141  002F7A  0012               	return	
 14142  002F7C                     i2l6574:
 14143                           
 14144                           ; BSR set to: 0
 14145                           ;i2c1.c: 527: else
 14146                           ;i2c1.c: 528: {
 14147                           ;i2c1.c: 529: i2c1_state = S_MASTER_RESTART;
 14148  002F7C  0E01               	movlw	1
 14149  002F7E  6E38               	movwf	_i2c1_state,c
 14150  002F80  0012               	return	
 14151  002F82                     __end_of_I2C1_FunctionComplete:
 14152                           	opt stack 0
 14153                           tosu	equ	0xFFF
 14154                           tosh	equ	0xFFE
 14155                           tosl	equ	0xFFD
 14156                           pclatu	equ	0xFFB
 14157                           pclath	equ	0xFFA
 14158                           tblptru	equ	0xFF8
 14159                           tblptrh	equ	0xFF7
 14160                           tblptrl	equ	0xFF6
 14161                           tablat	equ	0xFF5
 14162                           prodh	equ	0xFF4
 14163                           prodl	equ	0xFF3
 14164                           intcon	equ	0xFF2
 14165                           intcon2	equ	0xFF1
 14166                           postinc0	equ	0xFEE
 14167                           fsr0h	equ	0xFEA
 14168                           fsr0l	equ	0xFE9
 14169                           wreg	equ	0xFE8
 14170                           fsr1h	equ	0xFE2
 14171                           fsr1l	equ	0xFE1
 14172                           indf2	equ	0xFDF
 14173                           postinc2	equ	0xFDE
 14174                           postdec2	equ	0xFDD
 14175                           plusw2	equ	0xFDB
 14176                           fsr2h	equ	0xFDA
 14177                           fsr2l	equ	0xFD9
 14178                           status	equ	0xFD8
 14179                           
 14180 ;; *************** function _I2C1_BusCollisionISR *****************
 14181 ;; Defined at:
 14182 ;;		line 681 in file "mcc_generated_files/i2c1.c"
 14183 ;; Parameters:    Size  Location     Type
 14184 ;;		None
 14185 ;; Auto vars:     Size  Location     Type
 14186 ;;		None
 14187 ;; Return value:  Size  Location     Type
 14188 ;;                  1    wreg      void 
 14189 ;; Registers used:
 14190 ;;		None
 14191 ;; Tracked objects:
 14192 ;;		On entry : 0/0
 14193 ;;		On exit  : 0/0
 14194 ;;		Unchanged: 0/0
 14195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14196 ;;      Params:         0       0       0       0       0       0       0
 14197 ;;      Locals:         0       0       0       0       0       0       0
 14198 ;;      Temps:          0       0       0       0       0       0       0
 14199 ;;      Totals:         0       0       0       0       0       0       0
 14200 ;;Total ram usage:        0 bytes
 14201 ;; Hardware stack levels used:    1
 14202 ;; This function calls:
 14203 ;;		Nothing
 14204 ;; This function is called by:
 14205 ;;		_INTERRUPT_InterruptManager
 14206 ;; This function uses a non-reentrant model
 14207 ;;
 14208                           
 14209                           	psect	text70
 14210  00304C                     __ptext70:
 14211                           	opt stack 0
 14212  00304C                     _I2C1_BusCollisionISR:
 14213                           	opt stack 23
 14214                           
 14215                           ; BSR set to: 0
 14216                           ;incstack = 0
 14217  00304C  0012               	return		;funcret
 14218  00304E                     __end_of_I2C1_BusCollisionISR:
 14219                           	opt stack 0
 14220                           tosu	equ	0xFFF
 14221                           tosh	equ	0xFFE
 14222                           tosl	equ	0xFFD
 14223                           pclatu	equ	0xFFB
 14224                           pclath	equ	0xFFA
 14225                           tblptru	equ	0xFF8
 14226                           tblptrh	equ	0xFF7
 14227                           tblptrl	equ	0xFF6
 14228                           tablat	equ	0xFF5
 14229                           prodh	equ	0xFF4
 14230                           prodl	equ	0xFF3
 14231                           intcon	equ	0xFF2
 14232                           intcon2	equ	0xFF1
 14233                           postinc0	equ	0xFEE
 14234                           fsr0h	equ	0xFEA
 14235                           fsr0l	equ	0xFE9
 14236                           wreg	equ	0xFE8
 14237                           fsr1h	equ	0xFE2
 14238                           fsr1l	equ	0xFE1
 14239                           indf2	equ	0xFDF
 14240                           postinc2	equ	0xFDE
 14241                           postdec2	equ	0xFDD
 14242                           plusw2	equ	0xFDB
 14243                           fsr2h	equ	0xFDA
 14244                           fsr2l	equ	0xFD9
 14245                           status	equ	0xFD8
 14246                           
 14247 ;; *************** function _EUSART1_Transmit_ISR *****************
 14248 ;; Defined at:
 14249 ;;		line 150 in file "UART.c"
 14250 ;; Parameters:    Size  Location     Type
 14251 ;;		None
 14252 ;; Auto vars:     Size  Location     Type
 14253 ;;		None
 14254 ;; Return value:  Size  Location     Type
 14255 ;;                  1    wreg      void 
 14256 ;; Registers used:
 14257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14258 ;; Tracked objects:
 14259 ;;		On entry : 0/0
 14260 ;;		On exit  : 0/0
 14261 ;;		Unchanged: 0/0
 14262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14263 ;;      Params:         0       0       0       0       0       0       0
 14264 ;;      Locals:         0       0       0       0       0       0       0
 14265 ;;      Temps:          0       0       0       0       0       0       0
 14266 ;;      Totals:         0       0       0       0       0       0       0
 14267 ;;Total ram usage:        0 bytes
 14268 ;; Hardware stack levels used:    1
 14269 ;; Hardware stack levels required when called:    2
 14270 ;; This function calls:
 14271 ;;		i2_UART_buff_get
 14272 ;;		i2_UART_buff_size
 14273 ;; This function is called by:
 14274 ;;		_INTERRUPT_InterruptManager
 14275 ;; This function uses a non-reentrant model
 14276 ;;
 14277                           
 14278                           	psect	text71
 14279  002D54                     __ptext71:
 14280                           	opt stack 0
 14281  002D54                     _EUSART1_Transmit_ISR:
 14282                           	opt stack 21
 14283                           
 14284                           ;UART.c: 152: if (UART_buff_size(&output_buffer) > 0) {
 14285                           
 14286                           ;incstack = 0
 14287  002D54  0E00               	movlw	low _output_buffer
 14288  002D56  6E01               	movwf	i2UART_buff_size@_this,c
 14289  002D58  0E05               	movlw	high _output_buffer
 14290  002D5A  6E02               	movwf	i2UART_buff_size@_this+1,c
 14291  002D5C  ECE3  F017         	call	i2_UART_buff_size	;wreg free
 14292  002D60  BE02               	btfsc	?i2_UART_buff_size+1,7,c
 14293  002D62  D00D               	goto	i2l5284
 14294  002D64  5002               	movf	?i2_UART_buff_size+1,w,c
 14295  002D66  E103               	bnz	i2u540_40
 14296  002D68  0401               	decf	?i2_UART_buff_size,w,c
 14297  002D6A  A0D8               	btfss	status,0,c
 14298  002D6C  D008               	goto	i2l5284
 14299  002D6E                     i2u540_40:
 14300                           
 14301                           ;UART.c: 153: TXREG1 = UART_buff_get(&output_buffer);
 14302  002D6E  0E00               	movlw	low _output_buffer
 14303  002D70  6E07               	movwf	i2UART_buff_get@_this,c
 14304  002D72  0E05               	movlw	high _output_buffer
 14305  002D74  6E08               	movwf	i2UART_buff_get@_this+1,c
 14306  002D76  EC5C  F013         	call	i2_UART_buff_get	;wreg free
 14307  002D7A  6EAD               	movwf	4013,c	;volatile
 14308                           
 14309                           ;UART.c: 154: } else {
 14310  002D7C  0012               	return	
 14311  002D7E                     i2l5284:
 14312                           
 14313                           ;UART.c: 155: Transmit_stall = 1;
 14314  002D7E  0E01               	movlw	1
 14315  002D80  6E44               	movwf	_Transmit_stall,c
 14316                           
 14317                           ;UART.c: 156: PIE1bits.TX1IE = 0;
 14318  002D82  989D               	bcf	3997,4,c	;volatile
 14319  002D84  0012               	return	
 14320  002D86                     __end_of_EUSART1_Transmit_ISR:
 14321                           	opt stack 0
 14322                           tosu	equ	0xFFF
 14323                           tosh	equ	0xFFE
 14324                           tosl	equ	0xFFD
 14325                           pclatu	equ	0xFFB
 14326                           pclath	equ	0xFFA
 14327                           tblptru	equ	0xFF8
 14328                           tblptrh	equ	0xFF7
 14329                           tblptrl	equ	0xFF6
 14330                           tablat	equ	0xFF5
 14331                           prodh	equ	0xFF4
 14332                           prodl	equ	0xFF3
 14333                           intcon	equ	0xFF2
 14334                           intcon2	equ	0xFF1
 14335                           postinc0	equ	0xFEE
 14336                           fsr0h	equ	0xFEA
 14337                           fsr0l	equ	0xFE9
 14338                           wreg	equ	0xFE8
 14339                           fsr1h	equ	0xFE2
 14340                           fsr1l	equ	0xFE1
 14341                           indf2	equ	0xFDF
 14342                           postinc2	equ	0xFDE
 14343                           postdec2	equ	0xFDD
 14344                           plusw2	equ	0xFDB
 14345                           fsr2h	equ	0xFDA
 14346                           fsr2l	equ	0xFD9
 14347                           status	equ	0xFD8
 14348                           
 14349 ;; *************** function i2_UART_buff_size *****************
 14350 ;; Defined at:
 14351 ;;		line 102 in file "UART.c"
 14352 ;; Parameters:    Size  Location     Type
 14353 ;;  _this           2    0[COMRAM] PTR struct UART_ring_buf
 14354 ;;		 -> output_buffer(206), input_buffer(206), 
 14355 ;; Auto vars:     Size  Location     Type
 14356 ;;		None
 14357 ;; Return value:  Size  Location     Type
 14358 ;;                  2    0[COMRAM] int 
 14359 ;; Registers used:
 14360 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14361 ;; Tracked objects:
 14362 ;;		On entry : 0/0
 14363 ;;		On exit  : 0/0
 14364 ;;		Unchanged: 0/0
 14365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14366 ;;      Params:         2       0       0       0       0       0       0
 14367 ;;      Locals:         0       0       0       0       0       0       0
 14368 ;;      Temps:          0       0       0       0       0       0       0
 14369 ;;      Totals:         2       0       0       0       0       0       0
 14370 ;;Total ram usage:        2 bytes
 14371 ;; Hardware stack levels used:    1
 14372 ;; This function calls:
 14373 ;;		Nothing
 14374 ;; This function is called by:
 14375 ;;		_EUSART1_Transmit_ISR
 14376 ;; This function uses a non-reentrant model
 14377 ;;
 14378                           
 14379                           	psect	text72
 14380  002FC6                     __ptext72:
 14381                           	opt stack 0
 14382  002FC6                     i2_UART_buff_size:
 14383                           	opt stack 22
 14384                           
 14385                           ;UART.c: 103: return (_this->count);
 14386                           
 14387                           ;incstack = 0
 14388  002FC6  EE20 F0CC          	lfsr	2,204
 14389  002FCA  5001               	movf	i2UART_buff_size@_this,w,c
 14390  002FCC  26D9               	addwf	fsr2l,f,c
 14391  002FCE  5002               	movf	i2UART_buff_size@_this+1,w,c
 14392  002FD0  22DA               	addwfc	fsr2h,f,c
 14393  002FD2  CFDE F001          	movff	postinc2,?i2_UART_buff_size
 14394  002FD6  CFDD F002          	movff	postdec2,?i2_UART_buff_size+1
 14395  002FDA  0012               	return	
 14396  002FDC                     __end_ofi2_UART_buff_size:
 14397                           	opt stack 0
 14398                           tosu	equ	0xFFF
 14399                           tosh	equ	0xFFE
 14400                           tosl	equ	0xFFD
 14401                           pclatu	equ	0xFFB
 14402                           pclath	equ	0xFFA
 14403                           tblptru	equ	0xFF8
 14404                           tblptrh	equ	0xFF7
 14405                           tblptrl	equ	0xFF6
 14406                           tablat	equ	0xFF5
 14407                           prodh	equ	0xFF4
 14408                           prodl	equ	0xFF3
 14409                           intcon	equ	0xFF2
 14410                           intcon2	equ	0xFF1
 14411                           postinc0	equ	0xFEE
 14412                           fsr0h	equ	0xFEA
 14413                           fsr0l	equ	0xFE9
 14414                           wreg	equ	0xFE8
 14415                           fsr1h	equ	0xFE2
 14416                           fsr1l	equ	0xFE1
 14417                           indf2	equ	0xFDF
 14418                           postinc2	equ	0xFDE
 14419                           postdec2	equ	0xFDD
 14420                           plusw2	equ	0xFDB
 14421                           fsr2h	equ	0xFDA
 14422                           fsr2l	equ	0xFD9
 14423                           status	equ	0xFD8
 14424                           
 14425 ;; *************** function i2_UART_buff_get *****************
 14426 ;; Defined at:
 14427 ;;		line 81 in file "UART.c"
 14428 ;; Parameters:    Size  Location     Type
 14429 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 14430 ;;		 -> output_buffer(206), input_buffer(206), 
 14431 ;; Auto vars:     Size  Location     Type
 14432 ;;  UART_buff_ge    1   10[COMRAM] unsigned char 
 14433 ;; Return value:  Size  Location     Type
 14434 ;;                  1    wreg      unsigned char 
 14435 ;; Registers used:
 14436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14437 ;; Tracked objects:
 14438 ;;		On entry : 0/0
 14439 ;;		On exit  : 0/0
 14440 ;;		Unchanged: 0/0
 14441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14442 ;;      Params:         2       0       0       0       0       0       0
 14443 ;;      Locals:         1       0       0       0       0       0       0
 14444 ;;      Temps:          2       0       0       0       0       0       0
 14445 ;;      Totals:         5       0       0       0       0       0       0
 14446 ;;Total ram usage:        5 bytes
 14447 ;; Hardware stack levels used:    1
 14448 ;; Hardware stack levels required when called:    1
 14449 ;; This function calls:
 14450 ;;		i2_UART_buff_modulo_inc
 14451 ;; This function is called by:
 14452 ;;		_EUSART1_Transmit_ISR
 14453 ;; This function uses a non-reentrant model
 14454 ;;
 14455                           
 14456                           	psect	text73
 14457  0026B8                     __ptext73:
 14458                           	opt stack 0
 14459  0026B8                     i2_UART_buff_get:
 14460                           	opt stack 21
 14461                           
 14462                           ;UART.c: 82: unsigned char c;
 14463                           ;UART.c: 83: if (_this->count > 0) {
 14464                           
 14465                           ;incstack = 0
 14466  0026B8  EE20 F0CC          	lfsr	2,204
 14467  0026BC  5007               	movf	i2UART_buff_get@_this,w,c
 14468  0026BE  26D9               	addwf	fsr2l,f,c
 14469  0026C0  5008               	movf	i2UART_buff_get@_this+1,w,c
 14470  0026C2  22DA               	addwfc	fsr2h,f,c
 14471  0026C4  0E01               	movlw	1
 14472  0026C6  BEDB               	btfsc	plusw2,7,c
 14473  0026C8  D03C               	goto	i2l5108
 14474  0026CA  0E01               	movlw	1
 14475  0026CC  50DB               	movf	plusw2,w,c
 14476  0026CE  E103               	bnz	i2u520_40
 14477  0026D0  04DE               	decf	postinc2,w,c
 14478  0026D2  A0D8               	btfss	status,0,c
 14479  0026D4  D036               	goto	i2l5108
 14480  0026D6                     i2u520_40:
 14481                           
 14482                           ;UART.c: 84: c = _this->buf[_this->tail];
 14483  0026D6  EE20 F0CA          	lfsr	2,202
 14484  0026DA  5007               	movf	i2UART_buff_get@_this,w,c
 14485  0026DC  26D9               	addwf	fsr2l,f,c
 14486  0026DE  5008               	movf	i2UART_buff_get@_this+1,w,c
 14487  0026E0  22DA               	addwfc	fsr2h,f,c
 14488  0026E2  CFDE F009          	movff	postinc2,??i2_UART_buff_get
 14489  0026E6  CFDD F00A          	movff	postdec2,??i2_UART_buff_get+1
 14490  0026EA  5009               	movf	??i2_UART_buff_get,w,c
 14491  0026EC  2407               	addwf	i2UART_buff_get@_this,w,c
 14492  0026EE  6ED9               	movwf	fsr2l,c
 14493  0026F0  500A               	movf	??i2_UART_buff_get+1,w,c
 14494  0026F2  2008               	addwfc	i2UART_buff_get@_this+1,w,c
 14495  0026F4  6EDA               	movwf	fsr2h,c
 14496  0026F6  50DF               	movf	indf2,w,c
 14497  0026F8  6E0B               	movwf	i2UART_buff_get@c,c
 14498                           
 14499                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 14500  0026FA  EE20 F0CA          	lfsr	2,202
 14501  0026FE  5007               	movf	i2UART_buff_get@_this,w,c
 14502  002700  26D9               	addwf	fsr2l,f,c
 14503  002702  5008               	movf	i2UART_buff_get@_this+1,w,c
 14504  002704  22DA               	addwfc	fsr2h,f,c
 14505  002706  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 14506  00270A  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 14507  00270E  0E00               	movlw	0
 14508  002710  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 14509  002712  0EC8               	movlw	200
 14510  002714  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 14511  002716  EC1A  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 14512  00271A  EE20 F0CA          	lfsr	2,202
 14513  00271E  5007               	movf	i2UART_buff_get@_this,w,c
 14514  002720  26D9               	addwf	fsr2l,f,c
 14515  002722  5008               	movf	i2UART_buff_get@_this+1,w,c
 14516  002724  22DA               	addwfc	fsr2h,f,c
 14517  002726  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 14518  00272A  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 14519                           
 14520                           ;UART.c: 86: --_this->count;
 14521  00272E  EE20 F0CC          	lfsr	2,204
 14522  002732  5007               	movf	i2UART_buff_get@_this,w,c
 14523  002734  26D9               	addwf	fsr2l,f,c
 14524  002736  5008               	movf	i2UART_buff_get@_this+1,w,c
 14525  002738  22DA               	addwfc	fsr2h,f,c
 14526  00273A  06DE               	decf	postinc2,f,c
 14527  00273C  0E00               	movlw	0
 14528  00273E  5ADD               	subwfb	postdec2,f,c
 14529                           
 14530                           ;UART.c: 87: } else {
 14531  002740  D002               	goto	i2l1162
 14532  002742                     i2l5108:
 14533                           
 14534                           ;UART.c: 88: c = 0;
 14535  002742  0E00               	movlw	0
 14536  002744  6E0B               	movwf	i2UART_buff_get@c,c
 14537  002746                     i2l1162:
 14538                           
 14539                           ;UART.c: 89: }
 14540                           ;UART.c: 90: return (c);
 14541  002746  500B               	movf	i2UART_buff_get@c,w,c
 14542  002748  0012               	return	
 14543  00274A                     __end_ofi2_UART_buff_get:
 14544                           	opt stack 0
 14545                           tosu	equ	0xFFF
 14546                           tosh	equ	0xFFE
 14547                           tosl	equ	0xFFD
 14548                           pclatu	equ	0xFFB
 14549                           pclath	equ	0xFFA
 14550                           tblptru	equ	0xFF8
 14551                           tblptrh	equ	0xFF7
 14552                           tblptrl	equ	0xFF6
 14553                           tablat	equ	0xFF5
 14554                           prodh	equ	0xFF4
 14555                           prodl	equ	0xFF3
 14556                           intcon	equ	0xFF2
 14557                           intcon2	equ	0xFF1
 14558                           postinc0	equ	0xFEE
 14559                           fsr0h	equ	0xFEA
 14560                           fsr0l	equ	0xFE9
 14561                           wreg	equ	0xFE8
 14562                           fsr1h	equ	0xFE2
 14563                           fsr1l	equ	0xFE1
 14564                           indf2	equ	0xFDF
 14565                           postinc2	equ	0xFDE
 14566                           postdec2	equ	0xFDD
 14567                           plusw2	equ	0xFDB
 14568                           fsr2h	equ	0xFDA
 14569                           fsr2l	equ	0xFD9
 14570                           status	equ	0xFD8
 14571                           
 14572 ;; *************** function _EUSART1_Receive_ISR *****************
 14573 ;; Defined at:
 14574 ;;		line 139 in file "UART.c"
 14575 ;; Parameters:    Size  Location     Type
 14576 ;;		None
 14577 ;; Auto vars:     Size  Location     Type
 14578 ;;  data            1   11[COMRAM] unsigned char 
 14579 ;; Return value:  Size  Location     Type
 14580 ;;                  1    wreg      void 
 14581 ;; Registers used:
 14582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14583 ;; Tracked objects:
 14584 ;;		On entry : 0/0
 14585 ;;		On exit  : 0/0
 14586 ;;		Unchanged: 0/0
 14587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14588 ;;      Params:         0       0       0       0       0       0       0
 14589 ;;      Locals:         1       0       0       0       0       0       0
 14590 ;;      Temps:          0       0       0       0       0       0       0
 14591 ;;      Totals:         1       0       0       0       0       0       0
 14592 ;;Total ram usage:        1 bytes
 14593 ;; Hardware stack levels used:    1
 14594 ;; Hardware stack levels required when called:    2
 14595 ;; This function calls:
 14596 ;;		i2_UART_buff_put
 14597 ;; This function is called by:
 14598 ;;		_INTERRUPT_InterruptManager
 14599 ;; This function uses a non-reentrant model
 14600 ;;
 14601                           
 14602                           	psect	text74
 14603  002F4A                     __ptext74:
 14604                           	opt stack 0
 14605  002F4A                     _EUSART1_Receive_ISR:
 14606                           	opt stack 21
 14607                           
 14608                           ;UART.c: 140: if (1 == RC1STAbits.OERR) {
 14609                           
 14610                           ;incstack = 0
 14611  002F4A  A2AB               	btfss	4011,1,c	;volatile
 14612  002F4C  D002               	goto	i2l1193
 14613                           
 14614                           ;UART.c: 143: RC1STAbits.CREN = 0;
 14615  002F4E  98AB               	bcf	4011,4,c	;volatile
 14616                           
 14617                           ;UART.c: 144: RC1STAbits.CREN = 1;
 14618  002F50  88AB               	bsf	4011,4,c	;volatile
 14619  002F52                     i2l1193:
 14620                           
 14621                           ;UART.c: 145: }
 14622                           ;UART.c: 146: unsigned char data = RCREG1;
 14623  002F52  CFAE F00C          	movff	4014,EUSART1_Receive_ISR@data	;volatile
 14624                           
 14625                           ;UART.c: 147: UART_buff_put(&input_buffer, data);
 14626  002F56  0E00               	movlw	low _input_buffer
 14627  002F58  6E07               	movwf	i2UART_buff_put@_this,c
 14628  002F5A  0E04               	movlw	high _input_buffer
 14629  002F5C  6E08               	movwf	i2UART_buff_put@_this+1,c
 14630  002F5E  C00C  F009         	movff	EUSART1_Receive_ISR@data,i2UART_buff_put@c
 14631  002F62  EC8E  F00D         	call	i2_UART_buff_put	;wreg free
 14632  002F66  0012               	return		;funcret
 14633  002F68                     __end_of_EUSART1_Receive_ISR:
 14634                           	opt stack 0
 14635                           tosu	equ	0xFFF
 14636                           tosh	equ	0xFFE
 14637                           tosl	equ	0xFFD
 14638                           pclatu	equ	0xFFB
 14639                           pclath	equ	0xFFA
 14640                           tblptru	equ	0xFF8
 14641                           tblptrh	equ	0xFF7
 14642                           tblptrl	equ	0xFF6
 14643                           tablat	equ	0xFF5
 14644                           prodh	equ	0xFF4
 14645                           prodl	equ	0xFF3
 14646                           intcon	equ	0xFF2
 14647                           intcon2	equ	0xFF1
 14648                           postinc0	equ	0xFEE
 14649                           fsr0h	equ	0xFEA
 14650                           fsr0l	equ	0xFE9
 14651                           wreg	equ	0xFE8
 14652                           fsr1h	equ	0xFE2
 14653                           fsr1l	equ	0xFE1
 14654                           indf2	equ	0xFDF
 14655                           postinc2	equ	0xFDE
 14656                           postdec2	equ	0xFDD
 14657                           plusw2	equ	0xFDB
 14658                           fsr2h	equ	0xFDA
 14659                           fsr2l	equ	0xFD9
 14660                           status	equ	0xFD8
 14661                           
 14662 ;; *************** function i2_UART_buff_put *****************
 14663 ;; Defined at:
 14664 ;;		line 68 in file "UART.c"
 14665 ;; Parameters:    Size  Location     Type
 14666 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 14667 ;;		 -> output_buffer(206), input_buffer(206), 
 14668 ;;  c               1    8[COMRAM] const unsigned char 
 14669 ;; Auto vars:     Size  Location     Type
 14670 ;;		None
 14671 ;; Return value:  Size  Location     Type
 14672 ;;                  1    wreg      void 
 14673 ;; Registers used:
 14674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14675 ;; Tracked objects:
 14676 ;;		On entry : 0/0
 14677 ;;		On exit  : 0/0
 14678 ;;		Unchanged: 0/0
 14679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14680 ;;      Params:         3       0       0       0       0       0       0
 14681 ;;      Locals:         0       0       0       0       0       0       0
 14682 ;;      Temps:          2       0       0       0       0       0       0
 14683 ;;      Totals:         5       0       0       0       0       0       0
 14684 ;;Total ram usage:        5 bytes
 14685 ;; Hardware stack levels used:    1
 14686 ;; Hardware stack levels required when called:    1
 14687 ;; This function calls:
 14688 ;;		i2_UART_buff_modulo_inc
 14689 ;; This function is called by:
 14690 ;;		_EUSART1_Receive_ISR
 14691 ;; This function uses a non-reentrant model
 14692 ;;
 14693                           
 14694                           	psect	text75
 14695  001B1C                     __ptext75:
 14696                           	opt stack 0
 14697  001B1C                     i2_UART_buff_put:
 14698                           	opt stack 21
 14699                           
 14700                           ;UART.c: 69: if (_this->count < 200) {
 14701                           
 14702                           ;incstack = 0
 14703  001B1C  EE20 F0CC          	lfsr	2,204
 14704  001B20  5007               	movf	i2UART_buff_put@_this,w,c
 14705  001B22  26D9               	addwf	fsr2l,f,c
 14706  001B24  5008               	movf	i2UART_buff_put@_this+1,w,c
 14707  001B26  22DA               	addwfc	fsr2h,f,c
 14708  001B28  0E01               	movlw	1
 14709  001B2A  BEDB               	btfsc	plusw2,7,c
 14710  001B2C  D007               	goto	i2l5088
 14711  001B2E  0E01               	movlw	1
 14712  001B30  50DB               	movf	plusw2,w,c
 14713  001B32  E13A               	bnz	i2l5094
 14714  001B34  0EC8               	movlw	200
 14715  001B36  5CDE               	subwf	postinc2,w,c
 14716  001B38  B0D8               	btfsc	status,0,c
 14717  001B3A  D036               	goto	i2l5094
 14718  001B3C                     i2l5088:
 14719                           
 14720                           ;UART.c: 70: _this->buf[_this->head] = c;
 14721  001B3C  EE20 F0C8          	lfsr	2,200
 14722  001B40  5007               	movf	i2UART_buff_put@_this,w,c
 14723  001B42  26D9               	addwf	fsr2l,f,c
 14724  001B44  5008               	movf	i2UART_buff_put@_this+1,w,c
 14725  001B46  22DA               	addwfc	fsr2h,f,c
 14726  001B48  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 14727  001B4C  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 14728  001B50  500A               	movf	??i2_UART_buff_put,w,c
 14729  001B52  2407               	addwf	i2UART_buff_put@_this,w,c
 14730  001B54  6ED9               	movwf	fsr2l,c
 14731  001B56  500B               	movf	??i2_UART_buff_put+1,w,c
 14732  001B58  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 14733  001B5A  6EDA               	movwf	fsr2h,c
 14734  001B5C  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 14735                           
 14736                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
 14737  001B60  EE20 F0C8          	lfsr	2,200
 14738  001B64  5007               	movf	i2UART_buff_put@_this,w,c
 14739  001B66  26D9               	addwf	fsr2l,f,c
 14740  001B68  5008               	movf	i2UART_buff_put@_this+1,w,c
 14741  001B6A  22DA               	addwfc	fsr2h,f,c
 14742  001B6C  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 14743  001B70  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 14744  001B74  0E00               	movlw	0
 14745  001B76  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 14746  001B78  0EC8               	movlw	200
 14747  001B7A  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 14748  001B7C  EC1A  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 14749  001B80  EE20 F0C8          	lfsr	2,200
 14750  001B84  5007               	movf	i2UART_buff_put@_this,w,c
 14751  001B86  26D9               	addwf	fsr2l,f,c
 14752  001B88  5008               	movf	i2UART_buff_put@_this+1,w,c
 14753  001B8A  22DA               	addwfc	fsr2h,f,c
 14754  001B8C  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 14755  001B90  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 14756                           
 14757                           ;UART.c: 72: ++_this->count;
 14758  001B94  EE20 F0CC          	lfsr	2,204
 14759  001B98  5007               	movf	i2UART_buff_put@_this,w,c
 14760  001B9A  26D9               	addwf	fsr2l,f,c
 14761  001B9C  5008               	movf	i2UART_buff_put@_this+1,w,c
 14762  001B9E  22DA               	addwfc	fsr2h,f,c
 14763  001BA0  2ADE               	incf	postinc2,f,c
 14764  001BA2  0E00               	movlw	0
 14765  001BA4  22DD               	addwfc	postdec2,f,c
 14766                           
 14767                           ;UART.c: 73: } else {
 14768  001BA6  0012               	return	
 14769  001BA8                     i2l5094:
 14770                           
 14771                           ;UART.c: 74: _this->buf[_this->head] = c;
 14772  001BA8  EE20 F0C8          	lfsr	2,200
 14773  001BAC  5007               	movf	i2UART_buff_put@_this,w,c
 14774  001BAE  26D9               	addwf	fsr2l,f,c
 14775  001BB0  5008               	movf	i2UART_buff_put@_this+1,w,c
 14776  001BB2  22DA               	addwfc	fsr2h,f,c
 14777  001BB4  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 14778  001BB8  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 14779  001BBC  500A               	movf	??i2_UART_buff_put,w,c
 14780  001BBE  2407               	addwf	i2UART_buff_put@_this,w,c
 14781  001BC0  6ED9               	movwf	fsr2l,c
 14782  001BC2  500B               	movf	??i2_UART_buff_put+1,w,c
 14783  001BC4  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 14784  001BC6  6EDA               	movwf	fsr2h,c
 14785  001BC8  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 14786                           
 14787                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
 14788  001BCC  EE20 F0C8          	lfsr	2,200
 14789  001BD0  5007               	movf	i2UART_buff_put@_this,w,c
 14790  001BD2  26D9               	addwf	fsr2l,f,c
 14791  001BD4  5008               	movf	i2UART_buff_put@_this+1,w,c
 14792  001BD6  22DA               	addwfc	fsr2h,f,c
 14793  001BD8  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 14794  001BDC  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 14795  001BE0  0E00               	movlw	0
 14796  001BE2  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 14797  001BE4  0EC8               	movlw	200
 14798  001BE6  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 14799  001BE8  EC1A  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 14800  001BEC  EE20 F0C8          	lfsr	2,200
 14801  001BF0  5007               	movf	i2UART_buff_put@_this,w,c
 14802  001BF2  26D9               	addwf	fsr2l,f,c
 14803  001BF4  5008               	movf	i2UART_buff_put@_this+1,w,c
 14804  001BF6  22DA               	addwfc	fsr2h,f,c
 14805  001BF8  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 14806  001BFC  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 14807                           
 14808                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 14809  001C00  EE20 F0CA          	lfsr	2,202
 14810  001C04  5007               	movf	i2UART_buff_put@_this,w,c
 14811  001C06  26D9               	addwf	fsr2l,f,c
 14812  001C08  5008               	movf	i2UART_buff_put@_this+1,w,c
 14813  001C0A  22DA               	addwfc	fsr2h,f,c
 14814  001C0C  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 14815  001C10  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 14816  001C14  0E00               	movlw	0
 14817  001C16  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 14818  001C18  0EC8               	movlw	200
 14819  001C1A  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 14820  001C1C  EC1A  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 14821  001C20  EE20 F0CA          	lfsr	2,202
 14822  001C24  5007               	movf	i2UART_buff_put@_this,w,c
 14823  001C26  26D9               	addwf	fsr2l,f,c
 14824  001C28  5008               	movf	i2UART_buff_put@_this+1,w,c
 14825  001C2A  22DA               	addwfc	fsr2h,f,c
 14826  001C2C  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 14827  001C30  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 14828  001C34  0012               	return	
 14829  001C36                     __end_ofi2_UART_buff_put:
 14830                           	opt stack 0
 14831                           tosu	equ	0xFFF
 14832                           tosh	equ	0xFFE
 14833                           tosl	equ	0xFFD
 14834                           pclatu	equ	0xFFB
 14835                           pclath	equ	0xFFA
 14836                           tblptru	equ	0xFF8
 14837                           tblptrh	equ	0xFF7
 14838                           tblptrl	equ	0xFF6
 14839                           tablat	equ	0xFF5
 14840                           prodh	equ	0xFF4
 14841                           prodl	equ	0xFF3
 14842                           intcon	equ	0xFF2
 14843                           intcon2	equ	0xFF1
 14844                           postinc0	equ	0xFEE
 14845                           fsr0h	equ	0xFEA
 14846                           fsr0l	equ	0xFE9
 14847                           wreg	equ	0xFE8
 14848                           fsr1h	equ	0xFE2
 14849                           fsr1l	equ	0xFE1
 14850                           indf2	equ	0xFDF
 14851                           postinc2	equ	0xFDE
 14852                           postdec2	equ	0xFDD
 14853                           plusw2	equ	0xFDB
 14854                           fsr2h	equ	0xFDA
 14855                           fsr2l	equ	0xFD9
 14856                           status	equ	0xFD8
 14857                           
 14858 ;; *************** function i2_UART_buff_modulo_inc *****************
 14859 ;; Defined at:
 14860 ;;		line 106 in file "UART.c"
 14861 ;; Parameters:    Size  Location     Type
 14862 ;;  value           2    0[COMRAM] const unsigned int 
 14863 ;;  modulus         2    2[COMRAM] const unsigned int 
 14864 ;; Auto vars:     Size  Location     Type
 14865 ;;  UART_buff_mo    2    4[COMRAM] unsigned int 
 14866 ;; Return value:  Size  Location     Type
 14867 ;;                  2    0[COMRAM] unsigned int 
 14868 ;; Registers used:
 14869 ;;		wreg, status,2, status,0
 14870 ;; Tracked objects:
 14871 ;;		On entry : 0/0
 14872 ;;		On exit  : 0/0
 14873 ;;		Unchanged: 0/0
 14874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14875 ;;      Params:         4       0       0       0       0       0       0
 14876 ;;      Locals:         2       0       0       0       0       0       0
 14877 ;;      Temps:          0       0       0       0       0       0       0
 14878 ;;      Totals:         6       0       0       0       0       0       0
 14879 ;;Total ram usage:        6 bytes
 14880 ;; Hardware stack levels used:    1
 14881 ;; This function calls:
 14882 ;;		Nothing
 14883 ;; This function is called by:
 14884 ;;		i2_UART_buff_put
 14885 ;;		i2_UART_buff_get
 14886 ;; This function uses a non-reentrant model
 14887 ;;
 14888                           
 14889                           	psect	text76
 14890  002E34                     __ptext76:
 14891                           	opt stack 0
 14892  002E34                     i2_UART_buff_modulo_inc:
 14893                           	opt stack 21
 14894                           
 14895                           ;UART.c: 107: unsigned int my_value = value + 1;
 14896                           
 14897                           ;incstack = 0
 14898  002E34  0E01               	movlw	1
 14899  002E36  2401               	addwf	i2UART_buff_modulo_inc@value,w,c
 14900  002E38  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 14901  002E3A  0E00               	movlw	0
 14902  002E3C  2002               	addwfc	i2UART_buff_modulo_inc@value+1,w,c
 14903  002E3E  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 14904                           
 14905                           ;UART.c: 108: if (my_value >= modulus) {
 14906  002E40  5003               	movf	i2UART_buff_modulo_inc@modulus,w,c
 14907  002E42  5C05               	subwf	i2UART_buff_modulo_inc@my_value,w,c
 14908  002E44  5004               	movf	i2UART_buff_modulo_inc@modulus+1,w,c
 14909  002E46  5806               	subwfb	i2UART_buff_modulo_inc@my_value+1,w,c
 14910  002E48  A0D8               	btfss	status,0,c
 14911  002E4A  D004               	goto	i2l4558
 14912                           
 14913                           ;UART.c: 109: my_value = 0;
 14914  002E4C  0E00               	movlw	0
 14915  002E4E  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 14916  002E50  0E00               	movlw	0
 14917  002E52  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 14918  002E54                     i2l4558:
 14919                           
 14920                           ;UART.c: 110: }
 14921                           ;UART.c: 111: return (my_value);
 14922  002E54  C005  F001         	movff	i2UART_buff_modulo_inc@my_value,?i2_UART_buff_modulo_inc
 14923  002E58  C006  F002         	movff	i2UART_buff_modulo_inc@my_value+1,?i2_UART_buff_modulo_inc+1
 14924  002E5C  0012               	return	
 14925  002E5E                     __end_ofi2_UART_buff_modulo_inc:
 14926                           	opt stack 0
 14927                           tosu	equ	0xFFF
 14928                           tosh	equ	0xFFE
 14929                           tosl	equ	0xFFD
 14930                           pclatu	equ	0xFFB
 14931                           pclath	equ	0xFFA
 14932                           tblptru	equ	0xFF8
 14933                           tblptrh	equ	0xFF7
 14934                           tblptrl	equ	0xFF6
 14935                           tablat	equ	0xFF5
 14936                           prodh	equ	0xFF4
 14937                           prodl	equ	0xFF3
 14938                           intcon	equ	0xFF2
 14939                           intcon2	equ	0xFF1
 14940                           postinc0	equ	0xFEE
 14941                           fsr0h	equ	0xFEA
 14942                           fsr0l	equ	0xFE9
 14943                           wreg	equ	0xFE8
 14944                           fsr1h	equ	0xFE2
 14945                           fsr1l	equ	0xFE1
 14946                           indf2	equ	0xFDF
 14947                           postinc2	equ	0xFDE
 14948                           postdec2	equ	0xFDD
 14949                           plusw2	equ	0xFDB
 14950                           fsr2h	equ	0xFDA
 14951                           fsr2l	equ	0xFD9
 14952                           status	equ	0xFD8
 14953                           
 14954 ;; *************** function _ADC_ISR *****************
 14955 ;; Defined at:
 14956 ;;		line 128 in file "mcc_generated_files/adc.c"
 14957 ;; Parameters:    Size  Location     Type
 14958 ;;		None
 14959 ;; Auto vars:     Size  Location     Type
 14960 ;;		None
 14961 ;; Return value:  Size  Location     Type
 14962 ;;                  1    wreg      void 
 14963 ;; Registers used:
 14964 ;;		None
 14965 ;; Tracked objects:
 14966 ;;		On entry : 0/0
 14967 ;;		On exit  : 0/0
 14968 ;;		Unchanged: 0/0
 14969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14970 ;;      Params:         0       0       0       0       0       0       0
 14971 ;;      Locals:         0       0       0       0       0       0       0
 14972 ;;      Temps:          0       0       0       0       0       0       0
 14973 ;;      Totals:         0       0       0       0       0       0       0
 14974 ;;Total ram usage:        0 bytes
 14975 ;; Hardware stack levels used:    1
 14976 ;; This function calls:
 14977 ;;		Nothing
 14978 ;; This function is called by:
 14979 ;;		_INTERRUPT_InterruptManager
 14980 ;; This function uses a non-reentrant model
 14981 ;;
 14982                           
 14983                           	psect	text77
 14984  003044                     __ptext77:
 14985                           	opt stack 0
 14986  003044                     _ADC_ISR:
 14987                           	opt stack 23
 14988                           
 14989                           ;adc.c: 131: PIR1bits.ADIF = 0;
 14990                           
 14991                           ;incstack = 0
 14992  003044  9C9E               	bcf	3998,6,c	;volatile
 14993  003046  0012               	return		;funcret
 14994  003048                     __end_of_ADC_ISR:
 14995                           	opt stack 0
 14996                           tosu	equ	0xFFF
 14997                           tosh	equ	0xFFE
 14998                           tosl	equ	0xFFD
 14999                           pclatu	equ	0xFFB
 15000                           pclath	equ	0xFFA
 15001                           tblptru	equ	0xFF8
 15002                           tblptrh	equ	0xFF7
 15003                           tblptrl	equ	0xFF6
 15004                           tablat	equ	0xFF5
 15005                           prodh	equ	0xFF4
 15006                           prodl	equ	0xFF3
 15007                           intcon	equ	0xFF2
 15008                           intcon2	equ	0xFF1
 15009                           postinc0	equ	0xFEE
 15010                           fsr0h	equ	0xFEA
 15011                           fsr0l	equ	0xFE9
 15012                           wreg	equ	0xFE8
 15013                           fsr1h	equ	0xFE2
 15014                           fsr1l	equ	0xFE1
 15015                           indf2	equ	0xFDF
 15016                           postinc2	equ	0xFDE
 15017                           postdec2	equ	0xFDD
 15018                           plusw2	equ	0xFDB
 15019                           fsr2h	equ	0xFDA
 15020                           fsr2l	equ	0xFD9
 15021                           status	equ	0xFD8
 15022                           tosu	equ	0xFFF
 15023                           tosh	equ	0xFFE
 15024                           tosl	equ	0xFFD
 15025                           pclatu	equ	0xFFB
 15026                           pclath	equ	0xFFA
 15027                           tblptru	equ	0xFF8
 15028                           tblptrh	equ	0xFF7
 15029                           tblptrl	equ	0xFF6
 15030                           tablat	equ	0xFF5
 15031                           prodh	equ	0xFF4
 15032                           prodl	equ	0xFF3
 15033                           intcon	equ	0xFF2
 15034                           intcon2	equ	0xFF1
 15035                           postinc0	equ	0xFEE
 15036                           fsr0h	equ	0xFEA
 15037                           fsr0l	equ	0xFE9
 15038                           wreg	equ	0xFE8
 15039                           fsr1h	equ	0xFE2
 15040                           fsr1l	equ	0xFE1
 15041                           indf2	equ	0xFDF
 15042                           postinc2	equ	0xFDE
 15043                           postdec2	equ	0xFDD
 15044                           plusw2	equ	0xFDB
 15045                           fsr2h	equ	0xFDA
 15046                           fsr2l	equ	0xFD9
 15047                           status	equ	0xFD8
 15048                           
 15049                           	psect	text78
 15050  000000                     __ptext78:
 15051                           	opt stack 0
 15052                           tosu	equ	0xFFF
 15053                           tosh	equ	0xFFE
 15054                           tosl	equ	0xFFD
 15055                           pclatu	equ	0xFFB
 15056                           pclath	equ	0xFFA
 15057                           tblptru	equ	0xFF8
 15058                           tblptrh	equ	0xFF7
 15059                           tblptrl	equ	0xFF6
 15060                           tablat	equ	0xFF5
 15061                           prodh	equ	0xFF4
 15062                           prodl	equ	0xFF3
 15063                           intcon	equ	0xFF2
 15064                           intcon2	equ	0xFF1
 15065                           postinc0	equ	0xFEE
 15066                           fsr0h	equ	0xFEA
 15067                           fsr0l	equ	0xFE9
 15068                           wreg	equ	0xFE8
 15069                           fsr1h	equ	0xFE2
 15070                           fsr1l	equ	0xFE1
 15071                           indf2	equ	0xFDF
 15072                           postinc2	equ	0xFDE
 15073                           postdec2	equ	0xFDD
 15074                           plusw2	equ	0xFDB
 15075                           fsr2h	equ	0xFDA
 15076                           fsr2l	equ	0xFD9
 15077                           status	equ	0xFD8
 15078                           
 15079                           	psect	rparam
 15080  0000                     tosu	equ	0xFFF
 15081                           tosh	equ	0xFFE
 15082                           tosl	equ	0xFFD
 15083                           pclatu	equ	0xFFB
 15084                           pclath	equ	0xFFA
 15085                           tblptru	equ	0xFF8
 15086                           tblptrh	equ	0xFF7
 15087                           tblptrl	equ	0xFF6
 15088                           tablat	equ	0xFF5
 15089                           prodh	equ	0xFF4
 15090                           prodl	equ	0xFF3
 15091                           intcon	equ	0xFF2
 15092                           intcon2	equ	0xFF1
 15093                           postinc0	equ	0xFEE
 15094                           fsr0h	equ	0xFEA
 15095                           fsr0l	equ	0xFE9
 15096                           wreg	equ	0xFE8
 15097                           fsr1h	equ	0xFE2
 15098                           fsr1l	equ	0xFE1
 15099                           indf2	equ	0xFDF
 15100                           postinc2	equ	0xFDE
 15101                           postdec2	equ	0xFDD
 15102                           plusw2	equ	0xFDB
 15103                           fsr2h	equ	0xFDA
 15104                           fsr2l	equ	0xFD9
 15105                           status	equ	0xFD8
 15106                           
 15107                           	psect	temp
 15108  000045                     btemp:
 15109                           	opt stack 0
 15110  000045                     	ds	1
 15111  0000                     int$flags	set	btemp
 15112                           tosu	equ	0xFFF
 15113                           tosh	equ	0xFFE
 15114                           tosl	equ	0xFFD
 15115                           pclatu	equ	0xFFB
 15116                           pclath	equ	0xFFA
 15117                           tblptru	equ	0xFF8
 15118                           tblptrh	equ	0xFF7
 15119                           tblptrl	equ	0xFF6
 15120                           tablat	equ	0xFF5
 15121                           prodh	equ	0xFF4
 15122                           prodl	equ	0xFF3
 15123                           intcon	equ	0xFF2
 15124                           intcon2	equ	0xFF1
 15125                           postinc0	equ	0xFEE
 15126                           fsr0h	equ	0xFEA
 15127                           fsr0l	equ	0xFE9
 15128                           wreg	equ	0xFE8
 15129                           fsr1h	equ	0xFE2
 15130                           fsr1l	equ	0xFE1
 15131                           indf2	equ	0xFDF
 15132                           postinc2	equ	0xFDE
 15133                           postdec2	equ	0xFDD
 15134                           plusw2	equ	0xFDB
 15135                           fsr2h	equ	0xFDA
 15136                           fsr2l	equ	0xFD9
 15137                           status	equ	0xFD8


Data Sizes:
    Strings     28
    Constant    768
    Data        1
    BSS         1045
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      68
    BANK0           160     10     160
    BANK1           256     26      83
    BANK2           256      0     206
    BANK3           256      0     200
    BANK4           256      0     206
    BANK5           256      0     206

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_tr_queue.pTrFlag	PTR enum E8678 size(2) Largest target is 0
		 -> oledPutChar@status(COMRAM[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK1[1]), 
		 -> LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    memset@p1	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    memset@p	PTR unsigned char  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> SetData@s(COMRAM[20]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> SetData@s(COMRAM[20]), 

    sp__memmove	PTR void  size(2) Largest target is 9
		 -> oledPutChar@bytes(COMRAM[9]), 

    UART_buff_peek@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> input_buffer(BANK4[206]), 

    UART_buff_size@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_get@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_put@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_init@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    crcBufS_get@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    crcBufS_status_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    crcBufS_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    sp__memset	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    FastTransfer_buffer_flush@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), 

    FastTransfer_buffer_put@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), 

    CRC8@data	PTR const unsigned char  size(2) Largest target is 206
		 -> CRCcheck@arrayHolder(BANK0[3]), receiveData@holder_2354(BANK1[3]), receiveData@holder(BANK1[3]), rx_buffer(BANK3[200]), 
		 -> ring_buffer(BANK2[206]), NULL(NULL[0]), 

    sendStructAddress	PTR unsigned char  size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), NULL(NULL[0]), 

    begin@stufftoreceive	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_get(), 

    serial_read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_get(), 

    begin@stuffpeek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_peek(), 

    serial_peek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_peek(), 

    begin@stuffavailable	PTR FTN()int  size(2) Largest target is 2
		 -> Receive_available(), 

    serial_available	PTR FTN()int  size(2) Largest target is 2
		 -> Absolute function(), Receive_available(), 

    begin@stufftosend	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Send_put(), 

    serial_write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), Send_put(), 

    begin@ptr	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK1[40]), 

    receiveArrayAddress	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK1[40]), NULL(NULL[0]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E8678 size(2) Largest target is 1
		 -> oledPutChar@status(COMRAM[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK1[1]), 
		 -> LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E8678 size(2) Largest target is 1
		 -> oledPutChar@status(COMRAM[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK1[1]), 
		 -> LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    F8790.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWrite@pflag	PTR enum E8678 size(2) Largest target is 1
		 -> oledPutChar@status(COMRAM[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK1[1]), 
		 -> LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    F8785.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDblinkRate@b(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), LEDBsetBrightness@b(BANK0[2]), 
		 -> I2C1_ISR@i2c_address(COMRAM[2]), NULL(NULL[0]), 

    S21$pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E8678 size(2) Largest target is 1
		 -> oledPutChar@status(COMRAM[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK1[1]), 
		 -> LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    S33$pTrFlag	PTR enum E8678 size(2) Largest target is 1
		 -> oledPutChar@status(COMRAM[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK1[1]), 
		 -> LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E8678 size(2) Largest target is 1
		 -> oledPutChar@status(COMRAM[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK1[1]), 
		 -> LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    S33$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), NULL(NULL[0]), 

    S44$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    S44$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 


Critical Paths under _main in COMRAM

    _main->___ftmul
    _updateComms->_handleIndicators
    _respondECU->_ToSend
    _respondECU->_sendData
    _sendData->_FastTransfer_buffer_flush
    _sendData->_Send_put
    _FastTransfer_buffer_flush->_memset
    _buttonsCollector->_GetButtonState
    _ToSend->_buttonsCollector
    _FastTransfer_buffer_put->_FastTransfer_buffer_modulo_inc
    _receiveData->_Send_put
    _Send_put->_UART_buff_get
    _Send_put->_UART_buff_put
    _UART_buff_put->_UART_buff_modulo_inc
    _Receive_peek->_UART_buff_peek
    _CRCcheck->_crcBufS_get
    _Receive_get->_UART_buff_get
    _UART_buff_get->_UART_buff_modulo_inc
    _Receive_available->_UART_buff_size
    _handleIndicators->_SetLEDOut
    _SetLEDOut->_Off_Led
    _SetLEDOut->_setLED
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    _begin->___awdiv
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART1_Initialize->_UART_buff_init
    _UART_buff_init->_memset
    _LEDwriteDisplay->_I2C1_MasterWrite
    _LEDsetValue->___ftmul
    _LEDsetBar->___awdiv
    _LEDbegin->_I2C1_MasterWrite
    _LEDblinkRate->_I2C1_MasterWrite
    _LEDBsetBrightness->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _TMR2_ISR->_TMR2_CallBack
    _TMR0_ISR->_ReadButtonState
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Transmit_ISR->i2_UART_buff_get
    i2_UART_buff_get->i2_UART_buff_modulo_inc
    _EUSART1_Receive_ISR->i2_UART_buff_put
    i2_UART_buff_put->i2_UART_buff_modulo_inc

Critical Paths under _main in BANK0

    _main->_LEDsetValue
    _respondECU->_ToSend
    _receiveData->_CRCcheck
    ___fttol->___ftmul
    _LEDsetValue->___ftmul
    _LEDbegin->_LEDBsetBrightness
    _LEDbegin->_LEDblinkRate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LEDwriteDisplay
    _updateComms->_receiveData
    _SYSTEM_Initialize->_begin
    _LEDsetValue->_LEDsetBar

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   49027
                                             24 BANK1      2     2      0
                           _LEDbegin
                        _LEDsetValue
                    _LEDwriteDisplay
                  _SYSTEM_Initialize
                            ___ftmul
                            ___fttol
                           ___lwtoft
                        _updateComms
 ---------------------------------------------------------------------------------
 (1) _updateComms                                          0     0      0   21411
                        _TBbarGraphs
                   _handleIndicators
                        _receiveData
                         _respondECU
 ---------------------------------------------------------------------------------
 (2) _respondECU                                           0     0      0    7986
                              _Delay
                             _ToSend
                   _buttonsCollector
                           _sendData
 ---------------------------------------------------------------------------------
 (3) _sendData                                             5     5      0    5704
                                             38 COMRAM     5     5      0
                   Absolute function *
                               _CRC8
          _FastTransfer_buffer_flush
                           _Send_put *
                        _crcBufS_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_put                                          7     2      5     742
                                             26 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_flush                            4     0      4    1139
                                             34 COMRAM     4     0      4
                             _memset
 ---------------------------------------------------------------------------------
 (3) _buttonsCollector                                     9     7      2     309
                                             32 COMRAM     9     7      2
                     _GetButtonState
 ---------------------------------------------------------------------------------
 (4) _GetButtonState                                       6     4      2     108
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _ToSend                                               3     1      2    1751
                                             41 COMRAM     2     0      2
                                              0 BANK0      1     1      0
            _FastTransfer_buffer_put
                   _buttonsCollector (ARG)
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_put                              7     2      5    1535
                                             32 COMRAM     7     2      5
     _FastTransfer_buffer_modulo_inc
 ---------------------------------------------------------------------------------
 (5) _FastTransfer_buffer_modulo_inc                       6     2      4     746
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay                                                5     3      2     222
                                             26 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _receiveData                                         18    18      0   10715
                                              0 BANK1     18    18      0
                   Absolute function *
                               _CRC8
                           _CRCcheck
                  _Receive_available *
                        _Receive_get *
                       _Receive_peek *
                           _Send_put *
 ---------------------------------------------------------------------------------
 (4) _Send_put                                             1     1      0    2614
                                             37 COMRAM     1     1      0
                      _UART_buff_get
                      _UART_buff_put
 ---------------------------------------------------------------------------------
 (5) _UART_buff_put                                        5     2      3    1418
                                             32 COMRAM     5     2      3
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (3) _Receive_peek                                         0     0      0     139
                     _UART_buff_peek
 ---------------------------------------------------------------------------------
 (4) _UART_buff_peek                                       4     2      2     139
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _CRCcheck                                             7     7      0    5114
                                              0 BANK0      7     7      0
                   Absolute function *
                               _CRC8
                  _Receive_available *
                        _Receive_get *
                        _crcBufS_get
                 _crcBufS_status_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_status_put                                  10     6      4     908
                                             26 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (4) _crcBufS_get                                         12     8      4    1404
                                             26 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (3) _Receive_get                                          0     0      0    1165
                      _UART_buff_get
 ---------------------------------------------------------------------------------
 (5) _UART_buff_get                                        5     3      2    1165
                                             32 COMRAM     5     3      2
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (6) _UART_buff_modulo_inc                                 6     2      4     746
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Receive_available                                    2     0      2     150
                                             28 COMRAM     2     0      2
                     _UART_buff_size
 ---------------------------------------------------------------------------------
 (4) _UART_buff_size                                       2     0      2     150
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _CRC8                                                 7     4      3    1014
                                             26 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _handleIndicators                                     7     5      2    2494
                                             36 COMRAM     7     5      2
                          _SetLEDOut
 ---------------------------------------------------------------------------------
 (3) _SetLEDOut                                            6     2      4    2191
                                             30 COMRAM     6     2      4
                            _Off_Led
                             _setLED
 ---------------------------------------------------------------------------------
 (4) _setLED                                               4     2      2     493
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _Off_Led                                              4     2      2     955
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _TBbarGraphs                                          4     0      4     216
                                             26 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2529
                                             34 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     525
                                              0 BANK1     15    11      4
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3254
                                             37 COMRAM     6     0      6
                                              0 BANK0      9     9      0
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2344
                                             26 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2894
                     _ADC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                              _begin
 ---------------------------------------------------------------------------------
 (2) _begin                                               13     0     13    1771
                                              0 BANK1     13     0     13
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     108
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2     108
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0    1015
                     _UART_buff_init
 ---------------------------------------------------------------------------------
 (3) _UART_buff_init                                       2     0      2    1015
                                             34 COMRAM     2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6     830
                                             26 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDwriteDisplay                                     24    24      0    4527
                                              0 BANK1     24    24      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _LEDsetValue                                          7     3      4    2539
                                              9 BANK0      1     1      0
                                             16 BANK1      6     2      4
                          _LEDsetBar
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _LEDsetBar                                           24    20      4    1940
                                             34 COMRAM     8     4      4
                                              0 BANK1     16    16      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     907
                                             26 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LEDbegin                                             7     7      0   11345
                                              0 BANK1      7     7      0
                   _I2C1_MasterWrite
                  _LEDBsetBrightness
                       _LEDblinkRate
 ---------------------------------------------------------------------------------
 (2) _LEDblinkRate                                         8     5      3    3841
                                              0 BANK0      8     5      3
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _LEDBsetBrightness                                    8     5      3    3841
                                              0 BANK0      8     5      3
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _I2C1_MasterWrite                                     7     0      7    3299
                                             35 COMRAM     7     0      7
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterWriteTRBBuild                             9     2      7     494
                                             26 COMRAM     9     2      7
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterTRBInsert                                 6     2      4     494
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0    1748
                                             12 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0     178
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR2_CallBack                                        4     4      0     178
                                              0 COMRAM     4     4      0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             2     2      0     330
                                              4 COMRAM     2     2      0
                    _ReadButtonState
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR0_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ReadButtonState                                      4     2      2     262
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _I2C1_ISR                                             2     2      0      31
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (9) _I2C1_Stop                                            3     3      0      31
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0     528
                    i2_UART_buff_get
                   i2_UART_buff_size
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_size                                     2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_get                                      5     3      2     480
                                              6 COMRAM     5     3      2
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  1     1      0     681
                                             11 COMRAM     1     1      0
                    i2_UART_buff_put
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_put                                      5     2      3     658
                                              6 COMRAM     5     2      3
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (10) i2_UART_buff_modulo_inc                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LEDbegin
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
     _LEDBsetBrightness
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
     _LEDblinkRate
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
   _LEDsetValue
     _LEDsetBar
       ___awdiv
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   _LEDwriteDisplay
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _UART_buff_init
         _memset
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _begin
       ___awdiv
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _updateComms
     _TBbarGraphs
     _handleIndicators
       _SetLEDOut
         _Off_Led
         _setLED
     _receiveData
       Absolute function(Fake) *
       _CRC8 *
       _CRCcheck *
         Absolute function(Fake) *
         _CRC8 *
         _Receive_available *
           _UART_buff_size
         _Receive_get *
           _UART_buff_get
             _UART_buff_modulo_inc
         _crcBufS_get *
         _crcBufS_status_put *
       _Receive_available *
         _UART_buff_size
       _Receive_get *
         _UART_buff_get
           _UART_buff_modulo_inc
       _Receive_peek *
         _UART_buff_peek
       _Send_put *
         _UART_buff_get
           _UART_buff_modulo_inc
         _UART_buff_put
           _UART_buff_modulo_inc
     _respondECU
       _Delay
       _ToSend
         _FastTransfer_buffer_put
           _FastTransfer_buffer_modulo_inc
         _buttonsCollector (ARG)
           _GetButtonState
       _buttonsCollector
         _GetButtonState
       _sendData
         Absolute function(Fake) *
         _CRC8 *
         _FastTransfer_buffer_flush *
           _memset
         _Send_put *
           _UART_buff_get
             _UART_buff_modulo_inc
           _UART_buff_put
             _UART_buff_modulo_inc
         _crcBufS_put *

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
     i2_UART_buff_put
       i2_UART_buff_modulo_inc
   _EUSART1_Transmit_ISR
     i2_UART_buff_get
       i2_UART_buff_modulo_inc
     i2_UART_buff_size
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR
     _ReadButtonState
     _TMR0_CallBack
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      CE      15       80.5%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      CE      13       80.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      CE       8       80.5%
BITBANK1           100      0       0       5        0.0%
BANK1              100     1A      53       6       32.4%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      A      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      44       1       72.3%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     469       9        0.0%
DATA                 0      0     469      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sun May 01 04:43:54 2016

       __end_of_FastTransfer_buffer_flush 2A00                    i2_UART_buff_modulo_inc 2E34  
        __end_of_TMR2_SetInterruptHandler 3034                                         _i 00CD  
                                       _k 00CF                              _rx_array_inx 003E  
                            ___awdiv@sign 0020                  LEDBsetBrightness@timeOut 00F9  
                              Off_Led@led 001B                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                                       l601 2D3E  
                                     l614 23F0                                       l619 2462  
                                     l924 283C                                       l932 2994  
                                     l693 07EE                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                         __end_of_ADC_ISR 3048      FastTransfer_buffer_flush@clearBuffer 0025  
                         _TMR2_Initialize 2ECE                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
                             _TBbarGraphs 2FDC             i2UART_buff_modulo_inc@modulus 0003  
                            __CFG_LVP$OFF 000000                          __end_of_I2C1_ISR 10AC  
                                    l1003 2B8C                                      l1117 1536  
                                    l1162 26B4                                      l1523 23A0  
                                    l6010 26B0                                      l6102 2162  
                                    l6040 22CC                                      l6120 2B76  
                                    l6200 208A                                      l6050 2308  
                                    l6114 2B60                                      l6130 2B98  
                                    l6044 22EC                                      l6060 21DE  
                                    l6046 22F8                                      l6062 21F4  
                                    l6054 219C                                      l6310 0CC8  
                                    l6150 129A                                      l7200 2446  
                                    l6080 20EA                                      l6064 220A  
                                    l6056 21B2                                      l6304 0CA4  
                                    l6128 2B92                                      l7202 245A  
                                    l7210 1912                                      l6058 21C8  
                                    l6410 1714                                      l6402 16AA  
                                    l6228 2B4C                                      l6092 2132  
                                    l6084 2102                                      l6076 20D2  
                                    l6068 2220                                      l6340 0D52  
                                    l6332 0D30                                      l6260 0BD4  
                                    l6252 0BB2                                      l6244 0B90  
                                    l6172 1E54                                      l6420 177E  
                                    l6412 171E                                      l6404 16C4  
                                    l7150 2480                                      l6510 276E  
                                    l7230 194A                                      l6326 0D0C  
                                    l6318 0CEA                                      l6238 2D2A  
                                    l6414 1748                                      l6406 16DE  
                                    l7152 249E                                      l6520 2790  
                                    l6504 275E                                      l7208 18F4  
                                    l7400 1618                                      l6096 214A  
                                    l6088 211A                                      l6184 1ED8  
                                    l6168 1E4A                                      l6192 2004  
                                    l6440 14B2                                      l6416 174C  
                                    l6408 16F8                      receiveData@crcHolder 0145  
                                    l7170 24CE                                      l7330 17DE  
                                    l7410 164E                                      l6370 0DDC  
                                    l6362 0DBA                                      l6354 0D98  
                                    l6282 0C3C                                      l6274 0C1A  
                                    l6266 0BF8                                      l6450 1506  
                                    l6426 13DA                                      l6700 2558  
                                    l7172 24D6                                      l6516 2784  
                                    l6532 27B6                                      l7228 1942  
                                    l6348 0D74                                      l6436 149C  
                                    l6428 1402                                      l6518 278C  
                                    l7270 19C8                                      l7350 1852  
                                    l7414 166A                                      l7406 1634  
                                    l6454 1526                                      l6536 27C4  
                                    l6528 27AC                                      l6632 0798  
                                    l7192 23FA                                      l7360 1884  
                                    l7336 1810                                      l7408 1644  
                                    l6296 0C82                                      l6288 0C60  
                                    l6800 0428                                      l6392 2956  
                                    l6634 07AE                                      l7354 1868  
                                    l6378 0E00                                      l6458 152E  
                                    l6802 042E                                      l6730 0132  
                                    l6660 25B2                                      l6652 0A8A  
                                    l6644 08F0                                      l7196 2410  
                                    l7188 23E0                                      l7268 19AA  
                                    l7364 189A                                      l6820 04FC  
                                    l6804 0442                                      l6718 2588  
                                    l6830 057E                                      l6822 0516  
                                    l6750 01F8                                      l6726 0104  
                                    l6734 0136                                      l6648 09AE  
                                    l7288 19F8                                      l6832 05CC  
                                    l6824 0530                                      l7480 1E34  
                                    l7472 1D6E                                      l6666 25CE  
                                    l7378 1572                                      l6906 2800  
                                    l6826 054A                                      l6818 04E2  
                                    l6834 05E8                                      l6746 01DA  
                                    l6668 25EC                                      l6692 251C  
                                    l7396 1604                                      l6860 068C  
                                    l6828 0564                                      l6844 05F4  
                                    l6764 023E                                      l6748 01F2  
                                    l6686 261C                                      l5982 2DBE  
                                    l5990 1A22                                      l6870 070E  
                                    l6862 06A6                                      l6766 0264  
                                    l6782 02C6                                      l6758 0232  
                                    l5968 2E2A                                      l6872 075C  
                                    l6864 06C0                                      l5976 2E00  
                                    l6698 253A                                      l5986 2DCE  
                                    l6970 2330                                      l6866 06DA  
                                    l6858 0672                                      l6874 0778  
                                    l6794 038A                                      l6786 02EE  
                                    l6778 0294                                      l6882 0784  
                                    l6980 238C                                      l6972 233A  
                                    l5996 1A8E                                      l6868 06F4  
                                    l6982 2396                                      l6974 2358  
                                    l6966 2322                                      l6978 236E  
                                    STR_1 7FE3                                      STR_2 7FFC  
                                    STR_3 7FF6                                      STR_4 7FEE  
                                    _CRC8 2B5A                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    u7004 0814                                      u7005 080C  
                                    u7110 25A8                                      u7014 088C  
                                    u6230 2644                                      u7015 0884  
                                    u7104 0B2A                                      u6320 1FE4  
                                    u7105 0B22                                      u7034 091E  
                                    u7035 0916                                      u7044 0942  
                                    u7045 093A                                      u6341 1298  
                                    u7064 09DA                                      u7065 09D2  
                                    u7170 2512                                      u7074 0A0E  
                                    u7075 0A06                                      i2l60 0E74  
                                    u8140 23D6                                      u7308 0158  
                                    u7309 016C                                      u7094 0AB8  
                                    u6630 2994                                      i2l71 0F28  
                                    i2l63 0EEA                                      u7095 0AB0  
                                    i2l72 0F38                                      u7408 0242  
                                    u7328 0176                                      u7248 00DE  
                                    u6624 2976                                      i2l65 0EF2  
                                    u7409 0256                                      u7329 018A  
                                    u7249 00F2                                      u6625 2970  
                                    i2l90 1016                                      i2l82 0FB8  
                                    i2l66 0EFA                                      u7338 0190  
                                    u7339 01A4                                      i2l76 0FA4  
                                    u7428 0268                                      u7348 01AA  
                                    u7268 010E                                      u8421 154E  
                                    u7429 027E                                      u7349 01BE  
                                    u7269 0122                                      i2l94 1048  
                                    i2l86 0FE8                                      u6718 1768  
                                    u8440 1598                                      u7720 27E0  
                                    u6728 13DE                                      u7608 0582  
                                    u7448 0298                                      u7368 01DE  
                                    u7288 013A                                      u6648 1694  
                                    i2l89 1004                                      u8361 17C0  
                                    u6729 13F2                                      u7481 032E  
                                    u7449 02AC                                      u7289 014E  
                                    u7618 05D0                                      u7538 04CC  
                                    u7458 02CA                                      u6658 16AE  
                                    u7459 02DE                                      u6748 1406  
                                    u7708 0712                                      u7548 04E6  
                                    u6668 16C8                                      u8381 17F2  
                                    u8445 158E                                      u6749 141A  
                                    u7750 283C                                      u6758 1422  
                                    u7718 0760                                      u7638 065C  
                                    u7558 0500                                      u6678 16E2  
                                    u6759 1436                                      u7744 281E  
                                    u6768 143E                                      u7648 0676  
                                    u7568 051A                                      u6688 16FC  
                                    u7745 2818                                      u6769 1452  
                                    u6778 145A                                      u7658 0690  
                                    u7578 0534                                      u6698 1722  
                                    u8650 1D82                                      u6779 146E  
                                    u6980 07E6                                      u7668 06AA  
                                    u7588 054E                                      u8660 1E32  
                                    u7678 06C4                                      u7598 0568  
                                    u7688 06DE                                      u7698 06F8  
                                    u8797 2D30                                      _TMR2 000FBC  
                                    _WPUB 000F61                                      _Buff 00F2  
                                    _main 1D4C                              ___ftpack@arg 001B  
                            ___ftpack@exp 001E                           _TMR0_StartTimer 3040  
                                    _time 00DD                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                  ??_I2C1_MasterTRBInsert 001F                                      btemp 0045  
                           __CFG_BORV$190 000000                                      pclat 000FFA  
                                    prodh 000FF4                                      prodl 000FF3  
         __end_of_FastTransfer_buffer_put 13DA                                      start 00D0  
                           __CFG_IESO$OFF 000000                              ___ftmul@cntr 00FB  
                            ___param_bank 000010                              ___ftmul@sign 00FC  
                         __end_of_Off_Led 219A            I2C1_MasterWriteTRBBuild@length 001F  
          i2UART_buff_modulo_inc@my_value 0005                          _handleIndicators 27CE  
                            ___fttol@exp1 0147                        __size_of_LEDsetBar 0406  
                            ___fttol@lval 0143                                     ?_CRC8 001B  
                 __end_of_TMR0_Initialize 2F2C                                _i2c1_state 0038  
                        __end_of_CRCcheck 1538            __size_of_OSCILLATOR_Initialize 000E  
               I2C1_MasterTRBInsert@count 0020             __end_of_OSCILLATOR_Initialize 302A  
               I2C1_MasterTRBInsert@pflag 001D                          LEDbegin@i2c_addr 013E  
                      crcBufS_put@address 001D                          __end_of_LEDbegin 24FC  
                                   ?_main 0001                           __end_of___awdiv 27CE  
                       __end_of_I2C1_Stop 2C6E                           __end_of___ftmul 18D8  
                                   _T0CON 000FD5                           ___awdiv@divisor 001D  
                         __end_of___fttol 167C                                     _T2CON 000FBA  
                                   _LATA3 007C4B                                     _LATB3 007C53  
                                   _LATD1 007C61                                     _LATB5 007C55  
                                   _LATE0 007C68                                     _LATE1 007C69  
                                   _LATE2 007C6A                            __CFG_DEBUG$OFF 000000  
                                   i2l320 005A                                     i2l322 0066  
                                   i2l324 0072                                     i2l332 0094  
                                   i2l326 007E                                     i2l318 004E  
                                   i2l328 008A                                     i2l452 123C  
                                   i2l463 10DE                                     i2l472 1102  
                                   i2l481 1166                                     i2l466 10EA  
                                   i2l491 118A                                     i2l475 110E  
                                   i2l459 10D2                                     i2l485 1172  
                                   i2l469 10F6                                     i2l494 1196  
                                   i2l488 117E                                     i2l497 11A2  
                         ___awdiv@counter 001F                                     _TMR0H 000FD7  
                                   _TMR0L 000FD6                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                                   _Delay 2D20              __end_of_I2C1_BusCollisionISR 304E  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                       ?_buttonsCollector 0021                      _EUSART1_Transmit_ISR 2D54  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                         ??_I2C1_Initialize 001B  
                        __end_of_TMR0_ISR 2A60                          __end_of_TMR2_ISR 303C  
                           __CFG_WRTB$OFF 000000                              ?_LEDsetValue 0149  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                                   _begin 2A60                            __CFG_EBTRB$OFF 000000  
                                   _brake 00C7                        ??_buttonsCollector 0023  
                                   _group 002C                        __CFG_MCLRE$EXTMCLR 000000  
                           ___ftpack@sign 001F                                     pclath 000FFA  
                                   tablat 000FF5                             ??_Receive_get 0026  
                    __size_of_crcBufS_get 00E2                                     plusw2 000FDB  
                          begin@stuffpeek 0144                      __size_of_crcBufS_put 00D8  
                                   status 000FD8                            __CFG_HFOFST$ON 000000  
                         _TMR2_StartTimer 303C                              ?_receiveData 0001  
                          SetLEDOut@state 0021                         ??_ReadButtonState 0003  
                          __CFG_PBADEN$ON 000000           I2C1_MasterWriteTRBBuild@address 0020  
                            __end_of_CRC8 2BA4                           CRCcheck@SentCRC 00F4  
                         __initialization 2846                     I2C1_MasterWrite@pdata 0024  
                   I2C1_MasterWrite@pflag 0029                __end_of_EUSART1_Initialize 2CE6  
                            __end_of_main 1E40                                ToSend@what 002A  
                                  ??_CRC8 001E                             ?_LEDblinkRate 00F4  
                 __end_of_TMR2_Initialize 2EF0                                 ??_ADC_ISR 0001  
             ?_INTERRUPT_InterruptManager 0001                          __end_of_OledFont 7FE3  
                             _i2c1_object 00B8                  _TMR2_SetInterruptHandler 302A  
                                  ??_main 002C                             ___fttol@sign1 0142  
                           __activetblptr 000002                          __end_of_Send_put 2DB4  
               __size_ofi2_UART_buff_size 0016                                    ?_Delay 001B  
                   ?_EUSART1_Transmit_ISR 0001             FastTransfer_buffer_put@towhat 0024  
                           ?_Receive_peek 0001                                    ?_begin 0139  
                 __end_of_TMR0_StartTimer 3044                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                        ___awdiv@dividend 001B                                    _ANSELA 000F38  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                                  _ANSELD 000F3B                                    _ANSELE 000F3C  
                        __end_of___ftpack 23C0                         __end_of_LEDsetBar 0B8E  
                         i2_UART_buff_get 26B8                                    _RC1STA 000FAB  
                                  i2l1162 2746                           i2_UART_buff_put 1B1C  
                                  i2l1193 2F52                            __CFG_WDTEN$OFF 000000  
                                  i2l5108 2742                                    Delay@x 001E  
             UART_buff_modulo_inc@modulus 001D                                    i2l4610 1C52  
                                  i2l4620 1CD4                                    i2l4612 1C6C  
                                  i2l4700 1230                                    i2l5094 1BA8  
                                  i2l7022 0ECC                                    i2l4622 1CEE  
                                  i2l4614 1C86                                    i2l5254 2A10  
                                  i2l4702 124C                                    i2l5088 1B3C  
                                  i2l7120 104E                                    i2l7104 101E  
                                  i2l7040 0F22                                    i2l4616 1CA0  
                                  i2l4608 1C38                                    i2l5272 2A5C  
                                  i2l5264 2A32                                    i2l7122 1052  
                                  i2l7034 0F0A                                    i2l7130 1066  
                                  i2l4618 1CBA                                    i2l4626 1D08  
                                  i2l5258 2A20                                    i2l5284 2D7E  
                                  i2l7124 105A                                    i2l7108 1026  
                                  i2l4558 2E54                                    i2l7054 0F66  
                                  i2l4680 10B6                                    i2l7082 0FCA  
                                  i2l7074 0FB2                                    i2l7092 0FF0  
                                  i2l4692 11AE                                    i2l4694 11E4  
                                  i2l4686 111A                                    i2l4688 1150  
                                  i2l4698 1200                            _GetButtonState 2E5E  
                                  i2l6574 2F7C                                    i2l6566 2C68  
                                  _RCREG1 000FAE                          __end_of___lwtoft 2ECE  
                                  _OSCCON 000FD3                                    _SPBRG1 000FAF  
                                  _TX1STA 000FAC                                    _TXREG1 000FAD  
                               ??_Off_Led 001D                        __size_of_SetLEDOut 02AA  
                       ?_I2C1_MasterWrite 0024                            __CFG_XINST$OFF 000000  
                                  _ToSend 2EF0                        ??_I2C1_MasterWrite 002B  
                     __end_of_Receive_get 301C                          crcBufS_get@_this 001B  
             ??_FastTransfer_buffer_flush 0027                            _p_i2c1_current 00D1  
                           _output_buffer 0500                          crcBufS_get@space 001E  
                               ??___awdiv 001F                                 CRC8@tempI 0020  
                          __CFG_STVREN$ON 000000                                 ??___ftmul 00F4  
                               ??___fttol 013D                            ??_LEDblinkRate 002B  
              ??_I2C1_MasterWriteTRBBuild 0022                          ?_TMR0_Initialize 0001  
                                  _setLED 219A                                    _memset 2DB4  
                               ?_I2C1_ISR 0001                                    clear_0 284C  
                                  clear_1 2858                                    clear_2 2864  
                                  clear_3 2870                                    clear_4 287C  
                                  clear_5 2888                                    clear_6 2894  
                        ___awdiv@quotient 0021                                    _rx_len 003F  
                        __end_of_sendData 17AC                     ___ftmul@f3_as_product 00F8  
                            __pdataCOMRAM 0044                             Send_put@_data 0026  
                            __mediumconst 7CE2                            ??_Receive_peek 001F  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8          __size_of_FastTransfer_buffer_put 0168  
            __end_of_UART_buff_modulo_inc 2E34                     __end_of_TMR0_CallBack 304C  
                 __end_of_TMR2_StartTimer 3040  TMR2_SetInterruptHandler@InterruptHandler 001B  
                  __end_of_GetButtonState 2E86             I2C1_MasterWriteTRBBuild@pdata 001D  
                      LEDblinkRate@status 00FB             __size_of_INTERRUPT_Initialize 0012  
                         SetLEDOut@lednum 001F                         _SYSTEM_Initialize 28BA  
                              __accesstop 0060                   __end_of__initialization 28AC  
                               ?_CRCcheck 0001                     __end_of_TMR2_CallBack 1272  
                      ?_SYSTEM_Initialize 0001                                 ?_LEDbegin 0001  
                           ___rparam_used 000001                   ?i2_UART_buff_modulo_inc 0001  
                          _i2c1_trb_count 0039                              ?_updateComms 0001  
                            TBbarGraphs@b 001D                              TBbarGraphs@t 001B  
                           __end_of_Delay 2D54                                ___ftmul@f1 0026  
                              ___ftmul@f2 0029                     _I2C1_FunctionComplete 2F68  
                    _I2C1_BusCollisionISR 304C                                ___fttol@f1 0139  
                  LEDwriteDisplay@timeOut 014E                            __pcstackCOMRAM 0001  
                  I2C1_MasterWrite@length 0026                        _crcBufS_status_put 1FFA  
                     ??_SYSTEM_Initialize 0025                          crcBufS_put@_this 001B  
                           __end_of_begin 2ABE                                 ?_TMR0_ISR 0001  
                               ?_TMR2_ISR 0001    __end_of_FastTransfer_buffer_modulo_inc 2E0A  
 __size_of_FastTransfer_buffer_modulo_inc 002A            _FastTransfer_buffer_modulo_inc 2DE0  
                              ??_I2C1_ISR 0004                          ?_TMR2_Initialize 0001  
            FastTransfer_buffer_put@_this 0021                               ToSend@where 00F4  
                              ___lwtoft@c 0023                        UART_buff_get@_this 0021  
                     ?_crcBufS_status_put 001B                     __end_of_UART_buff_get 26B8  
                  ??_EUSART1_Transmit_ISR 000C                     __end_of_UART_buff_put 1B1C  
                       __end_of_SetLEDOut 0E38                     TMR0_ISR@CountCallBack 00C1  
                                 ??_Delay 001D                            LEDbegin@status 013F  
                 __end_ofi2_UART_buff_get 274A                   __end_ofi2_UART_buff_put 1C36  
                            ?_TBbarGraphs 001B               __end_of_EUSART1_Receive_ISR 2F68  
               _FastTransfer_buffer_flush 299E                                   CRC8@crc 0021  
                                 CRC8@len 001D                                   CRC8@sum 001E  
                                 ??_begin 0023                          ?_TMR0_StartTimer 0001  
                         ?_GetButtonState 001B                 __end_of_SYSTEM_Initialize 292E  
                __end_of_handleIndicators 2846                    receiveData@holder_2354 0142  
                     _addressErrorCounter 00C3                      __size_of_LEDsetValue 00A4  
                              __pbssBANK0 0060                                __pbssBANK1 0100  
                              __pbssBANK2 0200                                __pbssBANK3 0300  
                              __pbssBANK4 0400                                __pbssBANK5 0500  
                         __CFG_PLLCFG$OFF 000000                               _Receive_get 300E  
                              ??_CRCcheck 0027                      ??_crcBufS_status_put 001F  
          __end_ofi2_UART_buff_modulo_inc 2E5E                                __pnvCOMRAM 0042  
                       begin@givenAddress 013C                   __size_of_UART_buff_init 001E  
                 __size_of_UART_buff_peek 0024                                ??_LEDbegin 002B  
                 __size_of_UART_buff_size 0016                                 ?_Send_put 0001  
                   ?_I2C1_BusCollisionISR 0001                      __size_of_receiveData 06B4  
                                 ?_ToSend 002A                        __CFG_CCP2MX$PORTC1 000000  
                __size_of_LEDwriteDisplay 012A                                ??_TMR0_ISR 0005  
                              ??_TMR2_ISR 0005                        __CFG_CCP3MX$PORTB5 000000  
     FastTransfer_buffer_modulo_inc@value 001B                           _I2C1_Initialize 2C6E  
                                 _ADC_ISR 3044                                   ?_setLED 001B  
                                 ?_memset 001B                                _crc_buffer 0128  
                               ?___ftpack 001B                                 TMR0_ISR@x 0005  
                 __size_of_ADC_Initialize 0018                                 ?___lwtoft 0023  
                      UART_buff_put@_this 0021                          i2_UART_buff_size 2FC6  
             i2UART_buff_modulo_inc@value 0001                                   _OSCCON2 000FD2  
                               _I2C1_Stop 2C2C                         _Receive_available 2F9A  
            UART_buff_modulo_inc@my_value 001F                         __CFG_PRICLKEN$OFF 000000  
                                 _OSCTUNE 000F9B                                   _SPBRGH1 000FB0  
                                 _SSP1ADD 000FC8                       sendData@whereToSend 0028  
                         _ReadButtonState 1C36                       _receiveArrayAddress 00D5  
                                 _SSP1BUF 000FC9                          ?_TMR2_StartTimer 0001  
                      ?_Receive_available 001D                                begin@error 013D  
                    __end_of_LEDblinkRate 2592             I2C1_MasterTRBInsert@ptrb_list 001B  
                                 _Off_Led 20D0                       ??_Receive_available 001F  
                               ?_sendData 0001                         _alignErrorCounter 00C5  
                         __CFG_PWRTEN$OFF 000000                 __size_of_buttonsCollector 0070  
                  ?_I2C1_FunctionComplete 0001                                ??_Send_put 0026  
                                 __Hparam 0000             __size_of_I2C1_MasterTRBInsert 00BA  
                                 __Lparam 0000                ??_TMR2_SetInterruptHandler 001D  
                         __size_of_ToSend 001E                        _p_i2c1_trb_current 00D3  
                    __end_of_Receive_peek 300E                                 _AKNAKsend 0036  
                                 ___awdiv 274A                      _UART_buff_modulo_inc 2E0A  
                                 ___ftmul 17AC                                   ___fttol 1538  
                                 _calc_CS 0037                                   __pcinit 2846  
                              ??___ftpack 0020                           __size_of_setLED 00BE  
                         __size_of_memset 002C                                   __ramtop 0600  
                        i2UART_buff_get@c 000B                                   __ptext0 1D4C  
                                 __ptext1 2CE6                                   __ptext2 2BA4  
                                 __ptext3 167C                                   __ptext4 1F22  
                                 __ptext5 299E                                   __ptext6 292E  
                                 __ptext7 2E5E                                   __ptext8 2EF0  
                                 __ptext9 1272                                ??___lwtoft 0026  
                               _T0CONbits 000FD5                          i2UART_buff_put@c 0009  
                   _OSCILLATOR_Initialize 301C                 __end_of_Receive_available 2FB0  
                               _T2CONbits 000FBA                   _FastTransfer_buffer_put 1272  
                   CRCcheck@calculatedCRC 00F5                        _EUSART1_Initialize 2CAA  
                        ?i2_UART_buff_get 0007                  ??_PIN_MANAGER_Initialize 001B  
                        ?i2_UART_buff_put 0007                                ?_I2C1_Stop 0001  
            crcBufS_status_put@wantedTime 0023                                   _timeOut 00DF  
                          TMR2_CallBack@i 0003                             ??_crcBufS_get 001F  
                           ??_crcBufS_put 0020                __size_of_SYSTEM_Initialize 0074  
                    I2C1_ISR@pi2c_buf_ptr 00BF                      end_of_initialization 28AC  
                               Delay@wait 001B                       ?_EUSART1_Initialize 0001  
                 LEDwriteDisplay@i2c_addr 014D                                 _LED_array 0088  
                                 memset@c 001D                                   memset@n 001F  
                                 memset@p 0021                              LEDsetBar@bar 0023  
                           __Lmediumconst 7CE2                                 _LEDsetBar 0788  
                  ??_I2C1_BusCollisionISR 0001                                ??_sendData 0027  
                 __end_of_I2C1_Initialize 2CAA                     ?_UART_buff_modulo_inc 001B  
                    __size_of_updateComms 003A                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc2 000FDE  
                              _respondECU 2BA4                     ReadButtonState@btnnum 0001  
                        begin@stufftosend 013E                       CRCcheck@arrayHolder 00F6  
                            LEDsetValue@k 014D                      ??_EUSART1_Initialize 0025  
                     LEDblinkRate@timeOut 00F9                                 _PORTAbits 000F80  
                               _PORTBbits 000F81                                 _PORTDbits 000F83  
                       ??_LEDwriteDisplay 002B                   __end_of_ReadButtonState 1D4C  
               __size_of_I2C1_MasterWrite 004C                    _dataAdressErrorCounter 00CB  
                       __size_of_I2C1_ISR 0274                                _rx_address 003D  
                               _TRISCbits 000F94                      __size_of_TBbarGraphs 0012  
                 LEDBsetBrightness@status 00FB         I2C1_ISR@i2c_10bit_address_restart 0034  
                     LEDbegin@writeBuffer 0139                              begin@maxSize 013B  
      __size_of_FastTransfer_buffer_flush 0062                     i2UART_buff_size@_this 0001  
                          _UART_buff_init 2F2C                            _UART_buff_peek 2E86  
                          _UART_buff_size 2FB0                       __end_of_crcBufS_get 1F22  
                              ?_LEDsetBar 0023                       __end_of_crcBufS_put 1FFA  
                 I2C1_MasterWrite@address 0027                         __size_of_CRCcheck 015E  
               LEDBsetBrightness@i2c_addr 00F6                               ___ftmul@exp 00F7  
                       __size_of_LEDbegin 0098                             _moduleAddress 003B  
                    _timer0ReloadVal16bit 0042                                CRCcheck@rt 00F9  
                          __end_of_ToSend 2F0E              __end_of_INTERRUPT_Initialize 3000  
    __end_of_TMR2_DefaultInterruptHandler 304A     __size_of_TMR2_DefaultInterruptHandler 0002  
            _TMR2_DefaultInterruptHandler 3048                           _crcErrorCounter 00C9  
                 I2C1_MasterWrite@trBlock 00E8                         crcBufS_put@oldCRC 001E  
                           __pidataCOMRAM 304E                         __size_of_TMR0_ISR 0060  
                I2C1_Stop@completion_code 0003                         __size_of_TMR2_ISR 0008  
                          _ADC_Initialize 2F82                 ??_FastTransfer_buffer_put 0026  
                  ?_OSCILLATOR_Initialize 0001                            __end_of_setLED 2258  
                          __end_of_memset 2DE0                         crcBufS_put@status 001F  
                 buttonsCollector@sendVal 0026                              receiveData@r 0149  
              __size_of_Receive_available 0016                              receiveData@u 0147  
                        ??_GetButtonState 001D                         _LEDBsetBrightness 2592  
                     start_initialization 2846                     __size_of_LEDblinkRate 0096  
                             ??_I2C1_Stop 0001                  __size_of_TMR0_Initialize 001E  
         __size_of_PIN_MANAGER_Initialize 0050                     crcBufS_get@wantedTime 0025  
                      ?_LEDBsetBrightness 00F4                                 _SetLEDOut 0B8E  
       __size_of_I2C1_MasterWriteTRBBuild 0044                         ?_handleIndicators 0025  
               ?_I2C1_MasterWriteTRBBuild 001B                    __end_of_UART_buff_init 2F4A  
                  __end_of_UART_buff_peek 2EAA                            UART_buff_get@c 0025  
                  __end_of_UART_buff_size 2FC6                              ?_Receive_get 0001  
                          UART_buff_put@c 0023                        ??_handleIndicators 0027  
                         LEDbegin@timeOut 013C                       ??_LEDBsetBrightness 002B  
                   __size_of_Receive_peek 000E                          _buttonsCollector 292E  
                __end_ofi2_UART_buff_size 2FDC                          ?_I2C1_Initialize 0001  
                                ??_ToSend 002C                    ??_UART_buff_modulo_inc 001F  
                                CRC8@data 001B                           crcBufS_get@time 001D  
                       __size_of_Send_put 002E                               ?_respondECU 0001  
              LEDwriteDisplay@writeBuffer 0139                    __size_of_TMR0_CallBack 0002  
                  __end_of_ADC_Initialize 2F9A                                LEDsetBar@a 0029  
                              LEDsetBar@c 0027                                  ?_ADC_ISR 0001  
                                ??_setLED 001D                                  ??_memset 0021  
                            _LEDblinkRate 24FC                         handleIndicators@i 002A  
           ?_TMR2_DefaultInterruptHandler 0001                 __end_of_LEDBsetBrightness 2626  
            I2C1_MasterWriteTRBBuild@ptrb 001B                          ?_ReadButtonState 0001  
                       __size_of___ftpack 00AE                    __size_of_TMR2_CallBack 01C6  
                             __pbssCOMRAM 002C                         __size_of___lwtoft 0024  
           __size_of_EUSART1_Transmit_ISR 0032                             __pcstackBANK0 00F4  
                           __pcstackBANK1 0139                             ??_LEDsetValue 00FD  
                __size_of_TMR2_Initialize 0022                             _i2c1_tr_queue 00ED  
                   LEDwriteDisplay@status 0150                              _Receive_peek 3000  
                              ?_SetLEDOut 001F                       UART_buff_init@_this 0023  
                             _crcBufS_get 1E40                       UART_buff_peek@_this 001B  
                             _crcBufS_put 1F22                          LEDsetValue@color 014B  
                         ?_UART_buff_init 0023                           ?_UART_buff_peek 001B  
                         ?_UART_buff_size 001B                          LEDsetValue@value 0149  
                 ??_I2C1_FunctionComplete 0001              __size_of_EUSART1_Receive_ISR 001E  
                           ??_receiveData 0139               __size_of_crcBufS_status_put 00D6  
                              sendData@CS 0029                                  ?_Off_Led 001B  
                             ??_LEDsetBar 0139                                 __pnvBANK0 00FE  
                __size_of_TMR0_StartTimer 0004                    __size_of_UART_buff_get 0092  
                  __size_of_UART_buff_put 011A                    _PIN_MANAGER_Initialize 2ABE  
                       __size_of_sendData 0130                                 __pintcode 0008  
                           __pmediumconst 7CE2                                  ?___awdiv 001B  
                                ?___ftmul 0026                                  ?___fttol 0139  
                         ?_ADC_Initialize 0001                                  _I2C1_ISR 0E38  
            ??_INTERRUPT_InterruptManager 000D              LEDBsetBrightness@writeBuffer 00F7  
                    i2UART_buff_get@_this 0007                          _I2C1_MasterWrite 2B0E  
                                _BAUD1CON 000FB8              __end_of_I2C1_MasterTRBInsert 2312  
                       buttonsCollector@i 0028                            __size_of_Delay 0034  
                               _butnarray 00B0                            __size_of_begin 005E  
                           _TMR0_CallBack 304A                       __size_of_respondECU 0044  
                    _INTERRUPT_Initialize 2FEE                      GetButtonState@btnnum 001B  
                            _receiveArray 0100                               _LEDNUM_ENAB 0098  
                  I2C1_MasterRead@trBlock 00E3                         ??_TMR0_Initialize 001B  
                     __end_of_LEDsetValue 2464                                  _CRCcheck 13DA  
                                _LATCbits 000F8B                                  _LEDState 00A4  
                     UART_buff_size@_this 001B                             _TMR2_CallBack 10AC  
                                _IPR1bits 000F9F                                  _LEDbegin 2464  
                                _IPR2bits 000FA2                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                             LEDblinkRate@b 00F4  
                __size_of_TMR2_StartTimer 0004                           _LEDwriteDisplay 18D8  
     __size_of_INTERRUPT_InterruptManager 00C8                                  i2u400_40 10F2  
                                i2u410_40 117A                                  i2u402_40 10FE  
                                i2u412_40 1186                                  i2u404_40 110A  
                                i2u414_40 1192                                  i2u406_40 1116  
                                i2u422_48 125C                                  i2u520_40 26D6  
                                i2u416_40 119E                                  i2u408_40 116E  
                                _PIR1bits 000F9E                                  i2u418_40 11AA  
                                _PIR2bits 000FA1                                  i2u540_40 2D6E  
                                i2u390_40 1C9A                                  i2u390_46 1C9C  
                                i2u391_40 1CB4                                  i2u391_46 1CB6  
                                i2u392_40 1CCE                                  i2u392_46 1CD0  
                                i2u393_40 1CE8                                  i2u393_46 1CEA  
                                i2u394_40 1D02                                  i2u538_40 2A4E  
                                i2u394_46 1D04                                  i2u387_40 1C4C  
                                i2u387_46 1C4E                                  i2u388_40 1C66  
                                i2u396_40 10DA                                  i2u388_46 1C68  
                                i2u389_40 1C80                                  i2u389_46 1C82  
                                i2u398_40 10E6                       begin@stuffavailable 0142  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                     __end_of_receiveData 0788                                  _SSP1CON1 000FC6  
                                _SSP1CON3 000FCB                                  _TMR0_ISR 2A00  
                                _TMR2_ISR 3034                                 main@ADCNT 0151  
                                _SSP1STAT 000FC7            FastTransfer_buffer_flush@_this 0023  
                            _input_buffer 0400                                 _rx_buffer 0300  
                        __size_of_ADC_ISR 0004                                _ADCON0bits 000FC2  
              __size_of_LEDBsetBrightness 0094                      i2UART_buff_put@_this 0007  
                           _UART_buff_get 2626                             _UART_buff_put 1A02  
          ??_TMR2_DefaultInterruptHandler 0001         __size_of_TMR2_SetInterruptHandler 000A  
               ?_TMR2_SetInterruptHandler 001B                            ?_TMR0_CallBack 0001  
                ??i2_UART_buff_modulo_inc 0005                               ??_SetLEDOut 0023  
                             _INTCON2bits 000FF1                     ?_INTERRUPT_Initialize 0001  
                       _sendStructAddress 00D7                  __size_ofi2_UART_buff_get 0092  
                       ??_TMR2_Initialize 001D                  __size_ofi2_UART_buff_put 011A  
                                _OledFont 7CE3                            ?_TMR2_CallBack 0001  
                           ??_updateComms 002C                      __size_of_Receive_get 000E  
                        __size_of_Off_Led 00CA                                  __Hrparam 0000  
                                _Send_put 2D86             __size_of_I2C1_BusCollisionISR 0002  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                               setLED@led 001B                    I2C1_ISR@i2c_bytes_left 0035  
                       __CFG_P2BMX$PORTD2 000000                   LEDblinkRate@writeBuffer 00F7  
                 ??_OSCILLATOR_Initialize 001B                         ??_TMR0_StartTimer 001B  
                          LEDsetBar@color 0025                          __size_of___awdiv 0084  
                        __size_of___ftmul 012C                          __size_of___fttol 0144  
             __size_of_EUSART1_Initialize 003C                       begin@stufftoreceive 0140  
                                ___ftpack 2312          __end_of_I2C1_MasterWriteTRBBuild 2C2C  
                                ___lwtoft 2EAA                            ?_UART_buff_get 0021  
                          ?_UART_buff_put 0021                               CRC8@extract 001F  
                __end_of_buttonsCollector 299E                                 sendData@i 002A  
                           ??_TBbarGraphs 001F                       I2C1_ISR@i2c_address 0040  
                             _LEDsetValue 23C0                  crcBufS_status_put@status 001E  
                                __ptext10 2DE0                                  __ptext11 2D20  
                                __ptext20 300E                                  __ptext12 00D4  
                                __ptext21 2626                                  __ptext13 2D86  
                                __ptext30 2FDC                                  __ptext22 2E0A  
                                __ptext14 1A02                                  __ptext31 2EAA  
                                __ptext23 2F9A                                  __ptext15 3000  
                                __ptext40 2F0E                                  __ptext32 1538  
                                __ptext24 2FB0                                  __ptext16 2E86  
                                __ptext41 3040                                  __ptext33 17AC  
                                __ptext25 2B5A                                  __ptext17 13DA  
                                __ptext50 18D8                                  __ptext42 2ABE  
                                __ptext34 2312                                  __ptext26 27CE  
                                __ptext18 1FFA                                  __ptext51 23C0  
                                __ptext43 301C                                  __ptext35 28BA  
                                __ptext27 0B8E                                  __ptext19 1E40  
                                __ptext52 0788                                  __ptext44 2FEE  
                                __ptext36 2A60                                  __ptext28 219A  
                                __ptext61 3034                                  __ptext53 274A  
                                __ptext45 2C6E                                  __ptext37 2ECE  
                                __ptext29 20D0                                  __ptext70 304C  
                                __ptext62 10AC                                  __ptext54 2464  
                                __ptext46 2CAA                                  __ptext38 303C  
                                __ptext71 2D54                                  __ptext63 3048  
                                __ptext55 24FC                                  __ptext47 2F2C  
                                __ptext39 302A                                  __ptext72 2FC6  
                                __ptext64 2A00                                  __ptext56 2592  
                                __ptext48 2DB4                                  __ptext73 26B8  
                                __ptext65 304A                                  __ptext57 2B0E  
                                __ptext49 2F82                                  __ptext74 2F4A  
                                __ptext66 1C36                                  __ptext58 2BE8  
                                __ptext75 1B1C                                  __ptext67 0E38  
                                __ptext59 2258                                  __ptext76 2E34  
                                __ptext68 2C2C                                  __ptext77 3044  
                                __ptext69 2F68                                  __ptext78 0000  
                            _SSP1CON1bits 000FC6                              _SSP1CON2bits 000FC5  
                           __size_of_CRC8 004A                                  begin@ptr 0139  
                 EUSART1_Receive_ISR@data 000C                   __end_of_LEDwriteDisplay 1A02  
                           _returnAddress 003C                             __size_of_main 00F4  
                             _receiveData 00D4                            _Transmit_stall 0044  
                                _sendData 167C                      _I2C1_MasterTRBInsert 2258  
                       ?i2_UART_buff_size 0001                                _RC1STAbits 000FAB  
                    LEDblinkRate@i2c_addr 00F6                              ??_respondECU 002C  
                      ??i2_UART_buff_size 0003                                  int$flags 0045  
               __size_of_handleIndicators 0078             handleIndicators@oldIndicators 00E1  
                            _serial_write 0032                                  _throttle 00DB  
                       ??_TMR2_StartTimer 001B                       __end_of_updateComms 2D20  
      __end_of_INTERRUPT_InterruptManager 00D0                _INTERRUPT_InterruptManager 0008  
                     _EUSART1_Receive_ISR 2F4A                         receiveData@holder 013F  
                      LEDBsetBrightness@b 00F4                                _INTCONbits 000FF2  
                         ??_TMR0_CallBack 0001                 UART_buff_modulo_inc@value 001B  
      handleIndicators@receivedIndicators 0025                          ??_UART_buff_init 0025  
                        ??_UART_buff_peek 001D                          ??_UART_buff_size 001D  
                  ??_INTERRUPT_Initialize 001B                                  memset@p1 001B  
                        _serial_available 002E           __size_ofi2_UART_buff_modulo_inc 002A  
                            ?_crcBufS_get 001B                              ?_crcBufS_put 001B  
                                intlevel2 0000                   crcBufS_status_put@_this 001B  
                         ??_TMR2_CallBack 0001                        __end_of_respondECU 2BE8  
                     __end_of_TBbarGraphs 2FEE                      ?_EUSART1_Receive_ISR 0001  
  FastTransfer_buffer_modulo_inc@my_value 001F            FastTransfer_buffer_put@towhere 0023  
                 ?_PIN_MANAGER_Initialize 0001                  __end_of_I2C1_MasterWrite 2B5A  
          __size_of_I2C1_FunctionComplete 001A             __end_of_I2C1_FunctionComplete 2F82  
                   ?_I2C1_MasterTRBInsert 001B              __end_of_EUSART1_Transmit_ISR 2D86  
                             _ring_buffer 0200                          ??_ADC_Initialize 001B  
              ?_FastTransfer_buffer_flush 0023                         ??i2_UART_buff_get 0009  
                             _serial_peek 00D9                               _serial_read 0030  
                       ??i2_UART_buff_put 000A                  ?_FastTransfer_buffer_put 0021  
           __size_of_UART_buff_modulo_inc 002A                  __size_of_I2C1_Initialize 003C  
                         ??_UART_buff_get 0023                           ??_UART_buff_put 0024  
   FastTransfer_buffer_modulo_inc@modulus 001D                    crcBufS_status_put@time 001D  
                         _TMR0_Initialize 2F0E                 receiveData@crcHolder_2355 0146  
                _I2C1_MasterWriteTRBBuild 2BE8                         __CFG_T3CMX$PORTC0 000000  
                          _maxDataAddress 003A                  __size_of_ReadButtonState 0116  
              __end_of_crcBufS_status_put 20D0                     ??_EUSART1_Receive_ISR 000C  
          __end_of_PIN_MANAGER_Initialize 2B0E          ??_FastTransfer_buffer_modulo_inc 001F  
         ?_FastTransfer_buffer_modulo_inc 001B                          ?_LEDwriteDisplay 0001  
                 __size_of_GetButtonState 0028                        __size_of_I2C1_Stop 0042  
                           _displaybuffer 0060                         __CFG_FOSC$INTIO67 000000  
                   _TMR2_InterruptHandler 00FE                               _updateComms 2CE6  
