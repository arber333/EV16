

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat May 21 12:19:10 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   102                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   103  0000                     
   104                           	psect	idataCOMRAM
   105  003068                     __pidataCOMRAM:
   106                           	opt stack 0
   107                           
   108                           ;initializer for _Transmit_stall
   109  003068  01                 	db	1
   110                           
   111                           	psect	mediumconst
   112  007CE2                     __pmediumconst:
   113                           	opt stack 0
   114  007CE2  00                 	db	0
   115  007CE3                     _OledFont:
   116                           	opt stack 0
   117  007CE3  00                 	db	0
   118  007CE4  00                 	db	0
   119  007CE5  00                 	db	0
   120  007CE6  00                 	db	0
   121  007CE7  00                 	db	0
   122  007CE8  00                 	db	0
   123  007CE9  00                 	db	0
   124  007CEA  00                 	db	0
   125  007CEB  00                 	db	0
   126  007CEC  00                 	db	0
   127  007CED  5F                 	db	95
   128  007CEE  00                 	db	0
   129  007CEF  00                 	db	0
   130  007CF0  00                 	db	0
   131  007CF1  00                 	db	0
   132  007CF2  00                 	db	0
   133  007CF3  00                 	db	0
   134  007CF4  00                 	db	0
   135  007CF5  07                 	db	7
   136  007CF6  00                 	db	0
   137  007CF7  07                 	db	7
   138  007CF8  00                 	db	0
   139  007CF9  00                 	db	0
   140  007CFA  00                 	db	0
   141  007CFB  00                 	db	0
   142  007CFC  14                 	db	20
   143  007CFD  7F                 	db	127
   144  007CFE  14                 	db	20
   145  007CFF  7F                 	db	127
   146  007D00  14                 	db	20
   147  007D01  00                 	db	0
   148  007D02  00                 	db	0
   149  007D03  00                 	db	0
   150  007D04  24                 	db	36
   151  007D05  2A                 	db	42
   152  007D06  7F                 	db	127
   153  007D07  2A                 	db	42
   154  007D08  12                 	db	18
   155  007D09  00                 	db	0
   156  007D0A  00                 	db	0
   157  007D0B  00                 	db	0
   158  007D0C  23                 	db	35
   159  007D0D  13                 	db	19
   160  007D0E  08                 	db	8
   161  007D0F  64                 	db	100
   162  007D10  62                 	db	98
   163  007D11  00                 	db	0
   164  007D12  00                 	db	0
   165  007D13  00                 	db	0
   166  007D14  36                 	db	54
   167  007D15  49                 	db	73
   168  007D16  55                 	db	85
   169  007D17  22                 	db	34
   170  007D18  50                 	db	80
   171  007D19  00                 	db	0
   172  007D1A  00                 	db	0
   173  007D1B  00                 	db	0
   174  007D1C  00                 	db	0
   175  007D1D  05                 	db	5
   176  007D1E  03                 	db	3
   177  007D1F  00                 	db	0
   178  007D20  00                 	db	0
   179  007D21  00                 	db	0
   180  007D22  00                 	db	0
   181  007D23  00                 	db	0
   182  007D24  1C                 	db	28
   183  007D25  22                 	db	34
   184  007D26  41                 	db	65
   185  007D27  00                 	db	0
   186  007D28  00                 	db	0
   187  007D29  00                 	db	0
   188  007D2A  00                 	db	0
   189  007D2B  00                 	db	0
   190  007D2C  41                 	db	65
   191  007D2D  22                 	db	34
   192  007D2E  1C                 	db	28
   193  007D2F  00                 	db	0
   194  007D30  00                 	db	0
   195  007D31  00                 	db	0
   196  007D32  00                 	db	0
   197  007D33  00                 	db	0
   198  007D34  08                 	db	8
   199  007D35  2A                 	db	42
   200  007D36  1C                 	db	28
   201  007D37  2A                 	db	42
   202  007D38  08                 	db	8
   203  007D39  00                 	db	0
   204  007D3A  00                 	db	0
   205  007D3B  00                 	db	0
   206  007D3C  08                 	db	8
   207  007D3D  08                 	db	8
   208  007D3E  3E                 	db	62
   209  007D3F  08                 	db	8
   210  007D40  08                 	db	8
   211  007D41  00                 	db	0
   212  007D42  00                 	db	0
   213  007D43  00                 	db	0
   214  007D44  A0                 	db	160
   215  007D45  60                 	db	96
   216  007D46  00                 	db	0
   217  007D47  00                 	db	0
   218  007D48  00                 	db	0
   219  007D49  00                 	db	0
   220  007D4A  00                 	db	0
   221  007D4B  00                 	db	0
   222  007D4C  08                 	db	8
   223  007D4D  08                 	db	8
   224  007D4E  08                 	db	8
   225  007D4F  08                 	db	8
   226  007D50  08                 	db	8
   227  007D51  00                 	db	0
   228  007D52  00                 	db	0
   229  007D53  00                 	db	0
   230  007D54  60                 	db	96
   231  007D55  60                 	db	96
   232  007D56  00                 	db	0
   233  007D57  00                 	db	0
   234  007D58  00                 	db	0
   235  007D59  00                 	db	0
   236  007D5A  00                 	db	0
   237  007D5B  00                 	db	0
   238  007D5C  20                 	db	32
   239  007D5D  10                 	db	16
   240  007D5E  08                 	db	8
   241  007D5F  04                 	db	4
   242  007D60  02                 	db	2
   243  007D61  00                 	db	0
   244  007D62  00                 	db	0
   245  007D63  00                 	db	0
   246  007D64  3E                 	db	62
   247  007D65  51                 	db	81
   248  007D66  49                 	db	73
   249  007D67  45                 	db	69
   250  007D68  3E                 	db	62
   251  007D69  00                 	db	0
   252  007D6A  00                 	db	0
   253  007D6B  00                 	db	0
   254  007D6C  00                 	db	0
   255  007D6D  42                 	db	66
   256  007D6E  7F                 	db	127
   257  007D6F  40                 	db	64
   258  007D70  00                 	db	0
   259  007D71  00                 	db	0
   260  007D72  00                 	db	0
   261  007D73  00                 	db	0
   262  007D74  62                 	db	98
   263  007D75  51                 	db	81
   264  007D76  49                 	db	73
   265  007D77  49                 	db	73
   266  007D78  46                 	db	70
   267  007D79  00                 	db	0
   268  007D7A  00                 	db	0
   269  007D7B  00                 	db	0
   270  007D7C  22                 	db	34
   271  007D7D  41                 	db	65
   272  007D7E  49                 	db	73
   273  007D7F  49                 	db	73
   274  007D80  36                 	db	54
   275  007D81  00                 	db	0
   276  007D82  00                 	db	0
   277  007D83  00                 	db	0
   278  007D84  18                 	db	24
   279  007D85  14                 	db	20
   280  007D86  12                 	db	18
   281  007D87  7F                 	db	127
   282  007D88  10                 	db	16
   283  007D89  00                 	db	0
   284  007D8A  00                 	db	0
   285  007D8B  00                 	db	0
   286  007D8C  27                 	db	39
   287  007D8D  45                 	db	69
   288  007D8E  45                 	db	69
   289  007D8F  45                 	db	69
   290  007D90  39                 	db	57
   291  007D91  00                 	db	0
   292  007D92  00                 	db	0
   293  007D93  00                 	db	0
   294  007D94  3C                 	db	60
   295  007D95  4A                 	db	74
   296  007D96  49                 	db	73
   297  007D97  49                 	db	73
   298  007D98  30                 	db	48
   299  007D99  00                 	db	0
   300  007D9A  00                 	db	0
   301  007D9B  00                 	db	0
   302  007D9C  01                 	db	1
   303  007D9D  71                 	db	113
   304  007D9E  09                 	db	9
   305  007D9F  05                 	db	5
   306  007DA0  03                 	db	3
   307  007DA1  00                 	db	0
   308  007DA2  00                 	db	0
   309  007DA3  00                 	db	0
   310  007DA4  36                 	db	54
   311  007DA5  49                 	db	73
   312  007DA6  49                 	db	73
   313  007DA7  49                 	db	73
   314  007DA8  36                 	db	54
   315  007DA9  00                 	db	0
   316  007DAA  00                 	db	0
   317  007DAB  00                 	db	0
   318  007DAC  06                 	db	6
   319  007DAD  49                 	db	73
   320  007DAE  49                 	db	73
   321  007DAF  29                 	db	41
   322  007DB0  1E                 	db	30
   323  007DB1  00                 	db	0
   324  007DB2  00                 	db	0
   325  007DB3  00                 	db	0
   326  007DB4  00                 	db	0
   327  007DB5  36                 	db	54
   328  007DB6  36                 	db	54
   329  007DB7  00                 	db	0
   330  007DB8  00                 	db	0
   331  007DB9  00                 	db	0
   332  007DBA  00                 	db	0
   333  007DBB  00                 	db	0
   334  007DBC  00                 	db	0
   335  007DBD  AC                 	db	172
   336  007DBE  6C                 	db	108
   337  007DBF  00                 	db	0
   338  007DC0  00                 	db	0
   339  007DC1  00                 	db	0
   340  007DC2  00                 	db	0
   341  007DC3  00                 	db	0
   342  007DC4  08                 	db	8
   343  007DC5  14                 	db	20
   344  007DC6  22                 	db	34
   345  007DC7  41                 	db	65
   346  007DC8  00                 	db	0
   347  007DC9  00                 	db	0
   348  007DCA  00                 	db	0
   349  007DCB  00                 	db	0
   350  007DCC  14                 	db	20
   351  007DCD  14                 	db	20
   352  007DCE  14                 	db	20
   353  007DCF  14                 	db	20
   354  007DD0  14                 	db	20
   355  007DD1  00                 	db	0
   356  007DD2  00                 	db	0
   357  007DD3  00                 	db	0
   358  007DD4  41                 	db	65
   359  007DD5  22                 	db	34
   360  007DD6  14                 	db	20
   361  007DD7  08                 	db	8
   362  007DD8  00                 	db	0
   363  007DD9  00                 	db	0
   364  007DDA  00                 	db	0
   365  007DDB  00                 	db	0
   366  007DDC  02                 	db	2
   367  007DDD  01                 	db	1
   368  007DDE  51                 	db	81
   369  007DDF  09                 	db	9
   370  007DE0  06                 	db	6
   371  007DE1  00                 	db	0
   372  007DE2  00                 	db	0
   373  007DE3  00                 	db	0
   374  007DE4  32                 	db	50
   375  007DE5  49                 	db	73
   376  007DE6  79                 	db	121
   377  007DE7  41                 	db	65
   378  007DE8  3E                 	db	62
   379  007DE9  00                 	db	0
   380  007DEA  00                 	db	0
   381  007DEB  00                 	db	0
   382  007DEC  7E                 	db	126
   383  007DED  09                 	db	9
   384  007DEE  09                 	db	9
   385  007DEF  09                 	db	9
   386  007DF0  7E                 	db	126
   387  007DF1  00                 	db	0
   388  007DF2  00                 	db	0
   389  007DF3  00                 	db	0
   390  007DF4  7F                 	db	127
   391  007DF5  49                 	db	73
   392  007DF6  49                 	db	73
   393  007DF7  49                 	db	73
   394  007DF8  36                 	db	54
   395  007DF9  00                 	db	0
   396  007DFA  00                 	db	0
   397  007DFB  00                 	db	0
   398  007DFC  3E                 	db	62
   399  007DFD  41                 	db	65
   400  007DFE  41                 	db	65
   401  007DFF  41                 	db	65
   402  007E00  22                 	db	34
   403  007E01  00                 	db	0
   404  007E02  00                 	db	0
   405  007E03  00                 	db	0
   406  007E04  7F                 	db	127
   407  007E05  41                 	db	65
   408  007E06  41                 	db	65
   409  007E07  22                 	db	34
   410  007E08  1C                 	db	28
   411  007E09  00                 	db	0
   412  007E0A  00                 	db	0
   413  007E0B  00                 	db	0
   414  007E0C  7F                 	db	127
   415  007E0D  49                 	db	73
   416  007E0E  49                 	db	73
   417  007E0F  49                 	db	73
   418  007E10  41                 	db	65
   419  007E11  00                 	db	0
   420  007E12  00                 	db	0
   421  007E13  00                 	db	0
   422  007E14  7F                 	db	127
   423  007E15  09                 	db	9
   424  007E16  09                 	db	9
   425  007E17  09                 	db	9
   426  007E18  01                 	db	1
   427  007E19  00                 	db	0
   428  007E1A  00                 	db	0
   429  007E1B  00                 	db	0
   430  007E1C  3E                 	db	62
   431  007E1D  41                 	db	65
   432  007E1E  41                 	db	65
   433  007E1F  51                 	db	81
   434  007E20  72                 	db	114
   435  007E21  00                 	db	0
   436  007E22  00                 	db	0
   437  007E23  00                 	db	0
   438  007E24  7F                 	db	127
   439  007E25  08                 	db	8
   440  007E26  08                 	db	8
   441  007E27  08                 	db	8
   442  007E28  7F                 	db	127
   443  007E29  00                 	db	0
   444  007E2A  00                 	db	0
   445  007E2B  00                 	db	0
   446  007E2C  41                 	db	65
   447  007E2D  7F                 	db	127
   448  007E2E  41                 	db	65
   449  007E2F  00                 	db	0
   450  007E30  00                 	db	0
   451  007E31  00                 	db	0
   452  007E32  00                 	db	0
   453  007E33  00                 	db	0
   454  007E34  20                 	db	32
   455  007E35  40                 	db	64
   456  007E36  41                 	db	65
   457  007E37  3F                 	db	63
   458  007E38  01                 	db	1
   459  007E39  00                 	db	0
   460  007E3A  00                 	db	0
   461  007E3B  00                 	db	0
   462  007E3C  7F                 	db	127
   463  007E3D  08                 	db	8
   464  007E3E  14                 	db	20
   465  007E3F  22                 	db	34
   466  007E40  41                 	db	65
   467  007E41  00                 	db	0
   468  007E42  00                 	db	0
   469  007E43  00                 	db	0
   470  007E44  7F                 	db	127
   471  007E45  40                 	db	64
   472  007E46  40                 	db	64
   473  007E47  40                 	db	64
   474  007E48  40                 	db	64
   475  007E49  00                 	db	0
   476  007E4A  00                 	db	0
   477  007E4B  00                 	db	0
   478  007E4C  7F                 	db	127
   479  007E4D  02                 	db	2
   480  007E4E  0C                 	db	12
   481  007E4F  02                 	db	2
   482  007E50  7F                 	db	127
   483  007E51  00                 	db	0
   484  007E52  00                 	db	0
   485  007E53  00                 	db	0
   486  007E54  7F                 	db	127
   487  007E55  04                 	db	4
   488  007E56  08                 	db	8
   489  007E57  10                 	db	16
   490  007E58  7F                 	db	127
   491  007E59  00                 	db	0
   492  007E5A  00                 	db	0
   493  007E5B  00                 	db	0
   494  007E5C  3E                 	db	62
   495  007E5D  41                 	db	65
   496  007E5E  41                 	db	65
   497  007E5F  41                 	db	65
   498  007E60  3E                 	db	62
   499  007E61  00                 	db	0
   500  007E62  00                 	db	0
   501  007E63  00                 	db	0
   502  007E64  7F                 	db	127
   503  007E65  09                 	db	9
   504  007E66  09                 	db	9
   505  007E67  09                 	db	9
   506  007E68  06                 	db	6
   507  007E69  00                 	db	0
   508  007E6A  00                 	db	0
   509  007E6B  00                 	db	0
   510  007E6C  3E                 	db	62
   511  007E6D  41                 	db	65
   512  007E6E  51                 	db	81
   513  007E6F  21                 	db	33
   514  007E70  5E                 	db	94
   515  007E71  00                 	db	0
   516  007E72  00                 	db	0
   517  007E73  00                 	db	0
   518  007E74  7F                 	db	127
   519  007E75  09                 	db	9
   520  007E76  19                 	db	25
   521  007E77  29                 	db	41
   522  007E78  46                 	db	70
   523  007E79  00                 	db	0
   524  007E7A  00                 	db	0
   525  007E7B  00                 	db	0
   526  007E7C  26                 	db	38
   527  007E7D  49                 	db	73
   528  007E7E  49                 	db	73
   529  007E7F  49                 	db	73
   530  007E80  32                 	db	50
   531  007E81  00                 	db	0
   532  007E82  00                 	db	0
   533  007E83  00                 	db	0
   534  007E84  01                 	db	1
   535  007E85  01                 	db	1
   536  007E86  7F                 	db	127
   537  007E87  01                 	db	1
   538  007E88  01                 	db	1
   539  007E89  00                 	db	0
   540  007E8A  00                 	db	0
   541  007E8B  00                 	db	0
   542  007E8C  3F                 	db	63
   543  007E8D  40                 	db	64
   544  007E8E  40                 	db	64
   545  007E8F  40                 	db	64
   546  007E90  3F                 	db	63
   547  007E91  00                 	db	0
   548  007E92  00                 	db	0
   549  007E93  00                 	db	0
   550  007E94  1F                 	db	31
   551  007E95  20                 	db	32
   552  007E96  40                 	db	64
   553  007E97  20                 	db	32
   554  007E98  1F                 	db	31
   555  007E99  00                 	db	0
   556  007E9A  00                 	db	0
   557  007E9B  00                 	db	0
   558  007E9C  3F                 	db	63
   559  007E9D  40                 	db	64
   560  007E9E  38                 	db	56
   561  007E9F  40                 	db	64
   562  007EA0  3F                 	db	63
   563  007EA1  00                 	db	0
   564  007EA2  00                 	db	0
   565  007EA3  00                 	db	0
   566  007EA4  63                 	db	99
   567  007EA5  14                 	db	20
   568  007EA6  08                 	db	8
   569  007EA7  14                 	db	20
   570  007EA8  63                 	db	99
   571  007EA9  00                 	db	0
   572  007EAA  00                 	db	0
   573  007EAB  00                 	db	0
   574  007EAC  03                 	db	3
   575  007EAD  04                 	db	4
   576  007EAE  78                 	db	120
   577  007EAF  04                 	db	4
   578  007EB0  03                 	db	3
   579  007EB1  00                 	db	0
   580  007EB2  00                 	db	0
   581  007EB3  00                 	db	0
   582  007EB4  61                 	db	97
   583  007EB5  51                 	db	81
   584  007EB6  49                 	db	73
   585  007EB7  45                 	db	69
   586  007EB8  43                 	db	67
   587  007EB9  00                 	db	0
   588  007EBA  00                 	db	0
   589  007EBB  00                 	db	0
   590  007EBC  7F                 	db	127
   591  007EBD  41                 	db	65
   592  007EBE  41                 	db	65
   593  007EBF  00                 	db	0
   594  007EC0  00                 	db	0
   595  007EC1  00                 	db	0
   596  007EC2  00                 	db	0
   597  007EC3  00                 	db	0
   598  007EC4  02                 	db	2
   599  007EC5  04                 	db	4
   600  007EC6  08                 	db	8
   601  007EC7  10                 	db	16
   602  007EC8  20                 	db	32
   603  007EC9  00                 	db	0
   604  007ECA  00                 	db	0
   605  007ECB  00                 	db	0
   606  007ECC  41                 	db	65
   607  007ECD  41                 	db	65
   608  007ECE  7F                 	db	127
   609  007ECF  00                 	db	0
   610  007ED0  00                 	db	0
   611  007ED1  00                 	db	0
   612  007ED2  00                 	db	0
   613  007ED3  00                 	db	0
   614  007ED4  04                 	db	4
   615  007ED5  02                 	db	2
   616  007ED6  01                 	db	1
   617  007ED7  02                 	db	2
   618  007ED8  04                 	db	4
   619  007ED9  00                 	db	0
   620  007EDA  00                 	db	0
   621  007EDB  00                 	db	0
   622  007EDC  80                 	db	128
   623  007EDD  80                 	db	128
   624  007EDE  80                 	db	128
   625  007EDF  80                 	db	128
   626  007EE0  80                 	db	128
   627  007EE1  00                 	db	0
   628  007EE2  00                 	db	0
   629  007EE3  00                 	db	0
   630  007EE4  01                 	db	1
   631  007EE5  02                 	db	2
   632  007EE6  04                 	db	4
   633  007EE7  00                 	db	0
   634  007EE8  00                 	db	0
   635  007EE9  00                 	db	0
   636  007EEA  00                 	db	0
   637  007EEB  00                 	db	0
   638  007EEC  20                 	db	32
   639  007EED  54                 	db	84
   640  007EEE  54                 	db	84
   641  007EEF  54                 	db	84
   642  007EF0  78                 	db	120
   643  007EF1  00                 	db	0
   644  007EF2  00                 	db	0
   645  007EF3  00                 	db	0
   646  007EF4  7F                 	db	127
   647  007EF5  48                 	db	72
   648  007EF6  44                 	db	68
   649  007EF7  44                 	db	68
   650  007EF8  38                 	db	56
   651  007EF9  00                 	db	0
   652  007EFA  00                 	db	0
   653  007EFB  00                 	db	0
   654  007EFC  38                 	db	56
   655  007EFD  44                 	db	68
   656  007EFE  44                 	db	68
   657  007EFF  28                 	db	40
   658  007F00  00                 	db	0
   659  007F01  00                 	db	0
   660  007F02  00                 	db	0
   661  007F03  00                 	db	0
   662  007F04  38                 	db	56
   663  007F05  44                 	db	68
   664  007F06  44                 	db	68
   665  007F07  48                 	db	72
   666  007F08  7F                 	db	127
   667  007F09  00                 	db	0
   668  007F0A  00                 	db	0
   669  007F0B  00                 	db	0
   670  007F0C  38                 	db	56
   671  007F0D  54                 	db	84
   672  007F0E  54                 	db	84
   673  007F0F  54                 	db	84
   674  007F10  18                 	db	24
   675  007F11  00                 	db	0
   676  007F12  00                 	db	0
   677  007F13  00                 	db	0
   678  007F14  08                 	db	8
   679  007F15  7E                 	db	126
   680  007F16  09                 	db	9
   681  007F17  02                 	db	2
   682  007F18  00                 	db	0
   683  007F19  00                 	db	0
   684  007F1A  00                 	db	0
   685  007F1B  00                 	db	0
   686  007F1C  18                 	db	24
   687  007F1D  A4                 	db	164
   688  007F1E  A4                 	db	164
   689  007F1F  A4                 	db	164
   690  007F20  7C                 	db	124
   691  007F21  00                 	db	0
   692  007F22  00                 	db	0
   693  007F23  00                 	db	0
   694  007F24  7F                 	db	127
   695  007F25  08                 	db	8
   696  007F26  04                 	db	4
   697  007F27  04                 	db	4
   698  007F28  78                 	db	120
   699  007F29  00                 	db	0
   700  007F2A  00                 	db	0
   701  007F2B  00                 	db	0
   702  007F2C  00                 	db	0
   703  007F2D  7D                 	db	125
   704  007F2E  00                 	db	0
   705  007F2F  00                 	db	0
   706  007F30  00                 	db	0
   707  007F31  00                 	db	0
   708  007F32  00                 	db	0
   709  007F33  00                 	db	0
   710  007F34  80                 	db	128
   711  007F35  84                 	db	132
   712  007F36  7D                 	db	125
   713  007F37  00                 	db	0
   714  007F38  00                 	db	0
   715  007F39  00                 	db	0
   716  007F3A  00                 	db	0
   717  007F3B  00                 	db	0
   718  007F3C  7F                 	db	127
   719  007F3D  10                 	db	16
   720  007F3E  28                 	db	40
   721  007F3F  44                 	db	68
   722  007F40  00                 	db	0
   723  007F41  00                 	db	0
   724  007F42  00                 	db	0
   725  007F43  00                 	db	0
   726  007F44  41                 	db	65
   727  007F45  7F                 	db	127
   728  007F46  40                 	db	64
   729  007F47  00                 	db	0
   730  007F48  00                 	db	0
   731  007F49  00                 	db	0
   732  007F4A  00                 	db	0
   733  007F4B  00                 	db	0
   734  007F4C  7C                 	db	124
   735  007F4D  04                 	db	4
   736  007F4E  18                 	db	24
   737  007F4F  04                 	db	4
   738  007F50  78                 	db	120
   739  007F51  00                 	db	0
   740  007F52  00                 	db	0
   741  007F53  00                 	db	0
   742  007F54  7C                 	db	124
   743  007F55  08                 	db	8
   744  007F56  04                 	db	4
   745  007F57  7C                 	db	124
   746  007F58  00                 	db	0
   747  007F59  00                 	db	0
   748  007F5A  00                 	db	0
   749  007F5B  00                 	db	0
   750  007F5C  38                 	db	56
   751  007F5D  44                 	db	68
   752  007F5E  44                 	db	68
   753  007F5F  38                 	db	56
   754  007F60  00                 	db	0
   755  007F61  00                 	db	0
   756  007F62  00                 	db	0
   757  007F63  00                 	db	0
   758  007F64  FC                 	db	252
   759  007F65  24                 	db	36
   760  007F66  24                 	db	36
   761  007F67  18                 	db	24
   762  007F68  00                 	db	0
   763  007F69  00                 	db	0
   764  007F6A  00                 	db	0
   765  007F6B  00                 	db	0
   766  007F6C  18                 	db	24
   767  007F6D  24                 	db	36
   768  007F6E  24                 	db	36
   769  007F6F  FC                 	db	252
   770  007F70  00                 	db	0
   771  007F71  00                 	db	0
   772  007F72  00                 	db	0
   773  007F73  00                 	db	0
   774  007F74  00                 	db	0
   775  007F75  7C                 	db	124
   776  007F76  08                 	db	8
   777  007F77  04                 	db	4
   778  007F78  00                 	db	0
   779  007F79  00                 	db	0
   780  007F7A  00                 	db	0
   781  007F7B  00                 	db	0
   782  007F7C  48                 	db	72
   783  007F7D  54                 	db	84
   784  007F7E  54                 	db	84
   785  007F7F  24                 	db	36
   786  007F80  00                 	db	0
   787  007F81  00                 	db	0
   788  007F82  00                 	db	0
   789  007F83  00                 	db	0
   790  007F84  04                 	db	4
   791  007F85  7F                 	db	127
   792  007F86  44                 	db	68
   793  007F87  00                 	db	0
   794  007F88  00                 	db	0
   795  007F89  00                 	db	0
   796  007F8A  00                 	db	0
   797  007F8B  00                 	db	0
   798  007F8C  3C                 	db	60
   799  007F8D  40                 	db	64
   800  007F8E  40                 	db	64
   801  007F8F  7C                 	db	124
   802  007F90  00                 	db	0
   803  007F91  00                 	db	0
   804  007F92  00                 	db	0
   805  007F93  00                 	db	0
   806  007F94  1C                 	db	28
   807  007F95  20                 	db	32
   808  007F96  40                 	db	64
   809  007F97  20                 	db	32
   810  007F98  1C                 	db	28
   811  007F99  00                 	db	0
   812  007F9A  00                 	db	0
   813  007F9B  00                 	db	0
   814  007F9C  3C                 	db	60
   815  007F9D  40                 	db	64
   816  007F9E  30                 	db	48
   817  007F9F  40                 	db	64
   818  007FA0  3C                 	db	60
   819  007FA1  00                 	db	0
   820  007FA2  00                 	db	0
   821  007FA3  00                 	db	0
   822  007FA4  44                 	db	68
   823  007FA5  28                 	db	40
   824  007FA6  10                 	db	16
   825  007FA7  28                 	db	40
   826  007FA8  44                 	db	68
   827  007FA9  00                 	db	0
   828  007FAA  00                 	db	0
   829  007FAB  00                 	db	0
   830  007FAC  1C                 	db	28
   831  007FAD  A0                 	db	160
   832  007FAE  A0                 	db	160
   833  007FAF  7C                 	db	124
   834  007FB0  00                 	db	0
   835  007FB1  00                 	db	0
   836  007FB2  00                 	db	0
   837  007FB3  00                 	db	0
   838  007FB4  44                 	db	68
   839  007FB5  64                 	db	100
   840  007FB6  54                 	db	84
   841  007FB7  4C                 	db	76
   842  007FB8  44                 	db	68
   843  007FB9  00                 	db	0
   844  007FBA  00                 	db	0
   845  007FBB  00                 	db	0
   846  007FBC  08                 	db	8
   847  007FBD  36                 	db	54
   848  007FBE  41                 	db	65
   849  007FBF  00                 	db	0
   850  007FC0  00                 	db	0
   851  007FC1  00                 	db	0
   852  007FC2  00                 	db	0
   853  007FC3  00                 	db	0
   854  007FC4  00                 	db	0
   855  007FC5  7F                 	db	127
   856  007FC6  00                 	db	0
   857  007FC7  00                 	db	0
   858  007FC8  00                 	db	0
   859  007FC9  00                 	db	0
   860  007FCA  00                 	db	0
   861  007FCB  00                 	db	0
   862  007FCC  41                 	db	65
   863  007FCD  36                 	db	54
   864  007FCE  08                 	db	8
   865  007FCF  00                 	db	0
   866  007FD0  00                 	db	0
   867  007FD1  00                 	db	0
   868  007FD2  00                 	db	0
   869  007FD3  00                 	db	0
   870  007FD4  02                 	db	2
   871  007FD5  01                 	db	1
   872  007FD6  01                 	db	1
   873  007FD7  02                 	db	2
   874  007FD8  01                 	db	1
   875  007FD9  00                 	db	0
   876  007FDA  00                 	db	0
   877  007FDB  00                 	db	0
   878  007FDC  02                 	db	2
   879  007FDD  05                 	db	5
   880  007FDE  05                 	db	5
   881  007FDF  02                 	db	2
   882  007FE0  00                 	db	0
   883  007FE1  00                 	db	0
   884  007FE2  00                 	db	0
   885  007FE3                     __end_of_OledFont:
   886                           	opt stack 0
   887  007FE3                     STR_1:
   888  007FE3  55                 	db	85	;'U'
   889  007FE4  6E                 	db	110	;'n'
   890  007FE5  69                 	db	105	;'i'
   891  007FE6  76                 	db	118	;'v'
   892  007FE7  65                 	db	101	;'e'
   893  007FE8  72                 	db	114	;'r'
   894  007FE9  73                 	db	115	;'s'
   895  007FEA  69                 	db	105	;'i'
   896  007FEB  74                 	db	116	;'t'
   897  007FEC  79                 	db	121	;'y'
   898  007FED  00                 	db	0
   899  007FEE                     STR_4:
   900  007FEE  5A                 	db	90	;'Z'
   901  007FEF  49                 	db	73	;'I'
   902  007FF0  50                 	db	80	;'P'
   903  007FF1  53                 	db	83	;'S'
   904  007FF2  2D                 	db	45
   905  007FF3  45                 	db	69	;'E'
   906  007FF4  56                 	db	86	;'V'
   907  007FF5  00                 	db	0
   908  007FF6                     STR_3:
   909  007FF6  41                 	db	65	;'A'
   910  007FF7  6B                 	db	107	;'k'
   911  007FF8  72                 	db	114	;'r'
   912  007FF9  6F                 	db	111	;'o'
   913  007FFA  6E                 	db	110	;'n'
   914  007FFB  00                 	db	0
   915  007FFC                     STR_2:
   916  007FFC  4F                 	db	79	;'O'
   917  007FFD  46                 	db	70	;'F'
   918  007FFE  00                 	db	0
   919  0000                     
   920                           ; #config settings
   921  007FFF  00                 	db	0	; dummy byte at the end
   922  0000                     
   923                           	psect	nvCOMRAM
   924  000042                     __pnvCOMRAM:
   925                           	opt stack 0
   926  000042                     _timer0ReloadVal16bit:
   927                           	opt stack 0
   928  000042                     	ds	2
   929                           
   930                           	psect	nvBANK0
   931  0000FE                     __pnvBANK0:
   932                           	opt stack 0
   933  0000FE                     _TMR2_InterruptHandler:
   934                           	opt stack 0
   935  0000FE                     	ds	2
   936  0000                     _ANSELA	set	3896
   937  0000                     _ANSELB	set	3897
   938  0000                     _ANSELC	set	3898
   939  0000                     _ANSELD	set	3899
   940  0000                     _ANSELE	set	3900
   941  0000                     _ADCON0	set	4034
   942  0000                     _ADCON0bits	set	4034
   943  0000                     _ADCON1	set	4033
   944  0000                     _ADCON2	set	4032
   945  0000                     _ADRESH	set	4036
   946  0000                     _ADRESL	set	4035
   947  0000                     _BAUD1CON	set	4024
   948  0000                     _INTCON2bits	set	4081
   949  0000                     _INTCONbits	set	4082
   950  0000                     _IPR1bits	set	3999
   951  0000                     _IPR2bits	set	4002
   952  0000                     _LATA	set	3977
   953  0000                     _LATB	set	3978
   954  0000                     _LATC	set	3979
   955  0000                     _LATCbits	set	3979
   956  0000                     _LATD	set	3980
   957  0000                     _LATE	set	3981
   958  0000                     _OSCCON	set	4051
   959  0000                     _OSCCON2	set	4050
   960  0000                     _OSCTUNE	set	3995
   961  0000                     _PIE1bits	set	3997
   962  0000                     _PIE2bits	set	4000
   963  0000                     _PIR1bits	set	3998
   964  0000                     _PIR2bits	set	4001
   965  0000                     _PORTAbits	set	3968
   966  0000                     _PORTBbits	set	3969
   967  0000                     _PORTDbits	set	3971
   968  0000                     _PR2	set	4027
   969  0000                     _RC1STA	set	4011
   970  0000                     _RC1STAbits	set	4011
   971  0000                     _RCONbits	set	4048
   972  0000                     _RCREG1	set	4014
   973  0000                     _SPBRG1	set	4015
   974  0000                     _SPBRGH1	set	4016
   975  0000                     _SSP1ADD	set	4040
   976  0000                     _SSP1BUF	set	4041
   977  0000                     _SSP1CON1	set	4038
   978  0000                     _SSP1CON1bits	set	4038
   979  0000                     _SSP1CON2bits	set	4037
   980  0000                     _SSP1CON3	set	4043
   981  0000                     _SSP1STAT	set	4039
   982  0000                     _T0CON	set	4053
   983  0000                     _T0CONbits	set	4053
   984  0000                     _T2CON	set	4026
   985  0000                     _T2CONbits	set	4026
   986  0000                     _TMR0H	set	4055
   987  0000                     _TMR0L	set	4054
   988  0000                     _TMR2	set	4028
   989  0000                     _TRISA	set	3986
   990  0000                     _TRISAbits	set	3986
   991  0000                     _TRISB	set	3987
   992  0000                     _TRISC	set	3988
   993  0000                     _TRISCbits	set	3988
   994  0000                     _TRISD	set	3989
   995  0000                     _TRISE	set	3990
   996  0000                     _TX1STA	set	4012
   997  0000                     _TXREG1	set	4013
   998  0000                     _WPUB	set	3937
   999  0000                     _LATA3	set	31819
  1000  0000                     _LATA6	set	31822
  1001  0000                     _LATA7	set	31823
  1002  0000                     _LATC1	set	31833
  1003  0000                     _LATE0	set	31848
  1004  0000                     _LATE1	set	31849
  1005  0000                     _LATE2	set	31850
  1006                           
  1007                           	psect	cinit
  1008  002850                     __pcinit:
  1009                           	opt stack 0
  1010  002850                     start_initialization:
  1011                           	opt stack 0
  1012  002850                     __initialization:
  1013                           	opt stack 0
  1014                           
  1015                           ; Clear objects allocated to BANK5 (206 bytes)
  1016  002850  EE05  F000         	lfsr	0,__pbssBANK5
  1017  002854  0ECE               	movlw	206
  1018  002856                     clear_0:
  1019  002856  6AEE               	clrf	postinc0,c
  1020  002858  06E8               	decf	wreg,f,c
  1021  00285A  E1FD               	bnz	clear_0
  1022                           
  1023                           ; Clear objects allocated to BANK4 (206 bytes)
  1024  00285C  EE04  F000         	lfsr	0,__pbssBANK4
  1025  002860  0ECE               	movlw	206
  1026  002862                     clear_1:
  1027  002862  6AEE               	clrf	postinc0,c
  1028  002864  06E8               	decf	wreg,f,c
  1029  002866  E1FD               	bnz	clear_1
  1030                           
  1031                           ; Clear objects allocated to BANK3 (200 bytes)
  1032  002868  EE03  F000         	lfsr	0,__pbssBANK3
  1033  00286C  0EC8               	movlw	200
  1034  00286E                     clear_2:
  1035  00286E  6AEE               	clrf	postinc0,c
  1036  002870  06E8               	decf	wreg,f,c
  1037  002872  E1FD               	bnz	clear_2
  1038                           
  1039                           ; Clear objects allocated to BANK2 (206 bytes)
  1040  002874  EE02  F000         	lfsr	0,__pbssBANK2
  1041  002878  0ECE               	movlw	206
  1042  00287A                     clear_3:
  1043  00287A  6AEE               	clrf	postinc0,c
  1044  00287C  06E8               	decf	wreg,f,c
  1045  00287E  E1FD               	bnz	clear_3
  1046                           
  1047                           ; Clear objects allocated to BANK1 (57 bytes)
  1048  002880  EE01  F000         	lfsr	0,__pbssBANK1
  1049  002884  0E39               	movlw	57
  1050  002886                     clear_4:
  1051  002886  6AEE               	clrf	postinc0,c
  1052  002888  06E8               	decf	wreg,f,c
  1053  00288A  E1FD               	bnz	clear_4
  1054                           
  1055                           ; Clear objects allocated to BANK0 (148 bytes)
  1056  00288C  EE00  F060         	lfsr	0,__pbssBANK0
  1057  002890  0E94               	movlw	148
  1058  002892                     clear_5:
  1059  002892  6AEE               	clrf	postinc0,c
  1060  002894  06E8               	decf	wreg,f,c
  1061  002896  E1FD               	bnz	clear_5
  1062                           
  1063                           ; Clear objects allocated to COMRAM (22 bytes)
  1064  002898  EE00  F02C         	lfsr	0,__pbssCOMRAM
  1065  00289C  0E16               	movlw	22
  1066  00289E                     clear_6:
  1067  00289E  6AEE               	clrf	postinc0,c
  1068  0028A0  06E8               	decf	wreg,f,c
  1069  0028A2  E1FD               	bnz	clear_6
  1070                           
  1071                           ; Initialize objects allocated to COMRAM (1 bytes)
  1072                           ; load TBLPTR registers with __pidataCOMRAM
  1073  0028A4  0E68               	movlw	low __pidataCOMRAM
  1074  0028A6  6EF6               	movwf	tblptrl,c
  1075  0028A8  0E30               	movlw	high __pidataCOMRAM
  1076  0028AA  6EF7               	movwf	tblptrh,c
  1077  0028AC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1078  0028AE  6EF8               	movwf	tblptru,c
  1079  0028B0  0009               	tblrd		*+	;fetch initializer
  1080  0028B2  CFF5 F044          	movff	tablat,__pdataCOMRAM
  1081  0028B6                     end_of_initialization:
  1082                           	opt stack 0
  1083  0028B6                     __end_of__initialization:
  1084                           	opt stack 0
  1085  0028B6  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1086  0028B8  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1087  0028BA  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1088  0028BC  6EF8               	movwf	tblptru,c
  1089  0028BE  0100               	movlb	0
  1090  0028C0  EFA6  F00E         	goto	_main	;jump to C main() function
  1091                           tblptru	equ	0xFF8
  1092                           tblptrh	equ	0xFF7
  1093                           tblptrl	equ	0xFF6
  1094                           tablat	equ	0xFF5
  1095                           postinc0	equ	0xFEE
  1096                           wreg	equ	0xFE8
  1097                           
  1098                           	psect	bssCOMRAM
  1099  00002C                     __pbssCOMRAM:
  1100                           	opt stack 0
  1101  00002C                     _group:
  1102                           	opt stack 0
  1103  00002C                     	ds	2
  1104  00002E                     _serial_available:
  1105                           	opt stack 0
  1106  00002E                     	ds	2
  1107  000030                     _serial_read:
  1108                           	opt stack 0
  1109  000030                     	ds	2
  1110  000032                     _serial_write:
  1111                           	opt stack 0
  1112  000032                     	ds	2
  1113  000034                     I2C1_ISR@i2c_10bit_address_restart:
  1114                           	opt stack 0
  1115  000034                     	ds	1
  1116  000035                     I2C1_ISR@i2c_bytes_left:
  1117                           	opt stack 0
  1118  000035                     	ds	1
  1119  000036                     _AKNAKsend:
  1120                           	opt stack 0
  1121  000036                     	ds	1
  1122  000037                     _calc_CS:
  1123                           	opt stack 0
  1124  000037                     	ds	1
  1125  000038                     _i2c1_state:
  1126                           	opt stack 0
  1127  000038                     	ds	1
  1128  000039                     _i2c1_trb_count:
  1129                           	opt stack 0
  1130  000039                     	ds	1
  1131  00003A                     _maxDataAddress:
  1132                           	opt stack 0
  1133  00003A                     	ds	1
  1134  00003B                     _moduleAddress:
  1135                           	opt stack 0
  1136  00003B                     	ds	1
  1137  00003C                     _returnAddress:
  1138                           	opt stack 0
  1139  00003C                     	ds	1
  1140  00003D                     _rx_address:
  1141                           	opt stack 0
  1142  00003D                     	ds	1
  1143  00003E                     _rx_array_inx:
  1144                           	opt stack 0
  1145  00003E                     	ds	1
  1146  00003F                     _rx_len:
  1147                           	opt stack 0
  1148  00003F                     	ds	1
  1149  000040                     I2C1_ISR@i2c_address:
  1150                           	opt stack 0
  1151  000040                     	ds	2
  1152                           tblptru	equ	0xFF8
  1153                           tblptrh	equ	0xFF7
  1154                           tblptrl	equ	0xFF6
  1155                           tablat	equ	0xFF5
  1156                           postinc0	equ	0xFEE
  1157                           wreg	equ	0xFE8
  1158                           
  1159                           	psect	dataCOMRAM
  1160  000044                     __pdataCOMRAM:
  1161                           	opt stack 0
  1162  000044                     _Transmit_stall:
  1163                           	opt stack 0
  1164  000044                     	ds	1
  1165                           tblptru	equ	0xFF8
  1166                           tblptrh	equ	0xFF7
  1167                           tblptrl	equ	0xFF6
  1168                           tablat	equ	0xFF5
  1169                           postinc0	equ	0xFEE
  1170                           wreg	equ	0xFE8
  1171                           
  1172                           	psect	bssBANK0
  1173  000060                     __pbssBANK0:
  1174                           	opt stack 0
  1175  000060                     _displaybuffer:
  1176                           	opt stack 0
  1177  000060                     	ds	40
  1178  000088                     _LED_array:
  1179                           	opt stack 0
  1180  000088                     	ds	16
  1181  000098                     _LEDNUM_ENAB:
  1182                           	opt stack 0
  1183  000098                     	ds	12
  1184  0000A4                     _LEDState:
  1185                           	opt stack 0
  1186  0000A4                     	ds	12
  1187  0000B0                     _butnarray:
  1188                           	opt stack 0
  1189  0000B0                     	ds	8
  1190  0000B8                     _i2c1_object:
  1191                           	opt stack 0
  1192  0000B8                     	ds	7
  1193  0000BF                     I2C1_ISR@pi2c_buf_ptr:
  1194                           	opt stack 0
  1195  0000BF                     	ds	2
  1196  0000C1                     TMR0_ISR@CountCallBack:
  1197                           	opt stack 0
  1198  0000C1                     	ds	2
  1199  0000C3                     _addressErrorCounter:
  1200                           	opt stack 0
  1201  0000C3                     	ds	2
  1202  0000C5                     _alignErrorCounter:
  1203                           	opt stack 0
  1204  0000C5                     	ds	2
  1205  0000C7                     _brake:
  1206                           	opt stack 0
  1207  0000C7                     	ds	2
  1208  0000C9                     _crcErrorCounter:
  1209                           	opt stack 0
  1210  0000C9                     	ds	2
  1211  0000CB                     _dataAdressErrorCounter:
  1212                           	opt stack 0
  1213  0000CB                     	ds	2
  1214  0000CD                     _i:
  1215                           	opt stack 0
  1216  0000CD                     	ds	2
  1217  0000CF                     _k:
  1218                           	opt stack 0
  1219  0000CF                     	ds	2
  1220  0000D1                     _p_i2c1_current:
  1221                           	opt stack 0
  1222  0000D1                     	ds	2
  1223  0000D3                     _p_i2c1_trb_current:
  1224                           	opt stack 0
  1225  0000D3                     	ds	2
  1226  0000D5                     _receiveArrayAddress:
  1227                           	opt stack 0
  1228  0000D5                     	ds	2
  1229  0000D7                     _sendStructAddress:
  1230                           	opt stack 0
  1231  0000D7                     	ds	2
  1232  0000D9                     _serial_peek:
  1233                           	opt stack 0
  1234  0000D9                     	ds	2
  1235  0000DB                     _throttle:
  1236                           	opt stack 0
  1237  0000DB                     	ds	2
  1238  0000DD                     _time:
  1239                           	opt stack 0
  1240  0000DD                     	ds	2
  1241  0000DF                     _timeOut:
  1242                           	opt stack 0
  1243  0000DF                     	ds	2
  1244  0000E1                     handleIndicators@oldIndicators:
  1245                           	opt stack 0
  1246  0000E1                     	ds	2
  1247  0000E3                     I2C1_MasterRead@trBlock:
  1248                           	opt stack 0
  1249  0000E3                     	ds	5
  1250  0000E8                     I2C1_MasterWrite@trBlock:
  1251                           	opt stack 0
  1252  0000E8                     	ds	5
  1253  0000ED                     _i2c1_tr_queue:
  1254                           	opt stack 0
  1255  0000ED                     	ds	5
  1256  0000F2                     _Buff:
  1257                           	opt stack 0
  1258  0000F2                     	ds	2
  1259                           tblptru	equ	0xFF8
  1260                           tblptrh	equ	0xFF7
  1261                           tblptrl	equ	0xFF6
  1262                           tablat	equ	0xFF5
  1263                           postinc0	equ	0xFEE
  1264                           wreg	equ	0xFE8
  1265                           
  1266                           	psect	bssBANK1
  1267  000100                     __pbssBANK1:
  1268                           	opt stack 0
  1269  000100                     _receiveArray:
  1270                           	opt stack 0
  1271  000100                     	ds	40
  1272  000128                     _crc_buffer:
  1273                           	opt stack 0
  1274  000128                     	ds	17
  1275                           tblptru	equ	0xFF8
  1276                           tblptrh	equ	0xFF7
  1277                           tblptrl	equ	0xFF6
  1278                           tablat	equ	0xFF5
  1279                           postinc0	equ	0xFEE
  1280                           wreg	equ	0xFE8
  1281                           
  1282                           	psect	bssBANK2
  1283  000200                     __pbssBANK2:
  1284                           	opt stack 0
  1285  000200                     _ring_buffer:
  1286                           	opt stack 0
  1287  000200                     	ds	206
  1288                           tblptru	equ	0xFF8
  1289                           tblptrh	equ	0xFF7
  1290                           tblptrl	equ	0xFF6
  1291                           tablat	equ	0xFF5
  1292                           postinc0	equ	0xFEE
  1293                           wreg	equ	0xFE8
  1294                           
  1295                           	psect	bssBANK3
  1296  000300                     __pbssBANK3:
  1297                           	opt stack 0
  1298  000300                     _rx_buffer:
  1299                           	opt stack 0
  1300  000300                     	ds	200
  1301                           tblptru	equ	0xFF8
  1302                           tblptrh	equ	0xFF7
  1303                           tblptrl	equ	0xFF6
  1304                           tablat	equ	0xFF5
  1305                           postinc0	equ	0xFEE
  1306                           wreg	equ	0xFE8
  1307                           
  1308                           	psect	bssBANK4
  1309  000400                     __pbssBANK4:
  1310                           	opt stack 0
  1311  000400                     _input_buffer:
  1312                           	opt stack 0
  1313  000400                     	ds	206
  1314                           tblptru	equ	0xFF8
  1315                           tblptrh	equ	0xFF7
  1316                           tblptrl	equ	0xFF6
  1317                           tablat	equ	0xFF5
  1318                           postinc0	equ	0xFEE
  1319                           wreg	equ	0xFE8
  1320                           
  1321                           	psect	bssBANK5
  1322  000500                     __pbssBANK5:
  1323                           	opt stack 0
  1324  000500                     _output_buffer:
  1325                           	opt stack 0
  1326  000500                     	ds	206
  1327                           tblptru	equ	0xFF8
  1328                           tblptrh	equ	0xFF7
  1329                           tblptrl	equ	0xFF6
  1330                           tablat	equ	0xFF5
  1331                           postinc0	equ	0xFEE
  1332                           wreg	equ	0xFE8
  1333                           
  1334                           	psect	cstackBANK1
  1335  000139                     __pcstackBANK1:
  1336                           	opt stack 0
  1337  000139                     ??_LEDsetBar:
  1338  000139                     ??_receiveData:
  1339  000139                     ?___fttol:
  1340                           	opt stack 0
  1341  000139                     begin@ptr:
  1342                           	opt stack 0
  1343  000139                     LEDbegin@writeBuffer:
  1344                           	opt stack 0
  1345  000139                     ___fttol@f1:
  1346                           	opt stack 0
  1347  000139                     LEDwriteDisplay@writeBuffer:
  1348                           	opt stack 0
  1349                           
  1350                           ; 20 bytes @ 0x0
  1351  000139                     	ds	2
  1352  00013B                     begin@maxSize:
  1353                           	opt stack 0
  1354                           
  1355                           ; 1 bytes @ 0x2
  1356  00013B                     	ds	1
  1357  00013C                     begin@givenAddress:
  1358                           	opt stack 0
  1359  00013C                     LEDbegin@timeOut:
  1360                           	opt stack 0
  1361                           
  1362                           ; 2 bytes @ 0x3
  1363  00013C                     	ds	1
  1364  00013D                     ??___fttol:
  1365  00013D                     begin@error:
  1366                           	opt stack 0
  1367                           
  1368                           ; 1 bytes @ 0x4
  1369  00013D                     	ds	1
  1370  00013E                     LEDbegin@i2c_addr:
  1371                           	opt stack 0
  1372  00013E                     begin@stufftosend:
  1373                           	opt stack 0
  1374                           
  1375                           ; 2 bytes @ 0x5
  1376  00013E                     	ds	1
  1377  00013F                     LEDbegin@status:
  1378                           	opt stack 0
  1379  00013F                     receiveData@holder:
  1380                           	opt stack 0
  1381                           
  1382                           ; 3 bytes @ 0x6
  1383  00013F                     	ds	1
  1384  000140                     begin@stufftoreceive:
  1385                           	opt stack 0
  1386                           
  1387                           ; 2 bytes @ 0x7
  1388  000140                     	ds	2
  1389  000142                     ___fttol@sign1:
  1390                           	opt stack 0
  1391  000142                     begin@stuffavailable:
  1392                           	opt stack 0
  1393  000142                     receiveData@holder_2455:
  1394                           	opt stack 0
  1395                           
  1396                           ; 3 bytes @ 0x9
  1397  000142                     	ds	1
  1398  000143                     ___fttol@lval:
  1399                           	opt stack 0
  1400                           
  1401                           ; 4 bytes @ 0xA
  1402  000143                     	ds	1
  1403  000144                     begin@stuffpeek:
  1404                           	opt stack 0
  1405                           
  1406                           ; 2 bytes @ 0xB
  1407  000144                     	ds	1
  1408  000145                     receiveData@crcHolder:
  1409                           	opt stack 0
  1410                           
  1411                           ; 1 bytes @ 0xC
  1412  000145                     	ds	1
  1413  000146                     receiveData@crcHolder_2456:
  1414                           	opt stack 0
  1415                           
  1416                           ; 1 bytes @ 0xD
  1417  000146                     	ds	1
  1418  000147                     ___fttol@exp1:
  1419                           	opt stack 0
  1420  000147                     receiveData@u:
  1421                           	opt stack 0
  1422                           
  1423                           ; 2 bytes @ 0xE
  1424  000147                     	ds	2
  1425  000149                     LEDsetValue@value:
  1426                           	opt stack 0
  1427  000149                     receiveData@r:
  1428                           	opt stack 0
  1429                           
  1430                           ; 2 bytes @ 0x10
  1431  000149                     	ds	2
  1432  00014B                     LEDsetValue@color:
  1433                           	opt stack 0
  1434                           
  1435                           ; 2 bytes @ 0x12
  1436  00014B                     	ds	2
  1437  00014D                     LEDwriteDisplay@i2c_addr:
  1438                           	opt stack 0
  1439  00014D                     LEDsetValue@k:
  1440                           	opt stack 0
  1441                           
  1442                           ; 2 bytes @ 0x14
  1443  00014D                     	ds	1
  1444  00014E                     LEDwriteDisplay@timeOut:
  1445                           	opt stack 0
  1446                           
  1447                           ; 2 bytes @ 0x15
  1448  00014E                     	ds	2
  1449  000150                     LEDwriteDisplay@status:
  1450                           	opt stack 0
  1451                           
  1452                           ; 1 bytes @ 0x17
  1453  000150                     	ds	1
  1454  000151                     main@ADCNT:
  1455                           	opt stack 0
  1456                           
  1457                           ; 2 bytes @ 0x18
  1458  000151                     	ds	2
  1459                           tblptru	equ	0xFF8
  1460                           tblptrh	equ	0xFF7
  1461                           tblptrl	equ	0xFF6
  1462                           tablat	equ	0xFF5
  1463                           postinc0	equ	0xFEE
  1464                           wreg	equ	0xFE8
  1465                           
  1466                           	psect	cstackBANK0
  1467  0000F4                     __pcstackBANK0:
  1468                           	opt stack 0
  1469  0000F4                     ??___ftmul:
  1470  0000F4                     ToSend@where:
  1471                           	opt stack 0
  1472  0000F4                     CRCcheck@SentCRC:
  1473                           	opt stack 0
  1474  0000F4                     LEDBsetBrightness@b:
  1475                           	opt stack 0
  1476  0000F4                     LEDblinkRate@b:
  1477                           	opt stack 0
  1478                           
  1479                           ; 2 bytes @ 0x0
  1480  0000F4                     	ds	1
  1481  0000F5                     CRCcheck@calculatedCRC:
  1482                           	opt stack 0
  1483                           
  1484                           ; 1 bytes @ 0x1
  1485  0000F5                     	ds	1
  1486  0000F6                     LEDBsetBrightness@i2c_addr:
  1487                           	opt stack 0
  1488  0000F6                     LEDblinkRate@i2c_addr:
  1489                           	opt stack 0
  1490  0000F6                     CRCcheck@arrayHolder:
  1491                           	opt stack 0
  1492                           
  1493                           ; 3 bytes @ 0x2
  1494  0000F6                     	ds	1
  1495  0000F7                     ___ftmul@exp:
  1496                           	opt stack 0
  1497  0000F7                     LEDBsetBrightness@writeBuffer:
  1498                           	opt stack 0
  1499  0000F7                     LEDblinkRate@writeBuffer:
  1500                           	opt stack 0
  1501                           
  1502                           ; 2 bytes @ 0x3
  1503  0000F7                     	ds	1
  1504  0000F8                     ___ftmul@f3_as_product:
  1505                           	opt stack 0
  1506                           
  1507                           ; 3 bytes @ 0x4
  1508  0000F8                     	ds	1
  1509  0000F9                     LEDBsetBrightness@timeOut:
  1510                           	opt stack 0
  1511  0000F9                     LEDblinkRate@timeOut:
  1512                           	opt stack 0
  1513  0000F9                     CRCcheck@rt:
  1514                           	opt stack 0
  1515                           
  1516                           ; 2 bytes @ 0x5
  1517  0000F9                     	ds	2
  1518  0000FB                     LEDBsetBrightness@status:
  1519                           	opt stack 0
  1520  0000FB                     LEDblinkRate@status:
  1521                           	opt stack 0
  1522  0000FB                     ___ftmul@cntr:
  1523                           	opt stack 0
  1524                           
  1525                           ; 1 bytes @ 0x7
  1526  0000FB                     	ds	1
  1527  0000FC                     ___ftmul@sign:
  1528                           	opt stack 0
  1529                           
  1530                           ; 1 bytes @ 0x8
  1531  0000FC                     	ds	1
  1532  0000FD                     ??_LEDsetValue:
  1533                           
  1534                           ; 1 bytes @ 0x9
  1535  0000FD                     	ds	1
  1536                           tblptru	equ	0xFF8
  1537                           tblptrh	equ	0xFF7
  1538                           tblptrl	equ	0xFF6
  1539                           tablat	equ	0xFF5
  1540                           postinc0	equ	0xFEE
  1541                           wreg	equ	0xFE8
  1542                           
  1543                           	psect	cstackCOMRAM
  1544  000001                     __pcstackCOMRAM:
  1545                           	opt stack 0
  1546  000001                     ??_I2C1_Stop:
  1547  000001                     ??_TMR2_CallBack:
  1548  000001                     ?i2_UART_buff_size:
  1549                           	opt stack 0
  1550  000001                     ?i2_UART_buff_modulo_inc:
  1551                           	opt stack 0
  1552  000001                     ReadButtonState@btnnum:
  1553                           	opt stack 0
  1554  000001                     i2UART_buff_size@_this:
  1555                           	opt stack 0
  1556  000001                     i2UART_buff_modulo_inc@value:
  1557                           	opt stack 0
  1558                           
  1559                           ; 2 bytes @ 0x0
  1560  000001                     	ds	2
  1561  000003                     ??_ReadButtonState:
  1562  000003                     I2C1_Stop@completion_code:
  1563                           	opt stack 0
  1564  000003                     TMR2_CallBack@i:
  1565                           	opt stack 0
  1566  000003                     i2UART_buff_modulo_inc@modulus:
  1567                           	opt stack 0
  1568                           
  1569                           ; 2 bytes @ 0x2
  1570  000003                     	ds	1
  1571  000004                     ??_I2C1_ISR:
  1572                           
  1573                           ; 1 bytes @ 0x3
  1574  000004                     	ds	1
  1575  000005                     TMR0_ISR@x:
  1576                           	opt stack 0
  1577  000005                     i2UART_buff_modulo_inc@my_value:
  1578                           	opt stack 0
  1579                           
  1580                           ; 2 bytes @ 0x4
  1581  000005                     	ds	2
  1582  000007                     i2UART_buff_put@_this:
  1583                           	opt stack 0
  1584  000007                     i2UART_buff_get@_this:
  1585                           	opt stack 0
  1586                           
  1587                           ; 2 bytes @ 0x6
  1588  000007                     	ds	2
  1589  000009                     ??i2_UART_buff_get:
  1590  000009                     i2UART_buff_put@c:
  1591                           	opt stack 0
  1592                           
  1593                           ; 1 bytes @ 0x8
  1594  000009                     	ds	1
  1595  00000A                     ??i2_UART_buff_put:
  1596                           
  1597                           ; 1 bytes @ 0x9
  1598  00000A                     	ds	1
  1599  00000B                     i2UART_buff_get@c:
  1600                           	opt stack 0
  1601                           
  1602                           ; 1 bytes @ 0xA
  1603  00000B                     	ds	1
  1604  00000C                     EUSART1_Receive_ISR@data:
  1605                           	opt stack 0
  1606                           
  1607                           ; 1 bytes @ 0xB
  1608  00000C                     	ds	1
  1609  00000D                     ??_INTERRUPT_InterruptManager:
  1610                           
  1611                           ; 1 bytes @ 0xC
  1612  00000D                     	ds	14
  1613  00001B                     ?_FastTransfer_buffer_modulo_inc:
  1614                           	opt stack 0
  1615  00001B                     ?_UART_buff_modulo_inc:
  1616                           	opt stack 0
  1617  00001B                     ?_UART_buff_size:
  1618                           	opt stack 0
  1619  00001B                     ?___awdiv:
  1620                           	opt stack 0
  1621  00001B                     ?___ftpack:
  1622                           	opt stack 0
  1623  00001B                     I2C1_MasterTRBInsert@ptrb_list:
  1624                           	opt stack 0
  1625  00001B                     I2C1_MasterWriteTRBBuild@ptrb:
  1626                           	opt stack 0
  1627  00001B                     setLED@led:
  1628                           	opt stack 0
  1629  00001B                     Off_Led@led:
  1630                           	opt stack 0
  1631  00001B                     TMR2_SetInterruptHandler@InterruptHandler:
  1632                           	opt stack 0
  1633  00001B                     Delay@wait:
  1634                           	opt stack 0
  1635  00001B                     GetButtonState@btnnum:
  1636                           	opt stack 0
  1637  00001B                     TBbarGraphs@t:
  1638                           	opt stack 0
  1639  00001B                     CRC8@data:
  1640                           	opt stack 0
  1641  00001B                     FastTransfer_buffer_modulo_inc@value:
  1642                           	opt stack 0
  1643  00001B                     crcBufS_put@_this:
  1644                           	opt stack 0
  1645  00001B                     crcBufS_status_put@_this:
  1646                           	opt stack 0
  1647  00001B                     crcBufS_get@_this:
  1648                           	opt stack 0
  1649  00001B                     UART_buff_size@_this:
  1650                           	opt stack 0
  1651  00001B                     UART_buff_modulo_inc@value:
  1652                           	opt stack 0
  1653  00001B                     UART_buff_peek@_this:
  1654                           	opt stack 0
  1655  00001B                     ___awdiv@dividend:
  1656                           	opt stack 0
  1657  00001B                     memset@p1:
  1658                           	opt stack 0
  1659  00001B                     ___ftpack@arg:
  1660                           	opt stack 0
  1661                           
  1662                           ; 3 bytes @ 0x1A
  1663  00001B                     	ds	2
  1664  00001D                     ??_setLED:
  1665  00001D                     ??_Off_Led:
  1666  00001D                     ??_Delay:
  1667  00001D                     ??_GetButtonState:
  1668  00001D                     ??_UART_buff_peek:
  1669  00001D                     ?_Receive_available:
  1670                           	opt stack 0
  1671  00001D                     CRC8@len:
  1672                           	opt stack 0
  1673  00001D                     crcBufS_put@address:
  1674                           	opt stack 0
  1675  00001D                     crcBufS_status_put@time:
  1676                           	opt stack 0
  1677  00001D                     crcBufS_get@time:
  1678                           	opt stack 0
  1679  00001D                     I2C1_MasterTRBInsert@pflag:
  1680                           	opt stack 0
  1681  00001D                     I2C1_MasterWriteTRBBuild@pdata:
  1682                           	opt stack 0
  1683  00001D                     TBbarGraphs@b:
  1684                           	opt stack 0
  1685  00001D                     FastTransfer_buffer_modulo_inc@modulus:
  1686                           	opt stack 0
  1687  00001D                     UART_buff_modulo_inc@modulus:
  1688                           	opt stack 0
  1689  00001D                     ___awdiv@divisor:
  1690                           	opt stack 0
  1691  00001D                     memset@c:
  1692                           	opt stack 0
  1693                           
  1694                           ; 2 bytes @ 0x1C
  1695  00001D                     	ds	1
  1696  00001E                     CRC8@sum:
  1697                           	opt stack 0
  1698  00001E                     crcBufS_put@oldCRC:
  1699                           	opt stack 0
  1700  00001E                     crcBufS_status_put@status:
  1701                           	opt stack 0
  1702  00001E                     crcBufS_get@space:
  1703                           	opt stack 0
  1704  00001E                     ___ftpack@exp:
  1705                           	opt stack 0
  1706  00001E                     Delay@x:
  1707                           	opt stack 0
  1708                           
  1709                           ; 2 bytes @ 0x1D
  1710  00001E                     	ds	1
  1711  00001F                     ??_crcBufS_get:
  1712  00001F                     ??_crcBufS_status_put:
  1713  00001F                     I2C1_MasterWriteTRBBuild@length:
  1714                           	opt stack 0
  1715  00001F                     CRC8@extract:
  1716                           	opt stack 0
  1717  00001F                     crcBufS_put@status:
  1718                           	opt stack 0
  1719  00001F                     ___awdiv@counter:
  1720                           	opt stack 0
  1721  00001F                     ___ftpack@sign:
  1722                           	opt stack 0
  1723  00001F                     SetLEDOut@lednum:
  1724                           	opt stack 0
  1725  00001F                     FastTransfer_buffer_modulo_inc@my_value:
  1726                           	opt stack 0
  1727  00001F                     UART_buff_modulo_inc@my_value:
  1728                           	opt stack 0
  1729  00001F                     memset@n:
  1730                           	opt stack 0
  1731                           
  1732                           ; 2 bytes @ 0x1E
  1733  00001F                     	ds	1
  1734  000020                     ??_crcBufS_put:
  1735  000020                     ??___ftpack:
  1736  000020                     I2C1_MasterTRBInsert@count:
  1737                           	opt stack 0
  1738  000020                     CRC8@tempI:
  1739                           	opt stack 0
  1740  000020                     ___awdiv@sign:
  1741                           	opt stack 0
  1742  000020                     I2C1_MasterWriteTRBBuild@address:
  1743                           	opt stack 0
  1744                           
  1745                           ; 2 bytes @ 0x1F
  1746  000020                     	ds	1
  1747  000021                     ?_buttonsCollector:
  1748                           	opt stack 0
  1749  000021                     CRC8@crc:
  1750                           	opt stack 0
  1751  000021                     SetLEDOut@state:
  1752                           	opt stack 0
  1753  000021                     FastTransfer_buffer_put@_this:
  1754                           	opt stack 0
  1755  000021                     UART_buff_put@_this:
  1756                           	opt stack 0
  1757  000021                     UART_buff_get@_this:
  1758                           	opt stack 0
  1759  000021                     ___awdiv@quotient:
  1760                           	opt stack 0
  1761  000021                     memset@p:
  1762                           	opt stack 0
  1763                           
  1764                           ; 2 bytes @ 0x20
  1765  000021                     	ds	1
  1766  000022                     ??_I2C1_MasterWriteTRBBuild:
  1767                           
  1768                           ; 1 bytes @ 0x21
  1769  000022                     	ds	1
  1770  000023                     ??_buttonsCollector:
  1771  000023                     ??_SetLEDOut:
  1772  000023                     ??_UART_buff_get:
  1773  000023                     ?___lwtoft:
  1774                           	opt stack 0
  1775  000023                     FastTransfer_buffer_put@towhere:
  1776                           	opt stack 0
  1777  000023                     UART_buff_put@c:
  1778                           	opt stack 0
  1779  000023                     LEDsetBar@bar:
  1780                           	opt stack 0
  1781  000023                     FastTransfer_buffer_flush@_this:
  1782                           	opt stack 0
  1783  000023                     crcBufS_status_put@wantedTime:
  1784                           	opt stack 0
  1785  000023                     UART_buff_init@_this:
  1786                           	opt stack 0
  1787  000023                     ___lwtoft@c:
  1788                           	opt stack 0
  1789                           
  1790                           ; 2 bytes @ 0x22
  1791  000023                     	ds	1
  1792  000024                     ??_UART_buff_put:
  1793  000024                     I2C1_MasterWrite@pdata:
  1794                           	opt stack 0
  1795  000024                     FastTransfer_buffer_put@towhat:
  1796                           	opt stack 0
  1797                           
  1798                           ; 2 bytes @ 0x23
  1799  000024                     	ds	1
  1800  000025                     UART_buff_get@c:
  1801                           	opt stack 0
  1802  000025                     LEDsetBar@color:
  1803                           	opt stack 0
  1804  000025                     handleIndicators@receivedIndicators:
  1805                           	opt stack 0
  1806  000025                     FastTransfer_buffer_flush@clearBuffer:
  1807                           	opt stack 0
  1808  000025                     crcBufS_get@wantedTime:
  1809                           	opt stack 0
  1810                           
  1811                           ; 2 bytes @ 0x24
  1812  000025                     	ds	1
  1813  000026                     ??_FastTransfer_buffer_put:
  1814  000026                     ?___ftmul:
  1815                           	opt stack 0
  1816  000026                     I2C1_MasterWrite@length:
  1817                           	opt stack 0
  1818  000026                     Send_put@_data:
  1819                           	opt stack 0
  1820  000026                     buttonsCollector@sendVal:
  1821                           	opt stack 0
  1822  000026                     ___ftmul@f1:
  1823                           	opt stack 0
  1824                           
  1825                           ; 3 bytes @ 0x25
  1826  000026                     	ds	1
  1827  000027                     ??_handleIndicators:
  1828  000027                     ??_sendData:
  1829  000027                     I2C1_MasterWrite@address:
  1830                           	opt stack 0
  1831  000027                     LEDsetBar@c:
  1832                           	opt stack 0
  1833                           
  1834                           ; 2 bytes @ 0x26
  1835  000027                     	ds	1
  1836  000028                     sendData@whereToSend:
  1837                           	opt stack 0
  1838  000028                     buttonsCollector@i:
  1839                           	opt stack 0
  1840                           
  1841                           ; 2 bytes @ 0x27
  1842  000028                     	ds	1
  1843  000029                     sendData@CS:
  1844                           	opt stack 0
  1845  000029                     I2C1_MasterWrite@pflag:
  1846                           	opt stack 0
  1847  000029                     LEDsetBar@a:
  1848                           	opt stack 0
  1849  000029                     ___ftmul@f2:
  1850                           	opt stack 0
  1851                           
  1852                           ; 3 bytes @ 0x28
  1853  000029                     	ds	1
  1854  00002A                     handleIndicators@i:
  1855                           	opt stack 0
  1856  00002A                     sendData@i:
  1857                           	opt stack 0
  1858  00002A                     ToSend@what:
  1859                           	opt stack 0
  1860                           
  1861                           ; 2 bytes @ 0x29
  1862  00002A                     	ds	1
  1863  00002B                     
  1864                           ; 1 bytes @ 0x2A
  1865  00002B                     	ds	1
  1866  00002C                     tblptru	equ	0xFF8
  1867                           tblptrh	equ	0xFF7
  1868                           tblptrl	equ	0xFF6
  1869                           tablat	equ	0xFF5
  1870                           postinc0	equ	0xFEE
  1871                           wreg	equ	0xFE8
  1872                           
  1873                           ; 1 bytes @ 0x2B
  1874 ;;
  1875 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1876 ;;
  1877 ;; *************** function _main *****************
  1878 ;; Defined at:
  1879 ;;		line 32 in file "main.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;		None
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  ADCNT           2   24[BANK1 ] int 
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1893 ;;      Params:         0       0       0       0       0       0       0
  1894 ;;      Locals:         0       0       2       0       0       0       0
  1895 ;;      Temps:          0       0       0       0       0       0       0
  1896 ;;      Totals:         0       0       2       0       0       0       0
  1897 ;;Total ram usage:        2 bytes
  1898 ;; Hardware stack levels required when called:   10
  1899 ;; This function calls:
  1900 ;;		_LEDbegin
  1901 ;;		_LEDsetValue
  1902 ;;		_LEDwriteDisplay
  1903 ;;		_SYSTEM_Initialize
  1904 ;;		___ftmul
  1905 ;;		___fttol
  1906 ;;		___lwtoft
  1907 ;;		_updateComms
  1908 ;; This function is called by:
  1909 ;;		Startup code after reset
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           	psect	text0
  1914  001D4C                     __ptext0:
  1915                           	opt stack 0
  1916  001D4C                     _main:
  1917                           	opt stack 21
  1918                           
  1919                           ;main.c: 34: SYSTEM_Initialize();
  1920                           
  1921                           ;incstack = 0
  1922  001D4C  EC62  F014         	call	_SYSTEM_Initialize	;wreg free
  1923                           
  1924                           ;main.c: 53: (INTCONbits.GIE = 1);
  1925  001D50  8EF2               	bsf	intcon,7,c	;volatile
  1926                           
  1927                           ;main.c: 56: (INTCONbits.PEIE = 1);
  1928  001D52  8CF2               	bsf	intcon,6,c	;volatile
  1929                           
  1930                           ;main.c: 63: int ADCNT = 1;
  1931  001D54  0E00               	movlw	0
  1932  001D56  0101               	movlb	1	; () banked
  1933  001D58  6F52               	movwf	(main@ADCNT+1)& (0+255),b
  1934  001D5A  0E01               	movlw	1
  1935  001D5C  6F51               	movwf	main@ADCNT& (0+255),b
  1936                           
  1937                           ; BSR set to: 1
  1938                           ;main.c: 64: LEDbegin(0x70);
  1939  001D5E  0E70               	movlw	112
  1940  001D60  EC37  F012         	call	_LEDbegin
  1941                           
  1942                           ;main.c: 65: LEDbegin(0x71);
  1943  001D64  0E71               	movlw	113
  1944  001D66  EC37  F012         	call	_LEDbegin
  1945                           
  1946                           ;main.c: 66: do { LATA3 = 1; } while(0);
  1947  001D6A  8689               	bsf	3977,3,c	;volatile
  1948                           
  1949                           ;main.c: 67: LATCbits.LATC5 = 0;
  1950  001D6C  9A8B               	bcf	3979,5,c	;volatile
  1951  001D6E                     l7506:
  1952                           
  1953                           ;main.c: 69: updateComms();
  1954  001D6E  EC7B  F016         	call	_updateComms	;wreg free
  1955                           
  1956                           ;main.c: 75: if (time > 1) {
  1957  001D72  0100               	movlb	0	; () banked
  1958  001D74  51DE               	movf	(_time+1)& (0+255),w,b	;volatile
  1959  001D76  E105               	bnz	u8750
  1960  001D78  0E02               	movlw	2
  1961  001D7A  0100               	movlb	0	; () banked
  1962  001D7C  5DDD               	subwf	_time& (0+255),w,b	;volatile
  1963  001D7E  A0D8               	btfss	status,0,c
  1964  001D80  D7F6               	goto	l7506
  1965  001D82                     u8750:
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;main.c: 77: LEDsetValue((throttle)*(24.0 / 100.0), 1);
  1969  001D82  0EC3               	movlw	195
  1970  001D84  6E29               	movwf	___ftmul@f2,c
  1971  001D86  0E75               	movlw	117
  1972  001D88  6E2A               	movwf	___ftmul@f2+1,c
  1973  001D8A  0E3E               	movlw	62
  1974  001D8C  6E2B               	movwf	___ftmul@f2+2,c
  1975  001D8E  C0DB  F023         	movff	_throttle,___lwtoft@c
  1976  001D92  C0DC  F024         	movff	_throttle+1,___lwtoft@c+1
  1977  001D96  EC5D  F017         	call	___lwtoft	;wreg free
  1978  001D9A  C023  F026         	movff	?___lwtoft,___ftmul@f1
  1979  001D9E  C024  F027         	movff	?___lwtoft+1,___ftmul@f1+1
  1980  001DA2  C025  F028         	movff	?___lwtoft+2,___ftmul@f1+2
  1981  001DA6  ECD6  F00B         	call	___ftmul	;wreg free
  1982  001DAA  C026  F139         	movff	?___ftmul,___fttol@f1
  1983  001DAE  C027  F13A         	movff	?___ftmul+1,___fttol@f1+1
  1984  001DB2  C028  F13B         	movff	?___ftmul+2,___fttol@f1+2
  1985  001DB6  EC9C  F00A         	call	___fttol	;wreg free
  1986  001DBA  C139  F149         	movff	?___fttol,LEDsetValue@value
  1987  001DBE  C13A  F14A         	movff	?___fttol+1,LEDsetValue@value+1
  1988  001DC2  0E00               	movlw	0
  1989  001DC4  0101               	movlb	1	; () banked
  1990  001DC6  6F4C               	movwf	(LEDsetValue@color+1)& (0+255),b
  1991  001DC8  0E01               	movlw	1
  1992  001DCA  6F4B               	movwf	LEDsetValue@color& (0+255),b
  1993  001DCC  ECE0  F011         	call	_LEDsetValue	;wreg free
  1994                           
  1995                           ;main.c: 78: LEDwriteDisplay(0x70);
  1996  001DD0  0E70               	movlw	112
  1997  001DD2  EC6C  F00C         	call	_LEDwriteDisplay
  1998                           
  1999                           ;main.c: 79: LEDsetValue((brake)*(24.0 / 100.0), 1);
  2000  001DD6  0EC3               	movlw	195
  2001  001DD8  6E29               	movwf	___ftmul@f2,c
  2002  001DDA  0E75               	movlw	117
  2003  001DDC  6E2A               	movwf	___ftmul@f2+1,c
  2004  001DDE  0E3E               	movlw	62
  2005  001DE0  6E2B               	movwf	___ftmul@f2+2,c
  2006  001DE2  C0C7  F023         	movff	_brake,___lwtoft@c
  2007  001DE6  C0C8  F024         	movff	_brake+1,___lwtoft@c+1
  2008  001DEA  EC5D  F017         	call	___lwtoft	;wreg free
  2009  001DEE  C023  F026         	movff	?___lwtoft,___ftmul@f1
  2010  001DF2  C024  F027         	movff	?___lwtoft+1,___ftmul@f1+1
  2011  001DF6  C025  F028         	movff	?___lwtoft+2,___ftmul@f1+2
  2012  001DFA  ECD6  F00B         	call	___ftmul	;wreg free
  2013  001DFE  C026  F139         	movff	?___ftmul,___fttol@f1
  2014  001E02  C027  F13A         	movff	?___ftmul+1,___fttol@f1+1
  2015  001E06  C028  F13B         	movff	?___ftmul+2,___fttol@f1+2
  2016  001E0A  EC9C  F00A         	call	___fttol	;wreg free
  2017  001E0E  C139  F149         	movff	?___fttol,LEDsetValue@value
  2018  001E12  C13A  F14A         	movff	?___fttol+1,LEDsetValue@value+1
  2019  001E16  0E00               	movlw	0
  2020  001E18  0101               	movlb	1	; () banked
  2021  001E1A  6F4C               	movwf	(LEDsetValue@color+1)& (0+255),b
  2022  001E1C  0E01               	movlw	1
  2023  001E1E  6F4B               	movwf	LEDsetValue@color& (0+255),b
  2024  001E20  ECE0  F011         	call	_LEDsetValue	;wreg free
  2025                           
  2026                           ;main.c: 80: LEDwriteDisplay(0x71);
  2027  001E24  0E71               	movlw	113
  2028  001E26  EC6C  F00C         	call	_LEDwriteDisplay
  2029                           
  2030                           ;main.c: 81: do { LATA3 = ~LATA3; } while(0);
  2031  001E2A  B689               	btfsc	3977,3,c	;volatile
  2032  001E2C  D002               	goto	u8760
  2033  001E2E  8689               	bsf	3977,3,c	;volatile
  2034  001E30  D001               	goto	l7514
  2035  001E32                     u8760:
  2036  001E32  9689               	bcf	3977,3,c	;volatile
  2037  001E34                     l7514:
  2038                           
  2039                           ;main.c: 82: time = 0;
  2040  001E34  0E00               	movlw	0
  2041  001E36  0100               	movlb	0	; () banked
  2042  001E38  6FDE               	movwf	(_time+1)& (0+255),b	;volatile
  2043  001E3A  0E00               	movlw	0
  2044  001E3C  6FDD               	movwf	_time& (0+255),b	;volatile
  2045                           
  2046                           ; BSR set to: 0
  2047                           
  2048                           ; BSR set to: 0
  2049  001E3E  D797               	goto	l7506
  2050  001E40                     __end_of_main:
  2051                           	opt stack 0
  2052                           tblptru	equ	0xFF8
  2053                           tblptrh	equ	0xFF7
  2054                           tblptrl	equ	0xFF6
  2055                           tablat	equ	0xFF5
  2056                           intcon	equ	0xFF2
  2057                           postinc0	equ	0xFEE
  2058                           wreg	equ	0xFE8
  2059                           status	equ	0xFD8
  2060                           
  2061 ;; *************** function _updateComms *****************
  2062 ;; Defined at:
  2063 ;;		line 7 in file "Communications.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;		None
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;		None
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2077 ;;      Params:         0       0       0       0       0       0       0
  2078 ;;      Locals:         0       0       0       0       0       0       0
  2079 ;;      Temps:          0       0       0       0       0       0       0
  2080 ;;      Totals:         0       0       0       0       0       0       0
  2081 ;;Total ram usage:        0 bytes
  2082 ;; Hardware stack levels used:    1
  2083 ;; Hardware stack levels required when called:    9
  2084 ;; This function calls:
  2085 ;;		_TBbarGraphs
  2086 ;;		_handleIndicators
  2087 ;;		_receiveData
  2088 ;;		_respondECU
  2089 ;; This function is called by:
  2090 ;;		_main
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           	psect	text1
  2095  002CF6                     __ptext1:
  2096                           	opt stack 0
  2097  002CF6                     _updateComms:
  2098                           	opt stack 21
  2099                           
  2100                           ;Communications.c: 9: if (receiveData()) {
  2101                           
  2102                           ; BSR set to: 0
  2103                           ;incstack = 0
  2104  002CF6  EC6A  F000         	call	_receiveData	;wreg free
  2105  002CFA  0900               	iorlw	0
  2106  002CFC  B4D8               	btfsc	status,2,c
  2107  002CFE  0012               	return	
  2108                           
  2109                           ;Communications.c: 11: respondECU();
  2110  002D00  ECDA  F015         	call	_respondECU	;wreg free
  2111                           
  2112                           ;Communications.c: 13: handleIndicators(receiveArray[2]);
  2113  002D04  C104  F025         	movff	_receiveArray+4,handleIndicators@receivedIndicators	;volatile
  2114  002D08  C105  F026         	movff	_receiveArray+5,handleIndicators@receivedIndicators+1	;volatile
  2115  002D0C  ECEC  F013         	call	_handleIndicators	;wreg free
  2116                           
  2117                           ;Communications.c: 14: TBbarGraphs(receiveArray[3], receiveArray[4]);
  2118  002D10  C106  F01B         	movff	_receiveArray+6,TBbarGraphs@t	;volatile
  2119  002D14  C107  F01C         	movff	_receiveArray+7,TBbarGraphs@t+1	;volatile
  2120  002D18  C108  F01D         	movff	_receiveArray+8,TBbarGraphs@b	;volatile
  2121  002D1C  C109  F01E         	movff	_receiveArray+9,TBbarGraphs@b+1	;volatile
  2122  002D20  ECF6  F017         	call	_TBbarGraphs	;wreg free
  2123                           
  2124                           ;Communications.c: 15: receiveArray[0] = 0;
  2125  002D24  0E00               	movlw	0
  2126  002D26  0101               	movlb	1	; () banked
  2127  002D28  6F01               	movwf	(_receiveArray+1)& (0+255),b	;volatile
  2128  002D2A  0E00               	movlw	0
  2129  002D2C  6F00               	movwf	_receiveArray& (0+255),b	;volatile
  2130  002D2E  0012               	return	
  2131  002D30                     __end_of_updateComms:
  2132                           	opt stack 0
  2133                           tblptru	equ	0xFF8
  2134                           tblptrh	equ	0xFF7
  2135                           tblptrl	equ	0xFF6
  2136                           tablat	equ	0xFF5
  2137                           intcon	equ	0xFF2
  2138                           postinc0	equ	0xFEE
  2139                           wreg	equ	0xFE8
  2140                           status	equ	0xFD8
  2141                           
  2142 ;; *************** function _respondECU *****************
  2143 ;; Defined at:
  2144 ;;		line 19 in file "Communications.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;		None
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;		None
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      void 
  2151 ;; Registers used:
  2152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2158 ;;      Params:         0       0       0       0       0       0       0
  2159 ;;      Locals:         0       0       0       0       0       0       0
  2160 ;;      Temps:          0       0       0       0       0       0       0
  2161 ;;      Totals:         0       0       0       0       0       0       0
  2162 ;;Total ram usage:        0 bytes
  2163 ;; Hardware stack levels used:    1
  2164 ;; Hardware stack levels required when called:    8
  2165 ;; This function calls:
  2166 ;;		_Delay
  2167 ;;		_ToSend
  2168 ;;		_buttonsCollector
  2169 ;;		_sendData
  2170 ;; This function is called by:
  2171 ;;		_updateComms
  2172 ;; This function uses a non-reentrant model
  2173 ;;
  2174                           
  2175                           	psect	text2
  2176  002BB4                     __ptext2:
  2177                           	opt stack 0
  2178  002BB4                     _respondECU:
  2179                           	opt stack 21
  2180                           
  2181                           ;Communications.c: 20: LATCbits.LATC5 = 1;
  2182                           
  2183                           ;incstack = 0
  2184  002BB4  8A8B               	bsf	3979,5,c	;volatile
  2185                           
  2186                           ;Communications.c: 21: ToSend(0, 3);
  2187  002BB6  0E00               	movlw	0
  2188  002BB8  6E2B               	movwf	ToSend@what+1,c
  2189  002BBA  0E03               	movlw	3
  2190  002BBC  6E2A               	movwf	ToSend@what,c
  2191  002BBE  0E00               	movlw	0
  2192  002BC0  EC80  F017         	call	_ToSend
  2193                           
  2194                           ;Communications.c: 22: ToSend(8, buttonsCollector());
  2195  002BC4  EC9C  F014         	call	_buttonsCollector	;wreg free
  2196  002BC8  C021  F02A         	movff	?_buttonsCollector,ToSend@what
  2197  002BCC  C022  F02B         	movff	?_buttonsCollector+1,ToSend@what+1
  2198  002BD0  0E08               	movlw	8
  2199  002BD2  EC80  F017         	call	_ToSend
  2200                           
  2201                           ;Communications.c: 23: Delay(9);
  2202  002BD6  0E00               	movlw	0
  2203  002BD8  6E1C               	movwf	Delay@wait+1,c
  2204  002BDA  0E09               	movlw	9
  2205  002BDC  6E1B               	movwf	Delay@wait,c
  2206  002BDE  EC98  F016         	call	_Delay	;wreg free
  2207                           
  2208                           ;Communications.c: 24: sendData(1);
  2209  002BE2  0E01               	movlw	1
  2210  002BE4  EC3E  F00B         	call	_sendData
  2211                           
  2212                           ;Communications.c: 25: Delay(3);
  2213  002BE8  0E00               	movlw	0
  2214  002BEA  6E1C               	movwf	Delay@wait+1,c
  2215  002BEC  0E03               	movlw	3
  2216  002BEE  6E1B               	movwf	Delay@wait,c
  2217  002BF0  EC98  F016         	call	_Delay	;wreg free
  2218                           
  2219                           ;Communications.c: 26: LATCbits.LATC5 = 0;
  2220  002BF4  9A8B               	bcf	3979,5,c	;volatile
  2221  002BF6  0012               	return		;funcret
  2222  002BF8                     __end_of_respondECU:
  2223                           	opt stack 0
  2224                           tblptru	equ	0xFF8
  2225                           tblptrh	equ	0xFF7
  2226                           tblptrl	equ	0xFF6
  2227                           tablat	equ	0xFF5
  2228                           intcon	equ	0xFF2
  2229                           postinc0	equ	0xFEE
  2230                           wreg	equ	0xFE8
  2231                           status	equ	0xFD8
  2232                           
  2233 ;; *************** function _sendData *****************
  2234 ;; Defined at:
  2235 ;;		line 53 in file "FastTransfer.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;  whereToSend     1    wreg     unsigned char 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  whereToSend     1   39[COMRAM] unsigned char 
  2240 ;;  i               2   41[COMRAM] int 
  2241 ;;  CS              1   40[COMRAM] unsigned char 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      void 
  2244 ;; Registers used:
  2245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2251 ;;      Params:         0       0       0       0       0       0       0
  2252 ;;      Locals:         4       0       0       0       0       0       0
  2253 ;;      Temps:          1       0       0       0       0       0       0
  2254 ;;      Totals:         5       0       0       0       0       0       0
  2255 ;;Total ram usage:        5 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; Hardware stack levels required when called:    7
  2258 ;; This function calls:
  2259 ;;		Absolute function
  2260 ;;		_CRC8
  2261 ;;		_FastTransfer_buffer_flush
  2262 ;;		_Send_put
  2263 ;;		_crcBufS_put
  2264 ;; This function is called by:
  2265 ;;		_respondECU
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           	psect	text3
  2270  00167C                     __ptext3:
  2271                           	opt stack 0
  2272  00167C                     _sendData:
  2273                           	opt stack 21
  2274                           
  2275                           ;incstack = 0
  2276                           ;sendData@whereToSend stored from wreg
  2277  00167C  6E28               	movwf	sendData@whereToSend,c
  2278                           
  2279                           ;FastTransfer.c: 56: unsigned char CS = CRC8(sendStructAddress, ring_buffer.count);
  2280  00167E  C0D7  F01B         	movff	_sendStructAddress,CRC8@data
  2281  001682  C0D8  F01C         	movff	_sendStructAddress+1,CRC8@data+1
  2282  001686  C2CC  F01D         	movff	_ring_buffer+204,CRC8@len
  2283  00168A  ECB5  F015         	call	_CRC8	;wreg free
  2284  00168E  6E29               	movwf	sendData@CS,c
  2285                           
  2286                           ;FastTransfer.c: 58: serial_write(0x06);
  2287  001690  D801               	call	u6728
  2288  001692  D00B               	goto	l6428
  2289  001694                     u6728:
  2290  001694  0005               	push	
  2291  001696  6EFA               	movwf	pclath,c
  2292  001698  5032               	movf	_serial_write,w,c
  2293  00169A  6EFD               	movwf	tosl,c
  2294  00169C  5033               	movf	_serial_write+1,w,c
  2295  00169E  6EFE               	movwf	tosh,c
  2296  0016A0  50F8               	movf	tblptru,w,c
  2297  0016A2  6EFF               	movwf	tosu,c
  2298  0016A4  50FA               	movf	pclath,w,c
  2299  0016A6  0E06               	movlw	6
  2300  0016A8  0012               	return		;indir
  2301  0016AA                     l6428:
  2302                           
  2303                           ;FastTransfer.c: 59: serial_write(0x85);
  2304  0016AA  D801               	call	u6738
  2305  0016AC  D00B               	goto	l6430
  2306  0016AE                     u6738:
  2307  0016AE  0005               	push	
  2308  0016B0  6EFA               	movwf	pclath,c
  2309  0016B2  5032               	movf	_serial_write,w,c
  2310  0016B4  6EFD               	movwf	tosl,c
  2311  0016B6  5033               	movf	_serial_write+1,w,c
  2312  0016B8  6EFE               	movwf	tosh,c
  2313  0016BA  50F8               	movf	tblptru,w,c
  2314  0016BC  6EFF               	movwf	tosu,c
  2315  0016BE  50FA               	movf	pclath,w,c
  2316  0016C0  0E85               	movlw	133
  2317  0016C2  0012               	return		;indir
  2318  0016C4                     l6430:
  2319                           
  2320                           ;FastTransfer.c: 60: serial_write(whereToSend);
  2321  0016C4  D801               	call	u6748
  2322  0016C6  D00B               	goto	l6432
  2323  0016C8                     u6748:
  2324  0016C8  0005               	push	
  2325  0016CA  6EFA               	movwf	pclath,c
  2326  0016CC  5032               	movf	_serial_write,w,c
  2327  0016CE  6EFD               	movwf	tosl,c
  2328  0016D0  5033               	movf	_serial_write+1,w,c
  2329  0016D2  6EFE               	movwf	tosh,c
  2330  0016D4  50F8               	movf	tblptru,w,c
  2331  0016D6  6EFF               	movwf	tosu,c
  2332  0016D8  50FA               	movf	pclath,w,c
  2333  0016DA  5028               	movf	sendData@whereToSend,w,c
  2334  0016DC  0012               	return		;indir
  2335  0016DE                     l6432:
  2336                           
  2337                           ;FastTransfer.c: 61: serial_write(moduleAddress);
  2338  0016DE  D801               	call	u6758
  2339  0016E0  D00B               	goto	l6434
  2340  0016E2                     u6758:
  2341  0016E2  0005               	push	
  2342  0016E4  6EFA               	movwf	pclath,c
  2343  0016E6  5032               	movf	_serial_write,w,c
  2344  0016E8  6EFD               	movwf	tosl,c
  2345  0016EA  5033               	movf	_serial_write+1,w,c
  2346  0016EC  6EFE               	movwf	tosh,c
  2347  0016EE  50F8               	movf	tblptru,w,c
  2348  0016F0  6EFF               	movwf	tosu,c
  2349  0016F2  50FA               	movf	pclath,w,c
  2350  0016F4  503B               	movf	_moduleAddress,w,c
  2351  0016F6  0012               	return		;indir
  2352  0016F8                     l6434:
  2353                           
  2354                           ;FastTransfer.c: 62: serial_write(ring_buffer.count);
  2355  0016F8  D801               	call	u6768
  2356  0016FA  D00C               	goto	l6436
  2357  0016FC                     u6768:
  2358  0016FC  0005               	push	
  2359  0016FE  6EFA               	movwf	pclath,c
  2360  001700  5032               	movf	_serial_write,w,c
  2361  001702  6EFD               	movwf	tosl,c
  2362  001704  5033               	movf	_serial_write+1,w,c
  2363  001706  6EFE               	movwf	tosh,c
  2364  001708  50F8               	movf	tblptru,w,c
  2365  00170A  6EFF               	movwf	tosu,c
  2366  00170C  50FA               	movf	pclath,w,c
  2367  00170E  0102               	movlb	2	; () banked
  2368  001710  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  2369  001712  0012               	return		;indir
  2370  001714                     l6436:
  2371                           
  2372                           ;FastTransfer.c: 66: int i;
  2373                           ;FastTransfer.c: 67: for (i = 0; i < ring_buffer.count; i++) {
  2374  001714  0E00               	movlw	0
  2375  001716  6E2B               	movwf	sendData@i+1,c
  2376  001718  0E00               	movlw	0
  2377  00171A  6E2A               	movwf	sendData@i,c
  2378  00171C  D017               	goto	l6442
  2379  00171E                     l6438:
  2380                           
  2381                           ;FastTransfer.c: 68: serial_write(*(sendStructAddress + i));
  2382  00171E  D801               	call	u6778
  2383  001720  D013               	goto	l6440
  2384  001722                     u6778:
  2385  001722  0005               	push	
  2386  001724  6EFA               	movwf	pclath,c
  2387  001726  5032               	movf	_serial_write,w,c
  2388  001728  6EFD               	movwf	tosl,c
  2389  00172A  5033               	movf	_serial_write+1,w,c
  2390  00172C  6EFE               	movwf	tosh,c
  2391  00172E  50F8               	movf	tblptru,w,c
  2392  001730  6EFF               	movwf	tosu,c
  2393  001732  50FA               	movf	pclath,w,c
  2394  001734  502A               	movf	sendData@i,w,c
  2395  001736  0100               	movlb	0	; () banked
  2396  001738  25D7               	addwf	_sendStructAddress& (0+255),w,b
  2397  00173A  6ED9               	movwf	fsr2l,c
  2398  00173C  502B               	movf	sendData@i+1,w,c
  2399  00173E  0100               	movlb	0	; () banked
  2400  001740  21D8               	addwfc	(_sendStructAddress+1)& (0+255),w,b
  2401  001742  6EDA               	movwf	fsr2h,c
  2402  001744  50DF               	movf	indf2,w,c
  2403  001746  0012               	return		;indir
  2404  001748                     l6440:
  2405  001748  4A2A               	infsnz	sendData@i,f,c
  2406  00174A  2A2B               	incf	sendData@i+1,f,c
  2407  00174C                     l6442:
  2408  00174C  0102               	movlb	2	; () banked
  2409  00174E  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  2410  001750  5C2A               	subwf	sendData@i,w,c
  2411  001752  502B               	movf	sendData@i+1,w,c
  2412  001754  0A80               	xorlw	128
  2413  001756  6E27               	movwf	??_sendData& (0+255),c
  2414  001758  0102               	movlb	2	; () banked
  2415  00175A  51CD               	movf	(_ring_buffer+205)& (0+255),w,b
  2416  00175C  0A80               	xorlw	128
  2417  00175E  5827               	subwfb	??_sendData& (0+255),w,c
  2418  001760  A0D8               	btfss	status,0,c
  2419  001762  D7DD               	goto	l6438
  2420                           
  2421                           ; BSR set to: 2
  2422                           ;FastTransfer.c: 69: }
  2423                           ;FastTransfer.c: 72: serial_write(CS);
  2424                           
  2425                           ; BSR set to: 2
  2426  001764  D801               	call	u6798
  2427  001766  D00B               	goto	l6446
  2428  001768                     u6798:
  2429  001768  0005               	push	
  2430  00176A  6EFA               	movwf	pclath,c
  2431  00176C  5032               	movf	_serial_write,w,c
  2432  00176E  6EFD               	movwf	tosl,c
  2433  001770  5033               	movf	_serial_write+1,w,c
  2434  001772  6EFE               	movwf	tosh,c
  2435  001774  50F8               	movf	tblptru,w,c
  2436  001776  6EFF               	movwf	tosu,c
  2437  001778  50FA               	movf	pclath,w,c
  2438  00177A  5029               	movf	sendData@CS,w,c
  2439  00177C  0012               	return		;indir
  2440  00177E                     l6446:
  2441                           
  2442                           ;FastTransfer.c: 75: crcBufS_put(&crc_buffer, whereToSend, CS, 0);
  2443  00177E  0E28               	movlw	low _crc_buffer
  2444  001780  6E1B               	movwf	crcBufS_put@_this,c
  2445  001782  0E01               	movlw	high _crc_buffer
  2446  001784  6E1C               	movwf	crcBufS_put@_this+1,c
  2447  001786  C028  F01D         	movff	sendData@whereToSend,crcBufS_put@address
  2448  00178A  C029  F01E         	movff	sendData@CS,crcBufS_put@oldCRC
  2449  00178E  0E00               	movlw	0
  2450  001790  6E1F               	movwf	crcBufS_put@status,c
  2451  001792  EC91  F00F         	call	_crcBufS_put
  2452                           
  2453                           ;FastTransfer.c: 78: FastTransfer_buffer_flush(&ring_buffer, 1);
  2454  001796  0E00               	movlw	low _ring_buffer
  2455  001798  6E23               	movwf	FastTransfer_buffer_flush@_this,c
  2456  00179A  0E02               	movlw	high _ring_buffer
  2457  00179C  6E24               	movwf	FastTransfer_buffer_flush@_this+1,c
  2458  00179E  0E00               	movlw	0
  2459  0017A0  6E26               	movwf	FastTransfer_buffer_flush@clearBuffer+1,c
  2460  0017A2  0E01               	movlw	1
  2461  0017A4  6E25               	movwf	FastTransfer_buffer_flush@clearBuffer,c
  2462  0017A6  ECD4  F014         	call	_FastTransfer_buffer_flush	;wreg free
  2463  0017AA  0012               	return		;funcret
  2464  0017AC                     __end_of_sendData:
  2465                           	opt stack 0
  2466                           tosu	equ	0xFFF
  2467                           tosh	equ	0xFFE
  2468                           tosl	equ	0xFFD
  2469                           pclath	equ	0xFFA
  2470                           tblptru	equ	0xFF8
  2471                           tblptrh	equ	0xFF7
  2472                           tblptrl	equ	0xFF6
  2473                           tablat	equ	0xFF5
  2474                           intcon	equ	0xFF2
  2475                           postinc0	equ	0xFEE
  2476                           wreg	equ	0xFE8
  2477                           indf2	equ	0xFDF
  2478                           fsr2h	equ	0xFDA
  2479                           fsr2l	equ	0xFD9
  2480                           status	equ	0xFD8
  2481                           
  2482 ;; *************** function _crcBufS_put *****************
  2483 ;; Defined at:
  2484 ;;		line 322 in file "FastTransfer.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  2487 ;;		 -> crc_buffer(17), 
  2488 ;;  address         1   28[COMRAM] unsigned char 
  2489 ;;  oldCRC          1   29[COMRAM] unsigned char 
  2490 ;;  status          1   30[COMRAM] unsigned char 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;		None
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  1    wreg      void 
  2495 ;; Registers used:
  2496 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2502 ;;      Params:         5       0       0       0       0       0       0
  2503 ;;      Locals:         0       0       0       0       0       0       0
  2504 ;;      Temps:          2       0       0       0       0       0       0
  2505 ;;      Totals:         7       0       0       0       0       0       0
  2506 ;;Total ram usage:        7 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; Hardware stack levels required when called:    4
  2509 ;; This function calls:
  2510 ;;		Nothing
  2511 ;; This function is called by:
  2512 ;;		_sendData
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           	psect	text4
  2517  001F22                     __ptext4:
  2518                           	opt stack 0
  2519  001F22                     _crcBufS_put:
  2520                           	opt stack 23
  2521                           
  2522                           ;FastTransfer.c: 323: _this->buf[_this->head] = address;
  2523                           
  2524                           ;incstack = 0
  2525  001F22  EE20 F00F          	lfsr	2,15
  2526  001F26  501B               	movf	crcBufS_put@_this,w,c
  2527  001F28  26D9               	addwf	fsr2l,f,c
  2528  001F2A  501C               	movf	crcBufS_put@_this+1,w,c
  2529  001F2C  22DA               	addwfc	fsr2h,f,c
  2530  001F2E  CFDE F020          	movff	postinc2,??_crcBufS_put
  2531  001F32  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  2532  001F36  5020               	movf	??_crcBufS_put,w,c
  2533  001F38  241B               	addwf	crcBufS_put@_this,w,c
  2534  001F3A  6ED9               	movwf	fsr2l,c
  2535  001F3C  5021               	movf	??_crcBufS_put+1,w,c
  2536  001F3E  201C               	addwfc	crcBufS_put@_this+1,w,c
  2537  001F40  6EDA               	movwf	fsr2h,c
  2538  001F42  C01D  FFDF         	movff	crcBufS_put@address,indf2
  2539                           
  2540                           ;FastTransfer.c: 324: _this->head++;
  2541  001F46  EE20 F00F          	lfsr	2,15
  2542  001F4A  501B               	movf	crcBufS_put@_this,w,c
  2543  001F4C  26D9               	addwf	fsr2l,f,c
  2544  001F4E  501C               	movf	crcBufS_put@_this+1,w,c
  2545  001F50  22DA               	addwfc	fsr2h,f,c
  2546  001F52  2ADE               	incf	postinc2,f,c
  2547  001F54  0E00               	movlw	0
  2548  001F56  22DD               	addwfc	postdec2,f,c
  2549                           
  2550                           ;FastTransfer.c: 325: _this->buf[_this->head] = oldCRC;
  2551  001F58  EE20 F00F          	lfsr	2,15
  2552  001F5C  501B               	movf	crcBufS_put@_this,w,c
  2553  001F5E  26D9               	addwf	fsr2l,f,c
  2554  001F60  501C               	movf	crcBufS_put@_this+1,w,c
  2555  001F62  22DA               	addwfc	fsr2h,f,c
  2556  001F64  CFDE F020          	movff	postinc2,??_crcBufS_put
  2557  001F68  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  2558  001F6C  5020               	movf	??_crcBufS_put,w,c
  2559  001F6E  241B               	addwf	crcBufS_put@_this,w,c
  2560  001F70  6ED9               	movwf	fsr2l,c
  2561  001F72  5021               	movf	??_crcBufS_put+1,w,c
  2562  001F74  201C               	addwfc	crcBufS_put@_this+1,w,c
  2563  001F76  6EDA               	movwf	fsr2h,c
  2564  001F78  C01E  FFDF         	movff	crcBufS_put@oldCRC,indf2
  2565                           
  2566                           ;FastTransfer.c: 326: _this->head++;
  2567  001F7C  EE20 F00F          	lfsr	2,15
  2568  001F80  501B               	movf	crcBufS_put@_this,w,c
  2569  001F82  26D9               	addwf	fsr2l,f,c
  2570  001F84  501C               	movf	crcBufS_put@_this+1,w,c
  2571  001F86  22DA               	addwfc	fsr2h,f,c
  2572  001F88  2ADE               	incf	postinc2,f,c
  2573  001F8A  0E00               	movlw	0
  2574  001F8C  22DD               	addwfc	postdec2,f,c
  2575                           
  2576                           ;FastTransfer.c: 327: _this->buf[_this->head] = status;
  2577  001F8E  EE20 F00F          	lfsr	2,15
  2578  001F92  501B               	movf	crcBufS_put@_this,w,c
  2579  001F94  26D9               	addwf	fsr2l,f,c
  2580  001F96  501C               	movf	crcBufS_put@_this+1,w,c
  2581  001F98  22DA               	addwfc	fsr2h,f,c
  2582  001F9A  CFDE F020          	movff	postinc2,??_crcBufS_put
  2583  001F9E  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  2584  001FA2  5020               	movf	??_crcBufS_put,w,c
  2585  001FA4  241B               	addwf	crcBufS_put@_this,w,c
  2586  001FA6  6ED9               	movwf	fsr2l,c
  2587  001FA8  5021               	movf	??_crcBufS_put+1,w,c
  2588  001FAA  201C               	addwfc	crcBufS_put@_this+1,w,c
  2589  001FAC  6EDA               	movwf	fsr2h,c
  2590  001FAE  C01F  FFDF         	movff	crcBufS_put@status,indf2
  2591                           
  2592                           ;FastTransfer.c: 328: _this->head++;
  2593  001FB2  EE20 F00F          	lfsr	2,15
  2594  001FB6  501B               	movf	crcBufS_put@_this,w,c
  2595  001FB8  26D9               	addwf	fsr2l,f,c
  2596  001FBA  501C               	movf	crcBufS_put@_this+1,w,c
  2597  001FBC  22DA               	addwfc	fsr2h,f,c
  2598  001FBE  2ADE               	incf	postinc2,f,c
  2599  001FC0  0E00               	movlw	0
  2600  001FC2  22DD               	addwfc	postdec2,f,c
  2601                           
  2602                           ;FastTransfer.c: 329: if (_this->head >= (5 * 3)) {
  2603  001FC4  EE20 F00F          	lfsr	2,15
  2604  001FC8  501B               	movf	crcBufS_put@_this,w,c
  2605  001FCA  26D9               	addwf	fsr2l,f,c
  2606  001FCC  501C               	movf	crcBufS_put@_this+1,w,c
  2607  001FCE  22DA               	addwfc	fsr2h,f,c
  2608  001FD0  0E01               	movlw	1
  2609  001FD2  BEDB               	btfsc	plusw2,7,c
  2610  001FD4  0012               	return	
  2611  001FD6  0E01               	movlw	1
  2612  001FD8  50DB               	movf	plusw2,w,c
  2613  001FDA  E104               	bnz	u6400
  2614  001FDC  0E0F               	movlw	15
  2615  001FDE  5CDE               	subwf	postinc2,w,c
  2616  001FE0  A0D8               	btfss	status,0,c
  2617  001FE2  0012               	return	
  2618  001FE4                     u6400:
  2619                           
  2620                           ;FastTransfer.c: 330: _this->head = 0;
  2621  001FE4  EE20 F00F          	lfsr	2,15
  2622  001FE8  501B               	movf	crcBufS_put@_this,w,c
  2623  001FEA  26D9               	addwf	fsr2l,f,c
  2624  001FEC  501C               	movf	crcBufS_put@_this+1,w,c
  2625  001FEE  22DA               	addwfc	fsr2h,f,c
  2626  001FF0  0E00               	movlw	0
  2627  001FF2  6EDE               	movwf	postinc2,c
  2628  001FF4  0E00               	movlw	0
  2629  001FF6  6EDD               	movwf	postdec2,c
  2630  001FF8  0012               	return	
  2631  001FFA                     __end_of_crcBufS_put:
  2632                           	opt stack 0
  2633                           tosu	equ	0xFFF
  2634                           tosh	equ	0xFFE
  2635                           tosl	equ	0xFFD
  2636                           pclath	equ	0xFFA
  2637                           tblptru	equ	0xFF8
  2638                           tblptrh	equ	0xFF7
  2639                           tblptrl	equ	0xFF6
  2640                           tablat	equ	0xFF5
  2641                           intcon	equ	0xFF2
  2642                           postinc0	equ	0xFEE
  2643                           wreg	equ	0xFE8
  2644                           indf2	equ	0xFDF
  2645                           postinc2	equ	0xFDE
  2646                           postdec2	equ	0xFDD
  2647                           plusw2	equ	0xFDB
  2648                           fsr2h	equ	0xFDA
  2649                           fsr2l	equ	0xFD9
  2650                           status	equ	0xFD8
  2651                           
  2652 ;; *************** function _FastTransfer_buffer_flush *****************
  2653 ;; Defined at:
  2654 ;;		line 262 in file "FastTransfer.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;  _this           2   34[COMRAM] PTR struct ringBufS
  2657 ;;		 -> ring_buffer(206), 
  2658 ;;  clearBuffer     2   36[COMRAM] const int 
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;		None
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  1    wreg      void 
  2663 ;; Registers used:
  2664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2670 ;;      Params:         4       0       0       0       0       0       0
  2671 ;;      Locals:         0       0       0       0       0       0       0
  2672 ;;      Temps:          0       0       0       0       0       0       0
  2673 ;;      Totals:         4       0       0       0       0       0       0
  2674 ;;Total ram usage:        4 bytes
  2675 ;; Hardware stack levels used:    1
  2676 ;; Hardware stack levels required when called:    5
  2677 ;; This function calls:
  2678 ;;		_memset
  2679 ;; This function is called by:
  2680 ;;		_sendData
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           	psect	text5
  2685  0029A8                     __ptext5:
  2686                           	opt stack 0
  2687  0029A8                     _FastTransfer_buffer_flush:
  2688                           	opt stack 22
  2689                           
  2690                           ;FastTransfer.c: 263: _this->count = 0;
  2691                           
  2692                           ;incstack = 0
  2693  0029A8  EE20 F0CC          	lfsr	2,204
  2694  0029AC  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  2695  0029AE  26D9               	addwf	fsr2l,f,c
  2696  0029B0  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  2697  0029B2  22DA               	addwfc	fsr2h,f,c
  2698  0029B4  0E00               	movlw	0
  2699  0029B6  6EDE               	movwf	postinc2,c
  2700  0029B8  0E00               	movlw	0
  2701  0029BA  6EDD               	movwf	postdec2,c
  2702                           
  2703                           ;FastTransfer.c: 264: _this->head = 0;
  2704  0029BC  EE20 F0C8          	lfsr	2,200
  2705  0029C0  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  2706  0029C2  26D9               	addwf	fsr2l,f,c
  2707  0029C4  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  2708  0029C6  22DA               	addwfc	fsr2h,f,c
  2709  0029C8  0E00               	movlw	0
  2710  0029CA  6EDE               	movwf	postinc2,c
  2711  0029CC  0E00               	movlw	0
  2712  0029CE  6EDD               	movwf	postdec2,c
  2713                           
  2714                           ;FastTransfer.c: 265: _this->tail = 0;
  2715  0029D0  EE20 F0CA          	lfsr	2,202
  2716  0029D4  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  2717  0029D6  26D9               	addwf	fsr2l,f,c
  2718  0029D8  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  2719  0029DA  22DA               	addwfc	fsr2h,f,c
  2720  0029DC  0E00               	movlw	0
  2721  0029DE  6EDE               	movwf	postinc2,c
  2722  0029E0  0E00               	movlw	0
  2723  0029E2  6EDD               	movwf	postdec2,c
  2724                           
  2725                           ;FastTransfer.c: 266: if (clearBuffer) {
  2726  0029E4  5025               	movf	FastTransfer_buffer_flush@clearBuffer,w,c
  2727  0029E6  1026               	iorwf	FastTransfer_buffer_flush@clearBuffer+1,w,c
  2728  0029E8  B4D8               	btfsc	status,2,c
  2729  0029EA  0012               	return	
  2730                           
  2731                           ;FastTransfer.c: 267: memset(_this->buf, 0, sizeof (_this->buf));
  2732  0029EC  C023  F01B         	movff	FastTransfer_buffer_flush@_this,memset@p1
  2733  0029F0  C024  F01C         	movff	FastTransfer_buffer_flush@_this+1,memset@p1+1
  2734  0029F4  0E00               	movlw	0
  2735  0029F6  6E1E               	movwf	memset@c+1,c
  2736  0029F8  0E00               	movlw	0
  2737  0029FA  6E1D               	movwf	memset@c,c
  2738  0029FC  0E00               	movlw	0
  2739  0029FE  6E20               	movwf	memset@n+1,c
  2740  002A00  0EC8               	movlw	200
  2741  002A02  6E1F               	movwf	memset@n,c
  2742  002A04  ECE2  F016         	call	_memset	;wreg free
  2743  002A08  0012               	return	
  2744  002A0A                     __end_of_FastTransfer_buffer_flush:
  2745                           	opt stack 0
  2746                           tosu	equ	0xFFF
  2747                           tosh	equ	0xFFE
  2748                           tosl	equ	0xFFD
  2749                           pclath	equ	0xFFA
  2750                           tblptru	equ	0xFF8
  2751                           tblptrh	equ	0xFF7
  2752                           tblptrl	equ	0xFF6
  2753                           tablat	equ	0xFF5
  2754                           intcon	equ	0xFF2
  2755                           postinc0	equ	0xFEE
  2756                           wreg	equ	0xFE8
  2757                           indf2	equ	0xFDF
  2758                           postinc2	equ	0xFDE
  2759                           postdec2	equ	0xFDD
  2760                           plusw2	equ	0xFDB
  2761                           fsr2h	equ	0xFDA
  2762                           fsr2l	equ	0xFD9
  2763                           status	equ	0xFD8
  2764                           
  2765 ;; *************** function _buttonsCollector *****************
  2766 ;; Defined at:
  2767 ;;		line 53 in file "Communications.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;		None
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;  i               2   39[COMRAM] int 
  2772 ;;  sendVal         2   37[COMRAM] unsigned int 
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  2   32[COMRAM] unsigned int 
  2775 ;; Registers used:
  2776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2782 ;;      Params:         2       0       0       0       0       0       0
  2783 ;;      Locals:         4       0       0       0       0       0       0
  2784 ;;      Temps:          3       0       0       0       0       0       0
  2785 ;;      Totals:         9       0       0       0       0       0       0
  2786 ;;Total ram usage:        9 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; Hardware stack levels required when called:    5
  2789 ;; This function calls:
  2790 ;;		_GetButtonState
  2791 ;; This function is called by:
  2792 ;;		_respondECU
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           	psect	text6
  2797  002938                     __ptext6:
  2798                           	opt stack 0
  2799  002938                     _buttonsCollector:
  2800                           	opt stack 23
  2801                           
  2802                           ;Communications.c: 54: unsigned int sendVal = 0;
  2803                           
  2804                           ;incstack = 0
  2805  002938  0E00               	movlw	0
  2806  00293A  6E27               	movwf	buttonsCollector@sendVal+1,c
  2807  00293C  0E00               	movlw	0
  2808  00293E  6E26               	movwf	buttonsCollector@sendVal,c
  2809                           
  2810                           ;Communications.c: 55: int i = 0;
  2811  002940  0E00               	movlw	0
  2812  002942  6E29               	movwf	buttonsCollector@i+1,c
  2813  002944  0E00               	movlw	0
  2814  002946  6E28               	movwf	buttonsCollector@i,c
  2815                           
  2816                           ;Communications.c: 56: for (i = 0; i < 8; i++) {
  2817  002948  0E00               	movlw	0
  2818  00294A  6E29               	movwf	buttonsCollector@i+1,c
  2819  00294C  0E00               	movlw	0
  2820  00294E  6E28               	movwf	buttonsCollector@i,c
  2821  002950  BE29               	btfsc	buttonsCollector@i+1,7,c
  2822  002952  D006               	goto	l6418
  2823  002954  5029               	movf	buttonsCollector@i+1,w,c
  2824  002956  E123               	bnz	l942
  2825  002958  0E08               	movlw	8
  2826  00295A  5C28               	subwf	buttonsCollector@i,w,c
  2827  00295C  B0D8               	btfsc	status,0,c
  2828  00295E  D01F               	goto	l942
  2829  002960                     l6418:
  2830                           
  2831                           ;Communications.c: 57: sendVal = sendVal | ((GetButtonState(i)&0x01) << i);
  2832  002960  C028  F023         	movff	buttonsCollector@i,??_buttonsCollector
  2833  002964  C028  F01B         	movff	buttonsCollector@i,GetButtonState@btnnum
  2834  002968  C029  F01C         	movff	buttonsCollector@i+1,GetButtonState@btnnum+1
  2835  00296C  EC37  F017         	call	_GetButtonState	;wreg free
  2836  002970  0B01               	andlw	1
  2837  002972  6E24               	movwf	(??_buttonsCollector+1)& (0+255),c
  2838  002974  6A25               	clrf	(??_buttonsCollector+2)& (0+255),c
  2839  002976  2A23               	incf	??_buttonsCollector,f,c
  2840  002978  D003               	goto	u6704
  2841  00297A                     u6705:
  2842  00297A  90D8               	bcf	status,0,c
  2843  00297C  3624               	rlcf	??_buttonsCollector+1,f,c
  2844  00297E  3625               	rlcf	??_buttonsCollector+2,f,c
  2845  002980                     u6704:
  2846  002980  2E23               	decfsz	??_buttonsCollector,f,c
  2847  002982  D7FB               	goto	u6705
  2848  002984  5026               	movf	buttonsCollector@sendVal,w,c
  2849  002986  1024               	iorwf	??_buttonsCollector+1,w,c
  2850  002988  6E26               	movwf	buttonsCollector@sendVal,c
  2851  00298A  5027               	movf	buttonsCollector@sendVal+1,w,c
  2852  00298C  1025               	iorwf	??_buttonsCollector+2,w,c
  2853  00298E  6E27               	movwf	buttonsCollector@sendVal+1,c
  2854  002990  4A28               	infsnz	buttonsCollector@i,f,c
  2855  002992  2A29               	incf	buttonsCollector@i+1,f,c
  2856  002994  BE29               	btfsc	buttonsCollector@i+1,7,c
  2857  002996  D7E4               	goto	l6418
  2858  002998  5029               	movf	buttonsCollector@i+1,w,c
  2859  00299A  E101               	bnz	u6710
  2860  00299C  D7DD               	goto	L1
  2861  00299E                     u6710:
  2862  00299E                     l942:
  2863                           
  2864                           ;Communications.c: 58: }
  2865                           ;Communications.c: 59: return sendVal;
  2866  00299E  C026  F021         	movff	buttonsCollector@sendVal,?_buttonsCollector
  2867  0029A2  C027  F022         	movff	buttonsCollector@sendVal+1,?_buttonsCollector+1
  2868  0029A6  0012               	return		;funcret
  2869  0029A8                     __end_of_buttonsCollector:
  2870                           	opt stack 0
  2871                           tosu	equ	0xFFF
  2872                           tosh	equ	0xFFE
  2873                           tosl	equ	0xFFD
  2874                           pclath	equ	0xFFA
  2875                           tblptru	equ	0xFF8
  2876                           tblptrh	equ	0xFF7
  2877                           tblptrl	equ	0xFF6
  2878                           tablat	equ	0xFF5
  2879                           intcon	equ	0xFF2
  2880                           postinc0	equ	0xFEE
  2881                           wreg	equ	0xFE8
  2882                           indf2	equ	0xFDF
  2883                           postinc2	equ	0xFDE
  2884                           postdec2	equ	0xFDD
  2885                           plusw2	equ	0xFDB
  2886                           fsr2h	equ	0xFDA
  2887                           fsr2l	equ	0xFD9
  2888                           status	equ	0xFD8
  2889                           
  2890 ;; *************** function _GetButtonState *****************
  2891 ;; Defined at:
  2892 ;;		line 184 in file "IO.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;  btnnum          2   26[COMRAM] int 
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;		None
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      unsigned char 
  2899 ;; Registers used:
  2900 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2906 ;;      Params:         2       0       0       0       0       0       0
  2907 ;;      Locals:         0       0       0       0       0       0       0
  2908 ;;      Temps:          4       0       0       0       0       0       0
  2909 ;;      Totals:         6       0       0       0       0       0       0
  2910 ;;Total ram usage:        6 bytes
  2911 ;; Hardware stack levels used:    1
  2912 ;; Hardware stack levels required when called:    4
  2913 ;; This function calls:
  2914 ;;		Nothing
  2915 ;; This function is called by:
  2916 ;;		_buttonsCollector
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           	psect	text7
  2921  002E6E                     __ptext7:
  2922                           	opt stack 0
  2923  002E6E                     _GetButtonState:
  2924                           	opt stack 23
  2925                           
  2926                           ;IO.c: 185: return butnarray[btnnum - 1];
  2927                           
  2928                           ;incstack = 0
  2929  002E6E  0EFF               	movlw	255
  2930  002E70  6E1D               	movwf	??_GetButtonState& (0+255),c
  2931  002E72  0EFF               	movlw	255
  2932  002E74  6E1E               	movwf	(??_GetButtonState+1)& (0+255),c
  2933  002E76  C01B  F01F         	movff	GetButtonState@btnnum,??_GetButtonState+2
  2934  002E7A  C01C  F020         	movff	GetButtonState@btnnum+1,??_GetButtonState+3
  2935  002E7E  501D               	movf	??_GetButtonState,w,c
  2936  002E80  261F               	addwf	??_GetButtonState+2,f,c
  2937  002E82  501E               	movf	??_GetButtonState+1,w,c
  2938  002E84  2220               	addwfc	??_GetButtonState+3,f,c
  2939  002E86  0EB0               	movlw	low _butnarray
  2940  002E88  241F               	addwf	??_GetButtonState+2,w,c
  2941  002E8A  6ED9               	movwf	fsr2l,c
  2942  002E8C  0E00               	movlw	high _butnarray
  2943  002E8E  2020               	addwfc	??_GetButtonState+3,w,c
  2944  002E90  6EDA               	movwf	fsr2h,c
  2945  002E92  50DF               	movf	indf2,w,c
  2946  002E94  0012               	return	
  2947  002E96                     __end_of_GetButtonState:
  2948                           	opt stack 0
  2949                           tosu	equ	0xFFF
  2950                           tosh	equ	0xFFE
  2951                           tosl	equ	0xFFD
  2952                           pclath	equ	0xFFA
  2953                           tblptru	equ	0xFF8
  2954                           tblptrh	equ	0xFF7
  2955                           tblptrl	equ	0xFF6
  2956                           tablat	equ	0xFF5
  2957                           intcon	equ	0xFF2
  2958                           postinc0	equ	0xFEE
  2959                           wreg	equ	0xFE8
  2960                           indf2	equ	0xFDF
  2961                           postinc2	equ	0xFDE
  2962                           postdec2	equ	0xFDD
  2963                           plusw2	equ	0xFDB
  2964                           fsr2h	equ	0xFDA
  2965                           fsr2l	equ	0xFD9
  2966                           status	equ	0xFD8
  2967                           
  2968 ;; *************** function _ToSend *****************
  2969 ;; Defined at:
  2970 ;;		line 217 in file "FastTransfer.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;  where           1    wreg     unsigned char 
  2973 ;;  what            2   41[COMRAM] unsigned int 
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;  where           1    0[BANK0 ] unsigned char 
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  1    wreg      void 
  2978 ;; Registers used:
  2979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2985 ;;      Params:         2       0       0       0       0       0       0
  2986 ;;      Locals:         0       1       0       0       0       0       0
  2987 ;;      Temps:          0       0       0       0       0       0       0
  2988 ;;      Totals:         2       1       0       0       0       0       0
  2989 ;;Total ram usage:        3 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; Hardware stack levels required when called:    6
  2992 ;; This function calls:
  2993 ;;		_FastTransfer_buffer_put
  2994 ;; This function is called by:
  2995 ;;		_respondECU
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           	psect	text8
  3000  002F00                     __ptext8:
  3001                           	opt stack 0
  3002  002F00                     _ToSend:
  3003                           	opt stack 22
  3004                           
  3005                           ;incstack = 0
  3006                           ;ToSend@where stored from wreg
  3007  002F00  0100               	movlb	0	; () banked
  3008  002F02  6FF4               	movwf	ToSend@where& (0+255),b
  3009                           
  3010                           ;FastTransfer.c: 218: FastTransfer_buffer_put(&ring_buffer, where, what);
  3011  002F04  0E00               	movlw	low _ring_buffer
  3012  002F06  6E21               	movwf	FastTransfer_buffer_put@_this,c
  3013  002F08  0E02               	movlw	high _ring_buffer
  3014  002F0A  6E22               	movwf	FastTransfer_buffer_put@_this+1,c
  3015  002F0C  C0F4  F023         	movff	ToSend@where,FastTransfer_buffer_put@towhere
  3016  002F10  C02A  F024         	movff	ToSend@what,FastTransfer_buffer_put@towhat
  3017  002F14  C02B  F025         	movff	ToSend@what+1,FastTransfer_buffer_put@towhat+1
  3018  002F18  EC39  F009         	call	_FastTransfer_buffer_put	;wreg free
  3019  002F1C  0012               	return		;funcret
  3020  002F1E                     __end_of_ToSend:
  3021                           	opt stack 0
  3022                           tosu	equ	0xFFF
  3023                           tosh	equ	0xFFE
  3024                           tosl	equ	0xFFD
  3025                           pclath	equ	0xFFA
  3026                           tblptru	equ	0xFF8
  3027                           tblptrh	equ	0xFF7
  3028                           tblptrl	equ	0xFF6
  3029                           tablat	equ	0xFF5
  3030                           intcon	equ	0xFF2
  3031                           postinc0	equ	0xFEE
  3032                           wreg	equ	0xFE8
  3033                           indf2	equ	0xFDF
  3034                           postinc2	equ	0xFDE
  3035                           postdec2	equ	0xFDD
  3036                           plusw2	equ	0xFDB
  3037                           fsr2h	equ	0xFDA
  3038                           fsr2l	equ	0xFD9
  3039                           status	equ	0xFD8
  3040                           
  3041 ;; *************** function _FastTransfer_buffer_put *****************
  3042 ;; Defined at:
  3043 ;;		line 224 in file "FastTransfer.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;  _this           2   32[COMRAM] PTR struct ringBufS
  3046 ;;		 -> ring_buffer(206), 
  3047 ;;  towhere         1   34[COMRAM] unsigned char 
  3048 ;;  towhat          2   35[COMRAM] unsigned int 
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;		None
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  1    wreg      void 
  3053 ;; Registers used:
  3054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3060 ;;      Params:         5       0       0       0       0       0       0
  3061 ;;      Locals:         0       0       0       0       0       0       0
  3062 ;;      Temps:          2       0       0       0       0       0       0
  3063 ;;      Totals:         7       0       0       0       0       0       0
  3064 ;;Total ram usage:        7 bytes
  3065 ;; Hardware stack levels used:    1
  3066 ;; Hardware stack levels required when called:    5
  3067 ;; This function calls:
  3068 ;;		_FastTransfer_buffer_modulo_inc
  3069 ;; This function is called by:
  3070 ;;		_ToSend
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           	psect	text9
  3075  001272                     __ptext9:
  3076                           	opt stack 0
  3077  001272                     _FastTransfer_buffer_put:
  3078                           	opt stack 22
  3079                           
  3080                           ;FastTransfer.c: 226: group.integer = towhat;
  3081                           
  3082                           ;incstack = 0
  3083  001272  C024  F02C         	movff	FastTransfer_buffer_put@towhat,_group
  3084  001276  C025  F02D         	movff	FastTransfer_buffer_put@towhat+1,_group+1
  3085                           
  3086                           ;FastTransfer.c: 228: if (_this->count < (200 - 3)) {
  3087  00127A  EE20 F0CC          	lfsr	2,204
  3088  00127E  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3089  001280  26D9               	addwf	fsr2l,f,c
  3090  001282  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3091  001284  22DA               	addwfc	fsr2h,f,c
  3092  001286  0E01               	movlw	1
  3093  001288  BEDB               	btfsc	plusw2,7,c
  3094  00128A  D007               	goto	l6176
  3095  00128C  0E01               	movlw	1
  3096  00128E  50DB               	movf	plusw2,w,c
  3097  001290  E103               	bnz	u6421
  3098  001292  0EC5               	movlw	197
  3099  001294  5CDE               	subwf	postinc2,w,c
  3100  001296  B0D8               	btfsc	status,0,c
  3101  001298                     u6421:
  3102  001298  0012               	return	
  3103  00129A                     l6176:
  3104                           
  3105                           ;FastTransfer.c: 229: _this->buf[_this->head] = towhere;
  3106  00129A  EE20 F0C8          	lfsr	2,200
  3107  00129E  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3108  0012A0  26D9               	addwf	fsr2l,f,c
  3109  0012A2  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3110  0012A4  22DA               	addwfc	fsr2h,f,c
  3111  0012A6  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  3112  0012AA  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  3113  0012AE  5026               	movf	??_FastTransfer_buffer_put,w,c
  3114  0012B0  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  3115  0012B2  6ED9               	movwf	fsr2l,c
  3116  0012B4  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  3117  0012B6  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  3118  0012B8  6EDA               	movwf	fsr2h,c
  3119  0012BA  C023  FFDF         	movff	FastTransfer_buffer_put@towhere,indf2
  3120                           
  3121                           ;FastTransfer.c: 230: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  3122  0012BE  EE20 F0C8          	lfsr	2,200
  3123  0012C2  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3124  0012C4  26D9               	addwf	fsr2l,f,c
  3125  0012C6  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3126  0012C8  22DA               	addwfc	fsr2h,f,c
  3127  0012CA  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  3128  0012CE  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  3129  0012D2  0E00               	movlw	0
  3130  0012D4  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  3131  0012D6  0EC8               	movlw	200
  3132  0012D8  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  3133  0012DA  ECF8  F016         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  3134  0012DE  EE20 F0C8          	lfsr	2,200
  3135  0012E2  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3136  0012E4  26D9               	addwf	fsr2l,f,c
  3137  0012E6  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3138  0012E8  22DA               	addwfc	fsr2h,f,c
  3139  0012EA  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  3140  0012EE  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  3141                           
  3142                           ;FastTransfer.c: 231: ++_this->count;
  3143  0012F2  EE20 F0CC          	lfsr	2,204
  3144  0012F6  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3145  0012F8  26D9               	addwf	fsr2l,f,c
  3146  0012FA  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3147  0012FC  22DA               	addwfc	fsr2h,f,c
  3148  0012FE  2ADE               	incf	postinc2,f,c
  3149  001300  0E00               	movlw	0
  3150  001302  22DD               	addwfc	postdec2,f,c
  3151                           
  3152                           ;FastTransfer.c: 232: _this->buf[_this->head] = group.parts[0];
  3153  001304  EE20 F0C8          	lfsr	2,200
  3154  001308  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3155  00130A  26D9               	addwf	fsr2l,f,c
  3156  00130C  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3157  00130E  22DA               	addwfc	fsr2h,f,c
  3158  001310  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  3159  001314  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  3160  001318  5026               	movf	??_FastTransfer_buffer_put,w,c
  3161  00131A  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  3162  00131C  6ED9               	movwf	fsr2l,c
  3163  00131E  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  3164  001320  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  3165  001322  6EDA               	movwf	fsr2h,c
  3166  001324  C02C  FFDF         	movff	_group,indf2
  3167                           
  3168                           ;FastTransfer.c: 233: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  3169  001328  EE20 F0C8          	lfsr	2,200
  3170  00132C  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3171  00132E  26D9               	addwf	fsr2l,f,c
  3172  001330  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3173  001332  22DA               	addwfc	fsr2h,f,c
  3174  001334  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  3175  001338  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  3176  00133C  0E00               	movlw	0
  3177  00133E  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  3178  001340  0EC8               	movlw	200
  3179  001342  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  3180  001344  ECF8  F016         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  3181  001348  EE20 F0C8          	lfsr	2,200
  3182  00134C  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3183  00134E  26D9               	addwf	fsr2l,f,c
  3184  001350  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3185  001352  22DA               	addwfc	fsr2h,f,c
  3186  001354  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  3187  001358  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  3188                           
  3189                           ;FastTransfer.c: 234: ++_this->count;
  3190  00135C  EE20 F0CC          	lfsr	2,204
  3191  001360  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3192  001362  26D9               	addwf	fsr2l,f,c
  3193  001364  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3194  001366  22DA               	addwfc	fsr2h,f,c
  3195  001368  2ADE               	incf	postinc2,f,c
  3196  00136A  0E00               	movlw	0
  3197  00136C  22DD               	addwfc	postdec2,f,c
  3198                           
  3199                           ;FastTransfer.c: 235: _this->buf[_this->head] = group.parts[1];
  3200  00136E  EE20 F0C8          	lfsr	2,200
  3201  001372  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3202  001374  26D9               	addwf	fsr2l,f,c
  3203  001376  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3204  001378  22DA               	addwfc	fsr2h,f,c
  3205  00137A  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  3206  00137E  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  3207  001382  5026               	movf	??_FastTransfer_buffer_put,w,c
  3208  001384  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  3209  001386  6ED9               	movwf	fsr2l,c
  3210  001388  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  3211  00138A  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  3212  00138C  6EDA               	movwf	fsr2h,c
  3213  00138E  C02D  FFDF         	movff	_group+1,indf2
  3214                           
  3215                           ;FastTransfer.c: 236: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  3216  001392  EE20 F0C8          	lfsr	2,200
  3217  001396  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3218  001398  26D9               	addwf	fsr2l,f,c
  3219  00139A  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3220  00139C  22DA               	addwfc	fsr2h,f,c
  3221  00139E  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  3222  0013A2  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  3223  0013A6  0E00               	movlw	0
  3224  0013A8  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  3225  0013AA  0EC8               	movlw	200
  3226  0013AC  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  3227  0013AE  ECF8  F016         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  3228  0013B2  EE20 F0C8          	lfsr	2,200
  3229  0013B6  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3230  0013B8  26D9               	addwf	fsr2l,f,c
  3231  0013BA  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3232  0013BC  22DA               	addwfc	fsr2h,f,c
  3233  0013BE  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  3234  0013C2  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  3235                           
  3236                           ;FastTransfer.c: 237: ++_this->count;
  3237  0013C6  EE20 F0CC          	lfsr	2,204
  3238  0013CA  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3239  0013CC  26D9               	addwf	fsr2l,f,c
  3240  0013CE  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3241  0013D0  22DA               	addwfc	fsr2h,f,c
  3242  0013D2  2ADE               	incf	postinc2,f,c
  3243  0013D4  0E00               	movlw	0
  3244  0013D6  22DD               	addwfc	postdec2,f,c
  3245  0013D8  0012               	return	
  3246  0013DA                     __end_of_FastTransfer_buffer_put:
  3247                           	opt stack 0
  3248                           tosu	equ	0xFFF
  3249                           tosh	equ	0xFFE
  3250                           tosl	equ	0xFFD
  3251                           pclath	equ	0xFFA
  3252                           tblptru	equ	0xFF8
  3253                           tblptrh	equ	0xFF7
  3254                           tblptrl	equ	0xFF6
  3255                           tablat	equ	0xFF5
  3256                           intcon	equ	0xFF2
  3257                           postinc0	equ	0xFEE
  3258                           wreg	equ	0xFE8
  3259                           indf2	equ	0xFDF
  3260                           postinc2	equ	0xFDE
  3261                           postdec2	equ	0xFDD
  3262                           plusw2	equ	0xFDB
  3263                           fsr2h	equ	0xFDA
  3264                           fsr2l	equ	0xFD9
  3265                           status	equ	0xFD8
  3266                           
  3267 ;; *************** function _FastTransfer_buffer_modulo_inc *****************
  3268 ;; Defined at:
  3269 ;;		line 274 in file "FastTransfer.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;  value           2   26[COMRAM] const unsigned int 
  3272 ;;  modulus         2   28[COMRAM] const unsigned int 
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;  my_value        2   30[COMRAM] unsigned int 
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  2   26[COMRAM] unsigned int 
  3277 ;; Registers used:
  3278 ;;		wreg, status,2, status,0
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3284 ;;      Params:         4       0       0       0       0       0       0
  3285 ;;      Locals:         2       0       0       0       0       0       0
  3286 ;;      Temps:          0       0       0       0       0       0       0
  3287 ;;      Totals:         6       0       0       0       0       0       0
  3288 ;;Total ram usage:        6 bytes
  3289 ;; Hardware stack levels used:    1
  3290 ;; Hardware stack levels required when called:    4
  3291 ;; This function calls:
  3292 ;;		Nothing
  3293 ;; This function is called by:
  3294 ;;		_FastTransfer_buffer_put
  3295 ;;		_FastTransfer_buffer_get
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299                           	psect	text10
  3300  002DF0                     __ptext10:
  3301                           	opt stack 0
  3302  002DF0                     _FastTransfer_buffer_modulo_inc:
  3303                           	opt stack 22
  3304                           
  3305                           ;FastTransfer.c: 275: unsigned int my_value = value + 1;
  3306                           
  3307                           ;incstack = 0
  3308  002DF0  0E01               	movlw	1
  3309  002DF2  241B               	addwf	FastTransfer_buffer_modulo_inc@value,w,c
  3310  002DF4  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  3311  002DF6  0E00               	movlw	0
  3312  002DF8  201C               	addwfc	FastTransfer_buffer_modulo_inc@value+1,w,c
  3313  002DFA  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  3314                           
  3315                           ;FastTransfer.c: 276: if (my_value >= modulus) {
  3316  002DFC  501D               	movf	FastTransfer_buffer_modulo_inc@modulus,w,c
  3317  002DFE  5C1F               	subwf	FastTransfer_buffer_modulo_inc@my_value,w,c
  3318  002E00  501E               	movf	FastTransfer_buffer_modulo_inc@modulus+1,w,c
  3319  002E02  5820               	subwfb	FastTransfer_buffer_modulo_inc@my_value+1,w,c
  3320  002E04  A0D8               	btfss	status,0,c
  3321  002E06  D004               	goto	l6002
  3322                           
  3323                           ;FastTransfer.c: 277: my_value = 0;
  3324  002E08  0E00               	movlw	0
  3325  002E0A  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  3326  002E0C  0E00               	movlw	0
  3327  002E0E  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  3328  002E10                     l6002:
  3329                           
  3330                           ;FastTransfer.c: 278: }
  3331                           ;FastTransfer.c: 279: return (my_value);
  3332  002E10  C01F  F01B         	movff	FastTransfer_buffer_modulo_inc@my_value,?_FastTransfer_buffer_modulo_inc
  3333  002E14  C020  F01C         	movff	FastTransfer_buffer_modulo_inc@my_value+1,?_FastTransfer_buffer_modulo_inc+1
  3334  002E18  0012               	return	
  3335  002E1A                     __end_of_FastTransfer_buffer_modulo_inc:
  3336                           	opt stack 0
  3337                           tosu	equ	0xFFF
  3338                           tosh	equ	0xFFE
  3339                           tosl	equ	0xFFD
  3340                           pclath	equ	0xFFA
  3341                           tblptru	equ	0xFF8
  3342                           tblptrh	equ	0xFF7
  3343                           tblptrl	equ	0xFF6
  3344                           tablat	equ	0xFF5
  3345                           intcon	equ	0xFF2
  3346                           postinc0	equ	0xFEE
  3347                           wreg	equ	0xFE8
  3348                           indf2	equ	0xFDF
  3349                           postinc2	equ	0xFDE
  3350                           postdec2	equ	0xFDD
  3351                           plusw2	equ	0xFDB
  3352                           fsr2h	equ	0xFDA
  3353                           fsr2l	equ	0xFD9
  3354                           status	equ	0xFD8
  3355                           
  3356 ;; *************** function _Delay *****************
  3357 ;; Defined at:
  3358 ;;		line 117 in file "main.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;  wait            2   26[COMRAM] int 
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;  x               2   29[COMRAM] int 
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  1    wreg      void 
  3365 ;; Registers used:
  3366 ;;		wreg, status,2, status,0
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3372 ;;      Params:         2       0       0       0       0       0       0
  3373 ;;      Locals:         2       0       0       0       0       0       0
  3374 ;;      Temps:          1       0       0       0       0       0       0
  3375 ;;      Totals:         5       0       0       0       0       0       0
  3376 ;;Total ram usage:        5 bytes
  3377 ;; Hardware stack levels used:    1
  3378 ;; Hardware stack levels required when called:    4
  3379 ;; This function calls:
  3380 ;;		Nothing
  3381 ;; This function is called by:
  3382 ;;		_respondECU
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           	psect	text11
  3387  002D30                     __ptext11:
  3388                           	opt stack 0
  3389  002D30                     _Delay:
  3390                           	opt stack 24
  3391                           
  3392                           ;main.c: 118: int x;
  3393                           ;main.c: 119: for (x = 0; x < wait; x++) {
  3394                           
  3395                           ;incstack = 0
  3396  002D30  0E00               	movlw	0
  3397  002D32  6E1F               	movwf	Delay@x+1,c
  3398  002D34  0E00               	movlw	0
  3399  002D36  6E1E               	movwf	Delay@x,c
  3400  002D38  D00A               	goto	l609
  3401  002D3A                     l6264:
  3402                           
  3403                           ;main.c: 120: _delay((unsigned long)((1)*(16000000/4000.0)));
  3404  002D3A  0E06               	movlw	6
  3405  002D3C  6E1D               	movwf	??_Delay& (0+255),c
  3406  002D3E  0E30               	movlw	48
  3407  002D40                     u8897:
  3408  002D40  2EE8               	decfsz	wreg,f,c
  3409  002D42  D7FE               	goto	u8897
  3410  002D44  2E1D               	decfsz	??_Delay& (0+255),f,c
  3411  002D46  D7FC               	goto	u8897
  3412  002D48  D000               	nop2	
  3413  002D4A  4A1E               	infsnz	Delay@x,f,c
  3414  002D4C  2A1F               	incf	Delay@x+1,f,c
  3415  002D4E                     l609:
  3416  002D4E  501B               	movf	Delay@wait,w,c
  3417  002D50  5C1E               	subwf	Delay@x,w,c
  3418  002D52  501F               	movf	Delay@x+1,w,c
  3419  002D54  0A80               	xorlw	128
  3420  002D56  6E1D               	movwf	??_Delay& (0+255),c
  3421  002D58  501C               	movf	Delay@wait+1,w,c
  3422  002D5A  0A80               	xorlw	128
  3423  002D5C  581D               	subwfb	??_Delay& (0+255),w,c
  3424  002D5E  B0D8               	btfsc	status,0,c
  3425  002D60  0012               	return	
  3426  002D62  D7EB               	goto	l6264
  3427  002D64                     __end_of_Delay:
  3428                           	opt stack 0
  3429                           tosu	equ	0xFFF
  3430                           tosh	equ	0xFFE
  3431                           tosl	equ	0xFFD
  3432                           pclath	equ	0xFFA
  3433                           tblptru	equ	0xFF8
  3434                           tblptrh	equ	0xFF7
  3435                           tblptrl	equ	0xFF6
  3436                           tablat	equ	0xFF5
  3437                           intcon	equ	0xFF2
  3438                           postinc0	equ	0xFEE
  3439                           wreg	equ	0xFE8
  3440                           indf2	equ	0xFDF
  3441                           postinc2	equ	0xFDE
  3442                           postdec2	equ	0xFDD
  3443                           plusw2	equ	0xFDB
  3444                           fsr2h	equ	0xFDA
  3445                           fsr2l	equ	0xFD9
  3446                           status	equ	0xFD8
  3447                           
  3448 ;; *************** function _receiveData *****************
  3449 ;; Defined at:
  3450 ;;		line 82 in file "FastTransfer.c"
  3451 ;; Parameters:    Size  Location     Type
  3452 ;;		None
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;  holder          3    9[BANK1 ] unsigned char [3]
  3455 ;;  crcHolder       1   13[BANK1 ] unsigned char 
  3456 ;;  holder          3    6[BANK1 ] unsigned char [3]
  3457 ;;  crcHolder       1   12[BANK1 ] unsigned char 
  3458 ;;  u               2   14[BANK1 ] int 
  3459 ;;  r               2   16[BANK1 ] int 
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  1    wreg      unsigned char 
  3462 ;; Registers used:
  3463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3469 ;;      Params:         0       0       0       0       0       0       0
  3470 ;;      Locals:         0       0      12       0       0       0       0
  3471 ;;      Temps:          0       0       6       0       0       0       0
  3472 ;;      Totals:         0       0      18       0       0       0       0
  3473 ;;Total ram usage:       18 bytes
  3474 ;; Hardware stack levels used:    1
  3475 ;; Hardware stack levels required when called:    8
  3476 ;; This function calls:
  3477 ;;		Absolute function
  3478 ;;		_CRC8
  3479 ;;		_CRCcheck
  3480 ;;		_Receive_available
  3481 ;;		_Receive_get
  3482 ;;		_Receive_peek
  3483 ;;		_Send_put
  3484 ;; This function is called by:
  3485 ;;		_updateComms
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text12
  3490  0000D4                     __ptext12:
  3491                           	opt stack 0
  3492  0000D4                     _receiveData:
  3493                           	opt stack 21
  3494                           
  3495                           ;FastTransfer.c: 85: if (rx_len == 0) {
  3496                           
  3497                           ;incstack = 0
  3498  0000D4  503F               	movf	_rx_len,w,c
  3499  0000D6  A4D8               	btfss	status,2,c
  3500  0000D8  D0AC               	goto	l6790
  3501                           
  3502                           ;FastTransfer.c: 87: if (serial_available() > 4) {
  3503  0000DA  D801               	call	u7328
  3504  0000DC  D00A               	goto	u7329
  3505  0000DE                     u7328:
  3506  0000DE  0005               	push	
  3507  0000E0  6EFA               	movwf	pclath,c
  3508  0000E2  502E               	movf	_serial_available,w,c
  3509  0000E4  6EFD               	movwf	tosl,c
  3510  0000E6  502F               	movf	_serial_available+1,w,c
  3511  0000E8  6EFE               	movwf	tosh,c
  3512  0000EA  50F8               	movf	tblptru,w,c
  3513  0000EC  6EFF               	movwf	tosu,c
  3514  0000EE  50FA               	movf	pclath,w,c
  3515  0000F0  0012               	return		;indir
  3516  0000F2                     u7329:
  3517  0000F2  BE1E               	btfsc	?_Receive_available+1,7,c
  3518  0000F4  D09E               	goto	l6790
  3519  0000F6  501E               	movf	?_Receive_available+1,w,c
  3520  0000F8  E11E               	bnz	l6766
  3521  0000FA  0E05               	movlw	5
  3522  0000FC  5C1D               	subwf	?_Receive_available,w,c
  3523  0000FE  B0D8               	btfsc	status,0,c
  3524  000100  D01A               	goto	l6766
  3525  000102  D097               	goto	l6790
  3526  000104                     l6758:
  3527                           
  3528                           ;FastTransfer.c: 93: alignErrorCounter++;
  3529  000104  0100               	movlb	0	; () banked
  3530  000106  4BC5               	infsnz	_alignErrorCounter& (0+255),f,b
  3531  000108  2BC6               	incf	(_alignErrorCounter+1)& (0+255),f,b
  3532                           
  3533                           ; BSR set to: 0
  3534                           ;FastTransfer.c: 94: if (serial_available() < 5)
  3535  00010A  D801               	call	u7348
  3536  00010C  D00A               	goto	u7349
  3537  00010E                     u7348:
  3538  00010E  0005               	push	
  3539  000110  6EFA               	movwf	pclath,c
  3540  000112  502E               	movf	_serial_available,w,c
  3541  000114  6EFD               	movwf	tosl,c
  3542  000116  502F               	movf	_serial_available+1,w,c
  3543  000118  6EFE               	movwf	tosh,c
  3544  00011A  50F8               	movf	tblptru,w,c
  3545  00011C  6EFF               	movwf	tosu,c
  3546  00011E  50FA               	movf	pclath,w,c
  3547  000120  0012               	return		;indir
  3548  000122                     u7349:
  3549  000122  BE1E               	btfsc	?_Receive_available+1,7,c
  3550  000124  D006               	goto	l6762
  3551  000126  501E               	movf	?_Receive_available+1,w,c
  3552  000128  E106               	bnz	l6766
  3553  00012A  0E05               	movlw	5
  3554  00012C  5C1D               	subwf	?_Receive_available,w,c
  3555  00012E  B0D8               	btfsc	status,0,c
  3556  000130  D002               	goto	l6766
  3557  000132                     l6762:
  3558                           
  3559                           ;FastTransfer.c: 95: return 0;
  3560  000132  0E00               	movlw	0
  3561  000134  0012               	return	
  3562  000136                     l6766:
  3563  000136  D801               	call	u7368
  3564  000138  D00A               	goto	u7369
  3565  00013A                     u7368:
  3566  00013A  0005               	push	
  3567  00013C  6EFA               	movwf	pclath,c
  3568  00013E  5030               	movf	_serial_read,w,c
  3569  000140  6EFD               	movwf	tosl,c
  3570  000142  5031               	movf	_serial_read+1,w,c
  3571  000144  6EFE               	movwf	tosh,c
  3572  000146  50F8               	movf	tblptru,w,c
  3573  000148  6EFF               	movwf	tosu,c
  3574  00014A  50FA               	movf	pclath,w,c
  3575  00014C  0012               	return		;indir
  3576  00014E                     u7369:
  3577  00014E  0A06               	xorlw	6
  3578  000150  A4D8               	btfss	status,2,c
  3579  000152  D7D8               	goto	l6758
  3580                           
  3581                           ;FastTransfer.c: 96: }
  3582                           ;FastTransfer.c: 97: if (serial_read() == 0x85) {
  3583  000154  D801               	call	u7388
  3584  000156  D00A               	goto	u7389
  3585  000158                     u7388:
  3586  000158  0005               	push	
  3587  00015A  6EFA               	movwf	pclath,c
  3588  00015C  5030               	movf	_serial_read,w,c
  3589  00015E  6EFD               	movwf	tosl,c
  3590  000160  5031               	movf	_serial_read+1,w,c
  3591  000162  6EFE               	movwf	tosh,c
  3592  000164  50F8               	movf	tblptru,w,c
  3593  000166  6EFF               	movwf	tosu,c
  3594  000168  50FA               	movf	pclath,w,c
  3595  00016A  0012               	return		;indir
  3596  00016C                     u7389:
  3597  00016C  0A85               	xorlw	133
  3598  00016E  A4D8               	btfss	status,2,c
  3599  000170  D060               	goto	l6790
  3600                           
  3601                           ;FastTransfer.c: 99: rx_address = serial_read();
  3602  000172  D801               	call	u7408
  3603  000174  D00A               	goto	u7409
  3604  000176                     u7408:
  3605  000176  0005               	push	
  3606  000178  6EFA               	movwf	pclath,c
  3607  00017A  5030               	movf	_serial_read,w,c
  3608  00017C  6EFD               	movwf	tosl,c
  3609  00017E  5031               	movf	_serial_read+1,w,c
  3610  000180  6EFE               	movwf	tosh,c
  3611  000182  50F8               	movf	tblptru,w,c
  3612  000184  6EFF               	movwf	tosu,c
  3613  000186  50FA               	movf	pclath,w,c
  3614  000188  0012               	return		;indir
  3615  00018A                     u7409:
  3616  00018A  6E3D               	movwf	_rx_address,c
  3617                           
  3618                           ;FastTransfer.c: 100: returnAddress = serial_read();
  3619  00018C  D801               	call	u7418
  3620  00018E  D00A               	goto	u7419
  3621  000190                     u7418:
  3622  000190  0005               	push	
  3623  000192  6EFA               	movwf	pclath,c
  3624  000194  5030               	movf	_serial_read,w,c
  3625  000196  6EFD               	movwf	tosl,c
  3626  000198  5031               	movf	_serial_read+1,w,c
  3627  00019A  6EFE               	movwf	tosh,c
  3628  00019C  50F8               	movf	tblptru,w,c
  3629  00019E  6EFF               	movwf	tosu,c
  3630  0001A0  50FA               	movf	pclath,w,c
  3631  0001A2  0012               	return		;indir
  3632  0001A4                     u7419:
  3633  0001A4  6E3C               	movwf	_returnAddress,c
  3634                           
  3635                           ;FastTransfer.c: 101: rx_len = serial_read();
  3636  0001A6  D801               	call	u7428
  3637  0001A8  D00A               	goto	u7429
  3638  0001AA                     u7428:
  3639  0001AA  0005               	push	
  3640  0001AC  6EFA               	movwf	pclath,c
  3641  0001AE  5030               	movf	_serial_read,w,c
  3642  0001B0  6EFD               	movwf	tosl,c
  3643  0001B2  5031               	movf	_serial_read+1,w,c
  3644  0001B4  6EFE               	movwf	tosh,c
  3645  0001B6  50F8               	movf	tblptru,w,c
  3646  0001B8  6EFF               	movwf	tosu,c
  3647  0001BA  50FA               	movf	pclath,w,c
  3648  0001BC  0012               	return		;indir
  3649  0001BE                     u7429:
  3650  0001BE  6E3F               	movwf	_rx_len,c
  3651                           
  3652                           ;FastTransfer.c: 103: if (rx_address != moduleAddress) {
  3653  0001C0  503B               	movf	_moduleAddress,w,c
  3654  0001C2  183D               	xorwf	_rx_address,w,c
  3655  0001C4  B4D8               	btfsc	status,2,c
  3656  0001C6  D035               	goto	l6790
  3657                           
  3658                           ;FastTransfer.c: 104: addressErrorCounter++;
  3659  0001C8  0100               	movlb	0	; () banked
  3660  0001CA  4BC3               	infsnz	_addressErrorCounter& (0+255),f,b
  3661  0001CC  2BC4               	incf	(_addressErrorCounter+1)& (0+255),f,b
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;FastTransfer.c: 107: int u;
  3665                           ;FastTransfer.c: 108: for (u = 0; u <= (rx_len + 1); u++) {
  3666  0001CE  0E00               	movlw	0
  3667  0001D0  0101               	movlb	1	; () banked
  3668  0001D2  6F48               	movwf	(receiveData@u+1)& (0+255),b
  3669  0001D4  0E00               	movlw	0
  3670  0001D6  6F47               	movwf	receiveData@u& (0+255),b
  3671  0001D8  D00F               	goto	l6782
  3672  0001DA                     l6778:
  3673                           
  3674                           ; BSR set to: 1
  3675                           ;FastTransfer.c: 109: serial_read();
  3676  0001DA  D801               	call	u7448
  3677  0001DC  D00A               	goto	l6780
  3678  0001DE                     u7448:
  3679  0001DE  0005               	push	
  3680  0001E0  6EFA               	movwf	pclath,c
  3681  0001E2  5030               	movf	_serial_read,w,c
  3682  0001E4  6EFD               	movwf	tosl,c
  3683  0001E6  5031               	movf	_serial_read+1,w,c
  3684  0001E8  6EFE               	movwf	tosh,c
  3685  0001EA  50F8               	movf	tblptru,w,c
  3686  0001EC  6EFF               	movwf	tosu,c
  3687  0001EE  50FA               	movf	pclath,w,c
  3688  0001F0  0012               	return		;indir
  3689  0001F2                     l6780:
  3690  0001F2  0101               	movlb	1	; () banked
  3691  0001F4  4B47               	infsnz	receiveData@u& (0+255),f,b
  3692  0001F6  2B48               	incf	(receiveData@u+1)& (0+255),f,b
  3693  0001F8                     l6782:
  3694                           
  3695                           ; BSR set to: 1
  3696  0001F8  503F               	movf	_rx_len,w,c
  3697  0001FA  0101               	movlb	1	; () banked
  3698  0001FC  6F39               	movwf	??_receiveData& (0+255),b
  3699  0001FE  6B3A               	clrf	(??_receiveData+1)& (0+255),b
  3700  000200  0E01               	movlw	1
  3701  000202  0101               	movlb	1	; () banked
  3702  000204  2739               	addwf	??_receiveData& (0+255),f,b
  3703  000206  0E00               	movlw	0
  3704  000208  233A               	addwfc	(??_receiveData+1)& (0+255),f,b
  3705  00020A  0101               	movlb	1	; () banked
  3706  00020C  5147               	movf	receiveData@u& (0+255),w,b
  3707  00020E  0101               	movlb	1	; () banked
  3708  000210  5D39               	subwf	??_receiveData& (0+255),w,b
  3709  000212  0101               	movlb	1	; () banked
  3710  000214  513A               	movf	(??_receiveData+1)& (0+255),w,b
  3711  000216  0A80               	xorlw	128
  3712  000218  0101               	movlb	1	; () banked
  3713  00021A  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  3714  00021C  0101               	movlb	1	; () banked
  3715  00021E  5148               	movf	(receiveData@u+1)& (0+255),w,b
  3716  000220  0A80               	xorlw	128
  3717  000222  0101               	movlb	1	; () banked
  3718  000224  593B               	subwfb	(??_receiveData+2)& (0+255),w,b
  3719  000226  B0D8               	btfsc	status,0,c
  3720  000228  D7D8               	goto	l6778
  3721                           
  3722                           ; BSR set to: 1
  3723                           ;FastTransfer.c: 110: }
  3724                           ;FastTransfer.c: 111: rx_len = 0;
  3725                           
  3726                           ; BSR set to: 1
  3727  00022A  0E00               	movlw	0
  3728  00022C  6E3F               	movwf	_rx_len,c
  3729                           
  3730                           ; BSR set to: 1
  3731                           ;FastTransfer.c: 112: return 0;
  3732  00022E  0E00               	movlw	0
  3733                           
  3734                           ; BSR set to: 1
  3735  000230  0012               	return	
  3736  000232                     l6790:
  3737                           
  3738                           ;FastTransfer.c: 113: }
  3739                           ;FastTransfer.c: 115: }
  3740                           ;FastTransfer.c: 116: }
  3741                           ;FastTransfer.c: 117: }
  3742                           ;FastTransfer.c: 120: if (rx_len != 0) {
  3743  000232  503F               	movf	_rx_len,w,c
  3744  000234  B4D8               	btfsc	status,2,c
  3745  000236  D2A6               	goto	l6914
  3746                           
  3747                           ;FastTransfer.c: 123: if (rx_array_inx == 0) {
  3748  000238  503E               	movf	_rx_array_inx,w,c
  3749  00023A  A4D8               	btfss	status,2,c
  3750  00023C  D044               	goto	l6814
  3751  00023E                     l6796:
  3752  00023E  D801               	call	u7488
  3753  000240  D00A               	goto	u7489
  3754  000242                     u7488:
  3755  000242  0005               	push	
  3756  000244  6EFA               	movwf	pclath,c
  3757  000246  502E               	movf	_serial_available,w,c
  3758  000248  6EFD               	movwf	tosl,c
  3759  00024A  502F               	movf	_serial_available+1,w,c
  3760  00024C  6EFE               	movwf	tosh,c
  3761  00024E  50F8               	movf	tblptru,w,c
  3762  000250  6EFF               	movwf	tosu,c
  3763  000252  50FA               	movf	pclath,w,c
  3764  000254  0012               	return		;indir
  3765  000256                     u7489:
  3766  000256  BE1E               	btfsc	?_Receive_available+1,7,c
  3767  000258  D7F2               	goto	l6796
  3768  00025A  501E               	movf	?_Receive_available+1,w,c
  3769  00025C  E103               	bnz	l6798
  3770  00025E  041D               	decf	?_Receive_available,w,c
  3771  000260  A0D8               	btfss	status,0,c
  3772  000262  D7ED               	goto	l6796
  3773  000264                     l6798:
  3774                           
  3775                           ;FastTransfer.c: 125: if (255 == serial_peek()) {
  3776  000264  D801               	call	u7508
  3777  000266  D00B               	goto	u7509
  3778  000268                     u7508:
  3779  000268  0005               	push	
  3780  00026A  0100               	movlb	0	; () banked
  3781  00026C  6EFA               	movwf	pclath,c
  3782  00026E  51D9               	movf	_serial_peek& (0+255),w,b
  3783  000270  6EFD               	movwf	tosl,c
  3784  000272  51DA               	movf	(_serial_peek+1)& (0+255),w,b
  3785  000274  6EFE               	movwf	tosh,c
  3786  000276  50F8               	movf	tblptru,w,c
  3787  000278  6EFF               	movwf	tosu,c
  3788  00027A  50FA               	movf	pclath,w,c
  3789  00027C  0012               	return		;indir
  3790  00027E                     u7509:
  3791  00027E  0AFF               	xorlw	255
  3792  000280  A4D8               	btfss	status,2,c
  3793  000282  D021               	goto	l6814
  3794                           
  3795                           ;FastTransfer.c: 126: CRCcheck();
  3796  000284  ECED  F009         	call	_CRCcheck	;wreg free
  3797                           
  3798                           ;FastTransfer.c: 127: rx_len = 0;
  3799  000288  0E00               	movlw	0
  3800  00028A  6E3F               	movwf	_rx_len,c
  3801                           
  3802                           ;FastTransfer.c: 128: rx_array_inx = 0;
  3803  00028C  0E00               	movlw	0
  3804  00028E  6E3E               	movwf	_rx_array_inx,c
  3805                           
  3806                           ;FastTransfer.c: 129: return 0;
  3807  000290  0E00               	movlw	0
  3808  000292  0012               	return	
  3809  000294                     l6810:
  3810                           
  3811                           ;FastTransfer.c: 135: rx_buffer[rx_array_inx++] = serial_read();
  3812  000294  D801               	call	u7528
  3813  000296  D00A               	goto	u7529
  3814  000298                     u7528:
  3815  000298  0005               	push	
  3816  00029A  6EFA               	movwf	pclath,c
  3817  00029C  5030               	movf	_serial_read,w,c
  3818  00029E  6EFD               	movwf	tosl,c
  3819  0002A0  5031               	movf	_serial_read+1,w,c
  3820  0002A2  6EFE               	movwf	tosh,c
  3821  0002A4  50F8               	movf	tblptru,w,c
  3822  0002A6  6EFF               	movwf	tosu,c
  3823  0002A8  50FA               	movf	pclath,w,c
  3824  0002AA  0012               	return		;indir
  3825  0002AC                     u7529:
  3826  0002AC  0101               	movlb	1	; () banked
  3827  0002AE  6F39               	movwf	??_receiveData& (0+255),b
  3828  0002B0  503E               	movf	_rx_array_inx,w,c
  3829  0002B2  0D01               	mullw	1
  3830  0002B4  0E00               	movlw	low _rx_buffer
  3831  0002B6  24F3               	addwf	prodl,w,c
  3832  0002B8  6ED9               	movwf	fsr2l,c
  3833  0002BA  0E03               	movlw	high _rx_buffer
  3834  0002BC  20F4               	addwfc	prodh,w,c
  3835  0002BE  6EDA               	movwf	fsr2h,c
  3836  0002C0  C139  FFDF         	movff	??_receiveData,indf2
  3837                           
  3838                           ; BSR set to: 1
  3839  0002C4  2A3E               	incf	_rx_array_inx,f,c
  3840  0002C6                     l6814:
  3841  0002C6  D801               	call	u7538
  3842  0002C8  D00A               	goto	u7539
  3843  0002CA                     u7538:
  3844  0002CA  0005               	push	
  3845  0002CC  6EFA               	movwf	pclath,c
  3846  0002CE  502E               	movf	_serial_available,w,c
  3847  0002D0  6EFD               	movwf	tosl,c
  3848  0002D2  502F               	movf	_serial_available+1,w,c
  3849  0002D4  6EFE               	movwf	tosh,c
  3850  0002D6  50F8               	movf	tblptru,w,c
  3851  0002D8  6EFF               	movwf	tosu,c
  3852  0002DA  50FA               	movf	pclath,w,c
  3853  0002DC  0012               	return		;indir
  3854  0002DE                     u7539:
  3855  0002DE  501D               	movf	?_Receive_available,w,c
  3856  0002E0  101E               	iorwf	?_Receive_available+1,w,c
  3857  0002E2  B4D8               	btfsc	status,2,c
  3858  0002E4  D004               	goto	l6818
  3859  0002E6  503E               	movf	_rx_array_inx,w,c
  3860  0002E8  5C3F               	subwf	_rx_len,w,c
  3861  0002EA  B0D8               	btfsc	status,0,c
  3862  0002EC  D7D3               	goto	l6810
  3863  0002EE                     l6818:
  3864                           
  3865                           ;FastTransfer.c: 136: }
  3866                           ;FastTransfer.c: 138: if (rx_len == (rx_array_inx - 1)) {
  3867  0002EE  503F               	movf	_rx_len,w,c
  3868  0002F0  0101               	movlb	1	; () banked
  3869  0002F2  6F39               	movwf	??_receiveData& (0+255),b
  3870  0002F4  6B3A               	clrf	(??_receiveData+1)& (0+255),b
  3871  0002F6  0EFF               	movlw	255
  3872  0002F8  0101               	movlb	1	; () banked
  3873  0002FA  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  3874  0002FC  0EFF               	movlw	255
  3875  0002FE  0101               	movlb	1	; () banked
  3876  000300  6F3C               	movwf	(??_receiveData+3)& (0+255),b
  3877  000302  503E               	movf	_rx_array_inx,w,c
  3878  000304  0101               	movlb	1	; () banked
  3879  000306  6F3D               	movwf	(??_receiveData+4)& (0+255),b
  3880  000308  6B3E               	clrf	(??_receiveData+5)& (0+255),b
  3881  00030A  0101               	movlb	1	; () banked
  3882  00030C  513B               	movf	(??_receiveData+2)& (0+255),w,b
  3883  00030E  0101               	movlb	1	; () banked
  3884  000310  273D               	addwf	(??_receiveData+4)& (0+255),f,b
  3885  000312  0101               	movlb	1	; () banked
  3886  000314  513C               	movf	(??_receiveData+3)& (0+255),w,b
  3887  000316  0101               	movlb	1	; () banked
  3888  000318  233E               	addwfc	(??_receiveData+5)& (0+255),f,b
  3889  00031A  0101               	movlb	1	; () banked
  3890  00031C  5139               	movf	??_receiveData& (0+255),w,b
  3891  00031E  0101               	movlb	1	; () banked
  3892  000320  193D               	xorwf	(??_receiveData+4)& (0+255),w,b
  3893  000322  E105               	bnz	u7561
  3894  000324  0101               	movlb	1	; () banked
  3895  000326  513A               	movf	(??_receiveData+1)& (0+255),w,b
  3896  000328  0101               	movlb	1	; () banked
  3897  00032A  193E               	xorwf	(??_receiveData+5)& (0+255),w,b
  3898  00032C  A4D8               	btfss	status,2,c
  3899  00032E                     u7561:
  3900  00032E  D22A               	goto	l6914
  3901                           
  3902                           ; BSR set to: 1
  3903                           ;FastTransfer.c: 141: calc_CS = CRC8(rx_buffer, rx_len);
  3904  000330  0E00               	movlw	low _rx_buffer
  3905  000332  6E1B               	movwf	CRC8@data,c
  3906  000334  0E03               	movlw	high _rx_buffer
  3907  000336  6E1C               	movwf	CRC8@data+1,c
  3908  000338  C03F  F01D         	movff	_rx_len,CRC8@len
  3909  00033C  ECB5  F015         	call	_CRC8	;wreg free
  3910  000340  6E37               	movwf	_calc_CS,c
  3911                           
  3912                           ;FastTransfer.c: 145: if (calc_CS == rx_buffer[rx_array_inx - 1]) {
  3913  000342  0EFF               	movlw	255
  3914  000344  0101               	movlb	1	; () banked
  3915  000346  6F39               	movwf	??_receiveData& (0+255),b
  3916  000348  0EFF               	movlw	255
  3917  00034A  0101               	movlb	1	; () banked
  3918  00034C  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  3919  00034E  503E               	movf	_rx_array_inx,w,c
  3920  000350  0101               	movlb	1	; () banked
  3921  000352  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  3922  000354  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  3923  000356  0101               	movlb	1	; () banked
  3924  000358  5139               	movf	??_receiveData& (0+255),w,b
  3925  00035A  0101               	movlb	1	; () banked
  3926  00035C  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  3927  00035E  0101               	movlb	1	; () banked
  3928  000360  513A               	movf	(??_receiveData+1)& (0+255),w,b
  3929  000362  0101               	movlb	1	; () banked
  3930  000364  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  3931  000366  0E00               	movlw	low _rx_buffer
  3932  000368  0101               	movlb	1	; () banked
  3933  00036A  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  3934  00036C  6ED9               	movwf	fsr2l,c
  3935  00036E  0E03               	movlw	high _rx_buffer
  3936  000370  0101               	movlb	1	; () banked
  3937  000372  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  3938  000374  6EDA               	movwf	fsr2h,c
  3939  000376  5037               	movf	_calc_CS,w,c
  3940  000378  18DE               	xorwf	postinc2,w,c
  3941  00037A  A4D8               	btfss	status,2,c
  3942  00037C  D13B               	goto	l6876
  3943                           
  3944                           ; BSR set to: 1
  3945                           ;FastTransfer.c: 148: int r;
  3946                           ;FastTransfer.c: 149: for (r = 0; r < rx_len; r = r + 3) {
  3947  00037E  0E00               	movlw	0
  3948  000380  0101               	movlb	1	; () banked
  3949  000382  6F4A               	movwf	(receiveData@r+1)& (0+255),b
  3950  000384  0E00               	movlw	0
  3951  000386  6F49               	movwf	receiveData@r& (0+255),b
  3952  000388  D05C               	goto	l6836
  3953  00038A                     l6826:
  3954                           
  3955                           ; BSR set to: 1
  3956                           ;FastTransfer.c: 150: if (rx_buffer[r] < maxDataAddress) {
  3957  00038A  0E00               	movlw	low _rx_buffer
  3958  00038C  0101               	movlb	1	; () banked
  3959  00038E  2549               	addwf	receiveData@r& (0+255),w,b
  3960  000390  6ED9               	movwf	fsr2l,c
  3961  000392  0E03               	movlw	high _rx_buffer
  3962  000394  0101               	movlb	1	; () banked
  3963  000396  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  3964  000398  6EDA               	movwf	fsr2h,c
  3965  00039A  503A               	movf	_maxDataAddress,w,c
  3966  00039C  5CDE               	subwf	postinc2,w,c
  3967  00039E  B0D8               	btfsc	status,0,c
  3968  0003A0  D043               	goto	l6832
  3969                           
  3970                           ; BSR set to: 1
  3971                           ;FastTransfer.c: 151: group.parts[0] = rx_buffer[r + 1];
  3972  0003A2  0E01               	movlw	1
  3973  0003A4  0101               	movlb	1	; () banked
  3974  0003A6  2549               	addwf	receiveData@r& (0+255),w,b
  3975  0003A8  0101               	movlb	1	; () banked
  3976  0003AA  6F39               	movwf	??_receiveData& (0+255),b
  3977  0003AC  0E00               	movlw	0
  3978  0003AE  0101               	movlb	1	; () banked
  3979  0003B0  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  3980  0003B2  0101               	movlb	1	; () banked
  3981  0003B4  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  3982  0003B6  0E00               	movlw	low _rx_buffer
  3983  0003B8  0101               	movlb	1	; () banked
  3984  0003BA  2539               	addwf	??_receiveData& (0+255),w,b
  3985  0003BC  6ED9               	movwf	fsr2l,c
  3986  0003BE  0E03               	movlw	high _rx_buffer
  3987  0003C0  0101               	movlb	1	; () banked
  3988  0003C2  213A               	addwfc	(??_receiveData+1)& (0+255),w,b
  3989  0003C4  6EDA               	movwf	fsr2h,c
  3990  0003C6  50DF               	movf	indf2,w,c
  3991  0003C8  6E2C               	movwf	_group,c
  3992                           
  3993                           ;FastTransfer.c: 152: group.parts[1] = rx_buffer[r + 2];
  3994  0003CA  0E02               	movlw	2
  3995  0003CC  0101               	movlb	1	; () banked
  3996  0003CE  2549               	addwf	receiveData@r& (0+255),w,b
  3997  0003D0  0101               	movlb	1	; () banked
  3998  0003D2  6F39               	movwf	??_receiveData& (0+255),b
  3999  0003D4  0E00               	movlw	0
  4000  0003D6  0101               	movlb	1	; () banked
  4001  0003D8  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  4002  0003DA  0101               	movlb	1	; () banked
  4003  0003DC  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4004  0003DE  0E00               	movlw	low _rx_buffer
  4005  0003E0  0101               	movlb	1	; () banked
  4006  0003E2  2539               	addwf	??_receiveData& (0+255),w,b
  4007  0003E4  6ED9               	movwf	fsr2l,c
  4008  0003E6  0E03               	movlw	high _rx_buffer
  4009  0003E8  0101               	movlb	1	; () banked
  4010  0003EA  213A               	addwfc	(??_receiveData+1)& (0+255),w,b
  4011  0003EC  6EDA               	movwf	fsr2h,c
  4012  0003EE  50DF               	movf	indf2,w,c
  4013  0003F0  6E2D               	movwf	_group+1,c
  4014                           
  4015                           ; BSR set to: 1
  4016                           ;FastTransfer.c: 153: receiveArrayAddress[(rx_buffer[r])] = group.integer;
  4017  0003F2  0E00               	movlw	low _rx_buffer
  4018  0003F4  0101               	movlb	1	; () banked
  4019  0003F6  2549               	addwf	receiveData@r& (0+255),w,b
  4020  0003F8  6ED9               	movwf	fsr2l,c
  4021  0003FA  0E03               	movlw	high _rx_buffer
  4022  0003FC  0101               	movlb	1	; () banked
  4023  0003FE  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  4024  000400  6EDA               	movwf	fsr2h,c
  4025  000402  50DF               	movf	indf2,w,c
  4026  000404  0101               	movlb	1	; () banked
  4027  000406  6F39               	movwf	??_receiveData& (0+255),b
  4028  000408  0101               	movlb	1	; () banked
  4029  00040A  5139               	movf	??_receiveData& (0+255),w,b
  4030  00040C  0D02               	mullw	2
  4031  00040E  50F3               	movf	prodl,w,c
  4032  000410  0100               	movlb	0	; () banked
  4033  000412  25D5               	addwf	_receiveArrayAddress& (0+255),w,b
  4034  000414  6ED9               	movwf	fsr2l,c
  4035  000416  50F4               	movf	prodh,w,c
  4036  000418  0100               	movlb	0	; () banked
  4037  00041A  21D6               	addwfc	(_receiveArrayAddress+1)& (0+255),w,b
  4038  00041C  6EDA               	movwf	fsr2h,c
  4039  00041E  C02C  FFDE         	movff	_group,postinc2
  4040  000422  C02D  FFDD         	movff	_group+1,postdec2
  4041                           
  4042                           ;FastTransfer.c: 154: } else {
  4043  000426  D003               	goto	l6834
  4044  000428                     l6832:
  4045                           
  4046                           ;FastTransfer.c: 155: dataAdressErrorCounter++;
  4047  000428  0100               	movlb	0	; () banked
  4048  00042A  4BCB               	infsnz	_dataAdressErrorCounter& (0+255),f,b
  4049  00042C  2BCC               	incf	(_dataAdressErrorCounter+1)& (0+255),f,b
  4050  00042E                     l6834:
  4051                           
  4052                           ; BSR set to: 0
  4053  00042E  0E03               	movlw	3
  4054  000430  0101               	movlb	1	; () banked
  4055  000432  2549               	addwf	receiveData@r& (0+255),w,b
  4056  000434  0101               	movlb	1	; () banked
  4057  000436  6F49               	movwf	receiveData@r& (0+255),b
  4058  000438  0E00               	movlw	0
  4059  00043A  0101               	movlb	1	; () banked
  4060  00043C  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  4061  00043E  0101               	movlb	1	; () banked
  4062  000440  6F4A               	movwf	(receiveData@r+1)& (0+255),b
  4063  000442                     l6836:
  4064                           
  4065                           ; BSR set to: 1
  4066  000442  503F               	movf	_rx_len,w,c
  4067  000444  0101               	movlb	1	; () banked
  4068  000446  6F39               	movwf	??_receiveData& (0+255),b
  4069  000448  6B3A               	clrf	(??_receiveData+1)& (0+255),b
  4070  00044A  0101               	movlb	1	; () banked
  4071  00044C  5139               	movf	??_receiveData& (0+255),w,b
  4072  00044E  0101               	movlb	1	; () banked
  4073  000450  5D49               	subwf	receiveData@r& (0+255),w,b
  4074  000452  0101               	movlb	1	; () banked
  4075  000454  514A               	movf	(receiveData@r+1)& (0+255),w,b
  4076  000456  0A80               	xorlw	128
  4077  000458  0101               	movlb	1	; () banked
  4078  00045A  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4079  00045C  0101               	movlb	1	; () banked
  4080  00045E  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4081  000460  0A80               	xorlw	128
  4082  000462  0101               	movlb	1	; () banked
  4083  000464  593B               	subwfb	(??_receiveData+2)& (0+255),w,b
  4084  000466  A0D8               	btfss	status,0,c
  4085  000468  D790               	goto	l6826
  4086                           
  4087                           ; BSR set to: 1
  4088                           ;FastTransfer.c: 156: }
  4089                           ;FastTransfer.c: 157: }
  4090                           ;FastTransfer.c: 160: if (AKNAKsend) {
  4091                           
  4092                           ; BSR set to: 1
  4093  00046A  5036               	movf	_AKNAKsend,w,c
  4094  00046C  B4D8               	btfsc	status,2,c
  4095  00046E  D0BC               	goto	l6866
  4096                           
  4097                           ; BSR set to: 1
  4098                           ;FastTransfer.c: 161: unsigned char holder[3];
  4099                           ;FastTransfer.c: 162: holder[0] = 255;
  4100  000470  0101               	movlb	1	; () banked
  4101  000472  693F               	setf	receiveData@holder& (0+255),b
  4102                           
  4103                           ; BSR set to: 1
  4104                           ;FastTransfer.c: 163: holder[1] = 1;
  4105  000474  0E01               	movlw	1
  4106  000476  0101               	movlb	1	; () banked
  4107  000478  6F40               	movwf	(receiveData@holder+1)& (0+255),b
  4108                           
  4109                           ; BSR set to: 1
  4110                           ;FastTransfer.c: 164: holder[2] = rx_buffer[rx_array_inx - 1];
  4111  00047A  0EFF               	movlw	255
  4112  00047C  0101               	movlb	1	; () banked
  4113  00047E  6F39               	movwf	??_receiveData& (0+255),b
  4114  000480  0EFF               	movlw	255
  4115  000482  0101               	movlb	1	; () banked
  4116  000484  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4117  000486  503E               	movf	_rx_array_inx,w,c
  4118  000488  0101               	movlb	1	; () banked
  4119  00048A  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4120  00048C  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  4121  00048E  0101               	movlb	1	; () banked
  4122  000490  5139               	movf	??_receiveData& (0+255),w,b
  4123  000492  0101               	movlb	1	; () banked
  4124  000494  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  4125  000496  0101               	movlb	1	; () banked
  4126  000498  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4127  00049A  0101               	movlb	1	; () banked
  4128  00049C  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  4129  00049E  0E00               	movlw	low _rx_buffer
  4130  0004A0  0101               	movlb	1	; () banked
  4131  0004A2  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  4132  0004A4  6ED9               	movwf	fsr2l,c
  4133  0004A6  0E03               	movlw	high _rx_buffer
  4134  0004A8  0101               	movlb	1	; () banked
  4135  0004AA  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  4136  0004AC  6EDA               	movwf	fsr2h,c
  4137  0004AE  50DF               	movf	indf2,w,c
  4138  0004B0  0101               	movlb	1	; () banked
  4139  0004B2  6F41               	movwf	(receiveData@holder+2)& (0+255),b
  4140                           
  4141                           ; BSR set to: 1
  4142                           ;FastTransfer.c: 165: unsigned char crcHolder = CRC8(holder, 3);
  4143  0004B4  0E3F               	movlw	low receiveData@holder
  4144  0004B6  6E1B               	movwf	CRC8@data,c
  4145  0004B8  0E01               	movlw	high receiveData@holder
  4146  0004BA  6E1C               	movwf	CRC8@data+1,c
  4147  0004BC  0E03               	movlw	3
  4148  0004BE  6E1D               	movwf	CRC8@len,c
  4149  0004C0  ECB5  F015         	call	_CRC8	;wreg free
  4150  0004C4  0101               	movlb	1	; () banked
  4151  0004C6  6F45               	movwf	receiveData@crcHolder& (0+255),b
  4152                           
  4153                           ; BSR set to: 1
  4154                           ;FastTransfer.c: 166: serial_write(0x06);
  4155  0004C8  D801               	call	u7618
  4156  0004CA  D00B               	goto	l6850
  4157  0004CC                     u7618:
  4158  0004CC  0005               	push	
  4159  0004CE  6EFA               	movwf	pclath,c
  4160  0004D0  5032               	movf	_serial_write,w,c
  4161  0004D2  6EFD               	movwf	tosl,c
  4162  0004D4  5033               	movf	_serial_write+1,w,c
  4163  0004D6  6EFE               	movwf	tosh,c
  4164  0004D8  50F8               	movf	tblptru,w,c
  4165  0004DA  6EFF               	movwf	tosu,c
  4166  0004DC  50FA               	movf	pclath,w,c
  4167  0004DE  0E06               	movlw	6
  4168  0004E0  0012               	return		;indir
  4169  0004E2                     l6850:
  4170                           
  4171                           ;FastTransfer.c: 167: serial_write(0x85);
  4172  0004E2  D801               	call	u7628
  4173  0004E4  D00B               	goto	l6852
  4174  0004E6                     u7628:
  4175  0004E6  0005               	push	
  4176  0004E8  6EFA               	movwf	pclath,c
  4177  0004EA  5032               	movf	_serial_write,w,c
  4178  0004EC  6EFD               	movwf	tosl,c
  4179  0004EE  5033               	movf	_serial_write+1,w,c
  4180  0004F0  6EFE               	movwf	tosh,c
  4181  0004F2  50F8               	movf	tblptru,w,c
  4182  0004F4  6EFF               	movwf	tosu,c
  4183  0004F6  50FA               	movf	pclath,w,c
  4184  0004F8  0E85               	movlw	133
  4185  0004FA  0012               	return		;indir
  4186  0004FC                     l6852:
  4187                           
  4188                           ;FastTransfer.c: 168: serial_write(returnAddress);
  4189  0004FC  D801               	call	u7638
  4190  0004FE  D00B               	goto	l6854
  4191  000500                     u7638:
  4192  000500  0005               	push	
  4193  000502  6EFA               	movwf	pclath,c
  4194  000504  5032               	movf	_serial_write,w,c
  4195  000506  6EFD               	movwf	tosl,c
  4196  000508  5033               	movf	_serial_write+1,w,c
  4197  00050A  6EFE               	movwf	tosh,c
  4198  00050C  50F8               	movf	tblptru,w,c
  4199  00050E  6EFF               	movwf	tosu,c
  4200  000510  50FA               	movf	pclath,w,c
  4201  000512  503C               	movf	_returnAddress,w,c
  4202  000514  0012               	return		;indir
  4203  000516                     l6854:
  4204                           
  4205                           ;FastTransfer.c: 169: serial_write(moduleAddress);
  4206  000516  D801               	call	u7648
  4207  000518  D00B               	goto	l6856
  4208  00051A                     u7648:
  4209  00051A  0005               	push	
  4210  00051C  6EFA               	movwf	pclath,c
  4211  00051E  5032               	movf	_serial_write,w,c
  4212  000520  6EFD               	movwf	tosl,c
  4213  000522  5033               	movf	_serial_write+1,w,c
  4214  000524  6EFE               	movwf	tosh,c
  4215  000526  50F8               	movf	tblptru,w,c
  4216  000528  6EFF               	movwf	tosu,c
  4217  00052A  50FA               	movf	pclath,w,c
  4218  00052C  503B               	movf	_moduleAddress,w,c
  4219  00052E  0012               	return		;indir
  4220  000530                     l6856:
  4221                           
  4222                           ;FastTransfer.c: 170: serial_write(3);
  4223  000530  D801               	call	u7658
  4224  000532  D00B               	goto	l6858
  4225  000534                     u7658:
  4226  000534  0005               	push	
  4227  000536  6EFA               	movwf	pclath,c
  4228  000538  5032               	movf	_serial_write,w,c
  4229  00053A  6EFD               	movwf	tosl,c
  4230  00053C  5033               	movf	_serial_write+1,w,c
  4231  00053E  6EFE               	movwf	tosh,c
  4232  000540  50F8               	movf	tblptru,w,c
  4233  000542  6EFF               	movwf	tosu,c
  4234  000544  50FA               	movf	pclath,w,c
  4235  000546  0E03               	movlw	3
  4236  000548  0012               	return		;indir
  4237  00054A                     l6858:
  4238                           
  4239                           ;FastTransfer.c: 171: serial_write(255);
  4240  00054A  D801               	call	u7668
  4241  00054C  D00B               	goto	l6860
  4242  00054E                     u7668:
  4243  00054E  0005               	push	
  4244  000550  6EFA               	movwf	pclath,c
  4245  000552  5032               	movf	_serial_write,w,c
  4246  000554  6EFD               	movwf	tosl,c
  4247  000556  5033               	movf	_serial_write+1,w,c
  4248  000558  6EFE               	movwf	tosh,c
  4249  00055A  50F8               	movf	tblptru,w,c
  4250  00055C  6EFF               	movwf	tosu,c
  4251  00055E  50FA               	movf	pclath,w,c
  4252  000560  0EFF               	movlw	255
  4253  000562  0012               	return		;indir
  4254  000564                     l6860:
  4255                           
  4256                           ;FastTransfer.c: 172: serial_write(1);
  4257  000564  D801               	call	u7678
  4258  000566  D00B               	goto	l6862
  4259  000568                     u7678:
  4260  000568  0005               	push	
  4261  00056A  6EFA               	movwf	pclath,c
  4262  00056C  5032               	movf	_serial_write,w,c
  4263  00056E  6EFD               	movwf	tosl,c
  4264  000570  5033               	movf	_serial_write+1,w,c
  4265  000572  6EFE               	movwf	tosh,c
  4266  000574  50F8               	movf	tblptru,w,c
  4267  000576  6EFF               	movwf	tosu,c
  4268  000578  50FA               	movf	pclath,w,c
  4269  00057A  0E01               	movlw	1
  4270  00057C  0012               	return		;indir
  4271  00057E                     l6862:
  4272                           
  4273                           ;FastTransfer.c: 173: serial_write(rx_buffer[rx_array_inx - 1]);
  4274  00057E  D801               	call	u7688
  4275  000580  D025               	goto	l6864
  4276  000582                     u7688:
  4277  000582  0005               	push	
  4278  000584  6EFA               	movwf	pclath,c
  4279  000586  5032               	movf	_serial_write,w,c
  4280  000588  6EFD               	movwf	tosl,c
  4281  00058A  5033               	movf	_serial_write+1,w,c
  4282  00058C  6EFE               	movwf	tosh,c
  4283  00058E  50F8               	movf	tblptru,w,c
  4284  000590  6EFF               	movwf	tosu,c
  4285  000592  50FA               	movf	pclath,w,c
  4286  000594  0EFF               	movlw	255
  4287  000596  0101               	movlb	1	; () banked
  4288  000598  6F39               	movwf	??_receiveData& (0+255),b
  4289  00059A  0EFF               	movlw	255
  4290  00059C  0101               	movlb	1	; () banked
  4291  00059E  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4292  0005A0  503E               	movf	_rx_array_inx,w,c
  4293  0005A2  0101               	movlb	1	; () banked
  4294  0005A4  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4295  0005A6  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  4296  0005A8  0101               	movlb	1	; () banked
  4297  0005AA  5139               	movf	??_receiveData& (0+255),w,b
  4298  0005AC  0101               	movlb	1	; () banked
  4299  0005AE  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  4300  0005B0  0101               	movlb	1	; () banked
  4301  0005B2  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4302  0005B4  0101               	movlb	1	; () banked
  4303  0005B6  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  4304  0005B8  0E00               	movlw	low _rx_buffer
  4305  0005BA  0101               	movlb	1	; () banked
  4306  0005BC  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  4307  0005BE  6ED9               	movwf	fsr2l,c
  4308  0005C0  0E03               	movlw	high _rx_buffer
  4309  0005C2  0101               	movlb	1	; () banked
  4310  0005C4  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  4311  0005C6  6EDA               	movwf	fsr2h,c
  4312  0005C8  50DF               	movf	indf2,w,c
  4313  0005CA  0012               	return		;indir
  4314  0005CC                     l6864:
  4315                           
  4316                           ;FastTransfer.c: 174: serial_write(crcHolder);
  4317  0005CC  D801               	call	u7698
  4318  0005CE  D00C               	goto	l6866
  4319  0005D0                     u7698:
  4320  0005D0  0005               	push	
  4321  0005D2  6EFA               	movwf	pclath,c
  4322  0005D4  5032               	movf	_serial_write,w,c
  4323  0005D6  6EFD               	movwf	tosl,c
  4324  0005D8  5033               	movf	_serial_write+1,w,c
  4325  0005DA  6EFE               	movwf	tosh,c
  4326  0005DC  50F8               	movf	tblptru,w,c
  4327  0005DE  6EFF               	movwf	tosu,c
  4328  0005E0  50FA               	movf	pclath,w,c
  4329  0005E2  0101               	movlb	1	; () banked
  4330  0005E4  5145               	movf	receiveData@crcHolder& (0+255),w,b
  4331  0005E6  0012               	return		;indir
  4332  0005E8                     l6866:
  4333                           
  4334                           ;FastTransfer.c: 175: }
  4335                           ;FastTransfer.c: 179: rx_len = 0;
  4336  0005E8  0E00               	movlw	0
  4337  0005EA  6E3F               	movwf	_rx_len,c
  4338                           
  4339                           ;FastTransfer.c: 180: rx_array_inx = 0;
  4340  0005EC  0E00               	movlw	0
  4341  0005EE  6E3E               	movwf	_rx_array_inx,c
  4342                           
  4343                           ;FastTransfer.c: 181: return 1;
  4344  0005F0  0E01               	movlw	1
  4345  0005F2  0012               	return	
  4346  0005F4                     l6876:
  4347                           
  4348                           ;FastTransfer.c: 183: crcErrorCounter++;
  4349  0005F4  0100               	movlb	0	; () banked
  4350  0005F6  4BC9               	infsnz	_crcErrorCounter& (0+255),f,b
  4351  0005F8  2BCA               	incf	(_crcErrorCounter+1)& (0+255),f,b
  4352                           
  4353                           ; BSR set to: 0
  4354                           ;FastTransfer.c: 185: if (AKNAKsend) {
  4355  0005FA  5036               	movf	_AKNAKsend,w,c
  4356  0005FC  B4D8               	btfsc	status,2,c
  4357  0005FE  D0BC               	goto	l6906
  4358                           
  4359                           ; BSR set to: 0
  4360                           ;FastTransfer.c: 186: unsigned char holder[3];
  4361                           ;FastTransfer.c: 187: holder[0] = 255;
  4362  000600  0101               	movlb	1	; () banked
  4363  000602  6942               	setf	receiveData@holder_2455& (0+255),b
  4364                           
  4365                           ; BSR set to: 1
  4366                           ;FastTransfer.c: 188: holder[1] = 2;
  4367  000604  0E02               	movlw	2
  4368  000606  0101               	movlb	1	; () banked
  4369  000608  6F43               	movwf	(receiveData@holder_2455+1)& (0+255),b
  4370                           
  4371                           ; BSR set to: 1
  4372                           ;FastTransfer.c: 189: holder[2] = rx_buffer[rx_array_inx - 1];
  4373  00060A  0EFF               	movlw	255
  4374  00060C  0101               	movlb	1	; () banked
  4375  00060E  6F39               	movwf	??_receiveData& (0+255),b
  4376  000610  0EFF               	movlw	255
  4377  000612  0101               	movlb	1	; () banked
  4378  000614  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4379  000616  503E               	movf	_rx_array_inx,w,c
  4380  000618  0101               	movlb	1	; () banked
  4381  00061A  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4382  00061C  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  4383  00061E  0101               	movlb	1	; () banked
  4384  000620  5139               	movf	??_receiveData& (0+255),w,b
  4385  000622  0101               	movlb	1	; () banked
  4386  000624  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  4387  000626  0101               	movlb	1	; () banked
  4388  000628  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4389  00062A  0101               	movlb	1	; () banked
  4390  00062C  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  4391  00062E  0E00               	movlw	low _rx_buffer
  4392  000630  0101               	movlb	1	; () banked
  4393  000632  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  4394  000634  6ED9               	movwf	fsr2l,c
  4395  000636  0E03               	movlw	high _rx_buffer
  4396  000638  0101               	movlb	1	; () banked
  4397  00063A  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  4398  00063C  6EDA               	movwf	fsr2h,c
  4399  00063E  50DF               	movf	indf2,w,c
  4400  000640  0101               	movlb	1	; () banked
  4401  000642  6F44               	movwf	(receiveData@holder_2455+2)& (0+255),b
  4402                           
  4403                           ; BSR set to: 1
  4404                           ;FastTransfer.c: 190: unsigned char crcHolder = CRC8(holder, 3);
  4405  000644  0E42               	movlw	low receiveData@holder_2455
  4406  000646  6E1B               	movwf	CRC8@data,c
  4407  000648  0E01               	movlw	high receiveData@holder_2455
  4408  00064A  6E1C               	movwf	CRC8@data+1,c
  4409  00064C  0E03               	movlw	3
  4410  00064E  6E1D               	movwf	CRC8@len,c
  4411  000650  ECB5  F015         	call	_CRC8
  4412  000654  0101               	movlb	1	; () banked
  4413  000656  6F46               	movwf	receiveData@crcHolder_2456& (0+255),b
  4414                           
  4415                           ; BSR set to: 1
  4416                           ;FastTransfer.c: 191: serial_write(0x06);
  4417  000658  D801               	call	u7718
  4418  00065A  D00B               	goto	l6890
  4419  00065C                     u7718:
  4420  00065C  0005               	push	
  4421  00065E  6EFA               	movwf	pclath,c
  4422  000660  5032               	movf	_serial_write,w,c
  4423  000662  6EFD               	movwf	tosl,c
  4424  000664  5033               	movf	_serial_write+1,w,c
  4425  000666  6EFE               	movwf	tosh,c
  4426  000668  50F8               	movf	tblptru,w,c
  4427  00066A  6EFF               	movwf	tosu,c
  4428  00066C  50FA               	movf	pclath,w,c
  4429  00066E  0E06               	movlw	6
  4430  000670  0012               	return		;indir
  4431  000672                     l6890:
  4432                           
  4433                           ;FastTransfer.c: 192: serial_write(0x85);
  4434  000672  D801               	call	u7728
  4435  000674  D00B               	goto	l6892
  4436  000676                     u7728:
  4437  000676  0005               	push	
  4438  000678  6EFA               	movwf	pclath,c
  4439  00067A  5032               	movf	_serial_write,w,c
  4440  00067C  6EFD               	movwf	tosl,c
  4441  00067E  5033               	movf	_serial_write+1,w,c
  4442  000680  6EFE               	movwf	tosh,c
  4443  000682  50F8               	movf	tblptru,w,c
  4444  000684  6EFF               	movwf	tosu,c
  4445  000686  50FA               	movf	pclath,w,c
  4446  000688  0E85               	movlw	133
  4447  00068A  0012               	return		;indir
  4448  00068C                     l6892:
  4449                           
  4450                           ;FastTransfer.c: 193: serial_write(returnAddress);
  4451  00068C  D801               	call	u7738
  4452  00068E  D00B               	goto	l6894
  4453  000690                     u7738:
  4454  000690  0005               	push	
  4455  000692  6EFA               	movwf	pclath,c
  4456  000694  5032               	movf	_serial_write,w,c
  4457  000696  6EFD               	movwf	tosl,c
  4458  000698  5033               	movf	_serial_write+1,w,c
  4459  00069A  6EFE               	movwf	tosh,c
  4460  00069C  50F8               	movf	tblptru,w,c
  4461  00069E  6EFF               	movwf	tosu,c
  4462  0006A0  50FA               	movf	pclath,w,c
  4463  0006A2  503C               	movf	_returnAddress,w,c
  4464  0006A4  0012               	return		;indir
  4465  0006A6                     l6894:
  4466                           
  4467                           ;FastTransfer.c: 194: serial_write(moduleAddress);
  4468  0006A6  D801               	call	u7748
  4469  0006A8  D00B               	goto	l6896
  4470  0006AA                     u7748:
  4471  0006AA  0005               	push	
  4472  0006AC  6EFA               	movwf	pclath,c
  4473  0006AE  5032               	movf	_serial_write,w,c
  4474  0006B0  6EFD               	movwf	tosl,c
  4475  0006B2  5033               	movf	_serial_write+1,w,c
  4476  0006B4  6EFE               	movwf	tosh,c
  4477  0006B6  50F8               	movf	tblptru,w,c
  4478  0006B8  6EFF               	movwf	tosu,c
  4479  0006BA  50FA               	movf	pclath,w,c
  4480  0006BC  503B               	movf	_moduleAddress,w,c
  4481  0006BE  0012               	return		;indir
  4482  0006C0                     l6896:
  4483                           
  4484                           ;FastTransfer.c: 195: serial_write(3);
  4485  0006C0  D801               	call	u7758
  4486  0006C2  D00B               	goto	l6898
  4487  0006C4                     u7758:
  4488  0006C4  0005               	push	
  4489  0006C6  6EFA               	movwf	pclath,c
  4490  0006C8  5032               	movf	_serial_write,w,c
  4491  0006CA  6EFD               	movwf	tosl,c
  4492  0006CC  5033               	movf	_serial_write+1,w,c
  4493  0006CE  6EFE               	movwf	tosh,c
  4494  0006D0  50F8               	movf	tblptru,w,c
  4495  0006D2  6EFF               	movwf	tosu,c
  4496  0006D4  50FA               	movf	pclath,w,c
  4497  0006D6  0E03               	movlw	3
  4498  0006D8  0012               	return		;indir
  4499  0006DA                     l6898:
  4500                           
  4501                           ;FastTransfer.c: 196: serial_write(255);
  4502  0006DA  D801               	call	u7768
  4503  0006DC  D00B               	goto	l6900
  4504  0006DE                     u7768:
  4505  0006DE  0005               	push	
  4506  0006E0  6EFA               	movwf	pclath,c
  4507  0006E2  5032               	movf	_serial_write,w,c
  4508  0006E4  6EFD               	movwf	tosl,c
  4509  0006E6  5033               	movf	_serial_write+1,w,c
  4510  0006E8  6EFE               	movwf	tosh,c
  4511  0006EA  50F8               	movf	tblptru,w,c
  4512  0006EC  6EFF               	movwf	tosu,c
  4513  0006EE  50FA               	movf	pclath,w,c
  4514  0006F0  0EFF               	movlw	255
  4515  0006F2  0012               	return		;indir
  4516  0006F4                     l6900:
  4517                           
  4518                           ;FastTransfer.c: 197: serial_write(2);
  4519  0006F4  D801               	call	u7778
  4520  0006F6  D00B               	goto	l6902
  4521  0006F8                     u7778:
  4522  0006F8  0005               	push	
  4523  0006FA  6EFA               	movwf	pclath,c
  4524  0006FC  5032               	movf	_serial_write,w,c
  4525  0006FE  6EFD               	movwf	tosl,c
  4526  000700  5033               	movf	_serial_write+1,w,c
  4527  000702  6EFE               	movwf	tosh,c
  4528  000704  50F8               	movf	tblptru,w,c
  4529  000706  6EFF               	movwf	tosu,c
  4530  000708  50FA               	movf	pclath,w,c
  4531  00070A  0E02               	movlw	2
  4532  00070C  0012               	return		;indir
  4533  00070E                     l6902:
  4534                           
  4535                           ;FastTransfer.c: 198: serial_write(rx_buffer[rx_array_inx - 1]);
  4536  00070E  D801               	call	u7788
  4537  000710  D025               	goto	l6904
  4538  000712                     u7788:
  4539  000712  0005               	push	
  4540  000714  6EFA               	movwf	pclath,c
  4541  000716  5032               	movf	_serial_write,w,c
  4542  000718  6EFD               	movwf	tosl,c
  4543  00071A  5033               	movf	_serial_write+1,w,c
  4544  00071C  6EFE               	movwf	tosh,c
  4545  00071E  50F8               	movf	tblptru,w,c
  4546  000720  6EFF               	movwf	tosu,c
  4547  000722  50FA               	movf	pclath,w,c
  4548  000724  0EFF               	movlw	255
  4549  000726  0101               	movlb	1	; () banked
  4550  000728  6F39               	movwf	??_receiveData& (0+255),b
  4551  00072A  0EFF               	movlw	255
  4552  00072C  0101               	movlb	1	; () banked
  4553  00072E  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4554  000730  503E               	movf	_rx_array_inx,w,c
  4555  000732  0101               	movlb	1	; () banked
  4556  000734  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4557  000736  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  4558  000738  0101               	movlb	1	; () banked
  4559  00073A  5139               	movf	??_receiveData& (0+255),w,b
  4560  00073C  0101               	movlb	1	; () banked
  4561  00073E  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  4562  000740  0101               	movlb	1	; () banked
  4563  000742  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4564  000744  0101               	movlb	1	; () banked
  4565  000746  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  4566  000748  0E00               	movlw	low _rx_buffer
  4567  00074A  0101               	movlb	1	; () banked
  4568  00074C  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  4569  00074E  6ED9               	movwf	fsr2l,c
  4570  000750  0E03               	movlw	high _rx_buffer
  4571  000752  0101               	movlb	1	; () banked
  4572  000754  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  4573  000756  6EDA               	movwf	fsr2h,c
  4574  000758  50DF               	movf	indf2,w,c
  4575  00075A  0012               	return		;indir
  4576  00075C                     l6904:
  4577                           
  4578                           ;FastTransfer.c: 199: serial_write(crcHolder);
  4579  00075C  D801               	call	u7798
  4580  00075E  D00C               	goto	l6906
  4581  000760                     u7798:
  4582  000760  0005               	push	
  4583  000762  6EFA               	movwf	pclath,c
  4584  000764  5032               	movf	_serial_write,w,c
  4585  000766  6EFD               	movwf	tosl,c
  4586  000768  5033               	movf	_serial_write+1,w,c
  4587  00076A  6EFE               	movwf	tosh,c
  4588  00076C  50F8               	movf	tblptru,w,c
  4589  00076E  6EFF               	movwf	tosu,c
  4590  000770  50FA               	movf	pclath,w,c
  4591  000772  0101               	movlb	1	; () banked
  4592  000774  5146               	movf	receiveData@crcHolder_2456& (0+255),w,b
  4593  000776  0012               	return		;indir
  4594  000778                     l6906:
  4595                           
  4596                           ;FastTransfer.c: 200: }
  4597                           ;FastTransfer.c: 203: rx_len = 0;
  4598  000778  0E00               	movlw	0
  4599  00077A  6E3F               	movwf	_rx_len,c
  4600                           
  4601                           ;FastTransfer.c: 204: rx_array_inx = 0;
  4602  00077C  0E00               	movlw	0
  4603  00077E  6E3E               	movwf	_rx_array_inx,c
  4604                           
  4605                           ;FastTransfer.c: 205: return 0;
  4606  000780  0E00               	movlw	0
  4607  000782  0012               	return	
  4608  000784                     l6914:
  4609                           
  4610                           ;FastTransfer.c: 206: }
  4611                           ;FastTransfer.c: 207: }
  4612                           ;FastTransfer.c: 208: }
  4613                           ;FastTransfer.c: 211: return 0;
  4614  000784  0E00               	movlw	0
  4615  000786  0012               	return	
  4616  000788                     __end_of_receiveData:
  4617                           	opt stack 0
  4618                           tosu	equ	0xFFF
  4619                           tosh	equ	0xFFE
  4620                           tosl	equ	0xFFD
  4621                           pclath	equ	0xFFA
  4622                           tblptru	equ	0xFF8
  4623                           tblptrh	equ	0xFF7
  4624                           tblptrl	equ	0xFF6
  4625                           tablat	equ	0xFF5
  4626                           prodh	equ	0xFF4
  4627                           prodl	equ	0xFF3
  4628                           intcon	equ	0xFF2
  4629                           postinc0	equ	0xFEE
  4630                           wreg	equ	0xFE8
  4631                           indf2	equ	0xFDF
  4632                           postinc2	equ	0xFDE
  4633                           postdec2	equ	0xFDD
  4634                           plusw2	equ	0xFDB
  4635                           fsr2h	equ	0xFDA
  4636                           fsr2l	equ	0xFD9
  4637                           status	equ	0xFD8
  4638                           
  4639 ;; *************** function _Send_put *****************
  4640 ;; Defined at:
  4641 ;;		line 130 in file "UART.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;  _data           1    wreg     unsigned char 
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;  _data           1   37[COMRAM] unsigned char 
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  1    wreg      void 
  4648 ;; Registers used:
  4649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4655 ;;      Params:         0       0       0       0       0       0       0
  4656 ;;      Locals:         1       0       0       0       0       0       0
  4657 ;;      Temps:          0       0       0       0       0       0       0
  4658 ;;      Totals:         1       0       0       0       0       0       0
  4659 ;;Total ram usage:        1 bytes
  4660 ;; Hardware stack levels used:    1
  4661 ;; Hardware stack levels required when called:    6
  4662 ;; This function calls:
  4663 ;;		_UART_buff_get
  4664 ;;		_UART_buff_put
  4665 ;; This function is called by:
  4666 ;;		_SYSTEM_Initialize
  4667 ;;		_putch
  4668 ;;		_sendData
  4669 ;;		_receiveData
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           	psect	text13
  4674  002D96                     __ptext13:
  4675                           	opt stack 0
  4676  002D96                     _Send_put:
  4677                           	opt stack 21
  4678                           
  4679                           ;incstack = 0
  4680                           ;Send_put@_data stored from wreg
  4681  002D96  6E26               	movwf	Send_put@_data,c
  4682                           
  4683                           ;UART.c: 131: UART_buff_put(&output_buffer, _data);
  4684  002D98  0E00               	movlw	low _output_buffer
  4685  002D9A  6E21               	movwf	UART_buff_put@_this,c
  4686  002D9C  0E05               	movlw	high _output_buffer
  4687  002D9E  6E22               	movwf	UART_buff_put@_this+1,c
  4688  002DA0  C026  F023         	movff	Send_put@_data,UART_buff_put@c
  4689  002DA4  EC01  F00D         	call	_UART_buff_put
  4690                           
  4691                           ;UART.c: 132: if (Transmit_stall == 1) {
  4692  002DA8  0444               	decf	_Transmit_stall,w,c
  4693  002DAA  A4D8               	btfss	status,2,c
  4694  002DAC  0012               	return	
  4695                           
  4696                           ;UART.c: 133: Transmit_stall = 0;
  4697  002DAE  0E00               	movlw	0
  4698  002DB0  6E44               	movwf	_Transmit_stall,c
  4699                           
  4700                           ;UART.c: 134: TXREG1 = UART_buff_get(&output_buffer);
  4701  002DB2  0E00               	movlw	low _output_buffer
  4702  002DB4  6E21               	movwf	UART_buff_get@_this,c
  4703  002DB6  0E05               	movlw	high _output_buffer
  4704  002DB8  6E22               	movwf	UART_buff_get@_this+1,c
  4705  002DBA  EC18  F013         	call	_UART_buff_get	;wreg free
  4706  002DBE  6EAD               	movwf	4013,c	;volatile
  4707                           
  4708                           ;UART.c: 135: PIE1bits.TX1IE = 1;
  4709  002DC0  889D               	bsf	3997,4,c	;volatile
  4710  002DC2  0012               	return	
  4711  002DC4                     __end_of_Send_put:
  4712                           	opt stack 0
  4713                           tosu	equ	0xFFF
  4714                           tosh	equ	0xFFE
  4715                           tosl	equ	0xFFD
  4716                           pclath	equ	0xFFA
  4717                           tblptru	equ	0xFF8
  4718                           tblptrh	equ	0xFF7
  4719                           tblptrl	equ	0xFF6
  4720                           tablat	equ	0xFF5
  4721                           prodh	equ	0xFF4
  4722                           prodl	equ	0xFF3
  4723                           intcon	equ	0xFF2
  4724                           postinc0	equ	0xFEE
  4725                           wreg	equ	0xFE8
  4726                           indf2	equ	0xFDF
  4727                           postinc2	equ	0xFDE
  4728                           postdec2	equ	0xFDD
  4729                           plusw2	equ	0xFDB
  4730                           fsr2h	equ	0xFDA
  4731                           fsr2l	equ	0xFD9
  4732                           status	equ	0xFD8
  4733                           
  4734 ;; *************** function _UART_buff_put *****************
  4735 ;; Defined at:
  4736 ;;		line 68 in file "UART.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  4739 ;;		 -> output_buffer(206), input_buffer(206), 
  4740 ;;  c               1   34[COMRAM] const unsigned char 
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;		None
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  1    wreg      void 
  4745 ;; Registers used:
  4746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4752 ;;      Params:         3       0       0       0       0       0       0
  4753 ;;      Locals:         0       0       0       0       0       0       0
  4754 ;;      Temps:          2       0       0       0       0       0       0
  4755 ;;      Totals:         5       0       0       0       0       0       0
  4756 ;;Total ram usage:        5 bytes
  4757 ;; Hardware stack levels used:    1
  4758 ;; Hardware stack levels required when called:    5
  4759 ;; This function calls:
  4760 ;;		_UART_buff_modulo_inc
  4761 ;; This function is called by:
  4762 ;;		_Send_put
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           	psect	text14
  4767  001A02                     __ptext14:
  4768                           	opt stack 0
  4769  001A02                     _UART_buff_put:
  4770                           	opt stack 21
  4771                           
  4772                           ;UART.c: 69: if (_this->count < 200) {
  4773                           
  4774                           ;incstack = 0
  4775  001A02  EE20 F0CC          	lfsr	2,204
  4776  001A06  5021               	movf	UART_buff_put@_this,w,c
  4777  001A08  26D9               	addwf	fsr2l,f,c
  4778  001A0A  5022               	movf	UART_buff_put@_this+1,w,c
  4779  001A0C  22DA               	addwfc	fsr2h,f,c
  4780  001A0E  0E01               	movlw	1
  4781  001A10  BEDB               	btfsc	plusw2,7,c
  4782  001A12  D007               	goto	l6016
  4783  001A14  0E01               	movlw	1
  4784  001A16  50DB               	movf	plusw2,w,c
  4785  001A18  E13A               	bnz	l6022
  4786  001A1A  0EC8               	movlw	200
  4787  001A1C  5CDE               	subwf	postinc2,w,c
  4788  001A1E  B0D8               	btfsc	status,0,c
  4789  001A20  D036               	goto	l6022
  4790  001A22                     l6016:
  4791                           
  4792                           ;UART.c: 70: _this->buf[_this->head] = c;
  4793  001A22  EE20 F0C8          	lfsr	2,200
  4794  001A26  5021               	movf	UART_buff_put@_this,w,c
  4795  001A28  26D9               	addwf	fsr2l,f,c
  4796  001A2A  5022               	movf	UART_buff_put@_this+1,w,c
  4797  001A2C  22DA               	addwfc	fsr2h,f,c
  4798  001A2E  CFDE F024          	movff	postinc2,??_UART_buff_put
  4799  001A32  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  4800  001A36  5024               	movf	??_UART_buff_put,w,c
  4801  001A38  2421               	addwf	UART_buff_put@_this,w,c
  4802  001A3A  6ED9               	movwf	fsr2l,c
  4803  001A3C  5025               	movf	??_UART_buff_put+1,w,c
  4804  001A3E  2022               	addwfc	UART_buff_put@_this+1,w,c
  4805  001A40  6EDA               	movwf	fsr2h,c
  4806  001A42  C023  FFDF         	movff	UART_buff_put@c,indf2
  4807                           
  4808                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
  4809  001A46  EE20 F0C8          	lfsr	2,200
  4810  001A4A  5021               	movf	UART_buff_put@_this,w,c
  4811  001A4C  26D9               	addwf	fsr2l,f,c
  4812  001A4E  5022               	movf	UART_buff_put@_this+1,w,c
  4813  001A50  22DA               	addwfc	fsr2h,f,c
  4814  001A52  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  4815  001A56  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  4816  001A5A  0E00               	movlw	0
  4817  001A5C  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  4818  001A5E  0EC8               	movlw	200
  4819  001A60  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  4820  001A62  EC0D  F017         	call	_UART_buff_modulo_inc	;wreg free
  4821  001A66  EE20 F0C8          	lfsr	2,200
  4822  001A6A  5021               	movf	UART_buff_put@_this,w,c
  4823  001A6C  26D9               	addwf	fsr2l,f,c
  4824  001A6E  5022               	movf	UART_buff_put@_this+1,w,c
  4825  001A70  22DA               	addwfc	fsr2h,f,c
  4826  001A72  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4827  001A76  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4828                           
  4829                           ;UART.c: 72: ++_this->count;
  4830  001A7A  EE20 F0CC          	lfsr	2,204
  4831  001A7E  5021               	movf	UART_buff_put@_this,w,c
  4832  001A80  26D9               	addwf	fsr2l,f,c
  4833  001A82  5022               	movf	UART_buff_put@_this+1,w,c
  4834  001A84  22DA               	addwfc	fsr2h,f,c
  4835  001A86  2ADE               	incf	postinc2,f,c
  4836  001A88  0E00               	movlw	0
  4837  001A8A  22DD               	addwfc	postdec2,f,c
  4838                           
  4839                           ;UART.c: 73: } else {
  4840  001A8C  0012               	return	
  4841  001A8E                     l6022:
  4842                           
  4843                           ;UART.c: 74: _this->buf[_this->head] = c;
  4844  001A8E  EE20 F0C8          	lfsr	2,200
  4845  001A92  5021               	movf	UART_buff_put@_this,w,c
  4846  001A94  26D9               	addwf	fsr2l,f,c
  4847  001A96  5022               	movf	UART_buff_put@_this+1,w,c
  4848  001A98  22DA               	addwfc	fsr2h,f,c
  4849  001A9A  CFDE F024          	movff	postinc2,??_UART_buff_put
  4850  001A9E  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  4851  001AA2  5024               	movf	??_UART_buff_put,w,c
  4852  001AA4  2421               	addwf	UART_buff_put@_this,w,c
  4853  001AA6  6ED9               	movwf	fsr2l,c
  4854  001AA8  5025               	movf	??_UART_buff_put+1,w,c
  4855  001AAA  2022               	addwfc	UART_buff_put@_this+1,w,c
  4856  001AAC  6EDA               	movwf	fsr2h,c
  4857  001AAE  C023  FFDF         	movff	UART_buff_put@c,indf2
  4858                           
  4859                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
  4860  001AB2  EE20 F0C8          	lfsr	2,200
  4861  001AB6  5021               	movf	UART_buff_put@_this,w,c
  4862  001AB8  26D9               	addwf	fsr2l,f,c
  4863  001ABA  5022               	movf	UART_buff_put@_this+1,w,c
  4864  001ABC  22DA               	addwfc	fsr2h,f,c
  4865  001ABE  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  4866  001AC2  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  4867  001AC6  0E00               	movlw	0
  4868  001AC8  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  4869  001ACA  0EC8               	movlw	200
  4870  001ACC  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  4871  001ACE  EC0D  F017         	call	_UART_buff_modulo_inc	;wreg free
  4872  001AD2  EE20 F0C8          	lfsr	2,200
  4873  001AD6  5021               	movf	UART_buff_put@_this,w,c
  4874  001AD8  26D9               	addwf	fsr2l,f,c
  4875  001ADA  5022               	movf	UART_buff_put@_this+1,w,c
  4876  001ADC  22DA               	addwfc	fsr2h,f,c
  4877  001ADE  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4878  001AE2  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4879                           
  4880                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  4881  001AE6  EE20 F0CA          	lfsr	2,202
  4882  001AEA  5021               	movf	UART_buff_put@_this,w,c
  4883  001AEC  26D9               	addwf	fsr2l,f,c
  4884  001AEE  5022               	movf	UART_buff_put@_this+1,w,c
  4885  001AF0  22DA               	addwfc	fsr2h,f,c
  4886  001AF2  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  4887  001AF6  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  4888  001AFA  0E00               	movlw	0
  4889  001AFC  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  4890  001AFE  0EC8               	movlw	200
  4891  001B00  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  4892  001B02  EC0D  F017         	call	_UART_buff_modulo_inc	;wreg free
  4893  001B06  EE20 F0CA          	lfsr	2,202
  4894  001B0A  5021               	movf	UART_buff_put@_this,w,c
  4895  001B0C  26D9               	addwf	fsr2l,f,c
  4896  001B0E  5022               	movf	UART_buff_put@_this+1,w,c
  4897  001B10  22DA               	addwfc	fsr2h,f,c
  4898  001B12  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4899  001B16  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4900  001B1A  0012               	return	
  4901  001B1C                     __end_of_UART_buff_put:
  4902                           	opt stack 0
  4903                           tosu	equ	0xFFF
  4904                           tosh	equ	0xFFE
  4905                           tosl	equ	0xFFD
  4906                           pclath	equ	0xFFA
  4907                           tblptru	equ	0xFF8
  4908                           tblptrh	equ	0xFF7
  4909                           tblptrl	equ	0xFF6
  4910                           tablat	equ	0xFF5
  4911                           prodh	equ	0xFF4
  4912                           prodl	equ	0xFF3
  4913                           intcon	equ	0xFF2
  4914                           postinc0	equ	0xFEE
  4915                           wreg	equ	0xFE8
  4916                           indf2	equ	0xFDF
  4917                           postinc2	equ	0xFDE
  4918                           postdec2	equ	0xFDD
  4919                           plusw2	equ	0xFDB
  4920                           fsr2h	equ	0xFDA
  4921                           fsr2l	equ	0xFD9
  4922                           status	equ	0xFD8
  4923                           
  4924 ;; *************** function _Receive_peek *****************
  4925 ;; Defined at:
  4926 ;;		line 118 in file "UART.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;		None
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;		None
  4931 ;; Return value:  Size  Location     Type
  4932 ;;                  1    wreg      unsigned char 
  4933 ;; Registers used:
  4934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4935 ;; Tracked objects:
  4936 ;;		On entry : 0/0
  4937 ;;		On exit  : 0/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4940 ;;      Params:         0       0       0       0       0       0       0
  4941 ;;      Locals:         0       0       0       0       0       0       0
  4942 ;;      Temps:          0       0       0       0       0       0       0
  4943 ;;      Totals:         0       0       0       0       0       0       0
  4944 ;;Total ram usage:        0 bytes
  4945 ;; Hardware stack levels used:    1
  4946 ;; Hardware stack levels required when called:    5
  4947 ;; This function calls:
  4948 ;;		_UART_buff_peek
  4949 ;; This function is called by:
  4950 ;;		_SYSTEM_Initialize
  4951 ;;		_receiveData
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955                           	psect	text15
  4956  003010                     __ptext15:
  4957                           	opt stack 0
  4958  003010                     _Receive_peek:
  4959                           	opt stack 23
  4960                           
  4961                           ;UART.c: 119: return UART_buff_peek(&input_buffer);
  4962                           
  4963                           ;incstack = 0
  4964  003010  0E00               	movlw	low _input_buffer
  4965  003012  6E1B               	movwf	UART_buff_peek@_this,c
  4966  003014  0E04               	movlw	high _input_buffer
  4967  003016  6E1C               	movwf	UART_buff_peek@_this+1,c
  4968  003018  EC4B  F017         	call	_UART_buff_peek	;wreg free
  4969  00301C  0012               	return	
  4970  00301E                     __end_of_Receive_peek:
  4971                           	opt stack 0
  4972                           tosu	equ	0xFFF
  4973                           tosh	equ	0xFFE
  4974                           tosl	equ	0xFFD
  4975                           pclath	equ	0xFFA
  4976                           tblptru	equ	0xFF8
  4977                           tblptrh	equ	0xFF7
  4978                           tblptrl	equ	0xFF6
  4979                           tablat	equ	0xFF5
  4980                           prodh	equ	0xFF4
  4981                           prodl	equ	0xFF3
  4982                           intcon	equ	0xFF2
  4983                           postinc0	equ	0xFEE
  4984                           wreg	equ	0xFE8
  4985                           indf2	equ	0xFDF
  4986                           postinc2	equ	0xFDE
  4987                           postdec2	equ	0xFDD
  4988                           plusw2	equ	0xFDB
  4989                           fsr2h	equ	0xFDA
  4990                           fsr2l	equ	0xFD9
  4991                           status	equ	0xFD8
  4992                           
  4993 ;; *************** function _UART_buff_peek *****************
  4994 ;; Defined at:
  4995 ;;		line 114 in file "UART.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  4998 ;;		 -> input_buffer(206), 
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;		None
  5001 ;; Return value:  Size  Location     Type
  5002 ;;                  1    wreg      unsigned char 
  5003 ;; Registers used:
  5004 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5005 ;; Tracked objects:
  5006 ;;		On entry : 0/0
  5007 ;;		On exit  : 0/0
  5008 ;;		Unchanged: 0/0
  5009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5010 ;;      Params:         2       0       0       0       0       0       0
  5011 ;;      Locals:         0       0       0       0       0       0       0
  5012 ;;      Temps:          2       0       0       0       0       0       0
  5013 ;;      Totals:         4       0       0       0       0       0       0
  5014 ;;Total ram usage:        4 bytes
  5015 ;; Hardware stack levels used:    1
  5016 ;; Hardware stack levels required when called:    4
  5017 ;; This function calls:
  5018 ;;		Nothing
  5019 ;; This function is called by:
  5020 ;;		_Receive_peek
  5021 ;; This function uses a non-reentrant model
  5022 ;;
  5023                           
  5024                           	psect	text16
  5025  002E96                     __ptext16:
  5026                           	opt stack 0
  5027  002E96                     _UART_buff_peek:
  5028                           	opt stack 23
  5029                           
  5030                           ;UART.c: 115: return _this->buf[_this->tail];
  5031                           
  5032                           ;incstack = 0
  5033  002E96  EE20 F0CA          	lfsr	2,202
  5034  002E9A  501B               	movf	UART_buff_peek@_this,w,c
  5035  002E9C  26D9               	addwf	fsr2l,f,c
  5036  002E9E  501C               	movf	UART_buff_peek@_this+1,w,c
  5037  002EA0  22DA               	addwfc	fsr2h,f,c
  5038  002EA2  CFDE F01D          	movff	postinc2,??_UART_buff_peek
  5039  002EA6  CFDD F01E          	movff	postdec2,??_UART_buff_peek+1
  5040  002EAA  501D               	movf	??_UART_buff_peek,w,c
  5041  002EAC  241B               	addwf	UART_buff_peek@_this,w,c
  5042  002EAE  6ED9               	movwf	fsr2l,c
  5043  002EB0  501E               	movf	??_UART_buff_peek+1,w,c
  5044  002EB2  201C               	addwfc	UART_buff_peek@_this+1,w,c
  5045  002EB4  6EDA               	movwf	fsr2h,c
  5046  002EB6  50DF               	movf	indf2,w,c
  5047  002EB8  0012               	return	
  5048  002EBA                     __end_of_UART_buff_peek:
  5049                           	opt stack 0
  5050                           tosu	equ	0xFFF
  5051                           tosh	equ	0xFFE
  5052                           tosl	equ	0xFFD
  5053                           pclath	equ	0xFFA
  5054                           tblptru	equ	0xFF8
  5055                           tblptrh	equ	0xFF7
  5056                           tblptrl	equ	0xFF6
  5057                           tablat	equ	0xFF5
  5058                           prodh	equ	0xFF4
  5059                           prodl	equ	0xFF3
  5060                           intcon	equ	0xFF2
  5061                           postinc0	equ	0xFEE
  5062                           wreg	equ	0xFE8
  5063                           indf2	equ	0xFDF
  5064                           postinc2	equ	0xFDE
  5065                           postdec2	equ	0xFDD
  5066                           plusw2	equ	0xFDB
  5067                           fsr2h	equ	0xFDA
  5068                           fsr2l	equ	0xFD9
  5069                           status	equ	0xFD8
  5070                           
  5071 ;; *************** function _CRCcheck *****************
  5072 ;; Defined at:
  5073 ;;		line 374 in file "FastTransfer.c"
  5074 ;; Parameters:    Size  Location     Type
  5075 ;;		None
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;  rt              2    5[BANK0 ] int 
  5078 ;;  arrayHolder     3    2[BANK0 ] unsigned char [3]
  5079 ;;  calculatedCR    1    1[BANK0 ] unsigned char 
  5080 ;;  SentCRC         1    0[BANK0 ] unsigned char 
  5081 ;; Return value:  Size  Location     Type
  5082 ;;                  1    wreg      void 
  5083 ;; Registers used:
  5084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  5085 ;; Tracked objects:
  5086 ;;		On entry : 0/0
  5087 ;;		On exit  : 0/0
  5088 ;;		Unchanged: 0/0
  5089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5090 ;;      Params:         0       0       0       0       0       0       0
  5091 ;;      Locals:         0       7       0       0       0       0       0
  5092 ;;      Temps:          0       0       0       0       0       0       0
  5093 ;;      Totals:         0       7       0       0       0       0       0
  5094 ;;Total ram usage:        7 bytes
  5095 ;; Hardware stack levels used:    1
  5096 ;; Hardware stack levels required when called:    7
  5097 ;; This function calls:
  5098 ;;		Absolute function
  5099 ;;		_CRC8
  5100 ;;		_Receive_available
  5101 ;;		_Receive_get
  5102 ;;		_crcBufS_get
  5103 ;;		_crcBufS_status_put
  5104 ;; This function is called by:
  5105 ;;		_receiveData
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           	psect	text17
  5110  0013DA                     __ptext17:
  5111                           	opt stack 0
  5112  0013DA                     _CRCcheck:
  5113                           	opt stack 21
  5114  0013DA                     l6452:
  5115  0013DA  D801               	call	u6808
  5116  0013DC  D00A               	goto	u6809
  5117  0013DE                     u6808:
  5118  0013DE  0005               	push	
  5119  0013E0  6EFA               	movwf	pclath,c
  5120  0013E2  502E               	movf	_serial_available,w,c
  5121  0013E4  6EFD               	movwf	tosl,c
  5122  0013E6  502F               	movf	_serial_available+1,w,c
  5123  0013E8  6EFE               	movwf	tosh,c
  5124  0013EA  50F8               	movf	tblptru,w,c
  5125  0013EC  6EFF               	movwf	tosu,c
  5126  0013EE  50FA               	movf	pclath,w,c
  5127  0013F0  0012               	return		;indir
  5128  0013F2                     u6809:
  5129  0013F2  BE1E               	btfsc	?_Receive_available+1,7,c
  5130  0013F4  D7F2               	goto	l6452
  5131  0013F6  501E               	movf	?_Receive_available+1,w,c
  5132  0013F8  E104               	bnz	l6454
  5133  0013FA  0E04               	movlw	4
  5134  0013FC  5C1D               	subwf	?_Receive_available,w,c
  5135  0013FE  A0D8               	btfss	status,0,c
  5136  001400  D7EC               	goto	l6452
  5137  001402                     l6454:
  5138                           
  5139                           ;FastTransfer.c: 378: unsigned char arrayHolder[3];
  5140                           ;FastTransfer.c: 379: arrayHolder[0] = serial_read();
  5141  001402  D801               	call	u6828
  5142  001404  D00A               	goto	u6829
  5143  001406                     u6828:
  5144  001406  0005               	push	
  5145  001408  6EFA               	movwf	pclath,c
  5146  00140A  5030               	movf	_serial_read,w,c
  5147  00140C  6EFD               	movwf	tosl,c
  5148  00140E  5031               	movf	_serial_read+1,w,c
  5149  001410  6EFE               	movwf	tosh,c
  5150  001412  50F8               	movf	tblptru,w,c
  5151  001414  6EFF               	movwf	tosu,c
  5152  001416  50FA               	movf	pclath,w,c
  5153  001418  0012               	return		;indir
  5154  00141A                     u6829:
  5155  00141A  0100               	movlb	0	; () banked
  5156  00141C  6FF6               	movwf	CRCcheck@arrayHolder& (0+255),b
  5157                           
  5158                           ;FastTransfer.c: 380: arrayHolder[1] = serial_read();
  5159  00141E  D801               	call	u6838
  5160  001420  D00A               	goto	u6839
  5161  001422                     u6838:
  5162  001422  0005               	push	
  5163  001424  6EFA               	movwf	pclath,c
  5164  001426  5030               	movf	_serial_read,w,c
  5165  001428  6EFD               	movwf	tosl,c
  5166  00142A  5031               	movf	_serial_read+1,w,c
  5167  00142C  6EFE               	movwf	tosh,c
  5168  00142E  50F8               	movf	tblptru,w,c
  5169  001430  6EFF               	movwf	tosu,c
  5170  001432  50FA               	movf	pclath,w,c
  5171  001434  0012               	return		;indir
  5172  001436                     u6839:
  5173  001436  0100               	movlb	0	; () banked
  5174  001438  6FF7               	movwf	(CRCcheck@arrayHolder+1)& (0+255),b
  5175                           
  5176                           ;FastTransfer.c: 381: arrayHolder[2] = serial_read();
  5177  00143A  D801               	call	u6848
  5178  00143C  D00A               	goto	u6849
  5179  00143E                     u6848:
  5180  00143E  0005               	push	
  5181  001440  6EFA               	movwf	pclath,c
  5182  001442  5030               	movf	_serial_read,w,c
  5183  001444  6EFD               	movwf	tosl,c
  5184  001446  5031               	movf	_serial_read+1,w,c
  5185  001448  6EFE               	movwf	tosh,c
  5186  00144A  50F8               	movf	tblptru,w,c
  5187  00144C  6EFF               	movwf	tosu,c
  5188  00144E  50FA               	movf	pclath,w,c
  5189  001450  0012               	return		;indir
  5190  001452                     u6849:
  5191  001452  0100               	movlb	0	; () banked
  5192  001454  6FF8               	movwf	(CRCcheck@arrayHolder+2)& (0+255),b
  5193                           
  5194                           ;FastTransfer.c: 382: unsigned char SentCRC = serial_read();
  5195  001456  D801               	call	u6858
  5196  001458  D00A               	goto	u6859
  5197  00145A                     u6858:
  5198  00145A  0005               	push	
  5199  00145C  6EFA               	movwf	pclath,c
  5200  00145E  5030               	movf	_serial_read,w,c
  5201  001460  6EFD               	movwf	tosl,c
  5202  001462  5031               	movf	_serial_read+1,w,c
  5203  001464  6EFE               	movwf	tosh,c
  5204  001466  50F8               	movf	tblptru,w,c
  5205  001468  6EFF               	movwf	tosu,c
  5206  00146A  50FA               	movf	pclath,w,c
  5207  00146C  0012               	return		;indir
  5208  00146E                     u6859:
  5209  00146E  0100               	movlb	0	; () banked
  5210  001470  6FF4               	movwf	CRCcheck@SentCRC& (0+255),b
  5211                           
  5212                           ; BSR set to: 0
  5213                           ;FastTransfer.c: 383: unsigned char calculatedCRC = CRC8(arrayHolder, 3);
  5214  001472  0EF6               	movlw	low CRCcheck@arrayHolder
  5215  001474  6E1B               	movwf	CRC8@data,c
  5216  001476  0E00               	movlw	high CRCcheck@arrayHolder
  5217  001478  6E1C               	movwf	CRC8@data+1,c
  5218  00147A  0E03               	movlw	3
  5219  00147C  6E1D               	movwf	CRC8@len,c
  5220  00147E  ECB5  F015         	call	_CRC8	;wreg free
  5221  001482  0100               	movlb	0	; () banked
  5222  001484  6FF5               	movwf	CRCcheck@calculatedCRC& (0+255),b
  5223                           
  5224                           ; BSR set to: 0
  5225                           ;FastTransfer.c: 386: if (SentCRC == calculatedCRC) {
  5226  001486  0100               	movlb	0	; () banked
  5227  001488  51F5               	movf	CRCcheck@calculatedCRC& (0+255),w,b
  5228  00148A  0100               	movlb	0	; () banked
  5229  00148C  19F4               	xorwf	CRCcheck@SentCRC& (0+255),w,b
  5230  00148E  A4D8               	btfss	status,2,c
  5231  001490  D04E               	goto	l6484
  5232                           
  5233                           ; BSR set to: 0
  5234                           ;FastTransfer.c: 388: int rt;
  5235                           ;FastTransfer.c: 389: for (rt = 0; rt < 5; rt++) {
  5236  001492  0E00               	movlw	0
  5237  001494  0100               	movlb	0	; () banked
  5238  001496  6FFA               	movwf	(CRCcheck@rt+1)& (0+255),b
  5239  001498  0E00               	movlw	0
  5240  00149A  6FF9               	movwf	CRCcheck@rt& (0+255),b
  5241  00149C                     l6462:
  5242                           
  5243                           ; BSR set to: 0
  5244  00149C  0100               	movlb	0	; () banked
  5245  00149E  BFFA               	btfsc	(CRCcheck@rt+1)& (0+255),7,b
  5246  0014A0  D008               	goto	l6466
  5247  0014A2  0100               	movlb	0	; () banked
  5248  0014A4  51FA               	movf	(CRCcheck@rt+1)& (0+255),w,b
  5249  0014A6  E147               	bnz	l1127
  5250  0014A8  0E05               	movlw	5
  5251  0014AA  0100               	movlb	0	; () banked
  5252  0014AC  5DF9               	subwf	CRCcheck@rt& (0+255),w,b
  5253  0014AE  B0D8               	btfsc	status,0,c
  5254  0014B0  0012               	return	
  5255  0014B2                     l6466:
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;FastTransfer.c: 390: if (returnAddress == crcBufS_get(&crc_buffer, rt, 0)) {
  5259  0014B2  0E28               	movlw	low _crc_buffer
  5260  0014B4  6E1B               	movwf	crcBufS_get@_this,c
  5261  0014B6  0E01               	movlw	high _crc_buffer
  5262  0014B8  6E1C               	movwf	crcBufS_get@_this+1,c
  5263  0014BA  C0F9  F01D         	movff	CRCcheck@rt,crcBufS_get@time
  5264  0014BE  0E00               	movlw	0
  5265  0014C0  6E1E               	movwf	crcBufS_get@space,c
  5266  0014C2  EC20  F00F         	call	_crcBufS_get	;wreg free
  5267  0014C6  183C               	xorwf	_returnAddress,w,c
  5268  0014C8  A4D8               	btfss	status,2,c
  5269  0014CA  D02D               	goto	l6480
  5270                           
  5271                           ;FastTransfer.c: 391: if (arrayHolder[2] == crcBufS_get(&crc_buffer, rt, 1)) {
  5272  0014CC  0E28               	movlw	low _crc_buffer
  5273  0014CE  6E1B               	movwf	crcBufS_get@_this,c
  5274  0014D0  0E01               	movlw	high _crc_buffer
  5275  0014D2  6E1C               	movwf	crcBufS_get@_this+1,c
  5276  0014D4  C0F9  F01D         	movff	CRCcheck@rt,crcBufS_get@time
  5277  0014D8  0E01               	movlw	1
  5278  0014DA  6E1E               	movwf	crcBufS_get@space,c
  5279  0014DC  EC20  F00F         	call	_crcBufS_get	;wreg free
  5280  0014E0  0100               	movlb	0	; () banked
  5281  0014E2  19F8               	xorwf	(CRCcheck@arrayHolder+2)& (0+255),w,b
  5282  0014E4  A4D8               	btfss	status,2,c
  5283  0014E6  D01F               	goto	l6480
  5284                           
  5285                           ; BSR set to: 0
  5286                           ;FastTransfer.c: 392: if (arrayHolder[1] == 1) {
  5287  0014E8  0100               	movlb	0	; () banked
  5288  0014EA  05F7               	decf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  5289  0014EC  A4D8               	btfss	status,2,c
  5290  0014EE  D00B               	goto	l6476
  5291                           
  5292                           ; BSR set to: 0
  5293                           ;FastTransfer.c: 393: crcBufS_status_put(&crc_buffer, rt, 1);
  5294  0014F0  0E28               	movlw	low _crc_buffer
  5295  0014F2  6E1B               	movwf	crcBufS_status_put@_this,c
  5296  0014F4  0E01               	movlw	high _crc_buffer
  5297  0014F6  6E1C               	movwf	crcBufS_status_put@_this+1,c
  5298  0014F8  C0F9  F01D         	movff	CRCcheck@rt,crcBufS_status_put@time
  5299  0014FC  0E01               	movlw	1
  5300  0014FE  6E1E               	movwf	crcBufS_status_put@status,c
  5301  001500  ECFD  F00F         	call	_crcBufS_status_put	;wreg free
  5302                           
  5303                           ;FastTransfer.c: 394: break;
  5304  001504  0012               	return	
  5305  001506                     l6476:
  5306  001506  0E02               	movlw	2
  5307  001508  0100               	movlb	0	; () banked
  5308  00150A  19F7               	xorwf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  5309  00150C  A4D8               	btfss	status,2,c
  5310  00150E  D00B               	goto	l6480
  5311                           
  5312                           ; BSR set to: 0
  5313                           ;FastTransfer.c: 396: crcBufS_status_put(&crc_buffer, rt, 2);
  5314  001510  0E28               	movlw	low _crc_buffer
  5315  001512  6E1B               	movwf	crcBufS_status_put@_this,c
  5316  001514  0E01               	movlw	high _crc_buffer
  5317  001516  6E1C               	movwf	crcBufS_status_put@_this+1,c
  5318  001518  C0F9  F01D         	movff	CRCcheck@rt,crcBufS_status_put@time
  5319  00151C  0E02               	movlw	2
  5320  00151E  6E1E               	movwf	crcBufS_status_put@status,c
  5321  001520  ECFD  F00F         	call	_crcBufS_status_put	;wreg free
  5322                           
  5323                           ;FastTransfer.c: 397: break;
  5324  001524  0012               	return	
  5325  001526                     l6480:
  5326  001526  0100               	movlb	0	; () banked
  5327  001528  4BF9               	infsnz	CRCcheck@rt& (0+255),f,b
  5328  00152A  2BFA               	incf	(CRCcheck@rt+1)& (0+255),f,b
  5329  00152C  D7B7               	goto	l6462
  5330  00152E                     l6484:
  5331                           
  5332                           ; BSR set to: 0
  5333                           ;FastTransfer.c: 403: crcErrorCounter++;
  5334  00152E  0100               	movlb	0	; () banked
  5335  001530  4BC9               	infsnz	_crcErrorCounter& (0+255),f,b
  5336  001532  2BCA               	incf	(_crcErrorCounter+1)& (0+255),f,b
  5337  001534  0012               	return	
  5338  001536                     l1127:
  5339  001536  0012               	return		;funcret
  5340  001538                     __end_of_CRCcheck:
  5341                           	opt stack 0
  5342                           tosu	equ	0xFFF
  5343                           tosh	equ	0xFFE
  5344                           tosl	equ	0xFFD
  5345                           pclath	equ	0xFFA
  5346                           tblptru	equ	0xFF8
  5347                           tblptrh	equ	0xFF7
  5348                           tblptrl	equ	0xFF6
  5349                           tablat	equ	0xFF5
  5350                           prodh	equ	0xFF4
  5351                           prodl	equ	0xFF3
  5352                           intcon	equ	0xFF2
  5353                           postinc0	equ	0xFEE
  5354                           wreg	equ	0xFE8
  5355                           indf2	equ	0xFDF
  5356                           postinc2	equ	0xFDE
  5357                           postdec2	equ	0xFDD
  5358                           plusw2	equ	0xFDB
  5359                           fsr2h	equ	0xFDA
  5360                           fsr2l	equ	0xFD9
  5361                           status	equ	0xFD8
  5362                           
  5363 ;; *************** function _crcBufS_status_put *****************
  5364 ;; Defined at:
  5365 ;;		line 337 in file "FastTransfer.c"
  5366 ;; Parameters:    Size  Location     Type
  5367 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  5368 ;;		 -> crc_buffer(17), 
  5369 ;;  time            1   28[COMRAM] unsigned char 
  5370 ;;  status          1   29[COMRAM] unsigned char 
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;  wantedTime      2   34[COMRAM] int 
  5373 ;; Return value:  Size  Location     Type
  5374 ;;                  1    wreg      void 
  5375 ;; Registers used:
  5376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5377 ;; Tracked objects:
  5378 ;;		On entry : 0/0
  5379 ;;		On exit  : 0/0
  5380 ;;		Unchanged: 0/0
  5381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5382 ;;      Params:         4       0       0       0       0       0       0
  5383 ;;      Locals:         2       0       0       0       0       0       0
  5384 ;;      Temps:          4       0       0       0       0       0       0
  5385 ;;      Totals:        10       0       0       0       0       0       0
  5386 ;;Total ram usage:       10 bytes
  5387 ;; Hardware stack levels used:    1
  5388 ;; Hardware stack levels required when called:    4
  5389 ;; This function calls:
  5390 ;;		Nothing
  5391 ;; This function is called by:
  5392 ;;		_CRCcheck
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396                           	psect	text18
  5397  001FFA                     __ptext18:
  5398                           	opt stack 0
  5399  001FFA                     _crcBufS_status_put:
  5400                           	opt stack 23
  5401                           
  5402                           ;FastTransfer.c: 338: if (time >= 5) {
  5403                           
  5404                           ;incstack = 0
  5405  001FFA  0E04               	movlw	4
  5406  001FFC  641D               	cpfsgt	crcBufS_status_put@time,c
  5407  001FFE  D002               	goto	l6218
  5408                           
  5409                           ;FastTransfer.c: 339: time = 5 - 1;
  5410  002000  0E04               	movlw	4
  5411  002002  6E1D               	movwf	crcBufS_status_put@time,c
  5412  002004                     l6218:
  5413                           
  5414                           ;FastTransfer.c: 340: }
  5415                           ;FastTransfer.c: 341: time = time + 1;
  5416  002004  281D               	incf	crcBufS_status_put@time,w,c
  5417  002006  6E1D               	movwf	crcBufS_status_put@time,c
  5418                           
  5419                           ;FastTransfer.c: 342: int wantedTime = time * 3;
  5420  002008  501D               	movf	crcBufS_status_put@time,w,c
  5421  00200A  0D03               	mullw	3
  5422  00200C  CFF3 F023          	movff	prodl,crcBufS_status_put@wantedTime
  5423  002010  CFF4 F024          	movff	prodh,crcBufS_status_put@wantedTime+1
  5424                           
  5425                           ;FastTransfer.c: 343: if (wantedTime > _this->head) {
  5426  002014  EE20 F00F          	lfsr	2,15
  5427  002018  501B               	movf	crcBufS_status_put@_this,w,c
  5428  00201A  26D9               	addwf	fsr2l,f,c
  5429  00201C  501C               	movf	crcBufS_status_put@_this+1,w,c
  5430  00201E  22DA               	addwfc	fsr2h,f,c
  5431  002020  5023               	movf	crcBufS_status_put@wantedTime,w,c
  5432  002022  5CDE               	subwf	postinc2,w,c
  5433  002024  50DE               	movf	postinc2,w,c
  5434  002026  0A80               	xorlw	128
  5435  002028  6E21               	movwf	(??_crcBufS_status_put+2)& (0+255),c
  5436  00202A  5024               	movf	crcBufS_status_put@wantedTime+1,w,c
  5437  00202C  0A80               	xorlw	128
  5438  00202E  5821               	subwfb	(??_crcBufS_status_put+2)& (0+255),w,c
  5439  002030  B0D8               	btfsc	status,0,c
  5440  002032  D02B               	goto	l6226
  5441                           
  5442                           ;FastTransfer.c: 344: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  5443  002034  EE20 F00F          	lfsr	2,15
  5444  002038  501B               	movf	crcBufS_status_put@_this,w,c
  5445  00203A  26D9               	addwf	fsr2l,f,c
  5446  00203C  501C               	movf	crcBufS_status_put@_this+1,w,c
  5447  00203E  22DA               	addwfc	fsr2h,f,c
  5448  002040  CFDE F01F          	movff	postinc2,??_crcBufS_status_put
  5449  002044  CFDD F020          	movff	postdec2,??_crcBufS_status_put+1
  5450  002048  1E1F               	comf	??_crcBufS_status_put,f,c
  5451  00204A  1E20               	comf	??_crcBufS_status_put+1,f,c
  5452  00204C  4A1F               	infsnz	??_crcBufS_status_put,f,c
  5453  00204E  2A20               	incf	??_crcBufS_status_put+1,f,c
  5454  002050  5023               	movf	crcBufS_status_put@wantedTime,w,c
  5455  002052  261F               	addwf	??_crcBufS_status_put,f,c
  5456  002054  5024               	movf	crcBufS_status_put@wantedTime+1,w,c
  5457  002056  2220               	addwfc	??_crcBufS_status_put+1,f,c
  5458  002058  1E1F               	comf	??_crcBufS_status_put,f,c
  5459  00205A  1E20               	comf	??_crcBufS_status_put+1,f,c
  5460  00205C  4A1F               	infsnz	??_crcBufS_status_put,f,c
  5461  00205E  2A20               	incf	??_crcBufS_status_put+1,f,c
  5462  002060  0E0F               	movlw	15
  5463  002062  241F               	addwf	??_crcBufS_status_put,w,c
  5464  002064  6E23               	movwf	crcBufS_status_put@wantedTime,c
  5465  002066  0E00               	movlw	0
  5466  002068  2020               	addwfc	??_crcBufS_status_put+1,w,c
  5467  00206A  6E24               	movwf	crcBufS_status_put@wantedTime+1,c
  5468                           
  5469                           ;FastTransfer.c: 345: _this->buf[(wantedTime + 2)] = status;
  5470  00206C  0E02               	movlw	2
  5471  00206E  2423               	addwf	crcBufS_status_put@wantedTime,w,c
  5472  002070  6E1F               	movwf	??_crcBufS_status_put& (0+255),c
  5473  002072  0E00               	movlw	0
  5474  002074  2024               	addwfc	crcBufS_status_put@wantedTime+1,w,c
  5475  002076  6E20               	movwf	(??_crcBufS_status_put+1)& (0+255),c
  5476  002078  501F               	movf	??_crcBufS_status_put,w,c
  5477  00207A  241B               	addwf	crcBufS_status_put@_this,w,c
  5478  00207C  6ED9               	movwf	fsr2l,c
  5479  00207E  5020               	movf	??_crcBufS_status_put+1,w,c
  5480  002080  201C               	addwfc	crcBufS_status_put@_this+1,w,c
  5481  002082  6EDA               	movwf	fsr2h,c
  5482  002084  C01E  FFDF         	movff	crcBufS_status_put@status,indf2
  5483                           
  5484                           ;FastTransfer.c: 346: } else {
  5485  002088  0012               	return	
  5486  00208A                     l6226:
  5487                           
  5488                           ;FastTransfer.c: 347: _this->buf[(_this->head - wantedTime) + 2] = status;
  5489  00208A  EE20 F00F          	lfsr	2,15
  5490  00208E  501B               	movf	crcBufS_status_put@_this,w,c
  5491  002090  26D9               	addwf	fsr2l,f,c
  5492  002092  501C               	movf	crcBufS_status_put@_this+1,w,c
  5493  002094  22DA               	addwfc	fsr2h,f,c
  5494  002096  CFDE F01F          	movff	postinc2,??_crcBufS_status_put
  5495  00209A  CFDD F020          	movff	postdec2,??_crcBufS_status_put+1
  5496  00209E  C023  F021         	movff	crcBufS_status_put@wantedTime,??_crcBufS_status_put+2
  5497  0020A2  C024  F022         	movff	crcBufS_status_put@wantedTime+1,??_crcBufS_status_put+3
  5498  0020A6  1E21               	comf	??_crcBufS_status_put+2,f,c
  5499  0020A8  1E22               	comf	??_crcBufS_status_put+3,f,c
  5500  0020AA  4A21               	infsnz	??_crcBufS_status_put+2,f,c
  5501  0020AC  2A22               	incf	??_crcBufS_status_put+3,f,c
  5502  0020AE  501F               	movf	??_crcBufS_status_put,w,c
  5503  0020B0  2621               	addwf	??_crcBufS_status_put+2,f,c
  5504  0020B2  5020               	movf	??_crcBufS_status_put+1,w,c
  5505  0020B4  2222               	addwfc	??_crcBufS_status_put+3,f,c
  5506  0020B6  0E02               	movlw	2
  5507  0020B8  2621               	addwf	??_crcBufS_status_put+2,f,c
  5508  0020BA  0E00               	movlw	0
  5509  0020BC  2222               	addwfc	??_crcBufS_status_put+3,f,c
  5510  0020BE  5021               	movf	??_crcBufS_status_put+2,w,c
  5511  0020C0  241B               	addwf	crcBufS_status_put@_this,w,c
  5512  0020C2  6ED9               	movwf	fsr2l,c
  5513  0020C4  5022               	movf	??_crcBufS_status_put+3,w,c
  5514  0020C6  201C               	addwfc	crcBufS_status_put@_this+1,w,c
  5515  0020C8  6EDA               	movwf	fsr2h,c
  5516  0020CA  C01E  FFDF         	movff	crcBufS_status_put@status,indf2
  5517  0020CE  0012               	return	
  5518  0020D0                     __end_of_crcBufS_status_put:
  5519                           	opt stack 0
  5520                           tosu	equ	0xFFF
  5521                           tosh	equ	0xFFE
  5522                           tosl	equ	0xFFD
  5523                           pclath	equ	0xFFA
  5524                           tblptru	equ	0xFF8
  5525                           tblptrh	equ	0xFF7
  5526                           tblptrl	equ	0xFF6
  5527                           tablat	equ	0xFF5
  5528                           prodh	equ	0xFF4
  5529                           prodl	equ	0xFF3
  5530                           intcon	equ	0xFF2
  5531                           postinc0	equ	0xFEE
  5532                           wreg	equ	0xFE8
  5533                           indf2	equ	0xFDF
  5534                           postinc2	equ	0xFDE
  5535                           postdec2	equ	0xFDD
  5536                           plusw2	equ	0xFDB
  5537                           fsr2h	equ	0xFDA
  5538                           fsr2l	equ	0xFD9
  5539                           status	equ	0xFD8
  5540                           
  5541 ;; *************** function _crcBufS_get *****************
  5542 ;; Defined at:
  5543 ;;		line 354 in file "FastTransfer.c"
  5544 ;; Parameters:    Size  Location     Type
  5545 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  5546 ;;		 -> crc_buffer(17), 
  5547 ;;  time            1   28[COMRAM] unsigned char 
  5548 ;;  space           1   29[COMRAM] unsigned char 
  5549 ;; Auto vars:     Size  Location     Type
  5550 ;;  wantedTime      2   36[COMRAM] int 
  5551 ;; Return value:  Size  Location     Type
  5552 ;;                  1    wreg      unsigned char 
  5553 ;; Registers used:
  5554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5555 ;; Tracked objects:
  5556 ;;		On entry : 0/0
  5557 ;;		On exit  : 0/0
  5558 ;;		Unchanged: 0/0
  5559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5560 ;;      Params:         4       0       0       0       0       0       0
  5561 ;;      Locals:         2       0       0       0       0       0       0
  5562 ;;      Temps:          6       0       0       0       0       0       0
  5563 ;;      Totals:        12       0       0       0       0       0       0
  5564 ;;Total ram usage:       12 bytes
  5565 ;; Hardware stack levels used:    1
  5566 ;; Hardware stack levels required when called:    4
  5567 ;; This function calls:
  5568 ;;		Nothing
  5569 ;; This function is called by:
  5570 ;;		_CRCcheck
  5571 ;;		_AKNAK
  5572 ;; This function uses a non-reentrant model
  5573 ;;
  5574                           
  5575                           	psect	text19
  5576  001E40                     __ptext19:
  5577                           	opt stack 0
  5578  001E40                     _crcBufS_get:
  5579                           	opt stack 23
  5580                           
  5581                           ;FastTransfer.c: 355: if (time >= 5) {
  5582                           
  5583                           ;incstack = 0
  5584  001E40  0E04               	movlw	4
  5585  001E42  641D               	cpfsgt	crcBufS_get@time,c
  5586  001E44  D002               	goto	l6194
  5587                           
  5588                           ;FastTransfer.c: 356: time = 5 - 1;
  5589  001E46  0E04               	movlw	4
  5590  001E48  6E1D               	movwf	crcBufS_get@time,c
  5591  001E4A                     l6194:
  5592                           
  5593                           ;FastTransfer.c: 357: }
  5594                           ;FastTransfer.c: 358: if (space >= 3) {
  5595  001E4A  0E02               	movlw	2
  5596  001E4C  641E               	cpfsgt	crcBufS_get@space,c
  5597  001E4E  D002               	goto	l6198
  5598                           
  5599                           ;FastTransfer.c: 359: space = 3 - 1;
  5600  001E50  0E02               	movlw	2
  5601  001E52  6E1E               	movwf	crcBufS_get@space,c
  5602  001E54                     l6198:
  5603                           
  5604                           ;FastTransfer.c: 360: }
  5605                           ;FastTransfer.c: 361: time = time + 1;
  5606  001E54  281D               	incf	crcBufS_get@time,w,c
  5607  001E56  6E1D               	movwf	crcBufS_get@time,c
  5608                           
  5609                           ;FastTransfer.c: 362: int wantedTime = time * 3;
  5610  001E58  501D               	movf	crcBufS_get@time,w,c
  5611  001E5A  0D03               	mullw	3
  5612  001E5C  CFF3 F025          	movff	prodl,crcBufS_get@wantedTime
  5613  001E60  CFF4 F026          	movff	prodh,crcBufS_get@wantedTime+1
  5614                           
  5615                           ;FastTransfer.c: 363: if (wantedTime > _this->head) {
  5616  001E64  EE20 F00F          	lfsr	2,15
  5617  001E68  501B               	movf	crcBufS_get@_this,w,c
  5618  001E6A  26D9               	addwf	fsr2l,f,c
  5619  001E6C  501C               	movf	crcBufS_get@_this+1,w,c
  5620  001E6E  22DA               	addwfc	fsr2h,f,c
  5621  001E70  5025               	movf	crcBufS_get@wantedTime,w,c
  5622  001E72  5CDE               	subwf	postinc2,w,c
  5623  001E74  50DE               	movf	postinc2,w,c
  5624  001E76  0A80               	xorlw	128
  5625  001E78  6E21               	movwf	(??_crcBufS_get+2)& (0+255),c
  5626  001E7A  5026               	movf	crcBufS_get@wantedTime+1,w,c
  5627  001E7C  0A80               	xorlw	128
  5628  001E7E  5821               	subwfb	(??_crcBufS_get+2)& (0+255),w,c
  5629  001E80  B0D8               	btfsc	status,0,c
  5630  001E82  D02A               	goto	l6210
  5631                           
  5632                           ;FastTransfer.c: 364: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  5633  001E84  EE20 F00F          	lfsr	2,15
  5634  001E88  501B               	movf	crcBufS_get@_this,w,c
  5635  001E8A  26D9               	addwf	fsr2l,f,c
  5636  001E8C  501C               	movf	crcBufS_get@_this+1,w,c
  5637  001E8E  22DA               	addwfc	fsr2h,f,c
  5638  001E90  CFDE F01F          	movff	postinc2,??_crcBufS_get
  5639  001E94  CFDD F020          	movff	postdec2,??_crcBufS_get+1
  5640  001E98  1E1F               	comf	??_crcBufS_get,f,c
  5641  001E9A  1E20               	comf	??_crcBufS_get+1,f,c
  5642  001E9C  4A1F               	infsnz	??_crcBufS_get,f,c
  5643  001E9E  2A20               	incf	??_crcBufS_get+1,f,c
  5644  001EA0  5025               	movf	crcBufS_get@wantedTime,w,c
  5645  001EA2  261F               	addwf	??_crcBufS_get,f,c
  5646  001EA4  5026               	movf	crcBufS_get@wantedTime+1,w,c
  5647  001EA6  2220               	addwfc	??_crcBufS_get+1,f,c
  5648  001EA8  1E1F               	comf	??_crcBufS_get,f,c
  5649  001EAA  1E20               	comf	??_crcBufS_get+1,f,c
  5650  001EAC  4A1F               	infsnz	??_crcBufS_get,f,c
  5651  001EAE  2A20               	incf	??_crcBufS_get+1,f,c
  5652  001EB0  0E0F               	movlw	15
  5653  001EB2  241F               	addwf	??_crcBufS_get,w,c
  5654  001EB4  6E25               	movwf	crcBufS_get@wantedTime,c
  5655  001EB6  0E00               	movlw	0
  5656  001EB8  2020               	addwfc	??_crcBufS_get+1,w,c
  5657  001EBA  6E26               	movwf	crcBufS_get@wantedTime+1,c
  5658                           
  5659                           ;FastTransfer.c: 365: return (_this->buf[(wantedTime + space)]);
  5660  001EBC  501E               	movf	crcBufS_get@space,w,c
  5661  001EBE  2425               	addwf	crcBufS_get@wantedTime,w,c
  5662  001EC0  6E1F               	movwf	??_crcBufS_get& (0+255),c
  5663  001EC2  0E00               	movlw	0
  5664  001EC4  2026               	addwfc	crcBufS_get@wantedTime+1,w,c
  5665  001EC6  6E20               	movwf	(??_crcBufS_get+1)& (0+255),c
  5666  001EC8  501F               	movf	??_crcBufS_get,w,c
  5667  001ECA  241B               	addwf	crcBufS_get@_this,w,c
  5668  001ECC  6ED9               	movwf	fsr2l,c
  5669  001ECE  5020               	movf	??_crcBufS_get+1,w,c
  5670  001ED0  201C               	addwfc	crcBufS_get@_this+1,w,c
  5671  001ED2  6EDA               	movwf	fsr2h,c
  5672  001ED4  50DF               	movf	indf2,w,c
  5673                           
  5674                           ;FastTransfer.c: 366: } else {
  5675  001ED6  0012               	return	
  5676  001ED8                     l6210:
  5677                           
  5678                           ;FastTransfer.c: 367: return (_this->buf[(_this->head - wantedTime) + space]);
  5679  001ED8  EE20 F00F          	lfsr	2,15
  5680  001EDC  501B               	movf	crcBufS_get@_this,w,c
  5681  001EDE  26D9               	addwf	fsr2l,f,c
  5682  001EE0  501C               	movf	crcBufS_get@_this+1,w,c
  5683  001EE2  22DA               	addwfc	fsr2h,f,c
  5684  001EE4  CFDE F01F          	movff	postinc2,??_crcBufS_get
  5685  001EE8  CFDD F020          	movff	postdec2,??_crcBufS_get+1
  5686  001EEC  C025  F021         	movff	crcBufS_get@wantedTime,??_crcBufS_get+2
  5687  001EF0  C026  F022         	movff	crcBufS_get@wantedTime+1,??_crcBufS_get+3
  5688  001EF4  1E21               	comf	??_crcBufS_get+2,f,c
  5689  001EF6  1E22               	comf	??_crcBufS_get+3,f,c
  5690  001EF8  4A21               	infsnz	??_crcBufS_get+2,f,c
  5691  001EFA  2A22               	incf	??_crcBufS_get+3,f,c
  5692  001EFC  501E               	movf	crcBufS_get@space,w,c
  5693  001EFE  6E23               	movwf	(??_crcBufS_get+4)& (0+255),c
  5694  001F00  6A24               	clrf	(??_crcBufS_get+5)& (0+255),c
  5695  001F02  5021               	movf	??_crcBufS_get+2,w,c
  5696  001F04  2623               	addwf	??_crcBufS_get+4,f,c
  5697  001F06  5022               	movf	??_crcBufS_get+3,w,c
  5698  001F08  2224               	addwfc	??_crcBufS_get+5,f,c
  5699  001F0A  501F               	movf	??_crcBufS_get,w,c
  5700  001F0C  2623               	addwf	??_crcBufS_get+4,f,c
  5701  001F0E  5020               	movf	??_crcBufS_get+1,w,c
  5702  001F10  2224               	addwfc	??_crcBufS_get+5,f,c
  5703  001F12  5023               	movf	??_crcBufS_get+4,w,c
  5704  001F14  241B               	addwf	crcBufS_get@_this,w,c
  5705  001F16  6ED9               	movwf	fsr2l,c
  5706  001F18  5024               	movf	??_crcBufS_get+5,w,c
  5707  001F1A  201C               	addwfc	crcBufS_get@_this+1,w,c
  5708  001F1C  6EDA               	movwf	fsr2h,c
  5709  001F1E  50DF               	movf	indf2,w,c
  5710  001F20  0012               	return	
  5711  001F22                     __end_of_crcBufS_get:
  5712                           	opt stack 0
  5713                           tosu	equ	0xFFF
  5714                           tosh	equ	0xFFE
  5715                           tosl	equ	0xFFD
  5716                           pclath	equ	0xFFA
  5717                           tblptru	equ	0xFF8
  5718                           tblptrh	equ	0xFF7
  5719                           tblptrl	equ	0xFF6
  5720                           tablat	equ	0xFF5
  5721                           prodh	equ	0xFF4
  5722                           prodl	equ	0xFF3
  5723                           intcon	equ	0xFF2
  5724                           postinc0	equ	0xFEE
  5725                           wreg	equ	0xFE8
  5726                           indf2	equ	0xFDF
  5727                           postinc2	equ	0xFDE
  5728                           postdec2	equ	0xFDD
  5729                           plusw2	equ	0xFDB
  5730                           fsr2h	equ	0xFDA
  5731                           fsr2l	equ	0xFD9
  5732                           status	equ	0xFD8
  5733                           
  5734 ;; *************** function _Receive_get *****************
  5735 ;; Defined at:
  5736 ;;		line 126 in file "UART.c"
  5737 ;; Parameters:    Size  Location     Type
  5738 ;;		None
  5739 ;; Auto vars:     Size  Location     Type
  5740 ;;		None
  5741 ;; Return value:  Size  Location     Type
  5742 ;;                  1    wreg      unsigned char 
  5743 ;; Registers used:
  5744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5745 ;; Tracked objects:
  5746 ;;		On entry : 0/0
  5747 ;;		On exit  : 0/0
  5748 ;;		Unchanged: 0/0
  5749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5750 ;;      Params:         0       0       0       0       0       0       0
  5751 ;;      Locals:         0       0       0       0       0       0       0
  5752 ;;      Temps:          0       0       0       0       0       0       0
  5753 ;;      Totals:         0       0       0       0       0       0       0
  5754 ;;Total ram usage:        0 bytes
  5755 ;; Hardware stack levels used:    1
  5756 ;; Hardware stack levels required when called:    6
  5757 ;; This function calls:
  5758 ;;		_UART_buff_get
  5759 ;; This function is called by:
  5760 ;;		_SYSTEM_Initialize
  5761 ;;		_getch
  5762 ;;		_CRCcheck
  5763 ;;		_receiveData
  5764 ;; This function uses a non-reentrant model
  5765 ;;
  5766                           
  5767                           	psect	text20
  5768  00301E                     __ptext20:
  5769                           	opt stack 0
  5770  00301E                     _Receive_get:
  5771                           	opt stack 22
  5772                           
  5773                           ;UART.c: 127: return UART_buff_get(&input_buffer);
  5774                           
  5775                           ;incstack = 0
  5776  00301E  0E00               	movlw	low _input_buffer
  5777  003020  6E21               	movwf	UART_buff_get@_this,c
  5778  003022  0E04               	movlw	high _input_buffer
  5779  003024  6E22               	movwf	UART_buff_get@_this+1,c
  5780  003026  EC18  F013         	call	_UART_buff_get	;wreg free
  5781  00302A  0012               	return	
  5782  00302C                     __end_of_Receive_get:
  5783                           	opt stack 0
  5784                           tosu	equ	0xFFF
  5785                           tosh	equ	0xFFE
  5786                           tosl	equ	0xFFD
  5787                           pclath	equ	0xFFA
  5788                           tblptru	equ	0xFF8
  5789                           tblptrh	equ	0xFF7
  5790                           tblptrl	equ	0xFF6
  5791                           tablat	equ	0xFF5
  5792                           prodh	equ	0xFF4
  5793                           prodl	equ	0xFF3
  5794                           intcon	equ	0xFF2
  5795                           postinc0	equ	0xFEE
  5796                           wreg	equ	0xFE8
  5797                           indf2	equ	0xFDF
  5798                           postinc2	equ	0xFDE
  5799                           postdec2	equ	0xFDD
  5800                           plusw2	equ	0xFDB
  5801                           fsr2h	equ	0xFDA
  5802                           fsr2l	equ	0xFD9
  5803                           status	equ	0xFD8
  5804                           
  5805 ;; *************** function _UART_buff_get *****************
  5806 ;; Defined at:
  5807 ;;		line 81 in file "UART.c"
  5808 ;; Parameters:    Size  Location     Type
  5809 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  5810 ;;		 -> output_buffer(206), input_buffer(206), 
  5811 ;; Auto vars:     Size  Location     Type
  5812 ;;  c               1   36[COMRAM] unsigned char 
  5813 ;; Return value:  Size  Location     Type
  5814 ;;                  1    wreg      unsigned char 
  5815 ;; Registers used:
  5816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5817 ;; Tracked objects:
  5818 ;;		On entry : 0/0
  5819 ;;		On exit  : 0/0
  5820 ;;		Unchanged: 0/0
  5821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5822 ;;      Params:         2       0       0       0       0       0       0
  5823 ;;      Locals:         1       0       0       0       0       0       0
  5824 ;;      Temps:          2       0       0       0       0       0       0
  5825 ;;      Totals:         5       0       0       0       0       0       0
  5826 ;;Total ram usage:        5 bytes
  5827 ;; Hardware stack levels used:    1
  5828 ;; Hardware stack levels required when called:    5
  5829 ;; This function calls:
  5830 ;;		_UART_buff_modulo_inc
  5831 ;; This function is called by:
  5832 ;;		_Receive_get
  5833 ;;		_Send_put
  5834 ;; This function uses a non-reentrant model
  5835 ;;
  5836                           
  5837                           	psect	text21
  5838  002630                     __ptext21:
  5839                           	opt stack 0
  5840  002630                     _UART_buff_get:
  5841                           	opt stack 21
  5842                           
  5843                           ;UART.c: 82: unsigned char c;
  5844                           ;UART.c: 83: if (_this->count > 0) {
  5845                           
  5846                           ;incstack = 0
  5847  002630  EE20 F0CC          	lfsr	2,204
  5848  002634  5021               	movf	UART_buff_get@_this,w,c
  5849  002636  26D9               	addwf	fsr2l,f,c
  5850  002638  5022               	movf	UART_buff_get@_this+1,w,c
  5851  00263A  22DA               	addwfc	fsr2h,f,c
  5852  00263C  0E01               	movlw	1
  5853  00263E  BEDB               	btfsc	plusw2,7,c
  5854  002640  D03C               	goto	l6036
  5855  002642  0E01               	movlw	1
  5856  002644  50DB               	movf	plusw2,w,c
  5857  002646  E103               	bnz	u6310
  5858  002648  04DE               	decf	postinc2,w,c
  5859  00264A  A0D8               	btfss	status,0,c
  5860  00264C  D036               	goto	l6036
  5861  00264E                     u6310:
  5862                           
  5863                           ;UART.c: 84: c = _this->buf[_this->tail];
  5864  00264E  EE20 F0CA          	lfsr	2,202
  5865  002652  5021               	movf	UART_buff_get@_this,w,c
  5866  002654  26D9               	addwf	fsr2l,f,c
  5867  002656  5022               	movf	UART_buff_get@_this+1,w,c
  5868  002658  22DA               	addwfc	fsr2h,f,c
  5869  00265A  CFDE F023          	movff	postinc2,??_UART_buff_get
  5870  00265E  CFDD F024          	movff	postdec2,??_UART_buff_get+1
  5871  002662  5023               	movf	??_UART_buff_get,w,c
  5872  002664  2421               	addwf	UART_buff_get@_this,w,c
  5873  002666  6ED9               	movwf	fsr2l,c
  5874  002668  5024               	movf	??_UART_buff_get+1,w,c
  5875  00266A  2022               	addwfc	UART_buff_get@_this+1,w,c
  5876  00266C  6EDA               	movwf	fsr2h,c
  5877  00266E  50DF               	movf	indf2,w,c
  5878  002670  6E25               	movwf	UART_buff_get@c,c
  5879                           
  5880                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  5881  002672  EE20 F0CA          	lfsr	2,202
  5882  002676  5021               	movf	UART_buff_get@_this,w,c
  5883  002678  26D9               	addwf	fsr2l,f,c
  5884  00267A  5022               	movf	UART_buff_get@_this+1,w,c
  5885  00267C  22DA               	addwfc	fsr2h,f,c
  5886  00267E  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  5887  002682  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  5888  002686  0E00               	movlw	0
  5889  002688  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  5890  00268A  0EC8               	movlw	200
  5891  00268C  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  5892  00268E  EC0D  F017         	call	_UART_buff_modulo_inc	;wreg free
  5893  002692  EE20 F0CA          	lfsr	2,202
  5894  002696  5021               	movf	UART_buff_get@_this,w,c
  5895  002698  26D9               	addwf	fsr2l,f,c
  5896  00269A  5022               	movf	UART_buff_get@_this+1,w,c
  5897  00269C  22DA               	addwfc	fsr2h,f,c
  5898  00269E  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  5899  0026A2  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  5900                           
  5901                           ;UART.c: 86: --_this->count;
  5902  0026A6  EE20 F0CC          	lfsr	2,204
  5903  0026AA  5021               	movf	UART_buff_get@_this,w,c
  5904  0026AC  26D9               	addwf	fsr2l,f,c
  5905  0026AE  5022               	movf	UART_buff_get@_this+1,w,c
  5906  0026B0  22DA               	addwfc	fsr2h,f,c
  5907  0026B2  06DE               	decf	postinc2,f,c
  5908  0026B4  0E00               	movlw	0
  5909  0026B6  5ADD               	subwfb	postdec2,f,c
  5910                           
  5911                           ;UART.c: 87: } else {
  5912  0026B8  D002               	goto	l1172
  5913  0026BA                     l6036:
  5914                           
  5915                           ;UART.c: 88: c = 0;
  5916  0026BA  0E00               	movlw	0
  5917  0026BC  6E25               	movwf	UART_buff_get@c,c
  5918  0026BE                     l1172:
  5919                           
  5920                           ;UART.c: 89: }
  5921                           ;UART.c: 90: return (c);
  5922  0026BE  5025               	movf	UART_buff_get@c,w,c
  5923  0026C0  0012               	return	
  5924  0026C2                     __end_of_UART_buff_get:
  5925                           	opt stack 0
  5926                           tosu	equ	0xFFF
  5927                           tosh	equ	0xFFE
  5928                           tosl	equ	0xFFD
  5929                           pclath	equ	0xFFA
  5930                           tblptru	equ	0xFF8
  5931                           tblptrh	equ	0xFF7
  5932                           tblptrl	equ	0xFF6
  5933                           tablat	equ	0xFF5
  5934                           prodh	equ	0xFF4
  5935                           prodl	equ	0xFF3
  5936                           intcon	equ	0xFF2
  5937                           postinc0	equ	0xFEE
  5938                           wreg	equ	0xFE8
  5939                           indf2	equ	0xFDF
  5940                           postinc2	equ	0xFDE
  5941                           postdec2	equ	0xFDD
  5942                           plusw2	equ	0xFDB
  5943                           fsr2h	equ	0xFDA
  5944                           fsr2l	equ	0xFD9
  5945                           status	equ	0xFD8
  5946                           
  5947 ;; *************** function _UART_buff_modulo_inc *****************
  5948 ;; Defined at:
  5949 ;;		line 106 in file "UART.c"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;  value           2   26[COMRAM] const unsigned int 
  5952 ;;  modulus         2   28[COMRAM] const unsigned int 
  5953 ;; Auto vars:     Size  Location     Type
  5954 ;;  my_value        2   30[COMRAM] unsigned int 
  5955 ;; Return value:  Size  Location     Type
  5956 ;;                  2   26[COMRAM] unsigned int 
  5957 ;; Registers used:
  5958 ;;		wreg, status,2, status,0
  5959 ;; Tracked objects:
  5960 ;;		On entry : 0/0
  5961 ;;		On exit  : 0/0
  5962 ;;		Unchanged: 0/0
  5963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5964 ;;      Params:         4       0       0       0       0       0       0
  5965 ;;      Locals:         2       0       0       0       0       0       0
  5966 ;;      Temps:          0       0       0       0       0       0       0
  5967 ;;      Totals:         6       0       0       0       0       0       0
  5968 ;;Total ram usage:        6 bytes
  5969 ;; Hardware stack levels used:    1
  5970 ;; Hardware stack levels required when called:    4
  5971 ;; This function calls:
  5972 ;;		Nothing
  5973 ;; This function is called by:
  5974 ;;		_UART_buff_put
  5975 ;;		_UART_buff_get
  5976 ;; This function uses a non-reentrant model
  5977 ;;
  5978                           
  5979                           	psect	text22
  5980  002E1A                     __ptext22:
  5981                           	opt stack 0
  5982  002E1A                     _UART_buff_modulo_inc:
  5983                           	opt stack 21
  5984                           
  5985                           ;UART.c: 107: unsigned int my_value = value + 1;
  5986                           
  5987                           ;incstack = 0
  5988  002E1A  0E01               	movlw	1
  5989  002E1C  241B               	addwf	UART_buff_modulo_inc@value,w,c
  5990  002E1E  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  5991  002E20  0E00               	movlw	0
  5992  002E22  201C               	addwfc	UART_buff_modulo_inc@value+1,w,c
  5993  002E24  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  5994                           
  5995                           ;UART.c: 108: if (my_value >= modulus) {
  5996  002E26  501D               	movf	UART_buff_modulo_inc@modulus,w,c
  5997  002E28  5C1F               	subwf	UART_buff_modulo_inc@my_value,w,c
  5998  002E2A  501E               	movf	UART_buff_modulo_inc@modulus+1,w,c
  5999  002E2C  5820               	subwfb	UART_buff_modulo_inc@my_value+1,w,c
  6000  002E2E  A0D8               	btfss	status,0,c
  6001  002E30  D004               	goto	l5994
  6002                           
  6003                           ;UART.c: 109: my_value = 0;
  6004  002E32  0E00               	movlw	0
  6005  002E34  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  6006  002E36  0E00               	movlw	0
  6007  002E38  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  6008  002E3A                     l5994:
  6009                           
  6010                           ;UART.c: 110: }
  6011                           ;UART.c: 111: return (my_value);
  6012  002E3A  C01F  F01B         	movff	UART_buff_modulo_inc@my_value,?_UART_buff_modulo_inc
  6013  002E3E  C020  F01C         	movff	UART_buff_modulo_inc@my_value+1,?_UART_buff_modulo_inc+1
  6014  002E42  0012               	return	
  6015  002E44                     __end_of_UART_buff_modulo_inc:
  6016                           	opt stack 0
  6017                           tosu	equ	0xFFF
  6018                           tosh	equ	0xFFE
  6019                           tosl	equ	0xFFD
  6020                           pclath	equ	0xFFA
  6021                           tblptru	equ	0xFF8
  6022                           tblptrh	equ	0xFF7
  6023                           tblptrl	equ	0xFF6
  6024                           tablat	equ	0xFF5
  6025                           prodh	equ	0xFF4
  6026                           prodl	equ	0xFF3
  6027                           intcon	equ	0xFF2
  6028                           postinc0	equ	0xFEE
  6029                           wreg	equ	0xFE8
  6030                           indf2	equ	0xFDF
  6031                           postinc2	equ	0xFDE
  6032                           postdec2	equ	0xFDD
  6033                           plusw2	equ	0xFDB
  6034                           fsr2h	equ	0xFDA
  6035                           fsr2l	equ	0xFD9
  6036                           status	equ	0xFD8
  6037                           
  6038 ;; *************** function _Receive_available *****************
  6039 ;; Defined at:
  6040 ;;		line 122 in file "UART.c"
  6041 ;; Parameters:    Size  Location     Type
  6042 ;;		None
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;		None
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  2   28[COMRAM] int 
  6047 ;; Registers used:
  6048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6049 ;; Tracked objects:
  6050 ;;		On entry : 0/0
  6051 ;;		On exit  : 0/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6054 ;;      Params:         2       0       0       0       0       0       0
  6055 ;;      Locals:         0       0       0       0       0       0       0
  6056 ;;      Temps:          0       0       0       0       0       0       0
  6057 ;;      Totals:         2       0       0       0       0       0       0
  6058 ;;Total ram usage:        2 bytes
  6059 ;; Hardware stack levels used:    1
  6060 ;; Hardware stack levels required when called:    5
  6061 ;; This function calls:
  6062 ;;		_UART_buff_size
  6063 ;; This function is called by:
  6064 ;;		_SYSTEM_Initialize
  6065 ;;		_CRCcheck
  6066 ;;		_receiveData
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070                           	psect	text23
  6071  002FAA                     __ptext23:
  6072                           	opt stack 0
  6073  002FAA                     _Receive_available:
  6074                           	opt stack 23
  6075                           
  6076                           ;UART.c: 123: return UART_buff_size(&input_buffer);
  6077                           
  6078                           ;incstack = 0
  6079  002FAA  0E00               	movlw	low _input_buffer
  6080  002FAC  6E1B               	movwf	UART_buff_size@_this,c
  6081  002FAE  0E04               	movlw	high _input_buffer
  6082  002FB0  6E1C               	movwf	UART_buff_size@_this+1,c
  6083  002FB2  ECE0  F017         	call	_UART_buff_size	;wreg free
  6084  002FB6  C01B  F01D         	movff	?_UART_buff_size,?_Receive_available
  6085  002FBA  C01C  F01E         	movff	?_UART_buff_size+1,?_Receive_available+1
  6086  002FBE  0012               	return	
  6087  002FC0                     __end_of_Receive_available:
  6088                           	opt stack 0
  6089                           tosu	equ	0xFFF
  6090                           tosh	equ	0xFFE
  6091                           tosl	equ	0xFFD
  6092                           pclath	equ	0xFFA
  6093                           tblptru	equ	0xFF8
  6094                           tblptrh	equ	0xFF7
  6095                           tblptrl	equ	0xFF6
  6096                           tablat	equ	0xFF5
  6097                           prodh	equ	0xFF4
  6098                           prodl	equ	0xFF3
  6099                           intcon	equ	0xFF2
  6100                           postinc0	equ	0xFEE
  6101                           wreg	equ	0xFE8
  6102                           indf2	equ	0xFDF
  6103                           postinc2	equ	0xFDE
  6104                           postdec2	equ	0xFDD
  6105                           plusw2	equ	0xFDB
  6106                           fsr2h	equ	0xFDA
  6107                           fsr2l	equ	0xFD9
  6108                           status	equ	0xFD8
  6109                           
  6110 ;; *************** function _UART_buff_size *****************
  6111 ;; Defined at:
  6112 ;;		line 102 in file "UART.c"
  6113 ;; Parameters:    Size  Location     Type
  6114 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  6115 ;;		 -> output_buffer(206), input_buffer(206), 
  6116 ;; Auto vars:     Size  Location     Type
  6117 ;;		None
  6118 ;; Return value:  Size  Location     Type
  6119 ;;                  2   26[COMRAM] int 
  6120 ;; Registers used:
  6121 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6122 ;; Tracked objects:
  6123 ;;		On entry : 0/0
  6124 ;;		On exit  : 0/0
  6125 ;;		Unchanged: 0/0
  6126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6127 ;;      Params:         2       0       0       0       0       0       0
  6128 ;;      Locals:         0       0       0       0       0       0       0
  6129 ;;      Temps:          0       0       0       0       0       0       0
  6130 ;;      Totals:         2       0       0       0       0       0       0
  6131 ;;Total ram usage:        2 bytes
  6132 ;; Hardware stack levels used:    1
  6133 ;; Hardware stack levels required when called:    4
  6134 ;; This function calls:
  6135 ;;		Nothing
  6136 ;; This function is called by:
  6137 ;;		_Receive_available
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140                           
  6141                           	psect	text24
  6142  002FC0                     __ptext24:
  6143                           	opt stack 0
  6144  002FC0                     _UART_buff_size:
  6145                           	opt stack 23
  6146                           
  6147                           ;UART.c: 103: return (_this->count);
  6148                           
  6149                           ;incstack = 0
  6150  002FC0  EE20 F0CC          	lfsr	2,204
  6151  002FC4  501B               	movf	UART_buff_size@_this,w,c
  6152  002FC6  26D9               	addwf	fsr2l,f,c
  6153  002FC8  501C               	movf	UART_buff_size@_this+1,w,c
  6154  002FCA  22DA               	addwfc	fsr2h,f,c
  6155  002FCC  CFDE F01B          	movff	postinc2,?_UART_buff_size
  6156  002FD0  CFDD F01C          	movff	postdec2,?_UART_buff_size+1
  6157  002FD4  0012               	return	
  6158  002FD6                     __end_of_UART_buff_size:
  6159                           	opt stack 0
  6160                           tosu	equ	0xFFF
  6161                           tosh	equ	0xFFE
  6162                           tosl	equ	0xFFD
  6163                           pclath	equ	0xFFA
  6164                           tblptru	equ	0xFF8
  6165                           tblptrh	equ	0xFF7
  6166                           tblptrl	equ	0xFF6
  6167                           tablat	equ	0xFF5
  6168                           prodh	equ	0xFF4
  6169                           prodl	equ	0xFF3
  6170                           intcon	equ	0xFF2
  6171                           postinc0	equ	0xFEE
  6172                           wreg	equ	0xFE8
  6173                           indf2	equ	0xFDF
  6174                           postinc2	equ	0xFDE
  6175                           postdec2	equ	0xFDD
  6176                           plusw2	equ	0xFDB
  6177                           fsr2h	equ	0xFDA
  6178                           fsr2l	equ	0xFD9
  6179                           status	equ	0xFD8
  6180                           
  6181 ;; *************** function _CRC8 *****************
  6182 ;; Defined at:
  6183 ;;		line 34 in file "FastTransfer.c"
  6184 ;; Parameters:    Size  Location     Type
  6185 ;;  data            2   26[COMRAM] PTR const unsigned char 
  6186 ;;		 -> CRCcheck@arrayHolder(3), receiveData@holder_2455(3), receiveData@holder(3), rx_buffer(200), 
  6187 ;;		 -> ring_buffer(206), NULL(0), 
  6188 ;;  len             1   28[COMRAM] unsigned char 
  6189 ;; Auto vars:     Size  Location     Type
  6190 ;;  sum             1   29[COMRAM] unsigned char 
  6191 ;;  tempI           1   31[COMRAM] unsigned char 
  6192 ;;  extract         1   30[COMRAM] unsigned char 
  6193 ;;  crc             1   32[COMRAM] unsigned char 
  6194 ;; Return value:  Size  Location     Type
  6195 ;;                  1    wreg      unsigned char 
  6196 ;; Registers used:
  6197 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6198 ;; Tracked objects:
  6199 ;;		On entry : 0/0
  6200 ;;		On exit  : 0/0
  6201 ;;		Unchanged: 0/0
  6202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6203 ;;      Params:         3       0       0       0       0       0       0
  6204 ;;      Locals:         4       0       0       0       0       0       0
  6205 ;;      Temps:          0       0       0       0       0       0       0
  6206 ;;      Totals:         7       0       0       0       0       0       0
  6207 ;;Total ram usage:        7 bytes
  6208 ;; Hardware stack levels used:    1
  6209 ;; Hardware stack levels required when called:    4
  6210 ;; This function calls:
  6211 ;;		Nothing
  6212 ;; This function is called by:
  6213 ;;		_sendData
  6214 ;;		_receiveData
  6215 ;;		_CRCcheck
  6216 ;; This function uses a non-reentrant model
  6217 ;;
  6218                           
  6219                           	psect	text25
  6220  002B6A                     __ptext25:
  6221                           	opt stack 0
  6222  002B6A                     _CRC8:
  6223                           	opt stack 23
  6224                           
  6225                           ;FastTransfer.c: 35: unsigned char crc = 0x00;
  6226                           
  6227                           ;incstack = 0
  6228  002B6A  0E00               	movlw	0
  6229  002B6C  6E21               	movwf	CRC8@crc,c
  6230                           
  6231                           ;FastTransfer.c: 36: while (len--) {
  6232  002B6E  D01C               	goto	l6156
  6233  002B70                     l6140:
  6234                           
  6235                           ;FastTransfer.c: 37: unsigned char extract = *data++;
  6236  002B70  C01B  FFD9         	movff	CRC8@data,fsr2l
  6237  002B74  C01C  FFDA         	movff	CRC8@data+1,fsr2h
  6238  002B78  50DF               	movf	indf2,w,c
  6239  002B7A  6E1F               	movwf	CRC8@extract,c
  6240  002B7C  4A1B               	infsnz	CRC8@data,f,c
  6241  002B7E  2A1C               	incf	CRC8@data+1,f,c
  6242                           
  6243                           ;FastTransfer.c: 38: unsigned char tempI;
  6244                           ;FastTransfer.c: 39: for (tempI = 8; tempI; tempI--) {
  6245  002B80  0E08               	movlw	8
  6246  002B82  6E20               	movwf	CRC8@tempI,c
  6247  002B84  D00E               	goto	l6154
  6248  002B86                     l6146:
  6249                           
  6250                           ;FastTransfer.c: 40: unsigned char sum = (crc ^ extract) & 0x01;
  6251  002B86  5021               	movf	CRC8@crc,w,c
  6252  002B88  181F               	xorwf	CRC8@extract,w,c
  6253  002B8A  0B01               	andlw	1
  6254  002B8C  6E1E               	movwf	CRC8@sum,c
  6255                           
  6256                           ;FastTransfer.c: 41: crc >>= 1;
  6257  002B8E  90D8               	bcf	status,0,c
  6258  002B90  3221               	rrcf	CRC8@crc,f,c
  6259                           
  6260                           ;FastTransfer.c: 42: if (sum) {
  6261  002B92  501E               	movf	CRC8@sum,w,c
  6262  002B94  B4D8               	btfsc	status,2,c
  6263  002B96  D002               	goto	l1013
  6264                           
  6265                           ;FastTransfer.c: 43: crc ^= 0x8C;
  6266  002B98  0E8C               	movlw	140
  6267  002B9A  1A21               	xorwf	CRC8@crc,f,c
  6268  002B9C                     l1013:
  6269                           
  6270                           ;FastTransfer.c: 44: }
  6271                           ;FastTransfer.c: 45: extract >>= 1;
  6272  002B9C  90D8               	bcf	status,0,c
  6273  002B9E  321F               	rrcf	CRC8@extract,f,c
  6274  002BA0  0620               	decf	CRC8@tempI,f,c
  6275  002BA2                     l6154:
  6276  002BA2  5020               	movf	CRC8@tempI,w,c
  6277  002BA4  A4D8               	btfss	status,2,c
  6278  002BA6  D7EF               	goto	l6146
  6279  002BA8                     l6156:
  6280  002BA8  061D               	decf	CRC8@len,f,c
  6281  002BAA  281D               	incf	CRC8@len,w,c
  6282  002BAC  A4D8               	btfss	status,2,c
  6283  002BAE  D7E0               	goto	l6140
  6284                           
  6285                           ;FastTransfer.c: 46: }
  6286                           ;FastTransfer.c: 47: }
  6287                           ;FastTransfer.c: 48: return crc;
  6288  002BB0  5021               	movf	CRC8@crc,w,c
  6289  002BB2  0012               	return	
  6290  002BB4                     __end_of_CRC8:
  6291                           	opt stack 0
  6292                           tosu	equ	0xFFF
  6293                           tosh	equ	0xFFE
  6294                           tosl	equ	0xFFD
  6295                           pclath	equ	0xFFA
  6296                           tblptru	equ	0xFF8
  6297                           tblptrh	equ	0xFF7
  6298                           tblptrl	equ	0xFF6
  6299                           tablat	equ	0xFF5
  6300                           prodh	equ	0xFF4
  6301                           prodl	equ	0xFF3
  6302                           intcon	equ	0xFF2
  6303                           postinc0	equ	0xFEE
  6304                           wreg	equ	0xFE8
  6305                           indf2	equ	0xFDF
  6306                           postinc2	equ	0xFDE
  6307                           postdec2	equ	0xFDD
  6308                           plusw2	equ	0xFDB
  6309                           fsr2h	equ	0xFDA
  6310                           fsr2l	equ	0xFD9
  6311                           status	equ	0xFD8
  6312                           
  6313 ;; *************** function _handleIndicators *****************
  6314 ;; Defined at:
  6315 ;;		line 32 in file "Communications.c"
  6316 ;; Parameters:    Size  Location     Type
  6317 ;;  receivedIndi    2   36[COMRAM] int 
  6318 ;; Auto vars:     Size  Location     Type
  6319 ;;  i               2   41[COMRAM] int 
  6320 ;; Return value:  Size  Location     Type
  6321 ;;                  1    wreg      void 
  6322 ;; Registers used:
  6323 ;;		wreg, status,2, status,0, cstack
  6324 ;; Tracked objects:
  6325 ;;		On entry : 0/0
  6326 ;;		On exit  : 0/0
  6327 ;;		Unchanged: 0/0
  6328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6329 ;;      Params:         2       0       0       0       0       0       0
  6330 ;;      Locals:         2       0       0       0       0       0       0
  6331 ;;      Temps:          3       0       0       0       0       0       0
  6332 ;;      Totals:         7       0       0       0       0       0       0
  6333 ;;Total ram usage:        7 bytes
  6334 ;; Hardware stack levels used:    1
  6335 ;; Hardware stack levels required when called:    6
  6336 ;; This function calls:
  6337 ;;		_SetLEDOut
  6338 ;; This function is called by:
  6339 ;;		_updateComms
  6340 ;; This function uses a non-reentrant model
  6341 ;;
  6342                           
  6343                           	psect	text26
  6344  0027D8                     __ptext26:
  6345                           	opt stack 0
  6346  0027D8                     _handleIndicators:
  6347                           	opt stack 23
  6348                           
  6349                           ;Communications.c: 33: static int oldIndicators = 0;
  6350                           ;Communications.c: 34: if (receivedIndicators != oldIndicators) {
  6351                           
  6352                           ;incstack = 0
  6353  0027D8  0100               	movlb	0	; () banked
  6354  0027DA  51E1               	movf	handleIndicators@oldIndicators& (0+255),w,b
  6355  0027DC  1825               	xorwf	handleIndicators@receivedIndicators,w,c
  6356  0027DE  E105               	bnz	u7800
  6357  0027E0  0100               	movlb	0	; () banked
  6358  0027E2  51E2               	movf	(handleIndicators@oldIndicators+1)& (0+255),w,b
  6359  0027E4  1826               	xorwf	handleIndicators@receivedIndicators+1,w,c
  6360  0027E6  B4D8               	btfsc	status,2,c
  6361  0027E8  0012               	return	
  6362  0027EA                     u7800:
  6363                           
  6364                           ; BSR set to: 0
  6365                           ;Communications.c: 35: int i = 0;
  6366  0027EA  0E00               	movlw	0
  6367  0027EC  6E2B               	movwf	handleIndicators@i+1,c
  6368  0027EE  0E00               	movlw	0
  6369  0027F0  6E2A               	movwf	handleIndicators@i,c
  6370                           
  6371                           ;Communications.c: 36: for (i = 0; i < 6; i++) {
  6372  0027F2  0E00               	movlw	0
  6373  0027F4  6E2B               	movwf	handleIndicators@i+1,c
  6374  0027F6  0E00               	movlw	0
  6375  0027F8  6E2A               	movwf	handleIndicators@i,c
  6376                           
  6377                           ; BSR set to: 0
  6378  0027FA  BE2B               	btfsc	handleIndicators@i+1,7,c
  6379  0027FC  D006               	goto	l6938
  6380  0027FE  502B               	movf	handleIndicators@i+1,w,c
  6381  002800  E122               	bnz	l934
  6382  002802  0E06               	movlw	6
  6383  002804  5C2A               	subwf	handleIndicators@i,w,c
  6384  002806  B0D8               	btfsc	status,0,c
  6385  002808  D01E               	goto	l934
  6386  00280A                     l6938:
  6387                           
  6388                           ;Communications.c: 37: SetLEDOut(i, ((receivedIndicators >> i)&0x01));
  6389  00280A  C02A  F01F         	movff	handleIndicators@i,SetLEDOut@lednum
  6390  00280E  C02B  F020         	movff	handleIndicators@i+1,SetLEDOut@lednum+1
  6391  002812  C02A  F027         	movff	handleIndicators@i,??_handleIndicators
  6392  002816  C025  F028         	movff	handleIndicators@receivedIndicators,??_handleIndicators+1
  6393  00281A  C026  F029         	movff	handleIndicators@receivedIndicators+1,??_handleIndicators+2
  6394  00281E  2A27               	incf	??_handleIndicators,f,c
  6395  002820  D003               	goto	u7824
  6396  002822                     u7825:
  6397  002822  3429               	rlcf	??_handleIndicators+2,w,c
  6398  002824  3229               	rrcf	??_handleIndicators+2,f,c
  6399  002826  3228               	rrcf	??_handleIndicators+1,f,c
  6400  002828                     u7824:
  6401  002828  2E27               	decfsz	??_handleIndicators,f,c
  6402  00282A  D7FB               	goto	u7825
  6403  00282C  0E01               	movlw	1
  6404  00282E  1428               	andwf	??_handleIndicators+1,w,c
  6405  002830  6E21               	movwf	SetLEDOut@state,c
  6406  002832  6A22               	clrf	SetLEDOut@state+1,c
  6407  002834  ECC7  F005         	call	_SetLEDOut	;wreg free
  6408  002838  4A2A               	infsnz	handleIndicators@i,f,c
  6409  00283A  2A2B               	incf	handleIndicators@i+1,f,c
  6410  00283C  BE2B               	btfsc	handleIndicators@i+1,7,c
  6411  00283E  D7E5               	goto	l6938
  6412  002840  502B               	movf	handleIndicators@i+1,w,c
  6413  002842  E101               	bnz	u7830
  6414  002844  D7DE               	goto	L2
  6415  002846                     u7830:
  6416  002846                     l934:
  6417                           
  6418                           ;Communications.c: 38: }
  6419                           ;Communications.c: 39: oldIndicators = receivedIndicators;
  6420  002846  C025  F0E1         	movff	handleIndicators@receivedIndicators,handleIndicators@oldIndicators
  6421  00284A  C026  F0E2         	movff	handleIndicators@receivedIndicators+1,handleIndicators@oldIndicators+1
  6422  00284E  0012               	return	
  6423  002850                     __end_of_handleIndicators:
  6424                           	opt stack 0
  6425                           tosu	equ	0xFFF
  6426                           tosh	equ	0xFFE
  6427                           tosl	equ	0xFFD
  6428                           pclath	equ	0xFFA
  6429                           tblptru	equ	0xFF8
  6430                           tblptrh	equ	0xFF7
  6431                           tblptrl	equ	0xFF6
  6432                           tablat	equ	0xFF5
  6433                           prodh	equ	0xFF4
  6434                           prodl	equ	0xFF3
  6435                           intcon	equ	0xFF2
  6436                           postinc0	equ	0xFEE
  6437                           wreg	equ	0xFE8
  6438                           indf2	equ	0xFDF
  6439                           postinc2	equ	0xFDE
  6440                           postdec2	equ	0xFDD
  6441                           plusw2	equ	0xFDB
  6442                           fsr2h	equ	0xFDA
  6443                           fsr2l	equ	0xFD9
  6444                           status	equ	0xFD8
  6445                           
  6446 ;; *************** function _SetLEDOut *****************
  6447 ;; Defined at:
  6448 ;;		line 25 in file "IO.c"
  6449 ;; Parameters:    Size  Location     Type
  6450 ;;  lednum          2   30[COMRAM] int 
  6451 ;;  state           2   32[COMRAM] int 
  6452 ;; Auto vars:     Size  Location     Type
  6453 ;;		None
  6454 ;; Return value:  Size  Location     Type
  6455 ;;                  1    wreg      void 
  6456 ;; Registers used:
  6457 ;;		wreg, status,2, status,0, cstack
  6458 ;; Tracked objects:
  6459 ;;		On entry : 0/0
  6460 ;;		On exit  : 0/0
  6461 ;;		Unchanged: 0/0
  6462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6463 ;;      Params:         4       0       0       0       0       0       0
  6464 ;;      Locals:         0       0       0       0       0       0       0
  6465 ;;      Temps:          2       0       0       0       0       0       0
  6466 ;;      Totals:         6       0       0       0       0       0       0
  6467 ;;Total ram usage:        6 bytes
  6468 ;; Hardware stack levels used:    1
  6469 ;; Hardware stack levels required when called:    5
  6470 ;; This function calls:
  6471 ;;		_Off_Led
  6472 ;;		_setLED
  6473 ;; This function is called by:
  6474 ;;		_handleIndicators
  6475 ;; This function uses a non-reentrant model
  6476 ;;
  6477                           
  6478                           	psect	text27
  6479  000B8E                     __ptext27:
  6480                           	opt stack 0
  6481  000B8E                     _SetLEDOut:
  6482                           	opt stack 23
  6483                           
  6484                           ;IO.c: 26: switch (lednum) {
  6485                           
  6486                           ;incstack = 0
  6487  000B8E  D138               	goto	l6404
  6488  000B90                     l6270:
  6489                           
  6490                           ;IO.c: 28: if (state == 1) {
  6491  000B90  0421               	decf	SetLEDOut@state,w,c
  6492  000B92  1022               	iorwf	SetLEDOut@state+1,w,c
  6493  000B94  A4D8               	btfss	status,2,c
  6494  000B96  D00D               	goto	l6278
  6495                           
  6496                           ;IO.c: 29: Off_Led(0);
  6497  000B98  0E00               	movlw	0
  6498  000B9A  6E1C               	movwf	Off_Led@led+1,c
  6499  000B9C  0E00               	movlw	0
  6500  000B9E  6E1B               	movwf	Off_Led@led,c
  6501  000BA0  EC68  F010         	call	_Off_Led	;wreg free
  6502                           
  6503                           ;IO.c: 30: do { LATC1 = 1; } while(0);
  6504  000BA4  828B               	bsf	3979,1,c	;volatile
  6505                           
  6506                           ;IO.c: 31: LED_array[0] = 1;
  6507  000BA6  0E00               	movlw	0
  6508  000BA8  0100               	movlb	0	; () banked
  6509  000BAA  6F89               	movwf	(_LED_array+1)& (0+255),b
  6510  000BAC  0E01               	movlw	1
  6511  000BAE  6F88               	movwf	_LED_array& (0+255),b
  6512                           
  6513                           ;IO.c: 32: } else if (state == 0) {
  6514  000BB0  0012               	return	
  6515  000BB2                     l6278:
  6516  000BB2  5021               	movf	SetLEDOut@state,w,c
  6517  000BB4  1022               	iorwf	SetLEDOut@state+1,w,c
  6518  000BB6  A4D8               	btfss	status,2,c
  6519  000BB8  D00D               	goto	l6286
  6520                           
  6521                           ;IO.c: 33: Off_Led(0);
  6522  000BBA  0E00               	movlw	0
  6523  000BBC  6E1C               	movwf	Off_Led@led+1,c
  6524  000BBE  0E00               	movlw	0
  6525  000BC0  6E1B               	movwf	Off_Led@led,c
  6526  000BC2  EC68  F010         	call	_Off_Led	;wreg free
  6527                           
  6528                           ;IO.c: 34: do { LATC1 = 0; } while(0);
  6529  000BC6  928B               	bcf	3979,1,c	;volatile
  6530                           
  6531                           ;IO.c: 35: LED_array[0] = 0;
  6532  000BC8  0E00               	movlw	0
  6533  000BCA  0100               	movlb	0	; () banked
  6534  000BCC  6F89               	movwf	(_LED_array+1)& (0+255),b
  6535  000BCE  0E00               	movlw	0
  6536  000BD0  6F88               	movwf	_LED_array& (0+255),b
  6537                           
  6538                           ;IO.c: 36: }
  6539  000BD2  0012               	return	
  6540  000BD4                     l6286:
  6541                           
  6542                           ;IO.c: 37: else if (state == 2) {
  6543  000BD4  0E02               	movlw	2
  6544  000BD6  1821               	xorwf	SetLEDOut@state,w,c
  6545  000BD8  1022               	iorwf	SetLEDOut@state+1,w,c
  6546  000BDA  A4D8               	btfss	status,2,c
  6547  000BDC  0012               	return	
  6548                           
  6549                           ;IO.c: 39: do { LATC1 = 0; } while(0);
  6550  000BDE  928B               	bcf	3979,1,c	;volatile
  6551                           
  6552                           ;IO.c: 40: setLED(0);
  6553  000BE0  0E00               	movlw	0
  6554  000BE2  6E1C               	movwf	setLED@led+1,c
  6555  000BE4  0E00               	movlw	0
  6556  000BE6  6E1B               	movwf	setLED@led,c
  6557  000BE8  ECCD  F010         	call	_setLED	;wreg free
  6558                           
  6559                           ;IO.c: 41: LED_array[0] = 2;
  6560  000BEC  0E00               	movlw	0
  6561  000BEE  0100               	movlb	0	; () banked
  6562  000BF0  6F89               	movwf	(_LED_array+1)& (0+255),b
  6563  000BF2  0E02               	movlw	2
  6564  000BF4  6F88               	movwf	_LED_array& (0+255),b
  6565                           
  6566                           ; BSR set to: 0
  6567                           ;IO.c: 43: }
  6568                           ;IO.c: 44: break;
  6569                           
  6570                           ; BSR set to: 0
  6571                           
  6572                           ; BSR set to: 0
  6573  000BF6  0012               	return	
  6574  000BF8                     l6292:
  6575                           
  6576                           ;IO.c: 47: if (state == 1) {
  6577  000BF8  0421               	decf	SetLEDOut@state,w,c
  6578  000BFA  1022               	iorwf	SetLEDOut@state+1,w,c
  6579  000BFC  A4D8               	btfss	status,2,c
  6580  000BFE  D00D               	goto	l6300
  6581                           
  6582                           ;IO.c: 48: Off_Led(1);
  6583  000C00  0E00               	movlw	0
  6584  000C02  6E1C               	movwf	Off_Led@led+1,c
  6585  000C04  0E01               	movlw	1
  6586  000C06  6E1B               	movwf	Off_Led@led,c
  6587  000C08  EC68  F010         	call	_Off_Led	;wreg free
  6588                           
  6589                           ;IO.c: 49: do { LATA6 = 1; } while(0);
  6590  000C0C  8C89               	bsf	3977,6,c	;volatile
  6591                           
  6592                           ;IO.c: 50: LED_array[1] = 1;
  6593  000C0E  0E00               	movlw	0
  6594  000C10  0100               	movlb	0	; () banked
  6595  000C12  6F8B               	movwf	(_LED_array+3)& (0+255),b
  6596  000C14  0E01               	movlw	1
  6597  000C16  6F8A               	movwf	(_LED_array+2)& (0+255),b
  6598                           
  6599                           ;IO.c: 51: } else if (state == 0) {
  6600  000C18  0012               	return	
  6601  000C1A                     l6300:
  6602  000C1A  5021               	movf	SetLEDOut@state,w,c
  6603  000C1C  1022               	iorwf	SetLEDOut@state+1,w,c
  6604  000C1E  A4D8               	btfss	status,2,c
  6605  000C20  D00D               	goto	l6308
  6606                           
  6607                           ;IO.c: 52: Off_Led(1);
  6608  000C22  0E00               	movlw	0
  6609  000C24  6E1C               	movwf	Off_Led@led+1,c
  6610  000C26  0E01               	movlw	1
  6611  000C28  6E1B               	movwf	Off_Led@led,c
  6612  000C2A  EC68  F010         	call	_Off_Led	;wreg free
  6613                           
  6614                           ;IO.c: 53: do { LATA6 = 0; } while(0);
  6615  000C2E  9C89               	bcf	3977,6,c	;volatile
  6616                           
  6617                           ;IO.c: 54: LED_array[1] = 0;
  6618  000C30  0E00               	movlw	0
  6619  000C32  0100               	movlb	0	; () banked
  6620  000C34  6F8B               	movwf	(_LED_array+3)& (0+255),b
  6621  000C36  0E00               	movlw	0
  6622  000C38  6F8A               	movwf	(_LED_array+2)& (0+255),b
  6623                           
  6624                           ;IO.c: 55: } else if (state == 2) {
  6625  000C3A  0012               	return	
  6626  000C3C                     l6308:
  6627  000C3C  0E02               	movlw	2
  6628  000C3E  1821               	xorwf	SetLEDOut@state,w,c
  6629  000C40  1022               	iorwf	SetLEDOut@state+1,w,c
  6630  000C42  A4D8               	btfss	status,2,c
  6631  000C44  0012               	return	
  6632                           
  6633                           ;IO.c: 57: do { LATA6 = 0; } while(0);
  6634  000C46  9C89               	bcf	3977,6,c	;volatile
  6635                           
  6636                           ;IO.c: 58: setLED(1);
  6637  000C48  0E00               	movlw	0
  6638  000C4A  6E1C               	movwf	setLED@led+1,c
  6639  000C4C  0E01               	movlw	1
  6640  000C4E  6E1B               	movwf	setLED@led,c
  6641  000C50  ECCD  F010         	call	_setLED	;wreg free
  6642                           
  6643                           ;IO.c: 59: LED_array[1] = 2;
  6644  000C54  0E00               	movlw	0
  6645  000C56  0100               	movlb	0	; () banked
  6646  000C58  6F8B               	movwf	(_LED_array+3)& (0+255),b
  6647  000C5A  0E02               	movlw	2
  6648  000C5C  6F8A               	movwf	(_LED_array+2)& (0+255),b
  6649                           
  6650                           ; BSR set to: 0
  6651                           ;IO.c: 61: }
  6652                           ;IO.c: 62: break;
  6653                           
  6654                           ; BSR set to: 0
  6655                           
  6656                           ; BSR set to: 0
  6657  000C5E  0012               	return	
  6658  000C60                     l6314:
  6659                           
  6660                           ;IO.c: 64: if (state == 1) {
  6661  000C60  0421               	decf	SetLEDOut@state,w,c
  6662  000C62  1022               	iorwf	SetLEDOut@state+1,w,c
  6663  000C64  A4D8               	btfss	status,2,c
  6664  000C66  D00D               	goto	l6322
  6665                           
  6666                           ;IO.c: 65: Off_Led(2);
  6667  000C68  0E00               	movlw	0
  6668  000C6A  6E1C               	movwf	Off_Led@led+1,c
  6669  000C6C  0E02               	movlw	2
  6670  000C6E  6E1B               	movwf	Off_Led@led,c
  6671  000C70  EC68  F010         	call	_Off_Led	;wreg free
  6672                           
  6673                           ;IO.c: 66: do { LATA7 = 1; } while(0);
  6674  000C74  8E89               	bsf	3977,7,c	;volatile
  6675                           
  6676                           ;IO.c: 67: LED_array[2] = 1;
  6677  000C76  0E00               	movlw	0
  6678  000C78  0100               	movlb	0	; () banked
  6679  000C7A  6F8D               	movwf	(_LED_array+5)& (0+255),b
  6680  000C7C  0E01               	movlw	1
  6681  000C7E  6F8C               	movwf	(_LED_array+4)& (0+255),b
  6682                           
  6683                           ;IO.c: 68: } else if (state == 0) {
  6684  000C80  0012               	return	
  6685  000C82                     l6322:
  6686  000C82  5021               	movf	SetLEDOut@state,w,c
  6687  000C84  1022               	iorwf	SetLEDOut@state+1,w,c
  6688  000C86  A4D8               	btfss	status,2,c
  6689  000C88  D00D               	goto	l6330
  6690                           
  6691                           ;IO.c: 69: Off_Led(2);
  6692  000C8A  0E00               	movlw	0
  6693  000C8C  6E1C               	movwf	Off_Led@led+1,c
  6694  000C8E  0E02               	movlw	2
  6695  000C90  6E1B               	movwf	Off_Led@led,c
  6696  000C92  EC68  F010         	call	_Off_Led	;wreg free
  6697                           
  6698                           ;IO.c: 70: do { LATA7 = 0; } while(0);
  6699  000C96  9E89               	bcf	3977,7,c	;volatile
  6700                           
  6701                           ;IO.c: 71: LED_array[2] = 0;
  6702  000C98  0E00               	movlw	0
  6703  000C9A  0100               	movlb	0	; () banked
  6704  000C9C  6F8D               	movwf	(_LED_array+5)& (0+255),b
  6705  000C9E  0E00               	movlw	0
  6706  000CA0  6F8C               	movwf	(_LED_array+4)& (0+255),b
  6707                           
  6708                           ;IO.c: 72: } else if (state == 2) {
  6709  000CA2  0012               	return	
  6710  000CA4                     l6330:
  6711  000CA4  0E02               	movlw	2
  6712  000CA6  1821               	xorwf	SetLEDOut@state,w,c
  6713  000CA8  1022               	iorwf	SetLEDOut@state+1,w,c
  6714  000CAA  A4D8               	btfss	status,2,c
  6715  000CAC  0012               	return	
  6716                           
  6717                           ;IO.c: 74: do { LATA7 = 0; } while(0);
  6718  000CAE  9E89               	bcf	3977,7,c	;volatile
  6719                           
  6720                           ;IO.c: 75: setLED(2);
  6721  000CB0  0E00               	movlw	0
  6722  000CB2  6E1C               	movwf	setLED@led+1,c
  6723  000CB4  0E02               	movlw	2
  6724  000CB6  6E1B               	movwf	setLED@led,c
  6725  000CB8  ECCD  F010         	call	_setLED	;wreg free
  6726                           
  6727                           ;IO.c: 77: LED_array[2] = 2;
  6728  000CBC  0E00               	movlw	0
  6729  000CBE  0100               	movlb	0	; () banked
  6730  000CC0  6F8D               	movwf	(_LED_array+5)& (0+255),b
  6731  000CC2  0E02               	movlw	2
  6732  000CC4  6F8C               	movwf	(_LED_array+4)& (0+255),b
  6733                           
  6734                           ; BSR set to: 0
  6735                           ;IO.c: 79: }
  6736                           ;IO.c: 82: break;
  6737                           
  6738                           ; BSR set to: 0
  6739                           
  6740                           ; BSR set to: 0
  6741  000CC6  0012               	return	
  6742  000CC8                     l6336:
  6743                           
  6744                           ;IO.c: 85: if (state == 1) {
  6745  000CC8  0421               	decf	SetLEDOut@state,w,c
  6746  000CCA  1022               	iorwf	SetLEDOut@state+1,w,c
  6747  000CCC  A4D8               	btfss	status,2,c
  6748  000CCE  D00D               	goto	l6344
  6749                           
  6750                           ;IO.c: 86: Off_Led(3);
  6751  000CD0  0E00               	movlw	0
  6752  000CD2  6E1C               	movwf	Off_Led@led+1,c
  6753  000CD4  0E03               	movlw	3
  6754  000CD6  6E1B               	movwf	Off_Led@led,c
  6755  000CD8  EC68  F010         	call	_Off_Led	;wreg free
  6756                           
  6757                           ;IO.c: 87: do { LATE2 = 1; } while(0);
  6758  000CDC  848D               	bsf	3981,2,c	;volatile
  6759                           
  6760                           ;IO.c: 88: LED_array[3] = 1;
  6761  000CDE  0E00               	movlw	0
  6762  000CE0  0100               	movlb	0	; () banked
  6763  000CE2  6F8F               	movwf	(_LED_array+7)& (0+255),b
  6764  000CE4  0E01               	movlw	1
  6765  000CE6  6F8E               	movwf	(_LED_array+6)& (0+255),b
  6766                           
  6767                           ;IO.c: 89: } else if (state == 0) {
  6768  000CE8  0012               	return	
  6769  000CEA                     l6344:
  6770  000CEA  5021               	movf	SetLEDOut@state,w,c
  6771  000CEC  1022               	iorwf	SetLEDOut@state+1,w,c
  6772  000CEE  A4D8               	btfss	status,2,c
  6773  000CF0  D00D               	goto	l6352
  6774                           
  6775                           ;IO.c: 90: Off_Led(3);
  6776  000CF2  0E00               	movlw	0
  6777  000CF4  6E1C               	movwf	Off_Led@led+1,c
  6778  000CF6  0E03               	movlw	3
  6779  000CF8  6E1B               	movwf	Off_Led@led,c
  6780  000CFA  EC68  F010         	call	_Off_Led	;wreg free
  6781                           
  6782                           ;IO.c: 91: do { LATE2 = 0; } while(0);
  6783  000CFE  948D               	bcf	3981,2,c	;volatile
  6784                           
  6785                           ;IO.c: 92: LED_array[3] = 0;
  6786  000D00  0E00               	movlw	0
  6787  000D02  0100               	movlb	0	; () banked
  6788  000D04  6F8F               	movwf	(_LED_array+7)& (0+255),b
  6789  000D06  0E00               	movlw	0
  6790  000D08  6F8E               	movwf	(_LED_array+6)& (0+255),b
  6791                           
  6792                           ;IO.c: 93: }
  6793  000D0A  0012               	return	
  6794  000D0C                     l6352:
  6795                           
  6796                           ;IO.c: 94: else if (state == 2) {
  6797  000D0C  0E02               	movlw	2
  6798  000D0E  1821               	xorwf	SetLEDOut@state,w,c
  6799  000D10  1022               	iorwf	SetLEDOut@state+1,w,c
  6800  000D12  A4D8               	btfss	status,2,c
  6801  000D14  0012               	return	
  6802                           
  6803                           ;IO.c: 95: do { LATE2 = 0; } while(0);
  6804  000D16  948D               	bcf	3981,2,c	;volatile
  6805                           
  6806                           ;IO.c: 96: setLED(3);
  6807  000D18  0E00               	movlw	0
  6808  000D1A  6E1C               	movwf	setLED@led+1,c
  6809  000D1C  0E03               	movlw	3
  6810  000D1E  6E1B               	movwf	setLED@led,c
  6811  000D20  ECCD  F010         	call	_setLED	;wreg free
  6812                           
  6813                           ;IO.c: 97: LED_array[3] = 2;
  6814  000D24  0E00               	movlw	0
  6815  000D26  0100               	movlb	0	; () banked
  6816  000D28  6F8F               	movwf	(_LED_array+7)& (0+255),b
  6817  000D2A  0E02               	movlw	2
  6818  000D2C  6F8E               	movwf	(_LED_array+6)& (0+255),b
  6819                           
  6820                           ; BSR set to: 0
  6821                           ;IO.c: 99: }
  6822                           ;IO.c: 101: break;
  6823                           
  6824                           ; BSR set to: 0
  6825                           
  6826                           ; BSR set to: 0
  6827  000D2E  0012               	return	
  6828  000D30                     l6358:
  6829                           
  6830                           ;IO.c: 103: if (state == 1) {
  6831  000D30  0421               	decf	SetLEDOut@state,w,c
  6832  000D32  1022               	iorwf	SetLEDOut@state+1,w,c
  6833  000D34  A4D8               	btfss	status,2,c
  6834  000D36  D00D               	goto	l6366
  6835                           
  6836                           ;IO.c: 104: Off_Led(4);
  6837  000D38  0E00               	movlw	0
  6838  000D3A  6E1C               	movwf	Off_Led@led+1,c
  6839  000D3C  0E04               	movlw	4
  6840  000D3E  6E1B               	movwf	Off_Led@led,c
  6841  000D40  EC68  F010         	call	_Off_Led	;wreg free
  6842                           
  6843                           ;IO.c: 105: do { LATE1 = 1; } while(0);
  6844  000D44  828D               	bsf	3981,1,c	;volatile
  6845                           
  6846                           ;IO.c: 106: LED_array[4] = 1;
  6847  000D46  0E00               	movlw	0
  6848  000D48  0100               	movlb	0	; () banked
  6849  000D4A  6F91               	movwf	(_LED_array+9)& (0+255),b
  6850  000D4C  0E01               	movlw	1
  6851  000D4E  6F90               	movwf	(_LED_array+8)& (0+255),b
  6852                           
  6853                           ;IO.c: 107: } else if (state == 0) {
  6854  000D50  0012               	return	
  6855  000D52                     l6366:
  6856  000D52  5021               	movf	SetLEDOut@state,w,c
  6857  000D54  1022               	iorwf	SetLEDOut@state+1,w,c
  6858  000D56  A4D8               	btfss	status,2,c
  6859  000D58  D00D               	goto	l6374
  6860                           
  6861                           ;IO.c: 108: Off_Led(4);
  6862  000D5A  0E00               	movlw	0
  6863  000D5C  6E1C               	movwf	Off_Led@led+1,c
  6864  000D5E  0E04               	movlw	4
  6865  000D60  6E1B               	movwf	Off_Led@led,c
  6866  000D62  EC68  F010         	call	_Off_Led	;wreg free
  6867                           
  6868                           ;IO.c: 109: do { LATE1 = 0; } while(0);
  6869  000D66  928D               	bcf	3981,1,c	;volatile
  6870                           
  6871                           ;IO.c: 110: LED_array[4] = 0;
  6872  000D68  0E00               	movlw	0
  6873  000D6A  0100               	movlb	0	; () banked
  6874  000D6C  6F91               	movwf	(_LED_array+9)& (0+255),b
  6875  000D6E  0E00               	movlw	0
  6876  000D70  6F90               	movwf	(_LED_array+8)& (0+255),b
  6877                           
  6878                           ;IO.c: 111: }
  6879  000D72  0012               	return	
  6880  000D74                     l6374:
  6881                           
  6882                           ;IO.c: 112: else if (state == 2) {
  6883  000D74  0E02               	movlw	2
  6884  000D76  1821               	xorwf	SetLEDOut@state,w,c
  6885  000D78  1022               	iorwf	SetLEDOut@state+1,w,c
  6886  000D7A  A4D8               	btfss	status,2,c
  6887  000D7C  0012               	return	
  6888                           
  6889                           ;IO.c: 113: do { LATE1 = 0; } while(0);
  6890  000D7E  928D               	bcf	3981,1,c	;volatile
  6891                           
  6892                           ;IO.c: 114: setLED(4);
  6893  000D80  0E00               	movlw	0
  6894  000D82  6E1C               	movwf	setLED@led+1,c
  6895  000D84  0E04               	movlw	4
  6896  000D86  6E1B               	movwf	setLED@led,c
  6897  000D88  ECCD  F010         	call	_setLED	;wreg free
  6898                           
  6899                           ;IO.c: 115: LED_array[4] = 2;
  6900  000D8C  0E00               	movlw	0
  6901  000D8E  0100               	movlb	0	; () banked
  6902  000D90  6F91               	movwf	(_LED_array+9)& (0+255),b
  6903  000D92  0E02               	movlw	2
  6904  000D94  6F90               	movwf	(_LED_array+8)& (0+255),b
  6905                           
  6906                           ; BSR set to: 0
  6907                           ;IO.c: 116: }
  6908                           ;IO.c: 118: break;
  6909                           
  6910                           ; BSR set to: 0
  6911                           
  6912                           ; BSR set to: 0
  6913  000D96  0012               	return	
  6914  000D98                     l6380:
  6915                           
  6916                           ;IO.c: 120: if (state == 1) {
  6917  000D98  0421               	decf	SetLEDOut@state,w,c
  6918  000D9A  1022               	iorwf	SetLEDOut@state+1,w,c
  6919  000D9C  A4D8               	btfss	status,2,c
  6920  000D9E  D00D               	goto	l6388
  6921                           
  6922                           ;IO.c: 121: Off_Led(5);
  6923  000DA0  0E00               	movlw	0
  6924  000DA2  6E1C               	movwf	Off_Led@led+1,c
  6925  000DA4  0E05               	movlw	5
  6926  000DA6  6E1B               	movwf	Off_Led@led,c
  6927  000DA8  EC68  F010         	call	_Off_Led	;wreg free
  6928                           
  6929                           ;IO.c: 122: do { LATE0 = 1; } while(0);
  6930  000DAC  808D               	bsf	3981,0,c	;volatile
  6931                           
  6932                           ;IO.c: 123: LED_array[5] = 1;
  6933  000DAE  0E00               	movlw	0
  6934  000DB0  0100               	movlb	0	; () banked
  6935  000DB2  6F93               	movwf	(_LED_array+11)& (0+255),b
  6936  000DB4  0E01               	movlw	1
  6937  000DB6  6F92               	movwf	(_LED_array+10)& (0+255),b
  6938                           
  6939                           ;IO.c: 124: } else if (state == 0) {
  6940  000DB8  0012               	return	
  6941  000DBA                     l6388:
  6942  000DBA  5021               	movf	SetLEDOut@state,w,c
  6943  000DBC  1022               	iorwf	SetLEDOut@state+1,w,c
  6944  000DBE  A4D8               	btfss	status,2,c
  6945  000DC0  D00D               	goto	l6396
  6946                           
  6947                           ;IO.c: 125: Off_Led(5);
  6948  000DC2  0E00               	movlw	0
  6949  000DC4  6E1C               	movwf	Off_Led@led+1,c
  6950  000DC6  0E05               	movlw	5
  6951  000DC8  6E1B               	movwf	Off_Led@led,c
  6952  000DCA  EC68  F010         	call	_Off_Led	;wreg free
  6953                           
  6954                           ;IO.c: 126: do { LATE0 = 0; } while(0);
  6955  000DCE  908D               	bcf	3981,0,c	;volatile
  6956                           
  6957                           ;IO.c: 127: LED_array[5] = 0;
  6958  000DD0  0E00               	movlw	0
  6959  000DD2  0100               	movlb	0	; () banked
  6960  000DD4  6F93               	movwf	(_LED_array+11)& (0+255),b
  6961  000DD6  0E00               	movlw	0
  6962  000DD8  6F92               	movwf	(_LED_array+10)& (0+255),b
  6963                           
  6964                           ;IO.c: 128: }
  6965  000DDA  0012               	return	
  6966  000DDC                     l6396:
  6967                           
  6968                           ;IO.c: 129: else if (state == 2) {
  6969  000DDC  0E02               	movlw	2
  6970  000DDE  1821               	xorwf	SetLEDOut@state,w,c
  6971  000DE0  1022               	iorwf	SetLEDOut@state+1,w,c
  6972  000DE2  A4D8               	btfss	status,2,c
  6973  000DE4  0012               	return	
  6974                           
  6975                           ;IO.c: 130: do { LATE0 = 0; } while(0);
  6976  000DE6  908D               	bcf	3981,0,c	;volatile
  6977                           
  6978                           ;IO.c: 131: setLED(5);
  6979  000DE8  0E00               	movlw	0
  6980  000DEA  6E1C               	movwf	setLED@led+1,c
  6981  000DEC  0E05               	movlw	5
  6982  000DEE  6E1B               	movwf	setLED@led,c
  6983  000DF0  ECCD  F010         	call	_setLED	;wreg free
  6984                           
  6985                           ;IO.c: 132: LED_array[5] = 2;
  6986  000DF4  0E00               	movlw	0
  6987  000DF6  0100               	movlb	0	; () banked
  6988  000DF8  6F93               	movwf	(_LED_array+11)& (0+255),b
  6989  000DFA  0E02               	movlw	2
  6990  000DFC  6F92               	movwf	(_LED_array+10)& (0+255),b
  6991                           
  6992                           ; BSR set to: 0
  6993                           ;IO.c: 138: }
  6994                           
  6995                           ; BSR set to: 0
  6996                           ;IO.c: 134: }
  6997                           ;IO.c: 137: break;
  6998                           
  6999                           ; BSR set to: 0
  7000                           
  7001                           ; BSR set to: 0
  7002  000DFE  0012               	return	
  7003  000E00                     l6404:
  7004  000E00  C01F  F023         	movff	SetLEDOut@lednum,??_SetLEDOut
  7005  000E04  C020  F024         	movff	SetLEDOut@lednum+1,??_SetLEDOut+1
  7006                           
  7007                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7008                           ; Switch size 1, requested type "space"
  7009                           ; Number of cases is 1, Range of values is 0 to 0
  7010                           ; switch strategies available:
  7011                           ; Name         Instructions Cycles
  7012                           ; simple_byte            4     3 (average)
  7013                           ;	Chosen strategy is simple_byte
  7014  000E08  5024               	movf	??_SetLEDOut+1,w,c
  7015  000E0A  0A00               	xorlw	0	; case 0
  7016  000E0C  A4D8               	btfss	status,2,c
  7017  000E0E  0012               	return	
  7018                           
  7019                           ; Switch size 1, requested type "space"
  7020                           ; Number of cases is 6, Range of values is 0 to 5
  7021                           ; switch strategies available:
  7022                           ; Name         Instructions Cycles
  7023                           ; simple_byte           19    10 (average)
  7024                           ;	Chosen strategy is simple_byte
  7025  000E10  5023               	movf	??_SetLEDOut,w,c
  7026  000E12  0A00               	xorlw	0	; case 0
  7027  000E14  B4D8               	btfsc	status,2,c
  7028  000E16  D6BC               	goto	l6270
  7029  000E18  0A01               	xorlw	1	; case 1
  7030  000E1A  B4D8               	btfsc	status,2,c
  7031  000E1C  D6ED               	goto	l6292
  7032  000E1E  0A03               	xorlw	3	; case 2
  7033  000E20  B4D8               	btfsc	status,2,c
  7034  000E22  D71E               	goto	l6314
  7035  000E24  0A01               	xorlw	1	; case 3
  7036  000E26  B4D8               	btfsc	status,2,c
  7037  000E28  D74F               	goto	l6336
  7038  000E2A  0A07               	xorlw	7	; case 4
  7039  000E2C  B4D8               	btfsc	status,2,c
  7040  000E2E  D780               	goto	l6358
  7041  000E30  0A01               	xorlw	1	; case 5
  7042  000E32  A4D8               	btfss	status,2,c
  7043  000E34  0012               	return	
  7044  000E36  D7B0               	goto	l6380
  7045  000E38                     __end_of_SetLEDOut:
  7046                           	opt stack 0
  7047                           tosu	equ	0xFFF
  7048                           tosh	equ	0xFFE
  7049                           tosl	equ	0xFFD
  7050                           pclath	equ	0xFFA
  7051                           tblptru	equ	0xFF8
  7052                           tblptrh	equ	0xFF7
  7053                           tblptrl	equ	0xFF6
  7054                           tablat	equ	0xFF5
  7055                           prodh	equ	0xFF4
  7056                           prodl	equ	0xFF3
  7057                           intcon	equ	0xFF2
  7058                           postinc0	equ	0xFEE
  7059                           wreg	equ	0xFE8
  7060                           indf2	equ	0xFDF
  7061                           postinc2	equ	0xFDE
  7062                           postdec2	equ	0xFDD
  7063                           plusw2	equ	0xFDB
  7064                           fsr2h	equ	0xFDA
  7065                           fsr2l	equ	0xFD9
  7066                           status	equ	0xFD8
  7067                           
  7068 ;; *************** function _setLED *****************
  7069 ;; Defined at:
  7070 ;;		line 202 in file "mcc_generated_files/tmr2.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;  led             2   26[COMRAM] int 
  7073 ;; Auto vars:     Size  Location     Type
  7074 ;;		None
  7075 ;; Return value:  Size  Location     Type
  7076 ;;                  1    wreg      void 
  7077 ;; Registers used:
  7078 ;;		wreg, status,2, status,0
  7079 ;; Tracked objects:
  7080 ;;		On entry : 0/0
  7081 ;;		On exit  : 0/0
  7082 ;;		Unchanged: 0/0
  7083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7084 ;;      Params:         2       0       0       0       0       0       0
  7085 ;;      Locals:         0       0       0       0       0       0       0
  7086 ;;      Temps:          2       0       0       0       0       0       0
  7087 ;;      Totals:         4       0       0       0       0       0       0
  7088 ;;Total ram usage:        4 bytes
  7089 ;; Hardware stack levels used:    1
  7090 ;; Hardware stack levels required when called:    4
  7091 ;; This function calls:
  7092 ;;		Nothing
  7093 ;; This function is called by:
  7094 ;;		_SetLEDOut
  7095 ;; This function uses a non-reentrant model
  7096 ;;
  7097                           
  7098                           	psect	text28
  7099  00219A                     __ptext28:
  7100                           	opt stack 0
  7101  00219A                     _setLED:
  7102                           	opt stack 23
  7103                           
  7104                           ;tmr2.c: 203: switch (led){
  7105                           
  7106                           ;incstack = 0
  7107  00219A  D042               	goto	l6094
  7108  00219C                     l6080:
  7109                           
  7110                           ;tmr2.c: 205: LEDNUM_ENAB[0]=1;
  7111  00219C  0E00               	movlw	0
  7112  00219E  0100               	movlb	0	; () banked
  7113  0021A0  6F99               	movwf	(_LEDNUM_ENAB+1)& (0+255),b
  7114  0021A2  0E01               	movlw	1
  7115  0021A4  6F98               	movwf	_LEDNUM_ENAB& (0+255),b
  7116                           
  7117                           ;tmr2.c: 206: LEDState[0]=0;
  7118  0021A6  0E00               	movlw	0
  7119  0021A8  0100               	movlb	0	; () banked
  7120  0021AA  6FA5               	movwf	(_LEDState+1)& (0+255),b
  7121  0021AC  0E00               	movlw	0
  7122  0021AE  6FA4               	movwf	_LEDState& (0+255),b
  7123                           
  7124                           ;tmr2.c: 207: break;
  7125  0021B0  0012               	return	
  7126  0021B2                     l6082:
  7127                           
  7128                           ;tmr2.c: 209: LEDNUM_ENAB[1]=1;
  7129  0021B2  0E00               	movlw	0
  7130  0021B4  0100               	movlb	0	; () banked
  7131  0021B6  6F9B               	movwf	(_LEDNUM_ENAB+3)& (0+255),b
  7132  0021B8  0E01               	movlw	1
  7133  0021BA  6F9A               	movwf	(_LEDNUM_ENAB+2)& (0+255),b
  7134                           
  7135                           ;tmr2.c: 210: LEDState[1]=0;
  7136  0021BC  0E00               	movlw	0
  7137  0021BE  0100               	movlb	0	; () banked
  7138  0021C0  6FA7               	movwf	(_LEDState+3)& (0+255),b
  7139  0021C2  0E00               	movlw	0
  7140  0021C4  6FA6               	movwf	(_LEDState+2)& (0+255),b
  7141                           
  7142                           ;tmr2.c: 211: break;
  7143  0021C6  0012               	return	
  7144  0021C8                     l6084:
  7145                           
  7146                           ;tmr2.c: 213: LEDNUM_ENAB[2]=1;
  7147  0021C8  0E00               	movlw	0
  7148  0021CA  0100               	movlb	0	; () banked
  7149  0021CC  6F9D               	movwf	(_LEDNUM_ENAB+5)& (0+255),b
  7150  0021CE  0E01               	movlw	1
  7151  0021D0  6F9C               	movwf	(_LEDNUM_ENAB+4)& (0+255),b
  7152                           
  7153                           ;tmr2.c: 214: LEDState[2]=0;
  7154  0021D2  0E00               	movlw	0
  7155  0021D4  0100               	movlb	0	; () banked
  7156  0021D6  6FA9               	movwf	(_LEDState+5)& (0+255),b
  7157  0021D8  0E00               	movlw	0
  7158  0021DA  6FA8               	movwf	(_LEDState+4)& (0+255),b
  7159                           
  7160                           ;tmr2.c: 215: break;
  7161  0021DC  0012               	return	
  7162  0021DE                     l6086:
  7163                           
  7164                           ;tmr2.c: 217: LEDNUM_ENAB[3]=1;
  7165  0021DE  0E00               	movlw	0
  7166  0021E0  0100               	movlb	0	; () banked
  7167  0021E2  6F9F               	movwf	(_LEDNUM_ENAB+7)& (0+255),b
  7168  0021E4  0E01               	movlw	1
  7169  0021E6  6F9E               	movwf	(_LEDNUM_ENAB+6)& (0+255),b
  7170                           
  7171                           ;tmr2.c: 218: LEDState[3]=0;
  7172  0021E8  0E00               	movlw	0
  7173  0021EA  0100               	movlb	0	; () banked
  7174  0021EC  6FAB               	movwf	(_LEDState+7)& (0+255),b
  7175  0021EE  0E00               	movlw	0
  7176  0021F0  6FAA               	movwf	(_LEDState+6)& (0+255),b
  7177                           
  7178                           ;tmr2.c: 219: break;
  7179  0021F2  0012               	return	
  7180  0021F4                     l6088:
  7181                           
  7182                           ;tmr2.c: 221: LEDNUM_ENAB[4]=1;
  7183  0021F4  0E00               	movlw	0
  7184  0021F6  0100               	movlb	0	; () banked
  7185  0021F8  6FA1               	movwf	(_LEDNUM_ENAB+9)& (0+255),b
  7186  0021FA  0E01               	movlw	1
  7187  0021FC  6FA0               	movwf	(_LEDNUM_ENAB+8)& (0+255),b
  7188                           
  7189                           ;tmr2.c: 222: LEDState[4]=0;
  7190  0021FE  0E00               	movlw	0
  7191  002200  0100               	movlb	0	; () banked
  7192  002202  6FAD               	movwf	(_LEDState+9)& (0+255),b
  7193  002204  0E00               	movlw	0
  7194  002206  6FAC               	movwf	(_LEDState+8)& (0+255),b
  7195                           
  7196                           ;tmr2.c: 223: break;
  7197  002208  0012               	return	
  7198  00220A                     l6090:
  7199                           
  7200                           ;tmr2.c: 225: LEDNUM_ENAB[5]=1;
  7201  00220A  0E00               	movlw	0
  7202  00220C  0100               	movlb	0	; () banked
  7203  00220E  6FA3               	movwf	(_LEDNUM_ENAB+11)& (0+255),b
  7204  002210  0E01               	movlw	1
  7205  002212  6FA2               	movwf	(_LEDNUM_ENAB+10)& (0+255),b
  7206                           
  7207                           ;tmr2.c: 226: LEDState[5]=0;
  7208  002214  0E00               	movlw	0
  7209  002216  0100               	movlb	0	; () banked
  7210  002218  6FAF               	movwf	(_LEDState+11)& (0+255),b
  7211  00221A  0E00               	movlw	0
  7212  00221C  6FAE               	movwf	(_LEDState+10)& (0+255),b
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;tmr2.c: 228: }
  7216                           
  7217                           ;tmr2.c: 227: break;
  7218  00221E  0012               	return	
  7219  002220                     l6094:
  7220  002220  C01B  F01D         	movff	setLED@led,??_setLED
  7221  002224  C01C  F01E         	movff	setLED@led+1,??_setLED+1
  7222                           
  7223                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7224                           ; Switch size 1, requested type "space"
  7225                           ; Number of cases is 1, Range of values is 0 to 0
  7226                           ; switch strategies available:
  7227                           ; Name         Instructions Cycles
  7228                           ; simple_byte            4     3 (average)
  7229                           ;	Chosen strategy is simple_byte
  7230  002228  501E               	movf	??_setLED+1,w,c
  7231  00222A  0A00               	xorlw	0	; case 0
  7232  00222C  A4D8               	btfss	status,2,c
  7233  00222E  0012               	return	
  7234                           
  7235                           ; Switch size 1, requested type "space"
  7236                           ; Number of cases is 6, Range of values is 0 to 5
  7237                           ; switch strategies available:
  7238                           ; Name         Instructions Cycles
  7239                           ; simple_byte           19    10 (average)
  7240                           ;	Chosen strategy is simple_byte
  7241  002230  501D               	movf	??_setLED,w,c
  7242  002232  0A00               	xorlw	0	; case 0
  7243  002234  B4D8               	btfsc	status,2,c
  7244  002236  D7B2               	goto	l6080
  7245  002238  0A01               	xorlw	1	; case 1
  7246  00223A  B4D8               	btfsc	status,2,c
  7247  00223C  D7BA               	goto	l6082
  7248  00223E  0A03               	xorlw	3	; case 2
  7249  002240  B4D8               	btfsc	status,2,c
  7250  002242  D7C2               	goto	l6084
  7251  002244  0A01               	xorlw	1	; case 3
  7252  002246  B4D8               	btfsc	status,2,c
  7253  002248  D7CA               	goto	l6086
  7254  00224A  0A07               	xorlw	7	; case 4
  7255  00224C  B4D8               	btfsc	status,2,c
  7256  00224E  D7D2               	goto	l6088
  7257  002250  0A01               	xorlw	1	; case 5
  7258  002252  A4D8               	btfss	status,2,c
  7259  002254  0012               	return	
  7260  002256  D7D9               	goto	l6090
  7261  002258                     __end_of_setLED:
  7262                           	opt stack 0
  7263                           tosu	equ	0xFFF
  7264                           tosh	equ	0xFFE
  7265                           tosl	equ	0xFFD
  7266                           pclath	equ	0xFFA
  7267                           tblptru	equ	0xFF8
  7268                           tblptrh	equ	0xFF7
  7269                           tblptrl	equ	0xFF6
  7270                           tablat	equ	0xFF5
  7271                           prodh	equ	0xFF4
  7272                           prodl	equ	0xFF3
  7273                           intcon	equ	0xFF2
  7274                           postinc0	equ	0xFEE
  7275                           wreg	equ	0xFE8
  7276                           indf2	equ	0xFDF
  7277                           postinc2	equ	0xFDE
  7278                           postdec2	equ	0xFDD
  7279                           plusw2	equ	0xFDB
  7280                           fsr2h	equ	0xFDA
  7281                           fsr2l	equ	0xFD9
  7282                           status	equ	0xFD8
  7283                           
  7284 ;; *************** function _Off_Led *****************
  7285 ;; Defined at:
  7286 ;;		line 230 in file "mcc_generated_files/tmr2.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;  led             2   26[COMRAM] int 
  7289 ;; Auto vars:     Size  Location     Type
  7290 ;;		None
  7291 ;; Return value:  Size  Location     Type
  7292 ;;                  1    wreg      void 
  7293 ;; Registers used:
  7294 ;;		wreg, status,2, status,0
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7300 ;;      Params:         2       0       0       0       0       0       0
  7301 ;;      Locals:         0       0       0       0       0       0       0
  7302 ;;      Temps:          2       0       0       0       0       0       0
  7303 ;;      Totals:         4       0       0       0       0       0       0
  7304 ;;Total ram usage:        4 bytes
  7305 ;; Hardware stack levels used:    1
  7306 ;; Hardware stack levels required when called:    4
  7307 ;; This function calls:
  7308 ;;		Nothing
  7309 ;; This function is called by:
  7310 ;;		_SetLEDOut
  7311 ;; This function uses a non-reentrant model
  7312 ;;
  7313                           
  7314                           	psect	text29
  7315  0020D0                     __ptext29:
  7316                           	opt stack 0
  7317  0020D0                     _Off_Led:
  7318                           	opt stack 23
  7319                           
  7320                           ;tmr2.c: 231: switch (led){
  7321                           
  7322                           ;incstack = 0
  7323  0020D0  D048               	goto	l6128
  7324  0020D2                     l6102:
  7325                           
  7326                           ;tmr2.c: 233: LEDNUM_ENAB[0]=0;
  7327  0020D2  0E00               	movlw	0
  7328  0020D4  0100               	movlb	0	; () banked
  7329  0020D6  6F99               	movwf	(_LEDNUM_ENAB+1)& (0+255),b
  7330  0020D8  0E00               	movlw	0
  7331  0020DA  6F98               	movwf	_LEDNUM_ENAB& (0+255),b
  7332                           
  7333                           ;tmr2.c: 234: LEDState[0]=0;
  7334  0020DC  0E00               	movlw	0
  7335  0020DE  0100               	movlb	0	; () banked
  7336  0020E0  6FA5               	movwf	(_LEDState+1)& (0+255),b
  7337  0020E2  0E00               	movlw	0
  7338  0020E4  6FA4               	movwf	_LEDState& (0+255),b
  7339                           
  7340                           ; BSR set to: 0
  7341                           
  7342                           ; BSR set to: 0
  7343                           
  7344                           ;tmr2.c: 235: do { LATC1 = 0; } while(0);
  7345  0020E6  928B               	bcf	3979,1,c	;volatile
  7346                           
  7347                           ; BSR set to: 0
  7348                           ;tmr2.c: 236: break;
  7349  0020E8  0012               	return	
  7350  0020EA                     l6106:
  7351                           
  7352                           ;tmr2.c: 238: LEDNUM_ENAB[1]=0;
  7353  0020EA  0E00               	movlw	0
  7354  0020EC  0100               	movlb	0	; () banked
  7355  0020EE  6F9B               	movwf	(_LEDNUM_ENAB+3)& (0+255),b
  7356  0020F0  0E00               	movlw	0
  7357  0020F2  6F9A               	movwf	(_LEDNUM_ENAB+2)& (0+255),b
  7358                           
  7359                           ;tmr2.c: 239: LEDState[1]=0;
  7360  0020F4  0E00               	movlw	0
  7361  0020F6  0100               	movlb	0	; () banked
  7362  0020F8  6FA7               	movwf	(_LEDState+3)& (0+255),b
  7363  0020FA  0E00               	movlw	0
  7364  0020FC  6FA6               	movwf	(_LEDState+2)& (0+255),b
  7365                           
  7366                           ; BSR set to: 0
  7367                           
  7368                           ; BSR set to: 0
  7369                           
  7370                           ;tmr2.c: 240: do { LATA6 = 0; } while(0);
  7371  0020FE  9C89               	bcf	3977,6,c	;volatile
  7372                           
  7373                           ; BSR set to: 0
  7374                           ;tmr2.c: 241: break;
  7375  002100  0012               	return	
  7376  002102                     l6110:
  7377                           
  7378                           ;tmr2.c: 243: LEDNUM_ENAB[2]=0;
  7379  002102  0E00               	movlw	0
  7380  002104  0100               	movlb	0	; () banked
  7381  002106  6F9D               	movwf	(_LEDNUM_ENAB+5)& (0+255),b
  7382  002108  0E00               	movlw	0
  7383  00210A  6F9C               	movwf	(_LEDNUM_ENAB+4)& (0+255),b
  7384                           
  7385                           ;tmr2.c: 244: LEDState[2]=0;
  7386  00210C  0E00               	movlw	0
  7387  00210E  0100               	movlb	0	; () banked
  7388  002110  6FA9               	movwf	(_LEDState+5)& (0+255),b
  7389  002112  0E00               	movlw	0
  7390  002114  6FA8               	movwf	(_LEDState+4)& (0+255),b
  7391                           
  7392                           ; BSR set to: 0
  7393                           
  7394                           ; BSR set to: 0
  7395                           
  7396                           ;tmr2.c: 245: do { LATA7 = 0; } while(0);
  7397  002116  9E89               	bcf	3977,7,c	;volatile
  7398                           
  7399                           ; BSR set to: 0
  7400                           ;tmr2.c: 246: break;
  7401  002118  0012               	return	
  7402  00211A                     l6114:
  7403                           
  7404                           ;tmr2.c: 248: LEDNUM_ENAB[3]=0;
  7405  00211A  0E00               	movlw	0
  7406  00211C  0100               	movlb	0	; () banked
  7407  00211E  6F9F               	movwf	(_LEDNUM_ENAB+7)& (0+255),b
  7408  002120  0E00               	movlw	0
  7409  002122  6F9E               	movwf	(_LEDNUM_ENAB+6)& (0+255),b
  7410                           
  7411                           ;tmr2.c: 249: LEDState[3]=0;
  7412  002124  0E00               	movlw	0
  7413  002126  0100               	movlb	0	; () banked
  7414  002128  6FAB               	movwf	(_LEDState+7)& (0+255),b
  7415  00212A  0E00               	movlw	0
  7416  00212C  6FAA               	movwf	(_LEDState+6)& (0+255),b
  7417                           
  7418                           ; BSR set to: 0
  7419                           
  7420                           ; BSR set to: 0
  7421                           
  7422                           ;tmr2.c: 250: do { LATE2 = 0; } while(0);
  7423  00212E  948D               	bcf	3981,2,c	;volatile
  7424                           
  7425                           ; BSR set to: 0
  7426                           ;tmr2.c: 251: break;
  7427  002130  0012               	return	
  7428  002132                     l6118:
  7429                           
  7430                           ;tmr2.c: 253: LEDNUM_ENAB[4]=0;
  7431  002132  0E00               	movlw	0
  7432  002134  0100               	movlb	0	; () banked
  7433  002136  6FA1               	movwf	(_LEDNUM_ENAB+9)& (0+255),b
  7434  002138  0E00               	movlw	0
  7435  00213A  6FA0               	movwf	(_LEDNUM_ENAB+8)& (0+255),b
  7436                           
  7437                           ;tmr2.c: 254: LEDState[4]=0;
  7438  00213C  0E00               	movlw	0
  7439  00213E  0100               	movlb	0	; () banked
  7440  002140  6FAD               	movwf	(_LEDState+9)& (0+255),b
  7441  002142  0E00               	movlw	0
  7442  002144  6FAC               	movwf	(_LEDState+8)& (0+255),b
  7443                           
  7444                           ; BSR set to: 0
  7445                           
  7446                           ; BSR set to: 0
  7447                           
  7448                           ;tmr2.c: 255: do { LATE1 = 0; } while(0);
  7449  002146  928D               	bcf	3981,1,c	;volatile
  7450                           
  7451                           ; BSR set to: 0
  7452                           ;tmr2.c: 256: break;
  7453  002148  0012               	return	
  7454  00214A                     l6122:
  7455                           
  7456                           ;tmr2.c: 258: LEDNUM_ENAB[5]=0;
  7457  00214A  0E00               	movlw	0
  7458  00214C  0100               	movlb	0	; () banked
  7459  00214E  6FA3               	movwf	(_LEDNUM_ENAB+11)& (0+255),b
  7460  002150  0E00               	movlw	0
  7461  002152  6FA2               	movwf	(_LEDNUM_ENAB+10)& (0+255),b
  7462                           
  7463                           ;tmr2.c: 259: LEDState[5]=0;
  7464  002154  0E00               	movlw	0
  7465  002156  0100               	movlb	0	; () banked
  7466  002158  6FAF               	movwf	(_LEDState+11)& (0+255),b
  7467  00215A  0E00               	movlw	0
  7468  00215C  6FAE               	movwf	(_LEDState+10)& (0+255),b
  7469                           
  7470                           ; BSR set to: 0
  7471                           
  7472                           ; BSR set to: 0
  7473                           
  7474                           ;tmr2.c: 260: do { LATE0 = 0; } while(0) ;
  7475  00215E  908D               	bcf	3981,0,c	;volatile
  7476                           
  7477                           ; BSR set to: 0
  7478                           ;tmr2.c: 262: }
  7479                           
  7480                           ; BSR set to: 0
  7481                           ;tmr2.c: 261: break;
  7482  002160  0012               	return	
  7483  002162                     l6128:
  7484  002162  C01B  F01D         	movff	Off_Led@led,??_Off_Led
  7485  002166  C01C  F01E         	movff	Off_Led@led+1,??_Off_Led+1
  7486                           
  7487                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7488                           ; Switch size 1, requested type "space"
  7489                           ; Number of cases is 1, Range of values is 0 to 0
  7490                           ; switch strategies available:
  7491                           ; Name         Instructions Cycles
  7492                           ; simple_byte            4     3 (average)
  7493                           ;	Chosen strategy is simple_byte
  7494  00216A  501E               	movf	??_Off_Led+1,w,c
  7495  00216C  0A00               	xorlw	0	; case 0
  7496  00216E  A4D8               	btfss	status,2,c
  7497  002170  0012               	return	
  7498                           
  7499                           ; Switch size 1, requested type "space"
  7500                           ; Number of cases is 6, Range of values is 0 to 5
  7501                           ; switch strategies available:
  7502                           ; Name         Instructions Cycles
  7503                           ; simple_byte           19    10 (average)
  7504                           ;	Chosen strategy is simple_byte
  7505  002172  501D               	movf	??_Off_Led,w,c
  7506  002174  0A00               	xorlw	0	; case 0
  7507  002176  B4D8               	btfsc	status,2,c
  7508  002178  D7AC               	goto	l6102
  7509  00217A  0A01               	xorlw	1	; case 1
  7510  00217C  B4D8               	btfsc	status,2,c
  7511  00217E  D7B5               	goto	l6106
  7512  002180  0A03               	xorlw	3	; case 2
  7513  002182  B4D8               	btfsc	status,2,c
  7514  002184  D7BE               	goto	l6110
  7515  002186  0A01               	xorlw	1	; case 3
  7516  002188  B4D8               	btfsc	status,2,c
  7517  00218A  D7C7               	goto	l6114
  7518  00218C  0A07               	xorlw	7	; case 4
  7519  00218E  B4D8               	btfsc	status,2,c
  7520  002190  D7D0               	goto	l6118
  7521  002192  0A01               	xorlw	1	; case 5
  7522  002194  A4D8               	btfss	status,2,c
  7523  002196  0012               	return	
  7524  002198  D7D8               	goto	l6122
  7525  00219A                     __end_of_Off_Led:
  7526                           	opt stack 0
  7527                           tosu	equ	0xFFF
  7528                           tosh	equ	0xFFE
  7529                           tosl	equ	0xFFD
  7530                           pclath	equ	0xFFA
  7531                           tblptru	equ	0xFF8
  7532                           tblptrh	equ	0xFF7
  7533                           tblptrl	equ	0xFF6
  7534                           tablat	equ	0xFF5
  7535                           prodh	equ	0xFF4
  7536                           prodl	equ	0xFF3
  7537                           intcon	equ	0xFF2
  7538                           postinc0	equ	0xFEE
  7539                           wreg	equ	0xFE8
  7540                           indf2	equ	0xFDF
  7541                           postinc2	equ	0xFDE
  7542                           postdec2	equ	0xFDD
  7543                           plusw2	equ	0xFDB
  7544                           fsr2h	equ	0xFDA
  7545                           fsr2l	equ	0xFD9
  7546                           status	equ	0xFD8
  7547                           
  7548 ;; *************** function _TBbarGraphs *****************
  7549 ;; Defined at:
  7550 ;;		line 44 in file "Communications.c"
  7551 ;; Parameters:    Size  Location     Type
  7552 ;;  t               2   26[COMRAM] int 
  7553 ;;  b               2   28[COMRAM] int 
  7554 ;; Auto vars:     Size  Location     Type
  7555 ;;		None
  7556 ;; Return value:  Size  Location     Type
  7557 ;;                  1    wreg      void 
  7558 ;; Registers used:
  7559 ;;		None
  7560 ;; Tracked objects:
  7561 ;;		On entry : 0/0
  7562 ;;		On exit  : 0/0
  7563 ;;		Unchanged: 0/0
  7564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7565 ;;      Params:         4       0       0       0       0       0       0
  7566 ;;      Locals:         0       0       0       0       0       0       0
  7567 ;;      Temps:          0       0       0       0       0       0       0
  7568 ;;      Totals:         4       0       0       0       0       0       0
  7569 ;;Total ram usage:        4 bytes
  7570 ;; Hardware stack levels used:    1
  7571 ;; Hardware stack levels required when called:    4
  7572 ;; This function calls:
  7573 ;;		Nothing
  7574 ;; This function is called by:
  7575 ;;		_updateComms
  7576 ;; This function uses a non-reentrant model
  7577 ;;
  7578                           
  7579                           	psect	text30
  7580  002FEC                     __ptext30:
  7581                           	opt stack 0
  7582  002FEC                     _TBbarGraphs:
  7583                           	opt stack 25
  7584                           
  7585                           ;Communications.c: 45: throttle = t;
  7586                           
  7587                           ;incstack = 0
  7588  002FEC  C01B  F0DB         	movff	TBbarGraphs@t,_throttle
  7589  002FF0  C01C  F0DC         	movff	TBbarGraphs@t+1,_throttle+1
  7590                           
  7591                           ;Communications.c: 46: brake = b;
  7592  002FF4  C01D  F0C7         	movff	TBbarGraphs@b,_brake
  7593  002FF8  C01E  F0C8         	movff	TBbarGraphs@b+1,_brake+1
  7594  002FFC  0012               	return		;funcret
  7595  002FFE                     __end_of_TBbarGraphs:
  7596                           	opt stack 0
  7597                           tosu	equ	0xFFF
  7598                           tosh	equ	0xFFE
  7599                           tosl	equ	0xFFD
  7600                           pclath	equ	0xFFA
  7601                           tblptru	equ	0xFF8
  7602                           tblptrh	equ	0xFF7
  7603                           tblptrl	equ	0xFF6
  7604                           tablat	equ	0xFF5
  7605                           prodh	equ	0xFF4
  7606                           prodl	equ	0xFF3
  7607                           intcon	equ	0xFF2
  7608                           postinc0	equ	0xFEE
  7609                           wreg	equ	0xFE8
  7610                           indf2	equ	0xFDF
  7611                           postinc2	equ	0xFDE
  7612                           postdec2	equ	0xFDD
  7613                           plusw2	equ	0xFDB
  7614                           fsr2h	equ	0xFDA
  7615                           fsr2l	equ	0xFD9
  7616                           status	equ	0xFD8
  7617                           
  7618 ;; *************** function ___lwtoft *****************
  7619 ;; Defined at:
  7620 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwtoft.c"
  7621 ;; Parameters:    Size  Location     Type
  7622 ;;  c               2   34[COMRAM] unsigned int 
  7623 ;; Auto vars:     Size  Location     Type
  7624 ;;		None
  7625 ;; Return value:  Size  Location     Type
  7626 ;;                  3   34[COMRAM] float 
  7627 ;; Registers used:
  7628 ;;		wreg, status,2, status,0, cstack
  7629 ;; Tracked objects:
  7630 ;;		On entry : 0/0
  7631 ;;		On exit  : 0/0
  7632 ;;		Unchanged: 0/0
  7633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7634 ;;      Params:         3       0       0       0       0       0       0
  7635 ;;      Locals:         0       0       0       0       0       0       0
  7636 ;;      Temps:          0       0       0       0       0       0       0
  7637 ;;      Totals:         3       0       0       0       0       0       0
  7638 ;;Total ram usage:        3 bytes
  7639 ;; Hardware stack levels used:    1
  7640 ;; Hardware stack levels required when called:    5
  7641 ;; This function calls:
  7642 ;;		___ftpack
  7643 ;; This function is called by:
  7644 ;;		_main
  7645 ;; This function uses a non-reentrant model
  7646 ;;
  7647                           
  7648                           	psect	text31
  7649  002EBA                     __ptext31:
  7650                           	opt stack 0
  7651  002EBA                     ___lwtoft:
  7652                           	opt stack 25
  7653                           
  7654                           ;incstack = 0
  7655  002EBA  C023  F01B         	movff	___lwtoft@c,___ftpack@arg
  7656  002EBE  C024  F01C         	movff	___lwtoft@c+1,___ftpack@arg+1
  7657  002EC2  6A1D               	clrf	___ftpack@arg+2,c
  7658  002EC4  0E8E               	movlw	142
  7659  002EC6  6E1E               	movwf	___ftpack@exp,c
  7660  002EC8  0E00               	movlw	0
  7661  002ECA  6E1F               	movwf	___ftpack@sign,c
  7662  002ECC  EC89  F011         	call	___ftpack	;wreg free
  7663  002ED0  C01B  F023         	movff	?___ftpack,?___lwtoft
  7664  002ED4  C01C  F024         	movff	?___ftpack+1,?___lwtoft+1
  7665  002ED8  C01D  F025         	movff	?___ftpack+2,?___lwtoft+2
  7666  002EDC  0012               	return	
  7667  002EDE                     __end_of___lwtoft:
  7668                           	opt stack 0
  7669                           tosu	equ	0xFFF
  7670                           tosh	equ	0xFFE
  7671                           tosl	equ	0xFFD
  7672                           pclath	equ	0xFFA
  7673                           tblptru	equ	0xFF8
  7674                           tblptrh	equ	0xFF7
  7675                           tblptrl	equ	0xFF6
  7676                           tablat	equ	0xFF5
  7677                           prodh	equ	0xFF4
  7678                           prodl	equ	0xFF3
  7679                           intcon	equ	0xFF2
  7680                           postinc0	equ	0xFEE
  7681                           wreg	equ	0xFE8
  7682                           indf2	equ	0xFDF
  7683                           postinc2	equ	0xFDE
  7684                           postdec2	equ	0xFDD
  7685                           plusw2	equ	0xFDB
  7686                           fsr2h	equ	0xFDA
  7687                           fsr2l	equ	0xFD9
  7688                           status	equ	0xFD8
  7689                           
  7690 ;; *************** function ___fttol *****************
  7691 ;; Defined at:
  7692 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\fttol.c"
  7693 ;; Parameters:    Size  Location     Type
  7694 ;;  f1              3    0[BANK1 ] float 
  7695 ;; Auto vars:     Size  Location     Type
  7696 ;;  lval            4   10[BANK1 ] unsigned long 
  7697 ;;  exp1            1   14[BANK1 ] unsigned char 
  7698 ;;  sign1           1    9[BANK1 ] unsigned char 
  7699 ;; Return value:  Size  Location     Type
  7700 ;;                  4    0[BANK1 ] long 
  7701 ;; Registers used:
  7702 ;;		wreg, status,2, status,0
  7703 ;; Tracked objects:
  7704 ;;		On entry : 0/0
  7705 ;;		On exit  : 0/0
  7706 ;;		Unchanged: 0/0
  7707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7708 ;;      Params:         0       0       4       0       0       0       0
  7709 ;;      Locals:         0       0       6       0       0       0       0
  7710 ;;      Temps:          0       0       5       0       0       0       0
  7711 ;;      Totals:         0       0      15       0       0       0       0
  7712 ;;Total ram usage:       15 bytes
  7713 ;; Hardware stack levels used:    1
  7714 ;; Hardware stack levels required when called:    4
  7715 ;; This function calls:
  7716 ;;		Nothing
  7717 ;; This function is called by:
  7718 ;;		_main
  7719 ;; This function uses a non-reentrant model
  7720 ;;
  7721                           
  7722                           	psect	text32
  7723  001538                     __ptext32:
  7724                           	opt stack 0
  7725  001538                     ___fttol:
  7726                           	opt stack 26
  7727                           
  7728                           ;incstack = 0
  7729  001538  C13B  F13D         	movff	___fttol@f1+2,??___fttol
  7730  00153C  0101               	movlb	1	; () banked
  7731  00153E  6B3E               	clrf	(??___fttol+1)& (0+255),b
  7732  001540  6B3F               	clrf	(??___fttol+2)& (0+255),b
  7733  001542  0101               	movlb	1	; () banked
  7734  001544  353A               	rlcf	(___fttol@f1+1)& (0+255),w,b
  7735  001546  0101               	movlb	1	; () banked
  7736  001548  373D               	rlcf	??___fttol& (0+255),f,b
  7737  00154A  E301               	bnc	u8521
  7738  00154C  813E               	bsf	(??___fttol+1)& (0+255),0,b
  7739  00154E                     u8521:
  7740  00154E  0101               	movlb	1	; () banked
  7741  001550  513D               	movf	??___fttol& (0+255),w,b
  7742  001552  0101               	movlb	1	; () banked
  7743  001554  6F47               	movwf	___fttol@exp1& (0+255),b
  7744  001556  0101               	movlb	1	; () banked
  7745  001558  5147               	movf	___fttol@exp1& (0+255),w,b
  7746  00155A  A4D8               	btfss	status,2,c
  7747  00155C  D00A               	goto	l7412
  7748                           
  7749                           ; BSR set to: 1
  7750  00155E  0E00               	movlw	0
  7751  001560  0101               	movlb	1	; () banked
  7752  001562  6F39               	movwf	?___fttol& (0+255),b
  7753  001564  0E00               	movlw	0
  7754  001566  6F3A               	movwf	(?___fttol+1)& (0+255),b
  7755  001568  0E00               	movlw	0
  7756  00156A  6F3B               	movwf	(?___fttol+2)& (0+255),b
  7757  00156C  0E00               	movlw	0
  7758  00156E  6F3C               	movwf	(?___fttol+3)& (0+255),b
  7759                           
  7760                           ; BSR set to: 1
  7761  001570  0012               	return	
  7762  001572                     l7412:
  7763                           
  7764                           ; BSR set to: 1
  7765  001572  0E17               	movlw	23
  7766  001574  0101               	movlb	1	; () banked
  7767  001576  6F3D               	movwf	??___fttol& (0+255),b
  7768  001578  C139  F13E         	movff	___fttol@f1,??___fttol+1
  7769  00157C  C13A  F13F         	movff	___fttol@f1+1,??___fttol+2
  7770  001580  C13B  F140         	movff	___fttol@f1+2,??___fttol+3
  7771  001584  0101               	movlb	1	; () banked
  7772  001586  293D               	incf	??___fttol& (0+255),w,b
  7773  001588  0101               	movlb	1	; () banked
  7774  00158A  6F41               	movwf	(??___fttol+4)& (0+255),b
  7775  00158C  D005               	goto	u8540
  7776  00158E                     u8545:
  7777  00158E  0101               	movlb	1	; () banked
  7778  001590  90D8               	bcf	status,0,c
  7779  001592  3340               	rrcf	(??___fttol+3)& (0+255),f,b
  7780  001594  333F               	rrcf	(??___fttol+2)& (0+255),f,b
  7781  001596  333E               	rrcf	(??___fttol+1)& (0+255),f,b
  7782  001598                     u8540:
  7783  001598  0101               	movlb	1	; () banked
  7784  00159A  2F41               	decfsz	(??___fttol+4)& (0+255),f,b
  7785  00159C  D7F8               	goto	u8545
  7786  00159E  0101               	movlb	1	; () banked
  7787  0015A0  513E               	movf	(??___fttol+1)& (0+255),w,b
  7788  0015A2  0101               	movlb	1	; () banked
  7789  0015A4  6F42               	movwf	___fttol@sign1& (0+255),b
  7790                           
  7791                           ; BSR set to: 1
  7792  0015A6  0101               	movlb	1	; () banked
  7793  0015A8  8F3A               	bsf	(___fttol@f1+1)& (0+255),7,b
  7794                           
  7795                           ; BSR set to: 1
  7796  0015AA  0EFF               	movlw	255
  7797  0015AC  0101               	movlb	1	; () banked
  7798  0015AE  1739               	andwf	___fttol@f1& (0+255),f,b
  7799  0015B0  0EFF               	movlw	255
  7800  0015B2  0101               	movlb	1	; () banked
  7801  0015B4  173A               	andwf	(___fttol@f1+1)& (0+255),f,b
  7802  0015B6  0E00               	movlw	0
  7803  0015B8  0101               	movlb	1	; () banked
  7804  0015BA  173B               	andwf	(___fttol@f1+2)& (0+255),f,b
  7805                           
  7806                           ; BSR set to: 1
  7807  0015BC  0101               	movlb	1	; () banked
  7808  0015BE  5139               	movf	___fttol@f1& (0+255),w,b
  7809  0015C0  0101               	movlb	1	; () banked
  7810  0015C2  6F43               	movwf	___fttol@lval& (0+255),b
  7811  0015C4  0101               	movlb	1	; () banked
  7812  0015C6  513A               	movf	(___fttol@f1+1)& (0+255),w,b
  7813  0015C8  0101               	movlb	1	; () banked
  7814  0015CA  6F44               	movwf	(___fttol@lval+1)& (0+255),b
  7815  0015CC  0101               	movlb	1	; () banked
  7816  0015CE  513B               	movf	(___fttol@f1+2)& (0+255),w,b
  7817  0015D0  0101               	movlb	1	; () banked
  7818  0015D2  6F45               	movwf	(___fttol@lval+2)& (0+255),b
  7819  0015D4  0101               	movlb	1	; () banked
  7820  0015D6  6B46               	clrf	(___fttol@lval+3)& (0+255),b
  7821                           
  7822                           ; BSR set to: 1
  7823  0015D8  0E8E               	movlw	142
  7824  0015DA  0101               	movlb	1	; () banked
  7825  0015DC  5F47               	subwf	___fttol@exp1& (0+255),f,b
  7826                           
  7827                           ; BSR set to: 1
  7828  0015DE  0101               	movlb	1	; () banked
  7829  0015E0  AF47               	btfss	___fttol@exp1& (0+255),7,b
  7830  0015E2  D01A               	goto	l7434
  7831                           
  7832                           ; BSR set to: 1
  7833  0015E4  0101               	movlb	1	; () banked
  7834  0015E6  5147               	movf	___fttol@exp1& (0+255),w,b
  7835  0015E8  0A80               	xorlw	128
  7836  0015EA  0F8F               	addlw	143
  7837  0015EC  B0D8               	btfsc	status,0,c
  7838  0015EE  D00A               	goto	l7430
  7839                           
  7840                           ; BSR set to: 1
  7841  0015F0  0E00               	movlw	0
  7842  0015F2  0101               	movlb	1	; () banked
  7843  0015F4  6F39               	movwf	?___fttol& (0+255),b
  7844  0015F6  0E00               	movlw	0
  7845  0015F8  6F3A               	movwf	(?___fttol+1)& (0+255),b
  7846  0015FA  0E00               	movlw	0
  7847  0015FC  6F3B               	movwf	(?___fttol+2)& (0+255),b
  7848  0015FE  0E00               	movlw	0
  7849  001600  6F3C               	movwf	(?___fttol+3)& (0+255),b
  7850                           
  7851                           ; BSR set to: 1
  7852  001602  0012               	return	
  7853  001604                     l7430:
  7854                           
  7855                           ; BSR set to: 1
  7856  001604  0101               	movlb	1	; () banked
  7857  001606  90D8               	bcf	status,0,c
  7858  001608  3346               	rrcf	(___fttol@lval+3)& (0+255),f,b
  7859  00160A  3345               	rrcf	(___fttol@lval+2)& (0+255),f,b
  7860  00160C  3344               	rrcf	(___fttol@lval+1)& (0+255),f,b
  7861  00160E  3343               	rrcf	___fttol@lval& (0+255),f,b
  7862                           
  7863                           ; BSR set to: 1
  7864  001610  0101               	movlb	1	; () banked
  7865  001612  3F47               	incfsz	___fttol@exp1& (0+255),f,b
  7866  001614  D7F7               	goto	l7430
  7867                           
  7868                           ; BSR set to: 1
  7869  001616  D01B               	goto	l7444
  7870  001618                     l7434:
  7871                           
  7872                           ; BSR set to: 1
  7873  001618  0E17               	movlw	23
  7874  00161A  0101               	movlb	1	; () banked
  7875  00161C  6547               	cpfsgt	___fttol@exp1& (0+255),b
  7876  00161E  D012               	goto	l7442
  7877                           
  7878                           ; BSR set to: 1
  7879  001620  0E00               	movlw	0
  7880  001622  0101               	movlb	1	; () banked
  7881  001624  6F39               	movwf	?___fttol& (0+255),b
  7882  001626  0E00               	movlw	0
  7883  001628  6F3A               	movwf	(?___fttol+1)& (0+255),b
  7884  00162A  0E00               	movlw	0
  7885  00162C  6F3B               	movwf	(?___fttol+2)& (0+255),b
  7886  00162E  0E00               	movlw	0
  7887  001630  6F3C               	movwf	(?___fttol+3)& (0+255),b
  7888                           
  7889                           ; BSR set to: 1
  7890  001632  0012               	return	
  7891  001634                     l7440:
  7892                           
  7893                           ; BSR set to: 1
  7894  001634  0101               	movlb	1	; () banked
  7895  001636  90D8               	bcf	status,0,c
  7896  001638  3743               	rlcf	___fttol@lval& (0+255),f,b
  7897  00163A  3744               	rlcf	(___fttol@lval+1)& (0+255),f,b
  7898  00163C  3745               	rlcf	(___fttol@lval+2)& (0+255),f,b
  7899  00163E  3746               	rlcf	(___fttol@lval+3)& (0+255),f,b
  7900  001640  0101               	movlb	1	; () banked
  7901  001642  0747               	decf	___fttol@exp1& (0+255),f,b
  7902  001644                     l7442:
  7903                           
  7904                           ; BSR set to: 1
  7905  001644  0101               	movlb	1	; () banked
  7906  001646  5147               	movf	___fttol@exp1& (0+255),w,b
  7907  001648  0101               	movlb	1	; () banked
  7908  00164A  A4D8               	btfss	status,2,c
  7909  00164C  D7F3               	goto	l7440
  7910  00164E                     l7444:
  7911                           
  7912                           ; BSR set to: 1
  7913  00164E  0101               	movlb	1	; () banked
  7914  001650  5142               	movf	___fttol@sign1& (0+255),w,b
  7915  001652  0101               	movlb	1	; () banked
  7916  001654  B4D8               	btfsc	status,2,c
  7917  001656  D009               	goto	l7448
  7918                           
  7919                           ; BSR set to: 1
  7920  001658  0101               	movlb	1	; () banked
  7921  00165A  1F46               	comf	(___fttol@lval+3)& (0+255),f,b
  7922  00165C  1F45               	comf	(___fttol@lval+2)& (0+255),f,b
  7923  00165E  1F44               	comf	(___fttol@lval+1)& (0+255),f,b
  7924  001660  6D43               	negf	___fttol@lval& (0+255),b
  7925  001662  0E00               	movlw	0
  7926  001664  2344               	addwfc	(___fttol@lval+1)& (0+255),f,b
  7927  001666  2345               	addwfc	(___fttol@lval+2)& (0+255),f,b
  7928  001668  2346               	addwfc	(___fttol@lval+3)& (0+255),f,b
  7929  00166A                     l7448:
  7930                           
  7931                           ; BSR set to: 1
  7932  00166A  C143  F139         	movff	___fttol@lval,?___fttol
  7933  00166E  C144  F13A         	movff	___fttol@lval+1,?___fttol+1
  7934  001672  C145  F13B         	movff	___fttol@lval+2,?___fttol+2
  7935  001676  C146  F13C         	movff	___fttol@lval+3,?___fttol+3
  7936  00167A  0012               	return	
  7937  00167C                     __end_of___fttol:
  7938                           	opt stack 0
  7939                           tosu	equ	0xFFF
  7940                           tosh	equ	0xFFE
  7941                           tosl	equ	0xFFD
  7942                           pclath	equ	0xFFA
  7943                           tblptru	equ	0xFF8
  7944                           tblptrh	equ	0xFF7
  7945                           tblptrl	equ	0xFF6
  7946                           tablat	equ	0xFF5
  7947                           prodh	equ	0xFF4
  7948                           prodl	equ	0xFF3
  7949                           intcon	equ	0xFF2
  7950                           postinc0	equ	0xFEE
  7951                           wreg	equ	0xFE8
  7952                           indf2	equ	0xFDF
  7953                           postinc2	equ	0xFDE
  7954                           postdec2	equ	0xFDD
  7955                           plusw2	equ	0xFDB
  7956                           fsr2h	equ	0xFDA
  7957                           fsr2l	equ	0xFD9
  7958                           status	equ	0xFD8
  7959                           
  7960 ;; *************** function ___ftmul *****************
  7961 ;; Defined at:
  7962 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftmul.c"
  7963 ;; Parameters:    Size  Location     Type
  7964 ;;  f1              3   37[COMRAM] float 
  7965 ;;  f2              3   40[COMRAM] float 
  7966 ;; Auto vars:     Size  Location     Type
  7967 ;;  f3_as_produc    3    4[BANK0 ] unsigned um
  7968 ;;  sign            1    8[BANK0 ] unsigned char 
  7969 ;;  cntr            1    7[BANK0 ] unsigned char 
  7970 ;;  exp             1    3[BANK0 ] unsigned char 
  7971 ;; Return value:  Size  Location     Type
  7972 ;;                  3   37[COMRAM] float 
  7973 ;; Registers used:
  7974 ;;		wreg, status,2, status,0, cstack
  7975 ;; Tracked objects:
  7976 ;;		On entry : 0/0
  7977 ;;		On exit  : 0/0
  7978 ;;		Unchanged: 0/0
  7979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7980 ;;      Params:         6       0       0       0       0       0       0
  7981 ;;      Locals:         0       6       0       0       0       0       0
  7982 ;;      Temps:          0       3       0       0       0       0       0
  7983 ;;      Totals:         6       9       0       0       0       0       0
  7984 ;;Total ram usage:       15 bytes
  7985 ;; Hardware stack levels used:    1
  7986 ;; Hardware stack levels required when called:    5
  7987 ;; This function calls:
  7988 ;;		___ftpack
  7989 ;; This function is called by:
  7990 ;;		_main
  7991 ;; This function uses a non-reentrant model
  7992 ;;
  7993                           
  7994                           	psect	text33
  7995  0017AC                     __ptext33:
  7996                           	opt stack 0
  7997  0017AC                     ___ftmul:
  7998                           	opt stack 25
  7999                           
  8000                           ; BSR set to: 1
  8001                           ;incstack = 0
  8002  0017AC  C028  F0F4         	movff	___ftmul@f1+2,??___ftmul
  8003  0017B0  0100               	movlb	0	; () banked
  8004  0017B2  6BF5               	clrf	(??___ftmul+1)& (0+255),b
  8005  0017B4  6BF6               	clrf	(??___ftmul+2)& (0+255),b
  8006  0017B6  3427               	rlcf	___ftmul@f1+1,w,c
  8007  0017B8  0100               	movlb	0	; () banked
  8008  0017BA  37F4               	rlcf	??___ftmul& (0+255),f,b
  8009  0017BC  E301               	bnc	u8461
  8010  0017BE  81F5               	bsf	(??___ftmul+1)& (0+255),0,b
  8011  0017C0                     u8461:
  8012  0017C0  0100               	movlb	0	; () banked
  8013  0017C2  51F4               	movf	??___ftmul& (0+255),w,b
  8014  0017C4  0100               	movlb	0	; () banked
  8015  0017C6  6FF7               	movwf	___ftmul@exp& (0+255),b
  8016  0017C8  0100               	movlb	0	; () banked
  8017  0017CA  51F7               	movf	___ftmul@exp& (0+255),w,b
  8018  0017CC  A4D8               	btfss	status,2,c
  8019  0017CE  D007               	goto	l7364
  8020                           
  8021                           ; BSR set to: 0
  8022  0017D0  0E00               	movlw	0
  8023  0017D2  6E26               	movwf	?___ftmul,c
  8024  0017D4  0E00               	movlw	0
  8025  0017D6  6E27               	movwf	?___ftmul+1,c
  8026  0017D8  0E00               	movlw	0
  8027  0017DA  6E28               	movwf	?___ftmul+2,c
  8028                           
  8029                           ; BSR set to: 0
  8030  0017DC  0012               	return	
  8031  0017DE                     l7364:
  8032                           
  8033                           ; BSR set to: 0
  8034  0017DE  C02B  F0F4         	movff	___ftmul@f2+2,??___ftmul
  8035  0017E2  0100               	movlb	0	; () banked
  8036  0017E4  6BF5               	clrf	(??___ftmul+1)& (0+255),b
  8037  0017E6  6BF6               	clrf	(??___ftmul+2)& (0+255),b
  8038  0017E8  342A               	rlcf	___ftmul@f2+1,w,c
  8039  0017EA  0100               	movlb	0	; () banked
  8040  0017EC  37F4               	rlcf	??___ftmul& (0+255),f,b
  8041  0017EE  E301               	bnc	u8481
  8042  0017F0  81F5               	bsf	(??___ftmul+1)& (0+255),0,b
  8043  0017F2                     u8481:
  8044  0017F2  0100               	movlb	0	; () banked
  8045  0017F4  51F4               	movf	??___ftmul& (0+255),w,b
  8046  0017F6  0100               	movlb	0	; () banked
  8047  0017F8  6FFC               	movwf	___ftmul@sign& (0+255),b
  8048  0017FA  0100               	movlb	0	; () banked
  8049  0017FC  51FC               	movf	___ftmul@sign& (0+255),w,b
  8050  0017FE  A4D8               	btfss	status,2,c
  8051  001800  D007               	goto	l7370
  8052                           
  8053                           ; BSR set to: 0
  8054  001802  0E00               	movlw	0
  8055  001804  6E26               	movwf	?___ftmul,c
  8056  001806  0E00               	movlw	0
  8057  001808  6E27               	movwf	?___ftmul+1,c
  8058  00180A  0E00               	movlw	0
  8059  00180C  6E28               	movwf	?___ftmul+2,c
  8060                           
  8061                           ; BSR set to: 0
  8062  00180E  0012               	return	
  8063  001810                     l7370:
  8064                           
  8065                           ; BSR set to: 0
  8066  001810  0100               	movlb	0	; () banked
  8067  001812  51FC               	movf	___ftmul@sign& (0+255),w,b
  8068  001814  0F7B               	addlw	123
  8069  001816  0100               	movlb	0	; () banked
  8070  001818  27F7               	addwf	___ftmul@exp& (0+255),f,b
  8071                           
  8072                           ; BSR set to: 0
  8073  00181A  C028  F0FC         	movff	___ftmul@f1+2,___ftmul@sign
  8074  00181E  502B               	movf	___ftmul@f2+2,w,c
  8075  001820  0100               	movlb	0	; () banked
  8076  001822  1BFC               	xorwf	___ftmul@sign& (0+255),f,b
  8077  001824  0E80               	movlw	128
  8078  001826  0100               	movlb	0	; () banked
  8079  001828  17FC               	andwf	___ftmul@sign& (0+255),f,b
  8080                           
  8081                           ; BSR set to: 0
  8082  00182A  8E27               	bsf	___ftmul@f1+1,7,c
  8083                           
  8084                           ; BSR set to: 0
  8085  00182C  8E2A               	bsf	___ftmul@f2+1,7,c
  8086                           
  8087                           ; BSR set to: 0
  8088  00182E  0EFF               	movlw	255
  8089  001830  1629               	andwf	___ftmul@f2,f,c
  8090  001832  0EFF               	movlw	255
  8091  001834  162A               	andwf	___ftmul@f2+1,f,c
  8092  001836  0E00               	movlw	0
  8093  001838  162B               	andwf	___ftmul@f2+2,f,c
  8094                           
  8095                           ; BSR set to: 0
  8096  00183A  0E00               	movlw	0
  8097  00183C  0100               	movlb	0	; () banked
  8098  00183E  6FF8               	movwf	___ftmul@f3_as_product& (0+255),b
  8099  001840  0E00               	movlw	0
  8100  001842  0100               	movlb	0	; () banked
  8101  001844  6FF9               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  8102  001846  0E00               	movlw	0
  8103  001848  0100               	movlb	0	; () banked
  8104  00184A  6FFA               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  8105                           
  8106                           ; BSR set to: 0
  8107  00184C  0E07               	movlw	7
  8108  00184E  0100               	movlb	0	; () banked
  8109  001850  6FFB               	movwf	___ftmul@cntr& (0+255),b
  8110  001852                     l7384:
  8111                           
  8112                           ; BSR set to: 0
  8113  001852  A026               	btfss	___ftmul@f1,0,c
  8114  001854  D009               	goto	l7388
  8115                           
  8116                           ; BSR set to: 0
  8117  001856  5029               	movf	___ftmul@f2,w,c
  8118  001858  0100               	movlb	0	; () banked
  8119  00185A  27F8               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8120  00185C  502A               	movf	___ftmul@f2+1,w,c
  8121  00185E  0100               	movlb	0	; () banked
  8122  001860  23F9               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8123  001862  502B               	movf	___ftmul@f2+2,w,c
  8124  001864  0100               	movlb	0	; () banked
  8125  001866  23FA               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8126  001868                     l7388:
  8127                           
  8128                           ; BSR set to: 0
  8129  001868  90D8               	bcf	status,0,c
  8130  00186A  3228               	rrcf	___ftmul@f1+2,f,c
  8131  00186C  3227               	rrcf	___ftmul@f1+1,f,c
  8132  00186E  3226               	rrcf	___ftmul@f1,f,c
  8133  001870  90D8               	bcf	status,0,c
  8134  001872  3629               	rlcf	___ftmul@f2,f,c
  8135  001874  362A               	rlcf	___ftmul@f2+1,f,c
  8136  001876  362B               	rlcf	___ftmul@f2+2,f,c
  8137                           
  8138                           ; BSR set to: 0
  8139  001878  0100               	movlb	0	; () banked
  8140  00187A  2FFB               	decfsz	___ftmul@cntr& (0+255),f,b
  8141  00187C  D7EA               	goto	l7384
  8142                           
  8143                           ; BSR set to: 0
  8144                           
  8145                           ; BSR set to: 0
  8146  00187E  0E09               	movlw	9
  8147  001880  0100               	movlb	0	; () banked
  8148  001882  6FFB               	movwf	___ftmul@cntr& (0+255),b
  8149  001884                     l7394:
  8150                           
  8151                           ; BSR set to: 0
  8152  001884  A026               	btfss	___ftmul@f1,0,c
  8153  001886  D009               	goto	l7398
  8154                           
  8155                           ; BSR set to: 0
  8156  001888  5029               	movf	___ftmul@f2,w,c
  8157  00188A  0100               	movlb	0	; () banked
  8158  00188C  27F8               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8159  00188E  502A               	movf	___ftmul@f2+1,w,c
  8160  001890  0100               	movlb	0	; () banked
  8161  001892  23F9               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8162  001894  502B               	movf	___ftmul@f2+2,w,c
  8163  001896  0100               	movlb	0	; () banked
  8164  001898  23FA               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8165  00189A                     l7398:
  8166                           
  8167                           ; BSR set to: 0
  8168  00189A  90D8               	bcf	status,0,c
  8169  00189C  3228               	rrcf	___ftmul@f1+2,f,c
  8170  00189E  3227               	rrcf	___ftmul@f1+1,f,c
  8171  0018A0  3226               	rrcf	___ftmul@f1,f,c
  8172  0018A2  0100               	movlb	0	; () banked
  8173  0018A4  90D8               	bcf	status,0,c
  8174  0018A6  33FA               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  8175  0018A8  33F9               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  8176  0018AA  33F8               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  8177                           
  8178                           ; BSR set to: 0
  8179  0018AC  0100               	movlb	0	; () banked
  8180  0018AE  2FFB               	decfsz	___ftmul@cntr& (0+255),f,b
  8181  0018B0  D7E9               	goto	l7394
  8182                           
  8183                           ; BSR set to: 0
  8184                           
  8185                           ; BSR set to: 0
  8186  0018B2  C0F8  F01B         	movff	___ftmul@f3_as_product,___ftpack@arg
  8187  0018B6  C0F9  F01C         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  8188  0018BA  C0FA  F01D         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  8189  0018BE  C0F7  F01E         	movff	___ftmul@exp,___ftpack@exp
  8190  0018C2  C0FC  F01F         	movff	___ftmul@sign,___ftpack@sign
  8191  0018C6  EC89  F011         	call	___ftpack	;wreg free
  8192  0018CA  C01B  F026         	movff	?___ftpack,?___ftmul
  8193  0018CE  C01C  F027         	movff	?___ftpack+1,?___ftmul+1
  8194  0018D2  C01D  F028         	movff	?___ftpack+2,?___ftmul+2
  8195  0018D6  0012               	return	
  8196  0018D8                     __end_of___ftmul:
  8197                           	opt stack 0
  8198                           tosu	equ	0xFFF
  8199                           tosh	equ	0xFFE
  8200                           tosl	equ	0xFFD
  8201                           pclath	equ	0xFFA
  8202                           tblptru	equ	0xFF8
  8203                           tblptrh	equ	0xFF7
  8204                           tblptrl	equ	0xFF6
  8205                           tablat	equ	0xFF5
  8206                           prodh	equ	0xFF4
  8207                           prodl	equ	0xFF3
  8208                           intcon	equ	0xFF2
  8209                           postinc0	equ	0xFEE
  8210                           wreg	equ	0xFE8
  8211                           indf2	equ	0xFDF
  8212                           postinc2	equ	0xFDE
  8213                           postdec2	equ	0xFDD
  8214                           plusw2	equ	0xFDB
  8215                           fsr2h	equ	0xFDA
  8216                           fsr2l	equ	0xFD9
  8217                           status	equ	0xFD8
  8218                           
  8219 ;; *************** function ___ftpack *****************
  8220 ;; Defined at:
  8221 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\float.c"
  8222 ;; Parameters:    Size  Location     Type
  8223 ;;  arg             3   26[COMRAM] unsigned um
  8224 ;;  exp             1   29[COMRAM] unsigned char 
  8225 ;;  sign            1   30[COMRAM] unsigned char 
  8226 ;; Auto vars:     Size  Location     Type
  8227 ;;		None
  8228 ;; Return value:  Size  Location     Type
  8229 ;;                  3   26[COMRAM] float 
  8230 ;; Registers used:
  8231 ;;		wreg, status,2, status,0
  8232 ;; Tracked objects:
  8233 ;;		On entry : 0/0
  8234 ;;		On exit  : 0/0
  8235 ;;		Unchanged: 0/0
  8236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8237 ;;      Params:         5       0       0       0       0       0       0
  8238 ;;      Locals:         0       0       0       0       0       0       0
  8239 ;;      Temps:          3       0       0       0       0       0       0
  8240 ;;      Totals:         8       0       0       0       0       0       0
  8241 ;;Total ram usage:        8 bytes
  8242 ;; Hardware stack levels used:    1
  8243 ;; Hardware stack levels required when called:    4
  8244 ;; This function calls:
  8245 ;;		Nothing
  8246 ;; This function is called by:
  8247 ;;		___ftmul
  8248 ;;		___lwtoft
  8249 ;; This function uses a non-reentrant model
  8250 ;;
  8251                           
  8252                           	psect	text34
  8253  002312                     __ptext34:
  8254                           	opt stack 0
  8255  002312                     ___ftpack:
  8256                           	opt stack 25
  8257                           
  8258                           ;incstack = 0
  8259  002312  501E               	movf	___ftpack@exp,w,c
  8260  002314  B4D8               	btfsc	status,2,c
  8261  002316  D005               	goto	l6998
  8262  002318  501B               	movf	___ftpack@arg,w,c
  8263  00231A  101C               	iorwf	___ftpack@arg+1,w,c
  8264  00231C  101D               	iorwf	___ftpack@arg+2,w,c
  8265  00231E  A4D8               	btfss	status,2,c
  8266  002320  D00C               	goto	l7004
  8267  002322                     l6998:
  8268  002322  0E00               	movlw	0
  8269  002324  6E1B               	movwf	?___ftpack,c
  8270  002326  0E00               	movlw	0
  8271  002328  6E1C               	movwf	?___ftpack+1,c
  8272  00232A  0E00               	movlw	0
  8273  00232C  6E1D               	movwf	?___ftpack+2,c
  8274  00232E  0012               	return	
  8275  002330                     l7002:
  8276  002330  2A1E               	incf	___ftpack@exp,f,c
  8277  002332  90D8               	bcf	status,0,c
  8278  002334  321D               	rrcf	___ftpack@arg+2,f,c
  8279  002336  321C               	rrcf	___ftpack@arg+1,f,c
  8280  002338  321B               	rrcf	___ftpack@arg,f,c
  8281  00233A                     l7004:
  8282  00233A  0E00               	movlw	0
  8283  00233C  141B               	andwf	___ftpack@arg,w,c
  8284  00233E  6E20               	movwf	??___ftpack& (0+255),c
  8285  002340  0E00               	movlw	0
  8286  002342  141C               	andwf	___ftpack@arg+1,w,c
  8287  002344  6E21               	movwf	(??___ftpack+1)& (0+255),c
  8288  002346  0EFE               	movlw	254
  8289  002348  141D               	andwf	___ftpack@arg+2,w,c
  8290  00234A  6E22               	movwf	(??___ftpack+2)& (0+255),c
  8291  00234C  5020               	movf	??___ftpack,w,c
  8292  00234E  1021               	iorwf	??___ftpack+1,w,c
  8293  002350  1022               	iorwf	??___ftpack+2,w,c
  8294  002352  B4D8               	btfsc	status,2,c
  8295  002354  D00C               	goto	l7010
  8296  002356  D7EC               	goto	l7002
  8297  002358                     l7006:
  8298  002358  2A1E               	incf	___ftpack@exp,f,c
  8299  00235A  0E01               	movlw	1
  8300  00235C  261B               	addwf	___ftpack@arg,f,c
  8301  00235E  0E00               	movlw	0
  8302  002360  221C               	addwfc	___ftpack@arg+1,f,c
  8303  002362  0E00               	movlw	0
  8304  002364  221D               	addwfc	___ftpack@arg+2,f,c
  8305  002366  90D8               	bcf	status,0,c
  8306  002368  321D               	rrcf	___ftpack@arg+2,f,c
  8307  00236A  321C               	rrcf	___ftpack@arg+1,f,c
  8308  00236C  321B               	rrcf	___ftpack@arg,f,c
  8309  00236E                     l7010:
  8310  00236E  0E00               	movlw	0
  8311  002370  141B               	andwf	___ftpack@arg,w,c
  8312  002372  6E20               	movwf	??___ftpack& (0+255),c
  8313  002374  0E00               	movlw	0
  8314  002376  141C               	andwf	___ftpack@arg+1,w,c
  8315  002378  6E21               	movwf	(??___ftpack+1)& (0+255),c
  8316  00237A  0EFF               	movlw	255
  8317  00237C  141D               	andwf	___ftpack@arg+2,w,c
  8318  00237E  6E22               	movwf	(??___ftpack+2)& (0+255),c
  8319  002380  5020               	movf	??___ftpack,w,c
  8320  002382  1021               	iorwf	??___ftpack+1,w,c
  8321  002384  1022               	iorwf	??___ftpack+2,w,c
  8322  002386  B4D8               	btfsc	status,2,c
  8323  002388  D006               	goto	l7014
  8324  00238A  D7E6               	goto	l7006
  8325  00238C                     l7012:
  8326  00238C  061E               	decf	___ftpack@exp,f,c
  8327  00238E  90D8               	bcf	status,0,c
  8328  002390  361B               	rlcf	___ftpack@arg,f,c
  8329  002392  361C               	rlcf	___ftpack@arg+1,f,c
  8330  002394  361D               	rlcf	___ftpack@arg+2,f,c
  8331  002396                     l7014:
  8332  002396  BE1C               	btfsc	___ftpack@arg+1,7,c
  8333  002398  D003               	goto	l1533
  8334  00239A  0E02               	movlw	2
  8335  00239C  601E               	cpfslt	___ftpack@exp,c
  8336  00239E  D7F6               	goto	l7012
  8337  0023A0                     l1533:
  8338  0023A0  A01E               	btfss	___ftpack@exp,0,c
  8339  0023A2  9E1C               	bcf	___ftpack@arg+1,7,c
  8340  0023A4  90D8               	bcf	status,0,c
  8341  0023A6  321E               	rrcf	___ftpack@exp,f,c
  8342  0023A8  501E               	movf	___ftpack@exp,w,c
  8343  0023AA  121D               	iorwf	___ftpack@arg+2,f,c
  8344  0023AC  501F               	movf	___ftpack@sign,w,c
  8345  0023AE  A4D8               	btfss	status,2,c
  8346  0023B0  8E1D               	bsf	___ftpack@arg+2,7,c
  8347  0023B2  C01B  F01B         	movff	___ftpack@arg,?___ftpack
  8348  0023B6  C01C  F01C         	movff	___ftpack@arg+1,?___ftpack+1
  8349  0023BA  C01D  F01D         	movff	___ftpack@arg+2,?___ftpack+2
  8350  0023BE  0012               	return	
  8351  0023C0                     __end_of___ftpack:
  8352                           	opt stack 0
  8353                           tosu	equ	0xFFF
  8354                           tosh	equ	0xFFE
  8355                           tosl	equ	0xFFD
  8356                           pclath	equ	0xFFA
  8357                           tblptru	equ	0xFF8
  8358                           tblptrh	equ	0xFF7
  8359                           tblptrl	equ	0xFF6
  8360                           tablat	equ	0xFF5
  8361                           prodh	equ	0xFF4
  8362                           prodl	equ	0xFF3
  8363                           intcon	equ	0xFF2
  8364                           postinc0	equ	0xFEE
  8365                           wreg	equ	0xFE8
  8366                           indf2	equ	0xFDF
  8367                           postinc2	equ	0xFDE
  8368                           postdec2	equ	0xFDD
  8369                           plusw2	equ	0xFDB
  8370                           fsr2h	equ	0xFDA
  8371                           fsr2l	equ	0xFD9
  8372                           status	equ	0xFD8
  8373                           
  8374 ;; *************** function _SYSTEM_Initialize *****************
  8375 ;; Defined at:
  8376 ;;		line 112 in file "mcc_generated_files/mcc.c"
  8377 ;; Parameters:    Size  Location     Type
  8378 ;;		None
  8379 ;; Auto vars:     Size  Location     Type
  8380 ;;		None
  8381 ;; Return value:  Size  Location     Type
  8382 ;;                  1    wreg      void 
  8383 ;; Registers used:
  8384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8385 ;; Tracked objects:
  8386 ;;		On entry : 0/0
  8387 ;;		On exit  : 0/0
  8388 ;;		Unchanged: 0/0
  8389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8390 ;;      Params:         0       0       0       0       0       0       0
  8391 ;;      Locals:         0       0       0       0       0       0       0
  8392 ;;      Temps:          0       0       0       0       0       0       0
  8393 ;;      Totals:         0       0       0       0       0       0       0
  8394 ;;Total ram usage:        0 bytes
  8395 ;; Hardware stack levels used:    1
  8396 ;; Hardware stack levels required when called:    7
  8397 ;; This function calls:
  8398 ;;		_ADC_Initialize
  8399 ;;		_EUSART1_Initialize
  8400 ;;		_I2C1_Initialize
  8401 ;;		_INTERRUPT_Initialize
  8402 ;;		_OSCILLATOR_Initialize
  8403 ;;		_PIN_MANAGER_Initialize
  8404 ;;		_TMR0_Initialize
  8405 ;;		_TMR2_Initialize
  8406 ;;		_begin
  8407 ;; This function is called by:
  8408 ;;		_main
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412                           	psect	text35
  8413  0028C4                     __ptext35:
  8414                           	opt stack 0
  8415  0028C4                     _SYSTEM_Initialize:
  8416                           	opt stack 23
  8417                           
  8418                           ;mcc.c: 114: OSCILLATOR_Initialize();
  8419                           
  8420                           ;incstack = 0
  8421  0028C4  EC16  F018         	call	_OSCILLATOR_Initialize	;wreg free
  8422                           
  8423                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  8424  0028C8  EC64  F015         	call	_PIN_MANAGER_Initialize	;wreg free
  8425                           
  8426                           ;mcc.c: 116: INTERRUPT_Initialize();
  8427  0028CC  ECFF  F017         	call	_INTERRUPT_Initialize	;wreg free
  8428                           
  8429                           ;mcc.c: 117: ADC_Initialize();
  8430  0028D0  ECC9  F017         	call	_ADC_Initialize	;wreg free
  8431                           
  8432                           ;mcc.c: 118: TMR0_Initialize();
  8433  0028D4  EC8F  F017         	call	_TMR0_Initialize	;wreg free
  8434                           
  8435                           ;mcc.c: 119: TMR2_Initialize();
  8436  0028D8  EC6F  F017         	call	_TMR2_Initialize	;wreg free
  8437                           
  8438                           ;mcc.c: 120: EUSART1_Initialize();
  8439  0028DC  EC5D  F016         	call	_EUSART1_Initialize	;wreg free
  8440                           
  8441                           ;mcc.c: 121: begin(receiveArray, sizeof (receiveArray), 3, 0, Send_put, Receive_get, Rec
      +                          eive_available, Receive_peek);
  8442  0028E0  0E00               	movlw	low _receiveArray
  8443  0028E2  0101               	movlb	1	; () banked
  8444  0028E4  6F39               	movwf	begin@ptr& (0+255),b
  8445  0028E6  0E01               	movlw	high _receiveArray
  8446  0028E8  0101               	movlb	1	; () banked
  8447  0028EA  6F3A               	movwf	(begin@ptr+1)& (0+255),b
  8448  0028EC  0E28               	movlw	40
  8449  0028EE  0101               	movlb	1	; () banked
  8450  0028F0  6F3B               	movwf	begin@maxSize& (0+255),b
  8451  0028F2  0E03               	movlw	3
  8452  0028F4  0101               	movlb	1	; () banked
  8453  0028F6  6F3C               	movwf	begin@givenAddress& (0+255),b
  8454  0028F8  0E00               	movlw	0
  8455  0028FA  0101               	movlb	1	; () banked
  8456  0028FC  6F3D               	movwf	begin@error& (0+255),b
  8457  0028FE  0E96               	movlw	low _Send_put
  8458  002900  0101               	movlb	1	; () banked
  8459  002902  6F3E               	movwf	begin@stufftosend& (0+255),b
  8460  002904  0E2D               	movlw	high _Send_put
  8461  002906  0101               	movlb	1	; () banked
  8462  002908  6F3F               	movwf	(begin@stufftosend+1)& (0+255),b
  8463  00290A  0E1E               	movlw	low _Receive_get
  8464  00290C  0101               	movlb	1	; () banked
  8465  00290E  6F40               	movwf	begin@stufftoreceive& (0+255),b
  8466  002910  0E30               	movlw	high _Receive_get
  8467  002912  0101               	movlb	1	; () banked
  8468  002914  6F41               	movwf	(begin@stufftoreceive+1)& (0+255),b
  8469  002916  0EAA               	movlw	low _Receive_available
  8470  002918  0101               	movlb	1	; () banked
  8471  00291A  6F42               	movwf	begin@stuffavailable& (0+255),b
  8472  00291C  0E2F               	movlw	high _Receive_available
  8473  00291E  0101               	movlb	1	; () banked
  8474  002920  6F43               	movwf	(begin@stuffavailable+1)& (0+255),b
  8475  002922  0E10               	movlw	low _Receive_peek
  8476  002924  0101               	movlb	1	; () banked
  8477  002926  6F44               	movwf	begin@stuffpeek& (0+255),b
  8478  002928  0E30               	movlw	high _Receive_peek
  8479  00292A  0101               	movlb	1	; () banked
  8480  00292C  6F45               	movwf	(begin@stuffpeek+1)& (0+255),b
  8481  00292E  EC35  F015         	call	_begin	;wreg free
  8482                           
  8483                           ;mcc.c: 122: I2C1_Initialize();
  8484  002932  EC3F  F016         	call	_I2C1_Initialize	;wreg free
  8485  002936  0012               	return		;funcret
  8486  002938                     __end_of_SYSTEM_Initialize:
  8487                           	opt stack 0
  8488                           tosu	equ	0xFFF
  8489                           tosh	equ	0xFFE
  8490                           tosl	equ	0xFFD
  8491                           pclath	equ	0xFFA
  8492                           tblptru	equ	0xFF8
  8493                           tblptrh	equ	0xFF7
  8494                           tblptrl	equ	0xFF6
  8495                           tablat	equ	0xFF5
  8496                           prodh	equ	0xFF4
  8497                           prodl	equ	0xFF3
  8498                           intcon	equ	0xFF2
  8499                           postinc0	equ	0xFEE
  8500                           wreg	equ	0xFE8
  8501                           indf2	equ	0xFDF
  8502                           postinc2	equ	0xFDE
  8503                           postdec2	equ	0xFDD
  8504                           plusw2	equ	0xFDB
  8505                           fsr2h	equ	0xFDA
  8506                           fsr2l	equ	0xFD9
  8507                           status	equ	0xFD8
  8508                           
  8509 ;; *************** function _begin *****************
  8510 ;; Defined at:
  8511 ;;		line 18 in file "FastTransfer.c"
  8512 ;; Parameters:    Size  Location     Type
  8513 ;;  ptr             2    0[BANK1 ] PTR volatile int 
  8514 ;;		 -> receiveArray(40), 
  8515 ;;  maxSize         1    2[BANK1 ] unsigned char 
  8516 ;;  givenAddress    1    3[BANK1 ] unsigned char 
  8517 ;;  error           1    4[BANK1 ] unsigned char 
  8518 ;;  stufftosend     2    5[BANK1 ] PTR FTN(unsigned char ,)
  8519 ;;		 -> Send_put(1), 
  8520 ;;  stufftorecei    2    7[BANK1 ] PTR FTN()unsigned char 
  8521 ;;		 -> Receive_get(1), 
  8522 ;;  stuffavailab    2    9[BANK1 ] PTR FTN()int 
  8523 ;;		 -> Receive_available(2), 
  8524 ;;  stuffpeek       2   11[BANK1 ] PTR FTN()unsigned char 
  8525 ;;		 -> Receive_peek(1), 
  8526 ;; Auto vars:     Size  Location     Type
  8527 ;;		None
  8528 ;; Return value:  Size  Location     Type
  8529 ;;                  1    wreg      void 
  8530 ;; Registers used:
  8531 ;;		wreg, status,2, status,0, cstack
  8532 ;; Tracked objects:
  8533 ;;		On entry : 0/0
  8534 ;;		On exit  : 0/0
  8535 ;;		Unchanged: 0/0
  8536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8537 ;;      Params:         0       0      13       0       0       0       0
  8538 ;;      Locals:         0       0       0       0       0       0       0
  8539 ;;      Temps:          0       0       0       0       0       0       0
  8540 ;;      Totals:         0       0      13       0       0       0       0
  8541 ;;Total ram usage:       13 bytes
  8542 ;; Hardware stack levels used:    1
  8543 ;; Hardware stack levels required when called:    5
  8544 ;; This function calls:
  8545 ;;		___awdiv
  8546 ;; This function is called by:
  8547 ;;		_SYSTEM_Initialize
  8548 ;; This function uses a non-reentrant model
  8549 ;;
  8550                           
  8551                           	psect	text36
  8552  002A6A                     __ptext36:
  8553                           	opt stack 0
  8554  002A6A                     _begin:
  8555                           	opt stack 24
  8556                           
  8557                           ;FastTransfer.c: 19: receiveArrayAddress = ptr;
  8558                           
  8559                           ;incstack = 0
  8560  002A6A  C139  F0D5         	movff	begin@ptr,_receiveArrayAddress
  8561  002A6E  C13A  F0D6         	movff	begin@ptr+1,_receiveArrayAddress+1
  8562                           
  8563                           ;FastTransfer.c: 20: moduleAddress = givenAddress;
  8564  002A72  C13C  F03B         	movff	begin@givenAddress,_moduleAddress
  8565                           
  8566                           ;FastTransfer.c: 21: serial_write = stufftosend;
  8567  002A76  C13E  F032         	movff	begin@stufftosend,_serial_write
  8568  002A7A  C13F  F033         	movff	begin@stufftosend+1,_serial_write+1
  8569                           
  8570                           ;FastTransfer.c: 22: serial_available = stuffavailable;
  8571  002A7E  C142  F02E         	movff	begin@stuffavailable,_serial_available
  8572  002A82  C143  F02F         	movff	begin@stuffavailable+1,_serial_available+1
  8573                           
  8574                           ;FastTransfer.c: 23: serial_peek = stuffpeek;
  8575  002A86  C144  F0D9         	movff	begin@stuffpeek,_serial_peek
  8576  002A8A  C145  F0DA         	movff	begin@stuffpeek+1,_serial_peek+1
  8577                           
  8578                           ;FastTransfer.c: 24: serial_read = stufftoreceive;
  8579  002A8E  C140  F030         	movff	begin@stufftoreceive,_serial_read
  8580  002A92  C141  F031         	movff	begin@stufftoreceive+1,_serial_read+1
  8581                           
  8582                           ;FastTransfer.c: 25: maxDataAddress = maxSize / 2;
  8583  002A96  C13B  F01B         	movff	begin@maxSize,___awdiv@dividend
  8584  002A9A  6A1C               	clrf	___awdiv@dividend+1,c
  8585  002A9C  0E00               	movlw	0
  8586  002A9E  6E1E               	movwf	___awdiv@divisor+1,c
  8587  002AA0  0E02               	movlw	2
  8588  002AA2  6E1D               	movwf	___awdiv@divisor,c
  8589  002AA4  ECAA  F013         	call	___awdiv	;wreg free
  8590  002AA8  501B               	movf	?___awdiv,w,c
  8591  002AAA  6E3A               	movwf	_maxDataAddress,c
  8592                           
  8593                           ;FastTransfer.c: 26: sendStructAddress = (unsigned char*) & ring_buffer;
  8594  002AAC  0E00               	movlw	low _ring_buffer
  8595  002AAE  0100               	movlb	0	; () banked
  8596  002AB0  6FD7               	movwf	_sendStructAddress& (0+255),b
  8597  002AB2  0E02               	movlw	high _ring_buffer
  8598  002AB4  0100               	movlb	0	; () banked
  8599  002AB6  6FD8               	movwf	(_sendStructAddress+1)& (0+255),b
  8600                           
  8601                           ; BSR set to: 0
  8602                           ;FastTransfer.c: 27: AKNAKsend = error;
  8603  002AB8  C13D  F036         	movff	begin@error,_AKNAKsend
  8604                           
  8605                           ; BSR set to: 0
  8606                           ;FastTransfer.c: 28: alignErrorCounter = 0;
  8607  002ABC  0E00               	movlw	0
  8608  002ABE  0100               	movlb	0	; () banked
  8609  002AC0  6FC6               	movwf	(_alignErrorCounter+1)& (0+255),b
  8610  002AC2  0E00               	movlw	0
  8611  002AC4  6FC5               	movwf	_alignErrorCounter& (0+255),b
  8612                           
  8613                           ; BSR set to: 0
  8614  002AC6  0012               	return		;funcret
  8615  002AC8                     __end_of_begin:
  8616                           	opt stack 0
  8617                           tosu	equ	0xFFF
  8618                           tosh	equ	0xFFE
  8619                           tosl	equ	0xFFD
  8620                           pclath	equ	0xFFA
  8621                           tblptru	equ	0xFF8
  8622                           tblptrh	equ	0xFF7
  8623                           tblptrl	equ	0xFF6
  8624                           tablat	equ	0xFF5
  8625                           prodh	equ	0xFF4
  8626                           prodl	equ	0xFF3
  8627                           intcon	equ	0xFF2
  8628                           postinc0	equ	0xFEE
  8629                           wreg	equ	0xFE8
  8630                           indf2	equ	0xFDF
  8631                           postinc2	equ	0xFDE
  8632                           postdec2	equ	0xFDD
  8633                           plusw2	equ	0xFDB
  8634                           fsr2h	equ	0xFDA
  8635                           fsr2l	equ	0xFD9
  8636                           status	equ	0xFD8
  8637                           
  8638 ;; *************** function _TMR2_Initialize *****************
  8639 ;; Defined at:
  8640 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  8641 ;; Parameters:    Size  Location     Type
  8642 ;;		None
  8643 ;; Auto vars:     Size  Location     Type
  8644 ;;		None
  8645 ;; Return value:  Size  Location     Type
  8646 ;;                  2  352[None  ] int 
  8647 ;; Registers used:
  8648 ;;		wreg, status,2, status,0, cstack
  8649 ;; Tracked objects:
  8650 ;;		On entry : 0/0
  8651 ;;		On exit  : 0/0
  8652 ;;		Unchanged: 0/0
  8653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8654 ;;      Params:         0       0       0       0       0       0       0
  8655 ;;      Locals:         0       0       0       0       0       0       0
  8656 ;;      Temps:          0       0       0       0       0       0       0
  8657 ;;      Totals:         0       0       0       0       0       0       0
  8658 ;;Total ram usage:        0 bytes
  8659 ;; Hardware stack levels used:    1
  8660 ;; Hardware stack levels required when called:    5
  8661 ;; This function calls:
  8662 ;;		_TMR2_SetInterruptHandler
  8663 ;;		_TMR2_StartTimer
  8664 ;; This function is called by:
  8665 ;;		_SYSTEM_Initialize
  8666 ;; This function uses a non-reentrant model
  8667 ;;
  8668                           
  8669                           	psect	text37
  8670  002EDE                     __ptext37:
  8671                           	opt stack 0
  8672  002EDE                     _TMR2_Initialize:
  8673                           	opt stack 24
  8674                           
  8675                           ;tmr2.c: 67: T2CON = 0x7E;
  8676                           
  8677                           ; BSR set to: 0
  8678                           ;incstack = 0
  8679  002EDE  0E7E               	movlw	126
  8680  002EE0  6EBA               	movwf	4026,c	;volatile
  8681                           
  8682                           ;tmr2.c: 70: PR2 = 0x30;
  8683  002EE2  0E30               	movlw	48
  8684  002EE4  6EBB               	movwf	4027,c	;volatile
  8685                           
  8686                           ;tmr2.c: 73: TMR2 = 0x00;
  8687  002EE6  0E00               	movlw	0
  8688  002EE8  6EBC               	movwf	4028,c	;volatile
  8689                           
  8690                           ;tmr2.c: 76: PIR1bits.TMR2IF = 0;
  8691  002EEA  929E               	bcf	3998,1,c	;volatile
  8692                           
  8693                           ;tmr2.c: 79: PIE1bits.TMR2IE = 1;
  8694  002EEC  829D               	bsf	3997,1,c	;volatile
  8695                           
  8696                           ;tmr2.c: 82: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  8697  002EEE  0E64               	movlw	low _TMR2_DefaultInterruptHandler
  8698  002EF0  6E1B               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  8699  002EF2  0E30               	movlw	high _TMR2_DefaultInterruptHandler
  8700  002EF4  6E1C               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  8701  002EF6  EC23  F018         	call	_TMR2_SetInterruptHandler	;wreg free
  8702                           
  8703                           ;tmr2.c: 85: TMR2_StartTimer();
  8704  002EFA  EC2C  F018         	call	_TMR2_StartTimer	;wreg free
  8705  002EFE  0012               	return		;funcret
  8706  002F00                     __end_of_TMR2_Initialize:
  8707                           	opt stack 0
  8708                           tosu	equ	0xFFF
  8709                           tosh	equ	0xFFE
  8710                           tosl	equ	0xFFD
  8711                           pclath	equ	0xFFA
  8712                           tblptru	equ	0xFF8
  8713                           tblptrh	equ	0xFF7
  8714                           tblptrl	equ	0xFF6
  8715                           tablat	equ	0xFF5
  8716                           prodh	equ	0xFF4
  8717                           prodl	equ	0xFF3
  8718                           intcon	equ	0xFF2
  8719                           postinc0	equ	0xFEE
  8720                           wreg	equ	0xFE8
  8721                           indf2	equ	0xFDF
  8722                           postinc2	equ	0xFDE
  8723                           postdec2	equ	0xFDD
  8724                           plusw2	equ	0xFDB
  8725                           fsr2h	equ	0xFDA
  8726                           fsr2l	equ	0xFD9
  8727                           status	equ	0xFD8
  8728                           
  8729 ;; *************** function _TMR2_StartTimer *****************
  8730 ;; Defined at:
  8731 ;;		line 88 in file "mcc_generated_files/tmr2.c"
  8732 ;; Parameters:    Size  Location     Type
  8733 ;;		None
  8734 ;; Auto vars:     Size  Location     Type
  8735 ;;		None
  8736 ;; Return value:  Size  Location     Type
  8737 ;;                  1    wreg      void 
  8738 ;; Registers used:
  8739 ;;		None
  8740 ;; Tracked objects:
  8741 ;;		On entry : 0/0
  8742 ;;		On exit  : 0/0
  8743 ;;		Unchanged: 0/0
  8744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8745 ;;      Params:         0       0       0       0       0       0       0
  8746 ;;      Locals:         0       0       0       0       0       0       0
  8747 ;;      Temps:          0       0       0       0       0       0       0
  8748 ;;      Totals:         0       0       0       0       0       0       0
  8749 ;;Total ram usage:        0 bytes
  8750 ;; Hardware stack levels used:    1
  8751 ;; Hardware stack levels required when called:    4
  8752 ;; This function calls:
  8753 ;;		Nothing
  8754 ;; This function is called by:
  8755 ;;		_TMR2_Initialize
  8756 ;; This function uses a non-reentrant model
  8757 ;;
  8758                           
  8759                           	psect	text38
  8760  003058                     __ptext38:
  8761                           	opt stack 0
  8762  003058                     _TMR2_StartTimer:
  8763                           	opt stack 24
  8764                           
  8765                           ;tmr2.c: 91: T2CONbits.TMR2ON = 1;
  8766                           
  8767                           ;incstack = 0
  8768  003058  84BA               	bsf	4026,2,c	;volatile
  8769  00305A  0012               	return		;funcret
  8770  00305C                     __end_of_TMR2_StartTimer:
  8771                           	opt stack 0
  8772                           tosu	equ	0xFFF
  8773                           tosh	equ	0xFFE
  8774                           tosl	equ	0xFFD
  8775                           pclath	equ	0xFFA
  8776                           tblptru	equ	0xFF8
  8777                           tblptrh	equ	0xFF7
  8778                           tblptrl	equ	0xFF6
  8779                           tablat	equ	0xFF5
  8780                           prodh	equ	0xFF4
  8781                           prodl	equ	0xFF3
  8782                           intcon	equ	0xFF2
  8783                           postinc0	equ	0xFEE
  8784                           wreg	equ	0xFE8
  8785                           indf2	equ	0xFDF
  8786                           postinc2	equ	0xFDE
  8787                           postdec2	equ	0xFDD
  8788                           plusw2	equ	0xFDB
  8789                           fsr2h	equ	0xFDA
  8790                           fsr2l	equ	0xFD9
  8791                           status	equ	0xFD8
  8792                           
  8793 ;; *************** function _TMR2_SetInterruptHandler *****************
  8794 ;; Defined at:
  8795 ;;		line 293 in file "mcc_generated_files/tmr2.c"
  8796 ;; Parameters:    Size  Location     Type
  8797 ;;  InterruptHan    2   26[COMRAM] PTR void 
  8798 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  8799 ;; Auto vars:     Size  Location     Type
  8800 ;;		None
  8801 ;; Return value:  Size  Location     Type
  8802 ;;                  1    wreg      void 
  8803 ;; Registers used:
  8804 ;;		wreg, status,2, status,0
  8805 ;; Tracked objects:
  8806 ;;		On entry : 0/0
  8807 ;;		On exit  : 0/0
  8808 ;;		Unchanged: 0/0
  8809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8810 ;;      Params:         2       0       0       0       0       0       0
  8811 ;;      Locals:         0       0       0       0       0       0       0
  8812 ;;      Temps:          0       0       0       0       0       0       0
  8813 ;;      Totals:         2       0       0       0       0       0       0
  8814 ;;Total ram usage:        2 bytes
  8815 ;; Hardware stack levels used:    1
  8816 ;; Hardware stack levels required when called:    4
  8817 ;; This function calls:
  8818 ;;		Nothing
  8819 ;; This function is called by:
  8820 ;;		_TMR2_Initialize
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824                           	psect	text39
  8825  003046                     __ptext39:
  8826                           	opt stack 0
  8827  003046                     _TMR2_SetInterruptHandler:
  8828                           	opt stack 24
  8829                           
  8830                           ;tmr2.c: 294: TMR2_InterruptHandler = InterruptHandler;
  8831                           
  8832                           ;incstack = 0
  8833  003046  C01B  F0FE         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  8834  00304A  C01C  F0FF         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  8835  00304E  0012               	return		;funcret
  8836  003050                     __end_of_TMR2_SetInterruptHandler:
  8837                           	opt stack 0
  8838                           tosu	equ	0xFFF
  8839                           tosh	equ	0xFFE
  8840                           tosl	equ	0xFFD
  8841                           pclath	equ	0xFFA
  8842                           tblptru	equ	0xFF8
  8843                           tblptrh	equ	0xFF7
  8844                           tblptrl	equ	0xFF6
  8845                           tablat	equ	0xFF5
  8846                           prodh	equ	0xFF4
  8847                           prodl	equ	0xFF3
  8848                           intcon	equ	0xFF2
  8849                           postinc0	equ	0xFEE
  8850                           wreg	equ	0xFE8
  8851                           indf2	equ	0xFDF
  8852                           postinc2	equ	0xFDE
  8853                           postdec2	equ	0xFDD
  8854                           plusw2	equ	0xFDB
  8855                           fsr2h	equ	0xFDA
  8856                           fsr2l	equ	0xFD9
  8857                           status	equ	0xFD8
  8858                           
  8859 ;; *************** function _TMR0_Initialize *****************
  8860 ;; Defined at:
  8861 ;;		line 22 in file "mcc_generated_files/tmr0.c"
  8862 ;; Parameters:    Size  Location     Type
  8863 ;;		None
  8864 ;; Auto vars:     Size  Location     Type
  8865 ;;		None
  8866 ;; Return value:  Size  Location     Type
  8867 ;;                  1    wreg      void 
  8868 ;; Registers used:
  8869 ;;		wreg, status,2, cstack
  8870 ;; Tracked objects:
  8871 ;;		On entry : 0/0
  8872 ;;		On exit  : 0/0
  8873 ;;		Unchanged: 0/0
  8874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8875 ;;      Params:         0       0       0       0       0       0       0
  8876 ;;      Locals:         0       0       0       0       0       0       0
  8877 ;;      Temps:          0       0       0       0       0       0       0
  8878 ;;      Totals:         0       0       0       0       0       0       0
  8879 ;;Total ram usage:        0 bytes
  8880 ;; Hardware stack levels used:    1
  8881 ;; Hardware stack levels required when called:    5
  8882 ;; This function calls:
  8883 ;;		_TMR0_StartTimer
  8884 ;; This function is called by:
  8885 ;;		_SYSTEM_Initialize
  8886 ;; This function uses a non-reentrant model
  8887 ;;
  8888                           
  8889                           	psect	text40
  8890  002F1E                     __ptext40:
  8891                           	opt stack 0
  8892  002F1E                     _TMR0_Initialize:
  8893                           	opt stack 24
  8894                           
  8895                           ;tmr0.c: 26: T0CON = 0x94;
  8896                           
  8897                           ;incstack = 0
  8898  002F1E  0E94               	movlw	148
  8899  002F20  6ED5               	movwf	4053,c	;volatile
  8900                           
  8901                           ;tmr0.c: 29: TMR0H = 0xCF;
  8902  002F22  0ECF               	movlw	207
  8903  002F24  6ED7               	movwf	4055,c	;volatile
  8904                           
  8905                           ;tmr0.c: 32: TMR0L = 0x2C;
  8906  002F26  0E2C               	movlw	44
  8907  002F28  6ED6               	movwf	4054,c	;volatile
  8908                           
  8909                           ;tmr0.c: 35: timer0ReloadVal16bit = 53036;
  8910  002F2A  0ECF               	movlw	207
  8911  002F2C  6E43               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  8912  002F2E  0E2C               	movlw	44
  8913  002F30  6E42               	movwf	_timer0ReloadVal16bit,c	;volatile
  8914                           
  8915                           ;tmr0.c: 38: INTCONbits.TMR0IF = 0;
  8916  002F32  94F2               	bcf	intcon,2,c	;volatile
  8917                           
  8918                           ;tmr0.c: 41: INTCONbits.TMR0IE = 1;
  8919  002F34  8AF2               	bsf	intcon,5,c	;volatile
  8920                           
  8921                           ;tmr0.c: 44: TMR0_StartTimer();
  8922  002F36  EC2E  F018         	call	_TMR0_StartTimer	;wreg free
  8923  002F3A  0012               	return		;funcret
  8924  002F3C                     __end_of_TMR0_Initialize:
  8925                           	opt stack 0
  8926                           tosu	equ	0xFFF
  8927                           tosh	equ	0xFFE
  8928                           tosl	equ	0xFFD
  8929                           pclath	equ	0xFFA
  8930                           tblptru	equ	0xFF8
  8931                           tblptrh	equ	0xFF7
  8932                           tblptrl	equ	0xFF6
  8933                           tablat	equ	0xFF5
  8934                           prodh	equ	0xFF4
  8935                           prodl	equ	0xFF3
  8936                           intcon	equ	0xFF2
  8937                           postinc0	equ	0xFEE
  8938                           wreg	equ	0xFE8
  8939                           indf2	equ	0xFDF
  8940                           postinc2	equ	0xFDE
  8941                           postdec2	equ	0xFDD
  8942                           plusw2	equ	0xFDB
  8943                           fsr2h	equ	0xFDA
  8944                           fsr2l	equ	0xFD9
  8945                           status	equ	0xFD8
  8946                           
  8947 ;; *************** function _TMR0_StartTimer *****************
  8948 ;; Defined at:
  8949 ;;		line 47 in file "mcc_generated_files/tmr0.c"
  8950 ;; Parameters:    Size  Location     Type
  8951 ;;		None
  8952 ;; Auto vars:     Size  Location     Type
  8953 ;;		None
  8954 ;; Return value:  Size  Location     Type
  8955 ;;                  1    wreg      void 
  8956 ;; Registers used:
  8957 ;;		None
  8958 ;; Tracked objects:
  8959 ;;		On entry : 0/0
  8960 ;;		On exit  : 0/0
  8961 ;;		Unchanged: 0/0
  8962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8963 ;;      Params:         0       0       0       0       0       0       0
  8964 ;;      Locals:         0       0       0       0       0       0       0
  8965 ;;      Temps:          0       0       0       0       0       0       0
  8966 ;;      Totals:         0       0       0       0       0       0       0
  8967 ;;Total ram usage:        0 bytes
  8968 ;; Hardware stack levels used:    1
  8969 ;; Hardware stack levels required when called:    4
  8970 ;; This function calls:
  8971 ;;		Nothing
  8972 ;; This function is called by:
  8973 ;;		_TMR0_Initialize
  8974 ;; This function uses a non-reentrant model
  8975 ;;
  8976                           
  8977                           	psect	text41
  8978  00305C                     __ptext41:
  8979                           	opt stack 0
  8980  00305C                     _TMR0_StartTimer:
  8981                           	opt stack 24
  8982                           
  8983                           ;tmr0.c: 49: T0CONbits.TMR0ON = 1;
  8984                           
  8985                           ;incstack = 0
  8986  00305C  8ED5               	bsf	4053,7,c	;volatile
  8987  00305E  0012               	return		;funcret
  8988  003060                     __end_of_TMR0_StartTimer:
  8989                           	opt stack 0
  8990                           tosu	equ	0xFFF
  8991                           tosh	equ	0xFFE
  8992                           tosl	equ	0xFFD
  8993                           pclath	equ	0xFFA
  8994                           tblptru	equ	0xFF8
  8995                           tblptrh	equ	0xFF7
  8996                           tblptrl	equ	0xFF6
  8997                           tablat	equ	0xFF5
  8998                           prodh	equ	0xFF4
  8999                           prodl	equ	0xFF3
  9000                           intcon	equ	0xFF2
  9001                           postinc0	equ	0xFEE
  9002                           wreg	equ	0xFE8
  9003                           indf2	equ	0xFDF
  9004                           postinc2	equ	0xFDE
  9005                           postdec2	equ	0xFDD
  9006                           plusw2	equ	0xFDB
  9007                           fsr2h	equ	0xFDA
  9008                           fsr2l	equ	0xFD9
  9009                           status	equ	0xFD8
  9010                           
  9011 ;; *************** function _PIN_MANAGER_Initialize *****************
  9012 ;; Defined at:
  9013 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  9014 ;; Parameters:    Size  Location     Type
  9015 ;;		None
  9016 ;; Auto vars:     Size  Location     Type
  9017 ;;		None
  9018 ;; Return value:  Size  Location     Type
  9019 ;;                  1    wreg      void 
  9020 ;; Registers used:
  9021 ;;		wreg, status,2
  9022 ;; Tracked objects:
  9023 ;;		On entry : 0/0
  9024 ;;		On exit  : 0/0
  9025 ;;		Unchanged: 0/0
  9026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9027 ;;      Params:         0       0       0       0       0       0       0
  9028 ;;      Locals:         0       0       0       0       0       0       0
  9029 ;;      Temps:          0       0       0       0       0       0       0
  9030 ;;      Totals:         0       0       0       0       0       0       0
  9031 ;;Total ram usage:        0 bytes
  9032 ;; Hardware stack levels used:    1
  9033 ;; Hardware stack levels required when called:    4
  9034 ;; This function calls:
  9035 ;;		Nothing
  9036 ;; This function is called by:
  9037 ;;		_SYSTEM_Initialize
  9038 ;; This function uses a non-reentrant model
  9039 ;;
  9040                           
  9041                           	psect	text42
  9042  002AC8                     __ptext42:
  9043                           	opt stack 0
  9044  002AC8                     _PIN_MANAGER_Initialize:
  9045                           	opt stack 25
  9046                           
  9047                           ;pin_manager.c: 52: LATA = 0x00;
  9048                           
  9049                           ;incstack = 0
  9050  002AC8  0E00               	movlw	0
  9051  002ACA  6E89               	movwf	3977,c	;volatile
  9052                           
  9053                           ;pin_manager.c: 53: TRISA = 0xF7;
  9054  002ACC  0EF7               	movlw	247
  9055  002ACE  6E92               	movwf	3986,c	;volatile
  9056                           
  9057                           ;pin_manager.c: 54: ANSELA = 0x20;
  9058  002AD0  0E20               	movlw	32
  9059  002AD2  010F               	movlb	15	; () banked
  9060  002AD4  6F38               	movwf	56,b	;volatile
  9061                           
  9062                           ;pin_manager.c: 56: LATB = 0x00;
  9063  002AD6  0E00               	movlw	0
  9064  002AD8  6E8A               	movwf	3978,c	;volatile
  9065                           
  9066                           ;pin_manager.c: 57: TRISB = 0xD7;
  9067  002ADA  0ED7               	movlw	215
  9068  002ADC  6E93               	movwf	3987,c	;volatile
  9069                           
  9070                           ;pin_manager.c: 58: ANSELB = 0x00;
  9071  002ADE  0E00               	movlw	0
  9072  002AE0  010F               	movlb	15	; () banked
  9073  002AE2  6F39               	movwf	57,b	;volatile
  9074                           
  9075                           ;pin_manager.c: 59: WPUB = 0x00;
  9076  002AE4  0E00               	movlw	0
  9077  002AE6  6E61               	movwf	3937,c	;volatile
  9078                           
  9079                           ;pin_manager.c: 61: LATC = 0x18;
  9080  002AE8  0E18               	movlw	24
  9081  002AEA  6E8B               	movwf	3979,c	;volatile
  9082                           
  9083                           ;pin_manager.c: 62: TRISC = 0xDF;
  9084  002AEC  0EDF               	movlw	223
  9085  002AEE  6E94               	movwf	3988,c	;volatile
  9086                           
  9087                           ;pin_manager.c: 63: ANSELC = 0x04;
  9088  002AF0  0E04               	movlw	4
  9089  002AF2  010F               	movlb	15	; () banked
  9090  002AF4  6F3A               	movwf	58,b	;volatile
  9091                           
  9092                           ;pin_manager.c: 65: LATD = 0x00;
  9093  002AF6  0E00               	movlw	0
  9094  002AF8  6E8C               	movwf	3980,c	;volatile
  9095                           
  9096                           ;pin_manager.c: 66: TRISD = 0xFD;
  9097  002AFA  0EFD               	movlw	253
  9098  002AFC  6E95               	movwf	3989,c	;volatile
  9099                           
  9100                           ;pin_manager.c: 67: ANSELD = 0xDD;
  9101  002AFE  0EDD               	movlw	221
  9102  002B00  010F               	movlb	15	; () banked
  9103  002B02  6F3B               	movwf	59,b	;volatile
  9104                           
  9105                           ;pin_manager.c: 69: LATE = 0x00;
  9106  002B04  0E00               	movlw	0
  9107  002B06  6E8D               	movwf	3981,c	;volatile
  9108                           
  9109                           ;pin_manager.c: 70: TRISE = 0x00;
  9110  002B08  0E00               	movlw	0
  9111  002B0A  6E96               	movwf	3990,c	;volatile
  9112                           
  9113                           ;pin_manager.c: 71: ANSELE = 0x00;
  9114  002B0C  0E00               	movlw	0
  9115  002B0E  010F               	movlb	15	; () banked
  9116  002B10  6F3C               	movwf	60,b	;volatile
  9117                           
  9118                           ; BSR set to: 15
  9119                           ;pin_manager.c: 75: TRISCbits.TRISC5=0;
  9120  002B12  9A94               	bcf	3988,5,c	;volatile
  9121                           
  9122                           ; BSR set to: 15
  9123                           ;pin_manager.c: 76: INTCON2bits.nRBPU = 0x01;
  9124  002B14  8EF1               	bsf	intcon2,7,c	;volatile
  9125                           
  9126                           ; BSR set to: 15
  9127                           ;pin_manager.c: 79: LATCbits.LATC5 = 0;
  9128  002B16  9A8B               	bcf	3979,5,c	;volatile
  9129                           
  9130                           ; BSR set to: 15
  9131                           ;pin_manager.c: 80: TRISCbits.RC1 = 0;
  9132  002B18  9294               	bcf	3988,1,c	;volatile
  9133                           
  9134                           ; BSR set to: 15
  9135                           ;pin_manager.c: 81: TRISAbits.RA6 = 0;
  9136  002B1A  9C92               	bcf	3986,6,c	;volatile
  9137                           
  9138                           ; BSR set to: 15
  9139  002B1C  0012               	return		;funcret
  9140  002B1E                     __end_of_PIN_MANAGER_Initialize:
  9141                           	opt stack 0
  9142                           tosu	equ	0xFFF
  9143                           tosh	equ	0xFFE
  9144                           tosl	equ	0xFFD
  9145                           pclath	equ	0xFFA
  9146                           tblptru	equ	0xFF8
  9147                           tblptrh	equ	0xFF7
  9148                           tblptrl	equ	0xFF6
  9149                           tablat	equ	0xFF5
  9150                           prodh	equ	0xFF4
  9151                           prodl	equ	0xFF3
  9152                           intcon	equ	0xFF2
  9153                           intcon2	equ	0xFF1
  9154                           postinc0	equ	0xFEE
  9155                           wreg	equ	0xFE8
  9156                           indf2	equ	0xFDF
  9157                           postinc2	equ	0xFDE
  9158                           postdec2	equ	0xFDD
  9159                           plusw2	equ	0xFDB
  9160                           fsr2h	equ	0xFDA
  9161                           fsr2l	equ	0xFD9
  9162                           status	equ	0xFD8
  9163                           
  9164 ;; *************** function _OSCILLATOR_Initialize *****************
  9165 ;; Defined at:
  9166 ;;		line 127 in file "mcc_generated_files/mcc.c"
  9167 ;; Parameters:    Size  Location     Type
  9168 ;;		None
  9169 ;; Auto vars:     Size  Location     Type
  9170 ;;		None
  9171 ;; Return value:  Size  Location     Type
  9172 ;;                  1    wreg      void 
  9173 ;; Registers used:
  9174 ;;		wreg, status,2
  9175 ;; Tracked objects:
  9176 ;;		On entry : 0/0
  9177 ;;		On exit  : 0/0
  9178 ;;		Unchanged: 0/0
  9179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9180 ;;      Params:         0       0       0       0       0       0       0
  9181 ;;      Locals:         0       0       0       0       0       0       0
  9182 ;;      Temps:          0       0       0       0       0       0       0
  9183 ;;      Totals:         0       0       0       0       0       0       0
  9184 ;;Total ram usage:        0 bytes
  9185 ;; Hardware stack levels used:    1
  9186 ;; Hardware stack levels required when called:    4
  9187 ;; This function calls:
  9188 ;;		Nothing
  9189 ;; This function is called by:
  9190 ;;		_SYSTEM_Initialize
  9191 ;; This function uses a non-reentrant model
  9192 ;;
  9193                           
  9194                           	psect	text43
  9195  00302C                     __ptext43:
  9196                           	opt stack 0
  9197  00302C                     _OSCILLATOR_Initialize:
  9198                           	opt stack 25
  9199                           
  9200                           ;mcc.c: 130: OSCCON = 0x72;
  9201                           
  9202                           ; BSR set to: 15
  9203                           ;incstack = 0
  9204  00302C  0E72               	movlw	114
  9205  00302E  6ED3               	movwf	4051,c	;volatile
  9206                           
  9207                           ;mcc.c: 132: OSCCON2 = 0x04;
  9208  003030  0E04               	movlw	4
  9209  003032  6ED2               	movwf	4050,c	;volatile
  9210                           
  9211                           ;mcc.c: 134: OSCTUNE = 0x00;
  9212  003034  0E00               	movlw	0
  9213  003036  6E9B               	movwf	3995,c	;volatile
  9214  003038  0012               	return		;funcret
  9215  00303A                     __end_of_OSCILLATOR_Initialize:
  9216                           	opt stack 0
  9217                           tosu	equ	0xFFF
  9218                           tosh	equ	0xFFE
  9219                           tosl	equ	0xFFD
  9220                           pclath	equ	0xFFA
  9221                           tblptru	equ	0xFF8
  9222                           tblptrh	equ	0xFF7
  9223                           tblptrl	equ	0xFF6
  9224                           tablat	equ	0xFF5
  9225                           prodh	equ	0xFF4
  9226                           prodl	equ	0xFF3
  9227                           intcon	equ	0xFF2
  9228                           intcon2	equ	0xFF1
  9229                           postinc0	equ	0xFEE
  9230                           wreg	equ	0xFE8
  9231                           indf2	equ	0xFDF
  9232                           postinc2	equ	0xFDE
  9233                           postdec2	equ	0xFDD
  9234                           plusw2	equ	0xFDB
  9235                           fsr2h	equ	0xFDA
  9236                           fsr2l	equ	0xFD9
  9237                           status	equ	0xFD8
  9238                           
  9239 ;; *************** function _INTERRUPT_Initialize *****************
  9240 ;; Defined at:
  9241 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9242 ;; Parameters:    Size  Location     Type
  9243 ;;		None
  9244 ;; Auto vars:     Size  Location     Type
  9245 ;;		None
  9246 ;; Return value:  Size  Location     Type
  9247 ;;                  1    wreg      void 
  9248 ;; Registers used:
  9249 ;;		None
  9250 ;; Tracked objects:
  9251 ;;		On entry : 0/0
  9252 ;;		On exit  : 0/0
  9253 ;;		Unchanged: 0/0
  9254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9255 ;;      Params:         0       0       0       0       0       0       0
  9256 ;;      Locals:         0       0       0       0       0       0       0
  9257 ;;      Temps:          0       0       0       0       0       0       0
  9258 ;;      Totals:         0       0       0       0       0       0       0
  9259 ;;Total ram usage:        0 bytes
  9260 ;; Hardware stack levels used:    1
  9261 ;; Hardware stack levels required when called:    4
  9262 ;; This function calls:
  9263 ;;		Nothing
  9264 ;; This function is called by:
  9265 ;;		_SYSTEM_Initialize
  9266 ;; This function uses a non-reentrant model
  9267 ;;
  9268                           
  9269                           	psect	text44
  9270  002FFE                     __ptext44:
  9271                           	opt stack 0
  9272  002FFE                     _INTERRUPT_Initialize:
  9273                           	opt stack 25
  9274                           
  9275                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  9276                           
  9277                           ;incstack = 0
  9278  002FFE  9ED0               	bcf	4048,7,c	;volatile
  9279                           
  9280                           ;interrupt_manager.c: 60: IPR1bits.RC1IP = 0;
  9281  003000  9A9F               	bcf	3999,5,c	;volatile
  9282                           
  9283                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
  9284  003002  989F               	bcf	3999,4,c	;volatile
  9285                           
  9286                           ;interrupt_manager.c: 64: INTCON2bits.TMR0IP = 0;
  9287  003004  94F1               	bcf	intcon2,2,c	;volatile
  9288                           
  9289                           ;interrupt_manager.c: 66: IPR1bits.ADIP = 0;
  9290  003006  9C9F               	bcf	3999,6,c	;volatile
  9291                           
  9292                           ;interrupt_manager.c: 68: IPR1bits.SSP1IP = 0;
  9293  003008  969F               	bcf	3999,3,c	;volatile
  9294                           
  9295                           ;interrupt_manager.c: 70: IPR2bits.BCL1IP = 0;
  9296  00300A  96A2               	bcf	4002,3,c	;volatile
  9297                           
  9298                           ;interrupt_manager.c: 71: IPR1bits.TMR2IP=0;
  9299  00300C  929F               	bcf	3999,1,c	;volatile
  9300  00300E  0012               	return		;funcret
  9301  003010                     __end_of_INTERRUPT_Initialize:
  9302                           	opt stack 0
  9303                           tosu	equ	0xFFF
  9304                           tosh	equ	0xFFE
  9305                           tosl	equ	0xFFD
  9306                           pclath	equ	0xFFA
  9307                           tblptru	equ	0xFF8
  9308                           tblptrh	equ	0xFF7
  9309                           tblptrl	equ	0xFF6
  9310                           tablat	equ	0xFF5
  9311                           prodh	equ	0xFF4
  9312                           prodl	equ	0xFF3
  9313                           intcon	equ	0xFF2
  9314                           intcon2	equ	0xFF1
  9315                           postinc0	equ	0xFEE
  9316                           wreg	equ	0xFE8
  9317                           indf2	equ	0xFDF
  9318                           postinc2	equ	0xFDE
  9319                           postdec2	equ	0xFDD
  9320                           plusw2	equ	0xFDB
  9321                           fsr2h	equ	0xFDA
  9322                           fsr2l	equ	0xFD9
  9323                           status	equ	0xFD8
  9324                           
  9325 ;; *************** function _I2C1_Initialize *****************
  9326 ;; Defined at:
  9327 ;;		line 151 in file "mcc_generated_files/i2c1.c"
  9328 ;; Parameters:    Size  Location     Type
  9329 ;;		None
  9330 ;; Auto vars:     Size  Location     Type
  9331 ;;		None
  9332 ;; Return value:  Size  Location     Type
  9333 ;;                  1    wreg      void 
  9334 ;; Registers used:
  9335 ;;		wreg, status,2, status,0
  9336 ;; Tracked objects:
  9337 ;;		On entry : 0/0
  9338 ;;		On exit  : 0/0
  9339 ;;		Unchanged: 0/0
  9340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9341 ;;      Params:         0       0       0       0       0       0       0
  9342 ;;      Locals:         0       0       0       0       0       0       0
  9343 ;;      Temps:          0       0       0       0       0       0       0
  9344 ;;      Totals:         0       0       0       0       0       0       0
  9345 ;;Total ram usage:        0 bytes
  9346 ;; Hardware stack levels used:    1
  9347 ;; Hardware stack levels required when called:    4
  9348 ;; This function calls:
  9349 ;;		Nothing
  9350 ;; This function is called by:
  9351 ;;		_SYSTEM_Initialize
  9352 ;; This function uses a non-reentrant model
  9353 ;;
  9354                           
  9355                           	psect	text45
  9356  002C7E                     __ptext45:
  9357                           	opt stack 0
  9358  002C7E                     _I2C1_Initialize:
  9359                           	opt stack 25
  9360                           
  9361                           ;i2c1.c: 153: i2c1_object.pTrHead = i2c1_tr_queue;
  9362                           
  9363                           ;incstack = 0
  9364  002C7E  0EED               	movlw	low _i2c1_tr_queue
  9365  002C80  0100               	movlb	0	; () banked
  9366  002C82  6FBA               	movwf	(_i2c1_object+2)& (0+255),b
  9367  002C84  0E00               	movlw	high _i2c1_tr_queue
  9368  002C86  0100               	movlb	0	; () banked
  9369  002C88  6FBB               	movwf	(_i2c1_object+3)& (0+255),b
  9370                           
  9371                           ;i2c1.c: 154: i2c1_object.pTrTail = i2c1_tr_queue;
  9372  002C8A  0EED               	movlw	low _i2c1_tr_queue
  9373  002C8C  0100               	movlb	0	; () banked
  9374  002C8E  6FB8               	movwf	_i2c1_object& (0+255),b
  9375  002C90  0E00               	movlw	high _i2c1_tr_queue
  9376  002C92  0100               	movlb	0	; () banked
  9377  002C94  6FB9               	movwf	(_i2c1_object+1)& (0+255),b
  9378                           
  9379                           ; BSR set to: 0
  9380                           ;i2c1.c: 155: i2c1_object.trStatus.s.empty = 1;
  9381  002C96  0100               	movlb	0	; () banked
  9382  002C98  83BC               	bsf	(_i2c1_object+4)& (0+255),1,b
  9383                           
  9384                           ; BSR set to: 0
  9385                           ;i2c1.c: 156: i2c1_object.trStatus.s.full = 0;
  9386  002C9A  0100               	movlb	0	; () banked
  9387  002C9C  91BC               	bcf	(_i2c1_object+4)& (0+255),0,b
  9388                           
  9389                           ; BSR set to: 0
  9390                           ;i2c1.c: 158: i2c1_object.i2cErrors = 0;
  9391  002C9E  0E00               	movlw	0
  9392  002CA0  0100               	movlb	0	; () banked
  9393  002CA2  6FBE               	movwf	(_i2c1_object+6)& (0+255),b
  9394                           
  9395                           ; BSR set to: 0
  9396                           ;i2c1.c: 161: SSP1STAT = 0x80;
  9397  002CA4  0E80               	movlw	128
  9398  002CA6  6EC7               	movwf	4039,c	;volatile
  9399                           
  9400                           ; BSR set to: 0
  9401                           ;i2c1.c: 163: SSP1CON1 = 0x28;
  9402  002CA8  0E28               	movlw	40
  9403  002CAA  6EC6               	movwf	4038,c	;volatile
  9404                           
  9405                           ; BSR set to: 0
  9406                           ;i2c1.c: 165: SSP1CON3 = 0x00;
  9407  002CAC  0E00               	movlw	0
  9408  002CAE  6ECB               	movwf	4043,c	;volatile
  9409                           
  9410                           ; BSR set to: 0
  9411                           ;i2c1.c: 167: SSP1ADD = 0x09;
  9412  002CB0  0E09               	movlw	9
  9413  002CB2  6EC8               	movwf	4040,c	;volatile
  9414                           
  9415                           ; BSR set to: 0
  9416                           ;i2c1.c: 171: PIR1bits.SSP1IF = 0;
  9417  002CB4  969E               	bcf	3998,3,c	;volatile
  9418                           
  9419                           ; BSR set to: 0
  9420                           ;i2c1.c: 173: PIE1bits.SSP1IE = 1;
  9421  002CB6  869D               	bsf	3997,3,c	;volatile
  9422                           
  9423                           ; BSR set to: 0
  9424  002CB8  0012               	return		;funcret
  9425  002CBA                     __end_of_I2C1_Initialize:
  9426                           	opt stack 0
  9427                           tosu	equ	0xFFF
  9428                           tosh	equ	0xFFE
  9429                           tosl	equ	0xFFD
  9430                           pclath	equ	0xFFA
  9431                           tblptru	equ	0xFF8
  9432                           tblptrh	equ	0xFF7
  9433                           tblptrl	equ	0xFF6
  9434                           tablat	equ	0xFF5
  9435                           prodh	equ	0xFF4
  9436                           prodl	equ	0xFF3
  9437                           intcon	equ	0xFF2
  9438                           intcon2	equ	0xFF1
  9439                           postinc0	equ	0xFEE
  9440                           wreg	equ	0xFE8
  9441                           indf2	equ	0xFDF
  9442                           postinc2	equ	0xFDE
  9443                           postdec2	equ	0xFDD
  9444                           plusw2	equ	0xFDB
  9445                           fsr2h	equ	0xFDA
  9446                           fsr2l	equ	0xFD9
  9447                           status	equ	0xFD8
  9448                           
  9449 ;; *************** function _EUSART1_Initialize *****************
  9450 ;; Defined at:
  9451 ;;		line 21 in file "UART.c"
  9452 ;; Parameters:    Size  Location     Type
  9453 ;;		None
  9454 ;; Auto vars:     Size  Location     Type
  9455 ;;		None
  9456 ;; Return value:  Size  Location     Type
  9457 ;;                  1    wreg      void 
  9458 ;; Registers used:
  9459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9460 ;; Tracked objects:
  9461 ;;		On entry : 0/0
  9462 ;;		On exit  : 0/0
  9463 ;;		Unchanged: 0/0
  9464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9465 ;;      Params:         0       0       0       0       0       0       0
  9466 ;;      Locals:         0       0       0       0       0       0       0
  9467 ;;      Temps:          0       0       0       0       0       0       0
  9468 ;;      Totals:         0       0       0       0       0       0       0
  9469 ;;Total ram usage:        0 bytes
  9470 ;; Hardware stack levels used:    1
  9471 ;; Hardware stack levels required when called:    6
  9472 ;; This function calls:
  9473 ;;		_UART_buff_init
  9474 ;; This function is called by:
  9475 ;;		_SYSTEM_Initialize
  9476 ;; This function uses a non-reentrant model
  9477 ;;
  9478                           
  9479                           	psect	text46
  9480  002CBA                     __ptext46:
  9481                           	opt stack 0
  9482  002CBA                     _EUSART1_Initialize:
  9483                           	opt stack 23
  9484                           
  9485                           ;UART.c: 23: PIE1bits.RC1IE = 0;
  9486                           
  9487                           ; BSR set to: 0
  9488                           ;incstack = 0
  9489  002CBA  9A9D               	bcf	3997,5,c	;volatile
  9490                           
  9491                           ;UART.c: 24: PIE1bits.TX1IE = 0;
  9492  002CBC  989D               	bcf	3997,4,c	;volatile
  9493                           
  9494                           ;UART.c: 29: BAUD1CON = 0x48;
  9495  002CBE  0E48               	movlw	72
  9496  002CC0  6EB8               	movwf	4024,c	;volatile
  9497                           
  9498                           ;UART.c: 32: RC1STA = 0x98;
  9499  002CC2  0E98               	movlw	152
  9500  002CC4  6EAB               	movwf	4011,c	;volatile
  9501                           
  9502                           ;UART.c: 35: TX1STA = 0x26;
  9503  002CC6  0E26               	movlw	38
  9504  002CC8  6EAC               	movwf	4012,c	;volatile
  9505                           
  9506                           ;UART.c: 38: SPBRG1 = (((16000000/38400)/4)-1);
  9507  002CCA  0E67               	movlw	103
  9508  002CCC  6EAF               	movwf	4015,c	;volatile
  9509                           
  9510                           ;UART.c: 41: SPBRGH1 = 0x00;
  9511  002CCE  0E00               	movlw	0
  9512  002CD0  6EB0               	movwf	4016,c	;volatile
  9513                           
  9514                           ;UART.c: 44: TXREG1 = 0x00;
  9515  002CD2  0E00               	movlw	0
  9516  002CD4  6EAD               	movwf	4013,c	;volatile
  9517                           
  9518                           ;UART.c: 47: RCREG1 = 0x00;
  9519  002CD6  0E00               	movlw	0
  9520  002CD8  6EAE               	movwf	4014,c	;volatile
  9521                           
  9522                           ;UART.c: 49: UART_buff_init(&input_buffer);
  9523  002CDA  0E00               	movlw	low _input_buffer
  9524  002CDC  6E23               	movwf	UART_buff_init@_this,c
  9525  002CDE  0E04               	movlw	high _input_buffer
  9526  002CE0  6E24               	movwf	UART_buff_init@_this+1,c
  9527  002CE2  EC9E  F017         	call	_UART_buff_init	;wreg free
  9528                           
  9529                           ;UART.c: 50: UART_buff_init(&output_buffer);
  9530  002CE6  0E00               	movlw	low _output_buffer
  9531  002CE8  6E23               	movwf	UART_buff_init@_this,c
  9532  002CEA  0E05               	movlw	high _output_buffer
  9533  002CEC  6E24               	movwf	UART_buff_init@_this+1,c
  9534  002CEE  EC9E  F017         	call	_UART_buff_init	;wreg free
  9535                           
  9536                           ;UART.c: 52: PIE1bits.RC1IE = 1;
  9537  002CF2  8A9D               	bsf	3997,5,c	;volatile
  9538  002CF4  0012               	return		;funcret
  9539  002CF6                     __end_of_EUSART1_Initialize:
  9540                           	opt stack 0
  9541                           tosu	equ	0xFFF
  9542                           tosh	equ	0xFFE
  9543                           tosl	equ	0xFFD
  9544                           pclath	equ	0xFFA
  9545                           tblptru	equ	0xFF8
  9546                           tblptrh	equ	0xFF7
  9547                           tblptrl	equ	0xFF6
  9548                           tablat	equ	0xFF5
  9549                           prodh	equ	0xFF4
  9550                           prodl	equ	0xFF3
  9551                           intcon	equ	0xFF2
  9552                           intcon2	equ	0xFF1
  9553                           postinc0	equ	0xFEE
  9554                           wreg	equ	0xFE8
  9555                           indf2	equ	0xFDF
  9556                           postinc2	equ	0xFDE
  9557                           postdec2	equ	0xFDD
  9558                           plusw2	equ	0xFDB
  9559                           fsr2h	equ	0xFDA
  9560                           fsr2l	equ	0xFD9
  9561                           status	equ	0xFD8
  9562                           
  9563 ;; *************** function _UART_buff_init *****************
  9564 ;; Defined at:
  9565 ;;		line 56 in file "UART.c"
  9566 ;; Parameters:    Size  Location     Type
  9567 ;;  _this           2   34[COMRAM] PTR struct UART_ring_buf
  9568 ;;		 -> output_buffer(206), input_buffer(206), 
  9569 ;; Auto vars:     Size  Location     Type
  9570 ;;		None
  9571 ;; Return value:  Size  Location     Type
  9572 ;;                  1    wreg      void 
  9573 ;; Registers used:
  9574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9575 ;; Tracked objects:
  9576 ;;		On entry : 0/0
  9577 ;;		On exit  : 0/0
  9578 ;;		Unchanged: 0/0
  9579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9580 ;;      Params:         2       0       0       0       0       0       0
  9581 ;;      Locals:         0       0       0       0       0       0       0
  9582 ;;      Temps:          0       0       0       0       0       0       0
  9583 ;;      Totals:         2       0       0       0       0       0       0
  9584 ;;Total ram usage:        2 bytes
  9585 ;; Hardware stack levels used:    1
  9586 ;; Hardware stack levels required when called:    5
  9587 ;; This function calls:
  9588 ;;		_memset
  9589 ;; This function is called by:
  9590 ;;		_EUSART1_Initialize
  9591 ;; This function uses a non-reentrant model
  9592 ;;
  9593                           
  9594                           	psect	text47
  9595  002F3C                     __ptext47:
  9596                           	opt stack 0
  9597  002F3C                     _UART_buff_init:
  9598                           	opt stack 23
  9599                           
  9600                           ;UART.c: 65: memset(_this, 0, sizeof (*_this));
  9601                           
  9602                           ;incstack = 0
  9603  002F3C  C023  F01B         	movff	UART_buff_init@_this,memset@p1
  9604  002F40  C024  F01C         	movff	UART_buff_init@_this+1,memset@p1+1
  9605  002F44  0E00               	movlw	0
  9606  002F46  6E1E               	movwf	memset@c+1,c
  9607  002F48  0E00               	movlw	0
  9608  002F4A  6E1D               	movwf	memset@c,c
  9609  002F4C  0E00               	movlw	0
  9610  002F4E  6E20               	movwf	memset@n+1,c
  9611  002F50  0ECE               	movlw	206
  9612  002F52  6E1F               	movwf	memset@n,c
  9613  002F54  ECE2  F016         	call	_memset	;wreg free
  9614  002F58  0012               	return		;funcret
  9615  002F5A                     __end_of_UART_buff_init:
  9616                           	opt stack 0
  9617                           tosu	equ	0xFFF
  9618                           tosh	equ	0xFFE
  9619                           tosl	equ	0xFFD
  9620                           pclath	equ	0xFFA
  9621                           tblptru	equ	0xFF8
  9622                           tblptrh	equ	0xFF7
  9623                           tblptrl	equ	0xFF6
  9624                           tablat	equ	0xFF5
  9625                           prodh	equ	0xFF4
  9626                           prodl	equ	0xFF3
  9627                           intcon	equ	0xFF2
  9628                           intcon2	equ	0xFF1
  9629                           postinc0	equ	0xFEE
  9630                           wreg	equ	0xFE8
  9631                           indf2	equ	0xFDF
  9632                           postinc2	equ	0xFDE
  9633                           postdec2	equ	0xFDD
  9634                           plusw2	equ	0xFDB
  9635                           fsr2h	equ	0xFDA
  9636                           fsr2l	equ	0xFD9
  9637                           status	equ	0xFD8
  9638                           
  9639 ;; *************** function _memset *****************
  9640 ;; Defined at:
  9641 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\memset.c"
  9642 ;; Parameters:    Size  Location     Type
  9643 ;;  p1              2   26[COMRAM] PTR void 
  9644 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  9645 ;;  c               2   28[COMRAM] int 
  9646 ;;  n               2   30[COMRAM] unsigned int 
  9647 ;; Auto vars:     Size  Location     Type
  9648 ;;  p               2   32[COMRAM] PTR unsigned char 
  9649 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  9650 ;; Return value:  Size  Location     Type
  9651 ;;                  2   26[COMRAM] PTR void 
  9652 ;; Registers used:
  9653 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9654 ;; Tracked objects:
  9655 ;;		On entry : 0/0
  9656 ;;		On exit  : 0/0
  9657 ;;		Unchanged: 0/0
  9658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9659 ;;      Params:         6       0       0       0       0       0       0
  9660 ;;      Locals:         2       0       0       0       0       0       0
  9661 ;;      Temps:          0       0       0       0       0       0       0
  9662 ;;      Totals:         8       0       0       0       0       0       0
  9663 ;;Total ram usage:        8 bytes
  9664 ;; Hardware stack levels used:    1
  9665 ;; Hardware stack levels required when called:    4
  9666 ;; This function calls:
  9667 ;;		Nothing
  9668 ;; This function is called by:
  9669 ;;		_FastTransfer_buffer_flush
  9670 ;;		_UART_buff_init
  9671 ;;		_UART_buff_flush
  9672 ;; This function uses a non-reentrant model
  9673 ;;
  9674                           
  9675                           	psect	text48
  9676  002DC4                     __ptext48:
  9677                           	opt stack 0
  9678  002DC4                     _memset:
  9679                           	opt stack 22
  9680                           
  9681                           ;incstack = 0
  9682  002DC4  C01B  F021         	movff	memset@p1,memset@p
  9683  002DC8  C01C  F022         	movff	memset@p1+1,memset@p+1
  9684  002DCC  D008               	goto	l6012
  9685  002DCE                     l6008:
  9686  002DCE  C021  FFD9         	movff	memset@p,fsr2l
  9687  002DD2  C022  FFDA         	movff	memset@p+1,fsr2h
  9688  002DD6  C01D  FFDF         	movff	memset@c,indf2
  9689  002DDA  4A21               	infsnz	memset@p,f,c
  9690  002DDC  2A22               	incf	memset@p+1,f,c
  9691  002DDE                     l6012:
  9692  002DDE  061F               	decf	memset@n,f,c
  9693  002DE0  A0D8               	btfss	status,0,c
  9694  002DE2  0620               	decf	memset@n+1,f,c
  9695  002DE4  281F               	incf	memset@n,w,c
  9696  002DE6  E1F3               	bnz	l6008
  9697  002DE8  2820               	incf	memset@n+1,w,c
  9698  002DEA  B4D8               	btfsc	status,2,c
  9699  002DEC  0012               	return	
  9700  002DEE  D7EF               	goto	l6008
  9701  002DF0                     __end_of_memset:
  9702                           	opt stack 0
  9703                           tosu	equ	0xFFF
  9704                           tosh	equ	0xFFE
  9705                           tosl	equ	0xFFD
  9706                           pclath	equ	0xFFA
  9707                           tblptru	equ	0xFF8
  9708                           tblptrh	equ	0xFF7
  9709                           tblptrl	equ	0xFF6
  9710                           tablat	equ	0xFF5
  9711                           prodh	equ	0xFF4
  9712                           prodl	equ	0xFF3
  9713                           intcon	equ	0xFF2
  9714                           intcon2	equ	0xFF1
  9715                           postinc0	equ	0xFEE
  9716                           wreg	equ	0xFE8
  9717                           indf2	equ	0xFDF
  9718                           postinc2	equ	0xFDE
  9719                           postdec2	equ	0xFDD
  9720                           plusw2	equ	0xFDB
  9721                           fsr2h	equ	0xFDA
  9722                           fsr2l	equ	0xFD9
  9723                           status	equ	0xFD8
  9724                           
  9725 ;; *************** function _ADC_Initialize *****************
  9726 ;; Defined at:
  9727 ;;		line 59 in file "mcc_generated_files/adc.c"
  9728 ;; Parameters:    Size  Location     Type
  9729 ;;		None
  9730 ;; Auto vars:     Size  Location     Type
  9731 ;;		None
  9732 ;; Return value:  Size  Location     Type
  9733 ;;                  1    wreg      void 
  9734 ;; Registers used:
  9735 ;;		wreg, status,2
  9736 ;; Tracked objects:
  9737 ;;		On entry : 0/0
  9738 ;;		On exit  : 0/0
  9739 ;;		Unchanged: 0/0
  9740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9741 ;;      Params:         0       0       0       0       0       0       0
  9742 ;;      Locals:         0       0       0       0       0       0       0
  9743 ;;      Temps:          0       0       0       0       0       0       0
  9744 ;;      Totals:         0       0       0       0       0       0       0
  9745 ;;Total ram usage:        0 bytes
  9746 ;; Hardware stack levels used:    1
  9747 ;; Hardware stack levels required when called:    4
  9748 ;; This function calls:
  9749 ;;		Nothing
  9750 ;; This function is called by:
  9751 ;;		_SYSTEM_Initialize
  9752 ;; This function uses a non-reentrant model
  9753 ;;
  9754                           
  9755                           	psect	text49
  9756  002F92                     __ptext49:
  9757                           	opt stack 0
  9758  002F92                     _ADC_Initialize:
  9759                           	opt stack 25
  9760                           
  9761                           ;adc.c: 64: ADCON0 = 0x01;
  9762                           
  9763                           ;incstack = 0
  9764  002F92  0E01               	movlw	1
  9765  002F94  6EC2               	movwf	4034,c	;volatile
  9766                           
  9767                           ;adc.c: 67: ADCON1 = 0x80;
  9768  002F96  0E80               	movlw	128
  9769  002F98  6EC1               	movwf	4033,c	;volatile
  9770                           
  9771                           ;adc.c: 70: ADCON2 = 0x05;
  9772  002F9A  0E05               	movlw	5
  9773  002F9C  6EC0               	movwf	4032,c	;volatile
  9774                           
  9775                           ;adc.c: 73: ADRESL = 0x00;
  9776  002F9E  0E00               	movlw	0
  9777  002FA0  6EC3               	movwf	4035,c	;volatile
  9778                           
  9779                           ;adc.c: 76: ADRESH = 0x00;
  9780  002FA2  0E00               	movlw	0
  9781  002FA4  6EC4               	movwf	4036,c	;volatile
  9782                           
  9783                           ;adc.c: 79: PIE1bits.ADIE = 1;
  9784  002FA6  8C9D               	bsf	3997,6,c	;volatile
  9785  002FA8  0012               	return		;funcret
  9786  002FAA                     __end_of_ADC_Initialize:
  9787                           	opt stack 0
  9788                           tosu	equ	0xFFF
  9789                           tosh	equ	0xFFE
  9790                           tosl	equ	0xFFD
  9791                           pclath	equ	0xFFA
  9792                           tblptru	equ	0xFF8
  9793                           tblptrh	equ	0xFF7
  9794                           tblptrl	equ	0xFF6
  9795                           tablat	equ	0xFF5
  9796                           prodh	equ	0xFF4
  9797                           prodl	equ	0xFF3
  9798                           intcon	equ	0xFF2
  9799                           intcon2	equ	0xFF1
  9800                           postinc0	equ	0xFEE
  9801                           wreg	equ	0xFE8
  9802                           indf2	equ	0xFDF
  9803                           postinc2	equ	0xFDE
  9804                           postdec2	equ	0xFDD
  9805                           plusw2	equ	0xFDB
  9806                           fsr2h	equ	0xFDA
  9807                           fsr2l	equ	0xFD9
  9808                           status	equ	0xFD8
  9809                           
  9810 ;; *************** function _LEDwriteDisplay *****************
  9811 ;; Defined at:
  9812 ;;		line 116 in file "LED_BarGraph.c"
  9813 ;; Parameters:    Size  Location     Type
  9814 ;;  i2c_addr        1    wreg     unsigned char 
  9815 ;; Auto vars:     Size  Location     Type
  9816 ;;  i2c_addr        1   20[BANK1 ] unsigned char 
  9817 ;;  writeBuffer    20    0[BANK1 ] unsigned char [20]
  9818 ;;  timeOut         2   21[BANK1 ] unsigned int 
  9819 ;;  status          1   23[BANK1 ] enum E7758
  9820 ;; Return value:  Size  Location     Type
  9821 ;;                  1    wreg      void 
  9822 ;; Registers used:
  9823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9824 ;; Tracked objects:
  9825 ;;		On entry : 0/0
  9826 ;;		On exit  : 0/0
  9827 ;;		Unchanged: 0/0
  9828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9829 ;;      Params:         0       0       0       0       0       0       0
  9830 ;;      Locals:         0       0      24       0       0       0       0
  9831 ;;      Temps:          0       0       0       0       0       0       0
  9832 ;;      Totals:         0       0      24       0       0       0       0
  9833 ;;Total ram usage:       24 bytes
  9834 ;; Hardware stack levels used:    1
  9835 ;; Hardware stack levels required when called:    6
  9836 ;; This function calls:
  9837 ;;		_I2C1_MasterWrite
  9838 ;; This function is called by:
  9839 ;;		_main
  9840 ;; This function uses a non-reentrant model
  9841 ;;
  9842                           
  9843                           	psect	text50
  9844  0018D8                     __ptext50:
  9845                           	opt stack 0
  9846  0018D8                     _LEDwriteDisplay:
  9847                           	opt stack 24
  9848                           
  9849                           ;incstack = 0
  9850                           ;LEDwriteDisplay@i2c_addr stored from wreg
  9851  0018D8  0101               	movlb	1	; () banked
  9852  0018DA  6F4D               	movwf	LEDwriteDisplay@i2c_addr& (0+255),b
  9853                           
  9854                           ;LED_BarGraph.c: 117: uint8_t writeBuffer[20];
  9855                           ;LED_BarGraph.c: 118: uint16_t timeOut;
  9856                           ;LED_BarGraph.c: 119: writeBuffer[0] = 0x00;
  9857  0018DC  0E00               	movlw	0
  9858  0018DE  0101               	movlb	1	; () banked
  9859  0018E0  6F39               	movwf	LEDwriteDisplay@writeBuffer& (0+255),b
  9860                           
  9861                           ;LED_BarGraph.c: 120: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  9862  0018E2  0E02               	movlw	2
  9863  0018E4  0101               	movlb	1	; () banked
  9864  0018E6  6F50               	movwf	LEDwriteDisplay@status& (0+255),b
  9865                           
  9866                           ;LED_BarGraph.c: 122: timeOut = 0;
  9867  0018E8  0E00               	movlw	0
  9868  0018EA  0101               	movlb	1	; () banked
  9869  0018EC  6F4F               	movwf	(LEDwriteDisplay@timeOut+1)& (0+255),b
  9870  0018EE  0E00               	movlw	0
  9871  0018F0  6F4E               	movwf	LEDwriteDisplay@timeOut& (0+255),b
  9872                           
  9873                           ;LED_BarGraph.c: 123: while (status != I2C1_MESSAGE_FAIL) {
  9874  0018F2  D027               	goto	l7262
  9875  0018F4                     l7242:
  9876                           
  9877                           ; BSR set to: 1
  9878                           ;LED_BarGraph.c: 125: I2C1_MasterWrite(&writeBuffer,
  9879                           ;LED_BarGraph.c: 126: 1,
  9880                           ;LED_BarGraph.c: 127: i2c_addr,
  9881                           ;LED_BarGraph.c: 128: &status);
  9882  0018F4  0E39               	movlw	low LEDwriteDisplay@writeBuffer
  9883  0018F6  6E24               	movwf	I2C1_MasterWrite@pdata,c
  9884  0018F8  0E01               	movlw	high LEDwriteDisplay@writeBuffer
  9885  0018FA  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
  9886  0018FC  0E01               	movlw	1
  9887  0018FE  6E26               	movwf	I2C1_MasterWrite@length,c
  9888  001900  C14D  F027         	movff	LEDwriteDisplay@i2c_addr,I2C1_MasterWrite@address
  9889  001904  6A28               	clrf	I2C1_MasterWrite@address+1,c
  9890  001906  0E50               	movlw	low LEDwriteDisplay@status
  9891  001908  6E29               	movwf	I2C1_MasterWrite@pflag,c
  9892  00190A  0E01               	movlw	high LEDwriteDisplay@status
  9893  00190C  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
  9894  00190E  EC8F  F015         	call	_I2C1_MasterWrite	;wreg free
  9895  001912                     l7244:
  9896  001912  0E02               	movlw	2
  9897  001914  0101               	movlb	1	; () banked
  9898  001916  1950               	xorwf	LEDwriteDisplay@status& (0+255),w,b
  9899  001918  B4D8               	btfsc	status,2,c
  9900  00191A  D7FB               	goto	l7244
  9901                           
  9902                           ; BSR set to: 1
  9903                           ;LED_BarGraph.c: 133: if (status == I2C1_MESSAGE_COMPLETE)
  9904                           
  9905                           ; BSR set to: 1
  9906  00191C  0101               	movlb	1	; () banked
  9907  00191E  5150               	movf	LEDwriteDisplay@status& (0+255),w,b
  9908  001920  0101               	movlb	1	; () banked
  9909  001922  B4D8               	btfsc	status,2,c
  9910  001924  D012               	goto	l7264
  9911                           
  9912                           ; BSR set to: 1
  9913                           ;LED_BarGraph.c: 135: if (timeOut == 100)
  9914                           
  9915                           ; BSR set to: 1
  9916                           
  9917                           ; BSR set to: 1
  9918                           ;LED_BarGraph.c: 134: break;
  9919  001926  0E64               	movlw	100
  9920  001928  0101               	movlb	1	; () banked
  9921  00192A  194E               	xorwf	LEDwriteDisplay@timeOut& (0+255),w,b
  9922  00192C  0101               	movlb	1	; () banked
  9923  00192E  114F               	iorwf	(LEDwriteDisplay@timeOut+1)& (0+255),w,b
  9924  001930  B4D8               	btfsc	status,2,c
  9925  001932  D00B               	goto	l7264
  9926                           
  9927                           ; BSR set to: 1
  9928                           ;LED_BarGraph.c: 137: if (status == I2C1_MESSAGE_FAIL)
  9929                           
  9930                           ; BSR set to: 1
  9931                           
  9932                           ; BSR set to: 1
  9933                           ;LED_BarGraph.c: 136: break;
  9934  001934  0101               	movlb	1	; () banked
  9935  001936  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
  9936  001938  B4D8               	btfsc	status,2,c
  9937  00193A  D007               	goto	l7264
  9938                           
  9939                           ; BSR set to: 1
  9940                           ;LED_BarGraph.c: 139: else
  9941                           ;LED_BarGraph.c: 140: timeOut++;
  9942                           
  9943                           ; BSR set to: 1
  9944                           
  9945                           ; BSR set to: 1
  9946                           
  9947                           ; BSR set to: 1
  9948                           ;LED_BarGraph.c: 138: break;
  9949  00193C  0101               	movlb	1	; () banked
  9950  00193E  4B4E               	infsnz	LEDwriteDisplay@timeOut& (0+255),f,b
  9951  001940  2B4F               	incf	(LEDwriteDisplay@timeOut+1)& (0+255),f,b
  9952  001942                     l7262:
  9953                           
  9954                           ; BSR set to: 1
  9955  001942  0101               	movlb	1	; () banked
  9956  001944  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
  9957  001946  A4D8               	btfss	status,2,c
  9958  001948  D7D5               	goto	l7242
  9959  00194A                     l7264:
  9960                           
  9961                           ; BSR set to: 1
  9962                           ;LED_BarGraph.c: 141: }
  9963                           ;LED_BarGraph.c: 142: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  9964  00194A  0E02               	movlw	2
  9965  00194C  0101               	movlb	1	; () banked
  9966  00194E  6F50               	movwf	LEDwriteDisplay@status& (0+255),b
  9967                           
  9968                           ;LED_BarGraph.c: 147: writeBuffer[0] = 0;
  9969  001950  0E00               	movlw	0
  9970  001952  0101               	movlb	1	; () banked
  9971  001954  6F39               	movwf	LEDwriteDisplay@writeBuffer& (0+255),b
  9972                           
  9973                           ; BSR set to: 1
  9974                           ;LED_BarGraph.c: 148: writeBuffer[1] = displaybuffer[0] & 0xFF;
  9975  001956  C060  F13A         	movff	_displaybuffer,LEDwriteDisplay@writeBuffer+1
  9976                           
  9977                           ; BSR set to: 1
  9978                           ;LED_BarGraph.c: 149: writeBuffer[2] = displaybuffer[0] >> 8;
  9979  00195A  C061  F13B         	movff	_displaybuffer+1,LEDwriteDisplay@writeBuffer+2
  9980                           
  9981                           ; BSR set to: 1
  9982                           ;LED_BarGraph.c: 150: writeBuffer[3] = displaybuffer[1] & 0xFF;
  9983  00195E  C064  F13C         	movff	_displaybuffer+4,LEDwriteDisplay@writeBuffer+3
  9984                           
  9985                           ; BSR set to: 1
  9986                           ;LED_BarGraph.c: 151: writeBuffer[4] = displaybuffer[1] >> 8;
  9987  001962  C065  F13D         	movff	_displaybuffer+5,LEDwriteDisplay@writeBuffer+4
  9988                           
  9989                           ; BSR set to: 1
  9990                           ;LED_BarGraph.c: 152: writeBuffer[5] = displaybuffer[2] & 0xFF;
  9991  001966  C068  F13E         	movff	_displaybuffer+8,LEDwriteDisplay@writeBuffer+5
  9992                           
  9993                           ; BSR set to: 1
  9994                           ;LED_BarGraph.c: 153: writeBuffer[6] = displaybuffer[2] >> 8;
  9995  00196A  C069  F13F         	movff	_displaybuffer+9,LEDwriteDisplay@writeBuffer+6
  9996                           
  9997                           ; BSR set to: 1
  9998                           ;LED_BarGraph.c: 154: writeBuffer[7] = displaybuffer[3] & 0xFF;
  9999  00196E  C06C  F140         	movff	_displaybuffer+12,LEDwriteDisplay@writeBuffer+7
 10000                           
 10001                           ; BSR set to: 1
 10002                           ;LED_BarGraph.c: 155: writeBuffer[8] = displaybuffer[3] >> 8;
 10003  001972  C06D  F141         	movff	_displaybuffer+13,LEDwriteDisplay@writeBuffer+8
 10004                           
 10005                           ; BSR set to: 1
 10006                           ;LED_BarGraph.c: 156: writeBuffer[9] = displaybuffer[4] & 0xFF;
 10007  001976  C070  F142         	movff	_displaybuffer+16,LEDwriteDisplay@writeBuffer+9
 10008                           
 10009                           ; BSR set to: 1
 10010                           ;LED_BarGraph.c: 157: writeBuffer[10] = displaybuffer[4] >> 8;
 10011  00197A  C071  F143         	movff	_displaybuffer+17,LEDwriteDisplay@writeBuffer+10
 10012                           
 10013                           ; BSR set to: 1
 10014                           ;LED_BarGraph.c: 158: writeBuffer[11] = displaybuffer[5] & 0xFF;
 10015  00197E  C074  F144         	movff	_displaybuffer+20,LEDwriteDisplay@writeBuffer+11
 10016                           
 10017                           ; BSR set to: 1
 10018                           ;LED_BarGraph.c: 159: writeBuffer[12] = displaybuffer[5] >> 8;
 10019  001982  C075  F145         	movff	_displaybuffer+21,LEDwriteDisplay@writeBuffer+12
 10020                           
 10021                           ; BSR set to: 1
 10022                           ;LED_BarGraph.c: 160: writeBuffer[13] = displaybuffer[6] & 0xFF;
 10023  001986  C078  F146         	movff	_displaybuffer+24,LEDwriteDisplay@writeBuffer+13
 10024                           
 10025                           ; BSR set to: 1
 10026                           ;LED_BarGraph.c: 161: writeBuffer[14] = displaybuffer[6] >> 8;
 10027  00198A  C079  F147         	movff	_displaybuffer+25,LEDwriteDisplay@writeBuffer+14
 10028                           
 10029                           ; BSR set to: 1
 10030                           ;LED_BarGraph.c: 162: writeBuffer[15] = displaybuffer[7] & 0xFF;
 10031  00198E  C07C  F148         	movff	_displaybuffer+28,LEDwriteDisplay@writeBuffer+15
 10032                           
 10033                           ; BSR set to: 1
 10034                           ;LED_BarGraph.c: 163: writeBuffer[16] = displaybuffer[7] >> 8;
 10035  001992  C07D  F149         	movff	_displaybuffer+29,LEDwriteDisplay@writeBuffer+16
 10036                           
 10037                           ; BSR set to: 1
 10038                           ;LED_BarGraph.c: 164: writeBuffer[17] = displaybuffer[8] & 0xFF;
 10039  001996  C080  F14A         	movff	_displaybuffer+32,LEDwriteDisplay@writeBuffer+17
 10040                           
 10041                           ; BSR set to: 1
 10042                           ;LED_BarGraph.c: 165: writeBuffer[18] = displaybuffer[8] >> 8;
 10043  00199A  C081  F14B         	movff	_displaybuffer+33,LEDwriteDisplay@writeBuffer+18
 10044                           
 10045                           ;LED_BarGraph.c: 167: timeOut = 0;
 10046  00199E  0E00               	movlw	0
 10047  0019A0  0101               	movlb	1	; () banked
 10048  0019A2  6F4F               	movwf	(LEDwriteDisplay@timeOut+1)& (0+255),b
 10049  0019A4  0E00               	movlw	0
 10050  0019A6  6F4E               	movwf	LEDwriteDisplay@timeOut& (0+255),b
 10051                           
 10052                           ;LED_BarGraph.c: 168: while (status != I2C1_MESSAGE_FAIL) {
 10053  0019A8  D027               	goto	l7322
 10054  0019AA                     l7302:
 10055                           
 10056                           ; BSR set to: 1
 10057                           ;LED_BarGraph.c: 170: I2C1_MasterWrite(&writeBuffer,
 10058                           ;LED_BarGraph.c: 171: 17,
 10059                           ;LED_BarGraph.c: 172: i2c_addr,
 10060                           ;LED_BarGraph.c: 173: &status);
 10061  0019AA  0E39               	movlw	low LEDwriteDisplay@writeBuffer
 10062  0019AC  6E24               	movwf	I2C1_MasterWrite@pdata,c
 10063  0019AE  0E01               	movlw	high LEDwriteDisplay@writeBuffer
 10064  0019B0  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
 10065  0019B2  0E11               	movlw	17
 10066  0019B4  6E26               	movwf	I2C1_MasterWrite@length,c
 10067  0019B6  C14D  F027         	movff	LEDwriteDisplay@i2c_addr,I2C1_MasterWrite@address
 10068  0019BA  6A28               	clrf	I2C1_MasterWrite@address+1,c
 10069  0019BC  0E50               	movlw	low LEDwriteDisplay@status
 10070  0019BE  6E29               	movwf	I2C1_MasterWrite@pflag,c
 10071  0019C0  0E01               	movlw	high LEDwriteDisplay@status
 10072  0019C2  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
 10073  0019C4  EC8F  F015         	call	_I2C1_MasterWrite	;wreg free
 10074  0019C8                     l7304:
 10075  0019C8  0E02               	movlw	2
 10076  0019CA  0101               	movlb	1	; () banked
 10077  0019CC  1950               	xorwf	LEDwriteDisplay@status& (0+255),w,b
 10078  0019CE  B4D8               	btfsc	status,2,c
 10079  0019D0  D7FB               	goto	l7304
 10080                           
 10081                           ; BSR set to: 1
 10082                           ;LED_BarGraph.c: 178: if (status == I2C1_MESSAGE_COMPLETE)
 10083                           
 10084                           ; BSR set to: 1
 10085  0019D2  0101               	movlb	1	; () banked
 10086  0019D4  5150               	movf	LEDwriteDisplay@status& (0+255),w,b
 10087  0019D6  0101               	movlb	1	; () banked
 10088  0019D8  B4D8               	btfsc	status,2,c
 10089  0019DA  0012               	return	
 10090                           
 10091                           ; BSR set to: 1
 10092                           ;LED_BarGraph.c: 180: if (timeOut == 100)
 10093                           
 10094                           ; BSR set to: 1
 10095                           
 10096                           ; BSR set to: 1
 10097                           ;LED_BarGraph.c: 179: break;
 10098  0019DC  0E64               	movlw	100
 10099  0019DE  0101               	movlb	1	; () banked
 10100  0019E0  194E               	xorwf	LEDwriteDisplay@timeOut& (0+255),w,b
 10101  0019E2  0101               	movlb	1	; () banked
 10102  0019E4  114F               	iorwf	(LEDwriteDisplay@timeOut+1)& (0+255),w,b
 10103  0019E6  B4D8               	btfsc	status,2,c
 10104  0019E8  0012               	return	
 10105                           
 10106                           ; BSR set to: 1
 10107                           ;LED_BarGraph.c: 182: if (status == I2C1_MESSAGE_FAIL)
 10108                           
 10109                           ; BSR set to: 1
 10110                           
 10111                           ; BSR set to: 1
 10112                           ;LED_BarGraph.c: 181: break;
 10113  0019EA  0101               	movlb	1	; () banked
 10114  0019EC  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
 10115  0019EE  B4D8               	btfsc	status,2,c
 10116  0019F0  0012               	return	
 10117                           
 10118                           ; BSR set to: 1
 10119                           ;LED_BarGraph.c: 184: else
 10120                           ;LED_BarGraph.c: 185: timeOut++;
 10121                           
 10122                           ; BSR set to: 1
 10123                           
 10124                           ; BSR set to: 1
 10125                           
 10126                           ; BSR set to: 1
 10127                           ;LED_BarGraph.c: 183: break;
 10128  0019F2  0101               	movlb	1	; () banked
 10129  0019F4  4B4E               	infsnz	LEDwriteDisplay@timeOut& (0+255),f,b
 10130  0019F6  2B4F               	incf	(LEDwriteDisplay@timeOut+1)& (0+255),f,b
 10131  0019F8                     l7322:
 10132                           
 10133                           ; BSR set to: 1
 10134  0019F8  0101               	movlb	1	; () banked
 10135  0019FA  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
 10136  0019FC  B4D8               	btfsc	status,2,c
 10137  0019FE  0012               	return	
 10138  001A00  D7D4               	goto	l7302
 10139  001A02                     __end_of_LEDwriteDisplay:
 10140                           	opt stack 0
 10141                           tosu	equ	0xFFF
 10142                           tosh	equ	0xFFE
 10143                           tosl	equ	0xFFD
 10144                           pclath	equ	0xFFA
 10145                           tblptru	equ	0xFF8
 10146                           tblptrh	equ	0xFF7
 10147                           tblptrl	equ	0xFF6
 10148                           tablat	equ	0xFF5
 10149                           prodh	equ	0xFF4
 10150                           prodl	equ	0xFF3
 10151                           intcon	equ	0xFF2
 10152                           intcon2	equ	0xFF1
 10153                           postinc0	equ	0xFEE
 10154                           wreg	equ	0xFE8
 10155                           indf2	equ	0xFDF
 10156                           postinc2	equ	0xFDE
 10157                           postdec2	equ	0xFDD
 10158                           plusw2	equ	0xFDB
 10159                           fsr2h	equ	0xFDA
 10160                           fsr2l	equ	0xFD9
 10161                           status	equ	0xFD8
 10162                           
 10163 ;; *************** function _LEDsetValue *****************
 10164 ;; Defined at:
 10165 ;;		line 11 in file "LED_BarGraph.c"
 10166 ;; Parameters:    Size  Location     Type
 10167 ;;  value           2   16[BANK1 ] int 
 10168 ;;  color           2   18[BANK1 ] int 
 10169 ;; Auto vars:     Size  Location     Type
 10170 ;;  k               2   20[BANK1 ] int 
 10171 ;; Return value:  Size  Location     Type
 10172 ;;                  1    wreg      void 
 10173 ;; Registers used:
 10174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10175 ;; Tracked objects:
 10176 ;;		On entry : 0/0
 10177 ;;		On exit  : 0/0
 10178 ;;		Unchanged: 0/0
 10179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10180 ;;      Params:         0       0       4       0       0       0       0
 10181 ;;      Locals:         0       0       2       0       0       0       0
 10182 ;;      Temps:          0       1       0       0       0       0       0
 10183 ;;      Totals:         0       1       6       0       0       0       0
 10184 ;;Total ram usage:        7 bytes
 10185 ;; Hardware stack levels used:    1
 10186 ;; Hardware stack levels required when called:    6
 10187 ;; This function calls:
 10188 ;;		_LEDsetBar
 10189 ;; This function is called by:
 10190 ;;		_main
 10191 ;; This function uses a non-reentrant model
 10192 ;;
 10193                           
 10194                           	psect	text51
 10195  0023C0                     __ptext51:
 10196                           	opt stack 0
 10197  0023C0                     _LEDsetValue:
 10198                           	opt stack 24
 10199                           
 10200                           ;LED_BarGraph.c: 12: if (value > 24) value = 24;
 10201                           
 10202                           ; BSR set to: 1
 10203                           ;incstack = 0
 10204  0023C0  0101               	movlb	1	; () banked
 10205  0023C2  BF4A               	btfsc	(LEDsetValue@value+1)& (0+255),7,b
 10206  0023C4  D00D               	goto	l7220
 10207  0023C6  0101               	movlb	1	; () banked
 10208  0023C8  514A               	movf	(LEDsetValue@value+1)& (0+255),w,b
 10209  0023CA  E105               	bnz	u8220
 10210  0023CC  0E19               	movlw	25
 10211  0023CE  0101               	movlb	1	; () banked
 10212  0023D0  5D49               	subwf	LEDsetValue@value& (0+255),w,b
 10213  0023D2  A0D8               	btfss	status,0,c
 10214  0023D4  D005               	goto	l7220
 10215  0023D6                     u8220:
 10216                           
 10217                           ; BSR set to: 1
 10218  0023D6  0E00               	movlw	0
 10219  0023D8  0101               	movlb	1	; () banked
 10220  0023DA  6F4A               	movwf	(LEDsetValue@value+1)& (0+255),b
 10221  0023DC  0E18               	movlw	24
 10222  0023DE  6F49               	movwf	LEDsetValue@value& (0+255),b
 10223  0023E0                     l7220:
 10224                           
 10225                           ; BSR set to: 1
 10226                           ;LED_BarGraph.c: 13: if (value < 0) value = 0;
 10227  0023E0  0101               	movlb	1	; () banked
 10228  0023E2  AF4A               	btfss	(LEDsetValue@value+1)& (0+255),7,b
 10229  0023E4  D005               	goto	l624
 10230                           
 10231                           ; BSR set to: 1
 10232  0023E6  0E00               	movlw	0
 10233  0023E8  0101               	movlb	1	; () banked
 10234  0023EA  6F4A               	movwf	(LEDsetValue@value+1)& (0+255),b
 10235  0023EC  0E00               	movlw	0
 10236  0023EE  6F49               	movwf	LEDsetValue@value& (0+255),b
 10237  0023F0                     l624:
 10238                           
 10239                           ; BSR set to: 1
 10240                           ;LED_BarGraph.c: 14: int k;
 10241                           ;LED_BarGraph.c: 15: for (k = 0; k < 24; k++) {
 10242  0023F0  0E00               	movlw	0
 10243  0023F2  0101               	movlb	1	; () banked
 10244  0023F4  6F4E               	movwf	(LEDsetValue@k+1)& (0+255),b
 10245  0023F6  0E00               	movlw	0
 10246  0023F8  6F4D               	movwf	LEDsetValue@k& (0+255),b
 10247  0023FA                     l7224:
 10248                           
 10249                           ; BSR set to: 1
 10250  0023FA  0101               	movlb	1	; () banked
 10251  0023FC  BF4E               	btfsc	(LEDsetValue@k+1)& (0+255),7,b
 10252  0023FE  D008               	goto	l7228
 10253  002400  0101               	movlb	1	; () banked
 10254  002402  514E               	movf	(LEDsetValue@k+1)& (0+255),w,b
 10255  002404  E133               	bnz	l629
 10256  002406  0E18               	movlw	24
 10257  002408  0101               	movlb	1	; () banked
 10258  00240A  5D4D               	subwf	LEDsetValue@k& (0+255),w,b
 10259  00240C  B0D8               	btfsc	status,0,c
 10260  00240E  0012               	return	
 10261  002410                     l7228:
 10262                           
 10263                           ; BSR set to: 1
 10264                           ;LED_BarGraph.c: 16: if (k < value){
 10265  002410  0101               	movlb	1	; () banked
 10266  002412  5149               	movf	LEDsetValue@value& (0+255),w,b
 10267  002414  0101               	movlb	1	; () banked
 10268  002416  5D4D               	subwf	LEDsetValue@k& (0+255),w,b
 10269  002418  0101               	movlb	1	; () banked
 10270  00241A  514E               	movf	(LEDsetValue@k+1)& (0+255),w,b
 10271  00241C  0A80               	xorlw	128
 10272  00241E  0100               	movlb	0	; () banked
 10273  002420  6FFD               	movwf	??_LEDsetValue& (0+255),b
 10274  002422  0101               	movlb	1	; () banked
 10275  002424  514A               	movf	(LEDsetValue@value+1)& (0+255),w,b
 10276  002426  0A80               	xorlw	128
 10277  002428  0100               	movlb	0	; () banked
 10278  00242A  59FD               	subwfb	??_LEDsetValue& (0+255),w,b
 10279  00242C  B0D8               	btfsc	status,0,c
 10280  00242E  D010               	goto	l7234
 10281                           
 10282                           ; BSR set to: 0
 10283                           ;LED_BarGraph.c: 17: LATC1 = ~LATC1;
 10284  002430  B28B               	btfsc	3979,1,c	;volatile
 10285  002432  D002               	goto	u8260
 10286  002434  828B               	bsf	3979,1,c	;volatile
 10287  002436  D001               	goto	l7232
 10288  002438                     u8260:
 10289  002438  928B               	bcf	3979,1,c	;volatile
 10290  00243A                     l7232:
 10291                           
 10292                           ;LED_BarGraph.c: 18: LEDsetBar(k, color);}
 10293  00243A  C14D  F023         	movff	LEDsetValue@k,LEDsetBar@bar
 10294  00243E  C14E  F024         	movff	LEDsetValue@k+1,LEDsetBar@bar+1
 10295  002442  C14B  F025         	movff	LEDsetValue@color,LEDsetBar@color
 10296  002446  C14C  F026         	movff	LEDsetValue@color+1,LEDsetBar@color+1
 10297  00244A  ECC4  F003         	call	_LEDsetBar	;wreg free
 10298  00244E  D00A               	goto	l7236
 10299  002450                     l7234:
 10300                           
 10301                           ;LED_BarGraph.c: 19: else LEDsetBar(k, 0);
 10302  002450  C14D  F023         	movff	LEDsetValue@k,LEDsetBar@bar
 10303  002454  C14E  F024         	movff	LEDsetValue@k+1,LEDsetBar@bar+1
 10304  002458  0E00               	movlw	0
 10305  00245A  6E26               	movwf	LEDsetBar@color+1,c
 10306  00245C  0E00               	movlw	0
 10307  00245E  6E25               	movwf	LEDsetBar@color,c
 10308  002460  ECC4  F003         	call	_LEDsetBar	;wreg free
 10309  002464                     l7236:
 10310  002464  0101               	movlb	1	; () banked
 10311  002466  4B4D               	infsnz	LEDsetValue@k& (0+255),f,b
 10312  002468  2B4E               	incf	(LEDsetValue@k+1)& (0+255),f,b
 10313  00246A  D7C7               	goto	l7224
 10314  00246C                     l629:
 10315                           
 10316                           ; BSR set to: 1
 10317  00246C  0012               	return		;funcret
 10318  00246E                     __end_of_LEDsetValue:
 10319                           	opt stack 0
 10320                           tosu	equ	0xFFF
 10321                           tosh	equ	0xFFE
 10322                           tosl	equ	0xFFD
 10323                           pclath	equ	0xFFA
 10324                           tblptru	equ	0xFF8
 10325                           tblptrh	equ	0xFF7
 10326                           tblptrl	equ	0xFF6
 10327                           tablat	equ	0xFF5
 10328                           prodh	equ	0xFF4
 10329                           prodl	equ	0xFF3
 10330                           intcon	equ	0xFF2
 10331                           intcon2	equ	0xFF1
 10332                           postinc0	equ	0xFEE
 10333                           wreg	equ	0xFE8
 10334                           indf2	equ	0xFDF
 10335                           postinc2	equ	0xFDE
 10336                           postdec2	equ	0xFDD
 10337                           plusw2	equ	0xFDB
 10338                           fsr2h	equ	0xFDA
 10339                           fsr2l	equ	0xFD9
 10340                           status	equ	0xFD8
 10341                           
 10342 ;; *************** function _LEDsetBar *****************
 10343 ;; Defined at:
 10344 ;;		line 195 in file "LED_BarGraph.c"
 10345 ;; Parameters:    Size  Location     Type
 10346 ;;  bar             2   34[COMRAM] int 
 10347 ;;  color           2   36[COMRAM] int 
 10348 ;; Auto vars:     Size  Location     Type
 10349 ;;  a               2   40[COMRAM] unsigned int 
 10350 ;;  c               2   38[COMRAM] unsigned int 
 10351 ;; Return value:  Size  Location     Type
 10352 ;;                  1    wreg      void 
 10353 ;; Registers used:
 10354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10355 ;; Tracked objects:
 10356 ;;		On entry : 0/0
 10357 ;;		On exit  : 0/0
 10358 ;;		Unchanged: 0/0
 10359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10360 ;;      Params:         4       0       0       0       0       0       0
 10361 ;;      Locals:         4       0       0       0       0       0       0
 10362 ;;      Temps:          0       0      16       0       0       0       0
 10363 ;;      Totals:         8       0      16       0       0       0       0
 10364 ;;Total ram usage:       24 bytes
 10365 ;; Hardware stack levels used:    1
 10366 ;; Hardware stack levels required when called:    5
 10367 ;; This function calls:
 10368 ;;		___awdiv
 10369 ;; This function is called by:
 10370 ;;		_LEDsetValue
 10371 ;; This function uses a non-reentrant model
 10372 ;;
 10373                           
 10374                           	psect	text52
 10375  000788                     __ptext52:
 10376                           	opt stack 0
 10377  000788                     _LEDsetBar:
 10378                           	opt stack 24
 10379                           
 10380                           ;LED_BarGraph.c: 196: uint16_t a, c;
 10381                           ;LED_BarGraph.c: 198: if (bar < 12)
 10382                           
 10383                           ; BSR set to: 1
 10384                           ;incstack = 0
 10385  000788  BE24               	btfsc	LEDsetBar@bar+1,7,c
 10386  00078A  D006               	goto	l6664
 10387  00078C  5024               	movf	LEDsetBar@bar+1,w,c
 10388  00078E  E10F               	bnz	l6666
 10389  000790  0E0C               	movlw	12
 10390  000792  5C23               	subwf	LEDsetBar@bar,w,c
 10391  000794  B0D8               	btfsc	status,0,c
 10392  000796  D00B               	goto	l6666
 10393  000798                     l6664:
 10394                           
 10395                           ;LED_BarGraph.c: 199: c = bar / 4;
 10396  000798  C023  F01B         	movff	LEDsetBar@bar,___awdiv@dividend
 10397  00079C  C024  F01C         	movff	LEDsetBar@bar+1,___awdiv@dividend+1
 10398  0007A0  0E00               	movlw	0
 10399  0007A2  6E1E               	movwf	___awdiv@divisor+1,c
 10400  0007A4  0E04               	movlw	4
 10401  0007A6  6E1D               	movwf	___awdiv@divisor,c
 10402  0007A8  ECAA  F013         	call	___awdiv	;wreg free
 10403  0007AC  D00C               	goto	L3
 10404  0007AE                     l6666:
 10405                           
 10406                           ;LED_BarGraph.c: 200: else
 10407                           ;LED_BarGraph.c: 201: c = (bar - 12) / 4;
 10408  0007AE  0EF4               	movlw	244
 10409  0007B0  2423               	addwf	LEDsetBar@bar,w,c
 10410  0007B2  6E1B               	movwf	___awdiv@dividend,c
 10411  0007B4  0EFF               	movlw	255
 10412  0007B6  2024               	addwfc	LEDsetBar@bar+1,w,c
 10413  0007B8  6E1C               	movwf	___awdiv@dividend+1,c
 10414  0007BA  0E00               	movlw	0
 10415  0007BC  6E1E               	movwf	___awdiv@divisor+1,c
 10416  0007BE  0E04               	movlw	4
 10417  0007C0  6E1D               	movwf	___awdiv@divisor,c
 10418  0007C2  ECAA  F013         	call	___awdiv	;wreg free
 10419  0007C6                     L3:
 10420  0007C6  C01B  F027         	movff	?___awdiv,LEDsetBar@c
 10421  0007CA  C01C  F028         	movff	?___awdiv+1,LEDsetBar@c+1
 10422                           
 10423                           ;LED_BarGraph.c: 203: a = bar % 4;
 10424  0007CE  0E03               	movlw	3
 10425  0007D0  1423               	andwf	LEDsetBar@bar,w,c
 10426  0007D2  6E29               	movwf	LEDsetBar@a,c
 10427  0007D4  6A2A               	clrf	LEDsetBar@a+1,c
 10428                           
 10429                           ;LED_BarGraph.c: 204: if (bar >= 12)
 10430  0007D6  BE24               	btfsc	LEDsetBar@bar+1,7,c
 10431  0007D8  D00A               	goto	l703
 10432  0007DA  5024               	movf	LEDsetBar@bar+1,w,c
 10433  0007DC  E104               	bnz	u7060
 10434  0007DE  0E0C               	movlw	12
 10435  0007E0  5C23               	subwf	LEDsetBar@bar,w,c
 10436  0007E2  A0D8               	btfss	status,0,c
 10437  0007E4  D004               	goto	l703
 10438  0007E6                     u7060:
 10439                           
 10440                           ;LED_BarGraph.c: 205: a += 4;
 10441  0007E6  0E04               	movlw	4
 10442  0007E8  2629               	addwf	LEDsetBar@a,f,c
 10443  0007EA  0E00               	movlw	0
 10444  0007EC  222A               	addwfc	LEDsetBar@a+1,f,c
 10445  0007EE                     l703:
 10446                           
 10447                           ;LED_BarGraph.c: 208: if (color == 1) {
 10448  0007EE  0425               	decf	LEDsetBar@color,w,c
 10449  0007F0  1026               	iorwf	LEDsetBar@color+1,w,c
 10450  0007F2  A4D8               	btfss	status,2,c
 10451  0007F4  D07D               	goto	l6676
 10452                           
 10453                           ;LED_BarGraph.c: 210: displaybuffer[c] |= (1<<(a));
 10454  0007F6  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 10455  0007FA  0E01               	movlw	1
 10456  0007FC  0101               	movlb	1	; () banked
 10457  0007FE  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 10458  000800  0E00               	movlw	0
 10459  000802  0101               	movlb	1	; () banked
 10460  000804  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 10461  000806  0101               	movlb	1	; () banked
 10462  000808  2B39               	incf	??_LEDsetBar& (0+255),f,b
 10463  00080A  D004               	goto	u7084
 10464  00080C                     u7085:
 10465  00080C  90D8               	bcf	status,0,c
 10466  00080E  0101               	movlb	1	; () banked
 10467  000810  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 10468  000812  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 10469  000814                     u7084:
 10470  000814  0101               	movlb	1	; () banked
 10471  000816  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 10472  000818  D7F9               	goto	u7085
 10473  00081A  C13A  F13C         	movff	??_LEDsetBar+1,??_LEDsetBar+3
 10474  00081E  C13B  F13D         	movff	??_LEDsetBar+2,??_LEDsetBar+4
 10475  000822  0E00               	movlw	0
 10476  000824  0101               	movlb	1	; () banked
 10477  000826  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 10478  000828  0EFF               	movlw	255
 10479  00082A  6F3E               	movwf	(??_LEDsetBar+5)& (0+255),b
 10480  00082C  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 10481  00082E  0E60               	movlw	low _displaybuffer
 10482  000830  0101               	movlb	1	; () banked
 10483  000832  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 10484  000834  0E00               	movlw	high _displaybuffer
 10485  000836  0101               	movlb	1	; () banked
 10486  000838  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 10487  00083A  90D8               	bcf	status,0,c
 10488  00083C  3427               	rlcf	LEDsetBar@c,w,c
 10489  00083E  6ED9               	movwf	fsr2l,c
 10490  000840  3428               	rlcf	LEDsetBar@c+1,w,c
 10491  000842  6EDA               	movwf	fsr2h,c
 10492  000844  90D8               	bcf	status,0,c
 10493  000846  36D9               	rlcf	fsr2l,f,c
 10494  000848  36DA               	rlcf	fsr2h,f,c
 10495  00084A  0101               	movlb	1	; () banked
 10496  00084C  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 10497  00084E  26D9               	addwf	fsr2l,f,c
 10498  000850  0101               	movlb	1	; () banked
 10499  000852  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 10500  000854  22DA               	addwfc	fsr2h,f,c
 10501  000856  0101               	movlb	1	; () banked
 10502  000858  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 10503  00085A  12DE               	iorwf	postinc2,f,c
 10504  00085C  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 10505  00085E  12DE               	iorwf	postinc2,f,c
 10506  000860  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 10507  000862  12DE               	iorwf	postinc2,f,c
 10508  000864  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 10509  000866  12DE               	iorwf	postinc2,f,c
 10510                           
 10511                           ;LED_BarGraph.c: 212: displaybuffer[c] &= ~(1<<(a + 8));
 10512  000868  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 10513  00086C  0E08               	movlw	8
 10514  00086E  0101               	movlb	1	; () banked
 10515  000870  2739               	addwf	??_LEDsetBar& (0+255),f,b
 10516  000872  0E01               	movlw	1
 10517  000874  0101               	movlb	1	; () banked
 10518  000876  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 10519  000878  0E00               	movlw	0
 10520  00087A  0101               	movlb	1	; () banked
 10521  00087C  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 10522  00087E  0101               	movlb	1	; () banked
 10523  000880  2B39               	incf	??_LEDsetBar& (0+255),f,b
 10524  000882  D004               	goto	u7094
 10525  000884                     u7095:
 10526  000884  90D8               	bcf	status,0,c
 10527  000886  0101               	movlb	1	; () banked
 10528  000888  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 10529  00088A  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 10530  00088C                     u7094:
 10531  00088C  0101               	movlb	1	; () banked
 10532  00088E  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 10533  000890  D7F9               	goto	u7095
 10534  000892  0101               	movlb	1	; () banked
 10535  000894  1D3A               	comf	(??_LEDsetBar+1)& (0+255),w,b
 10536  000896  0101               	movlb	1	; () banked
 10537  000898  6F3C               	movwf	(??_LEDsetBar+3)& (0+255),b
 10538  00089A  0101               	movlb	1	; () banked
 10539  00089C  1D3B               	comf	(??_LEDsetBar+2)& (0+255),w,b
 10540  00089E  0101               	movlb	1	; () banked
 10541  0008A0  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 10542  0008A2  0101               	movlb	1	; () banked
 10543  0008A4  6B3E               	clrf	(??_LEDsetBar+5)& (0+255),b
 10544  0008A6  0101               	movlb	1	; () banked
 10545  0008A8  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 10546  0008AA  073E               	decf	(??_LEDsetBar+5)& (0+255),f,b
 10547  0008AC  0101               	movlb	1	; () banked
 10548  0008AE  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 10549  0008B0  0101               	movlb	1	; () banked
 10550  0008B2  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 10551  0008B4  0E60               	movlw	low _displaybuffer
 10552  0008B6  0101               	movlb	1	; () banked
 10553  0008B8  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 10554  0008BA  0E00               	movlw	high _displaybuffer
 10555  0008BC  0101               	movlb	1	; () banked
 10556  0008BE  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 10557  0008C0  90D8               	bcf	status,0,c
 10558  0008C2  3427               	rlcf	LEDsetBar@c,w,c
 10559  0008C4  6ED9               	movwf	fsr2l,c
 10560  0008C6  3428               	rlcf	LEDsetBar@c+1,w,c
 10561  0008C8  6EDA               	movwf	fsr2h,c
 10562  0008CA  90D8               	bcf	status,0,c
 10563  0008CC  36D9               	rlcf	fsr2l,f,c
 10564  0008CE  36DA               	rlcf	fsr2h,f,c
 10565  0008D0  0101               	movlb	1	; () banked
 10566  0008D2  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 10567  0008D4  26D9               	addwf	fsr2l,f,c
 10568  0008D6  0101               	movlb	1	; () banked
 10569  0008D8  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 10570  0008DA  22DA               	addwfc	fsr2h,f,c
 10571  0008DC  0101               	movlb	1	; () banked
 10572  0008DE  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 10573  0008E0  16DE               	andwf	postinc2,f,c
 10574  0008E2  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 10575  0008E4  16DE               	andwf	postinc2,f,c
 10576  0008E6  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 10577  0008E8  16DE               	andwf	postinc2,f,c
 10578  0008EA  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 10579  0008EC  16DE               	andwf	postinc2,f,c
 10580                           
 10581                           ;LED_BarGraph.c: 213: } else if (color == 2) {
 10582  0008EE  0012               	return	
 10583  0008F0                     l6676:
 10584  0008F0  0E02               	movlw	2
 10585  0008F2  1825               	xorwf	LEDsetBar@color,w,c
 10586  0008F4  1026               	iorwf	LEDsetBar@color+1,w,c
 10587  0008F6  A4D8               	btfss	status,2,c
 10588  0008F8  D05A               	goto	l6680
 10589                           
 10590                           ;LED_BarGraph.c: 215: displaybuffer[c] |= (1<<(a)) | (1<<(a + 8));
 10591  0008FA  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 10592  0008FE  0E08               	movlw	8
 10593  000900  0101               	movlb	1	; () banked
 10594  000902  2739               	addwf	??_LEDsetBar& (0+255),f,b
 10595  000904  0E01               	movlw	1
 10596  000906  0101               	movlb	1	; () banked
 10597  000908  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 10598  00090A  0E00               	movlw	0
 10599  00090C  0101               	movlb	1	; () banked
 10600  00090E  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 10601  000910  0101               	movlb	1	; () banked
 10602  000912  2B39               	incf	??_LEDsetBar& (0+255),f,b
 10603  000914  D004               	goto	u7114
 10604  000916                     u7115:
 10605  000916  90D8               	bcf	status,0,c
 10606  000918  0101               	movlb	1	; () banked
 10607  00091A  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 10608  00091C  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 10609  00091E                     u7114:
 10610  00091E  0101               	movlb	1	; () banked
 10611  000920  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 10612  000922  D7F9               	goto	u7115
 10613  000924  C029  F13C         	movff	LEDsetBar@a,??_LEDsetBar+3
 10614  000928  0E01               	movlw	1
 10615  00092A  0101               	movlb	1	; () banked
 10616  00092C  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 10617  00092E  0E00               	movlw	0
 10618  000930  0101               	movlb	1	; () banked
 10619  000932  6F3E               	movwf	(??_LEDsetBar+5)& (0+255),b
 10620  000934  0101               	movlb	1	; () banked
 10621  000936  2B3C               	incf	(??_LEDsetBar+3)& (0+255),f,b
 10622  000938  D004               	goto	u7124
 10623  00093A                     u7125:
 10624  00093A  90D8               	bcf	status,0,c
 10625  00093C  0101               	movlb	1	; () banked
 10626  00093E  373D               	rlcf	(??_LEDsetBar+4)& (0+255),f,b
 10627  000940  373E               	rlcf	(??_LEDsetBar+5)& (0+255),f,b
 10628  000942                     u7124:
 10629  000942  0101               	movlb	1	; () banked
 10630  000944  2F3C               	decfsz	(??_LEDsetBar+3)& (0+255),f,b
 10631  000946  D7F9               	goto	u7125
 10632  000948  0101               	movlb	1	; () banked
 10633  00094A  513A               	movf	(??_LEDsetBar+1)& (0+255),w,b
 10634  00094C  0101               	movlb	1	; () banked
 10635  00094E  113D               	iorwf	(??_LEDsetBar+4)& (0+255),w,b
 10636  000950  0101               	movlb	1	; () banked
 10637  000952  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 10638  000954  0101               	movlb	1	; () banked
 10639  000956  513B               	movf	(??_LEDsetBar+2)& (0+255),w,b
 10640  000958  0101               	movlb	1	; () banked
 10641  00095A  113E               	iorwf	(??_LEDsetBar+5)& (0+255),w,b
 10642  00095C  0101               	movlb	1	; () banked
 10643  00095E  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 10644  000960  0101               	movlb	1	; () banked
 10645  000962  6B41               	clrf	(??_LEDsetBar+8)& (0+255),b
 10646  000964  0101               	movlb	1	; () banked
 10647  000966  BF40               	btfsc	(??_LEDsetBar+7)& (0+255),7,b
 10648  000968  0741               	decf	(??_LEDsetBar+8)& (0+255),f,b
 10649  00096A  0101               	movlb	1	; () banked
 10650  00096C  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 10651  00096E  0101               	movlb	1	; () banked
 10652  000970  6F42               	movwf	(??_LEDsetBar+9)& (0+255),b
 10653  000972  0E60               	movlw	low _displaybuffer
 10654  000974  0101               	movlb	1	; () banked
 10655  000976  6F43               	movwf	(??_LEDsetBar+10)& (0+255),b
 10656  000978  0E00               	movlw	high _displaybuffer
 10657  00097A  0101               	movlb	1	; () banked
 10658  00097C  6F44               	movwf	(??_LEDsetBar+11)& (0+255),b
 10659  00097E  90D8               	bcf	status,0,c
 10660  000980  3427               	rlcf	LEDsetBar@c,w,c
 10661  000982  6ED9               	movwf	fsr2l,c
 10662  000984  3428               	rlcf	LEDsetBar@c+1,w,c
 10663  000986  6EDA               	movwf	fsr2h,c
 10664  000988  90D8               	bcf	status,0,c
 10665  00098A  36D9               	rlcf	fsr2l,f,c
 10666  00098C  36DA               	rlcf	fsr2h,f,c
 10667  00098E  0101               	movlb	1	; () banked
 10668  000990  5143               	movf	(??_LEDsetBar+10)& (0+255),w,b
 10669  000992  26D9               	addwf	fsr2l,f,c
 10670  000994  0101               	movlb	1	; () banked
 10671  000996  5144               	movf	(??_LEDsetBar+11)& (0+255),w,b
 10672  000998  22DA               	addwfc	fsr2h,f,c
 10673  00099A  0101               	movlb	1	; () banked
 10674  00099C  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 10675  00099E  12DE               	iorwf	postinc2,f,c
 10676  0009A0  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 10677  0009A2  12DE               	iorwf	postinc2,f,c
 10678  0009A4  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 10679  0009A6  12DE               	iorwf	postinc2,f,c
 10680  0009A8  5142               	movf	(??_LEDsetBar+9)& (0+255),w,b
 10681  0009AA  12DE               	iorwf	postinc2,f,c
 10682                           
 10683                           ;LED_BarGraph.c: 216: } else if (color == 0) {
 10684  0009AC  0012               	return	
 10685  0009AE                     l6680:
 10686  0009AE  5025               	movf	LEDsetBar@color,w,c
 10687  0009B0  1026               	iorwf	LEDsetBar@color+1,w,c
 10688  0009B2  A4D8               	btfss	status,2,c
 10689  0009B4  D06A               	goto	l6684
 10690                           
 10691                           ;LED_BarGraph.c: 218: displaybuffer[c] &= ~(1<<(a)) & ~(1<<(a + 8));
 10692  0009B6  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 10693  0009BA  0E08               	movlw	8
 10694  0009BC  0101               	movlb	1	; () banked
 10695  0009BE  2739               	addwf	??_LEDsetBar& (0+255),f,b
 10696  0009C0  0E01               	movlw	1
 10697  0009C2  0101               	movlb	1	; () banked
 10698  0009C4  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 10699  0009C6  0E00               	movlw	0
 10700  0009C8  0101               	movlb	1	; () banked
 10701  0009CA  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 10702  0009CC  0101               	movlb	1	; () banked
 10703  0009CE  2B39               	incf	??_LEDsetBar& (0+255),f,b
 10704  0009D0  D004               	goto	u7144
 10705  0009D2                     u7145:
 10706  0009D2  90D8               	bcf	status,0,c
 10707  0009D4  0101               	movlb	1	; () banked
 10708  0009D6  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 10709  0009D8  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 10710  0009DA                     u7144:
 10711  0009DA  0101               	movlb	1	; () banked
 10712  0009DC  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 10713  0009DE  D7F9               	goto	u7145
 10714  0009E0  0101               	movlb	1	; () banked
 10715  0009E2  1D3A               	comf	(??_LEDsetBar+1)& (0+255),w,b
 10716  0009E4  0101               	movlb	1	; () banked
 10717  0009E6  6F3C               	movwf	(??_LEDsetBar+3)& (0+255),b
 10718  0009E8  0101               	movlb	1	; () banked
 10719  0009EA  1D3B               	comf	(??_LEDsetBar+2)& (0+255),w,b
 10720  0009EC  0101               	movlb	1	; () banked
 10721  0009EE  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 10722  0009F0  C029  F13E         	movff	LEDsetBar@a,??_LEDsetBar+5
 10723  0009F4  0E01               	movlw	1
 10724  0009F6  0101               	movlb	1	; () banked
 10725  0009F8  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 10726  0009FA  0E00               	movlw	0
 10727  0009FC  0101               	movlb	1	; () banked
 10728  0009FE  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 10729  000A00  0101               	movlb	1	; () banked
 10730  000A02  2B3E               	incf	(??_LEDsetBar+5)& (0+255),f,b
 10731  000A04  D004               	goto	u7154
 10732  000A06                     u7155:
 10733  000A06  90D8               	bcf	status,0,c
 10734  000A08  0101               	movlb	1	; () banked
 10735  000A0A  373F               	rlcf	(??_LEDsetBar+6)& (0+255),f,b
 10736  000A0C  3740               	rlcf	(??_LEDsetBar+7)& (0+255),f,b
 10737  000A0E                     u7154:
 10738  000A0E  0101               	movlb	1	; () banked
 10739  000A10  2F3E               	decfsz	(??_LEDsetBar+5)& (0+255),f,b
 10740  000A12  D7F9               	goto	u7155
 10741  000A14  0101               	movlb	1	; () banked
 10742  000A16  1D3F               	comf	(??_LEDsetBar+6)& (0+255),w,b
 10743  000A18  0101               	movlb	1	; () banked
 10744  000A1A  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 10745  000A1C  0101               	movlb	1	; () banked
 10746  000A1E  1D40               	comf	(??_LEDsetBar+7)& (0+255),w,b
 10747  000A20  0101               	movlb	1	; () banked
 10748  000A22  6F42               	movwf	(??_LEDsetBar+9)& (0+255),b
 10749  000A24  0101               	movlb	1	; () banked
 10750  000A26  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 10751  000A28  0101               	movlb	1	; () banked
 10752  000A2A  1541               	andwf	(??_LEDsetBar+8)& (0+255),w,b
 10753  000A2C  0101               	movlb	1	; () banked
 10754  000A2E  6F43               	movwf	(??_LEDsetBar+10)& (0+255),b
 10755  000A30  0101               	movlb	1	; () banked
 10756  000A32  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 10757  000A34  0101               	movlb	1	; () banked
 10758  000A36  1542               	andwf	(??_LEDsetBar+9)& (0+255),w,b
 10759  000A38  0101               	movlb	1	; () banked
 10760  000A3A  6F44               	movwf	(??_LEDsetBar+11)& (0+255),b
 10761  000A3C  0101               	movlb	1	; () banked
 10762  000A3E  6B45               	clrf	(??_LEDsetBar+12)& (0+255),b
 10763  000A40  0101               	movlb	1	; () banked
 10764  000A42  BF44               	btfsc	(??_LEDsetBar+11)& (0+255),7,b
 10765  000A44  0745               	decf	(??_LEDsetBar+12)& (0+255),f,b
 10766  000A46  0101               	movlb	1	; () banked
 10767  000A48  5145               	movf	(??_LEDsetBar+12)& (0+255),w,b
 10768  000A4A  0101               	movlb	1	; () banked
 10769  000A4C  6F46               	movwf	(??_LEDsetBar+13)& (0+255),b
 10770  000A4E  0E60               	movlw	low _displaybuffer
 10771  000A50  0101               	movlb	1	; () banked
 10772  000A52  6F47               	movwf	(??_LEDsetBar+14)& (0+255),b
 10773  000A54  0E00               	movlw	high _displaybuffer
 10774  000A56  0101               	movlb	1	; () banked
 10775  000A58  6F48               	movwf	(??_LEDsetBar+15)& (0+255),b
 10776  000A5A  90D8               	bcf	status,0,c
 10777  000A5C  3427               	rlcf	LEDsetBar@c,w,c
 10778  000A5E  6ED9               	movwf	fsr2l,c
 10779  000A60  3428               	rlcf	LEDsetBar@c+1,w,c
 10780  000A62  6EDA               	movwf	fsr2h,c
 10781  000A64  90D8               	bcf	status,0,c
 10782  000A66  36D9               	rlcf	fsr2l,f,c
 10783  000A68  36DA               	rlcf	fsr2h,f,c
 10784  000A6A  0101               	movlb	1	; () banked
 10785  000A6C  5147               	movf	(??_LEDsetBar+14)& (0+255),w,b
 10786  000A6E  26D9               	addwf	fsr2l,f,c
 10787  000A70  0101               	movlb	1	; () banked
 10788  000A72  5148               	movf	(??_LEDsetBar+15)& (0+255),w,b
 10789  000A74  22DA               	addwfc	fsr2h,f,c
 10790  000A76  0101               	movlb	1	; () banked
 10791  000A78  5143               	movf	(??_LEDsetBar+10)& (0+255),w,b
 10792  000A7A  16DE               	andwf	postinc2,f,c
 10793  000A7C  5144               	movf	(??_LEDsetBar+11)& (0+255),w,b
 10794  000A7E  16DE               	andwf	postinc2,f,c
 10795  000A80  5145               	movf	(??_LEDsetBar+12)& (0+255),w,b
 10796  000A82  16DE               	andwf	postinc2,f,c
 10797  000A84  5146               	movf	(??_LEDsetBar+13)& (0+255),w,b
 10798  000A86  16DE               	andwf	postinc2,f,c
 10799                           
 10800                           ;LED_BarGraph.c: 219: } else if (color == 3) {
 10801  000A88  0012               	return	
 10802  000A8A                     l6684:
 10803  000A8A  0E03               	movlw	3
 10804  000A8C  1825               	xorwf	LEDsetBar@color,w,c
 10805  000A8E  1026               	iorwf	LEDsetBar@color+1,w,c
 10806  000A90  A4D8               	btfss	status,2,c
 10807  000A92  0012               	return	
 10808                           
 10809                           ;LED_BarGraph.c: 221: displaybuffer[c] |= (1<<(a + 8));
 10810  000A94  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 10811  000A98  0E08               	movlw	8
 10812  000A9A  0101               	movlb	1	; () banked
 10813  000A9C  2739               	addwf	??_LEDsetBar& (0+255),f,b
 10814  000A9E  0E01               	movlw	1
 10815  000AA0  0101               	movlb	1	; () banked
 10816  000AA2  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 10817  000AA4  0E00               	movlw	0
 10818  000AA6  0101               	movlb	1	; () banked
 10819  000AA8  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 10820  000AAA  0101               	movlb	1	; () banked
 10821  000AAC  2B39               	incf	??_LEDsetBar& (0+255),f,b
 10822  000AAE  D004               	goto	u7174
 10823  000AB0                     u7175:
 10824  000AB0  90D8               	bcf	status,0,c
 10825  000AB2  0101               	movlb	1	; () banked
 10826  000AB4  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 10827  000AB6  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 10828  000AB8                     u7174:
 10829  000AB8  0101               	movlb	1	; () banked
 10830  000ABA  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 10831  000ABC  D7F9               	goto	u7175
 10832  000ABE  C13A  F13C         	movff	??_LEDsetBar+1,??_LEDsetBar+3
 10833  000AC2  C13B  F13D         	movff	??_LEDsetBar+2,??_LEDsetBar+4
 10834  000AC6  0E00               	movlw	0
 10835  000AC8  0101               	movlb	1	; () banked
 10836  000ACA  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 10837  000ACC  0EFF               	movlw	255
 10838  000ACE  6F3E               	movwf	(??_LEDsetBar+5)& (0+255),b
 10839  000AD0  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 10840  000AD2  0E60               	movlw	low _displaybuffer
 10841  000AD4  0101               	movlb	1	; () banked
 10842  000AD6  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 10843  000AD8  0E00               	movlw	high _displaybuffer
 10844  000ADA  0101               	movlb	1	; () banked
 10845  000ADC  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 10846  000ADE  90D8               	bcf	status,0,c
 10847  000AE0  3427               	rlcf	LEDsetBar@c,w,c
 10848  000AE2  6ED9               	movwf	fsr2l,c
 10849  000AE4  3428               	rlcf	LEDsetBar@c+1,w,c
 10850  000AE6  6EDA               	movwf	fsr2h,c
 10851  000AE8  90D8               	bcf	status,0,c
 10852  000AEA  36D9               	rlcf	fsr2l,f,c
 10853  000AEC  36DA               	rlcf	fsr2h,f,c
 10854  000AEE  0101               	movlb	1	; () banked
 10855  000AF0  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 10856  000AF2  26D9               	addwf	fsr2l,f,c
 10857  000AF4  0101               	movlb	1	; () banked
 10858  000AF6  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 10859  000AF8  22DA               	addwfc	fsr2h,f,c
 10860  000AFA  0101               	movlb	1	; () banked
 10861  000AFC  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 10862  000AFE  12DE               	iorwf	postinc2,f,c
 10863  000B00  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 10864  000B02  12DE               	iorwf	postinc2,f,c
 10865  000B04  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 10866  000B06  12DE               	iorwf	postinc2,f,c
 10867  000B08  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 10868  000B0A  12DE               	iorwf	postinc2,f,c
 10869                           
 10870                           ;LED_BarGraph.c: 223: displaybuffer[c] &= ~(1<<(a));
 10871  000B0C  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 10872  000B10  0E01               	movlw	1
 10873  000B12  0101               	movlb	1	; () banked
 10874  000B14  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 10875  000B16  0E00               	movlw	0
 10876  000B18  0101               	movlb	1	; () banked
 10877  000B1A  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 10878  000B1C  0101               	movlb	1	; () banked
 10879  000B1E  2B39               	incf	??_LEDsetBar& (0+255),f,b
 10880  000B20  D004               	goto	u7184
 10881  000B22                     u7185:
 10882  000B22  90D8               	bcf	status,0,c
 10883  000B24  0101               	movlb	1	; () banked
 10884  000B26  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 10885  000B28  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 10886  000B2A                     u7184:
 10887  000B2A  0101               	movlb	1	; () banked
 10888  000B2C  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 10889  000B2E  D7F9               	goto	u7185
 10890  000B30  0101               	movlb	1	; () banked
 10891  000B32  1D3A               	comf	(??_LEDsetBar+1)& (0+255),w,b
 10892  000B34  0101               	movlb	1	; () banked
 10893  000B36  6F3C               	movwf	(??_LEDsetBar+3)& (0+255),b
 10894  000B38  0101               	movlb	1	; () banked
 10895  000B3A  1D3B               	comf	(??_LEDsetBar+2)& (0+255),w,b
 10896  000B3C  0101               	movlb	1	; () banked
 10897  000B3E  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 10898  000B40  0101               	movlb	1	; () banked
 10899  000B42  6B3E               	clrf	(??_LEDsetBar+5)& (0+255),b
 10900  000B44  0101               	movlb	1	; () banked
 10901  000B46  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 10902  000B48  073E               	decf	(??_LEDsetBar+5)& (0+255),f,b
 10903  000B4A  0101               	movlb	1	; () banked
 10904  000B4C  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 10905  000B4E  0101               	movlb	1	; () banked
 10906  000B50  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 10907  000B52  0E60               	movlw	low _displaybuffer
 10908  000B54  0101               	movlb	1	; () banked
 10909  000B56  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 10910  000B58  0E00               	movlw	high _displaybuffer
 10911  000B5A  0101               	movlb	1	; () banked
 10912  000B5C  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 10913  000B5E  90D8               	bcf	status,0,c
 10914  000B60  3427               	rlcf	LEDsetBar@c,w,c
 10915  000B62  6ED9               	movwf	fsr2l,c
 10916  000B64  3428               	rlcf	LEDsetBar@c+1,w,c
 10917  000B66  6EDA               	movwf	fsr2h,c
 10918  000B68  90D8               	bcf	status,0,c
 10919  000B6A  36D9               	rlcf	fsr2l,f,c
 10920  000B6C  36DA               	rlcf	fsr2h,f,c
 10921  000B6E  0101               	movlb	1	; () banked
 10922  000B70  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 10923  000B72  26D9               	addwf	fsr2l,f,c
 10924  000B74  0101               	movlb	1	; () banked
 10925  000B76  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 10926  000B78  22DA               	addwfc	fsr2h,f,c
 10927  000B7A  0101               	movlb	1	; () banked
 10928  000B7C  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 10929  000B7E  16DE               	andwf	postinc2,f,c
 10930  000B80  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 10931  000B82  16DE               	andwf	postinc2,f,c
 10932  000B84  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 10933  000B86  16DE               	andwf	postinc2,f,c
 10934  000B88  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 10935  000B8A  16DE               	andwf	postinc2,f,c
 10936                           
 10937                           ; BSR set to: 1
 10938                           
 10939                           ; BSR set to: 1
 10940                           
 10941                           ; BSR set to: 1
 10942  000B8C  0012               	return	
 10943  000B8E                     __end_of_LEDsetBar:
 10944                           	opt stack 0
 10945                           tosu	equ	0xFFF
 10946                           tosh	equ	0xFFE
 10947                           tosl	equ	0xFFD
 10948                           pclath	equ	0xFFA
 10949                           tblptru	equ	0xFF8
 10950                           tblptrh	equ	0xFF7
 10951                           tblptrl	equ	0xFF6
 10952                           tablat	equ	0xFF5
 10953                           prodh	equ	0xFF4
 10954                           prodl	equ	0xFF3
 10955                           intcon	equ	0xFF2
 10956                           intcon2	equ	0xFF1
 10957                           postinc0	equ	0xFEE
 10958                           wreg	equ	0xFE8
 10959                           indf2	equ	0xFDF
 10960                           postinc2	equ	0xFDE
 10961                           postdec2	equ	0xFDD
 10962                           plusw2	equ	0xFDB
 10963                           fsr2h	equ	0xFDA
 10964                           fsr2l	equ	0xFD9
 10965                           status	equ	0xFD8
 10966                           
 10967 ;; *************** function ___awdiv *****************
 10968 ;; Defined at:
 10969 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awdiv.c"
 10970 ;; Parameters:    Size  Location     Type
 10971 ;;  dividend        2   26[COMRAM] int 
 10972 ;;  divisor         2   28[COMRAM] int 
 10973 ;; Auto vars:     Size  Location     Type
 10974 ;;  quotient        2   32[COMRAM] int 
 10975 ;;  sign            1   31[COMRAM] unsigned char 
 10976 ;;  counter         1   30[COMRAM] unsigned char 
 10977 ;; Return value:  Size  Location     Type
 10978 ;;                  2   26[COMRAM] int 
 10979 ;; Registers used:
 10980 ;;		wreg, status,2, status,0
 10981 ;; Tracked objects:
 10982 ;;		On entry : 0/0
 10983 ;;		On exit  : 0/0
 10984 ;;		Unchanged: 0/0
 10985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10986 ;;      Params:         4       0       0       0       0       0       0
 10987 ;;      Locals:         4       0       0       0       0       0       0
 10988 ;;      Temps:          0       0       0       0       0       0       0
 10989 ;;      Totals:         8       0       0       0       0       0       0
 10990 ;;Total ram usage:        8 bytes
 10991 ;; Hardware stack levels used:    1
 10992 ;; Hardware stack levels required when called:    4
 10993 ;; This function calls:
 10994 ;;		Nothing
 10995 ;; This function is called by:
 10996 ;;		_LEDsetBar
 10997 ;;		_begin
 10998 ;; This function uses a non-reentrant model
 10999 ;;
 11000                           
 11001                           	psect	text53
 11002  002754                     __ptext53:
 11003                           	opt stack 0
 11004  002754                     ___awdiv:
 11005                           	opt stack 24
 11006                           
 11007                           ;incstack = 0
 11008  002754  0E00               	movlw	0
 11009  002756  6E20               	movwf	___awdiv@sign,c
 11010  002758  AE1E               	btfss	___awdiv@divisor+1,7,c
 11011  00275A  D006               	goto	l6530
 11012  00275C  6C1D               	negf	___awdiv@divisor,c
 11013  00275E  1E1E               	comf	___awdiv@divisor+1,f,c
 11014  002760  B0D8               	btfsc	status,0,c
 11015  002762  2A1E               	incf	___awdiv@divisor+1,f,c
 11016  002764  0E01               	movlw	1
 11017  002766  6E20               	movwf	___awdiv@sign,c
 11018  002768                     l6530:
 11019  002768  AE1C               	btfss	___awdiv@dividend+1,7,c
 11020  00276A  D006               	goto	l6536
 11021  00276C  6C1B               	negf	___awdiv@dividend,c
 11022  00276E  1E1C               	comf	___awdiv@dividend+1,f,c
 11023  002770  B0D8               	btfsc	status,0,c
 11024  002772  2A1C               	incf	___awdiv@dividend+1,f,c
 11025  002774  0E01               	movlw	1
 11026  002776  1A20               	xorwf	___awdiv@sign,f,c
 11027  002778                     l6536:
 11028  002778  0E00               	movlw	0
 11029  00277A  6E22               	movwf	___awdiv@quotient+1,c
 11030  00277C  0E00               	movlw	0
 11031  00277E  6E21               	movwf	___awdiv@quotient,c
 11032  002780  501D               	movf	___awdiv@divisor,w,c
 11033  002782  101E               	iorwf	___awdiv@divisor+1,w,c
 11034  002784  B4D8               	btfsc	status,2,c
 11035  002786  D01C               	goto	l6558
 11036  002788  0E01               	movlw	1
 11037  00278A  6E1F               	movwf	___awdiv@counter,c
 11038  00278C  D004               	goto	l6544
 11039  00278E                     l6542:
 11040  00278E  90D8               	bcf	status,0,c
 11041  002790  361D               	rlcf	___awdiv@divisor,f,c
 11042  002792  361E               	rlcf	___awdiv@divisor+1,f,c
 11043  002794  2A1F               	incf	___awdiv@counter,f,c
 11044  002796                     l6544:
 11045  002796  AE1E               	btfss	___awdiv@divisor+1,7,c
 11046  002798  D7FA               	goto	l6542
 11047  00279A                     l6546:
 11048  00279A  90D8               	bcf	status,0,c
 11049  00279C  3621               	rlcf	___awdiv@quotient,f,c
 11050  00279E  3622               	rlcf	___awdiv@quotient+1,f,c
 11051  0027A0  501D               	movf	___awdiv@divisor,w,c
 11052  0027A2  5C1B               	subwf	___awdiv@dividend,w,c
 11053  0027A4  501E               	movf	___awdiv@divisor+1,w,c
 11054  0027A6  581C               	subwfb	___awdiv@dividend+1,w,c
 11055  0027A8  A0D8               	btfss	status,0,c
 11056  0027AA  D005               	goto	l6554
 11057  0027AC  501D               	movf	___awdiv@divisor,w,c
 11058  0027AE  5E1B               	subwf	___awdiv@dividend,f,c
 11059  0027B0  501E               	movf	___awdiv@divisor+1,w,c
 11060  0027B2  5A1C               	subwfb	___awdiv@dividend+1,f,c
 11061  0027B4  8021               	bsf	___awdiv@quotient,0,c
 11062  0027B6                     l6554:
 11063  0027B6  90D8               	bcf	status,0,c
 11064  0027B8  321E               	rrcf	___awdiv@divisor+1,f,c
 11065  0027BA  321D               	rrcf	___awdiv@divisor,f,c
 11066  0027BC  2E1F               	decfsz	___awdiv@counter,f,c
 11067  0027BE  D7ED               	goto	l6546
 11068  0027C0                     l6558:
 11069  0027C0  5020               	movf	___awdiv@sign,w,c
 11070  0027C2  B4D8               	btfsc	status,2,c
 11071  0027C4  D004               	goto	l6562
 11072  0027C6  6C21               	negf	___awdiv@quotient,c
 11073  0027C8  1E22               	comf	___awdiv@quotient+1,f,c
 11074  0027CA  B0D8               	btfsc	status,0,c
 11075  0027CC  2A22               	incf	___awdiv@quotient+1,f,c
 11076  0027CE                     l6562:
 11077  0027CE  C021  F01B         	movff	___awdiv@quotient,?___awdiv
 11078  0027D2  C022  F01C         	movff	___awdiv@quotient+1,?___awdiv+1
 11079  0027D6  0012               	return	
 11080  0027D8                     __end_of___awdiv:
 11081                           	opt stack 0
 11082                           tosu	equ	0xFFF
 11083                           tosh	equ	0xFFE
 11084                           tosl	equ	0xFFD
 11085                           pclath	equ	0xFFA
 11086                           tblptru	equ	0xFF8
 11087                           tblptrh	equ	0xFF7
 11088                           tblptrl	equ	0xFF6
 11089                           tablat	equ	0xFF5
 11090                           prodh	equ	0xFF4
 11091                           prodl	equ	0xFF3
 11092                           intcon	equ	0xFF2
 11093                           intcon2	equ	0xFF1
 11094                           postinc0	equ	0xFEE
 11095                           wreg	equ	0xFE8
 11096                           indf2	equ	0xFDF
 11097                           postinc2	equ	0xFDE
 11098                           postdec2	equ	0xFDD
 11099                           plusw2	equ	0xFDB
 11100                           fsr2h	equ	0xFDA
 11101                           fsr2l	equ	0xFD9
 11102                           status	equ	0xFD8
 11103                           
 11104 ;; *************** function _LEDbegin *****************
 11105 ;; Defined at:
 11106 ;;		line 85 in file "LED_BarGraph.c"
 11107 ;; Parameters:    Size  Location     Type
 11108 ;;  i2c_addr        1    wreg     unsigned char 
 11109 ;; Auto vars:     Size  Location     Type
 11110 ;;  i2c_addr        1    5[BANK1 ] unsigned char 
 11111 ;;  writeBuffer     3    0[BANK1 ] unsigned char [3]
 11112 ;;  timeOut         2    3[BANK1 ] unsigned int 
 11113 ;;  status          1    6[BANK1 ] enum E7758
 11114 ;; Return value:  Size  Location     Type
 11115 ;;                  1    wreg      void 
 11116 ;; Registers used:
 11117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11118 ;; Tracked objects:
 11119 ;;		On entry : 0/0
 11120 ;;		On exit  : 0/0
 11121 ;;		Unchanged: 0/0
 11122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11123 ;;      Params:         0       0       0       0       0       0       0
 11124 ;;      Locals:         0       0       7       0       0       0       0
 11125 ;;      Temps:          0       0       0       0       0       0       0
 11126 ;;      Totals:         0       0       7       0       0       0       0
 11127 ;;Total ram usage:        7 bytes
 11128 ;; Hardware stack levels used:    1
 11129 ;; Hardware stack levels required when called:    7
 11130 ;; This function calls:
 11131 ;;		_I2C1_MasterWrite
 11132 ;;		_LEDBsetBrightness
 11133 ;;		_LEDblinkRate
 11134 ;; This function is called by:
 11135 ;;		_main
 11136 ;; This function uses a non-reentrant model
 11137 ;;
 11138                           
 11139                           	psect	text54
 11140  00246E                     __ptext54:
 11141                           	opt stack 0
 11142  00246E                     _LEDbegin:
 11143                           	opt stack 23
 11144                           
 11145                           ;incstack = 0
 11146                           ;LEDbegin@i2c_addr stored from wreg
 11147  00246E  0101               	movlb	1	; () banked
 11148  002470  6F3E               	movwf	LEDbegin@i2c_addr& (0+255),b
 11149                           
 11150                           ;LED_BarGraph.c: 86: uint8_t writeBuffer[3];
 11151                           ;LED_BarGraph.c: 87: uint16_t timeOut;
 11152                           ;LED_BarGraph.c: 88: writeBuffer[0] = 0x21;
 11153  002472  0E21               	movlw	33
 11154  002474  0101               	movlb	1	; () banked
 11155  002476  6F39               	movwf	LEDbegin@writeBuffer& (0+255),b
 11156                           
 11157                           ;LED_BarGraph.c: 89: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 11158  002478  0E02               	movlw	2
 11159  00247A  0101               	movlb	1	; () banked
 11160  00247C  6F3F               	movwf	LEDbegin@status& (0+255),b
 11161                           
 11162                           ;LED_BarGraph.c: 91: timeOut = 0;
 11163  00247E  0E00               	movlw	0
 11164  002480  0101               	movlb	1	; () banked
 11165  002482  6F3D               	movwf	(LEDbegin@timeOut+1)& (0+255),b
 11166  002484  0E00               	movlw	0
 11167  002486  6F3C               	movwf	LEDbegin@timeOut& (0+255),b
 11168                           
 11169                           ;LED_BarGraph.c: 92: while (status != I2C1_MESSAGE_FAIL) {
 11170  002488  D027               	goto	l7202
 11171  00248A                     l7182:
 11172                           
 11173                           ; BSR set to: 1
 11174                           ;LED_BarGraph.c: 94: I2C1_MasterWrite(&writeBuffer,
 11175                           ;LED_BarGraph.c: 95: 1,
 11176                           ;LED_BarGraph.c: 96: i2c_addr,
 11177                           ;LED_BarGraph.c: 97: &status);
 11178  00248A  0E39               	movlw	low LEDbegin@writeBuffer
 11179  00248C  6E24               	movwf	I2C1_MasterWrite@pdata,c
 11180  00248E  0E01               	movlw	high LEDbegin@writeBuffer
 11181  002490  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
 11182  002492  0E01               	movlw	1
 11183  002494  6E26               	movwf	I2C1_MasterWrite@length,c
 11184  002496  C13E  F027         	movff	LEDbegin@i2c_addr,I2C1_MasterWrite@address
 11185  00249A  6A28               	clrf	I2C1_MasterWrite@address+1,c
 11186  00249C  0E3F               	movlw	low LEDbegin@status
 11187  00249E  6E29               	movwf	I2C1_MasterWrite@pflag,c
 11188  0024A0  0E01               	movlw	high LEDbegin@status
 11189  0024A2  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
 11190  0024A4  EC8F  F015         	call	_I2C1_MasterWrite	;wreg free
 11191  0024A8                     l7184:
 11192  0024A8  0E02               	movlw	2
 11193  0024AA  0101               	movlb	1	; () banked
 11194  0024AC  193F               	xorwf	LEDbegin@status& (0+255),w,b
 11195  0024AE  B4D8               	btfsc	status,2,c
 11196  0024B0  D7FB               	goto	l7184
 11197                           
 11198                           ; BSR set to: 1
 11199                           ;LED_BarGraph.c: 102: if (status == I2C1_MESSAGE_COMPLETE)
 11200                           
 11201                           ; BSR set to: 1
 11202  0024B2  0101               	movlb	1	; () banked
 11203  0024B4  513F               	movf	LEDbegin@status& (0+255),w,b
 11204  0024B6  0101               	movlb	1	; () banked
 11205  0024B8  B4D8               	btfsc	status,2,c
 11206  0024BA  D012               	goto	l7204
 11207                           
 11208                           ; BSR set to: 1
 11209                           ;LED_BarGraph.c: 104: if (timeOut == 100)
 11210                           
 11211                           ; BSR set to: 1
 11212                           
 11213                           ; BSR set to: 1
 11214                           ;LED_BarGraph.c: 103: break;
 11215  0024BC  0E64               	movlw	100
 11216  0024BE  0101               	movlb	1	; () banked
 11217  0024C0  193C               	xorwf	LEDbegin@timeOut& (0+255),w,b
 11218  0024C2  0101               	movlb	1	; () banked
 11219  0024C4  113D               	iorwf	(LEDbegin@timeOut+1)& (0+255),w,b
 11220  0024C6  B4D8               	btfsc	status,2,c
 11221  0024C8  D00B               	goto	l7204
 11222                           
 11223                           ; BSR set to: 1
 11224                           ;LED_BarGraph.c: 106: if (status == I2C1_MESSAGE_FAIL)
 11225                           
 11226                           ; BSR set to: 1
 11227                           
 11228                           ; BSR set to: 1
 11229                           ;LED_BarGraph.c: 105: break;
 11230  0024CA  0101               	movlb	1	; () banked
 11231  0024CC  053F               	decf	LEDbegin@status& (0+255),w,b
 11232  0024CE  B4D8               	btfsc	status,2,c
 11233  0024D0  D007               	goto	l7204
 11234                           
 11235                           ; BSR set to: 1
 11236                           ;LED_BarGraph.c: 108: else
 11237                           ;LED_BarGraph.c: 109: timeOut++;
 11238                           
 11239                           ; BSR set to: 1
 11240                           
 11241                           ; BSR set to: 1
 11242                           
 11243                           ; BSR set to: 1
 11244                           ;LED_BarGraph.c: 107: break;
 11245  0024D2  0101               	movlb	1	; () banked
 11246  0024D4  4B3C               	infsnz	LEDbegin@timeOut& (0+255),f,b
 11247  0024D6  2B3D               	incf	(LEDbegin@timeOut+1)& (0+255),f,b
 11248  0024D8                     l7202:
 11249                           
 11250                           ; BSR set to: 1
 11251  0024D8  0101               	movlb	1	; () banked
 11252  0024DA  053F               	decf	LEDbegin@status& (0+255),w,b
 11253  0024DC  A4D8               	btfss	status,2,c
 11254  0024DE  D7D5               	goto	l7182
 11255  0024E0                     l7204:
 11256                           
 11257                           ; BSR set to: 1
 11258                           ;LED_BarGraph.c: 110: }
 11259                           ;LED_BarGraph.c: 112: LEDblinkRate(0, i2c_addr);
 11260  0024E0  0E00               	movlw	0
 11261  0024E2  0100               	movlb	0	; () banked
 11262  0024E4  6FF5               	movwf	(LEDblinkRate@b+1)& (0+255),b
 11263  0024E6  0E00               	movlw	0
 11264  0024E8  6FF4               	movwf	LEDblinkRate@b& (0+255),b
 11265  0024EA  C13E  F0F6         	movff	LEDbegin@i2c_addr,LEDblinkRate@i2c_addr
 11266  0024EE  EC83  F012         	call	_LEDblinkRate	;wreg free
 11267                           
 11268                           ;LED_BarGraph.c: 113: LEDBsetBrightness(15, i2c_addr);
 11269  0024F2  0E00               	movlw	0
 11270  0024F4  0100               	movlb	0	; () banked
 11271  0024F6  6FF5               	movwf	(LEDBsetBrightness@b+1)& (0+255),b
 11272  0024F8  0E0F               	movlw	15
 11273  0024FA  6FF4               	movwf	LEDBsetBrightness@b& (0+255),b
 11274  0024FC  C13E  F0F6         	movff	LEDbegin@i2c_addr,LEDBsetBrightness@i2c_addr
 11275  002500  ECCE  F012         	call	_LEDBsetBrightness	;wreg free
 11276  002504  0012               	return		;funcret
 11277  002506                     __end_of_LEDbegin:
 11278                           	opt stack 0
 11279                           tosu	equ	0xFFF
 11280                           tosh	equ	0xFFE
 11281                           tosl	equ	0xFFD
 11282                           pclath	equ	0xFFA
 11283                           tblptru	equ	0xFF8
 11284                           tblptrh	equ	0xFF7
 11285                           tblptrl	equ	0xFF6
 11286                           tablat	equ	0xFF5
 11287                           prodh	equ	0xFF4
 11288                           prodl	equ	0xFF3
 11289                           intcon	equ	0xFF2
 11290                           intcon2	equ	0xFF1
 11291                           postinc0	equ	0xFEE
 11292                           wreg	equ	0xFE8
 11293                           indf2	equ	0xFDF
 11294                           postinc2	equ	0xFDE
 11295                           postdec2	equ	0xFDD
 11296                           plusw2	equ	0xFDB
 11297                           fsr2h	equ	0xFDA
 11298                           fsr2l	equ	0xFD9
 11299                           status	equ	0xFD8
 11300                           
 11301 ;; *************** function _LEDblinkRate *****************
 11302 ;; Defined at:
 11303 ;;		line 55 in file "LED_BarGraph.c"
 11304 ;; Parameters:    Size  Location     Type
 11305 ;;  b               2    0[BANK0 ] int 
 11306 ;;  i2c_addr        1    2[BANK0 ] unsigned char 
 11307 ;; Auto vars:     Size  Location     Type
 11308 ;;  writeBuffer     2    3[BANK0 ] unsigned char [2]
 11309 ;;  timeOut         2    5[BANK0 ] unsigned int 
 11310 ;;  status          1    7[BANK0 ] enum E7758
 11311 ;; Return value:  Size  Location     Type
 11312 ;;                  1    wreg      void 
 11313 ;; Registers used:
 11314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11315 ;; Tracked objects:
 11316 ;;		On entry : 0/0
 11317 ;;		On exit  : 0/0
 11318 ;;		Unchanged: 0/0
 11319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11320 ;;      Params:         0       3       0       0       0       0       0
 11321 ;;      Locals:         0       5       0       0       0       0       0
 11322 ;;      Temps:          0       0       0       0       0       0       0
 11323 ;;      Totals:         0       8       0       0       0       0       0
 11324 ;;Total ram usage:        8 bytes
 11325 ;; Hardware stack levels used:    1
 11326 ;; Hardware stack levels required when called:    6
 11327 ;; This function calls:
 11328 ;;		_I2C1_MasterWrite
 11329 ;; This function is called by:
 11330 ;;		_LEDbegin
 11331 ;; This function uses a non-reentrant model
 11332 ;;
 11333                           
 11334                           	psect	text55
 11335  002506                     __ptext55:
 11336                           	opt stack 0
 11337  002506                     _LEDblinkRate:
 11338                           	opt stack 23
 11339                           
 11340                           ;LED_BarGraph.c: 56: if (b > 3) b = 0;
 11341                           
 11342                           ;incstack = 0
 11343  002506  0100               	movlb	0	; () banked
 11344  002508  BFF5               	btfsc	(LEDblinkRate@b+1)& (0+255),7,b
 11345  00250A  D00D               	goto	l6724
 11346  00250C  0100               	movlb	0	; () banked
 11347  00250E  51F5               	movf	(LEDblinkRate@b+1)& (0+255),w,b
 11348  002510  E105               	bnz	u7250
 11349  002512  0E04               	movlw	4
 11350  002514  0100               	movlb	0	; () banked
 11351  002516  5DF4               	subwf	LEDblinkRate@b& (0+255),w,b
 11352  002518  A0D8               	btfss	status,0,c
 11353  00251A  D005               	goto	l6724
 11354  00251C                     u7250:
 11355                           
 11356                           ; BSR set to: 0
 11357  00251C  0E00               	movlw	0
 11358  00251E  0100               	movlb	0	; () banked
 11359  002520  6FF5               	movwf	(LEDblinkRate@b+1)& (0+255),b
 11360  002522  0E00               	movlw	0
 11361  002524  6FF4               	movwf	LEDblinkRate@b& (0+255),b
 11362  002526                     l6724:
 11363                           
 11364                           ; BSR set to: 0
 11365                           ;LED_BarGraph.c: 57: uint8_t writeBuffer[2];
 11366                           ;LED_BarGraph.c: 58: uint16_t timeOut;
 11367                           ;LED_BarGraph.c: 59: writeBuffer[0] = (0x80 | 0x01 | (b << 1));
 11368  002526  0100               	movlb	0	; () banked
 11369  002528  51F4               	movf	LEDblinkRate@b& (0+255),w,b
 11370  00252A  25F4               	addwf	LEDblinkRate@b& (0+255),w,b
 11371  00252C  0981               	iorlw	129
 11372  00252E  0100               	movlb	0	; () banked
 11373  002530  6FF7               	movwf	LEDblinkRate@writeBuffer& (0+255),b
 11374                           
 11375                           ; BSR set to: 0
 11376                           ;LED_BarGraph.c: 60: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 11377  002532  0E02               	movlw	2
 11378  002534  0100               	movlb	0	; () banked
 11379  002536  6FFB               	movwf	LEDblinkRate@status& (0+255),b
 11380                           
 11381                           ; BSR set to: 0
 11382                           ;LED_BarGraph.c: 62: timeOut = 0;
 11383  002538  0E00               	movlw	0
 11384  00253A  0100               	movlb	0	; () banked
 11385  00253C  6FFA               	movwf	(LEDblinkRate@timeOut+1)& (0+255),b
 11386  00253E  0E00               	movlw	0
 11387  002540  6FF9               	movwf	LEDblinkRate@timeOut& (0+255),b
 11388                           
 11389                           ;LED_BarGraph.c: 63: while (status != I2C1_MESSAGE_FAIL) {
 11390  002542  D027               	goto	l6750
 11391  002544                     l6730:
 11392                           
 11393                           ; BSR set to: 0
 11394                           ;LED_BarGraph.c: 65: I2C1_MasterWrite(&writeBuffer,
 11395                           ;LED_BarGraph.c: 66: 1,
 11396                           ;LED_BarGraph.c: 67: i2c_addr,
 11397                           ;LED_BarGraph.c: 68: &status);
 11398  002544  0EF7               	movlw	low LEDblinkRate@writeBuffer
 11399  002546  6E24               	movwf	I2C1_MasterWrite@pdata,c
 11400  002548  0E00               	movlw	high LEDblinkRate@writeBuffer
 11401  00254A  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
 11402  00254C  0E01               	movlw	1
 11403  00254E  6E26               	movwf	I2C1_MasterWrite@length,c
 11404  002550  C0F6  F027         	movff	LEDblinkRate@i2c_addr,I2C1_MasterWrite@address
 11405  002554  6A28               	clrf	I2C1_MasterWrite@address+1,c
 11406  002556  0EFB               	movlw	low LEDblinkRate@status
 11407  002558  6E29               	movwf	I2C1_MasterWrite@pflag,c
 11408  00255A  0E00               	movlw	high LEDblinkRate@status
 11409  00255C  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
 11410  00255E  EC8F  F015         	call	_I2C1_MasterWrite	;wreg free
 11411  002562                     l6732:
 11412  002562  0E02               	movlw	2
 11413  002564  0100               	movlb	0	; () banked
 11414  002566  19FB               	xorwf	LEDblinkRate@status& (0+255),w,b
 11415  002568  B4D8               	btfsc	status,2,c
 11416  00256A  D7FB               	goto	l6732
 11417                           
 11418                           ; BSR set to: 0
 11419                           ;LED_BarGraph.c: 73: if (status == I2C1_MESSAGE_COMPLETE)
 11420                           
 11421                           ; BSR set to: 0
 11422  00256C  0100               	movlb	0	; () banked
 11423  00256E  51FB               	movf	LEDblinkRate@status& (0+255),w,b
 11424  002570  0100               	movlb	0	; () banked
 11425  002572  B4D8               	btfsc	status,2,c
 11426  002574  0012               	return	
 11427                           
 11428                           ; BSR set to: 0
 11429                           ;LED_BarGraph.c: 75: if (timeOut == 100)
 11430                           
 11431                           ; BSR set to: 0
 11432                           
 11433                           ; BSR set to: 0
 11434                           ;LED_BarGraph.c: 74: break;
 11435  002576  0E64               	movlw	100
 11436  002578  0100               	movlb	0	; () banked
 11437  00257A  19F9               	xorwf	LEDblinkRate@timeOut& (0+255),w,b
 11438  00257C  0100               	movlb	0	; () banked
 11439  00257E  11FA               	iorwf	(LEDblinkRate@timeOut+1)& (0+255),w,b
 11440  002580  B4D8               	btfsc	status,2,c
 11441  002582  0012               	return	
 11442                           
 11443                           ; BSR set to: 0
 11444                           ;LED_BarGraph.c: 77: if (status == I2C1_MESSAGE_FAIL)
 11445                           
 11446                           ; BSR set to: 0
 11447                           
 11448                           ; BSR set to: 0
 11449                           ;LED_BarGraph.c: 76: break;
 11450  002584  0100               	movlb	0	; () banked
 11451  002586  05FB               	decf	LEDblinkRate@status& (0+255),w,b
 11452  002588  B4D8               	btfsc	status,2,c
 11453  00258A  0012               	return	
 11454                           
 11455                           ; BSR set to: 0
 11456                           ;LED_BarGraph.c: 79: else
 11457                           ;LED_BarGraph.c: 80: timeOut++;
 11458                           
 11459                           ; BSR set to: 0
 11460                           
 11461                           ; BSR set to: 0
 11462                           
 11463                           ; BSR set to: 0
 11464                           ;LED_BarGraph.c: 78: break;
 11465  00258C  0100               	movlb	0	; () banked
 11466  00258E  4BF9               	infsnz	LEDblinkRate@timeOut& (0+255),f,b
 11467  002590  2BFA               	incf	(LEDblinkRate@timeOut+1)& (0+255),f,b
 11468  002592                     l6750:
 11469                           
 11470                           ; BSR set to: 0
 11471  002592  0100               	movlb	0	; () banked
 11472  002594  05FB               	decf	LEDblinkRate@status& (0+255),w,b
 11473  002596  B4D8               	btfsc	status,2,c
 11474  002598  0012               	return	
 11475  00259A  D7D4               	goto	l6730
 11476  00259C                     __end_of_LEDblinkRate:
 11477                           	opt stack 0
 11478                           tosu	equ	0xFFF
 11479                           tosh	equ	0xFFE
 11480                           tosl	equ	0xFFD
 11481                           pclath	equ	0xFFA
 11482                           tblptru	equ	0xFF8
 11483                           tblptrh	equ	0xFF7
 11484                           tblptrl	equ	0xFF6
 11485                           tablat	equ	0xFF5
 11486                           prodh	equ	0xFF4
 11487                           prodl	equ	0xFF3
 11488                           intcon	equ	0xFF2
 11489                           intcon2	equ	0xFF1
 11490                           postinc0	equ	0xFEE
 11491                           wreg	equ	0xFE8
 11492                           indf2	equ	0xFDF
 11493                           postinc2	equ	0xFDE
 11494                           postdec2	equ	0xFDD
 11495                           plusw2	equ	0xFDB
 11496                           fsr2h	equ	0xFDA
 11497                           fsr2l	equ	0xFD9
 11498                           status	equ	0xFD8
 11499                           
 11500 ;; *************** function _LEDBsetBrightness *****************
 11501 ;; Defined at:
 11502 ;;		line 25 in file "LED_BarGraph.c"
 11503 ;; Parameters:    Size  Location     Type
 11504 ;;  b               2    0[BANK0 ] int 
 11505 ;;  i2c_addr        1    2[BANK0 ] unsigned char 
 11506 ;; Auto vars:     Size  Location     Type
 11507 ;;  writeBuffer     2    3[BANK0 ] unsigned char [2]
 11508 ;;  timeOut         2    5[BANK0 ] unsigned int 
 11509 ;;  status          1    7[BANK0 ] enum E7758
 11510 ;; Return value:  Size  Location     Type
 11511 ;;                  1    wreg      void 
 11512 ;; Registers used:
 11513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11514 ;; Tracked objects:
 11515 ;;		On entry : 0/0
 11516 ;;		On exit  : 0/0
 11517 ;;		Unchanged: 0/0
 11518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11519 ;;      Params:         0       3       0       0       0       0       0
 11520 ;;      Locals:         0       5       0       0       0       0       0
 11521 ;;      Temps:          0       0       0       0       0       0       0
 11522 ;;      Totals:         0       8       0       0       0       0       0
 11523 ;;Total ram usage:        8 bytes
 11524 ;; Hardware stack levels used:    1
 11525 ;; Hardware stack levels required when called:    6
 11526 ;; This function calls:
 11527 ;;		_I2C1_MasterWrite
 11528 ;; This function is called by:
 11529 ;;		_LEDbegin
 11530 ;; This function uses a non-reentrant model
 11531 ;;
 11532                           
 11533                           	psect	text56
 11534  00259C                     __ptext56:
 11535                           	opt stack 0
 11536  00259C                     _LEDBsetBrightness:
 11537                           	opt stack 23
 11538                           
 11539                           ;LED_BarGraph.c: 26: if (b > 15) b = 15;
 11540                           
 11541                           ; BSR set to: 0
 11542                           ;incstack = 0
 11543  00259C  0100               	movlb	0	; () banked
 11544  00259E  BFF5               	btfsc	(LEDBsetBrightness@b+1)& (0+255),7,b
 11545  0025A0  D00D               	goto	l6692
 11546  0025A2  0100               	movlb	0	; () banked
 11547  0025A4  51F5               	movf	(LEDBsetBrightness@b+1)& (0+255),w,b
 11548  0025A6  E105               	bnz	u7190
 11549  0025A8  0E10               	movlw	16
 11550  0025AA  0100               	movlb	0	; () banked
 11551  0025AC  5DF4               	subwf	LEDBsetBrightness@b& (0+255),w,b
 11552  0025AE  A0D8               	btfss	status,0,c
 11553  0025B0  D005               	goto	l6692
 11554  0025B2                     u7190:
 11555                           
 11556                           ; BSR set to: 0
 11557  0025B2  0E00               	movlw	0
 11558  0025B4  0100               	movlb	0	; () banked
 11559  0025B6  6FF5               	movwf	(LEDBsetBrightness@b+1)& (0+255),b
 11560  0025B8  0E0F               	movlw	15
 11561  0025BA  6FF4               	movwf	LEDBsetBrightness@b& (0+255),b
 11562  0025BC                     l6692:
 11563                           
 11564                           ; BSR set to: 0
 11565                           ;LED_BarGraph.c: 27: uint8_t writeBuffer[2];
 11566                           ;LED_BarGraph.c: 28: uint16_t timeOut;
 11567                           ;LED_BarGraph.c: 29: writeBuffer[0] = (0xE0 | b);
 11568  0025BC  0100               	movlb	0	; () banked
 11569  0025BE  51F4               	movf	LEDBsetBrightness@b& (0+255),w,b
 11570  0025C0  09E0               	iorlw	224
 11571  0025C2  0100               	movlb	0	; () banked
 11572  0025C4  6FF7               	movwf	LEDBsetBrightness@writeBuffer& (0+255),b
 11573                           
 11574                           ; BSR set to: 0
 11575                           ;LED_BarGraph.c: 30: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 11576  0025C6  0E02               	movlw	2
 11577  0025C8  0100               	movlb	0	; () banked
 11578  0025CA  6FFB               	movwf	LEDBsetBrightness@status& (0+255),b
 11579                           
 11580                           ; BSR set to: 0
 11581                           ;LED_BarGraph.c: 32: timeOut = 0;
 11582  0025CC  0E00               	movlw	0
 11583  0025CE  0100               	movlb	0	; () banked
 11584  0025D0  6FFA               	movwf	(LEDBsetBrightness@timeOut+1)& (0+255),b
 11585  0025D2  0E00               	movlw	0
 11586  0025D4  6FF9               	movwf	LEDBsetBrightness@timeOut& (0+255),b
 11587                           
 11588                           ;LED_BarGraph.c: 33: while (status != I2C1_MESSAGE_FAIL) {
 11589  0025D6  D027               	goto	l6718
 11590  0025D8                     l6698:
 11591                           
 11592                           ; BSR set to: 0
 11593                           ;LED_BarGraph.c: 35: I2C1_MasterWrite(&writeBuffer,
 11594                           ;LED_BarGraph.c: 36: 1,
 11595                           ;LED_BarGraph.c: 37: i2c_addr,
 11596                           ;LED_BarGraph.c: 38: &status);
 11597  0025D8  0EF7               	movlw	low LEDBsetBrightness@writeBuffer
 11598  0025DA  6E24               	movwf	I2C1_MasterWrite@pdata,c
 11599  0025DC  0E00               	movlw	high LEDBsetBrightness@writeBuffer
 11600  0025DE  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
 11601  0025E0  0E01               	movlw	1
 11602  0025E2  6E26               	movwf	I2C1_MasterWrite@length,c
 11603  0025E4  C0F6  F027         	movff	LEDBsetBrightness@i2c_addr,I2C1_MasterWrite@address
 11604  0025E8  6A28               	clrf	I2C1_MasterWrite@address+1,c
 11605  0025EA  0EFB               	movlw	low LEDBsetBrightness@status
 11606  0025EC  6E29               	movwf	I2C1_MasterWrite@pflag,c
 11607  0025EE  0E00               	movlw	high LEDBsetBrightness@status
 11608  0025F0  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
 11609  0025F2  EC8F  F015         	call	_I2C1_MasterWrite	;wreg free
 11610  0025F6                     l6700:
 11611  0025F6  0E02               	movlw	2
 11612  0025F8  0100               	movlb	0	; () banked
 11613  0025FA  19FB               	xorwf	LEDBsetBrightness@status& (0+255),w,b
 11614  0025FC  B4D8               	btfsc	status,2,c
 11615  0025FE  D7FB               	goto	l6700
 11616                           
 11617                           ; BSR set to: 0
 11618                           ;LED_BarGraph.c: 43: if (status == I2C1_MESSAGE_COMPLETE)
 11619                           
 11620                           ; BSR set to: 0
 11621  002600  0100               	movlb	0	; () banked
 11622  002602  51FB               	movf	LEDBsetBrightness@status& (0+255),w,b
 11623  002604  0100               	movlb	0	; () banked
 11624  002606  B4D8               	btfsc	status,2,c
 11625  002608  0012               	return	
 11626                           
 11627                           ; BSR set to: 0
 11628                           ;LED_BarGraph.c: 45: if (timeOut == 100)
 11629                           
 11630                           ; BSR set to: 0
 11631                           
 11632                           ; BSR set to: 0
 11633                           ;LED_BarGraph.c: 44: break;
 11634  00260A  0E64               	movlw	100
 11635  00260C  0100               	movlb	0	; () banked
 11636  00260E  19F9               	xorwf	LEDBsetBrightness@timeOut& (0+255),w,b
 11637  002610  0100               	movlb	0	; () banked
 11638  002612  11FA               	iorwf	(LEDBsetBrightness@timeOut+1)& (0+255),w,b
 11639  002614  B4D8               	btfsc	status,2,c
 11640  002616  0012               	return	
 11641                           
 11642                           ; BSR set to: 0
 11643                           ;LED_BarGraph.c: 47: if (status == I2C1_MESSAGE_FAIL)
 11644                           
 11645                           ; BSR set to: 0
 11646                           
 11647                           ; BSR set to: 0
 11648                           ;LED_BarGraph.c: 46: break;
 11649  002618  0100               	movlb	0	; () banked
 11650  00261A  05FB               	decf	LEDBsetBrightness@status& (0+255),w,b
 11651  00261C  B4D8               	btfsc	status,2,c
 11652  00261E  0012               	return	
 11653                           
 11654                           ; BSR set to: 0
 11655                           ;LED_BarGraph.c: 49: else
 11656                           ;LED_BarGraph.c: 50: timeOut++;
 11657                           
 11658                           ; BSR set to: 0
 11659                           
 11660                           ; BSR set to: 0
 11661                           
 11662                           ; BSR set to: 0
 11663                           ;LED_BarGraph.c: 48: break;
 11664  002620  0100               	movlb	0	; () banked
 11665  002622  4BF9               	infsnz	LEDBsetBrightness@timeOut& (0+255),f,b
 11666  002624  2BFA               	incf	(LEDBsetBrightness@timeOut+1)& (0+255),f,b
 11667  002626                     l6718:
 11668                           
 11669                           ; BSR set to: 0
 11670  002626  0100               	movlb	0	; () banked
 11671  002628  05FB               	decf	LEDBsetBrightness@status& (0+255),w,b
 11672  00262A  B4D8               	btfsc	status,2,c
 11673  00262C  0012               	return	
 11674  00262E  D7D4               	goto	l6698
 11675  002630                     __end_of_LEDBsetBrightness:
 11676                           	opt stack 0
 11677                           tosu	equ	0xFFF
 11678                           tosh	equ	0xFFE
 11679                           tosl	equ	0xFFD
 11680                           pclath	equ	0xFFA
 11681                           tblptru	equ	0xFF8
 11682                           tblptrh	equ	0xFF7
 11683                           tblptrl	equ	0xFF6
 11684                           tablat	equ	0xFF5
 11685                           prodh	equ	0xFF4
 11686                           prodl	equ	0xFF3
 11687                           intcon	equ	0xFF2
 11688                           intcon2	equ	0xFF1
 11689                           postinc0	equ	0xFEE
 11690                           wreg	equ	0xFE8
 11691                           indf2	equ	0xFDF
 11692                           postinc2	equ	0xFDE
 11693                           postdec2	equ	0xFDD
 11694                           plusw2	equ	0xFDB
 11695                           fsr2h	equ	0xFDA
 11696                           fsr2l	equ	0xFD9
 11697                           status	equ	0xFD8
 11698                           
 11699 ;; *************** function _I2C1_MasterWrite *****************
 11700 ;; Defined at:
 11701 ;;		line 551 in file "mcc_generated_files/i2c1.c"
 11702 ;; Parameters:    Size  Location     Type
 11703 ;;  pdata           2   35[COMRAM] PTR unsigned char 
 11704 ;;		 -> oledPutChar@bytes(9), Buff(2), LEDwriteDisplay@writeBuffer(20), LEDbegin@writeBuffer(3), 
 11705 ;;		 -> LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBuffer(2), 
 11706 ;;  length          1   37[COMRAM] unsigned char 
 11707 ;;  address         2   38[COMRAM] unsigned int 
 11708 ;;  pflag           2   40[COMRAM] PTR enum E7739
 11709 ;;		 -> oledPutChar@status(1), OLED_command@status(1), LEDwriteDisplay@status(1), LEDbegin@status(1), 
 11710 ;;		 -> LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
 11711 ;; Auto vars:     Size  Location     Type
 11712 ;;		None
 11713 ;; Return value:  Size  Location     Type
 11714 ;;                  1    wreg      void 
 11715 ;; Registers used:
 11716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11717 ;; Tracked objects:
 11718 ;;		On entry : 0/0
 11719 ;;		On exit  : 0/0
 11720 ;;		Unchanged: 0/0
 11721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11722 ;;      Params:         7       0       0       0       0       0       0
 11723 ;;      Locals:         0       0       0       0       0       0       0
 11724 ;;      Temps:          0       0       0       0       0       0       0
 11725 ;;      Totals:         7       0       0       0       0       0       0
 11726 ;;Total ram usage:        7 bytes
 11727 ;; Hardware stack levels used:    1
 11728 ;; Hardware stack levels required when called:    5
 11729 ;; This function calls:
 11730 ;;		_I2C1_MasterTRBInsert
 11731 ;;		_I2C1_MasterWriteTRBBuild
 11732 ;; This function is called by:
 11733 ;;		_LEDBsetBrightness
 11734 ;;		_LEDblinkRate
 11735 ;;		_LEDbegin
 11736 ;;		_LEDwriteDisplay
 11737 ;;		_OLED_command
 11738 ;;		_oledPutChar
 11739 ;; This function uses a non-reentrant model
 11740 ;;
 11741                           
 11742                           	psect	text57
 11743  002B1E                     __ptext57:
 11744                           	opt stack 0
 11745  002B1E                     _I2C1_MasterWrite:
 11746                           	opt stack 24
 11747                           
 11748                           ;i2c1.c: 557: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
 11749                           ;i2c1.c: 560: if (i2c1_object.trStatus.s.full != 1)
 11750                           
 11751                           ; BSR set to: 0
 11752                           ;incstack = 0
 11753  002B1E  0100               	movlb	0	; () banked
 11754  002B20  B1BC               	btfsc	(_i2c1_object+4)& (0+255),0,b
 11755  002B22  D01C               	goto	l6254
 11756                           
 11757                           ; BSR set to: 0
 11758                           ;i2c1.c: 561: {
 11759                           ;i2c1.c: 562: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
 11760  002B24  0EE8               	movlw	low I2C1_MasterWrite@trBlock
 11761  002B26  6E1B               	movwf	I2C1_MasterWriteTRBBuild@ptrb,c
 11762  002B28  0E00               	movlw	high I2C1_MasterWrite@trBlock
 11763  002B2A  6E1C               	movwf	I2C1_MasterWriteTRBBuild@ptrb+1,c
 11764  002B2C  C024  F01D         	movff	I2C1_MasterWrite@pdata,I2C1_MasterWriteTRBBuild@pdata
 11765  002B30  C025  F01E         	movff	I2C1_MasterWrite@pdata+1,I2C1_MasterWriteTRBBuild@pdata+1
 11766  002B34  C026  F01F         	movff	I2C1_MasterWrite@length,I2C1_MasterWriteTRBBuild@length
 11767  002B38  C027  F020         	movff	I2C1_MasterWrite@address,I2C1_MasterWriteTRBBuild@address
 11768  002B3C  C028  F021         	movff	I2C1_MasterWrite@address+1,I2C1_MasterWriteTRBBuild@address+1
 11769  002B40  ECFC  F015         	call	_I2C1_MasterWriteTRBBuild	;wreg free
 11770                           
 11771                           ;i2c1.c: 563: I2C1_MasterTRBInsert(1, &trBlock, pflag);
 11772  002B44  0EE8               	movlw	low I2C1_MasterWrite@trBlock
 11773  002B46  6E1B               	movwf	I2C1_MasterTRBInsert@ptrb_list,c
 11774  002B48  0E00               	movlw	high I2C1_MasterWrite@trBlock
 11775  002B4A  6E1C               	movwf	I2C1_MasterTRBInsert@ptrb_list+1,c
 11776  002B4C  C029  F01D         	movff	I2C1_MasterWrite@pflag,I2C1_MasterTRBInsert@pflag
 11777  002B50  C02A  F01E         	movff	I2C1_MasterWrite@pflag+1,I2C1_MasterTRBInsert@pflag+1
 11778  002B54  0E01               	movlw	1
 11779  002B56  EC2C  F011         	call	_I2C1_MasterTRBInsert
 11780                           
 11781                           ;i2c1.c: 564: }
 11782  002B5A  0012               	return	
 11783  002B5C                     l6254:
 11784                           
 11785                           ;i2c1.c: 565: else
 11786                           ;i2c1.c: 566: {
 11787                           ;i2c1.c: 567: *pflag = I2C1_MESSAGE_FAIL;
 11788  002B5C  C029  FFD9         	movff	I2C1_MasterWrite@pflag,fsr2l
 11789  002B60  C02A  FFDA         	movff	I2C1_MasterWrite@pflag+1,fsr2h
 11790  002B64  0E01               	movlw	1
 11791  002B66  6EDF               	movwf	indf2,c
 11792  002B68  0012               	return	
 11793  002B6A                     __end_of_I2C1_MasterWrite:
 11794                           	opt stack 0
 11795                           tosu	equ	0xFFF
 11796                           tosh	equ	0xFFE
 11797                           tosl	equ	0xFFD
 11798                           pclath	equ	0xFFA
 11799                           tblptru	equ	0xFF8
 11800                           tblptrh	equ	0xFF7
 11801                           tblptrl	equ	0xFF6
 11802                           tablat	equ	0xFF5
 11803                           prodh	equ	0xFF4
 11804                           prodl	equ	0xFF3
 11805                           intcon	equ	0xFF2
 11806                           intcon2	equ	0xFF1
 11807                           postinc0	equ	0xFEE
 11808                           wreg	equ	0xFE8
 11809                           indf2	equ	0xFDF
 11810                           postinc2	equ	0xFDE
 11811                           postdec2	equ	0xFDD
 11812                           plusw2	equ	0xFDB
 11813                           fsr2h	equ	0xFDA
 11814                           fsr2l	equ	0xFD9
 11815                           status	equ	0xFD8
 11816                           
 11817 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 11818 ;; Defined at:
 11819 ;;		line 660 in file "mcc_generated_files/i2c1.c"
 11820 ;; Parameters:    Size  Location     Type
 11821 ;;  ptrb            2   26[COMRAM] PTR struct .
 11822 ;;		 -> I2C1_MasterWrite@trBlock(5), 
 11823 ;;  pdata           2   28[COMRAM] PTR unsigned char 
 11824 ;;		 -> oledPutChar@bytes(9), Buff(2), LEDwriteDisplay@writeBuffer(20), LEDbegin@writeBuffer(3), 
 11825 ;;		 -> LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBuffer(2), 
 11826 ;;  length          1   30[COMRAM] unsigned char 
 11827 ;;  address         2   31[COMRAM] unsigned int 
 11828 ;; Auto vars:     Size  Location     Type
 11829 ;;		None
 11830 ;; Return value:  Size  Location     Type
 11831 ;;                  1    wreg      void 
 11832 ;; Registers used:
 11833 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11834 ;; Tracked objects:
 11835 ;;		On entry : 0/0
 11836 ;;		On exit  : 0/0
 11837 ;;		Unchanged: 0/0
 11838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11839 ;;      Params:         7       0       0       0       0       0       0
 11840 ;;      Locals:         0       0       0       0       0       0       0
 11841 ;;      Temps:          2       0       0       0       0       0       0
 11842 ;;      Totals:         9       0       0       0       0       0       0
 11843 ;;Total ram usage:        9 bytes
 11844 ;; Hardware stack levels used:    1
 11845 ;; Hardware stack levels required when called:    4
 11846 ;; This function calls:
 11847 ;;		Nothing
 11848 ;; This function is called by:
 11849 ;;		_I2C1_MasterWrite
 11850 ;; This function uses a non-reentrant model
 11851 ;;
 11852                           
 11853                           	psect	text58
 11854  002BF8                     __ptext58:
 11855                           	opt stack 0
 11856  002BF8                     _I2C1_MasterWriteTRBBuild:
 11857                           	opt stack 24
 11858                           
 11859                           ;i2c1.c: 666: ptrb->address = address << 1;
 11860                           
 11861                           ;incstack = 0
 11862  002BF8  C020  F022         	movff	I2C1_MasterWriteTRBBuild@address,??_I2C1_MasterWriteTRBBuild
 11863  002BFC  C021  F023         	movff	I2C1_MasterWriteTRBBuild@address+1,??_I2C1_MasterWriteTRBBuild+1
 11864  002C00  90D8               	bcf	status,0,c
 11865  002C02  3622               	rlcf	??_I2C1_MasterWriteTRBBuild,f,c
 11866  002C04  3623               	rlcf	??_I2C1_MasterWriteTRBBuild+1,f,c
 11867  002C06  C01B  FFD9         	movff	I2C1_MasterWriteTRBBuild@ptrb,fsr2l
 11868  002C0A  C01C  FFDA         	movff	I2C1_MasterWriteTRBBuild@ptrb+1,fsr2h
 11869  002C0E  C022  FFDE         	movff	??_I2C1_MasterWriteTRBBuild,postinc2
 11870  002C12  C023  FFDD         	movff	??_I2C1_MasterWriteTRBBuild+1,postdec2
 11871                           
 11872                           ;i2c1.c: 667: ptrb->length = length;
 11873  002C16  EE20 F002          	lfsr	2,2
 11874  002C1A  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
 11875  002C1C  26D9               	addwf	fsr2l,f,c
 11876  002C1E  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
 11877  002C20  22DA               	addwfc	fsr2h,f,c
 11878  002C22  C01F  FFDF         	movff	I2C1_MasterWriteTRBBuild@length,indf2
 11879                           
 11880                           ;i2c1.c: 668: ptrb->pbuffer = pdata;
 11881  002C26  EE20 F003          	lfsr	2,3
 11882  002C2A  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
 11883  002C2C  26D9               	addwf	fsr2l,f,c
 11884  002C2E  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
 11885  002C30  22DA               	addwfc	fsr2h,f,c
 11886  002C32  C01D  FFDE         	movff	I2C1_MasterWriteTRBBuild@pdata,postinc2
 11887  002C36  C01E  FFDD         	movff	I2C1_MasterWriteTRBBuild@pdata+1,postdec2
 11888  002C3A  0012               	return		;funcret
 11889  002C3C                     __end_of_I2C1_MasterWriteTRBBuild:
 11890                           	opt stack 0
 11891                           tosu	equ	0xFFF
 11892                           tosh	equ	0xFFE
 11893                           tosl	equ	0xFFD
 11894                           pclath	equ	0xFFA
 11895                           tblptru	equ	0xFF8
 11896                           tblptrh	equ	0xFF7
 11897                           tblptrl	equ	0xFF6
 11898                           tablat	equ	0xFF5
 11899                           prodh	equ	0xFF4
 11900                           prodl	equ	0xFF3
 11901                           intcon	equ	0xFF2
 11902                           intcon2	equ	0xFF1
 11903                           postinc0	equ	0xFEE
 11904                           wreg	equ	0xFE8
 11905                           indf2	equ	0xFDF
 11906                           postinc2	equ	0xFDE
 11907                           postdec2	equ	0xFDD
 11908                           plusw2	equ	0xFDB
 11909                           fsr2h	equ	0xFDA
 11910                           fsr2l	equ	0xFD9
 11911                           status	equ	0xFD8
 11912                           
 11913 ;; *************** function _I2C1_MasterTRBInsert *****************
 11914 ;; Defined at:
 11915 ;;		line 594 in file "mcc_generated_files/i2c1.c"
 11916 ;; Parameters:    Size  Location     Type
 11917 ;;  count           1    wreg     unsigned char 
 11918 ;;  ptrb_list       2   26[COMRAM] PTR struct .
 11919 ;;		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
 11920 ;;  pflag           2   28[COMRAM] PTR enum E7739
 11921 ;;		 -> oledPutChar@status(1), OLED_command@status(1), LEDwriteDisplay@status(1), LEDbegin@status(1), 
 11922 ;;		 -> LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
 11923 ;; Auto vars:     Size  Location     Type
 11924 ;;  count           1   31[COMRAM] unsigned char 
 11925 ;; Return value:  Size  Location     Type
 11926 ;;                  1    wreg      void 
 11927 ;; Registers used:
 11928 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11929 ;; Tracked objects:
 11930 ;;		On entry : 0/0
 11931 ;;		On exit  : 0/0
 11932 ;;		Unchanged: 0/0
 11933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11934 ;;      Params:         4       0       0       0       0       0       0
 11935 ;;      Locals:         1       0       0       0       0       0       0
 11936 ;;      Temps:          1       0       0       0       0       0       0
 11937 ;;      Totals:         6       0       0       0       0       0       0
 11938 ;;Total ram usage:        6 bytes
 11939 ;; Hardware stack levels used:    1
 11940 ;; Hardware stack levels required when called:    4
 11941 ;; This function calls:
 11942 ;;		Nothing
 11943 ;; This function is called by:
 11944 ;;		_I2C1_MasterWrite
 11945 ;;		_I2C1_MasterRead
 11946 ;; This function uses a non-reentrant model
 11947 ;;
 11948                           
 11949                           	psect	text59
 11950  002258                     __ptext59:
 11951                           	opt stack 0
 11952  002258                     _I2C1_MasterTRBInsert:
 11953                           	opt stack 24
 11954                           
 11955                           ;incstack = 0
 11956                           ;I2C1_MasterTRBInsert@count stored from wreg
 11957  002258  6E20               	movwf	I2C1_MasterTRBInsert@count,c
 11958                           
 11959                           ;i2c1.c: 601: if (i2c1_object.trStatus.s.full != 1)
 11960  00225A  0100               	movlb	0	; () banked
 11961  00225C  B1BC               	btfsc	(_i2c1_object+4)& (0+255),0,b
 11962  00225E  D046               	goto	l6070
 11963                           
 11964                           ; BSR set to: 0
 11965                           ;i2c1.c: 602: {
 11966                           ;i2c1.c: 603: *pflag = I2C1_MESSAGE_PENDING;
 11967  002260  C01D  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 11968  002264  C01E  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 11969  002268  0E02               	movlw	2
 11970  00226A  6EDF               	movwf	indf2,c
 11971                           
 11972                           ; BSR set to: 0
 11973                           ;i2c1.c: 605: i2c1_object.pTrTail->ptrb_list = ptrb_list;
 11974  00226C  0100               	movlb	0	; () banked
 11975  00226E  EE20 F001          	lfsr	2,1
 11976  002272  51B8               	movf	_i2c1_object& (0+255),w,b
 11977  002274  26D9               	addwf	fsr2l,f,c
 11978  002276  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 11979  002278  22DA               	addwfc	fsr2h,f,c
 11980  00227A  C01B  FFDE         	movff	I2C1_MasterTRBInsert@ptrb_list,postinc2
 11981  00227E  C01C  FFDD         	movff	I2C1_MasterTRBInsert@ptrb_list+1,postdec2
 11982                           
 11983                           ; BSR set to: 0
 11984                           ;i2c1.c: 606: i2c1_object.pTrTail->count = count;
 11985  002282  C0B8  FFD9         	movff	_i2c1_object,fsr2l
 11986  002286  C0B9  FFDA         	movff	_i2c1_object+1,fsr2h
 11987  00228A  C020  FFDF         	movff	I2C1_MasterTRBInsert@count,indf2
 11988                           
 11989                           ; BSR set to: 0
 11990                           ;i2c1.c: 607: i2c1_object.pTrTail->pTrFlag = pflag;
 11991  00228E  0100               	movlb	0	; () banked
 11992  002290  EE20 F003          	lfsr	2,3
 11993  002294  51B8               	movf	_i2c1_object& (0+255),w,b
 11994  002296  26D9               	addwf	fsr2l,f,c
 11995  002298  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 11996  00229A  22DA               	addwfc	fsr2h,f,c
 11997  00229C  C01D  FFDE         	movff	I2C1_MasterTRBInsert@pflag,postinc2
 11998  0022A0  C01E  FFDD         	movff	I2C1_MasterTRBInsert@pflag+1,postdec2
 11999                           
 12000                           ; BSR set to: 0
 12001                           ;i2c1.c: 608: i2c1_object.pTrTail++;
 12002  0022A4  0E05               	movlw	5
 12003  0022A6  0100               	movlb	0	; () banked
 12004  0022A8  27B8               	addwf	_i2c1_object& (0+255),f,b
 12005  0022AA  0E00               	movlw	0
 12006  0022AC  23B9               	addwfc	(_i2c1_object+1)& (0+255),f,b
 12007                           
 12008                           ; BSR set to: 0
 12009                           ;i2c1.c: 611: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
 12010  0022AE  0EF2               	movlw	low (_i2c1_tr_queue+5)
 12011  0022B0  0100               	movlb	0	; () banked
 12012  0022B2  19B8               	xorwf	_i2c1_object& (0+255),w,b
 12013  0022B4  E10B               	bnz	l6066
 12014  0022B6  0E00               	movlw	high (_i2c1_tr_queue+5)
 12015  0022B8  0100               	movlb	0	; () banked
 12016  0022BA  19B9               	xorwf	(_i2c1_object+1)& (0+255),w,b
 12017  0022BC  A4D8               	btfss	status,2,c
 12018  0022BE  D006               	goto	l6066
 12019                           
 12020                           ; BSR set to: 0
 12021                           ;i2c1.c: 612: {
 12022                           ;i2c1.c: 614: i2c1_object.pTrTail = i2c1_tr_queue;
 12023  0022C0  0EED               	movlw	low _i2c1_tr_queue
 12024  0022C2  0100               	movlb	0	; () banked
 12025  0022C4  6FB8               	movwf	_i2c1_object& (0+255),b
 12026  0022C6  0E00               	movlw	high _i2c1_tr_queue
 12027  0022C8  0100               	movlb	0	; () banked
 12028  0022CA  6FB9               	movwf	(_i2c1_object+1)& (0+255),b
 12029  0022CC                     l6066:
 12030                           
 12031                           ; BSR set to: 0
 12032                           ;i2c1.c: 615: }
 12033                           ;i2c1.c: 619: i2c1_object.trStatus.s.empty = 0;
 12034  0022CC  0100               	movlb	0	; () banked
 12035  0022CE  93BC               	bcf	(_i2c1_object+4)& (0+255),1,b
 12036                           
 12037                           ;i2c1.c: 622: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
 12038  0022D0  0100               	movlb	0	; () banked
 12039  0022D2  51B8               	movf	_i2c1_object& (0+255),w,b
 12040  0022D4  0100               	movlb	0	; () banked
 12041  0022D6  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 12042  0022D8  E10F               	bnz	l6072
 12043  0022DA  0100               	movlb	0	; () banked
 12044  0022DC  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 12045  0022DE  0100               	movlb	0	; () banked
 12046  0022E0  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 12047  0022E2  A4D8               	btfss	status,2,c
 12048  0022E4  D009               	goto	l6072
 12049                           
 12050                           ; BSR set to: 0
 12051                           ;i2c1.c: 623: {
 12052                           ;i2c1.c: 625: i2c1_object.trStatus.s.full = 1;
 12053  0022E6  0100               	movlb	0	; () banked
 12054  0022E8  81BC               	bsf	(_i2c1_object+4)& (0+255),0,b
 12055                           
 12056                           ; BSR set to: 0
 12057                           ;i2c1.c: 626: }
 12058                           ;i2c1.c: 628: }
 12059  0022EA  D006               	goto	l6072
 12060  0022EC                     l6070:
 12061                           
 12062                           ; BSR set to: 0
 12063                           ;i2c1.c: 629: else
 12064                           ;i2c1.c: 630: {
 12065                           ;i2c1.c: 631: *pflag = I2C1_MESSAGE_FAIL;
 12066  0022EC  C01D  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 12067  0022F0  C01E  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 12068  0022F4  0E01               	movlw	1
 12069  0022F6  6EDF               	movwf	indf2,c
 12070  0022F8                     l6072:
 12071                           
 12072                           ; BSR set to: 0
 12073                           ;i2c1.c: 632: }
 12074                           ;i2c1.c: 635: if (*pflag == I2C1_MESSAGE_PENDING)
 12075  0022F8  C01D  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 12076  0022FC  C01E  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 12077  002300  0E02               	movlw	2
 12078  002302  18DE               	xorwf	postinc2,w,c
 12079  002304  A4D8               	btfss	status,2,c
 12080  002306  0012               	return	
 12081  002308                     l6076:
 12082  002308  5038               	movf	_i2c1_state,w,c
 12083  00230A  A4D8               	btfss	status,2,c
 12084  00230C  D7FD               	goto	l6076
 12085                           
 12086                           ;i2c1.c: 638: {
 12087                           ;i2c1.c: 641: PIR1bits.SSP1IF = 1;
 12088  00230E  869E               	bsf	3998,3,c	;volatile
 12089  002310  0012               	return	
 12090  002312                     __end_of_I2C1_MasterTRBInsert:
 12091                           	opt stack 0
 12092                           tosu	equ	0xFFF
 12093                           tosh	equ	0xFFE
 12094                           tosl	equ	0xFFD
 12095                           pclath	equ	0xFFA
 12096                           tblptru	equ	0xFF8
 12097                           tblptrh	equ	0xFF7
 12098                           tblptrl	equ	0xFF6
 12099                           tablat	equ	0xFF5
 12100                           prodh	equ	0xFF4
 12101                           prodl	equ	0xFF3
 12102                           intcon	equ	0xFF2
 12103                           intcon2	equ	0xFF1
 12104                           postinc0	equ	0xFEE
 12105                           wreg	equ	0xFE8
 12106                           indf2	equ	0xFDF
 12107                           postinc2	equ	0xFDE
 12108                           postdec2	equ	0xFDD
 12109                           plusw2	equ	0xFDB
 12110                           fsr2h	equ	0xFDA
 12111                           fsr2l	equ	0xFD9
 12112                           status	equ	0xFD8
 12113                           
 12114 ;; *************** function _INTERRUPT_InterruptManager *****************
 12115 ;; Defined at:
 12116 ;;		line 75 in file "mcc_generated_files/interrupt_manager.c"
 12117 ;; Parameters:    Size  Location     Type
 12118 ;;		None
 12119 ;; Auto vars:     Size  Location     Type
 12120 ;;		None
 12121 ;; Return value:  Size  Location     Type
 12122 ;;                  1    wreg      void 
 12123 ;; Registers used:
 12124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 12125 ;; Tracked objects:
 12126 ;;		On entry : 0/0
 12127 ;;		On exit  : 0/0
 12128 ;;		Unchanged: 0/0
 12129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12130 ;;      Params:         0       0       0       0       0       0       0
 12131 ;;      Locals:         0       0       0       0       0       0       0
 12132 ;;      Temps:         14       0       0       0       0       0       0
 12133 ;;      Totals:        14       0       0       0       0       0       0
 12134 ;;Total ram usage:       14 bytes
 12135 ;; Hardware stack levels used:    1
 12136 ;; Hardware stack levels required when called:    3
 12137 ;; This function calls:
 12138 ;;		_ADC_ISR
 12139 ;;		_EUSART1_Receive_ISR
 12140 ;;		_EUSART1_Transmit_ISR
 12141 ;;		_I2C1_BusCollisionISR
 12142 ;;		_I2C1_ISR
 12143 ;;		_TMR0_ISR
 12144 ;;		_TMR2_ISR
 12145 ;; This function is called by:
 12146 ;;		Interrupt level 2
 12147 ;; This function uses a non-reentrant model
 12148 ;;
 12149                           
 12150                           	psect	intcode
 12151  000008                     __pintcode:
 12152                           	opt stack 0
 12153  000008                     _INTERRUPT_InterruptManager:
 12154                           	opt stack 21
 12155                           
 12156                           ;incstack = 0
 12157  000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12158  00000A  CFFA F00D          	movff	pclath,??_INTERRUPT_InterruptManager
 12159  00000E  CFFB F00E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 12160  000012  CFE9 F00F          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 12161  000016  CFEA F010          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 12162  00001A  CFE1 F011          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 12163  00001E  CFE2 F012          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 12164  000022  CFD9 F013          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 12165  000026  CFDA F014          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 12166  00002A  CFF3 F015          	movff	prodl,??_INTERRUPT_InterruptManager+8
 12167  00002E  CFF4 F016          	movff	prodh,??_INTERRUPT_InterruptManager+9
 12168  000032  CFF6 F017          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 12169  000036  CFF7 F018          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 12170  00003A  CFF8 F019          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 12171  00003E  CFF5 F01A          	movff	tablat,??_INTERRUPT_InterruptManager+13
 12172                           
 12173                           ;interrupt_manager.c: 78: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
 12174  000042  BA9D               	btfsc	3997,5,c	;volatile
 12175  000044  AA9E               	btfss	3998,5,c	;volatile
 12176  000046  D003               	goto	i2l326
 12177                           
 12178                           ;interrupt_manager.c: 79: {
 12179                           ;interrupt_manager.c: 80: EUSART1_Receive_ISR();
 12180  000048  ECAD  F017         	call	_EUSART1_Receive_ISR	;wreg free
 12181                           
 12182                           ;interrupt_manager.c: 81: }
 12183  00004C  D023               	goto	i2l340
 12184  00004E                     i2l326:
 12185                           
 12186                           ;interrupt_manager.c: 82: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
 12187  00004E  B89D               	btfsc	3997,4,c	;volatile
 12188  000050  A89E               	btfss	3998,4,c	;volatile
 12189  000052  D003               	goto	i2l328
 12190                           
 12191                           ;interrupt_manager.c: 83: {
 12192                           ;interrupt_manager.c: 84: EUSART1_Transmit_ISR();
 12193  000054  ECB2  F016         	call	_EUSART1_Transmit_ISR	;wreg free
 12194                           
 12195                           ;interrupt_manager.c: 85: }
 12196  000058  D01D               	goto	i2l340
 12197  00005A                     i2l328:
 12198                           
 12199                           ;interrupt_manager.c: 86: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 12200  00005A  BAF2               	btfsc	intcon,5,c	;volatile
 12201  00005C  A4F2               	btfss	intcon,2,c	;volatile
 12202  00005E  D003               	goto	i2l330
 12203                           
 12204                           ;interrupt_manager.c: 87: {
 12205                           ;interrupt_manager.c: 88: TMR0_ISR();
 12206  000060  EC05  F015         	call	_TMR0_ISR	;wreg free
 12207                           
 12208                           ;interrupt_manager.c: 89: }
 12209  000064  D017               	goto	i2l340
 12210  000066                     i2l330:
 12211                           
 12212                           ;interrupt_manager.c: 90: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
 12213  000066  B29D               	btfsc	3997,1,c	;volatile
 12214  000068  A29E               	btfss	3998,1,c	;volatile
 12215  00006A  D003               	goto	i2l332
 12216                           
 12217                           ;interrupt_manager.c: 91: {
 12218                           ;interrupt_manager.c: 92: TMR2_ISR();
 12219  00006C  EC28  F018         	call	_TMR2_ISR	;wreg free
 12220                           
 12221                           ;interrupt_manager.c: 93: }
 12222  000070  D011               	goto	i2l340
 12223  000072                     i2l332:
 12224                           
 12225                           ;interrupt_manager.c: 94: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 12226  000072  BC9D               	btfsc	3997,6,c	;volatile
 12227  000074  AC9E               	btfss	3998,6,c	;volatile
 12228  000076  D003               	goto	i2l334
 12229                           
 12230                           ;interrupt_manager.c: 95: {
 12231                           ;interrupt_manager.c: 96: ADC_ISR();
 12232  000078  EC30  F018         	call	_ADC_ISR	;wreg free
 12233                           
 12234                           ;interrupt_manager.c: 97: }
 12235  00007C  D00B               	goto	i2l340
 12236  00007E                     i2l334:
 12237                           
 12238                           ;interrupt_manager.c: 98: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 12239  00007E  B69D               	btfsc	3997,3,c	;volatile
 12240  000080  A69E               	btfss	3998,3,c	;volatile
 12241  000082  D003               	goto	i2l336
 12242                           
 12243                           ;interrupt_manager.c: 99: {
 12244                           ;interrupt_manager.c: 100: I2C1_ISR();
 12245  000084  EC1C  F007         	call	_I2C1_ISR	;wreg free
 12246                           
 12247                           ;interrupt_manager.c: 101: }
 12248  000088  D005               	goto	i2l340
 12249  00008A                     i2l336:
 12250                           
 12251                           ;interrupt_manager.c: 102: else if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
 12252  00008A  B6A0               	btfsc	4000,3,c	;volatile
 12253  00008C  A6A1               	btfss	4001,3,c	;volatile
 12254  00008E  D002               	goto	i2l340
 12255                           
 12256                           ;interrupt_manager.c: 103: {
 12257                           ;interrupt_manager.c: 104: I2C1_BusCollisionISR();
 12258  000090  EC33  F018         	call	_I2C1_BusCollisionISR	;wreg free
 12259  000094                     i2l340:
 12260  000094  C01A  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 12261  000098  C019  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 12262  00009C  C018  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 12263  0000A0  C017  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 12264  0000A4  C016  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 12265  0000A8  C015  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 12266  0000AC  C014  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 12267  0000B0  C013  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 12268  0000B4  C012  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 12269  0000B8  C011  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 12270  0000BC  C010  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 12271  0000C0  C00F  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 12272  0000C4  C00E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 12273  0000C8  C00D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 12274  0000CC  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12275  0000CE  0011               	retfie		f
 12276  0000D0                     __end_of_INTERRUPT_InterruptManager:
 12277                           	opt stack 0
 12278                           tosu	equ	0xFFF
 12279                           tosh	equ	0xFFE
 12280                           tosl	equ	0xFFD
 12281                           pclatu	equ	0xFFB
 12282                           pclath	equ	0xFFA
 12283                           tblptru	equ	0xFF8
 12284                           tblptrh	equ	0xFF7
 12285                           tblptrl	equ	0xFF6
 12286                           tablat	equ	0xFF5
 12287                           prodh	equ	0xFF4
 12288                           prodl	equ	0xFF3
 12289                           intcon	equ	0xFF2
 12290                           intcon2	equ	0xFF1
 12291                           postinc0	equ	0xFEE
 12292                           fsr0h	equ	0xFEA
 12293                           fsr0l	equ	0xFE9
 12294                           wreg	equ	0xFE8
 12295                           fsr1h	equ	0xFE2
 12296                           fsr1l	equ	0xFE1
 12297                           indf2	equ	0xFDF
 12298                           postinc2	equ	0xFDE
 12299                           postdec2	equ	0xFDD
 12300                           plusw2	equ	0xFDB
 12301                           fsr2h	equ	0xFDA
 12302                           fsr2l	equ	0xFD9
 12303                           status	equ	0xFD8
 12304                           
 12305 ;; *************** function _TMR2_ISR *****************
 12306 ;; Defined at:
 12307 ;;		line 120 in file "mcc_generated_files/tmr2.c"
 12308 ;; Parameters:    Size  Location     Type
 12309 ;;		None
 12310 ;; Auto vars:     Size  Location     Type
 12311 ;;		None
 12312 ;; Return value:  Size  Location     Type
 12313 ;;                  2  302[None  ] int 
 12314 ;; Registers used:
 12315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 12316 ;; Tracked objects:
 12317 ;;		On entry : 0/0
 12318 ;;		On exit  : 0/0
 12319 ;;		Unchanged: 0/0
 12320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12321 ;;      Params:         0       0       0       0       0       0       0
 12322 ;;      Locals:         0       0       0       0       0       0       0
 12323 ;;      Temps:          0       0       0       0       0       0       0
 12324 ;;      Totals:         0       0       0       0       0       0       0
 12325 ;;Total ram usage:        0 bytes
 12326 ;; Hardware stack levels used:    1
 12327 ;; Hardware stack levels required when called:    2
 12328 ;; This function calls:
 12329 ;;		_TMR2_CallBack
 12330 ;; This function is called by:
 12331 ;;		_INTERRUPT_InterruptManager
 12332 ;; This function uses a non-reentrant model
 12333 ;;
 12334                           
 12335                           	psect	text61
 12336  003050                     __ptext61:
 12337                           	opt stack 0
 12338  003050                     _TMR2_ISR:
 12339                           	opt stack 21
 12340                           
 12341                           ;tmr2.c: 124: PIR1bits.TMR2IF = 0;
 12342                           
 12343                           ;incstack = 0
 12344  003050  929E               	bcf	3998,1,c	;volatile
 12345                           
 12346                           ;tmr2.c: 128: TMR2_CallBack();
 12347  003052  EC56  F008         	call	_TMR2_CallBack	;wreg free
 12348  003056  0012               	return		;funcret
 12349  003058                     __end_of_TMR2_ISR:
 12350                           	opt stack 0
 12351                           tosu	equ	0xFFF
 12352                           tosh	equ	0xFFE
 12353                           tosl	equ	0xFFD
 12354                           pclatu	equ	0xFFB
 12355                           pclath	equ	0xFFA
 12356                           tblptru	equ	0xFF8
 12357                           tblptrh	equ	0xFF7
 12358                           tblptrl	equ	0xFF6
 12359                           tablat	equ	0xFF5
 12360                           prodh	equ	0xFF4
 12361                           prodl	equ	0xFF3
 12362                           intcon	equ	0xFF2
 12363                           intcon2	equ	0xFF1
 12364                           postinc0	equ	0xFEE
 12365                           fsr0h	equ	0xFEA
 12366                           fsr0l	equ	0xFE9
 12367                           wreg	equ	0xFE8
 12368                           fsr1h	equ	0xFE2
 12369                           fsr1l	equ	0xFE1
 12370                           indf2	equ	0xFDF
 12371                           postinc2	equ	0xFDE
 12372                           postdec2	equ	0xFDD
 12373                           plusw2	equ	0xFDB
 12374                           fsr2h	equ	0xFDA
 12375                           fsr2l	equ	0xFD9
 12376                           status	equ	0xFD8
 12377                           
 12378 ;; *************** function _TMR2_CallBack *****************
 12379 ;; Defined at:
 12380 ;;		line 131 in file "mcc_generated_files/tmr2.c"
 12381 ;; Parameters:    Size  Location     Type
 12382 ;;		None
 12383 ;; Auto vars:     Size  Location     Type
 12384 ;;  i               2    2[COMRAM] int 
 12385 ;; Return value:  Size  Location     Type
 12386 ;;                  1    wreg      void 
 12387 ;; Registers used:
 12388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 12389 ;; Tracked objects:
 12390 ;;		On entry : 0/0
 12391 ;;		On exit  : 0/0
 12392 ;;		Unchanged: 0/0
 12393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12394 ;;      Params:         0       0       0       0       0       0       0
 12395 ;;      Locals:         2       0       0       0       0       0       0
 12396 ;;      Temps:          2       0       0       0       0       0       0
 12397 ;;      Totals:         4       0       0       0       0       0       0
 12398 ;;Total ram usage:        4 bytes
 12399 ;; Hardware stack levels used:    1
 12400 ;; Hardware stack levels required when called:    1
 12401 ;; This function calls:
 12402 ;;		Absolute function
 12403 ;;		_TMR2_DefaultInterruptHandler
 12404 ;; This function is called by:
 12405 ;;		_TMR2_ISR
 12406 ;; This function uses a non-reentrant model
 12407 ;;
 12408                           
 12409                           	psect	text62
 12410  0010AC                     __ptext62:
 12411                           	opt stack 0
 12412  0010AC                     _TMR2_CallBack:
 12413                           	opt stack 21
 12414                           
 12415                           ;tmr2.c: 133: int i = 0;
 12416                           
 12417                           ;incstack = 0
 12418  0010AC  0E00               	movlw	0
 12419  0010AE  6E04               	movwf	TMR2_CallBack@i+1,c
 12420  0010B0  0E00               	movlw	0
 12421  0010B2  6E03               	movwf	TMR2_CallBack@i,c
 12422                           
 12423                           ;tmr2.c: 134: while (i <= 5) {
 12424  0010B4  D0C3               	goto	i2l460
 12425  0010B6                     i2l4704:
 12426                           
 12427                           ;tmr2.c: 136: if (LEDNUM_ENAB[i] == 1) {
 12428  0010B6  90D8               	bcf	status,0,c
 12429  0010B8  3403               	rlcf	TMR2_CallBack@i,w,c
 12430  0010BA  6ED9               	movwf	fsr2l,c
 12431  0010BC  3404               	rlcf	TMR2_CallBack@i+1,w,c
 12432  0010BE  6EDA               	movwf	fsr2h,c
 12433  0010C0  0E98               	movlw	low _LEDNUM_ENAB
 12434  0010C2  26D9               	addwf	fsr2l,f,c
 12435  0010C4  0E00               	movlw	high _LEDNUM_ENAB
 12436  0010C6  22DA               	addwfc	fsr2h,f,c
 12437  0010C8  04DE               	decf	postinc2,w,c
 12438  0010CA  10DE               	iorwf	postinc2,w,c
 12439  0010CC  B4D8               	btfsc	status,2,c
 12440  0010CE  D098               	goto	i2l4722
 12441  0010D0  D0AF               	goto	i2l4724
 12442  0010D2                     i2l467:
 12443  0010D2  B28B               	btfsc	3979,1,c	;volatile
 12444  0010D4  D002               	goto	i2u402_40
 12445  0010D6  828B               	bsf	3979,1,c	;volatile
 12446  0010D8  D03B               	goto	i2l4712
 12447  0010DA                     i2u402_40:
 12448  0010DA  928B               	bcf	3979,1,c	;volatile
 12449                           
 12450                           ;tmr2.c: 142: break;
 12451  0010DC  D039               	goto	i2l4712
 12452  0010DE                     i2l471:
 12453  0010DE  BC89               	btfsc	3977,6,c	;volatile
 12454  0010E0  D002               	goto	i2u404_40
 12455  0010E2  8C89               	bsf	3977,6,c	;volatile
 12456  0010E4  D035               	goto	i2l4712
 12457  0010E6                     i2u404_40:
 12458  0010E6  9C89               	bcf	3977,6,c	;volatile
 12459                           
 12460                           ;tmr2.c: 145: break;
 12461  0010E8  D033               	goto	i2l4712
 12462  0010EA                     i2l474:
 12463  0010EA  BE89               	btfsc	3977,7,c	;volatile
 12464  0010EC  D002               	goto	i2u406_40
 12465  0010EE  8E89               	bsf	3977,7,c	;volatile
 12466  0010F0  D02F               	goto	i2l4712
 12467  0010F2                     i2u406_40:
 12468  0010F2  9E89               	bcf	3977,7,c	;volatile
 12469                           
 12470                           ;tmr2.c: 148: break;
 12471  0010F4  D02D               	goto	i2l4712
 12472  0010F6                     i2l477:
 12473  0010F6  B48D               	btfsc	3981,2,c	;volatile
 12474  0010F8  D002               	goto	i2u408_40
 12475  0010FA  848D               	bsf	3981,2,c	;volatile
 12476  0010FC  D029               	goto	i2l4712
 12477  0010FE                     i2u408_40:
 12478  0010FE  948D               	bcf	3981,2,c	;volatile
 12479                           
 12480                           ;tmr2.c: 151: break;
 12481  001100  D027               	goto	i2l4712
 12482  001102                     i2l480:
 12483  001102  B28D               	btfsc	3981,1,c	;volatile
 12484  001104  D002               	goto	i2u410_40
 12485  001106  828D               	bsf	3981,1,c	;volatile
 12486  001108  D023               	goto	i2l4712
 12487  00110A                     i2u410_40:
 12488  00110A  928D               	bcf	3981,1,c	;volatile
 12489                           
 12490                           ;tmr2.c: 154: break;
 12491  00110C  D021               	goto	i2l4712
 12492  00110E                     i2l483:
 12493  00110E  B08D               	btfsc	3981,0,c	;volatile
 12494  001110  D002               	goto	i2u412_40
 12495  001112  808D               	bsf	3981,0,c	;volatile
 12496  001114  D01D               	goto	i2l4712
 12497  001116                     i2u412_40:
 12498  001116  908D               	bcf	3981,0,c	;volatile
 12499                           
 12500                           ;tmr2.c: 158: }
 12501                           
 12502                           ;tmr2.c: 157: break;
 12503  001118  D01B               	goto	i2l4712
 12504  00111A                     i2l4710:
 12505  00111A  C003  F001         	movff	TMR2_CallBack@i,??_TMR2_CallBack
 12506  00111E  C004  F002         	movff	TMR2_CallBack@i+1,??_TMR2_CallBack+1
 12507                           
 12508                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12509                           ; Switch size 1, requested type "space"
 12510                           ; Number of cases is 1, Range of values is 0 to 0
 12511                           ; switch strategies available:
 12512                           ; Name         Instructions Cycles
 12513                           ; simple_byte            4     3 (average)
 12514                           ;	Chosen strategy is simple_byte
 12515  001122  5002               	movf	??_TMR2_CallBack+1,w,c
 12516  001124  0A00               	xorlw	0	; case 0
 12517  001126  A4D8               	btfss	status,2,c
 12518  001128  D013               	goto	i2l4712
 12519                           
 12520                           ; Switch size 1, requested type "space"
 12521                           ; Number of cases is 6, Range of values is 0 to 5
 12522                           ; switch strategies available:
 12523                           ; Name         Instructions Cycles
 12524                           ; simple_byte           19    10 (average)
 12525                           ;	Chosen strategy is simple_byte
 12526  00112A  5001               	movf	??_TMR2_CallBack,w,c
 12527  00112C  0A00               	xorlw	0	; case 0
 12528  00112E  B4D8               	btfsc	status,2,c
 12529  001130  D7D0               	goto	i2l467
 12530  001132  0A01               	xorlw	1	; case 1
 12531  001134  B4D8               	btfsc	status,2,c
 12532  001136  D7D3               	goto	i2l471
 12533  001138  0A03               	xorlw	3	; case 2
 12534  00113A  B4D8               	btfsc	status,2,c
 12535  00113C  D7D6               	goto	i2l474
 12536  00113E  0A01               	xorlw	1	; case 3
 12537  001140  B4D8               	btfsc	status,2,c
 12538  001142  D7D9               	goto	i2l477
 12539  001144  0A07               	xorlw	7	; case 4
 12540  001146  B4D8               	btfsc	status,2,c
 12541  001148  D7DC               	goto	i2l480
 12542  00114A  0A01               	xorlw	1	; case 5
 12543  00114C  B4D8               	btfsc	status,2,c
 12544  00114E  D7DF               	goto	i2l483
 12545  001150                     i2l4712:
 12546                           
 12547                           ;tmr2.c: 159: LEDState[i] = 1;
 12548  001150  90D8               	bcf	status,0,c
 12549  001152  3403               	rlcf	TMR2_CallBack@i,w,c
 12550  001154  6ED9               	movwf	fsr2l,c
 12551  001156  3404               	rlcf	TMR2_CallBack@i+1,w,c
 12552  001158  6EDA               	movwf	fsr2h,c
 12553  00115A  0EA4               	movlw	low _LEDState
 12554  00115C  26D9               	addwf	fsr2l,f,c
 12555  00115E  0E00               	movlw	high _LEDState
 12556  001160  22DA               	addwfc	fsr2h,f,c
 12557  001162  0E01               	movlw	1
 12558  001164  D049               	goto	L4
 12559  001166                     i2l489:
 12560  001166  B28B               	btfsc	3979,1,c	;volatile
 12561  001168  D002               	goto	i2u414_40
 12562  00116A  828B               	bsf	3979,1,c	;volatile
 12563  00116C  D03B               	goto	i2l4718
 12564  00116E                     i2u414_40:
 12565  00116E  928B               	bcf	3979,1,c	;volatile
 12566                           
 12567                           ;tmr2.c: 165: break;
 12568  001170  D039               	goto	i2l4718
 12569  001172                     i2l493:
 12570  001172  BC89               	btfsc	3977,6,c	;volatile
 12571  001174  D002               	goto	i2u416_40
 12572  001176  8C89               	bsf	3977,6,c	;volatile
 12573  001178  D035               	goto	i2l4718
 12574  00117A                     i2u416_40:
 12575  00117A  9C89               	bcf	3977,6,c	;volatile
 12576                           
 12577                           ;tmr2.c: 168: break;
 12578  00117C  D033               	goto	i2l4718
 12579  00117E                     i2l496:
 12580  00117E  BE89               	btfsc	3977,7,c	;volatile
 12581  001180  D002               	goto	i2u418_40
 12582  001182  8E89               	bsf	3977,7,c	;volatile
 12583  001184  D02F               	goto	i2l4718
 12584  001186                     i2u418_40:
 12585  001186  9E89               	bcf	3977,7,c	;volatile
 12586                           
 12587                           ;tmr2.c: 171: break;
 12588  001188  D02D               	goto	i2l4718
 12589  00118A                     i2l499:
 12590  00118A  B48D               	btfsc	3981,2,c	;volatile
 12591  00118C  D002               	goto	i2u420_40
 12592  00118E  848D               	bsf	3981,2,c	;volatile
 12593  001190  D029               	goto	i2l4718
 12594  001192                     i2u420_40:
 12595  001192  948D               	bcf	3981,2,c	;volatile
 12596                           
 12597                           ;tmr2.c: 174: break;
 12598  001194  D027               	goto	i2l4718
 12599  001196                     i2l502:
 12600  001196  B28D               	btfsc	3981,1,c	;volatile
 12601  001198  D002               	goto	i2u422_40
 12602  00119A  828D               	bsf	3981,1,c	;volatile
 12603  00119C  D023               	goto	i2l4718
 12604  00119E                     i2u422_40:
 12605  00119E  928D               	bcf	3981,1,c	;volatile
 12606                           
 12607                           ;tmr2.c: 177: break;
 12608  0011A0  D021               	goto	i2l4718
 12609  0011A2                     i2l505:
 12610  0011A2  B08D               	btfsc	3981,0,c	;volatile
 12611  0011A4  D002               	goto	i2u424_40
 12612  0011A6  808D               	bsf	3981,0,c	;volatile
 12613  0011A8  D01D               	goto	i2l4718
 12614  0011AA                     i2u424_40:
 12615  0011AA  908D               	bcf	3981,0,c	;volatile
 12616                           
 12617                           ;tmr2.c: 181: }
 12618                           
 12619                           ;tmr2.c: 180: break;
 12620  0011AC  D01B               	goto	i2l4718
 12621  0011AE                     i2l4716:
 12622  0011AE  C003  F001         	movff	TMR2_CallBack@i,??_TMR2_CallBack
 12623  0011B2  C004  F002         	movff	TMR2_CallBack@i+1,??_TMR2_CallBack+1
 12624                           
 12625                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12626                           ; Switch size 1, requested type "space"
 12627                           ; Number of cases is 1, Range of values is 0 to 0
 12628                           ; switch strategies available:
 12629                           ; Name         Instructions Cycles
 12630                           ; simple_byte            4     3 (average)
 12631                           ;	Chosen strategy is simple_byte
 12632  0011B6  5002               	movf	??_TMR2_CallBack+1,w,c
 12633  0011B8  0A00               	xorlw	0	; case 0
 12634  0011BA  A4D8               	btfss	status,2,c
 12635  0011BC  D013               	goto	i2l4718
 12636                           
 12637                           ; Switch size 1, requested type "space"
 12638                           ; Number of cases is 6, Range of values is 0 to 5
 12639                           ; switch strategies available:
 12640                           ; Name         Instructions Cycles
 12641                           ; simple_byte           19    10 (average)
 12642                           ;	Chosen strategy is simple_byte
 12643  0011BE  5001               	movf	??_TMR2_CallBack,w,c
 12644  0011C0  0A00               	xorlw	0	; case 0
 12645  0011C2  B4D8               	btfsc	status,2,c
 12646  0011C4  D7D0               	goto	i2l489
 12647  0011C6  0A01               	xorlw	1	; case 1
 12648  0011C8  B4D8               	btfsc	status,2,c
 12649  0011CA  D7D3               	goto	i2l493
 12650  0011CC  0A03               	xorlw	3	; case 2
 12651  0011CE  B4D8               	btfsc	status,2,c
 12652  0011D0  D7D6               	goto	i2l496
 12653  0011D2  0A01               	xorlw	1	; case 3
 12654  0011D4  B4D8               	btfsc	status,2,c
 12655  0011D6  D7D9               	goto	i2l499
 12656  0011D8  0A07               	xorlw	7	; case 4
 12657  0011DA  B4D8               	btfsc	status,2,c
 12658  0011DC  D7DC               	goto	i2l502
 12659  0011DE  0A01               	xorlw	1	; case 5
 12660  0011E0  B4D8               	btfsc	status,2,c
 12661  0011E2  D7DF               	goto	i2l505
 12662  0011E4                     i2l4718:
 12663                           
 12664                           ;tmr2.c: 182: LEDState[i] = 0;
 12665  0011E4  90D8               	bcf	status,0,c
 12666  0011E6  3403               	rlcf	TMR2_CallBack@i,w,c
 12667  0011E8  6ED9               	movwf	fsr2l,c
 12668  0011EA  3404               	rlcf	TMR2_CallBack@i+1,w,c
 12669  0011EC  6EDA               	movwf	fsr2h,c
 12670  0011EE  0EA4               	movlw	low _LEDState
 12671  0011F0  26D9               	addwf	fsr2l,f,c
 12672  0011F2  0E00               	movlw	high _LEDState
 12673  0011F4  22DA               	addwfc	fsr2h,f,c
 12674  0011F6  0E00               	movlw	0
 12675  0011F8                     L4:
 12676  0011F8  6EDE               	movwf	postinc2,c
 12677  0011FA  0E00               	movlw	0
 12678  0011FC  6EDD               	movwf	postdec2,c
 12679                           
 12680                           ;tmr2.c: 184: }
 12681                           
 12682                           ;tmr2.c: 183: break;
 12683  0011FE  D018               	goto	i2l4724
 12684  001200                     i2l4722:
 12685  001200  90D8               	bcf	status,0,c
 12686  001202  3403               	rlcf	TMR2_CallBack@i,w,c
 12687  001204  6ED9               	movwf	fsr2l,c
 12688  001206  3404               	rlcf	TMR2_CallBack@i+1,w,c
 12689  001208  6EDA               	movwf	fsr2h,c
 12690  00120A  0EA4               	movlw	low _LEDState
 12691  00120C  26D9               	addwf	fsr2l,f,c
 12692  00120E  0E00               	movlw	high _LEDState
 12693  001210  22DA               	addwfc	fsr2h,f,c
 12694  001212  CFDE F001          	movff	postinc2,??_TMR2_CallBack
 12695  001216  CFDD F002          	movff	postdec2,??_TMR2_CallBack+1
 12696                           
 12697                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12698                           ; Switch size 1, requested type "space"
 12699                           ; Number of cases is 1, Range of values is 0 to 0
 12700                           ; switch strategies available:
 12701                           ; Name         Instructions Cycles
 12702                           ; simple_byte            4     3 (average)
 12703                           ;	Chosen strategy is simple_byte
 12704  00121A  5002               	movf	??_TMR2_CallBack+1,w,c
 12705  00121C  0A00               	xorlw	0	; case 0
 12706  00121E  A4D8               	btfss	status,2,c
 12707  001220  D007               	goto	i2l4724
 12708                           
 12709                           ; Switch size 1, requested type "space"
 12710                           ; Number of cases is 2, Range of values is 0 to 1
 12711                           ; switch strategies available:
 12712                           ; Name         Instructions Cycles
 12713                           ; simple_byte            7     4 (average)
 12714                           ;	Chosen strategy is simple_byte
 12715  001222  5001               	movf	??_TMR2_CallBack,w,c
 12716  001224  0A00               	xorlw	0	; case 0
 12717  001226  B4D8               	btfsc	status,2,c
 12718  001228  D778               	goto	i2l4710
 12719  00122A  0A01               	xorlw	1	; case 1
 12720  00122C  B4D8               	btfsc	status,2,c
 12721  00122E  D7BF               	goto	i2l4716
 12722  001230                     i2l4724:
 12723                           
 12724                           ;tmr2.c: 185: }
 12725                           ;tmr2.c: 186: i = i + 1;
 12726  001230  0E01               	movlw	1
 12727  001232  2403               	addwf	TMR2_CallBack@i,w,c
 12728  001234  6E03               	movwf	TMR2_CallBack@i,c
 12729  001236  0E00               	movlw	0
 12730  001238  2004               	addwfc	TMR2_CallBack@i+1,w,c
 12731  00123A  6E04               	movwf	TMR2_CallBack@i+1,c
 12732  00123C                     i2l460:
 12733  00123C  BE04               	btfsc	TMR2_CallBack@i+1,7,c
 12734  00123E  D73B               	goto	i2l4704
 12735  001240  5004               	movf	TMR2_CallBack@i+1,w,c
 12736  001242  E104               	bnz	i2l4726
 12737  001244  0E06               	movlw	6
 12738  001246  5C03               	subwf	TMR2_CallBack@i,w,c
 12739  001248  A0D8               	btfss	status,0,c
 12740  00124A  D735               	goto	i2l4704
 12741  00124C                     i2l4726:
 12742                           
 12743                           ;tmr2.c: 187: }
 12744                           ;tmr2.c: 191: if(TMR2_InterruptHandler)
 12745  00124C  0100               	movlb	0	; () banked
 12746  00124E  51FE               	movf	_TMR2_InterruptHandler& (0+255),w,b
 12747  001250  0100               	movlb	0	; () banked
 12748  001252  11FF               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 12749  001254  B4D8               	btfsc	status,2,c
 12750  001256  0012               	return	
 12751                           
 12752                           ; BSR set to: 0
 12753                           ;tmr2.c: 192: {
 12754                           ;tmr2.c: 193: TMR2_InterruptHandler();
 12755  001258  D801               	call	i2u428_48
 12756  00125A  0012               	return	
 12757  00125C                     i2u428_48:
 12758  00125C  0005               	push	
 12759  00125E  0100               	movlb	0	; () banked
 12760  001260  6EFA               	movwf	pclath,c
 12761  001262  51FE               	movf	_TMR2_InterruptHandler& (0+255),w,b
 12762  001264  6EFD               	movwf	tosl,c
 12763  001266  51FF               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 12764  001268  6EFE               	movwf	tosh,c
 12765  00126A  50F8               	movf	tblptru,w,c
 12766  00126C  6EFF               	movwf	tosu,c
 12767  00126E  50FA               	movf	pclath,w,c
 12768  001270  0012               	return		;indir
 12769  001272                     __end_of_TMR2_CallBack:
 12770                           	opt stack 0
 12771                           tosu	equ	0xFFF
 12772                           tosh	equ	0xFFE
 12773                           tosl	equ	0xFFD
 12774                           pclatu	equ	0xFFB
 12775                           pclath	equ	0xFFA
 12776                           tblptru	equ	0xFF8
 12777                           tblptrh	equ	0xFF7
 12778                           tblptrl	equ	0xFF6
 12779                           tablat	equ	0xFF5
 12780                           prodh	equ	0xFF4
 12781                           prodl	equ	0xFF3
 12782                           intcon	equ	0xFF2
 12783                           intcon2	equ	0xFF1
 12784                           postinc0	equ	0xFEE
 12785                           fsr0h	equ	0xFEA
 12786                           fsr0l	equ	0xFE9
 12787                           wreg	equ	0xFE8
 12788                           fsr1h	equ	0xFE2
 12789                           fsr1l	equ	0xFE1
 12790                           indf2	equ	0xFDF
 12791                           postinc2	equ	0xFDE
 12792                           postdec2	equ	0xFDD
 12793                           plusw2	equ	0xFDB
 12794                           fsr2h	equ	0xFDA
 12795                           fsr2l	equ	0xFD9
 12796                           status	equ	0xFD8
 12797                           
 12798 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 12799 ;; Defined at:
 12800 ;;		line 297 in file "mcc_generated_files/tmr2.c"
 12801 ;; Parameters:    Size  Location     Type
 12802 ;;		None
 12803 ;; Auto vars:     Size  Location     Type
 12804 ;;		None
 12805 ;; Return value:  Size  Location     Type
 12806 ;;                  1    wreg      void 
 12807 ;; Registers used:
 12808 ;;		None
 12809 ;; Tracked objects:
 12810 ;;		On entry : 0/0
 12811 ;;		On exit  : 0/0
 12812 ;;		Unchanged: 0/0
 12813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12814 ;;      Params:         0       0       0       0       0       0       0
 12815 ;;      Locals:         0       0       0       0       0       0       0
 12816 ;;      Temps:          0       0       0       0       0       0       0
 12817 ;;      Totals:         0       0       0       0       0       0       0
 12818 ;;Total ram usage:        0 bytes
 12819 ;; Hardware stack levels used:    1
 12820 ;; This function calls:
 12821 ;;		Nothing
 12822 ;; This function is called by:
 12823 ;;		_TMR2_Initialize
 12824 ;;		_TMR2_CallBack
 12825 ;; This function uses a non-reentrant model
 12826 ;;
 12827                           
 12828                           	psect	text63
 12829  003064                     __ptext63:
 12830                           	opt stack 0
 12831  003064                     _TMR2_DefaultInterruptHandler:
 12832                           	opt stack 21
 12833                           
 12834                           ;incstack = 0
 12835  003064  0012               	return		;funcret
 12836  003066                     __end_of_TMR2_DefaultInterruptHandler:
 12837                           	opt stack 0
 12838                           tosu	equ	0xFFF
 12839                           tosh	equ	0xFFE
 12840                           tosl	equ	0xFFD
 12841                           pclatu	equ	0xFFB
 12842                           pclath	equ	0xFFA
 12843                           tblptru	equ	0xFF8
 12844                           tblptrh	equ	0xFF7
 12845                           tblptrl	equ	0xFF6
 12846                           tablat	equ	0xFF5
 12847                           prodh	equ	0xFF4
 12848                           prodl	equ	0xFF3
 12849                           intcon	equ	0xFF2
 12850                           intcon2	equ	0xFF1
 12851                           postinc0	equ	0xFEE
 12852                           fsr0h	equ	0xFEA
 12853                           fsr0l	equ	0xFE9
 12854                           wreg	equ	0xFE8
 12855                           fsr1h	equ	0xFE2
 12856                           fsr1l	equ	0xFE1
 12857                           indf2	equ	0xFDF
 12858                           postinc2	equ	0xFDE
 12859                           postdec2	equ	0xFDD
 12860                           plusw2	equ	0xFDB
 12861                           fsr2h	equ	0xFDA
 12862                           fsr2l	equ	0xFD9
 12863                           status	equ	0xFD8
 12864                           
 12865 ;; *************** function _TMR0_ISR *****************
 12866 ;; Defined at:
 12867 ;;		line 81 in file "mcc_generated_files/tmr0.c"
 12868 ;; Parameters:    Size  Location     Type
 12869 ;;		None
 12870 ;; Auto vars:     Size  Location     Type
 12871 ;;  x               2    4[COMRAM] int 
 12872 ;; Return value:  Size  Location     Type
 12873 ;;                  1    wreg      void 
 12874 ;; Registers used:
 12875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12876 ;; Tracked objects:
 12877 ;;		On entry : 0/0
 12878 ;;		On exit  : 0/0
 12879 ;;		Unchanged: 0/0
 12880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12881 ;;      Params:         0       0       0       0       0       0       0
 12882 ;;      Locals:         2       0       0       0       0       0       0
 12883 ;;      Temps:          0       0       0       0       0       0       0
 12884 ;;      Totals:         2       0       0       0       0       0       0
 12885 ;;Total ram usage:        2 bytes
 12886 ;; Hardware stack levels used:    1
 12887 ;; Hardware stack levels required when called:    1
 12888 ;; This function calls:
 12889 ;;		_ReadButtonState
 12890 ;;		_TMR0_CallBack
 12891 ;; This function is called by:
 12892 ;;		_INTERRUPT_InterruptManager
 12893 ;; This function uses a non-reentrant model
 12894 ;;
 12895                           
 12896                           	psect	text64
 12897  002A0A                     __ptext64:
 12898                           	opt stack 0
 12899  002A0A                     _TMR0_ISR:
 12900                           	opt stack 22
 12901                           
 12902                           ;tmr0.c: 82: static volatile uint16_t CountCallBack = 0;
 12903                           ;tmr0.c: 85: TMR0H = timer0ReloadVal16bit >> 8;
 12904                           
 12905                           ;incstack = 0
 12906  002A0A  5043               	movf	_timer0ReloadVal16bit+1,w,c	;volatile
 12907  002A0C  6ED7               	movwf	4055,c	;volatile
 12908                           
 12909                           ;tmr0.c: 86: TMR0L = (uint8_t) timer0ReloadVal16bit;
 12910  002A0E  C042  FFD6         	movff	_timer0ReloadVal16bit,4054	;volatile
 12911                           
 12912                           ;tmr0.c: 88: for (int x = 0; x < 8; x++) {
 12913  002A12  0E00               	movlw	0
 12914  002A14  6E06               	movwf	TMR0_ISR@x+1,c
 12915  002A16  0E00               	movlw	0
 12916  002A18  6E05               	movwf	TMR0_ISR@x,c
 12917  002A1A                     i2l5278:
 12918  002A1A  BE06               	btfsc	TMR0_ISR@x+1,7,c
 12919  002A1C  D006               	goto	i2l5282
 12920  002A1E  5006               	movf	TMR0_ISR@x+1,w,c
 12921  002A20  E10D               	bnz	i2l5288
 12922  002A22  0E08               	movlw	8
 12923  002A24  5C05               	subwf	TMR0_ISR@x,w,c
 12924  002A26  B0D8               	btfsc	status,0,c
 12925  002A28  D009               	goto	i2l5288
 12926  002A2A                     i2l5282:
 12927                           
 12928                           ;tmr0.c: 89: ReadButtonState(x);
 12929  002A2A  C005  F001         	movff	TMR0_ISR@x,ReadButtonState@btnnum
 12930  002A2E  C006  F002         	movff	TMR0_ISR@x+1,ReadButtonState@btnnum+1
 12931  002A32  EC1B  F00E         	call	_ReadButtonState	;wreg free
 12932  002A36  4A05               	infsnz	TMR0_ISR@x,f,c
 12933  002A38  2A06               	incf	TMR0_ISR@x+1,f,c
 12934  002A3A  D7EF               	goto	i2l5278
 12935  002A3C                     i2l5288:
 12936                           
 12937                           ;tmr0.c: 90: }
 12938                           ;tmr0.c: 91: time++;
 12939  002A3C  0100               	movlb	0	; () banked
 12940  002A3E  4BDD               	infsnz	_time& (0+255),f,b	;volatile
 12941  002A40  2BDE               	incf	(_time+1)& (0+255),f,b	;volatile
 12942                           
 12943                           ; BSR set to: 0
 12944                           ;tmr0.c: 93: if (++CountCallBack >= 5) {
 12945  002A42  0100               	movlb	0	; () banked
 12946  002A44  4BC1               	infsnz	TMR0_ISR@CountCallBack& (0+255),f,b	;volatile
 12947  002A46  2BC2               	incf	(TMR0_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 12948  002A48  0100               	movlb	0	; () banked
 12949  002A4A  51C2               	movf	(TMR0_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 12950  002A4C  E105               	bnz	i2u544_40
 12951  002A4E  0E05               	movlw	5
 12952  002A50  0100               	movlb	0	; () banked
 12953  002A52  5DC1               	subwf	TMR0_ISR@CountCallBack& (0+255),w,b	;volatile
 12954  002A54  A0D8               	btfss	status,0,c
 12955  002A56  D007               	goto	i2l5296
 12956  002A58                     i2u544_40:
 12957                           
 12958                           ; BSR set to: 0
 12959                           ;tmr0.c: 95: TMR0_CallBack();
 12960  002A58  EC1D  F018         	call	_TMR0_CallBack	;wreg free
 12961                           
 12962                           ;tmr0.c: 98: CountCallBack = 0;
 12963  002A5C  0E00               	movlw	0
 12964  002A5E  0100               	movlb	0	; () banked
 12965  002A60  6FC2               	movwf	(TMR0_ISR@CountCallBack+1)& (0+255),b	;volatile
 12966  002A62  0E00               	movlw	0
 12967  002A64  6FC1               	movwf	TMR0_ISR@CountCallBack& (0+255),b	;volatile
 12968  002A66                     i2l5296:
 12969                           
 12970                           ; BSR set to: 0
 12971                           ;tmr0.c: 99: }
 12972                           ;tmr0.c: 101: INTCONbits.TMR0IF = 0;
 12973  002A66  94F2               	bcf	intcon,2,c	;volatile
 12974                           
 12975                           ; BSR set to: 0
 12976  002A68  0012               	return		;funcret
 12977  002A6A                     __end_of_TMR0_ISR:
 12978                           	opt stack 0
 12979                           tosu	equ	0xFFF
 12980                           tosh	equ	0xFFE
 12981                           tosl	equ	0xFFD
 12982                           pclatu	equ	0xFFB
 12983                           pclath	equ	0xFFA
 12984                           tblptru	equ	0xFF8
 12985                           tblptrh	equ	0xFF7
 12986                           tblptrl	equ	0xFF6
 12987                           tablat	equ	0xFF5
 12988                           prodh	equ	0xFF4
 12989                           prodl	equ	0xFF3
 12990                           intcon	equ	0xFF2
 12991                           intcon2	equ	0xFF1
 12992                           postinc0	equ	0xFEE
 12993                           fsr0h	equ	0xFEA
 12994                           fsr0l	equ	0xFE9
 12995                           wreg	equ	0xFE8
 12996                           fsr1h	equ	0xFE2
 12997                           fsr1l	equ	0xFE1
 12998                           indf2	equ	0xFDF
 12999                           postinc2	equ	0xFDE
 13000                           postdec2	equ	0xFDD
 13001                           plusw2	equ	0xFDB
 13002                           fsr2h	equ	0xFDA
 13003                           fsr2l	equ	0xFD9
 13004                           status	equ	0xFD8
 13005                           
 13006 ;; *************** function _TMR0_CallBack *****************
 13007 ;; Defined at:
 13008 ;;		line 104 in file "mcc_generated_files/tmr0.c"
 13009 ;; Parameters:    Size  Location     Type
 13010 ;;		None
 13011 ;; Auto vars:     Size  Location     Type
 13012 ;;		None
 13013 ;; Return value:  Size  Location     Type
 13014 ;;                  1    wreg      void 
 13015 ;; Registers used:
 13016 ;;		None
 13017 ;; Tracked objects:
 13018 ;;		On entry : 0/0
 13019 ;;		On exit  : 0/0
 13020 ;;		Unchanged: 0/0
 13021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13022 ;;      Params:         0       0       0       0       0       0       0
 13023 ;;      Locals:         0       0       0       0       0       0       0
 13024 ;;      Temps:          0       0       0       0       0       0       0
 13025 ;;      Totals:         0       0       0       0       0       0       0
 13026 ;;Total ram usage:        0 bytes
 13027 ;; Hardware stack levels used:    1
 13028 ;; This function calls:
 13029 ;;		Nothing
 13030 ;; This function is called by:
 13031 ;;		_TMR0_ISR
 13032 ;; This function uses a non-reentrant model
 13033 ;;
 13034                           
 13035                           	psect	text65
 13036  00303A                     __ptext65:
 13037                           	opt stack 0
 13038  00303A                     _TMR0_CallBack:
 13039                           	opt stack 22
 13040                           
 13041                           ; BSR set to: 0
 13042                           ;incstack = 0
 13043                           ;tmr0.c: 105: do { LATA3 = ~LATA3; } while(0);
 13044  00303A  B689               	btfsc	3977,3,c	;volatile
 13045  00303C  D002               	goto	i2u399_40
 13046  00303E  8689               	bsf	3977,3,c	;volatile
 13047  003040  0012               	return	
 13048  003042                     i2u399_40:
 13049  003042  9689               	bcf	3977,3,c	;volatile
 13050  003044  0012               	return	
 13051  003046                     __end_of_TMR0_CallBack:
 13052                           	opt stack 0
 13053                           tosu	equ	0xFFF
 13054                           tosh	equ	0xFFE
 13055                           tosl	equ	0xFFD
 13056                           pclatu	equ	0xFFB
 13057                           pclath	equ	0xFFA
 13058                           tblptru	equ	0xFF8
 13059                           tblptrh	equ	0xFF7
 13060                           tblptrl	equ	0xFF6
 13061                           tablat	equ	0xFF5
 13062                           prodh	equ	0xFF4
 13063                           prodl	equ	0xFF3
 13064                           intcon	equ	0xFF2
 13065                           intcon2	equ	0xFF1
 13066                           postinc0	equ	0xFEE
 13067                           fsr0h	equ	0xFEA
 13068                           fsr0l	equ	0xFE9
 13069                           wreg	equ	0xFE8
 13070                           fsr1h	equ	0xFE2
 13071                           fsr1l	equ	0xFE1
 13072                           indf2	equ	0xFDF
 13073                           postinc2	equ	0xFDE
 13074                           postdec2	equ	0xFDD
 13075                           plusw2	equ	0xFDB
 13076                           fsr2h	equ	0xFDA
 13077                           fsr2l	equ	0xFD9
 13078                           status	equ	0xFD8
 13079                           
 13080 ;; *************** function _ReadButtonState *****************
 13081 ;; Defined at:
 13082 ;;		line 154 in file "IO.c"
 13083 ;; Parameters:    Size  Location     Type
 13084 ;;  btnnum          2    0[COMRAM] int 
 13085 ;; Auto vars:     Size  Location     Type
 13086 ;;		None
 13087 ;; Return value:  Size  Location     Type
 13088 ;;                  1    wreg      void 
 13089 ;; Registers used:
 13090 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13091 ;; Tracked objects:
 13092 ;;		On entry : 0/0
 13093 ;;		On exit  : 0/0
 13094 ;;		Unchanged: 0/0
 13095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13096 ;;      Params:         2       0       0       0       0       0       0
 13097 ;;      Locals:         0       0       0       0       0       0       0
 13098 ;;      Temps:          2       0       0       0       0       0       0
 13099 ;;      Totals:         4       0       0       0       0       0       0
 13100 ;;Total ram usage:        4 bytes
 13101 ;; Hardware stack levels used:    1
 13102 ;; This function calls:
 13103 ;;		Nothing
 13104 ;; This function is called by:
 13105 ;;		_TMR0_ISR
 13106 ;; This function uses a non-reentrant model
 13107 ;;
 13108                           
 13109                           	psect	text66
 13110  001C36                     __ptext66:
 13111                           	opt stack 0
 13112  001C36                     _ReadButtonState:
 13113                           	opt stack 22
 13114                           
 13115                           ;IO.c: 155: switch (btnnum) {
 13116                           
 13117                           ;incstack = 0
 13118  001C36  D068               	goto	i2l4644
 13119  001C38                     i2l4626:
 13120                           
 13121                           ;IO.c: 157: butnarray[btnnum] = PORTDbits.RD5;
 13122  001C38  0EB0               	movlw	low _butnarray
 13123  001C3A  2401               	addwf	ReadButtonState@btnnum,w,c
 13124  001C3C  6ED9               	movwf	fsr2l,c
 13125  001C3E  0E00               	movlw	high _butnarray
 13126  001C40  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13127  001C42  6EDA               	movwf	fsr2h,c
 13128  001C44  AA83               	btfss	3971,5,c	;volatile
 13129  001C46  D002               	goto	i2u391_40
 13130  001C48  0E01               	movlw	1
 13131  001C4A  D001               	goto	i2u391_46
 13132  001C4C                     i2u391_40:
 13133  001C4C  0E00               	movlw	0
 13134  001C4E                     i2u391_46:
 13135  001C4E  6EDF               	movwf	indf2,c
 13136                           
 13137                           ;IO.c: 158: break;
 13138  001C50  0012               	return	
 13139  001C52                     i2l4628:
 13140                           
 13141                           ;IO.c: 160: butnarray[btnnum] = PORTBbits.RB0;
 13142  001C52  0EB0               	movlw	low _butnarray
 13143  001C54  2401               	addwf	ReadButtonState@btnnum,w,c
 13144  001C56  6ED9               	movwf	fsr2l,c
 13145  001C58  0E00               	movlw	high _butnarray
 13146  001C5A  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13147  001C5C  6EDA               	movwf	fsr2h,c
 13148  001C5E  A081               	btfss	3969,0,c	;volatile
 13149  001C60  D002               	goto	i2u392_40
 13150  001C62  0E01               	movlw	1
 13151  001C64  D001               	goto	i2u392_46
 13152  001C66                     i2u392_40:
 13153  001C66  0E00               	movlw	0
 13154  001C68                     i2u392_46:
 13155  001C68  6EDF               	movwf	indf2,c
 13156                           
 13157                           ;IO.c: 161: break;
 13158  001C6A  0012               	return	
 13159  001C6C                     i2l4630:
 13160                           
 13161                           ;IO.c: 163: butnarray[btnnum] = PORTBbits.RB1;
 13162  001C6C  0EB0               	movlw	low _butnarray
 13163  001C6E  2401               	addwf	ReadButtonState@btnnum,w,c
 13164  001C70  6ED9               	movwf	fsr2l,c
 13165  001C72  0E00               	movlw	high _butnarray
 13166  001C74  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13167  001C76  6EDA               	movwf	fsr2h,c
 13168  001C78  A281               	btfss	3969,1,c	;volatile
 13169  001C7A  D002               	goto	i2u393_40
 13170  001C7C  0E01               	movlw	1
 13171  001C7E  D001               	goto	i2u393_46
 13172  001C80                     i2u393_40:
 13173  001C80  0E00               	movlw	0
 13174  001C82                     i2u393_46:
 13175  001C82  6EDF               	movwf	indf2,c
 13176                           
 13177                           ;IO.c: 164: break;
 13178  001C84  0012               	return	
 13179  001C86                     i2l4632:
 13180                           
 13181                           ;IO.c: 166: butnarray[btnnum] = PORTBbits.RB2;
 13182  001C86  0EB0               	movlw	low _butnarray
 13183  001C88  2401               	addwf	ReadButtonState@btnnum,w,c
 13184  001C8A  6ED9               	movwf	fsr2l,c
 13185  001C8C  0E00               	movlw	high _butnarray
 13186  001C8E  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13187  001C90  6EDA               	movwf	fsr2h,c
 13188  001C92  A481               	btfss	3969,2,c	;volatile
 13189  001C94  D002               	goto	i2u394_40
 13190  001C96  0E01               	movlw	1
 13191  001C98  D001               	goto	i2u394_46
 13192  001C9A                     i2u394_40:
 13193  001C9A  0E00               	movlw	0
 13194  001C9C                     i2u394_46:
 13195  001C9C  6EDF               	movwf	indf2,c
 13196                           
 13197                           ;IO.c: 167: break;
 13198  001C9E  0012               	return	
 13199  001CA0                     i2l4634:
 13200                           
 13201                           ;IO.c: 169: butnarray[btnnum] = PORTBbits.RB4;
 13202  001CA0  0EB0               	movlw	low _butnarray
 13203  001CA2  2401               	addwf	ReadButtonState@btnnum,w,c
 13204  001CA4  6ED9               	movwf	fsr2l,c
 13205  001CA6  0E00               	movlw	high _butnarray
 13206  001CA8  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13207  001CAA  6EDA               	movwf	fsr2h,c
 13208  001CAC  A881               	btfss	3969,4,c	;volatile
 13209  001CAE  D002               	goto	i2u395_40
 13210  001CB0  0E01               	movlw	1
 13211  001CB2  D001               	goto	i2u395_46
 13212  001CB4                     i2u395_40:
 13213  001CB4  0E00               	movlw	0
 13214  001CB6                     i2u395_46:
 13215  001CB6  6EDF               	movwf	indf2,c
 13216                           
 13217                           ;IO.c: 170: break;
 13218  001CB8  0012               	return	
 13219  001CBA                     i2l4636:
 13220                           
 13221                           ;IO.c: 172: butnarray[btnnum] = PORTAbits.RA0;
 13222  001CBA  0EB0               	movlw	low _butnarray
 13223  001CBC  2401               	addwf	ReadButtonState@btnnum,w,c
 13224  001CBE  6ED9               	movwf	fsr2l,c
 13225  001CC0  0E00               	movlw	high _butnarray
 13226  001CC2  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13227  001CC4  6EDA               	movwf	fsr2h,c
 13228  001CC6  A080               	btfss	3968,0,c	;volatile
 13229  001CC8  D002               	goto	i2u396_40
 13230  001CCA  0E01               	movlw	1
 13231  001CCC  D001               	goto	i2u396_46
 13232  001CCE                     i2u396_40:
 13233  001CCE  0E00               	movlw	0
 13234  001CD0                     i2u396_46:
 13235  001CD0  6EDF               	movwf	indf2,c
 13236                           
 13237                           ;IO.c: 173: break;
 13238  001CD2  0012               	return	
 13239  001CD4                     i2l4638:
 13240                           
 13241                           ;IO.c: 175: butnarray[btnnum] = PORTAbits.RA1;
 13242  001CD4  0EB0               	movlw	low _butnarray
 13243  001CD6  2401               	addwf	ReadButtonState@btnnum,w,c
 13244  001CD8  6ED9               	movwf	fsr2l,c
 13245  001CDA  0E00               	movlw	high _butnarray
 13246  001CDC  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13247  001CDE  6EDA               	movwf	fsr2h,c
 13248  001CE0  A280               	btfss	3968,1,c	;volatile
 13249  001CE2  D002               	goto	i2u397_40
 13250  001CE4  0E01               	movlw	1
 13251  001CE6  D001               	goto	i2u397_46
 13252  001CE8                     i2u397_40:
 13253  001CE8  0E00               	movlw	0
 13254  001CEA                     i2u397_46:
 13255  001CEA  6EDF               	movwf	indf2,c
 13256                           
 13257                           ;IO.c: 176: break;
 13258  001CEC  0012               	return	
 13259  001CEE                     i2l4640:
 13260                           
 13261                           ;IO.c: 178: butnarray[btnnum] = PORTAbits.RA2;
 13262  001CEE  0EB0               	movlw	low _butnarray
 13263  001CF0  2401               	addwf	ReadButtonState@btnnum,w,c
 13264  001CF2  6ED9               	movwf	fsr2l,c
 13265  001CF4  0E00               	movlw	high _butnarray
 13266  001CF6  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13267  001CF8  6EDA               	movwf	fsr2h,c
 13268  001CFA  A480               	btfss	3968,2,c	;volatile
 13269  001CFC  D002               	goto	i2u398_40
 13270  001CFE  0E01               	movlw	1
 13271  001D00  D001               	goto	i2u398_46
 13272  001D02                     i2u398_40:
 13273  001D02  0E00               	movlw	0
 13274  001D04                     i2u398_46:
 13275  001D04  6EDF               	movwf	indf2,c
 13276                           
 13277                           ;IO.c: 181: }
 13278                           
 13279                           ;IO.c: 179: break;
 13280  001D06  0012               	return	
 13281  001D08                     i2l4644:
 13282  001D08  C001  F003         	movff	ReadButtonState@btnnum,??_ReadButtonState
 13283  001D0C  C002  F004         	movff	ReadButtonState@btnnum+1,??_ReadButtonState+1
 13284                           
 13285                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13286                           ; Switch size 1, requested type "space"
 13287                           ; Number of cases is 1, Range of values is 0 to 0
 13288                           ; switch strategies available:
 13289                           ; Name         Instructions Cycles
 13290                           ; simple_byte            4     3 (average)
 13291                           ;	Chosen strategy is simple_byte
 13292  001D10  5004               	movf	??_ReadButtonState+1,w,c
 13293  001D12  0A00               	xorlw	0	; case 0
 13294  001D14  A4D8               	btfss	status,2,c
 13295  001D16  0012               	return	
 13296                           
 13297                           ; Switch size 1, requested type "space"
 13298                           ; Number of cases is 8, Range of values is 0 to 7
 13299                           ; switch strategies available:
 13300                           ; Name         Instructions Cycles
 13301                           ; simple_byte           25    13 (average)
 13302                           ;	Chosen strategy is simple_byte
 13303  001D18  5003               	movf	??_ReadButtonState,w,c
 13304  001D1A  0A00               	xorlw	0	; case 0
 13305  001D1C  B4D8               	btfsc	status,2,c
 13306  001D1E  D78C               	goto	i2l4626
 13307  001D20  0A01               	xorlw	1	; case 1
 13308  001D22  B4D8               	btfsc	status,2,c
 13309  001D24  D796               	goto	i2l4628
 13310  001D26  0A03               	xorlw	3	; case 2
 13311  001D28  B4D8               	btfsc	status,2,c
 13312  001D2A  D7A0               	goto	i2l4630
 13313  001D2C  0A01               	xorlw	1	; case 3
 13314  001D2E  B4D8               	btfsc	status,2,c
 13315  001D30  D7AA               	goto	i2l4632
 13316  001D32  0A07               	xorlw	7	; case 4
 13317  001D34  B4D8               	btfsc	status,2,c
 13318  001D36  D7B4               	goto	i2l4634
 13319  001D38  0A01               	xorlw	1	; case 5
 13320  001D3A  B4D8               	btfsc	status,2,c
 13321  001D3C  D7BE               	goto	i2l4636
 13322  001D3E  0A03               	xorlw	3	; case 6
 13323  001D40  B4D8               	btfsc	status,2,c
 13324  001D42  D7C8               	goto	i2l4638
 13325  001D44  0A01               	xorlw	1	; case 7
 13326  001D46  A4D8               	btfss	status,2,c
 13327  001D48  0012               	return	
 13328  001D4A  D7D1               	goto	i2l4640
 13329  001D4C                     __end_of_ReadButtonState:
 13330                           	opt stack 0
 13331                           tosu	equ	0xFFF
 13332                           tosh	equ	0xFFE
 13333                           tosl	equ	0xFFD
 13334                           pclatu	equ	0xFFB
 13335                           pclath	equ	0xFFA
 13336                           tblptru	equ	0xFF8
 13337                           tblptrh	equ	0xFF7
 13338                           tblptrl	equ	0xFF6
 13339                           tablat	equ	0xFF5
 13340                           prodh	equ	0xFF4
 13341                           prodl	equ	0xFF3
 13342                           intcon	equ	0xFF2
 13343                           intcon2	equ	0xFF1
 13344                           postinc0	equ	0xFEE
 13345                           fsr0h	equ	0xFEA
 13346                           fsr0l	equ	0xFE9
 13347                           wreg	equ	0xFE8
 13348                           fsr1h	equ	0xFE2
 13349                           fsr1l	equ	0xFE1
 13350                           indf2	equ	0xFDF
 13351                           postinc2	equ	0xFDE
 13352                           postdec2	equ	0xFDD
 13353                           plusw2	equ	0xFDB
 13354                           fsr2h	equ	0xFDA
 13355                           fsr2l	equ	0xFD9
 13356                           status	equ	0xFD8
 13357                           
 13358 ;; *************** function _I2C1_ISR *****************
 13359 ;; Defined at:
 13360 ;;		line 186 in file "mcc_generated_files/i2c1.c"
 13361 ;; Parameters:    Size  Location     Type
 13362 ;;		None
 13363 ;; Auto vars:     Size  Location     Type
 13364 ;;		None
 13365 ;; Return value:  Size  Location     Type
 13366 ;;                  1    wreg      void 
 13367 ;; Registers used:
 13368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13369 ;; Tracked objects:
 13370 ;;		On entry : 0/0
 13371 ;;		On exit  : 0/0
 13372 ;;		Unchanged: 0/0
 13373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13374 ;;      Params:         0       0       0       0       0       0       0
 13375 ;;      Locals:         0       0       0       0       0       0       0
 13376 ;;      Temps:          2       0       0       0       0       0       0
 13377 ;;      Totals:         2       0       0       0       0       0       0
 13378 ;;Total ram usage:        2 bytes
 13379 ;; Hardware stack levels used:    1
 13380 ;; Hardware stack levels required when called:    1
 13381 ;; This function calls:
 13382 ;;		_I2C1_FunctionComplete
 13383 ;;		_I2C1_Stop
 13384 ;; This function is called by:
 13385 ;;		_INTERRUPT_InterruptManager
 13386 ;; This function uses a non-reentrant model
 13387 ;;
 13388                           
 13389                           	psect	text67
 13390  000E38                     __ptext67:
 13391                           	opt stack 0
 13392  000E38                     _I2C1_ISR:
 13393                           	opt stack 22
 13394                           
 13395                           ;i2c1.c: 189: static uint8_t *pi2c_buf_ptr;
 13396                           ;i2c1.c: 190: static uint16_t i2c_address = 0;
 13397                           ;i2c1.c: 191: static uint8_t i2c_bytes_left = 0;
 13398                           ;i2c1.c: 192: static uint8_t i2c_10bit_address_restart = 0;
 13399                           ;i2c1.c: 194: PIR1bits.SSP1IF = 0;
 13400                           
 13401                           ;incstack = 0
 13402  000E38  969E               	bcf	3998,3,c	;volatile
 13403                           
 13404                           ;i2c1.c: 198: if(SSP1CON1bits.WCOL)
 13405  000E3A  AEC6               	btfss	4038,7,c	;volatile
 13406  000E3C  D114               	goto	i2l7162
 13407                           
 13408                           ;i2c1.c: 199: {
 13409                           ;i2c1.c: 201: SSP1CON1bits.WCOL = 0;
 13410  000E3E  9EC6               	bcf	4038,7,c	;volatile
 13411                           
 13412                           ;i2c1.c: 202: i2c1_state = S_MASTER_IDLE;
 13413  000E40  0E00               	movlw	0
 13414  000E42  6E38               	movwf	_i2c1_state,c
 13415                           
 13416                           ;i2c1.c: 203: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
 13417  000E44  0100               	movlb	0	; () banked
 13418  000E46  EE20 F003          	lfsr	2,3
 13419  000E4A  51D1               	movf	_p_i2c1_current& (0+255),w,b
 13420  000E4C  26D9               	addwf	fsr2l,f,c
 13421  000E4E  51D2               	movf	(_p_i2c1_current+1)& (0+255),w,b
 13422  000E50  22DA               	addwfc	fsr2h,f,c
 13423  000E52  CFDE F004          	movff	postinc2,??_I2C1_ISR
 13424  000E56  CFDD F005          	movff	postdec2,??_I2C1_ISR+1
 13425  000E5A  C004  FFD9         	movff	??_I2C1_ISR,fsr2l
 13426  000E5E  C005  FFDA         	movff	??_I2C1_ISR+1,fsr2h
 13427  000E62  0E01               	movlw	1
 13428  000E64  6EDF               	movwf	indf2,c
 13429                           
 13430                           ; BSR set to: 0
 13431                           ;i2c1.c: 206: p_i2c1_current = (0);
 13432  000E66  0E00               	movlw	0
 13433  000E68  0100               	movlb	0	; () banked
 13434  000E6A  6FD1               	movwf	_p_i2c1_current& (0+255),b
 13435  000E6C  0E00               	movlw	0
 13436  000E6E  0100               	movlb	0	; () banked
 13437  000E70  6FD2               	movwf	(_p_i2c1_current+1)& (0+255),b
 13438                           
 13439                           ; BSR set to: 0
 13440                           ;i2c1.c: 208: return;
 13441  000E72  0012               	return	
 13442  000E74                     i2l60:
 13443                           
 13444                           ;i2c1.c: 216: if(i2c1_object.trStatus.s.empty != 1)
 13445  000E74  0100               	movlb	0	; () banked
 13446  000E76  B3BC               	btfsc	(_i2c1_object+4)& (0+255),1,b
 13447  000E78  0012               	return	
 13448                           
 13449                           ; BSR set to: 0
 13450                           ;i2c1.c: 217: {
 13451                           ;i2c1.c: 219: p_i2c1_current = i2c1_object.pTrHead;
 13452  000E7A  C0BA  F0D1         	movff	_i2c1_object+2,_p_i2c1_current
 13453  000E7E  C0BB  F0D2         	movff	_i2c1_object+3,_p_i2c1_current+1
 13454                           
 13455                           ; BSR set to: 0
 13456                           ;i2c1.c: 220: i2c1_trb_count = i2c1_object.pTrHead->count;
 13457  000E82  C0BA  FFD9         	movff	_i2c1_object+2,fsr2l
 13458  000E86  C0BB  FFDA         	movff	_i2c1_object+3,fsr2h
 13459  000E8A  50DF               	movf	indf2,w,c
 13460  000E8C  6E39               	movwf	_i2c1_trb_count,c
 13461                           
 13462                           ; BSR set to: 0
 13463                           ;i2c1.c: 221: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
 13464  000E8E  0100               	movlb	0	; () banked
 13465  000E90  EE20 F001          	lfsr	2,1
 13466  000E94  51BA               	movf	(_i2c1_object+2)& (0+255),w,b
 13467  000E96  26D9               	addwf	fsr2l,f,c
 13468  000E98  51BB               	movf	(_i2c1_object+3)& (0+255),w,b
 13469  000E9A  22DA               	addwfc	fsr2h,f,c
 13470  000E9C  CFDE F0D3          	movff	postinc2,_p_i2c1_trb_current
 13471  000EA0  CFDD F0D4          	movff	postdec2,_p_i2c1_trb_current+1
 13472                           
 13473                           ; BSR set to: 0
 13474                           ;i2c1.c: 223: i2c1_object.pTrHead++;
 13475  000EA4  0E05               	movlw	5
 13476  000EA6  0100               	movlb	0	; () banked
 13477  000EA8  27BA               	addwf	(_i2c1_object+2)& (0+255),f,b
 13478  000EAA  0E00               	movlw	0
 13479  000EAC  23BB               	addwfc	(_i2c1_object+3)& (0+255),f,b
 13480                           
 13481                           ; BSR set to: 0
 13482                           ;i2c1.c: 226: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
 13483  000EAE  0EF2               	movlw	low (_i2c1_tr_queue+5)
 13484  000EB0  0100               	movlb	0	; () banked
 13485  000EB2  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 13486  000EB4  E10B               	bnz	i2l7054
 13487  000EB6  0E00               	movlw	high (_i2c1_tr_queue+5)
 13488  000EB8  0100               	movlb	0	; () banked
 13489  000EBA  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 13490  000EBC  A4D8               	btfss	status,2,c
 13491  000EBE  D006               	goto	i2l7054
 13492                           
 13493                           ; BSR set to: 0
 13494                           ;i2c1.c: 227: {
 13495                           ;i2c1.c: 229: i2c1_object.pTrHead = i2c1_tr_queue;
 13496  000EC0  0EED               	movlw	low _i2c1_tr_queue
 13497  000EC2  0100               	movlb	0	; () banked
 13498  000EC4  6FBA               	movwf	(_i2c1_object+2)& (0+255),b
 13499  000EC6  0E00               	movlw	high _i2c1_tr_queue
 13500  000EC8  0100               	movlb	0	; () banked
 13501  000ECA  6FBB               	movwf	(_i2c1_object+3)& (0+255),b
 13502  000ECC                     i2l7054:
 13503                           
 13504                           ; BSR set to: 0
 13505                           ;i2c1.c: 230: }
 13506                           ;i2c1.c: 234: i2c1_object.trStatus.s.full = 0;
 13507  000ECC  0100               	movlb	0	; () banked
 13508  000ECE  91BC               	bcf	(_i2c1_object+4)& (0+255),0,b
 13509                           
 13510                           ;i2c1.c: 237: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
 13511  000ED0  0100               	movlb	0	; () banked
 13512  000ED2  51B8               	movf	_i2c1_object& (0+255),w,b
 13513  000ED4  0100               	movlb	0	; () banked
 13514  000ED6  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 13515  000ED8  E108               	bnz	i2l63
 13516  000EDA  0100               	movlb	0	; () banked
 13517  000EDC  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 13518  000EDE  0100               	movlb	0	; () banked
 13519  000EE0  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 13520  000EE2  A4D8               	btfss	status,2,c
 13521  000EE4  D002               	goto	i2l63
 13522                           
 13523                           ; BSR set to: 0
 13524                           ;i2c1.c: 238: {
 13525                           ;i2c1.c: 240: i2c1_object.trStatus.s.empty = 1;
 13526  000EE6  0100               	movlb	0	; () banked
 13527  000EE8  83BC               	bsf	(_i2c1_object+4)& (0+255),1,b
 13528  000EEA                     i2l63:
 13529                           
 13530                           ; BSR set to: 0
 13531                           ;i2c1.c: 241: }
 13532                           ;i2c1.c: 244: SSP1CON2bits.SEN = 1;
 13533  000EEA  80C5               	bsf	4037,0,c	;volatile
 13534                           
 13535                           ; BSR set to: 0
 13536                           ;i2c1.c: 247: i2c1_state = S_MASTER_SEND_ADDR;
 13537  000EEC  0E02               	movlw	2
 13538  000EEE  6E38               	movwf	_i2c1_state,c
 13539                           
 13540                           ; BSR set to: 0
 13541                           ;i2c1.c: 248: }
 13542                           ;i2c1.c: 250: break;
 13543  000EF0  0012               	return	
 13544  000EF2                     i2l65:
 13545                           
 13546                           ;i2c1.c: 257: SSP1CON2bits.RSEN = 1;
 13547  000EF2  82C5               	bsf	4037,1,c	;volatile
 13548                           
 13549                           ;i2c1.c: 260: i2c1_state = S_MASTER_SEND_ADDR;
 13550  000EF4  0E02               	movlw	2
 13551  000EF6  6E38               	movwf	_i2c1_state,c
 13552                           
 13553                           ;i2c1.c: 262: break;
 13554  000EF8  0012               	return	
 13555  000EFA                     i2l66:
 13556                           
 13557                           ;i2c1.c: 266: if(SSP1CON2bits.ACKSTAT)
 13558  000EFA  ACC5               	btfss	4037,6,c	;volatile
 13559  000EFC  D006               	goto	i2l7066
 13560                           
 13561                           ;i2c1.c: 267: {
 13562                           ;i2c1.c: 268: i2c1_object.i2cErrors++;
 13563  000EFE  0100               	movlb	0	; () banked
 13564  000F00  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 13565                           
 13566                           ; BSR set to: 0
 13567                           ;i2c1.c: 269: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 13568  000F02  0E04               	movlw	4
 13569  000F04  EC1E  F016         	call	_I2C1_Stop
 13570                           
 13571                           ;i2c1.c: 270: }
 13572  000F08  0012               	return	
 13573  000F0A                     i2l7066:
 13574                           
 13575                           ;i2c1.c: 271: else
 13576                           ;i2c1.c: 272: {
 13577                           ;i2c1.c: 274: SSP1BUF = (i2c_address >> 1) & 0x00FF;
 13578  000F0A  90D8               	bcf	status,0,c
 13579  000F0C  3041               	rrcf	I2C1_ISR@i2c_address+1,w,c
 13580  000F0E  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
 13581  000F10  3040               	rrcf	I2C1_ISR@i2c_address,w,c
 13582  000F12  6E04               	movwf	??_I2C1_ISR& (0+255),c
 13583  000F14  5004               	movf	??_I2C1_ISR,w,c
 13584  000F16  6EC9               	movwf	4041,c	;volatile
 13585                           
 13586                           ;i2c1.c: 277: if(i2c_address & 0x01)
 13587  000F18  A040               	btfss	I2C1_ISR@i2c_address,0,c
 13588  000F1A  D003               	goto	i2l7072
 13589                           
 13590                           ;i2c1.c: 278: {
 13591                           ;i2c1.c: 281: i2c1_state = S_MASTER_10BIT_RESTART;
 13592  000F1C  0E0B               	movlw	11
 13593  000F1E  6E38               	movwf	_i2c1_state,c
 13594                           
 13595                           ;i2c1.c: 282: }
 13596  000F20  0012               	return	
 13597  000F22                     i2l7072:
 13598                           
 13599                           ;i2c1.c: 283: else
 13600                           ;i2c1.c: 284: {
 13601                           ;i2c1.c: 286: i2c1_state = S_MASTER_SEND_DATA;
 13602  000F22  0E03               	movlw	3
 13603  000F24  6E38               	movwf	_i2c1_state,c
 13604                           
 13605                           ;i2c1.c: 287: }
 13606                           ;i2c1.c: 288: }
 13607                           ;i2c1.c: 290: break;
 13608  000F26  0012               	return	
 13609  000F28                     i2l71:
 13610                           
 13611                           ;i2c1.c: 294: if(SSP1CON2bits.ACKSTAT)
 13612  000F28  ACC5               	btfss	4037,6,c	;volatile
 13613  000F2A  D006               	goto	i2l72
 13614                           
 13615                           ;i2c1.c: 295: {
 13616                           ;i2c1.c: 296: i2c1_object.i2cErrors++;
 13617  000F2C  0100               	movlb	0	; () banked
 13618  000F2E  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 13619                           
 13620                           ; BSR set to: 0
 13621                           ;i2c1.c: 297: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 13622  000F30  0E04               	movlw	4
 13623  000F32  EC1E  F016         	call	_I2C1_Stop
 13624                           
 13625                           ;i2c1.c: 298: }
 13626  000F36  0012               	return	
 13627  000F38                     i2l72:
 13628                           
 13629                           ;i2c1.c: 299: else
 13630                           ;i2c1.c: 300: {
 13631                           ;i2c1.c: 303: SSP1CON2bits.RSEN = 1;
 13632  000F38  82C5               	bsf	4037,1,c	;volatile
 13633                           
 13634                           ;i2c1.c: 307: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 13635  000F3A  C040  F004         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
 13636  000F3E  C041  F005         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
 13637  000F42  C005  F004         	movff	??_I2C1_ISR+1,??_I2C1_ISR
 13638  000F46  6A05               	clrf	??_I2C1_ISR+1,c
 13639  000F48  0E06               	movlw	6
 13640  000F4A  1604               	andwf	??_I2C1_ISR,f,c
 13641  000F4C  0E00               	movlw	0
 13642  000F4E  1605               	andwf	??_I2C1_ISR+1,f,c
 13643  000F50  0EF0               	movlw	240
 13644  000F52  1004               	iorwf	??_I2C1_ISR,w,c
 13645  000F54  6E40               	movwf	I2C1_ISR@i2c_address,c
 13646  000F56  5005               	movf	??_I2C1_ISR+1,w,c
 13647  000F58  6E41               	movwf	I2C1_ISR@i2c_address+1,c
 13648                           
 13649                           ;i2c1.c: 310: i2c_address |= 0x0001;
 13650  000F5A  8040               	bsf	I2C1_ISR@i2c_address,0,c
 13651                           
 13652                           ;i2c1.c: 313: i2c_10bit_address_restart = 1;
 13653  000F5C  0E01               	movlw	1
 13654  000F5E  6E34               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
 13655                           
 13656                           ;i2c1.c: 316: i2c1_state = S_MASTER_SEND_ADDR;
 13657  000F60  0E02               	movlw	2
 13658  000F62  6E38               	movwf	_i2c1_state,c
 13659                           
 13660                           ;i2c1.c: 317: }
 13661                           ;i2c1.c: 319: break;
 13662  000F64  0012               	return	
 13663  000F66                     i2l7086:
 13664                           
 13665                           ;i2c1.c: 334: if(i2c_10bit_address_restart != 1)
 13666  000F66  0434               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
 13667  000F68  B4D8               	btfsc	status,2,c
 13668  000F6A  D01C               	goto	i2l76
 13669                           
 13670                           ;i2c1.c: 335: {
 13671                           ;i2c1.c: 337: i2c_address = p_i2c1_trb_current->address;
 13672  000F6C  C0D3  FFD9         	movff	_p_i2c1_trb_current,fsr2l
 13673  000F70  C0D4  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
 13674  000F74  CFDE F040          	movff	postinc2,I2C1_ISR@i2c_address
 13675  000F78  CFDD F041          	movff	postdec2,I2C1_ISR@i2c_address+1
 13676                           
 13677                           ;i2c1.c: 338: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
 13678  000F7C  0100               	movlb	0	; () banked
 13679  000F7E  EE20 F003          	lfsr	2,3
 13680  000F82  51D3               	movf	_p_i2c1_trb_current& (0+255),w,b
 13681  000F84  26D9               	addwf	fsr2l,f,c
 13682  000F86  51D4               	movf	(_p_i2c1_trb_current+1)& (0+255),w,b
 13683  000F88  22DA               	addwfc	fsr2h,f,c
 13684  000F8A  CFDE F0BF          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
 13685  000F8E  CFDD F0C0          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
 13686                           
 13687                           ; BSR set to: 0
 13688                           ;i2c1.c: 339: i2c_bytes_left = p_i2c1_trb_current->length;
 13689  000F92  0100               	movlb	0	; () banked
 13690  000F94  EE20 F002          	lfsr	2,2
 13691  000F98  51D3               	movf	_p_i2c1_trb_current& (0+255),w,b
 13692  000F9A  26D9               	addwf	fsr2l,f,c
 13693  000F9C  51D4               	movf	(_p_i2c1_trb_current+1)& (0+255),w,b
 13694  000F9E  22DA               	addwfc	fsr2h,f,c
 13695  000FA0  50DF               	movf	indf2,w,c
 13696  000FA2  6E35               	movwf	I2C1_ISR@i2c_bytes_left,c
 13697  000FA4                     i2l76:
 13698                           
 13699                           ;i2c1.c: 362: else
 13700                           ;i2c1.c: 363: {
 13701                           ;i2c1.c: 365: SSP1BUF = i2c_address;
 13702  000FA4  C040  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
 13703                           
 13704                           ;i2c1.c: 366: if(i2c_address & 0x01)
 13705  000FA8  A040               	btfss	I2C1_ISR@i2c_address,0,c
 13706  000FAA  D003               	goto	i2l7106
 13707                           
 13708                           ;i2c1.c: 367: {
 13709                           ;i2c1.c: 369: i2c1_state = S_MASTER_ACK_ADDR;
 13710  000FAC  0E05               	movlw	5
 13711  000FAE  6E38               	movwf	_i2c1_state,c
 13712                           
 13713                           ;i2c1.c: 370: }
 13714  000FB0  0012               	return	
 13715  000FB2                     i2l7106:
 13716                           
 13717                           ;i2c1.c: 371: else
 13718                           ;i2c1.c: 372: {
 13719                           ;i2c1.c: 374: i2c1_state = S_MASTER_SEND_DATA;
 13720  000FB2  0E03               	movlw	3
 13721  000FB4  6E38               	movwf	_i2c1_state,c
 13722                           
 13723                           ;i2c1.c: 375: }
 13724                           ;i2c1.c: 376: }
 13725                           ;i2c1.c: 377: break;
 13726  000FB6  0012               	return	
 13727  000FB8                     i2l82:
 13728                           
 13729                           ;i2c1.c: 382: if(SSP1CON2bits.ACKSTAT)
 13730  000FB8  ACC5               	btfss	4037,6,c	;volatile
 13731  000FBA  D007               	goto	i2l7114
 13732                           
 13733                           ;i2c1.c: 383: {
 13734                           ;i2c1.c: 385: i2c1_object.i2cErrors++;
 13735  000FBC  0100               	movlb	0	; () banked
 13736  000FBE  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 13737                           
 13738                           ; BSR set to: 0
 13739                           ;i2c1.c: 388: SSP1CON2bits.ACKSTAT = 0;
 13740  000FC0  9CC5               	bcf	4037,6,c	;volatile
 13741                           
 13742                           ; BSR set to: 0
 13743                           ;i2c1.c: 391: I2C1_Stop(I2C1_DATA_NO_ACK);
 13744  000FC2  0E05               	movlw	5
 13745  000FC4  EC1E  F016         	call	_I2C1_Stop
 13746                           
 13747                           ;i2c1.c: 393: }
 13748  000FC8  0012               	return	
 13749  000FCA                     i2l7114:
 13750                           
 13751                           ;i2c1.c: 394: else
 13752                           ;i2c1.c: 395: {
 13753                           ;i2c1.c: 397: if(i2c_bytes_left-- == 0U)
 13754  000FCA  0635               	decf	I2C1_ISR@i2c_bytes_left,f,c
 13755  000FCC  2835               	incf	I2C1_ISR@i2c_bytes_left,w,c
 13756  000FCE  A4D8               	btfss	status,2,c
 13757  000FD0  D00F               	goto	i2l7124
 13758                           
 13759                           ;i2c1.c: 398: {
 13760                           ;i2c1.c: 402: p_i2c1_trb_current++;
 13761  000FD2  0E05               	movlw	5
 13762  000FD4  0100               	movlb	0	; () banked
 13763  000FD6  27D3               	addwf	_p_i2c1_trb_current& (0+255),f,b
 13764  000FD8  0E00               	movlw	0
 13765  000FDA  23D4               	addwfc	(_p_i2c1_trb_current+1)& (0+255),f,b
 13766                           
 13767                           ; BSR set to: 0
 13768                           ;i2c1.c: 405: if(--i2c1_trb_count == 0)
 13769  000FDC  2E39               	decfsz	_i2c1_trb_count,f,c
 13770  000FDE  D004               	goto	i2l86
 13771                           
 13772                           ; BSR set to: 0
 13773                           ;i2c1.c: 406: {
 13774                           ;i2c1.c: 407: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 13775  000FE0  0E00               	movlw	0
 13776  000FE2  EC1E  F016         	call	_I2C1_Stop
 13777                           
 13778                           ;i2c1.c: 408: }
 13779  000FE6  0012               	return	
 13780  000FE8                     i2l86:
 13781                           
 13782                           ; BSR set to: 0
 13783                           ;i2c1.c: 409: else
 13784                           ;i2c1.c: 410: {
 13785                           ;i2c1.c: 417: SSP1CON2bits.RSEN = 1;
 13786  000FE8  82C5               	bsf	4037,1,c	;volatile
 13787                           
 13788                           ; BSR set to: 0
 13789                           ;i2c1.c: 420: i2c1_state = S_MASTER_SEND_ADDR;
 13790  000FEA  0E02               	movlw	2
 13791  000FEC  6E38               	movwf	_i2c1_state,c
 13792                           
 13793                           ; BSR set to: 0
 13794                           ;i2c1.c: 422: }
 13795                           ;i2c1.c: 423: }
 13796  000FEE  0012               	return	
 13797  000FF0                     i2l7124:
 13798                           
 13799                           ;i2c1.c: 424: else
 13800                           ;i2c1.c: 425: {
 13801                           ;i2c1.c: 427: SSP1BUF = *pi2c_buf_ptr++;
 13802  000FF0  C0BF  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 13803  000FF4  C0C0  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 13804  000FF8  50DF               	movf	indf2,w,c
 13805  000FFA  6EC9               	movwf	4041,c	;volatile
 13806  000FFC  0100               	movlb	0	; () banked
 13807  000FFE  4BBF               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 13808  001000  2BC0               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 13809                           
 13810                           ; BSR set to: 0
 13811                           ;i2c1.c: 428: }
 13812                           ;i2c1.c: 429: }
 13813                           ;i2c1.c: 430: break;
 13814                           
 13815                           ; BSR set to: 0
 13816  001002  0012               	return	
 13817  001004                     i2l89:
 13818                           
 13819                           ;i2c1.c: 435: if(SSP1CON2bits.ACKSTAT)
 13820  001004  ACC5               	btfss	4037,6,c	;volatile
 13821  001006  D007               	goto	i2l90
 13822                           
 13823                           ;i2c1.c: 436: {
 13824                           ;i2c1.c: 439: i2c1_object.i2cErrors++;
 13825  001008  0100               	movlb	0	; () banked
 13826  00100A  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 13827                           
 13828                           ; BSR set to: 0
 13829                           ;i2c1.c: 442: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 13830  00100C  0E04               	movlw	4
 13831  00100E  EC1E  F016         	call	_I2C1_Stop
 13832                           
 13833                           ;i2c1.c: 445: SSP1CON2bits.ACKSTAT = 0;
 13834  001012  9CC5               	bcf	4037,6,c	;volatile
 13835                           
 13836                           ;i2c1.c: 446: }
 13837  001014  0012               	return	
 13838  001016                     i2l90:
 13839                           
 13840                           ;i2c1.c: 447: else
 13841                           ;i2c1.c: 448: {
 13842                           ;i2c1.c: 449: SSP1CON2bits.RCEN = 1;
 13843  001016  86C5               	bsf	4037,3,c	;volatile
 13844                           
 13845                           ;i2c1.c: 450: i2c1_state = S_MASTER_ACK_RCV_DATA;
 13846  001018  0E08               	movlw	8
 13847  00101A  6E38               	movwf	_i2c1_state,c
 13848                           
 13849                           ;i2c1.c: 451: }
 13850                           ;i2c1.c: 452: break;
 13851  00101C  0012               	return	
 13852  00101E                     i2l7136:
 13853                           
 13854                           ;i2c1.c: 459: i2c1_state = S_MASTER_ACK_RCV_DATA;
 13855  00101E  0E08               	movlw	8
 13856  001020  6E38               	movwf	_i2c1_state,c
 13857                           
 13858                           ;i2c1.c: 462: SSP1CON2bits.RCEN = 1;
 13859  001022  86C5               	bsf	4037,3,c	;volatile
 13860                           
 13861                           ;i2c1.c: 464: break;
 13862  001024  0012               	return	
 13863  001026                     i2l7140:
 13864                           
 13865                           ;i2c1.c: 469: *pi2c_buf_ptr++ = SSP1BUF;
 13866  001026  C0BF  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 13867  00102A  C0C0  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 13868  00102E  CFC9 FFDF          	movff	4041,indf2	;volatile
 13869  001032  0100               	movlb	0	; () banked
 13870  001034  4BBF               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 13871  001036  2BC0               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 13872                           
 13873                           ; BSR set to: 0
 13874                           ;i2c1.c: 472: if(--i2c_bytes_left)
 13875  001038  0E01               	movlw	1
 13876  00103A  5E35               	subwf	I2C1_ISR@i2c_bytes_left,f,c
 13877  00103C  B4D8               	btfsc	status,2,c
 13878  00103E  D004               	goto	i2l94
 13879                           
 13880                           ; BSR set to: 0
 13881                           ;i2c1.c: 473: {
 13882                           ;i2c1.c: 479: SSP1CON2bits.ACKDT = 0;
 13883  001040  9AC5               	bcf	4037,5,c	;volatile
 13884                           
 13885                           ; BSR set to: 0
 13886                           ;i2c1.c: 482: i2c1_state = S_MASTER_RCV_DATA;
 13887  001042  0E06               	movlw	6
 13888  001044  6E38               	movwf	_i2c1_state,c
 13889                           
 13890                           ;i2c1.c: 483: }
 13891  001046  D003               	goto	i2l7152
 13892  001048                     i2l94:
 13893                           
 13894                           ; BSR set to: 0
 13895                           ;i2c1.c: 484: else
 13896                           ;i2c1.c: 485: {
 13897                           ;i2c1.c: 489: SSP1CON2bits.ACKDT = 1;
 13898  001048  8AC5               	bsf	4037,5,c	;volatile
 13899                           
 13900                           ; BSR set to: 0
 13901                           ;i2c1.c: 491: I2C1_FunctionComplete();
 13902  00104A  ECBC  F017         	call	_I2C1_FunctionComplete	;wreg free
 13903  00104E                     i2l7152:
 13904                           
 13905                           ;i2c1.c: 492: }
 13906                           ;i2c1.c: 495: SSP1CON2bits.ACKEN = 1;
 13907  00104E  88C5               	bsf	4037,4,c	;volatile
 13908                           
 13909                           ;i2c1.c: 496: break;
 13910  001050  0012               	return	
 13911  001052                     i2l7154:
 13912                           
 13913                           ;i2c1.c: 499: case S_MASTER_SEND_STOP:
 13914                           ;i2c1.c: 502: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 13915  001052  0E00               	movlw	0
 13916  001054  EC1E  F016         	call	_I2C1_Stop
 13917                           
 13918                           ;i2c1.c: 503: break;
 13919  001058  0012               	return	
 13920  00105A                     i2l7156:
 13921                           
 13922                           ;i2c1.c: 509: i2c1_object.i2cErrors++;
 13923  00105A  0100               	movlb	0	; () banked
 13924  00105C  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 13925                           
 13926                           ; BSR set to: 0
 13927                           ;i2c1.c: 510: I2C1_Stop(I2C1_LOST_STATE);
 13928  00105E  0E06               	movlw	6
 13929  001060  EC1E  F016         	call	_I2C1_Stop
 13930                           
 13931                           ;i2c1.c: 513: }
 13932                           
 13933                           ;i2c1.c: 511: break;
 13934  001064  0012               	return	
 13935  001066                     i2l7162:
 13936  001066  5038               	movf	_i2c1_state,w,c
 13937                           
 13938                           ; Switch size 1, requested type "space"
 13939                           ; Number of cases is 11, Range of values is 0 to 11
 13940                           ; switch strategies available:
 13941                           ; Name         Instructions Cycles
 13942                           ; simple_byte           34    18 (average)
 13943                           ;	Chosen strategy is simple_byte
 13944  001068  0A00               	xorlw	0	; case 0
 13945  00106A  B4D8               	btfsc	status,2,c
 13946  00106C  D703               	goto	i2l60
 13947  00106E  0A01               	xorlw	1	; case 1
 13948  001070  B4D8               	btfsc	status,2,c
 13949  001072  D73F               	goto	i2l65
 13950  001074  0A03               	xorlw	3	; case 2
 13951  001076  B4D8               	btfsc	status,2,c
 13952  001078  D776               	goto	i2l7086
 13953  00107A  0A01               	xorlw	1	; case 3
 13954  00107C  B4D8               	btfsc	status,2,c
 13955  00107E  D79C               	goto	i2l82
 13956  001080  0A07               	xorlw	7	; case 4
 13957  001082  B4D8               	btfsc	status,2,c
 13958  001084  D7E6               	goto	i2l7154
 13959  001086  0A01               	xorlw	1	; case 5
 13960  001088  B4D8               	btfsc	status,2,c
 13961  00108A  D7BC               	goto	i2l89
 13962  00108C  0A03               	xorlw	3	; case 6
 13963  00108E  B4D8               	btfsc	status,2,c
 13964  001090  D7C6               	goto	i2l7136
 13965  001092  0A01               	xorlw	1	; case 7
 13966  001094  B4D8               	btfsc	status,2,c
 13967  001096  D7DD               	goto	i2l7154
 13968  001098  0A0F               	xorlw	15	; case 8
 13969  00109A  B4D8               	btfsc	status,2,c
 13970  00109C  D7C4               	goto	i2l7140
 13971  00109E  0A02               	xorlw	2	; case 10
 13972  0010A0  B4D8               	btfsc	status,2,c
 13973  0010A2  D72B               	goto	i2l66
 13974  0010A4  0A01               	xorlw	1	; case 11
 13975  0010A6  B4D8               	btfsc	status,2,c
 13976  0010A8  D73F               	goto	i2l71
 13977  0010AA  D7D7               	goto	i2l7156
 13978  0010AC                     __end_of_I2C1_ISR:
 13979                           	opt stack 0
 13980                           tosu	equ	0xFFF
 13981                           tosh	equ	0xFFE
 13982                           tosl	equ	0xFFD
 13983                           pclatu	equ	0xFFB
 13984                           pclath	equ	0xFFA
 13985                           tblptru	equ	0xFF8
 13986                           tblptrh	equ	0xFF7
 13987                           tblptrl	equ	0xFF6
 13988                           tablat	equ	0xFF5
 13989                           prodh	equ	0xFF4
 13990                           prodl	equ	0xFF3
 13991                           intcon	equ	0xFF2
 13992                           intcon2	equ	0xFF1
 13993                           postinc0	equ	0xFEE
 13994                           fsr0h	equ	0xFEA
 13995                           fsr0l	equ	0xFE9
 13996                           wreg	equ	0xFE8
 13997                           fsr1h	equ	0xFE2
 13998                           fsr1l	equ	0xFE1
 13999                           indf2	equ	0xFDF
 14000                           postinc2	equ	0xFDE
 14001                           postdec2	equ	0xFDD
 14002                           plusw2	equ	0xFDB
 14003                           fsr2h	equ	0xFDA
 14004                           fsr2l	equ	0xFD9
 14005                           status	equ	0xFD8
 14006                           
 14007 ;; *************** function _I2C1_Stop *****************
 14008 ;; Defined at:
 14009 ;;		line 534 in file "mcc_generated_files/i2c1.c"
 14010 ;; Parameters:    Size  Location     Type
 14011 ;;  completion_c    1    wreg     enum E7739
 14012 ;; Auto vars:     Size  Location     Type
 14013 ;;  completion_c    1    2[COMRAM] enum E7739
 14014 ;; Return value:  Size  Location     Type
 14015 ;;                  1    wreg      void 
 14016 ;; Registers used:
 14017 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14018 ;; Tracked objects:
 14019 ;;		On entry : 0/0
 14020 ;;		On exit  : 0/0
 14021 ;;		Unchanged: 0/0
 14022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14023 ;;      Params:         0       0       0       0       0       0       0
 14024 ;;      Locals:         1       0       0       0       0       0       0
 14025 ;;      Temps:          2       0       0       0       0       0       0
 14026 ;;      Totals:         3       0       0       0       0       0       0
 14027 ;;Total ram usage:        3 bytes
 14028 ;; Hardware stack levels used:    1
 14029 ;; This function calls:
 14030 ;;		Nothing
 14031 ;; This function is called by:
 14032 ;;		_I2C1_ISR
 14033 ;; This function uses a non-reentrant model
 14034 ;;
 14035                           
 14036                           	psect	text68
 14037  002C3C                     __ptext68:
 14038                           	opt stack 0
 14039  002C3C                     _I2C1_Stop:
 14040                           	opt stack 22
 14041                           
 14042                           ;incstack = 0
 14043                           ;I2C1_Stop@completion_code stored from wreg
 14044  002C3C  6E03               	movwf	I2C1_Stop@completion_code,c
 14045                           
 14046                           ;i2c1.c: 537: SSP1CON2bits.PEN = 1;
 14047  002C3E  84C5               	bsf	4037,2,c	;volatile
 14048                           
 14049                           ;i2c1.c: 540: if (p_i2c1_current->pTrFlag != (0))
 14050  002C40  0100               	movlb	0	; () banked
 14051  002C42  EE20 F003          	lfsr	2,3
 14052  002C46  51D1               	movf	_p_i2c1_current& (0+255),w,b
 14053  002C48  26D9               	addwf	fsr2l,f,c
 14054  002C4A  51D2               	movf	(_p_i2c1_current+1)& (0+255),w,b
 14055  002C4C  22DA               	addwfc	fsr2h,f,c
 14056  002C4E  50DE               	movf	postinc2,w,c
 14057  002C50  10DE               	iorwf	postinc2,w,c
 14058  002C52  B4D8               	btfsc	status,2,c
 14059  002C54  D011               	goto	i2l6592
 14060                           
 14061                           ; BSR set to: 0
 14062                           ;i2c1.c: 541: {
 14063                           ;i2c1.c: 543: *(p_i2c1_current->pTrFlag) = completion_code;
 14064  002C56  0100               	movlb	0	; () banked
 14065  002C58  EE20 F003          	lfsr	2,3
 14066  002C5C  51D1               	movf	_p_i2c1_current& (0+255),w,b
 14067  002C5E  26D9               	addwf	fsr2l,f,c
 14068  002C60  51D2               	movf	(_p_i2c1_current+1)& (0+255),w,b
 14069  002C62  22DA               	addwfc	fsr2h,f,c
 14070  002C64  CFDE F001          	movff	postinc2,??_I2C1_Stop
 14071  002C68  CFDD F002          	movff	postdec2,??_I2C1_Stop+1
 14072  002C6C  C001  FFD9         	movff	??_I2C1_Stop,fsr2l
 14073  002C70  C002  FFDA         	movff	??_I2C1_Stop+1,fsr2h
 14074  002C74  C003  FFDF         	movff	I2C1_Stop@completion_code,indf2
 14075  002C78                     i2l6592:
 14076                           
 14077                           ; BSR set to: 0
 14078                           ;i2c1.c: 544: }
 14079                           ;i2c1.c: 547: i2c1_state = S_MASTER_IDLE;
 14080  002C78  0E00               	movlw	0
 14081  002C7A  6E38               	movwf	_i2c1_state,c
 14082                           
 14083                           ; BSR set to: 0
 14084  002C7C  0012               	return		;funcret
 14085  002C7E                     __end_of_I2C1_Stop:
 14086                           	opt stack 0
 14087                           tosu	equ	0xFFF
 14088                           tosh	equ	0xFFE
 14089                           tosl	equ	0xFFD
 14090                           pclatu	equ	0xFFB
 14091                           pclath	equ	0xFFA
 14092                           tblptru	equ	0xFF8
 14093                           tblptrh	equ	0xFF7
 14094                           tblptrl	equ	0xFF6
 14095                           tablat	equ	0xFF5
 14096                           prodh	equ	0xFF4
 14097                           prodl	equ	0xFF3
 14098                           intcon	equ	0xFF2
 14099                           intcon2	equ	0xFF1
 14100                           postinc0	equ	0xFEE
 14101                           fsr0h	equ	0xFEA
 14102                           fsr0l	equ	0xFE9
 14103                           wreg	equ	0xFE8
 14104                           fsr1h	equ	0xFE2
 14105                           fsr1l	equ	0xFE1
 14106                           indf2	equ	0xFDF
 14107                           postinc2	equ	0xFDE
 14108                           postdec2	equ	0xFDD
 14109                           plusw2	equ	0xFDB
 14110                           fsr2h	equ	0xFDA
 14111                           fsr2l	equ	0xFD9
 14112                           status	equ	0xFD8
 14113                           
 14114 ;; *************** function _I2C1_FunctionComplete *****************
 14115 ;; Defined at:
 14116 ;;		line 516 in file "mcc_generated_files/i2c1.c"
 14117 ;; Parameters:    Size  Location     Type
 14118 ;;		None
 14119 ;; Auto vars:     Size  Location     Type
 14120 ;;		None
 14121 ;; Return value:  Size  Location     Type
 14122 ;;                  1    wreg      void 
 14123 ;; Registers used:
 14124 ;;		wreg, status,2, status,0
 14125 ;; Tracked objects:
 14126 ;;		On entry : 0/0
 14127 ;;		On exit  : 0/0
 14128 ;;		Unchanged: 0/0
 14129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14130 ;;      Params:         0       0       0       0       0       0       0
 14131 ;;      Locals:         0       0       0       0       0       0       0
 14132 ;;      Temps:          0       0       0       0       0       0       0
 14133 ;;      Totals:         0       0       0       0       0       0       0
 14134 ;;Total ram usage:        0 bytes
 14135 ;; Hardware stack levels used:    1
 14136 ;; This function calls:
 14137 ;;		Nothing
 14138 ;; This function is called by:
 14139 ;;		_I2C1_ISR
 14140 ;; This function uses a non-reentrant model
 14141 ;;
 14142                           
 14143                           	psect	text69
 14144  002F78                     __ptext69:
 14145                           	opt stack 0
 14146  002F78                     _I2C1_FunctionComplete:
 14147                           	opt stack 22
 14148                           
 14149                           ;i2c1.c: 520: p_i2c1_trb_current++;
 14150                           
 14151                           ; BSR set to: 0
 14152                           ;incstack = 0
 14153  002F78  0E05               	movlw	5
 14154  002F7A  0100               	movlb	0	; () banked
 14155  002F7C  27D3               	addwf	_p_i2c1_trb_current& (0+255),f,b
 14156  002F7E  0E00               	movlw	0
 14157  002F80  23D4               	addwfc	(_p_i2c1_trb_current+1)& (0+255),f,b
 14158                           
 14159                           ; BSR set to: 0
 14160                           ;i2c1.c: 523: if(--i2c1_trb_count == 0)
 14161  002F82  2E39               	decfsz	_i2c1_trb_count,f,c
 14162  002F84  D003               	goto	i2l6600
 14163                           
 14164                           ; BSR set to: 0
 14165                           ;i2c1.c: 524: {
 14166                           ;i2c1.c: 525: i2c1_state = S_MASTER_SEND_STOP;
 14167  002F86  0E04               	movlw	4
 14168  002F88  6E38               	movwf	_i2c1_state,c
 14169                           
 14170                           ;i2c1.c: 526: }
 14171  002F8A  0012               	return	
 14172  002F8C                     i2l6600:
 14173                           
 14174                           ; BSR set to: 0
 14175                           ;i2c1.c: 527: else
 14176                           ;i2c1.c: 528: {
 14177                           ;i2c1.c: 529: i2c1_state = S_MASTER_RESTART;
 14178  002F8C  0E01               	movlw	1
 14179  002F8E  6E38               	movwf	_i2c1_state,c
 14180  002F90  0012               	return	
 14181  002F92                     __end_of_I2C1_FunctionComplete:
 14182                           	opt stack 0
 14183                           tosu	equ	0xFFF
 14184                           tosh	equ	0xFFE
 14185                           tosl	equ	0xFFD
 14186                           pclatu	equ	0xFFB
 14187                           pclath	equ	0xFFA
 14188                           tblptru	equ	0xFF8
 14189                           tblptrh	equ	0xFF7
 14190                           tblptrl	equ	0xFF6
 14191                           tablat	equ	0xFF5
 14192                           prodh	equ	0xFF4
 14193                           prodl	equ	0xFF3
 14194                           intcon	equ	0xFF2
 14195                           intcon2	equ	0xFF1
 14196                           postinc0	equ	0xFEE
 14197                           fsr0h	equ	0xFEA
 14198                           fsr0l	equ	0xFE9
 14199                           wreg	equ	0xFE8
 14200                           fsr1h	equ	0xFE2
 14201                           fsr1l	equ	0xFE1
 14202                           indf2	equ	0xFDF
 14203                           postinc2	equ	0xFDE
 14204                           postdec2	equ	0xFDD
 14205                           plusw2	equ	0xFDB
 14206                           fsr2h	equ	0xFDA
 14207                           fsr2l	equ	0xFD9
 14208                           status	equ	0xFD8
 14209                           
 14210 ;; *************** function _I2C1_BusCollisionISR *****************
 14211 ;; Defined at:
 14212 ;;		line 681 in file "mcc_generated_files/i2c1.c"
 14213 ;; Parameters:    Size  Location     Type
 14214 ;;		None
 14215 ;; Auto vars:     Size  Location     Type
 14216 ;;		None
 14217 ;; Return value:  Size  Location     Type
 14218 ;;                  1    wreg      void 
 14219 ;; Registers used:
 14220 ;;		None
 14221 ;; Tracked objects:
 14222 ;;		On entry : 0/0
 14223 ;;		On exit  : 0/0
 14224 ;;		Unchanged: 0/0
 14225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14226 ;;      Params:         0       0       0       0       0       0       0
 14227 ;;      Locals:         0       0       0       0       0       0       0
 14228 ;;      Temps:          0       0       0       0       0       0       0
 14229 ;;      Totals:         0       0       0       0       0       0       0
 14230 ;;Total ram usage:        0 bytes
 14231 ;; Hardware stack levels used:    1
 14232 ;; This function calls:
 14233 ;;		Nothing
 14234 ;; This function is called by:
 14235 ;;		_INTERRUPT_InterruptManager
 14236 ;; This function uses a non-reentrant model
 14237 ;;
 14238                           
 14239                           	psect	text70
 14240  003066                     __ptext70:
 14241                           	opt stack 0
 14242  003066                     _I2C1_BusCollisionISR:
 14243                           	opt stack 23
 14244                           
 14245                           ; BSR set to: 0
 14246                           ;incstack = 0
 14247  003066  0012               	return		;funcret
 14248  003068                     __end_of_I2C1_BusCollisionISR:
 14249                           	opt stack 0
 14250                           tosu	equ	0xFFF
 14251                           tosh	equ	0xFFE
 14252                           tosl	equ	0xFFD
 14253                           pclatu	equ	0xFFB
 14254                           pclath	equ	0xFFA
 14255                           tblptru	equ	0xFF8
 14256                           tblptrh	equ	0xFF7
 14257                           tblptrl	equ	0xFF6
 14258                           tablat	equ	0xFF5
 14259                           prodh	equ	0xFF4
 14260                           prodl	equ	0xFF3
 14261                           intcon	equ	0xFF2
 14262                           intcon2	equ	0xFF1
 14263                           postinc0	equ	0xFEE
 14264                           fsr0h	equ	0xFEA
 14265                           fsr0l	equ	0xFE9
 14266                           wreg	equ	0xFE8
 14267                           fsr1h	equ	0xFE2
 14268                           fsr1l	equ	0xFE1
 14269                           indf2	equ	0xFDF
 14270                           postinc2	equ	0xFDE
 14271                           postdec2	equ	0xFDD
 14272                           plusw2	equ	0xFDB
 14273                           fsr2h	equ	0xFDA
 14274                           fsr2l	equ	0xFD9
 14275                           status	equ	0xFD8
 14276                           
 14277 ;; *************** function _EUSART1_Transmit_ISR *****************
 14278 ;; Defined at:
 14279 ;;		line 150 in file "UART.c"
 14280 ;; Parameters:    Size  Location     Type
 14281 ;;		None
 14282 ;; Auto vars:     Size  Location     Type
 14283 ;;		None
 14284 ;; Return value:  Size  Location     Type
 14285 ;;                  1    wreg      void 
 14286 ;; Registers used:
 14287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14288 ;; Tracked objects:
 14289 ;;		On entry : 0/0
 14290 ;;		On exit  : 0/0
 14291 ;;		Unchanged: 0/0
 14292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14293 ;;      Params:         0       0       0       0       0       0       0
 14294 ;;      Locals:         0       0       0       0       0       0       0
 14295 ;;      Temps:          0       0       0       0       0       0       0
 14296 ;;      Totals:         0       0       0       0       0       0       0
 14297 ;;Total ram usage:        0 bytes
 14298 ;; Hardware stack levels used:    1
 14299 ;; Hardware stack levels required when called:    2
 14300 ;; This function calls:
 14301 ;;		i2_UART_buff_get
 14302 ;;		i2_UART_buff_size
 14303 ;; This function is called by:
 14304 ;;		_INTERRUPT_InterruptManager
 14305 ;; This function uses a non-reentrant model
 14306 ;;
 14307                           
 14308                           	psect	text71
 14309  002D64                     __ptext71:
 14310                           	opt stack 0
 14311  002D64                     _EUSART1_Transmit_ISR:
 14312                           	opt stack 21
 14313                           
 14314                           ;UART.c: 152: if (UART_buff_size(&output_buffer) > 0) {
 14315                           
 14316                           ;incstack = 0
 14317  002D64  0E00               	movlw	low _output_buffer
 14318  002D66  6E01               	movwf	i2UART_buff_size@_this,c
 14319  002D68  0E05               	movlw	high _output_buffer
 14320  002D6A  6E02               	movwf	i2UART_buff_size@_this+1,c
 14321  002D6C  ECEB  F017         	call	i2_UART_buff_size	;wreg free
 14322  002D70  BE02               	btfsc	?i2_UART_buff_size+1,7,c
 14323  002D72  D00D               	goto	i2l5308
 14324  002D74  5002               	movf	?i2_UART_buff_size+1,w,c
 14325  002D76  E103               	bnz	i2u546_40
 14326  002D78  0401               	decf	?i2_UART_buff_size,w,c
 14327  002D7A  A0D8               	btfss	status,0,c
 14328  002D7C  D008               	goto	i2l5308
 14329  002D7E                     i2u546_40:
 14330                           
 14331                           ;UART.c: 153: TXREG1 = UART_buff_get(&output_buffer);
 14332  002D7E  0E00               	movlw	low _output_buffer
 14333  002D80  6E07               	movwf	i2UART_buff_get@_this,c
 14334  002D82  0E05               	movlw	high _output_buffer
 14335  002D84  6E08               	movwf	i2UART_buff_get@_this+1,c
 14336  002D86  EC61  F013         	call	i2_UART_buff_get	;wreg free
 14337  002D8A  6EAD               	movwf	4013,c	;volatile
 14338                           
 14339                           ;UART.c: 154: } else {
 14340  002D8C  0012               	return	
 14341  002D8E                     i2l5308:
 14342                           
 14343                           ;UART.c: 155: Transmit_stall = 1;
 14344  002D8E  0E01               	movlw	1
 14345  002D90  6E44               	movwf	_Transmit_stall,c
 14346                           
 14347                           ;UART.c: 156: PIE1bits.TX1IE = 0;
 14348  002D92  989D               	bcf	3997,4,c	;volatile
 14349  002D94  0012               	return	
 14350  002D96                     __end_of_EUSART1_Transmit_ISR:
 14351                           	opt stack 0
 14352                           tosu	equ	0xFFF
 14353                           tosh	equ	0xFFE
 14354                           tosl	equ	0xFFD
 14355                           pclatu	equ	0xFFB
 14356                           pclath	equ	0xFFA
 14357                           tblptru	equ	0xFF8
 14358                           tblptrh	equ	0xFF7
 14359                           tblptrl	equ	0xFF6
 14360                           tablat	equ	0xFF5
 14361                           prodh	equ	0xFF4
 14362                           prodl	equ	0xFF3
 14363                           intcon	equ	0xFF2
 14364                           intcon2	equ	0xFF1
 14365                           postinc0	equ	0xFEE
 14366                           fsr0h	equ	0xFEA
 14367                           fsr0l	equ	0xFE9
 14368                           wreg	equ	0xFE8
 14369                           fsr1h	equ	0xFE2
 14370                           fsr1l	equ	0xFE1
 14371                           indf2	equ	0xFDF
 14372                           postinc2	equ	0xFDE
 14373                           postdec2	equ	0xFDD
 14374                           plusw2	equ	0xFDB
 14375                           fsr2h	equ	0xFDA
 14376                           fsr2l	equ	0xFD9
 14377                           status	equ	0xFD8
 14378                           
 14379 ;; *************** function i2_UART_buff_size *****************
 14380 ;; Defined at:
 14381 ;;		line 102 in file "UART.c"
 14382 ;; Parameters:    Size  Location     Type
 14383 ;;  _this           2    0[COMRAM] PTR struct UART_ring_buf
 14384 ;;		 -> output_buffer(206), input_buffer(206), 
 14385 ;; Auto vars:     Size  Location     Type
 14386 ;;		None
 14387 ;; Return value:  Size  Location     Type
 14388 ;;                  2    0[COMRAM] int 
 14389 ;; Registers used:
 14390 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14391 ;; Tracked objects:
 14392 ;;		On entry : 0/0
 14393 ;;		On exit  : 0/0
 14394 ;;		Unchanged: 0/0
 14395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14396 ;;      Params:         2       0       0       0       0       0       0
 14397 ;;      Locals:         0       0       0       0       0       0       0
 14398 ;;      Temps:          0       0       0       0       0       0       0
 14399 ;;      Totals:         2       0       0       0       0       0       0
 14400 ;;Total ram usage:        2 bytes
 14401 ;; Hardware stack levels used:    1
 14402 ;; This function calls:
 14403 ;;		Nothing
 14404 ;; This function is called by:
 14405 ;;		_EUSART1_Transmit_ISR
 14406 ;; This function uses a non-reentrant model
 14407 ;;
 14408                           
 14409                           	psect	text72
 14410  002FD6                     __ptext72:
 14411                           	opt stack 0
 14412  002FD6                     i2_UART_buff_size:
 14413                           	opt stack 22
 14414                           
 14415                           ;UART.c: 103: return (_this->count);
 14416                           
 14417                           ;incstack = 0
 14418  002FD6  EE20 F0CC          	lfsr	2,204
 14419  002FDA  5001               	movf	i2UART_buff_size@_this,w,c
 14420  002FDC  26D9               	addwf	fsr2l,f,c
 14421  002FDE  5002               	movf	i2UART_buff_size@_this+1,w,c
 14422  002FE0  22DA               	addwfc	fsr2h,f,c
 14423  002FE2  CFDE F001          	movff	postinc2,?i2_UART_buff_size
 14424  002FE6  CFDD F002          	movff	postdec2,?i2_UART_buff_size+1
 14425  002FEA  0012               	return	
 14426  002FEC                     __end_ofi2_UART_buff_size:
 14427                           	opt stack 0
 14428                           tosu	equ	0xFFF
 14429                           tosh	equ	0xFFE
 14430                           tosl	equ	0xFFD
 14431                           pclatu	equ	0xFFB
 14432                           pclath	equ	0xFFA
 14433                           tblptru	equ	0xFF8
 14434                           tblptrh	equ	0xFF7
 14435                           tblptrl	equ	0xFF6
 14436                           tablat	equ	0xFF5
 14437                           prodh	equ	0xFF4
 14438                           prodl	equ	0xFF3
 14439                           intcon	equ	0xFF2
 14440                           intcon2	equ	0xFF1
 14441                           postinc0	equ	0xFEE
 14442                           fsr0h	equ	0xFEA
 14443                           fsr0l	equ	0xFE9
 14444                           wreg	equ	0xFE8
 14445                           fsr1h	equ	0xFE2
 14446                           fsr1l	equ	0xFE1
 14447                           indf2	equ	0xFDF
 14448                           postinc2	equ	0xFDE
 14449                           postdec2	equ	0xFDD
 14450                           plusw2	equ	0xFDB
 14451                           fsr2h	equ	0xFDA
 14452                           fsr2l	equ	0xFD9
 14453                           status	equ	0xFD8
 14454                           
 14455 ;; *************** function i2_UART_buff_get *****************
 14456 ;; Defined at:
 14457 ;;		line 81 in file "UART.c"
 14458 ;; Parameters:    Size  Location     Type
 14459 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 14460 ;;		 -> output_buffer(206), input_buffer(206), 
 14461 ;; Auto vars:     Size  Location     Type
 14462 ;;  UART_buff_ge    1   10[COMRAM] unsigned char 
 14463 ;; Return value:  Size  Location     Type
 14464 ;;                  1    wreg      unsigned char 
 14465 ;; Registers used:
 14466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14467 ;; Tracked objects:
 14468 ;;		On entry : 0/0
 14469 ;;		On exit  : 0/0
 14470 ;;		Unchanged: 0/0
 14471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14472 ;;      Params:         2       0       0       0       0       0       0
 14473 ;;      Locals:         1       0       0       0       0       0       0
 14474 ;;      Temps:          2       0       0       0       0       0       0
 14475 ;;      Totals:         5       0       0       0       0       0       0
 14476 ;;Total ram usage:        5 bytes
 14477 ;; Hardware stack levels used:    1
 14478 ;; Hardware stack levels required when called:    1
 14479 ;; This function calls:
 14480 ;;		i2_UART_buff_modulo_inc
 14481 ;; This function is called by:
 14482 ;;		_EUSART1_Transmit_ISR
 14483 ;; This function uses a non-reentrant model
 14484 ;;
 14485                           
 14486                           	psect	text73
 14487  0026C2                     __ptext73:
 14488                           	opt stack 0
 14489  0026C2                     i2_UART_buff_get:
 14490                           	opt stack 21
 14491                           
 14492                           ;UART.c: 82: unsigned char c;
 14493                           ;UART.c: 83: if (_this->count > 0) {
 14494                           
 14495                           ;incstack = 0
 14496  0026C2  EE20 F0CC          	lfsr	2,204
 14497  0026C6  5007               	movf	i2UART_buff_get@_this,w,c
 14498  0026C8  26D9               	addwf	fsr2l,f,c
 14499  0026CA  5008               	movf	i2UART_buff_get@_this+1,w,c
 14500  0026CC  22DA               	addwfc	fsr2h,f,c
 14501  0026CE  0E01               	movlw	1
 14502  0026D0  BEDB               	btfsc	plusw2,7,c
 14503  0026D2  D03C               	goto	i2l5132
 14504  0026D4  0E01               	movlw	1
 14505  0026D6  50DB               	movf	plusw2,w,c
 14506  0026D8  E103               	bnz	i2u526_40
 14507  0026DA  04DE               	decf	postinc2,w,c
 14508  0026DC  A0D8               	btfss	status,0,c
 14509  0026DE  D036               	goto	i2l5132
 14510  0026E0                     i2u526_40:
 14511                           
 14512                           ;UART.c: 84: c = _this->buf[_this->tail];
 14513  0026E0  EE20 F0CA          	lfsr	2,202
 14514  0026E4  5007               	movf	i2UART_buff_get@_this,w,c
 14515  0026E6  26D9               	addwf	fsr2l,f,c
 14516  0026E8  5008               	movf	i2UART_buff_get@_this+1,w,c
 14517  0026EA  22DA               	addwfc	fsr2h,f,c
 14518  0026EC  CFDE F009          	movff	postinc2,??i2_UART_buff_get
 14519  0026F0  CFDD F00A          	movff	postdec2,??i2_UART_buff_get+1
 14520  0026F4  5009               	movf	??i2_UART_buff_get,w,c
 14521  0026F6  2407               	addwf	i2UART_buff_get@_this,w,c
 14522  0026F8  6ED9               	movwf	fsr2l,c
 14523  0026FA  500A               	movf	??i2_UART_buff_get+1,w,c
 14524  0026FC  2008               	addwfc	i2UART_buff_get@_this+1,w,c
 14525  0026FE  6EDA               	movwf	fsr2h,c
 14526  002700  50DF               	movf	indf2,w,c
 14527  002702  6E0B               	movwf	i2UART_buff_get@c,c
 14528                           
 14529                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 14530  002704  EE20 F0CA          	lfsr	2,202
 14531  002708  5007               	movf	i2UART_buff_get@_this,w,c
 14532  00270A  26D9               	addwf	fsr2l,f,c
 14533  00270C  5008               	movf	i2UART_buff_get@_this+1,w,c
 14534  00270E  22DA               	addwfc	fsr2h,f,c
 14535  002710  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 14536  002714  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 14537  002718  0E00               	movlw	0
 14538  00271A  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 14539  00271C  0EC8               	movlw	200
 14540  00271E  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 14541  002720  EC22  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 14542  002724  EE20 F0CA          	lfsr	2,202
 14543  002728  5007               	movf	i2UART_buff_get@_this,w,c
 14544  00272A  26D9               	addwf	fsr2l,f,c
 14545  00272C  5008               	movf	i2UART_buff_get@_this+1,w,c
 14546  00272E  22DA               	addwfc	fsr2h,f,c
 14547  002730  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 14548  002734  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 14549                           
 14550                           ;UART.c: 86: --_this->count;
 14551  002738  EE20 F0CC          	lfsr	2,204
 14552  00273C  5007               	movf	i2UART_buff_get@_this,w,c
 14553  00273E  26D9               	addwf	fsr2l,f,c
 14554  002740  5008               	movf	i2UART_buff_get@_this+1,w,c
 14555  002742  22DA               	addwfc	fsr2h,f,c
 14556  002744  06DE               	decf	postinc2,f,c
 14557  002746  0E00               	movlw	0
 14558  002748  5ADD               	subwfb	postdec2,f,c
 14559                           
 14560                           ;UART.c: 87: } else {
 14561  00274A  D002               	goto	i2l1172
 14562  00274C                     i2l5132:
 14563                           
 14564                           ;UART.c: 88: c = 0;
 14565  00274C  0E00               	movlw	0
 14566  00274E  6E0B               	movwf	i2UART_buff_get@c,c
 14567  002750                     i2l1172:
 14568                           
 14569                           ;UART.c: 89: }
 14570                           ;UART.c: 90: return (c);
 14571  002750  500B               	movf	i2UART_buff_get@c,w,c
 14572  002752  0012               	return	
 14573  002754                     __end_ofi2_UART_buff_get:
 14574                           	opt stack 0
 14575                           tosu	equ	0xFFF
 14576                           tosh	equ	0xFFE
 14577                           tosl	equ	0xFFD
 14578                           pclatu	equ	0xFFB
 14579                           pclath	equ	0xFFA
 14580                           tblptru	equ	0xFF8
 14581                           tblptrh	equ	0xFF7
 14582                           tblptrl	equ	0xFF6
 14583                           tablat	equ	0xFF5
 14584                           prodh	equ	0xFF4
 14585                           prodl	equ	0xFF3
 14586                           intcon	equ	0xFF2
 14587                           intcon2	equ	0xFF1
 14588                           postinc0	equ	0xFEE
 14589                           fsr0h	equ	0xFEA
 14590                           fsr0l	equ	0xFE9
 14591                           wreg	equ	0xFE8
 14592                           fsr1h	equ	0xFE2
 14593                           fsr1l	equ	0xFE1
 14594                           indf2	equ	0xFDF
 14595                           postinc2	equ	0xFDE
 14596                           postdec2	equ	0xFDD
 14597                           plusw2	equ	0xFDB
 14598                           fsr2h	equ	0xFDA
 14599                           fsr2l	equ	0xFD9
 14600                           status	equ	0xFD8
 14601                           
 14602 ;; *************** function _EUSART1_Receive_ISR *****************
 14603 ;; Defined at:
 14604 ;;		line 139 in file "UART.c"
 14605 ;; Parameters:    Size  Location     Type
 14606 ;;		None
 14607 ;; Auto vars:     Size  Location     Type
 14608 ;;  data            1   11[COMRAM] unsigned char 
 14609 ;; Return value:  Size  Location     Type
 14610 ;;                  1    wreg      void 
 14611 ;; Registers used:
 14612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14613 ;; Tracked objects:
 14614 ;;		On entry : 0/0
 14615 ;;		On exit  : 0/0
 14616 ;;		Unchanged: 0/0
 14617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14618 ;;      Params:         0       0       0       0       0       0       0
 14619 ;;      Locals:         1       0       0       0       0       0       0
 14620 ;;      Temps:          0       0       0       0       0       0       0
 14621 ;;      Totals:         1       0       0       0       0       0       0
 14622 ;;Total ram usage:        1 bytes
 14623 ;; Hardware stack levels used:    1
 14624 ;; Hardware stack levels required when called:    2
 14625 ;; This function calls:
 14626 ;;		i2_UART_buff_put
 14627 ;; This function is called by:
 14628 ;;		_INTERRUPT_InterruptManager
 14629 ;; This function uses a non-reentrant model
 14630 ;;
 14631                           
 14632                           	psect	text74
 14633  002F5A                     __ptext74:
 14634                           	opt stack 0
 14635  002F5A                     _EUSART1_Receive_ISR:
 14636                           	opt stack 21
 14637                           
 14638                           ;UART.c: 140: if (1 == RC1STAbits.OERR) {
 14639                           
 14640                           ;incstack = 0
 14641  002F5A  A2AB               	btfss	4011,1,c	;volatile
 14642  002F5C  D002               	goto	i2l1203
 14643                           
 14644                           ;UART.c: 143: RC1STAbits.CREN = 0;
 14645  002F5E  98AB               	bcf	4011,4,c	;volatile
 14646                           
 14647                           ;UART.c: 144: RC1STAbits.CREN = 1;
 14648  002F60  88AB               	bsf	4011,4,c	;volatile
 14649  002F62                     i2l1203:
 14650                           
 14651                           ;UART.c: 145: }
 14652                           ;UART.c: 146: unsigned char data = RCREG1;
 14653  002F62  CFAE F00C          	movff	4014,EUSART1_Receive_ISR@data	;volatile
 14654                           
 14655                           ;UART.c: 147: UART_buff_put(&input_buffer, data);
 14656  002F66  0E00               	movlw	low _input_buffer
 14657  002F68  6E07               	movwf	i2UART_buff_put@_this,c
 14658  002F6A  0E04               	movlw	high _input_buffer
 14659  002F6C  6E08               	movwf	i2UART_buff_put@_this+1,c
 14660  002F6E  C00C  F009         	movff	EUSART1_Receive_ISR@data,i2UART_buff_put@c
 14661  002F72  EC8E  F00D         	call	i2_UART_buff_put	;wreg free
 14662  002F76  0012               	return		;funcret
 14663  002F78                     __end_of_EUSART1_Receive_ISR:
 14664                           	opt stack 0
 14665                           tosu	equ	0xFFF
 14666                           tosh	equ	0xFFE
 14667                           tosl	equ	0xFFD
 14668                           pclatu	equ	0xFFB
 14669                           pclath	equ	0xFFA
 14670                           tblptru	equ	0xFF8
 14671                           tblptrh	equ	0xFF7
 14672                           tblptrl	equ	0xFF6
 14673                           tablat	equ	0xFF5
 14674                           prodh	equ	0xFF4
 14675                           prodl	equ	0xFF3
 14676                           intcon	equ	0xFF2
 14677                           intcon2	equ	0xFF1
 14678                           postinc0	equ	0xFEE
 14679                           fsr0h	equ	0xFEA
 14680                           fsr0l	equ	0xFE9
 14681                           wreg	equ	0xFE8
 14682                           fsr1h	equ	0xFE2
 14683                           fsr1l	equ	0xFE1
 14684                           indf2	equ	0xFDF
 14685                           postinc2	equ	0xFDE
 14686                           postdec2	equ	0xFDD
 14687                           plusw2	equ	0xFDB
 14688                           fsr2h	equ	0xFDA
 14689                           fsr2l	equ	0xFD9
 14690                           status	equ	0xFD8
 14691                           
 14692 ;; *************** function i2_UART_buff_put *****************
 14693 ;; Defined at:
 14694 ;;		line 68 in file "UART.c"
 14695 ;; Parameters:    Size  Location     Type
 14696 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 14697 ;;		 -> output_buffer(206), input_buffer(206), 
 14698 ;;  c               1    8[COMRAM] const unsigned char 
 14699 ;; Auto vars:     Size  Location     Type
 14700 ;;		None
 14701 ;; Return value:  Size  Location     Type
 14702 ;;                  1    wreg      void 
 14703 ;; Registers used:
 14704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14705 ;; Tracked objects:
 14706 ;;		On entry : 0/0
 14707 ;;		On exit  : 0/0
 14708 ;;		Unchanged: 0/0
 14709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14710 ;;      Params:         3       0       0       0       0       0       0
 14711 ;;      Locals:         0       0       0       0       0       0       0
 14712 ;;      Temps:          2       0       0       0       0       0       0
 14713 ;;      Totals:         5       0       0       0       0       0       0
 14714 ;;Total ram usage:        5 bytes
 14715 ;; Hardware stack levels used:    1
 14716 ;; Hardware stack levels required when called:    1
 14717 ;; This function calls:
 14718 ;;		i2_UART_buff_modulo_inc
 14719 ;; This function is called by:
 14720 ;;		_EUSART1_Receive_ISR
 14721 ;; This function uses a non-reentrant model
 14722 ;;
 14723                           
 14724                           	psect	text75
 14725  001B1C                     __ptext75:
 14726                           	opt stack 0
 14727  001B1C                     i2_UART_buff_put:
 14728                           	opt stack 21
 14729                           
 14730                           ;UART.c: 69: if (_this->count < 200) {
 14731                           
 14732                           ;incstack = 0
 14733  001B1C  EE20 F0CC          	lfsr	2,204
 14734  001B20  5007               	movf	i2UART_buff_put@_this,w,c
 14735  001B22  26D9               	addwf	fsr2l,f,c
 14736  001B24  5008               	movf	i2UART_buff_put@_this+1,w,c
 14737  001B26  22DA               	addwfc	fsr2h,f,c
 14738  001B28  0E01               	movlw	1
 14739  001B2A  BEDB               	btfsc	plusw2,7,c
 14740  001B2C  D007               	goto	i2l5112
 14741  001B2E  0E01               	movlw	1
 14742  001B30  50DB               	movf	plusw2,w,c
 14743  001B32  E13A               	bnz	i2l5118
 14744  001B34  0EC8               	movlw	200
 14745  001B36  5CDE               	subwf	postinc2,w,c
 14746  001B38  B0D8               	btfsc	status,0,c
 14747  001B3A  D036               	goto	i2l5118
 14748  001B3C                     i2l5112:
 14749                           
 14750                           ;UART.c: 70: _this->buf[_this->head] = c;
 14751  001B3C  EE20 F0C8          	lfsr	2,200
 14752  001B40  5007               	movf	i2UART_buff_put@_this,w,c
 14753  001B42  26D9               	addwf	fsr2l,f,c
 14754  001B44  5008               	movf	i2UART_buff_put@_this+1,w,c
 14755  001B46  22DA               	addwfc	fsr2h,f,c
 14756  001B48  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 14757  001B4C  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 14758  001B50  500A               	movf	??i2_UART_buff_put,w,c
 14759  001B52  2407               	addwf	i2UART_buff_put@_this,w,c
 14760  001B54  6ED9               	movwf	fsr2l,c
 14761  001B56  500B               	movf	??i2_UART_buff_put+1,w,c
 14762  001B58  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 14763  001B5A  6EDA               	movwf	fsr2h,c
 14764  001B5C  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 14765                           
 14766                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
 14767  001B60  EE20 F0C8          	lfsr	2,200
 14768  001B64  5007               	movf	i2UART_buff_put@_this,w,c
 14769  001B66  26D9               	addwf	fsr2l,f,c
 14770  001B68  5008               	movf	i2UART_buff_put@_this+1,w,c
 14771  001B6A  22DA               	addwfc	fsr2h,f,c
 14772  001B6C  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 14773  001B70  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 14774  001B74  0E00               	movlw	0
 14775  001B76  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 14776  001B78  0EC8               	movlw	200
 14777  001B7A  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 14778  001B7C  EC22  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 14779  001B80  EE20 F0C8          	lfsr	2,200
 14780  001B84  5007               	movf	i2UART_buff_put@_this,w,c
 14781  001B86  26D9               	addwf	fsr2l,f,c
 14782  001B88  5008               	movf	i2UART_buff_put@_this+1,w,c
 14783  001B8A  22DA               	addwfc	fsr2h,f,c
 14784  001B8C  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 14785  001B90  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 14786                           
 14787                           ;UART.c: 72: ++_this->count;
 14788  001B94  EE20 F0CC          	lfsr	2,204
 14789  001B98  5007               	movf	i2UART_buff_put@_this,w,c
 14790  001B9A  26D9               	addwf	fsr2l,f,c
 14791  001B9C  5008               	movf	i2UART_buff_put@_this+1,w,c
 14792  001B9E  22DA               	addwfc	fsr2h,f,c
 14793  001BA0  2ADE               	incf	postinc2,f,c
 14794  001BA2  0E00               	movlw	0
 14795  001BA4  22DD               	addwfc	postdec2,f,c
 14796                           
 14797                           ;UART.c: 73: } else {
 14798  001BA6  0012               	return	
 14799  001BA8                     i2l5118:
 14800                           
 14801                           ;UART.c: 74: _this->buf[_this->head] = c;
 14802  001BA8  EE20 F0C8          	lfsr	2,200
 14803  001BAC  5007               	movf	i2UART_buff_put@_this,w,c
 14804  001BAE  26D9               	addwf	fsr2l,f,c
 14805  001BB0  5008               	movf	i2UART_buff_put@_this+1,w,c
 14806  001BB2  22DA               	addwfc	fsr2h,f,c
 14807  001BB4  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 14808  001BB8  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 14809  001BBC  500A               	movf	??i2_UART_buff_put,w,c
 14810  001BBE  2407               	addwf	i2UART_buff_put@_this,w,c
 14811  001BC0  6ED9               	movwf	fsr2l,c
 14812  001BC2  500B               	movf	??i2_UART_buff_put+1,w,c
 14813  001BC4  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 14814  001BC6  6EDA               	movwf	fsr2h,c
 14815  001BC8  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 14816                           
 14817                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
 14818  001BCC  EE20 F0C8          	lfsr	2,200
 14819  001BD0  5007               	movf	i2UART_buff_put@_this,w,c
 14820  001BD2  26D9               	addwf	fsr2l,f,c
 14821  001BD4  5008               	movf	i2UART_buff_put@_this+1,w,c
 14822  001BD6  22DA               	addwfc	fsr2h,f,c
 14823  001BD8  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 14824  001BDC  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 14825  001BE0  0E00               	movlw	0
 14826  001BE2  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 14827  001BE4  0EC8               	movlw	200
 14828  001BE6  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 14829  001BE8  EC22  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 14830  001BEC  EE20 F0C8          	lfsr	2,200
 14831  001BF0  5007               	movf	i2UART_buff_put@_this,w,c
 14832  001BF2  26D9               	addwf	fsr2l,f,c
 14833  001BF4  5008               	movf	i2UART_buff_put@_this+1,w,c
 14834  001BF6  22DA               	addwfc	fsr2h,f,c
 14835  001BF8  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 14836  001BFC  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 14837                           
 14838                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 14839  001C00  EE20 F0CA          	lfsr	2,202
 14840  001C04  5007               	movf	i2UART_buff_put@_this,w,c
 14841  001C06  26D9               	addwf	fsr2l,f,c
 14842  001C08  5008               	movf	i2UART_buff_put@_this+1,w,c
 14843  001C0A  22DA               	addwfc	fsr2h,f,c
 14844  001C0C  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 14845  001C10  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 14846  001C14  0E00               	movlw	0
 14847  001C16  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 14848  001C18  0EC8               	movlw	200
 14849  001C1A  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 14850  001C1C  EC22  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 14851  001C20  EE20 F0CA          	lfsr	2,202
 14852  001C24  5007               	movf	i2UART_buff_put@_this,w,c
 14853  001C26  26D9               	addwf	fsr2l,f,c
 14854  001C28  5008               	movf	i2UART_buff_put@_this+1,w,c
 14855  001C2A  22DA               	addwfc	fsr2h,f,c
 14856  001C2C  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 14857  001C30  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 14858  001C34  0012               	return	
 14859  001C36                     __end_ofi2_UART_buff_put:
 14860                           	opt stack 0
 14861                           tosu	equ	0xFFF
 14862                           tosh	equ	0xFFE
 14863                           tosl	equ	0xFFD
 14864                           pclatu	equ	0xFFB
 14865                           pclath	equ	0xFFA
 14866                           tblptru	equ	0xFF8
 14867                           tblptrh	equ	0xFF7
 14868                           tblptrl	equ	0xFF6
 14869                           tablat	equ	0xFF5
 14870                           prodh	equ	0xFF4
 14871                           prodl	equ	0xFF3
 14872                           intcon	equ	0xFF2
 14873                           intcon2	equ	0xFF1
 14874                           postinc0	equ	0xFEE
 14875                           fsr0h	equ	0xFEA
 14876                           fsr0l	equ	0xFE9
 14877                           wreg	equ	0xFE8
 14878                           fsr1h	equ	0xFE2
 14879                           fsr1l	equ	0xFE1
 14880                           indf2	equ	0xFDF
 14881                           postinc2	equ	0xFDE
 14882                           postdec2	equ	0xFDD
 14883                           plusw2	equ	0xFDB
 14884                           fsr2h	equ	0xFDA
 14885                           fsr2l	equ	0xFD9
 14886                           status	equ	0xFD8
 14887                           
 14888 ;; *************** function i2_UART_buff_modulo_inc *****************
 14889 ;; Defined at:
 14890 ;;		line 106 in file "UART.c"
 14891 ;; Parameters:    Size  Location     Type
 14892 ;;  value           2    0[COMRAM] const unsigned int 
 14893 ;;  modulus         2    2[COMRAM] const unsigned int 
 14894 ;; Auto vars:     Size  Location     Type
 14895 ;;  UART_buff_mo    2    4[COMRAM] unsigned int 
 14896 ;; Return value:  Size  Location     Type
 14897 ;;                  2    0[COMRAM] unsigned int 
 14898 ;; Registers used:
 14899 ;;		wreg, status,2, status,0
 14900 ;; Tracked objects:
 14901 ;;		On entry : 0/0
 14902 ;;		On exit  : 0/0
 14903 ;;		Unchanged: 0/0
 14904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14905 ;;      Params:         4       0       0       0       0       0       0
 14906 ;;      Locals:         2       0       0       0       0       0       0
 14907 ;;      Temps:          0       0       0       0       0       0       0
 14908 ;;      Totals:         6       0       0       0       0       0       0
 14909 ;;Total ram usage:        6 bytes
 14910 ;; Hardware stack levels used:    1
 14911 ;; This function calls:
 14912 ;;		Nothing
 14913 ;; This function is called by:
 14914 ;;		i2_UART_buff_put
 14915 ;;		i2_UART_buff_get
 14916 ;; This function uses a non-reentrant model
 14917 ;;
 14918                           
 14919                           	psect	text76
 14920  002E44                     __ptext76:
 14921                           	opt stack 0
 14922  002E44                     i2_UART_buff_modulo_inc:
 14923                           	opt stack 21
 14924                           
 14925                           ;UART.c: 107: unsigned int my_value = value + 1;
 14926                           
 14927                           ;incstack = 0
 14928  002E44  0E01               	movlw	1
 14929  002E46  2401               	addwf	i2UART_buff_modulo_inc@value,w,c
 14930  002E48  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 14931  002E4A  0E00               	movlw	0
 14932  002E4C  2002               	addwfc	i2UART_buff_modulo_inc@value+1,w,c
 14933  002E4E  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 14934                           
 14935                           ;UART.c: 108: if (my_value >= modulus) {
 14936  002E50  5003               	movf	i2UART_buff_modulo_inc@modulus,w,c
 14937  002E52  5C05               	subwf	i2UART_buff_modulo_inc@my_value,w,c
 14938  002E54  5004               	movf	i2UART_buff_modulo_inc@modulus+1,w,c
 14939  002E56  5806               	subwfb	i2UART_buff_modulo_inc@my_value+1,w,c
 14940  002E58  A0D8               	btfss	status,0,c
 14941  002E5A  D004               	goto	i2l4576
 14942                           
 14943                           ;UART.c: 109: my_value = 0;
 14944  002E5C  0E00               	movlw	0
 14945  002E5E  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 14946  002E60  0E00               	movlw	0
 14947  002E62  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 14948  002E64                     i2l4576:
 14949                           
 14950                           ;UART.c: 110: }
 14951                           ;UART.c: 111: return (my_value);
 14952  002E64  C005  F001         	movff	i2UART_buff_modulo_inc@my_value,?i2_UART_buff_modulo_inc
 14953  002E68  C006  F002         	movff	i2UART_buff_modulo_inc@my_value+1,?i2_UART_buff_modulo_inc+1
 14954  002E6C  0012               	return	
 14955  002E6E                     __end_ofi2_UART_buff_modulo_inc:
 14956                           	opt stack 0
 14957                           tosu	equ	0xFFF
 14958                           tosh	equ	0xFFE
 14959                           tosl	equ	0xFFD
 14960                           pclatu	equ	0xFFB
 14961                           pclath	equ	0xFFA
 14962                           tblptru	equ	0xFF8
 14963                           tblptrh	equ	0xFF7
 14964                           tblptrl	equ	0xFF6
 14965                           tablat	equ	0xFF5
 14966                           prodh	equ	0xFF4
 14967                           prodl	equ	0xFF3
 14968                           intcon	equ	0xFF2
 14969                           intcon2	equ	0xFF1
 14970                           postinc0	equ	0xFEE
 14971                           fsr0h	equ	0xFEA
 14972                           fsr0l	equ	0xFE9
 14973                           wreg	equ	0xFE8
 14974                           fsr1h	equ	0xFE2
 14975                           fsr1l	equ	0xFE1
 14976                           indf2	equ	0xFDF
 14977                           postinc2	equ	0xFDE
 14978                           postdec2	equ	0xFDD
 14979                           plusw2	equ	0xFDB
 14980                           fsr2h	equ	0xFDA
 14981                           fsr2l	equ	0xFD9
 14982                           status	equ	0xFD8
 14983                           
 14984 ;; *************** function _ADC_ISR *****************
 14985 ;; Defined at:
 14986 ;;		line 128 in file "mcc_generated_files/adc.c"
 14987 ;; Parameters:    Size  Location     Type
 14988 ;;		None
 14989 ;; Auto vars:     Size  Location     Type
 14990 ;;		None
 14991 ;; Return value:  Size  Location     Type
 14992 ;;                  1    wreg      void 
 14993 ;; Registers used:
 14994 ;;		None
 14995 ;; Tracked objects:
 14996 ;;		On entry : 0/0
 14997 ;;		On exit  : 0/0
 14998 ;;		Unchanged: 0/0
 14999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15000 ;;      Params:         0       0       0       0       0       0       0
 15001 ;;      Locals:         0       0       0       0       0       0       0
 15002 ;;      Temps:          0       0       0       0       0       0       0
 15003 ;;      Totals:         0       0       0       0       0       0       0
 15004 ;;Total ram usage:        0 bytes
 15005 ;; Hardware stack levels used:    1
 15006 ;; This function calls:
 15007 ;;		Nothing
 15008 ;; This function is called by:
 15009 ;;		_INTERRUPT_InterruptManager
 15010 ;; This function uses a non-reentrant model
 15011 ;;
 15012                           
 15013                           	psect	text77
 15014  003060                     __ptext77:
 15015                           	opt stack 0
 15016  003060                     _ADC_ISR:
 15017                           	opt stack 23
 15018                           
 15019                           ;adc.c: 131: PIR1bits.ADIF = 0;
 15020                           
 15021                           ;incstack = 0
 15022  003060  9C9E               	bcf	3998,6,c	;volatile
 15023  003062  0012               	return		;funcret
 15024  003064                     __end_of_ADC_ISR:
 15025                           	opt stack 0
 15026                           tosu	equ	0xFFF
 15027                           tosh	equ	0xFFE
 15028                           tosl	equ	0xFFD
 15029                           pclatu	equ	0xFFB
 15030                           pclath	equ	0xFFA
 15031                           tblptru	equ	0xFF8
 15032                           tblptrh	equ	0xFF7
 15033                           tblptrl	equ	0xFF6
 15034                           tablat	equ	0xFF5
 15035                           prodh	equ	0xFF4
 15036                           prodl	equ	0xFF3
 15037                           intcon	equ	0xFF2
 15038                           intcon2	equ	0xFF1
 15039                           postinc0	equ	0xFEE
 15040                           fsr0h	equ	0xFEA
 15041                           fsr0l	equ	0xFE9
 15042                           wreg	equ	0xFE8
 15043                           fsr1h	equ	0xFE2
 15044                           fsr1l	equ	0xFE1
 15045                           indf2	equ	0xFDF
 15046                           postinc2	equ	0xFDE
 15047                           postdec2	equ	0xFDD
 15048                           plusw2	equ	0xFDB
 15049                           fsr2h	equ	0xFDA
 15050                           fsr2l	equ	0xFD9
 15051                           status	equ	0xFD8
 15052                           tosu	equ	0xFFF
 15053                           tosh	equ	0xFFE
 15054                           tosl	equ	0xFFD
 15055                           pclatu	equ	0xFFB
 15056                           pclath	equ	0xFFA
 15057                           tblptru	equ	0xFF8
 15058                           tblptrh	equ	0xFF7
 15059                           tblptrl	equ	0xFF6
 15060                           tablat	equ	0xFF5
 15061                           prodh	equ	0xFF4
 15062                           prodl	equ	0xFF3
 15063                           intcon	equ	0xFF2
 15064                           intcon2	equ	0xFF1
 15065                           postinc0	equ	0xFEE
 15066                           fsr0h	equ	0xFEA
 15067                           fsr0l	equ	0xFE9
 15068                           wreg	equ	0xFE8
 15069                           fsr1h	equ	0xFE2
 15070                           fsr1l	equ	0xFE1
 15071                           indf2	equ	0xFDF
 15072                           postinc2	equ	0xFDE
 15073                           postdec2	equ	0xFDD
 15074                           plusw2	equ	0xFDB
 15075                           fsr2h	equ	0xFDA
 15076                           fsr2l	equ	0xFD9
 15077                           status	equ	0xFD8
 15078                           
 15079                           	psect	text78
 15080  000000                     __ptext78:
 15081                           	opt stack 0
 15082                           tosu	equ	0xFFF
 15083                           tosh	equ	0xFFE
 15084                           tosl	equ	0xFFD
 15085                           pclatu	equ	0xFFB
 15086                           pclath	equ	0xFFA
 15087                           tblptru	equ	0xFF8
 15088                           tblptrh	equ	0xFF7
 15089                           tblptrl	equ	0xFF6
 15090                           tablat	equ	0xFF5
 15091                           prodh	equ	0xFF4
 15092                           prodl	equ	0xFF3
 15093                           intcon	equ	0xFF2
 15094                           intcon2	equ	0xFF1
 15095                           postinc0	equ	0xFEE
 15096                           fsr0h	equ	0xFEA
 15097                           fsr0l	equ	0xFE9
 15098                           wreg	equ	0xFE8
 15099                           fsr1h	equ	0xFE2
 15100                           fsr1l	equ	0xFE1
 15101                           indf2	equ	0xFDF
 15102                           postinc2	equ	0xFDE
 15103                           postdec2	equ	0xFDD
 15104                           plusw2	equ	0xFDB
 15105                           fsr2h	equ	0xFDA
 15106                           fsr2l	equ	0xFD9
 15107                           status	equ	0xFD8
 15108                           
 15109                           	psect	rparam
 15110  0000                     tosu	equ	0xFFF
 15111                           tosh	equ	0xFFE
 15112                           tosl	equ	0xFFD
 15113                           pclatu	equ	0xFFB
 15114                           pclath	equ	0xFFA
 15115                           tblptru	equ	0xFF8
 15116                           tblptrh	equ	0xFF7
 15117                           tblptrl	equ	0xFF6
 15118                           tablat	equ	0xFF5
 15119                           prodh	equ	0xFF4
 15120                           prodl	equ	0xFF3
 15121                           intcon	equ	0xFF2
 15122                           intcon2	equ	0xFF1
 15123                           postinc0	equ	0xFEE
 15124                           fsr0h	equ	0xFEA
 15125                           fsr0l	equ	0xFE9
 15126                           wreg	equ	0xFE8
 15127                           fsr1h	equ	0xFE2
 15128                           fsr1l	equ	0xFE1
 15129                           indf2	equ	0xFDF
 15130                           postinc2	equ	0xFDE
 15131                           postdec2	equ	0xFDD
 15132                           plusw2	equ	0xFDB
 15133                           fsr2h	equ	0xFDA
 15134                           fsr2l	equ	0xFD9
 15135                           status	equ	0xFD8
 15136                           
 15137                           	psect	temp
 15138  000045                     btemp:
 15139                           	opt stack 0
 15140  000045                     	ds	1
 15141  0000                     int$flags	set	btemp
 15142                           tosu	equ	0xFFF
 15143                           tosh	equ	0xFFE
 15144                           tosl	equ	0xFFD
 15145                           pclatu	equ	0xFFB
 15146                           pclath	equ	0xFFA
 15147                           tblptru	equ	0xFF8
 15148                           tblptrh	equ	0xFF7
 15149                           tblptrl	equ	0xFF6
 15150                           tablat	equ	0xFF5
 15151                           prodh	equ	0xFF4
 15152                           prodl	equ	0xFF3
 15153                           intcon	equ	0xFF2
 15154                           intcon2	equ	0xFF1
 15155                           postinc0	equ	0xFEE
 15156                           fsr0h	equ	0xFEA
 15157                           fsr0l	equ	0xFE9
 15158                           wreg	equ	0xFE8
 15159                           fsr1h	equ	0xFE2
 15160                           fsr1l	equ	0xFE1
 15161                           indf2	equ	0xFDF
 15162                           postinc2	equ	0xFDE
 15163                           postdec2	equ	0xFDD
 15164                           plusw2	equ	0xFDB
 15165                           fsr2h	equ	0xFDA
 15166                           fsr2l	equ	0xFD9
 15167                           status	equ	0xFD8


Data Sizes:
    Strings     28
    Constant    768
    Data        1
    BSS         1045
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      68
    BANK0           160     10     160
    BANK1           256     26      83
    BANK2           256      0     206
    BANK3           256      0     200
    BANK4           256      0     206
    BANK5           256      0     206

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_tr_queue.pTrFlag	PTR enum E7739 size(2) Largest target is 0
		 -> oledPutChar@status(COMRAM[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK1[1]), 
		 -> LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    memset@p1	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    memset@p	PTR unsigned char  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> SetData@s(COMRAM[20]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> SetData@s(COMRAM[20]), 

    sp__memmove	PTR void  size(2) Largest target is 9
		 -> oledPutChar@bytes(COMRAM[9]), 

    UART_buff_peek@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> input_buffer(BANK4[206]), 

    UART_buff_size@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_get@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_put@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_init@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    crcBufS_get@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    crcBufS_status_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    crcBufS_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    sp__memset	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    FastTransfer_buffer_flush@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), 

    FastTransfer_buffer_put@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), 

    CRC8@data	PTR const unsigned char  size(2) Largest target is 206
		 -> CRCcheck@arrayHolder(BANK0[3]), receiveData@holder_2455(BANK1[3]), receiveData@holder(BANK1[3]), rx_buffer(BANK3[200]), 
		 -> ring_buffer(BANK2[206]), NULL(NULL[0]), 

    sendStructAddress	PTR unsigned char  size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), NULL(NULL[0]), 

    begin@stufftoreceive	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_get(), 

    serial_read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_get(), 

    begin@stuffpeek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_peek(), 

    serial_peek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_peek(), 

    begin@stuffavailable	PTR FTN()int  size(2) Largest target is 2
		 -> Receive_available(), 

    serial_available	PTR FTN()int  size(2) Largest target is 2
		 -> Absolute function(), Receive_available(), 

    begin@stufftosend	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Send_put(), 

    serial_write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), Send_put(), 

    begin@ptr	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK1[40]), 

    receiveArrayAddress	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK1[40]), NULL(NULL[0]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E7739 size(2) Largest target is 1
		 -> oledPutChar@status(COMRAM[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK1[1]), 
		 -> LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E7739 size(2) Largest target is 1
		 -> oledPutChar@status(COMRAM[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK1[1]), 
		 -> LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    F7851.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWrite@pflag	PTR enum E7739 size(2) Largest target is 1
		 -> oledPutChar@status(COMRAM[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK1[1]), 
		 -> LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    F7846.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDblinkRate@b(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), LEDBsetBrightness@b(BANK0[2]), 
		 -> I2C1_ISR@i2c_address(COMRAM[2]), NULL(NULL[0]), 

    S21$pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E7739 size(2) Largest target is 1
		 -> oledPutChar@status(COMRAM[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK1[1]), 
		 -> LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    S33$pTrFlag	PTR enum E7739 size(2) Largest target is 1
		 -> oledPutChar@status(COMRAM[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK1[1]), 
		 -> LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E7739 size(2) Largest target is 1
		 -> oledPutChar@status(COMRAM[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK1[1]), 
		 -> LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    S33$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), NULL(NULL[0]), 

    S44$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    S44$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 


Critical Paths under _main in COMRAM

    _main->___ftmul
    _updateComms->_handleIndicators
    _respondECU->_ToSend
    _respondECU->_sendData
    _sendData->_FastTransfer_buffer_flush
    _sendData->_Send_put
    _FastTransfer_buffer_flush->_memset
    _buttonsCollector->_GetButtonState
    _ToSend->_buttonsCollector
    _FastTransfer_buffer_put->_FastTransfer_buffer_modulo_inc
    _receiveData->_Send_put
    _Send_put->_UART_buff_get
    _Send_put->_UART_buff_put
    _UART_buff_put->_UART_buff_modulo_inc
    _Receive_peek->_UART_buff_peek
    _CRCcheck->_crcBufS_get
    _Receive_get->_UART_buff_get
    _UART_buff_get->_UART_buff_modulo_inc
    _Receive_available->_UART_buff_size
    _handleIndicators->_SetLEDOut
    _SetLEDOut->_Off_Led
    _SetLEDOut->_setLED
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    _begin->___awdiv
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART1_Initialize->_UART_buff_init
    _UART_buff_init->_memset
    _LEDwriteDisplay->_I2C1_MasterWrite
    _LEDsetValue->___ftmul
    _LEDsetBar->___awdiv
    _LEDbegin->_I2C1_MasterWrite
    _LEDblinkRate->_I2C1_MasterWrite
    _LEDBsetBrightness->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _TMR2_ISR->_TMR2_CallBack
    _TMR0_ISR->_ReadButtonState
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Transmit_ISR->i2_UART_buff_get
    i2_UART_buff_get->i2_UART_buff_modulo_inc
    _EUSART1_Receive_ISR->i2_UART_buff_put
    i2_UART_buff_put->i2_UART_buff_modulo_inc

Critical Paths under _main in BANK0

    _main->_LEDsetValue
    _respondECU->_ToSend
    _receiveData->_CRCcheck
    ___fttol->___ftmul
    _LEDsetValue->___ftmul
    _LEDbegin->_LEDBsetBrightness
    _LEDbegin->_LEDblinkRate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LEDwriteDisplay
    _updateComms->_receiveData
    _SYSTEM_Initialize->_begin
    _LEDsetValue->_LEDsetBar

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   49027
                                             24 BANK1      2     2      0
                           _LEDbegin
                        _LEDsetValue
                    _LEDwriteDisplay
                  _SYSTEM_Initialize
                            ___ftmul
                            ___fttol
                           ___lwtoft
                        _updateComms
 ---------------------------------------------------------------------------------
 (1) _updateComms                                          0     0      0   21411
                        _TBbarGraphs
                   _handleIndicators
                        _receiveData
                         _respondECU
 ---------------------------------------------------------------------------------
 (2) _respondECU                                           0     0      0    7986
                              _Delay
                             _ToSend
                   _buttonsCollector
                           _sendData
 ---------------------------------------------------------------------------------
 (3) _sendData                                             5     5      0    5704
                                             38 COMRAM     5     5      0
                   Absolute function *
                               _CRC8
          _FastTransfer_buffer_flush
                           _Send_put *
                        _crcBufS_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_put                                          7     2      5     742
                                             26 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_flush                            4     0      4    1139
                                             34 COMRAM     4     0      4
                             _memset
 ---------------------------------------------------------------------------------
 (3) _buttonsCollector                                     9     7      2     309
                                             32 COMRAM     9     7      2
                     _GetButtonState
 ---------------------------------------------------------------------------------
 (4) _GetButtonState                                       6     4      2     108
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _ToSend                                               3     1      2    1751
                                             41 COMRAM     2     0      2
                                              0 BANK0      1     1      0
            _FastTransfer_buffer_put
                   _buttonsCollector (ARG)
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_put                              7     2      5    1535
                                             32 COMRAM     7     2      5
     _FastTransfer_buffer_modulo_inc
 ---------------------------------------------------------------------------------
 (5) _FastTransfer_buffer_modulo_inc                       6     2      4     746
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay                                                5     3      2     222
                                             26 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _receiveData                                         18    18      0   10715
                                              0 BANK1     18    18      0
                   Absolute function *
                               _CRC8
                           _CRCcheck
                  _Receive_available *
                        _Receive_get *
                       _Receive_peek *
                           _Send_put *
 ---------------------------------------------------------------------------------
 (4) _Send_put                                             1     1      0    2614
                                             37 COMRAM     1     1      0
                      _UART_buff_get
                      _UART_buff_put
 ---------------------------------------------------------------------------------
 (5) _UART_buff_put                                        5     2      3    1418
                                             32 COMRAM     5     2      3
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (3) _Receive_peek                                         0     0      0     139
                     _UART_buff_peek
 ---------------------------------------------------------------------------------
 (4) _UART_buff_peek                                       4     2      2     139
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _CRCcheck                                             7     7      0    5114
                                              0 BANK0      7     7      0
                   Absolute function *
                               _CRC8
                  _Receive_available *
                        _Receive_get *
                        _crcBufS_get
                 _crcBufS_status_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_status_put                                  10     6      4     908
                                             26 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (4) _crcBufS_get                                         12     8      4    1404
                                             26 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (3) _Receive_get                                          0     0      0    1165
                      _UART_buff_get
 ---------------------------------------------------------------------------------
 (5) _UART_buff_get                                        5     3      2    1165
                                             32 COMRAM     5     3      2
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (6) _UART_buff_modulo_inc                                 6     2      4     746
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Receive_available                                    2     0      2     150
                                             28 COMRAM     2     0      2
                     _UART_buff_size
 ---------------------------------------------------------------------------------
 (4) _UART_buff_size                                       2     0      2     150
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _CRC8                                                 7     4      3    1014
                                             26 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _handleIndicators                                     7     5      2    2494
                                             36 COMRAM     7     5      2
                          _SetLEDOut
 ---------------------------------------------------------------------------------
 (3) _SetLEDOut                                            6     2      4    2191
                                             30 COMRAM     6     2      4
                            _Off_Led
                             _setLED
 ---------------------------------------------------------------------------------
 (4) _setLED                                               4     2      2     493
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _Off_Led                                              4     2      2     955
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _TBbarGraphs                                          4     0      4     216
                                             26 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2529
                                             34 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     525
                                              0 BANK1     15    11      4
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3254
                                             37 COMRAM     6     0      6
                                              0 BANK0      9     9      0
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2344
                                             26 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2894
                     _ADC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                              _begin
 ---------------------------------------------------------------------------------
 (2) _begin                                               13     0     13    1771
                                              0 BANK1     13     0     13
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     108
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2     108
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0    1015
                     _UART_buff_init
 ---------------------------------------------------------------------------------
 (3) _UART_buff_init                                       2     0      2    1015
                                             34 COMRAM     2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6     830
                                             26 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDwriteDisplay                                     24    24      0    4527
                                              0 BANK1     24    24      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _LEDsetValue                                          7     3      4    2539
                                              9 BANK0      1     1      0
                                             16 BANK1      6     2      4
                          _LEDsetBar
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _LEDsetBar                                           24    20      4    1940
                                             34 COMRAM     8     4      4
                                              0 BANK1     16    16      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     907
                                             26 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LEDbegin                                             7     7      0   11345
                                              0 BANK1      7     7      0
                   _I2C1_MasterWrite
                  _LEDBsetBrightness
                       _LEDblinkRate
 ---------------------------------------------------------------------------------
 (2) _LEDblinkRate                                         8     5      3    3841
                                              0 BANK0      8     5      3
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _LEDBsetBrightness                                    8     5      3    3841
                                              0 BANK0      8     5      3
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _I2C1_MasterWrite                                     7     0      7    3299
                                             35 COMRAM     7     0      7
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterWriteTRBBuild                             9     2      7     494
                                             26 COMRAM     9     2      7
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterTRBInsert                                 6     2      4     494
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0    1748
                                             12 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0     178
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR2_CallBack                                        4     4      0     178
                                              0 COMRAM     4     4      0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             2     2      0     330
                                              4 COMRAM     2     2      0
                    _ReadButtonState
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR0_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ReadButtonState                                      4     2      2     262
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _I2C1_ISR                                             2     2      0      31
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (9) _I2C1_Stop                                            3     3      0      31
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0     528
                    i2_UART_buff_get
                   i2_UART_buff_size
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_size                                     2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_get                                      5     3      2     480
                                              6 COMRAM     5     3      2
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  1     1      0     681
                                             11 COMRAM     1     1      0
                    i2_UART_buff_put
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_put                                      5     2      3     658
                                              6 COMRAM     5     2      3
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (10) i2_UART_buff_modulo_inc                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LEDbegin
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
     _LEDBsetBrightness
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
     _LEDblinkRate
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
   _LEDsetValue
     _LEDsetBar
       ___awdiv
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   _LEDwriteDisplay
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _UART_buff_init
         _memset
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _begin
       ___awdiv
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _updateComms
     _TBbarGraphs
     _handleIndicators
       _SetLEDOut
         _Off_Led
         _setLED
     _receiveData
       Absolute function(Fake) *
       _CRC8 *
       _CRCcheck *
         Absolute function(Fake) *
         _CRC8 *
         _Receive_available *
           _UART_buff_size
         _Receive_get *
           _UART_buff_get
             _UART_buff_modulo_inc
         _crcBufS_get *
         _crcBufS_status_put *
       _Receive_available *
         _UART_buff_size
       _Receive_get *
         _UART_buff_get
           _UART_buff_modulo_inc
       _Receive_peek *
         _UART_buff_peek
       _Send_put *
         _UART_buff_get
           _UART_buff_modulo_inc
         _UART_buff_put
           _UART_buff_modulo_inc
     _respondECU
       _Delay
       _ToSend
         _FastTransfer_buffer_put
           _FastTransfer_buffer_modulo_inc
         _buttonsCollector (ARG)
           _GetButtonState
       _buttonsCollector
         _GetButtonState
       _sendData
         Absolute function(Fake) *
         _CRC8 *
         _FastTransfer_buffer_flush *
           _memset
         _Send_put *
           _UART_buff_get
             _UART_buff_modulo_inc
           _UART_buff_put
             _UART_buff_modulo_inc
         _crcBufS_put *

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
     i2_UART_buff_put
       i2_UART_buff_modulo_inc
   _EUSART1_Transmit_ISR
     i2_UART_buff_get
       i2_UART_buff_modulo_inc
     i2_UART_buff_size
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR
     _ReadButtonState
     _TMR0_CallBack
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      CE      15       80.5%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      CE      13       80.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      CE       8       80.5%
BITBANK1           100      0       0       5        0.0%
BANK1              100     1A      53       6       32.4%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      A      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      44       1       72.3%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     469       9        0.0%
DATA                 0      0     469      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat May 21 12:19:10 2016

       __end_of_FastTransfer_buffer_flush 2A0A                    i2_UART_buff_modulo_inc 2E44  
        __end_of_TMR2_SetInterruptHandler 3050                                         _i 00CD  
                                       _k 00CF                              _rx_array_inx 003E  
                            ___awdiv@sign 0020                  LEDBsetBrightness@timeOut 00F9  
                              Off_Led@led 001B                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                                       l703 07EE  
                                     l624 23F0                                       l609 2D4E  
                                     l629 246C                                       l934 2846  
                                     l942 299E                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                         __end_of_ADC_ISR 3064      FastTransfer_buffer_flush@clearBuffer 0025  
                         _TMR2_Initialize 2EDE                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
                             _TBbarGraphs 2FEC             i2UART_buff_modulo_inc@modulus 0003  
                            __CFG_LVP$OFF 000000                          __end_of_I2C1_ISR 10AC  
                                    l1013 2B9C                                      l1127 1536  
                                    l1172 26BE                                      l1533 23A0  
                                    l6002 2E10                                      l6012 2DDE  
                                    l6110 2102                                      l6102 20D2  
                                    l6022 1A8E                                      l6008 2DCE  
                                    l6016 1A22                                      l7010 236E  
                                    l7002 2330                                      l6122 214A  
                                    l6114 211A                                      l6106 20EA  
                                    l6210 1ED8                                      l7012 238C  
                                    l7004 233A                                      l6300 0C1A  
                                    l6140 2B70                                      l6036 26BA  
                                    l6070 22EC                                      l7014 2396  
                                    l7006 2358                                      l6118 2132  
                                    l6072 22F8                                      l6128 2162  
                                    l6080 219C                                      l6066 22CC  
                                    l7202 24D8                                      l6090 220A  
                                    l6082 21B2                                      l6330 0CA4  
                                    l6322 0C82                                      l6314 0C60  
                                    l6146 2B86                                      l6154 2BA2  
                                    l6226 208A                                      l6218 2004  
                                    l6076 2308                                      l7204 24E0  
                                    l7220 23E0                                      l6084 21C8  
                                    l6308 0C3C                                      l6404 0E00  
                                    l6156 2BA8                                      l6254 2B5C  
                                    l7302 19AA                                      l6086 21DE  
                                    l6094 2220                                      l6270 0B90  
                                    l6430 16C4                                      l7232 243A  
                                    l7224 23FA                                      l7304 19C8  
                                    l6088 21F4                                      l6352 0D0C  
                                    l6344 0CEA                                      l6336 0CC8  
                                    l6264 2D3A                                      l6176 129A  
                                    l6440 1748                                      l6432 16DE  
                    receiveData@crcHolder 0145                                      l6530 2768  
                                    l7234 2450                                      l7322 19F8  
                                    l7242 18F4                                      l6194 1E4A  
                                    l6418 2960                                      l6442 174C  
                                    l6434 16F8                                      l6700 25F6  
                                    l7236 2464                                      l7228 2410  
                                    l7244 1912                                      l7412 1572  
                                    l6380 0D98                                      l6292 0BF8  
                                    l6452 13DA                                      l6436 1714  
                                    l6428 16AA                                      l7182 248A  
                                    l6542 278E                                      l7262 1942  
                                    l7430 1604                                      l6374 0D74  
                                    l6366 0D52                                      l6358 0D30  
                                    l6286 0BD4                                      l6278 0BB2  
                                    l6198 1E54                                      l6462 149C  
                                    l6454 1402                                      l6446 177E  
                                    l6438 171E                                      l7184 24A8  
                                    l6544 2796                                      l6536 2778  
                                    l7264 194A                                      l7440 1634  
                                    l6480 1526                                      l6730 2544  
                                    l6562 27CE                                      l6554 27B6  
                                    l6546 279A                                      l7370 1810  
                                    l7442 1644                                      l7434 1618  
                                    l6466 14B2                                      l6810 0294  
                                    l7514 1E34                                      l7506 1D6E  
                                    l6732 2562                                      l6724 2526  
                                    l7364 17DE                                      l7444 164E  
                                    l6396 0DDC                                      l6388 0DBA  
                                    l6476 1506                                      l6484 152E  
                                    l6900 06F4                                      l6718 2626  
                                    l6750 2592                                      l6558 27C0  
                                    l6902 070E                                      l6814 02C6  
                                    l6680 09AE                                      l6664 0798  
                                    l7384 1852                                      l7448 166A  
                                    l6904 075C                                      l6832 0428  
                                    l6666 07AE                                      l7394 1884  
                                    l6906 0778                                      l6850 04E2  
                                    l6834 042E                                      l6826 038A  
                                    l6818 02EE                                      l6914 0784  
                                    l6762 0132                                      l6692 25BC  
                                    l6684 0A8A                                      l6676 08F0  
                                    l7388 1868                                      l6860 0564  
                                    l6852 04FC                                      l6836 0442  
                                    l6780 01F2                                      l7398 189A  
                                    l6862 057E                                      l6854 0516  
                                    l6782 01F8                                      l6758 0104  
                                    l6766 0136                                      l6790 0232  
                                    l6864 05CC                                      l6856 0530  
                                    l6698 25D8                                      l6938 280A  
                                    l5994 2E3A                                      l6890 0672  
                                    l6858 054A                                      l6866 05E8  
                                    l6778 01DA                                      l6892 068C  
                                    l6876 05F4                                      l6796 023E  
                                    l6894 06A6                                      l6798 0264  
                                    l6896 06C0                                      l6898 06DA  
                                    l6998 2322                                      STR_1 7FE3  
                                    STR_2 7FFC                                      STR_3 7FF6  
                                    STR_4 7FEE                                      _CRC8 2B6A  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      u6310 264E  
                                    u6400 1FE4                                      u7114 091E  
                                    u7115 0916                                      u7124 0942  
                                    u7060 07E6                                      u7125 093A  
                                    u6421 1298                                      u7144 09DA  
                                    u7145 09D2                                      u7250 251C  
                                    u7154 0A0E                                      u7155 0A06  
                                    i2l60 0E74                                      u7084 0814  
                                    u8220 23D6                                      u7085 080C  
                                    u7190 25B2                                      u7174 0AB8  
                                    u7094 088C                                      u6710 299E  
                                    i2l71 0F28                                      i2l63 0EEA  
                                    u7175 0AB0                                      u7095 0884  
                                    i2l72 0F38                                      u7184 0B2A  
                                    u7408 0176                                      u7328 00DE  
                                    u6704 2980                                      i2l65 0EF2  
                                    u7185 0B22                                      u7409 018A  
                                    u7329 00F2                                      u6705 297A  
                                    i2l90 1016                                      i2l82 0FB8  
                                    i2l66 0EFA                                      u7418 0190  
                                    u7419 01A4                                      i2l76 0FA4  
                                    u8260 2438                                      u7508 0268  
                                    u7428 01AA                                      u7348 010E  
                                    u7509 027E                                      u7429 01BE  
                                    u7349 0122                                      i2l94 1048  
                                    i2l86 0FE8                                      u7800 27EA  
                                    u6808 13DE                                      u7528 0298  
                                    u7448 01DE                                      u7368 013A  
                                    u6728 1694                                      i2l89 1004  
                                    u8521 154E                                      u6809 13F2  
                                    u7561 032E                                      u7529 02AC  
                                    u7369 014E                                      u7618 04CC  
                                    u7538 02CA                                      u6738 16AE  
                                    u7539 02DE                                      u8540 1598  
                                    u6828 1406                                      u7628 04E6  
                                    u7388 0158                                      u6748 16C8  
                                    u8461 17C0                                      u6829 141A  
                                    u7389 016C                                      u7830 2846  
                                    u6838 1422                                      u7718 065C  
                                    u7638 0500                                      u6758 16E2  
                                    u6839 1436                                      u7824 2828  
                                    u6848 143E                                      u7728 0676  
                                    u7648 051A                                      u7488 0242  
                                    u6768 16FC                                      u8481 17F2  
                                    u8545 158E                                      u7825 2822  
                                    u6849 1452                                      u7489 0256  
                                    u6858 145A                                      u7738 0690  
                                    u7658 0534                                      u6778 1722  
                                    u6859 146E                                      u7748 06AA  
                                    u7668 054E                                      u7758 06C4  
                                    u7678 0568                                      u6798 1768  
                                    u8750 1D82                                      u7768 06DE  
                                    u7688 0582                                      u8760 1E32  
                                    u7778 06F8                                      u7698 05D0  
                                    u7788 0712                                      u7798 0760  
                                    u8897 2D40                                      _TMR2 000FBC  
                                    _WPUB 000F61                                      _Buff 00F2  
                                    _main 1D4C                              ___ftpack@arg 001B  
                            ___ftpack@exp 001E                           _TMR0_StartTimer 305C  
                                    _time 00DD                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                  ??_I2C1_MasterTRBInsert 001F                                      btemp 0045  
                           __CFG_BORV$190 000000                                      pclat 000FFA  
                                    prodh 000FF4                                      prodl 000FF3  
         __end_of_FastTransfer_buffer_put 13DA                                      start 00D0  
                           __CFG_IESO$OFF 000000                              ___ftmul@cntr 00FB  
                            ___param_bank 000010                              ___ftmul@sign 00FC  
                         __end_of_Off_Led 219A            I2C1_MasterWriteTRBBuild@length 001F  
          i2UART_buff_modulo_inc@my_value 0005                          _handleIndicators 27D8  
                            ___fttol@exp1 0147                        __size_of_LEDsetBar 0406  
                            ___fttol@lval 0143                                     ?_CRC8 001B  
                 __end_of_TMR0_Initialize 2F3C                                _i2c1_state 0038  
                        __end_of_CRCcheck 1538            __size_of_OSCILLATOR_Initialize 000E  
               I2C1_MasterTRBInsert@count 0020             __end_of_OSCILLATOR_Initialize 303A  
               I2C1_MasterTRBInsert@pflag 001D                          LEDbegin@i2c_addr 013E  
                      crcBufS_put@address 001D                          __end_of_LEDbegin 2506  
                                   ?_main 0001                           __end_of___awdiv 27D8  
                       __end_of_I2C1_Stop 2C7E                           __end_of___ftmul 18D8  
                                   _T0CON 000FD5                           ___awdiv@divisor 001D  
                         __end_of___fttol 167C                                     _T2CON 000FBA  
                                   _LATA3 007C4B                                     _LATC1 007C59  
                                   _LATA6 007C4E                                     _LATA7 007C4F  
                                   _LATE0 007C68                                     _LATE1 007C69  
                                   _LATE2 007C6A                            __CFG_DEBUG$OFF 000000  
                                   i2l330 0066                                     i2l332 0072  
                                   i2l340 0094                                     i2l502 1196  
                                   i2l334 007E                                     i2l326 004E  
                                   i2l336 008A                                     i2l328 005A  
                                   i2l505 11A2                                     i2l460 123C  
                                   i2l471 10DE                                     i2l480 1102  
                                   i2l474 10EA                                     i2l483 110E  
                                   i2l467 10D2                                     i2l493 1172  
                                   i2l477 10F6                                     i2l496 117E  
                                   i2l489 1166                                     i2l499 118A  
                         ___awdiv@counter 001F                                     _TMR0H 000FD7  
                                   _TMR0L 000FD6                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                                   _Delay 2D30              __end_of_I2C1_BusCollisionISR 3068  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                       ?_buttonsCollector 0021                      _EUSART1_Transmit_ISR 2D64  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                         ??_I2C1_Initialize 001B  
                        __end_of_TMR0_ISR 2A6A                          __end_of_TMR2_ISR 3058  
                           __CFG_WRTB$OFF 000000                              ?_LEDsetValue 0149  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                                   _begin 2A6A                            __CFG_EBTRB$OFF 000000  
                                   _brake 00C7                        ??_buttonsCollector 0023  
                                   _group 002C                        __CFG_MCLRE$EXTMCLR 000000  
                           ___ftpack@sign 001F                                     pclath 000FFA  
                                   tablat 000FF5                             ??_Receive_get 0026  
                    __size_of_crcBufS_get 00E2                                     plusw2 000FDB  
                          begin@stuffpeek 0144                      __size_of_crcBufS_put 00D8  
                                   status 000FD8                            __CFG_HFOFST$ON 000000  
                         _TMR2_StartTimer 3058                              ?_receiveData 0001  
                          SetLEDOut@state 0021                         ??_ReadButtonState 0003  
                          __CFG_PBADEN$ON 000000           I2C1_MasterWriteTRBBuild@address 0020  
                            __end_of_CRC8 2BB4                           CRCcheck@SentCRC 00F4  
                         __initialization 2850                     I2C1_MasterWrite@pdata 0024  
                   I2C1_MasterWrite@pflag 0029                __end_of_EUSART1_Initialize 2CF6  
                            __end_of_main 1E40                                ToSend@what 002A  
                                  ??_CRC8 001E                             ?_LEDblinkRate 00F4  
                 __end_of_TMR2_Initialize 2F00                                 ??_ADC_ISR 0001  
             ?_INTERRUPT_InterruptManager 0001                          __end_of_OledFont 7FE3  
                             _i2c1_object 00B8                  _TMR2_SetInterruptHandler 3046  
                                  ??_main 002C                             ___fttol@sign1 0142  
                           __activetblptr 000002                          __end_of_Send_put 2DC4  
               __size_ofi2_UART_buff_size 0016                                    ?_Delay 001B  
                   ?_EUSART1_Transmit_ISR 0001             FastTransfer_buffer_put@towhat 0024  
                           ?_Receive_peek 0001                                    ?_begin 0139  
                 __end_of_TMR0_StartTimer 3060                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                        ___awdiv@dividend 001B                                    _ANSELA 000F38  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                                  _ANSELD 000F3B                                    _ANSELE 000F3C  
                        __end_of___ftpack 23C0                         __end_of_LEDsetBar 0B8E  
                         i2_UART_buff_get 26C2                                    _RC1STA 000FAB  
                                  i2l1203 2F62                                    i2l1172 2750  
                         i2_UART_buff_put 1B1C                            __CFG_WDTEN$OFF 000000  
                                  i2l5112 1B3C                                    i2l5132 274C  
                                  Delay@x 001E                                    i2l5118 1BA8  
             UART_buff_modulo_inc@modulus 001D                                    i2l5308 2D8E  
                                  i2l4630 1C6C                                    i2l4710 111A  
                                  i2l4640 1CEE                                    i2l4632 1C86  
                                  i2l4712 1150                                    i2l4704 10B6  
                                  i2l7114 0FCA                                    i2l7106 0FB2  
                                  i2l4634 1CA0                                    i2l4626 1C38  
                                  i2l5282 2A2A                                    i2l4722 1200  
                                  i2l7140 1026                                    i2l7124 0FF0  
                                  i2l4636 1CBA                                    i2l4628 1C52  
                                  i2l4644 1D08                                    i2l4716 11AE  
                                  i2l4724 1230                                    i2l7054 0ECC  
                                  i2l4638 1CD4                                    i2l5278 2A1A  
                                  i2l4726 124C                                    i2l4718 11E4  
                                  i2l4576 2E64                                    i2l6600 2F8C  
                                  i2l7152 104E                                    i2l7136 101E  
                                  i2l7072 0F22                                    i2l5296 2A66  
                                  i2l5288 2A3C                                    i2l7154 1052  
                                  i2l7066 0F0A                                    i2l7162 1066  
                                  i2l7156 105A                                    i2l7086 0F66  
                          _GetButtonState 2E6E                                    i2l6592 2C78  
                                  _RCREG1 000FAE                          __end_of___lwtoft 2EDE  
                                  _OSCCON 000FD3                                    _SPBRG1 000FAF  
                                  _TX1STA 000FAC                                    _TXREG1 000FAD  
                               ??_Off_Led 001D                        __size_of_SetLEDOut 02AA  
                       ?_I2C1_MasterWrite 0024                            __CFG_XINST$OFF 000000  
                                  _ToSend 2F00                        ??_I2C1_MasterWrite 002B  
                     __end_of_Receive_get 302C                          crcBufS_get@_this 001B  
             ??_FastTransfer_buffer_flush 0027                            _p_i2c1_current 00D1  
                           _output_buffer 0500                          crcBufS_get@space 001E  
                               ??___awdiv 001F                                 CRC8@tempI 0020  
                          __CFG_STVREN$ON 000000                                 ??___ftmul 00F4  
                               ??___fttol 013D                            ??_LEDblinkRate 002B  
              ??_I2C1_MasterWriteTRBBuild 0022                          ?_TMR0_Initialize 0001  
                                  _setLED 219A                                    _memset 2DC4  
                               ?_I2C1_ISR 0001                                    clear_0 2856  
                                  clear_1 2862                                    clear_2 286E  
                                  clear_3 287A                                    clear_4 2886  
                                  clear_5 2892                                    clear_6 289E  
                        ___awdiv@quotient 0021                                    _rx_len 003F  
                        __end_of_sendData 17AC                     ___ftmul@f3_as_product 00F8  
                            __pdataCOMRAM 0044                             Send_put@_data 0026  
                            __mediumconst 7CE2                            ??_Receive_peek 001F  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8          __size_of_FastTransfer_buffer_put 0168  
            __end_of_UART_buff_modulo_inc 2E44                     __end_of_TMR0_CallBack 3046  
                 __end_of_TMR2_StartTimer 305C  TMR2_SetInterruptHandler@InterruptHandler 001B  
                  __end_of_GetButtonState 2E96             I2C1_MasterWriteTRBBuild@pdata 001D  
                      LEDblinkRate@status 00FB             __size_of_INTERRUPT_Initialize 0012  
                         SetLEDOut@lednum 001F                         _SYSTEM_Initialize 28C4  
                              __accesstop 0060                   __end_of__initialization 28B6  
                               ?_CRCcheck 0001                     __end_of_TMR2_CallBack 1272  
                      ?_SYSTEM_Initialize 0001                                 ?_LEDbegin 0001  
                           ___rparam_used 000001                   ?i2_UART_buff_modulo_inc 0001  
                          _i2c1_trb_count 0039                              ?_updateComms 0001  
                            TBbarGraphs@b 001D                              TBbarGraphs@t 001B  
                           __end_of_Delay 2D64                                ___ftmul@f1 0026  
                              ___ftmul@f2 0029                     _I2C1_FunctionComplete 2F78  
                    _I2C1_BusCollisionISR 3066                                ___fttol@f1 0139  
                  LEDwriteDisplay@timeOut 014E                            __pcstackCOMRAM 0001  
                  I2C1_MasterWrite@length 0026                        _crcBufS_status_put 1FFA  
                     ??_SYSTEM_Initialize 0025                          crcBufS_put@_this 001B  
                           __end_of_begin 2AC8                                 ?_TMR0_ISR 0001  
                               ?_TMR2_ISR 0001    __end_of_FastTransfer_buffer_modulo_inc 2E1A  
 __size_of_FastTransfer_buffer_modulo_inc 002A            _FastTransfer_buffer_modulo_inc 2DF0  
                              ??_I2C1_ISR 0004                          ?_TMR2_Initialize 0001  
            FastTransfer_buffer_put@_this 0021                               ToSend@where 00F4  
                              ___lwtoft@c 0023                        UART_buff_get@_this 0021  
                     ?_crcBufS_status_put 001B                     __end_of_UART_buff_get 26C2  
                  ??_EUSART1_Transmit_ISR 000C                     __end_of_UART_buff_put 1B1C  
                       __end_of_SetLEDOut 0E38                     TMR0_ISR@CountCallBack 00C1  
                                 ??_Delay 001D                            LEDbegin@status 013F  
                 __end_ofi2_UART_buff_get 2754                   __end_ofi2_UART_buff_put 1C36  
                            ?_TBbarGraphs 001B               __end_of_EUSART1_Receive_ISR 2F78  
               _FastTransfer_buffer_flush 29A8                                   CRC8@crc 0021  
                                 CRC8@len 001D                                   CRC8@sum 001E  
                                 ??_begin 0023                          ?_TMR0_StartTimer 0001  
                         ?_GetButtonState 001B                 __end_of_SYSTEM_Initialize 2938  
                __end_of_handleIndicators 2850                    receiveData@holder_2455 0142  
                     _addressErrorCounter 00C3                      __size_of_LEDsetValue 00AE  
                              __pbssBANK0 0060                                __pbssBANK1 0100  
                              __pbssBANK2 0200                                __pbssBANK3 0300  
                              __pbssBANK4 0400                                __pbssBANK5 0500  
                         __CFG_PLLCFG$OFF 000000                               _Receive_get 301E  
                              ??_CRCcheck 0027                      ??_crcBufS_status_put 001F  
          __end_ofi2_UART_buff_modulo_inc 2E6E                                __pnvCOMRAM 0042  
                       begin@givenAddress 013C                   __size_of_UART_buff_init 001E  
                 __size_of_UART_buff_peek 0024                                ??_LEDbegin 002B  
                 __size_of_UART_buff_size 0016                                 ?_Send_put 0001  
                   ?_I2C1_BusCollisionISR 0001                      __size_of_receiveData 06B4  
                                 ?_ToSend 002A                        __CFG_CCP2MX$PORTC1 000000  
                __size_of_LEDwriteDisplay 012A                                ??_TMR0_ISR 0005  
                              ??_TMR2_ISR 0005                        __CFG_CCP3MX$PORTB5 000000  
     FastTransfer_buffer_modulo_inc@value 001B                           _I2C1_Initialize 2C7E  
                                 _ADC_ISR 3060                                   ?_setLED 001B  
                                 ?_memset 001B                                _crc_buffer 0128  
                               ?___ftpack 001B                                 TMR0_ISR@x 0005  
                 __size_of_ADC_Initialize 0018                                 ?___lwtoft 0023  
                      UART_buff_put@_this 0021                          i2_UART_buff_size 2FD6  
             i2UART_buff_modulo_inc@value 0001                                   _OSCCON2 000FD2  
                               _I2C1_Stop 2C3C                         _Receive_available 2FAA  
            UART_buff_modulo_inc@my_value 001F                         __CFG_PRICLKEN$OFF 000000  
                                 _OSCTUNE 000F9B                                   _SPBRGH1 000FB0  
                                 _SSP1ADD 000FC8                       sendData@whereToSend 0028  
                         _ReadButtonState 1C36                       _receiveArrayAddress 00D5  
                                 _SSP1BUF 000FC9                          ?_TMR2_StartTimer 0001  
                      ?_Receive_available 001D                                begin@error 013D  
                    __end_of_LEDblinkRate 259C             I2C1_MasterTRBInsert@ptrb_list 001B  
                                 _Off_Led 20D0                       ??_Receive_available 001F  
                               ?_sendData 0001                         _alignErrorCounter 00C5  
                         __CFG_PWRTEN$OFF 000000                 __size_of_buttonsCollector 0070  
                  ?_I2C1_FunctionComplete 0001                                ??_Send_put 0026  
                                 __Hparam 0000             __size_of_I2C1_MasterTRBInsert 00BA  
                                 __Lparam 0000                ??_TMR2_SetInterruptHandler 001D  
                         __size_of_ToSend 001E                        _p_i2c1_trb_current 00D3  
                    __end_of_Receive_peek 301E                                 _AKNAKsend 0036  
                                 ___awdiv 2754                      _UART_buff_modulo_inc 2E1A  
                                 ___ftmul 17AC                                   ___fttol 1538  
                                 _calc_CS 0037                                   __pcinit 2850  
                              ??___ftpack 0020                           __size_of_setLED 00BE  
                         __size_of_memset 002C                                   __ramtop 0600  
                        i2UART_buff_get@c 000B                                   __ptext0 1D4C  
                                 __ptext1 2CF6                                   __ptext2 2BB4  
                                 __ptext3 167C                                   __ptext4 1F22  
                                 __ptext5 29A8                                   __ptext6 2938  
                                 __ptext7 2E6E                                   __ptext8 2F00  
                                 __ptext9 1272                                ??___lwtoft 0026  
                               _T0CONbits 000FD5                          i2UART_buff_put@c 0009  
                   _OSCILLATOR_Initialize 302C                 __end_of_Receive_available 2FC0  
                               _T2CONbits 000FBA                   _FastTransfer_buffer_put 1272  
                   CRCcheck@calculatedCRC 00F5                        _EUSART1_Initialize 2CBA  
                        ?i2_UART_buff_get 0007                  ??_PIN_MANAGER_Initialize 001B  
                        ?i2_UART_buff_put 0007                                ?_I2C1_Stop 0001  
            crcBufS_status_put@wantedTime 0023                                   _timeOut 00DF  
                          TMR2_CallBack@i 0003                             ??_crcBufS_get 001F  
                           ??_crcBufS_put 0020                __size_of_SYSTEM_Initialize 0074  
                    I2C1_ISR@pi2c_buf_ptr 00BF                      end_of_initialization 28B6  
                               Delay@wait 001B                       ?_EUSART1_Initialize 0001  
                 LEDwriteDisplay@i2c_addr 014D                                 _LED_array 0088  
                                 memset@c 001D                                   memset@n 001F  
                                 memset@p 0021                              LEDsetBar@bar 0023  
                           __Lmediumconst 7CE2                                 _LEDsetBar 0788  
                  ??_I2C1_BusCollisionISR 0001                                ??_sendData 0027  
                 __end_of_I2C1_Initialize 2CBA                     ?_UART_buff_modulo_inc 001B  
                    __size_of_updateComms 003A                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc2 000FDE  
                              _respondECU 2BB4                     ReadButtonState@btnnum 0001  
                        begin@stufftosend 013E                       CRCcheck@arrayHolder 00F6  
                            LEDsetValue@k 014D                      ??_EUSART1_Initialize 0025  
                     LEDblinkRate@timeOut 00F9                                 _PORTAbits 000F80  
                               _PORTBbits 000F81                                 _PORTDbits 000F83  
                       ??_LEDwriteDisplay 002B                   __end_of_ReadButtonState 1D4C  
               __size_of_I2C1_MasterWrite 004C                    _dataAdressErrorCounter 00CB  
                       __size_of_I2C1_ISR 0274                                _rx_address 003D  
                               _TRISAbits 000F92                                 _TRISCbits 000F94  
                    __size_of_TBbarGraphs 0012                   LEDBsetBrightness@status 00FB  
       I2C1_ISR@i2c_10bit_address_restart 0034                       LEDbegin@writeBuffer 0139  
                            begin@maxSize 013B        __size_of_FastTransfer_buffer_flush 0062  
                   i2UART_buff_size@_this 0001                            _UART_buff_init 2F3C  
                          _UART_buff_peek 2E96                            _UART_buff_size 2FC0  
                     __end_of_crcBufS_get 1F22                                ?_LEDsetBar 0023  
                     __end_of_crcBufS_put 1FFA                   I2C1_MasterWrite@address 0027  
                       __size_of_CRCcheck 015E                 LEDBsetBrightness@i2c_addr 00F6  
                             ___ftmul@exp 00F7                         __size_of_LEDbegin 0098  
                           _moduleAddress 003B                      _timer0ReloadVal16bit 0042  
                              CRCcheck@rt 00F9                            __end_of_ToSend 2F1E  
            __end_of_INTERRUPT_Initialize 3010      __end_of_TMR2_DefaultInterruptHandler 3066  
   __size_of_TMR2_DefaultInterruptHandler 0002              _TMR2_DefaultInterruptHandler 3064  
                         _crcErrorCounter 00C9                   I2C1_MasterWrite@trBlock 00E8  
                       crcBufS_put@oldCRC 001E                             __pidataCOMRAM 3068  
                       __size_of_TMR0_ISR 0060                  I2C1_Stop@completion_code 0003  
                       __size_of_TMR2_ISR 0008                            _ADC_Initialize 2F92  
               ??_FastTransfer_buffer_put 0026                    ?_OSCILLATOR_Initialize 0001  
                          __end_of_setLED 2258                            __end_of_memset 2DF0  
                       crcBufS_put@status 001F                   buttonsCollector@sendVal 0026  
                            receiveData@r 0149                __size_of_Receive_available 0016  
                            receiveData@u 0147                          ??_GetButtonState 001D  
                       _LEDBsetBrightness 259C                       start_initialization 2850  
                   __size_of_LEDblinkRate 0096                               ??_I2C1_Stop 0001  
                __size_of_TMR0_Initialize 001E           __size_of_PIN_MANAGER_Initialize 0056  
                   crcBufS_get@wantedTime 0025                        ?_LEDBsetBrightness 00F4  
                               _SetLEDOut 0B8E         __size_of_I2C1_MasterWriteTRBBuild 0044  
                       ?_handleIndicators 0025                 ?_I2C1_MasterWriteTRBBuild 001B  
                  __end_of_UART_buff_init 2F5A                    __end_of_UART_buff_peek 2EBA  
                          UART_buff_get@c 0025                    __end_of_UART_buff_size 2FD6  
                            ?_Receive_get 0001                            UART_buff_put@c 0023  
                      ??_handleIndicators 0027                           LEDbegin@timeOut 013C  
                     ??_LEDBsetBrightness 002B                     __size_of_Receive_peek 000E  
                        _buttonsCollector 2938                  __end_ofi2_UART_buff_size 2FEC  
                        ?_I2C1_Initialize 0001                                  ??_ToSend 002C  
                  ??_UART_buff_modulo_inc 001F                                  CRC8@data 001B  
                         crcBufS_get@time 001D                         __size_of_Send_put 002E  
                             ?_respondECU 0001                LEDwriteDisplay@writeBuffer 0139  
                  __size_of_TMR0_CallBack 000C                    __end_of_ADC_Initialize 2FAA  
                              LEDsetBar@a 0029                                LEDsetBar@c 0027  
                                ?_ADC_ISR 0001                                  ??_setLED 001D  
                                ??_memset 0021                              _LEDblinkRate 2506  
                       handleIndicators@i 002A             ?_TMR2_DefaultInterruptHandler 0001  
               __end_of_LEDBsetBrightness 2630              I2C1_MasterWriteTRBBuild@ptrb 001B  
                        ?_ReadButtonState 0001                         __size_of___ftpack 00AE  
                  __size_of_TMR2_CallBack 01C6                               __pbssCOMRAM 002C  
                       __size_of___lwtoft 0024             __size_of_EUSART1_Transmit_ISR 0032  
                           __pcstackBANK0 00F4                             __pcstackBANK1 0139  
                           ??_LEDsetValue 00FD                  __size_of_TMR2_Initialize 0022  
                           _i2c1_tr_queue 00ED                     LEDwriteDisplay@status 0150  
                            _Receive_peek 3010                                ?_SetLEDOut 001F  
                     UART_buff_init@_this 0023                               _crcBufS_get 1E40  
                     UART_buff_peek@_this 001B                               _crcBufS_put 1F22  
                        LEDsetValue@color 014B                           ?_UART_buff_init 0023  
                         ?_UART_buff_peek 001B                           ?_UART_buff_size 001B  
                        LEDsetValue@value 0149                   ??_I2C1_FunctionComplete 0001  
            __size_of_EUSART1_Receive_ISR 001E                             ??_receiveData 0139  
             __size_of_crcBufS_status_put 00D6                                sendData@CS 0029  
                                ?_Off_Led 001B                               ??_LEDsetBar 0139  
                               __pnvBANK0 00FE                  __size_of_TMR0_StartTimer 0004  
                  __size_of_UART_buff_get 0092                    __size_of_UART_buff_put 011A  
                  _PIN_MANAGER_Initialize 2AC8                         __size_of_sendData 0130  
                               __pintcode 0008                             __pmediumconst 7CE2  
                                ?___awdiv 001B                                  ?___ftmul 0026  
                                ?___fttol 0139                           ?_ADC_Initialize 0001  
                                _I2C1_ISR 0E38              ??_INTERRUPT_InterruptManager 000D  
            LEDBsetBrightness@writeBuffer 00F7                      i2UART_buff_get@_this 0007  
                        _I2C1_MasterWrite 2B1E                                  _BAUD1CON 000FB8  
            __end_of_I2C1_MasterTRBInsert 2312                         buttonsCollector@i 0028  
                          __size_of_Delay 0034                                 _butnarray 00B0  
                          __size_of_begin 005E                             _TMR0_CallBack 303A  
                     __size_of_respondECU 0044                      _INTERRUPT_Initialize 2FFE  
                    GetButtonState@btnnum 001B                              _receiveArray 0100  
                             _LEDNUM_ENAB 0098                    I2C1_MasterRead@trBlock 00E3  
                       ??_TMR0_Initialize 001B                       __end_of_LEDsetValue 246E  
                                _CRCcheck 13DA                                  _LATCbits 000F8B  
                                _LEDState 00A4                       UART_buff_size@_this 001B  
                           _TMR2_CallBack 10AC                                  _IPR1bits 000F9F  
                                _LEDbegin 246E                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                           LEDblinkRate@b 00F4                  __size_of_TMR2_StartTimer 0004  
                         _LEDwriteDisplay 18D8       __size_of_INTERRUPT_InterruptManager 00C8  
                                i2u410_40 110A                                  i2u402_40 10DA  
                                i2u420_40 1192                                  i2u412_40 1116  
                                i2u404_40 10E6                                  i2u422_40 119E  
                                i2u414_40 116E                                  i2u406_40 10F2  
                                i2u424_40 11AA                                  i2u416_40 117A  
                                i2u408_40 10FE                                  _PIR1bits 000F9E  
                                i2u418_40 1186                                  _PIR2bits 000FA1  
                                i2u428_48 125C                                  i2u526_40 26E0  
                                i2u391_40 1C4C                                  i2u391_46 1C4E  
                                i2u392_40 1C66                                  i2u544_40 2A58  
                                i2u392_46 1C68                                  i2u393_40 1C80  
                                i2u393_46 1C82                                  i2u546_40 2D7E  
                                i2u394_40 1C9A                                  i2u394_46 1C9C  
                                i2u395_40 1CB4                                  i2u395_46 1CB6  
                                i2u396_40 1CCE                                  i2u396_46 1CD0  
                                i2u397_40 1CE8                                  i2u397_46 1CEA  
                                i2u398_40 1D02                                  i2u398_46 1D04  
                                i2u399_40 3042                       begin@stuffavailable 0142  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                     __end_of_receiveData 0788                                  _SSP1CON1 000FC6  
                                _SSP1CON3 000FCB                                  _TMR0_ISR 2A0A  
                                _TMR2_ISR 3050                                 main@ADCNT 0151  
                                _SSP1STAT 000FC7            FastTransfer_buffer_flush@_this 0023  
                            _input_buffer 0400                                 _rx_buffer 0300  
                        __size_of_ADC_ISR 0004                                _ADCON0bits 000FC2  
              __size_of_LEDBsetBrightness 0094                      i2UART_buff_put@_this 0007  
                           _UART_buff_get 2630                             _UART_buff_put 1A02  
          ??_TMR2_DefaultInterruptHandler 0001         __size_of_TMR2_SetInterruptHandler 000A  
               ?_TMR2_SetInterruptHandler 001B                            ?_TMR0_CallBack 0001  
                ??i2_UART_buff_modulo_inc 0005                               ??_SetLEDOut 0023  
                             _INTCON2bits 000FF1                     ?_INTERRUPT_Initialize 0001  
                       _sendStructAddress 00D7                  __size_ofi2_UART_buff_get 0092  
                       ??_TMR2_Initialize 001D                  __size_ofi2_UART_buff_put 011A  
                                _OledFont 7CE3                            ?_TMR2_CallBack 0001  
                           ??_updateComms 002C                      __size_of_Receive_get 000E  
                        __size_of_Off_Led 00CA                                  __Hrparam 0000  
                                _Send_put 2D96             __size_of_I2C1_BusCollisionISR 0002  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                               setLED@led 001B                    I2C1_ISR@i2c_bytes_left 0035  
                       __CFG_P2BMX$PORTD2 000000                   LEDblinkRate@writeBuffer 00F7  
                 ??_OSCILLATOR_Initialize 001B                         ??_TMR0_StartTimer 001B  
                          LEDsetBar@color 0025                          __size_of___awdiv 0084  
                        __size_of___ftmul 012C                          __size_of___fttol 0144  
             __size_of_EUSART1_Initialize 003C                       begin@stufftoreceive 0140  
                                ___ftpack 2312          __end_of_I2C1_MasterWriteTRBBuild 2C3C  
                                ___lwtoft 2EBA                            ?_UART_buff_get 0021  
                          ?_UART_buff_put 0021                               CRC8@extract 001F  
                __end_of_buttonsCollector 29A8                                 sendData@i 002A  
                           ??_TBbarGraphs 001F                       I2C1_ISR@i2c_address 0040  
                             _LEDsetValue 23C0                  crcBufS_status_put@status 001E  
                                __ptext10 2DF0                                  __ptext11 2D30  
                                __ptext20 301E                                  __ptext12 00D4  
                                __ptext21 2630                                  __ptext13 2D96  
                                __ptext30 2FEC                                  __ptext22 2E1A  
                                __ptext14 1A02                                  __ptext31 2EBA  
                                __ptext23 2FAA                                  __ptext15 3010  
                                __ptext40 2F1E                                  __ptext32 1538  
                                __ptext24 2FC0                                  __ptext16 2E96  
                                __ptext41 305C                                  __ptext33 17AC  
                                __ptext25 2B6A                                  __ptext17 13DA  
                                __ptext50 18D8                                  __ptext42 2AC8  
                                __ptext34 2312                                  __ptext26 27D8  
                                __ptext18 1FFA                                  __ptext51 23C0  
                                __ptext43 302C                                  __ptext35 28C4  
                                __ptext27 0B8E                                  __ptext19 1E40  
                                __ptext52 0788                                  __ptext44 2FFE  
                                __ptext36 2A6A                                  __ptext28 219A  
                                __ptext61 3050                                  __ptext53 2754  
                                __ptext45 2C7E                                  __ptext37 2EDE  
                                __ptext29 20D0                                  __ptext70 3066  
                                __ptext62 10AC                                  __ptext54 246E  
                                __ptext46 2CBA                                  __ptext38 3058  
                                __ptext71 2D64                                  __ptext63 3064  
                                __ptext55 2506                                  __ptext47 2F3C  
                                __ptext39 3046                                  __ptext72 2FD6  
                                __ptext64 2A0A                                  __ptext56 259C  
                                __ptext48 2DC4                                  __ptext73 26C2  
                                __ptext65 303A                                  __ptext57 2B1E  
                                __ptext49 2F92                                  __ptext74 2F5A  
                                __ptext66 1C36                                  __ptext58 2BF8  
                                __ptext75 1B1C                                  __ptext67 0E38  
                                __ptext59 2258                                  __ptext76 2E44  
                                __ptext68 2C3C                                  __ptext77 3060  
                                __ptext69 2F78                                  __ptext78 0000  
                            _SSP1CON1bits 000FC6                              _SSP1CON2bits 000FC5  
                           __size_of_CRC8 004A                                  begin@ptr 0139  
                 EUSART1_Receive_ISR@data 000C                   __end_of_LEDwriteDisplay 1A02  
                           _returnAddress 003C                             __size_of_main 00F4  
                             _receiveData 00D4                            _Transmit_stall 0044  
                                _sendData 167C                      _I2C1_MasterTRBInsert 2258  
                       ?i2_UART_buff_size 0001                                _RC1STAbits 000FAB  
                    LEDblinkRate@i2c_addr 00F6                              ??_respondECU 002C  
                      ??i2_UART_buff_size 0003                                  int$flags 0045  
               __size_of_handleIndicators 0078             handleIndicators@oldIndicators 00E1  
                            _serial_write 0032                                  _throttle 00DB  
                       ??_TMR2_StartTimer 001B                       __end_of_updateComms 2D30  
      __end_of_INTERRUPT_InterruptManager 00D0                _INTERRUPT_InterruptManager 0008  
                     _EUSART1_Receive_ISR 2F5A                         receiveData@holder 013F  
                      LEDBsetBrightness@b 00F4                                _INTCONbits 000FF2  
                         ??_TMR0_CallBack 0001                 UART_buff_modulo_inc@value 001B  
      handleIndicators@receivedIndicators 0025                          ??_UART_buff_init 0025  
                        ??_UART_buff_peek 001D                          ??_UART_buff_size 001D  
                  ??_INTERRUPT_Initialize 001B                                  memset@p1 001B  
                        _serial_available 002E           __size_ofi2_UART_buff_modulo_inc 002A  
                            ?_crcBufS_get 001B                              ?_crcBufS_put 001B  
                                intlevel2 0000                   crcBufS_status_put@_this 001B  
                         ??_TMR2_CallBack 0001                        __end_of_respondECU 2BF8  
                     __end_of_TBbarGraphs 2FFE                      ?_EUSART1_Receive_ISR 0001  
  FastTransfer_buffer_modulo_inc@my_value 001F            FastTransfer_buffer_put@towhere 0023  
                 ?_PIN_MANAGER_Initialize 0001                  __end_of_I2C1_MasterWrite 2B6A  
          __size_of_I2C1_FunctionComplete 001A             __end_of_I2C1_FunctionComplete 2F92  
                   ?_I2C1_MasterTRBInsert 001B              __end_of_EUSART1_Transmit_ISR 2D96  
                             _ring_buffer 0200                          ??_ADC_Initialize 001B  
              ?_FastTransfer_buffer_flush 0023                         ??i2_UART_buff_get 0009  
                             _serial_peek 00D9                               _serial_read 0030  
                       ??i2_UART_buff_put 000A                  ?_FastTransfer_buffer_put 0021  
           __size_of_UART_buff_modulo_inc 002A                  __size_of_I2C1_Initialize 003C  
                         ??_UART_buff_get 0023                           ??_UART_buff_put 0024  
   FastTransfer_buffer_modulo_inc@modulus 001D                    crcBufS_status_put@time 001D  
                         _TMR0_Initialize 2F1E                 receiveData@crcHolder_2456 0146  
                _I2C1_MasterWriteTRBBuild 2BF8                         __CFG_T3CMX$PORTC0 000000  
                          _maxDataAddress 003A                  __size_of_ReadButtonState 0116  
              __end_of_crcBufS_status_put 20D0                     ??_EUSART1_Receive_ISR 000C  
          __end_of_PIN_MANAGER_Initialize 2B1E          ??_FastTransfer_buffer_modulo_inc 001F  
         ?_FastTransfer_buffer_modulo_inc 001B                          ?_LEDwriteDisplay 0001  
                 __size_of_GetButtonState 0028                        __size_of_I2C1_Stop 0042  
                           _displaybuffer 0060                         __CFG_FOSC$INTIO67 000000  
                   _TMR2_InterruptHandler 00FE                               _updateComms 2CF6  
