

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Jan 02 21:47:04 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    94                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    95  0000                     
    96                           	psect	idataCOMRAM
    97  002E00                     __pidataCOMRAM:
    98                           	opt stack 0
    99                           
   100                           ;initializer for _Transmit_stall
   101  002E00  01                 	db	1
   102                           
   103                           	psect	nvCOMRAM
   104  000042                     __pnvCOMRAM:
   105                           	opt stack 0
   106  000042                     _timer0ReloadVal16bit:
   107                           	opt stack 0
   108  000042                     	ds	2
   109  0000                     _ANSELA	set	3896
   110  0000                     _ANSELB	set	3897
   111  0000                     _ANSELC	set	3898
   112  0000                     _ANSELD	set	3899
   113  0000                     _ANSELE	set	3900
   114  0000                     _ADCON0	set	4034
   115  0000                     _ADCON0bits	set	4034
   116  0000                     _ADCON1	set	4033
   117  0000                     _ADCON2	set	4032
   118  0000                     _ADRESH	set	4036
   119  0000                     _ADRESL	set	4035
   120  0000                     _BAUD1CON	set	4024
   121  0000                     _INTCON2bits	set	4081
   122  0000                     _INTCONbits	set	4082
   123  0000                     _IPR1bits	set	3999
   124  0000                     _IPR2bits	set	4002
   125  0000                     _LATA	set	3977
   126  0000                     _LATB	set	3978
   127  0000                     _LATC	set	3979
   128  0000                     _LATCbits	set	3979
   129  0000                     _LATD	set	3980
   130  0000                     _LATE	set	3981
   131  0000                     _OSCCON	set	4051
   132  0000                     _OSCCON2	set	4050
   133  0000                     _OSCTUNE	set	3995
   134  0000                     _PIE1bits	set	3997
   135  0000                     _PIE2bits	set	4000
   136  0000                     _PIR1bits	set	3998
   137  0000                     _PIR2bits	set	4001
   138  0000                     _PORTAbits	set	3968
   139  0000                     _PORTBbits	set	3969
   140  0000                     _PORTDbits	set	3971
   141  0000                     _PR2	set	4027
   142  0000                     _RC1STA	set	4011
   143  0000                     _RC1STAbits	set	4011
   144  0000                     _RCONbits	set	4048
   145  0000                     _RCREG1	set	4014
   146  0000                     _SPBRG1	set	4015
   147  0000                     _SPBRGH1	set	4016
   148  0000                     _SSP1ADD	set	4040
   149  0000                     _SSP1BUF	set	4041
   150  0000                     _SSP1CON1	set	4038
   151  0000                     _SSP1CON1bits	set	4038
   152  0000                     _SSP1CON2bits	set	4037
   153  0000                     _SSP1CON3	set	4043
   154  0000                     _SSP1STAT	set	4039
   155  0000                     _T0CON	set	4053
   156  0000                     _T0CONbits	set	4053
   157  0000                     _T2CON	set	4026
   158  0000                     _T2CONbits	set	4026
   159  0000                     _TMR0H	set	4055
   160  0000                     _TMR0L	set	4054
   161  0000                     _TMR2	set	4028
   162  0000                     _TRISA	set	3986
   163  0000                     _TRISB	set	3987
   164  0000                     _TRISC	set	3988
   165  0000                     _TRISCbits	set	3988
   166  0000                     _TRISD	set	3989
   167  0000                     _TRISE	set	3990
   168  0000                     _TX1STA	set	4012
   169  0000                     _TXREG1	set	4013
   170  0000                     _WPUB	set	3937
   171  0000                     _LATA3	set	31819
   172  0000                     _LATB3	set	31827
   173  0000                     _LATB5	set	31829
   174  0000                     _LATD1	set	31841
   175  0000                     _LATE0	set	31848
   176  0000                     _LATE1	set	31849
   177  0000                     _LATE2	set	31850
   178                           
   179                           ; #config settings
   180  0000                     
   181                           	psect	cinit
   182  002638                     __pcinit:
   183                           	opt stack 0
   184  002638                     start_initialization:
   185                           	opt stack 0
   186  002638                     __initialization:
   187                           	opt stack 0
   188                           
   189                           ; Clear objects allocated to BANK5 (206 bytes)
   190  002638  EE05  F000         	lfsr	0,__pbssBANK5
   191  00263C  0ECE               	movlw	206
   192  00263E                     clear_0:
   193  00263E  6AEE               	clrf	postinc0,c
   194  002640  06E8               	decf	wreg,f,c
   195  002642  E1FD               	bnz	clear_0
   196                           
   197                           ; Clear objects allocated to BANK4 (206 bytes)
   198  002644  EE04  F000         	lfsr	0,__pbssBANK4
   199  002648  0ECE               	movlw	206
   200  00264A                     clear_1:
   201  00264A  6AEE               	clrf	postinc0,c
   202  00264C  06E8               	decf	wreg,f,c
   203  00264E  E1FD               	bnz	clear_1
   204                           
   205                           ; Clear objects allocated to BANK3 (200 bytes)
   206  002650  EE03  F000         	lfsr	0,__pbssBANK3
   207  002654  0EC8               	movlw	200
   208  002656                     clear_2:
   209  002656  6AEE               	clrf	postinc0,c
   210  002658  06E8               	decf	wreg,f,c
   211  00265A  E1FD               	bnz	clear_2
   212                           
   213                           ; Clear objects allocated to BANK2 (206 bytes)
   214  00265C  EE02  F000         	lfsr	0,__pbssBANK2
   215  002660  0ECE               	movlw	206
   216  002662                     clear_3:
   217  002662  6AEE               	clrf	postinc0,c
   218  002664  06E8               	decf	wreg,f,c
   219  002666  E1FD               	bnz	clear_3
   220                           
   221                           ; Clear objects allocated to BANK1 (57 bytes)
   222  002668  EE01  F000         	lfsr	0,__pbssBANK1
   223  00266C  0E39               	movlw	57
   224  00266E                     clear_4:
   225  00266E  6AEE               	clrf	postinc0,c
   226  002670  06E8               	decf	wreg,f,c
   227  002672  E1FD               	bnz	clear_4
   228                           
   229                           ; Clear objects allocated to BANK0 (142 bytes)
   230  002674  EE00  F060         	lfsr	0,__pbssBANK0
   231  002678  0E8E               	movlw	142
   232  00267A                     clear_5:
   233  00267A  6AEE               	clrf	postinc0,c
   234  00267C  06E8               	decf	wreg,f,c
   235  00267E  E1FD               	bnz	clear_5
   236                           
   237                           ; Clear objects allocated to COMRAM (22 bytes)
   238  002680  EE00  F02C         	lfsr	0,__pbssCOMRAM
   239  002684  0E16               	movlw	22
   240  002686                     clear_6:
   241  002686  6AEE               	clrf	postinc0,c
   242  002688  06E8               	decf	wreg,f,c
   243  00268A  E1FD               	bnz	clear_6
   244                           
   245                           ; Initialize objects allocated to COMRAM (1 bytes)
   246                           ; load TBLPTR registers with __pidataCOMRAM
   247  00268C  0E00               	movlw	low __pidataCOMRAM
   248  00268E  6EF6               	movwf	tblptrl,c
   249  002690  0E2E               	movlw	high __pidataCOMRAM
   250  002692  6EF7               	movwf	tblptrh,c
   251  002694  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   252  002696  6EF8               	movwf	tblptru,c
   253  002698  0009               	tblrd		*+	;fetch initializer
   254  00269A  CFF5 F044          	movff	tablat,__pdataCOMRAM
   255  00269E                     end_of_initialization:
   256                           	opt stack 0
   257  00269E                     __end_of__initialization:
   258                           	opt stack 0
   259  00269E  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   260  0026A0  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   261  0026A2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   262  0026A4  6EF8               	movwf	tblptru,c
   263  0026A6  0100               	movlb	0
   264  0026A8  EFBD  F00D         	goto	_main	;jump to C main() function
   265                           tblptru	equ	0xFF8
   266                           tblptrh	equ	0xFF7
   267                           tblptrl	equ	0xFF6
   268                           tablat	equ	0xFF5
   269                           postinc0	equ	0xFEE
   270                           wreg	equ	0xFE8
   271                           
   272                           	psect	bssCOMRAM
   273  00002C                     __pbssCOMRAM:
   274                           	opt stack 0
   275  00002C                     _group:
   276                           	opt stack 0
   277  00002C                     	ds	2
   278  00002E                     _serial_available:
   279                           	opt stack 0
   280  00002E                     	ds	2
   281  000030                     _serial_read:
   282                           	opt stack 0
   283  000030                     	ds	2
   284  000032                     _serial_write:
   285                           	opt stack 0
   286  000032                     	ds	2
   287  000034                     I2C1_ISR@i2c_10bit_address_restart:
   288                           	opt stack 0
   289  000034                     	ds	1
   290  000035                     I2C1_ISR@i2c_bytes_left:
   291                           	opt stack 0
   292  000035                     	ds	1
   293  000036                     _AKNAKsend:
   294                           	opt stack 0
   295  000036                     	ds	1
   296  000037                     _calc_CS:
   297                           	opt stack 0
   298  000037                     	ds	1
   299  000038                     _i2c1_state:
   300                           	opt stack 0
   301  000038                     	ds	1
   302  000039                     _i2c1_trb_count:
   303                           	opt stack 0
   304  000039                     	ds	1
   305  00003A                     _maxDataAddress:
   306                           	opt stack 0
   307  00003A                     	ds	1
   308  00003B                     _moduleAddress:
   309                           	opt stack 0
   310  00003B                     	ds	1
   311  00003C                     _returnAddress:
   312                           	opt stack 0
   313  00003C                     	ds	1
   314  00003D                     _rx_address:
   315                           	opt stack 0
   316  00003D                     	ds	1
   317  00003E                     _rx_array_inx:
   318                           	opt stack 0
   319  00003E                     	ds	1
   320  00003F                     _rx_len:
   321                           	opt stack 0
   322  00003F                     	ds	1
   323  000040                     I2C1_ISR@i2c_address:
   324                           	opt stack 0
   325  000040                     	ds	2
   326                           tblptru	equ	0xFF8
   327                           tblptrh	equ	0xFF7
   328                           tblptrl	equ	0xFF6
   329                           tablat	equ	0xFF5
   330                           postinc0	equ	0xFEE
   331                           wreg	equ	0xFE8
   332                           
   333                           	psect	dataCOMRAM
   334  000044                     __pdataCOMRAM:
   335                           	opt stack 0
   336  000044                     _Transmit_stall:
   337                           	opt stack 0
   338  000044                     	ds	1
   339                           tblptru	equ	0xFF8
   340                           tblptrh	equ	0xFF7
   341                           tblptrl	equ	0xFF6
   342                           tablat	equ	0xFF5
   343                           postinc0	equ	0xFEE
   344                           wreg	equ	0xFE8
   345                           
   346                           	psect	bssBANK0
   347  000060                     __pbssBANK0:
   348                           	opt stack 0
   349  000060                     _displaybuffer:
   350                           	opt stack 0
   351  000060                     	ds	40
   352  000088                     _LED_array:
   353                           	opt stack 0
   354  000088                     	ds	16
   355  000098                     _LEDNUM_ENAB:
   356                           	opt stack 0
   357  000098                     	ds	12
   358  0000A4                     _LEDState:
   359                           	opt stack 0
   360  0000A4                     	ds	12
   361  0000B0                     _butnarray:
   362                           	opt stack 0
   363  0000B0                     	ds	8
   364  0000B8                     _i2c1_object:
   365                           	opt stack 0
   366  0000B8                     	ds	7
   367  0000BF                     I2C1_ISR@pi2c_buf_ptr:
   368                           	opt stack 0
   369  0000BF                     	ds	2
   370  0000C1                     TMR0_ISR@CountCallBack:
   371                           	opt stack 0
   372  0000C1                     	ds	2
   373  0000C3                     TMR2_ISR@CountCallBack:
   374                           	opt stack 0
   375  0000C3                     	ds	2
   376  0000C5                     _addressErrorCounter:
   377                           	opt stack 0
   378  0000C5                     	ds	2
   379  0000C7                     _alignErrorCounter:
   380                           	opt stack 0
   381  0000C7                     	ds	2
   382  0000C9                     _brake:
   383                           	opt stack 0
   384  0000C9                     	ds	2
   385  0000CB                     _crcErrorCounter:
   386                           	opt stack 0
   387  0000CB                     	ds	2
   388  0000CD                     _dataAdressErrorCounter:
   389                           	opt stack 0
   390  0000CD                     	ds	2
   391  0000CF                     _p_i2c1_current:
   392                           	opt stack 0
   393  0000CF                     	ds	2
   394  0000D1                     _p_i2c1_trb_current:
   395                           	opt stack 0
   396  0000D1                     	ds	2
   397  0000D3                     _receiveArrayAddress:
   398                           	opt stack 0
   399  0000D3                     	ds	2
   400  0000D5                     _sendStructAddress:
   401                           	opt stack 0
   402  0000D5                     	ds	2
   403  0000D7                     _serial_peek:
   404                           	opt stack 0
   405  0000D7                     	ds	2
   406  0000D9                     _throttle:
   407                           	opt stack 0
   408  0000D9                     	ds	2
   409  0000DB                     _time:
   410                           	opt stack 0
   411  0000DB                     	ds	2
   412  0000DD                     handleIndicators@oldIndicators:
   413                           	opt stack 0
   414  0000DD                     	ds	2
   415  0000DF                     I2C1_MasterRead@trBlock:
   416                           	opt stack 0
   417  0000DF                     	ds	5
   418  0000E4                     I2C1_MasterWrite@trBlock:
   419                           	opt stack 0
   420  0000E4                     	ds	5
   421  0000E9                     _i2c1_tr_queue:
   422                           	opt stack 0
   423  0000E9                     	ds	5
   424                           tblptru	equ	0xFF8
   425                           tblptrh	equ	0xFF7
   426                           tblptrl	equ	0xFF6
   427                           tablat	equ	0xFF5
   428                           postinc0	equ	0xFEE
   429                           wreg	equ	0xFE8
   430                           
   431                           	psect	bssBANK1
   432  000100                     __pbssBANK1:
   433                           	opt stack 0
   434  000100                     _receiveArray:
   435                           	opt stack 0
   436  000100                     	ds	40
   437  000128                     _crc_buffer:
   438                           	opt stack 0
   439  000128                     	ds	17
   440                           tblptru	equ	0xFF8
   441                           tblptrh	equ	0xFF7
   442                           tblptrl	equ	0xFF6
   443                           tablat	equ	0xFF5
   444                           postinc0	equ	0xFEE
   445                           wreg	equ	0xFE8
   446                           
   447                           	psect	bssBANK2
   448  000200                     __pbssBANK2:
   449                           	opt stack 0
   450  000200                     _ring_buffer:
   451                           	opt stack 0
   452  000200                     	ds	206
   453                           tblptru	equ	0xFF8
   454                           tblptrh	equ	0xFF7
   455                           tblptrl	equ	0xFF6
   456                           tablat	equ	0xFF5
   457                           postinc0	equ	0xFEE
   458                           wreg	equ	0xFE8
   459                           
   460                           	psect	bssBANK3
   461  000300                     __pbssBANK3:
   462                           	opt stack 0
   463  000300                     _rx_buffer:
   464                           	opt stack 0
   465  000300                     	ds	200
   466                           tblptru	equ	0xFF8
   467                           tblptrh	equ	0xFF7
   468                           tblptrl	equ	0xFF6
   469                           tablat	equ	0xFF5
   470                           postinc0	equ	0xFEE
   471                           wreg	equ	0xFE8
   472                           
   473                           	psect	bssBANK4
   474  000400                     __pbssBANK4:
   475                           	opt stack 0
   476  000400                     _input_buffer:
   477                           	opt stack 0
   478  000400                     	ds	206
   479                           tblptru	equ	0xFF8
   480                           tblptrh	equ	0xFF7
   481                           tblptrl	equ	0xFF6
   482                           tablat	equ	0xFF5
   483                           postinc0	equ	0xFEE
   484                           wreg	equ	0xFE8
   485                           
   486                           	psect	bssBANK5
   487  000500                     __pbssBANK5:
   488                           	opt stack 0
   489  000500                     _output_buffer:
   490                           	opt stack 0
   491  000500                     	ds	206
   492                           tblptru	equ	0xFF8
   493                           tblptrh	equ	0xFF7
   494                           tblptrl	equ	0xFF6
   495                           tablat	equ	0xFF5
   496                           postinc0	equ	0xFEE
   497                           wreg	equ	0xFE8
   498                           
   499                           	psect	cstackBANK1
   500  000139                     __pcstackBANK1:
   501                           	opt stack 0
   502  000139                     ___fttol@sign1:
   503                           	opt stack 0
   504  000139                     receiveData@holder:
   505                           	opt stack 0
   506  000139                     LEDwriteDisplay@writeBuffer:
   507                           	opt stack 0
   508                           
   509                           ; 20 bytes @ 0x0
   510  000139                     	ds	1
   511  00013A                     ___fttol@lval:
   512                           	opt stack 0
   513                           
   514                           ; 4 bytes @ 0x1
   515  00013A                     	ds	2
   516  00013C                     receiveData@holder_2278:
   517                           	opt stack 0
   518                           
   519                           ; 3 bytes @ 0x3
   520  00013C                     	ds	2
   521  00013E                     ___fttol@exp1:
   522                           	opt stack 0
   523                           
   524                           ; 1 bytes @ 0x5
   525  00013E                     	ds	1
   526  00013F                     receiveData@crcHolder:
   527                           	opt stack 0
   528  00013F                     LEDsetValue@value:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x6
   532  00013F                     	ds	1
   533  000140                     receiveData@crcHolder_2279:
   534                           	opt stack 0
   535                           
   536                           ; 1 bytes @ 0x7
   537  000140                     	ds	1
   538  000141                     LEDsetValue@color:
   539                           	opt stack 0
   540  000141                     receiveData@u:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x8
   544  000141                     	ds	2
   545  000143                     ??_LEDsetValue:
   546  000143                     receiveData@r:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0xA
   550  000143                     	ds	1
   551  000144                     LEDsetValue@k:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0xB
   555  000144                     	ds	9
   556  00014D                     LEDwriteDisplay@i2c_addr:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x14
   560  00014D                     	ds	1
   561  00014E                     LEDwriteDisplay@timeOut:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0x15
   565  00014E                     	ds	2
   566  000150                     LEDwriteDisplay@status:
   567                           	opt stack 0
   568                           
   569                           ; 1 bytes @ 0x17
   570  000150                     	ds	1
   571  000151                     main@ADCNT:
   572                           	opt stack 0
   573                           
   574                           ; 2 bytes @ 0x18
   575  000151                     	ds	2
   576                           tblptru	equ	0xFF8
   577                           tblptrh	equ	0xFF7
   578                           tblptrl	equ	0xFF6
   579                           tablat	equ	0xFF5
   580                           postinc0	equ	0xFEE
   581                           wreg	equ	0xFE8
   582                           
   583                           	psect	cstackBANK0
   584  0000EE                     __pcstackBANK0:
   585                           	opt stack 0
   586  0000EE                     ??_LEDsetBar:
   587  0000EE                     ??___ftmul:
   588  0000EE                     ToSend@where:
   589                           	opt stack 0
   590  0000EE                     CRCcheck@SentCRC:
   591                           	opt stack 0
   592  0000EE                     LEDBsetBrightness@b:
   593                           	opt stack 0
   594  0000EE                     LEDblinkRate@b:
   595                           	opt stack 0
   596  0000EE                     begin@ptr:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x0
   600  0000EE                     	ds	1
   601  0000EF                     CRCcheck@calculatedCRC:
   602                           	opt stack 0
   603                           
   604                           ; 1 bytes @ 0x1
   605  0000EF                     	ds	1
   606  0000F0                     LEDBsetBrightness@i2c_addr:
   607                           	opt stack 0
   608  0000F0                     LEDblinkRate@i2c_addr:
   609                           	opt stack 0
   610  0000F0                     begin@maxSize:
   611                           	opt stack 0
   612  0000F0                     CRCcheck@arrayHolder:
   613                           	opt stack 0
   614                           
   615                           ; 3 bytes @ 0x2
   616  0000F0                     	ds	1
   617  0000F1                     begin@givenAddress:
   618                           	opt stack 0
   619  0000F1                     ___ftmul@exp:
   620                           	opt stack 0
   621  0000F1                     LEDBsetBrightness@writeBuffer:
   622                           	opt stack 0
   623  0000F1                     LEDblinkRate@writeBuffer:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x3
   627  0000F1                     	ds	1
   628  0000F2                     begin@error:
   629                           	opt stack 0
   630  0000F2                     ___ftmul@f3_as_product:
   631                           	opt stack 0
   632                           
   633                           ; 3 bytes @ 0x4
   634  0000F2                     	ds	1
   635  0000F3                     LEDBsetBrightness@timeOut:
   636                           	opt stack 0
   637  0000F3                     LEDblinkRate@timeOut:
   638                           	opt stack 0
   639  0000F3                     begin@stufftosend:
   640                           	opt stack 0
   641  0000F3                     CRCcheck@rt:
   642                           	opt stack 0
   643                           
   644                           ; 2 bytes @ 0x5
   645  0000F3                     	ds	2
   646  0000F5                     ??_receiveData:
   647  0000F5                     LEDBsetBrightness@status:
   648                           	opt stack 0
   649  0000F5                     LEDblinkRate@status:
   650                           	opt stack 0
   651  0000F5                     ___ftmul@cntr:
   652                           	opt stack 0
   653  0000F5                     begin@stufftoreceive:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x7
   657  0000F5                     	ds	1
   658  0000F6                     ___ftmul@sign:
   659                           	opt stack 0
   660  0000F6                     LEDbegin@writeBuffer:
   661                           	opt stack 0
   662                           
   663                           ; 3 bytes @ 0x8
   664  0000F6                     	ds	1
   665  0000F7                     ?___fttol:
   666                           	opt stack 0
   667  0000F7                     begin@stuffavailable:
   668                           	opt stack 0
   669  0000F7                     ___fttol@f1:
   670                           	opt stack 0
   671                           
   672                           ; 3 bytes @ 0x9
   673  0000F7                     	ds	2
   674  0000F9                     LEDbegin@timeOut:
   675                           	opt stack 0
   676  0000F9                     begin@stuffpeek:
   677                           	opt stack 0
   678                           
   679                           ; 2 bytes @ 0xB
   680  0000F9                     	ds	2
   681  0000FB                     ??___fttol:
   682  0000FB                     LEDbegin@i2c_addr:
   683                           	opt stack 0
   684                           
   685                           ; 1 bytes @ 0xD
   686  0000FB                     	ds	1
   687  0000FC                     LEDbegin@status:
   688                           	opt stack 0
   689                           
   690                           ; 1 bytes @ 0xE
   691  0000FC                     	ds	4
   692                           tblptru	equ	0xFF8
   693                           tblptrh	equ	0xFF7
   694                           tblptrl	equ	0xFF6
   695                           tablat	equ	0xFF5
   696                           postinc0	equ	0xFEE
   697                           wreg	equ	0xFE8
   698                           
   699                           	psect	cstackCOMRAM
   700  000001                     __pcstackCOMRAM:
   701                           	opt stack 0
   702  000001                     ??_I2C1_Stop:
   703  000001                     ?i2_UART_buff_size:
   704                           	opt stack 0
   705  000001                     ?i2_UART_buff_modulo_inc:
   706                           	opt stack 0
   707  000001                     ReadButtonState@btnnum:
   708                           	opt stack 0
   709  000001                     i2UART_buff_size@_this:
   710                           	opt stack 0
   711  000001                     i2UART_buff_modulo_inc@value:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0x0
   715  000001                     	ds	2
   716  000003                     ??_ReadButtonState:
   717  000003                     I2C1_Stop@completion_code:
   718                           	opt stack 0
   719  000003                     i2UART_buff_modulo_inc@modulus:
   720                           	opt stack 0
   721                           
   722                           ; 2 bytes @ 0x2
   723  000003                     	ds	1
   724  000004                     ??_I2C1_ISR:
   725                           
   726                           ; 0 bytes @ 0x3
   727  000004                     	ds	1
   728  000005                     TMR0_ISR@x:
   729                           	opt stack 0
   730  000005                     i2UART_buff_modulo_inc@my_value:
   731                           	opt stack 0
   732                           
   733                           ; 2 bytes @ 0x4
   734  000005                     	ds	2
   735  000007                     i2UART_buff_put@_this:
   736                           	opt stack 0
   737  000007                     i2UART_buff_get@_this:
   738                           	opt stack 0
   739                           
   740                           ; 2 bytes @ 0x6
   741  000007                     	ds	2
   742  000009                     ??i2_UART_buff_get:
   743  000009                     i2UART_buff_put@c:
   744                           	opt stack 0
   745                           
   746                           ; 1 bytes @ 0x8
   747  000009                     	ds	1
   748  00000A                     ??i2_UART_buff_put:
   749                           
   750                           ; 0 bytes @ 0x9
   751  00000A                     	ds	1
   752  00000B                     i2UART_buff_get@c:
   753                           	opt stack 0
   754                           
   755                           ; 1 bytes @ 0xA
   756  00000B                     	ds	1
   757  00000C                     EUSART1_Receive_ISR@data:
   758                           	opt stack 0
   759                           
   760                           ; 1 bytes @ 0xB
   761  00000C                     	ds	1
   762  00000D                     ??_INTERRUPT_InterruptManager:
   763                           
   764                           ; 0 bytes @ 0xC
   765  00000D                     	ds	14
   766  00001B                     ?_FastTransfer_buffer_modulo_inc:
   767                           	opt stack 0
   768  00001B                     ?_UART_buff_modulo_inc:
   769                           	opt stack 0
   770  00001B                     ?_UART_buff_size:
   771                           	opt stack 0
   772  00001B                     ?___awdiv:
   773                           	opt stack 0
   774  00001B                     ?___ftpack:
   775                           	opt stack 0
   776  00001B                     I2C1_MasterTRBInsert@ptrb_list:
   777                           	opt stack 0
   778  00001B                     I2C1_MasterWriteTRBBuild@ptrb:
   779                           	opt stack 0
   780  00001B                     Delay@wait:
   781                           	opt stack 0
   782  00001B                     GetButtonState@btnnum:
   783                           	opt stack 0
   784  00001B                     TBbarGraphs@t:
   785                           	opt stack 0
   786  00001B                     CRC8@data:
   787                           	opt stack 0
   788  00001B                     FastTransfer_buffer_modulo_inc@value:
   789                           	opt stack 0
   790  00001B                     crcBufS_put@_this:
   791                           	opt stack 0
   792  00001B                     crcBufS_status_put@_this:
   793                           	opt stack 0
   794  00001B                     crcBufS_get@_this:
   795                           	opt stack 0
   796  00001B                     UART_buff_size@_this:
   797                           	opt stack 0
   798  00001B                     UART_buff_modulo_inc@value:
   799                           	opt stack 0
   800  00001B                     UART_buff_peek@_this:
   801                           	opt stack 0
   802  00001B                     setLED@led:
   803                           	opt stack 0
   804  00001B                     Off_Led@led:
   805                           	opt stack 0
   806  00001B                     ___awdiv@dividend:
   807                           	opt stack 0
   808  00001B                     memset@p1:
   809                           	opt stack 0
   810  00001B                     ___ftpack@arg:
   811                           	opt stack 0
   812                           
   813                           ; 3 bytes @ 0x1A
   814  00001B                     	ds	2
   815  00001D                     ??_Off_Led:
   816  00001D                     ??_setLED:
   817  00001D                     ??_Delay:
   818  00001D                     ??_GetButtonState:
   819  00001D                     ??_UART_buff_peek:
   820  00001D                     ?_Receive_available:
   821                           	opt stack 0
   822  00001D                     CRC8@len:
   823                           	opt stack 0
   824  00001D                     crcBufS_put@address:
   825                           	opt stack 0
   826  00001D                     crcBufS_status_put@time:
   827                           	opt stack 0
   828  00001D                     crcBufS_get@time:
   829                           	opt stack 0
   830  00001D                     I2C1_MasterTRBInsert@pflag:
   831                           	opt stack 0
   832  00001D                     I2C1_MasterWriteTRBBuild@pdata:
   833                           	opt stack 0
   834  00001D                     TBbarGraphs@b:
   835                           	opt stack 0
   836  00001D                     FastTransfer_buffer_modulo_inc@modulus:
   837                           	opt stack 0
   838  00001D                     UART_buff_modulo_inc@modulus:
   839                           	opt stack 0
   840  00001D                     ___awdiv@divisor:
   841                           	opt stack 0
   842  00001D                     memset@c:
   843                           	opt stack 0
   844                           
   845                           ; 2 bytes @ 0x1C
   846  00001D                     	ds	1
   847  00001E                     CRC8@sum:
   848                           	opt stack 0
   849  00001E                     crcBufS_put@oldCRC:
   850                           	opt stack 0
   851  00001E                     crcBufS_status_put@status:
   852                           	opt stack 0
   853  00001E                     crcBufS_get@space:
   854                           	opt stack 0
   855  00001E                     ___ftpack@exp:
   856                           	opt stack 0
   857  00001E                     Delay@x:
   858                           	opt stack 0
   859                           
   860                           ; 2 bytes @ 0x1D
   861  00001E                     	ds	1
   862  00001F                     ??_crcBufS_get:
   863  00001F                     ??_crcBufS_status_put:
   864  00001F                     I2C1_MasterWriteTRBBuild@length:
   865                           	opt stack 0
   866  00001F                     CRC8@extract:
   867                           	opt stack 0
   868  00001F                     crcBufS_put@status:
   869                           	opt stack 0
   870  00001F                     ___awdiv@counter:
   871                           	opt stack 0
   872  00001F                     ___ftpack@sign:
   873                           	opt stack 0
   874  00001F                     SetLEDOut@lednum:
   875                           	opt stack 0
   876  00001F                     FastTransfer_buffer_modulo_inc@my_value:
   877                           	opt stack 0
   878  00001F                     UART_buff_modulo_inc@my_value:
   879                           	opt stack 0
   880  00001F                     memset@n:
   881                           	opt stack 0
   882                           
   883                           ; 2 bytes @ 0x1E
   884  00001F                     	ds	1
   885  000020                     ??_crcBufS_put:
   886  000020                     ??___ftpack:
   887  000020                     I2C1_MasterTRBInsert@count:
   888                           	opt stack 0
   889  000020                     CRC8@tempI:
   890                           	opt stack 0
   891  000020                     ___awdiv@sign:
   892                           	opt stack 0
   893  000020                     I2C1_MasterWriteTRBBuild@address:
   894                           	opt stack 0
   895                           
   896                           ; 2 bytes @ 0x1F
   897  000020                     	ds	1
   898  000021                     ?_buttonsCollector:
   899                           	opt stack 0
   900  000021                     CRC8@crc:
   901                           	opt stack 0
   902  000021                     SetLEDOut@state:
   903                           	opt stack 0
   904  000021                     FastTransfer_buffer_put@_this:
   905                           	opt stack 0
   906  000021                     UART_buff_put@_this:
   907                           	opt stack 0
   908  000021                     UART_buff_get@_this:
   909                           	opt stack 0
   910  000021                     ___awdiv@quotient:
   911                           	opt stack 0
   912  000021                     memset@p:
   913                           	opt stack 0
   914                           
   915                           ; 2 bytes @ 0x20
   916  000021                     	ds	1
   917  000022                     ??_I2C1_MasterWriteTRBBuild:
   918                           
   919                           ; 0 bytes @ 0x21
   920  000022                     	ds	1
   921  000023                     ??_buttonsCollector:
   922  000023                     ??_SetLEDOut:
   923  000023                     ??_UART_buff_get:
   924  000023                     ?___lwtoft:
   925                           	opt stack 0
   926  000023                     FastTransfer_buffer_put@towhere:
   927                           	opt stack 0
   928  000023                     UART_buff_put@c:
   929                           	opt stack 0
   930  000023                     LEDsetBar@bar:
   931                           	opt stack 0
   932  000023                     FastTransfer_buffer_flush@_this:
   933                           	opt stack 0
   934  000023                     crcBufS_status_put@wantedTime:
   935                           	opt stack 0
   936  000023                     UART_buff_init@_this:
   937                           	opt stack 0
   938  000023                     ___lwtoft@c:
   939                           	opt stack 0
   940                           
   941                           ; 2 bytes @ 0x22
   942  000023                     	ds	1
   943  000024                     ??_UART_buff_put:
   944  000024                     I2C1_MasterWrite@pdata:
   945                           	opt stack 0
   946  000024                     FastTransfer_buffer_put@towhat:
   947                           	opt stack 0
   948                           
   949                           ; 2 bytes @ 0x23
   950  000024                     	ds	1
   951  000025                     UART_buff_get@c:
   952                           	opt stack 0
   953  000025                     LEDsetBar@color:
   954                           	opt stack 0
   955  000025                     handleIndicators@receivedIndicators:
   956                           	opt stack 0
   957  000025                     FastTransfer_buffer_flush@clearBuffer:
   958                           	opt stack 0
   959  000025                     crcBufS_get@wantedTime:
   960                           	opt stack 0
   961                           
   962                           ; 2 bytes @ 0x24
   963  000025                     	ds	1
   964  000026                     ??_FastTransfer_buffer_put:
   965  000026                     ?___ftmul:
   966                           	opt stack 0
   967  000026                     I2C1_MasterWrite@length:
   968                           	opt stack 0
   969  000026                     Send_put@_data:
   970                           	opt stack 0
   971  000026                     buttonsCollector@sendVal:
   972                           	opt stack 0
   973  000026                     ___ftmul@f1:
   974                           	opt stack 0
   975                           
   976                           ; 3 bytes @ 0x25
   977  000026                     	ds	1
   978  000027                     ??_handleIndicators:
   979  000027                     ??_sendData:
   980  000027                     I2C1_MasterWrite@address:
   981                           	opt stack 0
   982  000027                     LEDsetBar@c:
   983                           	opt stack 0
   984                           
   985                           ; 2 bytes @ 0x26
   986  000027                     	ds	1
   987  000028                     sendData@whereToSend:
   988                           	opt stack 0
   989  000028                     buttonsCollector@i:
   990                           	opt stack 0
   991                           
   992                           ; 2 bytes @ 0x27
   993  000028                     	ds	1
   994  000029                     sendData@CS:
   995                           	opt stack 0
   996  000029                     I2C1_MasterWrite@pflag:
   997                           	opt stack 0
   998  000029                     LEDsetBar@a:
   999                           	opt stack 0
  1000  000029                     ___ftmul@f2:
  1001                           	opt stack 0
  1002                           
  1003                           ; 3 bytes @ 0x28
  1004  000029                     	ds	1
  1005  00002A                     handleIndicators@i:
  1006                           	opt stack 0
  1007  00002A                     sendData@i:
  1008                           	opt stack 0
  1009  00002A                     ToSend@what:
  1010                           	opt stack 0
  1011                           
  1012                           ; 2 bytes @ 0x29
  1013  00002A                     	ds	1
  1014  00002B                     
  1015                           ; 0 bytes @ 0x2A
  1016  00002B                     	ds	1
  1017  00002C                     tblptru	equ	0xFF8
  1018                           tblptrh	equ	0xFF7
  1019                           tblptrl	equ	0xFF6
  1020                           tablat	equ	0xFF5
  1021                           postinc0	equ	0xFEE
  1022                           wreg	equ	0xFE8
  1023                           
  1024                           ; 0 bytes @ 0x2B
  1025 ;;
  1026 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1027 ;;
  1028 ;; *************** function _main *****************
  1029 ;; Defined at:
  1030 ;;		line 32 in file "main.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;		None
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;  ADCNT           2   24[BANK1 ] int 
  1035 ;; Return value:  Size  Location     Type
  1036 ;;		None               void
  1037 ;; Registers used:
  1038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1044 ;;      Params:         0       0       0       0       0       0       0
  1045 ;;      Locals:         0       0       2       0       0       0       0
  1046 ;;      Temps:          0       0       0       0       0       0       0
  1047 ;;      Totals:         0       0       2       0       0       0       0
  1048 ;;Total ram usage:        2 bytes
  1049 ;; Hardware stack levels required when called:   10
  1050 ;; This function calls:
  1051 ;;		_LEDbegin
  1052 ;;		_LEDsetValue
  1053 ;;		_LEDwriteDisplay
  1054 ;;		_SYSTEM_Initialize
  1055 ;;		___ftmul
  1056 ;;		___fttol
  1057 ;;		___lwtoft
  1058 ;;		_updateComms
  1059 ;; This function is called by:
  1060 ;;		Startup code after reset
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           	psect	text0
  1065  001B7A                     __ptext0:
  1066                           	opt stack 0
  1067  001B7A                     _main:
  1068                           	opt stack 21
  1069                           
  1070                           ;main.c: 34: SYSTEM_Initialize();
  1071                           
  1072                           ;incstack = 0
  1073  001B7A  EC8E  F013         	call	_SYSTEM_Initialize	;wreg free
  1074                           
  1075                           ;main.c: 53: (INTCONbits.GIE = 1);
  1076  001B7E  8EF2               	bsf	intcon,7,c	;volatile
  1077                           
  1078                           ;main.c: 56: (INTCONbits.PEIE = 1);
  1079  001B80  8CF2               	bsf	intcon,6,c	;volatile
  1080                           
  1081                           ;main.c: 63: int ADCNT = 1;
  1082  001B82  0E00               	movlw	0
  1083  001B84  0101               	movlb	1	; () banked
  1084  001B86  6F52               	movwf	(main@ADCNT+1)& (0+255),b
  1085  001B88  0E01               	movlw	1
  1086  001B8A  6F51               	movwf	main@ADCNT& (0+255),b
  1087                           
  1088                           ; BSR set to: 1
  1089                           ;main.c: 64: LEDbegin(0x70);
  1090  001B8C  0E70               	movlw	112
  1091  001B8E  ECE4  F010         	call	_LEDbegin
  1092                           
  1093                           ;main.c: 65: LEDbegin(0x71);
  1094  001B92  0E71               	movlw	113
  1095  001B94  ECE4  F010         	call	_LEDbegin
  1096                           
  1097                           ;main.c: 66: do { LATA3 = 1; } while(0);
  1098  001B98  8689               	bsf	3977,3,c	;volatile
  1099                           
  1100                           ;main.c: 68: LATCbits.LATC5 = 0;
  1101  001B9A  9A8B               	bcf	3979,5,c	;volatile
  1102  001B9C                     l6522:
  1103                           
  1104                           ;main.c: 70: updateComms();
  1105  001B9C  EC6A  F015         	call	_updateComms	;wreg free
  1106                           
  1107                           ;main.c: 76: if (time > 1) {
  1108  001BA0  0100               	movlb	0	; () banked
  1109  001BA2  51DC               	movf	(_time+1)& (0+255),w,b	;volatile
  1110  001BA4  E105               	bnz	u7370
  1111  001BA6  0E02               	movlw	2
  1112  001BA8  0100               	movlb	0	; () banked
  1113  001BAA  5DDB               	subwf	_time& (0+255),w,b	;volatile
  1114  001BAC  A0D8               	btfss	status,0,c
  1115  001BAE  D7F6               	goto	l6522
  1116  001BB0                     u7370:
  1117                           
  1118                           ; BSR set to: 0
  1119                           ;main.c: 77: LEDsetValue((throttle)*(24.0 / 100.0), 1);
  1120  001BB0  0EC3               	movlw	195
  1121  001BB2  6E29               	movwf	___ftmul@f2,c
  1122  001BB4  0E75               	movlw	117
  1123  001BB6  6E2A               	movwf	___ftmul@f2+1,c
  1124  001BB8  0E3E               	movlw	62
  1125  001BBA  6E2B               	movwf	___ftmul@f2+2,c
  1126  001BBC  C0D9  F023         	movff	_throttle,___lwtoft@c
  1127  001BC0  C0DA  F024         	movff	_throttle+1,___lwtoft@c+1
  1128  001BC4  EC4C  F016         	call	___lwtoft	;wreg free
  1129  001BC8  C023  F026         	movff	?___lwtoft,___ftmul@f1
  1130  001BCC  C024  F027         	movff	?___lwtoft+1,___ftmul@f1+1
  1131  001BD0  C025  F028         	movff	?___lwtoft+2,___ftmul@f1+2
  1132  001BD4  ECED  F00A         	call	___ftmul	;wreg free
  1133  001BD8  C026  F0F7         	movff	?___ftmul,___fttol@f1
  1134  001BDC  C027  F0F8         	movff	?___ftmul+1,___fttol@f1+1
  1135  001BE0  C028  F0F9         	movff	?___ftmul+2,___fttol@f1+2
  1136  001BE4  ECB3  F009         	call	___fttol	;wreg free
  1137  001BE8  C0F7  F13F         	movff	?___fttol,LEDsetValue@value
  1138  001BEC  C0F8  F140         	movff	?___fttol+1,LEDsetValue@value+1
  1139  001BF0  0E00               	movlw	0
  1140  001BF2  0101               	movlb	1	; () banked
  1141  001BF4  6F42               	movwf	(LEDsetValue@color+1)& (0+255),b
  1142  001BF6  0E01               	movlw	1
  1143  001BF8  6F41               	movwf	LEDsetValue@color& (0+255),b
  1144  001BFA  EC92  F010         	call	_LEDsetValue	;wreg free
  1145                           
  1146                           ;main.c: 78: LEDwriteDisplay(0x70);
  1147  001BFE  0E70               	movlw	112
  1148  001C00  EC83  F00B         	call	_LEDwriteDisplay
  1149                           
  1150                           ;main.c: 79: LEDsetValue((brake)*(24.0 / 100.0), 1);
  1151  001C04  0EC3               	movlw	195
  1152  001C06  6E29               	movwf	___ftmul@f2,c
  1153  001C08  0E75               	movlw	117
  1154  001C0A  6E2A               	movwf	___ftmul@f2+1,c
  1155  001C0C  0E3E               	movlw	62
  1156  001C0E  6E2B               	movwf	___ftmul@f2+2,c
  1157  001C10  C0C9  F023         	movff	_brake,___lwtoft@c
  1158  001C14  C0CA  F024         	movff	_brake+1,___lwtoft@c+1
  1159  001C18  EC4C  F016         	call	___lwtoft	;wreg free
  1160  001C1C  C023  F026         	movff	?___lwtoft,___ftmul@f1
  1161  001C20  C024  F027         	movff	?___lwtoft+1,___ftmul@f1+1
  1162  001C24  C025  F028         	movff	?___lwtoft+2,___ftmul@f1+2
  1163  001C28  ECED  F00A         	call	___ftmul	;wreg free
  1164  001C2C  C026  F0F7         	movff	?___ftmul,___fttol@f1
  1165  001C30  C027  F0F8         	movff	?___ftmul+1,___fttol@f1+1
  1166  001C34  C028  F0F9         	movff	?___ftmul+2,___fttol@f1+2
  1167  001C38  ECB3  F009         	call	___fttol	;wreg free
  1168  001C3C  C0F7  F13F         	movff	?___fttol,LEDsetValue@value
  1169  001C40  C0F8  F140         	movff	?___fttol+1,LEDsetValue@value+1
  1170  001C44  0E00               	movlw	0
  1171  001C46  0101               	movlb	1	; () banked
  1172  001C48  6F42               	movwf	(LEDsetValue@color+1)& (0+255),b
  1173  001C4A  0E01               	movlw	1
  1174  001C4C  6F41               	movwf	LEDsetValue@color& (0+255),b
  1175  001C4E  EC92  F010         	call	_LEDsetValue	;wreg free
  1176                           
  1177                           ;main.c: 80: LEDwriteDisplay(0x71);
  1178  001C52  0E71               	movlw	113
  1179  001C54  EC83  F00B         	call	_LEDwriteDisplay
  1180                           
  1181                           ;main.c: 81: do { LATA3 = ~LATA3; } while(0);
  1182  001C58  B689               	btfsc	3977,3,c	;volatile
  1183  001C5A  D002               	goto	u7380
  1184  001C5C  8689               	bsf	3977,3,c	;volatile
  1185  001C5E  D001               	goto	l6530
  1186  001C60                     u7380:
  1187  001C60  9689               	bcf	3977,3,c	;volatile
  1188  001C62                     l6530:
  1189                           
  1190                           ;main.c: 82: time = 0;
  1191  001C62  0E00               	movlw	0
  1192  001C64  0100               	movlb	0	; () banked
  1193  001C66  6FDC               	movwf	(_time+1)& (0+255),b	;volatile
  1194  001C68  0E00               	movlw	0
  1195  001C6A  6FDB               	movwf	_time& (0+255),b	;volatile
  1196                           
  1197                           ; BSR set to: 0
  1198                           
  1199                           ; BSR set to: 0
  1200  001C6C  D797               	goto	l6522
  1201  001C6E                     __end_of_main:
  1202                           	opt stack 0
  1203                           tblptru	equ	0xFF8
  1204                           tblptrh	equ	0xFF7
  1205                           tblptrl	equ	0xFF6
  1206                           tablat	equ	0xFF5
  1207                           intcon	equ	0xFF2
  1208                           postinc0	equ	0xFEE
  1209                           wreg	equ	0xFE8
  1210                           status	equ	0xFD8
  1211                           
  1212 ;; *************** function _updateComms *****************
  1213 ;; Defined at:
  1214 ;;		line 7 in file "Communications.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;		None
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;		None
  1219 ;; Return value:  Size  Location     Type
  1220 ;;		None               void
  1221 ;; Registers used:
  1222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1228 ;;      Params:         0       0       0       0       0       0       0
  1229 ;;      Locals:         0       0       0       0       0       0       0
  1230 ;;      Temps:          0       0       0       0       0       0       0
  1231 ;;      Totals:         0       0       0       0       0       0       0
  1232 ;;Total ram usage:        0 bytes
  1233 ;; Hardware stack levels used:    1
  1234 ;; Hardware stack levels required when called:    9
  1235 ;; This function calls:
  1236 ;;		_TBbarGraphs
  1237 ;;		_handleIndicators
  1238 ;;		_receiveData
  1239 ;;		_respondECU
  1240 ;; This function is called by:
  1241 ;;		_main
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           	psect	text1
  1246  002AD4                     __ptext1:
  1247                           	opt stack 0
  1248  002AD4                     _updateComms:
  1249                           	opt stack 21
  1250                           
  1251                           ;Communications.c: 8: if (receiveData()) {
  1252                           
  1253                           ; BSR set to: 0
  1254                           ;incstack = 0
  1255  002AD4  EC64  F000         	call	_receiveData	;wreg free
  1256  002AD8  0900               	iorlw	0
  1257  002ADA  B4D8               	btfsc	status,2,c
  1258  002ADC  0012               	return	
  1259                           
  1260                           ;Communications.c: 10: respondECU();
  1261  002ADE  ECC9  F014         	call	_respondECU	;wreg free
  1262                           
  1263                           ;Communications.c: 12: handleIndicators(receiveArray[2]);
  1264  002AE2  C104  F025         	movff	_receiveArray+4,handleIndicators@receivedIndicators	;volatile
  1265  002AE6  C105  F026         	movff	_receiveArray+5,handleIndicators@receivedIndicators+1	;volatile
  1266  002AEA  ECE0  F012         	call	_handleIndicators	;wreg free
  1267                           
  1268                           ;Communications.c: 13: TBbarGraphs(receiveArray[3], receiveArray[4]);
  1269  002AEE  C106  F01B         	movff	_receiveArray+6,TBbarGraphs@t	;volatile
  1270  002AF2  C107  F01C         	movff	_receiveArray+7,TBbarGraphs@t+1	;volatile
  1271  002AF6  C108  F01D         	movff	_receiveArray+8,TBbarGraphs@b	;volatile
  1272  002AFA  C109  F01E         	movff	_receiveArray+9,TBbarGraphs@b+1	;volatile
  1273  002AFE  ECD4  F016         	call	_TBbarGraphs	;wreg free
  1274                           
  1275                           ;Communications.c: 14: receiveArray[0] = 0;
  1276  002B02  0E00               	movlw	0
  1277  002B04  0101               	movlb	1	; () banked
  1278  002B06  6F01               	movwf	(_receiveArray+1)& (0+255),b	;volatile
  1279  002B08  0E00               	movlw	0
  1280  002B0A  6F00               	movwf	_receiveArray& (0+255),b	;volatile
  1281  002B0C  0012               	return	
  1282  002B0E                     __end_of_updateComms:
  1283                           	opt stack 0
  1284                           tblptru	equ	0xFF8
  1285                           tblptrh	equ	0xFF7
  1286                           tblptrl	equ	0xFF6
  1287                           tablat	equ	0xFF5
  1288                           intcon	equ	0xFF2
  1289                           postinc0	equ	0xFEE
  1290                           wreg	equ	0xFE8
  1291                           status	equ	0xFD8
  1292                           
  1293 ;; *************** function _respondECU *****************
  1294 ;; Defined at:
  1295 ;;		line 18 in file "Communications.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;		None
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;		None
  1300 ;; Return value:  Size  Location     Type
  1301 ;;		None               void
  1302 ;; Registers used:
  1303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1309 ;;      Params:         0       0       0       0       0       0       0
  1310 ;;      Locals:         0       0       0       0       0       0       0
  1311 ;;      Temps:          0       0       0       0       0       0       0
  1312 ;;      Totals:         0       0       0       0       0       0       0
  1313 ;;Total ram usage:        0 bytes
  1314 ;; Hardware stack levels used:    1
  1315 ;; Hardware stack levels required when called:    8
  1316 ;; This function calls:
  1317 ;;		_Delay
  1318 ;;		_ToSend
  1319 ;;		_buttonsCollector
  1320 ;;		_sendData
  1321 ;; This function is called by:
  1322 ;;		_updateComms
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text2
  1327  002992                     __ptext2:
  1328                           	opt stack 0
  1329  002992                     _respondECU:
  1330                           	opt stack 21
  1331                           
  1332                           ;Communications.c: 19: LATCbits.LATC5 = 1;
  1333                           
  1334                           ;incstack = 0
  1335  002992  8A8B               	bsf	3979,5,c	;volatile
  1336                           
  1337                           ;Communications.c: 20: ToSend(0, 3);
  1338  002994  0E00               	movlw	0
  1339  002996  6E2B               	movwf	ToSend@what+1,c
  1340  002998  0E03               	movlw	3
  1341  00299A  6E2A               	movwf	ToSend@what,c
  1342  00299C  0E00               	movlw	0
  1343  00299E  EC5E  F016         	call	_ToSend
  1344                           
  1345                           ;Communications.c: 21: ToSend(8, buttonsCollector());
  1346  0029A2  EC56  F013         	call	_buttonsCollector	;wreg free
  1347  0029A6  C021  F02A         	movff	?_buttonsCollector,ToSend@what
  1348  0029AA  C022  F02B         	movff	?_buttonsCollector+1,ToSend@what+1
  1349  0029AE  0E08               	movlw	8
  1350  0029B0  EC5E  F016         	call	_ToSend
  1351                           
  1352                           ;Communications.c: 22: Delay(9);
  1353  0029B4  0E00               	movlw	0
  1354  0029B6  6E1C               	movwf	Delay@wait+1,c
  1355  0029B8  0E09               	movlw	9
  1356  0029BA  6E1B               	movwf	Delay@wait,c
  1357  0029BC  EC87  F015         	call	_Delay	;wreg free
  1358                           
  1359                           ;Communications.c: 23: sendData(1);
  1360  0029C0  0E01               	movlw	1
  1361  0029C2  EC55  F00A         	call	_sendData
  1362                           
  1363                           ;Communications.c: 24: Delay(3);
  1364  0029C6  0E00               	movlw	0
  1365  0029C8  6E1C               	movwf	Delay@wait+1,c
  1366  0029CA  0E03               	movlw	3
  1367  0029CC  6E1B               	movwf	Delay@wait,c
  1368  0029CE  EC87  F015         	call	_Delay	;wreg free
  1369                           
  1370                           ;Communications.c: 25: LATCbits.LATC5 = 0;
  1371  0029D2  9A8B               	bcf	3979,5,c	;volatile
  1372  0029D4  0012               	return		;funcret
  1373  0029D6                     __end_of_respondECU:
  1374                           	opt stack 0
  1375                           tblptru	equ	0xFF8
  1376                           tblptrh	equ	0xFF7
  1377                           tblptrl	equ	0xFF6
  1378                           tablat	equ	0xFF5
  1379                           intcon	equ	0xFF2
  1380                           postinc0	equ	0xFEE
  1381                           wreg	equ	0xFE8
  1382                           status	equ	0xFD8
  1383                           
  1384 ;; *************** function _sendData *****************
  1385 ;; Defined at:
  1386 ;;		line 53 in file "FastTransfer.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;  whereToSend     1    wreg     unsigned char 
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;  whereToSend     1   39[COMRAM] unsigned char 
  1391 ;;  i               2   41[COMRAM] int 
  1392 ;;  CS              1   40[COMRAM] unsigned char 
  1393 ;; Return value:  Size  Location     Type
  1394 ;;		None               void
  1395 ;; Registers used:
  1396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1402 ;;      Params:         0       0       0       0       0       0       0
  1403 ;;      Locals:         4       0       0       0       0       0       0
  1404 ;;      Temps:          1       0       0       0       0       0       0
  1405 ;;      Totals:         5       0       0       0       0       0       0
  1406 ;;Total ram usage:        5 bytes
  1407 ;; Hardware stack levels used:    1
  1408 ;; Hardware stack levels required when called:    7
  1409 ;; This function calls:
  1410 ;;		Absolute function
  1411 ;;		_CRC8
  1412 ;;		_FastTransfer_buffer_flush
  1413 ;;		_Send_put
  1414 ;;		_crcBufS_put
  1415 ;; This function is called by:
  1416 ;;		_respondECU
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           	psect	text3
  1421  0014AA                     __ptext3:
  1422                           	opt stack 0
  1423  0014AA                     _sendData:
  1424                           	opt stack 21
  1425                           
  1426                           ;incstack = 0
  1427                           ;sendData@whereToSend stored from wreg
  1428  0014AA  6E28               	movwf	sendData@whereToSend,c
  1429                           
  1430                           ;FastTransfer.c: 56: unsigned char CS = CRC8(sendStructAddress, ring_buffer.count);
  1431  0014AC  C0D5  F01B         	movff	_sendStructAddress,CRC8@data
  1432  0014B0  C0D6  F01C         	movff	_sendStructAddress+1,CRC8@data+1
  1433  0014B4  C2CC  F01D         	movff	_ring_buffer+204,CRC8@len
  1434  0014B8  ECA4  F014         	call	_CRC8	;wreg free
  1435  0014BC  6E29               	movwf	sendData@CS,c
  1436                           
  1437                           ;FastTransfer.c: 58: serial_write(0x06);
  1438  0014BE  D801               	call	u5598
  1439  0014C0  D00B               	goto	l5580
  1440  0014C2                     u5598:
  1441  0014C2  0005               	push	
  1442  0014C4  6EFA               	movwf	pclath,c
  1443  0014C6  5032               	movf	_serial_write,w,c
  1444  0014C8  6EFD               	movwf	tosl,c
  1445  0014CA  5033               	movf	_serial_write+1,w,c
  1446  0014CC  6EFE               	movwf	tosh,c
  1447  0014CE  50F8               	movf	tblptru,w,c
  1448  0014D0  6EFF               	movwf	tosu,c
  1449  0014D2  50FA               	movf	pclath,w,c
  1450  0014D4  0E06               	movlw	6
  1451  0014D6  0012               	return		;indir
  1452  0014D8                     l5580:
  1453                           
  1454                           ;FastTransfer.c: 59: serial_write(0x85);
  1455  0014D8  D801               	call	u5608
  1456  0014DA  D00B               	goto	l5582
  1457  0014DC                     u5608:
  1458  0014DC  0005               	push	
  1459  0014DE  6EFA               	movwf	pclath,c
  1460  0014E0  5032               	movf	_serial_write,w,c
  1461  0014E2  6EFD               	movwf	tosl,c
  1462  0014E4  5033               	movf	_serial_write+1,w,c
  1463  0014E6  6EFE               	movwf	tosh,c
  1464  0014E8  50F8               	movf	tblptru,w,c
  1465  0014EA  6EFF               	movwf	tosu,c
  1466  0014EC  50FA               	movf	pclath,w,c
  1467  0014EE  0E85               	movlw	133
  1468  0014F0  0012               	return		;indir
  1469  0014F2                     l5582:
  1470                           
  1471                           ;FastTransfer.c: 60: serial_write(whereToSend);
  1472  0014F2  D801               	call	u5618
  1473  0014F4  D00B               	goto	l5584
  1474  0014F6                     u5618:
  1475  0014F6  0005               	push	
  1476  0014F8  6EFA               	movwf	pclath,c
  1477  0014FA  5032               	movf	_serial_write,w,c
  1478  0014FC  6EFD               	movwf	tosl,c
  1479  0014FE  5033               	movf	_serial_write+1,w,c
  1480  001500  6EFE               	movwf	tosh,c
  1481  001502  50F8               	movf	tblptru,w,c
  1482  001504  6EFF               	movwf	tosu,c
  1483  001506  50FA               	movf	pclath,w,c
  1484  001508  5028               	movf	sendData@whereToSend,w,c
  1485  00150A  0012               	return		;indir
  1486  00150C                     l5584:
  1487                           
  1488                           ;FastTransfer.c: 61: serial_write(moduleAddress);
  1489  00150C  D801               	call	u5628
  1490  00150E  D00B               	goto	l5586
  1491  001510                     u5628:
  1492  001510  0005               	push	
  1493  001512  6EFA               	movwf	pclath,c
  1494  001514  5032               	movf	_serial_write,w,c
  1495  001516  6EFD               	movwf	tosl,c
  1496  001518  5033               	movf	_serial_write+1,w,c
  1497  00151A  6EFE               	movwf	tosh,c
  1498  00151C  50F8               	movf	tblptru,w,c
  1499  00151E  6EFF               	movwf	tosu,c
  1500  001520  50FA               	movf	pclath,w,c
  1501  001522  503B               	movf	_moduleAddress,w,c
  1502  001524  0012               	return		;indir
  1503  001526                     l5586:
  1504                           
  1505                           ;FastTransfer.c: 62: serial_write(ring_buffer.count);
  1506  001526  D801               	call	u5638
  1507  001528  D00C               	goto	l5588
  1508  00152A                     u5638:
  1509  00152A  0005               	push	
  1510  00152C  6EFA               	movwf	pclath,c
  1511  00152E  5032               	movf	_serial_write,w,c
  1512  001530  6EFD               	movwf	tosl,c
  1513  001532  5033               	movf	_serial_write+1,w,c
  1514  001534  6EFE               	movwf	tosh,c
  1515  001536  50F8               	movf	tblptru,w,c
  1516  001538  6EFF               	movwf	tosu,c
  1517  00153A  50FA               	movf	pclath,w,c
  1518  00153C  0102               	movlb	2	; () banked
  1519  00153E  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  1520  001540  0012               	return		;indir
  1521  001542                     l5588:
  1522                           
  1523                           ;FastTransfer.c: 66: int i;
  1524                           ;FastTransfer.c: 67: for (i = 0; i < ring_buffer.count; i++) {
  1525  001542  0E00               	movlw	0
  1526  001544  6E2B               	movwf	sendData@i+1,c
  1527  001546  0E00               	movlw	0
  1528  001548  6E2A               	movwf	sendData@i,c
  1529  00154A  D017               	goto	l5594
  1530  00154C                     l5590:
  1531                           
  1532                           ;FastTransfer.c: 68: serial_write(*(sendStructAddress + i));
  1533  00154C  D801               	call	u5648
  1534  00154E  D013               	goto	l5592
  1535  001550                     u5648:
  1536  001550  0005               	push	
  1537  001552  6EFA               	movwf	pclath,c
  1538  001554  5032               	movf	_serial_write,w,c
  1539  001556  6EFD               	movwf	tosl,c
  1540  001558  5033               	movf	_serial_write+1,w,c
  1541  00155A  6EFE               	movwf	tosh,c
  1542  00155C  50F8               	movf	tblptru,w,c
  1543  00155E  6EFF               	movwf	tosu,c
  1544  001560  50FA               	movf	pclath,w,c
  1545  001562  502A               	movf	sendData@i,w,c
  1546  001564  0100               	movlb	0	; () banked
  1547  001566  25D5               	addwf	_sendStructAddress& (0+255),w,b
  1548  001568  6ED9               	movwf	fsr2l,c
  1549  00156A  502B               	movf	sendData@i+1,w,c
  1550  00156C  0100               	movlb	0	; () banked
  1551  00156E  21D6               	addwfc	(_sendStructAddress+1)& (0+255),w,b
  1552  001570  6EDA               	movwf	fsr2h,c
  1553  001572  50DF               	movf	indf2,w,c
  1554  001574  0012               	return		;indir
  1555  001576                     l5592:
  1556  001576  4A2A               	infsnz	sendData@i,f,c
  1557  001578  2A2B               	incf	sendData@i+1,f,c
  1558  00157A                     l5594:
  1559  00157A  0102               	movlb	2	; () banked
  1560  00157C  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  1561  00157E  5C2A               	subwf	sendData@i,w,c
  1562  001580  502B               	movf	sendData@i+1,w,c
  1563  001582  0A80               	xorlw	128
  1564  001584  6E27               	movwf	??_sendData& (0+255),c
  1565  001586  0102               	movlb	2	; () banked
  1566  001588  51CD               	movf	(_ring_buffer+205)& (0+255),w,b
  1567  00158A  0A80               	xorlw	128
  1568  00158C  5827               	subwfb	??_sendData& (0+255),w,c
  1569  00158E  A0D8               	btfss	status,0,c
  1570  001590  D7DD               	goto	l5590
  1571                           
  1572                           ; BSR set to: 2
  1573                           ;FastTransfer.c: 69: }
  1574                           ;FastTransfer.c: 72: serial_write(CS);
  1575                           
  1576                           ; BSR set to: 2
  1577  001592  D801               	call	u5668
  1578  001594  D00B               	goto	l5598
  1579  001596                     u5668:
  1580  001596  0005               	push	
  1581  001598  6EFA               	movwf	pclath,c
  1582  00159A  5032               	movf	_serial_write,w,c
  1583  00159C  6EFD               	movwf	tosl,c
  1584  00159E  5033               	movf	_serial_write+1,w,c
  1585  0015A0  6EFE               	movwf	tosh,c
  1586  0015A2  50F8               	movf	tblptru,w,c
  1587  0015A4  6EFF               	movwf	tosu,c
  1588  0015A6  50FA               	movf	pclath,w,c
  1589  0015A8  5029               	movf	sendData@CS,w,c
  1590  0015AA  0012               	return		;indir
  1591  0015AC                     l5598:
  1592                           
  1593                           ;FastTransfer.c: 75: crcBufS_put(&crc_buffer, whereToSend, CS, 0);
  1594  0015AC  0E28               	movlw	low _crc_buffer
  1595  0015AE  6E1B               	movwf	crcBufS_put@_this,c
  1596  0015B0  0E01               	movlw	high _crc_buffer
  1597  0015B2  6E1C               	movwf	crcBufS_put@_this+1,c
  1598  0015B4  C028  F01D         	movff	sendData@whereToSend,crcBufS_put@address
  1599  0015B8  C029  F01E         	movff	sendData@CS,crcBufS_put@oldCRC
  1600  0015BC  0E00               	movlw	0
  1601  0015BE  6E1F               	movwf	crcBufS_put@status,c
  1602  0015C0  ECA8  F00E         	call	_crcBufS_put
  1603                           
  1604                           ;FastTransfer.c: 78: FastTransfer_buffer_flush(&ring_buffer, 1);
  1605  0015C4  0E00               	movlw	low _ring_buffer
  1606  0015C6  6E23               	movwf	FastTransfer_buffer_flush@_this,c
  1607  0015C8  0E02               	movlw	high _ring_buffer
  1608  0015CA  6E24               	movwf	FastTransfer_buffer_flush@_this+1,c
  1609  0015CC  0E00               	movlw	0
  1610  0015CE  6E26               	movwf	FastTransfer_buffer_flush@clearBuffer+1,c
  1611  0015D0  0E01               	movlw	1
  1612  0015D2  6E25               	movwf	FastTransfer_buffer_flush@clearBuffer,c
  1613  0015D4  ECC6  F013         	call	_FastTransfer_buffer_flush	;wreg free
  1614  0015D8  0012               	return		;funcret
  1615  0015DA                     __end_of_sendData:
  1616                           	opt stack 0
  1617                           tosu	equ	0xFFF
  1618                           tosh	equ	0xFFE
  1619                           tosl	equ	0xFFD
  1620                           pclath	equ	0xFFA
  1621                           tblptru	equ	0xFF8
  1622                           tblptrh	equ	0xFF7
  1623                           tblptrl	equ	0xFF6
  1624                           tablat	equ	0xFF5
  1625                           intcon	equ	0xFF2
  1626                           postinc0	equ	0xFEE
  1627                           wreg	equ	0xFE8
  1628                           indf2	equ	0xFDF
  1629                           fsr2h	equ	0xFDA
  1630                           fsr2l	equ	0xFD9
  1631                           status	equ	0xFD8
  1632                           
  1633 ;; *************** function _crcBufS_put *****************
  1634 ;; Defined at:
  1635 ;;		line 321 in file "FastTransfer.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  1638 ;;		 -> crc_buffer(17), 
  1639 ;;  address         1   28[COMRAM] unsigned char 
  1640 ;;  oldCRC          1   29[COMRAM] unsigned char 
  1641 ;;  status          1   30[COMRAM] unsigned char 
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;		None
  1644 ;; Return value:  Size  Location     Type
  1645 ;;		None               void
  1646 ;; Registers used:
  1647 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1653 ;;      Params:         5       0       0       0       0       0       0
  1654 ;;      Locals:         0       0       0       0       0       0       0
  1655 ;;      Temps:          2       0       0       0       0       0       0
  1656 ;;      Totals:         7       0       0       0       0       0       0
  1657 ;;Total ram usage:        7 bytes
  1658 ;; Hardware stack levels used:    1
  1659 ;; Hardware stack levels required when called:    4
  1660 ;; This function calls:
  1661 ;;		Nothing
  1662 ;; This function is called by:
  1663 ;;		_sendData
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text4
  1668  001D50                     __ptext4:
  1669                           	opt stack 0
  1670  001D50                     _crcBufS_put:
  1671                           	opt stack 23
  1672                           
  1673                           ;FastTransfer.c: 322: _this->buf[_this->head] = address;
  1674                           
  1675                           ;incstack = 0
  1676  001D50  EE20 F00F          	lfsr	2,15
  1677  001D54  501B               	movf	crcBufS_put@_this,w,c
  1678  001D56  26D9               	addwf	fsr2l,f,c
  1679  001D58  501C               	movf	crcBufS_put@_this+1,w,c
  1680  001D5A  22DA               	addwfc	fsr2h,f,c
  1681  001D5C  CFDE F020          	movff	postinc2,??_crcBufS_put
  1682  001D60  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  1683  001D64  5020               	movf	??_crcBufS_put,w,c
  1684  001D66  241B               	addwf	crcBufS_put@_this,w,c
  1685  001D68  6ED9               	movwf	fsr2l,c
  1686  001D6A  5021               	movf	??_crcBufS_put+1,w,c
  1687  001D6C  201C               	addwfc	crcBufS_put@_this+1,w,c
  1688  001D6E  6EDA               	movwf	fsr2h,c
  1689  001D70  C01D  FFDF         	movff	crcBufS_put@address,indf2
  1690                           
  1691                           ;FastTransfer.c: 323: _this->head++;
  1692  001D74  EE20 F00F          	lfsr	2,15
  1693  001D78  501B               	movf	crcBufS_put@_this,w,c
  1694  001D7A  26D9               	addwf	fsr2l,f,c
  1695  001D7C  501C               	movf	crcBufS_put@_this+1,w,c
  1696  001D7E  22DA               	addwfc	fsr2h,f,c
  1697  001D80  2ADE               	incf	postinc2,f,c
  1698  001D82  0E00               	movlw	0
  1699  001D84  22DD               	addwfc	postdec2,f,c
  1700                           
  1701                           ;FastTransfer.c: 324: _this->buf[_this->head] = oldCRC;
  1702  001D86  EE20 F00F          	lfsr	2,15
  1703  001D8A  501B               	movf	crcBufS_put@_this,w,c
  1704  001D8C  26D9               	addwf	fsr2l,f,c
  1705  001D8E  501C               	movf	crcBufS_put@_this+1,w,c
  1706  001D90  22DA               	addwfc	fsr2h,f,c
  1707  001D92  CFDE F020          	movff	postinc2,??_crcBufS_put
  1708  001D96  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  1709  001D9A  5020               	movf	??_crcBufS_put,w,c
  1710  001D9C  241B               	addwf	crcBufS_put@_this,w,c
  1711  001D9E  6ED9               	movwf	fsr2l,c
  1712  001DA0  5021               	movf	??_crcBufS_put+1,w,c
  1713  001DA2  201C               	addwfc	crcBufS_put@_this+1,w,c
  1714  001DA4  6EDA               	movwf	fsr2h,c
  1715  001DA6  C01E  FFDF         	movff	crcBufS_put@oldCRC,indf2
  1716                           
  1717                           ;FastTransfer.c: 325: _this->head++;
  1718  001DAA  EE20 F00F          	lfsr	2,15
  1719  001DAE  501B               	movf	crcBufS_put@_this,w,c
  1720  001DB0  26D9               	addwf	fsr2l,f,c
  1721  001DB2  501C               	movf	crcBufS_put@_this+1,w,c
  1722  001DB4  22DA               	addwfc	fsr2h,f,c
  1723  001DB6  2ADE               	incf	postinc2,f,c
  1724  001DB8  0E00               	movlw	0
  1725  001DBA  22DD               	addwfc	postdec2,f,c
  1726                           
  1727                           ;FastTransfer.c: 326: _this->buf[_this->head] = status;
  1728  001DBC  EE20 F00F          	lfsr	2,15
  1729  001DC0  501B               	movf	crcBufS_put@_this,w,c
  1730  001DC2  26D9               	addwf	fsr2l,f,c
  1731  001DC4  501C               	movf	crcBufS_put@_this+1,w,c
  1732  001DC6  22DA               	addwfc	fsr2h,f,c
  1733  001DC8  CFDE F020          	movff	postinc2,??_crcBufS_put
  1734  001DCC  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  1735  001DD0  5020               	movf	??_crcBufS_put,w,c
  1736  001DD2  241B               	addwf	crcBufS_put@_this,w,c
  1737  001DD4  6ED9               	movwf	fsr2l,c
  1738  001DD6  5021               	movf	??_crcBufS_put+1,w,c
  1739  001DD8  201C               	addwfc	crcBufS_put@_this+1,w,c
  1740  001DDA  6EDA               	movwf	fsr2h,c
  1741  001DDC  C01F  FFDF         	movff	crcBufS_put@status,indf2
  1742                           
  1743                           ;FastTransfer.c: 327: _this->head++;
  1744  001DE0  EE20 F00F          	lfsr	2,15
  1745  001DE4  501B               	movf	crcBufS_put@_this,w,c
  1746  001DE6  26D9               	addwf	fsr2l,f,c
  1747  001DE8  501C               	movf	crcBufS_put@_this+1,w,c
  1748  001DEA  22DA               	addwfc	fsr2h,f,c
  1749  001DEC  2ADE               	incf	postinc2,f,c
  1750  001DEE  0E00               	movlw	0
  1751  001DF0  22DD               	addwfc	postdec2,f,c
  1752                           
  1753                           ;FastTransfer.c: 328: if (_this->head >= (5 * 3)) {
  1754  001DF2  EE20 F00F          	lfsr	2,15
  1755  001DF6  501B               	movf	crcBufS_put@_this,w,c
  1756  001DF8  26D9               	addwf	fsr2l,f,c
  1757  001DFA  501C               	movf	crcBufS_put@_this+1,w,c
  1758  001DFC  22DA               	addwfc	fsr2h,f,c
  1759  001DFE  0E01               	movlw	1
  1760  001E00  BEDB               	btfsc	plusw2,7,c
  1761  001E02  0012               	return	
  1762  001E04  0E01               	movlw	1
  1763  001E06  50DB               	movf	plusw2,w,c
  1764  001E08  E104               	bnz	u5270
  1765  001E0A  0E0F               	movlw	15
  1766  001E0C  5CDE               	subwf	postinc2,w,c
  1767  001E0E  A0D8               	btfss	status,0,c
  1768  001E10  0012               	return	
  1769  001E12                     u5270:
  1770                           
  1771                           ;FastTransfer.c: 329: _this->head = 0;
  1772  001E12  EE20 F00F          	lfsr	2,15
  1773  001E16  501B               	movf	crcBufS_put@_this,w,c
  1774  001E18  26D9               	addwf	fsr2l,f,c
  1775  001E1A  501C               	movf	crcBufS_put@_this+1,w,c
  1776  001E1C  22DA               	addwfc	fsr2h,f,c
  1777  001E1E  0E00               	movlw	0
  1778  001E20  6EDE               	movwf	postinc2,c
  1779  001E22  0E00               	movlw	0
  1780  001E24  6EDD               	movwf	postdec2,c
  1781  001E26  0012               	return	
  1782  001E28                     __end_of_crcBufS_put:
  1783                           	opt stack 0
  1784                           tosu	equ	0xFFF
  1785                           tosh	equ	0xFFE
  1786                           tosl	equ	0xFFD
  1787                           pclath	equ	0xFFA
  1788                           tblptru	equ	0xFF8
  1789                           tblptrh	equ	0xFF7
  1790                           tblptrl	equ	0xFF6
  1791                           tablat	equ	0xFF5
  1792                           intcon	equ	0xFF2
  1793                           postinc0	equ	0xFEE
  1794                           wreg	equ	0xFE8
  1795                           indf2	equ	0xFDF
  1796                           postinc2	equ	0xFDE
  1797                           postdec2	equ	0xFDD
  1798                           plusw2	equ	0xFDB
  1799                           fsr2h	equ	0xFDA
  1800                           fsr2l	equ	0xFD9
  1801                           status	equ	0xFD8
  1802                           
  1803 ;; *************** function _FastTransfer_buffer_flush *****************
  1804 ;; Defined at:
  1805 ;;		line 261 in file "FastTransfer.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;  _this           2   34[COMRAM] PTR struct ringBufS
  1808 ;;		 -> ring_buffer(206), 
  1809 ;;  clearBuffer     2   36[COMRAM] const int 
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;		None
  1812 ;; Return value:  Size  Location     Type
  1813 ;;		None               void
  1814 ;; Registers used:
  1815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1821 ;;      Params:         4       0       0       0       0       0       0
  1822 ;;      Locals:         0       0       0       0       0       0       0
  1823 ;;      Temps:          0       0       0       0       0       0       0
  1824 ;;      Totals:         4       0       0       0       0       0       0
  1825 ;;Total ram usage:        4 bytes
  1826 ;; Hardware stack levels used:    1
  1827 ;; Hardware stack levels required when called:    5
  1828 ;; This function calls:
  1829 ;;		_memset
  1830 ;; This function is called by:
  1831 ;;		_sendData
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835                           	psect	text5
  1836  00278C                     __ptext5:
  1837                           	opt stack 0
  1838  00278C                     _FastTransfer_buffer_flush:
  1839                           	opt stack 22
  1840                           
  1841                           ;FastTransfer.c: 262: _this->count = 0;
  1842                           
  1843                           ;incstack = 0
  1844  00278C  EE20 F0CC          	lfsr	2,204
  1845  002790  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  1846  002792  26D9               	addwf	fsr2l,f,c
  1847  002794  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  1848  002796  22DA               	addwfc	fsr2h,f,c
  1849  002798  0E00               	movlw	0
  1850  00279A  6EDE               	movwf	postinc2,c
  1851  00279C  0E00               	movlw	0
  1852  00279E  6EDD               	movwf	postdec2,c
  1853                           
  1854                           ;FastTransfer.c: 263: _this->head = 0;
  1855  0027A0  EE20 F0C8          	lfsr	2,200
  1856  0027A4  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  1857  0027A6  26D9               	addwf	fsr2l,f,c
  1858  0027A8  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  1859  0027AA  22DA               	addwfc	fsr2h,f,c
  1860  0027AC  0E00               	movlw	0
  1861  0027AE  6EDE               	movwf	postinc2,c
  1862  0027B0  0E00               	movlw	0
  1863  0027B2  6EDD               	movwf	postdec2,c
  1864                           
  1865                           ;FastTransfer.c: 264: _this->tail = 0;
  1866  0027B4  EE20 F0CA          	lfsr	2,202
  1867  0027B8  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  1868  0027BA  26D9               	addwf	fsr2l,f,c
  1869  0027BC  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  1870  0027BE  22DA               	addwfc	fsr2h,f,c
  1871  0027C0  0E00               	movlw	0
  1872  0027C2  6EDE               	movwf	postinc2,c
  1873  0027C4  0E00               	movlw	0
  1874  0027C6  6EDD               	movwf	postdec2,c
  1875                           
  1876                           ;FastTransfer.c: 265: if (clearBuffer) {
  1877  0027C8  5025               	movf	FastTransfer_buffer_flush@clearBuffer,w,c
  1878  0027CA  1026               	iorwf	FastTransfer_buffer_flush@clearBuffer+1,w,c
  1879  0027CC  B4D8               	btfsc	status,2,c
  1880  0027CE  0012               	return	
  1881                           
  1882                           ;FastTransfer.c: 266: memset(_this->buf, 0, sizeof (_this->buf));
  1883  0027D0  C023  F01B         	movff	FastTransfer_buffer_flush@_this,memset@p1
  1884  0027D4  C024  F01C         	movff	FastTransfer_buffer_flush@_this+1,memset@p1+1
  1885  0027D8  0E00               	movlw	0
  1886  0027DA  6E1E               	movwf	memset@c+1,c
  1887  0027DC  0E00               	movlw	0
  1888  0027DE  6E1D               	movwf	memset@c,c
  1889  0027E0  0E00               	movlw	0
  1890  0027E2  6E20               	movwf	memset@n+1,c
  1891  0027E4  0EC8               	movlw	200
  1892  0027E6  6E1F               	movwf	memset@n,c
  1893  0027E8  ECD1  F015         	call	_memset	;wreg free
  1894  0027EC  0012               	return	
  1895  0027EE                     __end_of_FastTransfer_buffer_flush:
  1896                           	opt stack 0
  1897                           tosu	equ	0xFFF
  1898                           tosh	equ	0xFFE
  1899                           tosl	equ	0xFFD
  1900                           pclath	equ	0xFFA
  1901                           tblptru	equ	0xFF8
  1902                           tblptrh	equ	0xFF7
  1903                           tblptrl	equ	0xFF6
  1904                           tablat	equ	0xFF5
  1905                           intcon	equ	0xFF2
  1906                           postinc0	equ	0xFEE
  1907                           wreg	equ	0xFE8
  1908                           indf2	equ	0xFDF
  1909                           postinc2	equ	0xFDE
  1910                           postdec2	equ	0xFDD
  1911                           plusw2	equ	0xFDB
  1912                           fsr2h	equ	0xFDA
  1913                           fsr2l	equ	0xFD9
  1914                           status	equ	0xFD8
  1915                           
  1916 ;; *************** function _buttonsCollector *****************
  1917 ;; Defined at:
  1918 ;;		line 52 in file "Communications.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;		None
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;  i               2   39[COMRAM] int 
  1923 ;;  sendVal         2   37[COMRAM] unsigned int 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  2   32[COMRAM] unsigned int 
  1926 ;; Registers used:
  1927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1933 ;;      Params:         2       0       0       0       0       0       0
  1934 ;;      Locals:         4       0       0       0       0       0       0
  1935 ;;      Temps:          3       0       0       0       0       0       0
  1936 ;;      Totals:         9       0       0       0       0       0       0
  1937 ;;Total ram usage:        9 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; Hardware stack levels required when called:    5
  1940 ;; This function calls:
  1941 ;;		_GetButtonState
  1942 ;; This function is called by:
  1943 ;;		_respondECU
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           	psect	text6
  1948  0026AC                     __ptext6:
  1949                           	opt stack 0
  1950  0026AC                     _buttonsCollector:
  1951                           	opt stack 23
  1952                           
  1953                           ;Communications.c: 53: unsigned int sendVal = 0;
  1954                           
  1955                           ;incstack = 0
  1956  0026AC  0E00               	movlw	0
  1957  0026AE  6E27               	movwf	buttonsCollector@sendVal+1,c
  1958  0026B0  0E00               	movlw	0
  1959  0026B2  6E26               	movwf	buttonsCollector@sendVal,c
  1960                           
  1961                           ;Communications.c: 54: int i = 0;
  1962  0026B4  0E00               	movlw	0
  1963  0026B6  6E29               	movwf	buttonsCollector@i+1,c
  1964  0026B8  0E00               	movlw	0
  1965  0026BA  6E28               	movwf	buttonsCollector@i,c
  1966                           
  1967                           ;Communications.c: 55: for (i = 0; i < 8; i++) {
  1968  0026BC  0E00               	movlw	0
  1969  0026BE  6E29               	movwf	buttonsCollector@i+1,c
  1970  0026C0  0E00               	movlw	0
  1971  0026C2  6E28               	movwf	buttonsCollector@i,c
  1972  0026C4  BE29               	btfsc	buttonsCollector@i+1,7,c
  1973  0026C6  D006               	goto	l5570
  1974  0026C8  5029               	movf	buttonsCollector@i+1,w,c
  1975  0026CA  E123               	bnz	l749
  1976  0026CC  0E08               	movlw	8
  1977  0026CE  5C28               	subwf	buttonsCollector@i,w,c
  1978  0026D0  B0D8               	btfsc	status,0,c
  1979  0026D2  D01F               	goto	l749
  1980  0026D4                     l5570:
  1981                           
  1982                           ;Communications.c: 56: sendVal = sendVal | ((GetButtonState(i)&0x01) << i);
  1983  0026D4  C028  F023         	movff	buttonsCollector@i,??_buttonsCollector
  1984  0026D8  C028  F01B         	movff	buttonsCollector@i,GetButtonState@btnnum
  1985  0026DC  C029  F01C         	movff	buttonsCollector@i+1,GetButtonState@btnnum+1
  1986  0026E0  EC26  F016         	call	_GetButtonState	;wreg free
  1987  0026E4  0B01               	andlw	1
  1988  0026E6  6E24               	movwf	(??_buttonsCollector+1)& (0+255),c
  1989  0026E8  6A25               	clrf	(??_buttonsCollector+2)& (0+255),c
  1990  0026EA  2A23               	incf	??_buttonsCollector,f,c
  1991  0026EC  D003               	goto	u5574
  1992  0026EE                     u5575:
  1993  0026EE  90D8               	bcf	status,0,c
  1994  0026F0  3624               	rlcf	??_buttonsCollector+1,f,c
  1995  0026F2  3625               	rlcf	??_buttonsCollector+2,f,c
  1996  0026F4                     u5574:
  1997  0026F4  2E23               	decfsz	??_buttonsCollector,f,c
  1998  0026F6  D7FB               	goto	u5575
  1999  0026F8  5026               	movf	buttonsCollector@sendVal,w,c
  2000  0026FA  1024               	iorwf	??_buttonsCollector+1,w,c
  2001  0026FC  6E26               	movwf	buttonsCollector@sendVal,c
  2002  0026FE  5027               	movf	buttonsCollector@sendVal+1,w,c
  2003  002700  1025               	iorwf	??_buttonsCollector+2,w,c
  2004  002702  6E27               	movwf	buttonsCollector@sendVal+1,c
  2005  002704  4A28               	infsnz	buttonsCollector@i,f,c
  2006  002706  2A29               	incf	buttonsCollector@i+1,f,c
  2007  002708  BE29               	btfsc	buttonsCollector@i+1,7,c
  2008  00270A  D7E4               	goto	l5570
  2009  00270C  5029               	movf	buttonsCollector@i+1,w,c
  2010  00270E  E101               	bnz	u5580
  2011  002710  D7DD               	goto	L1
  2012  002712                     u5580:
  2013  002712                     l749:
  2014                           
  2015                           ;Communications.c: 57: }
  2016                           ;Communications.c: 58: return sendVal;
  2017  002712  C026  F021         	movff	buttonsCollector@sendVal,?_buttonsCollector
  2018  002716  C027  F022         	movff	buttonsCollector@sendVal+1,?_buttonsCollector+1
  2019  00271A  0012               	return		;funcret
  2020  00271C                     __end_of_buttonsCollector:
  2021                           	opt stack 0
  2022                           tosu	equ	0xFFF
  2023                           tosh	equ	0xFFE
  2024                           tosl	equ	0xFFD
  2025                           pclath	equ	0xFFA
  2026                           tblptru	equ	0xFF8
  2027                           tblptrh	equ	0xFF7
  2028                           tblptrl	equ	0xFF6
  2029                           tablat	equ	0xFF5
  2030                           intcon	equ	0xFF2
  2031                           postinc0	equ	0xFEE
  2032                           wreg	equ	0xFE8
  2033                           indf2	equ	0xFDF
  2034                           postinc2	equ	0xFDE
  2035                           postdec2	equ	0xFDD
  2036                           plusw2	equ	0xFDB
  2037                           fsr2h	equ	0xFDA
  2038                           fsr2l	equ	0xFD9
  2039                           status	equ	0xFD8
  2040                           
  2041 ;; *************** function _GetButtonState *****************
  2042 ;; Defined at:
  2043 ;;		line 184 in file "IO.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;  btnnum          2   26[COMRAM] int 
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;		None
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      unsigned char 
  2050 ;; Registers used:
  2051 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2057 ;;      Params:         2       0       0       0       0       0       0
  2058 ;;      Locals:         0       0       0       0       0       0       0
  2059 ;;      Temps:          4       0       0       0       0       0       0
  2060 ;;      Totals:         6       0       0       0       0       0       0
  2061 ;;Total ram usage:        6 bytes
  2062 ;; Hardware stack levels used:    1
  2063 ;; Hardware stack levels required when called:    4
  2064 ;; This function calls:
  2065 ;;		Nothing
  2066 ;; This function is called by:
  2067 ;;		_buttonsCollector
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           	psect	text7
  2072  002C4C                     __ptext7:
  2073                           	opt stack 0
  2074  002C4C                     _GetButtonState:
  2075                           	opt stack 23
  2076                           
  2077                           ;IO.c: 185: return butnarray[btnnum - 1];
  2078                           
  2079                           ;incstack = 0
  2080  002C4C  0EFF               	movlw	255
  2081  002C4E  6E1D               	movwf	??_GetButtonState& (0+255),c
  2082  002C50  0EFF               	movlw	255
  2083  002C52  6E1E               	movwf	(??_GetButtonState+1)& (0+255),c
  2084  002C54  C01B  F01F         	movff	GetButtonState@btnnum,??_GetButtonState+2
  2085  002C58  C01C  F020         	movff	GetButtonState@btnnum+1,??_GetButtonState+3
  2086  002C5C  501D               	movf	??_GetButtonState,w,c
  2087  002C5E  261F               	addwf	??_GetButtonState+2,f,c
  2088  002C60  501E               	movf	??_GetButtonState+1,w,c
  2089  002C62  2220               	addwfc	??_GetButtonState+3,f,c
  2090  002C64  0EB0               	movlw	low _butnarray
  2091  002C66  241F               	addwf	??_GetButtonState+2,w,c
  2092  002C68  6ED9               	movwf	fsr2l,c
  2093  002C6A  0E00               	movlw	high _butnarray
  2094  002C6C  2020               	addwfc	??_GetButtonState+3,w,c
  2095  002C6E  6EDA               	movwf	fsr2h,c
  2096  002C70  50DF               	movf	indf2,w,c
  2097  002C72  0012               	return	
  2098  002C74                     __end_of_GetButtonState:
  2099                           	opt stack 0
  2100                           tosu	equ	0xFFF
  2101                           tosh	equ	0xFFE
  2102                           tosl	equ	0xFFD
  2103                           pclath	equ	0xFFA
  2104                           tblptru	equ	0xFF8
  2105                           tblptrh	equ	0xFF7
  2106                           tblptrl	equ	0xFF6
  2107                           tablat	equ	0xFF5
  2108                           intcon	equ	0xFF2
  2109                           postinc0	equ	0xFEE
  2110                           wreg	equ	0xFE8
  2111                           indf2	equ	0xFDF
  2112                           postinc2	equ	0xFDE
  2113                           postdec2	equ	0xFDD
  2114                           plusw2	equ	0xFDB
  2115                           fsr2h	equ	0xFDA
  2116                           fsr2l	equ	0xFD9
  2117                           status	equ	0xFD8
  2118                           
  2119 ;; *************** function _ToSend *****************
  2120 ;; Defined at:
  2121 ;;		line 216 in file "FastTransfer.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;  where           1    wreg     unsigned char 
  2124 ;;  what            2   41[COMRAM] unsigned int 
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  where           1    0[BANK0 ] unsigned char 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;		None               void
  2129 ;; Registers used:
  2130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2136 ;;      Params:         2       0       0       0       0       0       0
  2137 ;;      Locals:         0       1       0       0       0       0       0
  2138 ;;      Temps:          0       0       0       0       0       0       0
  2139 ;;      Totals:         2       1       0       0       0       0       0
  2140 ;;Total ram usage:        3 bytes
  2141 ;; Hardware stack levels used:    1
  2142 ;; Hardware stack levels required when called:    6
  2143 ;; This function calls:
  2144 ;;		_FastTransfer_buffer_put
  2145 ;; This function is called by:
  2146 ;;		_respondECU
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text8
  2151  002CBC                     __ptext8:
  2152                           	opt stack 0
  2153  002CBC                     _ToSend:
  2154                           	opt stack 22
  2155                           
  2156                           ;incstack = 0
  2157                           ;ToSend@where stored from wreg
  2158  002CBC  0100               	movlb	0	; () banked
  2159  002CBE  6FEE               	movwf	ToSend@where& (0+255),b
  2160                           
  2161                           ;FastTransfer.c: 217: FastTransfer_buffer_put(&ring_buffer, where, what);
  2162  002CC0  0E00               	movlw	low _ring_buffer
  2163  002CC2  6E21               	movwf	FastTransfer_buffer_put@_this,c
  2164  002CC4  0E02               	movlw	high _ring_buffer
  2165  002CC6  6E22               	movwf	FastTransfer_buffer_put@_this+1,c
  2166  002CC8  C0EE  F023         	movff	ToSend@where,FastTransfer_buffer_put@towhere
  2167  002CCC  C02A  F024         	movff	ToSend@what,FastTransfer_buffer_put@towhat
  2168  002CD0  C02B  F025         	movff	ToSend@what+1,FastTransfer_buffer_put@towhat+1
  2169  002CD4  EC50  F008         	call	_FastTransfer_buffer_put	;wreg free
  2170  002CD8  0012               	return		;funcret
  2171  002CDA                     __end_of_ToSend:
  2172                           	opt stack 0
  2173                           tosu	equ	0xFFF
  2174                           tosh	equ	0xFFE
  2175                           tosl	equ	0xFFD
  2176                           pclath	equ	0xFFA
  2177                           tblptru	equ	0xFF8
  2178                           tblptrh	equ	0xFF7
  2179                           tblptrl	equ	0xFF6
  2180                           tablat	equ	0xFF5
  2181                           intcon	equ	0xFF2
  2182                           postinc0	equ	0xFEE
  2183                           wreg	equ	0xFE8
  2184                           indf2	equ	0xFDF
  2185                           postinc2	equ	0xFDE
  2186                           postdec2	equ	0xFDD
  2187                           plusw2	equ	0xFDB
  2188                           fsr2h	equ	0xFDA
  2189                           fsr2l	equ	0xFD9
  2190                           status	equ	0xFD8
  2191                           
  2192 ;; *************** function _FastTransfer_buffer_put *****************
  2193 ;; Defined at:
  2194 ;;		line 223 in file "FastTransfer.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;  _this           2   32[COMRAM] PTR struct ringBufS
  2197 ;;		 -> ring_buffer(206), 
  2198 ;;  towhere         1   34[COMRAM] unsigned char 
  2199 ;;  towhat          2   35[COMRAM] unsigned int 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;		None
  2202 ;; Return value:  Size  Location     Type
  2203 ;;		None               void
  2204 ;; Registers used:
  2205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2211 ;;      Params:         5       0       0       0       0       0       0
  2212 ;;      Locals:         0       0       0       0       0       0       0
  2213 ;;      Temps:          2       0       0       0       0       0       0
  2214 ;;      Totals:         7       0       0       0       0       0       0
  2215 ;;Total ram usage:        7 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:    5
  2218 ;; This function calls:
  2219 ;;		_FastTransfer_buffer_modulo_inc
  2220 ;; This function is called by:
  2221 ;;		_ToSend
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text9
  2226  0010A0                     __ptext9:
  2227                           	opt stack 0
  2228  0010A0                     _FastTransfer_buffer_put:
  2229                           	opt stack 22
  2230                           
  2231                           ;FastTransfer.c: 225: group.integer = towhat;
  2232                           
  2233                           ;incstack = 0
  2234  0010A0  C024  F02C         	movff	FastTransfer_buffer_put@towhat,_group
  2235  0010A4  C025  F02D         	movff	FastTransfer_buffer_put@towhat+1,_group+1
  2236                           
  2237                           ;FastTransfer.c: 227: if (_this->count < (200 - 3)) {
  2238  0010A8  EE20 F0CC          	lfsr	2,204
  2239  0010AC  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2240  0010AE  26D9               	addwf	fsr2l,f,c
  2241  0010B0  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2242  0010B2  22DA               	addwfc	fsr2h,f,c
  2243  0010B4  0E01               	movlw	1
  2244  0010B6  BEDB               	btfsc	plusw2,7,c
  2245  0010B8  D007               	goto	l5332
  2246  0010BA  0E01               	movlw	1
  2247  0010BC  50DB               	movf	plusw2,w,c
  2248  0010BE  E103               	bnz	u5291
  2249  0010C0  0EC5               	movlw	197
  2250  0010C2  5CDE               	subwf	postinc2,w,c
  2251  0010C4  B0D8               	btfsc	status,0,c
  2252  0010C6                     u5291:
  2253  0010C6  0012               	return	
  2254  0010C8                     l5332:
  2255                           
  2256                           ;FastTransfer.c: 228: _this->buf[_this->head] = towhere;
  2257  0010C8  EE20 F0C8          	lfsr	2,200
  2258  0010CC  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2259  0010CE  26D9               	addwf	fsr2l,f,c
  2260  0010D0  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2261  0010D2  22DA               	addwfc	fsr2h,f,c
  2262  0010D4  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  2263  0010D8  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  2264  0010DC  5026               	movf	??_FastTransfer_buffer_put,w,c
  2265  0010DE  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  2266  0010E0  6ED9               	movwf	fsr2l,c
  2267  0010E2  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  2268  0010E4  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  2269  0010E6  6EDA               	movwf	fsr2h,c
  2270  0010E8  C023  FFDF         	movff	FastTransfer_buffer_put@towhere,indf2
  2271                           
  2272                           ;FastTransfer.c: 229: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  2273  0010EC  EE20 F0C8          	lfsr	2,200
  2274  0010F0  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2275  0010F2  26D9               	addwf	fsr2l,f,c
  2276  0010F4  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2277  0010F6  22DA               	addwfc	fsr2h,f,c
  2278  0010F8  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  2279  0010FC  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  2280  001100  0E00               	movlw	0
  2281  001102  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  2282  001104  0EC8               	movlw	200
  2283  001106  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  2284  001108  ECE7  F015         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  2285  00110C  EE20 F0C8          	lfsr	2,200
  2286  001110  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2287  001112  26D9               	addwf	fsr2l,f,c
  2288  001114  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2289  001116  22DA               	addwfc	fsr2h,f,c
  2290  001118  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  2291  00111C  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  2292                           
  2293                           ;FastTransfer.c: 230: ++_this->count;
  2294  001120  EE20 F0CC          	lfsr	2,204
  2295  001124  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2296  001126  26D9               	addwf	fsr2l,f,c
  2297  001128  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2298  00112A  22DA               	addwfc	fsr2h,f,c
  2299  00112C  2ADE               	incf	postinc2,f,c
  2300  00112E  0E00               	movlw	0
  2301  001130  22DD               	addwfc	postdec2,f,c
  2302                           
  2303                           ;FastTransfer.c: 231: _this->buf[_this->head] = group.parts[0];
  2304  001132  EE20 F0C8          	lfsr	2,200
  2305  001136  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2306  001138  26D9               	addwf	fsr2l,f,c
  2307  00113A  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2308  00113C  22DA               	addwfc	fsr2h,f,c
  2309  00113E  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  2310  001142  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  2311  001146  5026               	movf	??_FastTransfer_buffer_put,w,c
  2312  001148  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  2313  00114A  6ED9               	movwf	fsr2l,c
  2314  00114C  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  2315  00114E  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  2316  001150  6EDA               	movwf	fsr2h,c
  2317  001152  C02C  FFDF         	movff	_group,indf2
  2318                           
  2319                           ;FastTransfer.c: 232: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  2320  001156  EE20 F0C8          	lfsr	2,200
  2321  00115A  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2322  00115C  26D9               	addwf	fsr2l,f,c
  2323  00115E  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2324  001160  22DA               	addwfc	fsr2h,f,c
  2325  001162  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  2326  001166  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  2327  00116A  0E00               	movlw	0
  2328  00116C  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  2329  00116E  0EC8               	movlw	200
  2330  001170  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  2331  001172  ECE7  F015         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  2332  001176  EE20 F0C8          	lfsr	2,200
  2333  00117A  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2334  00117C  26D9               	addwf	fsr2l,f,c
  2335  00117E  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2336  001180  22DA               	addwfc	fsr2h,f,c
  2337  001182  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  2338  001186  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  2339                           
  2340                           ;FastTransfer.c: 233: ++_this->count;
  2341  00118A  EE20 F0CC          	lfsr	2,204
  2342  00118E  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2343  001190  26D9               	addwf	fsr2l,f,c
  2344  001192  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2345  001194  22DA               	addwfc	fsr2h,f,c
  2346  001196  2ADE               	incf	postinc2,f,c
  2347  001198  0E00               	movlw	0
  2348  00119A  22DD               	addwfc	postdec2,f,c
  2349                           
  2350                           ;FastTransfer.c: 234: _this->buf[_this->head] = group.parts[1];
  2351  00119C  EE20 F0C8          	lfsr	2,200
  2352  0011A0  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2353  0011A2  26D9               	addwf	fsr2l,f,c
  2354  0011A4  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2355  0011A6  22DA               	addwfc	fsr2h,f,c
  2356  0011A8  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  2357  0011AC  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  2358  0011B0  5026               	movf	??_FastTransfer_buffer_put,w,c
  2359  0011B2  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  2360  0011B4  6ED9               	movwf	fsr2l,c
  2361  0011B6  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  2362  0011B8  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  2363  0011BA  6EDA               	movwf	fsr2h,c
  2364  0011BC  C02D  FFDF         	movff	_group+1,indf2
  2365                           
  2366                           ;FastTransfer.c: 235: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  2367  0011C0  EE20 F0C8          	lfsr	2,200
  2368  0011C4  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2369  0011C6  26D9               	addwf	fsr2l,f,c
  2370  0011C8  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2371  0011CA  22DA               	addwfc	fsr2h,f,c
  2372  0011CC  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  2373  0011D0  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  2374  0011D4  0E00               	movlw	0
  2375  0011D6  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  2376  0011D8  0EC8               	movlw	200
  2377  0011DA  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  2378  0011DC  ECE7  F015         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  2379  0011E0  EE20 F0C8          	lfsr	2,200
  2380  0011E4  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2381  0011E6  26D9               	addwf	fsr2l,f,c
  2382  0011E8  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2383  0011EA  22DA               	addwfc	fsr2h,f,c
  2384  0011EC  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  2385  0011F0  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  2386                           
  2387                           ;FastTransfer.c: 236: ++_this->count;
  2388  0011F4  EE20 F0CC          	lfsr	2,204
  2389  0011F8  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2390  0011FA  26D9               	addwf	fsr2l,f,c
  2391  0011FC  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2392  0011FE  22DA               	addwfc	fsr2h,f,c
  2393  001200  2ADE               	incf	postinc2,f,c
  2394  001202  0E00               	movlw	0
  2395  001204  22DD               	addwfc	postdec2,f,c
  2396  001206  0012               	return	
  2397  001208                     __end_of_FastTransfer_buffer_put:
  2398                           	opt stack 0
  2399                           tosu	equ	0xFFF
  2400                           tosh	equ	0xFFE
  2401                           tosl	equ	0xFFD
  2402                           pclath	equ	0xFFA
  2403                           tblptru	equ	0xFF8
  2404                           tblptrh	equ	0xFF7
  2405                           tblptrl	equ	0xFF6
  2406                           tablat	equ	0xFF5
  2407                           intcon	equ	0xFF2
  2408                           postinc0	equ	0xFEE
  2409                           wreg	equ	0xFE8
  2410                           indf2	equ	0xFDF
  2411                           postinc2	equ	0xFDE
  2412                           postdec2	equ	0xFDD
  2413                           plusw2	equ	0xFDB
  2414                           fsr2h	equ	0xFDA
  2415                           fsr2l	equ	0xFD9
  2416                           status	equ	0xFD8
  2417                           
  2418 ;; *************** function _FastTransfer_buffer_modulo_inc *****************
  2419 ;; Defined at:
  2420 ;;		line 273 in file "FastTransfer.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;  value           2   26[COMRAM] const unsigned int 
  2423 ;;  modulus         2   28[COMRAM] const unsigned int 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;  my_value        2   30[COMRAM] unsigned int 
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  2   26[COMRAM] unsigned int 
  2428 ;; Registers used:
  2429 ;;		wreg, status,2, status,0
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2435 ;;      Params:         4       0       0       0       0       0       0
  2436 ;;      Locals:         2       0       0       0       0       0       0
  2437 ;;      Temps:          0       0       0       0       0       0       0
  2438 ;;      Totals:         6       0       0       0       0       0       0
  2439 ;;Total ram usage:        6 bytes
  2440 ;; Hardware stack levels used:    1
  2441 ;; Hardware stack levels required when called:    4
  2442 ;; This function calls:
  2443 ;;		Nothing
  2444 ;; This function is called by:
  2445 ;;		_FastTransfer_buffer_put
  2446 ;;		_FastTransfer_buffer_get
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           	psect	text10
  2451  002BCE                     __ptext10:
  2452                           	opt stack 0
  2453  002BCE                     _FastTransfer_buffer_modulo_inc:
  2454                           	opt stack 22
  2455                           
  2456                           ;FastTransfer.c: 274: unsigned int my_value = value + 1;
  2457                           
  2458                           ;incstack = 0
  2459  002BCE  0E01               	movlw	1
  2460  002BD0  241B               	addwf	FastTransfer_buffer_modulo_inc@value,w,c
  2461  002BD2  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  2462  002BD4  0E00               	movlw	0
  2463  002BD6  201C               	addwfc	FastTransfer_buffer_modulo_inc@value+1,w,c
  2464  002BD8  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  2465                           
  2466                           ;FastTransfer.c: 275: if (my_value >= modulus) {
  2467  002BDA  501D               	movf	FastTransfer_buffer_modulo_inc@modulus,w,c
  2468  002BDC  5C1F               	subwf	FastTransfer_buffer_modulo_inc@my_value,w,c
  2469  002BDE  501E               	movf	FastTransfer_buffer_modulo_inc@modulus+1,w,c
  2470  002BE0  5820               	subwfb	FastTransfer_buffer_modulo_inc@my_value+1,w,c
  2471  002BE2  A0D8               	btfss	status,0,c
  2472  002BE4  D004               	goto	l5158
  2473                           
  2474                           ;FastTransfer.c: 276: my_value = 0;
  2475  002BE6  0E00               	movlw	0
  2476  002BE8  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  2477  002BEA  0E00               	movlw	0
  2478  002BEC  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  2479  002BEE                     l5158:
  2480                           
  2481                           ;FastTransfer.c: 277: }
  2482                           ;FastTransfer.c: 278: return (my_value);
  2483  002BEE  C01F  F01B         	movff	FastTransfer_buffer_modulo_inc@my_value,?_FastTransfer_buffer_modulo_inc
  2484  002BF2  C020  F01C         	movff	FastTransfer_buffer_modulo_inc@my_value+1,?_FastTransfer_buffer_modulo_inc+1
  2485  002BF6  0012               	return	
  2486  002BF8                     __end_of_FastTransfer_buffer_modulo_inc:
  2487                           	opt stack 0
  2488                           tosu	equ	0xFFF
  2489                           tosh	equ	0xFFE
  2490                           tosl	equ	0xFFD
  2491                           pclath	equ	0xFFA
  2492                           tblptru	equ	0xFF8
  2493                           tblptrh	equ	0xFF7
  2494                           tblptrl	equ	0xFF6
  2495                           tablat	equ	0xFF5
  2496                           intcon	equ	0xFF2
  2497                           postinc0	equ	0xFEE
  2498                           wreg	equ	0xFE8
  2499                           indf2	equ	0xFDF
  2500                           postinc2	equ	0xFDE
  2501                           postdec2	equ	0xFDD
  2502                           plusw2	equ	0xFDB
  2503                           fsr2h	equ	0xFDA
  2504                           fsr2l	equ	0xFD9
  2505                           status	equ	0xFD8
  2506                           
  2507 ;; *************** function _Delay *****************
  2508 ;; Defined at:
  2509 ;;		line 118 in file "main.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;  wait            2   26[COMRAM] int 
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;  x               2   29[COMRAM] int 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;		None               void
  2516 ;; Registers used:
  2517 ;;		wreg, status,2, status,0
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2523 ;;      Params:         2       0       0       0       0       0       0
  2524 ;;      Locals:         2       0       0       0       0       0       0
  2525 ;;      Temps:          1       0       0       0       0       0       0
  2526 ;;      Totals:         5       0       0       0       0       0       0
  2527 ;;Total ram usage:        5 bytes
  2528 ;; Hardware stack levels used:    1
  2529 ;; Hardware stack levels required when called:    4
  2530 ;; This function calls:
  2531 ;;		Nothing
  2532 ;; This function is called by:
  2533 ;;		_respondECU
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           	psect	text11
  2538  002B0E                     __ptext11:
  2539                           	opt stack 0
  2540  002B0E                     _Delay:
  2541                           	opt stack 24
  2542                           
  2543                           ;main.c: 119: int x;
  2544                           ;main.c: 120: for (x = 0; x < wait; x++) {
  2545                           
  2546                           ;incstack = 0
  2547  002B0E  0E00               	movlw	0
  2548  002B10  6E1F               	movwf	Delay@x+1,c
  2549  002B12  0E00               	movlw	0
  2550  002B14  6E1E               	movwf	Delay@x,c
  2551  002B16  D00A               	goto	l420
  2552  002B18                     l5416:
  2553                           
  2554                           ;main.c: 121: _delay((unsigned long)((1)*(16000000/4000.0)));
  2555  002B18  0E06               	movlw	6
  2556  002B1A  6E1D               	movwf	??_Delay& (0+255),c
  2557  002B1C  0E30               	movlw	48
  2558  002B1E                     u7457:
  2559  002B1E  2EE8               	decfsz	wreg,f,c
  2560  002B20  D7FE               	goto	u7457
  2561  002B22  2E1D               	decfsz	??_Delay& (0+255),f,c
  2562  002B24  D7FC               	goto	u7457
  2563  002B26  D000               	nop2	
  2564  002B28  4A1E               	infsnz	Delay@x,f,c
  2565  002B2A  2A1F               	incf	Delay@x+1,f,c
  2566  002B2C                     l420:
  2567  002B2C  501B               	movf	Delay@wait,w,c
  2568  002B2E  5C1E               	subwf	Delay@x,w,c
  2569  002B30  501F               	movf	Delay@x+1,w,c
  2570  002B32  0A80               	xorlw	128
  2571  002B34  6E1D               	movwf	??_Delay& (0+255),c
  2572  002B36  501C               	movf	Delay@wait+1,w,c
  2573  002B38  0A80               	xorlw	128
  2574  002B3A  581D               	subwfb	??_Delay& (0+255),w,c
  2575  002B3C  B0D8               	btfsc	status,0,c
  2576  002B3E  0012               	return	
  2577  002B40  D7EB               	goto	l5416
  2578  002B42                     __end_of_Delay:
  2579                           	opt stack 0
  2580                           tosu	equ	0xFFF
  2581                           tosh	equ	0xFFE
  2582                           tosl	equ	0xFFD
  2583                           pclath	equ	0xFFA
  2584                           tblptru	equ	0xFF8
  2585                           tblptrh	equ	0xFF7
  2586                           tblptrl	equ	0xFF6
  2587                           tablat	equ	0xFF5
  2588                           intcon	equ	0xFF2
  2589                           postinc0	equ	0xFEE
  2590                           wreg	equ	0xFE8
  2591                           indf2	equ	0xFDF
  2592                           postinc2	equ	0xFDE
  2593                           postdec2	equ	0xFDD
  2594                           plusw2	equ	0xFDB
  2595                           fsr2h	equ	0xFDA
  2596                           fsr2l	equ	0xFD9
  2597                           status	equ	0xFD8
  2598                           
  2599 ;; *************** function _receiveData *****************
  2600 ;; Defined at:
  2601 ;;		line 82 in file "FastTransfer.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;		None
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;  holder          3    3[BANK1 ] unsigned char [3]
  2606 ;;  crcHolder       1    7[BANK1 ] unsigned char 
  2607 ;;  holder          3    0[BANK1 ] unsigned char [3]
  2608 ;;  crcHolder       1    6[BANK1 ] unsigned char 
  2609 ;;  u               2    8[BANK1 ] int 
  2610 ;;  r               2   10[BANK1 ] int 
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  1    wreg      unsigned char 
  2613 ;; Registers used:
  2614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2620 ;;      Params:         0       0       0       0       0       0       0
  2621 ;;      Locals:         0       0      12       0       0       0       0
  2622 ;;      Temps:          0       6       0       0       0       0       0
  2623 ;;      Totals:         0       6      12       0       0       0       0
  2624 ;;Total ram usage:       18 bytes
  2625 ;; Hardware stack levels used:    1
  2626 ;; Hardware stack levels required when called:    8
  2627 ;; This function calls:
  2628 ;;		Absolute function
  2629 ;;		_CRC8
  2630 ;;		_CRCcheck
  2631 ;;		_Receive_available
  2632 ;;		_Receive_get
  2633 ;;		_Receive_peek
  2634 ;;		_Send_put
  2635 ;; This function is called by:
  2636 ;;		_updateComms
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           	psect	text12
  2641  0000C8                     __ptext12:
  2642                           	opt stack 0
  2643  0000C8                     _receiveData:
  2644                           	opt stack 21
  2645                           
  2646                           ;FastTransfer.c: 85: if (rx_len == 0) {
  2647                           
  2648                           ;incstack = 0
  2649  0000C8  503F               	movf	_rx_len,w,c
  2650  0000CA  A4D8               	btfss	status,2,c
  2651  0000CC  D0AC               	goto	l5896
  2652                           
  2653                           ;FastTransfer.c: 87: if (serial_available() > 4) {
  2654  0000CE  D801               	call	u6148
  2655  0000D0  D00A               	goto	u6149
  2656  0000D2                     u6148:
  2657  0000D2  0005               	push	
  2658  0000D4  6EFA               	movwf	pclath,c
  2659  0000D6  502E               	movf	_serial_available,w,c
  2660  0000D8  6EFD               	movwf	tosl,c
  2661  0000DA  502F               	movf	_serial_available+1,w,c
  2662  0000DC  6EFE               	movwf	tosh,c
  2663  0000DE  50F8               	movf	tblptru,w,c
  2664  0000E0  6EFF               	movwf	tosu,c
  2665  0000E2  50FA               	movf	pclath,w,c
  2666  0000E4  0012               	return		;indir
  2667  0000E6                     u6149:
  2668  0000E6  BE1E               	btfsc	?_Receive_available+1,7,c
  2669  0000E8  D09E               	goto	l5896
  2670  0000EA  501E               	movf	?_Receive_available+1,w,c
  2671  0000EC  E11E               	bnz	l5872
  2672  0000EE  0E05               	movlw	5
  2673  0000F0  5C1D               	subwf	?_Receive_available,w,c
  2674  0000F2  B0D8               	btfsc	status,0,c
  2675  0000F4  D01A               	goto	l5872
  2676  0000F6  D097               	goto	l5896
  2677  0000F8                     l5864:
  2678                           
  2679                           ;FastTransfer.c: 93: alignErrorCounter++;
  2680  0000F8  0100               	movlb	0	; () banked
  2681  0000FA  4BC7               	infsnz	_alignErrorCounter& (0+255),f,b
  2682  0000FC  2BC8               	incf	(_alignErrorCounter+1)& (0+255),f,b
  2683                           
  2684                           ; BSR set to: 0
  2685                           ;FastTransfer.c: 94: if (serial_available() < 5)
  2686  0000FE  D801               	call	u6168
  2687  000100  D00A               	goto	u6169
  2688  000102                     u6168:
  2689  000102  0005               	push	
  2690  000104  6EFA               	movwf	pclath,c
  2691  000106  502E               	movf	_serial_available,w,c
  2692  000108  6EFD               	movwf	tosl,c
  2693  00010A  502F               	movf	_serial_available+1,w,c
  2694  00010C  6EFE               	movwf	tosh,c
  2695  00010E  50F8               	movf	tblptru,w,c
  2696  000110  6EFF               	movwf	tosu,c
  2697  000112  50FA               	movf	pclath,w,c
  2698  000114  0012               	return		;indir
  2699  000116                     u6169:
  2700  000116  BE1E               	btfsc	?_Receive_available+1,7,c
  2701  000118  D006               	goto	l5868
  2702  00011A  501E               	movf	?_Receive_available+1,w,c
  2703  00011C  E106               	bnz	l5872
  2704  00011E  0E05               	movlw	5
  2705  000120  5C1D               	subwf	?_Receive_available,w,c
  2706  000122  B0D8               	btfsc	status,0,c
  2707  000124  D002               	goto	l5872
  2708  000126                     l5868:
  2709                           
  2710                           ;FastTransfer.c: 95: return 0;
  2711  000126  0E00               	movlw	0
  2712  000128  0012               	return	
  2713  00012A                     l5872:
  2714  00012A  D801               	call	u6188
  2715  00012C  D00A               	goto	u6189
  2716  00012E                     u6188:
  2717  00012E  0005               	push	
  2718  000130  6EFA               	movwf	pclath,c
  2719  000132  5030               	movf	_serial_read,w,c
  2720  000134  6EFD               	movwf	tosl,c
  2721  000136  5031               	movf	_serial_read+1,w,c
  2722  000138  6EFE               	movwf	tosh,c
  2723  00013A  50F8               	movf	tblptru,w,c
  2724  00013C  6EFF               	movwf	tosu,c
  2725  00013E  50FA               	movf	pclath,w,c
  2726  000140  0012               	return		;indir
  2727  000142                     u6189:
  2728  000142  0A06               	xorlw	6
  2729  000144  A4D8               	btfss	status,2,c
  2730  000146  D7D8               	goto	l5864
  2731                           
  2732                           ;FastTransfer.c: 96: }
  2733                           ;FastTransfer.c: 97: if (serial_read() == 0x85) {
  2734  000148  D801               	call	u6208
  2735  00014A  D00A               	goto	u6209
  2736  00014C                     u6208:
  2737  00014C  0005               	push	
  2738  00014E  6EFA               	movwf	pclath,c
  2739  000150  5030               	movf	_serial_read,w,c
  2740  000152  6EFD               	movwf	tosl,c
  2741  000154  5031               	movf	_serial_read+1,w,c
  2742  000156  6EFE               	movwf	tosh,c
  2743  000158  50F8               	movf	tblptru,w,c
  2744  00015A  6EFF               	movwf	tosu,c
  2745  00015C  50FA               	movf	pclath,w,c
  2746  00015E  0012               	return		;indir
  2747  000160                     u6209:
  2748  000160  0A85               	xorlw	133
  2749  000162  A4D8               	btfss	status,2,c
  2750  000164  D060               	goto	l5896
  2751                           
  2752                           ;FastTransfer.c: 98: rx_address = serial_read();
  2753  000166  D801               	call	u6228
  2754  000168  D00A               	goto	u6229
  2755  00016A                     u6228:
  2756  00016A  0005               	push	
  2757  00016C  6EFA               	movwf	pclath,c
  2758  00016E  5030               	movf	_serial_read,w,c
  2759  000170  6EFD               	movwf	tosl,c
  2760  000172  5031               	movf	_serial_read+1,w,c
  2761  000174  6EFE               	movwf	tosh,c
  2762  000176  50F8               	movf	tblptru,w,c
  2763  000178  6EFF               	movwf	tosu,c
  2764  00017A  50FA               	movf	pclath,w,c
  2765  00017C  0012               	return		;indir
  2766  00017E                     u6229:
  2767  00017E  6E3D               	movwf	_rx_address,c
  2768                           
  2769                           ;FastTransfer.c: 99: returnAddress = serial_read();
  2770  000180  D801               	call	u6238
  2771  000182  D00A               	goto	u6239
  2772  000184                     u6238:
  2773  000184  0005               	push	
  2774  000186  6EFA               	movwf	pclath,c
  2775  000188  5030               	movf	_serial_read,w,c
  2776  00018A  6EFD               	movwf	tosl,c
  2777  00018C  5031               	movf	_serial_read+1,w,c
  2778  00018E  6EFE               	movwf	tosh,c
  2779  000190  50F8               	movf	tblptru,w,c
  2780  000192  6EFF               	movwf	tosu,c
  2781  000194  50FA               	movf	pclath,w,c
  2782  000196  0012               	return		;indir
  2783  000198                     u6239:
  2784  000198  6E3C               	movwf	_returnAddress,c
  2785                           
  2786                           ;FastTransfer.c: 100: rx_len = serial_read();
  2787  00019A  D801               	call	u6248
  2788  00019C  D00A               	goto	u6249
  2789  00019E                     u6248:
  2790  00019E  0005               	push	
  2791  0001A0  6EFA               	movwf	pclath,c
  2792  0001A2  5030               	movf	_serial_read,w,c
  2793  0001A4  6EFD               	movwf	tosl,c
  2794  0001A6  5031               	movf	_serial_read+1,w,c
  2795  0001A8  6EFE               	movwf	tosh,c
  2796  0001AA  50F8               	movf	tblptru,w,c
  2797  0001AC  6EFF               	movwf	tosu,c
  2798  0001AE  50FA               	movf	pclath,w,c
  2799  0001B0  0012               	return		;indir
  2800  0001B2                     u6249:
  2801  0001B2  6E3F               	movwf	_rx_len,c
  2802                           
  2803                           ;FastTransfer.c: 102: if (rx_address != moduleAddress) {
  2804  0001B4  503B               	movf	_moduleAddress,w,c
  2805  0001B6  183D               	xorwf	_rx_address,w,c
  2806  0001B8  B4D8               	btfsc	status,2,c
  2807  0001BA  D035               	goto	l5896
  2808                           
  2809                           ;FastTransfer.c: 103: addressErrorCounter++;
  2810  0001BC  0100               	movlb	0	; () banked
  2811  0001BE  4BC5               	infsnz	_addressErrorCounter& (0+255),f,b
  2812  0001C0  2BC6               	incf	(_addressErrorCounter+1)& (0+255),f,b
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;FastTransfer.c: 106: int u;
  2816                           ;FastTransfer.c: 107: for (u = 0; u <= (rx_len + 1); u++) {
  2817  0001C2  0E00               	movlw	0
  2818  0001C4  0101               	movlb	1	; () banked
  2819  0001C6  6F42               	movwf	(receiveData@u+1)& (0+255),b
  2820  0001C8  0E00               	movlw	0
  2821  0001CA  6F41               	movwf	receiveData@u& (0+255),b
  2822  0001CC  D00F               	goto	l5888
  2823  0001CE                     l5884:
  2824                           
  2825                           ;FastTransfer.c: 108: serial_read();
  2826  0001CE  D801               	call	u6268
  2827  0001D0  D00A               	goto	l5886
  2828  0001D2                     u6268:
  2829  0001D2  0005               	push	
  2830  0001D4  6EFA               	movwf	pclath,c
  2831  0001D6  5030               	movf	_serial_read,w,c
  2832  0001D8  6EFD               	movwf	tosl,c
  2833  0001DA  5031               	movf	_serial_read+1,w,c
  2834  0001DC  6EFE               	movwf	tosh,c
  2835  0001DE  50F8               	movf	tblptru,w,c
  2836  0001E0  6EFF               	movwf	tosu,c
  2837  0001E2  50FA               	movf	pclath,w,c
  2838  0001E4  0012               	return		;indir
  2839  0001E6                     l5886:
  2840  0001E6  0101               	movlb	1	; () banked
  2841  0001E8  4B41               	infsnz	receiveData@u& (0+255),f,b
  2842  0001EA  2B42               	incf	(receiveData@u+1)& (0+255),f,b
  2843  0001EC                     l5888:
  2844                           
  2845                           ; BSR set to: 1
  2846  0001EC  503F               	movf	_rx_len,w,c
  2847  0001EE  0100               	movlb	0	; () banked
  2848  0001F0  6FF5               	movwf	??_receiveData& (0+255),b
  2849  0001F2  6BF6               	clrf	(??_receiveData+1)& (0+255),b
  2850  0001F4  0E01               	movlw	1
  2851  0001F6  0100               	movlb	0	; () banked
  2852  0001F8  27F5               	addwf	??_receiveData& (0+255),f,b
  2853  0001FA  0E00               	movlw	0
  2854  0001FC  23F6               	addwfc	(??_receiveData+1)& (0+255),f,b
  2855  0001FE  0101               	movlb	1	; () banked
  2856  000200  5141               	movf	receiveData@u& (0+255),w,b
  2857  000202  0100               	movlb	0	; () banked
  2858  000204  5DF5               	subwf	??_receiveData& (0+255),w,b
  2859  000206  0100               	movlb	0	; () banked
  2860  000208  51F6               	movf	(??_receiveData+1)& (0+255),w,b
  2861  00020A  0A80               	xorlw	128
  2862  00020C  0100               	movlb	0	; () banked
  2863  00020E  6FF7               	movwf	(??_receiveData+2)& (0+255),b
  2864  000210  0101               	movlb	1	; () banked
  2865  000212  5142               	movf	(receiveData@u+1)& (0+255),w,b
  2866  000214  0A80               	xorlw	128
  2867  000216  0100               	movlb	0	; () banked
  2868  000218  59F7               	subwfb	(??_receiveData+2)& (0+255),w,b
  2869  00021A  B0D8               	btfsc	status,0,c
  2870  00021C  D7D8               	goto	l5884
  2871                           
  2872                           ; BSR set to: 0
  2873                           ;FastTransfer.c: 109: }
  2874                           ;FastTransfer.c: 110: rx_len = 0;
  2875                           
  2876                           ; BSR set to: 0
  2877  00021E  0E00               	movlw	0
  2878  000220  6E3F               	movwf	_rx_len,c
  2879                           
  2880                           ; BSR set to: 0
  2881                           ;FastTransfer.c: 111: return 0;
  2882  000222  0E00               	movlw	0
  2883                           
  2884                           ; BSR set to: 0
  2885  000224  0012               	return	
  2886  000226                     l5896:
  2887                           
  2888                           ;FastTransfer.c: 112: }
  2889                           ;FastTransfer.c: 114: }
  2890                           ;FastTransfer.c: 115: }
  2891                           ;FastTransfer.c: 116: }
  2892                           ;FastTransfer.c: 119: if (rx_len != 0) {
  2893  000226  503F               	movf	_rx_len,w,c
  2894  000228  B4D8               	btfsc	status,2,c
  2895  00022A  D2A6               	goto	l6020
  2896                           
  2897                           ;FastTransfer.c: 122: if (rx_array_inx == 0) {
  2898  00022C  503E               	movf	_rx_array_inx,w,c
  2899  00022E  A4D8               	btfss	status,2,c
  2900  000230  D044               	goto	l5920
  2901  000232                     l5902:
  2902  000232  D801               	call	u6308
  2903  000234  D00A               	goto	u6309
  2904  000236                     u6308:
  2905  000236  0005               	push	
  2906  000238  6EFA               	movwf	pclath,c
  2907  00023A  502E               	movf	_serial_available,w,c
  2908  00023C  6EFD               	movwf	tosl,c
  2909  00023E  502F               	movf	_serial_available+1,w,c
  2910  000240  6EFE               	movwf	tosh,c
  2911  000242  50F8               	movf	tblptru,w,c
  2912  000244  6EFF               	movwf	tosu,c
  2913  000246  50FA               	movf	pclath,w,c
  2914  000248  0012               	return		;indir
  2915  00024A                     u6309:
  2916  00024A  BE1E               	btfsc	?_Receive_available+1,7,c
  2917  00024C  D7F2               	goto	l5902
  2918  00024E  501E               	movf	?_Receive_available+1,w,c
  2919  000250  E103               	bnz	l5904
  2920  000252  041D               	decf	?_Receive_available,w,c
  2921  000254  A0D8               	btfss	status,0,c
  2922  000256  D7ED               	goto	l5902
  2923  000258                     l5904:
  2924                           
  2925                           ;FastTransfer.c: 124: if (255 == serial_peek()) {
  2926  000258  D801               	call	u6328
  2927  00025A  D00B               	goto	u6329
  2928  00025C                     u6328:
  2929  00025C  0005               	push	
  2930  00025E  0100               	movlb	0	; () banked
  2931  000260  6EFA               	movwf	pclath,c
  2932  000262  51D7               	movf	_serial_peek& (0+255),w,b
  2933  000264  6EFD               	movwf	tosl,c
  2934  000266  51D8               	movf	(_serial_peek+1)& (0+255),w,b
  2935  000268  6EFE               	movwf	tosh,c
  2936  00026A  50F8               	movf	tblptru,w,c
  2937  00026C  6EFF               	movwf	tosu,c
  2938  00026E  50FA               	movf	pclath,w,c
  2939  000270  0012               	return		;indir
  2940  000272                     u6329:
  2941  000272  0AFF               	xorlw	255
  2942  000274  A4D8               	btfss	status,2,c
  2943  000276  D021               	goto	l5920
  2944                           
  2945                           ;FastTransfer.c: 125: CRCcheck();
  2946  000278  EC04  F009         	call	_CRCcheck	;wreg free
  2947                           
  2948                           ;FastTransfer.c: 126: rx_len = 0;
  2949  00027C  0E00               	movlw	0
  2950  00027E  6E3F               	movwf	_rx_len,c
  2951                           
  2952                           ;FastTransfer.c: 127: rx_array_inx = 0;
  2953  000280  0E00               	movlw	0
  2954  000282  6E3E               	movwf	_rx_array_inx,c
  2955                           
  2956                           ;FastTransfer.c: 128: return 0;
  2957  000284  0E00               	movlw	0
  2958  000286  0012               	return	
  2959  000288                     l5916:
  2960                           
  2961                           ;FastTransfer.c: 134: rx_buffer[rx_array_inx++] = serial_read();
  2962  000288  D801               	call	u6348
  2963  00028A  D00A               	goto	u6349
  2964  00028C                     u6348:
  2965  00028C  0005               	push	
  2966  00028E  6EFA               	movwf	pclath,c
  2967  000290  5030               	movf	_serial_read,w,c
  2968  000292  6EFD               	movwf	tosl,c
  2969  000294  5031               	movf	_serial_read+1,w,c
  2970  000296  6EFE               	movwf	tosh,c
  2971  000298  50F8               	movf	tblptru,w,c
  2972  00029A  6EFF               	movwf	tosu,c
  2973  00029C  50FA               	movf	pclath,w,c
  2974  00029E  0012               	return		;indir
  2975  0002A0                     u6349:
  2976  0002A0  0100               	movlb	0	; () banked
  2977  0002A2  6FF5               	movwf	??_receiveData& (0+255),b
  2978  0002A4  503E               	movf	_rx_array_inx,w,c
  2979  0002A6  0D01               	mullw	1
  2980  0002A8  0E00               	movlw	low _rx_buffer
  2981  0002AA  24F3               	addwf	prodl,w,c
  2982  0002AC  6ED9               	movwf	fsr2l,c
  2983  0002AE  0E03               	movlw	high _rx_buffer
  2984  0002B0  20F4               	addwfc	prodh,w,c
  2985  0002B2  6EDA               	movwf	fsr2h,c
  2986  0002B4  C0F5  FFDF         	movff	??_receiveData,indf2
  2987                           
  2988                           ; BSR set to: 0
  2989  0002B8  2A3E               	incf	_rx_array_inx,f,c
  2990  0002BA                     l5920:
  2991  0002BA  D801               	call	u6358
  2992  0002BC  D00A               	goto	u6359
  2993  0002BE                     u6358:
  2994  0002BE  0005               	push	
  2995  0002C0  6EFA               	movwf	pclath,c
  2996  0002C2  502E               	movf	_serial_available,w,c
  2997  0002C4  6EFD               	movwf	tosl,c
  2998  0002C6  502F               	movf	_serial_available+1,w,c
  2999  0002C8  6EFE               	movwf	tosh,c
  3000  0002CA  50F8               	movf	tblptru,w,c
  3001  0002CC  6EFF               	movwf	tosu,c
  3002  0002CE  50FA               	movf	pclath,w,c
  3003  0002D0  0012               	return		;indir
  3004  0002D2                     u6359:
  3005  0002D2  501D               	movf	?_Receive_available,w,c
  3006  0002D4  101E               	iorwf	?_Receive_available+1,w,c
  3007  0002D6  B4D8               	btfsc	status,2,c
  3008  0002D8  D004               	goto	l5924
  3009  0002DA  503E               	movf	_rx_array_inx,w,c
  3010  0002DC  5C3F               	subwf	_rx_len,w,c
  3011  0002DE  B0D8               	btfsc	status,0,c
  3012  0002E0  D7D3               	goto	l5916
  3013  0002E2                     l5924:
  3014                           
  3015                           ;FastTransfer.c: 135: }
  3016                           ;FastTransfer.c: 137: if (rx_len == (rx_array_inx - 1)) {
  3017  0002E2  503F               	movf	_rx_len,w,c
  3018  0002E4  0100               	movlb	0	; () banked
  3019  0002E6  6FF5               	movwf	??_receiveData& (0+255),b
  3020  0002E8  6BF6               	clrf	(??_receiveData+1)& (0+255),b
  3021  0002EA  0EFF               	movlw	255
  3022  0002EC  0100               	movlb	0	; () banked
  3023  0002EE  6FF7               	movwf	(??_receiveData+2)& (0+255),b
  3024  0002F0  0EFF               	movlw	255
  3025  0002F2  0100               	movlb	0	; () banked
  3026  0002F4  6FF8               	movwf	(??_receiveData+3)& (0+255),b
  3027  0002F6  503E               	movf	_rx_array_inx,w,c
  3028  0002F8  0100               	movlb	0	; () banked
  3029  0002FA  6FF9               	movwf	(??_receiveData+4)& (0+255),b
  3030  0002FC  6BFA               	clrf	(??_receiveData+5)& (0+255),b
  3031  0002FE  0100               	movlb	0	; () banked
  3032  000300  51F7               	movf	(??_receiveData+2)& (0+255),w,b
  3033  000302  0100               	movlb	0	; () banked
  3034  000304  27F9               	addwf	(??_receiveData+4)& (0+255),f,b
  3035  000306  0100               	movlb	0	; () banked
  3036  000308  51F8               	movf	(??_receiveData+3)& (0+255),w,b
  3037  00030A  0100               	movlb	0	; () banked
  3038  00030C  23FA               	addwfc	(??_receiveData+5)& (0+255),f,b
  3039  00030E  0100               	movlb	0	; () banked
  3040  000310  51F5               	movf	??_receiveData& (0+255),w,b
  3041  000312  0100               	movlb	0	; () banked
  3042  000314  19F9               	xorwf	(??_receiveData+4)& (0+255),w,b
  3043  000316  E105               	bnz	u6381
  3044  000318  0100               	movlb	0	; () banked
  3045  00031A  51F6               	movf	(??_receiveData+1)& (0+255),w,b
  3046  00031C  0100               	movlb	0	; () banked
  3047  00031E  19FA               	xorwf	(??_receiveData+5)& (0+255),w,b
  3048  000320  A4D8               	btfss	status,2,c
  3049  000322                     u6381:
  3050  000322  D22A               	goto	l6020
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;FastTransfer.c: 140: calc_CS = CRC8(rx_buffer, rx_len);
  3054  000324  0E00               	movlw	low _rx_buffer
  3055  000326  6E1B               	movwf	CRC8@data,c
  3056  000328  0E03               	movlw	high _rx_buffer
  3057  00032A  6E1C               	movwf	CRC8@data+1,c
  3058  00032C  C03F  F01D         	movff	_rx_len,CRC8@len
  3059  000330  ECA4  F014         	call	_CRC8	;wreg free
  3060  000334  6E37               	movwf	_calc_CS,c
  3061                           
  3062                           ;FastTransfer.c: 144: if (calc_CS == rx_buffer[rx_array_inx - 1]) {
  3063  000336  0EFF               	movlw	255
  3064  000338  0100               	movlb	0	; () banked
  3065  00033A  6FF5               	movwf	??_receiveData& (0+255),b
  3066  00033C  0EFF               	movlw	255
  3067  00033E  0100               	movlb	0	; () banked
  3068  000340  6FF6               	movwf	(??_receiveData+1)& (0+255),b
  3069  000342  503E               	movf	_rx_array_inx,w,c
  3070  000344  0100               	movlb	0	; () banked
  3071  000346  6FF7               	movwf	(??_receiveData+2)& (0+255),b
  3072  000348  6BF8               	clrf	(??_receiveData+3)& (0+255),b
  3073  00034A  0100               	movlb	0	; () banked
  3074  00034C  51F5               	movf	??_receiveData& (0+255),w,b
  3075  00034E  0100               	movlb	0	; () banked
  3076  000350  27F7               	addwf	(??_receiveData+2)& (0+255),f,b
  3077  000352  0100               	movlb	0	; () banked
  3078  000354  51F6               	movf	(??_receiveData+1)& (0+255),w,b
  3079  000356  0100               	movlb	0	; () banked
  3080  000358  23F8               	addwfc	(??_receiveData+3)& (0+255),f,b
  3081  00035A  0E00               	movlw	low _rx_buffer
  3082  00035C  0100               	movlb	0	; () banked
  3083  00035E  25F7               	addwf	(??_receiveData+2)& (0+255),w,b
  3084  000360  6ED9               	movwf	fsr2l,c
  3085  000362  0E03               	movlw	high _rx_buffer
  3086  000364  0100               	movlb	0	; () banked
  3087  000366  21F8               	addwfc	(??_receiveData+3)& (0+255),w,b
  3088  000368  6EDA               	movwf	fsr2h,c
  3089  00036A  5037               	movf	_calc_CS,w,c
  3090  00036C  18DE               	xorwf	postinc2,w,c
  3091  00036E  A4D8               	btfss	status,2,c
  3092  000370  D13B               	goto	l5982
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;FastTransfer.c: 147: int r;
  3096                           ;FastTransfer.c: 148: for (r = 0; r < rx_len; r = r + 3) {
  3097  000372  0E00               	movlw	0
  3098  000374  0101               	movlb	1	; () banked
  3099  000376  6F44               	movwf	(receiveData@r+1)& (0+255),b
  3100  000378  0E00               	movlw	0
  3101  00037A  6F43               	movwf	receiveData@r& (0+255),b
  3102  00037C  D05C               	goto	l5942
  3103  00037E                     l5932:
  3104                           
  3105                           ;FastTransfer.c: 149: if (rx_buffer[r] < maxDataAddress) {
  3106  00037E  0E00               	movlw	low _rx_buffer
  3107  000380  0101               	movlb	1	; () banked
  3108  000382  2543               	addwf	receiveData@r& (0+255),w,b
  3109  000384  6ED9               	movwf	fsr2l,c
  3110  000386  0E03               	movlw	high _rx_buffer
  3111  000388  0101               	movlb	1	; () banked
  3112  00038A  2144               	addwfc	(receiveData@r+1)& (0+255),w,b
  3113  00038C  6EDA               	movwf	fsr2h,c
  3114  00038E  503A               	movf	_maxDataAddress,w,c
  3115  000390  5CDE               	subwf	postinc2,w,c
  3116  000392  B0D8               	btfsc	status,0,c
  3117  000394  D043               	goto	l5938
  3118                           
  3119                           ; BSR set to: 1
  3120                           ;FastTransfer.c: 150: group.parts[0] = rx_buffer[r + 1];
  3121  000396  0E01               	movlw	1
  3122  000398  0101               	movlb	1	; () banked
  3123  00039A  2543               	addwf	receiveData@r& (0+255),w,b
  3124  00039C  0100               	movlb	0	; () banked
  3125  00039E  6FF5               	movwf	??_receiveData& (0+255),b
  3126  0003A0  0E00               	movlw	0
  3127  0003A2  0101               	movlb	1	; () banked
  3128  0003A4  2144               	addwfc	(receiveData@r+1)& (0+255),w,b
  3129  0003A6  0100               	movlb	0	; () banked
  3130  0003A8  6FF6               	movwf	(??_receiveData+1)& (0+255),b
  3131  0003AA  0E00               	movlw	low _rx_buffer
  3132  0003AC  0100               	movlb	0	; () banked
  3133  0003AE  25F5               	addwf	??_receiveData& (0+255),w,b
  3134  0003B0  6ED9               	movwf	fsr2l,c
  3135  0003B2  0E03               	movlw	high _rx_buffer
  3136  0003B4  0100               	movlb	0	; () banked
  3137  0003B6  21F6               	addwfc	(??_receiveData+1)& (0+255),w,b
  3138  0003B8  6EDA               	movwf	fsr2h,c
  3139  0003BA  50DF               	movf	indf2,w,c
  3140  0003BC  6E2C               	movwf	_group,c
  3141                           
  3142                           ;FastTransfer.c: 151: group.parts[1] = rx_buffer[r + 2];
  3143  0003BE  0E02               	movlw	2
  3144  0003C0  0101               	movlb	1	; () banked
  3145  0003C2  2543               	addwf	receiveData@r& (0+255),w,b
  3146  0003C4  0100               	movlb	0	; () banked
  3147  0003C6  6FF5               	movwf	??_receiveData& (0+255),b
  3148  0003C8  0E00               	movlw	0
  3149  0003CA  0101               	movlb	1	; () banked
  3150  0003CC  2144               	addwfc	(receiveData@r+1)& (0+255),w,b
  3151  0003CE  0100               	movlb	0	; () banked
  3152  0003D0  6FF6               	movwf	(??_receiveData+1)& (0+255),b
  3153  0003D2  0E00               	movlw	low _rx_buffer
  3154  0003D4  0100               	movlb	0	; () banked
  3155  0003D6  25F5               	addwf	??_receiveData& (0+255),w,b
  3156  0003D8  6ED9               	movwf	fsr2l,c
  3157  0003DA  0E03               	movlw	high _rx_buffer
  3158  0003DC  0100               	movlb	0	; () banked
  3159  0003DE  21F6               	addwfc	(??_receiveData+1)& (0+255),w,b
  3160  0003E0  6EDA               	movwf	fsr2h,c
  3161  0003E2  50DF               	movf	indf2,w,c
  3162  0003E4  6E2D               	movwf	_group+1,c
  3163                           
  3164                           ; BSR set to: 0
  3165                           ;FastTransfer.c: 152: receiveArrayAddress[(rx_buffer[r])] = group.integer;
  3166  0003E6  0E00               	movlw	low _rx_buffer
  3167  0003E8  0101               	movlb	1	; () banked
  3168  0003EA  2543               	addwf	receiveData@r& (0+255),w,b
  3169  0003EC  6ED9               	movwf	fsr2l,c
  3170  0003EE  0E03               	movlw	high _rx_buffer
  3171  0003F0  0101               	movlb	1	; () banked
  3172  0003F2  2144               	addwfc	(receiveData@r+1)& (0+255),w,b
  3173  0003F4  6EDA               	movwf	fsr2h,c
  3174  0003F6  50DF               	movf	indf2,w,c
  3175  0003F8  0100               	movlb	0	; () banked
  3176  0003FA  6FF5               	movwf	??_receiveData& (0+255),b
  3177  0003FC  0100               	movlb	0	; () banked
  3178  0003FE  51F5               	movf	??_receiveData& (0+255),w,b
  3179  000400  0D02               	mullw	2
  3180  000402  50F3               	movf	prodl,w,c
  3181  000404  0100               	movlb	0	; () banked
  3182  000406  25D3               	addwf	_receiveArrayAddress& (0+255),w,b
  3183  000408  6ED9               	movwf	fsr2l,c
  3184  00040A  50F4               	movf	prodh,w,c
  3185  00040C  0100               	movlb	0	; () banked
  3186  00040E  21D4               	addwfc	(_receiveArrayAddress+1)& (0+255),w,b
  3187  000410  6EDA               	movwf	fsr2h,c
  3188  000412  C02C  FFDE         	movff	_group,postinc2
  3189  000416  C02D  FFDD         	movff	_group+1,postdec2
  3190                           
  3191                           ;FastTransfer.c: 153: } else {
  3192  00041A  D003               	goto	l5940
  3193  00041C                     l5938:
  3194                           
  3195                           ;FastTransfer.c: 154: dataAdressErrorCounter++;
  3196  00041C  0100               	movlb	0	; () banked
  3197  00041E  4BCD               	infsnz	_dataAdressErrorCounter& (0+255),f,b
  3198  000420  2BCE               	incf	(_dataAdressErrorCounter+1)& (0+255),f,b
  3199  000422                     l5940:
  3200                           
  3201                           ; BSR set to: 0
  3202  000422  0E03               	movlw	3
  3203  000424  0101               	movlb	1	; () banked
  3204  000426  2543               	addwf	receiveData@r& (0+255),w,b
  3205  000428  0101               	movlb	1	; () banked
  3206  00042A  6F43               	movwf	receiveData@r& (0+255),b
  3207  00042C  0E00               	movlw	0
  3208  00042E  0101               	movlb	1	; () banked
  3209  000430  2144               	addwfc	(receiveData@r+1)& (0+255),w,b
  3210  000432  0101               	movlb	1	; () banked
  3211  000434  6F44               	movwf	(receiveData@r+1)& (0+255),b
  3212  000436                     l5942:
  3213                           
  3214                           ; BSR set to: 1
  3215  000436  503F               	movf	_rx_len,w,c
  3216  000438  0100               	movlb	0	; () banked
  3217  00043A  6FF5               	movwf	??_receiveData& (0+255),b
  3218  00043C  6BF6               	clrf	(??_receiveData+1)& (0+255),b
  3219  00043E  0100               	movlb	0	; () banked
  3220  000440  51F5               	movf	??_receiveData& (0+255),w,b
  3221  000442  0101               	movlb	1	; () banked
  3222  000444  5D43               	subwf	receiveData@r& (0+255),w,b
  3223  000446  0101               	movlb	1	; () banked
  3224  000448  5144               	movf	(receiveData@r+1)& (0+255),w,b
  3225  00044A  0A80               	xorlw	128
  3226  00044C  0100               	movlb	0	; () banked
  3227  00044E  6FF7               	movwf	(??_receiveData+2)& (0+255),b
  3228  000450  0100               	movlb	0	; () banked
  3229  000452  51F6               	movf	(??_receiveData+1)& (0+255),w,b
  3230  000454  0A80               	xorlw	128
  3231  000456  0100               	movlb	0	; () banked
  3232  000458  59F7               	subwfb	(??_receiveData+2)& (0+255),w,b
  3233  00045A  A0D8               	btfss	status,0,c
  3234  00045C  D790               	goto	l5932
  3235                           
  3236                           ; BSR set to: 0
  3237                           ;FastTransfer.c: 155: }
  3238                           ;FastTransfer.c: 156: }
  3239                           ;FastTransfer.c: 159: if (AKNAKsend) {
  3240                           
  3241                           ; BSR set to: 0
  3242  00045E  5036               	movf	_AKNAKsend,w,c
  3243  000460  B4D8               	btfsc	status,2,c
  3244  000462  D0BC               	goto	l5972
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;FastTransfer.c: 160: unsigned char holder[3];
  3248                           ;FastTransfer.c: 161: holder[0] = 255;
  3249  000464  0101               	movlb	1	; () banked
  3250  000466  6939               	setf	receiveData@holder& (0+255),b
  3251                           
  3252                           ; BSR set to: 1
  3253                           ;FastTransfer.c: 162: holder[1] = 1;
  3254  000468  0E01               	movlw	1
  3255  00046A  0101               	movlb	1	; () banked
  3256  00046C  6F3A               	movwf	(receiveData@holder+1)& (0+255),b
  3257                           
  3258                           ; BSR set to: 1
  3259                           ;FastTransfer.c: 163: holder[2] = rx_buffer[rx_array_inx - 1];
  3260  00046E  0EFF               	movlw	255
  3261  000470  0100               	movlb	0	; () banked
  3262  000472  6FF5               	movwf	??_receiveData& (0+255),b
  3263  000474  0EFF               	movlw	255
  3264  000476  0100               	movlb	0	; () banked
  3265  000478  6FF6               	movwf	(??_receiveData+1)& (0+255),b
  3266  00047A  503E               	movf	_rx_array_inx,w,c
  3267  00047C  0100               	movlb	0	; () banked
  3268  00047E  6FF7               	movwf	(??_receiveData+2)& (0+255),b
  3269  000480  6BF8               	clrf	(??_receiveData+3)& (0+255),b
  3270  000482  0100               	movlb	0	; () banked
  3271  000484  51F5               	movf	??_receiveData& (0+255),w,b
  3272  000486  0100               	movlb	0	; () banked
  3273  000488  27F7               	addwf	(??_receiveData+2)& (0+255),f,b
  3274  00048A  0100               	movlb	0	; () banked
  3275  00048C  51F6               	movf	(??_receiveData+1)& (0+255),w,b
  3276  00048E  0100               	movlb	0	; () banked
  3277  000490  23F8               	addwfc	(??_receiveData+3)& (0+255),f,b
  3278  000492  0E00               	movlw	low _rx_buffer
  3279  000494  0100               	movlb	0	; () banked
  3280  000496  25F7               	addwf	(??_receiveData+2)& (0+255),w,b
  3281  000498  6ED9               	movwf	fsr2l,c
  3282  00049A  0E03               	movlw	high _rx_buffer
  3283  00049C  0100               	movlb	0	; () banked
  3284  00049E  21F8               	addwfc	(??_receiveData+3)& (0+255),w,b
  3285  0004A0  6EDA               	movwf	fsr2h,c
  3286  0004A2  50DF               	movf	indf2,w,c
  3287  0004A4  0101               	movlb	1	; () banked
  3288  0004A6  6F3B               	movwf	(receiveData@holder+2)& (0+255),b
  3289                           
  3290                           ; BSR set to: 1
  3291                           ;FastTransfer.c: 164: unsigned char crcHolder = CRC8(holder, 3);
  3292  0004A8  0E39               	movlw	low receiveData@holder
  3293  0004AA  6E1B               	movwf	CRC8@data,c
  3294  0004AC  0E01               	movlw	high receiveData@holder
  3295  0004AE  6E1C               	movwf	CRC8@data+1,c
  3296  0004B0  0E03               	movlw	3
  3297  0004B2  6E1D               	movwf	CRC8@len,c
  3298  0004B4  ECA4  F014         	call	_CRC8	;wreg free
  3299  0004B8  0101               	movlb	1	; () banked
  3300  0004BA  6F3F               	movwf	receiveData@crcHolder& (0+255),b
  3301                           
  3302                           ; BSR set to: 1
  3303                           ;FastTransfer.c: 165: serial_write(0x06);
  3304  0004BC  D801               	call	u6438
  3305  0004BE  D00B               	goto	l5956
  3306  0004C0                     u6438:
  3307  0004C0  0005               	push	
  3308  0004C2  6EFA               	movwf	pclath,c
  3309  0004C4  5032               	movf	_serial_write,w,c
  3310  0004C6  6EFD               	movwf	tosl,c
  3311  0004C8  5033               	movf	_serial_write+1,w,c
  3312  0004CA  6EFE               	movwf	tosh,c
  3313  0004CC  50F8               	movf	tblptru,w,c
  3314  0004CE  6EFF               	movwf	tosu,c
  3315  0004D0  50FA               	movf	pclath,w,c
  3316  0004D2  0E06               	movlw	6
  3317  0004D4  0012               	return		;indir
  3318  0004D6                     l5956:
  3319                           
  3320                           ;FastTransfer.c: 166: serial_write(0x85);
  3321  0004D6  D801               	call	u6448
  3322  0004D8  D00B               	goto	l5958
  3323  0004DA                     u6448:
  3324  0004DA  0005               	push	
  3325  0004DC  6EFA               	movwf	pclath,c
  3326  0004DE  5032               	movf	_serial_write,w,c
  3327  0004E0  6EFD               	movwf	tosl,c
  3328  0004E2  5033               	movf	_serial_write+1,w,c
  3329  0004E4  6EFE               	movwf	tosh,c
  3330  0004E6  50F8               	movf	tblptru,w,c
  3331  0004E8  6EFF               	movwf	tosu,c
  3332  0004EA  50FA               	movf	pclath,w,c
  3333  0004EC  0E85               	movlw	133
  3334  0004EE  0012               	return		;indir
  3335  0004F0                     l5958:
  3336                           
  3337                           ;FastTransfer.c: 167: serial_write(returnAddress);
  3338  0004F0  D801               	call	u6458
  3339  0004F2  D00B               	goto	l5960
  3340  0004F4                     u6458:
  3341  0004F4  0005               	push	
  3342  0004F6  6EFA               	movwf	pclath,c
  3343  0004F8  5032               	movf	_serial_write,w,c
  3344  0004FA  6EFD               	movwf	tosl,c
  3345  0004FC  5033               	movf	_serial_write+1,w,c
  3346  0004FE  6EFE               	movwf	tosh,c
  3347  000500  50F8               	movf	tblptru,w,c
  3348  000502  6EFF               	movwf	tosu,c
  3349  000504  50FA               	movf	pclath,w,c
  3350  000506  503C               	movf	_returnAddress,w,c
  3351  000508  0012               	return		;indir
  3352  00050A                     l5960:
  3353                           
  3354                           ;FastTransfer.c: 168: serial_write(moduleAddress);
  3355  00050A  D801               	call	u6468
  3356  00050C  D00B               	goto	l5962
  3357  00050E                     u6468:
  3358  00050E  0005               	push	
  3359  000510  6EFA               	movwf	pclath,c
  3360  000512  5032               	movf	_serial_write,w,c
  3361  000514  6EFD               	movwf	tosl,c
  3362  000516  5033               	movf	_serial_write+1,w,c
  3363  000518  6EFE               	movwf	tosh,c
  3364  00051A  50F8               	movf	tblptru,w,c
  3365  00051C  6EFF               	movwf	tosu,c
  3366  00051E  50FA               	movf	pclath,w,c
  3367  000520  503B               	movf	_moduleAddress,w,c
  3368  000522  0012               	return		;indir
  3369  000524                     l5962:
  3370                           
  3371                           ;FastTransfer.c: 169: serial_write(3);
  3372  000524  D801               	call	u6478
  3373  000526  D00B               	goto	l5964
  3374  000528                     u6478:
  3375  000528  0005               	push	
  3376  00052A  6EFA               	movwf	pclath,c
  3377  00052C  5032               	movf	_serial_write,w,c
  3378  00052E  6EFD               	movwf	tosl,c
  3379  000530  5033               	movf	_serial_write+1,w,c
  3380  000532  6EFE               	movwf	tosh,c
  3381  000534  50F8               	movf	tblptru,w,c
  3382  000536  6EFF               	movwf	tosu,c
  3383  000538  50FA               	movf	pclath,w,c
  3384  00053A  0E03               	movlw	3
  3385  00053C  0012               	return		;indir
  3386  00053E                     l5964:
  3387                           
  3388                           ;FastTransfer.c: 170: serial_write(255);
  3389  00053E  D801               	call	u6488
  3390  000540  D00B               	goto	l5966
  3391  000542                     u6488:
  3392  000542  0005               	push	
  3393  000544  6EFA               	movwf	pclath,c
  3394  000546  5032               	movf	_serial_write,w,c
  3395  000548  6EFD               	movwf	tosl,c
  3396  00054A  5033               	movf	_serial_write+1,w,c
  3397  00054C  6EFE               	movwf	tosh,c
  3398  00054E  50F8               	movf	tblptru,w,c
  3399  000550  6EFF               	movwf	tosu,c
  3400  000552  50FA               	movf	pclath,w,c
  3401  000554  0EFF               	movlw	255
  3402  000556  0012               	return		;indir
  3403  000558                     l5966:
  3404                           
  3405                           ;FastTransfer.c: 171: serial_write(1);
  3406  000558  D801               	call	u6498
  3407  00055A  D00B               	goto	l5968
  3408  00055C                     u6498:
  3409  00055C  0005               	push	
  3410  00055E  6EFA               	movwf	pclath,c
  3411  000560  5032               	movf	_serial_write,w,c
  3412  000562  6EFD               	movwf	tosl,c
  3413  000564  5033               	movf	_serial_write+1,w,c
  3414  000566  6EFE               	movwf	tosh,c
  3415  000568  50F8               	movf	tblptru,w,c
  3416  00056A  6EFF               	movwf	tosu,c
  3417  00056C  50FA               	movf	pclath,w,c
  3418  00056E  0E01               	movlw	1
  3419  000570  0012               	return		;indir
  3420  000572                     l5968:
  3421                           
  3422                           ;FastTransfer.c: 172: serial_write(rx_buffer[rx_array_inx - 1]);
  3423  000572  D801               	call	u6508
  3424  000574  D025               	goto	l5970
  3425  000576                     u6508:
  3426  000576  0005               	push	
  3427  000578  6EFA               	movwf	pclath,c
  3428  00057A  5032               	movf	_serial_write,w,c
  3429  00057C  6EFD               	movwf	tosl,c
  3430  00057E  5033               	movf	_serial_write+1,w,c
  3431  000580  6EFE               	movwf	tosh,c
  3432  000582  50F8               	movf	tblptru,w,c
  3433  000584  6EFF               	movwf	tosu,c
  3434  000586  50FA               	movf	pclath,w,c
  3435  000588  0EFF               	movlw	255
  3436  00058A  0100               	movlb	0	; () banked
  3437  00058C  6FF5               	movwf	??_receiveData& (0+255),b
  3438  00058E  0EFF               	movlw	255
  3439  000590  0100               	movlb	0	; () banked
  3440  000592  6FF6               	movwf	(??_receiveData+1)& (0+255),b
  3441  000594  503E               	movf	_rx_array_inx,w,c
  3442  000596  0100               	movlb	0	; () banked
  3443  000598  6FF7               	movwf	(??_receiveData+2)& (0+255),b
  3444  00059A  6BF8               	clrf	(??_receiveData+3)& (0+255),b
  3445  00059C  0100               	movlb	0	; () banked
  3446  00059E  51F5               	movf	??_receiveData& (0+255),w,b
  3447  0005A0  0100               	movlb	0	; () banked
  3448  0005A2  27F7               	addwf	(??_receiveData+2)& (0+255),f,b
  3449  0005A4  0100               	movlb	0	; () banked
  3450  0005A6  51F6               	movf	(??_receiveData+1)& (0+255),w,b
  3451  0005A8  0100               	movlb	0	; () banked
  3452  0005AA  23F8               	addwfc	(??_receiveData+3)& (0+255),f,b
  3453  0005AC  0E00               	movlw	low _rx_buffer
  3454  0005AE  0100               	movlb	0	; () banked
  3455  0005B0  25F7               	addwf	(??_receiveData+2)& (0+255),w,b
  3456  0005B2  6ED9               	movwf	fsr2l,c
  3457  0005B4  0E03               	movlw	high _rx_buffer
  3458  0005B6  0100               	movlb	0	; () banked
  3459  0005B8  21F8               	addwfc	(??_receiveData+3)& (0+255),w,b
  3460  0005BA  6EDA               	movwf	fsr2h,c
  3461  0005BC  50DF               	movf	indf2,w,c
  3462  0005BE  0012               	return		;indir
  3463  0005C0                     l5970:
  3464                           
  3465                           ;FastTransfer.c: 173: serial_write(crcHolder);
  3466  0005C0  D801               	call	u6518
  3467  0005C2  D00C               	goto	l5972
  3468  0005C4                     u6518:
  3469  0005C4  0005               	push	
  3470  0005C6  6EFA               	movwf	pclath,c
  3471  0005C8  5032               	movf	_serial_write,w,c
  3472  0005CA  6EFD               	movwf	tosl,c
  3473  0005CC  5033               	movf	_serial_write+1,w,c
  3474  0005CE  6EFE               	movwf	tosh,c
  3475  0005D0  50F8               	movf	tblptru,w,c
  3476  0005D2  6EFF               	movwf	tosu,c
  3477  0005D4  50FA               	movf	pclath,w,c
  3478  0005D6  0101               	movlb	1	; () banked
  3479  0005D8  513F               	movf	receiveData@crcHolder& (0+255),w,b
  3480  0005DA  0012               	return		;indir
  3481  0005DC                     l5972:
  3482                           
  3483                           ;FastTransfer.c: 174: }
  3484                           ;FastTransfer.c: 178: rx_len = 0;
  3485  0005DC  0E00               	movlw	0
  3486  0005DE  6E3F               	movwf	_rx_len,c
  3487                           
  3488                           ;FastTransfer.c: 179: rx_array_inx = 0;
  3489  0005E0  0E00               	movlw	0
  3490  0005E2  6E3E               	movwf	_rx_array_inx,c
  3491                           
  3492                           ;FastTransfer.c: 180: return 1;
  3493  0005E4  0E01               	movlw	1
  3494  0005E6  0012               	return	
  3495  0005E8                     l5982:
  3496                           
  3497                           ;FastTransfer.c: 182: crcErrorCounter++;
  3498  0005E8  0100               	movlb	0	; () banked
  3499  0005EA  4BCB               	infsnz	_crcErrorCounter& (0+255),f,b
  3500  0005EC  2BCC               	incf	(_crcErrorCounter+1)& (0+255),f,b
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;FastTransfer.c: 184: if (AKNAKsend) {
  3504  0005EE  5036               	movf	_AKNAKsend,w,c
  3505  0005F0  B4D8               	btfsc	status,2,c
  3506  0005F2  D0BC               	goto	l6012
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;FastTransfer.c: 185: unsigned char holder[3];
  3510                           ;FastTransfer.c: 186: holder[0] = 255;
  3511  0005F4  0101               	movlb	1	; () banked
  3512  0005F6  693C               	setf	receiveData@holder_2278& (0+255),b
  3513                           
  3514                           ; BSR set to: 1
  3515                           ;FastTransfer.c: 187: holder[1] = 2;
  3516  0005F8  0E02               	movlw	2
  3517  0005FA  0101               	movlb	1	; () banked
  3518  0005FC  6F3D               	movwf	(receiveData@holder_2278+1)& (0+255),b
  3519                           
  3520                           ; BSR set to: 1
  3521                           ;FastTransfer.c: 188: holder[2] = rx_buffer[rx_array_inx - 1];
  3522  0005FE  0EFF               	movlw	255
  3523  000600  0100               	movlb	0	; () banked
  3524  000602  6FF5               	movwf	??_receiveData& (0+255),b
  3525  000604  0EFF               	movlw	255
  3526  000606  0100               	movlb	0	; () banked
  3527  000608  6FF6               	movwf	(??_receiveData+1)& (0+255),b
  3528  00060A  503E               	movf	_rx_array_inx,w,c
  3529  00060C  0100               	movlb	0	; () banked
  3530  00060E  6FF7               	movwf	(??_receiveData+2)& (0+255),b
  3531  000610  6BF8               	clrf	(??_receiveData+3)& (0+255),b
  3532  000612  0100               	movlb	0	; () banked
  3533  000614  51F5               	movf	??_receiveData& (0+255),w,b
  3534  000616  0100               	movlb	0	; () banked
  3535  000618  27F7               	addwf	(??_receiveData+2)& (0+255),f,b
  3536  00061A  0100               	movlb	0	; () banked
  3537  00061C  51F6               	movf	(??_receiveData+1)& (0+255),w,b
  3538  00061E  0100               	movlb	0	; () banked
  3539  000620  23F8               	addwfc	(??_receiveData+3)& (0+255),f,b
  3540  000622  0E00               	movlw	low _rx_buffer
  3541  000624  0100               	movlb	0	; () banked
  3542  000626  25F7               	addwf	(??_receiveData+2)& (0+255),w,b
  3543  000628  6ED9               	movwf	fsr2l,c
  3544  00062A  0E03               	movlw	high _rx_buffer
  3545  00062C  0100               	movlb	0	; () banked
  3546  00062E  21F8               	addwfc	(??_receiveData+3)& (0+255),w,b
  3547  000630  6EDA               	movwf	fsr2h,c
  3548  000632  50DF               	movf	indf2,w,c
  3549  000634  0101               	movlb	1	; () banked
  3550  000636  6F3E               	movwf	(receiveData@holder_2278+2)& (0+255),b
  3551                           
  3552                           ; BSR set to: 1
  3553                           ;FastTransfer.c: 189: unsigned char crcHolder = CRC8(holder, 3);
  3554  000638  0E3C               	movlw	low receiveData@holder_2278
  3555  00063A  6E1B               	movwf	CRC8@data,c
  3556  00063C  0E01               	movlw	high receiveData@holder_2278
  3557  00063E  6E1C               	movwf	CRC8@data+1,c
  3558  000640  0E03               	movlw	3
  3559  000642  6E1D               	movwf	CRC8@len,c
  3560  000644  ECA4  F014         	call	_CRC8
  3561  000648  0101               	movlb	1	; () banked
  3562  00064A  6F40               	movwf	receiveData@crcHolder_2279& (0+255),b
  3563                           
  3564                           ; BSR set to: 1
  3565                           ;FastTransfer.c: 190: serial_write(0x06);
  3566  00064C  D801               	call	u6538
  3567  00064E  D00B               	goto	l5996
  3568  000650                     u6538:
  3569  000650  0005               	push	
  3570  000652  6EFA               	movwf	pclath,c
  3571  000654  5032               	movf	_serial_write,w,c
  3572  000656  6EFD               	movwf	tosl,c
  3573  000658  5033               	movf	_serial_write+1,w,c
  3574  00065A  6EFE               	movwf	tosh,c
  3575  00065C  50F8               	movf	tblptru,w,c
  3576  00065E  6EFF               	movwf	tosu,c
  3577  000660  50FA               	movf	pclath,w,c
  3578  000662  0E06               	movlw	6
  3579  000664  0012               	return		;indir
  3580  000666                     l5996:
  3581                           
  3582                           ;FastTransfer.c: 191: serial_write(0x85);
  3583  000666  D801               	call	u6548
  3584  000668  D00B               	goto	l5998
  3585  00066A                     u6548:
  3586  00066A  0005               	push	
  3587  00066C  6EFA               	movwf	pclath,c
  3588  00066E  5032               	movf	_serial_write,w,c
  3589  000670  6EFD               	movwf	tosl,c
  3590  000672  5033               	movf	_serial_write+1,w,c
  3591  000674  6EFE               	movwf	tosh,c
  3592  000676  50F8               	movf	tblptru,w,c
  3593  000678  6EFF               	movwf	tosu,c
  3594  00067A  50FA               	movf	pclath,w,c
  3595  00067C  0E85               	movlw	133
  3596  00067E  0012               	return		;indir
  3597  000680                     l5998:
  3598                           
  3599                           ;FastTransfer.c: 192: serial_write(returnAddress);
  3600  000680  D801               	call	u6558
  3601  000682  D00B               	goto	l6000
  3602  000684                     u6558:
  3603  000684  0005               	push	
  3604  000686  6EFA               	movwf	pclath,c
  3605  000688  5032               	movf	_serial_write,w,c
  3606  00068A  6EFD               	movwf	tosl,c
  3607  00068C  5033               	movf	_serial_write+1,w,c
  3608  00068E  6EFE               	movwf	tosh,c
  3609  000690  50F8               	movf	tblptru,w,c
  3610  000692  6EFF               	movwf	tosu,c
  3611  000694  50FA               	movf	pclath,w,c
  3612  000696  503C               	movf	_returnAddress,w,c
  3613  000698  0012               	return		;indir
  3614  00069A                     l6000:
  3615                           
  3616                           ;FastTransfer.c: 193: serial_write(moduleAddress);
  3617  00069A  D801               	call	u6568
  3618  00069C  D00B               	goto	l6002
  3619  00069E                     u6568:
  3620  00069E  0005               	push	
  3621  0006A0  6EFA               	movwf	pclath,c
  3622  0006A2  5032               	movf	_serial_write,w,c
  3623  0006A4  6EFD               	movwf	tosl,c
  3624  0006A6  5033               	movf	_serial_write+1,w,c
  3625  0006A8  6EFE               	movwf	tosh,c
  3626  0006AA  50F8               	movf	tblptru,w,c
  3627  0006AC  6EFF               	movwf	tosu,c
  3628  0006AE  50FA               	movf	pclath,w,c
  3629  0006B0  503B               	movf	_moduleAddress,w,c
  3630  0006B2  0012               	return		;indir
  3631  0006B4                     l6002:
  3632                           
  3633                           ;FastTransfer.c: 194: serial_write(3);
  3634  0006B4  D801               	call	u6578
  3635  0006B6  D00B               	goto	l6004
  3636  0006B8                     u6578:
  3637  0006B8  0005               	push	
  3638  0006BA  6EFA               	movwf	pclath,c
  3639  0006BC  5032               	movf	_serial_write,w,c
  3640  0006BE  6EFD               	movwf	tosl,c
  3641  0006C0  5033               	movf	_serial_write+1,w,c
  3642  0006C2  6EFE               	movwf	tosh,c
  3643  0006C4  50F8               	movf	tblptru,w,c
  3644  0006C6  6EFF               	movwf	tosu,c
  3645  0006C8  50FA               	movf	pclath,w,c
  3646  0006CA  0E03               	movlw	3
  3647  0006CC  0012               	return		;indir
  3648  0006CE                     l6004:
  3649                           
  3650                           ;FastTransfer.c: 195: serial_write(255);
  3651  0006CE  D801               	call	u6588
  3652  0006D0  D00B               	goto	l6006
  3653  0006D2                     u6588:
  3654  0006D2  0005               	push	
  3655  0006D4  6EFA               	movwf	pclath,c
  3656  0006D6  5032               	movf	_serial_write,w,c
  3657  0006D8  6EFD               	movwf	tosl,c
  3658  0006DA  5033               	movf	_serial_write+1,w,c
  3659  0006DC  6EFE               	movwf	tosh,c
  3660  0006DE  50F8               	movf	tblptru,w,c
  3661  0006E0  6EFF               	movwf	tosu,c
  3662  0006E2  50FA               	movf	pclath,w,c
  3663  0006E4  0EFF               	movlw	255
  3664  0006E6  0012               	return		;indir
  3665  0006E8                     l6006:
  3666                           
  3667                           ;FastTransfer.c: 196: serial_write(2);
  3668  0006E8  D801               	call	u6598
  3669  0006EA  D00B               	goto	l6008
  3670  0006EC                     u6598:
  3671  0006EC  0005               	push	
  3672  0006EE  6EFA               	movwf	pclath,c
  3673  0006F0  5032               	movf	_serial_write,w,c
  3674  0006F2  6EFD               	movwf	tosl,c
  3675  0006F4  5033               	movf	_serial_write+1,w,c
  3676  0006F6  6EFE               	movwf	tosh,c
  3677  0006F8  50F8               	movf	tblptru,w,c
  3678  0006FA  6EFF               	movwf	tosu,c
  3679  0006FC  50FA               	movf	pclath,w,c
  3680  0006FE  0E02               	movlw	2
  3681  000700  0012               	return		;indir
  3682  000702                     l6008:
  3683                           
  3684                           ;FastTransfer.c: 197: serial_write(rx_buffer[rx_array_inx - 1]);
  3685  000702  D801               	call	u6608
  3686  000704  D025               	goto	l6010
  3687  000706                     u6608:
  3688  000706  0005               	push	
  3689  000708  6EFA               	movwf	pclath,c
  3690  00070A  5032               	movf	_serial_write,w,c
  3691  00070C  6EFD               	movwf	tosl,c
  3692  00070E  5033               	movf	_serial_write+1,w,c
  3693  000710  6EFE               	movwf	tosh,c
  3694  000712  50F8               	movf	tblptru,w,c
  3695  000714  6EFF               	movwf	tosu,c
  3696  000716  50FA               	movf	pclath,w,c
  3697  000718  0EFF               	movlw	255
  3698  00071A  0100               	movlb	0	; () banked
  3699  00071C  6FF5               	movwf	??_receiveData& (0+255),b
  3700  00071E  0EFF               	movlw	255
  3701  000720  0100               	movlb	0	; () banked
  3702  000722  6FF6               	movwf	(??_receiveData+1)& (0+255),b
  3703  000724  503E               	movf	_rx_array_inx,w,c
  3704  000726  0100               	movlb	0	; () banked
  3705  000728  6FF7               	movwf	(??_receiveData+2)& (0+255),b
  3706  00072A  6BF8               	clrf	(??_receiveData+3)& (0+255),b
  3707  00072C  0100               	movlb	0	; () banked
  3708  00072E  51F5               	movf	??_receiveData& (0+255),w,b
  3709  000730  0100               	movlb	0	; () banked
  3710  000732  27F7               	addwf	(??_receiveData+2)& (0+255),f,b
  3711  000734  0100               	movlb	0	; () banked
  3712  000736  51F6               	movf	(??_receiveData+1)& (0+255),w,b
  3713  000738  0100               	movlb	0	; () banked
  3714  00073A  23F8               	addwfc	(??_receiveData+3)& (0+255),f,b
  3715  00073C  0E00               	movlw	low _rx_buffer
  3716  00073E  0100               	movlb	0	; () banked
  3717  000740  25F7               	addwf	(??_receiveData+2)& (0+255),w,b
  3718  000742  6ED9               	movwf	fsr2l,c
  3719  000744  0E03               	movlw	high _rx_buffer
  3720  000746  0100               	movlb	0	; () banked
  3721  000748  21F8               	addwfc	(??_receiveData+3)& (0+255),w,b
  3722  00074A  6EDA               	movwf	fsr2h,c
  3723  00074C  50DF               	movf	indf2,w,c
  3724  00074E  0012               	return		;indir
  3725  000750                     l6010:
  3726                           
  3727                           ;FastTransfer.c: 198: serial_write(crcHolder);
  3728  000750  D801               	call	u6618
  3729  000752  D00C               	goto	l6012
  3730  000754                     u6618:
  3731  000754  0005               	push	
  3732  000756  6EFA               	movwf	pclath,c
  3733  000758  5032               	movf	_serial_write,w,c
  3734  00075A  6EFD               	movwf	tosl,c
  3735  00075C  5033               	movf	_serial_write+1,w,c
  3736  00075E  6EFE               	movwf	tosh,c
  3737  000760  50F8               	movf	tblptru,w,c
  3738  000762  6EFF               	movwf	tosu,c
  3739  000764  50FA               	movf	pclath,w,c
  3740  000766  0101               	movlb	1	; () banked
  3741  000768  5140               	movf	receiveData@crcHolder_2279& (0+255),w,b
  3742  00076A  0012               	return		;indir
  3743  00076C                     l6012:
  3744                           
  3745                           ;FastTransfer.c: 199: }
  3746                           ;FastTransfer.c: 202: rx_len = 0;
  3747  00076C  0E00               	movlw	0
  3748  00076E  6E3F               	movwf	_rx_len,c
  3749                           
  3750                           ;FastTransfer.c: 203: rx_array_inx = 0;
  3751  000770  0E00               	movlw	0
  3752  000772  6E3E               	movwf	_rx_array_inx,c
  3753                           
  3754                           ;FastTransfer.c: 204: return 0;
  3755  000774  0E00               	movlw	0
  3756  000776  0012               	return	
  3757  000778                     l6020:
  3758                           
  3759                           ;FastTransfer.c: 205: }
  3760                           ;FastTransfer.c: 206: }
  3761                           ;FastTransfer.c: 207: }
  3762                           ;FastTransfer.c: 210: return 0;
  3763  000778  0E00               	movlw	0
  3764  00077A  0012               	return	
  3765  00077C                     __end_of_receiveData:
  3766                           	opt stack 0
  3767                           tosu	equ	0xFFF
  3768                           tosh	equ	0xFFE
  3769                           tosl	equ	0xFFD
  3770                           pclath	equ	0xFFA
  3771                           tblptru	equ	0xFF8
  3772                           tblptrh	equ	0xFF7
  3773                           tblptrl	equ	0xFF6
  3774                           tablat	equ	0xFF5
  3775                           prodh	equ	0xFF4
  3776                           prodl	equ	0xFF3
  3777                           intcon	equ	0xFF2
  3778                           postinc0	equ	0xFEE
  3779                           wreg	equ	0xFE8
  3780                           indf2	equ	0xFDF
  3781                           postinc2	equ	0xFDE
  3782                           postdec2	equ	0xFDD
  3783                           plusw2	equ	0xFDB
  3784                           fsr2h	equ	0xFDA
  3785                           fsr2l	equ	0xFD9
  3786                           status	equ	0xFD8
  3787                           
  3788 ;; *************** function _Send_put *****************
  3789 ;; Defined at:
  3790 ;;		line 130 in file "UART.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;  _data           1    wreg     unsigned char 
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;  _data           1   37[COMRAM] unsigned char 
  3795 ;; Return value:  Size  Location     Type
  3796 ;;		None               void
  3797 ;; Registers used:
  3798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3804 ;;      Params:         0       0       0       0       0       0       0
  3805 ;;      Locals:         1       0       0       0       0       0       0
  3806 ;;      Temps:          0       0       0       0       0       0       0
  3807 ;;      Totals:         1       0       0       0       0       0       0
  3808 ;;Total ram usage:        1 bytes
  3809 ;; Hardware stack levels used:    1
  3810 ;; Hardware stack levels required when called:    6
  3811 ;; This function calls:
  3812 ;;		_UART_buff_get
  3813 ;;		_UART_buff_put
  3814 ;; This function is called by:
  3815 ;;		_SYSTEM_Initialize
  3816 ;;		_putch
  3817 ;;		_sendData
  3818 ;;		_receiveData
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           	psect	text13
  3823  002B74                     __ptext13:
  3824                           	opt stack 0
  3825  002B74                     _Send_put:
  3826                           	opt stack 21
  3827                           
  3828                           ;incstack = 0
  3829                           ;Send_put@_data stored from wreg
  3830  002B74  6E26               	movwf	Send_put@_data,c
  3831                           
  3832                           ;UART.c: 131: UART_buff_put(&output_buffer, _data);
  3833  002B76  0E00               	movlw	low _output_buffer
  3834  002B78  6E21               	movwf	UART_buff_put@_this,c
  3835  002B7A  0E05               	movlw	high _output_buffer
  3836  002B7C  6E22               	movwf	UART_buff_put@_this+1,c
  3837  002B7E  C026  F023         	movff	Send_put@_data,UART_buff_put@c
  3838  002B82  EC18  F00C         	call	_UART_buff_put
  3839                           
  3840                           ;UART.c: 132: if (Transmit_stall == 1) {
  3841  002B86  0444               	decf	_Transmit_stall,w,c
  3842  002B88  A4D8               	btfss	status,2,c
  3843  002B8A  0012               	return	
  3844                           
  3845                           ;UART.c: 133: Transmit_stall = 0;
  3846  002B8C  0E00               	movlw	0
  3847  002B8E  6E44               	movwf	_Transmit_stall,c
  3848                           
  3849                           ;UART.c: 134: TXREG1 = UART_buff_get(&output_buffer);
  3850  002B90  0E00               	movlw	low _output_buffer
  3851  002B92  6E21               	movwf	UART_buff_get@_this,c
  3852  002B94  0E05               	movlw	high _output_buffer
  3853  002B96  6E22               	movwf	UART_buff_get@_this+1,c
  3854  002B98  ECC5  F011         	call	_UART_buff_get	;wreg free
  3855  002B9C  6EAD               	movwf	4013,c	;volatile
  3856                           
  3857                           ;UART.c: 135: PIE1bits.TX1IE = 1;
  3858  002B9E  889D               	bsf	3997,4,c	;volatile
  3859  002BA0  0012               	return	
  3860  002BA2                     __end_of_Send_put:
  3861                           	opt stack 0
  3862                           tosu	equ	0xFFF
  3863                           tosh	equ	0xFFE
  3864                           tosl	equ	0xFFD
  3865                           pclath	equ	0xFFA
  3866                           tblptru	equ	0xFF8
  3867                           tblptrh	equ	0xFF7
  3868                           tblptrl	equ	0xFF6
  3869                           tablat	equ	0xFF5
  3870                           prodh	equ	0xFF4
  3871                           prodl	equ	0xFF3
  3872                           intcon	equ	0xFF2
  3873                           postinc0	equ	0xFEE
  3874                           wreg	equ	0xFE8
  3875                           indf2	equ	0xFDF
  3876                           postinc2	equ	0xFDE
  3877                           postdec2	equ	0xFDD
  3878                           plusw2	equ	0xFDB
  3879                           fsr2h	equ	0xFDA
  3880                           fsr2l	equ	0xFD9
  3881                           status	equ	0xFD8
  3882                           
  3883 ;; *************** function _UART_buff_put *****************
  3884 ;; Defined at:
  3885 ;;		line 68 in file "UART.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  3888 ;;		 -> output_buffer(206), input_buffer(206), 
  3889 ;;  c               1   34[COMRAM] const unsigned char 
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;		None
  3892 ;; Return value:  Size  Location     Type
  3893 ;;		None               void
  3894 ;; Registers used:
  3895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3901 ;;      Params:         3       0       0       0       0       0       0
  3902 ;;      Locals:         0       0       0       0       0       0       0
  3903 ;;      Temps:          2       0       0       0       0       0       0
  3904 ;;      Totals:         5       0       0       0       0       0       0
  3905 ;;Total ram usage:        5 bytes
  3906 ;; Hardware stack levels used:    1
  3907 ;; Hardware stack levels required when called:    5
  3908 ;; This function calls:
  3909 ;;		_UART_buff_modulo_inc
  3910 ;; This function is called by:
  3911 ;;		_Send_put
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915                           	psect	text14
  3916  001830                     __ptext14:
  3917                           	opt stack 0
  3918  001830                     _UART_buff_put:
  3919                           	opt stack 21
  3920                           
  3921                           ;UART.c: 69: if (_this->count < 200) {
  3922                           
  3923                           ;incstack = 0
  3924  001830  EE20 F0CC          	lfsr	2,204
  3925  001834  5021               	movf	UART_buff_put@_this,w,c
  3926  001836  26D9               	addwf	fsr2l,f,c
  3927  001838  5022               	movf	UART_buff_put@_this+1,w,c
  3928  00183A  22DA               	addwfc	fsr2h,f,c
  3929  00183C  0E01               	movlw	1
  3930  00183E  BEDB               	btfsc	plusw2,7,c
  3931  001840  D007               	goto	l5172
  3932  001842  0E01               	movlw	1
  3933  001844  50DB               	movf	plusw2,w,c
  3934  001846  E13A               	bnz	l5178
  3935  001848  0EC8               	movlw	200
  3936  00184A  5CDE               	subwf	postinc2,w,c
  3937  00184C  B0D8               	btfsc	status,0,c
  3938  00184E  D036               	goto	l5178
  3939  001850                     l5172:
  3940                           
  3941                           ;UART.c: 70: _this->buf[_this->head] = c;
  3942  001850  EE20 F0C8          	lfsr	2,200
  3943  001854  5021               	movf	UART_buff_put@_this,w,c
  3944  001856  26D9               	addwf	fsr2l,f,c
  3945  001858  5022               	movf	UART_buff_put@_this+1,w,c
  3946  00185A  22DA               	addwfc	fsr2h,f,c
  3947  00185C  CFDE F024          	movff	postinc2,??_UART_buff_put
  3948  001860  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  3949  001864  5024               	movf	??_UART_buff_put,w,c
  3950  001866  2421               	addwf	UART_buff_put@_this,w,c
  3951  001868  6ED9               	movwf	fsr2l,c
  3952  00186A  5025               	movf	??_UART_buff_put+1,w,c
  3953  00186C  2022               	addwfc	UART_buff_put@_this+1,w,c
  3954  00186E  6EDA               	movwf	fsr2h,c
  3955  001870  C023  FFDF         	movff	UART_buff_put@c,indf2
  3956                           
  3957                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
  3958  001874  EE20 F0C8          	lfsr	2,200
  3959  001878  5021               	movf	UART_buff_put@_this,w,c
  3960  00187A  26D9               	addwf	fsr2l,f,c
  3961  00187C  5022               	movf	UART_buff_put@_this+1,w,c
  3962  00187E  22DA               	addwfc	fsr2h,f,c
  3963  001880  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  3964  001884  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  3965  001888  0E00               	movlw	0
  3966  00188A  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  3967  00188C  0EC8               	movlw	200
  3968  00188E  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  3969  001890  ECFC  F015         	call	_UART_buff_modulo_inc	;wreg free
  3970  001894  EE20 F0C8          	lfsr	2,200
  3971  001898  5021               	movf	UART_buff_put@_this,w,c
  3972  00189A  26D9               	addwf	fsr2l,f,c
  3973  00189C  5022               	movf	UART_buff_put@_this+1,w,c
  3974  00189E  22DA               	addwfc	fsr2h,f,c
  3975  0018A0  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  3976  0018A4  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  3977                           
  3978                           ;UART.c: 72: ++_this->count;
  3979  0018A8  EE20 F0CC          	lfsr	2,204
  3980  0018AC  5021               	movf	UART_buff_put@_this,w,c
  3981  0018AE  26D9               	addwf	fsr2l,f,c
  3982  0018B0  5022               	movf	UART_buff_put@_this+1,w,c
  3983  0018B2  22DA               	addwfc	fsr2h,f,c
  3984  0018B4  2ADE               	incf	postinc2,f,c
  3985  0018B6  0E00               	movlw	0
  3986  0018B8  22DD               	addwfc	postdec2,f,c
  3987                           
  3988                           ;UART.c: 73: } else {
  3989  0018BA  0012               	return	
  3990  0018BC                     l5178:
  3991                           
  3992                           ;UART.c: 74: _this->buf[_this->head] = c;
  3993  0018BC  EE20 F0C8          	lfsr	2,200
  3994  0018C0  5021               	movf	UART_buff_put@_this,w,c
  3995  0018C2  26D9               	addwf	fsr2l,f,c
  3996  0018C4  5022               	movf	UART_buff_put@_this+1,w,c
  3997  0018C6  22DA               	addwfc	fsr2h,f,c
  3998  0018C8  CFDE F024          	movff	postinc2,??_UART_buff_put
  3999  0018CC  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  4000  0018D0  5024               	movf	??_UART_buff_put,w,c
  4001  0018D2  2421               	addwf	UART_buff_put@_this,w,c
  4002  0018D4  6ED9               	movwf	fsr2l,c
  4003  0018D6  5025               	movf	??_UART_buff_put+1,w,c
  4004  0018D8  2022               	addwfc	UART_buff_put@_this+1,w,c
  4005  0018DA  6EDA               	movwf	fsr2h,c
  4006  0018DC  C023  FFDF         	movff	UART_buff_put@c,indf2
  4007                           
  4008                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
  4009  0018E0  EE20 F0C8          	lfsr	2,200
  4010  0018E4  5021               	movf	UART_buff_put@_this,w,c
  4011  0018E6  26D9               	addwf	fsr2l,f,c
  4012  0018E8  5022               	movf	UART_buff_put@_this+1,w,c
  4013  0018EA  22DA               	addwfc	fsr2h,f,c
  4014  0018EC  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  4015  0018F0  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  4016  0018F4  0E00               	movlw	0
  4017  0018F6  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  4018  0018F8  0EC8               	movlw	200
  4019  0018FA  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  4020  0018FC  ECFC  F015         	call	_UART_buff_modulo_inc	;wreg free
  4021  001900  EE20 F0C8          	lfsr	2,200
  4022  001904  5021               	movf	UART_buff_put@_this,w,c
  4023  001906  26D9               	addwf	fsr2l,f,c
  4024  001908  5022               	movf	UART_buff_put@_this+1,w,c
  4025  00190A  22DA               	addwfc	fsr2h,f,c
  4026  00190C  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4027  001910  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4028                           
  4029                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  4030  001914  EE20 F0CA          	lfsr	2,202
  4031  001918  5021               	movf	UART_buff_put@_this,w,c
  4032  00191A  26D9               	addwf	fsr2l,f,c
  4033  00191C  5022               	movf	UART_buff_put@_this+1,w,c
  4034  00191E  22DA               	addwfc	fsr2h,f,c
  4035  001920  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  4036  001924  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  4037  001928  0E00               	movlw	0
  4038  00192A  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  4039  00192C  0EC8               	movlw	200
  4040  00192E  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  4041  001930  ECFC  F015         	call	_UART_buff_modulo_inc	;wreg free
  4042  001934  EE20 F0CA          	lfsr	2,202
  4043  001938  5021               	movf	UART_buff_put@_this,w,c
  4044  00193A  26D9               	addwf	fsr2l,f,c
  4045  00193C  5022               	movf	UART_buff_put@_this+1,w,c
  4046  00193E  22DA               	addwfc	fsr2h,f,c
  4047  001940  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4048  001944  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4049  001948  0012               	return	
  4050  00194A                     __end_of_UART_buff_put:
  4051                           	opt stack 0
  4052                           tosu	equ	0xFFF
  4053                           tosh	equ	0xFFE
  4054                           tosl	equ	0xFFD
  4055                           pclath	equ	0xFFA
  4056                           tblptru	equ	0xFF8
  4057                           tblptrh	equ	0xFF7
  4058                           tblptrl	equ	0xFF6
  4059                           tablat	equ	0xFF5
  4060                           prodh	equ	0xFF4
  4061                           prodl	equ	0xFF3
  4062                           intcon	equ	0xFF2
  4063                           postinc0	equ	0xFEE
  4064                           wreg	equ	0xFE8
  4065                           indf2	equ	0xFDF
  4066                           postinc2	equ	0xFDE
  4067                           postdec2	equ	0xFDD
  4068                           plusw2	equ	0xFDB
  4069                           fsr2h	equ	0xFDA
  4070                           fsr2l	equ	0xFD9
  4071                           status	equ	0xFD8
  4072                           
  4073 ;; *************** function _Receive_peek *****************
  4074 ;; Defined at:
  4075 ;;		line 118 in file "UART.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;		None
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;		None
  4080 ;; Return value:  Size  Location     Type
  4081 ;;                  1    wreg      unsigned char 
  4082 ;; Registers used:
  4083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4084 ;; Tracked objects:
  4085 ;;		On entry : 0/0
  4086 ;;		On exit  : 0/0
  4087 ;;		Unchanged: 0/0
  4088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4089 ;;      Params:         0       0       0       0       0       0       0
  4090 ;;      Locals:         0       0       0       0       0       0       0
  4091 ;;      Temps:          0       0       0       0       0       0       0
  4092 ;;      Totals:         0       0       0       0       0       0       0
  4093 ;;Total ram usage:        0 bytes
  4094 ;; Hardware stack levels used:    1
  4095 ;; Hardware stack levels required when called:    5
  4096 ;; This function calls:
  4097 ;;		_UART_buff_peek
  4098 ;; This function is called by:
  4099 ;;		_SYSTEM_Initialize
  4100 ;;		_receiveData
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104                           	psect	text15
  4105  002DCA                     __ptext15:
  4106                           	opt stack 0
  4107  002DCA                     _Receive_peek:
  4108                           	opt stack 23
  4109                           
  4110                           ;UART.c: 119: return UART_buff_peek(&input_buffer);
  4111                           
  4112                           ;incstack = 0
  4113  002DCA  0E00               	movlw	low _input_buffer
  4114  002DCC  6E1B               	movwf	UART_buff_peek@_this,c
  4115  002DCE  0E04               	movlw	high _input_buffer
  4116  002DD0  6E1C               	movwf	UART_buff_peek@_this+1,c
  4117  002DD2  EC3A  F016         	call	_UART_buff_peek	;wreg free
  4118  002DD6  0012               	return	
  4119  002DD8                     __end_of_Receive_peek:
  4120                           	opt stack 0
  4121                           tosu	equ	0xFFF
  4122                           tosh	equ	0xFFE
  4123                           tosl	equ	0xFFD
  4124                           pclath	equ	0xFFA
  4125                           tblptru	equ	0xFF8
  4126                           tblptrh	equ	0xFF7
  4127                           tblptrl	equ	0xFF6
  4128                           tablat	equ	0xFF5
  4129                           prodh	equ	0xFF4
  4130                           prodl	equ	0xFF3
  4131                           intcon	equ	0xFF2
  4132                           postinc0	equ	0xFEE
  4133                           wreg	equ	0xFE8
  4134                           indf2	equ	0xFDF
  4135                           postinc2	equ	0xFDE
  4136                           postdec2	equ	0xFDD
  4137                           plusw2	equ	0xFDB
  4138                           fsr2h	equ	0xFDA
  4139                           fsr2l	equ	0xFD9
  4140                           status	equ	0xFD8
  4141                           
  4142 ;; *************** function _UART_buff_peek *****************
  4143 ;; Defined at:
  4144 ;;		line 114 in file "UART.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  4147 ;;		 -> input_buffer(206), 
  4148 ;; Auto vars:     Size  Location     Type
  4149 ;;		None
  4150 ;; Return value:  Size  Location     Type
  4151 ;;                  1    wreg      unsigned char 
  4152 ;; Registers used:
  4153 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4154 ;; Tracked objects:
  4155 ;;		On entry : 0/0
  4156 ;;		On exit  : 0/0
  4157 ;;		Unchanged: 0/0
  4158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4159 ;;      Params:         2       0       0       0       0       0       0
  4160 ;;      Locals:         0       0       0       0       0       0       0
  4161 ;;      Temps:          2       0       0       0       0       0       0
  4162 ;;      Totals:         4       0       0       0       0       0       0
  4163 ;;Total ram usage:        4 bytes
  4164 ;; Hardware stack levels used:    1
  4165 ;; Hardware stack levels required when called:    4
  4166 ;; This function calls:
  4167 ;;		Nothing
  4168 ;; This function is called by:
  4169 ;;		_Receive_peek
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172                           
  4173                           	psect	text16
  4174  002C74                     __ptext16:
  4175                           	opt stack 0
  4176  002C74                     _UART_buff_peek:
  4177                           	opt stack 23
  4178                           
  4179                           ;UART.c: 115: return _this->buf[_this->tail];
  4180                           
  4181                           ;incstack = 0
  4182  002C74  EE20 F0CA          	lfsr	2,202
  4183  002C78  501B               	movf	UART_buff_peek@_this,w,c
  4184  002C7A  26D9               	addwf	fsr2l,f,c
  4185  002C7C  501C               	movf	UART_buff_peek@_this+1,w,c
  4186  002C7E  22DA               	addwfc	fsr2h,f,c
  4187  002C80  CFDE F01D          	movff	postinc2,??_UART_buff_peek
  4188  002C84  CFDD F01E          	movff	postdec2,??_UART_buff_peek+1
  4189  002C88  501D               	movf	??_UART_buff_peek,w,c
  4190  002C8A  241B               	addwf	UART_buff_peek@_this,w,c
  4191  002C8C  6ED9               	movwf	fsr2l,c
  4192  002C8E  501E               	movf	??_UART_buff_peek+1,w,c
  4193  002C90  201C               	addwfc	UART_buff_peek@_this+1,w,c
  4194  002C92  6EDA               	movwf	fsr2h,c
  4195  002C94  50DF               	movf	indf2,w,c
  4196  002C96  0012               	return	
  4197  002C98                     __end_of_UART_buff_peek:
  4198                           	opt stack 0
  4199                           tosu	equ	0xFFF
  4200                           tosh	equ	0xFFE
  4201                           tosl	equ	0xFFD
  4202                           pclath	equ	0xFFA
  4203                           tblptru	equ	0xFF8
  4204                           tblptrh	equ	0xFF7
  4205                           tblptrl	equ	0xFF6
  4206                           tablat	equ	0xFF5
  4207                           prodh	equ	0xFF4
  4208                           prodl	equ	0xFF3
  4209                           intcon	equ	0xFF2
  4210                           postinc0	equ	0xFEE
  4211                           wreg	equ	0xFE8
  4212                           indf2	equ	0xFDF
  4213                           postinc2	equ	0xFDE
  4214                           postdec2	equ	0xFDD
  4215                           plusw2	equ	0xFDB
  4216                           fsr2h	equ	0xFDA
  4217                           fsr2l	equ	0xFD9
  4218                           status	equ	0xFD8
  4219                           
  4220 ;; *************** function _CRCcheck *****************
  4221 ;; Defined at:
  4222 ;;		line 373 in file "FastTransfer.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;		None
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;  rt              2    5[BANK0 ] int 
  4227 ;;  arrayHolder     3    2[BANK0 ] unsigned char [3]
  4228 ;;  calculatedCR    1    1[BANK0 ] unsigned char 
  4229 ;;  SentCRC         1    0[BANK0 ] unsigned char 
  4230 ;; Return value:  Size  Location     Type
  4231 ;;		None               void
  4232 ;; Registers used:
  4233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4239 ;;      Params:         0       0       0       0       0       0       0
  4240 ;;      Locals:         0       7       0       0       0       0       0
  4241 ;;      Temps:          0       0       0       0       0       0       0
  4242 ;;      Totals:         0       7       0       0       0       0       0
  4243 ;;Total ram usage:        7 bytes
  4244 ;; Hardware stack levels used:    1
  4245 ;; Hardware stack levels required when called:    7
  4246 ;; This function calls:
  4247 ;;		Absolute function
  4248 ;;		_CRC8
  4249 ;;		_Receive_available
  4250 ;;		_Receive_get
  4251 ;;		_crcBufS_get
  4252 ;;		_crcBufS_status_put
  4253 ;; This function is called by:
  4254 ;;		_receiveData
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           	psect	text17
  4259  001208                     __ptext17:
  4260                           	opt stack 0
  4261  001208                     _CRCcheck:
  4262                           	opt stack 21
  4263  001208                     l5604:
  4264  001208  D801               	call	u5678
  4265  00120A  D00A               	goto	u5679
  4266  00120C                     u5678:
  4267  00120C  0005               	push	
  4268  00120E  6EFA               	movwf	pclath,c
  4269  001210  502E               	movf	_serial_available,w,c
  4270  001212  6EFD               	movwf	tosl,c
  4271  001214  502F               	movf	_serial_available+1,w,c
  4272  001216  6EFE               	movwf	tosh,c
  4273  001218  50F8               	movf	tblptru,w,c
  4274  00121A  6EFF               	movwf	tosu,c
  4275  00121C  50FA               	movf	pclath,w,c
  4276  00121E  0012               	return		;indir
  4277  001220                     u5679:
  4278  001220  BE1E               	btfsc	?_Receive_available+1,7,c
  4279  001222  D7F2               	goto	l5604
  4280  001224  501E               	movf	?_Receive_available+1,w,c
  4281  001226  E104               	bnz	l5606
  4282  001228  0E04               	movlw	4
  4283  00122A  5C1D               	subwf	?_Receive_available,w,c
  4284  00122C  A0D8               	btfss	status,0,c
  4285  00122E  D7EC               	goto	l5604
  4286  001230                     l5606:
  4287                           
  4288                           ;FastTransfer.c: 377: unsigned char arrayHolder[3];
  4289                           ;FastTransfer.c: 378: arrayHolder[0] = serial_read();
  4290  001230  D801               	call	u5698
  4291  001232  D00A               	goto	u5699
  4292  001234                     u5698:
  4293  001234  0005               	push	
  4294  001236  6EFA               	movwf	pclath,c
  4295  001238  5030               	movf	_serial_read,w,c
  4296  00123A  6EFD               	movwf	tosl,c
  4297  00123C  5031               	movf	_serial_read+1,w,c
  4298  00123E  6EFE               	movwf	tosh,c
  4299  001240  50F8               	movf	tblptru,w,c
  4300  001242  6EFF               	movwf	tosu,c
  4301  001244  50FA               	movf	pclath,w,c
  4302  001246  0012               	return		;indir
  4303  001248                     u5699:
  4304  001248  0100               	movlb	0	; () banked
  4305  00124A  6FF0               	movwf	CRCcheck@arrayHolder& (0+255),b
  4306                           
  4307                           ;FastTransfer.c: 379: arrayHolder[1] = serial_read();
  4308  00124C  D801               	call	u5708
  4309  00124E  D00A               	goto	u5709
  4310  001250                     u5708:
  4311  001250  0005               	push	
  4312  001252  6EFA               	movwf	pclath,c
  4313  001254  5030               	movf	_serial_read,w,c
  4314  001256  6EFD               	movwf	tosl,c
  4315  001258  5031               	movf	_serial_read+1,w,c
  4316  00125A  6EFE               	movwf	tosh,c
  4317  00125C  50F8               	movf	tblptru,w,c
  4318  00125E  6EFF               	movwf	tosu,c
  4319  001260  50FA               	movf	pclath,w,c
  4320  001262  0012               	return		;indir
  4321  001264                     u5709:
  4322  001264  0100               	movlb	0	; () banked
  4323  001266  6FF1               	movwf	(CRCcheck@arrayHolder+1)& (0+255),b
  4324                           
  4325                           ;FastTransfer.c: 380: arrayHolder[2] = serial_read();
  4326  001268  D801               	call	u5718
  4327  00126A  D00A               	goto	u5719
  4328  00126C                     u5718:
  4329  00126C  0005               	push	
  4330  00126E  6EFA               	movwf	pclath,c
  4331  001270  5030               	movf	_serial_read,w,c
  4332  001272  6EFD               	movwf	tosl,c
  4333  001274  5031               	movf	_serial_read+1,w,c
  4334  001276  6EFE               	movwf	tosh,c
  4335  001278  50F8               	movf	tblptru,w,c
  4336  00127A  6EFF               	movwf	tosu,c
  4337  00127C  50FA               	movf	pclath,w,c
  4338  00127E  0012               	return		;indir
  4339  001280                     u5719:
  4340  001280  0100               	movlb	0	; () banked
  4341  001282  6FF2               	movwf	(CRCcheck@arrayHolder+2)& (0+255),b
  4342                           
  4343                           ;FastTransfer.c: 381: unsigned char SentCRC = serial_read();
  4344  001284  D801               	call	u5728
  4345  001286  D00A               	goto	u5729
  4346  001288                     u5728:
  4347  001288  0005               	push	
  4348  00128A  6EFA               	movwf	pclath,c
  4349  00128C  5030               	movf	_serial_read,w,c
  4350  00128E  6EFD               	movwf	tosl,c
  4351  001290  5031               	movf	_serial_read+1,w,c
  4352  001292  6EFE               	movwf	tosh,c
  4353  001294  50F8               	movf	tblptru,w,c
  4354  001296  6EFF               	movwf	tosu,c
  4355  001298  50FA               	movf	pclath,w,c
  4356  00129A  0012               	return		;indir
  4357  00129C                     u5729:
  4358  00129C  0100               	movlb	0	; () banked
  4359  00129E  6FEE               	movwf	CRCcheck@SentCRC& (0+255),b
  4360                           
  4361                           ; BSR set to: 0
  4362                           ;FastTransfer.c: 382: unsigned char calculatedCRC = CRC8(arrayHolder, 3);
  4363  0012A0  0EF0               	movlw	low CRCcheck@arrayHolder
  4364  0012A2  6E1B               	movwf	CRC8@data,c
  4365  0012A4  0E00               	movlw	high CRCcheck@arrayHolder
  4366  0012A6  6E1C               	movwf	CRC8@data+1,c
  4367  0012A8  0E03               	movlw	3
  4368  0012AA  6E1D               	movwf	CRC8@len,c
  4369  0012AC  ECA4  F014         	call	_CRC8	;wreg free
  4370  0012B0  0100               	movlb	0	; () banked
  4371  0012B2  6FEF               	movwf	CRCcheck@calculatedCRC& (0+255),b
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;FastTransfer.c: 385: if (SentCRC == calculatedCRC) {
  4375  0012B4  0100               	movlb	0	; () banked
  4376  0012B6  51EF               	movf	CRCcheck@calculatedCRC& (0+255),w,b
  4377  0012B8  0100               	movlb	0	; () banked
  4378  0012BA  19EE               	xorwf	CRCcheck@SentCRC& (0+255),w,b
  4379  0012BC  A4D8               	btfss	status,2,c
  4380  0012BE  D04E               	goto	l5636
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;FastTransfer.c: 387: int rt;
  4384                           ;FastTransfer.c: 388: for (rt = 0; rt < 5; rt++) {
  4385  0012C0  0E00               	movlw	0
  4386  0012C2  0100               	movlb	0	; () banked
  4387  0012C4  6FF4               	movwf	(CRCcheck@rt+1)& (0+255),b
  4388  0012C6  0E00               	movlw	0
  4389  0012C8  6FF3               	movwf	CRCcheck@rt& (0+255),b
  4390  0012CA                     l5614:
  4391                           
  4392                           ; BSR set to: 0
  4393  0012CA  0100               	movlb	0	; () banked
  4394  0012CC  BFF4               	btfsc	(CRCcheck@rt+1)& (0+255),7,b
  4395  0012CE  D008               	goto	l5618
  4396  0012D0  0100               	movlb	0	; () banked
  4397  0012D2  51F4               	movf	(CRCcheck@rt+1)& (0+255),w,b
  4398  0012D4  E147               	bnz	l934
  4399  0012D6  0E05               	movlw	5
  4400  0012D8  0100               	movlb	0	; () banked
  4401  0012DA  5DF3               	subwf	CRCcheck@rt& (0+255),w,b
  4402  0012DC  B0D8               	btfsc	status,0,c
  4403  0012DE  0012               	return	
  4404  0012E0                     l5618:
  4405                           
  4406                           ; BSR set to: 0
  4407                           ;FastTransfer.c: 389: if (returnAddress == crcBufS_get(&crc_buffer, rt, 0)) {
  4408  0012E0  0E28               	movlw	low _crc_buffer
  4409  0012E2  6E1B               	movwf	crcBufS_get@_this,c
  4410  0012E4  0E01               	movlw	high _crc_buffer
  4411  0012E6  6E1C               	movwf	crcBufS_get@_this+1,c
  4412  0012E8  C0F3  F01D         	movff	CRCcheck@rt,crcBufS_get@time
  4413  0012EC  0E00               	movlw	0
  4414  0012EE  6E1E               	movwf	crcBufS_get@space,c
  4415  0012F0  EC37  F00E         	call	_crcBufS_get	;wreg free
  4416  0012F4  183C               	xorwf	_returnAddress,w,c
  4417  0012F6  A4D8               	btfss	status,2,c
  4418  0012F8  D02D               	goto	l5632
  4419                           
  4420                           ;FastTransfer.c: 390: if (arrayHolder[2] == crcBufS_get(&crc_buffer, rt, 1)) {
  4421  0012FA  0E28               	movlw	low _crc_buffer
  4422  0012FC  6E1B               	movwf	crcBufS_get@_this,c
  4423  0012FE  0E01               	movlw	high _crc_buffer
  4424  001300  6E1C               	movwf	crcBufS_get@_this+1,c
  4425  001302  C0F3  F01D         	movff	CRCcheck@rt,crcBufS_get@time
  4426  001306  0E01               	movlw	1
  4427  001308  6E1E               	movwf	crcBufS_get@space,c
  4428  00130A  EC37  F00E         	call	_crcBufS_get	;wreg free
  4429  00130E  0100               	movlb	0	; () banked
  4430  001310  19F2               	xorwf	(CRCcheck@arrayHolder+2)& (0+255),w,b
  4431  001312  A4D8               	btfss	status,2,c
  4432  001314  D01F               	goto	l5632
  4433                           
  4434                           ; BSR set to: 0
  4435                           ;FastTransfer.c: 391: if (arrayHolder[1] == 1) {
  4436  001316  0100               	movlb	0	; () banked
  4437  001318  05F1               	decf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  4438  00131A  A4D8               	btfss	status,2,c
  4439  00131C  D00B               	goto	l5628
  4440                           
  4441                           ; BSR set to: 0
  4442                           ;FastTransfer.c: 392: crcBufS_status_put(&crc_buffer, rt, 1);
  4443  00131E  0E28               	movlw	low _crc_buffer
  4444  001320  6E1B               	movwf	crcBufS_status_put@_this,c
  4445  001322  0E01               	movlw	high _crc_buffer
  4446  001324  6E1C               	movwf	crcBufS_status_put@_this+1,c
  4447  001326  C0F3  F01D         	movff	CRCcheck@rt,crcBufS_status_put@time
  4448  00132A  0E01               	movlw	1
  4449  00132C  6E1E               	movwf	crcBufS_status_put@status,c
  4450  00132E  EC14  F00F         	call	_crcBufS_status_put	;wreg free
  4451                           
  4452                           ;FastTransfer.c: 393: break;
  4453  001332  0012               	return	
  4454  001334                     l5628:
  4455  001334  0E02               	movlw	2
  4456  001336  0100               	movlb	0	; () banked
  4457  001338  19F1               	xorwf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  4458  00133A  A4D8               	btfss	status,2,c
  4459  00133C  D00B               	goto	l5632
  4460                           
  4461                           ; BSR set to: 0
  4462                           ;FastTransfer.c: 395: crcBufS_status_put(&crc_buffer, rt, 2);
  4463  00133E  0E28               	movlw	low _crc_buffer
  4464  001340  6E1B               	movwf	crcBufS_status_put@_this,c
  4465  001342  0E01               	movlw	high _crc_buffer
  4466  001344  6E1C               	movwf	crcBufS_status_put@_this+1,c
  4467  001346  C0F3  F01D         	movff	CRCcheck@rt,crcBufS_status_put@time
  4468  00134A  0E02               	movlw	2
  4469  00134C  6E1E               	movwf	crcBufS_status_put@status,c
  4470  00134E  EC14  F00F         	call	_crcBufS_status_put	;wreg free
  4471                           
  4472                           ;FastTransfer.c: 396: break;
  4473  001352  0012               	return	
  4474  001354                     l5632:
  4475  001354  0100               	movlb	0	; () banked
  4476  001356  4BF3               	infsnz	CRCcheck@rt& (0+255),f,b
  4477  001358  2BF4               	incf	(CRCcheck@rt+1)& (0+255),f,b
  4478  00135A  D7B7               	goto	l5614
  4479  00135C                     l5636:
  4480                           
  4481                           ; BSR set to: 0
  4482                           ;FastTransfer.c: 402: crcErrorCounter++;
  4483  00135C  0100               	movlb	0	; () banked
  4484  00135E  4BCB               	infsnz	_crcErrorCounter& (0+255),f,b
  4485  001360  2BCC               	incf	(_crcErrorCounter+1)& (0+255),f,b
  4486  001362  0012               	return	
  4487  001364                     l934:
  4488  001364  0012               	return		;funcret
  4489  001366                     __end_of_CRCcheck:
  4490                           	opt stack 0
  4491                           tosu	equ	0xFFF
  4492                           tosh	equ	0xFFE
  4493                           tosl	equ	0xFFD
  4494                           pclath	equ	0xFFA
  4495                           tblptru	equ	0xFF8
  4496                           tblptrh	equ	0xFF7
  4497                           tblptrl	equ	0xFF6
  4498                           tablat	equ	0xFF5
  4499                           prodh	equ	0xFF4
  4500                           prodl	equ	0xFF3
  4501                           intcon	equ	0xFF2
  4502                           postinc0	equ	0xFEE
  4503                           wreg	equ	0xFE8
  4504                           indf2	equ	0xFDF
  4505                           postinc2	equ	0xFDE
  4506                           postdec2	equ	0xFDD
  4507                           plusw2	equ	0xFDB
  4508                           fsr2h	equ	0xFDA
  4509                           fsr2l	equ	0xFD9
  4510                           status	equ	0xFD8
  4511                           
  4512 ;; *************** function _crcBufS_status_put *****************
  4513 ;; Defined at:
  4514 ;;		line 336 in file "FastTransfer.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  4517 ;;		 -> crc_buffer(17), 
  4518 ;;  time            1   28[COMRAM] unsigned char 
  4519 ;;  status          1   29[COMRAM] unsigned char 
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;  wantedTime      2   34[COMRAM] int 
  4522 ;; Return value:  Size  Location     Type
  4523 ;;		None               void
  4524 ;; Registers used:
  4525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4531 ;;      Params:         4       0       0       0       0       0       0
  4532 ;;      Locals:         2       0       0       0       0       0       0
  4533 ;;      Temps:          4       0       0       0       0       0       0
  4534 ;;      Totals:        10       0       0       0       0       0       0
  4535 ;;Total ram usage:       10 bytes
  4536 ;; Hardware stack levels used:    1
  4537 ;; Hardware stack levels required when called:    4
  4538 ;; This function calls:
  4539 ;;		Nothing
  4540 ;; This function is called by:
  4541 ;;		_CRCcheck
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545                           	psect	text18
  4546  001E28                     __ptext18:
  4547                           	opt stack 0
  4548  001E28                     _crcBufS_status_put:
  4549                           	opt stack 23
  4550                           
  4551                           ;FastTransfer.c: 337: if (time >= 5) {
  4552                           
  4553                           ;incstack = 0
  4554  001E28  0E04               	movlw	4
  4555  001E2A  641D               	cpfsgt	crcBufS_status_put@time,c
  4556  001E2C  D002               	goto	l5374
  4557                           
  4558                           ;FastTransfer.c: 338: time = 5 - 1;
  4559  001E2E  0E04               	movlw	4
  4560  001E30  6E1D               	movwf	crcBufS_status_put@time,c
  4561  001E32                     l5374:
  4562                           
  4563                           ;FastTransfer.c: 339: }
  4564                           ;FastTransfer.c: 340: time = time + 1;
  4565  001E32  281D               	incf	crcBufS_status_put@time,w,c
  4566  001E34  6E1D               	movwf	crcBufS_status_put@time,c
  4567                           
  4568                           ;FastTransfer.c: 341: int wantedTime = time * 3;
  4569  001E36  501D               	movf	crcBufS_status_put@time,w,c
  4570  001E38  0D03               	mullw	3
  4571  001E3A  CFF3 F023          	movff	prodl,crcBufS_status_put@wantedTime
  4572  001E3E  CFF4 F024          	movff	prodh,crcBufS_status_put@wantedTime+1
  4573                           
  4574                           ;FastTransfer.c: 342: if (wantedTime > _this->head) {
  4575  001E42  EE20 F00F          	lfsr	2,15
  4576  001E46  501B               	movf	crcBufS_status_put@_this,w,c
  4577  001E48  26D9               	addwf	fsr2l,f,c
  4578  001E4A  501C               	movf	crcBufS_status_put@_this+1,w,c
  4579  001E4C  22DA               	addwfc	fsr2h,f,c
  4580  001E4E  5023               	movf	crcBufS_status_put@wantedTime,w,c
  4581  001E50  5CDE               	subwf	postinc2,w,c
  4582  001E52  50DE               	movf	postinc2,w,c
  4583  001E54  0A80               	xorlw	128
  4584  001E56  6E21               	movwf	(??_crcBufS_status_put+2)& (0+255),c
  4585  001E58  5024               	movf	crcBufS_status_put@wantedTime+1,w,c
  4586  001E5A  0A80               	xorlw	128
  4587  001E5C  5821               	subwfb	(??_crcBufS_status_put+2)& (0+255),w,c
  4588  001E5E  B0D8               	btfsc	status,0,c
  4589  001E60  D02B               	goto	l5382
  4590                           
  4591                           ;FastTransfer.c: 343: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  4592  001E62  EE20 F00F          	lfsr	2,15
  4593  001E66  501B               	movf	crcBufS_status_put@_this,w,c
  4594  001E68  26D9               	addwf	fsr2l,f,c
  4595  001E6A  501C               	movf	crcBufS_status_put@_this+1,w,c
  4596  001E6C  22DA               	addwfc	fsr2h,f,c
  4597  001E6E  CFDE F01F          	movff	postinc2,??_crcBufS_status_put
  4598  001E72  CFDD F020          	movff	postdec2,??_crcBufS_status_put+1
  4599  001E76  1E1F               	comf	??_crcBufS_status_put,f,c
  4600  001E78  1E20               	comf	??_crcBufS_status_put+1,f,c
  4601  001E7A  4A1F               	infsnz	??_crcBufS_status_put,f,c
  4602  001E7C  2A20               	incf	??_crcBufS_status_put+1,f,c
  4603  001E7E  5023               	movf	crcBufS_status_put@wantedTime,w,c
  4604  001E80  261F               	addwf	??_crcBufS_status_put,f,c
  4605  001E82  5024               	movf	crcBufS_status_put@wantedTime+1,w,c
  4606  001E84  2220               	addwfc	??_crcBufS_status_put+1,f,c
  4607  001E86  1E1F               	comf	??_crcBufS_status_put,f,c
  4608  001E88  1E20               	comf	??_crcBufS_status_put+1,f,c
  4609  001E8A  4A1F               	infsnz	??_crcBufS_status_put,f,c
  4610  001E8C  2A20               	incf	??_crcBufS_status_put+1,f,c
  4611  001E8E  0E0F               	movlw	15
  4612  001E90  241F               	addwf	??_crcBufS_status_put,w,c
  4613  001E92  6E23               	movwf	crcBufS_status_put@wantedTime,c
  4614  001E94  0E00               	movlw	0
  4615  001E96  2020               	addwfc	??_crcBufS_status_put+1,w,c
  4616  001E98  6E24               	movwf	crcBufS_status_put@wantedTime+1,c
  4617                           
  4618                           ;FastTransfer.c: 344: _this->buf[(wantedTime + 2)] = status;
  4619  001E9A  0E02               	movlw	2
  4620  001E9C  2423               	addwf	crcBufS_status_put@wantedTime,w,c
  4621  001E9E  6E1F               	movwf	??_crcBufS_status_put& (0+255),c
  4622  001EA0  0E00               	movlw	0
  4623  001EA2  2024               	addwfc	crcBufS_status_put@wantedTime+1,w,c
  4624  001EA4  6E20               	movwf	(??_crcBufS_status_put+1)& (0+255),c
  4625  001EA6  501F               	movf	??_crcBufS_status_put,w,c
  4626  001EA8  241B               	addwf	crcBufS_status_put@_this,w,c
  4627  001EAA  6ED9               	movwf	fsr2l,c
  4628  001EAC  5020               	movf	??_crcBufS_status_put+1,w,c
  4629  001EAE  201C               	addwfc	crcBufS_status_put@_this+1,w,c
  4630  001EB0  6EDA               	movwf	fsr2h,c
  4631  001EB2  C01E  FFDF         	movff	crcBufS_status_put@status,indf2
  4632                           
  4633                           ;FastTransfer.c: 345: } else {
  4634  001EB6  0012               	return	
  4635  001EB8                     l5382:
  4636                           
  4637                           ;FastTransfer.c: 346: _this->buf[(_this->head - wantedTime) + 2] = status;
  4638  001EB8  EE20 F00F          	lfsr	2,15
  4639  001EBC  501B               	movf	crcBufS_status_put@_this,w,c
  4640  001EBE  26D9               	addwf	fsr2l,f,c
  4641  001EC0  501C               	movf	crcBufS_status_put@_this+1,w,c
  4642  001EC2  22DA               	addwfc	fsr2h,f,c
  4643  001EC4  CFDE F01F          	movff	postinc2,??_crcBufS_status_put
  4644  001EC8  CFDD F020          	movff	postdec2,??_crcBufS_status_put+1
  4645  001ECC  C023  F021         	movff	crcBufS_status_put@wantedTime,??_crcBufS_status_put+2
  4646  001ED0  C024  F022         	movff	crcBufS_status_put@wantedTime+1,??_crcBufS_status_put+3
  4647  001ED4  1E21               	comf	??_crcBufS_status_put+2,f,c
  4648  001ED6  1E22               	comf	??_crcBufS_status_put+3,f,c
  4649  001ED8  4A21               	infsnz	??_crcBufS_status_put+2,f,c
  4650  001EDA  2A22               	incf	??_crcBufS_status_put+3,f,c
  4651  001EDC  501F               	movf	??_crcBufS_status_put,w,c
  4652  001EDE  2621               	addwf	??_crcBufS_status_put+2,f,c
  4653  001EE0  5020               	movf	??_crcBufS_status_put+1,w,c
  4654  001EE2  2222               	addwfc	??_crcBufS_status_put+3,f,c
  4655  001EE4  0E02               	movlw	2
  4656  001EE6  2621               	addwf	??_crcBufS_status_put+2,f,c
  4657  001EE8  0E00               	movlw	0
  4658  001EEA  2222               	addwfc	??_crcBufS_status_put+3,f,c
  4659  001EEC  5021               	movf	??_crcBufS_status_put+2,w,c
  4660  001EEE  241B               	addwf	crcBufS_status_put@_this,w,c
  4661  001EF0  6ED9               	movwf	fsr2l,c
  4662  001EF2  5022               	movf	??_crcBufS_status_put+3,w,c
  4663  001EF4  201C               	addwfc	crcBufS_status_put@_this+1,w,c
  4664  001EF6  6EDA               	movwf	fsr2h,c
  4665  001EF8  C01E  FFDF         	movff	crcBufS_status_put@status,indf2
  4666  001EFC  0012               	return	
  4667  001EFE                     __end_of_crcBufS_status_put:
  4668                           	opt stack 0
  4669                           tosu	equ	0xFFF
  4670                           tosh	equ	0xFFE
  4671                           tosl	equ	0xFFD
  4672                           pclath	equ	0xFFA
  4673                           tblptru	equ	0xFF8
  4674                           tblptrh	equ	0xFF7
  4675                           tblptrl	equ	0xFF6
  4676                           tablat	equ	0xFF5
  4677                           prodh	equ	0xFF4
  4678                           prodl	equ	0xFF3
  4679                           intcon	equ	0xFF2
  4680                           postinc0	equ	0xFEE
  4681                           wreg	equ	0xFE8
  4682                           indf2	equ	0xFDF
  4683                           postinc2	equ	0xFDE
  4684                           postdec2	equ	0xFDD
  4685                           plusw2	equ	0xFDB
  4686                           fsr2h	equ	0xFDA
  4687                           fsr2l	equ	0xFD9
  4688                           status	equ	0xFD8
  4689                           
  4690 ;; *************** function _crcBufS_get *****************
  4691 ;; Defined at:
  4692 ;;		line 353 in file "FastTransfer.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  4695 ;;		 -> crc_buffer(17), 
  4696 ;;  time            1   28[COMRAM] unsigned char 
  4697 ;;  space           1   29[COMRAM] unsigned char 
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;  wantedTime      2   36[COMRAM] int 
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  1    wreg      unsigned char 
  4702 ;; Registers used:
  4703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4709 ;;      Params:         4       0       0       0       0       0       0
  4710 ;;      Locals:         2       0       0       0       0       0       0
  4711 ;;      Temps:          6       0       0       0       0       0       0
  4712 ;;      Totals:        12       0       0       0       0       0       0
  4713 ;;Total ram usage:       12 bytes
  4714 ;; Hardware stack levels used:    1
  4715 ;; Hardware stack levels required when called:    4
  4716 ;; This function calls:
  4717 ;;		Nothing
  4718 ;; This function is called by:
  4719 ;;		_CRCcheck
  4720 ;;		_AKNAK
  4721 ;; This function uses a non-reentrant model
  4722 ;;
  4723                           
  4724                           	psect	text19
  4725  001C6E                     __ptext19:
  4726                           	opt stack 0
  4727  001C6E                     _crcBufS_get:
  4728                           	opt stack 23
  4729                           
  4730                           ;FastTransfer.c: 354: if (time >= 5) {
  4731                           
  4732                           ;incstack = 0
  4733  001C6E  0E04               	movlw	4
  4734  001C70  641D               	cpfsgt	crcBufS_get@time,c
  4735  001C72  D002               	goto	l5350
  4736                           
  4737                           ;FastTransfer.c: 355: time = 5 - 1;
  4738  001C74  0E04               	movlw	4
  4739  001C76  6E1D               	movwf	crcBufS_get@time,c
  4740  001C78                     l5350:
  4741                           
  4742                           ;FastTransfer.c: 356: }
  4743                           ;FastTransfer.c: 357: if (space >= 3) {
  4744  001C78  0E02               	movlw	2
  4745  001C7A  641E               	cpfsgt	crcBufS_get@space,c
  4746  001C7C  D002               	goto	l5354
  4747                           
  4748                           ;FastTransfer.c: 358: space = 3 - 1;
  4749  001C7E  0E02               	movlw	2
  4750  001C80  6E1E               	movwf	crcBufS_get@space,c
  4751  001C82                     l5354:
  4752                           
  4753                           ;FastTransfer.c: 359: }
  4754                           ;FastTransfer.c: 360: time = time + 1;
  4755  001C82  281D               	incf	crcBufS_get@time,w,c
  4756  001C84  6E1D               	movwf	crcBufS_get@time,c
  4757                           
  4758                           ;FastTransfer.c: 361: int wantedTime = time * 3;
  4759  001C86  501D               	movf	crcBufS_get@time,w,c
  4760  001C88  0D03               	mullw	3
  4761  001C8A  CFF3 F025          	movff	prodl,crcBufS_get@wantedTime
  4762  001C8E  CFF4 F026          	movff	prodh,crcBufS_get@wantedTime+1
  4763                           
  4764                           ;FastTransfer.c: 362: if (wantedTime > _this->head) {
  4765  001C92  EE20 F00F          	lfsr	2,15
  4766  001C96  501B               	movf	crcBufS_get@_this,w,c
  4767  001C98  26D9               	addwf	fsr2l,f,c
  4768  001C9A  501C               	movf	crcBufS_get@_this+1,w,c
  4769  001C9C  22DA               	addwfc	fsr2h,f,c
  4770  001C9E  5025               	movf	crcBufS_get@wantedTime,w,c
  4771  001CA0  5CDE               	subwf	postinc2,w,c
  4772  001CA2  50DE               	movf	postinc2,w,c
  4773  001CA4  0A80               	xorlw	128
  4774  001CA6  6E21               	movwf	(??_crcBufS_get+2)& (0+255),c
  4775  001CA8  5026               	movf	crcBufS_get@wantedTime+1,w,c
  4776  001CAA  0A80               	xorlw	128
  4777  001CAC  5821               	subwfb	(??_crcBufS_get+2)& (0+255),w,c
  4778  001CAE  B0D8               	btfsc	status,0,c
  4779  001CB0  D02A               	goto	l5366
  4780                           
  4781                           ;FastTransfer.c: 363: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  4782  001CB2  EE20 F00F          	lfsr	2,15
  4783  001CB6  501B               	movf	crcBufS_get@_this,w,c
  4784  001CB8  26D9               	addwf	fsr2l,f,c
  4785  001CBA  501C               	movf	crcBufS_get@_this+1,w,c
  4786  001CBC  22DA               	addwfc	fsr2h,f,c
  4787  001CBE  CFDE F01F          	movff	postinc2,??_crcBufS_get
  4788  001CC2  CFDD F020          	movff	postdec2,??_crcBufS_get+1
  4789  001CC6  1E1F               	comf	??_crcBufS_get,f,c
  4790  001CC8  1E20               	comf	??_crcBufS_get+1,f,c
  4791  001CCA  4A1F               	infsnz	??_crcBufS_get,f,c
  4792  001CCC  2A20               	incf	??_crcBufS_get+1,f,c
  4793  001CCE  5025               	movf	crcBufS_get@wantedTime,w,c
  4794  001CD0  261F               	addwf	??_crcBufS_get,f,c
  4795  001CD2  5026               	movf	crcBufS_get@wantedTime+1,w,c
  4796  001CD4  2220               	addwfc	??_crcBufS_get+1,f,c
  4797  001CD6  1E1F               	comf	??_crcBufS_get,f,c
  4798  001CD8  1E20               	comf	??_crcBufS_get+1,f,c
  4799  001CDA  4A1F               	infsnz	??_crcBufS_get,f,c
  4800  001CDC  2A20               	incf	??_crcBufS_get+1,f,c
  4801  001CDE  0E0F               	movlw	15
  4802  001CE0  241F               	addwf	??_crcBufS_get,w,c
  4803  001CE2  6E25               	movwf	crcBufS_get@wantedTime,c
  4804  001CE4  0E00               	movlw	0
  4805  001CE6  2020               	addwfc	??_crcBufS_get+1,w,c
  4806  001CE8  6E26               	movwf	crcBufS_get@wantedTime+1,c
  4807                           
  4808                           ;FastTransfer.c: 364: return (_this->buf[(wantedTime + space)]);
  4809  001CEA  501E               	movf	crcBufS_get@space,w,c
  4810  001CEC  2425               	addwf	crcBufS_get@wantedTime,w,c
  4811  001CEE  6E1F               	movwf	??_crcBufS_get& (0+255),c
  4812  001CF0  0E00               	movlw	0
  4813  001CF2  2026               	addwfc	crcBufS_get@wantedTime+1,w,c
  4814  001CF4  6E20               	movwf	(??_crcBufS_get+1)& (0+255),c
  4815  001CF6  501F               	movf	??_crcBufS_get,w,c
  4816  001CF8  241B               	addwf	crcBufS_get@_this,w,c
  4817  001CFA  6ED9               	movwf	fsr2l,c
  4818  001CFC  5020               	movf	??_crcBufS_get+1,w,c
  4819  001CFE  201C               	addwfc	crcBufS_get@_this+1,w,c
  4820  001D00  6EDA               	movwf	fsr2h,c
  4821  001D02  50DF               	movf	indf2,w,c
  4822                           
  4823                           ;FastTransfer.c: 365: } else {
  4824  001D04  0012               	return	
  4825  001D06                     l5366:
  4826                           
  4827                           ;FastTransfer.c: 366: return (_this->buf[(_this->head - wantedTime) + space]);
  4828  001D06  EE20 F00F          	lfsr	2,15
  4829  001D0A  501B               	movf	crcBufS_get@_this,w,c
  4830  001D0C  26D9               	addwf	fsr2l,f,c
  4831  001D0E  501C               	movf	crcBufS_get@_this+1,w,c
  4832  001D10  22DA               	addwfc	fsr2h,f,c
  4833  001D12  CFDE F01F          	movff	postinc2,??_crcBufS_get
  4834  001D16  CFDD F020          	movff	postdec2,??_crcBufS_get+1
  4835  001D1A  C025  F021         	movff	crcBufS_get@wantedTime,??_crcBufS_get+2
  4836  001D1E  C026  F022         	movff	crcBufS_get@wantedTime+1,??_crcBufS_get+3
  4837  001D22  1E21               	comf	??_crcBufS_get+2,f,c
  4838  001D24  1E22               	comf	??_crcBufS_get+3,f,c
  4839  001D26  4A21               	infsnz	??_crcBufS_get+2,f,c
  4840  001D28  2A22               	incf	??_crcBufS_get+3,f,c
  4841  001D2A  501E               	movf	crcBufS_get@space,w,c
  4842  001D2C  6E23               	movwf	(??_crcBufS_get+4)& (0+255),c
  4843  001D2E  6A24               	clrf	(??_crcBufS_get+5)& (0+255),c
  4844  001D30  5021               	movf	??_crcBufS_get+2,w,c
  4845  001D32  2623               	addwf	??_crcBufS_get+4,f,c
  4846  001D34  5022               	movf	??_crcBufS_get+3,w,c
  4847  001D36  2224               	addwfc	??_crcBufS_get+5,f,c
  4848  001D38  501F               	movf	??_crcBufS_get,w,c
  4849  001D3A  2623               	addwf	??_crcBufS_get+4,f,c
  4850  001D3C  5020               	movf	??_crcBufS_get+1,w,c
  4851  001D3E  2224               	addwfc	??_crcBufS_get+5,f,c
  4852  001D40  5023               	movf	??_crcBufS_get+4,w,c
  4853  001D42  241B               	addwf	crcBufS_get@_this,w,c
  4854  001D44  6ED9               	movwf	fsr2l,c
  4855  001D46  5024               	movf	??_crcBufS_get+5,w,c
  4856  001D48  201C               	addwfc	crcBufS_get@_this+1,w,c
  4857  001D4A  6EDA               	movwf	fsr2h,c
  4858  001D4C  50DF               	movf	indf2,w,c
  4859  001D4E  0012               	return	
  4860  001D50                     __end_of_crcBufS_get:
  4861                           	opt stack 0
  4862                           tosu	equ	0xFFF
  4863                           tosh	equ	0xFFE
  4864                           tosl	equ	0xFFD
  4865                           pclath	equ	0xFFA
  4866                           tblptru	equ	0xFF8
  4867                           tblptrh	equ	0xFF7
  4868                           tblptrl	equ	0xFF6
  4869                           tablat	equ	0xFF5
  4870                           prodh	equ	0xFF4
  4871                           prodl	equ	0xFF3
  4872                           intcon	equ	0xFF2
  4873                           postinc0	equ	0xFEE
  4874                           wreg	equ	0xFE8
  4875                           indf2	equ	0xFDF
  4876                           postinc2	equ	0xFDE
  4877                           postdec2	equ	0xFDD
  4878                           plusw2	equ	0xFDB
  4879                           fsr2h	equ	0xFDA
  4880                           fsr2l	equ	0xFD9
  4881                           status	equ	0xFD8
  4882                           
  4883 ;; *************** function _Receive_get *****************
  4884 ;; Defined at:
  4885 ;;		line 126 in file "UART.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;		None
  4888 ;; Auto vars:     Size  Location     Type
  4889 ;;		None
  4890 ;; Return value:  Size  Location     Type
  4891 ;;                  1    wreg      unsigned char 
  4892 ;; Registers used:
  4893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4894 ;; Tracked objects:
  4895 ;;		On entry : 0/0
  4896 ;;		On exit  : 0/0
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4899 ;;      Params:         0       0       0       0       0       0       0
  4900 ;;      Locals:         0       0       0       0       0       0       0
  4901 ;;      Temps:          0       0       0       0       0       0       0
  4902 ;;      Totals:         0       0       0       0       0       0       0
  4903 ;;Total ram usage:        0 bytes
  4904 ;; Hardware stack levels used:    1
  4905 ;; Hardware stack levels required when called:    6
  4906 ;; This function calls:
  4907 ;;		_UART_buff_get
  4908 ;; This function is called by:
  4909 ;;		_SYSTEM_Initialize
  4910 ;;		_getch
  4911 ;;		_CRCcheck
  4912 ;;		_receiveData
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           	psect	text20
  4917  002DD8                     __ptext20:
  4918                           	opt stack 0
  4919  002DD8                     _Receive_get:
  4920                           	opt stack 22
  4921                           
  4922                           ;UART.c: 127: return UART_buff_get(&input_buffer);
  4923                           
  4924                           ;incstack = 0
  4925  002DD8  0E00               	movlw	low _input_buffer
  4926  002DDA  6E21               	movwf	UART_buff_get@_this,c
  4927  002DDC  0E04               	movlw	high _input_buffer
  4928  002DDE  6E22               	movwf	UART_buff_get@_this+1,c
  4929  002DE0  ECC5  F011         	call	_UART_buff_get	;wreg free
  4930  002DE4  0012               	return	
  4931  002DE6                     __end_of_Receive_get:
  4932                           	opt stack 0
  4933                           tosu	equ	0xFFF
  4934                           tosh	equ	0xFFE
  4935                           tosl	equ	0xFFD
  4936                           pclath	equ	0xFFA
  4937                           tblptru	equ	0xFF8
  4938                           tblptrh	equ	0xFF7
  4939                           tblptrl	equ	0xFF6
  4940                           tablat	equ	0xFF5
  4941                           prodh	equ	0xFF4
  4942                           prodl	equ	0xFF3
  4943                           intcon	equ	0xFF2
  4944                           postinc0	equ	0xFEE
  4945                           wreg	equ	0xFE8
  4946                           indf2	equ	0xFDF
  4947                           postinc2	equ	0xFDE
  4948                           postdec2	equ	0xFDD
  4949                           plusw2	equ	0xFDB
  4950                           fsr2h	equ	0xFDA
  4951                           fsr2l	equ	0xFD9
  4952                           status	equ	0xFD8
  4953                           
  4954 ;; *************** function _UART_buff_get *****************
  4955 ;; Defined at:
  4956 ;;		line 81 in file "UART.c"
  4957 ;; Parameters:    Size  Location     Type
  4958 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  4959 ;;		 -> output_buffer(206), input_buffer(206), 
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;  c               1   36[COMRAM] unsigned char 
  4962 ;; Return value:  Size  Location     Type
  4963 ;;                  1    wreg      unsigned char 
  4964 ;; Registers used:
  4965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4966 ;; Tracked objects:
  4967 ;;		On entry : 0/0
  4968 ;;		On exit  : 0/0
  4969 ;;		Unchanged: 0/0
  4970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4971 ;;      Params:         2       0       0       0       0       0       0
  4972 ;;      Locals:         1       0       0       0       0       0       0
  4973 ;;      Temps:          2       0       0       0       0       0       0
  4974 ;;      Totals:         5       0       0       0       0       0       0
  4975 ;;Total ram usage:        5 bytes
  4976 ;; Hardware stack levels used:    1
  4977 ;; Hardware stack levels required when called:    5
  4978 ;; This function calls:
  4979 ;;		_UART_buff_modulo_inc
  4980 ;; This function is called by:
  4981 ;;		_Receive_get
  4982 ;;		_Send_put
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           	psect	text21
  4987  00238A                     __ptext21:
  4988                           	opt stack 0
  4989  00238A                     _UART_buff_get:
  4990                           	opt stack 21
  4991                           
  4992                           ;UART.c: 82: unsigned char c;
  4993                           ;UART.c: 83: if (_this->count > 0) {
  4994                           
  4995                           ;incstack = 0
  4996  00238A  EE20 F0CC          	lfsr	2,204
  4997  00238E  5021               	movf	UART_buff_get@_this,w,c
  4998  002390  26D9               	addwf	fsr2l,f,c
  4999  002392  5022               	movf	UART_buff_get@_this+1,w,c
  5000  002394  22DA               	addwfc	fsr2h,f,c
  5001  002396  0E01               	movlw	1
  5002  002398  BEDB               	btfsc	plusw2,7,c
  5003  00239A  D03C               	goto	l5192
  5004  00239C  0E01               	movlw	1
  5005  00239E  50DB               	movf	plusw2,w,c
  5006  0023A0  E103               	bnz	u5180
  5007  0023A2  04DE               	decf	postinc2,w,c
  5008  0023A4  A0D8               	btfss	status,0,c
  5009  0023A6  D036               	goto	l5192
  5010  0023A8                     u5180:
  5011                           
  5012                           ;UART.c: 84: c = _this->buf[_this->tail];
  5013  0023A8  EE20 F0CA          	lfsr	2,202
  5014  0023AC  5021               	movf	UART_buff_get@_this,w,c
  5015  0023AE  26D9               	addwf	fsr2l,f,c
  5016  0023B0  5022               	movf	UART_buff_get@_this+1,w,c
  5017  0023B2  22DA               	addwfc	fsr2h,f,c
  5018  0023B4  CFDE F023          	movff	postinc2,??_UART_buff_get
  5019  0023B8  CFDD F024          	movff	postdec2,??_UART_buff_get+1
  5020  0023BC  5023               	movf	??_UART_buff_get,w,c
  5021  0023BE  2421               	addwf	UART_buff_get@_this,w,c
  5022  0023C0  6ED9               	movwf	fsr2l,c
  5023  0023C2  5024               	movf	??_UART_buff_get+1,w,c
  5024  0023C4  2022               	addwfc	UART_buff_get@_this+1,w,c
  5025  0023C6  6EDA               	movwf	fsr2h,c
  5026  0023C8  50DF               	movf	indf2,w,c
  5027  0023CA  6E25               	movwf	UART_buff_get@c,c
  5028                           
  5029                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  5030  0023CC  EE20 F0CA          	lfsr	2,202
  5031  0023D0  5021               	movf	UART_buff_get@_this,w,c
  5032  0023D2  26D9               	addwf	fsr2l,f,c
  5033  0023D4  5022               	movf	UART_buff_get@_this+1,w,c
  5034  0023D6  22DA               	addwfc	fsr2h,f,c
  5035  0023D8  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  5036  0023DC  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  5037  0023E0  0E00               	movlw	0
  5038  0023E2  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  5039  0023E4  0EC8               	movlw	200
  5040  0023E6  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  5041  0023E8  ECFC  F015         	call	_UART_buff_modulo_inc	;wreg free
  5042  0023EC  EE20 F0CA          	lfsr	2,202
  5043  0023F0  5021               	movf	UART_buff_get@_this,w,c
  5044  0023F2  26D9               	addwf	fsr2l,f,c
  5045  0023F4  5022               	movf	UART_buff_get@_this+1,w,c
  5046  0023F6  22DA               	addwfc	fsr2h,f,c
  5047  0023F8  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  5048  0023FC  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  5049                           
  5050                           ;UART.c: 86: --_this->count;
  5051  002400  EE20 F0CC          	lfsr	2,204
  5052  002404  5021               	movf	UART_buff_get@_this,w,c
  5053  002406  26D9               	addwf	fsr2l,f,c
  5054  002408  5022               	movf	UART_buff_get@_this+1,w,c
  5055  00240A  22DA               	addwfc	fsr2h,f,c
  5056  00240C  06DE               	decf	postinc2,f,c
  5057  00240E  0E00               	movlw	0
  5058  002410  5ADD               	subwfb	postdec2,f,c
  5059                           
  5060                           ;UART.c: 87: } else {
  5061  002412  D002               	goto	l979
  5062  002414                     l5192:
  5063                           
  5064                           ;UART.c: 88: c = 0;
  5065  002414  0E00               	movlw	0
  5066  002416  6E25               	movwf	UART_buff_get@c,c
  5067  002418                     l979:
  5068                           
  5069                           ;UART.c: 89: }
  5070                           ;UART.c: 90: return (c);
  5071  002418  5025               	movf	UART_buff_get@c,w,c
  5072  00241A  0012               	return	
  5073  00241C                     __end_of_UART_buff_get:
  5074                           	opt stack 0
  5075                           tosu	equ	0xFFF
  5076                           tosh	equ	0xFFE
  5077                           tosl	equ	0xFFD
  5078                           pclath	equ	0xFFA
  5079                           tblptru	equ	0xFF8
  5080                           tblptrh	equ	0xFF7
  5081                           tblptrl	equ	0xFF6
  5082                           tablat	equ	0xFF5
  5083                           prodh	equ	0xFF4
  5084                           prodl	equ	0xFF3
  5085                           intcon	equ	0xFF2
  5086                           postinc0	equ	0xFEE
  5087                           wreg	equ	0xFE8
  5088                           indf2	equ	0xFDF
  5089                           postinc2	equ	0xFDE
  5090                           postdec2	equ	0xFDD
  5091                           plusw2	equ	0xFDB
  5092                           fsr2h	equ	0xFDA
  5093                           fsr2l	equ	0xFD9
  5094                           status	equ	0xFD8
  5095                           
  5096 ;; *************** function _UART_buff_modulo_inc *****************
  5097 ;; Defined at:
  5098 ;;		line 106 in file "UART.c"
  5099 ;; Parameters:    Size  Location     Type
  5100 ;;  value           2   26[COMRAM] const unsigned int 
  5101 ;;  modulus         2   28[COMRAM] const unsigned int 
  5102 ;; Auto vars:     Size  Location     Type
  5103 ;;  my_value        2   30[COMRAM] unsigned int 
  5104 ;; Return value:  Size  Location     Type
  5105 ;;                  2   26[COMRAM] unsigned int 
  5106 ;; Registers used:
  5107 ;;		wreg, status,2, status,0
  5108 ;; Tracked objects:
  5109 ;;		On entry : 0/0
  5110 ;;		On exit  : 0/0
  5111 ;;		Unchanged: 0/0
  5112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5113 ;;      Params:         4       0       0       0       0       0       0
  5114 ;;      Locals:         2       0       0       0       0       0       0
  5115 ;;      Temps:          0       0       0       0       0       0       0
  5116 ;;      Totals:         6       0       0       0       0       0       0
  5117 ;;Total ram usage:        6 bytes
  5118 ;; Hardware stack levels used:    1
  5119 ;; Hardware stack levels required when called:    4
  5120 ;; This function calls:
  5121 ;;		Nothing
  5122 ;; This function is called by:
  5123 ;;		_UART_buff_put
  5124 ;;		_UART_buff_get
  5125 ;; This function uses a non-reentrant model
  5126 ;;
  5127                           
  5128                           	psect	text22
  5129  002BF8                     __ptext22:
  5130                           	opt stack 0
  5131  002BF8                     _UART_buff_modulo_inc:
  5132                           	opt stack 21
  5133                           
  5134                           ;UART.c: 107: unsigned int my_value = value + 1;
  5135                           
  5136                           ;incstack = 0
  5137  002BF8  0E01               	movlw	1
  5138  002BFA  241B               	addwf	UART_buff_modulo_inc@value,w,c
  5139  002BFC  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  5140  002BFE  0E00               	movlw	0
  5141  002C00  201C               	addwfc	UART_buff_modulo_inc@value+1,w,c
  5142  002C02  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  5143                           
  5144                           ;UART.c: 108: if (my_value >= modulus) {
  5145  002C04  501D               	movf	UART_buff_modulo_inc@modulus,w,c
  5146  002C06  5C1F               	subwf	UART_buff_modulo_inc@my_value,w,c
  5147  002C08  501E               	movf	UART_buff_modulo_inc@modulus+1,w,c
  5148  002C0A  5820               	subwfb	UART_buff_modulo_inc@my_value+1,w,c
  5149  002C0C  A0D8               	btfss	status,0,c
  5150  002C0E  D004               	goto	l5150
  5151                           
  5152                           ;UART.c: 109: my_value = 0;
  5153  002C10  0E00               	movlw	0
  5154  002C12  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  5155  002C14  0E00               	movlw	0
  5156  002C16  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  5157  002C18                     l5150:
  5158                           
  5159                           ;UART.c: 110: }
  5160                           ;UART.c: 111: return (my_value);
  5161  002C18  C01F  F01B         	movff	UART_buff_modulo_inc@my_value,?_UART_buff_modulo_inc
  5162  002C1C  C020  F01C         	movff	UART_buff_modulo_inc@my_value+1,?_UART_buff_modulo_inc+1
  5163  002C20  0012               	return	
  5164  002C22                     __end_of_UART_buff_modulo_inc:
  5165                           	opt stack 0
  5166                           tosu	equ	0xFFF
  5167                           tosh	equ	0xFFE
  5168                           tosl	equ	0xFFD
  5169                           pclath	equ	0xFFA
  5170                           tblptru	equ	0xFF8
  5171                           tblptrh	equ	0xFF7
  5172                           tblptrl	equ	0xFF6
  5173                           tablat	equ	0xFF5
  5174                           prodh	equ	0xFF4
  5175                           prodl	equ	0xFF3
  5176                           intcon	equ	0xFF2
  5177                           postinc0	equ	0xFEE
  5178                           wreg	equ	0xFE8
  5179                           indf2	equ	0xFDF
  5180                           postinc2	equ	0xFDE
  5181                           postdec2	equ	0xFDD
  5182                           plusw2	equ	0xFDB
  5183                           fsr2h	equ	0xFDA
  5184                           fsr2l	equ	0xFD9
  5185                           status	equ	0xFD8
  5186                           
  5187 ;; *************** function _Receive_available *****************
  5188 ;; Defined at:
  5189 ;;		line 122 in file "UART.c"
  5190 ;; Parameters:    Size  Location     Type
  5191 ;;		None
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;		None
  5194 ;; Return value:  Size  Location     Type
  5195 ;;                  2   28[COMRAM] int 
  5196 ;; Registers used:
  5197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5198 ;; Tracked objects:
  5199 ;;		On entry : 0/0
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5203 ;;      Params:         2       0       0       0       0       0       0
  5204 ;;      Locals:         0       0       0       0       0       0       0
  5205 ;;      Temps:          0       0       0       0       0       0       0
  5206 ;;      Totals:         2       0       0       0       0       0       0
  5207 ;;Total ram usage:        2 bytes
  5208 ;; Hardware stack levels used:    1
  5209 ;; Hardware stack levels required when called:    5
  5210 ;; This function calls:
  5211 ;;		_UART_buff_size
  5212 ;; This function is called by:
  5213 ;;		_SYSTEM_Initialize
  5214 ;;		_CRCcheck
  5215 ;;		_receiveData
  5216 ;; This function uses a non-reentrant model
  5217 ;;
  5218                           
  5219                           	psect	text23
  5220  002D66                     __ptext23:
  5221                           	opt stack 0
  5222  002D66                     _Receive_available:
  5223                           	opt stack 23
  5224                           
  5225                           ;UART.c: 123: return UART_buff_size(&input_buffer);
  5226                           
  5227                           ;incstack = 0
  5228  002D66  0E00               	movlw	low _input_buffer
  5229  002D68  6E1B               	movwf	UART_buff_size@_this,c
  5230  002D6A  0E04               	movlw	high _input_buffer
  5231  002D6C  6E1C               	movwf	UART_buff_size@_this+1,c
  5232  002D6E  ECBE  F016         	call	_UART_buff_size	;wreg free
  5233  002D72  C01B  F01D         	movff	?_UART_buff_size,?_Receive_available
  5234  002D76  C01C  F01E         	movff	?_UART_buff_size+1,?_Receive_available+1
  5235  002D7A  0012               	return	
  5236  002D7C                     __end_of_Receive_available:
  5237                           	opt stack 0
  5238                           tosu	equ	0xFFF
  5239                           tosh	equ	0xFFE
  5240                           tosl	equ	0xFFD
  5241                           pclath	equ	0xFFA
  5242                           tblptru	equ	0xFF8
  5243                           tblptrh	equ	0xFF7
  5244                           tblptrl	equ	0xFF6
  5245                           tablat	equ	0xFF5
  5246                           prodh	equ	0xFF4
  5247                           prodl	equ	0xFF3
  5248                           intcon	equ	0xFF2
  5249                           postinc0	equ	0xFEE
  5250                           wreg	equ	0xFE8
  5251                           indf2	equ	0xFDF
  5252                           postinc2	equ	0xFDE
  5253                           postdec2	equ	0xFDD
  5254                           plusw2	equ	0xFDB
  5255                           fsr2h	equ	0xFDA
  5256                           fsr2l	equ	0xFD9
  5257                           status	equ	0xFD8
  5258                           
  5259 ;; *************** function _UART_buff_size *****************
  5260 ;; Defined at:
  5261 ;;		line 102 in file "UART.c"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  5264 ;;		 -> output_buffer(206), input_buffer(206), 
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;		None
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  2   26[COMRAM] int 
  5269 ;; Registers used:
  5270 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5276 ;;      Params:         2       0       0       0       0       0       0
  5277 ;;      Locals:         0       0       0       0       0       0       0
  5278 ;;      Temps:          0       0       0       0       0       0       0
  5279 ;;      Totals:         2       0       0       0       0       0       0
  5280 ;;Total ram usage:        2 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; Hardware stack levels required when called:    4
  5283 ;; This function calls:
  5284 ;;		Nothing
  5285 ;; This function is called by:
  5286 ;;		_Receive_available
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           	psect	text24
  5291  002D7C                     __ptext24:
  5292                           	opt stack 0
  5293  002D7C                     _UART_buff_size:
  5294                           	opt stack 23
  5295                           
  5296                           ;UART.c: 103: return (_this->count);
  5297                           
  5298                           ;incstack = 0
  5299  002D7C  EE20 F0CC          	lfsr	2,204
  5300  002D80  501B               	movf	UART_buff_size@_this,w,c
  5301  002D82  26D9               	addwf	fsr2l,f,c
  5302  002D84  501C               	movf	UART_buff_size@_this+1,w,c
  5303  002D86  22DA               	addwfc	fsr2h,f,c
  5304  002D88  CFDE F01B          	movff	postinc2,?_UART_buff_size
  5305  002D8C  CFDD F01C          	movff	postdec2,?_UART_buff_size+1
  5306  002D90  0012               	return	
  5307  002D92                     __end_of_UART_buff_size:
  5308                           	opt stack 0
  5309                           tosu	equ	0xFFF
  5310                           tosh	equ	0xFFE
  5311                           tosl	equ	0xFFD
  5312                           pclath	equ	0xFFA
  5313                           tblptru	equ	0xFF8
  5314                           tblptrh	equ	0xFF7
  5315                           tblptrl	equ	0xFF6
  5316                           tablat	equ	0xFF5
  5317                           prodh	equ	0xFF4
  5318                           prodl	equ	0xFF3
  5319                           intcon	equ	0xFF2
  5320                           postinc0	equ	0xFEE
  5321                           wreg	equ	0xFE8
  5322                           indf2	equ	0xFDF
  5323                           postinc2	equ	0xFDE
  5324                           postdec2	equ	0xFDD
  5325                           plusw2	equ	0xFDB
  5326                           fsr2h	equ	0xFDA
  5327                           fsr2l	equ	0xFD9
  5328                           status	equ	0xFD8
  5329                           
  5330 ;; *************** function _CRC8 *****************
  5331 ;; Defined at:
  5332 ;;		line 34 in file "FastTransfer.c"
  5333 ;; Parameters:    Size  Location     Type
  5334 ;;  data            2   26[COMRAM] PTR const unsigned char 
  5335 ;;		 -> CRCcheck@arrayHolder(3), receiveData@holder_2278(3), receiveData@holder(3), rx_buffer(200), 
  5336 ;;		 -> ring_buffer(206), NULL(0), 
  5337 ;;  len             1   28[COMRAM] unsigned char 
  5338 ;; Auto vars:     Size  Location     Type
  5339 ;;  sum             1   29[COMRAM] unsigned char 
  5340 ;;  tempI           1   31[COMRAM] unsigned char 
  5341 ;;  extract         1   30[COMRAM] unsigned char 
  5342 ;;  crc             1   32[COMRAM] unsigned char 
  5343 ;; Return value:  Size  Location     Type
  5344 ;;                  1    wreg      unsigned char 
  5345 ;; Registers used:
  5346 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5347 ;; Tracked objects:
  5348 ;;		On entry : 0/0
  5349 ;;		On exit  : 0/0
  5350 ;;		Unchanged: 0/0
  5351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5352 ;;      Params:         3       0       0       0       0       0       0
  5353 ;;      Locals:         4       0       0       0       0       0       0
  5354 ;;      Temps:          0       0       0       0       0       0       0
  5355 ;;      Totals:         7       0       0       0       0       0       0
  5356 ;;Total ram usage:        7 bytes
  5357 ;; Hardware stack levels used:    1
  5358 ;; Hardware stack levels required when called:    4
  5359 ;; This function calls:
  5360 ;;		Nothing
  5361 ;; This function is called by:
  5362 ;;		_sendData
  5363 ;;		_receiveData
  5364 ;;		_CRCcheck
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           	psect	text25
  5369  002948                     __ptext25:
  5370                           	opt stack 0
  5371  002948                     _CRC8:
  5372                           	opt stack 23
  5373                           
  5374                           ;FastTransfer.c: 35: unsigned char crc = 0x00;
  5375                           
  5376                           ;incstack = 0
  5377  002948  0E00               	movlw	0
  5378  00294A  6E21               	movwf	CRC8@crc,c
  5379                           
  5380                           ;FastTransfer.c: 36: while (len--) {
  5381  00294C  D01C               	goto	l5312
  5382  00294E                     l5296:
  5383                           
  5384                           ;FastTransfer.c: 37: unsigned char extract = *data++;
  5385  00294E  C01B  FFD9         	movff	CRC8@data,fsr2l
  5386  002952  C01C  FFDA         	movff	CRC8@data+1,fsr2h
  5387  002956  50DF               	movf	indf2,w,c
  5388  002958  6E1F               	movwf	CRC8@extract,c
  5389  00295A  4A1B               	infsnz	CRC8@data,f,c
  5390  00295C  2A1C               	incf	CRC8@data+1,f,c
  5391                           
  5392                           ;FastTransfer.c: 38: unsigned char tempI;
  5393                           ;FastTransfer.c: 39: for (tempI = 8; tempI; tempI--) {
  5394  00295E  0E08               	movlw	8
  5395  002960  6E20               	movwf	CRC8@tempI,c
  5396  002962  D00E               	goto	l5310
  5397  002964                     l5302:
  5398                           
  5399                           ;FastTransfer.c: 40: unsigned char sum = (crc ^ extract) & 0x01;
  5400  002964  5021               	movf	CRC8@crc,w,c
  5401  002966  181F               	xorwf	CRC8@extract,w,c
  5402  002968  0B01               	andlw	1
  5403  00296A  6E1E               	movwf	CRC8@sum,c
  5404                           
  5405                           ;FastTransfer.c: 41: crc >>= 1;
  5406  00296C  90D8               	bcf	status,0,c
  5407  00296E  3221               	rrcf	CRC8@crc,f,c
  5408                           
  5409                           ;FastTransfer.c: 42: if (sum) {
  5410  002970  501E               	movf	CRC8@sum,w,c
  5411  002972  B4D8               	btfsc	status,2,c
  5412  002974  D002               	goto	l820
  5413                           
  5414                           ;FastTransfer.c: 43: crc ^= 0x8C;
  5415  002976  0E8C               	movlw	140
  5416  002978  1A21               	xorwf	CRC8@crc,f,c
  5417  00297A                     l820:
  5418                           
  5419                           ;FastTransfer.c: 44: }
  5420                           ;FastTransfer.c: 45: extract >>= 1;
  5421  00297A  90D8               	bcf	status,0,c
  5422  00297C  321F               	rrcf	CRC8@extract,f,c
  5423  00297E  0620               	decf	CRC8@tempI,f,c
  5424  002980                     l5310:
  5425  002980  5020               	movf	CRC8@tempI,w,c
  5426  002982  A4D8               	btfss	status,2,c
  5427  002984  D7EF               	goto	l5302
  5428  002986                     l5312:
  5429  002986  061D               	decf	CRC8@len,f,c
  5430  002988  281D               	incf	CRC8@len,w,c
  5431  00298A  A4D8               	btfss	status,2,c
  5432  00298C  D7E0               	goto	l5296
  5433                           
  5434                           ;FastTransfer.c: 46: }
  5435                           ;FastTransfer.c: 47: }
  5436                           ;FastTransfer.c: 48: return crc;
  5437  00298E  5021               	movf	CRC8@crc,w,c
  5438  002990  0012               	return	
  5439  002992                     __end_of_CRC8:
  5440                           	opt stack 0
  5441                           tosu	equ	0xFFF
  5442                           tosh	equ	0xFFE
  5443                           tosl	equ	0xFFD
  5444                           pclath	equ	0xFFA
  5445                           tblptru	equ	0xFF8
  5446                           tblptrh	equ	0xFF7
  5447                           tblptrl	equ	0xFF6
  5448                           tablat	equ	0xFF5
  5449                           prodh	equ	0xFF4
  5450                           prodl	equ	0xFF3
  5451                           intcon	equ	0xFF2
  5452                           postinc0	equ	0xFEE
  5453                           wreg	equ	0xFE8
  5454                           indf2	equ	0xFDF
  5455                           postinc2	equ	0xFDE
  5456                           postdec2	equ	0xFDD
  5457                           plusw2	equ	0xFDB
  5458                           fsr2h	equ	0xFDA
  5459                           fsr2l	equ	0xFD9
  5460                           status	equ	0xFD8
  5461                           
  5462 ;; *************** function _handleIndicators *****************
  5463 ;; Defined at:
  5464 ;;		line 31 in file "Communications.c"
  5465 ;; Parameters:    Size  Location     Type
  5466 ;;  receivedIndi    2   36[COMRAM] int 
  5467 ;; Auto vars:     Size  Location     Type
  5468 ;;  i               2   41[COMRAM] int 
  5469 ;; Return value:  Size  Location     Type
  5470 ;;		None               void
  5471 ;; Registers used:
  5472 ;;		wreg, status,2, status,0, cstack
  5473 ;; Tracked objects:
  5474 ;;		On entry : 0/0
  5475 ;;		On exit  : 0/0
  5476 ;;		Unchanged: 0/0
  5477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5478 ;;      Params:         2       0       0       0       0       0       0
  5479 ;;      Locals:         2       0       0       0       0       0       0
  5480 ;;      Temps:          3       0       0       0       0       0       0
  5481 ;;      Totals:         7       0       0       0       0       0       0
  5482 ;;Total ram usage:        7 bytes
  5483 ;; Hardware stack levels used:    1
  5484 ;; Hardware stack levels required when called:    6
  5485 ;; This function calls:
  5486 ;;		_SetLEDOut
  5487 ;; This function is called by:
  5488 ;;		_updateComms
  5489 ;; This function uses a non-reentrant model
  5490 ;;
  5491                           
  5492                           	psect	text26
  5493  0025C0                     __ptext26:
  5494                           	opt stack 0
  5495  0025C0                     _handleIndicators:
  5496                           	opt stack 23
  5497                           
  5498                           ;Communications.c: 32: static int oldIndicators = 0;
  5499                           ;Communications.c: 33: if (receivedIndicators != oldIndicators) {
  5500                           
  5501                           ;incstack = 0
  5502  0025C0  0100               	movlb	0	; () banked
  5503  0025C2  51DD               	movf	handleIndicators@oldIndicators& (0+255),w,b
  5504  0025C4  1825               	xorwf	handleIndicators@receivedIndicators,w,c
  5505  0025C6  E105               	bnz	u6620
  5506  0025C8  0100               	movlb	0	; () banked
  5507  0025CA  51DE               	movf	(handleIndicators@oldIndicators+1)& (0+255),w,b
  5508  0025CC  1826               	xorwf	handleIndicators@receivedIndicators+1,w,c
  5509  0025CE  B4D8               	btfsc	status,2,c
  5510  0025D0  0012               	return	
  5511  0025D2                     u6620:
  5512                           
  5513                           ; BSR set to: 0
  5514                           ;Communications.c: 34: int i = 0;
  5515  0025D2  0E00               	movlw	0
  5516  0025D4  6E2B               	movwf	handleIndicators@i+1,c
  5517  0025D6  0E00               	movlw	0
  5518  0025D8  6E2A               	movwf	handleIndicators@i,c
  5519                           
  5520                           ;Communications.c: 35: for (i = 0; i < 6; i++) {
  5521  0025DA  0E00               	movlw	0
  5522  0025DC  6E2B               	movwf	handleIndicators@i+1,c
  5523  0025DE  0E00               	movlw	0
  5524  0025E0  6E2A               	movwf	handleIndicators@i,c
  5525                           
  5526                           ; BSR set to: 0
  5527  0025E2  BE2B               	btfsc	handleIndicators@i+1,7,c
  5528  0025E4  D006               	goto	l6044
  5529  0025E6  502B               	movf	handleIndicators@i+1,w,c
  5530  0025E8  E122               	bnz	l741
  5531  0025EA  0E06               	movlw	6
  5532  0025EC  5C2A               	subwf	handleIndicators@i,w,c
  5533  0025EE  B0D8               	btfsc	status,0,c
  5534  0025F0  D01E               	goto	l741
  5535  0025F2                     l6044:
  5536                           
  5537                           ;Communications.c: 36: SetLEDOut(i, ((receivedIndicators >> i)&0x01));
  5538  0025F2  C02A  F01F         	movff	handleIndicators@i,SetLEDOut@lednum
  5539  0025F6  C02B  F020         	movff	handleIndicators@i+1,SetLEDOut@lednum+1
  5540  0025FA  C02A  F027         	movff	handleIndicators@i,??_handleIndicators
  5541  0025FE  C025  F028         	movff	handleIndicators@receivedIndicators,??_handleIndicators+1
  5542  002602  C026  F029         	movff	handleIndicators@receivedIndicators+1,??_handleIndicators+2
  5543  002606  2A27               	incf	??_handleIndicators,f,c
  5544  002608  D003               	goto	u6644
  5545  00260A                     u6645:
  5546  00260A  3429               	rlcf	??_handleIndicators+2,w,c
  5547  00260C  3229               	rrcf	??_handleIndicators+2,f,c
  5548  00260E  3228               	rrcf	??_handleIndicators+1,f,c
  5549  002610                     u6644:
  5550  002610  2E27               	decfsz	??_handleIndicators,f,c
  5551  002612  D7FB               	goto	u6645
  5552  002614  0E01               	movlw	1
  5553  002616  1428               	andwf	??_handleIndicators+1,w,c
  5554  002618  6E21               	movwf	SetLEDOut@state,c
  5555  00261A  6A22               	clrf	SetLEDOut@state+1,c
  5556  00261C  ECC1  F005         	call	_SetLEDOut	;wreg free
  5557  002620  4A2A               	infsnz	handleIndicators@i,f,c
  5558  002622  2A2B               	incf	handleIndicators@i+1,f,c
  5559  002624  BE2B               	btfsc	handleIndicators@i+1,7,c
  5560  002626  D7E5               	goto	l6044
  5561  002628  502B               	movf	handleIndicators@i+1,w,c
  5562  00262A  E101               	bnz	u6650
  5563  00262C  D7DE               	goto	L2
  5564  00262E                     u6650:
  5565  00262E                     l741:
  5566                           
  5567                           ;Communications.c: 37: }
  5568                           ;Communications.c: 38: oldIndicators = receivedIndicators;
  5569  00262E  C025  F0DD         	movff	handleIndicators@receivedIndicators,handleIndicators@oldIndicators
  5570  002632  C026  F0DE         	movff	handleIndicators@receivedIndicators+1,handleIndicators@oldIndicators+1
  5571  002636  0012               	return	
  5572  002638                     __end_of_handleIndicators:
  5573                           	opt stack 0
  5574                           tosu	equ	0xFFF
  5575                           tosh	equ	0xFFE
  5576                           tosl	equ	0xFFD
  5577                           pclath	equ	0xFFA
  5578                           tblptru	equ	0xFF8
  5579                           tblptrh	equ	0xFF7
  5580                           tblptrl	equ	0xFF6
  5581                           tablat	equ	0xFF5
  5582                           prodh	equ	0xFF4
  5583                           prodl	equ	0xFF3
  5584                           intcon	equ	0xFF2
  5585                           postinc0	equ	0xFEE
  5586                           wreg	equ	0xFE8
  5587                           indf2	equ	0xFDF
  5588                           postinc2	equ	0xFDE
  5589                           postdec2	equ	0xFDD
  5590                           plusw2	equ	0xFDB
  5591                           fsr2h	equ	0xFDA
  5592                           fsr2l	equ	0xFD9
  5593                           status	equ	0xFD8
  5594                           
  5595 ;; *************** function _SetLEDOut *****************
  5596 ;; Defined at:
  5597 ;;		line 25 in file "IO.c"
  5598 ;; Parameters:    Size  Location     Type
  5599 ;;  lednum          2   30[COMRAM] int 
  5600 ;;  state           2   32[COMRAM] int 
  5601 ;; Auto vars:     Size  Location     Type
  5602 ;;		None
  5603 ;; Return value:  Size  Location     Type
  5604 ;;		None               void
  5605 ;; Registers used:
  5606 ;;		wreg, status,2, status,0, cstack
  5607 ;; Tracked objects:
  5608 ;;		On entry : 0/0
  5609 ;;		On exit  : 0/0
  5610 ;;		Unchanged: 0/0
  5611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5612 ;;      Params:         4       0       0       0       0       0       0
  5613 ;;      Locals:         0       0       0       0       0       0       0
  5614 ;;      Temps:          2       0       0       0       0       0       0
  5615 ;;      Totals:         6       0       0       0       0       0       0
  5616 ;;Total ram usage:        6 bytes
  5617 ;; Hardware stack levels used:    1
  5618 ;; Hardware stack levels required when called:    5
  5619 ;; This function calls:
  5620 ;;		_Off_Led
  5621 ;;		_setLED
  5622 ;; This function is called by:
  5623 ;;		_handleIndicators
  5624 ;; This function uses a non-reentrant model
  5625 ;;
  5626                           
  5627                           	psect	text27
  5628  000B82                     __ptext27:
  5629                           	opt stack 0
  5630  000B82                     _SetLEDOut:
  5631                           	opt stack 23
  5632                           
  5633                           ;IO.c: 26: switch (lednum) {
  5634                           
  5635                           ;incstack = 0
  5636  000B82  D138               	goto	l5556
  5637  000B84                     l5422:
  5638                           
  5639                           ;IO.c: 28: if (state == 1) {
  5640  000B84  0421               	decf	SetLEDOut@state,w,c
  5641  000B86  1022               	iorwf	SetLEDOut@state+1,w,c
  5642  000B88  A4D8               	btfss	status,2,c
  5643  000B8A  D00D               	goto	l5430
  5644                           
  5645                           ;IO.c: 29: Off_Led(0);
  5646  000B8C  0E00               	movlw	0
  5647  000B8E  6E1C               	movwf	Off_Led@led+1,c
  5648  000B90  0E00               	movlw	0
  5649  000B92  6E1B               	movwf	Off_Led@led,c
  5650  000B94  EC57  F012         	call	_Off_Led	;wreg free
  5651                           
  5652                           ;IO.c: 30: do { LATB3 = 1; } while(0);
  5653  000B98  868A               	bsf	3978,3,c	;volatile
  5654                           
  5655                           ;IO.c: 31: LED_array[0] = 1;
  5656  000B9A  0E00               	movlw	0
  5657  000B9C  0100               	movlb	0	; () banked
  5658  000B9E  6F89               	movwf	(_LED_array+1)& (0+255),b
  5659  000BA0  0E01               	movlw	1
  5660  000BA2  6F88               	movwf	_LED_array& (0+255),b
  5661                           
  5662                           ;IO.c: 32: } else if (state == 0) {
  5663  000BA4  0012               	return	
  5664  000BA6                     l5430:
  5665  000BA6  5021               	movf	SetLEDOut@state,w,c
  5666  000BA8  1022               	iorwf	SetLEDOut@state+1,w,c
  5667  000BAA  A4D8               	btfss	status,2,c
  5668  000BAC  D00D               	goto	l5438
  5669                           
  5670                           ;IO.c: 33: Off_Led(0);
  5671  000BAE  0E00               	movlw	0
  5672  000BB0  6E1C               	movwf	Off_Led@led+1,c
  5673  000BB2  0E00               	movlw	0
  5674  000BB4  6E1B               	movwf	Off_Led@led,c
  5675  000BB6  EC57  F012         	call	_Off_Led	;wreg free
  5676                           
  5677                           ;IO.c: 34: do { LATB3 = 0; } while(0);
  5678  000BBA  968A               	bcf	3978,3,c	;volatile
  5679                           
  5680                           ;IO.c: 35: LED_array[0] = 0;
  5681  000BBC  0E00               	movlw	0
  5682  000BBE  0100               	movlb	0	; () banked
  5683  000BC0  6F89               	movwf	(_LED_array+1)& (0+255),b
  5684  000BC2  0E00               	movlw	0
  5685  000BC4  6F88               	movwf	_LED_array& (0+255),b
  5686                           
  5687                           ;IO.c: 36: }
  5688  000BC6  0012               	return	
  5689  000BC8                     l5438:
  5690                           
  5691                           ;IO.c: 37: else if (state == 2) {
  5692  000BC8  0E02               	movlw	2
  5693  000BCA  1821               	xorwf	SetLEDOut@state,w,c
  5694  000BCC  1022               	iorwf	SetLEDOut@state+1,w,c
  5695  000BCE  A4D8               	btfss	status,2,c
  5696  000BD0  0012               	return	
  5697                           
  5698                           ;IO.c: 39: do { LATB3 = 0; } while(0);
  5699  000BD2  968A               	bcf	3978,3,c	;volatile
  5700                           
  5701                           ;IO.c: 40: setLED(0);
  5702  000BD4  0E00               	movlw	0
  5703  000BD6  6E1C               	movwf	setLED@led+1,c
  5704  000BD8  0E00               	movlw	0
  5705  000BDA  6E1B               	movwf	setLED@led,c
  5706  000BDC  EC7F  F00F         	call	_setLED	;wreg free
  5707                           
  5708                           ;IO.c: 41: LED_array[0] = 2;
  5709  000BE0  0E00               	movlw	0
  5710  000BE2  0100               	movlb	0	; () banked
  5711  000BE4  6F89               	movwf	(_LED_array+1)& (0+255),b
  5712  000BE6  0E02               	movlw	2
  5713  000BE8  6F88               	movwf	_LED_array& (0+255),b
  5714                           
  5715                           ; BSR set to: 0
  5716                           ;IO.c: 43: }
  5717                           ;IO.c: 44: break;
  5718                           
  5719                           ; BSR set to: 0
  5720                           
  5721                           ; BSR set to: 0
  5722  000BEA  0012               	return	
  5723  000BEC                     l5444:
  5724                           
  5725                           ;IO.c: 47: if (state == 1) {
  5726  000BEC  0421               	decf	SetLEDOut@state,w,c
  5727  000BEE  1022               	iorwf	SetLEDOut@state+1,w,c
  5728  000BF0  A4D8               	btfss	status,2,c
  5729  000BF2  D00D               	goto	l5452
  5730                           
  5731                           ;IO.c: 48: Off_Led(1);
  5732  000BF4  0E00               	movlw	0
  5733  000BF6  6E1C               	movwf	Off_Led@led+1,c
  5734  000BF8  0E01               	movlw	1
  5735  000BFA  6E1B               	movwf	Off_Led@led,c
  5736  000BFC  EC57  F012         	call	_Off_Led	;wreg free
  5737                           
  5738                           ;IO.c: 49: do { LATB5 = 1; } while(0);
  5739  000C00  8A8A               	bsf	3978,5,c	;volatile
  5740                           
  5741                           ;IO.c: 50: LED_array[1] = 1;
  5742  000C02  0E00               	movlw	0
  5743  000C04  0100               	movlb	0	; () banked
  5744  000C06  6F8B               	movwf	(_LED_array+3)& (0+255),b
  5745  000C08  0E01               	movlw	1
  5746  000C0A  6F8A               	movwf	(_LED_array+2)& (0+255),b
  5747                           
  5748                           ;IO.c: 51: } else if (state == 0) {
  5749  000C0C  0012               	return	
  5750  000C0E                     l5452:
  5751  000C0E  5021               	movf	SetLEDOut@state,w,c
  5752  000C10  1022               	iorwf	SetLEDOut@state+1,w,c
  5753  000C12  A4D8               	btfss	status,2,c
  5754  000C14  D00D               	goto	l5460
  5755                           
  5756                           ;IO.c: 52: Off_Led(1);
  5757  000C16  0E00               	movlw	0
  5758  000C18  6E1C               	movwf	Off_Led@led+1,c
  5759  000C1A  0E01               	movlw	1
  5760  000C1C  6E1B               	movwf	Off_Led@led,c
  5761  000C1E  EC57  F012         	call	_Off_Led	;wreg free
  5762                           
  5763                           ;IO.c: 53: do { LATB5 = 0; } while(0);
  5764  000C22  9A8A               	bcf	3978,5,c	;volatile
  5765                           
  5766                           ;IO.c: 54: LED_array[1] = 0;
  5767  000C24  0E00               	movlw	0
  5768  000C26  0100               	movlb	0	; () banked
  5769  000C28  6F8B               	movwf	(_LED_array+3)& (0+255),b
  5770  000C2A  0E00               	movlw	0
  5771  000C2C  6F8A               	movwf	(_LED_array+2)& (0+255),b
  5772                           
  5773                           ;IO.c: 55: } else if (state == 2) {
  5774  000C2E  0012               	return	
  5775  000C30                     l5460:
  5776  000C30  0E02               	movlw	2
  5777  000C32  1821               	xorwf	SetLEDOut@state,w,c
  5778  000C34  1022               	iorwf	SetLEDOut@state+1,w,c
  5779  000C36  A4D8               	btfss	status,2,c
  5780  000C38  0012               	return	
  5781                           
  5782                           ;IO.c: 57: do { LATB5 = 0; } while(0);
  5783  000C3A  9A8A               	bcf	3978,5,c	;volatile
  5784                           
  5785                           ;IO.c: 58: setLED(1);
  5786  000C3C  0E00               	movlw	0
  5787  000C3E  6E1C               	movwf	setLED@led+1,c
  5788  000C40  0E01               	movlw	1
  5789  000C42  6E1B               	movwf	setLED@led,c
  5790  000C44  EC7F  F00F         	call	_setLED	;wreg free
  5791                           
  5792                           ;IO.c: 59: LED_array[1] = 2;
  5793  000C48  0E00               	movlw	0
  5794  000C4A  0100               	movlb	0	; () banked
  5795  000C4C  6F8B               	movwf	(_LED_array+3)& (0+255),b
  5796  000C4E  0E02               	movlw	2
  5797  000C50  6F8A               	movwf	(_LED_array+2)& (0+255),b
  5798                           
  5799                           ; BSR set to: 0
  5800                           ;IO.c: 61: }
  5801                           ;IO.c: 62: break;
  5802                           
  5803                           ; BSR set to: 0
  5804                           
  5805                           ; BSR set to: 0
  5806  000C52  0012               	return	
  5807  000C54                     l5466:
  5808                           
  5809                           ;IO.c: 64: if (state == 1) {
  5810  000C54  0421               	decf	SetLEDOut@state,w,c
  5811  000C56  1022               	iorwf	SetLEDOut@state+1,w,c
  5812  000C58  A4D8               	btfss	status,2,c
  5813  000C5A  D00D               	goto	l5474
  5814                           
  5815                           ;IO.c: 65: Off_Led(2);
  5816  000C5C  0E00               	movlw	0
  5817  000C5E  6E1C               	movwf	Off_Led@led+1,c
  5818  000C60  0E02               	movlw	2
  5819  000C62  6E1B               	movwf	Off_Led@led,c
  5820  000C64  EC57  F012         	call	_Off_Led	;wreg free
  5821                           
  5822                           ;IO.c: 66: do { LATD1 = 1; } while(0);
  5823  000C68  828C               	bsf	3980,1,c	;volatile
  5824                           
  5825                           ;IO.c: 67: LED_array[2] = 1;
  5826  000C6A  0E00               	movlw	0
  5827  000C6C  0100               	movlb	0	; () banked
  5828  000C6E  6F8D               	movwf	(_LED_array+5)& (0+255),b
  5829  000C70  0E01               	movlw	1
  5830  000C72  6F8C               	movwf	(_LED_array+4)& (0+255),b
  5831                           
  5832                           ;IO.c: 68: } else if (state == 0) {
  5833  000C74  0012               	return	
  5834  000C76                     l5474:
  5835  000C76  5021               	movf	SetLEDOut@state,w,c
  5836  000C78  1022               	iorwf	SetLEDOut@state+1,w,c
  5837  000C7A  A4D8               	btfss	status,2,c
  5838  000C7C  D00D               	goto	l5482
  5839                           
  5840                           ;IO.c: 69: Off_Led(2);
  5841  000C7E  0E00               	movlw	0
  5842  000C80  6E1C               	movwf	Off_Led@led+1,c
  5843  000C82  0E02               	movlw	2
  5844  000C84  6E1B               	movwf	Off_Led@led,c
  5845  000C86  EC57  F012         	call	_Off_Led	;wreg free
  5846                           
  5847                           ;IO.c: 70: do { LATD1 = 0; } while(0);
  5848  000C8A  928C               	bcf	3980,1,c	;volatile
  5849                           
  5850                           ;IO.c: 71: LED_array[2] = 0;
  5851  000C8C  0E00               	movlw	0
  5852  000C8E  0100               	movlb	0	; () banked
  5853  000C90  6F8D               	movwf	(_LED_array+5)& (0+255),b
  5854  000C92  0E00               	movlw	0
  5855  000C94  6F8C               	movwf	(_LED_array+4)& (0+255),b
  5856                           
  5857                           ;IO.c: 72: } else if (state == 2) {
  5858  000C96  0012               	return	
  5859  000C98                     l5482:
  5860  000C98  0E02               	movlw	2
  5861  000C9A  1821               	xorwf	SetLEDOut@state,w,c
  5862  000C9C  1022               	iorwf	SetLEDOut@state+1,w,c
  5863  000C9E  A4D8               	btfss	status,2,c
  5864  000CA0  0012               	return	
  5865                           
  5866                           ;IO.c: 74: do { LATD1 = 0; } while(0);
  5867  000CA2  928C               	bcf	3980,1,c	;volatile
  5868                           
  5869                           ;IO.c: 75: setLED(2);
  5870  000CA4  0E00               	movlw	0
  5871  000CA6  6E1C               	movwf	setLED@led+1,c
  5872  000CA8  0E02               	movlw	2
  5873  000CAA  6E1B               	movwf	setLED@led,c
  5874  000CAC  EC7F  F00F         	call	_setLED	;wreg free
  5875                           
  5876                           ;IO.c: 77: LED_array[2] = 2;
  5877  000CB0  0E00               	movlw	0
  5878  000CB2  0100               	movlb	0	; () banked
  5879  000CB4  6F8D               	movwf	(_LED_array+5)& (0+255),b
  5880  000CB6  0E02               	movlw	2
  5881  000CB8  6F8C               	movwf	(_LED_array+4)& (0+255),b
  5882                           
  5883                           ; BSR set to: 0
  5884                           ;IO.c: 79: }
  5885                           ;IO.c: 82: break;
  5886                           
  5887                           ; BSR set to: 0
  5888                           
  5889                           ; BSR set to: 0
  5890  000CBA  0012               	return	
  5891  000CBC                     l5488:
  5892                           
  5893                           ;IO.c: 85: if (state == 1) {
  5894  000CBC  0421               	decf	SetLEDOut@state,w,c
  5895  000CBE  1022               	iorwf	SetLEDOut@state+1,w,c
  5896  000CC0  A4D8               	btfss	status,2,c
  5897  000CC2  D00D               	goto	l5496
  5898                           
  5899                           ;IO.c: 86: Off_Led(3);
  5900  000CC4  0E00               	movlw	0
  5901  000CC6  6E1C               	movwf	Off_Led@led+1,c
  5902  000CC8  0E03               	movlw	3
  5903  000CCA  6E1B               	movwf	Off_Led@led,c
  5904  000CCC  EC57  F012         	call	_Off_Led	;wreg free
  5905                           
  5906                           ;IO.c: 87: do { LATE2 = 1; } while(0);
  5907  000CD0  848D               	bsf	3981,2,c	;volatile
  5908                           
  5909                           ;IO.c: 88: LED_array[3] = 1;
  5910  000CD2  0E00               	movlw	0
  5911  000CD4  0100               	movlb	0	; () banked
  5912  000CD6  6F8F               	movwf	(_LED_array+7)& (0+255),b
  5913  000CD8  0E01               	movlw	1
  5914  000CDA  6F8E               	movwf	(_LED_array+6)& (0+255),b
  5915                           
  5916                           ;IO.c: 89: } else if (state == 0) {
  5917  000CDC  0012               	return	
  5918  000CDE                     l5496:
  5919  000CDE  5021               	movf	SetLEDOut@state,w,c
  5920  000CE0  1022               	iorwf	SetLEDOut@state+1,w,c
  5921  000CE2  A4D8               	btfss	status,2,c
  5922  000CE4  D00D               	goto	l5504
  5923                           
  5924                           ;IO.c: 90: Off_Led(3);
  5925  000CE6  0E00               	movlw	0
  5926  000CE8  6E1C               	movwf	Off_Led@led+1,c
  5927  000CEA  0E03               	movlw	3
  5928  000CEC  6E1B               	movwf	Off_Led@led,c
  5929  000CEE  EC57  F012         	call	_Off_Led	;wreg free
  5930                           
  5931                           ;IO.c: 91: do { LATE2 = 0; } while(0);
  5932  000CF2  948D               	bcf	3981,2,c	;volatile
  5933                           
  5934                           ;IO.c: 92: LED_array[3] = 0;
  5935  000CF4  0E00               	movlw	0
  5936  000CF6  0100               	movlb	0	; () banked
  5937  000CF8  6F8F               	movwf	(_LED_array+7)& (0+255),b
  5938  000CFA  0E00               	movlw	0
  5939  000CFC  6F8E               	movwf	(_LED_array+6)& (0+255),b
  5940                           
  5941                           ;IO.c: 93: }
  5942  000CFE  0012               	return	
  5943  000D00                     l5504:
  5944                           
  5945                           ;IO.c: 94: else if (state == 2) {
  5946  000D00  0E02               	movlw	2
  5947  000D02  1821               	xorwf	SetLEDOut@state,w,c
  5948  000D04  1022               	iorwf	SetLEDOut@state+1,w,c
  5949  000D06  A4D8               	btfss	status,2,c
  5950  000D08  0012               	return	
  5951                           
  5952                           ;IO.c: 95: do { LATE2 = 0; } while(0);
  5953  000D0A  948D               	bcf	3981,2,c	;volatile
  5954                           
  5955                           ;IO.c: 96: setLED(3);
  5956  000D0C  0E00               	movlw	0
  5957  000D0E  6E1C               	movwf	setLED@led+1,c
  5958  000D10  0E03               	movlw	3
  5959  000D12  6E1B               	movwf	setLED@led,c
  5960  000D14  EC7F  F00F         	call	_setLED	;wreg free
  5961                           
  5962                           ;IO.c: 97: LED_array[3] = 2;
  5963  000D18  0E00               	movlw	0
  5964  000D1A  0100               	movlb	0	; () banked
  5965  000D1C  6F8F               	movwf	(_LED_array+7)& (0+255),b
  5966  000D1E  0E02               	movlw	2
  5967  000D20  6F8E               	movwf	(_LED_array+6)& (0+255),b
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;IO.c: 99: }
  5971                           ;IO.c: 101: break;
  5972                           
  5973                           ; BSR set to: 0
  5974                           
  5975                           ; BSR set to: 0
  5976  000D22  0012               	return	
  5977  000D24                     l5510:
  5978                           
  5979                           ;IO.c: 103: if (state == 1) {
  5980  000D24  0421               	decf	SetLEDOut@state,w,c
  5981  000D26  1022               	iorwf	SetLEDOut@state+1,w,c
  5982  000D28  A4D8               	btfss	status,2,c
  5983  000D2A  D00D               	goto	l5518
  5984                           
  5985                           ;IO.c: 104: Off_Led(4);
  5986  000D2C  0E00               	movlw	0
  5987  000D2E  6E1C               	movwf	Off_Led@led+1,c
  5988  000D30  0E04               	movlw	4
  5989  000D32  6E1B               	movwf	Off_Led@led,c
  5990  000D34  EC57  F012         	call	_Off_Led	;wreg free
  5991                           
  5992                           ;IO.c: 105: do { LATE1 = 1; } while(0);
  5993  000D38  828D               	bsf	3981,1,c	;volatile
  5994                           
  5995                           ;IO.c: 106: LED_array[4] = 1;
  5996  000D3A  0E00               	movlw	0
  5997  000D3C  0100               	movlb	0	; () banked
  5998  000D3E  6F91               	movwf	(_LED_array+9)& (0+255),b
  5999  000D40  0E01               	movlw	1
  6000  000D42  6F90               	movwf	(_LED_array+8)& (0+255),b
  6001                           
  6002                           ;IO.c: 107: } else if (state == 0) {
  6003  000D44  0012               	return	
  6004  000D46                     l5518:
  6005  000D46  5021               	movf	SetLEDOut@state,w,c
  6006  000D48  1022               	iorwf	SetLEDOut@state+1,w,c
  6007  000D4A  A4D8               	btfss	status,2,c
  6008  000D4C  D00D               	goto	l5526
  6009                           
  6010                           ;IO.c: 108: Off_Led(4);
  6011  000D4E  0E00               	movlw	0
  6012  000D50  6E1C               	movwf	Off_Led@led+1,c
  6013  000D52  0E04               	movlw	4
  6014  000D54  6E1B               	movwf	Off_Led@led,c
  6015  000D56  EC57  F012         	call	_Off_Led	;wreg free
  6016                           
  6017                           ;IO.c: 109: do { LATE1 = 0; } while(0);
  6018  000D5A  928D               	bcf	3981,1,c	;volatile
  6019                           
  6020                           ;IO.c: 110: LED_array[4] = 0;
  6021  000D5C  0E00               	movlw	0
  6022  000D5E  0100               	movlb	0	; () banked
  6023  000D60  6F91               	movwf	(_LED_array+9)& (0+255),b
  6024  000D62  0E00               	movlw	0
  6025  000D64  6F90               	movwf	(_LED_array+8)& (0+255),b
  6026                           
  6027                           ;IO.c: 111: }
  6028  000D66  0012               	return	
  6029  000D68                     l5526:
  6030                           
  6031                           ;IO.c: 112: else if (state == 2) {
  6032  000D68  0E02               	movlw	2
  6033  000D6A  1821               	xorwf	SetLEDOut@state,w,c
  6034  000D6C  1022               	iorwf	SetLEDOut@state+1,w,c
  6035  000D6E  A4D8               	btfss	status,2,c
  6036  000D70  0012               	return	
  6037                           
  6038                           ;IO.c: 113: do { LATE1 = 0; } while(0);
  6039  000D72  928D               	bcf	3981,1,c	;volatile
  6040                           
  6041                           ;IO.c: 114: setLED(4);
  6042  000D74  0E00               	movlw	0
  6043  000D76  6E1C               	movwf	setLED@led+1,c
  6044  000D78  0E04               	movlw	4
  6045  000D7A  6E1B               	movwf	setLED@led,c
  6046  000D7C  EC7F  F00F         	call	_setLED	;wreg free
  6047                           
  6048                           ;IO.c: 115: LED_array[4] = 2;
  6049  000D80  0E00               	movlw	0
  6050  000D82  0100               	movlb	0	; () banked
  6051  000D84  6F91               	movwf	(_LED_array+9)& (0+255),b
  6052  000D86  0E02               	movlw	2
  6053  000D88  6F90               	movwf	(_LED_array+8)& (0+255),b
  6054                           
  6055                           ; BSR set to: 0
  6056                           ;IO.c: 116: }
  6057                           ;IO.c: 118: break;
  6058                           
  6059                           ; BSR set to: 0
  6060                           
  6061                           ; BSR set to: 0
  6062  000D8A  0012               	return	
  6063  000D8C                     l5532:
  6064                           
  6065                           ;IO.c: 120: if (state == 1) {
  6066  000D8C  0421               	decf	SetLEDOut@state,w,c
  6067  000D8E  1022               	iorwf	SetLEDOut@state+1,w,c
  6068  000D90  A4D8               	btfss	status,2,c
  6069  000D92  D00D               	goto	l5540
  6070                           
  6071                           ;IO.c: 121: Off_Led(5);
  6072  000D94  0E00               	movlw	0
  6073  000D96  6E1C               	movwf	Off_Led@led+1,c
  6074  000D98  0E05               	movlw	5
  6075  000D9A  6E1B               	movwf	Off_Led@led,c
  6076  000D9C  EC57  F012         	call	_Off_Led	;wreg free
  6077                           
  6078                           ;IO.c: 122: do { LATE0 = 1; } while(0);
  6079  000DA0  808D               	bsf	3981,0,c	;volatile
  6080                           
  6081                           ;IO.c: 123: LED_array[5] = 1;
  6082  000DA2  0E00               	movlw	0
  6083  000DA4  0100               	movlb	0	; () banked
  6084  000DA6  6F93               	movwf	(_LED_array+11)& (0+255),b
  6085  000DA8  0E01               	movlw	1
  6086  000DAA  6F92               	movwf	(_LED_array+10)& (0+255),b
  6087                           
  6088                           ;IO.c: 124: } else if (state == 0) {
  6089  000DAC  0012               	return	
  6090  000DAE                     l5540:
  6091  000DAE  5021               	movf	SetLEDOut@state,w,c
  6092  000DB0  1022               	iorwf	SetLEDOut@state+1,w,c
  6093  000DB2  A4D8               	btfss	status,2,c
  6094  000DB4  D00D               	goto	l5548
  6095                           
  6096                           ;IO.c: 125: Off_Led(5);
  6097  000DB6  0E00               	movlw	0
  6098  000DB8  6E1C               	movwf	Off_Led@led+1,c
  6099  000DBA  0E05               	movlw	5
  6100  000DBC  6E1B               	movwf	Off_Led@led,c
  6101  000DBE  EC57  F012         	call	_Off_Led	;wreg free
  6102                           
  6103                           ;IO.c: 126: do { LATE0 = 0; } while(0);
  6104  000DC2  908D               	bcf	3981,0,c	;volatile
  6105                           
  6106                           ;IO.c: 127: LED_array[5] = 0;
  6107  000DC4  0E00               	movlw	0
  6108  000DC6  0100               	movlb	0	; () banked
  6109  000DC8  6F93               	movwf	(_LED_array+11)& (0+255),b
  6110  000DCA  0E00               	movlw	0
  6111  000DCC  6F92               	movwf	(_LED_array+10)& (0+255),b
  6112                           
  6113                           ;IO.c: 128: }
  6114  000DCE  0012               	return	
  6115  000DD0                     l5548:
  6116                           
  6117                           ;IO.c: 129: else if (state == 2) {
  6118  000DD0  0E02               	movlw	2
  6119  000DD2  1821               	xorwf	SetLEDOut@state,w,c
  6120  000DD4  1022               	iorwf	SetLEDOut@state+1,w,c
  6121  000DD6  A4D8               	btfss	status,2,c
  6122  000DD8  0012               	return	
  6123                           
  6124                           ;IO.c: 130: do { LATE0 = 0; } while(0);
  6125  000DDA  908D               	bcf	3981,0,c	;volatile
  6126                           
  6127                           ;IO.c: 131: setLED(5);
  6128  000DDC  0E00               	movlw	0
  6129  000DDE  6E1C               	movwf	setLED@led+1,c
  6130  000DE0  0E05               	movlw	5
  6131  000DE2  6E1B               	movwf	setLED@led,c
  6132  000DE4  EC7F  F00F         	call	_setLED	;wreg free
  6133                           
  6134                           ;IO.c: 132: LED_array[5] = 2;
  6135  000DE8  0E00               	movlw	0
  6136  000DEA  0100               	movlb	0	; () banked
  6137  000DEC  6F93               	movwf	(_LED_array+11)& (0+255),b
  6138  000DEE  0E02               	movlw	2
  6139  000DF0  6F92               	movwf	(_LED_array+10)& (0+255),b
  6140                           
  6141                           ; BSR set to: 0
  6142                           ;IO.c: 138: }
  6143                           
  6144                           ; BSR set to: 0
  6145                           ;IO.c: 134: }
  6146                           ;IO.c: 137: break;
  6147                           
  6148                           ; BSR set to: 0
  6149                           
  6150                           ; BSR set to: 0
  6151  000DF2  0012               	return	
  6152  000DF4                     l5556:
  6153  000DF4  C01F  F023         	movff	SetLEDOut@lednum,??_SetLEDOut
  6154  000DF8  C020  F024         	movff	SetLEDOut@lednum+1,??_SetLEDOut+1
  6155                           
  6156                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6157                           ; Switch size 1, requested type "space"
  6158                           ; Number of cases is 1, Range of values is 0 to 0
  6159                           ; switch strategies available:
  6160                           ; Name         Instructions Cycles
  6161                           ; simple_byte            4     3 (average)
  6162                           ;	Chosen strategy is simple_byte
  6163  000DFC  5024               	movf	??_SetLEDOut+1,w,c
  6164  000DFE  0A00               	xorlw	0	; case 0
  6165  000E00  A4D8               	btfss	status,2,c
  6166  000E02  0012               	return	
  6167                           
  6168                           ; Switch size 1, requested type "space"
  6169                           ; Number of cases is 6, Range of values is 0 to 5
  6170                           ; switch strategies available:
  6171                           ; Name         Instructions Cycles
  6172                           ; simple_byte           19    10 (average)
  6173                           ;	Chosen strategy is simple_byte
  6174  000E04  5023               	movf	??_SetLEDOut,w,c
  6175  000E06  0A00               	xorlw	0	; case 0
  6176  000E08  B4D8               	btfsc	status,2,c
  6177  000E0A  D6BC               	goto	l5422
  6178  000E0C  0A01               	xorlw	1	; case 1
  6179  000E0E  B4D8               	btfsc	status,2,c
  6180  000E10  D6ED               	goto	l5444
  6181  000E12  0A03               	xorlw	3	; case 2
  6182  000E14  B4D8               	btfsc	status,2,c
  6183  000E16  D71E               	goto	l5466
  6184  000E18  0A01               	xorlw	1	; case 3
  6185  000E1A  B4D8               	btfsc	status,2,c
  6186  000E1C  D74F               	goto	l5488
  6187  000E1E  0A07               	xorlw	7	; case 4
  6188  000E20  B4D8               	btfsc	status,2,c
  6189  000E22  D780               	goto	l5510
  6190  000E24  0A01               	xorlw	1	; case 5
  6191  000E26  A4D8               	btfss	status,2,c
  6192  000E28  0012               	return	
  6193  000E2A  D7B0               	goto	l5532
  6194  000E2C                     __end_of_SetLEDOut:
  6195                           	opt stack 0
  6196                           tosu	equ	0xFFF
  6197                           tosh	equ	0xFFE
  6198                           tosl	equ	0xFFD
  6199                           pclath	equ	0xFFA
  6200                           tblptru	equ	0xFF8
  6201                           tblptrh	equ	0xFF7
  6202                           tblptrl	equ	0xFF6
  6203                           tablat	equ	0xFF5
  6204                           prodh	equ	0xFF4
  6205                           prodl	equ	0xFF3
  6206                           intcon	equ	0xFF2
  6207                           postinc0	equ	0xFEE
  6208                           wreg	equ	0xFE8
  6209                           indf2	equ	0xFDF
  6210                           postinc2	equ	0xFDE
  6211                           postdec2	equ	0xFDD
  6212                           plusw2	equ	0xFDB
  6213                           fsr2h	equ	0xFDA
  6214                           fsr2l	equ	0xFD9
  6215                           status	equ	0xFD8
  6216                           
  6217 ;; *************** function _setLED *****************
  6218 ;; Defined at:
  6219 ;;		line 153 in file "mcc_generated_files/timer2.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;  led             2   26[COMRAM] int 
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;		None
  6224 ;; Return value:  Size  Location     Type
  6225 ;;		None               void
  6226 ;; Registers used:
  6227 ;;		wreg, status,2, status,0
  6228 ;; Tracked objects:
  6229 ;;		On entry : 0/0
  6230 ;;		On exit  : 0/0
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6233 ;;      Params:         2       0       0       0       0       0       0
  6234 ;;      Locals:         0       0       0       0       0       0       0
  6235 ;;      Temps:          2       0       0       0       0       0       0
  6236 ;;      Totals:         4       0       0       0       0       0       0
  6237 ;;Total ram usage:        4 bytes
  6238 ;; Hardware stack levels used:    1
  6239 ;; Hardware stack levels required when called:    4
  6240 ;; This function calls:
  6241 ;;		Nothing
  6242 ;; This function is called by:
  6243 ;;		_SetLEDOut
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247                           	psect	text28
  6248  001EFE                     __ptext28:
  6249                           	opt stack 0
  6250  001EFE                     _setLED:
  6251                           	opt stack 23
  6252                           
  6253                           ;timer2.c: 154: switch (led){
  6254                           
  6255                           ;incstack = 0
  6256  001EFE  D042               	goto	l5284
  6257  001F00                     l5270:
  6258                           
  6259                           ;timer2.c: 156: LEDNUM_ENAB[0]=1;
  6260  001F00  0E00               	movlw	0
  6261  001F02  0100               	movlb	0	; () banked
  6262  001F04  6F99               	movwf	(_LEDNUM_ENAB+1)& (0+255),b
  6263  001F06  0E01               	movlw	1
  6264  001F08  6F98               	movwf	_LEDNUM_ENAB& (0+255),b
  6265                           
  6266                           ;timer2.c: 157: LEDState[0]=0;
  6267  001F0A  0E00               	movlw	0
  6268  001F0C  0100               	movlb	0	; () banked
  6269  001F0E  6FA5               	movwf	(_LEDState+1)& (0+255),b
  6270  001F10  0E00               	movlw	0
  6271  001F12  6FA4               	movwf	_LEDState& (0+255),b
  6272                           
  6273                           ;timer2.c: 158: break;
  6274  001F14  0012               	return	
  6275  001F16                     l5272:
  6276                           
  6277                           ;timer2.c: 160: LEDNUM_ENAB[1]=1;
  6278  001F16  0E00               	movlw	0
  6279  001F18  0100               	movlb	0	; () banked
  6280  001F1A  6F9B               	movwf	(_LEDNUM_ENAB+3)& (0+255),b
  6281  001F1C  0E01               	movlw	1
  6282  001F1E  6F9A               	movwf	(_LEDNUM_ENAB+2)& (0+255),b
  6283                           
  6284                           ;timer2.c: 161: LEDState[1]=0;
  6285  001F20  0E00               	movlw	0
  6286  001F22  0100               	movlb	0	; () banked
  6287  001F24  6FA7               	movwf	(_LEDState+3)& (0+255),b
  6288  001F26  0E00               	movlw	0
  6289  001F28  6FA6               	movwf	(_LEDState+2)& (0+255),b
  6290                           
  6291                           ;timer2.c: 162: break;
  6292  001F2A  0012               	return	
  6293  001F2C                     l5274:
  6294                           
  6295                           ;timer2.c: 164: LEDNUM_ENAB[2]=1;
  6296  001F2C  0E00               	movlw	0
  6297  001F2E  0100               	movlb	0	; () banked
  6298  001F30  6F9D               	movwf	(_LEDNUM_ENAB+5)& (0+255),b
  6299  001F32  0E01               	movlw	1
  6300  001F34  6F9C               	movwf	(_LEDNUM_ENAB+4)& (0+255),b
  6301                           
  6302                           ;timer2.c: 165: LEDState[2]=0;
  6303  001F36  0E00               	movlw	0
  6304  001F38  0100               	movlb	0	; () banked
  6305  001F3A  6FA9               	movwf	(_LEDState+5)& (0+255),b
  6306  001F3C  0E00               	movlw	0
  6307  001F3E  6FA8               	movwf	(_LEDState+4)& (0+255),b
  6308                           
  6309                           ;timer2.c: 166: break;
  6310  001F40  0012               	return	
  6311  001F42                     l5276:
  6312                           
  6313                           ;timer2.c: 168: LEDNUM_ENAB[3]=1;
  6314  001F42  0E00               	movlw	0
  6315  001F44  0100               	movlb	0	; () banked
  6316  001F46  6F9F               	movwf	(_LEDNUM_ENAB+7)& (0+255),b
  6317  001F48  0E01               	movlw	1
  6318  001F4A  6F9E               	movwf	(_LEDNUM_ENAB+6)& (0+255),b
  6319                           
  6320                           ;timer2.c: 169: LEDState[3]=0;
  6321  001F4C  0E00               	movlw	0
  6322  001F4E  0100               	movlb	0	; () banked
  6323  001F50  6FAB               	movwf	(_LEDState+7)& (0+255),b
  6324  001F52  0E00               	movlw	0
  6325  001F54  6FAA               	movwf	(_LEDState+6)& (0+255),b
  6326                           
  6327                           ;timer2.c: 170: break;
  6328  001F56  0012               	return	
  6329  001F58                     l5278:
  6330                           
  6331                           ;timer2.c: 172: LEDNUM_ENAB[4]=1;
  6332  001F58  0E00               	movlw	0
  6333  001F5A  0100               	movlb	0	; () banked
  6334  001F5C  6FA1               	movwf	(_LEDNUM_ENAB+9)& (0+255),b
  6335  001F5E  0E01               	movlw	1
  6336  001F60  6FA0               	movwf	(_LEDNUM_ENAB+8)& (0+255),b
  6337                           
  6338                           ;timer2.c: 173: LEDState[4]=0;
  6339  001F62  0E00               	movlw	0
  6340  001F64  0100               	movlb	0	; () banked
  6341  001F66  6FAD               	movwf	(_LEDState+9)& (0+255),b
  6342  001F68  0E00               	movlw	0
  6343  001F6A  6FAC               	movwf	(_LEDState+8)& (0+255),b
  6344                           
  6345                           ;timer2.c: 174: break;
  6346  001F6C  0012               	return	
  6347  001F6E                     l5280:
  6348                           
  6349                           ;timer2.c: 176: LEDNUM_ENAB[5]=1;
  6350  001F6E  0E00               	movlw	0
  6351  001F70  0100               	movlb	0	; () banked
  6352  001F72  6FA3               	movwf	(_LEDNUM_ENAB+11)& (0+255),b
  6353  001F74  0E01               	movlw	1
  6354  001F76  6FA2               	movwf	(_LEDNUM_ENAB+10)& (0+255),b
  6355                           
  6356                           ;timer2.c: 177: LEDState[5]=0;
  6357  001F78  0E00               	movlw	0
  6358  001F7A  0100               	movlb	0	; () banked
  6359  001F7C  6FAF               	movwf	(_LEDState+11)& (0+255),b
  6360  001F7E  0E00               	movlw	0
  6361  001F80  6FAE               	movwf	(_LEDState+10)& (0+255),b
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;timer2.c: 179: }
  6365                           
  6366                           ;timer2.c: 178: break;
  6367  001F82  0012               	return	
  6368  001F84                     l5284:
  6369  001F84  C01B  F01D         	movff	setLED@led,??_setLED
  6370  001F88  C01C  F01E         	movff	setLED@led+1,??_setLED+1
  6371                           
  6372                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6373                           ; Switch size 1, requested type "space"
  6374                           ; Number of cases is 1, Range of values is 0 to 0
  6375                           ; switch strategies available:
  6376                           ; Name         Instructions Cycles
  6377                           ; simple_byte            4     3 (average)
  6378                           ;	Chosen strategy is simple_byte
  6379  001F8C  501E               	movf	??_setLED+1,w,c
  6380  001F8E  0A00               	xorlw	0	; case 0
  6381  001F90  A4D8               	btfss	status,2,c
  6382  001F92  0012               	return	
  6383                           
  6384                           ; Switch size 1, requested type "space"
  6385                           ; Number of cases is 6, Range of values is 0 to 5
  6386                           ; switch strategies available:
  6387                           ; Name         Instructions Cycles
  6388                           ; simple_byte           19    10 (average)
  6389                           ;	Chosen strategy is simple_byte
  6390  001F94  501D               	movf	??_setLED,w,c
  6391  001F96  0A00               	xorlw	0	; case 0
  6392  001F98  B4D8               	btfsc	status,2,c
  6393  001F9A  D7B2               	goto	l5270
  6394  001F9C  0A01               	xorlw	1	; case 1
  6395  001F9E  B4D8               	btfsc	status,2,c
  6396  001FA0  D7BA               	goto	l5272
  6397  001FA2  0A03               	xorlw	3	; case 2
  6398  001FA4  B4D8               	btfsc	status,2,c
  6399  001FA6  D7C2               	goto	l5274
  6400  001FA8  0A01               	xorlw	1	; case 3
  6401  001FAA  B4D8               	btfsc	status,2,c
  6402  001FAC  D7CA               	goto	l5276
  6403  001FAE  0A07               	xorlw	7	; case 4
  6404  001FB0  B4D8               	btfsc	status,2,c
  6405  001FB2  D7D2               	goto	l5278
  6406  001FB4  0A01               	xorlw	1	; case 5
  6407  001FB6  A4D8               	btfss	status,2,c
  6408  001FB8  0012               	return	
  6409  001FBA  D7D9               	goto	l5280
  6410  001FBC                     __end_of_setLED:
  6411                           	opt stack 0
  6412                           tosu	equ	0xFFF
  6413                           tosh	equ	0xFFE
  6414                           tosl	equ	0xFFD
  6415                           pclath	equ	0xFFA
  6416                           tblptru	equ	0xFF8
  6417                           tblptrh	equ	0xFF7
  6418                           tblptrl	equ	0xFF6
  6419                           tablat	equ	0xFF5
  6420                           prodh	equ	0xFF4
  6421                           prodl	equ	0xFF3
  6422                           intcon	equ	0xFF2
  6423                           postinc0	equ	0xFEE
  6424                           wreg	equ	0xFE8
  6425                           indf2	equ	0xFDF
  6426                           postinc2	equ	0xFDE
  6427                           postdec2	equ	0xFDD
  6428                           plusw2	equ	0xFDB
  6429                           fsr2h	equ	0xFDA
  6430                           fsr2l	equ	0xFD9
  6431                           status	equ	0xFD8
  6432                           
  6433 ;; *************** function _Off_Led *****************
  6434 ;; Defined at:
  6435 ;;		line 181 in file "mcc_generated_files/timer2.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;  led             2   26[COMRAM] int 
  6438 ;; Auto vars:     Size  Location     Type
  6439 ;;		None
  6440 ;; Return value:  Size  Location     Type
  6441 ;;		None               void
  6442 ;; Registers used:
  6443 ;;		wreg, status,2, status,0
  6444 ;; Tracked objects:
  6445 ;;		On entry : 0/0
  6446 ;;		On exit  : 0/0
  6447 ;;		Unchanged: 0/0
  6448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6449 ;;      Params:         2       0       0       0       0       0       0
  6450 ;;      Locals:         0       0       0       0       0       0       0
  6451 ;;      Temps:          2       0       0       0       0       0       0
  6452 ;;      Totals:         4       0       0       0       0       0       0
  6453 ;;Total ram usage:        4 bytes
  6454 ;; Hardware stack levels used:    1
  6455 ;; Hardware stack levels required when called:    4
  6456 ;; This function calls:
  6457 ;;		Nothing
  6458 ;; This function is called by:
  6459 ;;		_SetLEDOut
  6460 ;; This function uses a non-reentrant model
  6461 ;;
  6462                           
  6463                           	psect	text29
  6464  0024AE                     __ptext29:
  6465                           	opt stack 0
  6466  0024AE                     _Off_Led:
  6467                           	opt stack 23
  6468                           
  6469                           ;timer2.c: 182: switch (led){
  6470                           
  6471                           ;incstack = 0
  6472  0024AE  D02A               	goto	l5262
  6473  0024B0                     l5236:
  6474                           
  6475                           ;timer2.c: 184: LEDNUM_ENAB[0]=0;
  6476  0024B0  0E00               	movlw	0
  6477  0024B2  0100               	movlb	0	; () banked
  6478  0024B4  6F99               	movwf	(_LEDNUM_ENAB+1)& (0+255),b
  6479  0024B6  0E00               	movlw	0
  6480  0024B8  6F98               	movwf	_LEDNUM_ENAB& (0+255),b
  6481                           
  6482                           ; BSR set to: 0
  6483                           
  6484                           ; BSR set to: 0
  6485                           
  6486                           ;timer2.c: 185: do { LATB3 = 0; } while(0);
  6487  0024BA  968A               	bcf	3978,3,c	;volatile
  6488                           
  6489                           ; BSR set to: 0
  6490                           ;timer2.c: 186: break;
  6491  0024BC  0012               	return	
  6492  0024BE                     l5240:
  6493                           
  6494                           ;timer2.c: 188: LEDNUM_ENAB[1]=0;
  6495  0024BE  0E00               	movlw	0
  6496  0024C0  0100               	movlb	0	; () banked
  6497  0024C2  6F9B               	movwf	(_LEDNUM_ENAB+3)& (0+255),b
  6498  0024C4  0E00               	movlw	0
  6499  0024C6  6F9A               	movwf	(_LEDNUM_ENAB+2)& (0+255),b
  6500                           
  6501                           ; BSR set to: 0
  6502                           
  6503                           ; BSR set to: 0
  6504                           
  6505                           ;timer2.c: 189: do { LATB5 = 0; } while(0);
  6506  0024C8  9A8A               	bcf	3978,5,c	;volatile
  6507                           
  6508                           ; BSR set to: 0
  6509                           ;timer2.c: 190: break;
  6510  0024CA  0012               	return	
  6511  0024CC                     l5244:
  6512                           
  6513                           ;timer2.c: 192: LEDNUM_ENAB[2]=0;
  6514  0024CC  0E00               	movlw	0
  6515  0024CE  0100               	movlb	0	; () banked
  6516  0024D0  6F9D               	movwf	(_LEDNUM_ENAB+5)& (0+255),b
  6517  0024D2  0E00               	movlw	0
  6518  0024D4  6F9C               	movwf	(_LEDNUM_ENAB+4)& (0+255),b
  6519                           
  6520                           ; BSR set to: 0
  6521                           
  6522                           ; BSR set to: 0
  6523                           
  6524                           ;timer2.c: 193: do { LATD1 = 0; } while(0);
  6525  0024D6  928C               	bcf	3980,1,c	;volatile
  6526                           
  6527                           ; BSR set to: 0
  6528                           ;timer2.c: 194: break;
  6529  0024D8  0012               	return	
  6530  0024DA                     l5248:
  6531                           
  6532                           ;timer2.c: 196: LEDNUM_ENAB[3]=0;
  6533  0024DA  0E00               	movlw	0
  6534  0024DC  0100               	movlb	0	; () banked
  6535  0024DE  6F9F               	movwf	(_LEDNUM_ENAB+7)& (0+255),b
  6536  0024E0  0E00               	movlw	0
  6537  0024E2  6F9E               	movwf	(_LEDNUM_ENAB+6)& (0+255),b
  6538                           
  6539                           ; BSR set to: 0
  6540                           
  6541                           ; BSR set to: 0
  6542                           
  6543                           ;timer2.c: 197: do { LATE2 = 0; } while(0);
  6544  0024E4  948D               	bcf	3981,2,c	;volatile
  6545                           
  6546                           ; BSR set to: 0
  6547                           ;timer2.c: 198: break;
  6548  0024E6  0012               	return	
  6549  0024E8                     l5252:
  6550                           
  6551                           ;timer2.c: 200: LEDNUM_ENAB[4]=0;
  6552  0024E8  0E00               	movlw	0
  6553  0024EA  0100               	movlb	0	; () banked
  6554  0024EC  6FA1               	movwf	(_LEDNUM_ENAB+9)& (0+255),b
  6555  0024EE  0E00               	movlw	0
  6556  0024F0  6FA0               	movwf	(_LEDNUM_ENAB+8)& (0+255),b
  6557                           
  6558                           ; BSR set to: 0
  6559                           
  6560                           ; BSR set to: 0
  6561                           
  6562                           ;timer2.c: 201: do { LATE1 = 0; } while(0);
  6563  0024F2  928D               	bcf	3981,1,c	;volatile
  6564                           
  6565                           ; BSR set to: 0
  6566                           ;timer2.c: 202: break;
  6567  0024F4  0012               	return	
  6568  0024F6                     l5256:
  6569                           
  6570                           ;timer2.c: 204: LEDNUM_ENAB[5]=0;
  6571  0024F6  0E00               	movlw	0
  6572  0024F8  0100               	movlb	0	; () banked
  6573  0024FA  6FA3               	movwf	(_LEDNUM_ENAB+11)& (0+255),b
  6574  0024FC  0E00               	movlw	0
  6575  0024FE  6FA2               	movwf	(_LEDNUM_ENAB+10)& (0+255),b
  6576                           
  6577                           ; BSR set to: 0
  6578                           
  6579                           ; BSR set to: 0
  6580                           
  6581                           ;timer2.c: 205: do { LATE0 = 0; } while(0) ;
  6582  002500  908D               	bcf	3981,0,c	;volatile
  6583                           
  6584                           ; BSR set to: 0
  6585                           ;timer2.c: 207: }
  6586                           
  6587                           ; BSR set to: 0
  6588                           ;timer2.c: 206: break;
  6589  002502  0012               	return	
  6590  002504                     l5262:
  6591  002504  C01B  F01D         	movff	Off_Led@led,??_Off_Led
  6592  002508  C01C  F01E         	movff	Off_Led@led+1,??_Off_Led+1
  6593                           
  6594                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6595                           ; Switch size 1, requested type "space"
  6596                           ; Number of cases is 1, Range of values is 0 to 0
  6597                           ; switch strategies available:
  6598                           ; Name         Instructions Cycles
  6599                           ; simple_byte            4     3 (average)
  6600                           ;	Chosen strategy is simple_byte
  6601  00250C  501E               	movf	??_Off_Led+1,w,c
  6602  00250E  0A00               	xorlw	0	; case 0
  6603  002510  A4D8               	btfss	status,2,c
  6604  002512  0012               	return	
  6605                           
  6606                           ; Switch size 1, requested type "space"
  6607                           ; Number of cases is 6, Range of values is 0 to 5
  6608                           ; switch strategies available:
  6609                           ; Name         Instructions Cycles
  6610                           ; simple_byte           19    10 (average)
  6611                           ;	Chosen strategy is simple_byte
  6612  002514  501D               	movf	??_Off_Led,w,c
  6613  002516  0A00               	xorlw	0	; case 0
  6614  002518  B4D8               	btfsc	status,2,c
  6615  00251A  D7CA               	goto	l5236
  6616  00251C  0A01               	xorlw	1	; case 1
  6617  00251E  B4D8               	btfsc	status,2,c
  6618  002520  D7CE               	goto	l5240
  6619  002522  0A03               	xorlw	3	; case 2
  6620  002524  B4D8               	btfsc	status,2,c
  6621  002526  D7D2               	goto	l5244
  6622  002528  0A01               	xorlw	1	; case 3
  6623  00252A  B4D8               	btfsc	status,2,c
  6624  00252C  D7D6               	goto	l5248
  6625  00252E  0A07               	xorlw	7	; case 4
  6626  002530  B4D8               	btfsc	status,2,c
  6627  002532  D7DA               	goto	l5252
  6628  002534  0A01               	xorlw	1	; case 5
  6629  002536  A4D8               	btfss	status,2,c
  6630  002538  0012               	return	
  6631  00253A  D7DD               	goto	l5256
  6632  00253C                     __end_of_Off_Led:
  6633                           	opt stack 0
  6634                           tosu	equ	0xFFF
  6635                           tosh	equ	0xFFE
  6636                           tosl	equ	0xFFD
  6637                           pclath	equ	0xFFA
  6638                           tblptru	equ	0xFF8
  6639                           tblptrh	equ	0xFF7
  6640                           tblptrl	equ	0xFF6
  6641                           tablat	equ	0xFF5
  6642                           prodh	equ	0xFF4
  6643                           prodl	equ	0xFF3
  6644                           intcon	equ	0xFF2
  6645                           postinc0	equ	0xFEE
  6646                           wreg	equ	0xFE8
  6647                           indf2	equ	0xFDF
  6648                           postinc2	equ	0xFDE
  6649                           postdec2	equ	0xFDD
  6650                           plusw2	equ	0xFDB
  6651                           fsr2h	equ	0xFDA
  6652                           fsr2l	equ	0xFD9
  6653                           status	equ	0xFD8
  6654                           
  6655 ;; *************** function _TBbarGraphs *****************
  6656 ;; Defined at:
  6657 ;;		line 43 in file "Communications.c"
  6658 ;; Parameters:    Size  Location     Type
  6659 ;;  t               2   26[COMRAM] int 
  6660 ;;  b               2   28[COMRAM] int 
  6661 ;; Auto vars:     Size  Location     Type
  6662 ;;		None
  6663 ;; Return value:  Size  Location     Type
  6664 ;;		None               void
  6665 ;; Registers used:
  6666 ;;		None
  6667 ;; Tracked objects:
  6668 ;;		On entry : 0/0
  6669 ;;		On exit  : 0/0
  6670 ;;		Unchanged: 0/0
  6671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6672 ;;      Params:         4       0       0       0       0       0       0
  6673 ;;      Locals:         0       0       0       0       0       0       0
  6674 ;;      Temps:          0       0       0       0       0       0       0
  6675 ;;      Totals:         4       0       0       0       0       0       0
  6676 ;;Total ram usage:        4 bytes
  6677 ;; Hardware stack levels used:    1
  6678 ;; Hardware stack levels required when called:    4
  6679 ;; This function calls:
  6680 ;;		Nothing
  6681 ;; This function is called by:
  6682 ;;		_updateComms
  6683 ;; This function uses a non-reentrant model
  6684 ;;
  6685                           
  6686                           	psect	text30
  6687  002DA8                     __ptext30:
  6688                           	opt stack 0
  6689  002DA8                     _TBbarGraphs:
  6690                           	opt stack 25
  6691                           
  6692                           ;Communications.c: 44: throttle = t;
  6693                           
  6694                           ;incstack = 0
  6695  002DA8  C01B  F0D9         	movff	TBbarGraphs@t,_throttle
  6696  002DAC  C01C  F0DA         	movff	TBbarGraphs@t+1,_throttle+1
  6697                           
  6698                           ;Communications.c: 45: brake = b;
  6699  002DB0  C01D  F0C9         	movff	TBbarGraphs@b,_brake
  6700  002DB4  C01E  F0CA         	movff	TBbarGraphs@b+1,_brake+1
  6701  002DB8  0012               	return		;funcret
  6702  002DBA                     __end_of_TBbarGraphs:
  6703                           	opt stack 0
  6704                           tosu	equ	0xFFF
  6705                           tosh	equ	0xFFE
  6706                           tosl	equ	0xFFD
  6707                           pclath	equ	0xFFA
  6708                           tblptru	equ	0xFF8
  6709                           tblptrh	equ	0xFF7
  6710                           tblptrl	equ	0xFF6
  6711                           tablat	equ	0xFF5
  6712                           prodh	equ	0xFF4
  6713                           prodl	equ	0xFF3
  6714                           intcon	equ	0xFF2
  6715                           postinc0	equ	0xFEE
  6716                           wreg	equ	0xFE8
  6717                           indf2	equ	0xFDF
  6718                           postinc2	equ	0xFDE
  6719                           postdec2	equ	0xFDD
  6720                           plusw2	equ	0xFDB
  6721                           fsr2h	equ	0xFDA
  6722                           fsr2l	equ	0xFD9
  6723                           status	equ	0xFD8
  6724                           
  6725 ;; *************** function ___lwtoft *****************
  6726 ;; Defined at:
  6727 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwtoft.c"
  6728 ;; Parameters:    Size  Location     Type
  6729 ;;  c               2   34[COMRAM] unsigned int 
  6730 ;; Auto vars:     Size  Location     Type
  6731 ;;		None
  6732 ;; Return value:  Size  Location     Type
  6733 ;;                  3   34[COMRAM] float 
  6734 ;; Registers used:
  6735 ;;		wreg, status,2, status,0, cstack
  6736 ;; Tracked objects:
  6737 ;;		On entry : 0/0
  6738 ;;		On exit  : 0/0
  6739 ;;		Unchanged: 0/0
  6740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6741 ;;      Params:         3       0       0       0       0       0       0
  6742 ;;      Locals:         0       0       0       0       0       0       0
  6743 ;;      Temps:          0       0       0       0       0       0       0
  6744 ;;      Totals:         3       0       0       0       0       0       0
  6745 ;;Total ram usage:        3 bytes
  6746 ;; Hardware stack levels used:    1
  6747 ;; Hardware stack levels required when called:    5
  6748 ;; This function calls:
  6749 ;;		___ftpack
  6750 ;; This function is called by:
  6751 ;;		_main
  6752 ;; This function uses a non-reentrant model
  6753 ;;
  6754                           
  6755                           	psect	text31
  6756  002C98                     __ptext31:
  6757                           	opt stack 0
  6758  002C98                     ___lwtoft:
  6759                           	opt stack 25
  6760                           
  6761                           ;incstack = 0
  6762  002C98  C023  F01B         	movff	___lwtoft@c,___ftpack@arg
  6763  002C9C  C024  F01C         	movff	___lwtoft@c+1,___ftpack@arg+1
  6764  002CA0  6A1D               	clrf	___ftpack@arg+2,c
  6765  002CA2  0E8E               	movlw	142
  6766  002CA4  6E1E               	movwf	___ftpack@exp,c
  6767  002CA6  0E00               	movlw	0
  6768  002CA8  6E1F               	movwf	___ftpack@sign,c
  6769  002CAA  EC3B  F010         	call	___ftpack	;wreg free
  6770  002CAE  C01B  F023         	movff	?___ftpack,?___lwtoft
  6771  002CB2  C01C  F024         	movff	?___ftpack+1,?___lwtoft+1
  6772  002CB6  C01D  F025         	movff	?___ftpack+2,?___lwtoft+2
  6773  002CBA  0012               	return	
  6774  002CBC                     __end_of___lwtoft:
  6775                           	opt stack 0
  6776                           tosu	equ	0xFFF
  6777                           tosh	equ	0xFFE
  6778                           tosl	equ	0xFFD
  6779                           pclath	equ	0xFFA
  6780                           tblptru	equ	0xFF8
  6781                           tblptrh	equ	0xFF7
  6782                           tblptrl	equ	0xFF6
  6783                           tablat	equ	0xFF5
  6784                           prodh	equ	0xFF4
  6785                           prodl	equ	0xFF3
  6786                           intcon	equ	0xFF2
  6787                           postinc0	equ	0xFEE
  6788                           wreg	equ	0xFE8
  6789                           indf2	equ	0xFDF
  6790                           postinc2	equ	0xFDE
  6791                           postdec2	equ	0xFDD
  6792                           plusw2	equ	0xFDB
  6793                           fsr2h	equ	0xFDA
  6794                           fsr2l	equ	0xFD9
  6795                           status	equ	0xFD8
  6796                           
  6797 ;; *************** function ___fttol *****************
  6798 ;; Defined at:
  6799 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fttol.c"
  6800 ;; Parameters:    Size  Location     Type
  6801 ;;  f1              3    9[BANK0 ] float 
  6802 ;; Auto vars:     Size  Location     Type
  6803 ;;  lval            4    1[BANK1 ] unsigned long 
  6804 ;;  exp1            1    5[BANK1 ] unsigned char 
  6805 ;;  sign1           1    0[BANK1 ] unsigned char 
  6806 ;; Return value:  Size  Location     Type
  6807 ;;                  4    9[BANK0 ] long 
  6808 ;; Registers used:
  6809 ;;		wreg, status,2, status,0
  6810 ;; Tracked objects:
  6811 ;;		On entry : 0/0
  6812 ;;		On exit  : 0/0
  6813 ;;		Unchanged: 0/0
  6814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6815 ;;      Params:         0       4       0       0       0       0       0
  6816 ;;      Locals:         0       0       6       0       0       0       0
  6817 ;;      Temps:          0       5       0       0       0       0       0
  6818 ;;      Totals:         0       9       6       0       0       0       0
  6819 ;;Total ram usage:       15 bytes
  6820 ;; Hardware stack levels used:    1
  6821 ;; Hardware stack levels required when called:    4
  6822 ;; This function calls:
  6823 ;;		Nothing
  6824 ;; This function is called by:
  6825 ;;		_main
  6826 ;; This function uses a non-reentrant model
  6827 ;;
  6828                           
  6829                           	psect	text32
  6830  001366                     __ptext32:
  6831                           	opt stack 0
  6832  001366                     ___fttol:
  6833                           	opt stack 26
  6834                           
  6835                           ;incstack = 0
  6836  001366  C0F9  F0FB         	movff	___fttol@f1+2,??___fttol
  6837  00136A  0100               	movlb	0	; () banked
  6838  00136C  6BFC               	clrf	(??___fttol+1)& (0+255),b
  6839  00136E  6BFD               	clrf	(??___fttol+2)& (0+255),b
  6840  001370  0100               	movlb	0	; () banked
  6841  001372  35F8               	rlcf	(___fttol@f1+1)& (0+255),w,b
  6842  001374  0100               	movlb	0	; () banked
  6843  001376  37FB               	rlcf	??___fttol& (0+255),f,b
  6844  001378  E301               	bnc	u7161
  6845  00137A  81FC               	bsf	(??___fttol+1)& (0+255),0,b
  6846  00137C                     u7161:
  6847  00137C  0100               	movlb	0	; () banked
  6848  00137E  51FB               	movf	??___fttol& (0+255),w,b
  6849  001380  0101               	movlb	1	; () banked
  6850  001382  6F3E               	movwf	___fttol@exp1& (0+255),b
  6851  001384  0101               	movlb	1	; () banked
  6852  001386  513E               	movf	___fttol@exp1& (0+255),w,b
  6853  001388  A4D8               	btfss	status,2,c
  6854  00138A  D00A               	goto	l6432
  6855                           
  6856                           ; BSR set to: 1
  6857  00138C  0E00               	movlw	0
  6858  00138E  0100               	movlb	0	; () banked
  6859  001390  6FF7               	movwf	?___fttol& (0+255),b
  6860  001392  0E00               	movlw	0
  6861  001394  6FF8               	movwf	(?___fttol+1)& (0+255),b
  6862  001396  0E00               	movlw	0
  6863  001398  6FF9               	movwf	(?___fttol+2)& (0+255),b
  6864  00139A  0E00               	movlw	0
  6865  00139C  6FFA               	movwf	(?___fttol+3)& (0+255),b
  6866                           
  6867                           ; BSR set to: 0
  6868  00139E  0012               	return	
  6869  0013A0                     l6432:
  6870  0013A0  0E17               	movlw	23
  6871  0013A2  0100               	movlb	0	; () banked
  6872  0013A4  6FFB               	movwf	??___fttol& (0+255),b
  6873  0013A6  C0F7  F0FC         	movff	___fttol@f1,??___fttol+1
  6874  0013AA  C0F8  F0FD         	movff	___fttol@f1+1,??___fttol+2
  6875  0013AE  C0F9  F0FE         	movff	___fttol@f1+2,??___fttol+3
  6876  0013B2  0100               	movlb	0	; () banked
  6877  0013B4  29FB               	incf	??___fttol& (0+255),w,b
  6878  0013B6  0100               	movlb	0	; () banked
  6879  0013B8  6FFF               	movwf	(??___fttol+4)& (0+255),b
  6880  0013BA  D005               	goto	u7180
  6881  0013BC                     u7185:
  6882  0013BC  0100               	movlb	0	; () banked
  6883  0013BE  90D8               	bcf	status,0,c
  6884  0013C0  33FE               	rrcf	(??___fttol+3)& (0+255),f,b
  6885  0013C2  33FD               	rrcf	(??___fttol+2)& (0+255),f,b
  6886  0013C4  33FC               	rrcf	(??___fttol+1)& (0+255),f,b
  6887  0013C6                     u7180:
  6888  0013C6  0100               	movlb	0	; () banked
  6889  0013C8  2FFF               	decfsz	(??___fttol+4)& (0+255),f,b
  6890  0013CA  D7F8               	goto	u7185
  6891  0013CC  0100               	movlb	0	; () banked
  6892  0013CE  51FC               	movf	(??___fttol+1)& (0+255),w,b
  6893  0013D0  0101               	movlb	1	; () banked
  6894  0013D2  6F39               	movwf	___fttol@sign1& (0+255),b
  6895                           
  6896                           ; BSR set to: 1
  6897  0013D4  0100               	movlb	0	; () banked
  6898  0013D6  8FF8               	bsf	(___fttol@f1+1)& (0+255),7,b
  6899                           
  6900                           ; BSR set to: 0
  6901  0013D8  0EFF               	movlw	255
  6902  0013DA  0100               	movlb	0	; () banked
  6903  0013DC  17F7               	andwf	___fttol@f1& (0+255),f,b
  6904  0013DE  0EFF               	movlw	255
  6905  0013E0  0100               	movlb	0	; () banked
  6906  0013E2  17F8               	andwf	(___fttol@f1+1)& (0+255),f,b
  6907  0013E4  0E00               	movlw	0
  6908  0013E6  0100               	movlb	0	; () banked
  6909  0013E8  17F9               	andwf	(___fttol@f1+2)& (0+255),f,b
  6910                           
  6911                           ; BSR set to: 0
  6912  0013EA  0100               	movlb	0	; () banked
  6913  0013EC  51F7               	movf	___fttol@f1& (0+255),w,b
  6914  0013EE  0101               	movlb	1	; () banked
  6915  0013F0  6F3A               	movwf	___fttol@lval& (0+255),b
  6916  0013F2  0100               	movlb	0	; () banked
  6917  0013F4  51F8               	movf	(___fttol@f1+1)& (0+255),w,b
  6918  0013F6  0101               	movlb	1	; () banked
  6919  0013F8  6F3B               	movwf	(___fttol@lval+1)& (0+255),b
  6920  0013FA  0100               	movlb	0	; () banked
  6921  0013FC  51F9               	movf	(___fttol@f1+2)& (0+255),w,b
  6922  0013FE  0101               	movlb	1	; () banked
  6923  001400  6F3C               	movwf	(___fttol@lval+2)& (0+255),b
  6924  001402  0101               	movlb	1	; () banked
  6925  001404  6B3D               	clrf	(___fttol@lval+3)& (0+255),b
  6926                           
  6927                           ; BSR set to: 1
  6928  001406  0E8E               	movlw	142
  6929  001408  0101               	movlb	1	; () banked
  6930  00140A  5F3E               	subwf	___fttol@exp1& (0+255),f,b
  6931                           
  6932                           ; BSR set to: 1
  6933  00140C  0101               	movlb	1	; () banked
  6934  00140E  AF3E               	btfss	___fttol@exp1& (0+255),7,b
  6935  001410  D01A               	goto	l6454
  6936                           
  6937                           ; BSR set to: 1
  6938  001412  0101               	movlb	1	; () banked
  6939  001414  513E               	movf	___fttol@exp1& (0+255),w,b
  6940  001416  0A80               	xorlw	128
  6941  001418  0F8F               	addlw	143
  6942  00141A  B0D8               	btfsc	status,0,c
  6943  00141C  D00A               	goto	l6450
  6944                           
  6945                           ; BSR set to: 1
  6946  00141E  0E00               	movlw	0
  6947  001420  0100               	movlb	0	; () banked
  6948  001422  6FF7               	movwf	?___fttol& (0+255),b
  6949  001424  0E00               	movlw	0
  6950  001426  6FF8               	movwf	(?___fttol+1)& (0+255),b
  6951  001428  0E00               	movlw	0
  6952  00142A  6FF9               	movwf	(?___fttol+2)& (0+255),b
  6953  00142C  0E00               	movlw	0
  6954  00142E  6FFA               	movwf	(?___fttol+3)& (0+255),b
  6955                           
  6956                           ; BSR set to: 0
  6957  001430  0012               	return	
  6958  001432                     l6450:
  6959  001432  0101               	movlb	1	; () banked
  6960  001434  90D8               	bcf	status,0,c
  6961  001436  333D               	rrcf	(___fttol@lval+3)& (0+255),f,b
  6962  001438  333C               	rrcf	(___fttol@lval+2)& (0+255),f,b
  6963  00143A  333B               	rrcf	(___fttol@lval+1)& (0+255),f,b
  6964  00143C  333A               	rrcf	___fttol@lval& (0+255),f,b
  6965                           
  6966                           ; BSR set to: 1
  6967  00143E  0101               	movlb	1	; () banked
  6968  001440  3F3E               	incfsz	___fttol@exp1& (0+255),f,b
  6969  001442  D7F7               	goto	l6450
  6970                           
  6971                           ; BSR set to: 1
  6972  001444  D01B               	goto	l6464
  6973  001446                     l6454:
  6974                           
  6975                           ; BSR set to: 1
  6976  001446  0E17               	movlw	23
  6977  001448  0101               	movlb	1	; () banked
  6978  00144A  653E               	cpfsgt	___fttol@exp1& (0+255),b
  6979  00144C  D012               	goto	l6462
  6980                           
  6981                           ; BSR set to: 1
  6982  00144E  0E00               	movlw	0
  6983  001450  0100               	movlb	0	; () banked
  6984  001452  6FF7               	movwf	?___fttol& (0+255),b
  6985  001454  0E00               	movlw	0
  6986  001456  6FF8               	movwf	(?___fttol+1)& (0+255),b
  6987  001458  0E00               	movlw	0
  6988  00145A  6FF9               	movwf	(?___fttol+2)& (0+255),b
  6989  00145C  0E00               	movlw	0
  6990  00145E  6FFA               	movwf	(?___fttol+3)& (0+255),b
  6991                           
  6992                           ; BSR set to: 0
  6993  001460  0012               	return	
  6994  001462                     l6460:
  6995  001462  0101               	movlb	1	; () banked
  6996  001464  90D8               	bcf	status,0,c
  6997  001466  373A               	rlcf	___fttol@lval& (0+255),f,b
  6998  001468  373B               	rlcf	(___fttol@lval+1)& (0+255),f,b
  6999  00146A  373C               	rlcf	(___fttol@lval+2)& (0+255),f,b
  7000  00146C  373D               	rlcf	(___fttol@lval+3)& (0+255),f,b
  7001  00146E  0101               	movlb	1	; () banked
  7002  001470  073E               	decf	___fttol@exp1& (0+255),f,b
  7003  001472                     l6462:
  7004  001472  0101               	movlb	1	; () banked
  7005  001474  513E               	movf	___fttol@exp1& (0+255),w,b
  7006  001476  0101               	movlb	1	; () banked
  7007  001478  A4D8               	btfss	status,2,c
  7008  00147A  D7F3               	goto	l6460
  7009  00147C                     l6464:
  7010                           
  7011                           ; BSR set to: 1
  7012  00147C  0101               	movlb	1	; () banked
  7013  00147E  5139               	movf	___fttol@sign1& (0+255),w,b
  7014  001480  0101               	movlb	1	; () banked
  7015  001482  B4D8               	btfsc	status,2,c
  7016  001484  D009               	goto	l6468
  7017                           
  7018                           ; BSR set to: 1
  7019  001486  0101               	movlb	1	; () banked
  7020  001488  1F3D               	comf	(___fttol@lval+3)& (0+255),f,b
  7021  00148A  1F3C               	comf	(___fttol@lval+2)& (0+255),f,b
  7022  00148C  1F3B               	comf	(___fttol@lval+1)& (0+255),f,b
  7023  00148E  6D3A               	negf	___fttol@lval& (0+255),b
  7024  001490  0E00               	movlw	0
  7025  001492  233B               	addwfc	(___fttol@lval+1)& (0+255),f,b
  7026  001494  233C               	addwfc	(___fttol@lval+2)& (0+255),f,b
  7027  001496  233D               	addwfc	(___fttol@lval+3)& (0+255),f,b
  7028  001498                     l6468:
  7029                           
  7030                           ; BSR set to: 1
  7031  001498  C13A  F0F7         	movff	___fttol@lval,?___fttol
  7032  00149C  C13B  F0F8         	movff	___fttol@lval+1,?___fttol+1
  7033  0014A0  C13C  F0F9         	movff	___fttol@lval+2,?___fttol+2
  7034  0014A4  C13D  F0FA         	movff	___fttol@lval+3,?___fttol+3
  7035  0014A8  0012               	return	
  7036  0014AA                     __end_of___fttol:
  7037                           	opt stack 0
  7038                           tosu	equ	0xFFF
  7039                           tosh	equ	0xFFE
  7040                           tosl	equ	0xFFD
  7041                           pclath	equ	0xFFA
  7042                           tblptru	equ	0xFF8
  7043                           tblptrh	equ	0xFF7
  7044                           tblptrl	equ	0xFF6
  7045                           tablat	equ	0xFF5
  7046                           prodh	equ	0xFF4
  7047                           prodl	equ	0xFF3
  7048                           intcon	equ	0xFF2
  7049                           postinc0	equ	0xFEE
  7050                           wreg	equ	0xFE8
  7051                           indf2	equ	0xFDF
  7052                           postinc2	equ	0xFDE
  7053                           postdec2	equ	0xFDD
  7054                           plusw2	equ	0xFDB
  7055                           fsr2h	equ	0xFDA
  7056                           fsr2l	equ	0xFD9
  7057                           status	equ	0xFD8
  7058                           
  7059 ;; *************** function ___ftmul *****************
  7060 ;; Defined at:
  7061 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
  7062 ;; Parameters:    Size  Location     Type
  7063 ;;  f1              3   37[COMRAM] float 
  7064 ;;  f2              3   40[COMRAM] float 
  7065 ;; Auto vars:     Size  Location     Type
  7066 ;;  f3_as_produc    3    4[BANK0 ] unsigned um
  7067 ;;  sign            1    8[BANK0 ] unsigned char 
  7068 ;;  cntr            1    7[BANK0 ] unsigned char 
  7069 ;;  exp             1    3[BANK0 ] unsigned char 
  7070 ;; Return value:  Size  Location     Type
  7071 ;;                  3   37[COMRAM] float 
  7072 ;; Registers used:
  7073 ;;		wreg, status,2, status,0, cstack
  7074 ;; Tracked objects:
  7075 ;;		On entry : 0/0
  7076 ;;		On exit  : 0/0
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7079 ;;      Params:         6       0       0       0       0       0       0
  7080 ;;      Locals:         0       6       0       0       0       0       0
  7081 ;;      Temps:          0       3       0       0       0       0       0
  7082 ;;      Totals:         6       9       0       0       0       0       0
  7083 ;;Total ram usage:       15 bytes
  7084 ;; Hardware stack levels used:    1
  7085 ;; Hardware stack levels required when called:    5
  7086 ;; This function calls:
  7087 ;;		___ftpack
  7088 ;; This function is called by:
  7089 ;;		_main
  7090 ;; This function uses a non-reentrant model
  7091 ;;
  7092                           
  7093                           	psect	text33
  7094  0015DA                     __ptext33:
  7095                           	opt stack 0
  7096  0015DA                     ___ftmul:
  7097                           	opt stack 25
  7098                           
  7099                           ;incstack = 0
  7100  0015DA  C028  F0EE         	movff	___ftmul@f1+2,??___ftmul
  7101  0015DE  0100               	movlb	0	; () banked
  7102  0015E0  6BEF               	clrf	(??___ftmul+1)& (0+255),b
  7103  0015E2  6BF0               	clrf	(??___ftmul+2)& (0+255),b
  7104  0015E4  3427               	rlcf	___ftmul@f1+1,w,c
  7105  0015E6  0100               	movlb	0	; () banked
  7106  0015E8  37EE               	rlcf	??___ftmul& (0+255),f,b
  7107  0015EA  E301               	bnc	u7101
  7108  0015EC  81EF               	bsf	(??___ftmul+1)& (0+255),0,b
  7109  0015EE                     u7101:
  7110  0015EE  0100               	movlb	0	; () banked
  7111  0015F0  51EE               	movf	??___ftmul& (0+255),w,b
  7112  0015F2  0100               	movlb	0	; () banked
  7113  0015F4  6FF1               	movwf	___ftmul@exp& (0+255),b
  7114  0015F6  0100               	movlb	0	; () banked
  7115  0015F8  51F1               	movf	___ftmul@exp& (0+255),w,b
  7116  0015FA  A4D8               	btfss	status,2,c
  7117  0015FC  D007               	goto	l6384
  7118                           
  7119                           ; BSR set to: 0
  7120  0015FE  0E00               	movlw	0
  7121  001600  6E26               	movwf	?___ftmul,c
  7122  001602  0E00               	movlw	0
  7123  001604  6E27               	movwf	?___ftmul+1,c
  7124  001606  0E00               	movlw	0
  7125  001608  6E28               	movwf	?___ftmul+2,c
  7126                           
  7127                           ; BSR set to: 0
  7128  00160A  0012               	return	
  7129  00160C                     l6384:
  7130                           
  7131                           ; BSR set to: 0
  7132  00160C  C02B  F0EE         	movff	___ftmul@f2+2,??___ftmul
  7133  001610  0100               	movlb	0	; () banked
  7134  001612  6BEF               	clrf	(??___ftmul+1)& (0+255),b
  7135  001614  6BF0               	clrf	(??___ftmul+2)& (0+255),b
  7136  001616  342A               	rlcf	___ftmul@f2+1,w,c
  7137  001618  0100               	movlb	0	; () banked
  7138  00161A  37EE               	rlcf	??___ftmul& (0+255),f,b
  7139  00161C  E301               	bnc	u7121
  7140  00161E  81EF               	bsf	(??___ftmul+1)& (0+255),0,b
  7141  001620                     u7121:
  7142  001620  0100               	movlb	0	; () banked
  7143  001622  51EE               	movf	??___ftmul& (0+255),w,b
  7144  001624  0100               	movlb	0	; () banked
  7145  001626  6FF6               	movwf	___ftmul@sign& (0+255),b
  7146  001628  0100               	movlb	0	; () banked
  7147  00162A  51F6               	movf	___ftmul@sign& (0+255),w,b
  7148  00162C  A4D8               	btfss	status,2,c
  7149  00162E  D007               	goto	l6390
  7150                           
  7151                           ; BSR set to: 0
  7152  001630  0E00               	movlw	0
  7153  001632  6E26               	movwf	?___ftmul,c
  7154  001634  0E00               	movlw	0
  7155  001636  6E27               	movwf	?___ftmul+1,c
  7156  001638  0E00               	movlw	0
  7157  00163A  6E28               	movwf	?___ftmul+2,c
  7158                           
  7159                           ; BSR set to: 0
  7160  00163C  0012               	return	
  7161  00163E                     l6390:
  7162                           
  7163                           ; BSR set to: 0
  7164  00163E  0100               	movlb	0	; () banked
  7165  001640  51F6               	movf	___ftmul@sign& (0+255),w,b
  7166  001642  0F7B               	addlw	123
  7167  001644  0100               	movlb	0	; () banked
  7168  001646  27F1               	addwf	___ftmul@exp& (0+255),f,b
  7169                           
  7170                           ; BSR set to: 0
  7171  001648  C028  F0F6         	movff	___ftmul@f1+2,___ftmul@sign
  7172  00164C  502B               	movf	___ftmul@f2+2,w,c
  7173  00164E  0100               	movlb	0	; () banked
  7174  001650  1BF6               	xorwf	___ftmul@sign& (0+255),f,b
  7175  001652  0E80               	movlw	128
  7176  001654  0100               	movlb	0	; () banked
  7177  001656  17F6               	andwf	___ftmul@sign& (0+255),f,b
  7178                           
  7179                           ; BSR set to: 0
  7180  001658  8E27               	bsf	___ftmul@f1+1,7,c
  7181                           
  7182                           ; BSR set to: 0
  7183  00165A  8E2A               	bsf	___ftmul@f2+1,7,c
  7184                           
  7185                           ; BSR set to: 0
  7186  00165C  0EFF               	movlw	255
  7187  00165E  1629               	andwf	___ftmul@f2,f,c
  7188  001660  0EFF               	movlw	255
  7189  001662  162A               	andwf	___ftmul@f2+1,f,c
  7190  001664  0E00               	movlw	0
  7191  001666  162B               	andwf	___ftmul@f2+2,f,c
  7192                           
  7193                           ; BSR set to: 0
  7194  001668  0E00               	movlw	0
  7195  00166A  0100               	movlb	0	; () banked
  7196  00166C  6FF2               	movwf	___ftmul@f3_as_product& (0+255),b
  7197  00166E  0E00               	movlw	0
  7198  001670  0100               	movlb	0	; () banked
  7199  001672  6FF3               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  7200  001674  0E00               	movlw	0
  7201  001676  0100               	movlb	0	; () banked
  7202  001678  6FF4               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  7203                           
  7204                           ; BSR set to: 0
  7205  00167A  0E07               	movlw	7
  7206  00167C  0100               	movlb	0	; () banked
  7207  00167E  6FF5               	movwf	___ftmul@cntr& (0+255),b
  7208  001680                     l6404:
  7209                           
  7210                           ; BSR set to: 0
  7211  001680  A026               	btfss	___ftmul@f1,0,c
  7212  001682  D009               	goto	l6408
  7213                           
  7214                           ; BSR set to: 0
  7215  001684  5029               	movf	___ftmul@f2,w,c
  7216  001686  0100               	movlb	0	; () banked
  7217  001688  27F2               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7218  00168A  502A               	movf	___ftmul@f2+1,w,c
  7219  00168C  0100               	movlb	0	; () banked
  7220  00168E  23F3               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7221  001690  502B               	movf	___ftmul@f2+2,w,c
  7222  001692  0100               	movlb	0	; () banked
  7223  001694  23F4               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7224  001696                     l6408:
  7225                           
  7226                           ; BSR set to: 0
  7227  001696  90D8               	bcf	status,0,c
  7228  001698  3228               	rrcf	___ftmul@f1+2,f,c
  7229  00169A  3227               	rrcf	___ftmul@f1+1,f,c
  7230  00169C  3226               	rrcf	___ftmul@f1,f,c
  7231  00169E  90D8               	bcf	status,0,c
  7232  0016A0  3629               	rlcf	___ftmul@f2,f,c
  7233  0016A2  362A               	rlcf	___ftmul@f2+1,f,c
  7234  0016A4  362B               	rlcf	___ftmul@f2+2,f,c
  7235                           
  7236                           ; BSR set to: 0
  7237  0016A6  0100               	movlb	0	; () banked
  7238  0016A8  2FF5               	decfsz	___ftmul@cntr& (0+255),f,b
  7239  0016AA  D7EA               	goto	l6404
  7240                           
  7241                           ; BSR set to: 0
  7242                           
  7243                           ; BSR set to: 0
  7244  0016AC  0E09               	movlw	9
  7245  0016AE  0100               	movlb	0	; () banked
  7246  0016B0  6FF5               	movwf	___ftmul@cntr& (0+255),b
  7247  0016B2                     l6414:
  7248                           
  7249                           ; BSR set to: 0
  7250  0016B2  A026               	btfss	___ftmul@f1,0,c
  7251  0016B4  D009               	goto	l6418
  7252                           
  7253                           ; BSR set to: 0
  7254  0016B6  5029               	movf	___ftmul@f2,w,c
  7255  0016B8  0100               	movlb	0	; () banked
  7256  0016BA  27F2               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7257  0016BC  502A               	movf	___ftmul@f2+1,w,c
  7258  0016BE  0100               	movlb	0	; () banked
  7259  0016C0  23F3               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7260  0016C2  502B               	movf	___ftmul@f2+2,w,c
  7261  0016C4  0100               	movlb	0	; () banked
  7262  0016C6  23F4               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7263  0016C8                     l6418:
  7264                           
  7265                           ; BSR set to: 0
  7266  0016C8  90D8               	bcf	status,0,c
  7267  0016CA  3228               	rrcf	___ftmul@f1+2,f,c
  7268  0016CC  3227               	rrcf	___ftmul@f1+1,f,c
  7269  0016CE  3226               	rrcf	___ftmul@f1,f,c
  7270  0016D0  0100               	movlb	0	; () banked
  7271  0016D2  90D8               	bcf	status,0,c
  7272  0016D4  33F4               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  7273  0016D6  33F3               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  7274  0016D8  33F2               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  7275                           
  7276                           ; BSR set to: 0
  7277  0016DA  0100               	movlb	0	; () banked
  7278  0016DC  2FF5               	decfsz	___ftmul@cntr& (0+255),f,b
  7279  0016DE  D7E9               	goto	l6414
  7280                           
  7281                           ; BSR set to: 0
  7282                           
  7283                           ; BSR set to: 0
  7284  0016E0  C0F2  F01B         	movff	___ftmul@f3_as_product,___ftpack@arg
  7285  0016E4  C0F3  F01C         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7286  0016E8  C0F4  F01D         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7287  0016EC  C0F1  F01E         	movff	___ftmul@exp,___ftpack@exp
  7288  0016F0  C0F6  F01F         	movff	___ftmul@sign,___ftpack@sign
  7289  0016F4  EC3B  F010         	call	___ftpack	;wreg free
  7290  0016F8  C01B  F026         	movff	?___ftpack,?___ftmul
  7291  0016FC  C01C  F027         	movff	?___ftpack+1,?___ftmul+1
  7292  001700  C01D  F028         	movff	?___ftpack+2,?___ftmul+2
  7293  001704  0012               	return	
  7294  001706                     __end_of___ftmul:
  7295                           	opt stack 0
  7296                           tosu	equ	0xFFF
  7297                           tosh	equ	0xFFE
  7298                           tosl	equ	0xFFD
  7299                           pclath	equ	0xFFA
  7300                           tblptru	equ	0xFF8
  7301                           tblptrh	equ	0xFF7
  7302                           tblptrl	equ	0xFF6
  7303                           tablat	equ	0xFF5
  7304                           prodh	equ	0xFF4
  7305                           prodl	equ	0xFF3
  7306                           intcon	equ	0xFF2
  7307                           postinc0	equ	0xFEE
  7308                           wreg	equ	0xFE8
  7309                           indf2	equ	0xFDF
  7310                           postinc2	equ	0xFDE
  7311                           postdec2	equ	0xFDD
  7312                           plusw2	equ	0xFDB
  7313                           fsr2h	equ	0xFDA
  7314                           fsr2l	equ	0xFD9
  7315                           status	equ	0xFD8
  7316                           
  7317 ;; *************** function ___ftpack *****************
  7318 ;; Defined at:
  7319 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  7320 ;; Parameters:    Size  Location     Type
  7321 ;;  arg             3   26[COMRAM] unsigned um
  7322 ;;  exp             1   29[COMRAM] unsigned char 
  7323 ;;  sign            1   30[COMRAM] unsigned char 
  7324 ;; Auto vars:     Size  Location     Type
  7325 ;;		None
  7326 ;; Return value:  Size  Location     Type
  7327 ;;                  3   26[COMRAM] float 
  7328 ;; Registers used:
  7329 ;;		wreg, status,2, status,0
  7330 ;; Tracked objects:
  7331 ;;		On entry : 0/0
  7332 ;;		On exit  : 0/0
  7333 ;;		Unchanged: 0/0
  7334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7335 ;;      Params:         5       0       0       0       0       0       0
  7336 ;;      Locals:         0       0       0       0       0       0       0
  7337 ;;      Temps:          3       0       0       0       0       0       0
  7338 ;;      Totals:         8       0       0       0       0       0       0
  7339 ;;Total ram usage:        8 bytes
  7340 ;; Hardware stack levels used:    1
  7341 ;; Hardware stack levels required when called:    4
  7342 ;; This function calls:
  7343 ;;		Nothing
  7344 ;; This function is called by:
  7345 ;;		___ftmul
  7346 ;;		___lwtoft
  7347 ;; This function uses a non-reentrant model
  7348 ;;
  7349                           
  7350                           	psect	text34
  7351  002076                     __ptext34:
  7352                           	opt stack 0
  7353  002076                     ___ftpack:
  7354                           	opt stack 25
  7355                           
  7356                           ;incstack = 0
  7357  002076  501E               	movf	___ftpack@exp,w,c
  7358  002078  B4D8               	btfsc	status,2,c
  7359  00207A  D005               	goto	l6056
  7360  00207C  501B               	movf	___ftpack@arg,w,c
  7361  00207E  101C               	iorwf	___ftpack@arg+1,w,c
  7362  002080  101D               	iorwf	___ftpack@arg+2,w,c
  7363  002082  A4D8               	btfss	status,2,c
  7364  002084  D00C               	goto	l6062
  7365  002086                     l6056:
  7366  002086  0E00               	movlw	0
  7367  002088  6E1B               	movwf	?___ftpack,c
  7368  00208A  0E00               	movlw	0
  7369  00208C  6E1C               	movwf	?___ftpack+1,c
  7370  00208E  0E00               	movlw	0
  7371  002090  6E1D               	movwf	?___ftpack+2,c
  7372  002092  0012               	return	
  7373  002094                     l6060:
  7374  002094  2A1E               	incf	___ftpack@exp,f,c
  7375  002096  90D8               	bcf	status,0,c
  7376  002098  321D               	rrcf	___ftpack@arg+2,f,c
  7377  00209A  321C               	rrcf	___ftpack@arg+1,f,c
  7378  00209C  321B               	rrcf	___ftpack@arg,f,c
  7379  00209E                     l6062:
  7380  00209E  0E00               	movlw	0
  7381  0020A0  141B               	andwf	___ftpack@arg,w,c
  7382  0020A2  6E20               	movwf	??___ftpack& (0+255),c
  7383  0020A4  0E00               	movlw	0
  7384  0020A6  141C               	andwf	___ftpack@arg+1,w,c
  7385  0020A8  6E21               	movwf	(??___ftpack+1)& (0+255),c
  7386  0020AA  0EFE               	movlw	254
  7387  0020AC  141D               	andwf	___ftpack@arg+2,w,c
  7388  0020AE  6E22               	movwf	(??___ftpack+2)& (0+255),c
  7389  0020B0  5020               	movf	??___ftpack,w,c
  7390  0020B2  1021               	iorwf	??___ftpack+1,w,c
  7391  0020B4  1022               	iorwf	??___ftpack+2,w,c
  7392  0020B6  B4D8               	btfsc	status,2,c
  7393  0020B8  D00C               	goto	l6068
  7394  0020BA  D7EC               	goto	l6060
  7395  0020BC                     l6064:
  7396  0020BC  2A1E               	incf	___ftpack@exp,f,c
  7397  0020BE  0E01               	movlw	1
  7398  0020C0  261B               	addwf	___ftpack@arg,f,c
  7399  0020C2  0E00               	movlw	0
  7400  0020C4  221C               	addwfc	___ftpack@arg+1,f,c
  7401  0020C6  0E00               	movlw	0
  7402  0020C8  221D               	addwfc	___ftpack@arg+2,f,c
  7403  0020CA  90D8               	bcf	status,0,c
  7404  0020CC  321D               	rrcf	___ftpack@arg+2,f,c
  7405  0020CE  321C               	rrcf	___ftpack@arg+1,f,c
  7406  0020D0  321B               	rrcf	___ftpack@arg,f,c
  7407  0020D2                     l6068:
  7408  0020D2  0E00               	movlw	0
  7409  0020D4  141B               	andwf	___ftpack@arg,w,c
  7410  0020D6  6E20               	movwf	??___ftpack& (0+255),c
  7411  0020D8  0E00               	movlw	0
  7412  0020DA  141C               	andwf	___ftpack@arg+1,w,c
  7413  0020DC  6E21               	movwf	(??___ftpack+1)& (0+255),c
  7414  0020DE  0EFF               	movlw	255
  7415  0020E0  141D               	andwf	___ftpack@arg+2,w,c
  7416  0020E2  6E22               	movwf	(??___ftpack+2)& (0+255),c
  7417  0020E4  5020               	movf	??___ftpack,w,c
  7418  0020E6  1021               	iorwf	??___ftpack+1,w,c
  7419  0020E8  1022               	iorwf	??___ftpack+2,w,c
  7420  0020EA  B4D8               	btfsc	status,2,c
  7421  0020EC  D006               	goto	l6072
  7422  0020EE  D7E6               	goto	l6064
  7423  0020F0                     l6070:
  7424  0020F0  061E               	decf	___ftpack@exp,f,c
  7425  0020F2  90D8               	bcf	status,0,c
  7426  0020F4  361B               	rlcf	___ftpack@arg,f,c
  7427  0020F6  361C               	rlcf	___ftpack@arg+1,f,c
  7428  0020F8  361D               	rlcf	___ftpack@arg+2,f,c
  7429  0020FA                     l6072:
  7430  0020FA  BE1C               	btfsc	___ftpack@arg+1,7,c
  7431  0020FC  D003               	goto	l1363
  7432  0020FE  0E02               	movlw	2
  7433  002100  601E               	cpfslt	___ftpack@exp,c
  7434  002102  D7F6               	goto	l6070
  7435  002104                     l1363:
  7436  002104  A01E               	btfss	___ftpack@exp,0,c
  7437  002106  9E1C               	bcf	___ftpack@arg+1,7,c
  7438  002108  90D8               	bcf	status,0,c
  7439  00210A  321E               	rrcf	___ftpack@exp,f,c
  7440  00210C  501E               	movf	___ftpack@exp,w,c
  7441  00210E  121D               	iorwf	___ftpack@arg+2,f,c
  7442  002110  501F               	movf	___ftpack@sign,w,c
  7443  002112  A4D8               	btfss	status,2,c
  7444  002114  8E1D               	bsf	___ftpack@arg+2,7,c
  7445  002116  C01B  F01B         	movff	___ftpack@arg,?___ftpack
  7446  00211A  C01C  F01C         	movff	___ftpack@arg+1,?___ftpack+1
  7447  00211E  C01D  F01D         	movff	___ftpack@arg+2,?___ftpack+2
  7448  002122  0012               	return	
  7449  002124                     __end_of___ftpack:
  7450                           	opt stack 0
  7451                           tosu	equ	0xFFF
  7452                           tosh	equ	0xFFE
  7453                           tosl	equ	0xFFD
  7454                           pclath	equ	0xFFA
  7455                           tblptru	equ	0xFF8
  7456                           tblptrh	equ	0xFF7
  7457                           tblptrl	equ	0xFF6
  7458                           tablat	equ	0xFF5
  7459                           prodh	equ	0xFF4
  7460                           prodl	equ	0xFF3
  7461                           intcon	equ	0xFF2
  7462                           postinc0	equ	0xFEE
  7463                           wreg	equ	0xFE8
  7464                           indf2	equ	0xFDF
  7465                           postinc2	equ	0xFDE
  7466                           postdec2	equ	0xFDD
  7467                           plusw2	equ	0xFDB
  7468                           fsr2h	equ	0xFDA
  7469                           fsr2l	equ	0xFD9
  7470                           status	equ	0xFD8
  7471                           
  7472 ;; *************** function _SYSTEM_Initialize *****************
  7473 ;; Defined at:
  7474 ;;		line 112 in file "mcc_generated_files/mcc.c"
  7475 ;; Parameters:    Size  Location     Type
  7476 ;;		None
  7477 ;; Auto vars:     Size  Location     Type
  7478 ;;		None
  7479 ;; Return value:  Size  Location     Type
  7480 ;;		None               void
  7481 ;; Registers used:
  7482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7483 ;; Tracked objects:
  7484 ;;		On entry : 0/0
  7485 ;;		On exit  : 0/0
  7486 ;;		Unchanged: 0/0
  7487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7488 ;;      Params:         0       0       0       0       0       0       0
  7489 ;;      Locals:         0       0       0       0       0       0       0
  7490 ;;      Temps:          0       0       0       0       0       0       0
  7491 ;;      Totals:         0       0       0       0       0       0       0
  7492 ;;Total ram usage:        0 bytes
  7493 ;; Hardware stack levels used:    1
  7494 ;; Hardware stack levels required when called:    7
  7495 ;; This function calls:
  7496 ;;		_ADC_Initialize
  7497 ;;		_EUSART1_Initialize
  7498 ;;		_I2C1_Initialize
  7499 ;;		_INTERRUPT_Initialize
  7500 ;;		_OSCILLATOR_Initialize
  7501 ;;		_PIN_MANAGER_Initialize
  7502 ;;		_TMR0_Initialize
  7503 ;;		_begin
  7504 ;; This function is called by:
  7505 ;;		_main
  7506 ;; This function uses a non-reentrant model
  7507 ;;
  7508                           
  7509                           	psect	text35
  7510  00271C                     __ptext35:
  7511                           	opt stack 0
  7512  00271C                     _SYSTEM_Initialize:
  7513                           	opt stack 23
  7514                           
  7515                           ;mcc.c: 114: OSCILLATOR_Initialize();
  7516                           
  7517                           ;incstack = 0
  7518  00271C  ECF3  F016         	call	_OSCILLATOR_Initialize	;wreg free
  7519                           
  7520                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  7521  002720  EC56  F014         	call	_PIN_MANAGER_Initialize	;wreg free
  7522                           
  7523                           ;mcc.c: 116: INTERRUPT_Initialize();
  7524  002724  ECDD  F016         	call	_INTERRUPT_Initialize	;wreg free
  7525                           
  7526                           ;mcc.c: 117: ADC_Initialize();
  7527  002728  ECA7  F016         	call	_ADC_Initialize	;wreg free
  7528                           
  7529                           ;mcc.c: 118: TMR0_Initialize();
  7530  00272C  EC6D  F016         	call	_TMR0_Initialize	;wreg free
  7531                           
  7532                           ;mcc.c: 119: EUSART1_Initialize();
  7533  002730  EC4C  F015         	call	_EUSART1_Initialize	;wreg free
  7534                           
  7535                           ;mcc.c: 120: begin(receiveArray, sizeof (receiveArray), 3, 0, Send_put, Receive_get, Rec
      +                          eive_available, Receive_peek);
  7536  002734  0E00               	movlw	low _receiveArray
  7537  002736  0100               	movlb	0	; () banked
  7538  002738  6FEE               	movwf	begin@ptr& (0+255),b
  7539  00273A  0E01               	movlw	high _receiveArray
  7540  00273C  0100               	movlb	0	; () banked
  7541  00273E  6FEF               	movwf	(begin@ptr+1)& (0+255),b
  7542  002740  0E28               	movlw	40
  7543  002742  0100               	movlb	0	; () banked
  7544  002744  6FF0               	movwf	begin@maxSize& (0+255),b
  7545  002746  0E03               	movlw	3
  7546  002748  0100               	movlb	0	; () banked
  7547  00274A  6FF1               	movwf	begin@givenAddress& (0+255),b
  7548  00274C  0E00               	movlw	0
  7549  00274E  0100               	movlb	0	; () banked
  7550  002750  6FF2               	movwf	begin@error& (0+255),b
  7551  002752  0E74               	movlw	low _Send_put
  7552  002754  0100               	movlb	0	; () banked
  7553  002756  6FF3               	movwf	begin@stufftosend& (0+255),b
  7554  002758  0E2B               	movlw	high _Send_put
  7555  00275A  0100               	movlb	0	; () banked
  7556  00275C  6FF4               	movwf	(begin@stufftosend+1)& (0+255),b
  7557  00275E  0ED8               	movlw	low _Receive_get
  7558  002760  0100               	movlb	0	; () banked
  7559  002762  6FF5               	movwf	begin@stufftoreceive& (0+255),b
  7560  002764  0E2D               	movlw	high _Receive_get
  7561  002766  0100               	movlb	0	; () banked
  7562  002768  6FF6               	movwf	(begin@stufftoreceive+1)& (0+255),b
  7563  00276A  0E66               	movlw	low _Receive_available
  7564  00276C  0100               	movlb	0	; () banked
  7565  00276E  6FF7               	movwf	begin@stuffavailable& (0+255),b
  7566  002770  0E2D               	movlw	high _Receive_available
  7567  002772  0100               	movlb	0	; () banked
  7568  002774  6FF8               	movwf	(begin@stuffavailable+1)& (0+255),b
  7569  002776  0ECA               	movlw	low _Receive_peek
  7570  002778  0100               	movlb	0	; () banked
  7571  00277A  6FF9               	movwf	begin@stuffpeek& (0+255),b
  7572  00277C  0E2D               	movlw	high _Receive_peek
  7573  00277E  0100               	movlb	0	; () banked
  7574  002780  6FFA               	movwf	(begin@stuffpeek+1)& (0+255),b
  7575  002782  EC27  F014         	call	_begin	;wreg free
  7576                           
  7577                           ;mcc.c: 121: I2C1_Initialize();
  7578  002786  EC2E  F015         	call	_I2C1_Initialize	;wreg free
  7579  00278A  0012               	return		;funcret
  7580  00278C                     __end_of_SYSTEM_Initialize:
  7581                           	opt stack 0
  7582                           tosu	equ	0xFFF
  7583                           tosh	equ	0xFFE
  7584                           tosl	equ	0xFFD
  7585                           pclath	equ	0xFFA
  7586                           tblptru	equ	0xFF8
  7587                           tblptrh	equ	0xFF7
  7588                           tblptrl	equ	0xFF6
  7589                           tablat	equ	0xFF5
  7590                           prodh	equ	0xFF4
  7591                           prodl	equ	0xFF3
  7592                           intcon	equ	0xFF2
  7593                           postinc0	equ	0xFEE
  7594                           wreg	equ	0xFE8
  7595                           indf2	equ	0xFDF
  7596                           postinc2	equ	0xFDE
  7597                           postdec2	equ	0xFDD
  7598                           plusw2	equ	0xFDB
  7599                           fsr2h	equ	0xFDA
  7600                           fsr2l	equ	0xFD9
  7601                           status	equ	0xFD8
  7602                           
  7603 ;; *************** function _begin *****************
  7604 ;; Defined at:
  7605 ;;		line 18 in file "FastTransfer.c"
  7606 ;; Parameters:    Size  Location     Type
  7607 ;;  ptr             2    0[BANK0 ] PTR volatile int 
  7608 ;;		 -> receiveArray(40), 
  7609 ;;  maxSize         1    2[BANK0 ] unsigned char 
  7610 ;;  givenAddress    1    3[BANK0 ] unsigned char 
  7611 ;;  error           1    4[BANK0 ] unsigned char 
  7612 ;;  stufftosend     2    5[BANK0 ] PTR FTN(unsigned char ,)
  7613 ;;		 -> Send_put(0), 
  7614 ;;  stufftorecei    2    7[BANK0 ] PTR FTN()unsigned char 
  7615 ;;		 -> Receive_get(1), 
  7616 ;;  stuffavailab    2    9[BANK0 ] PTR FTN()int 
  7617 ;;		 -> Receive_available(2), 
  7618 ;;  stuffpeek       2   11[BANK0 ] PTR FTN()unsigned char 
  7619 ;;		 -> Receive_peek(1), 
  7620 ;; Auto vars:     Size  Location     Type
  7621 ;;		None
  7622 ;; Return value:  Size  Location     Type
  7623 ;;		None               void
  7624 ;; Registers used:
  7625 ;;		wreg, status,2, status,0, cstack
  7626 ;; Tracked objects:
  7627 ;;		On entry : 0/0
  7628 ;;		On exit  : 0/0
  7629 ;;		Unchanged: 0/0
  7630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7631 ;;      Params:         0      13       0       0       0       0       0
  7632 ;;      Locals:         0       0       0       0       0       0       0
  7633 ;;      Temps:          0       0       0       0       0       0       0
  7634 ;;      Totals:         0      13       0       0       0       0       0
  7635 ;;Total ram usage:       13 bytes
  7636 ;; Hardware stack levels used:    1
  7637 ;; Hardware stack levels required when called:    5
  7638 ;; This function calls:
  7639 ;;		___awdiv
  7640 ;; This function is called by:
  7641 ;;		_SYSTEM_Initialize
  7642 ;; This function uses a non-reentrant model
  7643 ;;
  7644                           
  7645                           	psect	text36
  7646  00284E                     __ptext36:
  7647                           	opt stack 0
  7648  00284E                     _begin:
  7649                           	opt stack 24
  7650                           
  7651                           ;FastTransfer.c: 19: receiveArrayAddress = ptr;
  7652                           
  7653                           ;incstack = 0
  7654  00284E  C0EE  F0D3         	movff	begin@ptr,_receiveArrayAddress
  7655  002852  C0EF  F0D4         	movff	begin@ptr+1,_receiveArrayAddress+1
  7656                           
  7657                           ;FastTransfer.c: 20: moduleAddress = givenAddress;
  7658  002856  C0F1  F03B         	movff	begin@givenAddress,_moduleAddress
  7659                           
  7660                           ;FastTransfer.c: 21: serial_write = stufftosend;
  7661  00285A  C0F3  F032         	movff	begin@stufftosend,_serial_write
  7662  00285E  C0F4  F033         	movff	begin@stufftosend+1,_serial_write+1
  7663                           
  7664                           ;FastTransfer.c: 22: serial_available = stuffavailable;
  7665  002862  C0F7  F02E         	movff	begin@stuffavailable,_serial_available
  7666  002866  C0F8  F02F         	movff	begin@stuffavailable+1,_serial_available+1
  7667                           
  7668                           ;FastTransfer.c: 23: serial_peek = stuffpeek;
  7669  00286A  C0F9  F0D7         	movff	begin@stuffpeek,_serial_peek
  7670  00286E  C0FA  F0D8         	movff	begin@stuffpeek+1,_serial_peek+1
  7671                           
  7672                           ;FastTransfer.c: 24: serial_read = stufftoreceive;
  7673  002872  C0F5  F030         	movff	begin@stufftoreceive,_serial_read
  7674  002876  C0F6  F031         	movff	begin@stufftoreceive+1,_serial_read+1
  7675                           
  7676                           ;FastTransfer.c: 25: maxDataAddress = maxSize / 2;
  7677  00287A  C0F0  F01B         	movff	begin@maxSize,___awdiv@dividend
  7678  00287E  6A1C               	clrf	___awdiv@dividend+1,c
  7679  002880  0E00               	movlw	0
  7680  002882  6E1E               	movwf	___awdiv@divisor+1,c
  7681  002884  0E02               	movlw	2
  7682  002886  6E1D               	movwf	___awdiv@divisor,c
  7683  002888  EC9E  F012         	call	___awdiv	;wreg free
  7684  00288C  501B               	movf	?___awdiv,w,c
  7685  00288E  6E3A               	movwf	_maxDataAddress,c
  7686                           
  7687                           ;FastTransfer.c: 26: sendStructAddress = (unsigned char*) & ring_buffer;
  7688  002890  0E00               	movlw	low _ring_buffer
  7689  002892  0100               	movlb	0	; () banked
  7690  002894  6FD5               	movwf	_sendStructAddress& (0+255),b
  7691  002896  0E02               	movlw	high _ring_buffer
  7692  002898  0100               	movlb	0	; () banked
  7693  00289A  6FD6               	movwf	(_sendStructAddress+1)& (0+255),b
  7694                           
  7695                           ; BSR set to: 0
  7696                           ;FastTransfer.c: 27: AKNAKsend = error;
  7697  00289C  C0F2  F036         	movff	begin@error,_AKNAKsend
  7698                           
  7699                           ; BSR set to: 0
  7700                           ;FastTransfer.c: 28: alignErrorCounter = 0;
  7701  0028A0  0E00               	movlw	0
  7702  0028A2  0100               	movlb	0	; () banked
  7703  0028A4  6FC8               	movwf	(_alignErrorCounter+1)& (0+255),b
  7704  0028A6  0E00               	movlw	0
  7705  0028A8  6FC7               	movwf	_alignErrorCounter& (0+255),b
  7706                           
  7707                           ; BSR set to: 0
  7708  0028AA  0012               	return		;funcret
  7709  0028AC                     __end_of_begin:
  7710                           	opt stack 0
  7711                           tosu	equ	0xFFF
  7712                           tosh	equ	0xFFE
  7713                           tosl	equ	0xFFD
  7714                           pclath	equ	0xFFA
  7715                           tblptru	equ	0xFF8
  7716                           tblptrh	equ	0xFF7
  7717                           tblptrl	equ	0xFF6
  7718                           tablat	equ	0xFF5
  7719                           prodh	equ	0xFF4
  7720                           prodl	equ	0xFF3
  7721                           intcon	equ	0xFF2
  7722                           postinc0	equ	0xFEE
  7723                           wreg	equ	0xFE8
  7724                           indf2	equ	0xFDF
  7725                           postinc2	equ	0xFDE
  7726                           postdec2	equ	0xFDD
  7727                           plusw2	equ	0xFDB
  7728                           fsr2h	equ	0xFDA
  7729                           fsr2l	equ	0xFD9
  7730                           status	equ	0xFD8
  7731                           
  7732 ;; *************** function _TMR0_Initialize *****************
  7733 ;; Defined at:
  7734 ;;		line 22 in file "mcc_generated_files/tmr0.c"
  7735 ;; Parameters:    Size  Location     Type
  7736 ;;		None
  7737 ;; Auto vars:     Size  Location     Type
  7738 ;;		None
  7739 ;; Return value:  Size  Location     Type
  7740 ;;		None               void
  7741 ;; Registers used:
  7742 ;;		wreg, status,2, cstack
  7743 ;; Tracked objects:
  7744 ;;		On entry : 0/0
  7745 ;;		On exit  : 0/0
  7746 ;;		Unchanged: 0/0
  7747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7748 ;;      Params:         0       0       0       0       0       0       0
  7749 ;;      Locals:         0       0       0       0       0       0       0
  7750 ;;      Temps:          0       0       0       0       0       0       0
  7751 ;;      Totals:         0       0       0       0       0       0       0
  7752 ;;Total ram usage:        0 bytes
  7753 ;; Hardware stack levels used:    1
  7754 ;; Hardware stack levels required when called:    5
  7755 ;; This function calls:
  7756 ;;		_TMR0_StartTimer
  7757 ;; This function is called by:
  7758 ;;		_SYSTEM_Initialize
  7759 ;; This function uses a non-reentrant model
  7760 ;;
  7761                           
  7762                           	psect	text37
  7763  002CDA                     __ptext37:
  7764                           	opt stack 0
  7765  002CDA                     _TMR0_Initialize:
  7766                           	opt stack 24
  7767                           
  7768                           ;tmr0.c: 26: T0CON = 0x94;
  7769                           
  7770                           ; BSR set to: 0
  7771                           ;incstack = 0
  7772  002CDA  0E94               	movlw	148
  7773  002CDC  6ED5               	movwf	4053,c	;volatile
  7774                           
  7775                           ;tmr0.c: 29: TMR0H = 0xCF;
  7776  002CDE  0ECF               	movlw	207
  7777  002CE0  6ED7               	movwf	4055,c	;volatile
  7778                           
  7779                           ;tmr0.c: 32: TMR0L = 0x2C;
  7780  002CE2  0E2C               	movlw	44
  7781  002CE4  6ED6               	movwf	4054,c	;volatile
  7782                           
  7783                           ;tmr0.c: 35: timer0ReloadVal16bit = 53036;
  7784  002CE6  0ECF               	movlw	207
  7785  002CE8  6E43               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  7786  002CEA  0E2C               	movlw	44
  7787  002CEC  6E42               	movwf	_timer0ReloadVal16bit,c	;volatile
  7788                           
  7789                           ;tmr0.c: 38: INTCONbits.TMR0IF = 0;
  7790  002CEE  94F2               	bcf	intcon,2,c	;volatile
  7791                           
  7792                           ;tmr0.c: 41: INTCONbits.TMR0IE = 1;
  7793  002CF0  8AF2               	bsf	intcon,5,c	;volatile
  7794                           
  7795                           ;tmr0.c: 44: TMR0_StartTimer();
  7796  002CF2  ECFA  F016         	call	_TMR0_StartTimer	;wreg free
  7797  002CF6  0012               	return		;funcret
  7798  002CF8                     __end_of_TMR0_Initialize:
  7799                           	opt stack 0
  7800                           tosu	equ	0xFFF
  7801                           tosh	equ	0xFFE
  7802                           tosl	equ	0xFFD
  7803                           pclath	equ	0xFFA
  7804                           tblptru	equ	0xFF8
  7805                           tblptrh	equ	0xFF7
  7806                           tblptrl	equ	0xFF6
  7807                           tablat	equ	0xFF5
  7808                           prodh	equ	0xFF4
  7809                           prodl	equ	0xFF3
  7810                           intcon	equ	0xFF2
  7811                           postinc0	equ	0xFEE
  7812                           wreg	equ	0xFE8
  7813                           indf2	equ	0xFDF
  7814                           postinc2	equ	0xFDE
  7815                           postdec2	equ	0xFDD
  7816                           plusw2	equ	0xFDB
  7817                           fsr2h	equ	0xFDA
  7818                           fsr2l	equ	0xFD9
  7819                           status	equ	0xFD8
  7820                           
  7821 ;; *************** function _TMR0_StartTimer *****************
  7822 ;; Defined at:
  7823 ;;		line 47 in file "mcc_generated_files/tmr0.c"
  7824 ;; Parameters:    Size  Location     Type
  7825 ;;		None
  7826 ;; Auto vars:     Size  Location     Type
  7827 ;;		None
  7828 ;; Return value:  Size  Location     Type
  7829 ;;		None               void
  7830 ;; Registers used:
  7831 ;;		None
  7832 ;; Tracked objects:
  7833 ;;		On entry : 0/0
  7834 ;;		On exit  : 0/0
  7835 ;;		Unchanged: 0/0
  7836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7837 ;;      Params:         0       0       0       0       0       0       0
  7838 ;;      Locals:         0       0       0       0       0       0       0
  7839 ;;      Temps:          0       0       0       0       0       0       0
  7840 ;;      Totals:         0       0       0       0       0       0       0
  7841 ;;Total ram usage:        0 bytes
  7842 ;; Hardware stack levels used:    1
  7843 ;; Hardware stack levels required when called:    4
  7844 ;; This function calls:
  7845 ;;		Nothing
  7846 ;; This function is called by:
  7847 ;;		_TMR0_Initialize
  7848 ;; This function uses a non-reentrant model
  7849 ;;
  7850                           
  7851                           	psect	text38
  7852  002DF4                     __ptext38:
  7853                           	opt stack 0
  7854  002DF4                     _TMR0_StartTimer:
  7855                           	opt stack 24
  7856                           
  7857                           ;tmr0.c: 49: T0CONbits.TMR0ON = 1;
  7858                           
  7859                           ;incstack = 0
  7860  002DF4  8ED5               	bsf	4053,7,c	;volatile
  7861  002DF6  0012               	return		;funcret
  7862  002DF8                     __end_of_TMR0_StartTimer:
  7863                           	opt stack 0
  7864                           tosu	equ	0xFFF
  7865                           tosh	equ	0xFFE
  7866                           tosl	equ	0xFFD
  7867                           pclath	equ	0xFFA
  7868                           tblptru	equ	0xFF8
  7869                           tblptrh	equ	0xFF7
  7870                           tblptrl	equ	0xFF6
  7871                           tablat	equ	0xFF5
  7872                           prodh	equ	0xFF4
  7873                           prodl	equ	0xFF3
  7874                           intcon	equ	0xFF2
  7875                           postinc0	equ	0xFEE
  7876                           wreg	equ	0xFE8
  7877                           indf2	equ	0xFDF
  7878                           postinc2	equ	0xFDE
  7879                           postdec2	equ	0xFDD
  7880                           plusw2	equ	0xFDB
  7881                           fsr2h	equ	0xFDA
  7882                           fsr2l	equ	0xFD9
  7883                           status	equ	0xFD8
  7884                           
  7885 ;; *************** function _PIN_MANAGER_Initialize *****************
  7886 ;; Defined at:
  7887 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  7888 ;; Parameters:    Size  Location     Type
  7889 ;;		None
  7890 ;; Auto vars:     Size  Location     Type
  7891 ;;		None
  7892 ;; Return value:  Size  Location     Type
  7893 ;;		None               void
  7894 ;; Registers used:
  7895 ;;		wreg, status,2
  7896 ;; Tracked objects:
  7897 ;;		On entry : 0/0
  7898 ;;		On exit  : 0/0
  7899 ;;		Unchanged: 0/0
  7900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7901 ;;      Params:         0       0       0       0       0       0       0
  7902 ;;      Locals:         0       0       0       0       0       0       0
  7903 ;;      Temps:          0       0       0       0       0       0       0
  7904 ;;      Totals:         0       0       0       0       0       0       0
  7905 ;;Total ram usage:        0 bytes
  7906 ;; Hardware stack levels used:    1
  7907 ;; Hardware stack levels required when called:    4
  7908 ;; This function calls:
  7909 ;;		Nothing
  7910 ;; This function is called by:
  7911 ;;		_SYSTEM_Initialize
  7912 ;; This function uses a non-reentrant model
  7913 ;;
  7914                           
  7915                           	psect	text39
  7916  0028AC                     __ptext39:
  7917                           	opt stack 0
  7918  0028AC                     _PIN_MANAGER_Initialize:
  7919                           	opt stack 25
  7920                           
  7921                           ;pin_manager.c: 52: LATA = 0x00;
  7922                           
  7923                           ;incstack = 0
  7924  0028AC  0E00               	movlw	0
  7925  0028AE  6E89               	movwf	3977,c	;volatile
  7926                           
  7927                           ;pin_manager.c: 53: TRISA = 0xF7;
  7928  0028B0  0EF7               	movlw	247
  7929  0028B2  6E92               	movwf	3986,c	;volatile
  7930                           
  7931                           ;pin_manager.c: 54: ANSELA = 0x20;
  7932  0028B4  0E20               	movlw	32
  7933  0028B6  010F               	movlb	15	; () banked
  7934  0028B8  6F38               	movwf	56,b	;volatile
  7935                           
  7936                           ;pin_manager.c: 56: LATB = 0x00;
  7937  0028BA  0E00               	movlw	0
  7938  0028BC  6E8A               	movwf	3978,c	;volatile
  7939                           
  7940                           ;pin_manager.c: 57: TRISB = 0xD7;
  7941  0028BE  0ED7               	movlw	215
  7942  0028C0  6E93               	movwf	3987,c	;volatile
  7943                           
  7944                           ;pin_manager.c: 58: ANSELB = 0x00;
  7945  0028C2  0E00               	movlw	0
  7946  0028C4  010F               	movlb	15	; () banked
  7947  0028C6  6F39               	movwf	57,b	;volatile
  7948                           
  7949                           ;pin_manager.c: 59: WPUB = 0x00;
  7950  0028C8  0E00               	movlw	0
  7951  0028CA  6E61               	movwf	3937,c	;volatile
  7952                           
  7953                           ;pin_manager.c: 61: LATC = 0x18;
  7954  0028CC  0E18               	movlw	24
  7955  0028CE  6E8B               	movwf	3979,c	;volatile
  7956                           
  7957                           ;pin_manager.c: 62: TRISC = 0xDF;
  7958  0028D0  0EDF               	movlw	223
  7959  0028D2  6E94               	movwf	3988,c	;volatile
  7960                           
  7961                           ;pin_manager.c: 63: ANSELC = 0x04;
  7962  0028D4  0E04               	movlw	4
  7963  0028D6  010F               	movlb	15	; () banked
  7964  0028D8  6F3A               	movwf	58,b	;volatile
  7965                           
  7966                           ;pin_manager.c: 65: LATD = 0x00;
  7967  0028DA  0E00               	movlw	0
  7968  0028DC  6E8C               	movwf	3980,c	;volatile
  7969                           
  7970                           ;pin_manager.c: 66: TRISD = 0xFD;
  7971  0028DE  0EFD               	movlw	253
  7972  0028E0  6E95               	movwf	3989,c	;volatile
  7973                           
  7974                           ;pin_manager.c: 67: ANSELD = 0xDD;
  7975  0028E2  0EDD               	movlw	221
  7976  0028E4  010F               	movlb	15	; () banked
  7977  0028E6  6F3B               	movwf	59,b	;volatile
  7978                           
  7979                           ;pin_manager.c: 69: LATE = 0x00;
  7980  0028E8  0E00               	movlw	0
  7981  0028EA  6E8D               	movwf	3981,c	;volatile
  7982                           
  7983                           ;pin_manager.c: 70: TRISE = 0x00;
  7984  0028EC  0E00               	movlw	0
  7985  0028EE  6E96               	movwf	3990,c	;volatile
  7986                           
  7987                           ;pin_manager.c: 71: ANSELE = 0x00;
  7988  0028F0  0E00               	movlw	0
  7989  0028F2  010F               	movlb	15	; () banked
  7990  0028F4  6F3C               	movwf	60,b	;volatile
  7991                           
  7992                           ; BSR set to: 15
  7993                           ;pin_manager.c: 72: TRISCbits.TRISC5=0;
  7994  0028F6  9A94               	bcf	3988,5,c	;volatile
  7995                           
  7996                           ; BSR set to: 15
  7997                           ;pin_manager.c: 73: INTCON2bits.nRBPU = 0x01;
  7998  0028F8  8EF1               	bsf	intcon2,7,c	;volatile
  7999                           
  8000                           ; BSR set to: 15
  8001  0028FA  0012               	return		;funcret
  8002  0028FC                     __end_of_PIN_MANAGER_Initialize:
  8003                           	opt stack 0
  8004                           tosu	equ	0xFFF
  8005                           tosh	equ	0xFFE
  8006                           tosl	equ	0xFFD
  8007                           pclath	equ	0xFFA
  8008                           tblptru	equ	0xFF8
  8009                           tblptrh	equ	0xFF7
  8010                           tblptrl	equ	0xFF6
  8011                           tablat	equ	0xFF5
  8012                           prodh	equ	0xFF4
  8013                           prodl	equ	0xFF3
  8014                           intcon	equ	0xFF2
  8015                           intcon2	equ	0xFF1
  8016                           postinc0	equ	0xFEE
  8017                           wreg	equ	0xFE8
  8018                           indf2	equ	0xFDF
  8019                           postinc2	equ	0xFDE
  8020                           postdec2	equ	0xFDD
  8021                           plusw2	equ	0xFDB
  8022                           fsr2h	equ	0xFDA
  8023                           fsr2l	equ	0xFD9
  8024                           status	equ	0xFD8
  8025                           
  8026 ;; *************** function _OSCILLATOR_Initialize *****************
  8027 ;; Defined at:
  8028 ;;		line 124 in file "mcc_generated_files/mcc.c"
  8029 ;; Parameters:    Size  Location     Type
  8030 ;;		None
  8031 ;; Auto vars:     Size  Location     Type
  8032 ;;		None
  8033 ;; Return value:  Size  Location     Type
  8034 ;;		None               void
  8035 ;; Registers used:
  8036 ;;		wreg, status,2
  8037 ;; Tracked objects:
  8038 ;;		On entry : 0/0
  8039 ;;		On exit  : 0/0
  8040 ;;		Unchanged: 0/0
  8041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8042 ;;      Params:         0       0       0       0       0       0       0
  8043 ;;      Locals:         0       0       0       0       0       0       0
  8044 ;;      Temps:          0       0       0       0       0       0       0
  8045 ;;      Totals:         0       0       0       0       0       0       0
  8046 ;;Total ram usage:        0 bytes
  8047 ;; Hardware stack levels used:    1
  8048 ;; Hardware stack levels required when called:    4
  8049 ;; This function calls:
  8050 ;;		Nothing
  8051 ;; This function is called by:
  8052 ;;		_SYSTEM_Initialize
  8053 ;; This function uses a non-reentrant model
  8054 ;;
  8055                           
  8056                           	psect	text40
  8057  002DE6                     __ptext40:
  8058                           	opt stack 0
  8059  002DE6                     _OSCILLATOR_Initialize:
  8060                           	opt stack 25
  8061                           
  8062                           ;mcc.c: 127: OSCCON = 0x72;
  8063                           
  8064                           ; BSR set to: 15
  8065                           ;incstack = 0
  8066  002DE6  0E72               	movlw	114
  8067  002DE8  6ED3               	movwf	4051,c	;volatile
  8068                           
  8069                           ;mcc.c: 129: OSCCON2 = 0x04;
  8070  002DEA  0E04               	movlw	4
  8071  002DEC  6ED2               	movwf	4050,c	;volatile
  8072                           
  8073                           ;mcc.c: 131: OSCTUNE = 0x00;
  8074  002DEE  0E00               	movlw	0
  8075  002DF0  6E9B               	movwf	3995,c	;volatile
  8076  002DF2  0012               	return		;funcret
  8077  002DF4                     __end_of_OSCILLATOR_Initialize:
  8078                           	opt stack 0
  8079                           tosu	equ	0xFFF
  8080                           tosh	equ	0xFFE
  8081                           tosl	equ	0xFFD
  8082                           pclath	equ	0xFFA
  8083                           tblptru	equ	0xFF8
  8084                           tblptrh	equ	0xFF7
  8085                           tblptrl	equ	0xFF6
  8086                           tablat	equ	0xFF5
  8087                           prodh	equ	0xFF4
  8088                           prodl	equ	0xFF3
  8089                           intcon	equ	0xFF2
  8090                           intcon2	equ	0xFF1
  8091                           postinc0	equ	0xFEE
  8092                           wreg	equ	0xFE8
  8093                           indf2	equ	0xFDF
  8094                           postinc2	equ	0xFDE
  8095                           postdec2	equ	0xFDD
  8096                           plusw2	equ	0xFDB
  8097                           fsr2h	equ	0xFDA
  8098                           fsr2l	equ	0xFD9
  8099                           status	equ	0xFD8
  8100                           
  8101 ;; *************** function _INTERRUPT_Initialize *****************
  8102 ;; Defined at:
  8103 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8104 ;; Parameters:    Size  Location     Type
  8105 ;;		None
  8106 ;; Auto vars:     Size  Location     Type
  8107 ;;		None
  8108 ;; Return value:  Size  Location     Type
  8109 ;;		None               void
  8110 ;; Registers used:
  8111 ;;		None
  8112 ;; Tracked objects:
  8113 ;;		On entry : 0/0
  8114 ;;		On exit  : 0/0
  8115 ;;		Unchanged: 0/0
  8116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8117 ;;      Params:         0       0       0       0       0       0       0
  8118 ;;      Locals:         0       0       0       0       0       0       0
  8119 ;;      Temps:          0       0       0       0       0       0       0
  8120 ;;      Totals:         0       0       0       0       0       0       0
  8121 ;;Total ram usage:        0 bytes
  8122 ;; Hardware stack levels used:    1
  8123 ;; Hardware stack levels required when called:    4
  8124 ;; This function calls:
  8125 ;;		Nothing
  8126 ;; This function is called by:
  8127 ;;		_SYSTEM_Initialize
  8128 ;; This function uses a non-reentrant model
  8129 ;;
  8130                           
  8131                           	psect	text41
  8132  002DBA                     __ptext41:
  8133                           	opt stack 0
  8134  002DBA                     _INTERRUPT_Initialize:
  8135                           	opt stack 25
  8136                           
  8137                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  8138                           
  8139                           ;incstack = 0
  8140  002DBA  9ED0               	bcf	4048,7,c	;volatile
  8141                           
  8142                           ;interrupt_manager.c: 60: IPR1bits.RC1IP = 0;
  8143  002DBC  9A9F               	bcf	3999,5,c	;volatile
  8144                           
  8145                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
  8146  002DBE  989F               	bcf	3999,4,c	;volatile
  8147                           
  8148                           ;interrupt_manager.c: 64: INTCON2bits.TMR0IP = 0;
  8149  002DC0  94F1               	bcf	intcon2,2,c	;volatile
  8150                           
  8151                           ;interrupt_manager.c: 66: IPR1bits.ADIP = 0;
  8152  002DC2  9C9F               	bcf	3999,6,c	;volatile
  8153                           
  8154                           ;interrupt_manager.c: 68: IPR1bits.SSP1IP = 0;
  8155  002DC4  969F               	bcf	3999,3,c	;volatile
  8156                           
  8157                           ;interrupt_manager.c: 70: IPR2bits.BCL1IP = 0;
  8158  002DC6  96A2               	bcf	4002,3,c	;volatile
  8159  002DC8  0012               	return		;funcret
  8160  002DCA                     __end_of_INTERRUPT_Initialize:
  8161                           	opt stack 0
  8162                           tosu	equ	0xFFF
  8163                           tosh	equ	0xFFE
  8164                           tosl	equ	0xFFD
  8165                           pclath	equ	0xFFA
  8166                           tblptru	equ	0xFF8
  8167                           tblptrh	equ	0xFF7
  8168                           tblptrl	equ	0xFF6
  8169                           tablat	equ	0xFF5
  8170                           prodh	equ	0xFF4
  8171                           prodl	equ	0xFF3
  8172                           intcon	equ	0xFF2
  8173                           intcon2	equ	0xFF1
  8174                           postinc0	equ	0xFEE
  8175                           wreg	equ	0xFE8
  8176                           indf2	equ	0xFDF
  8177                           postinc2	equ	0xFDE
  8178                           postdec2	equ	0xFDD
  8179                           plusw2	equ	0xFDB
  8180                           fsr2h	equ	0xFDA
  8181                           fsr2l	equ	0xFD9
  8182                           status	equ	0xFD8
  8183                           
  8184 ;; *************** function _I2C1_Initialize *****************
  8185 ;; Defined at:
  8186 ;;		line 151 in file "mcc_generated_files/i2c1.c"
  8187 ;; Parameters:    Size  Location     Type
  8188 ;;		None
  8189 ;; Auto vars:     Size  Location     Type
  8190 ;;		None
  8191 ;; Return value:  Size  Location     Type
  8192 ;;		None               void
  8193 ;; Registers used:
  8194 ;;		wreg, status,2, status,0
  8195 ;; Tracked objects:
  8196 ;;		On entry : 0/0
  8197 ;;		On exit  : 0/0
  8198 ;;		Unchanged: 0/0
  8199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8200 ;;      Params:         0       0       0       0       0       0       0
  8201 ;;      Locals:         0       0       0       0       0       0       0
  8202 ;;      Temps:          0       0       0       0       0       0       0
  8203 ;;      Totals:         0       0       0       0       0       0       0
  8204 ;;Total ram usage:        0 bytes
  8205 ;; Hardware stack levels used:    1
  8206 ;; Hardware stack levels required when called:    4
  8207 ;; This function calls:
  8208 ;;		Nothing
  8209 ;; This function is called by:
  8210 ;;		_SYSTEM_Initialize
  8211 ;; This function uses a non-reentrant model
  8212 ;;
  8213                           
  8214                           	psect	text42
  8215  002A5C                     __ptext42:
  8216                           	opt stack 0
  8217  002A5C                     _I2C1_Initialize:
  8218                           	opt stack 25
  8219                           
  8220                           ;i2c1.c: 153: i2c1_object.pTrHead = i2c1_tr_queue;
  8221                           
  8222                           ;incstack = 0
  8223  002A5C  0EE9               	movlw	low _i2c1_tr_queue
  8224  002A5E  0100               	movlb	0	; () banked
  8225  002A60  6FBA               	movwf	(_i2c1_object+2)& (0+255),b
  8226  002A62  0E00               	movlw	high _i2c1_tr_queue
  8227  002A64  0100               	movlb	0	; () banked
  8228  002A66  6FBB               	movwf	(_i2c1_object+3)& (0+255),b
  8229                           
  8230                           ;i2c1.c: 154: i2c1_object.pTrTail = i2c1_tr_queue;
  8231  002A68  0EE9               	movlw	low _i2c1_tr_queue
  8232  002A6A  0100               	movlb	0	; () banked
  8233  002A6C  6FB8               	movwf	_i2c1_object& (0+255),b
  8234  002A6E  0E00               	movlw	high _i2c1_tr_queue
  8235  002A70  0100               	movlb	0	; () banked
  8236  002A72  6FB9               	movwf	(_i2c1_object+1)& (0+255),b
  8237                           
  8238                           ; BSR set to: 0
  8239                           ;i2c1.c: 155: i2c1_object.trStatus.s.empty = 1;
  8240  002A74  0100               	movlb	0	; () banked
  8241  002A76  83BC               	bsf	(_i2c1_object+4)& (0+255),1,b
  8242                           
  8243                           ; BSR set to: 0
  8244                           ;i2c1.c: 156: i2c1_object.trStatus.s.full = 0;
  8245  002A78  0100               	movlb	0	; () banked
  8246  002A7A  91BC               	bcf	(_i2c1_object+4)& (0+255),0,b
  8247                           
  8248                           ; BSR set to: 0
  8249                           ;i2c1.c: 158: i2c1_object.i2cErrors = 0;
  8250  002A7C  0E00               	movlw	0
  8251  002A7E  0100               	movlb	0	; () banked
  8252  002A80  6FBE               	movwf	(_i2c1_object+6)& (0+255),b
  8253                           
  8254                           ; BSR set to: 0
  8255                           ;i2c1.c: 161: SSP1STAT = 0x80;
  8256  002A82  0E80               	movlw	128
  8257  002A84  6EC7               	movwf	4039,c	;volatile
  8258                           
  8259                           ; BSR set to: 0
  8260                           ;i2c1.c: 163: SSP1CON1 = 0x28;
  8261  002A86  0E28               	movlw	40
  8262  002A88  6EC6               	movwf	4038,c	;volatile
  8263                           
  8264                           ; BSR set to: 0
  8265                           ;i2c1.c: 165: SSP1CON3 = 0x00;
  8266  002A8A  0E00               	movlw	0
  8267  002A8C  6ECB               	movwf	4043,c	;volatile
  8268                           
  8269                           ; BSR set to: 0
  8270                           ;i2c1.c: 167: SSP1ADD = 0x09;
  8271  002A8E  0E09               	movlw	9
  8272  002A90  6EC8               	movwf	4040,c	;volatile
  8273                           
  8274                           ; BSR set to: 0
  8275                           ;i2c1.c: 171: PIR1bits.SSP1IF = 0;
  8276  002A92  969E               	bcf	3998,3,c	;volatile
  8277                           
  8278                           ; BSR set to: 0
  8279                           ;i2c1.c: 173: PIE1bits.SSP1IE = 1;
  8280  002A94  869D               	bsf	3997,3,c	;volatile
  8281                           
  8282                           ; BSR set to: 0
  8283  002A96  0012               	return		;funcret
  8284  002A98                     __end_of_I2C1_Initialize:
  8285                           	opt stack 0
  8286                           tosu	equ	0xFFF
  8287                           tosh	equ	0xFFE
  8288                           tosl	equ	0xFFD
  8289                           pclath	equ	0xFFA
  8290                           tblptru	equ	0xFF8
  8291                           tblptrh	equ	0xFF7
  8292                           tblptrl	equ	0xFF6
  8293                           tablat	equ	0xFF5
  8294                           prodh	equ	0xFF4
  8295                           prodl	equ	0xFF3
  8296                           intcon	equ	0xFF2
  8297                           intcon2	equ	0xFF1
  8298                           postinc0	equ	0xFEE
  8299                           wreg	equ	0xFE8
  8300                           indf2	equ	0xFDF
  8301                           postinc2	equ	0xFDE
  8302                           postdec2	equ	0xFDD
  8303                           plusw2	equ	0xFDB
  8304                           fsr2h	equ	0xFDA
  8305                           fsr2l	equ	0xFD9
  8306                           status	equ	0xFD8
  8307                           
  8308 ;; *************** function _EUSART1_Initialize *****************
  8309 ;; Defined at:
  8310 ;;		line 21 in file "UART.c"
  8311 ;; Parameters:    Size  Location     Type
  8312 ;;		None
  8313 ;; Auto vars:     Size  Location     Type
  8314 ;;		None
  8315 ;; Return value:  Size  Location     Type
  8316 ;;		None               void
  8317 ;; Registers used:
  8318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8319 ;; Tracked objects:
  8320 ;;		On entry : 0/0
  8321 ;;		On exit  : 0/0
  8322 ;;		Unchanged: 0/0
  8323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8324 ;;      Params:         0       0       0       0       0       0       0
  8325 ;;      Locals:         0       0       0       0       0       0       0
  8326 ;;      Temps:          0       0       0       0       0       0       0
  8327 ;;      Totals:         0       0       0       0       0       0       0
  8328 ;;Total ram usage:        0 bytes
  8329 ;; Hardware stack levels used:    1
  8330 ;; Hardware stack levels required when called:    6
  8331 ;; This function calls:
  8332 ;;		_UART_buff_init
  8333 ;; This function is called by:
  8334 ;;		_SYSTEM_Initialize
  8335 ;; This function uses a non-reentrant model
  8336 ;;
  8337                           
  8338                           	psect	text43
  8339  002A98                     __ptext43:
  8340                           	opt stack 0
  8341  002A98                     _EUSART1_Initialize:
  8342                           	opt stack 23
  8343                           
  8344                           ;UART.c: 23: PIE1bits.RC1IE = 0;
  8345                           
  8346                           ; BSR set to: 0
  8347                           ;incstack = 0
  8348  002A98  9A9D               	bcf	3997,5,c	;volatile
  8349                           
  8350                           ;UART.c: 24: PIE1bits.TX1IE = 0;
  8351  002A9A  989D               	bcf	3997,4,c	;volatile
  8352                           
  8353                           ;UART.c: 29: BAUD1CON = 0x48;
  8354  002A9C  0E48               	movlw	72
  8355  002A9E  6EB8               	movwf	4024,c	;volatile
  8356                           
  8357                           ;UART.c: 32: RC1STA = 0x98;
  8358  002AA0  0E98               	movlw	152
  8359  002AA2  6EAB               	movwf	4011,c	;volatile
  8360                           
  8361                           ;UART.c: 35: TX1STA = 0x26;
  8362  002AA4  0E26               	movlw	38
  8363  002AA6  6EAC               	movwf	4012,c	;volatile
  8364                           
  8365                           ;UART.c: 38: SPBRG1 = (((16000000/38400)/4)-1);
  8366  002AA8  0E67               	movlw	103
  8367  002AAA  6EAF               	movwf	4015,c	;volatile
  8368                           
  8369                           ;UART.c: 41: SPBRGH1 = 0x00;
  8370  002AAC  0E00               	movlw	0
  8371  002AAE  6EB0               	movwf	4016,c	;volatile
  8372                           
  8373                           ;UART.c: 44: TXREG1 = 0x00;
  8374  002AB0  0E00               	movlw	0
  8375  002AB2  6EAD               	movwf	4013,c	;volatile
  8376                           
  8377                           ;UART.c: 47: RCREG1 = 0x00;
  8378  002AB4  0E00               	movlw	0
  8379  002AB6  6EAE               	movwf	4014,c	;volatile
  8380                           
  8381                           ;UART.c: 49: UART_buff_init(&input_buffer);
  8382  002AB8  0E00               	movlw	low _input_buffer
  8383  002ABA  6E23               	movwf	UART_buff_init@_this,c
  8384  002ABC  0E04               	movlw	high _input_buffer
  8385  002ABE  6E24               	movwf	UART_buff_init@_this+1,c
  8386  002AC0  EC7C  F016         	call	_UART_buff_init	;wreg free
  8387                           
  8388                           ;UART.c: 50: UART_buff_init(&output_buffer);
  8389  002AC4  0E00               	movlw	low _output_buffer
  8390  002AC6  6E23               	movwf	UART_buff_init@_this,c
  8391  002AC8  0E05               	movlw	high _output_buffer
  8392  002ACA  6E24               	movwf	UART_buff_init@_this+1,c
  8393  002ACC  EC7C  F016         	call	_UART_buff_init	;wreg free
  8394                           
  8395                           ;UART.c: 52: PIE1bits.RC1IE = 1;
  8396  002AD0  8A9D               	bsf	3997,5,c	;volatile
  8397  002AD2  0012               	return		;funcret
  8398  002AD4                     __end_of_EUSART1_Initialize:
  8399                           	opt stack 0
  8400                           tosu	equ	0xFFF
  8401                           tosh	equ	0xFFE
  8402                           tosl	equ	0xFFD
  8403                           pclath	equ	0xFFA
  8404                           tblptru	equ	0xFF8
  8405                           tblptrh	equ	0xFF7
  8406                           tblptrl	equ	0xFF6
  8407                           tablat	equ	0xFF5
  8408                           prodh	equ	0xFF4
  8409                           prodl	equ	0xFF3
  8410                           intcon	equ	0xFF2
  8411                           intcon2	equ	0xFF1
  8412                           postinc0	equ	0xFEE
  8413                           wreg	equ	0xFE8
  8414                           indf2	equ	0xFDF
  8415                           postinc2	equ	0xFDE
  8416                           postdec2	equ	0xFDD
  8417                           plusw2	equ	0xFDB
  8418                           fsr2h	equ	0xFDA
  8419                           fsr2l	equ	0xFD9
  8420                           status	equ	0xFD8
  8421                           
  8422 ;; *************** function _UART_buff_init *****************
  8423 ;; Defined at:
  8424 ;;		line 56 in file "UART.c"
  8425 ;; Parameters:    Size  Location     Type
  8426 ;;  _this           2   34[COMRAM] PTR struct UART_ring_buf
  8427 ;;		 -> output_buffer(206), input_buffer(206), 
  8428 ;; Auto vars:     Size  Location     Type
  8429 ;;		None
  8430 ;; Return value:  Size  Location     Type
  8431 ;;		None               void
  8432 ;; Registers used:
  8433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8434 ;; Tracked objects:
  8435 ;;		On entry : 0/0
  8436 ;;		On exit  : 0/0
  8437 ;;		Unchanged: 0/0
  8438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8439 ;;      Params:         2       0       0       0       0       0       0
  8440 ;;      Locals:         0       0       0       0       0       0       0
  8441 ;;      Temps:          0       0       0       0       0       0       0
  8442 ;;      Totals:         2       0       0       0       0       0       0
  8443 ;;Total ram usage:        2 bytes
  8444 ;; Hardware stack levels used:    1
  8445 ;; Hardware stack levels required when called:    5
  8446 ;; This function calls:
  8447 ;;		_memset
  8448 ;; This function is called by:
  8449 ;;		_EUSART1_Initialize
  8450 ;; This function uses a non-reentrant model
  8451 ;;
  8452                           
  8453                           	psect	text44
  8454  002CF8                     __ptext44:
  8455                           	opt stack 0
  8456  002CF8                     _UART_buff_init:
  8457                           	opt stack 23
  8458                           
  8459                           ;UART.c: 65: memset(_this, 0, sizeof (*_this));
  8460                           
  8461                           ;incstack = 0
  8462  002CF8  C023  F01B         	movff	UART_buff_init@_this,memset@p1
  8463  002CFC  C024  F01C         	movff	UART_buff_init@_this+1,memset@p1+1
  8464  002D00  0E00               	movlw	0
  8465  002D02  6E1E               	movwf	memset@c+1,c
  8466  002D04  0E00               	movlw	0
  8467  002D06  6E1D               	movwf	memset@c,c
  8468  002D08  0E00               	movlw	0
  8469  002D0A  6E20               	movwf	memset@n+1,c
  8470  002D0C  0ECE               	movlw	206
  8471  002D0E  6E1F               	movwf	memset@n,c
  8472  002D10  ECD1  F015         	call	_memset	;wreg free
  8473  002D14  0012               	return		;funcret
  8474  002D16                     __end_of_UART_buff_init:
  8475                           	opt stack 0
  8476                           tosu	equ	0xFFF
  8477                           tosh	equ	0xFFE
  8478                           tosl	equ	0xFFD
  8479                           pclath	equ	0xFFA
  8480                           tblptru	equ	0xFF8
  8481                           tblptrh	equ	0xFF7
  8482                           tblptrl	equ	0xFF6
  8483                           tablat	equ	0xFF5
  8484                           prodh	equ	0xFF4
  8485                           prodl	equ	0xFF3
  8486                           intcon	equ	0xFF2
  8487                           intcon2	equ	0xFF1
  8488                           postinc0	equ	0xFEE
  8489                           wreg	equ	0xFE8
  8490                           indf2	equ	0xFDF
  8491                           postinc2	equ	0xFDE
  8492                           postdec2	equ	0xFDD
  8493                           plusw2	equ	0xFDB
  8494                           fsr2h	equ	0xFDA
  8495                           fsr2l	equ	0xFD9
  8496                           status	equ	0xFD8
  8497                           
  8498 ;; *************** function _memset *****************
  8499 ;; Defined at:
  8500 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
  8501 ;; Parameters:    Size  Location     Type
  8502 ;;  p1              2   26[COMRAM] PTR void 
  8503 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  8504 ;;  c               2   28[COMRAM] int 
  8505 ;;  n               2   30[COMRAM] unsigned int 
  8506 ;; Auto vars:     Size  Location     Type
  8507 ;;  p               2   32[COMRAM] PTR unsigned char 
  8508 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  8509 ;; Return value:  Size  Location     Type
  8510 ;;                  2   26[COMRAM] PTR void 
  8511 ;; Registers used:
  8512 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8513 ;; Tracked objects:
  8514 ;;		On entry : 0/0
  8515 ;;		On exit  : 0/0
  8516 ;;		Unchanged: 0/0
  8517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8518 ;;      Params:         6       0       0       0       0       0       0
  8519 ;;      Locals:         2       0       0       0       0       0       0
  8520 ;;      Temps:          0       0       0       0       0       0       0
  8521 ;;      Totals:         8       0       0       0       0       0       0
  8522 ;;Total ram usage:        8 bytes
  8523 ;; Hardware stack levels used:    1
  8524 ;; Hardware stack levels required when called:    4
  8525 ;; This function calls:
  8526 ;;		Nothing
  8527 ;; This function is called by:
  8528 ;;		_FastTransfer_buffer_flush
  8529 ;;		_UART_buff_init
  8530 ;;		_UART_buff_flush
  8531 ;; This function uses a non-reentrant model
  8532 ;;
  8533                           
  8534                           	psect	text45
  8535  002BA2                     __ptext45:
  8536                           	opt stack 0
  8537  002BA2                     _memset:
  8538                           	opt stack 22
  8539                           
  8540                           ;incstack = 0
  8541  002BA2  C01B  F021         	movff	memset@p1,memset@p
  8542  002BA6  C01C  F022         	movff	memset@p1+1,memset@p+1
  8543  002BAA  D008               	goto	l5168
  8544  002BAC                     l5164:
  8545  002BAC  C021  FFD9         	movff	memset@p,fsr2l
  8546  002BB0  C022  FFDA         	movff	memset@p+1,fsr2h
  8547  002BB4  C01D  FFDF         	movff	memset@c,indf2
  8548  002BB8  4A21               	infsnz	memset@p,f,c
  8549  002BBA  2A22               	incf	memset@p+1,f,c
  8550  002BBC                     l5168:
  8551  002BBC  061F               	decf	memset@n,f,c
  8552  002BBE  A0D8               	btfss	status,0,c
  8553  002BC0  0620               	decf	memset@n+1,f,c
  8554  002BC2  281F               	incf	memset@n,w,c
  8555  002BC4  E1F3               	bnz	l5164
  8556  002BC6  2820               	incf	memset@n+1,w,c
  8557  002BC8  B4D8               	btfsc	status,2,c
  8558  002BCA  0012               	return	
  8559  002BCC  D7EF               	goto	l5164
  8560  002BCE                     __end_of_memset:
  8561                           	opt stack 0
  8562                           tosu	equ	0xFFF
  8563                           tosh	equ	0xFFE
  8564                           tosl	equ	0xFFD
  8565                           pclath	equ	0xFFA
  8566                           tblptru	equ	0xFF8
  8567                           tblptrh	equ	0xFF7
  8568                           tblptrl	equ	0xFF6
  8569                           tablat	equ	0xFF5
  8570                           prodh	equ	0xFF4
  8571                           prodl	equ	0xFF3
  8572                           intcon	equ	0xFF2
  8573                           intcon2	equ	0xFF1
  8574                           postinc0	equ	0xFEE
  8575                           wreg	equ	0xFE8
  8576                           indf2	equ	0xFDF
  8577                           postinc2	equ	0xFDE
  8578                           postdec2	equ	0xFDD
  8579                           plusw2	equ	0xFDB
  8580                           fsr2h	equ	0xFDA
  8581                           fsr2l	equ	0xFD9
  8582                           status	equ	0xFD8
  8583                           
  8584 ;; *************** function _ADC_Initialize *****************
  8585 ;; Defined at:
  8586 ;;		line 59 in file "mcc_generated_files/adc.c"
  8587 ;; Parameters:    Size  Location     Type
  8588 ;;		None
  8589 ;; Auto vars:     Size  Location     Type
  8590 ;;		None
  8591 ;; Return value:  Size  Location     Type
  8592 ;;		None               void
  8593 ;; Registers used:
  8594 ;;		wreg, status,2
  8595 ;; Tracked objects:
  8596 ;;		On entry : 0/0
  8597 ;;		On exit  : 0/0
  8598 ;;		Unchanged: 0/0
  8599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8600 ;;      Params:         0       0       0       0       0       0       0
  8601 ;;      Locals:         0       0       0       0       0       0       0
  8602 ;;      Temps:          0       0       0       0       0       0       0
  8603 ;;      Totals:         0       0       0       0       0       0       0
  8604 ;;Total ram usage:        0 bytes
  8605 ;; Hardware stack levels used:    1
  8606 ;; Hardware stack levels required when called:    4
  8607 ;; This function calls:
  8608 ;;		Nothing
  8609 ;; This function is called by:
  8610 ;;		_SYSTEM_Initialize
  8611 ;; This function uses a non-reentrant model
  8612 ;;
  8613                           
  8614                           	psect	text46
  8615  002D4E                     __ptext46:
  8616                           	opt stack 0
  8617  002D4E                     _ADC_Initialize:
  8618                           	opt stack 25
  8619                           
  8620                           ;adc.c: 64: ADCON0 = 0x01;
  8621                           
  8622                           ;incstack = 0
  8623  002D4E  0E01               	movlw	1
  8624  002D50  6EC2               	movwf	4034,c	;volatile
  8625                           
  8626                           ;adc.c: 67: ADCON1 = 0x80;
  8627  002D52  0E80               	movlw	128
  8628  002D54  6EC1               	movwf	4033,c	;volatile
  8629                           
  8630                           ;adc.c: 70: ADCON2 = 0x05;
  8631  002D56  0E05               	movlw	5
  8632  002D58  6EC0               	movwf	4032,c	;volatile
  8633                           
  8634                           ;adc.c: 73: ADRESL = 0x00;
  8635  002D5A  0E00               	movlw	0
  8636  002D5C  6EC3               	movwf	4035,c	;volatile
  8637                           
  8638                           ;adc.c: 76: ADRESH = 0x00;
  8639  002D5E  0E00               	movlw	0
  8640  002D60  6EC4               	movwf	4036,c	;volatile
  8641                           
  8642                           ;adc.c: 79: PIE1bits.ADIE = 1;
  8643  002D62  8C9D               	bsf	3997,6,c	;volatile
  8644  002D64  0012               	return		;funcret
  8645  002D66                     __end_of_ADC_Initialize:
  8646                           	opt stack 0
  8647                           tosu	equ	0xFFF
  8648                           tosh	equ	0xFFE
  8649                           tosl	equ	0xFFD
  8650                           pclath	equ	0xFFA
  8651                           tblptru	equ	0xFF8
  8652                           tblptrh	equ	0xFF7
  8653                           tblptrl	equ	0xFF6
  8654                           tablat	equ	0xFF5
  8655                           prodh	equ	0xFF4
  8656                           prodl	equ	0xFF3
  8657                           intcon	equ	0xFF2
  8658                           intcon2	equ	0xFF1
  8659                           postinc0	equ	0xFEE
  8660                           wreg	equ	0xFE8
  8661                           indf2	equ	0xFDF
  8662                           postinc2	equ	0xFDE
  8663                           postdec2	equ	0xFDD
  8664                           plusw2	equ	0xFDB
  8665                           fsr2h	equ	0xFDA
  8666                           fsr2l	equ	0xFD9
  8667                           status	equ	0xFD8
  8668                           
  8669 ;; *************** function _LEDwriteDisplay *****************
  8670 ;; Defined at:
  8671 ;;		line 114 in file "LED_BarGraph.c"
  8672 ;; Parameters:    Size  Location     Type
  8673 ;;  i2c_addr        1    wreg     unsigned char 
  8674 ;; Auto vars:     Size  Location     Type
  8675 ;;  i2c_addr        1   20[BANK1 ] unsigned char 
  8676 ;;  writeBuffer    20    0[BANK1 ] unsigned char [20]
  8677 ;;  timeOut         2   21[BANK1 ] unsigned int 
  8678 ;;  status          1   23[BANK1 ] enum E7875
  8679 ;; Return value:  Size  Location     Type
  8680 ;;		None               void
  8681 ;; Registers used:
  8682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8683 ;; Tracked objects:
  8684 ;;		On entry : 0/0
  8685 ;;		On exit  : 0/0
  8686 ;;		Unchanged: 0/0
  8687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8688 ;;      Params:         0       0       0       0       0       0       0
  8689 ;;      Locals:         0       0      24       0       0       0       0
  8690 ;;      Temps:          0       0       0       0       0       0       0
  8691 ;;      Totals:         0       0      24       0       0       0       0
  8692 ;;Total ram usage:       24 bytes
  8693 ;; Hardware stack levels used:    1
  8694 ;; Hardware stack levels required when called:    6
  8695 ;; This function calls:
  8696 ;;		_I2C1_MasterWrite
  8697 ;; This function is called by:
  8698 ;;		_main
  8699 ;; This function uses a non-reentrant model
  8700 ;;
  8701                           
  8702                           	psect	text47
  8703  001706                     __ptext47:
  8704                           	opt stack 0
  8705  001706                     _LEDwriteDisplay:
  8706                           	opt stack 24
  8707                           
  8708                           ;incstack = 0
  8709                           ;LEDwriteDisplay@i2c_addr stored from wreg
  8710  001706  0101               	movlb	1	; () banked
  8711  001708  6F4D               	movwf	LEDwriteDisplay@i2c_addr& (0+255),b
  8712                           
  8713                           ;LED_BarGraph.c: 115: uint8_t writeBuffer[20];
  8714                           ;LED_BarGraph.c: 116: uint16_t timeOut;
  8715                           ;LED_BarGraph.c: 117: writeBuffer[0] = 0x00;
  8716  00170A  0E00               	movlw	0
  8717  00170C  0101               	movlb	1	; () banked
  8718  00170E  6F39               	movwf	LEDwriteDisplay@writeBuffer& (0+255),b
  8719                           
  8720                           ;LED_BarGraph.c: 118: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  8721  001710  0E02               	movlw	2
  8722  001712  0101               	movlb	1	; () banked
  8723  001714  6F50               	movwf	LEDwriteDisplay@status& (0+255),b
  8724                           
  8725                           ;LED_BarGraph.c: 120: timeOut = 0;
  8726  001716  0E00               	movlw	0
  8727  001718  0101               	movlb	1	; () banked
  8728  00171A  6F4F               	movwf	(LEDwriteDisplay@timeOut+1)& (0+255),b
  8729  00171C  0E00               	movlw	0
  8730  00171E  6F4E               	movwf	LEDwriteDisplay@timeOut& (0+255),b
  8731                           
  8732                           ;LED_BarGraph.c: 121: while (status != I2C1_MESSAGE_FAIL) {
  8733  001720  D027               	goto	l6316
  8734  001722                     l6296:
  8735                           
  8736                           ; BSR set to: 1
  8737                           ;LED_BarGraph.c: 123: I2C1_MasterWrite(&writeBuffer,
  8738                           ;LED_BarGraph.c: 124: 1,
  8739                           ;LED_BarGraph.c: 125: i2c_addr,
  8740                           ;LED_BarGraph.c: 126: &status);
  8741  001722  0E39               	movlw	low LEDwriteDisplay@writeBuffer
  8742  001724  6E24               	movwf	I2C1_MasterWrite@pdata,c
  8743  001726  0E01               	movlw	high LEDwriteDisplay@writeBuffer
  8744  001728  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
  8745  00172A  0E01               	movlw	1
  8746  00172C  6E26               	movwf	I2C1_MasterWrite@length,c
  8747  00172E  C14D  F027         	movff	LEDwriteDisplay@i2c_addr,I2C1_MasterWrite@address
  8748  001732  6A28               	clrf	I2C1_MasterWrite@address+1,c
  8749  001734  0E50               	movlw	low LEDwriteDisplay@status
  8750  001736  6E29               	movwf	I2C1_MasterWrite@pflag,c
  8751  001738  0E01               	movlw	high LEDwriteDisplay@status
  8752  00173A  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
  8753  00173C  EC7E  F014         	call	_I2C1_MasterWrite	;wreg free
  8754  001740                     l6298:
  8755  001740  0E02               	movlw	2
  8756  001742  0101               	movlb	1	; () banked
  8757  001744  1950               	xorwf	LEDwriteDisplay@status& (0+255),w,b
  8758  001746  B4D8               	btfsc	status,2,c
  8759  001748  D7FB               	goto	l6298
  8760                           
  8761                           ; BSR set to: 1
  8762                           ;LED_BarGraph.c: 131: if (status == I2C1_MESSAGE_COMPLETE)
  8763                           
  8764                           ; BSR set to: 1
  8765  00174A  0101               	movlb	1	; () banked
  8766  00174C  5150               	movf	LEDwriteDisplay@status& (0+255),w,b
  8767  00174E  0101               	movlb	1	; () banked
  8768  001750  B4D8               	btfsc	status,2,c
  8769  001752  D012               	goto	l6318
  8770                           
  8771                           ; BSR set to: 1
  8772                           ;LED_BarGraph.c: 133: if (timeOut == 100)
  8773                           
  8774                           ; BSR set to: 1
  8775                           
  8776                           ; BSR set to: 1
  8777                           ;LED_BarGraph.c: 132: break;
  8778  001754  0E64               	movlw	100
  8779  001756  0101               	movlb	1	; () banked
  8780  001758  194E               	xorwf	LEDwriteDisplay@timeOut& (0+255),w,b
  8781  00175A  0101               	movlb	1	; () banked
  8782  00175C  114F               	iorwf	(LEDwriteDisplay@timeOut+1)& (0+255),w,b
  8783  00175E  B4D8               	btfsc	status,2,c
  8784  001760  D00B               	goto	l6318
  8785                           
  8786                           ; BSR set to: 1
  8787                           ;LED_BarGraph.c: 135: if (status == I2C1_MESSAGE_FAIL)
  8788                           
  8789                           ; BSR set to: 1
  8790                           
  8791                           ; BSR set to: 1
  8792                           ;LED_BarGraph.c: 134: break;
  8793  001762  0101               	movlb	1	; () banked
  8794  001764  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
  8795  001766  B4D8               	btfsc	status,2,c
  8796  001768  D007               	goto	l6318
  8797                           
  8798                           ; BSR set to: 1
  8799                           ;LED_BarGraph.c: 137: else
  8800                           ;LED_BarGraph.c: 138: timeOut++;
  8801                           
  8802                           ; BSR set to: 1
  8803                           
  8804                           ; BSR set to: 1
  8805                           
  8806                           ; BSR set to: 1
  8807                           ;LED_BarGraph.c: 136: break;
  8808  00176A  0101               	movlb	1	; () banked
  8809  00176C  4B4E               	infsnz	LEDwriteDisplay@timeOut& (0+255),f,b
  8810  00176E  2B4F               	incf	(LEDwriteDisplay@timeOut+1)& (0+255),f,b
  8811  001770                     l6316:
  8812                           
  8813                           ; BSR set to: 1
  8814  001770  0101               	movlb	1	; () banked
  8815  001772  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
  8816  001774  A4D8               	btfss	status,2,c
  8817  001776  D7D5               	goto	l6296
  8818  001778                     l6318:
  8819                           
  8820                           ; BSR set to: 1
  8821                           ;LED_BarGraph.c: 139: }
  8822                           ;LED_BarGraph.c: 140: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  8823  001778  0E02               	movlw	2
  8824  00177A  0101               	movlb	1	; () banked
  8825  00177C  6F50               	movwf	LEDwriteDisplay@status& (0+255),b
  8826                           
  8827                           ;LED_BarGraph.c: 145: writeBuffer[0] = 0;
  8828  00177E  0E00               	movlw	0
  8829  001780  0101               	movlb	1	; () banked
  8830  001782  6F39               	movwf	LEDwriteDisplay@writeBuffer& (0+255),b
  8831                           
  8832                           ; BSR set to: 1
  8833                           ;LED_BarGraph.c: 146: writeBuffer[1] = displaybuffer[0] & 0xFF;
  8834  001784  C060  F13A         	movff	_displaybuffer,LEDwriteDisplay@writeBuffer+1
  8835                           
  8836                           ; BSR set to: 1
  8837                           ;LED_BarGraph.c: 147: writeBuffer[2] = displaybuffer[0] >> 8;
  8838  001788  C061  F13B         	movff	_displaybuffer+1,LEDwriteDisplay@writeBuffer+2
  8839                           
  8840                           ; BSR set to: 1
  8841                           ;LED_BarGraph.c: 148: writeBuffer[3] = displaybuffer[1] & 0xFF;
  8842  00178C  C064  F13C         	movff	_displaybuffer+4,LEDwriteDisplay@writeBuffer+3
  8843                           
  8844                           ; BSR set to: 1
  8845                           ;LED_BarGraph.c: 149: writeBuffer[4] = displaybuffer[1] >> 8;
  8846  001790  C065  F13D         	movff	_displaybuffer+5,LEDwriteDisplay@writeBuffer+4
  8847                           
  8848                           ; BSR set to: 1
  8849                           ;LED_BarGraph.c: 150: writeBuffer[5] = displaybuffer[2] & 0xFF;
  8850  001794  C068  F13E         	movff	_displaybuffer+8,LEDwriteDisplay@writeBuffer+5
  8851                           
  8852                           ; BSR set to: 1
  8853                           ;LED_BarGraph.c: 151: writeBuffer[6] = displaybuffer[2] >> 8;
  8854  001798  C069  F13F         	movff	_displaybuffer+9,LEDwriteDisplay@writeBuffer+6
  8855                           
  8856                           ; BSR set to: 1
  8857                           ;LED_BarGraph.c: 152: writeBuffer[7] = displaybuffer[3] & 0xFF;
  8858  00179C  C06C  F140         	movff	_displaybuffer+12,LEDwriteDisplay@writeBuffer+7
  8859                           
  8860                           ; BSR set to: 1
  8861                           ;LED_BarGraph.c: 153: writeBuffer[8] = displaybuffer[3] >> 8;
  8862  0017A0  C06D  F141         	movff	_displaybuffer+13,LEDwriteDisplay@writeBuffer+8
  8863                           
  8864                           ; BSR set to: 1
  8865                           ;LED_BarGraph.c: 154: writeBuffer[9] = displaybuffer[4] & 0xFF;
  8866  0017A4  C070  F142         	movff	_displaybuffer+16,LEDwriteDisplay@writeBuffer+9
  8867                           
  8868                           ; BSR set to: 1
  8869                           ;LED_BarGraph.c: 155: writeBuffer[10] = displaybuffer[4] >> 8;
  8870  0017A8  C071  F143         	movff	_displaybuffer+17,LEDwriteDisplay@writeBuffer+10
  8871                           
  8872                           ; BSR set to: 1
  8873                           ;LED_BarGraph.c: 156: writeBuffer[11] = displaybuffer[5] & 0xFF;
  8874  0017AC  C074  F144         	movff	_displaybuffer+20,LEDwriteDisplay@writeBuffer+11
  8875                           
  8876                           ; BSR set to: 1
  8877                           ;LED_BarGraph.c: 157: writeBuffer[12] = displaybuffer[5] >> 8;
  8878  0017B0  C075  F145         	movff	_displaybuffer+21,LEDwriteDisplay@writeBuffer+12
  8879                           
  8880                           ; BSR set to: 1
  8881                           ;LED_BarGraph.c: 158: writeBuffer[13] = displaybuffer[6] & 0xFF;
  8882  0017B4  C078  F146         	movff	_displaybuffer+24,LEDwriteDisplay@writeBuffer+13
  8883                           
  8884                           ; BSR set to: 1
  8885                           ;LED_BarGraph.c: 159: writeBuffer[14] = displaybuffer[6] >> 8;
  8886  0017B8  C079  F147         	movff	_displaybuffer+25,LEDwriteDisplay@writeBuffer+14
  8887                           
  8888                           ; BSR set to: 1
  8889                           ;LED_BarGraph.c: 160: writeBuffer[15] = displaybuffer[7] & 0xFF;
  8890  0017BC  C07C  F148         	movff	_displaybuffer+28,LEDwriteDisplay@writeBuffer+15
  8891                           
  8892                           ; BSR set to: 1
  8893                           ;LED_BarGraph.c: 161: writeBuffer[16] = displaybuffer[7] >> 8;
  8894  0017C0  C07D  F149         	movff	_displaybuffer+29,LEDwriteDisplay@writeBuffer+16
  8895                           
  8896                           ; BSR set to: 1
  8897                           ;LED_BarGraph.c: 162: writeBuffer[17] = displaybuffer[8] & 0xFF;
  8898  0017C4  C080  F14A         	movff	_displaybuffer+32,LEDwriteDisplay@writeBuffer+17
  8899                           
  8900                           ; BSR set to: 1
  8901                           ;LED_BarGraph.c: 163: writeBuffer[18] = displaybuffer[8] >> 8;
  8902  0017C8  C081  F14B         	movff	_displaybuffer+33,LEDwriteDisplay@writeBuffer+18
  8903                           
  8904                           ;LED_BarGraph.c: 165: timeOut = 0;
  8905  0017CC  0E00               	movlw	0
  8906  0017CE  0101               	movlb	1	; () banked
  8907  0017D0  6F4F               	movwf	(LEDwriteDisplay@timeOut+1)& (0+255),b
  8908  0017D2  0E00               	movlw	0
  8909  0017D4  6F4E               	movwf	LEDwriteDisplay@timeOut& (0+255),b
  8910                           
  8911                           ;LED_BarGraph.c: 166: while (status != I2C1_MESSAGE_FAIL) {
  8912  0017D6  D027               	goto	l6376
  8913  0017D8                     l6356:
  8914                           
  8915                           ; BSR set to: 1
  8916                           ;LED_BarGraph.c: 168: I2C1_MasterWrite(&writeBuffer,
  8917                           ;LED_BarGraph.c: 169: 17,
  8918                           ;LED_BarGraph.c: 170: i2c_addr,
  8919                           ;LED_BarGraph.c: 171: &status);
  8920  0017D8  0E39               	movlw	low LEDwriteDisplay@writeBuffer
  8921  0017DA  6E24               	movwf	I2C1_MasterWrite@pdata,c
  8922  0017DC  0E01               	movlw	high LEDwriteDisplay@writeBuffer
  8923  0017DE  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
  8924  0017E0  0E11               	movlw	17
  8925  0017E2  6E26               	movwf	I2C1_MasterWrite@length,c
  8926  0017E4  C14D  F027         	movff	LEDwriteDisplay@i2c_addr,I2C1_MasterWrite@address
  8927  0017E8  6A28               	clrf	I2C1_MasterWrite@address+1,c
  8928  0017EA  0E50               	movlw	low LEDwriteDisplay@status
  8929  0017EC  6E29               	movwf	I2C1_MasterWrite@pflag,c
  8930  0017EE  0E01               	movlw	high LEDwriteDisplay@status
  8931  0017F0  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
  8932  0017F2  EC7E  F014         	call	_I2C1_MasterWrite	;wreg free
  8933  0017F6                     l6358:
  8934  0017F6  0E02               	movlw	2
  8935  0017F8  0101               	movlb	1	; () banked
  8936  0017FA  1950               	xorwf	LEDwriteDisplay@status& (0+255),w,b
  8937  0017FC  B4D8               	btfsc	status,2,c
  8938  0017FE  D7FB               	goto	l6358
  8939                           
  8940                           ; BSR set to: 1
  8941                           ;LED_BarGraph.c: 176: if (status == I2C1_MESSAGE_COMPLETE)
  8942                           
  8943                           ; BSR set to: 1
  8944  001800  0101               	movlb	1	; () banked
  8945  001802  5150               	movf	LEDwriteDisplay@status& (0+255),w,b
  8946  001804  0101               	movlb	1	; () banked
  8947  001806  B4D8               	btfsc	status,2,c
  8948  001808  0012               	return	
  8949                           
  8950                           ; BSR set to: 1
  8951                           ;LED_BarGraph.c: 178: if (timeOut == 100)
  8952                           
  8953                           ; BSR set to: 1
  8954                           
  8955                           ; BSR set to: 1
  8956                           ;LED_BarGraph.c: 177: break;
  8957  00180A  0E64               	movlw	100
  8958  00180C  0101               	movlb	1	; () banked
  8959  00180E  194E               	xorwf	LEDwriteDisplay@timeOut& (0+255),w,b
  8960  001810  0101               	movlb	1	; () banked
  8961  001812  114F               	iorwf	(LEDwriteDisplay@timeOut+1)& (0+255),w,b
  8962  001814  B4D8               	btfsc	status,2,c
  8963  001816  0012               	return	
  8964                           
  8965                           ; BSR set to: 1
  8966                           ;LED_BarGraph.c: 180: if (status == I2C1_MESSAGE_FAIL)
  8967                           
  8968                           ; BSR set to: 1
  8969                           
  8970                           ; BSR set to: 1
  8971                           ;LED_BarGraph.c: 179: break;
  8972  001818  0101               	movlb	1	; () banked
  8973  00181A  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
  8974  00181C  B4D8               	btfsc	status,2,c
  8975  00181E  0012               	return	
  8976                           
  8977                           ; BSR set to: 1
  8978                           ;LED_BarGraph.c: 182: else
  8979                           ;LED_BarGraph.c: 183: timeOut++;
  8980                           
  8981                           ; BSR set to: 1
  8982                           
  8983                           ; BSR set to: 1
  8984                           
  8985                           ; BSR set to: 1
  8986                           ;LED_BarGraph.c: 181: break;
  8987  001820  0101               	movlb	1	; () banked
  8988  001822  4B4E               	infsnz	LEDwriteDisplay@timeOut& (0+255),f,b
  8989  001824  2B4F               	incf	(LEDwriteDisplay@timeOut+1)& (0+255),f,b
  8990  001826                     l6376:
  8991                           
  8992                           ; BSR set to: 1
  8993  001826  0101               	movlb	1	; () banked
  8994  001828  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
  8995  00182A  B4D8               	btfsc	status,2,c
  8996  00182C  0012               	return	
  8997  00182E  D7D4               	goto	l6356
  8998  001830                     __end_of_LEDwriteDisplay:
  8999                           	opt stack 0
  9000                           tosu	equ	0xFFF
  9001                           tosh	equ	0xFFE
  9002                           tosl	equ	0xFFD
  9003                           pclath	equ	0xFFA
  9004                           tblptru	equ	0xFF8
  9005                           tblptrh	equ	0xFF7
  9006                           tblptrl	equ	0xFF6
  9007                           tablat	equ	0xFF5
  9008                           prodh	equ	0xFF4
  9009                           prodl	equ	0xFF3
  9010                           intcon	equ	0xFF2
  9011                           intcon2	equ	0xFF1
  9012                           postinc0	equ	0xFEE
  9013                           wreg	equ	0xFE8
  9014                           indf2	equ	0xFDF
  9015                           postinc2	equ	0xFDE
  9016                           postdec2	equ	0xFDD
  9017                           plusw2	equ	0xFDB
  9018                           fsr2h	equ	0xFDA
  9019                           fsr2l	equ	0xFD9
  9020                           status	equ	0xFD8
  9021                           
  9022 ;; *************** function _LEDsetValue *****************
  9023 ;; Defined at:
  9024 ;;		line 11 in file "LED_BarGraph.c"
  9025 ;; Parameters:    Size  Location     Type
  9026 ;;  value           2    6[BANK1 ] int 
  9027 ;;  color           2    8[BANK1 ] int 
  9028 ;; Auto vars:     Size  Location     Type
  9029 ;;  k               2   11[BANK1 ] int 
  9030 ;; Return value:  Size  Location     Type
  9031 ;;		None               void
  9032 ;; Registers used:
  9033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9034 ;; Tracked objects:
  9035 ;;		On entry : 0/0
  9036 ;;		On exit  : 0/0
  9037 ;;		Unchanged: 0/0
  9038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9039 ;;      Params:         0       0       4       0       0       0       0
  9040 ;;      Locals:         0       0       2       0       0       0       0
  9041 ;;      Temps:          0       0       1       0       0       0       0
  9042 ;;      Totals:         0       0       7       0       0       0       0
  9043 ;;Total ram usage:        7 bytes
  9044 ;; Hardware stack levels used:    1
  9045 ;; Hardware stack levels required when called:    6
  9046 ;; This function calls:
  9047 ;;		_LEDsetBar
  9048 ;; This function is called by:
  9049 ;;		_main
  9050 ;; This function uses a non-reentrant model
  9051 ;;
  9052                           
  9053                           	psect	text48
  9054  002124                     __ptext48:
  9055                           	opt stack 0
  9056  002124                     _LEDsetValue:
  9057                           	opt stack 24
  9058                           
  9059                           ;LED_BarGraph.c: 12: if (value > 24) value = 24;
  9060                           
  9061                           ; BSR set to: 1
  9062                           ;incstack = 0
  9063  002124  0101               	movlb	1	; () banked
  9064  002126  BF40               	btfsc	(LEDsetValue@value+1)& (0+255),7,b
  9065  002128  D00D               	goto	l6276
  9066  00212A  0101               	movlb	1	; () banked
  9067  00212C  5140               	movf	(LEDsetValue@value+1)& (0+255),w,b
  9068  00212E  E105               	bnz	u6950
  9069  002130  0E19               	movlw	25
  9070  002132  0101               	movlb	1	; () banked
  9071  002134  5D3F               	subwf	LEDsetValue@value& (0+255),w,b
  9072  002136  A0D8               	btfss	status,0,c
  9073  002138  D005               	goto	l6276
  9074  00213A                     u6950:
  9075                           
  9076                           ; BSR set to: 1
  9077  00213A  0E00               	movlw	0
  9078  00213C  0101               	movlb	1	; () banked
  9079  00213E  6F40               	movwf	(LEDsetValue@value+1)& (0+255),b
  9080  002140  0E18               	movlw	24
  9081  002142  6F3F               	movwf	LEDsetValue@value& (0+255),b
  9082  002144                     l6276:
  9083                           
  9084                           ; BSR set to: 1
  9085                           ;LED_BarGraph.c: 13: if (value < 0) value = 0;
  9086  002144  0101               	movlb	1	; () banked
  9087  002146  AF40               	btfss	(LEDsetValue@value+1)& (0+255),7,b
  9088  002148  D005               	goto	l433
  9089                           
  9090                           ; BSR set to: 1
  9091  00214A  0E00               	movlw	0
  9092  00214C  0101               	movlb	1	; () banked
  9093  00214E  6F40               	movwf	(LEDsetValue@value+1)& (0+255),b
  9094  002150  0E00               	movlw	0
  9095  002152  6F3F               	movwf	LEDsetValue@value& (0+255),b
  9096  002154                     l433:
  9097                           
  9098                           ; BSR set to: 1
  9099                           ;LED_BarGraph.c: 14: int k;
  9100                           ;LED_BarGraph.c: 15: for (k = 0; k < 24; k++) {
  9101  002154  0E00               	movlw	0
  9102  002156  0101               	movlb	1	; () banked
  9103  002158  6F45               	movwf	(LEDsetValue@k+1)& (0+255),b
  9104  00215A  0E00               	movlw	0
  9105  00215C  6F44               	movwf	LEDsetValue@k& (0+255),b
  9106  00215E                     l6280:
  9107                           
  9108                           ; BSR set to: 1
  9109  00215E  0101               	movlb	1	; () banked
  9110  002160  BF45               	btfsc	(LEDsetValue@k+1)& (0+255),7,b
  9111  002162  D008               	goto	l6284
  9112  002164  0101               	movlb	1	; () banked
  9113  002166  5145               	movf	(LEDsetValue@k+1)& (0+255),w,b
  9114  002168  E12E               	bnz	l438
  9115  00216A  0E18               	movlw	24
  9116  00216C  0101               	movlb	1	; () banked
  9117  00216E  5D44               	subwf	LEDsetValue@k& (0+255),w,b
  9118  002170  B0D8               	btfsc	status,0,c
  9119  002172  0012               	return	
  9120  002174                     l6284:
  9121                           
  9122                           ; BSR set to: 1
  9123                           ;LED_BarGraph.c: 16: if (k < value) LEDsetBar(k, color);
  9124  002174  0101               	movlb	1	; () banked
  9125  002176  513F               	movf	LEDsetValue@value& (0+255),w,b
  9126  002178  0101               	movlb	1	; () banked
  9127  00217A  5D44               	subwf	LEDsetValue@k& (0+255),w,b
  9128  00217C  0101               	movlb	1	; () banked
  9129  00217E  5145               	movf	(LEDsetValue@k+1)& (0+255),w,b
  9130  002180  0A80               	xorlw	128
  9131  002182  0101               	movlb	1	; () banked
  9132  002184  6F43               	movwf	??_LEDsetValue& (0+255),b
  9133  002186  0101               	movlb	1	; () banked
  9134  002188  5140               	movf	(LEDsetValue@value+1)& (0+255),w,b
  9135  00218A  0A80               	xorlw	128
  9136  00218C  0101               	movlb	1	; () banked
  9137  00218E  5943               	subwfb	??_LEDsetValue& (0+255),w,b
  9138  002190  B0D8               	btfsc	status,0,c
  9139  002192  D00B               	goto	l6288
  9140                           
  9141                           ; BSR set to: 1
  9142  002194  C144  F023         	movff	LEDsetValue@k,LEDsetBar@bar
  9143  002198  C145  F024         	movff	LEDsetValue@k+1,LEDsetBar@bar+1
  9144  00219C  C141  F025         	movff	LEDsetValue@color,LEDsetBar@color
  9145  0021A0  C142  F026         	movff	LEDsetValue@color+1,LEDsetBar@color+1
  9146  0021A4  ECBE  F003         	call	_LEDsetBar	;wreg free
  9147  0021A8  D00A               	goto	l6290
  9148  0021AA                     l6288:
  9149                           
  9150                           ;LED_BarGraph.c: 17: else LEDsetBar(k, 0);
  9151  0021AA  C144  F023         	movff	LEDsetValue@k,LEDsetBar@bar
  9152  0021AE  C145  F024         	movff	LEDsetValue@k+1,LEDsetBar@bar+1
  9153  0021B2  0E00               	movlw	0
  9154  0021B4  6E26               	movwf	LEDsetBar@color+1,c
  9155  0021B6  0E00               	movlw	0
  9156  0021B8  6E25               	movwf	LEDsetBar@color,c
  9157  0021BA  ECBE  F003         	call	_LEDsetBar	;wreg free
  9158  0021BE                     l6290:
  9159  0021BE  0101               	movlb	1	; () banked
  9160  0021C0  4B44               	infsnz	LEDsetValue@k& (0+255),f,b
  9161  0021C2  2B45               	incf	(LEDsetValue@k+1)& (0+255),f,b
  9162  0021C4  D7CC               	goto	l6280
  9163  0021C6                     l438:
  9164                           
  9165                           ; BSR set to: 1
  9166  0021C6  0012               	return		;funcret
  9167  0021C8                     __end_of_LEDsetValue:
  9168                           	opt stack 0
  9169                           tosu	equ	0xFFF
  9170                           tosh	equ	0xFFE
  9171                           tosl	equ	0xFFD
  9172                           pclath	equ	0xFFA
  9173                           tblptru	equ	0xFF8
  9174                           tblptrh	equ	0xFF7
  9175                           tblptrl	equ	0xFF6
  9176                           tablat	equ	0xFF5
  9177                           prodh	equ	0xFF4
  9178                           prodl	equ	0xFF3
  9179                           intcon	equ	0xFF2
  9180                           intcon2	equ	0xFF1
  9181                           postinc0	equ	0xFEE
  9182                           wreg	equ	0xFE8
  9183                           indf2	equ	0xFDF
  9184                           postinc2	equ	0xFDE
  9185                           postdec2	equ	0xFDD
  9186                           plusw2	equ	0xFDB
  9187                           fsr2h	equ	0xFDA
  9188                           fsr2l	equ	0xFD9
  9189                           status	equ	0xFD8
  9190                           
  9191 ;; *************** function _LEDsetBar *****************
  9192 ;; Defined at:
  9193 ;;		line 193 in file "LED_BarGraph.c"
  9194 ;; Parameters:    Size  Location     Type
  9195 ;;  bar             2   34[COMRAM] int 
  9196 ;;  color           2   36[COMRAM] int 
  9197 ;; Auto vars:     Size  Location     Type
  9198 ;;  a               2   40[COMRAM] unsigned int 
  9199 ;;  c               2   38[COMRAM] unsigned int 
  9200 ;; Return value:  Size  Location     Type
  9201 ;;		None               void
  9202 ;; Registers used:
  9203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9204 ;; Tracked objects:
  9205 ;;		On entry : 0/0
  9206 ;;		On exit  : 0/0
  9207 ;;		Unchanged: 0/0
  9208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9209 ;;      Params:         4       0       0       0       0       0       0
  9210 ;;      Locals:         4       0       0       0       0       0       0
  9211 ;;      Temps:          0      16       0       0       0       0       0
  9212 ;;      Totals:         8      16       0       0       0       0       0
  9213 ;;Total ram usage:       24 bytes
  9214 ;; Hardware stack levels used:    1
  9215 ;; Hardware stack levels required when called:    5
  9216 ;; This function calls:
  9217 ;;		___awdiv
  9218 ;; This function is called by:
  9219 ;;		_LEDsetValue
  9220 ;; This function uses a non-reentrant model
  9221 ;;
  9222                           
  9223                           	psect	text49
  9224  00077C                     __ptext49:
  9225                           	opt stack 0
  9226  00077C                     _LEDsetBar:
  9227                           	opt stack 24
  9228                           
  9229                           ;LED_BarGraph.c: 194: uint16_t a, c;
  9230                           ;LED_BarGraph.c: 196: if (bar < 12)
  9231                           
  9232                           ; BSR set to: 1
  9233                           ;incstack = 0
  9234  00077C  BE24               	btfsc	LEDsetBar@bar+1,7,c
  9235  00077E  D006               	goto	l5770
  9236  000780  5024               	movf	LEDsetBar@bar+1,w,c
  9237  000782  E10F               	bnz	l5772
  9238  000784  0E0C               	movlw	12
  9239  000786  5C23               	subwf	LEDsetBar@bar,w,c
  9240  000788  B0D8               	btfsc	status,0,c
  9241  00078A  D00B               	goto	l5772
  9242  00078C                     l5770:
  9243                           
  9244                           ;LED_BarGraph.c: 197: c = bar / 4;
  9245  00078C  C023  F01B         	movff	LEDsetBar@bar,___awdiv@dividend
  9246  000790  C024  F01C         	movff	LEDsetBar@bar+1,___awdiv@dividend+1
  9247  000794  0E00               	movlw	0
  9248  000796  6E1E               	movwf	___awdiv@divisor+1,c
  9249  000798  0E04               	movlw	4
  9250  00079A  6E1D               	movwf	___awdiv@divisor,c
  9251  00079C  EC9E  F012         	call	___awdiv	;wreg free
  9252  0007A0  D00C               	goto	L3
  9253  0007A2                     l5772:
  9254                           
  9255                           ;LED_BarGraph.c: 198: else
  9256                           ;LED_BarGraph.c: 199: c = (bar - 12) / 4;
  9257  0007A2  0EF4               	movlw	244
  9258  0007A4  2423               	addwf	LEDsetBar@bar,w,c
  9259  0007A6  6E1B               	movwf	___awdiv@dividend,c
  9260  0007A8  0EFF               	movlw	255
  9261  0007AA  2024               	addwfc	LEDsetBar@bar+1,w,c
  9262  0007AC  6E1C               	movwf	___awdiv@dividend+1,c
  9263  0007AE  0E00               	movlw	0
  9264  0007B0  6E1E               	movwf	___awdiv@divisor+1,c
  9265  0007B2  0E04               	movlw	4
  9266  0007B4  6E1D               	movwf	___awdiv@divisor,c
  9267  0007B6  EC9E  F012         	call	___awdiv	;wreg free
  9268  0007BA                     L3:
  9269  0007BA  C01B  F027         	movff	?___awdiv,LEDsetBar@c
  9270  0007BE  C01C  F028         	movff	?___awdiv+1,LEDsetBar@c+1
  9271                           
  9272                           ;LED_BarGraph.c: 201: a = bar % 4;
  9273  0007C2  0E03               	movlw	3
  9274  0007C4  1423               	andwf	LEDsetBar@bar,w,c
  9275  0007C6  6E29               	movwf	LEDsetBar@a,c
  9276  0007C8  6A2A               	clrf	LEDsetBar@a+1,c
  9277                           
  9278                           ;LED_BarGraph.c: 202: if (bar >= 12)
  9279  0007CA  BE24               	btfsc	LEDsetBar@bar+1,7,c
  9280  0007CC  D00A               	goto	l512
  9281  0007CE  5024               	movf	LEDsetBar@bar+1,w,c
  9282  0007D0  E104               	bnz	u5880
  9283  0007D2  0E0C               	movlw	12
  9284  0007D4  5C23               	subwf	LEDsetBar@bar,w,c
  9285  0007D6  A0D8               	btfss	status,0,c
  9286  0007D8  D004               	goto	l512
  9287  0007DA                     u5880:
  9288                           
  9289                           ;LED_BarGraph.c: 203: a += 4;
  9290  0007DA  0E04               	movlw	4
  9291  0007DC  2629               	addwf	LEDsetBar@a,f,c
  9292  0007DE  0E00               	movlw	0
  9293  0007E0  222A               	addwfc	LEDsetBar@a+1,f,c
  9294  0007E2                     l512:
  9295                           
  9296                           ;LED_BarGraph.c: 206: if (color == 1) {
  9297  0007E2  0425               	decf	LEDsetBar@color,w,c
  9298  0007E4  1026               	iorwf	LEDsetBar@color+1,w,c
  9299  0007E6  A4D8               	btfss	status,2,c
  9300  0007E8  D07D               	goto	l5782
  9301                           
  9302                           ;LED_BarGraph.c: 208: displaybuffer[c] |= (1<<(a));
  9303  0007EA  C029  F0EE         	movff	LEDsetBar@a,??_LEDsetBar
  9304  0007EE  0E01               	movlw	1
  9305  0007F0  0100               	movlb	0	; () banked
  9306  0007F2  6FEF               	movwf	(??_LEDsetBar+1)& (0+255),b
  9307  0007F4  0E00               	movlw	0
  9308  0007F6  0100               	movlb	0	; () banked
  9309  0007F8  6FF0               	movwf	(??_LEDsetBar+2)& (0+255),b
  9310  0007FA  0100               	movlb	0	; () banked
  9311  0007FC  2BEE               	incf	??_LEDsetBar& (0+255),f,b
  9312  0007FE  D004               	goto	u5904
  9313  000800                     u5905:
  9314  000800  90D8               	bcf	status,0,c
  9315  000802  0100               	movlb	0	; () banked
  9316  000804  37EF               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  9317  000806  37F0               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  9318  000808                     u5904:
  9319  000808  0100               	movlb	0	; () banked
  9320  00080A  2FEE               	decfsz	??_LEDsetBar& (0+255),f,b
  9321  00080C  D7F9               	goto	u5905
  9322  00080E  C0EF  F0F1         	movff	??_LEDsetBar+1,??_LEDsetBar+3
  9323  000812  C0F0  F0F2         	movff	??_LEDsetBar+2,??_LEDsetBar+4
  9324  000816  0E00               	movlw	0
  9325  000818  0100               	movlb	0	; () banked
  9326  00081A  BFF2               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
  9327  00081C  0EFF               	movlw	255
  9328  00081E  6FF3               	movwf	(??_LEDsetBar+5)& (0+255),b
  9329  000820  6FF4               	movwf	(??_LEDsetBar+6)& (0+255),b
  9330  000822  0E60               	movlw	low _displaybuffer
  9331  000824  0100               	movlb	0	; () banked
  9332  000826  6FF5               	movwf	(??_LEDsetBar+7)& (0+255),b
  9333  000828  0E00               	movlw	high _displaybuffer
  9334  00082A  0100               	movlb	0	; () banked
  9335  00082C  6FF6               	movwf	(??_LEDsetBar+8)& (0+255),b
  9336  00082E  90D8               	bcf	status,0,c
  9337  000830  3427               	rlcf	LEDsetBar@c,w,c
  9338  000832  6ED9               	movwf	fsr2l,c
  9339  000834  3428               	rlcf	LEDsetBar@c+1,w,c
  9340  000836  6EDA               	movwf	fsr2h,c
  9341  000838  90D8               	bcf	status,0,c
  9342  00083A  36D9               	rlcf	fsr2l,f,c
  9343  00083C  36DA               	rlcf	fsr2h,f,c
  9344  00083E  0100               	movlb	0	; () banked
  9345  000840  51F5               	movf	(??_LEDsetBar+7)& (0+255),w,b
  9346  000842  26D9               	addwf	fsr2l,f,c
  9347  000844  0100               	movlb	0	; () banked
  9348  000846  51F6               	movf	(??_LEDsetBar+8)& (0+255),w,b
  9349  000848  22DA               	addwfc	fsr2h,f,c
  9350  00084A  0100               	movlb	0	; () banked
  9351  00084C  51F1               	movf	(??_LEDsetBar+3)& (0+255),w,b
  9352  00084E  12DE               	iorwf	postinc2,f,c
  9353  000850  51F2               	movf	(??_LEDsetBar+4)& (0+255),w,b
  9354  000852  12DE               	iorwf	postinc2,f,c
  9355  000854  51F3               	movf	(??_LEDsetBar+5)& (0+255),w,b
  9356  000856  12DE               	iorwf	postinc2,f,c
  9357  000858  51F4               	movf	(??_LEDsetBar+6)& (0+255),w,b
  9358  00085A  12DE               	iorwf	postinc2,f,c
  9359                           
  9360                           ;LED_BarGraph.c: 210: displaybuffer[c] &= ~(1<<(a + 8));
  9361  00085C  C029  F0EE         	movff	LEDsetBar@a,??_LEDsetBar
  9362  000860  0E08               	movlw	8
  9363  000862  0100               	movlb	0	; () banked
  9364  000864  27EE               	addwf	??_LEDsetBar& (0+255),f,b
  9365  000866  0E01               	movlw	1
  9366  000868  0100               	movlb	0	; () banked
  9367  00086A  6FEF               	movwf	(??_LEDsetBar+1)& (0+255),b
  9368  00086C  0E00               	movlw	0
  9369  00086E  0100               	movlb	0	; () banked
  9370  000870  6FF0               	movwf	(??_LEDsetBar+2)& (0+255),b
  9371  000872  0100               	movlb	0	; () banked
  9372  000874  2BEE               	incf	??_LEDsetBar& (0+255),f,b
  9373  000876  D004               	goto	u5914
  9374  000878                     u5915:
  9375  000878  90D8               	bcf	status,0,c
  9376  00087A  0100               	movlb	0	; () banked
  9377  00087C  37EF               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  9378  00087E  37F0               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  9379  000880                     u5914:
  9380  000880  0100               	movlb	0	; () banked
  9381  000882  2FEE               	decfsz	??_LEDsetBar& (0+255),f,b
  9382  000884  D7F9               	goto	u5915
  9383  000886  0100               	movlb	0	; () banked
  9384  000888  1DEF               	comf	(??_LEDsetBar+1)& (0+255),w,b
  9385  00088A  0100               	movlb	0	; () banked
  9386  00088C  6FF1               	movwf	(??_LEDsetBar+3)& (0+255),b
  9387  00088E  0100               	movlb	0	; () banked
  9388  000890  1DF0               	comf	(??_LEDsetBar+2)& (0+255),w,b
  9389  000892  0100               	movlb	0	; () banked
  9390  000894  6FF2               	movwf	(??_LEDsetBar+4)& (0+255),b
  9391  000896  0100               	movlb	0	; () banked
  9392  000898  6BF3               	clrf	(??_LEDsetBar+5)& (0+255),b
  9393  00089A  0100               	movlb	0	; () banked
  9394  00089C  BFF2               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
  9395  00089E  07F3               	decf	(??_LEDsetBar+5)& (0+255),f,b
  9396  0008A0  0100               	movlb	0	; () banked
  9397  0008A2  51F3               	movf	(??_LEDsetBar+5)& (0+255),w,b
  9398  0008A4  0100               	movlb	0	; () banked
  9399  0008A6  6FF4               	movwf	(??_LEDsetBar+6)& (0+255),b
  9400  0008A8  0E60               	movlw	low _displaybuffer
  9401  0008AA  0100               	movlb	0	; () banked
  9402  0008AC  6FF5               	movwf	(??_LEDsetBar+7)& (0+255),b
  9403  0008AE  0E00               	movlw	high _displaybuffer
  9404  0008B0  0100               	movlb	0	; () banked
  9405  0008B2  6FF6               	movwf	(??_LEDsetBar+8)& (0+255),b
  9406  0008B4  90D8               	bcf	status,0,c
  9407  0008B6  3427               	rlcf	LEDsetBar@c,w,c
  9408  0008B8  6ED9               	movwf	fsr2l,c
  9409  0008BA  3428               	rlcf	LEDsetBar@c+1,w,c
  9410  0008BC  6EDA               	movwf	fsr2h,c
  9411  0008BE  90D8               	bcf	status,0,c
  9412  0008C0  36D9               	rlcf	fsr2l,f,c
  9413  0008C2  36DA               	rlcf	fsr2h,f,c
  9414  0008C4  0100               	movlb	0	; () banked
  9415  0008C6  51F5               	movf	(??_LEDsetBar+7)& (0+255),w,b
  9416  0008C8  26D9               	addwf	fsr2l,f,c
  9417  0008CA  0100               	movlb	0	; () banked
  9418  0008CC  51F6               	movf	(??_LEDsetBar+8)& (0+255),w,b
  9419  0008CE  22DA               	addwfc	fsr2h,f,c
  9420  0008D0  0100               	movlb	0	; () banked
  9421  0008D2  51F1               	movf	(??_LEDsetBar+3)& (0+255),w,b
  9422  0008D4  16DE               	andwf	postinc2,f,c
  9423  0008D6  51F2               	movf	(??_LEDsetBar+4)& (0+255),w,b
  9424  0008D8  16DE               	andwf	postinc2,f,c
  9425  0008DA  51F3               	movf	(??_LEDsetBar+5)& (0+255),w,b
  9426  0008DC  16DE               	andwf	postinc2,f,c
  9427  0008DE  51F4               	movf	(??_LEDsetBar+6)& (0+255),w,b
  9428  0008E0  16DE               	andwf	postinc2,f,c
  9429                           
  9430                           ;LED_BarGraph.c: 211: } else if (color == 2) {
  9431  0008E2  0012               	return	
  9432  0008E4                     l5782:
  9433  0008E4  0E02               	movlw	2
  9434  0008E6  1825               	xorwf	LEDsetBar@color,w,c
  9435  0008E8  1026               	iorwf	LEDsetBar@color+1,w,c
  9436  0008EA  A4D8               	btfss	status,2,c
  9437  0008EC  D05A               	goto	l5786
  9438                           
  9439                           ;LED_BarGraph.c: 213: displaybuffer[c] |= (1<<(a)) | (1<<(a + 8));
  9440  0008EE  C029  F0EE         	movff	LEDsetBar@a,??_LEDsetBar
  9441  0008F2  0E08               	movlw	8
  9442  0008F4  0100               	movlb	0	; () banked
  9443  0008F6  27EE               	addwf	??_LEDsetBar& (0+255),f,b
  9444  0008F8  0E01               	movlw	1
  9445  0008FA  0100               	movlb	0	; () banked
  9446  0008FC  6FEF               	movwf	(??_LEDsetBar+1)& (0+255),b
  9447  0008FE  0E00               	movlw	0
  9448  000900  0100               	movlb	0	; () banked
  9449  000902  6FF0               	movwf	(??_LEDsetBar+2)& (0+255),b
  9450  000904  0100               	movlb	0	; () banked
  9451  000906  2BEE               	incf	??_LEDsetBar& (0+255),f,b
  9452  000908  D004               	goto	u5934
  9453  00090A                     u5935:
  9454  00090A  90D8               	bcf	status,0,c
  9455  00090C  0100               	movlb	0	; () banked
  9456  00090E  37EF               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  9457  000910  37F0               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  9458  000912                     u5934:
  9459  000912  0100               	movlb	0	; () banked
  9460  000914  2FEE               	decfsz	??_LEDsetBar& (0+255),f,b
  9461  000916  D7F9               	goto	u5935
  9462  000918  C029  F0F1         	movff	LEDsetBar@a,??_LEDsetBar+3
  9463  00091C  0E01               	movlw	1
  9464  00091E  0100               	movlb	0	; () banked
  9465  000920  6FF2               	movwf	(??_LEDsetBar+4)& (0+255),b
  9466  000922  0E00               	movlw	0
  9467  000924  0100               	movlb	0	; () banked
  9468  000926  6FF3               	movwf	(??_LEDsetBar+5)& (0+255),b
  9469  000928  0100               	movlb	0	; () banked
  9470  00092A  2BF1               	incf	(??_LEDsetBar+3)& (0+255),f,b
  9471  00092C  D004               	goto	u5944
  9472  00092E                     u5945:
  9473  00092E  90D8               	bcf	status,0,c
  9474  000930  0100               	movlb	0	; () banked
  9475  000932  37F2               	rlcf	(??_LEDsetBar+4)& (0+255),f,b
  9476  000934  37F3               	rlcf	(??_LEDsetBar+5)& (0+255),f,b
  9477  000936                     u5944:
  9478  000936  0100               	movlb	0	; () banked
  9479  000938  2FF1               	decfsz	(??_LEDsetBar+3)& (0+255),f,b
  9480  00093A  D7F9               	goto	u5945
  9481  00093C  0100               	movlb	0	; () banked
  9482  00093E  51EF               	movf	(??_LEDsetBar+1)& (0+255),w,b
  9483  000940  0100               	movlb	0	; () banked
  9484  000942  11F2               	iorwf	(??_LEDsetBar+4)& (0+255),w,b
  9485  000944  0100               	movlb	0	; () banked
  9486  000946  6FF4               	movwf	(??_LEDsetBar+6)& (0+255),b
  9487  000948  0100               	movlb	0	; () banked
  9488  00094A  51F0               	movf	(??_LEDsetBar+2)& (0+255),w,b
  9489  00094C  0100               	movlb	0	; () banked
  9490  00094E  11F3               	iorwf	(??_LEDsetBar+5)& (0+255),w,b
  9491  000950  0100               	movlb	0	; () banked
  9492  000952  6FF5               	movwf	(??_LEDsetBar+7)& (0+255),b
  9493  000954  0100               	movlb	0	; () banked
  9494  000956  6BF6               	clrf	(??_LEDsetBar+8)& (0+255),b
  9495  000958  0100               	movlb	0	; () banked
  9496  00095A  BFF5               	btfsc	(??_LEDsetBar+7)& (0+255),7,b
  9497  00095C  07F6               	decf	(??_LEDsetBar+8)& (0+255),f,b
  9498  00095E  0100               	movlb	0	; () banked
  9499  000960  51F6               	movf	(??_LEDsetBar+8)& (0+255),w,b
  9500  000962  0100               	movlb	0	; () banked
  9501  000964  6FF7               	movwf	(??_LEDsetBar+9)& (0+255),b
  9502  000966  0E60               	movlw	low _displaybuffer
  9503  000968  0100               	movlb	0	; () banked
  9504  00096A  6FF8               	movwf	(??_LEDsetBar+10)& (0+255),b
  9505  00096C  0E00               	movlw	high _displaybuffer
  9506  00096E  0100               	movlb	0	; () banked
  9507  000970  6FF9               	movwf	(??_LEDsetBar+11)& (0+255),b
  9508  000972  90D8               	bcf	status,0,c
  9509  000974  3427               	rlcf	LEDsetBar@c,w,c
  9510  000976  6ED9               	movwf	fsr2l,c
  9511  000978  3428               	rlcf	LEDsetBar@c+1,w,c
  9512  00097A  6EDA               	movwf	fsr2h,c
  9513  00097C  90D8               	bcf	status,0,c
  9514  00097E  36D9               	rlcf	fsr2l,f,c
  9515  000980  36DA               	rlcf	fsr2h,f,c
  9516  000982  0100               	movlb	0	; () banked
  9517  000984  51F8               	movf	(??_LEDsetBar+10)& (0+255),w,b
  9518  000986  26D9               	addwf	fsr2l,f,c
  9519  000988  0100               	movlb	0	; () banked
  9520  00098A  51F9               	movf	(??_LEDsetBar+11)& (0+255),w,b
  9521  00098C  22DA               	addwfc	fsr2h,f,c
  9522  00098E  0100               	movlb	0	; () banked
  9523  000990  51F4               	movf	(??_LEDsetBar+6)& (0+255),w,b
  9524  000992  12DE               	iorwf	postinc2,f,c
  9525  000994  51F5               	movf	(??_LEDsetBar+7)& (0+255),w,b
  9526  000996  12DE               	iorwf	postinc2,f,c
  9527  000998  51F6               	movf	(??_LEDsetBar+8)& (0+255),w,b
  9528  00099A  12DE               	iorwf	postinc2,f,c
  9529  00099C  51F7               	movf	(??_LEDsetBar+9)& (0+255),w,b
  9530  00099E  12DE               	iorwf	postinc2,f,c
  9531                           
  9532                           ;LED_BarGraph.c: 214: } else if (color == 0) {
  9533  0009A0  0012               	return	
  9534  0009A2                     l5786:
  9535  0009A2  5025               	movf	LEDsetBar@color,w,c
  9536  0009A4  1026               	iorwf	LEDsetBar@color+1,w,c
  9537  0009A6  A4D8               	btfss	status,2,c
  9538  0009A8  D06A               	goto	l5790
  9539                           
  9540                           ;LED_BarGraph.c: 216: displaybuffer[c] &= ~(1<<(a)) & ~(1<<(a + 8));
  9541  0009AA  C029  F0EE         	movff	LEDsetBar@a,??_LEDsetBar
  9542  0009AE  0E08               	movlw	8
  9543  0009B0  0100               	movlb	0	; () banked
  9544  0009B2  27EE               	addwf	??_LEDsetBar& (0+255),f,b
  9545  0009B4  0E01               	movlw	1
  9546  0009B6  0100               	movlb	0	; () banked
  9547  0009B8  6FEF               	movwf	(??_LEDsetBar+1)& (0+255),b
  9548  0009BA  0E00               	movlw	0
  9549  0009BC  0100               	movlb	0	; () banked
  9550  0009BE  6FF0               	movwf	(??_LEDsetBar+2)& (0+255),b
  9551  0009C0  0100               	movlb	0	; () banked
  9552  0009C2  2BEE               	incf	??_LEDsetBar& (0+255),f,b
  9553  0009C4  D004               	goto	u5964
  9554  0009C6                     u5965:
  9555  0009C6  90D8               	bcf	status,0,c
  9556  0009C8  0100               	movlb	0	; () banked
  9557  0009CA  37EF               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  9558  0009CC  37F0               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  9559  0009CE                     u5964:
  9560  0009CE  0100               	movlb	0	; () banked
  9561  0009D0  2FEE               	decfsz	??_LEDsetBar& (0+255),f,b
  9562  0009D2  D7F9               	goto	u5965
  9563  0009D4  0100               	movlb	0	; () banked
  9564  0009D6  1DEF               	comf	(??_LEDsetBar+1)& (0+255),w,b
  9565  0009D8  0100               	movlb	0	; () banked
  9566  0009DA  6FF1               	movwf	(??_LEDsetBar+3)& (0+255),b
  9567  0009DC  0100               	movlb	0	; () banked
  9568  0009DE  1DF0               	comf	(??_LEDsetBar+2)& (0+255),w,b
  9569  0009E0  0100               	movlb	0	; () banked
  9570  0009E2  6FF2               	movwf	(??_LEDsetBar+4)& (0+255),b
  9571  0009E4  C029  F0F3         	movff	LEDsetBar@a,??_LEDsetBar+5
  9572  0009E8  0E01               	movlw	1
  9573  0009EA  0100               	movlb	0	; () banked
  9574  0009EC  6FF4               	movwf	(??_LEDsetBar+6)& (0+255),b
  9575  0009EE  0E00               	movlw	0
  9576  0009F0  0100               	movlb	0	; () banked
  9577  0009F2  6FF5               	movwf	(??_LEDsetBar+7)& (0+255),b
  9578  0009F4  0100               	movlb	0	; () banked
  9579  0009F6  2BF3               	incf	(??_LEDsetBar+5)& (0+255),f,b
  9580  0009F8  D004               	goto	u5974
  9581  0009FA                     u5975:
  9582  0009FA  90D8               	bcf	status,0,c
  9583  0009FC  0100               	movlb	0	; () banked
  9584  0009FE  37F4               	rlcf	(??_LEDsetBar+6)& (0+255),f,b
  9585  000A00  37F5               	rlcf	(??_LEDsetBar+7)& (0+255),f,b
  9586  000A02                     u5974:
  9587  000A02  0100               	movlb	0	; () banked
  9588  000A04  2FF3               	decfsz	(??_LEDsetBar+5)& (0+255),f,b
  9589  000A06  D7F9               	goto	u5975
  9590  000A08  0100               	movlb	0	; () banked
  9591  000A0A  1DF4               	comf	(??_LEDsetBar+6)& (0+255),w,b
  9592  000A0C  0100               	movlb	0	; () banked
  9593  000A0E  6FF6               	movwf	(??_LEDsetBar+8)& (0+255),b
  9594  000A10  0100               	movlb	0	; () banked
  9595  000A12  1DF5               	comf	(??_LEDsetBar+7)& (0+255),w,b
  9596  000A14  0100               	movlb	0	; () banked
  9597  000A16  6FF7               	movwf	(??_LEDsetBar+9)& (0+255),b
  9598  000A18  0100               	movlb	0	; () banked
  9599  000A1A  51F1               	movf	(??_LEDsetBar+3)& (0+255),w,b
  9600  000A1C  0100               	movlb	0	; () banked
  9601  000A1E  15F6               	andwf	(??_LEDsetBar+8)& (0+255),w,b
  9602  000A20  0100               	movlb	0	; () banked
  9603  000A22  6FF8               	movwf	(??_LEDsetBar+10)& (0+255),b
  9604  000A24  0100               	movlb	0	; () banked
  9605  000A26  51F2               	movf	(??_LEDsetBar+4)& (0+255),w,b
  9606  000A28  0100               	movlb	0	; () banked
  9607  000A2A  15F7               	andwf	(??_LEDsetBar+9)& (0+255),w,b
  9608  000A2C  0100               	movlb	0	; () banked
  9609  000A2E  6FF9               	movwf	(??_LEDsetBar+11)& (0+255),b
  9610  000A30  0100               	movlb	0	; () banked
  9611  000A32  6BFA               	clrf	(??_LEDsetBar+12)& (0+255),b
  9612  000A34  0100               	movlb	0	; () banked
  9613  000A36  BFF9               	btfsc	(??_LEDsetBar+11)& (0+255),7,b
  9614  000A38  07FA               	decf	(??_LEDsetBar+12)& (0+255),f,b
  9615  000A3A  0100               	movlb	0	; () banked
  9616  000A3C  51FA               	movf	(??_LEDsetBar+12)& (0+255),w,b
  9617  000A3E  0100               	movlb	0	; () banked
  9618  000A40  6FFB               	movwf	(??_LEDsetBar+13)& (0+255),b
  9619  000A42  0E60               	movlw	low _displaybuffer
  9620  000A44  0100               	movlb	0	; () banked
  9621  000A46  6FFC               	movwf	(??_LEDsetBar+14)& (0+255),b
  9622  000A48  0E00               	movlw	high _displaybuffer
  9623  000A4A  0100               	movlb	0	; () banked
  9624  000A4C  6FFD               	movwf	(??_LEDsetBar+15)& (0+255),b
  9625  000A4E  90D8               	bcf	status,0,c
  9626  000A50  3427               	rlcf	LEDsetBar@c,w,c
  9627  000A52  6ED9               	movwf	fsr2l,c
  9628  000A54  3428               	rlcf	LEDsetBar@c+1,w,c
  9629  000A56  6EDA               	movwf	fsr2h,c
  9630  000A58  90D8               	bcf	status,0,c
  9631  000A5A  36D9               	rlcf	fsr2l,f,c
  9632  000A5C  36DA               	rlcf	fsr2h,f,c
  9633  000A5E  0100               	movlb	0	; () banked
  9634  000A60  51FC               	movf	(??_LEDsetBar+14)& (0+255),w,b
  9635  000A62  26D9               	addwf	fsr2l,f,c
  9636  000A64  0100               	movlb	0	; () banked
  9637  000A66  51FD               	movf	(??_LEDsetBar+15)& (0+255),w,b
  9638  000A68  22DA               	addwfc	fsr2h,f,c
  9639  000A6A  0100               	movlb	0	; () banked
  9640  000A6C  51F8               	movf	(??_LEDsetBar+10)& (0+255),w,b
  9641  000A6E  16DE               	andwf	postinc2,f,c
  9642  000A70  51F9               	movf	(??_LEDsetBar+11)& (0+255),w,b
  9643  000A72  16DE               	andwf	postinc2,f,c
  9644  000A74  51FA               	movf	(??_LEDsetBar+12)& (0+255),w,b
  9645  000A76  16DE               	andwf	postinc2,f,c
  9646  000A78  51FB               	movf	(??_LEDsetBar+13)& (0+255),w,b
  9647  000A7A  16DE               	andwf	postinc2,f,c
  9648                           
  9649                           ;LED_BarGraph.c: 217: } else if (color == 3) {
  9650  000A7C  0012               	return	
  9651  000A7E                     l5790:
  9652  000A7E  0E03               	movlw	3
  9653  000A80  1825               	xorwf	LEDsetBar@color,w,c
  9654  000A82  1026               	iorwf	LEDsetBar@color+1,w,c
  9655  000A84  A4D8               	btfss	status,2,c
  9656  000A86  0012               	return	
  9657                           
  9658                           ;LED_BarGraph.c: 219: displaybuffer[c] |= (1<<(a + 8));
  9659  000A88  C029  F0EE         	movff	LEDsetBar@a,??_LEDsetBar
  9660  000A8C  0E08               	movlw	8
  9661  000A8E  0100               	movlb	0	; () banked
  9662  000A90  27EE               	addwf	??_LEDsetBar& (0+255),f,b
  9663  000A92  0E01               	movlw	1
  9664  000A94  0100               	movlb	0	; () banked
  9665  000A96  6FEF               	movwf	(??_LEDsetBar+1)& (0+255),b
  9666  000A98  0E00               	movlw	0
  9667  000A9A  0100               	movlb	0	; () banked
  9668  000A9C  6FF0               	movwf	(??_LEDsetBar+2)& (0+255),b
  9669  000A9E  0100               	movlb	0	; () banked
  9670  000AA0  2BEE               	incf	??_LEDsetBar& (0+255),f,b
  9671  000AA2  D004               	goto	u5994
  9672  000AA4                     u5995:
  9673  000AA4  90D8               	bcf	status,0,c
  9674  000AA6  0100               	movlb	0	; () banked
  9675  000AA8  37EF               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  9676  000AAA  37F0               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  9677  000AAC                     u5994:
  9678  000AAC  0100               	movlb	0	; () banked
  9679  000AAE  2FEE               	decfsz	??_LEDsetBar& (0+255),f,b
  9680  000AB0  D7F9               	goto	u5995
  9681  000AB2  C0EF  F0F1         	movff	??_LEDsetBar+1,??_LEDsetBar+3
  9682  000AB6  C0F0  F0F2         	movff	??_LEDsetBar+2,??_LEDsetBar+4
  9683  000ABA  0E00               	movlw	0
  9684  000ABC  0100               	movlb	0	; () banked
  9685  000ABE  BFF2               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
  9686  000AC0  0EFF               	movlw	255
  9687  000AC2  6FF3               	movwf	(??_LEDsetBar+5)& (0+255),b
  9688  000AC4  6FF4               	movwf	(??_LEDsetBar+6)& (0+255),b
  9689  000AC6  0E60               	movlw	low _displaybuffer
  9690  000AC8  0100               	movlb	0	; () banked
  9691  000ACA  6FF5               	movwf	(??_LEDsetBar+7)& (0+255),b
  9692  000ACC  0E00               	movlw	high _displaybuffer
  9693  000ACE  0100               	movlb	0	; () banked
  9694  000AD0  6FF6               	movwf	(??_LEDsetBar+8)& (0+255),b
  9695  000AD2  90D8               	bcf	status,0,c
  9696  000AD4  3427               	rlcf	LEDsetBar@c,w,c
  9697  000AD6  6ED9               	movwf	fsr2l,c
  9698  000AD8  3428               	rlcf	LEDsetBar@c+1,w,c
  9699  000ADA  6EDA               	movwf	fsr2h,c
  9700  000ADC  90D8               	bcf	status,0,c
  9701  000ADE  36D9               	rlcf	fsr2l,f,c
  9702  000AE0  36DA               	rlcf	fsr2h,f,c
  9703  000AE2  0100               	movlb	0	; () banked
  9704  000AE4  51F5               	movf	(??_LEDsetBar+7)& (0+255),w,b
  9705  000AE6  26D9               	addwf	fsr2l,f,c
  9706  000AE8  0100               	movlb	0	; () banked
  9707  000AEA  51F6               	movf	(??_LEDsetBar+8)& (0+255),w,b
  9708  000AEC  22DA               	addwfc	fsr2h,f,c
  9709  000AEE  0100               	movlb	0	; () banked
  9710  000AF0  51F1               	movf	(??_LEDsetBar+3)& (0+255),w,b
  9711  000AF2  12DE               	iorwf	postinc2,f,c
  9712  000AF4  51F2               	movf	(??_LEDsetBar+4)& (0+255),w,b
  9713  000AF6  12DE               	iorwf	postinc2,f,c
  9714  000AF8  51F3               	movf	(??_LEDsetBar+5)& (0+255),w,b
  9715  000AFA  12DE               	iorwf	postinc2,f,c
  9716  000AFC  51F4               	movf	(??_LEDsetBar+6)& (0+255),w,b
  9717  000AFE  12DE               	iorwf	postinc2,f,c
  9718                           
  9719                           ;LED_BarGraph.c: 221: displaybuffer[c] &= ~(1<<(a));
  9720  000B00  C029  F0EE         	movff	LEDsetBar@a,??_LEDsetBar
  9721  000B04  0E01               	movlw	1
  9722  000B06  0100               	movlb	0	; () banked
  9723  000B08  6FEF               	movwf	(??_LEDsetBar+1)& (0+255),b
  9724  000B0A  0E00               	movlw	0
  9725  000B0C  0100               	movlb	0	; () banked
  9726  000B0E  6FF0               	movwf	(??_LEDsetBar+2)& (0+255),b
  9727  000B10  0100               	movlb	0	; () banked
  9728  000B12  2BEE               	incf	??_LEDsetBar& (0+255),f,b
  9729  000B14  D004               	goto	u6004
  9730  000B16                     u6005:
  9731  000B16  90D8               	bcf	status,0,c
  9732  000B18  0100               	movlb	0	; () banked
  9733  000B1A  37EF               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  9734  000B1C  37F0               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  9735  000B1E                     u6004:
  9736  000B1E  0100               	movlb	0	; () banked
  9737  000B20  2FEE               	decfsz	??_LEDsetBar& (0+255),f,b
  9738  000B22  D7F9               	goto	u6005
  9739  000B24  0100               	movlb	0	; () banked
  9740  000B26  1DEF               	comf	(??_LEDsetBar+1)& (0+255),w,b
  9741  000B28  0100               	movlb	0	; () banked
  9742  000B2A  6FF1               	movwf	(??_LEDsetBar+3)& (0+255),b
  9743  000B2C  0100               	movlb	0	; () banked
  9744  000B2E  1DF0               	comf	(??_LEDsetBar+2)& (0+255),w,b
  9745  000B30  0100               	movlb	0	; () banked
  9746  000B32  6FF2               	movwf	(??_LEDsetBar+4)& (0+255),b
  9747  000B34  0100               	movlb	0	; () banked
  9748  000B36  6BF3               	clrf	(??_LEDsetBar+5)& (0+255),b
  9749  000B38  0100               	movlb	0	; () banked
  9750  000B3A  BFF2               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
  9751  000B3C  07F3               	decf	(??_LEDsetBar+5)& (0+255),f,b
  9752  000B3E  0100               	movlb	0	; () banked
  9753  000B40  51F3               	movf	(??_LEDsetBar+5)& (0+255),w,b
  9754  000B42  0100               	movlb	0	; () banked
  9755  000B44  6FF4               	movwf	(??_LEDsetBar+6)& (0+255),b
  9756  000B46  0E60               	movlw	low _displaybuffer
  9757  000B48  0100               	movlb	0	; () banked
  9758  000B4A  6FF5               	movwf	(??_LEDsetBar+7)& (0+255),b
  9759  000B4C  0E00               	movlw	high _displaybuffer
  9760  000B4E  0100               	movlb	0	; () banked
  9761  000B50  6FF6               	movwf	(??_LEDsetBar+8)& (0+255),b
  9762  000B52  90D8               	bcf	status,0,c
  9763  000B54  3427               	rlcf	LEDsetBar@c,w,c
  9764  000B56  6ED9               	movwf	fsr2l,c
  9765  000B58  3428               	rlcf	LEDsetBar@c+1,w,c
  9766  000B5A  6EDA               	movwf	fsr2h,c
  9767  000B5C  90D8               	bcf	status,0,c
  9768  000B5E  36D9               	rlcf	fsr2l,f,c
  9769  000B60  36DA               	rlcf	fsr2h,f,c
  9770  000B62  0100               	movlb	0	; () banked
  9771  000B64  51F5               	movf	(??_LEDsetBar+7)& (0+255),w,b
  9772  000B66  26D9               	addwf	fsr2l,f,c
  9773  000B68  0100               	movlb	0	; () banked
  9774  000B6A  51F6               	movf	(??_LEDsetBar+8)& (0+255),w,b
  9775  000B6C  22DA               	addwfc	fsr2h,f,c
  9776  000B6E  0100               	movlb	0	; () banked
  9777  000B70  51F1               	movf	(??_LEDsetBar+3)& (0+255),w,b
  9778  000B72  16DE               	andwf	postinc2,f,c
  9779  000B74  51F2               	movf	(??_LEDsetBar+4)& (0+255),w,b
  9780  000B76  16DE               	andwf	postinc2,f,c
  9781  000B78  51F3               	movf	(??_LEDsetBar+5)& (0+255),w,b
  9782  000B7A  16DE               	andwf	postinc2,f,c
  9783  000B7C  51F4               	movf	(??_LEDsetBar+6)& (0+255),w,b
  9784  000B7E  16DE               	andwf	postinc2,f,c
  9785                           
  9786                           ; BSR set to: 0
  9787                           
  9788                           ; BSR set to: 0
  9789                           
  9790                           ; BSR set to: 0
  9791  000B80  0012               	return	
  9792  000B82                     __end_of_LEDsetBar:
  9793                           	opt stack 0
  9794                           tosu	equ	0xFFF
  9795                           tosh	equ	0xFFE
  9796                           tosl	equ	0xFFD
  9797                           pclath	equ	0xFFA
  9798                           tblptru	equ	0xFF8
  9799                           tblptrh	equ	0xFF7
  9800                           tblptrl	equ	0xFF6
  9801                           tablat	equ	0xFF5
  9802                           prodh	equ	0xFF4
  9803                           prodl	equ	0xFF3
  9804                           intcon	equ	0xFF2
  9805                           intcon2	equ	0xFF1
  9806                           postinc0	equ	0xFEE
  9807                           wreg	equ	0xFE8
  9808                           indf2	equ	0xFDF
  9809                           postinc2	equ	0xFDE
  9810                           postdec2	equ	0xFDD
  9811                           plusw2	equ	0xFDB
  9812                           fsr2h	equ	0xFDA
  9813                           fsr2l	equ	0xFD9
  9814                           status	equ	0xFD8
  9815                           
  9816 ;; *************** function ___awdiv *****************
  9817 ;; Defined at:
  9818 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  9819 ;; Parameters:    Size  Location     Type
  9820 ;;  dividend        2   26[COMRAM] int 
  9821 ;;  divisor         2   28[COMRAM] int 
  9822 ;; Auto vars:     Size  Location     Type
  9823 ;;  quotient        2   32[COMRAM] int 
  9824 ;;  sign            1   31[COMRAM] unsigned char 
  9825 ;;  counter         1   30[COMRAM] unsigned char 
  9826 ;; Return value:  Size  Location     Type
  9827 ;;                  2   26[COMRAM] int 
  9828 ;; Registers used:
  9829 ;;		wreg, status,2, status,0
  9830 ;; Tracked objects:
  9831 ;;		On entry : 0/0
  9832 ;;		On exit  : 0/0
  9833 ;;		Unchanged: 0/0
  9834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9835 ;;      Params:         4       0       0       0       0       0       0
  9836 ;;      Locals:         4       0       0       0       0       0       0
  9837 ;;      Temps:          0       0       0       0       0       0       0
  9838 ;;      Totals:         8       0       0       0       0       0       0
  9839 ;;Total ram usage:        8 bytes
  9840 ;; Hardware stack levels used:    1
  9841 ;; Hardware stack levels required when called:    4
  9842 ;; This function calls:
  9843 ;;		Nothing
  9844 ;; This function is called by:
  9845 ;;		_LEDsetBar
  9846 ;;		_begin
  9847 ;; This function uses a non-reentrant model
  9848 ;;
  9849                           
  9850                           	psect	text50
  9851  00253C                     __ptext50:
  9852                           	opt stack 0
  9853  00253C                     ___awdiv:
  9854                           	opt stack 24
  9855                           
  9856                           ;incstack = 0
  9857  00253C  0E00               	movlw	0
  9858  00253E  6E20               	movwf	___awdiv@sign,c
  9859  002540  AE1E               	btfss	___awdiv@divisor+1,7,c
  9860  002542  D006               	goto	l5652
  9861  002544  6C1D               	negf	___awdiv@divisor,c
  9862  002546  1E1E               	comf	___awdiv@divisor+1,f,c
  9863  002548  B0D8               	btfsc	status,0,c
  9864  00254A  2A1E               	incf	___awdiv@divisor+1,f,c
  9865  00254C  0E01               	movlw	1
  9866  00254E  6E20               	movwf	___awdiv@sign,c
  9867  002550                     l5652:
  9868  002550  AE1C               	btfss	___awdiv@dividend+1,7,c
  9869  002552  D006               	goto	l5658
  9870  002554  6C1B               	negf	___awdiv@dividend,c
  9871  002556  1E1C               	comf	___awdiv@dividend+1,f,c
  9872  002558  B0D8               	btfsc	status,0,c
  9873  00255A  2A1C               	incf	___awdiv@dividend+1,f,c
  9874  00255C  0E01               	movlw	1
  9875  00255E  1A20               	xorwf	___awdiv@sign,f,c
  9876  002560                     l5658:
  9877  002560  0E00               	movlw	0
  9878  002562  6E22               	movwf	___awdiv@quotient+1,c
  9879  002564  0E00               	movlw	0
  9880  002566  6E21               	movwf	___awdiv@quotient,c
  9881  002568  501D               	movf	___awdiv@divisor,w,c
  9882  00256A  101E               	iorwf	___awdiv@divisor+1,w,c
  9883  00256C  B4D8               	btfsc	status,2,c
  9884  00256E  D01C               	goto	l5680
  9885  002570  0E01               	movlw	1
  9886  002572  6E1F               	movwf	___awdiv@counter,c
  9887  002574  D004               	goto	l5666
  9888  002576                     l5664:
  9889  002576  90D8               	bcf	status,0,c
  9890  002578  361D               	rlcf	___awdiv@divisor,f,c
  9891  00257A  361E               	rlcf	___awdiv@divisor+1,f,c
  9892  00257C  2A1F               	incf	___awdiv@counter,f,c
  9893  00257E                     l5666:
  9894  00257E  AE1E               	btfss	___awdiv@divisor+1,7,c
  9895  002580  D7FA               	goto	l5664
  9896  002582                     l5668:
  9897  002582  90D8               	bcf	status,0,c
  9898  002584  3621               	rlcf	___awdiv@quotient,f,c
  9899  002586  3622               	rlcf	___awdiv@quotient+1,f,c
  9900  002588  501D               	movf	___awdiv@divisor,w,c
  9901  00258A  5C1B               	subwf	___awdiv@dividend,w,c
  9902  00258C  501E               	movf	___awdiv@divisor+1,w,c
  9903  00258E  581C               	subwfb	___awdiv@dividend+1,w,c
  9904  002590  A0D8               	btfss	status,0,c
  9905  002592  D005               	goto	l5676
  9906  002594  501D               	movf	___awdiv@divisor,w,c
  9907  002596  5E1B               	subwf	___awdiv@dividend,f,c
  9908  002598  501E               	movf	___awdiv@divisor+1,w,c
  9909  00259A  5A1C               	subwfb	___awdiv@dividend+1,f,c
  9910  00259C  8021               	bsf	___awdiv@quotient,0,c
  9911  00259E                     l5676:
  9912  00259E  90D8               	bcf	status,0,c
  9913  0025A0  321E               	rrcf	___awdiv@divisor+1,f,c
  9914  0025A2  321D               	rrcf	___awdiv@divisor,f,c
  9915  0025A4  2E1F               	decfsz	___awdiv@counter,f,c
  9916  0025A6  D7ED               	goto	l5668
  9917  0025A8                     l5680:
  9918  0025A8  5020               	movf	___awdiv@sign,w,c
  9919  0025AA  B4D8               	btfsc	status,2,c
  9920  0025AC  D004               	goto	l5684
  9921  0025AE  6C21               	negf	___awdiv@quotient,c
  9922  0025B0  1E22               	comf	___awdiv@quotient+1,f,c
  9923  0025B2  B0D8               	btfsc	status,0,c
  9924  0025B4  2A22               	incf	___awdiv@quotient+1,f,c
  9925  0025B6                     l5684:
  9926  0025B6  C021  F01B         	movff	___awdiv@quotient,?___awdiv
  9927  0025BA  C022  F01C         	movff	___awdiv@quotient+1,?___awdiv+1
  9928  0025BE  0012               	return	
  9929  0025C0                     __end_of___awdiv:
  9930                           	opt stack 0
  9931                           tosu	equ	0xFFF
  9932                           tosh	equ	0xFFE
  9933                           tosl	equ	0xFFD
  9934                           pclath	equ	0xFFA
  9935                           tblptru	equ	0xFF8
  9936                           tblptrh	equ	0xFF7
  9937                           tblptrl	equ	0xFF6
  9938                           tablat	equ	0xFF5
  9939                           prodh	equ	0xFF4
  9940                           prodl	equ	0xFF3
  9941                           intcon	equ	0xFF2
  9942                           intcon2	equ	0xFF1
  9943                           postinc0	equ	0xFEE
  9944                           wreg	equ	0xFE8
  9945                           indf2	equ	0xFDF
  9946                           postinc2	equ	0xFDE
  9947                           postdec2	equ	0xFDD
  9948                           plusw2	equ	0xFDB
  9949                           fsr2h	equ	0xFDA
  9950                           fsr2l	equ	0xFD9
  9951                           status	equ	0xFD8
  9952                           
  9953 ;; *************** function _LEDbegin *****************
  9954 ;; Defined at:
  9955 ;;		line 83 in file "LED_BarGraph.c"
  9956 ;; Parameters:    Size  Location     Type
  9957 ;;  i2c_addr        1    wreg     unsigned char 
  9958 ;; Auto vars:     Size  Location     Type
  9959 ;;  i2c_addr        1   13[BANK0 ] unsigned char 
  9960 ;;  writeBuffer     3    8[BANK0 ] unsigned char [3]
  9961 ;;  timeOut         2   11[BANK0 ] unsigned int 
  9962 ;;  status          1   14[BANK0 ] enum E7875
  9963 ;; Return value:  Size  Location     Type
  9964 ;;		None               void
  9965 ;; Registers used:
  9966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9967 ;; Tracked objects:
  9968 ;;		On entry : 0/0
  9969 ;;		On exit  : 0/0
  9970 ;;		Unchanged: 0/0
  9971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9972 ;;      Params:         0       0       0       0       0       0       0
  9973 ;;      Locals:         0       7       0       0       0       0       0
  9974 ;;      Temps:          0       0       0       0       0       0       0
  9975 ;;      Totals:         0       7       0       0       0       0       0
  9976 ;;Total ram usage:        7 bytes
  9977 ;; Hardware stack levels used:    1
  9978 ;; Hardware stack levels required when called:    7
  9979 ;; This function calls:
  9980 ;;		_I2C1_MasterWrite
  9981 ;;		_LEDBsetBrightness
  9982 ;;		_LEDblinkRate
  9983 ;; This function is called by:
  9984 ;;		_main
  9985 ;; This function uses a non-reentrant model
  9986 ;;
  9987                           
  9988                           	psect	text51
  9989  0021C8                     __ptext51:
  9990                           	opt stack 0
  9991  0021C8                     _LEDbegin:
  9992                           	opt stack 23
  9993                           
  9994                           ;incstack = 0
  9995                           ;LEDbegin@i2c_addr stored from wreg
  9996  0021C8  0100               	movlb	0	; () banked
  9997  0021CA  6FFB               	movwf	LEDbegin@i2c_addr& (0+255),b
  9998                           
  9999                           ;LED_BarGraph.c: 84: uint8_t writeBuffer[3];
 10000                           ;LED_BarGraph.c: 85: uint16_t timeOut;
 10001                           ;LED_BarGraph.c: 86: writeBuffer[0] = 0x21;
 10002  0021CC  0E21               	movlw	33
 10003  0021CE  0100               	movlb	0	; () banked
 10004  0021D0  6FF6               	movwf	LEDbegin@writeBuffer& (0+255),b
 10005                           
 10006                           ;LED_BarGraph.c: 87: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 10007  0021D2  0E02               	movlw	2
 10008  0021D4  0100               	movlb	0	; () banked
 10009  0021D6  6FFC               	movwf	LEDbegin@status& (0+255),b
 10010                           
 10011                           ;LED_BarGraph.c: 89: timeOut = 0;
 10012  0021D8  0E00               	movlw	0
 10013  0021DA  0100               	movlb	0	; () banked
 10014  0021DC  6FFA               	movwf	(LEDbegin@timeOut+1)& (0+255),b
 10015  0021DE  0E00               	movlw	0
 10016  0021E0  6FF9               	movwf	LEDbegin@timeOut& (0+255),b
 10017                           
 10018                           ;LED_BarGraph.c: 90: while (status != I2C1_MESSAGE_FAIL) {
 10019  0021E2  D027               	goto	l6258
 10020  0021E4                     l6238:
 10021                           
 10022                           ; BSR set to: 0
 10023                           ;LED_BarGraph.c: 92: I2C1_MasterWrite(&writeBuffer,
 10024                           ;LED_BarGraph.c: 93: 1,
 10025                           ;LED_BarGraph.c: 94: i2c_addr,
 10026                           ;LED_BarGraph.c: 95: &status);
 10027  0021E4  0EF6               	movlw	low LEDbegin@writeBuffer
 10028  0021E6  6E24               	movwf	I2C1_MasterWrite@pdata,c
 10029  0021E8  0E00               	movlw	high LEDbegin@writeBuffer
 10030  0021EA  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
 10031  0021EC  0E01               	movlw	1
 10032  0021EE  6E26               	movwf	I2C1_MasterWrite@length,c
 10033  0021F0  C0FB  F027         	movff	LEDbegin@i2c_addr,I2C1_MasterWrite@address
 10034  0021F4  6A28               	clrf	I2C1_MasterWrite@address+1,c
 10035  0021F6  0EFC               	movlw	low LEDbegin@status
 10036  0021F8  6E29               	movwf	I2C1_MasterWrite@pflag,c
 10037  0021FA  0E00               	movlw	high LEDbegin@status
 10038  0021FC  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
 10039  0021FE  EC7E  F014         	call	_I2C1_MasterWrite	;wreg free
 10040  002202                     l6240:
 10041  002202  0E02               	movlw	2
 10042  002204  0100               	movlb	0	; () banked
 10043  002206  19FC               	xorwf	LEDbegin@status& (0+255),w,b
 10044  002208  B4D8               	btfsc	status,2,c
 10045  00220A  D7FB               	goto	l6240
 10046                           
 10047                           ; BSR set to: 0
 10048                           ;LED_BarGraph.c: 100: if (status == I2C1_MESSAGE_COMPLETE)
 10049                           
 10050                           ; BSR set to: 0
 10051  00220C  0100               	movlb	0	; () banked
 10052  00220E  51FC               	movf	LEDbegin@status& (0+255),w,b
 10053  002210  0100               	movlb	0	; () banked
 10054  002212  B4D8               	btfsc	status,2,c
 10055  002214  D012               	goto	l6260
 10056                           
 10057                           ; BSR set to: 0
 10058                           ;LED_BarGraph.c: 102: if (timeOut == 100)
 10059                           
 10060                           ; BSR set to: 0
 10061                           
 10062                           ; BSR set to: 0
 10063                           ;LED_BarGraph.c: 101: break;
 10064  002216  0E64               	movlw	100
 10065  002218  0100               	movlb	0	; () banked
 10066  00221A  19F9               	xorwf	LEDbegin@timeOut& (0+255),w,b
 10067  00221C  0100               	movlb	0	; () banked
 10068  00221E  11FA               	iorwf	(LEDbegin@timeOut+1)& (0+255),w,b
 10069  002220  B4D8               	btfsc	status,2,c
 10070  002222  D00B               	goto	l6260
 10071                           
 10072                           ; BSR set to: 0
 10073                           ;LED_BarGraph.c: 104: if (status == I2C1_MESSAGE_FAIL)
 10074                           
 10075                           ; BSR set to: 0
 10076                           
 10077                           ; BSR set to: 0
 10078                           ;LED_BarGraph.c: 103: break;
 10079  002224  0100               	movlb	0	; () banked
 10080  002226  05FC               	decf	LEDbegin@status& (0+255),w,b
 10081  002228  B4D8               	btfsc	status,2,c
 10082  00222A  D007               	goto	l6260
 10083                           
 10084                           ; BSR set to: 0
 10085                           ;LED_BarGraph.c: 106: else
 10086                           ;LED_BarGraph.c: 107: timeOut++;
 10087                           
 10088                           ; BSR set to: 0
 10089                           
 10090                           ; BSR set to: 0
 10091                           
 10092                           ; BSR set to: 0
 10093                           ;LED_BarGraph.c: 105: break;
 10094  00222C  0100               	movlb	0	; () banked
 10095  00222E  4BF9               	infsnz	LEDbegin@timeOut& (0+255),f,b
 10096  002230  2BFA               	incf	(LEDbegin@timeOut+1)& (0+255),f,b
 10097  002232                     l6258:
 10098                           
 10099                           ; BSR set to: 0
 10100  002232  0100               	movlb	0	; () banked
 10101  002234  05FC               	decf	LEDbegin@status& (0+255),w,b
 10102  002236  A4D8               	btfss	status,2,c
 10103  002238  D7D5               	goto	l6238
 10104  00223A                     l6260:
 10105                           
 10106                           ; BSR set to: 0
 10107                           ;LED_BarGraph.c: 108: }
 10108                           ;LED_BarGraph.c: 110: LEDblinkRate(0, i2c_addr);
 10109  00223A  0E00               	movlw	0
 10110  00223C  0100               	movlb	0	; () banked
 10111  00223E  6FEF               	movwf	(LEDblinkRate@b+1)& (0+255),b
 10112  002240  0E00               	movlw	0
 10113  002242  6FEE               	movwf	LEDblinkRate@b& (0+255),b
 10114  002244  C0FB  F0F0         	movff	LEDbegin@i2c_addr,LEDblinkRate@i2c_addr
 10115  002248  EC30  F011         	call	_LEDblinkRate	;wreg free
 10116                           
 10117                           ;LED_BarGraph.c: 111: LEDBsetBrightness(15, i2c_addr);
 10118  00224C  0E00               	movlw	0
 10119  00224E  0100               	movlb	0	; () banked
 10120  002250  6FEF               	movwf	(LEDBsetBrightness@b+1)& (0+255),b
 10121  002252  0E0F               	movlw	15
 10122  002254  6FEE               	movwf	LEDBsetBrightness@b& (0+255),b
 10123  002256  C0FB  F0F0         	movff	LEDbegin@i2c_addr,LEDBsetBrightness@i2c_addr
 10124  00225A  EC7B  F011         	call	_LEDBsetBrightness	;wreg free
 10125  00225E  0012               	return		;funcret
 10126  002260                     __end_of_LEDbegin:
 10127                           	opt stack 0
 10128                           tosu	equ	0xFFF
 10129                           tosh	equ	0xFFE
 10130                           tosl	equ	0xFFD
 10131                           pclath	equ	0xFFA
 10132                           tblptru	equ	0xFF8
 10133                           tblptrh	equ	0xFF7
 10134                           tblptrl	equ	0xFF6
 10135                           tablat	equ	0xFF5
 10136                           prodh	equ	0xFF4
 10137                           prodl	equ	0xFF3
 10138                           intcon	equ	0xFF2
 10139                           intcon2	equ	0xFF1
 10140                           postinc0	equ	0xFEE
 10141                           wreg	equ	0xFE8
 10142                           indf2	equ	0xFDF
 10143                           postinc2	equ	0xFDE
 10144                           postdec2	equ	0xFDD
 10145                           plusw2	equ	0xFDB
 10146                           fsr2h	equ	0xFDA
 10147                           fsr2l	equ	0xFD9
 10148                           status	equ	0xFD8
 10149                           
 10150 ;; *************** function _LEDblinkRate *****************
 10151 ;; Defined at:
 10152 ;;		line 53 in file "LED_BarGraph.c"
 10153 ;; Parameters:    Size  Location     Type
 10154 ;;  b               2    0[BANK0 ] int 
 10155 ;;  i2c_addr        1    2[BANK0 ] unsigned char 
 10156 ;; Auto vars:     Size  Location     Type
 10157 ;;  writeBuffer     2    3[BANK0 ] unsigned char [2]
 10158 ;;  timeOut         2    5[BANK0 ] unsigned int 
 10159 ;;  status          1    7[BANK0 ] enum E7875
 10160 ;; Return value:  Size  Location     Type
 10161 ;;		None               void
 10162 ;; Registers used:
 10163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10164 ;; Tracked objects:
 10165 ;;		On entry : 0/0
 10166 ;;		On exit  : 0/0
 10167 ;;		Unchanged: 0/0
 10168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10169 ;;      Params:         0       3       0       0       0       0       0
 10170 ;;      Locals:         0       5       0       0       0       0       0
 10171 ;;      Temps:          0       0       0       0       0       0       0
 10172 ;;      Totals:         0       8       0       0       0       0       0
 10173 ;;Total ram usage:        8 bytes
 10174 ;; Hardware stack levels used:    1
 10175 ;; Hardware stack levels required when called:    6
 10176 ;; This function calls:
 10177 ;;		_I2C1_MasterWrite
 10178 ;; This function is called by:
 10179 ;;		_LEDbegin
 10180 ;; This function uses a non-reentrant model
 10181 ;;
 10182                           
 10183                           	psect	text52
 10184  002260                     __ptext52:
 10185                           	opt stack 0
 10186  002260                     _LEDblinkRate:
 10187                           	opt stack 23
 10188                           
 10189                           ;LED_BarGraph.c: 54: if (b > 3) b = 0;
 10190                           
 10191                           ;incstack = 0
 10192  002260  0100               	movlb	0	; () banked
 10193  002262  BFEF               	btfsc	(LEDblinkRate@b+1)& (0+255),7,b
 10194  002264  D00D               	goto	l5830
 10195  002266  0100               	movlb	0	; () banked
 10196  002268  51EF               	movf	(LEDblinkRate@b+1)& (0+255),w,b
 10197  00226A  E105               	bnz	u6070
 10198  00226C  0E04               	movlw	4
 10199  00226E  0100               	movlb	0	; () banked
 10200  002270  5DEE               	subwf	LEDblinkRate@b& (0+255),w,b
 10201  002272  A0D8               	btfss	status,0,c
 10202  002274  D005               	goto	l5830
 10203  002276                     u6070:
 10204                           
 10205                           ; BSR set to: 0
 10206  002276  0E00               	movlw	0
 10207  002278  0100               	movlb	0	; () banked
 10208  00227A  6FEF               	movwf	(LEDblinkRate@b+1)& (0+255),b
 10209  00227C  0E00               	movlw	0
 10210  00227E  6FEE               	movwf	LEDblinkRate@b& (0+255),b
 10211  002280                     l5830:
 10212                           
 10213                           ; BSR set to: 0
 10214                           ;LED_BarGraph.c: 55: uint8_t writeBuffer[2];
 10215                           ;LED_BarGraph.c: 56: uint16_t timeOut;
 10216                           ;LED_BarGraph.c: 57: writeBuffer[0] = (0x80 | 0x01 | (b << 1));
 10217  002280  0100               	movlb	0	; () banked
 10218  002282  51EE               	movf	LEDblinkRate@b& (0+255),w,b
 10219  002284  25EE               	addwf	LEDblinkRate@b& (0+255),w,b
 10220  002286  0981               	iorlw	129
 10221  002288  0100               	movlb	0	; () banked
 10222  00228A  6FF1               	movwf	LEDblinkRate@writeBuffer& (0+255),b
 10223                           
 10224                           ; BSR set to: 0
 10225                           ;LED_BarGraph.c: 58: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 10226  00228C  0E02               	movlw	2
 10227  00228E  0100               	movlb	0	; () banked
 10228  002290  6FF5               	movwf	LEDblinkRate@status& (0+255),b
 10229                           
 10230                           ; BSR set to: 0
 10231                           ;LED_BarGraph.c: 60: timeOut = 0;
 10232  002292  0E00               	movlw	0
 10233  002294  0100               	movlb	0	; () banked
 10234  002296  6FF4               	movwf	(LEDblinkRate@timeOut+1)& (0+255),b
 10235  002298  0E00               	movlw	0
 10236  00229A  6FF3               	movwf	LEDblinkRate@timeOut& (0+255),b
 10237                           
 10238                           ;LED_BarGraph.c: 61: while (status != I2C1_MESSAGE_FAIL) {
 10239  00229C  D027               	goto	l5856
 10240  00229E                     l5836:
 10241                           
 10242                           ; BSR set to: 0
 10243                           ;LED_BarGraph.c: 63: I2C1_MasterWrite(&writeBuffer,
 10244                           ;LED_BarGraph.c: 64: 1,
 10245                           ;LED_BarGraph.c: 65: i2c_addr,
 10246                           ;LED_BarGraph.c: 66: &status);
 10247  00229E  0EF1               	movlw	low LEDblinkRate@writeBuffer
 10248  0022A0  6E24               	movwf	I2C1_MasterWrite@pdata,c
 10249  0022A2  0E00               	movlw	high LEDblinkRate@writeBuffer
 10250  0022A4  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
 10251  0022A6  0E01               	movlw	1
 10252  0022A8  6E26               	movwf	I2C1_MasterWrite@length,c
 10253  0022AA  C0F0  F027         	movff	LEDblinkRate@i2c_addr,I2C1_MasterWrite@address
 10254  0022AE  6A28               	clrf	I2C1_MasterWrite@address+1,c
 10255  0022B0  0EF5               	movlw	low LEDblinkRate@status
 10256  0022B2  6E29               	movwf	I2C1_MasterWrite@pflag,c
 10257  0022B4  0E00               	movlw	high LEDblinkRate@status
 10258  0022B6  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
 10259  0022B8  EC7E  F014         	call	_I2C1_MasterWrite	;wreg free
 10260  0022BC                     l5838:
 10261  0022BC  0E02               	movlw	2
 10262  0022BE  0100               	movlb	0	; () banked
 10263  0022C0  19F5               	xorwf	LEDblinkRate@status& (0+255),w,b
 10264  0022C2  B4D8               	btfsc	status,2,c
 10265  0022C4  D7FB               	goto	l5838
 10266                           
 10267                           ; BSR set to: 0
 10268                           ;LED_BarGraph.c: 71: if (status == I2C1_MESSAGE_COMPLETE)
 10269                           
 10270                           ; BSR set to: 0
 10271  0022C6  0100               	movlb	0	; () banked
 10272  0022C8  51F5               	movf	LEDblinkRate@status& (0+255),w,b
 10273  0022CA  0100               	movlb	0	; () banked
 10274  0022CC  B4D8               	btfsc	status,2,c
 10275  0022CE  0012               	return	
 10276                           
 10277                           ; BSR set to: 0
 10278                           ;LED_BarGraph.c: 73: if (timeOut == 100)
 10279                           
 10280                           ; BSR set to: 0
 10281                           
 10282                           ; BSR set to: 0
 10283                           ;LED_BarGraph.c: 72: break;
 10284  0022D0  0E64               	movlw	100
 10285  0022D2  0100               	movlb	0	; () banked
 10286  0022D4  19F3               	xorwf	LEDblinkRate@timeOut& (0+255),w,b
 10287  0022D6  0100               	movlb	0	; () banked
 10288  0022D8  11F4               	iorwf	(LEDblinkRate@timeOut+1)& (0+255),w,b
 10289  0022DA  B4D8               	btfsc	status,2,c
 10290  0022DC  0012               	return	
 10291                           
 10292                           ; BSR set to: 0
 10293                           ;LED_BarGraph.c: 75: if (status == I2C1_MESSAGE_FAIL)
 10294                           
 10295                           ; BSR set to: 0
 10296                           
 10297                           ; BSR set to: 0
 10298                           ;LED_BarGraph.c: 74: break;
 10299  0022DE  0100               	movlb	0	; () banked
 10300  0022E0  05F5               	decf	LEDblinkRate@status& (0+255),w,b
 10301  0022E2  B4D8               	btfsc	status,2,c
 10302  0022E4  0012               	return	
 10303                           
 10304                           ; BSR set to: 0
 10305                           ;LED_BarGraph.c: 77: else
 10306                           ;LED_BarGraph.c: 78: timeOut++;
 10307                           
 10308                           ; BSR set to: 0
 10309                           
 10310                           ; BSR set to: 0
 10311                           
 10312                           ; BSR set to: 0
 10313                           ;LED_BarGraph.c: 76: break;
 10314  0022E6  0100               	movlb	0	; () banked
 10315  0022E8  4BF3               	infsnz	LEDblinkRate@timeOut& (0+255),f,b
 10316  0022EA  2BF4               	incf	(LEDblinkRate@timeOut+1)& (0+255),f,b
 10317  0022EC                     l5856:
 10318                           
 10319                           ; BSR set to: 0
 10320  0022EC  0100               	movlb	0	; () banked
 10321  0022EE  05F5               	decf	LEDblinkRate@status& (0+255),w,b
 10322  0022F0  B4D8               	btfsc	status,2,c
 10323  0022F2  0012               	return	
 10324  0022F4  D7D4               	goto	l5836
 10325  0022F6                     __end_of_LEDblinkRate:
 10326                           	opt stack 0
 10327                           tosu	equ	0xFFF
 10328                           tosh	equ	0xFFE
 10329                           tosl	equ	0xFFD
 10330                           pclath	equ	0xFFA
 10331                           tblptru	equ	0xFF8
 10332                           tblptrh	equ	0xFF7
 10333                           tblptrl	equ	0xFF6
 10334                           tablat	equ	0xFF5
 10335                           prodh	equ	0xFF4
 10336                           prodl	equ	0xFF3
 10337                           intcon	equ	0xFF2
 10338                           intcon2	equ	0xFF1
 10339                           postinc0	equ	0xFEE
 10340                           wreg	equ	0xFE8
 10341                           indf2	equ	0xFDF
 10342                           postinc2	equ	0xFDE
 10343                           postdec2	equ	0xFDD
 10344                           plusw2	equ	0xFDB
 10345                           fsr2h	equ	0xFDA
 10346                           fsr2l	equ	0xFD9
 10347                           status	equ	0xFD8
 10348                           
 10349 ;; *************** function _LEDBsetBrightness *****************
 10350 ;; Defined at:
 10351 ;;		line 23 in file "LED_BarGraph.c"
 10352 ;; Parameters:    Size  Location     Type
 10353 ;;  b               2    0[BANK0 ] int 
 10354 ;;  i2c_addr        1    2[BANK0 ] unsigned char 
 10355 ;; Auto vars:     Size  Location     Type
 10356 ;;  writeBuffer     2    3[BANK0 ] unsigned char [2]
 10357 ;;  timeOut         2    5[BANK0 ] unsigned int 
 10358 ;;  status          1    7[BANK0 ] enum E7875
 10359 ;; Return value:  Size  Location     Type
 10360 ;;		None               void
 10361 ;; Registers used:
 10362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10363 ;; Tracked objects:
 10364 ;;		On entry : 0/0
 10365 ;;		On exit  : 0/0
 10366 ;;		Unchanged: 0/0
 10367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10368 ;;      Params:         0       3       0       0       0       0       0
 10369 ;;      Locals:         0       5       0       0       0       0       0
 10370 ;;      Temps:          0       0       0       0       0       0       0
 10371 ;;      Totals:         0       8       0       0       0       0       0
 10372 ;;Total ram usage:        8 bytes
 10373 ;; Hardware stack levels used:    1
 10374 ;; Hardware stack levels required when called:    6
 10375 ;; This function calls:
 10376 ;;		_I2C1_MasterWrite
 10377 ;; This function is called by:
 10378 ;;		_LEDbegin
 10379 ;; This function uses a non-reentrant model
 10380 ;;
 10381                           
 10382                           	psect	text53
 10383  0022F6                     __ptext53:
 10384                           	opt stack 0
 10385  0022F6                     _LEDBsetBrightness:
 10386                           	opt stack 23
 10387                           
 10388                           ;LED_BarGraph.c: 24: if (b > 15) b = 15;
 10389                           
 10390                           ; BSR set to: 0
 10391                           ;incstack = 0
 10392  0022F6  0100               	movlb	0	; () banked
 10393  0022F8  BFEF               	btfsc	(LEDBsetBrightness@b+1)& (0+255),7,b
 10394  0022FA  D00D               	goto	l5798
 10395  0022FC  0100               	movlb	0	; () banked
 10396  0022FE  51EF               	movf	(LEDBsetBrightness@b+1)& (0+255),w,b
 10397  002300  E105               	bnz	u6010
 10398  002302  0E10               	movlw	16
 10399  002304  0100               	movlb	0	; () banked
 10400  002306  5DEE               	subwf	LEDBsetBrightness@b& (0+255),w,b
 10401  002308  A0D8               	btfss	status,0,c
 10402  00230A  D005               	goto	l5798
 10403  00230C                     u6010:
 10404                           
 10405                           ; BSR set to: 0
 10406  00230C  0E00               	movlw	0
 10407  00230E  0100               	movlb	0	; () banked
 10408  002310  6FEF               	movwf	(LEDBsetBrightness@b+1)& (0+255),b
 10409  002312  0E0F               	movlw	15
 10410  002314  6FEE               	movwf	LEDBsetBrightness@b& (0+255),b
 10411  002316                     l5798:
 10412                           
 10413                           ; BSR set to: 0
 10414                           ;LED_BarGraph.c: 25: uint8_t writeBuffer[2];
 10415                           ;LED_BarGraph.c: 26: uint16_t timeOut;
 10416                           ;LED_BarGraph.c: 27: writeBuffer[0] = (0xE0 | b);
 10417  002316  0100               	movlb	0	; () banked
 10418  002318  51EE               	movf	LEDBsetBrightness@b& (0+255),w,b
 10419  00231A  09E0               	iorlw	224
 10420  00231C  0100               	movlb	0	; () banked
 10421  00231E  6FF1               	movwf	LEDBsetBrightness@writeBuffer& (0+255),b
 10422                           
 10423                           ; BSR set to: 0
 10424                           ;LED_BarGraph.c: 28: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 10425  002320  0E02               	movlw	2
 10426  002322  0100               	movlb	0	; () banked
 10427  002324  6FF5               	movwf	LEDBsetBrightness@status& (0+255),b
 10428                           
 10429                           ; BSR set to: 0
 10430                           ;LED_BarGraph.c: 30: timeOut = 0;
 10431  002326  0E00               	movlw	0
 10432  002328  0100               	movlb	0	; () banked
 10433  00232A  6FF4               	movwf	(LEDBsetBrightness@timeOut+1)& (0+255),b
 10434  00232C  0E00               	movlw	0
 10435  00232E  6FF3               	movwf	LEDBsetBrightness@timeOut& (0+255),b
 10436                           
 10437                           ;LED_BarGraph.c: 31: while (status != I2C1_MESSAGE_FAIL) {
 10438  002330  D027               	goto	l5824
 10439  002332                     l5804:
 10440                           
 10441                           ; BSR set to: 0
 10442                           ;LED_BarGraph.c: 33: I2C1_MasterWrite(&writeBuffer,
 10443                           ;LED_BarGraph.c: 34: 1,
 10444                           ;LED_BarGraph.c: 35: i2c_addr,
 10445                           ;LED_BarGraph.c: 36: &status);
 10446  002332  0EF1               	movlw	low LEDBsetBrightness@writeBuffer
 10447  002334  6E24               	movwf	I2C1_MasterWrite@pdata,c
 10448  002336  0E00               	movlw	high LEDBsetBrightness@writeBuffer
 10449  002338  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
 10450  00233A  0E01               	movlw	1
 10451  00233C  6E26               	movwf	I2C1_MasterWrite@length,c
 10452  00233E  C0F0  F027         	movff	LEDBsetBrightness@i2c_addr,I2C1_MasterWrite@address
 10453  002342  6A28               	clrf	I2C1_MasterWrite@address+1,c
 10454  002344  0EF5               	movlw	low LEDBsetBrightness@status
 10455  002346  6E29               	movwf	I2C1_MasterWrite@pflag,c
 10456  002348  0E00               	movlw	high LEDBsetBrightness@status
 10457  00234A  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
 10458  00234C  EC7E  F014         	call	_I2C1_MasterWrite	;wreg free
 10459  002350                     l5806:
 10460  002350  0E02               	movlw	2
 10461  002352  0100               	movlb	0	; () banked
 10462  002354  19F5               	xorwf	LEDBsetBrightness@status& (0+255),w,b
 10463  002356  B4D8               	btfsc	status,2,c
 10464  002358  D7FB               	goto	l5806
 10465                           
 10466                           ; BSR set to: 0
 10467                           ;LED_BarGraph.c: 41: if (status == I2C1_MESSAGE_COMPLETE)
 10468                           
 10469                           ; BSR set to: 0
 10470  00235A  0100               	movlb	0	; () banked
 10471  00235C  51F5               	movf	LEDBsetBrightness@status& (0+255),w,b
 10472  00235E  0100               	movlb	0	; () banked
 10473  002360  B4D8               	btfsc	status,2,c
 10474  002362  0012               	return	
 10475                           
 10476                           ; BSR set to: 0
 10477                           ;LED_BarGraph.c: 43: if (timeOut == 100)
 10478                           
 10479                           ; BSR set to: 0
 10480                           
 10481                           ; BSR set to: 0
 10482                           ;LED_BarGraph.c: 42: break;
 10483  002364  0E64               	movlw	100
 10484  002366  0100               	movlb	0	; () banked
 10485  002368  19F3               	xorwf	LEDBsetBrightness@timeOut& (0+255),w,b
 10486  00236A  0100               	movlb	0	; () banked
 10487  00236C  11F4               	iorwf	(LEDBsetBrightness@timeOut+1)& (0+255),w,b
 10488  00236E  B4D8               	btfsc	status,2,c
 10489  002370  0012               	return	
 10490                           
 10491                           ; BSR set to: 0
 10492                           ;LED_BarGraph.c: 45: if (status == I2C1_MESSAGE_FAIL)
 10493                           
 10494                           ; BSR set to: 0
 10495                           
 10496                           ; BSR set to: 0
 10497                           ;LED_BarGraph.c: 44: break;
 10498  002372  0100               	movlb	0	; () banked
 10499  002374  05F5               	decf	LEDBsetBrightness@status& (0+255),w,b
 10500  002376  B4D8               	btfsc	status,2,c
 10501  002378  0012               	return	
 10502                           
 10503                           ; BSR set to: 0
 10504                           ;LED_BarGraph.c: 47: else
 10505                           ;LED_BarGraph.c: 48: timeOut++;
 10506                           
 10507                           ; BSR set to: 0
 10508                           
 10509                           ; BSR set to: 0
 10510                           
 10511                           ; BSR set to: 0
 10512                           ;LED_BarGraph.c: 46: break;
 10513  00237A  0100               	movlb	0	; () banked
 10514  00237C  4BF3               	infsnz	LEDBsetBrightness@timeOut& (0+255),f,b
 10515  00237E  2BF4               	incf	(LEDBsetBrightness@timeOut+1)& (0+255),f,b
 10516  002380                     l5824:
 10517                           
 10518                           ; BSR set to: 0
 10519  002380  0100               	movlb	0	; () banked
 10520  002382  05F5               	decf	LEDBsetBrightness@status& (0+255),w,b
 10521  002384  B4D8               	btfsc	status,2,c
 10522  002386  0012               	return	
 10523  002388  D7D4               	goto	l5804
 10524  00238A                     __end_of_LEDBsetBrightness:
 10525                           	opt stack 0
 10526                           tosu	equ	0xFFF
 10527                           tosh	equ	0xFFE
 10528                           tosl	equ	0xFFD
 10529                           pclath	equ	0xFFA
 10530                           tblptru	equ	0xFF8
 10531                           tblptrh	equ	0xFF7
 10532                           tblptrl	equ	0xFF6
 10533                           tablat	equ	0xFF5
 10534                           prodh	equ	0xFF4
 10535                           prodl	equ	0xFF3
 10536                           intcon	equ	0xFF2
 10537                           intcon2	equ	0xFF1
 10538                           postinc0	equ	0xFEE
 10539                           wreg	equ	0xFE8
 10540                           indf2	equ	0xFDF
 10541                           postinc2	equ	0xFDE
 10542                           postdec2	equ	0xFDD
 10543                           plusw2	equ	0xFDB
 10544                           fsr2h	equ	0xFDA
 10545                           fsr2l	equ	0xFD9
 10546                           status	equ	0xFD8
 10547                           
 10548 ;; *************** function _I2C1_MasterWrite *****************
 10549 ;; Defined at:
 10550 ;;		line 551 in file "mcc_generated_files/i2c1.c"
 10551 ;; Parameters:    Size  Location     Type
 10552 ;;  pdata           2   35[COMRAM] PTR unsigned char 
 10553 ;;		 -> LEDwriteDisplay@writeBuffer(20), LEDbegin@writeBuffer(3), LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBu
      +ffer(2), 
 10554 ;;  length          1   37[COMRAM] unsigned char 
 10555 ;;  address         2   38[COMRAM] unsigned int 
 10556 ;;  pflag           2   40[COMRAM] PTR enum E7856
 10557 ;;		 -> LEDwriteDisplay@status(1), LEDbegin@status(1), LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
 10558 ;; Auto vars:     Size  Location     Type
 10559 ;;		None
 10560 ;; Return value:  Size  Location     Type
 10561 ;;		None               void
 10562 ;; Registers used:
 10563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10564 ;; Tracked objects:
 10565 ;;		On entry : 0/0
 10566 ;;		On exit  : 0/0
 10567 ;;		Unchanged: 0/0
 10568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10569 ;;      Params:         7       0       0       0       0       0       0
 10570 ;;      Locals:         0       0       0       0       0       0       0
 10571 ;;      Temps:          0       0       0       0       0       0       0
 10572 ;;      Totals:         7       0       0       0       0       0       0
 10573 ;;Total ram usage:        7 bytes
 10574 ;; Hardware stack levels used:    1
 10575 ;; Hardware stack levels required when called:    5
 10576 ;; This function calls:
 10577 ;;		_I2C1_MasterTRBInsert
 10578 ;;		_I2C1_MasterWriteTRBBuild
 10579 ;; This function is called by:
 10580 ;;		_LEDBsetBrightness
 10581 ;;		_LEDblinkRate
 10582 ;;		_LEDbegin
 10583 ;;		_LEDwriteDisplay
 10584 ;; This function uses a non-reentrant model
 10585 ;;
 10586                           
 10587                           	psect	text54
 10588  0028FC                     __ptext54:
 10589                           	opt stack 0
 10590  0028FC                     _I2C1_MasterWrite:
 10591                           	opt stack 24
 10592                           
 10593                           ;i2c1.c: 557: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
 10594                           ;i2c1.c: 560: if (i2c1_object.trStatus.s.full != 1)
 10595                           
 10596                           ; BSR set to: 0
 10597                           ;incstack = 0
 10598  0028FC  0100               	movlb	0	; () banked
 10599  0028FE  B1BC               	btfsc	(_i2c1_object+4)& (0+255),0,b
 10600  002900  D01C               	goto	l5410
 10601                           
 10602                           ; BSR set to: 0
 10603                           ;i2c1.c: 561: {
 10604                           ;i2c1.c: 562: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
 10605  002902  0EE4               	movlw	low I2C1_MasterWrite@trBlock
 10606  002904  6E1B               	movwf	I2C1_MasterWriteTRBBuild@ptrb,c
 10607  002906  0E00               	movlw	high I2C1_MasterWrite@trBlock
 10608  002908  6E1C               	movwf	I2C1_MasterWriteTRBBuild@ptrb+1,c
 10609  00290A  C024  F01D         	movff	I2C1_MasterWrite@pdata,I2C1_MasterWriteTRBBuild@pdata
 10610  00290E  C025  F01E         	movff	I2C1_MasterWrite@pdata+1,I2C1_MasterWriteTRBBuild@pdata+1
 10611  002912  C026  F01F         	movff	I2C1_MasterWrite@length,I2C1_MasterWriteTRBBuild@length
 10612  002916  C027  F020         	movff	I2C1_MasterWrite@address,I2C1_MasterWriteTRBBuild@address
 10613  00291A  C028  F021         	movff	I2C1_MasterWrite@address+1,I2C1_MasterWriteTRBBuild@address+1
 10614  00291E  ECEB  F014         	call	_I2C1_MasterWriteTRBBuild	;wreg free
 10615                           
 10616                           ;i2c1.c: 563: I2C1_MasterTRBInsert(1, &trBlock, pflag);
 10617  002922  0EE4               	movlw	low I2C1_MasterWrite@trBlock
 10618  002924  6E1B               	movwf	I2C1_MasterTRBInsert@ptrb_list,c
 10619  002926  0E00               	movlw	high I2C1_MasterWrite@trBlock
 10620  002928  6E1C               	movwf	I2C1_MasterTRBInsert@ptrb_list+1,c
 10621  00292A  C029  F01D         	movff	I2C1_MasterWrite@pflag,I2C1_MasterTRBInsert@pflag
 10622  00292E  C02A  F01E         	movff	I2C1_MasterWrite@pflag+1,I2C1_MasterTRBInsert@pflag+1
 10623  002932  0E01               	movlw	1
 10624  002934  ECDE  F00F         	call	_I2C1_MasterTRBInsert
 10625                           
 10626                           ;i2c1.c: 564: }
 10627  002938  0012               	return	
 10628  00293A                     l5410:
 10629                           
 10630                           ;i2c1.c: 565: else
 10631                           ;i2c1.c: 566: {
 10632                           ;i2c1.c: 567: *pflag = I2C1_MESSAGE_FAIL;
 10633  00293A  C029  FFD9         	movff	I2C1_MasterWrite@pflag,fsr2l
 10634  00293E  C02A  FFDA         	movff	I2C1_MasterWrite@pflag+1,fsr2h
 10635  002942  0E01               	movlw	1
 10636  002944  6EDF               	movwf	indf2,c
 10637  002946  0012               	return	
 10638  002948                     __end_of_I2C1_MasterWrite:
 10639                           	opt stack 0
 10640                           tosu	equ	0xFFF
 10641                           tosh	equ	0xFFE
 10642                           tosl	equ	0xFFD
 10643                           pclath	equ	0xFFA
 10644                           tblptru	equ	0xFF8
 10645                           tblptrh	equ	0xFF7
 10646                           tblptrl	equ	0xFF6
 10647                           tablat	equ	0xFF5
 10648                           prodh	equ	0xFF4
 10649                           prodl	equ	0xFF3
 10650                           intcon	equ	0xFF2
 10651                           intcon2	equ	0xFF1
 10652                           postinc0	equ	0xFEE
 10653                           wreg	equ	0xFE8
 10654                           indf2	equ	0xFDF
 10655                           postinc2	equ	0xFDE
 10656                           postdec2	equ	0xFDD
 10657                           plusw2	equ	0xFDB
 10658                           fsr2h	equ	0xFDA
 10659                           fsr2l	equ	0xFD9
 10660                           status	equ	0xFD8
 10661                           
 10662 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 10663 ;; Defined at:
 10664 ;;		line 660 in file "mcc_generated_files/i2c1.c"
 10665 ;; Parameters:    Size  Location     Type
 10666 ;;  ptrb            2   26[COMRAM] PTR struct .
 10667 ;;		 -> I2C1_MasterWrite@trBlock(5), 
 10668 ;;  pdata           2   28[COMRAM] PTR unsigned char 
 10669 ;;		 -> LEDwriteDisplay@writeBuffer(20), LEDbegin@writeBuffer(3), LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBu
      +ffer(2), 
 10670 ;;  length          1   30[COMRAM] unsigned char 
 10671 ;;  address         2   31[COMRAM] unsigned int 
 10672 ;; Auto vars:     Size  Location     Type
 10673 ;;		None
 10674 ;; Return value:  Size  Location     Type
 10675 ;;		None               void
 10676 ;; Registers used:
 10677 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10678 ;; Tracked objects:
 10679 ;;		On entry : 0/0
 10680 ;;		On exit  : 0/0
 10681 ;;		Unchanged: 0/0
 10682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10683 ;;      Params:         7       0       0       0       0       0       0
 10684 ;;      Locals:         0       0       0       0       0       0       0
 10685 ;;      Temps:          2       0       0       0       0       0       0
 10686 ;;      Totals:         9       0       0       0       0       0       0
 10687 ;;Total ram usage:        9 bytes
 10688 ;; Hardware stack levels used:    1
 10689 ;; Hardware stack levels required when called:    4
 10690 ;; This function calls:
 10691 ;;		Nothing
 10692 ;; This function is called by:
 10693 ;;		_I2C1_MasterWrite
 10694 ;; This function uses a non-reentrant model
 10695 ;;
 10696                           
 10697                           	psect	text55
 10698  0029D6                     __ptext55:
 10699                           	opt stack 0
 10700  0029D6                     _I2C1_MasterWriteTRBBuild:
 10701                           	opt stack 24
 10702                           
 10703                           ;i2c1.c: 666: ptrb->address = address << 1;
 10704                           
 10705                           ;incstack = 0
 10706  0029D6  C020  F022         	movff	I2C1_MasterWriteTRBBuild@address,??_I2C1_MasterWriteTRBBuild
 10707  0029DA  C021  F023         	movff	I2C1_MasterWriteTRBBuild@address+1,??_I2C1_MasterWriteTRBBuild+1
 10708  0029DE  90D8               	bcf	status,0,c
 10709  0029E0  3622               	rlcf	??_I2C1_MasterWriteTRBBuild,f,c
 10710  0029E2  3623               	rlcf	??_I2C1_MasterWriteTRBBuild+1,f,c
 10711  0029E4  C01B  FFD9         	movff	I2C1_MasterWriteTRBBuild@ptrb,fsr2l
 10712  0029E8  C01C  FFDA         	movff	I2C1_MasterWriteTRBBuild@ptrb+1,fsr2h
 10713  0029EC  C022  FFDE         	movff	??_I2C1_MasterWriteTRBBuild,postinc2
 10714  0029F0  C023  FFDD         	movff	??_I2C1_MasterWriteTRBBuild+1,postdec2
 10715                           
 10716                           ;i2c1.c: 667: ptrb->length = length;
 10717  0029F4  EE20 F002          	lfsr	2,2
 10718  0029F8  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
 10719  0029FA  26D9               	addwf	fsr2l,f,c
 10720  0029FC  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
 10721  0029FE  22DA               	addwfc	fsr2h,f,c
 10722  002A00  C01F  FFDF         	movff	I2C1_MasterWriteTRBBuild@length,indf2
 10723                           
 10724                           ;i2c1.c: 668: ptrb->pbuffer = pdata;
 10725  002A04  EE20 F003          	lfsr	2,3
 10726  002A08  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
 10727  002A0A  26D9               	addwf	fsr2l,f,c
 10728  002A0C  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
 10729  002A0E  22DA               	addwfc	fsr2h,f,c
 10730  002A10  C01D  FFDE         	movff	I2C1_MasterWriteTRBBuild@pdata,postinc2
 10731  002A14  C01E  FFDD         	movff	I2C1_MasterWriteTRBBuild@pdata+1,postdec2
 10732  002A18  0012               	return		;funcret
 10733  002A1A                     __end_of_I2C1_MasterWriteTRBBuild:
 10734                           	opt stack 0
 10735                           tosu	equ	0xFFF
 10736                           tosh	equ	0xFFE
 10737                           tosl	equ	0xFFD
 10738                           pclath	equ	0xFFA
 10739                           tblptru	equ	0xFF8
 10740                           tblptrh	equ	0xFF7
 10741                           tblptrl	equ	0xFF6
 10742                           tablat	equ	0xFF5
 10743                           prodh	equ	0xFF4
 10744                           prodl	equ	0xFF3
 10745                           intcon	equ	0xFF2
 10746                           intcon2	equ	0xFF1
 10747                           postinc0	equ	0xFEE
 10748                           wreg	equ	0xFE8
 10749                           indf2	equ	0xFDF
 10750                           postinc2	equ	0xFDE
 10751                           postdec2	equ	0xFDD
 10752                           plusw2	equ	0xFDB
 10753                           fsr2h	equ	0xFDA
 10754                           fsr2l	equ	0xFD9
 10755                           status	equ	0xFD8
 10756                           
 10757 ;; *************** function _I2C1_MasterTRBInsert *****************
 10758 ;; Defined at:
 10759 ;;		line 594 in file "mcc_generated_files/i2c1.c"
 10760 ;; Parameters:    Size  Location     Type
 10761 ;;  count           1    wreg     unsigned char 
 10762 ;;  ptrb_list       2   26[COMRAM] PTR struct .
 10763 ;;		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
 10764 ;;  pflag           2   28[COMRAM] PTR enum E7856
 10765 ;;		 -> LEDwriteDisplay@status(1), LEDbegin@status(1), LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
 10766 ;; Auto vars:     Size  Location     Type
 10767 ;;  count           1   31[COMRAM] unsigned char 
 10768 ;; Return value:  Size  Location     Type
 10769 ;;		None               void
 10770 ;; Registers used:
 10771 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10772 ;; Tracked objects:
 10773 ;;		On entry : 0/0
 10774 ;;		On exit  : 0/0
 10775 ;;		Unchanged: 0/0
 10776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10777 ;;      Params:         4       0       0       0       0       0       0
 10778 ;;      Locals:         1       0       0       0       0       0       0
 10779 ;;      Temps:          1       0       0       0       0       0       0
 10780 ;;      Totals:         6       0       0       0       0       0       0
 10781 ;;Total ram usage:        6 bytes
 10782 ;; Hardware stack levels used:    1
 10783 ;; Hardware stack levels required when called:    4
 10784 ;; This function calls:
 10785 ;;		Nothing
 10786 ;; This function is called by:
 10787 ;;		_I2C1_MasterWrite
 10788 ;;		_I2C1_MasterRead
 10789 ;; This function uses a non-reentrant model
 10790 ;;
 10791                           
 10792                           	psect	text56
 10793  001FBC                     __ptext56:
 10794                           	opt stack 0
 10795  001FBC                     _I2C1_MasterTRBInsert:
 10796                           	opt stack 24
 10797                           
 10798                           ;incstack = 0
 10799                           ;I2C1_MasterTRBInsert@count stored from wreg
 10800  001FBC  6E20               	movwf	I2C1_MasterTRBInsert@count,c
 10801                           
 10802                           ;i2c1.c: 601: if (i2c1_object.trStatus.s.full != 1)
 10803  001FBE  0100               	movlb	0	; () banked
 10804  001FC0  B1BC               	btfsc	(_i2c1_object+4)& (0+255),0,b
 10805  001FC2  D046               	goto	l5226
 10806                           
 10807                           ; BSR set to: 0
 10808                           ;i2c1.c: 602: {
 10809                           ;i2c1.c: 603: *pflag = I2C1_MESSAGE_PENDING;
 10810  001FC4  C01D  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 10811  001FC8  C01E  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 10812  001FCC  0E02               	movlw	2
 10813  001FCE  6EDF               	movwf	indf2,c
 10814                           
 10815                           ; BSR set to: 0
 10816                           ;i2c1.c: 605: i2c1_object.pTrTail->ptrb_list = ptrb_list;
 10817  001FD0  0100               	movlb	0	; () banked
 10818  001FD2  EE20 F001          	lfsr	2,1
 10819  001FD6  51B8               	movf	_i2c1_object& (0+255),w,b
 10820  001FD8  26D9               	addwf	fsr2l,f,c
 10821  001FDA  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 10822  001FDC  22DA               	addwfc	fsr2h,f,c
 10823  001FDE  C01B  FFDE         	movff	I2C1_MasterTRBInsert@ptrb_list,postinc2
 10824  001FE2  C01C  FFDD         	movff	I2C1_MasterTRBInsert@ptrb_list+1,postdec2
 10825                           
 10826                           ; BSR set to: 0
 10827                           ;i2c1.c: 606: i2c1_object.pTrTail->count = count;
 10828  001FE6  C0B8  FFD9         	movff	_i2c1_object,fsr2l
 10829  001FEA  C0B9  FFDA         	movff	_i2c1_object+1,fsr2h
 10830  001FEE  C020  FFDF         	movff	I2C1_MasterTRBInsert@count,indf2
 10831                           
 10832                           ; BSR set to: 0
 10833                           ;i2c1.c: 607: i2c1_object.pTrTail->pTrFlag = pflag;
 10834  001FF2  0100               	movlb	0	; () banked
 10835  001FF4  EE20 F003          	lfsr	2,3
 10836  001FF8  51B8               	movf	_i2c1_object& (0+255),w,b
 10837  001FFA  26D9               	addwf	fsr2l,f,c
 10838  001FFC  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 10839  001FFE  22DA               	addwfc	fsr2h,f,c
 10840  002000  C01D  FFDE         	movff	I2C1_MasterTRBInsert@pflag,postinc2
 10841  002004  C01E  FFDD         	movff	I2C1_MasterTRBInsert@pflag+1,postdec2
 10842                           
 10843                           ; BSR set to: 0
 10844                           ;i2c1.c: 608: i2c1_object.pTrTail++;
 10845  002008  0E05               	movlw	5
 10846  00200A  0100               	movlb	0	; () banked
 10847  00200C  27B8               	addwf	_i2c1_object& (0+255),f,b
 10848  00200E  0E00               	movlw	0
 10849  002010  23B9               	addwfc	(_i2c1_object+1)& (0+255),f,b
 10850                           
 10851                           ; BSR set to: 0
 10852                           ;i2c1.c: 611: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
 10853  002012  0EEE               	movlw	low (_i2c1_tr_queue+5)
 10854  002014  0100               	movlb	0	; () banked
 10855  002016  19B8               	xorwf	_i2c1_object& (0+255),w,b
 10856  002018  E10B               	bnz	l5222
 10857  00201A  0E00               	movlw	high (_i2c1_tr_queue+5)
 10858  00201C  0100               	movlb	0	; () banked
 10859  00201E  19B9               	xorwf	(_i2c1_object+1)& (0+255),w,b
 10860  002020  A4D8               	btfss	status,2,c
 10861  002022  D006               	goto	l5222
 10862                           
 10863                           ; BSR set to: 0
 10864                           ;i2c1.c: 612: {
 10865                           ;i2c1.c: 614: i2c1_object.pTrTail = i2c1_tr_queue;
 10866  002024  0EE9               	movlw	low _i2c1_tr_queue
 10867  002026  0100               	movlb	0	; () banked
 10868  002028  6FB8               	movwf	_i2c1_object& (0+255),b
 10869  00202A  0E00               	movlw	high _i2c1_tr_queue
 10870  00202C  0100               	movlb	0	; () banked
 10871  00202E  6FB9               	movwf	(_i2c1_object+1)& (0+255),b
 10872  002030                     l5222:
 10873                           
 10874                           ; BSR set to: 0
 10875                           ;i2c1.c: 615: }
 10876                           ;i2c1.c: 619: i2c1_object.trStatus.s.empty = 0;
 10877  002030  0100               	movlb	0	; () banked
 10878  002032  93BC               	bcf	(_i2c1_object+4)& (0+255),1,b
 10879                           
 10880                           ;i2c1.c: 622: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
 10881  002034  0100               	movlb	0	; () banked
 10882  002036  51B8               	movf	_i2c1_object& (0+255),w,b
 10883  002038  0100               	movlb	0	; () banked
 10884  00203A  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 10885  00203C  E10F               	bnz	l5228
 10886  00203E  0100               	movlb	0	; () banked
 10887  002040  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 10888  002042  0100               	movlb	0	; () banked
 10889  002044  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 10890  002046  A4D8               	btfss	status,2,c
 10891  002048  D009               	goto	l5228
 10892                           
 10893                           ; BSR set to: 0
 10894                           ;i2c1.c: 623: {
 10895                           ;i2c1.c: 625: i2c1_object.trStatus.s.full = 1;
 10896  00204A  0100               	movlb	0	; () banked
 10897  00204C  81BC               	bsf	(_i2c1_object+4)& (0+255),0,b
 10898                           
 10899                           ; BSR set to: 0
 10900                           ;i2c1.c: 626: }
 10901                           ;i2c1.c: 628: }
 10902  00204E  D006               	goto	l5228
 10903  002050                     l5226:
 10904                           
 10905                           ; BSR set to: 0
 10906                           ;i2c1.c: 629: else
 10907                           ;i2c1.c: 630: {
 10908                           ;i2c1.c: 631: *pflag = I2C1_MESSAGE_FAIL;
 10909  002050  C01D  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 10910  002054  C01E  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 10911  002058  0E01               	movlw	1
 10912  00205A  6EDF               	movwf	indf2,c
 10913  00205C                     l5228:
 10914                           
 10915                           ; BSR set to: 0
 10916                           ;i2c1.c: 632: }
 10917                           ;i2c1.c: 635: if (*pflag == I2C1_MESSAGE_PENDING)
 10918  00205C  C01D  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 10919  002060  C01E  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 10920  002064  0E02               	movlw	2
 10921  002066  18DE               	xorwf	postinc2,w,c
 10922  002068  A4D8               	btfss	status,2,c
 10923  00206A  0012               	return	
 10924  00206C                     l5232:
 10925  00206C  5038               	movf	_i2c1_state,w,c
 10926  00206E  A4D8               	btfss	status,2,c
 10927  002070  D7FD               	goto	l5232
 10928                           
 10929                           ;i2c1.c: 638: {
 10930                           ;i2c1.c: 641: PIR1bits.SSP1IF = 1;
 10931  002072  869E               	bsf	3998,3,c	;volatile
 10932  002074  0012               	return	
 10933  002076                     __end_of_I2C1_MasterTRBInsert:
 10934                           	opt stack 0
 10935                           tosu	equ	0xFFF
 10936                           tosh	equ	0xFFE
 10937                           tosl	equ	0xFFD
 10938                           pclath	equ	0xFFA
 10939                           tblptru	equ	0xFF8
 10940                           tblptrh	equ	0xFF7
 10941                           tblptrl	equ	0xFF6
 10942                           tablat	equ	0xFF5
 10943                           prodh	equ	0xFF4
 10944                           prodl	equ	0xFF3
 10945                           intcon	equ	0xFF2
 10946                           intcon2	equ	0xFF1
 10947                           postinc0	equ	0xFEE
 10948                           wreg	equ	0xFE8
 10949                           indf2	equ	0xFDF
 10950                           postinc2	equ	0xFDE
 10951                           postdec2	equ	0xFDD
 10952                           plusw2	equ	0xFDB
 10953                           fsr2h	equ	0xFDA
 10954                           fsr2l	equ	0xFD9
 10955                           status	equ	0xFD8
 10956                           
 10957 ;; *************** function _INTERRUPT_InterruptManager *****************
 10958 ;; Defined at:
 10959 ;;		line 73 in file "mcc_generated_files/interrupt_manager.c"
 10960 ;; Parameters:    Size  Location     Type
 10961 ;;		None
 10962 ;; Auto vars:     Size  Location     Type
 10963 ;;		None
 10964 ;; Return value:  Size  Location     Type
 10965 ;;		None               void
 10966 ;; Registers used:
 10967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10968 ;; Tracked objects:
 10969 ;;		On entry : 0/0
 10970 ;;		On exit  : 0/0
 10971 ;;		Unchanged: 0/0
 10972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10973 ;;      Params:         0       0       0       0       0       0       0
 10974 ;;      Locals:         0       0       0       0       0       0       0
 10975 ;;      Temps:         14       0       0       0       0       0       0
 10976 ;;      Totals:        14       0       0       0       0       0       0
 10977 ;;Total ram usage:       14 bytes
 10978 ;; Hardware stack levels used:    1
 10979 ;; Hardware stack levels required when called:    3
 10980 ;; This function calls:
 10981 ;;		_ADC_ISR
 10982 ;;		_EUSART1_Receive_ISR
 10983 ;;		_EUSART1_Transmit_ISR
 10984 ;;		_I2C1_BusCollisionISR
 10985 ;;		_I2C1_ISR
 10986 ;;		_TMR0_ISR
 10987 ;; This function is called by:
 10988 ;;		Interrupt level 2
 10989 ;; This function uses a non-reentrant model
 10990 ;;
 10991                           
 10992                           	psect	intcode
 10993  000008                     __pintcode:
 10994                           	opt stack 0
 10995  000008                     _INTERRUPT_InterruptManager:
 10996                           	opt stack 21
 10997                           
 10998                           ;incstack = 0
 10999  000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11000  00000A  CFFA F00D          	movff	pclath,??_INTERRUPT_InterruptManager
 11001  00000E  CFFB F00E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 11002  000012  CFE9 F00F          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 11003  000016  CFEA F010          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 11004  00001A  CFE1 F011          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 11005  00001E  CFE2 F012          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 11006  000022  CFD9 F013          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 11007  000026  CFDA F014          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 11008  00002A  CFF3 F015          	movff	prodl,??_INTERRUPT_InterruptManager+8
 11009  00002E  CFF4 F016          	movff	prodh,??_INTERRUPT_InterruptManager+9
 11010  000032  CFF6 F017          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 11011  000036  CFF7 F018          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 11012  00003A  CFF8 F019          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 11013  00003E  CFF5 F01A          	movff	tablat,??_INTERRUPT_InterruptManager+13
 11014                           
 11015                           ;interrupt_manager.c: 76: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
 11016  000042  BA9D               	btfsc	3997,5,c	;volatile
 11017  000044  AA9E               	btfss	3998,5,c	;volatile
 11018  000046  D003               	goto	i2l316
 11019                           
 11020                           ;interrupt_manager.c: 77: {
 11021                           ;interrupt_manager.c: 78: EUSART1_Receive_ISR();
 11022  000048  EC8B  F016         	call	_EUSART1_Receive_ISR	;wreg free
 11023                           
 11024                           ;interrupt_manager.c: 79: }
 11025  00004C  D01D               	goto	i2l328
 11026  00004E                     i2l316:
 11027                           
 11028                           ;interrupt_manager.c: 80: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
 11029  00004E  B89D               	btfsc	3997,4,c	;volatile
 11030  000050  A89E               	btfss	3998,4,c	;volatile
 11031  000052  D003               	goto	i2l318
 11032                           
 11033                           ;interrupt_manager.c: 81: {
 11034                           ;interrupt_manager.c: 82: EUSART1_Transmit_ISR();
 11035  000054  ECA1  F015         	call	_EUSART1_Transmit_ISR	;wreg free
 11036                           
 11037                           ;interrupt_manager.c: 83: }
 11038  000058  D017               	goto	i2l328
 11039  00005A                     i2l318:
 11040                           
 11041                           ;interrupt_manager.c: 84: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 11042  00005A  BAF2               	btfsc	intcon,5,c	;volatile
 11043  00005C  A4F2               	btfss	intcon,2,c	;volatile
 11044  00005E  D003               	goto	i2l320
 11045                           
 11046                           ;interrupt_manager.c: 85: {
 11047                           ;interrupt_manager.c: 86: TMR0_ISR();
 11048  000060  ECF7  F013         	call	_TMR0_ISR	;wreg free
 11049                           
 11050                           ;interrupt_manager.c: 87: }
 11051  000064  D011               	goto	i2l328
 11052  000066                     i2l320:
 11053                           
 11054                           ;interrupt_manager.c: 88: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 11055  000066  BC9D               	btfsc	3997,6,c	;volatile
 11056  000068  AC9E               	btfss	3998,6,c	;volatile
 11057  00006A  D003               	goto	i2l322
 11058                           
 11059                           ;interrupt_manager.c: 89: {
 11060                           ;interrupt_manager.c: 90: ADC_ISR();
 11061  00006C  ECFC  F016         	call	_ADC_ISR	;wreg free
 11062                           
 11063                           ;interrupt_manager.c: 91: }
 11064  000070  D00B               	goto	i2l328
 11065  000072                     i2l322:
 11066                           
 11067                           ;interrupt_manager.c: 92: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 11068  000072  B69D               	btfsc	3997,3,c	;volatile
 11069  000074  A69E               	btfss	3998,3,c	;volatile
 11070  000076  D003               	goto	i2l324
 11071                           
 11072                           ;interrupt_manager.c: 93: {
 11073                           ;interrupt_manager.c: 94: I2C1_ISR();
 11074  000078  EC16  F007         	call	_I2C1_ISR	;wreg free
 11075                           
 11076                           ;interrupt_manager.c: 95: }
 11077  00007C  D005               	goto	i2l328
 11078  00007E                     i2l324:
 11079                           
 11080                           ;interrupt_manager.c: 96: else if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
 11081  00007E  B6A0               	btfsc	4000,3,c	;volatile
 11082  000080  A6A1               	btfss	4001,3,c	;volatile
 11083  000082  D002               	goto	i2l328
 11084                           
 11085                           ;interrupt_manager.c: 97: {
 11086                           ;interrupt_manager.c: 98: I2C1_BusCollisionISR();
 11087  000084  ECFF  F016         	call	_I2C1_BusCollisionISR	;wreg free
 11088  000088                     i2l328:
 11089  000088  C01A  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 11090  00008C  C019  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 11091  000090  C018  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 11092  000094  C017  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 11093  000098  C016  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 11094  00009C  C015  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 11095  0000A0  C014  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 11096  0000A4  C013  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 11097  0000A8  C012  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 11098  0000AC  C011  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 11099  0000B0  C010  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 11100  0000B4  C00F  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 11101  0000B8  C00E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 11102  0000BC  C00D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 11103  0000C0  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11104  0000C2  0011               	retfie		f
 11105  0000C4                     __end_of_INTERRUPT_InterruptManager:
 11106                           	opt stack 0
 11107                           tosu	equ	0xFFF
 11108                           tosh	equ	0xFFE
 11109                           tosl	equ	0xFFD
 11110                           pclatu	equ	0xFFB
 11111                           pclath	equ	0xFFA
 11112                           tblptru	equ	0xFF8
 11113                           tblptrh	equ	0xFF7
 11114                           tblptrl	equ	0xFF6
 11115                           tablat	equ	0xFF5
 11116                           prodh	equ	0xFF4
 11117                           prodl	equ	0xFF3
 11118                           intcon	equ	0xFF2
 11119                           intcon2	equ	0xFF1
 11120                           postinc0	equ	0xFEE
 11121                           fsr0h	equ	0xFEA
 11122                           fsr0l	equ	0xFE9
 11123                           wreg	equ	0xFE8
 11124                           fsr1h	equ	0xFE2
 11125                           fsr1l	equ	0xFE1
 11126                           indf2	equ	0xFDF
 11127                           postinc2	equ	0xFDE
 11128                           postdec2	equ	0xFDD
 11129                           plusw2	equ	0xFDB
 11130                           fsr2h	equ	0xFDA
 11131                           fsr2l	equ	0xFD9
 11132                           status	equ	0xFD8
 11133                           
 11134 ;; *************** function _TMR0_ISR *****************
 11135 ;; Defined at:
 11136 ;;		line 81 in file "mcc_generated_files/tmr0.c"
 11137 ;; Parameters:    Size  Location     Type
 11138 ;;		None
 11139 ;; Auto vars:     Size  Location     Type
 11140 ;;  x               2    4[COMRAM] int 
 11141 ;; Return value:  Size  Location     Type
 11142 ;;		None               void
 11143 ;; Registers used:
 11144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11145 ;; Tracked objects:
 11146 ;;		On entry : 0/0
 11147 ;;		On exit  : 0/0
 11148 ;;		Unchanged: 0/0
 11149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11150 ;;      Params:         0       0       0       0       0       0       0
 11151 ;;      Locals:         2       0       0       0       0       0       0
 11152 ;;      Temps:          0       0       0       0       0       0       0
 11153 ;;      Totals:         2       0       0       0       0       0       0
 11154 ;;Total ram usage:        2 bytes
 11155 ;; Hardware stack levels used:    1
 11156 ;; Hardware stack levels required when called:    1
 11157 ;; This function calls:
 11158 ;;		_ReadButtonState
 11159 ;;		_TMR0_CallBack
 11160 ;; This function is called by:
 11161 ;;		_INTERRUPT_InterruptManager
 11162 ;; This function uses a non-reentrant model
 11163 ;;
 11164                           
 11165                           	psect	text58
 11166  0027EE                     __ptext58:
 11167                           	opt stack 0
 11168  0027EE                     _TMR0_ISR:
 11169                           	opt stack 22
 11170                           
 11171                           ;tmr0.c: 82: static volatile uint16_t CountCallBack = 0;
 11172                           ;tmr0.c: 85: TMR0H = timer0ReloadVal16bit >> 8;
 11173                           
 11174                           ;incstack = 0
 11175  0027EE  5043               	movf	_timer0ReloadVal16bit+1,w,c	;volatile
 11176  0027F0  6ED7               	movwf	4055,c	;volatile
 11177                           
 11178                           ;tmr0.c: 86: TMR0L = (uint8_t) timer0ReloadVal16bit;
 11179  0027F2  C042  FFD6         	movff	_timer0ReloadVal16bit,4054	;volatile
 11180                           
 11181                           ;tmr0.c: 88: for (int x = 0; x < 8; x++) {
 11182  0027F6  0E00               	movlw	0
 11183  0027F8  6E06               	movwf	TMR0_ISR@x+1,c
 11184  0027FA  0E00               	movlw	0
 11185  0027FC  6E05               	movwf	TMR0_ISR@x,c
 11186  0027FE                     i2l4636:
 11187  0027FE  BE06               	btfsc	TMR0_ISR@x+1,7,c
 11188  002800  D006               	goto	i2l4640
 11189  002802  5006               	movf	TMR0_ISR@x+1,w,c
 11190  002804  E10D               	bnz	i2l4646
 11191  002806  0E08               	movlw	8
 11192  002808  5C05               	subwf	TMR0_ISR@x,w,c
 11193  00280A  B0D8               	btfsc	status,0,c
 11194  00280C  D009               	goto	i2l4646
 11195  00280E                     i2l4640:
 11196                           
 11197                           ;tmr0.c: 89: ReadButtonState(x);
 11198  00280E  C005  F001         	movff	TMR0_ISR@x,ReadButtonState@btnnum
 11199  002812  C006  F002         	movff	TMR0_ISR@x+1,ReadButtonState@btnnum+1
 11200  002816  EC32  F00D         	call	_ReadButtonState	;wreg free
 11201  00281A  4A05               	infsnz	TMR0_ISR@x,f,c
 11202  00281C  2A06               	incf	TMR0_ISR@x+1,f,c
 11203  00281E  D7EF               	goto	i2l4636
 11204  002820                     i2l4646:
 11205                           
 11206                           ;tmr0.c: 90: }
 11207                           ;tmr0.c: 91: time++;
 11208  002820  0100               	movlb	0	; () banked
 11209  002822  4BDB               	infsnz	_time& (0+255),f,b	;volatile
 11210  002824  2BDC               	incf	(_time+1)& (0+255),f,b	;volatile
 11211                           
 11212                           ; BSR set to: 0
 11213                           ;tmr0.c: 93: if (++CountCallBack >= 5) {
 11214  002826  0100               	movlb	0	; () banked
 11215  002828  4BC1               	infsnz	TMR0_ISR@CountCallBack& (0+255),f,b	;volatile
 11216  00282A  2BC2               	incf	(TMR0_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 11217  00282C  0100               	movlb	0	; () banked
 11218  00282E  51C2               	movf	(TMR0_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 11219  002830  E105               	bnz	i2u446_40
 11220  002832  0E05               	movlw	5
 11221  002834  0100               	movlb	0	; () banked
 11222  002836  5DC1               	subwf	TMR0_ISR@CountCallBack& (0+255),w,b	;volatile
 11223  002838  A0D8               	btfss	status,0,c
 11224  00283A  D007               	goto	i2l4654
 11225  00283C                     i2u446_40:
 11226                           
 11227                           ; BSR set to: 0
 11228                           ;tmr0.c: 95: TMR0_CallBack();
 11229  00283C  ECFE  F016         	call	_TMR0_CallBack	;wreg free
 11230                           
 11231                           ;tmr0.c: 98: CountCallBack = 0;
 11232  002840  0E00               	movlw	0
 11233  002842  0100               	movlb	0	; () banked
 11234  002844  6FC2               	movwf	(TMR0_ISR@CountCallBack+1)& (0+255),b	;volatile
 11235  002846  0E00               	movlw	0
 11236  002848  6FC1               	movwf	TMR0_ISR@CountCallBack& (0+255),b	;volatile
 11237  00284A                     i2l4654:
 11238                           
 11239                           ; BSR set to: 0
 11240                           ;tmr0.c: 99: }
 11241                           ;tmr0.c: 101: INTCONbits.TMR0IF = 0;
 11242  00284A  94F2               	bcf	intcon,2,c	;volatile
 11243                           
 11244                           ; BSR set to: 0
 11245  00284C  0012               	return		;funcret
 11246  00284E                     __end_of_TMR0_ISR:
 11247                           	opt stack 0
 11248                           tosu	equ	0xFFF
 11249                           tosh	equ	0xFFE
 11250                           tosl	equ	0xFFD
 11251                           pclatu	equ	0xFFB
 11252                           pclath	equ	0xFFA
 11253                           tblptru	equ	0xFF8
 11254                           tblptrh	equ	0xFF7
 11255                           tblptrl	equ	0xFF6
 11256                           tablat	equ	0xFF5
 11257                           prodh	equ	0xFF4
 11258                           prodl	equ	0xFF3
 11259                           intcon	equ	0xFF2
 11260                           intcon2	equ	0xFF1
 11261                           postinc0	equ	0xFEE
 11262                           fsr0h	equ	0xFEA
 11263                           fsr0l	equ	0xFE9
 11264                           wreg	equ	0xFE8
 11265                           fsr1h	equ	0xFE2
 11266                           fsr1l	equ	0xFE1
 11267                           indf2	equ	0xFDF
 11268                           postinc2	equ	0xFDE
 11269                           postdec2	equ	0xFDD
 11270                           plusw2	equ	0xFDB
 11271                           fsr2h	equ	0xFDA
 11272                           fsr2l	equ	0xFD9
 11273                           status	equ	0xFD8
 11274                           
 11275 ;; *************** function _TMR0_CallBack *****************
 11276 ;; Defined at:
 11277 ;;		line 104 in file "mcc_generated_files/tmr0.c"
 11278 ;; Parameters:    Size  Location     Type
 11279 ;;		None
 11280 ;; Auto vars:     Size  Location     Type
 11281 ;;		None
 11282 ;; Return value:  Size  Location     Type
 11283 ;;		None               void
 11284 ;; Registers used:
 11285 ;;		None
 11286 ;; Tracked objects:
 11287 ;;		On entry : 0/0
 11288 ;;		On exit  : 0/0
 11289 ;;		Unchanged: 0/0
 11290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11291 ;;      Params:         0       0       0       0       0       0       0
 11292 ;;      Locals:         0       0       0       0       0       0       0
 11293 ;;      Temps:          0       0       0       0       0       0       0
 11294 ;;      Totals:         0       0       0       0       0       0       0
 11295 ;;Total ram usage:        0 bytes
 11296 ;; Hardware stack levels used:    1
 11297 ;; This function calls:
 11298 ;;		Nothing
 11299 ;; This function is called by:
 11300 ;;		_TMR0_ISR
 11301 ;; This function uses a non-reentrant model
 11302 ;;
 11303                           
 11304                           	psect	text59
 11305  002DFC                     __ptext59:
 11306                           	opt stack 0
 11307  002DFC                     _TMR0_CallBack:
 11308                           	opt stack 22
 11309                           
 11310                           ; BSR set to: 0
 11311                           ;incstack = 0
 11312  002DFC  0012               	return		;funcret
 11313  002DFE                     __end_of_TMR0_CallBack:
 11314                           	opt stack 0
 11315                           tosu	equ	0xFFF
 11316                           tosh	equ	0xFFE
 11317                           tosl	equ	0xFFD
 11318                           pclatu	equ	0xFFB
 11319                           pclath	equ	0xFFA
 11320                           tblptru	equ	0xFF8
 11321                           tblptrh	equ	0xFF7
 11322                           tblptrl	equ	0xFF6
 11323                           tablat	equ	0xFF5
 11324                           prodh	equ	0xFF4
 11325                           prodl	equ	0xFF3
 11326                           intcon	equ	0xFF2
 11327                           intcon2	equ	0xFF1
 11328                           postinc0	equ	0xFEE
 11329                           fsr0h	equ	0xFEA
 11330                           fsr0l	equ	0xFE9
 11331                           wreg	equ	0xFE8
 11332                           fsr1h	equ	0xFE2
 11333                           fsr1l	equ	0xFE1
 11334                           indf2	equ	0xFDF
 11335                           postinc2	equ	0xFDE
 11336                           postdec2	equ	0xFDD
 11337                           plusw2	equ	0xFDB
 11338                           fsr2h	equ	0xFDA
 11339                           fsr2l	equ	0xFD9
 11340                           status	equ	0xFD8
 11341                           
 11342 ;; *************** function _ReadButtonState *****************
 11343 ;; Defined at:
 11344 ;;		line 154 in file "IO.c"
 11345 ;; Parameters:    Size  Location     Type
 11346 ;;  btnnum          2    0[COMRAM] int 
 11347 ;; Auto vars:     Size  Location     Type
 11348 ;;		None
 11349 ;; Return value:  Size  Location     Type
 11350 ;;		None               void
 11351 ;; Registers used:
 11352 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11353 ;; Tracked objects:
 11354 ;;		On entry : 0/0
 11355 ;;		On exit  : 0/0
 11356 ;;		Unchanged: 0/0
 11357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11358 ;;      Params:         2       0       0       0       0       0       0
 11359 ;;      Locals:         0       0       0       0       0       0       0
 11360 ;;      Temps:          2       0       0       0       0       0       0
 11361 ;;      Totals:         4       0       0       0       0       0       0
 11362 ;;Total ram usage:        4 bytes
 11363 ;; Hardware stack levels used:    1
 11364 ;; This function calls:
 11365 ;;		Nothing
 11366 ;; This function is called by:
 11367 ;;		_TMR0_ISR
 11368 ;; This function uses a non-reentrant model
 11369 ;;
 11370                           
 11371                           	psect	text60
 11372  001A64                     __ptext60:
 11373                           	opt stack 0
 11374  001A64                     _ReadButtonState:
 11375                           	opt stack 22
 11376                           
 11377                           ;IO.c: 155: switch (btnnum) {
 11378                           
 11379                           ;incstack = 0
 11380  001A64  D068               	goto	i2l4106
 11381  001A66                     i2l4088:
 11382                           
 11383                           ;IO.c: 157: butnarray[btnnum] = PORTDbits.RD5;
 11384  001A66  0EB0               	movlw	low _butnarray
 11385  001A68  2401               	addwf	ReadButtonState@btnnum,w,c
 11386  001A6A  6ED9               	movwf	fsr2l,c
 11387  001A6C  0E00               	movlw	high _butnarray
 11388  001A6E  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 11389  001A70  6EDA               	movwf	fsr2h,c
 11390  001A72  AA83               	btfss	3971,5,c	;volatile
 11391  001A74  D002               	goto	i2u332_40
 11392  001A76  0E01               	movlw	1
 11393  001A78  D001               	goto	i2u332_46
 11394  001A7A                     i2u332_40:
 11395  001A7A  0E00               	movlw	0
 11396  001A7C                     i2u332_46:
 11397  001A7C  6EDF               	movwf	indf2,c
 11398                           
 11399                           ;IO.c: 158: break;
 11400  001A7E  0012               	return	
 11401  001A80                     i2l4090:
 11402                           
 11403                           ;IO.c: 160: butnarray[btnnum] = PORTBbits.RB0;
 11404  001A80  0EB0               	movlw	low _butnarray
 11405  001A82  2401               	addwf	ReadButtonState@btnnum,w,c
 11406  001A84  6ED9               	movwf	fsr2l,c
 11407  001A86  0E00               	movlw	high _butnarray
 11408  001A88  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 11409  001A8A  6EDA               	movwf	fsr2h,c
 11410  001A8C  A081               	btfss	3969,0,c	;volatile
 11411  001A8E  D002               	goto	i2u333_40
 11412  001A90  0E01               	movlw	1
 11413  001A92  D001               	goto	i2u333_46
 11414  001A94                     i2u333_40:
 11415  001A94  0E00               	movlw	0
 11416  001A96                     i2u333_46:
 11417  001A96  6EDF               	movwf	indf2,c
 11418                           
 11419                           ;IO.c: 161: break;
 11420  001A98  0012               	return	
 11421  001A9A                     i2l4092:
 11422                           
 11423                           ;IO.c: 163: butnarray[btnnum] = PORTBbits.RB1;
 11424  001A9A  0EB0               	movlw	low _butnarray
 11425  001A9C  2401               	addwf	ReadButtonState@btnnum,w,c
 11426  001A9E  6ED9               	movwf	fsr2l,c
 11427  001AA0  0E00               	movlw	high _butnarray
 11428  001AA2  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 11429  001AA4  6EDA               	movwf	fsr2h,c
 11430  001AA6  A281               	btfss	3969,1,c	;volatile
 11431  001AA8  D002               	goto	i2u334_40
 11432  001AAA  0E01               	movlw	1
 11433  001AAC  D001               	goto	i2u334_46
 11434  001AAE                     i2u334_40:
 11435  001AAE  0E00               	movlw	0
 11436  001AB0                     i2u334_46:
 11437  001AB0  6EDF               	movwf	indf2,c
 11438                           
 11439                           ;IO.c: 164: break;
 11440  001AB2  0012               	return	
 11441  001AB4                     i2l4094:
 11442                           
 11443                           ;IO.c: 166: butnarray[btnnum] = PORTBbits.RB2;
 11444  001AB4  0EB0               	movlw	low _butnarray
 11445  001AB6  2401               	addwf	ReadButtonState@btnnum,w,c
 11446  001AB8  6ED9               	movwf	fsr2l,c
 11447  001ABA  0E00               	movlw	high _butnarray
 11448  001ABC  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 11449  001ABE  6EDA               	movwf	fsr2h,c
 11450  001AC0  A481               	btfss	3969,2,c	;volatile
 11451  001AC2  D002               	goto	i2u335_40
 11452  001AC4  0E01               	movlw	1
 11453  001AC6  D001               	goto	i2u335_46
 11454  001AC8                     i2u335_40:
 11455  001AC8  0E00               	movlw	0
 11456  001ACA                     i2u335_46:
 11457  001ACA  6EDF               	movwf	indf2,c
 11458                           
 11459                           ;IO.c: 167: break;
 11460  001ACC  0012               	return	
 11461  001ACE                     i2l4096:
 11462                           
 11463                           ;IO.c: 169: butnarray[btnnum] = PORTBbits.RB4;
 11464  001ACE  0EB0               	movlw	low _butnarray
 11465  001AD0  2401               	addwf	ReadButtonState@btnnum,w,c
 11466  001AD2  6ED9               	movwf	fsr2l,c
 11467  001AD4  0E00               	movlw	high _butnarray
 11468  001AD6  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 11469  001AD8  6EDA               	movwf	fsr2h,c
 11470  001ADA  A881               	btfss	3969,4,c	;volatile
 11471  001ADC  D002               	goto	i2u336_40
 11472  001ADE  0E01               	movlw	1
 11473  001AE0  D001               	goto	i2u336_46
 11474  001AE2                     i2u336_40:
 11475  001AE2  0E00               	movlw	0
 11476  001AE4                     i2u336_46:
 11477  001AE4  6EDF               	movwf	indf2,c
 11478                           
 11479                           ;IO.c: 170: break;
 11480  001AE6  0012               	return	
 11481  001AE8                     i2l4098:
 11482                           
 11483                           ;IO.c: 172: butnarray[btnnum] = PORTAbits.RA0;
 11484  001AE8  0EB0               	movlw	low _butnarray
 11485  001AEA  2401               	addwf	ReadButtonState@btnnum,w,c
 11486  001AEC  6ED9               	movwf	fsr2l,c
 11487  001AEE  0E00               	movlw	high _butnarray
 11488  001AF0  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 11489  001AF2  6EDA               	movwf	fsr2h,c
 11490  001AF4  A080               	btfss	3968,0,c	;volatile
 11491  001AF6  D002               	goto	i2u337_40
 11492  001AF8  0E01               	movlw	1
 11493  001AFA  D001               	goto	i2u337_46
 11494  001AFC                     i2u337_40:
 11495  001AFC  0E00               	movlw	0
 11496  001AFE                     i2u337_46:
 11497  001AFE  6EDF               	movwf	indf2,c
 11498                           
 11499                           ;IO.c: 173: break;
 11500  001B00  0012               	return	
 11501  001B02                     i2l4100:
 11502                           
 11503                           ;IO.c: 175: butnarray[btnnum] = PORTAbits.RA1;
 11504  001B02  0EB0               	movlw	low _butnarray
 11505  001B04  2401               	addwf	ReadButtonState@btnnum,w,c
 11506  001B06  6ED9               	movwf	fsr2l,c
 11507  001B08  0E00               	movlw	high _butnarray
 11508  001B0A  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 11509  001B0C  6EDA               	movwf	fsr2h,c
 11510  001B0E  A280               	btfss	3968,1,c	;volatile
 11511  001B10  D002               	goto	i2u338_40
 11512  001B12  0E01               	movlw	1
 11513  001B14  D001               	goto	i2u338_46
 11514  001B16                     i2u338_40:
 11515  001B16  0E00               	movlw	0
 11516  001B18                     i2u338_46:
 11517  001B18  6EDF               	movwf	indf2,c
 11518                           
 11519                           ;IO.c: 176: break;
 11520  001B1A  0012               	return	
 11521  001B1C                     i2l4102:
 11522                           
 11523                           ;IO.c: 178: butnarray[btnnum] = PORTAbits.RA2;
 11524  001B1C  0EB0               	movlw	low _butnarray
 11525  001B1E  2401               	addwf	ReadButtonState@btnnum,w,c
 11526  001B20  6ED9               	movwf	fsr2l,c
 11527  001B22  0E00               	movlw	high _butnarray
 11528  001B24  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 11529  001B26  6EDA               	movwf	fsr2h,c
 11530  001B28  A480               	btfss	3968,2,c	;volatile
 11531  001B2A  D002               	goto	i2u339_40
 11532  001B2C  0E01               	movlw	1
 11533  001B2E  D001               	goto	i2u339_46
 11534  001B30                     i2u339_40:
 11535  001B30  0E00               	movlw	0
 11536  001B32                     i2u339_46:
 11537  001B32  6EDF               	movwf	indf2,c
 11538                           
 11539                           ;IO.c: 181: }
 11540                           
 11541                           ;IO.c: 179: break;
 11542  001B34  0012               	return	
 11543  001B36                     i2l4106:
 11544  001B36  C001  F003         	movff	ReadButtonState@btnnum,??_ReadButtonState
 11545  001B3A  C002  F004         	movff	ReadButtonState@btnnum+1,??_ReadButtonState+1
 11546                           
 11547                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11548                           ; Switch size 1, requested type "space"
 11549                           ; Number of cases is 1, Range of values is 0 to 0
 11550                           ; switch strategies available:
 11551                           ; Name         Instructions Cycles
 11552                           ; simple_byte            4     3 (average)
 11553                           ;	Chosen strategy is simple_byte
 11554  001B3E  5004               	movf	??_ReadButtonState+1,w,c
 11555  001B40  0A00               	xorlw	0	; case 0
 11556  001B42  A4D8               	btfss	status,2,c
 11557  001B44  0012               	return	
 11558                           
 11559                           ; Switch size 1, requested type "space"
 11560                           ; Number of cases is 8, Range of values is 0 to 7
 11561                           ; switch strategies available:
 11562                           ; Name         Instructions Cycles
 11563                           ; simple_byte           25    13 (average)
 11564                           ;	Chosen strategy is simple_byte
 11565  001B46  5003               	movf	??_ReadButtonState,w,c
 11566  001B48  0A00               	xorlw	0	; case 0
 11567  001B4A  B4D8               	btfsc	status,2,c
 11568  001B4C  D78C               	goto	i2l4088
 11569  001B4E  0A01               	xorlw	1	; case 1
 11570  001B50  B4D8               	btfsc	status,2,c
 11571  001B52  D796               	goto	i2l4090
 11572  001B54  0A03               	xorlw	3	; case 2
 11573  001B56  B4D8               	btfsc	status,2,c
 11574  001B58  D7A0               	goto	i2l4092
 11575  001B5A  0A01               	xorlw	1	; case 3
 11576  001B5C  B4D8               	btfsc	status,2,c
 11577  001B5E  D7AA               	goto	i2l4094
 11578  001B60  0A07               	xorlw	7	; case 4
 11579  001B62  B4D8               	btfsc	status,2,c
 11580  001B64  D7B4               	goto	i2l4096
 11581  001B66  0A01               	xorlw	1	; case 5
 11582  001B68  B4D8               	btfsc	status,2,c
 11583  001B6A  D7BE               	goto	i2l4098
 11584  001B6C  0A03               	xorlw	3	; case 6
 11585  001B6E  B4D8               	btfsc	status,2,c
 11586  001B70  D7C8               	goto	i2l4100
 11587  001B72  0A01               	xorlw	1	; case 7
 11588  001B74  A4D8               	btfss	status,2,c
 11589  001B76  0012               	return	
 11590  001B78  D7D1               	goto	i2l4102
 11591  001B7A                     __end_of_ReadButtonState:
 11592                           	opt stack 0
 11593                           tosu	equ	0xFFF
 11594                           tosh	equ	0xFFE
 11595                           tosl	equ	0xFFD
 11596                           pclatu	equ	0xFFB
 11597                           pclath	equ	0xFFA
 11598                           tblptru	equ	0xFF8
 11599                           tblptrh	equ	0xFF7
 11600                           tblptrl	equ	0xFF6
 11601                           tablat	equ	0xFF5
 11602                           prodh	equ	0xFF4
 11603                           prodl	equ	0xFF3
 11604                           intcon	equ	0xFF2
 11605                           intcon2	equ	0xFF1
 11606                           postinc0	equ	0xFEE
 11607                           fsr0h	equ	0xFEA
 11608                           fsr0l	equ	0xFE9
 11609                           wreg	equ	0xFE8
 11610                           fsr1h	equ	0xFE2
 11611                           fsr1l	equ	0xFE1
 11612                           indf2	equ	0xFDF
 11613                           postinc2	equ	0xFDE
 11614                           postdec2	equ	0xFDD
 11615                           plusw2	equ	0xFDB
 11616                           fsr2h	equ	0xFDA
 11617                           fsr2l	equ	0xFD9
 11618                           status	equ	0xFD8
 11619                           
 11620 ;; *************** function _I2C1_ISR *****************
 11621 ;; Defined at:
 11622 ;;		line 186 in file "mcc_generated_files/i2c1.c"
 11623 ;; Parameters:    Size  Location     Type
 11624 ;;		None
 11625 ;; Auto vars:     Size  Location     Type
 11626 ;;		None
 11627 ;; Return value:  Size  Location     Type
 11628 ;;		None               void
 11629 ;; Registers used:
 11630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11631 ;; Tracked objects:
 11632 ;;		On entry : 0/0
 11633 ;;		On exit  : 0/0
 11634 ;;		Unchanged: 0/0
 11635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11636 ;;      Params:         0       0       0       0       0       0       0
 11637 ;;      Locals:         0       0       0       0       0       0       0
 11638 ;;      Temps:          2       0       0       0       0       0       0
 11639 ;;      Totals:         2       0       0       0       0       0       0
 11640 ;;Total ram usage:        2 bytes
 11641 ;; Hardware stack levels used:    1
 11642 ;; Hardware stack levels required when called:    1
 11643 ;; This function calls:
 11644 ;;		_I2C1_FunctionComplete
 11645 ;;		_I2C1_Stop
 11646 ;; This function is called by:
 11647 ;;		_INTERRUPT_InterruptManager
 11648 ;; This function uses a non-reentrant model
 11649 ;;
 11650                           
 11651                           	psect	text61
 11652  000E2C                     __ptext61:
 11653                           	opt stack 0
 11654  000E2C                     _I2C1_ISR:
 11655                           	opt stack 22
 11656                           
 11657                           ;i2c1.c: 189: static uint8_t *pi2c_buf_ptr;
 11658                           ;i2c1.c: 190: static uint16_t i2c_address = 0;
 11659                           ;i2c1.c: 191: static uint8_t i2c_bytes_left = 0;
 11660                           ;i2c1.c: 192: static uint8_t i2c_10bit_address_restart = 0;
 11661                           ;i2c1.c: 194: PIR1bits.SSP1IF = 0;
 11662                           
 11663                           ;incstack = 0
 11664  000E2C  969E               	bcf	3998,3,c	;volatile
 11665                           
 11666                           ;i2c1.c: 198: if(SSP1CON1bits.WCOL)
 11667  000E2E  AEC6               	btfss	4038,7,c	;volatile
 11668  000E30  D114               	goto	i2l6220
 11669                           
 11670                           ;i2c1.c: 199: {
 11671                           ;i2c1.c: 201: SSP1CON1bits.WCOL = 0;
 11672  000E32  9EC6               	bcf	4038,7,c	;volatile
 11673                           
 11674                           ;i2c1.c: 202: i2c1_state = S_MASTER_IDLE;
 11675  000E34  0E00               	movlw	0
 11676  000E36  6E38               	movwf	_i2c1_state,c
 11677                           
 11678                           ;i2c1.c: 203: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
 11679  000E38  0100               	movlb	0	; () banked
 11680  000E3A  EE20 F003          	lfsr	2,3
 11681  000E3E  51CF               	movf	_p_i2c1_current& (0+255),w,b
 11682  000E40  26D9               	addwf	fsr2l,f,c
 11683  000E42  51D0               	movf	(_p_i2c1_current+1)& (0+255),w,b
 11684  000E44  22DA               	addwfc	fsr2h,f,c
 11685  000E46  CFDE F004          	movff	postinc2,??_I2C1_ISR
 11686  000E4A  CFDD F005          	movff	postdec2,??_I2C1_ISR+1
 11687  000E4E  C004  FFD9         	movff	??_I2C1_ISR,fsr2l
 11688  000E52  C005  FFDA         	movff	??_I2C1_ISR+1,fsr2h
 11689  000E56  0E01               	movlw	1
 11690  000E58  6EDF               	movwf	indf2,c
 11691                           
 11692                           ; BSR set to: 0
 11693                           ;i2c1.c: 206: p_i2c1_current = (0);
 11694  000E5A  0E00               	movlw	0
 11695  000E5C  0100               	movlb	0	; () banked
 11696  000E5E  6FCF               	movwf	_p_i2c1_current& (0+255),b
 11697  000E60  0E00               	movlw	0
 11698  000E62  0100               	movlb	0	; () banked
 11699  000E64  6FD0               	movwf	(_p_i2c1_current+1)& (0+255),b
 11700                           
 11701                           ; BSR set to: 0
 11702                           ;i2c1.c: 208: return;
 11703  000E66  0012               	return	
 11704  000E68                     i2l60:
 11705                           
 11706                           ;i2c1.c: 216: if(i2c1_object.trStatus.s.empty != 1)
 11707  000E68  0100               	movlb	0	; () banked
 11708  000E6A  B3BC               	btfsc	(_i2c1_object+4)& (0+255),1,b
 11709  000E6C  0012               	return	
 11710                           
 11711                           ; BSR set to: 0
 11712                           ;i2c1.c: 217: {
 11713                           ;i2c1.c: 219: p_i2c1_current = i2c1_object.pTrHead;
 11714  000E6E  C0BA  F0CF         	movff	_i2c1_object+2,_p_i2c1_current
 11715  000E72  C0BB  F0D0         	movff	_i2c1_object+3,_p_i2c1_current+1
 11716                           
 11717                           ; BSR set to: 0
 11718                           ;i2c1.c: 220: i2c1_trb_count = i2c1_object.pTrHead->count;
 11719  000E76  C0BA  FFD9         	movff	_i2c1_object+2,fsr2l
 11720  000E7A  C0BB  FFDA         	movff	_i2c1_object+3,fsr2h
 11721  000E7E  50DF               	movf	indf2,w,c
 11722  000E80  6E39               	movwf	_i2c1_trb_count,c
 11723                           
 11724                           ; BSR set to: 0
 11725                           ;i2c1.c: 221: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
 11726  000E82  0100               	movlb	0	; () banked
 11727  000E84  EE20 F001          	lfsr	2,1
 11728  000E88  51BA               	movf	(_i2c1_object+2)& (0+255),w,b
 11729  000E8A  26D9               	addwf	fsr2l,f,c
 11730  000E8C  51BB               	movf	(_i2c1_object+3)& (0+255),w,b
 11731  000E8E  22DA               	addwfc	fsr2h,f,c
 11732  000E90  CFDE F0D1          	movff	postinc2,_p_i2c1_trb_current
 11733  000E94  CFDD F0D2          	movff	postdec2,_p_i2c1_trb_current+1
 11734                           
 11735                           ; BSR set to: 0
 11736                           ;i2c1.c: 223: i2c1_object.pTrHead++;
 11737  000E98  0E05               	movlw	5
 11738  000E9A  0100               	movlb	0	; () banked
 11739  000E9C  27BA               	addwf	(_i2c1_object+2)& (0+255),f,b
 11740  000E9E  0E00               	movlw	0
 11741  000EA0  23BB               	addwfc	(_i2c1_object+3)& (0+255),f,b
 11742                           
 11743                           ; BSR set to: 0
 11744                           ;i2c1.c: 226: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
 11745  000EA2  0EEE               	movlw	low (_i2c1_tr_queue+5)
 11746  000EA4  0100               	movlb	0	; () banked
 11747  000EA6  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 11748  000EA8  E10B               	bnz	i2l6112
 11749  000EAA  0E00               	movlw	high (_i2c1_tr_queue+5)
 11750  000EAC  0100               	movlb	0	; () banked
 11751  000EAE  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 11752  000EB0  A4D8               	btfss	status,2,c
 11753  000EB2  D006               	goto	i2l6112
 11754                           
 11755                           ; BSR set to: 0
 11756                           ;i2c1.c: 227: {
 11757                           ;i2c1.c: 229: i2c1_object.pTrHead = i2c1_tr_queue;
 11758  000EB4  0EE9               	movlw	low _i2c1_tr_queue
 11759  000EB6  0100               	movlb	0	; () banked
 11760  000EB8  6FBA               	movwf	(_i2c1_object+2)& (0+255),b
 11761  000EBA  0E00               	movlw	high _i2c1_tr_queue
 11762  000EBC  0100               	movlb	0	; () banked
 11763  000EBE  6FBB               	movwf	(_i2c1_object+3)& (0+255),b
 11764  000EC0                     i2l6112:
 11765                           
 11766                           ; BSR set to: 0
 11767                           ;i2c1.c: 230: }
 11768                           ;i2c1.c: 234: i2c1_object.trStatus.s.full = 0;
 11769  000EC0  0100               	movlb	0	; () banked
 11770  000EC2  91BC               	bcf	(_i2c1_object+4)& (0+255),0,b
 11771                           
 11772                           ;i2c1.c: 237: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
 11773  000EC4  0100               	movlb	0	; () banked
 11774  000EC6  51B8               	movf	_i2c1_object& (0+255),w,b
 11775  000EC8  0100               	movlb	0	; () banked
 11776  000ECA  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 11777  000ECC  E108               	bnz	i2l63
 11778  000ECE  0100               	movlb	0	; () banked
 11779  000ED0  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 11780  000ED2  0100               	movlb	0	; () banked
 11781  000ED4  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 11782  000ED6  A4D8               	btfss	status,2,c
 11783  000ED8  D002               	goto	i2l63
 11784                           
 11785                           ; BSR set to: 0
 11786                           ;i2c1.c: 238: {
 11787                           ;i2c1.c: 240: i2c1_object.trStatus.s.empty = 1;
 11788  000EDA  0100               	movlb	0	; () banked
 11789  000EDC  83BC               	bsf	(_i2c1_object+4)& (0+255),1,b
 11790  000EDE                     i2l63:
 11791                           
 11792                           ; BSR set to: 0
 11793                           ;i2c1.c: 241: }
 11794                           ;i2c1.c: 244: SSP1CON2bits.SEN = 1;
 11795  000EDE  80C5               	bsf	4037,0,c	;volatile
 11796                           
 11797                           ; BSR set to: 0
 11798                           ;i2c1.c: 247: i2c1_state = S_MASTER_SEND_ADDR;
 11799  000EE0  0E02               	movlw	2
 11800  000EE2  6E38               	movwf	_i2c1_state,c
 11801                           
 11802                           ; BSR set to: 0
 11803                           ;i2c1.c: 248: }
 11804                           ;i2c1.c: 250: break;
 11805  000EE4  0012               	return	
 11806  000EE6                     i2l65:
 11807                           
 11808                           ;i2c1.c: 257: SSP1CON2bits.RSEN = 1;
 11809  000EE6  82C5               	bsf	4037,1,c	;volatile
 11810                           
 11811                           ;i2c1.c: 260: i2c1_state = S_MASTER_SEND_ADDR;
 11812  000EE8  0E02               	movlw	2
 11813  000EEA  6E38               	movwf	_i2c1_state,c
 11814                           
 11815                           ;i2c1.c: 262: break;
 11816  000EEC  0012               	return	
 11817  000EEE                     i2l66:
 11818                           
 11819                           ;i2c1.c: 266: if(SSP1CON2bits.ACKSTAT)
 11820  000EEE  ACC5               	btfss	4037,6,c	;volatile
 11821  000EF0  D006               	goto	i2l6124
 11822                           
 11823                           ;i2c1.c: 267: {
 11824                           ;i2c1.c: 268: i2c1_object.i2cErrors++;
 11825  000EF2  0100               	movlb	0	; () banked
 11826  000EF4  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 11827                           
 11828                           ; BSR set to: 0
 11829                           ;i2c1.c: 269: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 11830  000EF6  0E04               	movlw	4
 11831  000EF8  EC0D  F015         	call	_I2C1_Stop
 11832                           
 11833                           ;i2c1.c: 270: }
 11834  000EFC  0012               	return	
 11835  000EFE                     i2l6124:
 11836                           
 11837                           ;i2c1.c: 271: else
 11838                           ;i2c1.c: 272: {
 11839                           ;i2c1.c: 274: SSP1BUF = (i2c_address >> 1) & 0x00FF;
 11840  000EFE  90D8               	bcf	status,0,c
 11841  000F00  3041               	rrcf	I2C1_ISR@i2c_address+1,w,c
 11842  000F02  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
 11843  000F04  3040               	rrcf	I2C1_ISR@i2c_address,w,c
 11844  000F06  6E04               	movwf	??_I2C1_ISR& (0+255),c
 11845  000F08  5004               	movf	??_I2C1_ISR,w,c
 11846  000F0A  6EC9               	movwf	4041,c	;volatile
 11847                           
 11848                           ;i2c1.c: 277: if(i2c_address & 0x01)
 11849  000F0C  A040               	btfss	I2C1_ISR@i2c_address,0,c
 11850  000F0E  D003               	goto	i2l6130
 11851                           
 11852                           ;i2c1.c: 278: {
 11853                           ;i2c1.c: 281: i2c1_state = S_MASTER_10BIT_RESTART;
 11854  000F10  0E0B               	movlw	11
 11855  000F12  6E38               	movwf	_i2c1_state,c
 11856                           
 11857                           ;i2c1.c: 282: }
 11858  000F14  0012               	return	
 11859  000F16                     i2l6130:
 11860                           
 11861                           ;i2c1.c: 283: else
 11862                           ;i2c1.c: 284: {
 11863                           ;i2c1.c: 286: i2c1_state = S_MASTER_SEND_DATA;
 11864  000F16  0E03               	movlw	3
 11865  000F18  6E38               	movwf	_i2c1_state,c
 11866                           
 11867                           ;i2c1.c: 287: }
 11868                           ;i2c1.c: 288: }
 11869                           ;i2c1.c: 290: break;
 11870  000F1A  0012               	return	
 11871  000F1C                     i2l71:
 11872                           
 11873                           ;i2c1.c: 294: if(SSP1CON2bits.ACKSTAT)
 11874  000F1C  ACC5               	btfss	4037,6,c	;volatile
 11875  000F1E  D006               	goto	i2l72
 11876                           
 11877                           ;i2c1.c: 295: {
 11878                           ;i2c1.c: 296: i2c1_object.i2cErrors++;
 11879  000F20  0100               	movlb	0	; () banked
 11880  000F22  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 11881                           
 11882                           ; BSR set to: 0
 11883                           ;i2c1.c: 297: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 11884  000F24  0E04               	movlw	4
 11885  000F26  EC0D  F015         	call	_I2C1_Stop
 11886                           
 11887                           ;i2c1.c: 298: }
 11888  000F2A  0012               	return	
 11889  000F2C                     i2l72:
 11890                           
 11891                           ;i2c1.c: 299: else
 11892                           ;i2c1.c: 300: {
 11893                           ;i2c1.c: 303: SSP1CON2bits.RSEN = 1;
 11894  000F2C  82C5               	bsf	4037,1,c	;volatile
 11895                           
 11896                           ;i2c1.c: 307: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 11897  000F2E  C040  F004         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
 11898  000F32  C041  F005         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
 11899  000F36  C005  F004         	movff	??_I2C1_ISR+1,??_I2C1_ISR
 11900  000F3A  6A05               	clrf	??_I2C1_ISR+1,c
 11901  000F3C  0E06               	movlw	6
 11902  000F3E  1604               	andwf	??_I2C1_ISR,f,c
 11903  000F40  0E00               	movlw	0
 11904  000F42  1605               	andwf	??_I2C1_ISR+1,f,c
 11905  000F44  0EF0               	movlw	240
 11906  000F46  1004               	iorwf	??_I2C1_ISR,w,c
 11907  000F48  6E40               	movwf	I2C1_ISR@i2c_address,c
 11908  000F4A  5005               	movf	??_I2C1_ISR+1,w,c
 11909  000F4C  6E41               	movwf	I2C1_ISR@i2c_address+1,c
 11910                           
 11911                           ;i2c1.c: 310: i2c_address |= 0x0001;
 11912  000F4E  8040               	bsf	I2C1_ISR@i2c_address,0,c
 11913                           
 11914                           ;i2c1.c: 313: i2c_10bit_address_restart = 1;
 11915  000F50  0E01               	movlw	1
 11916  000F52  6E34               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
 11917                           
 11918                           ;i2c1.c: 316: i2c1_state = S_MASTER_SEND_ADDR;
 11919  000F54  0E02               	movlw	2
 11920  000F56  6E38               	movwf	_i2c1_state,c
 11921                           
 11922                           ;i2c1.c: 317: }
 11923                           ;i2c1.c: 319: break;
 11924  000F58  0012               	return	
 11925  000F5A                     i2l6144:
 11926                           
 11927                           ;i2c1.c: 334: if(i2c_10bit_address_restart != 1)
 11928  000F5A  0434               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
 11929  000F5C  B4D8               	btfsc	status,2,c
 11930  000F5E  D01C               	goto	i2l76
 11931                           
 11932                           ;i2c1.c: 335: {
 11933                           ;i2c1.c: 337: i2c_address = p_i2c1_trb_current->address;
 11934  000F60  C0D1  FFD9         	movff	_p_i2c1_trb_current,fsr2l
 11935  000F64  C0D2  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
 11936  000F68  CFDE F040          	movff	postinc2,I2C1_ISR@i2c_address
 11937  000F6C  CFDD F041          	movff	postdec2,I2C1_ISR@i2c_address+1
 11938                           
 11939                           ;i2c1.c: 338: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
 11940  000F70  0100               	movlb	0	; () banked
 11941  000F72  EE20 F003          	lfsr	2,3
 11942  000F76  51D1               	movf	_p_i2c1_trb_current& (0+255),w,b
 11943  000F78  26D9               	addwf	fsr2l,f,c
 11944  000F7A  51D2               	movf	(_p_i2c1_trb_current+1)& (0+255),w,b
 11945  000F7C  22DA               	addwfc	fsr2h,f,c
 11946  000F7E  CFDE F0BF          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
 11947  000F82  CFDD F0C0          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
 11948                           
 11949                           ; BSR set to: 0
 11950                           ;i2c1.c: 339: i2c_bytes_left = p_i2c1_trb_current->length;
 11951  000F86  0100               	movlb	0	; () banked
 11952  000F88  EE20 F002          	lfsr	2,2
 11953  000F8C  51D1               	movf	_p_i2c1_trb_current& (0+255),w,b
 11954  000F8E  26D9               	addwf	fsr2l,f,c
 11955  000F90  51D2               	movf	(_p_i2c1_trb_current+1)& (0+255),w,b
 11956  000F92  22DA               	addwfc	fsr2h,f,c
 11957  000F94  50DF               	movf	indf2,w,c
 11958  000F96  6E35               	movwf	I2C1_ISR@i2c_bytes_left,c
 11959  000F98                     i2l76:
 11960                           
 11961                           ;i2c1.c: 362: else
 11962                           ;i2c1.c: 363: {
 11963                           ;i2c1.c: 365: SSP1BUF = i2c_address;
 11964  000F98  C040  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
 11965                           
 11966                           ;i2c1.c: 366: if(i2c_address & 0x01)
 11967  000F9C  A040               	btfss	I2C1_ISR@i2c_address,0,c
 11968  000F9E  D003               	goto	i2l6164
 11969                           
 11970                           ;i2c1.c: 367: {
 11971                           ;i2c1.c: 369: i2c1_state = S_MASTER_ACK_ADDR;
 11972  000FA0  0E05               	movlw	5
 11973  000FA2  6E38               	movwf	_i2c1_state,c
 11974                           
 11975                           ;i2c1.c: 370: }
 11976  000FA4  0012               	return	
 11977  000FA6                     i2l6164:
 11978                           
 11979                           ;i2c1.c: 371: else
 11980                           ;i2c1.c: 372: {
 11981                           ;i2c1.c: 374: i2c1_state = S_MASTER_SEND_DATA;
 11982  000FA6  0E03               	movlw	3
 11983  000FA8  6E38               	movwf	_i2c1_state,c
 11984                           
 11985                           ;i2c1.c: 375: }
 11986                           ;i2c1.c: 376: }
 11987                           ;i2c1.c: 377: break;
 11988  000FAA  0012               	return	
 11989  000FAC                     i2l82:
 11990                           
 11991                           ;i2c1.c: 382: if(SSP1CON2bits.ACKSTAT)
 11992  000FAC  ACC5               	btfss	4037,6,c	;volatile
 11993  000FAE  D007               	goto	i2l6172
 11994                           
 11995                           ;i2c1.c: 383: {
 11996                           ;i2c1.c: 385: i2c1_object.i2cErrors++;
 11997  000FB0  0100               	movlb	0	; () banked
 11998  000FB2  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 11999                           
 12000                           ; BSR set to: 0
 12001                           ;i2c1.c: 388: SSP1CON2bits.ACKSTAT = 0;
 12002  000FB4  9CC5               	bcf	4037,6,c	;volatile
 12003                           
 12004                           ; BSR set to: 0
 12005                           ;i2c1.c: 391: I2C1_Stop(I2C1_DATA_NO_ACK);
 12006  000FB6  0E05               	movlw	5
 12007  000FB8  EC0D  F015         	call	_I2C1_Stop
 12008                           
 12009                           ;i2c1.c: 393: }
 12010  000FBC  0012               	return	
 12011  000FBE                     i2l6172:
 12012                           
 12013                           ;i2c1.c: 394: else
 12014                           ;i2c1.c: 395: {
 12015                           ;i2c1.c: 397: if(i2c_bytes_left-- == 0U)
 12016  000FBE  0635               	decf	I2C1_ISR@i2c_bytes_left,f,c
 12017  000FC0  2835               	incf	I2C1_ISR@i2c_bytes_left,w,c
 12018  000FC2  A4D8               	btfss	status,2,c
 12019  000FC4  D00F               	goto	i2l6182
 12020                           
 12021                           ;i2c1.c: 398: {
 12022                           ;i2c1.c: 402: p_i2c1_trb_current++;
 12023  000FC6  0E05               	movlw	5
 12024  000FC8  0100               	movlb	0	; () banked
 12025  000FCA  27D1               	addwf	_p_i2c1_trb_current& (0+255),f,b
 12026  000FCC  0E00               	movlw	0
 12027  000FCE  23D2               	addwfc	(_p_i2c1_trb_current+1)& (0+255),f,b
 12028                           
 12029                           ; BSR set to: 0
 12030                           ;i2c1.c: 405: if(--i2c1_trb_count == 0)
 12031  000FD0  2E39               	decfsz	_i2c1_trb_count,f,c
 12032  000FD2  D004               	goto	i2l86
 12033                           
 12034                           ; BSR set to: 0
 12035                           ;i2c1.c: 406: {
 12036                           ;i2c1.c: 407: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 12037  000FD4  0E00               	movlw	0
 12038  000FD6  EC0D  F015         	call	_I2C1_Stop
 12039                           
 12040                           ;i2c1.c: 408: }
 12041  000FDA  0012               	return	
 12042  000FDC                     i2l86:
 12043                           
 12044                           ; BSR set to: 0
 12045                           ;i2c1.c: 409: else
 12046                           ;i2c1.c: 410: {
 12047                           ;i2c1.c: 417: SSP1CON2bits.RSEN = 1;
 12048  000FDC  82C5               	bsf	4037,1,c	;volatile
 12049                           
 12050                           ; BSR set to: 0
 12051                           ;i2c1.c: 420: i2c1_state = S_MASTER_SEND_ADDR;
 12052  000FDE  0E02               	movlw	2
 12053  000FE0  6E38               	movwf	_i2c1_state,c
 12054                           
 12055                           ; BSR set to: 0
 12056                           ;i2c1.c: 422: }
 12057                           ;i2c1.c: 423: }
 12058  000FE2  0012               	return	
 12059  000FE4                     i2l6182:
 12060                           
 12061                           ;i2c1.c: 424: else
 12062                           ;i2c1.c: 425: {
 12063                           ;i2c1.c: 427: SSP1BUF = *pi2c_buf_ptr++;
 12064  000FE4  C0BF  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 12065  000FE8  C0C0  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 12066  000FEC  50DF               	movf	indf2,w,c
 12067  000FEE  6EC9               	movwf	4041,c	;volatile
 12068  000FF0  0100               	movlb	0	; () banked
 12069  000FF2  4BBF               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 12070  000FF4  2BC0               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 12071                           
 12072                           ; BSR set to: 0
 12073                           ;i2c1.c: 428: }
 12074                           ;i2c1.c: 429: }
 12075                           ;i2c1.c: 430: break;
 12076                           
 12077                           ; BSR set to: 0
 12078  000FF6  0012               	return	
 12079  000FF8                     i2l89:
 12080                           
 12081                           ;i2c1.c: 435: if(SSP1CON2bits.ACKSTAT)
 12082  000FF8  ACC5               	btfss	4037,6,c	;volatile
 12083  000FFA  D007               	goto	i2l90
 12084                           
 12085                           ;i2c1.c: 436: {
 12086                           ;i2c1.c: 439: i2c1_object.i2cErrors++;
 12087  000FFC  0100               	movlb	0	; () banked
 12088  000FFE  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 12089                           
 12090                           ; BSR set to: 0
 12091                           ;i2c1.c: 442: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 12092  001000  0E04               	movlw	4
 12093  001002  EC0D  F015         	call	_I2C1_Stop
 12094                           
 12095                           ;i2c1.c: 445: SSP1CON2bits.ACKSTAT = 0;
 12096  001006  9CC5               	bcf	4037,6,c	;volatile
 12097                           
 12098                           ;i2c1.c: 446: }
 12099  001008  0012               	return	
 12100  00100A                     i2l90:
 12101                           
 12102                           ;i2c1.c: 447: else
 12103                           ;i2c1.c: 448: {
 12104                           ;i2c1.c: 449: SSP1CON2bits.RCEN = 1;
 12105  00100A  86C5               	bsf	4037,3,c	;volatile
 12106                           
 12107                           ;i2c1.c: 450: i2c1_state = S_MASTER_ACK_RCV_DATA;
 12108  00100C  0E08               	movlw	8
 12109  00100E  6E38               	movwf	_i2c1_state,c
 12110                           
 12111                           ;i2c1.c: 451: }
 12112                           ;i2c1.c: 452: break;
 12113  001010  0012               	return	
 12114  001012                     i2l6194:
 12115                           
 12116                           ;i2c1.c: 459: i2c1_state = S_MASTER_ACK_RCV_DATA;
 12117  001012  0E08               	movlw	8
 12118  001014  6E38               	movwf	_i2c1_state,c
 12119                           
 12120                           ;i2c1.c: 462: SSP1CON2bits.RCEN = 1;
 12121  001016  86C5               	bsf	4037,3,c	;volatile
 12122                           
 12123                           ;i2c1.c: 464: break;
 12124  001018  0012               	return	
 12125  00101A                     i2l6198:
 12126                           
 12127                           ;i2c1.c: 469: *pi2c_buf_ptr++ = SSP1BUF;
 12128  00101A  C0BF  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 12129  00101E  C0C0  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 12130  001022  CFC9 FFDF          	movff	4041,indf2	;volatile
 12131  001026  0100               	movlb	0	; () banked
 12132  001028  4BBF               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 12133  00102A  2BC0               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 12134                           
 12135                           ; BSR set to: 0
 12136                           ;i2c1.c: 472: if(--i2c_bytes_left)
 12137  00102C  0E01               	movlw	1
 12138  00102E  5E35               	subwf	I2C1_ISR@i2c_bytes_left,f,c
 12139  001030  B4D8               	btfsc	status,2,c
 12140  001032  D004               	goto	i2l94
 12141                           
 12142                           ; BSR set to: 0
 12143                           ;i2c1.c: 473: {
 12144                           ;i2c1.c: 479: SSP1CON2bits.ACKDT = 0;
 12145  001034  9AC5               	bcf	4037,5,c	;volatile
 12146                           
 12147                           ; BSR set to: 0
 12148                           ;i2c1.c: 482: i2c1_state = S_MASTER_RCV_DATA;
 12149  001036  0E06               	movlw	6
 12150  001038  6E38               	movwf	_i2c1_state,c
 12151                           
 12152                           ;i2c1.c: 483: }
 12153  00103A  D003               	goto	i2l6210
 12154  00103C                     i2l94:
 12155                           
 12156                           ; BSR set to: 0
 12157                           ;i2c1.c: 484: else
 12158                           ;i2c1.c: 485: {
 12159                           ;i2c1.c: 489: SSP1CON2bits.ACKDT = 1;
 12160  00103C  8AC5               	bsf	4037,5,c	;volatile
 12161                           
 12162                           ; BSR set to: 0
 12163                           ;i2c1.c: 491: I2C1_FunctionComplete();
 12164  00103E  EC9A  F016         	call	_I2C1_FunctionComplete	;wreg free
 12165  001042                     i2l6210:
 12166                           
 12167                           ;i2c1.c: 492: }
 12168                           ;i2c1.c: 495: SSP1CON2bits.ACKEN = 1;
 12169  001042  88C5               	bsf	4037,4,c	;volatile
 12170                           
 12171                           ;i2c1.c: 496: break;
 12172  001044  0012               	return	
 12173  001046                     i2l6212:
 12174                           
 12175                           ;i2c1.c: 499: case S_MASTER_SEND_STOP:
 12176                           ;i2c1.c: 502: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 12177  001046  0E00               	movlw	0
 12178  001048  EC0D  F015         	call	_I2C1_Stop
 12179                           
 12180                           ;i2c1.c: 503: break;
 12181  00104C  0012               	return	
 12182  00104E                     i2l6214:
 12183                           
 12184                           ;i2c1.c: 509: i2c1_object.i2cErrors++;
 12185  00104E  0100               	movlb	0	; () banked
 12186  001050  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 12187                           
 12188                           ; BSR set to: 0
 12189                           ;i2c1.c: 510: I2C1_Stop(I2C1_LOST_STATE);
 12190  001052  0E06               	movlw	6
 12191  001054  EC0D  F015         	call	_I2C1_Stop
 12192                           
 12193                           ;i2c1.c: 513: }
 12194                           
 12195                           ;i2c1.c: 511: break;
 12196  001058  0012               	return	
 12197  00105A                     i2l6220:
 12198  00105A  5038               	movf	_i2c1_state,w,c
 12199                           
 12200                           ; Switch size 1, requested type "space"
 12201                           ; Number of cases is 11, Range of values is 0 to 11
 12202                           ; switch strategies available:
 12203                           ; Name         Instructions Cycles
 12204                           ; simple_byte           34    18 (average)
 12205                           ;	Chosen strategy is simple_byte
 12206  00105C  0A00               	xorlw	0	; case 0
 12207  00105E  B4D8               	btfsc	status,2,c
 12208  001060  D703               	goto	i2l60
 12209  001062  0A01               	xorlw	1	; case 1
 12210  001064  B4D8               	btfsc	status,2,c
 12211  001066  D73F               	goto	i2l65
 12212  001068  0A03               	xorlw	3	; case 2
 12213  00106A  B4D8               	btfsc	status,2,c
 12214  00106C  D776               	goto	i2l6144
 12215  00106E  0A01               	xorlw	1	; case 3
 12216  001070  B4D8               	btfsc	status,2,c
 12217  001072  D79C               	goto	i2l82
 12218  001074  0A07               	xorlw	7	; case 4
 12219  001076  B4D8               	btfsc	status,2,c
 12220  001078  D7E6               	goto	i2l6212
 12221  00107A  0A01               	xorlw	1	; case 5
 12222  00107C  B4D8               	btfsc	status,2,c
 12223  00107E  D7BC               	goto	i2l89
 12224  001080  0A03               	xorlw	3	; case 6
 12225  001082  B4D8               	btfsc	status,2,c
 12226  001084  D7C6               	goto	i2l6194
 12227  001086  0A01               	xorlw	1	; case 7
 12228  001088  B4D8               	btfsc	status,2,c
 12229  00108A  D7DD               	goto	i2l6212
 12230  00108C  0A0F               	xorlw	15	; case 8
 12231  00108E  B4D8               	btfsc	status,2,c
 12232  001090  D7C4               	goto	i2l6198
 12233  001092  0A02               	xorlw	2	; case 10
 12234  001094  B4D8               	btfsc	status,2,c
 12235  001096  D72B               	goto	i2l66
 12236  001098  0A01               	xorlw	1	; case 11
 12237  00109A  B4D8               	btfsc	status,2,c
 12238  00109C  D73F               	goto	i2l71
 12239  00109E  D7D7               	goto	i2l6214
 12240  0010A0                     __end_of_I2C1_ISR:
 12241                           	opt stack 0
 12242                           tosu	equ	0xFFF
 12243                           tosh	equ	0xFFE
 12244                           tosl	equ	0xFFD
 12245                           pclatu	equ	0xFFB
 12246                           pclath	equ	0xFFA
 12247                           tblptru	equ	0xFF8
 12248                           tblptrh	equ	0xFF7
 12249                           tblptrl	equ	0xFF6
 12250                           tablat	equ	0xFF5
 12251                           prodh	equ	0xFF4
 12252                           prodl	equ	0xFF3
 12253                           intcon	equ	0xFF2
 12254                           intcon2	equ	0xFF1
 12255                           postinc0	equ	0xFEE
 12256                           fsr0h	equ	0xFEA
 12257                           fsr0l	equ	0xFE9
 12258                           wreg	equ	0xFE8
 12259                           fsr1h	equ	0xFE2
 12260                           fsr1l	equ	0xFE1
 12261                           indf2	equ	0xFDF
 12262                           postinc2	equ	0xFDE
 12263                           postdec2	equ	0xFDD
 12264                           plusw2	equ	0xFDB
 12265                           fsr2h	equ	0xFDA
 12266                           fsr2l	equ	0xFD9
 12267                           status	equ	0xFD8
 12268                           
 12269 ;; *************** function _I2C1_Stop *****************
 12270 ;; Defined at:
 12271 ;;		line 534 in file "mcc_generated_files/i2c1.c"
 12272 ;; Parameters:    Size  Location     Type
 12273 ;;  completion_c    1    wreg     enum E7856
 12274 ;; Auto vars:     Size  Location     Type
 12275 ;;  completion_c    1    2[COMRAM] enum E7856
 12276 ;; Return value:  Size  Location     Type
 12277 ;;		None               void
 12278 ;; Registers used:
 12279 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12280 ;; Tracked objects:
 12281 ;;		On entry : 0/0
 12282 ;;		On exit  : 0/0
 12283 ;;		Unchanged: 0/0
 12284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12285 ;;      Params:         0       0       0       0       0       0       0
 12286 ;;      Locals:         1       0       0       0       0       0       0
 12287 ;;      Temps:          2       0       0       0       0       0       0
 12288 ;;      Totals:         3       0       0       0       0       0       0
 12289 ;;Total ram usage:        3 bytes
 12290 ;; Hardware stack levels used:    1
 12291 ;; This function calls:
 12292 ;;		Nothing
 12293 ;; This function is called by:
 12294 ;;		_I2C1_ISR
 12295 ;; This function uses a non-reentrant model
 12296 ;;
 12297                           
 12298                           	psect	text62
 12299  002A1A                     __ptext62:
 12300                           	opt stack 0
 12301  002A1A                     _I2C1_Stop:
 12302                           	opt stack 22
 12303                           
 12304                           ;incstack = 0
 12305                           ;I2C1_Stop@completion_code stored from wreg
 12306  002A1A  6E03               	movwf	I2C1_Stop@completion_code,c
 12307                           
 12308                           ;i2c1.c: 537: SSP1CON2bits.PEN = 1;
 12309  002A1C  84C5               	bsf	4037,2,c	;volatile
 12310                           
 12311                           ;i2c1.c: 540: if (p_i2c1_current->pTrFlag != (0))
 12312  002A1E  0100               	movlb	0	; () banked
 12313  002A20  EE20 F003          	lfsr	2,3
 12314  002A24  51CF               	movf	_p_i2c1_current& (0+255),w,b
 12315  002A26  26D9               	addwf	fsr2l,f,c
 12316  002A28  51D0               	movf	(_p_i2c1_current+1)& (0+255),w,b
 12317  002A2A  22DA               	addwfc	fsr2h,f,c
 12318  002A2C  50DE               	movf	postinc2,w,c
 12319  002A2E  10DE               	iorwf	postinc2,w,c
 12320  002A30  B4D8               	btfsc	status,2,c
 12321  002A32  D011               	goto	i2l5714
 12322                           
 12323                           ; BSR set to: 0
 12324                           ;i2c1.c: 541: {
 12325                           ;i2c1.c: 543: *(p_i2c1_current->pTrFlag) = completion_code;
 12326  002A34  0100               	movlb	0	; () banked
 12327  002A36  EE20 F003          	lfsr	2,3
 12328  002A3A  51CF               	movf	_p_i2c1_current& (0+255),w,b
 12329  002A3C  26D9               	addwf	fsr2l,f,c
 12330  002A3E  51D0               	movf	(_p_i2c1_current+1)& (0+255),w,b
 12331  002A40  22DA               	addwfc	fsr2h,f,c
 12332  002A42  CFDE F001          	movff	postinc2,??_I2C1_Stop
 12333  002A46  CFDD F002          	movff	postdec2,??_I2C1_Stop+1
 12334  002A4A  C001  FFD9         	movff	??_I2C1_Stop,fsr2l
 12335  002A4E  C002  FFDA         	movff	??_I2C1_Stop+1,fsr2h
 12336  002A52  C003  FFDF         	movff	I2C1_Stop@completion_code,indf2
 12337  002A56                     i2l5714:
 12338                           
 12339                           ; BSR set to: 0
 12340                           ;i2c1.c: 544: }
 12341                           ;i2c1.c: 547: i2c1_state = S_MASTER_IDLE;
 12342  002A56  0E00               	movlw	0
 12343  002A58  6E38               	movwf	_i2c1_state,c
 12344                           
 12345                           ; BSR set to: 0
 12346  002A5A  0012               	return		;funcret
 12347  002A5C                     __end_of_I2C1_Stop:
 12348                           	opt stack 0
 12349                           tosu	equ	0xFFF
 12350                           tosh	equ	0xFFE
 12351                           tosl	equ	0xFFD
 12352                           pclatu	equ	0xFFB
 12353                           pclath	equ	0xFFA
 12354                           tblptru	equ	0xFF8
 12355                           tblptrh	equ	0xFF7
 12356                           tblptrl	equ	0xFF6
 12357                           tablat	equ	0xFF5
 12358                           prodh	equ	0xFF4
 12359                           prodl	equ	0xFF3
 12360                           intcon	equ	0xFF2
 12361                           intcon2	equ	0xFF1
 12362                           postinc0	equ	0xFEE
 12363                           fsr0h	equ	0xFEA
 12364                           fsr0l	equ	0xFE9
 12365                           wreg	equ	0xFE8
 12366                           fsr1h	equ	0xFE2
 12367                           fsr1l	equ	0xFE1
 12368                           indf2	equ	0xFDF
 12369                           postinc2	equ	0xFDE
 12370                           postdec2	equ	0xFDD
 12371                           plusw2	equ	0xFDB
 12372                           fsr2h	equ	0xFDA
 12373                           fsr2l	equ	0xFD9
 12374                           status	equ	0xFD8
 12375                           
 12376 ;; *************** function _I2C1_FunctionComplete *****************
 12377 ;; Defined at:
 12378 ;;		line 516 in file "mcc_generated_files/i2c1.c"
 12379 ;; Parameters:    Size  Location     Type
 12380 ;;		None
 12381 ;; Auto vars:     Size  Location     Type
 12382 ;;		None
 12383 ;; Return value:  Size  Location     Type
 12384 ;;		None               void
 12385 ;; Registers used:
 12386 ;;		wreg, status,2, status,0
 12387 ;; Tracked objects:
 12388 ;;		On entry : 0/0
 12389 ;;		On exit  : 0/0
 12390 ;;		Unchanged: 0/0
 12391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12392 ;;      Params:         0       0       0       0       0       0       0
 12393 ;;      Locals:         0       0       0       0       0       0       0
 12394 ;;      Temps:          0       0       0       0       0       0       0
 12395 ;;      Totals:         0       0       0       0       0       0       0
 12396 ;;Total ram usage:        0 bytes
 12397 ;; Hardware stack levels used:    1
 12398 ;; This function calls:
 12399 ;;		Nothing
 12400 ;; This function is called by:
 12401 ;;		_I2C1_ISR
 12402 ;; This function uses a non-reentrant model
 12403 ;;
 12404                           
 12405                           	psect	text63
 12406  002D34                     __ptext63:
 12407                           	opt stack 0
 12408  002D34                     _I2C1_FunctionComplete:
 12409                           	opt stack 22
 12410                           
 12411                           ;i2c1.c: 520: p_i2c1_trb_current++;
 12412                           
 12413                           ; BSR set to: 0
 12414                           ;incstack = 0
 12415  002D34  0E05               	movlw	5
 12416  002D36  0100               	movlb	0	; () banked
 12417  002D38  27D1               	addwf	_p_i2c1_trb_current& (0+255),f,b
 12418  002D3A  0E00               	movlw	0
 12419  002D3C  23D2               	addwfc	(_p_i2c1_trb_current+1)& (0+255),f,b
 12420                           
 12421                           ; BSR set to: 0
 12422                           ;i2c1.c: 523: if(--i2c1_trb_count == 0)
 12423  002D3E  2E39               	decfsz	_i2c1_trb_count,f,c
 12424  002D40  D003               	goto	i2l5722
 12425                           
 12426                           ; BSR set to: 0
 12427                           ;i2c1.c: 524: {
 12428                           ;i2c1.c: 525: i2c1_state = S_MASTER_SEND_STOP;
 12429  002D42  0E04               	movlw	4
 12430  002D44  6E38               	movwf	_i2c1_state,c
 12431                           
 12432                           ;i2c1.c: 526: }
 12433  002D46  0012               	return	
 12434  002D48                     i2l5722:
 12435                           
 12436                           ; BSR set to: 0
 12437                           ;i2c1.c: 527: else
 12438                           ;i2c1.c: 528: {
 12439                           ;i2c1.c: 529: i2c1_state = S_MASTER_RESTART;
 12440  002D48  0E01               	movlw	1
 12441  002D4A  6E38               	movwf	_i2c1_state,c
 12442  002D4C  0012               	return	
 12443  002D4E                     __end_of_I2C1_FunctionComplete:
 12444                           	opt stack 0
 12445                           tosu	equ	0xFFF
 12446                           tosh	equ	0xFFE
 12447                           tosl	equ	0xFFD
 12448                           pclatu	equ	0xFFB
 12449                           pclath	equ	0xFFA
 12450                           tblptru	equ	0xFF8
 12451                           tblptrh	equ	0xFF7
 12452                           tblptrl	equ	0xFF6
 12453                           tablat	equ	0xFF5
 12454                           prodh	equ	0xFF4
 12455                           prodl	equ	0xFF3
 12456                           intcon	equ	0xFF2
 12457                           intcon2	equ	0xFF1
 12458                           postinc0	equ	0xFEE
 12459                           fsr0h	equ	0xFEA
 12460                           fsr0l	equ	0xFE9
 12461                           wreg	equ	0xFE8
 12462                           fsr1h	equ	0xFE2
 12463                           fsr1l	equ	0xFE1
 12464                           indf2	equ	0xFDF
 12465                           postinc2	equ	0xFDE
 12466                           postdec2	equ	0xFDD
 12467                           plusw2	equ	0xFDB
 12468                           fsr2h	equ	0xFDA
 12469                           fsr2l	equ	0xFD9
 12470                           status	equ	0xFD8
 12471                           
 12472 ;; *************** function _I2C1_BusCollisionISR *****************
 12473 ;; Defined at:
 12474 ;;		line 681 in file "mcc_generated_files/i2c1.c"
 12475 ;; Parameters:    Size  Location     Type
 12476 ;;		None
 12477 ;; Auto vars:     Size  Location     Type
 12478 ;;		None
 12479 ;; Return value:  Size  Location     Type
 12480 ;;		None               void
 12481 ;; Registers used:
 12482 ;;		None
 12483 ;; Tracked objects:
 12484 ;;		On entry : 0/0
 12485 ;;		On exit  : 0/0
 12486 ;;		Unchanged: 0/0
 12487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12488 ;;      Params:         0       0       0       0       0       0       0
 12489 ;;      Locals:         0       0       0       0       0       0       0
 12490 ;;      Temps:          0       0       0       0       0       0       0
 12491 ;;      Totals:         0       0       0       0       0       0       0
 12492 ;;Total ram usage:        0 bytes
 12493 ;; Hardware stack levels used:    1
 12494 ;; This function calls:
 12495 ;;		Nothing
 12496 ;; This function is called by:
 12497 ;;		_INTERRUPT_InterruptManager
 12498 ;; This function uses a non-reentrant model
 12499 ;;
 12500                           
 12501                           	psect	text64
 12502  002DFE                     __ptext64:
 12503                           	opt stack 0
 12504  002DFE                     _I2C1_BusCollisionISR:
 12505                           	opt stack 23
 12506                           
 12507                           ; BSR set to: 0
 12508                           ;incstack = 0
 12509  002DFE  0012               	return		;funcret
 12510  002E00                     __end_of_I2C1_BusCollisionISR:
 12511                           	opt stack 0
 12512                           tosu	equ	0xFFF
 12513                           tosh	equ	0xFFE
 12514                           tosl	equ	0xFFD
 12515                           pclatu	equ	0xFFB
 12516                           pclath	equ	0xFFA
 12517                           tblptru	equ	0xFF8
 12518                           tblptrh	equ	0xFF7
 12519                           tblptrl	equ	0xFF6
 12520                           tablat	equ	0xFF5
 12521                           prodh	equ	0xFF4
 12522                           prodl	equ	0xFF3
 12523                           intcon	equ	0xFF2
 12524                           intcon2	equ	0xFF1
 12525                           postinc0	equ	0xFEE
 12526                           fsr0h	equ	0xFEA
 12527                           fsr0l	equ	0xFE9
 12528                           wreg	equ	0xFE8
 12529                           fsr1h	equ	0xFE2
 12530                           fsr1l	equ	0xFE1
 12531                           indf2	equ	0xFDF
 12532                           postinc2	equ	0xFDE
 12533                           postdec2	equ	0xFDD
 12534                           plusw2	equ	0xFDB
 12535                           fsr2h	equ	0xFDA
 12536                           fsr2l	equ	0xFD9
 12537                           status	equ	0xFD8
 12538                           
 12539 ;; *************** function _EUSART1_Transmit_ISR *****************
 12540 ;; Defined at:
 12541 ;;		line 150 in file "UART.c"
 12542 ;; Parameters:    Size  Location     Type
 12543 ;;		None
 12544 ;; Auto vars:     Size  Location     Type
 12545 ;;		None
 12546 ;; Return value:  Size  Location     Type
 12547 ;;		None               void
 12548 ;; Registers used:
 12549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12550 ;; Tracked objects:
 12551 ;;		On entry : 0/0
 12552 ;;		On exit  : 0/0
 12553 ;;		Unchanged: 0/0
 12554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12555 ;;      Params:         0       0       0       0       0       0       0
 12556 ;;      Locals:         0       0       0       0       0       0       0
 12557 ;;      Temps:          0       0       0       0       0       0       0
 12558 ;;      Totals:         0       0       0       0       0       0       0
 12559 ;;Total ram usage:        0 bytes
 12560 ;; Hardware stack levels used:    1
 12561 ;; Hardware stack levels required when called:    2
 12562 ;; This function calls:
 12563 ;;		i2_UART_buff_get
 12564 ;;		i2_UART_buff_size
 12565 ;; This function is called by:
 12566 ;;		_INTERRUPT_InterruptManager
 12567 ;; This function uses a non-reentrant model
 12568 ;;
 12569                           
 12570                           	psect	text65
 12571  002B42                     __ptext65:
 12572                           	opt stack 0
 12573  002B42                     _EUSART1_Transmit_ISR:
 12574                           	opt stack 21
 12575                           
 12576                           ;UART.c: 152: if (UART_buff_size(&output_buffer) > 0) {
 12577                           
 12578                           ;incstack = 0
 12579  002B42  0E00               	movlw	low _output_buffer
 12580  002B44  6E01               	movwf	i2UART_buff_size@_this,c
 12581  002B46  0E05               	movlw	high _output_buffer
 12582  002B48  6E02               	movwf	i2UART_buff_size@_this+1,c
 12583  002B4A  ECC9  F016         	call	i2_UART_buff_size	;wreg free
 12584  002B4E  BE02               	btfsc	?i2_UART_buff_size+1,7,c
 12585  002B50  D00D               	goto	i2l4666
 12586  002B52  5002               	movf	?i2_UART_buff_size+1,w,c
 12587  002B54  E103               	bnz	i2u448_40
 12588  002B56  0401               	decf	?i2_UART_buff_size,w,c
 12589  002B58  A0D8               	btfss	status,0,c
 12590  002B5A  D008               	goto	i2l4666
 12591  002B5C                     i2u448_40:
 12592                           
 12593                           ;UART.c: 153: TXREG1 = UART_buff_get(&output_buffer);
 12594  002B5C  0E00               	movlw	low _output_buffer
 12595  002B5E  6E07               	movwf	i2UART_buff_get@_this,c
 12596  002B60  0E05               	movlw	high _output_buffer
 12597  002B62  6E08               	movwf	i2UART_buff_get@_this+1,c
 12598  002B64  EC0E  F012         	call	i2_UART_buff_get	;wreg free
 12599  002B68  6EAD               	movwf	4013,c	;volatile
 12600                           
 12601                           ;UART.c: 154: } else {
 12602  002B6A  0012               	return	
 12603  002B6C                     i2l4666:
 12604                           
 12605                           ;UART.c: 155: Transmit_stall = 1;
 12606  002B6C  0E01               	movlw	1
 12607  002B6E  6E44               	movwf	_Transmit_stall,c
 12608                           
 12609                           ;UART.c: 156: PIE1bits.TX1IE = 0;
 12610  002B70  989D               	bcf	3997,4,c	;volatile
 12611  002B72  0012               	return	
 12612  002B74                     __end_of_EUSART1_Transmit_ISR:
 12613                           	opt stack 0
 12614                           tosu	equ	0xFFF
 12615                           tosh	equ	0xFFE
 12616                           tosl	equ	0xFFD
 12617                           pclatu	equ	0xFFB
 12618                           pclath	equ	0xFFA
 12619                           tblptru	equ	0xFF8
 12620                           tblptrh	equ	0xFF7
 12621                           tblptrl	equ	0xFF6
 12622                           tablat	equ	0xFF5
 12623                           prodh	equ	0xFF4
 12624                           prodl	equ	0xFF3
 12625                           intcon	equ	0xFF2
 12626                           intcon2	equ	0xFF1
 12627                           postinc0	equ	0xFEE
 12628                           fsr0h	equ	0xFEA
 12629                           fsr0l	equ	0xFE9
 12630                           wreg	equ	0xFE8
 12631                           fsr1h	equ	0xFE2
 12632                           fsr1l	equ	0xFE1
 12633                           indf2	equ	0xFDF
 12634                           postinc2	equ	0xFDE
 12635                           postdec2	equ	0xFDD
 12636                           plusw2	equ	0xFDB
 12637                           fsr2h	equ	0xFDA
 12638                           fsr2l	equ	0xFD9
 12639                           status	equ	0xFD8
 12640                           
 12641 ;; *************** function i2_UART_buff_size *****************
 12642 ;; Defined at:
 12643 ;;		line 102 in file "UART.c"
 12644 ;; Parameters:    Size  Location     Type
 12645 ;;  _this           2    0[COMRAM] PTR struct UART_ring_buf
 12646 ;;		 -> output_buffer(206), input_buffer(206), 
 12647 ;; Auto vars:     Size  Location     Type
 12648 ;;		None
 12649 ;; Return value:  Size  Location     Type
 12650 ;;                  2    0[COMRAM] int 
 12651 ;; Registers used:
 12652 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12653 ;; Tracked objects:
 12654 ;;		On entry : 0/0
 12655 ;;		On exit  : 0/0
 12656 ;;		Unchanged: 0/0
 12657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12658 ;;      Params:         2       0       0       0       0       0       0
 12659 ;;      Locals:         0       0       0       0       0       0       0
 12660 ;;      Temps:          0       0       0       0       0       0       0
 12661 ;;      Totals:         2       0       0       0       0       0       0
 12662 ;;Total ram usage:        2 bytes
 12663 ;; Hardware stack levels used:    1
 12664 ;; This function calls:
 12665 ;;		Nothing
 12666 ;; This function is called by:
 12667 ;;		_EUSART1_Transmit_ISR
 12668 ;; This function uses a non-reentrant model
 12669 ;;
 12670                           
 12671                           	psect	text66
 12672  002D92                     __ptext66:
 12673                           	opt stack 0
 12674  002D92                     i2_UART_buff_size:
 12675                           	opt stack 22
 12676                           
 12677                           ;UART.c: 103: return (_this->count);
 12678                           
 12679                           ;incstack = 0
 12680  002D92  EE20 F0CC          	lfsr	2,204
 12681  002D96  5001               	movf	i2UART_buff_size@_this,w,c
 12682  002D98  26D9               	addwf	fsr2l,f,c
 12683  002D9A  5002               	movf	i2UART_buff_size@_this+1,w,c
 12684  002D9C  22DA               	addwfc	fsr2h,f,c
 12685  002D9E  CFDE F001          	movff	postinc2,?i2_UART_buff_size
 12686  002DA2  CFDD F002          	movff	postdec2,?i2_UART_buff_size+1
 12687  002DA6  0012               	return	
 12688  002DA8                     __end_ofi2_UART_buff_size:
 12689                           	opt stack 0
 12690                           tosu	equ	0xFFF
 12691                           tosh	equ	0xFFE
 12692                           tosl	equ	0xFFD
 12693                           pclatu	equ	0xFFB
 12694                           pclath	equ	0xFFA
 12695                           tblptru	equ	0xFF8
 12696                           tblptrh	equ	0xFF7
 12697                           tblptrl	equ	0xFF6
 12698                           tablat	equ	0xFF5
 12699                           prodh	equ	0xFF4
 12700                           prodl	equ	0xFF3
 12701                           intcon	equ	0xFF2
 12702                           intcon2	equ	0xFF1
 12703                           postinc0	equ	0xFEE
 12704                           fsr0h	equ	0xFEA
 12705                           fsr0l	equ	0xFE9
 12706                           wreg	equ	0xFE8
 12707                           fsr1h	equ	0xFE2
 12708                           fsr1l	equ	0xFE1
 12709                           indf2	equ	0xFDF
 12710                           postinc2	equ	0xFDE
 12711                           postdec2	equ	0xFDD
 12712                           plusw2	equ	0xFDB
 12713                           fsr2h	equ	0xFDA
 12714                           fsr2l	equ	0xFD9
 12715                           status	equ	0xFD8
 12716                           
 12717 ;; *************** function i2_UART_buff_get *****************
 12718 ;; Defined at:
 12719 ;;		line 81 in file "UART.c"
 12720 ;; Parameters:    Size  Location     Type
 12721 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 12722 ;;		 -> output_buffer(206), input_buffer(206), 
 12723 ;; Auto vars:     Size  Location     Type
 12724 ;;  UART_buff_ge    1   10[COMRAM] unsigned char 
 12725 ;; Return value:  Size  Location     Type
 12726 ;;                  1    wreg      unsigned char 
 12727 ;; Registers used:
 12728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12729 ;; Tracked objects:
 12730 ;;		On entry : 0/0
 12731 ;;		On exit  : 0/0
 12732 ;;		Unchanged: 0/0
 12733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12734 ;;      Params:         2       0       0       0       0       0       0
 12735 ;;      Locals:         1       0       0       0       0       0       0
 12736 ;;      Temps:          2       0       0       0       0       0       0
 12737 ;;      Totals:         5       0       0       0       0       0       0
 12738 ;;Total ram usage:        5 bytes
 12739 ;; Hardware stack levels used:    1
 12740 ;; Hardware stack levels required when called:    1
 12741 ;; This function calls:
 12742 ;;		i2_UART_buff_modulo_inc
 12743 ;; This function is called by:
 12744 ;;		_EUSART1_Transmit_ISR
 12745 ;; This function uses a non-reentrant model
 12746 ;;
 12747                           
 12748                           	psect	text67
 12749  00241C                     __ptext67:
 12750                           	opt stack 0
 12751  00241C                     i2_UART_buff_get:
 12752                           	opt stack 21
 12753                           
 12754                           ;UART.c: 82: unsigned char c;
 12755                           ;UART.c: 83: if (_this->count > 0) {
 12756                           
 12757                           ;incstack = 0
 12758  00241C  EE20 F0CC          	lfsr	2,204
 12759  002420  5007               	movf	i2UART_buff_get@_this,w,c
 12760  002422  26D9               	addwf	fsr2l,f,c
 12761  002424  5008               	movf	i2UART_buff_get@_this+1,w,c
 12762  002426  22DA               	addwfc	fsr2h,f,c
 12763  002428  0E01               	movlw	1
 12764  00242A  BEDB               	btfsc	plusw2,7,c
 12765  00242C  D03C               	goto	i2l4490
 12766  00242E  0E01               	movlw	1
 12767  002430  50DB               	movf	plusw2,w,c
 12768  002432  E103               	bnz	i2u428_40
 12769  002434  04DE               	decf	postinc2,w,c
 12770  002436  A0D8               	btfss	status,0,c
 12771  002438  D036               	goto	i2l4490
 12772  00243A                     i2u428_40:
 12773                           
 12774                           ;UART.c: 84: c = _this->buf[_this->tail];
 12775  00243A  EE20 F0CA          	lfsr	2,202
 12776  00243E  5007               	movf	i2UART_buff_get@_this,w,c
 12777  002440  26D9               	addwf	fsr2l,f,c
 12778  002442  5008               	movf	i2UART_buff_get@_this+1,w,c
 12779  002444  22DA               	addwfc	fsr2h,f,c
 12780  002446  CFDE F009          	movff	postinc2,??i2_UART_buff_get
 12781  00244A  CFDD F00A          	movff	postdec2,??i2_UART_buff_get+1
 12782  00244E  5009               	movf	??i2_UART_buff_get,w,c
 12783  002450  2407               	addwf	i2UART_buff_get@_this,w,c
 12784  002452  6ED9               	movwf	fsr2l,c
 12785  002454  500A               	movf	??i2_UART_buff_get+1,w,c
 12786  002456  2008               	addwfc	i2UART_buff_get@_this+1,w,c
 12787  002458  6EDA               	movwf	fsr2h,c
 12788  00245A  50DF               	movf	indf2,w,c
 12789  00245C  6E0B               	movwf	i2UART_buff_get@c,c
 12790                           
 12791                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 12792  00245E  EE20 F0CA          	lfsr	2,202
 12793  002462  5007               	movf	i2UART_buff_get@_this,w,c
 12794  002464  26D9               	addwf	fsr2l,f,c
 12795  002466  5008               	movf	i2UART_buff_get@_this+1,w,c
 12796  002468  22DA               	addwfc	fsr2h,f,c
 12797  00246A  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 12798  00246E  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 12799  002472  0E00               	movlw	0
 12800  002474  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 12801  002476  0EC8               	movlw	200
 12802  002478  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 12803  00247A  EC11  F016         	call	i2_UART_buff_modulo_inc	;wreg free
 12804  00247E  EE20 F0CA          	lfsr	2,202
 12805  002482  5007               	movf	i2UART_buff_get@_this,w,c
 12806  002484  26D9               	addwf	fsr2l,f,c
 12807  002486  5008               	movf	i2UART_buff_get@_this+1,w,c
 12808  002488  22DA               	addwfc	fsr2h,f,c
 12809  00248A  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 12810  00248E  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 12811                           
 12812                           ;UART.c: 86: --_this->count;
 12813  002492  EE20 F0CC          	lfsr	2,204
 12814  002496  5007               	movf	i2UART_buff_get@_this,w,c
 12815  002498  26D9               	addwf	fsr2l,f,c
 12816  00249A  5008               	movf	i2UART_buff_get@_this+1,w,c
 12817  00249C  22DA               	addwfc	fsr2h,f,c
 12818  00249E  06DE               	decf	postinc2,f,c
 12819  0024A0  0E00               	movlw	0
 12820  0024A2  5ADD               	subwfb	postdec2,f,c
 12821                           
 12822                           ;UART.c: 87: } else {
 12823  0024A4  D002               	goto	i2l979
 12824  0024A6                     i2l4490:
 12825                           
 12826                           ;UART.c: 88: c = 0;
 12827  0024A6  0E00               	movlw	0
 12828  0024A8  6E0B               	movwf	i2UART_buff_get@c,c
 12829  0024AA                     i2l979:
 12830                           
 12831                           ;UART.c: 89: }
 12832                           ;UART.c: 90: return (c);
 12833  0024AA  500B               	movf	i2UART_buff_get@c,w,c
 12834  0024AC  0012               	return	
 12835  0024AE                     __end_ofi2_UART_buff_get:
 12836                           	opt stack 0
 12837                           tosu	equ	0xFFF
 12838                           tosh	equ	0xFFE
 12839                           tosl	equ	0xFFD
 12840                           pclatu	equ	0xFFB
 12841                           pclath	equ	0xFFA
 12842                           tblptru	equ	0xFF8
 12843                           tblptrh	equ	0xFF7
 12844                           tblptrl	equ	0xFF6
 12845                           tablat	equ	0xFF5
 12846                           prodh	equ	0xFF4
 12847                           prodl	equ	0xFF3
 12848                           intcon	equ	0xFF2
 12849                           intcon2	equ	0xFF1
 12850                           postinc0	equ	0xFEE
 12851                           fsr0h	equ	0xFEA
 12852                           fsr0l	equ	0xFE9
 12853                           wreg	equ	0xFE8
 12854                           fsr1h	equ	0xFE2
 12855                           fsr1l	equ	0xFE1
 12856                           indf2	equ	0xFDF
 12857                           postinc2	equ	0xFDE
 12858                           postdec2	equ	0xFDD
 12859                           plusw2	equ	0xFDB
 12860                           fsr2h	equ	0xFDA
 12861                           fsr2l	equ	0xFD9
 12862                           status	equ	0xFD8
 12863                           
 12864 ;; *************** function _EUSART1_Receive_ISR *****************
 12865 ;; Defined at:
 12866 ;;		line 139 in file "UART.c"
 12867 ;; Parameters:    Size  Location     Type
 12868 ;;		None
 12869 ;; Auto vars:     Size  Location     Type
 12870 ;;  data            1   11[COMRAM] unsigned char 
 12871 ;; Return value:  Size  Location     Type
 12872 ;;		None               void
 12873 ;; Registers used:
 12874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12875 ;; Tracked objects:
 12876 ;;		On entry : 0/0
 12877 ;;		On exit  : 0/0
 12878 ;;		Unchanged: 0/0
 12879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12880 ;;      Params:         0       0       0       0       0       0       0
 12881 ;;      Locals:         1       0       0       0       0       0       0
 12882 ;;      Temps:          0       0       0       0       0       0       0
 12883 ;;      Totals:         1       0       0       0       0       0       0
 12884 ;;Total ram usage:        1 bytes
 12885 ;; Hardware stack levels used:    1
 12886 ;; Hardware stack levels required when called:    2
 12887 ;; This function calls:
 12888 ;;		i2_UART_buff_put
 12889 ;; This function is called by:
 12890 ;;		_INTERRUPT_InterruptManager
 12891 ;; This function uses a non-reentrant model
 12892 ;;
 12893                           
 12894                           	psect	text68
 12895  002D16                     __ptext68:
 12896                           	opt stack 0
 12897  002D16                     _EUSART1_Receive_ISR:
 12898                           	opt stack 21
 12899                           
 12900                           ;UART.c: 140: if (1 == RC1STAbits.OERR) {
 12901                           
 12902                           ;incstack = 0
 12903  002D16  A2AB               	btfss	4011,1,c	;volatile
 12904  002D18  D002               	goto	i2l1010
 12905                           
 12906                           ;UART.c: 143: RC1STAbits.CREN = 0;
 12907  002D1A  98AB               	bcf	4011,4,c	;volatile
 12908                           
 12909                           ;UART.c: 144: RC1STAbits.CREN = 1;
 12910  002D1C  88AB               	bsf	4011,4,c	;volatile
 12911  002D1E                     i2l1010:
 12912                           
 12913                           ;UART.c: 145: }
 12914                           ;UART.c: 146: unsigned char data = RCREG1;
 12915  002D1E  CFAE F00C          	movff	4014,EUSART1_Receive_ISR@data	;volatile
 12916                           
 12917                           ;UART.c: 147: UART_buff_put(&input_buffer, data);
 12918  002D22  0E00               	movlw	low _input_buffer
 12919  002D24  6E07               	movwf	i2UART_buff_put@_this,c
 12920  002D26  0E04               	movlw	high _input_buffer
 12921  002D28  6E08               	movwf	i2UART_buff_put@_this+1,c
 12922  002D2A  C00C  F009         	movff	EUSART1_Receive_ISR@data,i2UART_buff_put@c
 12923  002D2E  ECA5  F00C         	call	i2_UART_buff_put	;wreg free
 12924  002D32  0012               	return		;funcret
 12925  002D34                     __end_of_EUSART1_Receive_ISR:
 12926                           	opt stack 0
 12927                           tosu	equ	0xFFF
 12928                           tosh	equ	0xFFE
 12929                           tosl	equ	0xFFD
 12930                           pclatu	equ	0xFFB
 12931                           pclath	equ	0xFFA
 12932                           tblptru	equ	0xFF8
 12933                           tblptrh	equ	0xFF7
 12934                           tblptrl	equ	0xFF6
 12935                           tablat	equ	0xFF5
 12936                           prodh	equ	0xFF4
 12937                           prodl	equ	0xFF3
 12938                           intcon	equ	0xFF2
 12939                           intcon2	equ	0xFF1
 12940                           postinc0	equ	0xFEE
 12941                           fsr0h	equ	0xFEA
 12942                           fsr0l	equ	0xFE9
 12943                           wreg	equ	0xFE8
 12944                           fsr1h	equ	0xFE2
 12945                           fsr1l	equ	0xFE1
 12946                           indf2	equ	0xFDF
 12947                           postinc2	equ	0xFDE
 12948                           postdec2	equ	0xFDD
 12949                           plusw2	equ	0xFDB
 12950                           fsr2h	equ	0xFDA
 12951                           fsr2l	equ	0xFD9
 12952                           status	equ	0xFD8
 12953                           
 12954 ;; *************** function i2_UART_buff_put *****************
 12955 ;; Defined at:
 12956 ;;		line 68 in file "UART.c"
 12957 ;; Parameters:    Size  Location     Type
 12958 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 12959 ;;		 -> output_buffer(206), input_buffer(206), 
 12960 ;;  c               1    8[COMRAM] const unsigned char 
 12961 ;; Auto vars:     Size  Location     Type
 12962 ;;		None
 12963 ;; Return value:  Size  Location     Type
 12964 ;;		None               void
 12965 ;; Registers used:
 12966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12967 ;; Tracked objects:
 12968 ;;		On entry : 0/0
 12969 ;;		On exit  : 0/0
 12970 ;;		Unchanged: 0/0
 12971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12972 ;;      Params:         3       0       0       0       0       0       0
 12973 ;;      Locals:         0       0       0       0       0       0       0
 12974 ;;      Temps:          2       0       0       0       0       0       0
 12975 ;;      Totals:         5       0       0       0       0       0       0
 12976 ;;Total ram usage:        5 bytes
 12977 ;; Hardware stack levels used:    1
 12978 ;; Hardware stack levels required when called:    1
 12979 ;; This function calls:
 12980 ;;		i2_UART_buff_modulo_inc
 12981 ;; This function is called by:
 12982 ;;		_EUSART1_Receive_ISR
 12983 ;; This function uses a non-reentrant model
 12984 ;;
 12985                           
 12986                           	psect	text69
 12987  00194A                     __ptext69:
 12988                           	opt stack 0
 12989  00194A                     i2_UART_buff_put:
 12990                           	opt stack 21
 12991                           
 12992                           ;UART.c: 69: if (_this->count < 200) {
 12993                           
 12994                           ;incstack = 0
 12995  00194A  EE20 F0CC          	lfsr	2,204
 12996  00194E  5007               	movf	i2UART_buff_put@_this,w,c
 12997  001950  26D9               	addwf	fsr2l,f,c
 12998  001952  5008               	movf	i2UART_buff_put@_this+1,w,c
 12999  001954  22DA               	addwfc	fsr2h,f,c
 13000  001956  0E01               	movlw	1
 13001  001958  BEDB               	btfsc	plusw2,7,c
 13002  00195A  D007               	goto	i2l4470
 13003  00195C  0E01               	movlw	1
 13004  00195E  50DB               	movf	plusw2,w,c
 13005  001960  E13A               	bnz	i2l4476
 13006  001962  0EC8               	movlw	200
 13007  001964  5CDE               	subwf	postinc2,w,c
 13008  001966  B0D8               	btfsc	status,0,c
 13009  001968  D036               	goto	i2l4476
 13010  00196A                     i2l4470:
 13011                           
 13012                           ;UART.c: 70: _this->buf[_this->head] = c;
 13013  00196A  EE20 F0C8          	lfsr	2,200
 13014  00196E  5007               	movf	i2UART_buff_put@_this,w,c
 13015  001970  26D9               	addwf	fsr2l,f,c
 13016  001972  5008               	movf	i2UART_buff_put@_this+1,w,c
 13017  001974  22DA               	addwfc	fsr2h,f,c
 13018  001976  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 13019  00197A  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 13020  00197E  500A               	movf	??i2_UART_buff_put,w,c
 13021  001980  2407               	addwf	i2UART_buff_put@_this,w,c
 13022  001982  6ED9               	movwf	fsr2l,c
 13023  001984  500B               	movf	??i2_UART_buff_put+1,w,c
 13024  001986  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 13025  001988  6EDA               	movwf	fsr2h,c
 13026  00198A  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 13027                           
 13028                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
 13029  00198E  EE20 F0C8          	lfsr	2,200
 13030  001992  5007               	movf	i2UART_buff_put@_this,w,c
 13031  001994  26D9               	addwf	fsr2l,f,c
 13032  001996  5008               	movf	i2UART_buff_put@_this+1,w,c
 13033  001998  22DA               	addwfc	fsr2h,f,c
 13034  00199A  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 13035  00199E  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 13036  0019A2  0E00               	movlw	0
 13037  0019A4  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 13038  0019A6  0EC8               	movlw	200
 13039  0019A8  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 13040  0019AA  EC11  F016         	call	i2_UART_buff_modulo_inc	;wreg free
 13041  0019AE  EE20 F0C8          	lfsr	2,200
 13042  0019B2  5007               	movf	i2UART_buff_put@_this,w,c
 13043  0019B4  26D9               	addwf	fsr2l,f,c
 13044  0019B6  5008               	movf	i2UART_buff_put@_this+1,w,c
 13045  0019B8  22DA               	addwfc	fsr2h,f,c
 13046  0019BA  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 13047  0019BE  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 13048                           
 13049                           ;UART.c: 72: ++_this->count;
 13050  0019C2  EE20 F0CC          	lfsr	2,204
 13051  0019C6  5007               	movf	i2UART_buff_put@_this,w,c
 13052  0019C8  26D9               	addwf	fsr2l,f,c
 13053  0019CA  5008               	movf	i2UART_buff_put@_this+1,w,c
 13054  0019CC  22DA               	addwfc	fsr2h,f,c
 13055  0019CE  2ADE               	incf	postinc2,f,c
 13056  0019D0  0E00               	movlw	0
 13057  0019D2  22DD               	addwfc	postdec2,f,c
 13058                           
 13059                           ;UART.c: 73: } else {
 13060  0019D4  0012               	return	
 13061  0019D6                     i2l4476:
 13062                           
 13063                           ;UART.c: 74: _this->buf[_this->head] = c;
 13064  0019D6  EE20 F0C8          	lfsr	2,200
 13065  0019DA  5007               	movf	i2UART_buff_put@_this,w,c
 13066  0019DC  26D9               	addwf	fsr2l,f,c
 13067  0019DE  5008               	movf	i2UART_buff_put@_this+1,w,c
 13068  0019E0  22DA               	addwfc	fsr2h,f,c
 13069  0019E2  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 13070  0019E6  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 13071  0019EA  500A               	movf	??i2_UART_buff_put,w,c
 13072  0019EC  2407               	addwf	i2UART_buff_put@_this,w,c
 13073  0019EE  6ED9               	movwf	fsr2l,c
 13074  0019F0  500B               	movf	??i2_UART_buff_put+1,w,c
 13075  0019F2  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 13076  0019F4  6EDA               	movwf	fsr2h,c
 13077  0019F6  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 13078                           
 13079                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
 13080  0019FA  EE20 F0C8          	lfsr	2,200
 13081  0019FE  5007               	movf	i2UART_buff_put@_this,w,c
 13082  001A00  26D9               	addwf	fsr2l,f,c
 13083  001A02  5008               	movf	i2UART_buff_put@_this+1,w,c
 13084  001A04  22DA               	addwfc	fsr2h,f,c
 13085  001A06  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 13086  001A0A  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 13087  001A0E  0E00               	movlw	0
 13088  001A10  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 13089  001A12  0EC8               	movlw	200
 13090  001A14  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 13091  001A16  EC11  F016         	call	i2_UART_buff_modulo_inc	;wreg free
 13092  001A1A  EE20 F0C8          	lfsr	2,200
 13093  001A1E  5007               	movf	i2UART_buff_put@_this,w,c
 13094  001A20  26D9               	addwf	fsr2l,f,c
 13095  001A22  5008               	movf	i2UART_buff_put@_this+1,w,c
 13096  001A24  22DA               	addwfc	fsr2h,f,c
 13097  001A26  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 13098  001A2A  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 13099                           
 13100                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 13101  001A2E  EE20 F0CA          	lfsr	2,202
 13102  001A32  5007               	movf	i2UART_buff_put@_this,w,c
 13103  001A34  26D9               	addwf	fsr2l,f,c
 13104  001A36  5008               	movf	i2UART_buff_put@_this+1,w,c
 13105  001A38  22DA               	addwfc	fsr2h,f,c
 13106  001A3A  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 13107  001A3E  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 13108  001A42  0E00               	movlw	0
 13109  001A44  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 13110  001A46  0EC8               	movlw	200
 13111  001A48  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 13112  001A4A  EC11  F016         	call	i2_UART_buff_modulo_inc	;wreg free
 13113  001A4E  EE20 F0CA          	lfsr	2,202
 13114  001A52  5007               	movf	i2UART_buff_put@_this,w,c
 13115  001A54  26D9               	addwf	fsr2l,f,c
 13116  001A56  5008               	movf	i2UART_buff_put@_this+1,w,c
 13117  001A58  22DA               	addwfc	fsr2h,f,c
 13118  001A5A  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 13119  001A5E  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 13120  001A62  0012               	return	
 13121  001A64                     __end_ofi2_UART_buff_put:
 13122                           	opt stack 0
 13123                           tosu	equ	0xFFF
 13124                           tosh	equ	0xFFE
 13125                           tosl	equ	0xFFD
 13126                           pclatu	equ	0xFFB
 13127                           pclath	equ	0xFFA
 13128                           tblptru	equ	0xFF8
 13129                           tblptrh	equ	0xFF7
 13130                           tblptrl	equ	0xFF6
 13131                           tablat	equ	0xFF5
 13132                           prodh	equ	0xFF4
 13133                           prodl	equ	0xFF3
 13134                           intcon	equ	0xFF2
 13135                           intcon2	equ	0xFF1
 13136                           postinc0	equ	0xFEE
 13137                           fsr0h	equ	0xFEA
 13138                           fsr0l	equ	0xFE9
 13139                           wreg	equ	0xFE8
 13140                           fsr1h	equ	0xFE2
 13141                           fsr1l	equ	0xFE1
 13142                           indf2	equ	0xFDF
 13143                           postinc2	equ	0xFDE
 13144                           postdec2	equ	0xFDD
 13145                           plusw2	equ	0xFDB
 13146                           fsr2h	equ	0xFDA
 13147                           fsr2l	equ	0xFD9
 13148                           status	equ	0xFD8
 13149                           
 13150 ;; *************** function i2_UART_buff_modulo_inc *****************
 13151 ;; Defined at:
 13152 ;;		line 106 in file "UART.c"
 13153 ;; Parameters:    Size  Location     Type
 13154 ;;  value           2    0[COMRAM] const unsigned int 
 13155 ;;  modulus         2    2[COMRAM] const unsigned int 
 13156 ;; Auto vars:     Size  Location     Type
 13157 ;;  UART_buff_mo    2    4[COMRAM] unsigned int 
 13158 ;; Return value:  Size  Location     Type
 13159 ;;                  2    0[COMRAM] unsigned int 
 13160 ;; Registers used:
 13161 ;;		wreg, status,2, status,0
 13162 ;; Tracked objects:
 13163 ;;		On entry : 0/0
 13164 ;;		On exit  : 0/0
 13165 ;;		Unchanged: 0/0
 13166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13167 ;;      Params:         4       0       0       0       0       0       0
 13168 ;;      Locals:         2       0       0       0       0       0       0
 13169 ;;      Temps:          0       0       0       0       0       0       0
 13170 ;;      Totals:         6       0       0       0       0       0       0
 13171 ;;Total ram usage:        6 bytes
 13172 ;; Hardware stack levels used:    1
 13173 ;; This function calls:
 13174 ;;		Nothing
 13175 ;; This function is called by:
 13176 ;;		i2_UART_buff_put
 13177 ;;		i2_UART_buff_get
 13178 ;; This function uses a non-reentrant model
 13179 ;;
 13180                           
 13181                           	psect	text70
 13182  002C22                     __ptext70:
 13183                           	opt stack 0
 13184  002C22                     i2_UART_buff_modulo_inc:
 13185                           	opt stack 21
 13186                           
 13187                           ;UART.c: 107: unsigned int my_value = value + 1;
 13188                           
 13189                           ;incstack = 0
 13190  002C22  0E01               	movlw	1
 13191  002C24  2401               	addwf	i2UART_buff_modulo_inc@value,w,c
 13192  002C26  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 13193  002C28  0E00               	movlw	0
 13194  002C2A  2002               	addwfc	i2UART_buff_modulo_inc@value+1,w,c
 13195  002C2C  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 13196                           
 13197                           ;UART.c: 108: if (my_value >= modulus) {
 13198  002C2E  5003               	movf	i2UART_buff_modulo_inc@modulus,w,c
 13199  002C30  5C05               	subwf	i2UART_buff_modulo_inc@my_value,w,c
 13200  002C32  5004               	movf	i2UART_buff_modulo_inc@modulus+1,w,c
 13201  002C34  5806               	subwfb	i2UART_buff_modulo_inc@my_value+1,w,c
 13202  002C36  A0D8               	btfss	status,0,c
 13203  002C38  D004               	goto	i2l4038
 13204                           
 13205                           ;UART.c: 109: my_value = 0;
 13206  002C3A  0E00               	movlw	0
 13207  002C3C  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 13208  002C3E  0E00               	movlw	0
 13209  002C40  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 13210  002C42                     i2l4038:
 13211                           
 13212                           ;UART.c: 110: }
 13213                           ;UART.c: 111: return (my_value);
 13214  002C42  C005  F001         	movff	i2UART_buff_modulo_inc@my_value,?i2_UART_buff_modulo_inc
 13215  002C46  C006  F002         	movff	i2UART_buff_modulo_inc@my_value+1,?i2_UART_buff_modulo_inc+1
 13216  002C4A  0012               	return	
 13217  002C4C                     __end_ofi2_UART_buff_modulo_inc:
 13218                           	opt stack 0
 13219                           tosu	equ	0xFFF
 13220                           tosh	equ	0xFFE
 13221                           tosl	equ	0xFFD
 13222                           pclatu	equ	0xFFB
 13223                           pclath	equ	0xFFA
 13224                           tblptru	equ	0xFF8
 13225                           tblptrh	equ	0xFF7
 13226                           tblptrl	equ	0xFF6
 13227                           tablat	equ	0xFF5
 13228                           prodh	equ	0xFF4
 13229                           prodl	equ	0xFF3
 13230                           intcon	equ	0xFF2
 13231                           intcon2	equ	0xFF1
 13232                           postinc0	equ	0xFEE
 13233                           fsr0h	equ	0xFEA
 13234                           fsr0l	equ	0xFE9
 13235                           wreg	equ	0xFE8
 13236                           fsr1h	equ	0xFE2
 13237                           fsr1l	equ	0xFE1
 13238                           indf2	equ	0xFDF
 13239                           postinc2	equ	0xFDE
 13240                           postdec2	equ	0xFDD
 13241                           plusw2	equ	0xFDB
 13242                           fsr2h	equ	0xFDA
 13243                           fsr2l	equ	0xFD9
 13244                           status	equ	0xFD8
 13245                           
 13246 ;; *************** function _ADC_ISR *****************
 13247 ;; Defined at:
 13248 ;;		line 128 in file "mcc_generated_files/adc.c"
 13249 ;; Parameters:    Size  Location     Type
 13250 ;;		None
 13251 ;; Auto vars:     Size  Location     Type
 13252 ;;		None
 13253 ;; Return value:  Size  Location     Type
 13254 ;;		None               void
 13255 ;; Registers used:
 13256 ;;		None
 13257 ;; Tracked objects:
 13258 ;;		On entry : 0/0
 13259 ;;		On exit  : 0/0
 13260 ;;		Unchanged: 0/0
 13261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13262 ;;      Params:         0       0       0       0       0       0       0
 13263 ;;      Locals:         0       0       0       0       0       0       0
 13264 ;;      Temps:          0       0       0       0       0       0       0
 13265 ;;      Totals:         0       0       0       0       0       0       0
 13266 ;;Total ram usage:        0 bytes
 13267 ;; Hardware stack levels used:    1
 13268 ;; This function calls:
 13269 ;;		Nothing
 13270 ;; This function is called by:
 13271 ;;		_INTERRUPT_InterruptManager
 13272 ;; This function uses a non-reentrant model
 13273 ;;
 13274                           
 13275                           	psect	text71
 13276  002DF8                     __ptext71:
 13277                           	opt stack 0
 13278  002DF8                     _ADC_ISR:
 13279                           	opt stack 23
 13280                           
 13281                           ;adc.c: 131: PIR1bits.ADIF = 0;
 13282                           
 13283                           ;incstack = 0
 13284  002DF8  9C9E               	bcf	3998,6,c	;volatile
 13285  002DFA  0012               	return		;funcret
 13286  002DFC                     __end_of_ADC_ISR:
 13287                           	opt stack 0
 13288  0000                     tosu	equ	0xFFF
 13289                           tosh	equ	0xFFE
 13290                           tosl	equ	0xFFD
 13291                           pclatu	equ	0xFFB
 13292                           pclath	equ	0xFFA
 13293                           tblptru	equ	0xFF8
 13294                           tblptrh	equ	0xFF7
 13295                           tblptrl	equ	0xFF6
 13296                           tablat	equ	0xFF5
 13297                           prodh	equ	0xFF4
 13298                           prodl	equ	0xFF3
 13299                           intcon	equ	0xFF2
 13300                           intcon2	equ	0xFF1
 13301                           postinc0	equ	0xFEE
 13302                           fsr0h	equ	0xFEA
 13303                           fsr0l	equ	0xFE9
 13304                           wreg	equ	0xFE8
 13305                           fsr1h	equ	0xFE2
 13306                           fsr1l	equ	0xFE1
 13307                           indf2	equ	0xFDF
 13308                           postinc2	equ	0xFDE
 13309                           postdec2	equ	0xFDD
 13310                           plusw2	equ	0xFDB
 13311                           fsr2h	equ	0xFDA
 13312                           fsr2l	equ	0xFD9
 13313                           status	equ	0xFD8
 13314                           tosu	equ	0xFFF
 13315                           tosh	equ	0xFFE
 13316                           tosl	equ	0xFFD
 13317                           pclatu	equ	0xFFB
 13318                           pclath	equ	0xFFA
 13319                           tblptru	equ	0xFF8
 13320                           tblptrh	equ	0xFF7
 13321                           tblptrl	equ	0xFF6
 13322                           tablat	equ	0xFF5
 13323                           prodh	equ	0xFF4
 13324                           prodl	equ	0xFF3
 13325                           intcon	equ	0xFF2
 13326                           intcon2	equ	0xFF1
 13327                           postinc0	equ	0xFEE
 13328                           fsr0h	equ	0xFEA
 13329                           fsr0l	equ	0xFE9
 13330                           wreg	equ	0xFE8
 13331                           fsr1h	equ	0xFE2
 13332                           fsr1l	equ	0xFE1
 13333                           indf2	equ	0xFDF
 13334                           postinc2	equ	0xFDE
 13335                           postdec2	equ	0xFDD
 13336                           plusw2	equ	0xFDB
 13337                           fsr2h	equ	0xFDA
 13338                           fsr2l	equ	0xFD9
 13339                           status	equ	0xFD8
 13340                           
 13341                           	psect	text72
 13342  000000                     __ptext72:
 13343                           	opt stack 0
 13344                           tosu	equ	0xFFF
 13345                           tosh	equ	0xFFE
 13346                           tosl	equ	0xFFD
 13347                           pclatu	equ	0xFFB
 13348                           pclath	equ	0xFFA
 13349                           tblptru	equ	0xFF8
 13350                           tblptrh	equ	0xFF7
 13351                           tblptrl	equ	0xFF6
 13352                           tablat	equ	0xFF5
 13353                           prodh	equ	0xFF4
 13354                           prodl	equ	0xFF3
 13355                           intcon	equ	0xFF2
 13356                           intcon2	equ	0xFF1
 13357                           postinc0	equ	0xFEE
 13358                           fsr0h	equ	0xFEA
 13359                           fsr0l	equ	0xFE9
 13360                           wreg	equ	0xFE8
 13361                           fsr1h	equ	0xFE2
 13362                           fsr1l	equ	0xFE1
 13363                           indf2	equ	0xFDF
 13364                           postinc2	equ	0xFDE
 13365                           postdec2	equ	0xFDD
 13366                           plusw2	equ	0xFDB
 13367                           fsr2h	equ	0xFDA
 13368                           fsr2l	equ	0xFD9
 13369                           status	equ	0xFD8
 13370                           
 13371                           	psect	rparam
 13372  0000                     tosu	equ	0xFFF
 13373                           tosh	equ	0xFFE
 13374                           tosl	equ	0xFFD
 13375                           pclatu	equ	0xFFB
 13376                           pclath	equ	0xFFA
 13377                           tblptru	equ	0xFF8
 13378                           tblptrh	equ	0xFF7
 13379                           tblptrl	equ	0xFF6
 13380                           tablat	equ	0xFF5
 13381                           prodh	equ	0xFF4
 13382                           prodl	equ	0xFF3
 13383                           intcon	equ	0xFF2
 13384                           intcon2	equ	0xFF1
 13385                           postinc0	equ	0xFEE
 13386                           fsr0h	equ	0xFEA
 13387                           fsr0l	equ	0xFE9
 13388                           wreg	equ	0xFE8
 13389                           fsr1h	equ	0xFE2
 13390                           fsr1l	equ	0xFE1
 13391                           indf2	equ	0xFDF
 13392                           postinc2	equ	0xFDE
 13393                           postdec2	equ	0xFDD
 13394                           plusw2	equ	0xFDB
 13395                           fsr2h	equ	0xFDA
 13396                           fsr2l	equ	0xFD9
 13397                           status	equ	0xFD8
 13398                           
 13399                           	psect	temp
 13400  000045                     btemp:
 13401                           	opt stack 0
 13402  000045                     	ds	1
 13403  0000                     int$flags	set	btemp
 13404                           tosu	equ	0xFFF
 13405                           tosh	equ	0xFFE
 13406                           tosl	equ	0xFFD
 13407                           pclatu	equ	0xFFB
 13408                           pclath	equ	0xFFA
 13409                           tblptru	equ	0xFF8
 13410                           tblptrh	equ	0xFF7
 13411                           tblptrl	equ	0xFF6
 13412                           tablat	equ	0xFF5
 13413                           prodh	equ	0xFF4
 13414                           prodl	equ	0xFF3
 13415                           intcon	equ	0xFF2
 13416                           intcon2	equ	0xFF1
 13417                           postinc0	equ	0xFEE
 13418                           fsr0h	equ	0xFEA
 13419                           fsr0l	equ	0xFE9
 13420                           wreg	equ	0xFE8
 13421                           fsr1h	equ	0xFE2
 13422                           fsr1l	equ	0xFE1
 13423                           indf2	equ	0xFDF
 13424                           postinc2	equ	0xFDE
 13425                           postdec2	equ	0xFDD
 13426                           plusw2	equ	0xFDB
 13427                           fsr2h	equ	0xFDA
 13428                           fsr2l	equ	0xFD9
 13429                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         1039
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      68
    BANK0           160     18     160
    BANK1           256     26      83
    BANK2           256      0     206
    BANK3           256      0     200
    BANK4           256      0     206
    BANK5           256      0     206

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_tr_queue.pTrFlag	PTR enum E7856 size(2) Largest target is 0
		 -> LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    memset@p1	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    memset@p	PTR unsigned char  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    UART_buff_peek@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> input_buffer(BANK4[206]), 

    UART_buff_size@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_get@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_put@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_init@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    crcBufS_get@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    crcBufS_status_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    crcBufS_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    sp__memset	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    FastTransfer_buffer_flush@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), 

    FastTransfer_buffer_put@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), 

    CRC8@data	PTR const unsigned char  size(2) Largest target is 206
		 -> CRCcheck@arrayHolder(BANK0[3]), receiveData@holder_2278(BANK1[3]), receiveData@holder(BANK1[3]), rx_buffer(BANK3[200]), 
		 -> ring_buffer(BANK2[206]), NULL(NULL[0]), 

    sendStructAddress	PTR unsigned char  size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), NULL(NULL[0]), 

    begin@stufftoreceive	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_get(), 

    serial_read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_get(), 

    begin@stuffpeek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_peek(), 

    serial_peek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_peek(), 

    begin@stuffavailable	PTR FTN()int  size(2) Largest target is 2
		 -> Receive_available(), 

    serial_available	PTR FTN()int  size(2) Largest target is 2
		 -> Absolute function(), Receive_available(), 

    begin@stufftosend	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Send_put(), 

    serial_write	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), Send_put(), 

    begin@ptr	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK1[40]), 

    receiveArrayAddress	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK1[40]), NULL(NULL[0]), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E7856 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E7856 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    F7968.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWrite@pflag	PTR enum E7856 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    F7963.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDblinkRate@b(BANK0[2]), 
		 -> LEDBsetBrightness@writeBuffer(BANK0[2]), LEDBsetBrightness@b(BANK0[2]), I2C1_ISR@i2c_address(COMRAM[2]), NULL(NULL[0]), 

    S21$pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E7856 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    S33$pTrFlag	PTR enum E7856 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E7856 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    S33$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), NULL(NULL[0]), 

    S44$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    S44$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 


Critical Paths under _main in COMRAM

    _main->___ftmul
    _updateComms->_handleIndicators
    _respondECU->_ToSend
    _respondECU->_sendData
    _sendData->_FastTransfer_buffer_flush
    _sendData->_Send_put
    _FastTransfer_buffer_flush->_memset
    _buttonsCollector->_GetButtonState
    _ToSend->_buttonsCollector
    _FastTransfer_buffer_put->_FastTransfer_buffer_modulo_inc
    _receiveData->_Send_put
    _Send_put->_UART_buff_get
    _Send_put->_UART_buff_put
    _UART_buff_put->_UART_buff_modulo_inc
    _Receive_peek->_UART_buff_peek
    _CRCcheck->_crcBufS_get
    _Receive_get->_UART_buff_get
    _UART_buff_get->_UART_buff_modulo_inc
    _Receive_available->_UART_buff_size
    _handleIndicators->_SetLEDOut
    _SetLEDOut->_Off_Led
    _SetLEDOut->_setLED
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    _begin->___awdiv
    _EUSART1_Initialize->_UART_buff_init
    _UART_buff_init->_memset
    _LEDwriteDisplay->_I2C1_MasterWrite
    _LEDsetValue->___ftmul
    _LEDsetBar->___awdiv
    _LEDbegin->_I2C1_MasterWrite
    _LEDblinkRate->_I2C1_MasterWrite
    _LEDBsetBrightness->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _TMR0_ISR->_ReadButtonState
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Transmit_ISR->i2_UART_buff_get
    i2_UART_buff_get->i2_UART_buff_modulo_inc
    _EUSART1_Receive_ISR->i2_UART_buff_put
    i2_UART_buff_put->i2_UART_buff_modulo_inc

Critical Paths under _main in BANK0

    _main->___fttol
    _updateComms->_receiveData
    _respondECU->_ToSend
    _receiveData->_CRCcheck
    ___fttol->___ftmul
    _SYSTEM_Initialize->_begin
    _LEDsetValue->___fttol
    _LEDbegin->_LEDBsetBrightness
    _LEDbegin->_LEDblinkRate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LEDwriteDisplay
    _updateComms->_receiveData
    _LEDsetValue->___fttol

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   46455
                                             24 BANK1      2     2      0
                           _LEDbegin
                        _LEDsetValue
                    _LEDwriteDisplay
                  _SYSTEM_Initialize
                            ___ftmul
                            ___fttol
                           ___lwtoft
                        _updateComms
 ---------------------------------------------------------------------------------
 (1) _updateComms                                          0     0      0   21411
                        _TBbarGraphs
                   _handleIndicators
                        _receiveData
                         _respondECU
 ---------------------------------------------------------------------------------
 (2) _respondECU                                           0     0      0    7986
                              _Delay
                             _ToSend
                   _buttonsCollector
                           _sendData
 ---------------------------------------------------------------------------------
 (3) _sendData                                             5     5      0    5704
                                             38 COMRAM     5     5      0
                   Absolute function *
                               _CRC8
          _FastTransfer_buffer_flush
                           _Send_put *
                        _crcBufS_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_put                                          7     2      5     742
                                             26 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_flush                            4     0      4    1139
                                             34 COMRAM     4     0      4
                             _memset
 ---------------------------------------------------------------------------------
 (3) _buttonsCollector                                     9     7      2     309
                                             32 COMRAM     9     7      2
                     _GetButtonState
 ---------------------------------------------------------------------------------
 (4) _GetButtonState                                       6     4      2     108
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _ToSend                                               3     1      2    1751
                                             41 COMRAM     2     0      2
                                              0 BANK0      1     1      0
            _FastTransfer_buffer_put
                   _buttonsCollector (ARG)
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_put                              7     2      5    1535
                                             32 COMRAM     7     2      5
     _FastTransfer_buffer_modulo_inc
 ---------------------------------------------------------------------------------
 (5) _FastTransfer_buffer_modulo_inc                       6     2      4     746
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay                                                5     3      2     222
                                             26 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _receiveData                                         18    18      0   10715
                                              7 BANK0      6     6      0
                                              0 BANK1     12    12      0
                   Absolute function *
                               _CRC8
                           _CRCcheck
                  _Receive_available *
                        _Receive_get *
                       _Receive_peek *
                           _Send_put *
 ---------------------------------------------------------------------------------
 (4) _Send_put                                             1     1      0    2614
                                             37 COMRAM     1     1      0
                      _UART_buff_get
                      _UART_buff_put
 ---------------------------------------------------------------------------------
 (5) _UART_buff_put                                        5     2      3    1418
                                             32 COMRAM     5     2      3
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (3) _Receive_peek                                         0     0      0     139
                     _UART_buff_peek
 ---------------------------------------------------------------------------------
 (4) _UART_buff_peek                                       4     2      2     139
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _CRCcheck                                             7     7      0    5114
                                              0 BANK0      7     7      0
                   Absolute function *
                               _CRC8
                  _Receive_available *
                        _Receive_get *
                        _crcBufS_get
                 _crcBufS_status_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_status_put                                  10     6      4     908
                                             26 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (4) _crcBufS_get                                         12     8      4    1404
                                             26 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (3) _Receive_get                                          0     0      0    1165
                      _UART_buff_get
 ---------------------------------------------------------------------------------
 (5) _UART_buff_get                                        5     3      2    1165
                                             32 COMRAM     5     3      2
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (6) _UART_buff_modulo_inc                                 6     2      4     746
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Receive_available                                    2     0      2     150
                                             28 COMRAM     2     0      2
                     _UART_buff_size
 ---------------------------------------------------------------------------------
 (4) _UART_buff_size                                       2     0      2     150
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _CRC8                                                 7     4      3    1014
                                             26 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _handleIndicators                                     7     5      2    2494
                                             36 COMRAM     7     5      2
                          _SetLEDOut
 ---------------------------------------------------------------------------------
 (3) _SetLEDOut                                            6     2      4    2191
                                             30 COMRAM     6     2      4
                            _Off_Led
                             _setLED
 ---------------------------------------------------------------------------------
 (4) _setLED                                               4     2      2     493
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _Off_Led                                              4     2      2     955
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _TBbarGraphs                                          4     0      4     216
                                             26 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2529
                                             34 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     525
                                              9 BANK0      9     5      4
                                              0 BANK1      6     6      0
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3254
                                             37 COMRAM     6     0      6
                                              0 BANK0      9     9      0
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2344
                                             26 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2786
                     _ADC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                              _begin
 ---------------------------------------------------------------------------------
 (2) _begin                                               13     0     13    1771
                                              0 BANK0     13     0     13
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0    1015
                     _UART_buff_init
 ---------------------------------------------------------------------------------
 (3) _UART_buff_init                                       2     0      2    1015
                                             34 COMRAM     2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6     830
                                             26 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDwriteDisplay                                     24    24      0    3911
                                              0 BANK1     24    24      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _LEDsetValue                                          7     3      4    2539
                                              6 BANK1      7     3      4
                          _LEDsetBar
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _LEDsetBar                                           24    20      4    1940
                                             34 COMRAM     8     4      4
                                              0 BANK0     16    16      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     907
                                             26 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LEDbegin                                             7     7      0    9497
                                              8 BANK0      7     7      0
                   _I2C1_MasterWrite
                  _LEDBsetBrightness
                       _LEDblinkRate
 ---------------------------------------------------------------------------------
 (2) _LEDblinkRate                                         8     5      3    3225
                                              0 BANK0      8     5      3
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _LEDBsetBrightness                                    8     5      3    3225
                                              0 BANK0      8     5      3
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _I2C1_MasterWrite                                     7     0      7    2683
                                             35 COMRAM     7     0      7
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterWriteTRBBuild                             9     2      7     494
                                             26 COMRAM     9     2      7
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterTRBInsert                                 6     2      4     494
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0    1570
                                             12 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             2     2      0     330
                                              4 COMRAM     2     2      0
                    _ReadButtonState
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR0_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ReadButtonState                                      4     2      2     262
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _I2C1_ISR                                             2     2      0      31
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (9) _I2C1_Stop                                            3     3      0      31
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0     528
                    i2_UART_buff_get
                   i2_UART_buff_size
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_size                                     2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_get                                      5     3      2     480
                                              6 COMRAM     5     3      2
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  1     1      0     681
                                             11 COMRAM     1     1      0
                    i2_UART_buff_put
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_put                                      5     2      3     658
                                              6 COMRAM     5     2      3
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (10) i2_UART_buff_modulo_inc                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LEDbegin
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
     _LEDBsetBrightness
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
     _LEDblinkRate
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
   _LEDsetValue
     _LEDsetBar
       ___awdiv
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   _LEDwriteDisplay
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _UART_buff_init
         _memset
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _begin
       ___awdiv
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _updateComms
     _TBbarGraphs
     _handleIndicators
       _SetLEDOut
         _Off_Led
         _setLED
     _receiveData
       Absolute function(Fake) *
       _CRC8 *
       _CRCcheck *
         Absolute function(Fake) *
         _CRC8 *
         _Receive_available *
           _UART_buff_size
         _Receive_get *
           _UART_buff_get
             _UART_buff_modulo_inc
         _crcBufS_get *
         _crcBufS_status_put *
       _Receive_available *
         _UART_buff_size
       _Receive_get *
         _UART_buff_get
           _UART_buff_modulo_inc
       _Receive_peek *
         _UART_buff_peek
       _Send_put *
         _UART_buff_get
           _UART_buff_modulo_inc
         _UART_buff_put
           _UART_buff_modulo_inc
     _respondECU
       _Delay
       _ToSend
         _FastTransfer_buffer_put
           _FastTransfer_buffer_modulo_inc
         _buttonsCollector (ARG)
           _GetButtonState
       _buttonsCollector
         _GetButtonState
       _sendData
         Absolute function(Fake) *
         _CRC8 *
         _FastTransfer_buffer_flush *
           _memset
         _Send_put *
           _UART_buff_get
             _UART_buff_modulo_inc
           _UART_buff_put
             _UART_buff_modulo_inc
         _crcBufS_put *

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
     i2_UART_buff_put
       i2_UART_buff_modulo_inc
   _EUSART1_Transmit_ISR
     i2_UART_buff_get
       i2_UART_buff_modulo_inc
     i2_UART_buff_size
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR
     _ReadButtonState
     _TMR0_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      CE      15       80.5%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      CE      13       80.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      CE       8       80.5%
BITBANK1           100      0       0       5        0.0%
BANK1              100     1A      53       6       32.4%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     12      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      44       1       72.3%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     469       9        0.0%
DATA                 0      0     469      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Jan 02 21:47:04 2016

      __end_of_FastTransfer_buffer_flush 27EE                   i2_UART_buff_modulo_inc 2C22  
                           _rx_array_inx 003E                             ___awdiv@sign 0020  
               LEDBsetBrightness@timeOut 00F3                               Off_Led@led 001B  
                           __CFG_CP0$OFF 000000                             __CFG_CP1$OFF 000000  
                           __CFG_CP2$OFF 000000                             __CFG_CP3$OFF 000000  
                                    l420 2B2C                                      l512 07E2  
                                    l433 2154                                      l438 21C6  
                                    l820 297A                                      l741 262E  
                                    l749 2712                                      l934 1364  
                                    l979 2418                             __CFG_CPB$OFF 000000  
                                    _PR2 000FBB                             __CFG_CPD$OFF 000000  
                        __end_of_ADC_ISR 2DFC     FastTransfer_buffer_flush@clearBuffer 0025  
                                    prod 000FF3                                      tosl 000FFD  
                                    wreg 000FE8                              _TBbarGraphs 2DA8  
          i2UART_buff_modulo_inc@modulus 0003                             __CFG_LVP$OFF 000000  
                       __end_of_I2C1_ISR 10A0                                     l1363 2104  
                                   l6000 069A                                     l6010 0750  
                                   l6002 06B4                                     l6004 06CE  
                                   l6012 076C                                     l6020 0778  
                                   l5222 2030                                     l5302 2964  
                                   l5310 2980                                     l5150 2C18  
                                   l6006 06E8                                     l5232 206C  
                                   l5240 24BE                                     l5312 2986  
                                   l6008 0702                                     l5226 2050  
                                   l5410 293A                                     l5228 205C  
                                   l5164 2BAC                                     l6060 2094  
                                   l5252 24E8                                     l5244 24CC  
                                   l5236 24B0                                     l6044 25F2  
                                   l5172 1850                                     l5332 10C8  
                                   l6070 20F0                                     l6062 209E  
                                   l5262 2504                                     l5270 1F00  
                                   l5510 0D24                                     l5430 0BA6  
                                   l5422 0B84                                     l5350 1C78  
                                   l5158 2BEE                                     l6240 2202  
                                   l5168 2BBC                                     l6072 20FA  
                                   l6064 20BC                                     l6056 2086  
                                   l5256 24F6                                     l5248 24DA  
                                   l5280 1F6E                                     l5272 1F16  
                                   l5504 0D00                                     l5192 2414  
                                   l5416 2B18                                     l5274 1F2C  
                                   l5354 1C82                                     l5178 18BC  
                                   l6260 223A                                     l6316 1770  
                                   l6068 20D2                                     l6404 1680  
                                   l5276 1F42                                     l5284 1F84  
                                   l5540 0DAE                                     l5532 0D8C  
                                   l5460 0C30                                     l5452 0C0E  
                                   l5444 0BEC                                     l5604 1208  
                                   l6238 21E4                                     l6318 1778  
                                   l6414 16B2                                     l5278 1F58  
                                   l5526 0D68                                     l5518 0D46  
                                   l5438 0BC8                                     l5366 1D06  
                                   l5382 1EB8                                     l5374 1E32  
                                   l5614 12CA                                     l5606 1230  
                                   l6280 215E                                     l6408 1696  
                                   l6432 13A0                                     l5296 294E  
                                   l5632 1354                     receiveData@crcHolder 013F  
                                   l6258 2232                                     l6290 21BE  
                                   l6418 16C8                                     l6450 1432  
                                   l5482 0C98                                     l5474 0C76  
                                   l5466 0C54                                     l5618 12E0  
                                   l5570 26D4                                     l6530 1C62  
                                   l6522 1B9C                                     l5804 2332  
                                   l5652 2550                                     l6284 2174  
                                   l6276 2144                                     l6356 17D8  
                                   l6460 1462                                     l5548 0DD0  
                                   l5556 0DF4                                     l5628 1334  
                                   l5636 135C                                     l5580 14D8  
                                   l5806 2350                                     l5830 2280  
                                   l6358 17F6                                     l6390 163E  
                                   l6462 1472                                     l6454 1446  
                                   l5902 0232                                     l5590 154C  
                                   l5582 14F2                                     l5824 2380  
                                   l5664 2576                                     l5680 25A8  
                                   l6288 21AA                                     l6376 1826  
                                   l6296 1722                                     l6384 160C  
                                   l6464 147C                                     l5496 0CDE  
                                   l5488 0CBC                                     l5904 0258  
                                   l5920 02BA                                     l5592 1576  
                                   l5584 150C                                     l5666 257E  
                                   l5658 2560                                     l5770 078C  
                                   l6298 1740                                     l5594 157A  
                                   l5586 1526                                     l5836 229E  
                                   l5684 25B6                                     l5676 259E  
                                   l5668 2582                                     l5772 07A2  
                                   l6468 1498                                     l5940 0422  
                                   l5932 037E                                     l5924 02E2  
                                   l5916 0288                                     l5588 1542  
                                   l5838 22BC                                     l5790 0A7E  
                                   l5782 08E4                                     l5942 0436  
                                   l5598 15AC                                     l5856 22EC  
                                   l5960 050A                                     l5864 00F8  
                                   l5872 012A                                     l5786 09A2  
                                   l5970 05C0                                     l5962 0524  
                                   l5938 041C                                     l5964 053E  
                                   l5956 04D6                                     l5972 05DC  
                                   l5884 01CE                                     l5868 0126  
                                   l5798 2316                                     l5966 0558  
                                   l5958 04F0                                     l5982 05E8  
                                   l5886 01E6                                     l5968 0572  
                                   l5888 01EC                                     l5896 0226  
                                   l5996 0666                                     l5998 0680  
                                   _CRC8 2948                                     _LATA 000F89  
                                   _LATB 000F8A                                     _LATC 000F8B  
                                   _LATD 000F8C                                     _LATE 000F8D  
                                   u6010 230C                                     u6004 0B1E  
                                   u6005 0B16                                     u5180 23A8  
                                   u7101 15EE                                     u6070 2276  
                                   u5270 1E12                                     u6208 014C  
                                   u7121 1620                                     u6209 0160  
                                   u5291 10C6                                     u6308 0236  
                                   u6228 016A                                     u6148 00D2  
                                   u6309 024A                                     u6229 017E  
                                   u6149 00E6                                     u6238 0184  
                                   u6239 0198                                     u6328 025C  
                                   u6248 019E                                     u6168 0102  
                                   u5608 14DC                                     u7161 137C  
                                   u6329 0272                                     u6249 01B2  
                                   u6169 0116                                     u5618 14F6  
                                   i2l60 0E68                                     u7180 13C6  
                                   u6620 25D2                                     u5708 1250  
                                   u6508 0576                                     u6348 028C  
                                   u6268 01D2                                     u6188 012E  
                                   u5580 2712                                     u5628 1510  
                                   u5709 1264                                     u6381 0322  
                                   u6349 02A0                                     u6189 0142  
                                   u5718 126C                                     u6518 05C4  
                                   u6438 04C0                                     u6358 02BE  
                                   u5574 26F4                                     u5638 152A  
                                   i2l71 0F1C                                     i2l63 0EDE  
                                   u5719 1280                                     u6359 02D2  
                                   u5575 26EE                                     i2l72 0F2C  
                                   u5904 0808                                     u5728 1288  
                                   u6608 0706                                     u6448 04DA  
                                   u5648 1550                                     i2l65 0EE6  
                                   u5905 0800                                     u7185 13BC  
                                   u5729 129C                                     i2l90 100A  
                                   i2l82 0FAC                                     i2l66 0EEE  
                                   u5914 0880                                     u6650 262E  
                                   u6618 0754                                     u6538 0650  
                                   u6458 04F4                                     u7370 1BB0  
                                   u5915 0878                                     i2l76 0F98  
                                   u6644 2610                                     u6548 066A  
                                   u6468 050E                                     u5668 1596  
                                   u7380 1C60                                     u6645 260A  
                                   i2l94 103C                                     i2l86 0FDC  
                                   u5934 0912                                     u5678 120C  
                                   u6558 0684                                     u6478 0528  
                                   u5598 14C2                                     u5935 090A  
                                   u5679 1220                                     u5944 0936  
                                   u5880 07DA                                     u6568 069E  
                                   u6488 0542                                     i2l89 0FF8  
                                   u5945 092E                                     u7457 2B1E  
                                   u5698 1234                                     u6578 06B8  
                                   u6498 055C                                     u5699 1248  
                                   u5964 09CE                                     u6588 06D2  
                                   u5965 09C6                                     u5974 0A02  
                                   u6950 213A                                     u6598 06EC  
                                   u5975 09FA                                     u5994 0AAC  
                                   u5995 0AA4                                     _TMR2 000FBC  
                                   _WPUB 000F61                                     _main 1B7A  
                           ___ftpack@arg 001B                             ___ftpack@exp 001E  
                        _TMR0_StartTimer 2DF4                                     _time 00DB  
                                   fsr0h 000FEA                                     fsr1h 000FE2  
                                   fsr0l 000FE9                                     fsr2h 000FDA  
                                   fsr1l 000FE1                                     indf2 000FDF  
                                   fsr2l 000FD9                   ??_I2C1_MasterTRBInsert 001F  
                                   btemp 0045                            __CFG_BORV$190 000000  
                                   pclat 000FFA                                     prodh 000FF4  
                                   prodl 000FF3          __end_of_FastTransfer_buffer_put 1208  
                                   start 00C4                            __CFG_IESO$OFF 000000  
                           ___ftmul@cntr 00F5                             ___param_bank 000010  
                           ___ftmul@sign 00F6                          __end_of_Off_Led 253C  
         I2C1_MasterWriteTRBBuild@length 001F           i2UART_buff_modulo_inc@my_value 0005  
                       _handleIndicators 25C0                             ___fttol@exp1 013E  
                     __size_of_LEDsetBar 0406                             ___fttol@lval 013A  
                                  ?_CRC8 001B                  __end_of_TMR0_Initialize 2CF8  
                             _i2c1_state 0038                         __end_of_CRCcheck 1366  
         __size_of_OSCILLATOR_Initialize 000E                I2C1_MasterTRBInsert@count 0020  
          __end_of_OSCILLATOR_Initialize 2DF4                I2C1_MasterTRBInsert@pflag 001D  
                       LEDbegin@i2c_addr 00FB                       crcBufS_put@address 001D  
                       __end_of_LEDbegin 2260                                    ?_main 0001  
                        __end_of___awdiv 25C0                        __end_of_I2C1_Stop 2A5C  
                        __end_of___ftmul 1706                                    _T0CON 000FD5  
                        ___awdiv@divisor 001D                          __end_of___fttol 14AA  
                                  _T2CON 000FBA                                    _LATA3 007C4B  
                                  _LATB3 007C53                                    _LATD1 007C61  
                                  _LATB5 007C55                                    _LATE0 007C68  
                                  _LATE1 007C69                                    _LATE2 007C6A  
                         __CFG_DEBUG$OFF 000000                                    i2l320 0066  
                                  i2l322 0072                                    i2l324 007E  
                                  i2l316 004E                                    i2l318 005A  
                                  i2l328 0088                          ___awdiv@counter 001F  
                                  i2l979 24AA                                    _TMR0H 000FD7  
                                  _TMR0L 000FD6                                    _TRISA 000F92  
                                  _TRISB 000F93                                    _TRISC 000F94  
                                  _TRISD 000F95                                    _TRISE 000F96  
                                  _Delay 2B0E             __end_of_I2C1_BusCollisionISR 2E00  
                          __CFG_WRT0$OFF 000000                            __CFG_WRT1$OFF 000000  
                          __CFG_WRT2$OFF 000000                            __CFG_WRT3$OFF 000000  
                      ?_buttonsCollector 0021                     _EUSART1_Transmit_ISR 2B42  
                         __CFG_EBTR0$OFF 000000                           __CFG_FCMEN$OFF 000000  
                         __CFG_EBTR1$OFF 000000                           __CFG_EBTR2$OFF 000000  
                         __CFG_EBTR3$OFF 000000                        ??_I2C1_Initialize 001B  
                       __end_of_TMR0_ISR 284E                            __CFG_WRTB$OFF 000000  
                           ?_LEDsetValue 013F                            __CFG_WRTC$OFF 000000  
                          __CFG_WRTD$OFF 000000                                    _begin 284E  
                         __CFG_EBTRB$OFF 000000                                    _brake 00C9  
                     ??_buttonsCollector 0023                                    _group 002C  
                     __CFG_MCLRE$EXTMCLR 000000                            ___ftpack@sign 001F  
                                  pclath 000FFA                                    tablat 000FF5  
                          ??_Receive_get 0026                     __size_of_crcBufS_get 00E2  
                                  plusw2 000FDB                           begin@stuffpeek 00F9  
                   __size_of_crcBufS_put 00D8                                    status 000FD8  
                         __CFG_HFOFST$ON 000000                             ?_receiveData 0001  
                         SetLEDOut@state 0021                        ??_ReadButtonState 0003  
                         __CFG_PBADEN$ON 000000          I2C1_MasterWriteTRBBuild@address 0020  
                           __end_of_CRC8 2992                          CRCcheck@SentCRC 00EE  
                        __initialization 2638                    I2C1_MasterWrite@pdata 0024  
                  I2C1_MasterWrite@pflag 0029               __end_of_EUSART1_Initialize 2AD4  
                           __end_of_main 1C6E                               ToSend@what 002A  
                                 ??_CRC8 001E                            ?_LEDblinkRate 00EE  
                              ??_ADC_ISR 0001              ?_INTERRUPT_InterruptManager 0001  
                            _i2c1_object 00B8                                   ??_main 002C  
                          ___fttol@sign1 0139                            __activetblptr 000002  
                       __end_of_Send_put 2BA2                __size_ofi2_UART_buff_size 0016  
                                 ?_Delay 001B                    ?_EUSART1_Transmit_ISR 0001  
          FastTransfer_buffer_put@towhat 0024                            ?_Receive_peek 0001  
                                 ?_begin 00EE                  __end_of_TMR0_StartTimer 2DF8  
                                 _ADCON0 000FC2                                   _ADCON1 000FC1  
                                 _ADCON2 000FC0                                   _ADRESH 000FC4  
                                 _ADRESL 000FC3                         ___awdiv@dividend 001B  
                                 _ANSELA 000F38                                   _ANSELB 000F39  
                                 _ANSELC 000F3A                                   _ANSELD 000F3B  
                                 _ANSELE 000F3C                         __end_of___ftpack 2124  
                      __end_of_LEDsetBar 0B82                          i2_UART_buff_get 241C  
                                 _RC1STA 000FAB                                   i2l1010 2D1E  
                        i2_UART_buff_put 194A                                   i2l4100 1B02  
                                 i2l4102 1B1C                                   i2l4106 1B36  
                                 i2l4038 2C42                           __CFG_WDTEN$OFF 000000  
                                 i2l4090 1A80                                   i2l4092 1A9A  
                                 Delay@x 001E                                   i2l4094 1AB4  
                                 i2l6112 0EC0                                   i2l4096 1ACE  
                                 i2l4088 1A66              UART_buff_modulo_inc@modulus 001D  
                                 i2l6210 1042                                   i2l6130 0F16  
                                 i2l4098 1AE8                                   i2l6212 1046  
                                 i2l6124 0EFE                                   i2l6220 105A  
                                 i2l4470 196A                                   i2l6214 104E  
                                 i2l6144 0F5A                                   i2l4640 280E  
                                 i2l4490 24A6                                   i2l4476 19D6  
                                 i2l6172 0FBE                                   i2l6164 0FA6  
                                 i2l4636 27FE                                   i2l6182 0FE4  
                                 i2l4654 284A                                   i2l4646 2820  
                                 i2l4666 2B6C                                   i2l5722 2D48  
                                 i2l5714 2A56                                   i2l6194 1012  
                                 i2l6198 101A                           _GetButtonState 2C4C  
                                 _RCREG1 000FAE                         __end_of___lwtoft 2CBC  
                                 _OSCCON 000FD3                                   _SPBRG1 000FAF  
                                 _TX1STA 000FAC                                   _TXREG1 000FAD  
                              ??_Off_Led 001D                       __size_of_SetLEDOut 02AA  
                      ?_I2C1_MasterWrite 0024                           __CFG_XINST$OFF 000000  
                                 _ToSend 2CBC                       ??_I2C1_MasterWrite 002B  
                    __end_of_Receive_get 2DE6                         crcBufS_get@_this 001B  
            ??_FastTransfer_buffer_flush 0027                           _p_i2c1_current 00CF  
                          _output_buffer 0500                         crcBufS_get@space 001E  
                              ??___awdiv 001F                                CRC8@tempI 0020  
                         __CFG_STVREN$ON 000000                                ??___ftmul 00EE  
                              ??___fttol 00FB                           ??_LEDblinkRate 002B  
             ??_I2C1_MasterWriteTRBBuild 0022                         ?_TMR0_Initialize 0001  
                                 _setLED 1EFE                                   _memset 2BA2  
                              ?_I2C1_ISR 0001                                   clear_0 263E  
                                 clear_1 264A                                   clear_2 2656  
                                 clear_3 2662                                   clear_4 266E  
                                 clear_5 267A                                   clear_6 2686  
                       ___awdiv@quotient 0021                                   _rx_len 003F  
                       __end_of_sendData 15DA                    ___ftmul@f3_as_product 00F2  
                           __pdataCOMRAM 0044                            Send_put@_data 0026  
                         ??_Receive_peek 001F                                   tblptrh 000FF7  
                                 tblptrl 000FF6                                   tblptru 000FF8  
       __size_of_FastTransfer_buffer_put 0168             __end_of_UART_buff_modulo_inc 2C22  
                  __end_of_TMR0_CallBack 2DFE                   __end_of_GetButtonState 2C74  
          I2C1_MasterWriteTRBBuild@pdata 001D                       LEDblinkRate@status 00F5  
          __size_of_INTERRUPT_Initialize 0010                          SetLEDOut@lednum 001F  
                      _SYSTEM_Initialize 271C                               __accesstop 0060  
                __end_of__initialization 269E                                ?_CRCcheck 0001  
                     ?_SYSTEM_Initialize 0001                                ?_LEDbegin 0001  
                          ___rparam_used 000001                  ?i2_UART_buff_modulo_inc 0001  
                         _i2c1_trb_count 0039                             ?_updateComms 0001  
                           TBbarGraphs@b 001D                             TBbarGraphs@t 001B  
                          __end_of_Delay 2B42                               ___ftmul@f1 0026  
                             ___ftmul@f2 0029                    _I2C1_FunctionComplete 2D34  
                   _I2C1_BusCollisionISR 2DFE                               ___fttol@f1 00F7  
                 LEDwriteDisplay@timeOut 014E                           __pcstackCOMRAM 0001  
                 I2C1_MasterWrite@length 0026                       _crcBufS_status_put 1E28  
                    ??_SYSTEM_Initialize 0025                         crcBufS_put@_this 001B  
                          __end_of_begin 28AC                                ?_TMR0_ISR 0001  
 __end_of_FastTransfer_buffer_modulo_inc 2BF8  __size_of_FastTransfer_buffer_modulo_inc 002A  
         _FastTransfer_buffer_modulo_inc 2BCE                               ??_I2C1_ISR 0004  
           FastTransfer_buffer_put@_this 0021                              ToSend@where 00EE  
                             ___lwtoft@c 0023                       UART_buff_get@_this 0021  
                    ?_crcBufS_status_put 001B                    __end_of_UART_buff_get 241C  
                 ??_EUSART1_Transmit_ISR 000C                    __end_of_UART_buff_put 194A  
                      __end_of_SetLEDOut 0E2C                    TMR0_ISR@CountCallBack 00C1  
                                ??_Delay 001D                           LEDbegin@status 00FC  
                __end_ofi2_UART_buff_get 24AE                  __end_ofi2_UART_buff_put 1A64  
                           ?_TBbarGraphs 001B              __end_of_EUSART1_Receive_ISR 2D34  
              _FastTransfer_buffer_flush 278C                                  CRC8@crc 0021  
                                CRC8@len 001D                                  CRC8@sum 001E  
                                ??_begin 0023                         ?_TMR0_StartTimer 0001  
                        ?_GetButtonState 001B                __end_of_SYSTEM_Initialize 278C  
               __end_of_handleIndicators 2638                   receiveData@holder_2278 013C  
                    _addressErrorCounter 00C5                     __size_of_LEDsetValue 00A4  
                             __pbssBANK0 0060                               __pbssBANK1 0100  
                             __pbssBANK2 0200                               __pbssBANK3 0300  
                             __pbssBANK4 0400                               __pbssBANK5 0500  
                        __CFG_PLLCFG$OFF 000000                              _Receive_get 2DD8  
                             ??_CRCcheck 0027                     ??_crcBufS_status_put 001F  
         __end_ofi2_UART_buff_modulo_inc 2C4C                               __pnvCOMRAM 0042  
                      begin@givenAddress 00F1                  __size_of_UART_buff_init 001E  
                __size_of_UART_buff_peek 0024                               ??_LEDbegin 002B  
                __size_of_UART_buff_size 0016                                ?_Send_put 0001  
                  ?_I2C1_BusCollisionISR 0001                     __size_of_receiveData 06B4  
                                ?_ToSend 002A                       __CFG_CCP2MX$PORTC1 000000  
               __size_of_LEDwriteDisplay 012A                               ??_TMR0_ISR 0005  
                     __CFG_CCP3MX$PORTB5 000000      FastTransfer_buffer_modulo_inc@value 001B  
                        _I2C1_Initialize 2A5C                                  _ADC_ISR 2DF8  
                                ?_setLED 001B                                  ?_memset 001B  
                             _crc_buffer 0128                                ?___ftpack 001B  
                              TMR0_ISR@x 0005                  __size_of_ADC_Initialize 0018  
                              ?___lwtoft 0023                       UART_buff_put@_this 0021  
                       i2_UART_buff_size 2D92              i2UART_buff_modulo_inc@value 0001  
                                _OSCCON2 000FD2                                _I2C1_Stop 2A1A  
                      _Receive_available 2D66             UART_buff_modulo_inc@my_value 001F  
                      __CFG_PRICLKEN$OFF 000000                                  _OSCTUNE 000F9B  
                                _SPBRGH1 000FB0                                  _SSP1ADD 000FC8  
                    sendData@whereToSend 0028                          _ReadButtonState 1A64  
                    _receiveArrayAddress 00D3                                  _SSP1BUF 000FC9  
                     ?_Receive_available 001D                               begin@error 00F2  
                   __end_of_LEDblinkRate 22F6            I2C1_MasterTRBInsert@ptrb_list 001B  
                                _Off_Led 24AE                      ??_Receive_available 001F  
                              ?_sendData 0001                        _alignErrorCounter 00C7  
                        __CFG_PWRTEN$OFF 000000                __size_of_buttonsCollector 0070  
                 ?_I2C1_FunctionComplete 0001                               ??_Send_put 0026  
                                __Hparam 0000            __size_of_I2C1_MasterTRBInsert 00BA  
                                __Lparam 0000                          __size_of_ToSend 001E  
                     _p_i2c1_trb_current 00D1                     __end_of_Receive_peek 2DD8  
                              _AKNAKsend 0036                                  ___awdiv 253C  
                   _UART_buff_modulo_inc 2BF8                                  ___ftmul 15DA  
                                ___fttol 1366                                  _calc_CS 0037  
                                __pcinit 2638                               ??___ftpack 0020  
                        __size_of_setLED 00BE                          __size_of_memset 002C  
                                __ramtop 0600                         i2UART_buff_get@c 000B  
                                __ptext0 1B7A                                  __ptext1 2AD4  
                                __ptext2 2992                                  __ptext3 14AA  
                                __ptext4 1D50                                  __ptext5 278C  
                                __ptext6 26AC                                  __ptext7 2C4C  
                                __ptext8 2CBC                                  __ptext9 10A0  
                             ??___lwtoft 0026                                _T0CONbits 000FD5  
                       i2UART_buff_put@c 0009                    _OSCILLATOR_Initialize 2DE6  
              __end_of_Receive_available 2D7C                                _T2CONbits 000FBA  
                _FastTransfer_buffer_put 10A0                    CRCcheck@calculatedCRC 00EF  
                     _EUSART1_Initialize 2A98                         ?i2_UART_buff_get 0007  
               ??_PIN_MANAGER_Initialize 001B                         ?i2_UART_buff_put 0007  
                             ?_I2C1_Stop 0001             crcBufS_status_put@wantedTime 0023  
                          ??_crcBufS_get 001F                            ??_crcBufS_put 0020  
             __size_of_SYSTEM_Initialize 0070                     I2C1_ISR@pi2c_buf_ptr 00BF  
                   end_of_initialization 269E                                Delay@wait 001B  
                    ?_EUSART1_Initialize 0001                  LEDwriteDisplay@i2c_addr 014D  
                              _LED_array 0088                                  memset@c 001D  
                                memset@n 001F                                  memset@p 0021  
                           LEDsetBar@bar 0023                            __Lmediumconst 0000  
                              _LEDsetBar 077C                   ??_I2C1_BusCollisionISR 0001  
                             ??_sendData 0027                  __end_of_I2C1_Initialize 2A98  
                  ?_UART_buff_modulo_inc 001B                     __size_of_updateComms 003A  
                                postdec2 000FDD                                  postinc0 000FEE  
                                postinc2 000FDE                               _respondECU 2992  
                  ReadButtonState@btnnum 0001                         begin@stufftosend 00F3  
                    CRCcheck@arrayHolder 00F0                             LEDsetValue@k 0144  
                   ??_EUSART1_Initialize 0025                      LEDblinkRate@timeOut 00F3  
                              _PORTAbits 000F80                                _PORTBbits 000F81  
                              _PORTDbits 000F83                        ??_LEDwriteDisplay 002B  
                __end_of_ReadButtonState 1B7A                __size_of_I2C1_MasterWrite 004C  
                 _dataAdressErrorCounter 00CD                        __size_of_I2C1_ISR 0274  
                             _rx_address 003D                                _TRISCbits 000F94  
                   __size_of_TBbarGraphs 0012                  LEDBsetBrightness@status 00F5  
      I2C1_ISR@i2c_10bit_address_restart 0034                      LEDbegin@writeBuffer 00F6  
                           begin@maxSize 00F0       __size_of_FastTransfer_buffer_flush 0062  
                  i2UART_buff_size@_this 0001                           _UART_buff_init 2CF8  
                         _UART_buff_peek 2C74                           _UART_buff_size 2D7C  
                    __end_of_crcBufS_get 1D50                               ?_LEDsetBar 0023  
                    __end_of_crcBufS_put 1E28                  I2C1_MasterWrite@address 0027  
                      __size_of_CRCcheck 015E                LEDBsetBrightness@i2c_addr 00F0  
                            ___ftmul@exp 00F1                        __size_of_LEDbegin 0098  
                          _moduleAddress 003B                     _timer0ReloadVal16bit 0042  
                             CRCcheck@rt 00F3                           __end_of_ToSend 2CDA  
           __end_of_INTERRUPT_Initialize 2DCA                          _crcErrorCounter 00CB  
                I2C1_MasterWrite@trBlock 00E4                        crcBufS_put@oldCRC 001E  
                          __pidataCOMRAM 2E00                        __size_of_TMR0_ISR 0060  
               I2C1_Stop@completion_code 0003                           _ADC_Initialize 2D4E  
              ??_FastTransfer_buffer_put 0026                   ?_OSCILLATOR_Initialize 0001  
                         __end_of_setLED 1FBC                           __end_of_memset 2BCE  
                      crcBufS_put@status 001F                  buttonsCollector@sendVal 0026  
                           receiveData@r 0143               __size_of_Receive_available 0016  
                           receiveData@u 0141                         ??_GetButtonState 001D  
                      _LEDBsetBrightness 22F6                      start_initialization 2638  
                  __size_of_LEDblinkRate 0096                              ??_I2C1_Stop 0001  
               __size_of_TMR0_Initialize 001E          __size_of_PIN_MANAGER_Initialize 0050  
                  crcBufS_get@wantedTime 0025                       ?_LEDBsetBrightness 00EE  
                              _SetLEDOut 0B82        __size_of_I2C1_MasterWriteTRBBuild 0044  
                      ?_handleIndicators 0025                ?_I2C1_MasterWriteTRBBuild 001B  
                 __end_of_UART_buff_init 2D16                   __end_of_UART_buff_peek 2C98  
                         UART_buff_get@c 0025                   __end_of_UART_buff_size 2D92  
                           ?_Receive_get 0001                           UART_buff_put@c 0023  
                     ??_handleIndicators 0027                          LEDbegin@timeOut 00F9  
                    ??_LEDBsetBrightness 002B                    __size_of_Receive_peek 000E  
                       _buttonsCollector 26AC                 __end_ofi2_UART_buff_size 2DA8  
                       ?_I2C1_Initialize 0001                                 ??_ToSend 002C  
                 ??_UART_buff_modulo_inc 001F                                 CRC8@data 001B  
                        crcBufS_get@time 001D                        __size_of_Send_put 002E  
                            ?_respondECU 0001               LEDwriteDisplay@writeBuffer 0139  
                 __size_of_TMR0_CallBack 0002                   __end_of_ADC_Initialize 2D66  
                             LEDsetBar@a 0029                               LEDsetBar@c 0027  
                               ?_ADC_ISR 0001                                 ??_setLED 001D  
                               ??_memset 0021                             _LEDblinkRate 2260  
                      handleIndicators@i 002A                __end_of_LEDBsetBrightness 238A  
           I2C1_MasterWriteTRBBuild@ptrb 001B                         ?_ReadButtonState 0001  
                      __size_of___ftpack 00AE                              __pbssCOMRAM 002C  
                      __size_of___lwtoft 0024            __size_of_EUSART1_Transmit_ISR 0032  
                          __pcstackBANK0 00EE                            __pcstackBANK1 0139  
                          ??_LEDsetValue 0143                            _i2c1_tr_queue 00E9  
                  LEDwriteDisplay@status 0150                             _Receive_peek 2DCA  
                             ?_SetLEDOut 001F                      UART_buff_init@_this 0023  
                            _crcBufS_get 1C6E                      UART_buff_peek@_this 001B  
                            _crcBufS_put 1D50                         LEDsetValue@color 0141  
                        ?_UART_buff_init 0023                          ?_UART_buff_peek 001B  
                        ?_UART_buff_size 001B                         LEDsetValue@value 013F  
                ??_I2C1_FunctionComplete 0001             __size_of_EUSART1_Receive_ISR 001E  
                          ??_receiveData 00F5              __size_of_crcBufS_status_put 00D6  
                             sendData@CS 0029                                 ?_Off_Led 001B  
                            ??_LEDsetBar 00EE                 __size_of_TMR0_StartTimer 0004  
                 __size_of_UART_buff_get 0092                   __size_of_UART_buff_put 011A  
                 _PIN_MANAGER_Initialize 28AC                        __size_of_sendData 0130  
                              __pintcode 0008                                 ?___awdiv 001B  
                               ?___ftmul 0026                                 ?___fttol 00F7  
                        ?_ADC_Initialize 0001                                 _I2C1_ISR 0E2C  
           ??_INTERRUPT_InterruptManager 000D             LEDBsetBrightness@writeBuffer 00F1  
                   i2UART_buff_get@_this 0007                         _I2C1_MasterWrite 28FC  
                               _BAUD1CON 000FB8             __end_of_I2C1_MasterTRBInsert 2076  
                      buttonsCollector@i 0028                           __size_of_Delay 0034  
                              _butnarray 00B0                           __size_of_begin 005E  
                          _TMR0_CallBack 2DFC                      __size_of_respondECU 0044  
                   _INTERRUPT_Initialize 2DBA                     GetButtonState@btnnum 001B  
                           _receiveArray 0100                              _LEDNUM_ENAB 0098  
                 I2C1_MasterRead@trBlock 00DF                        ??_TMR0_Initialize 001B  
                    __end_of_LEDsetValue 21C8                                 _CRCcheck 1208  
                               _LATCbits 000F8B                                 _LEDState 00A4  
                    UART_buff_size@_this 001B                                 _IPR1bits 000F9F  
                               _LEDbegin 21C8                                 _IPR2bits 000FA2  
                               _PIE1bits 000F9D                                 _PIE2bits 000FA0  
                          LEDblinkRate@b 00EE                          _LEDwriteDisplay 1706  
    __size_of_INTERRUPT_InterruptManager 00BC                                 i2u332_40 1A7A  
                               i2u332_46 1A7C                                 i2u333_40 1A94  
                               i2u333_46 1A96                                 i2u334_40 1AAE  
                               i2u334_46 1AB0                                 i2u335_40 1AC8  
                               i2u335_46 1ACA                                 i2u336_40 1AE2  
                               i2u336_46 1AE4                                 i2u337_40 1AFC  
                               _PIR1bits 000F9E                                 i2u337_46 1AFE  
                               i2u338_40 1B16                                 i2u338_46 1B18  
                               i2u339_40 1B30                                 _PIR2bits 000FA1  
                               i2u339_46 1B32                                 i2u428_40 243A  
                               i2u446_40 283C                                 i2u448_40 2B5C  
                    begin@stuffavailable 00F7                                 _RCONbits 000FD0  
                       __CFG_WDTPS$32768 000000                      __end_of_receiveData 077C  
                               _SSP1CON1 000FC6                                 _SSP1CON3 000FCB  
                               _TMR0_ISR 27EE                                main@ADCNT 0151  
                               _SSP1STAT 000FC7           FastTransfer_buffer_flush@_this 0023  
                           _input_buffer 0400                                _rx_buffer 0300  
                       __size_of_ADC_ISR 0004                               _ADCON0bits 000FC2  
             __size_of_LEDBsetBrightness 0094                     i2UART_buff_put@_this 0007  
                          _UART_buff_get 238A                            _UART_buff_put 1830  
                         ?_TMR0_CallBack 0001                 ??i2_UART_buff_modulo_inc 0005  
                            ??_SetLEDOut 0023                              _INTCON2bits 000FF1  
                  ?_INTERRUPT_Initialize 0001                        _sendStructAddress 00D5  
               __size_ofi2_UART_buff_get 0092                 __size_ofi2_UART_buff_put 011A  
                          ??_updateComms 002C                     __size_of_Receive_get 000E  
                       __size_of_Off_Led 008E                                 __Hrparam 0000  
                               _Send_put 2B74            __size_of_I2C1_BusCollisionISR 0002  
                               __Lrparam 0000                       __CFG_BOREN$SBORDIS 000000  
                              setLED@led 001B                   I2C1_ISR@i2c_bytes_left 0035  
                      __CFG_P2BMX$PORTD2 000000                  LEDblinkRate@writeBuffer 00F1  
                ??_OSCILLATOR_Initialize 001B                        ??_TMR0_StartTimer 001B  
                         LEDsetBar@color 0025                         __size_of___awdiv 0084  
                       __size_of___ftmul 012C                         __size_of___fttol 0144  
            __size_of_EUSART1_Initialize 003C                      begin@stufftoreceive 00F5  
                               ___ftpack 2076         __end_of_I2C1_MasterWriteTRBBuild 2A1A  
                               ___lwtoft 2C98                           ?_UART_buff_get 0021  
                         ?_UART_buff_put 0021                              CRC8@extract 001F  
               __end_of_buttonsCollector 271C                                sendData@i 002A  
                          ??_TBbarGraphs 001F                      I2C1_ISR@i2c_address 0040  
                            _LEDsetValue 2124                 crcBufS_status_put@status 001E  
                               __ptext10 2BCE                                 __ptext11 2B0E  
                               __ptext20 2DD8                                 __ptext12 00C8  
                               __ptext21 238A                                 __ptext13 2B74  
                               __ptext30 2DA8                                 __ptext22 2BF8  
                               __ptext14 1830                                 __ptext31 2C98  
                               __ptext23 2D66                                 __ptext15 2DCA  
                               __ptext40 2DE6                                 __ptext32 1366  
                               __ptext24 2D7C                                 __ptext16 2C74  
                               __ptext41 2DBA                                 __ptext33 15DA  
                               __ptext25 2948                                 __ptext17 1208  
                               __ptext50 253C                                 __ptext42 2A5C  
                               __ptext34 2076                                 __ptext26 25C0  
                               __ptext18 1E28                                 __ptext51 21C8  
                               __ptext43 2A98                                 __ptext35 271C  
                               __ptext27 0B82                                 __ptext19 1C6E  
                               __ptext60 1A64                                 __ptext52 2260  
                               __ptext44 2CF8                                 __ptext36 284E  
                               __ptext28 1EFE                                 __ptext61 0E2C  
                               __ptext53 22F6                                 __ptext45 2BA2  
                               __ptext37 2CDA                                 __ptext29 24AE  
                               __ptext70 2C22                                 __ptext62 2A1A  
                               __ptext54 28FC                                 __ptext46 2D4E  
                               __ptext38 2DF4                                 __ptext71 2DF8  
                               __ptext63 2D34                                 __ptext55 29D6  
                               __ptext47 1706                                 __ptext39 28AC  
                               __ptext72 0000                                 __ptext64 2DFE  
                               __ptext56 1FBC                                 __ptext48 2124  
                               __ptext65 2B42                                 __ptext49 077C  
                               __ptext66 2D92                                 __ptext58 27EE  
                               __ptext67 241C                                 __ptext59 2DFC  
                               __ptext68 2D16                                 __ptext69 194A  
                           _SSP1CON1bits 000FC6                             _SSP1CON2bits 000FC5  
                          __size_of_CRC8 004A                                 begin@ptr 00EE  
                EUSART1_Receive_ISR@data 000C                  __end_of_LEDwriteDisplay 1830  
                          _returnAddress 003C                            __size_of_main 00F4  
                            _receiveData 00C8                           _Transmit_stall 0044  
                               _sendData 14AA                     _I2C1_MasterTRBInsert 1FBC  
                      ?i2_UART_buff_size 0001                               _RC1STAbits 000FAB  
                   LEDblinkRate@i2c_addr 00F0                             ??_respondECU 002C  
                     ??i2_UART_buff_size 0003                                 int$flags 0045  
              __size_of_handleIndicators 0078            handleIndicators@oldIndicators 00DD  
                           _serial_write 0032                                 _throttle 00D9  
                    __end_of_updateComms 2B0E       __end_of_INTERRUPT_InterruptManager 00C4  
             _INTERRUPT_InterruptManager 0008                      _EUSART1_Receive_ISR 2D16  
                      receiveData@holder 0139                       LEDBsetBrightness@b 00EE  
                             _INTCONbits 000FF2                          ??_TMR0_CallBack 0001  
              UART_buff_modulo_inc@value 001B       handleIndicators@receivedIndicators 0025  
                       ??_UART_buff_init 0025                         ??_UART_buff_peek 001D  
                       ??_UART_buff_size 001D                   ??_INTERRUPT_Initialize 001B  
                               memset@p1 001B                         _serial_available 002E  
        __size_ofi2_UART_buff_modulo_inc 002A                             ?_crcBufS_get 001B  
                           ?_crcBufS_put 001B                                 intlevel2 0000  
                crcBufS_status_put@_this 001B                       __end_of_respondECU 29D6  
                    __end_of_TBbarGraphs 2DBA                     ?_EUSART1_Receive_ISR 0001  
 FastTransfer_buffer_modulo_inc@my_value 001F           FastTransfer_buffer_put@towhere 0023  
                ?_PIN_MANAGER_Initialize 0001                 __end_of_I2C1_MasterWrite 2948  
         __size_of_I2C1_FunctionComplete 001A            __end_of_I2C1_FunctionComplete 2D4E  
                  ?_I2C1_MasterTRBInsert 001B             __end_of_EUSART1_Transmit_ISR 2B74  
                            _ring_buffer 0200                         ??_ADC_Initialize 001B  
             ?_FastTransfer_buffer_flush 0023                        ??i2_UART_buff_get 0009  
                            _serial_peek 00D7                              _serial_read 0030  
                      ??i2_UART_buff_put 000A                 ?_FastTransfer_buffer_put 0021  
          __size_of_UART_buff_modulo_inc 002A                 __size_of_I2C1_Initialize 003C  
                        ??_UART_buff_get 0023                          ??_UART_buff_put 0024  
  FastTransfer_buffer_modulo_inc@modulus 001D                   crcBufS_status_put@time 001D  
                  TMR2_ISR@CountCallBack 00C3                          _TMR0_Initialize 2CDA  
              receiveData@crcHolder_2279 0140                 _I2C1_MasterWriteTRBBuild 29D6  
                      __CFG_T3CMX$PORTC0 000000                           _maxDataAddress 003A  
               __size_of_ReadButtonState 0116               __end_of_crcBufS_status_put 1EFE  
                  ??_EUSART1_Receive_ISR 000C           __end_of_PIN_MANAGER_Initialize 28FC  
       ??_FastTransfer_buffer_modulo_inc 001F          ?_FastTransfer_buffer_modulo_inc 001B  
                       ?_LEDwriteDisplay 0001                  __size_of_GetButtonState 0028  
                     __size_of_I2C1_Stop 0042                            _displaybuffer 0060  
                      __CFG_FOSC$INTIO67 000000                              _updateComms 2AD4  
