

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Fri Jun 17 05:19:00 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   102                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   103  0000                     
   104                           	psect	idataCOMRAM
   105  003060                     __pidataCOMRAM:
   106                           	opt stack 0
   107                           
   108                           ;initializer for _Transmit_stall
   109  003060  01                 	db	1
   110                           
   111                           	psect	mediumconst
   112  007CE2                     __pmediumconst:
   113                           	opt stack 0
   114  007CE2  00                 	db	0
   115  007CE3                     _OledFont:
   116                           	opt stack 0
   117  007CE3  00                 	db	0
   118  007CE4  00                 	db	0
   119  007CE5  00                 	db	0
   120  007CE6  00                 	db	0
   121  007CE7  00                 	db	0
   122  007CE8  00                 	db	0
   123  007CE9  00                 	db	0
   124  007CEA  00                 	db	0
   125  007CEB  00                 	db	0
   126  007CEC  00                 	db	0
   127  007CED  5F                 	db	95
   128  007CEE  00                 	db	0
   129  007CEF  00                 	db	0
   130  007CF0  00                 	db	0
   131  007CF1  00                 	db	0
   132  007CF2  00                 	db	0
   133  007CF3  00                 	db	0
   134  007CF4  00                 	db	0
   135  007CF5  07                 	db	7
   136  007CF6  00                 	db	0
   137  007CF7  07                 	db	7
   138  007CF8  00                 	db	0
   139  007CF9  00                 	db	0
   140  007CFA  00                 	db	0
   141  007CFB  00                 	db	0
   142  007CFC  14                 	db	20
   143  007CFD  7F                 	db	127
   144  007CFE  14                 	db	20
   145  007CFF  7F                 	db	127
   146  007D00  14                 	db	20
   147  007D01  00                 	db	0
   148  007D02  00                 	db	0
   149  007D03  00                 	db	0
   150  007D04  24                 	db	36
   151  007D05  2A                 	db	42
   152  007D06  7F                 	db	127
   153  007D07  2A                 	db	42
   154  007D08  12                 	db	18
   155  007D09  00                 	db	0
   156  007D0A  00                 	db	0
   157  007D0B  00                 	db	0
   158  007D0C  23                 	db	35
   159  007D0D  13                 	db	19
   160  007D0E  08                 	db	8
   161  007D0F  64                 	db	100
   162  007D10  62                 	db	98
   163  007D11  00                 	db	0
   164  007D12  00                 	db	0
   165  007D13  00                 	db	0
   166  007D14  36                 	db	54
   167  007D15  49                 	db	73
   168  007D16  55                 	db	85
   169  007D17  22                 	db	34
   170  007D18  50                 	db	80
   171  007D19  00                 	db	0
   172  007D1A  00                 	db	0
   173  007D1B  00                 	db	0
   174  007D1C  00                 	db	0
   175  007D1D  05                 	db	5
   176  007D1E  03                 	db	3
   177  007D1F  00                 	db	0
   178  007D20  00                 	db	0
   179  007D21  00                 	db	0
   180  007D22  00                 	db	0
   181  007D23  00                 	db	0
   182  007D24  1C                 	db	28
   183  007D25  22                 	db	34
   184  007D26  41                 	db	65
   185  007D27  00                 	db	0
   186  007D28  00                 	db	0
   187  007D29  00                 	db	0
   188  007D2A  00                 	db	0
   189  007D2B  00                 	db	0
   190  007D2C  41                 	db	65
   191  007D2D  22                 	db	34
   192  007D2E  1C                 	db	28
   193  007D2F  00                 	db	0
   194  007D30  00                 	db	0
   195  007D31  00                 	db	0
   196  007D32  00                 	db	0
   197  007D33  00                 	db	0
   198  007D34  08                 	db	8
   199  007D35  2A                 	db	42
   200  007D36  1C                 	db	28
   201  007D37  2A                 	db	42
   202  007D38  08                 	db	8
   203  007D39  00                 	db	0
   204  007D3A  00                 	db	0
   205  007D3B  00                 	db	0
   206  007D3C  08                 	db	8
   207  007D3D  08                 	db	8
   208  007D3E  3E                 	db	62
   209  007D3F  08                 	db	8
   210  007D40  08                 	db	8
   211  007D41  00                 	db	0
   212  007D42  00                 	db	0
   213  007D43  00                 	db	0
   214  007D44  A0                 	db	160
   215  007D45  60                 	db	96
   216  007D46  00                 	db	0
   217  007D47  00                 	db	0
   218  007D48  00                 	db	0
   219  007D49  00                 	db	0
   220  007D4A  00                 	db	0
   221  007D4B  00                 	db	0
   222  007D4C  08                 	db	8
   223  007D4D  08                 	db	8
   224  007D4E  08                 	db	8
   225  007D4F  08                 	db	8
   226  007D50  08                 	db	8
   227  007D51  00                 	db	0
   228  007D52  00                 	db	0
   229  007D53  00                 	db	0
   230  007D54  60                 	db	96
   231  007D55  60                 	db	96
   232  007D56  00                 	db	0
   233  007D57  00                 	db	0
   234  007D58  00                 	db	0
   235  007D59  00                 	db	0
   236  007D5A  00                 	db	0
   237  007D5B  00                 	db	0
   238  007D5C  20                 	db	32
   239  007D5D  10                 	db	16
   240  007D5E  08                 	db	8
   241  007D5F  04                 	db	4
   242  007D60  02                 	db	2
   243  007D61  00                 	db	0
   244  007D62  00                 	db	0
   245  007D63  00                 	db	0
   246  007D64  3E                 	db	62
   247  007D65  51                 	db	81
   248  007D66  49                 	db	73
   249  007D67  45                 	db	69
   250  007D68  3E                 	db	62
   251  007D69  00                 	db	0
   252  007D6A  00                 	db	0
   253  007D6B  00                 	db	0
   254  007D6C  00                 	db	0
   255  007D6D  42                 	db	66
   256  007D6E  7F                 	db	127
   257  007D6F  40                 	db	64
   258  007D70  00                 	db	0
   259  007D71  00                 	db	0
   260  007D72  00                 	db	0
   261  007D73  00                 	db	0
   262  007D74  62                 	db	98
   263  007D75  51                 	db	81
   264  007D76  49                 	db	73
   265  007D77  49                 	db	73
   266  007D78  46                 	db	70
   267  007D79  00                 	db	0
   268  007D7A  00                 	db	0
   269  007D7B  00                 	db	0
   270  007D7C  22                 	db	34
   271  007D7D  41                 	db	65
   272  007D7E  49                 	db	73
   273  007D7F  49                 	db	73
   274  007D80  36                 	db	54
   275  007D81  00                 	db	0
   276  007D82  00                 	db	0
   277  007D83  00                 	db	0
   278  007D84  18                 	db	24
   279  007D85  14                 	db	20
   280  007D86  12                 	db	18
   281  007D87  7F                 	db	127
   282  007D88  10                 	db	16
   283  007D89  00                 	db	0
   284  007D8A  00                 	db	0
   285  007D8B  00                 	db	0
   286  007D8C  27                 	db	39
   287  007D8D  45                 	db	69
   288  007D8E  45                 	db	69
   289  007D8F  45                 	db	69
   290  007D90  39                 	db	57
   291  007D91  00                 	db	0
   292  007D92  00                 	db	0
   293  007D93  00                 	db	0
   294  007D94  3C                 	db	60
   295  007D95  4A                 	db	74
   296  007D96  49                 	db	73
   297  007D97  49                 	db	73
   298  007D98  30                 	db	48
   299  007D99  00                 	db	0
   300  007D9A  00                 	db	0
   301  007D9B  00                 	db	0
   302  007D9C  01                 	db	1
   303  007D9D  71                 	db	113
   304  007D9E  09                 	db	9
   305  007D9F  05                 	db	5
   306  007DA0  03                 	db	3
   307  007DA1  00                 	db	0
   308  007DA2  00                 	db	0
   309  007DA3  00                 	db	0
   310  007DA4  36                 	db	54
   311  007DA5  49                 	db	73
   312  007DA6  49                 	db	73
   313  007DA7  49                 	db	73
   314  007DA8  36                 	db	54
   315  007DA9  00                 	db	0
   316  007DAA  00                 	db	0
   317  007DAB  00                 	db	0
   318  007DAC  06                 	db	6
   319  007DAD  49                 	db	73
   320  007DAE  49                 	db	73
   321  007DAF  29                 	db	41
   322  007DB0  1E                 	db	30
   323  007DB1  00                 	db	0
   324  007DB2  00                 	db	0
   325  007DB3  00                 	db	0
   326  007DB4  00                 	db	0
   327  007DB5  36                 	db	54
   328  007DB6  36                 	db	54
   329  007DB7  00                 	db	0
   330  007DB8  00                 	db	0
   331  007DB9  00                 	db	0
   332  007DBA  00                 	db	0
   333  007DBB  00                 	db	0
   334  007DBC  00                 	db	0
   335  007DBD  AC                 	db	172
   336  007DBE  6C                 	db	108
   337  007DBF  00                 	db	0
   338  007DC0  00                 	db	0
   339  007DC1  00                 	db	0
   340  007DC2  00                 	db	0
   341  007DC3  00                 	db	0
   342  007DC4  08                 	db	8
   343  007DC5  14                 	db	20
   344  007DC6  22                 	db	34
   345  007DC7  41                 	db	65
   346  007DC8  00                 	db	0
   347  007DC9  00                 	db	0
   348  007DCA  00                 	db	0
   349  007DCB  00                 	db	0
   350  007DCC  14                 	db	20
   351  007DCD  14                 	db	20
   352  007DCE  14                 	db	20
   353  007DCF  14                 	db	20
   354  007DD0  14                 	db	20
   355  007DD1  00                 	db	0
   356  007DD2  00                 	db	0
   357  007DD3  00                 	db	0
   358  007DD4  41                 	db	65
   359  007DD5  22                 	db	34
   360  007DD6  14                 	db	20
   361  007DD7  08                 	db	8
   362  007DD8  00                 	db	0
   363  007DD9  00                 	db	0
   364  007DDA  00                 	db	0
   365  007DDB  00                 	db	0
   366  007DDC  02                 	db	2
   367  007DDD  01                 	db	1
   368  007DDE  51                 	db	81
   369  007DDF  09                 	db	9
   370  007DE0  06                 	db	6
   371  007DE1  00                 	db	0
   372  007DE2  00                 	db	0
   373  007DE3  00                 	db	0
   374  007DE4  32                 	db	50
   375  007DE5  49                 	db	73
   376  007DE6  79                 	db	121
   377  007DE7  41                 	db	65
   378  007DE8  3E                 	db	62
   379  007DE9  00                 	db	0
   380  007DEA  00                 	db	0
   381  007DEB  00                 	db	0
   382  007DEC  7E                 	db	126
   383  007DED  09                 	db	9
   384  007DEE  09                 	db	9
   385  007DEF  09                 	db	9
   386  007DF0  7E                 	db	126
   387  007DF1  00                 	db	0
   388  007DF2  00                 	db	0
   389  007DF3  00                 	db	0
   390  007DF4  7F                 	db	127
   391  007DF5  49                 	db	73
   392  007DF6  49                 	db	73
   393  007DF7  49                 	db	73
   394  007DF8  36                 	db	54
   395  007DF9  00                 	db	0
   396  007DFA  00                 	db	0
   397  007DFB  00                 	db	0
   398  007DFC  3E                 	db	62
   399  007DFD  41                 	db	65
   400  007DFE  41                 	db	65
   401  007DFF  41                 	db	65
   402  007E00  22                 	db	34
   403  007E01  00                 	db	0
   404  007E02  00                 	db	0
   405  007E03  00                 	db	0
   406  007E04  7F                 	db	127
   407  007E05  41                 	db	65
   408  007E06  41                 	db	65
   409  007E07  22                 	db	34
   410  007E08  1C                 	db	28
   411  007E09  00                 	db	0
   412  007E0A  00                 	db	0
   413  007E0B  00                 	db	0
   414  007E0C  7F                 	db	127
   415  007E0D  49                 	db	73
   416  007E0E  49                 	db	73
   417  007E0F  49                 	db	73
   418  007E10  41                 	db	65
   419  007E11  00                 	db	0
   420  007E12  00                 	db	0
   421  007E13  00                 	db	0
   422  007E14  7F                 	db	127
   423  007E15  09                 	db	9
   424  007E16  09                 	db	9
   425  007E17  09                 	db	9
   426  007E18  01                 	db	1
   427  007E19  00                 	db	0
   428  007E1A  00                 	db	0
   429  007E1B  00                 	db	0
   430  007E1C  3E                 	db	62
   431  007E1D  41                 	db	65
   432  007E1E  41                 	db	65
   433  007E1F  51                 	db	81
   434  007E20  72                 	db	114
   435  007E21  00                 	db	0
   436  007E22  00                 	db	0
   437  007E23  00                 	db	0
   438  007E24  7F                 	db	127
   439  007E25  08                 	db	8
   440  007E26  08                 	db	8
   441  007E27  08                 	db	8
   442  007E28  7F                 	db	127
   443  007E29  00                 	db	0
   444  007E2A  00                 	db	0
   445  007E2B  00                 	db	0
   446  007E2C  41                 	db	65
   447  007E2D  7F                 	db	127
   448  007E2E  41                 	db	65
   449  007E2F  00                 	db	0
   450  007E30  00                 	db	0
   451  007E31  00                 	db	0
   452  007E32  00                 	db	0
   453  007E33  00                 	db	0
   454  007E34  20                 	db	32
   455  007E35  40                 	db	64
   456  007E36  41                 	db	65
   457  007E37  3F                 	db	63
   458  007E38  01                 	db	1
   459  007E39  00                 	db	0
   460  007E3A  00                 	db	0
   461  007E3B  00                 	db	0
   462  007E3C  7F                 	db	127
   463  007E3D  08                 	db	8
   464  007E3E  14                 	db	20
   465  007E3F  22                 	db	34
   466  007E40  41                 	db	65
   467  007E41  00                 	db	0
   468  007E42  00                 	db	0
   469  007E43  00                 	db	0
   470  007E44  7F                 	db	127
   471  007E45  40                 	db	64
   472  007E46  40                 	db	64
   473  007E47  40                 	db	64
   474  007E48  40                 	db	64
   475  007E49  00                 	db	0
   476  007E4A  00                 	db	0
   477  007E4B  00                 	db	0
   478  007E4C  7F                 	db	127
   479  007E4D  02                 	db	2
   480  007E4E  0C                 	db	12
   481  007E4F  02                 	db	2
   482  007E50  7F                 	db	127
   483  007E51  00                 	db	0
   484  007E52  00                 	db	0
   485  007E53  00                 	db	0
   486  007E54  7F                 	db	127
   487  007E55  04                 	db	4
   488  007E56  08                 	db	8
   489  007E57  10                 	db	16
   490  007E58  7F                 	db	127
   491  007E59  00                 	db	0
   492  007E5A  00                 	db	0
   493  007E5B  00                 	db	0
   494  007E5C  3E                 	db	62
   495  007E5D  41                 	db	65
   496  007E5E  41                 	db	65
   497  007E5F  41                 	db	65
   498  007E60  3E                 	db	62
   499  007E61  00                 	db	0
   500  007E62  00                 	db	0
   501  007E63  00                 	db	0
   502  007E64  7F                 	db	127
   503  007E65  09                 	db	9
   504  007E66  09                 	db	9
   505  007E67  09                 	db	9
   506  007E68  06                 	db	6
   507  007E69  00                 	db	0
   508  007E6A  00                 	db	0
   509  007E6B  00                 	db	0
   510  007E6C  3E                 	db	62
   511  007E6D  41                 	db	65
   512  007E6E  51                 	db	81
   513  007E6F  21                 	db	33
   514  007E70  5E                 	db	94
   515  007E71  00                 	db	0
   516  007E72  00                 	db	0
   517  007E73  00                 	db	0
   518  007E74  7F                 	db	127
   519  007E75  09                 	db	9
   520  007E76  19                 	db	25
   521  007E77  29                 	db	41
   522  007E78  46                 	db	70
   523  007E79  00                 	db	0
   524  007E7A  00                 	db	0
   525  007E7B  00                 	db	0
   526  007E7C  26                 	db	38
   527  007E7D  49                 	db	73
   528  007E7E  49                 	db	73
   529  007E7F  49                 	db	73
   530  007E80  32                 	db	50
   531  007E81  00                 	db	0
   532  007E82  00                 	db	0
   533  007E83  00                 	db	0
   534  007E84  01                 	db	1
   535  007E85  01                 	db	1
   536  007E86  7F                 	db	127
   537  007E87  01                 	db	1
   538  007E88  01                 	db	1
   539  007E89  00                 	db	0
   540  007E8A  00                 	db	0
   541  007E8B  00                 	db	0
   542  007E8C  3F                 	db	63
   543  007E8D  40                 	db	64
   544  007E8E  40                 	db	64
   545  007E8F  40                 	db	64
   546  007E90  3F                 	db	63
   547  007E91  00                 	db	0
   548  007E92  00                 	db	0
   549  007E93  00                 	db	0
   550  007E94  1F                 	db	31
   551  007E95  20                 	db	32
   552  007E96  40                 	db	64
   553  007E97  20                 	db	32
   554  007E98  1F                 	db	31
   555  007E99  00                 	db	0
   556  007E9A  00                 	db	0
   557  007E9B  00                 	db	0
   558  007E9C  3F                 	db	63
   559  007E9D  40                 	db	64
   560  007E9E  38                 	db	56
   561  007E9F  40                 	db	64
   562  007EA0  3F                 	db	63
   563  007EA1  00                 	db	0
   564  007EA2  00                 	db	0
   565  007EA3  00                 	db	0
   566  007EA4  63                 	db	99
   567  007EA5  14                 	db	20
   568  007EA6  08                 	db	8
   569  007EA7  14                 	db	20
   570  007EA8  63                 	db	99
   571  007EA9  00                 	db	0
   572  007EAA  00                 	db	0
   573  007EAB  00                 	db	0
   574  007EAC  03                 	db	3
   575  007EAD  04                 	db	4
   576  007EAE  78                 	db	120
   577  007EAF  04                 	db	4
   578  007EB0  03                 	db	3
   579  007EB1  00                 	db	0
   580  007EB2  00                 	db	0
   581  007EB3  00                 	db	0
   582  007EB4  61                 	db	97
   583  007EB5  51                 	db	81
   584  007EB6  49                 	db	73
   585  007EB7  45                 	db	69
   586  007EB8  43                 	db	67
   587  007EB9  00                 	db	0
   588  007EBA  00                 	db	0
   589  007EBB  00                 	db	0
   590  007EBC  7F                 	db	127
   591  007EBD  41                 	db	65
   592  007EBE  41                 	db	65
   593  007EBF  00                 	db	0
   594  007EC0  00                 	db	0
   595  007EC1  00                 	db	0
   596  007EC2  00                 	db	0
   597  007EC3  00                 	db	0
   598  007EC4  02                 	db	2
   599  007EC5  04                 	db	4
   600  007EC6  08                 	db	8
   601  007EC7  10                 	db	16
   602  007EC8  20                 	db	32
   603  007EC9  00                 	db	0
   604  007ECA  00                 	db	0
   605  007ECB  00                 	db	0
   606  007ECC  41                 	db	65
   607  007ECD  41                 	db	65
   608  007ECE  7F                 	db	127
   609  007ECF  00                 	db	0
   610  007ED0  00                 	db	0
   611  007ED1  00                 	db	0
   612  007ED2  00                 	db	0
   613  007ED3  00                 	db	0
   614  007ED4  04                 	db	4
   615  007ED5  02                 	db	2
   616  007ED6  01                 	db	1
   617  007ED7  02                 	db	2
   618  007ED8  04                 	db	4
   619  007ED9  00                 	db	0
   620  007EDA  00                 	db	0
   621  007EDB  00                 	db	0
   622  007EDC  80                 	db	128
   623  007EDD  80                 	db	128
   624  007EDE  80                 	db	128
   625  007EDF  80                 	db	128
   626  007EE0  80                 	db	128
   627  007EE1  00                 	db	0
   628  007EE2  00                 	db	0
   629  007EE3  00                 	db	0
   630  007EE4  01                 	db	1
   631  007EE5  02                 	db	2
   632  007EE6  04                 	db	4
   633  007EE7  00                 	db	0
   634  007EE8  00                 	db	0
   635  007EE9  00                 	db	0
   636  007EEA  00                 	db	0
   637  007EEB  00                 	db	0
   638  007EEC  20                 	db	32
   639  007EED  54                 	db	84
   640  007EEE  54                 	db	84
   641  007EEF  54                 	db	84
   642  007EF0  78                 	db	120
   643  007EF1  00                 	db	0
   644  007EF2  00                 	db	0
   645  007EF3  00                 	db	0
   646  007EF4  7F                 	db	127
   647  007EF5  48                 	db	72
   648  007EF6  44                 	db	68
   649  007EF7  44                 	db	68
   650  007EF8  38                 	db	56
   651  007EF9  00                 	db	0
   652  007EFA  00                 	db	0
   653  007EFB  00                 	db	0
   654  007EFC  38                 	db	56
   655  007EFD  44                 	db	68
   656  007EFE  44                 	db	68
   657  007EFF  28                 	db	40
   658  007F00  00                 	db	0
   659  007F01  00                 	db	0
   660  007F02  00                 	db	0
   661  007F03  00                 	db	0
   662  007F04  38                 	db	56
   663  007F05  44                 	db	68
   664  007F06  44                 	db	68
   665  007F07  48                 	db	72
   666  007F08  7F                 	db	127
   667  007F09  00                 	db	0
   668  007F0A  00                 	db	0
   669  007F0B  00                 	db	0
   670  007F0C  38                 	db	56
   671  007F0D  54                 	db	84
   672  007F0E  54                 	db	84
   673  007F0F  54                 	db	84
   674  007F10  18                 	db	24
   675  007F11  00                 	db	0
   676  007F12  00                 	db	0
   677  007F13  00                 	db	0
   678  007F14  08                 	db	8
   679  007F15  7E                 	db	126
   680  007F16  09                 	db	9
   681  007F17  02                 	db	2
   682  007F18  00                 	db	0
   683  007F19  00                 	db	0
   684  007F1A  00                 	db	0
   685  007F1B  00                 	db	0
   686  007F1C  18                 	db	24
   687  007F1D  A4                 	db	164
   688  007F1E  A4                 	db	164
   689  007F1F  A4                 	db	164
   690  007F20  7C                 	db	124
   691  007F21  00                 	db	0
   692  007F22  00                 	db	0
   693  007F23  00                 	db	0
   694  007F24  7F                 	db	127
   695  007F25  08                 	db	8
   696  007F26  04                 	db	4
   697  007F27  04                 	db	4
   698  007F28  78                 	db	120
   699  007F29  00                 	db	0
   700  007F2A  00                 	db	0
   701  007F2B  00                 	db	0
   702  007F2C  00                 	db	0
   703  007F2D  7D                 	db	125
   704  007F2E  00                 	db	0
   705  007F2F  00                 	db	0
   706  007F30  00                 	db	0
   707  007F31  00                 	db	0
   708  007F32  00                 	db	0
   709  007F33  00                 	db	0
   710  007F34  80                 	db	128
   711  007F35  84                 	db	132
   712  007F36  7D                 	db	125
   713  007F37  00                 	db	0
   714  007F38  00                 	db	0
   715  007F39  00                 	db	0
   716  007F3A  00                 	db	0
   717  007F3B  00                 	db	0
   718  007F3C  7F                 	db	127
   719  007F3D  10                 	db	16
   720  007F3E  28                 	db	40
   721  007F3F  44                 	db	68
   722  007F40  00                 	db	0
   723  007F41  00                 	db	0
   724  007F42  00                 	db	0
   725  007F43  00                 	db	0
   726  007F44  41                 	db	65
   727  007F45  7F                 	db	127
   728  007F46  40                 	db	64
   729  007F47  00                 	db	0
   730  007F48  00                 	db	0
   731  007F49  00                 	db	0
   732  007F4A  00                 	db	0
   733  007F4B  00                 	db	0
   734  007F4C  7C                 	db	124
   735  007F4D  04                 	db	4
   736  007F4E  18                 	db	24
   737  007F4F  04                 	db	4
   738  007F50  78                 	db	120
   739  007F51  00                 	db	0
   740  007F52  00                 	db	0
   741  007F53  00                 	db	0
   742  007F54  7C                 	db	124
   743  007F55  08                 	db	8
   744  007F56  04                 	db	4
   745  007F57  7C                 	db	124
   746  007F58  00                 	db	0
   747  007F59  00                 	db	0
   748  007F5A  00                 	db	0
   749  007F5B  00                 	db	0
   750  007F5C  38                 	db	56
   751  007F5D  44                 	db	68
   752  007F5E  44                 	db	68
   753  007F5F  38                 	db	56
   754  007F60  00                 	db	0
   755  007F61  00                 	db	0
   756  007F62  00                 	db	0
   757  007F63  00                 	db	0
   758  007F64  FC                 	db	252
   759  007F65  24                 	db	36
   760  007F66  24                 	db	36
   761  007F67  18                 	db	24
   762  007F68  00                 	db	0
   763  007F69  00                 	db	0
   764  007F6A  00                 	db	0
   765  007F6B  00                 	db	0
   766  007F6C  18                 	db	24
   767  007F6D  24                 	db	36
   768  007F6E  24                 	db	36
   769  007F6F  FC                 	db	252
   770  007F70  00                 	db	0
   771  007F71  00                 	db	0
   772  007F72  00                 	db	0
   773  007F73  00                 	db	0
   774  007F74  00                 	db	0
   775  007F75  7C                 	db	124
   776  007F76  08                 	db	8
   777  007F77  04                 	db	4
   778  007F78  00                 	db	0
   779  007F79  00                 	db	0
   780  007F7A  00                 	db	0
   781  007F7B  00                 	db	0
   782  007F7C  48                 	db	72
   783  007F7D  54                 	db	84
   784  007F7E  54                 	db	84
   785  007F7F  24                 	db	36
   786  007F80  00                 	db	0
   787  007F81  00                 	db	0
   788  007F82  00                 	db	0
   789  007F83  00                 	db	0
   790  007F84  04                 	db	4
   791  007F85  7F                 	db	127
   792  007F86  44                 	db	68
   793  007F87  00                 	db	0
   794  007F88  00                 	db	0
   795  007F89  00                 	db	0
   796  007F8A  00                 	db	0
   797  007F8B  00                 	db	0
   798  007F8C  3C                 	db	60
   799  007F8D  40                 	db	64
   800  007F8E  40                 	db	64
   801  007F8F  7C                 	db	124
   802  007F90  00                 	db	0
   803  007F91  00                 	db	0
   804  007F92  00                 	db	0
   805  007F93  00                 	db	0
   806  007F94  1C                 	db	28
   807  007F95  20                 	db	32
   808  007F96  40                 	db	64
   809  007F97  20                 	db	32
   810  007F98  1C                 	db	28
   811  007F99  00                 	db	0
   812  007F9A  00                 	db	0
   813  007F9B  00                 	db	0
   814  007F9C  3C                 	db	60
   815  007F9D  40                 	db	64
   816  007F9E  30                 	db	48
   817  007F9F  40                 	db	64
   818  007FA0  3C                 	db	60
   819  007FA1  00                 	db	0
   820  007FA2  00                 	db	0
   821  007FA3  00                 	db	0
   822  007FA4  44                 	db	68
   823  007FA5  28                 	db	40
   824  007FA6  10                 	db	16
   825  007FA7  28                 	db	40
   826  007FA8  44                 	db	68
   827  007FA9  00                 	db	0
   828  007FAA  00                 	db	0
   829  007FAB  00                 	db	0
   830  007FAC  1C                 	db	28
   831  007FAD  A0                 	db	160
   832  007FAE  A0                 	db	160
   833  007FAF  7C                 	db	124
   834  007FB0  00                 	db	0
   835  007FB1  00                 	db	0
   836  007FB2  00                 	db	0
   837  007FB3  00                 	db	0
   838  007FB4  44                 	db	68
   839  007FB5  64                 	db	100
   840  007FB6  54                 	db	84
   841  007FB7  4C                 	db	76
   842  007FB8  44                 	db	68
   843  007FB9  00                 	db	0
   844  007FBA  00                 	db	0
   845  007FBB  00                 	db	0
   846  007FBC  08                 	db	8
   847  007FBD  36                 	db	54
   848  007FBE  41                 	db	65
   849  007FBF  00                 	db	0
   850  007FC0  00                 	db	0
   851  007FC1  00                 	db	0
   852  007FC2  00                 	db	0
   853  007FC3  00                 	db	0
   854  007FC4  00                 	db	0
   855  007FC5  7F                 	db	127
   856  007FC6  00                 	db	0
   857  007FC7  00                 	db	0
   858  007FC8  00                 	db	0
   859  007FC9  00                 	db	0
   860  007FCA  00                 	db	0
   861  007FCB  00                 	db	0
   862  007FCC  41                 	db	65
   863  007FCD  36                 	db	54
   864  007FCE  08                 	db	8
   865  007FCF  00                 	db	0
   866  007FD0  00                 	db	0
   867  007FD1  00                 	db	0
   868  007FD2  00                 	db	0
   869  007FD3  00                 	db	0
   870  007FD4  02                 	db	2
   871  007FD5  01                 	db	1
   872  007FD6  01                 	db	1
   873  007FD7  02                 	db	2
   874  007FD8  01                 	db	1
   875  007FD9  00                 	db	0
   876  007FDA  00                 	db	0
   877  007FDB  00                 	db	0
   878  007FDC  02                 	db	2
   879  007FDD  05                 	db	5
   880  007FDE  05                 	db	5
   881  007FDF  02                 	db	2
   882  007FE0  00                 	db	0
   883  007FE1  00                 	db	0
   884  007FE2  00                 	db	0
   885  007FE3                     __end_of_OledFont:
   886                           	opt stack 0
   887  007FE3                     STR_1:
   888  007FE3  55                 	db	85	;'U'
   889  007FE4  6E                 	db	110	;'n'
   890  007FE5  69                 	db	105	;'i'
   891  007FE6  76                 	db	118	;'v'
   892  007FE7  65                 	db	101	;'e'
   893  007FE8  72                 	db	114	;'r'
   894  007FE9  73                 	db	115	;'s'
   895  007FEA  69                 	db	105	;'i'
   896  007FEB  74                 	db	116	;'t'
   897  007FEC  79                 	db	121	;'y'
   898  007FED  00                 	db	0
   899  007FEE                     STR_4:
   900  007FEE  5A                 	db	90	;'Z'
   901  007FEF  49                 	db	73	;'I'
   902  007FF0  50                 	db	80	;'P'
   903  007FF1  53                 	db	83	;'S'
   904  007FF2  2D                 	db	45
   905  007FF3  45                 	db	69	;'E'
   906  007FF4  56                 	db	86	;'V'
   907  007FF5  00                 	db	0
   908  007FF6                     STR_3:
   909  007FF6  41                 	db	65	;'A'
   910  007FF7  6B                 	db	107	;'k'
   911  007FF8  72                 	db	114	;'r'
   912  007FF9  6F                 	db	111	;'o'
   913  007FFA  6E                 	db	110	;'n'
   914  007FFB  00                 	db	0
   915  007FFC                     STR_2:
   916  007FFC  4F                 	db	79	;'O'
   917  007FFD  46                 	db	70	;'F'
   918  007FFE  00                 	db	0
   919  0000                     
   920                           ; #config settings
   921  007FFF  00                 	db	0	; dummy byte at the end
   922  0000                     
   923                           	psect	nvCOMRAM
   924  000042                     __pnvCOMRAM:
   925                           	opt stack 0
   926  000042                     _timer0ReloadVal16bit:
   927                           	opt stack 0
   928  000042                     	ds	2
   929                           
   930                           	psect	nvBANK0
   931  0000FE                     __pnvBANK0:
   932                           	opt stack 0
   933  0000FE                     _TMR2_InterruptHandler:
   934                           	opt stack 0
   935  0000FE                     	ds	2
   936  0000                     _ANSELA	set	3896
   937  0000                     _ANSELB	set	3897
   938  0000                     _ANSELC	set	3898
   939  0000                     _ANSELD	set	3899
   940  0000                     _ANSELE	set	3900
   941  0000                     _ADCON0	set	4034
   942  0000                     _ADCON0bits	set	4034
   943  0000                     _ADCON1	set	4033
   944  0000                     _ADCON2	set	4032
   945  0000                     _ADRESH	set	4036
   946  0000                     _ADRESL	set	4035
   947  0000                     _BAUD1CON	set	4024
   948  0000                     _INTCON2bits	set	4081
   949  0000                     _INTCONbits	set	4082
   950  0000                     _IPR1bits	set	3999
   951  0000                     _IPR2bits	set	4002
   952  0000                     _LATA	set	3977
   953  0000                     _LATB	set	3978
   954  0000                     _LATC	set	3979
   955  0000                     _LATCbits	set	3979
   956  0000                     _LATD	set	3980
   957  0000                     _LATE	set	3981
   958  0000                     _OSCCON	set	4051
   959  0000                     _OSCCON2	set	4050
   960  0000                     _OSCTUNE	set	3995
   961  0000                     _PIE1bits	set	3997
   962  0000                     _PIE2bits	set	4000
   963  0000                     _PIR1bits	set	3998
   964  0000                     _PIR2bits	set	4001
   965  0000                     _PORTAbits	set	3968
   966  0000                     _PORTBbits	set	3969
   967  0000                     _PORTDbits	set	3971
   968  0000                     _PR2	set	4027
   969  0000                     _RC1STA	set	4011
   970  0000                     _RC1STAbits	set	4011
   971  0000                     _RCONbits	set	4048
   972  0000                     _RCREG1	set	4014
   973  0000                     _SPBRG1	set	4015
   974  0000                     _SPBRGH1	set	4016
   975  0000                     _SSP1ADD	set	4040
   976  0000                     _SSP1BUF	set	4041
   977  0000                     _SSP1CON1	set	4038
   978  0000                     _SSP1CON1bits	set	4038
   979  0000                     _SSP1CON2bits	set	4037
   980  0000                     _SSP1CON3	set	4043
   981  0000                     _SSP1STAT	set	4039
   982  0000                     _T0CON	set	4053
   983  0000                     _T0CONbits	set	4053
   984  0000                     _T2CON	set	4026
   985  0000                     _T2CONbits	set	4026
   986  0000                     _TMR0H	set	4055
   987  0000                     _TMR0L	set	4054
   988  0000                     _TMR2	set	4028
   989  0000                     _TRISA	set	3986
   990  0000                     _TRISB	set	3987
   991  0000                     _TRISC	set	3988
   992  0000                     _TRISCbits	set	3988
   993  0000                     _TRISD	set	3989
   994  0000                     _TRISE	set	3990
   995  0000                     _TX1STA	set	4012
   996  0000                     _TXREG1	set	4013
   997  0000                     _WPUB	set	3937
   998  0000                     _LATA3	set	31819
   999  0000                     _LATA6	set	31822
  1000  0000                     _LATA7	set	31823
  1001  0000                     _LATC1	set	31833
  1002  0000                     _LATE0	set	31848
  1003  0000                     _LATE1	set	31849
  1004  0000                     _LATE2	set	31850
  1005                           
  1006                           	psect	cinit
  1007  002858                     __pcinit:
  1008                           	opt stack 0
  1009  002858                     start_initialization:
  1010                           	opt stack 0
  1011  002858                     __initialization:
  1012                           	opt stack 0
  1013                           
  1014                           ; Clear objects allocated to BANK5 (206 bytes)
  1015  002858  EE05  F000         	lfsr	0,__pbssBANK5
  1016  00285C  0ECE               	movlw	206
  1017  00285E                     clear_0:
  1018  00285E  6AEE               	clrf	postinc0,c
  1019  002860  06E8               	decf	wreg,f,c
  1020  002862  E1FD               	bnz	clear_0
  1021                           
  1022                           ; Clear objects allocated to BANK4 (206 bytes)
  1023  002864  EE04  F000         	lfsr	0,__pbssBANK4
  1024  002868  0ECE               	movlw	206
  1025  00286A                     clear_1:
  1026  00286A  6AEE               	clrf	postinc0,c
  1027  00286C  06E8               	decf	wreg,f,c
  1028  00286E  E1FD               	bnz	clear_1
  1029                           
  1030                           ; Clear objects allocated to BANK3 (200 bytes)
  1031  002870  EE03  F000         	lfsr	0,__pbssBANK3
  1032  002874  0EC8               	movlw	200
  1033  002876                     clear_2:
  1034  002876  6AEE               	clrf	postinc0,c
  1035  002878  06E8               	decf	wreg,f,c
  1036  00287A  E1FD               	bnz	clear_2
  1037                           
  1038                           ; Clear objects allocated to BANK2 (206 bytes)
  1039  00287C  EE02  F000         	lfsr	0,__pbssBANK2
  1040  002880  0ECE               	movlw	206
  1041  002882                     clear_3:
  1042  002882  6AEE               	clrf	postinc0,c
  1043  002884  06E8               	decf	wreg,f,c
  1044  002886  E1FD               	bnz	clear_3
  1045                           
  1046                           ; Clear objects allocated to BANK1 (57 bytes)
  1047  002888  EE01  F000         	lfsr	0,__pbssBANK1
  1048  00288C  0E39               	movlw	57
  1049  00288E                     clear_4:
  1050  00288E  6AEE               	clrf	postinc0,c
  1051  002890  06E8               	decf	wreg,f,c
  1052  002892  E1FD               	bnz	clear_4
  1053                           
  1054                           ; Clear objects allocated to BANK0 (148 bytes)
  1055  002894  EE00  F060         	lfsr	0,__pbssBANK0
  1056  002898  0E94               	movlw	148
  1057  00289A                     clear_5:
  1058  00289A  6AEE               	clrf	postinc0,c
  1059  00289C  06E8               	decf	wreg,f,c
  1060  00289E  E1FD               	bnz	clear_5
  1061                           
  1062                           ; Clear objects allocated to COMRAM (22 bytes)
  1063  0028A0  EE00  F02C         	lfsr	0,__pbssCOMRAM
  1064  0028A4  0E16               	movlw	22
  1065  0028A6                     clear_6:
  1066  0028A6  6AEE               	clrf	postinc0,c
  1067  0028A8  06E8               	decf	wreg,f,c
  1068  0028AA  E1FD               	bnz	clear_6
  1069                           
  1070                           ; Initialize objects allocated to COMRAM (1 bytes)
  1071                           ; load TBLPTR registers with __pidataCOMRAM
  1072  0028AC  0E60               	movlw	low __pidataCOMRAM
  1073  0028AE  6EF6               	movwf	tblptrl,c
  1074  0028B0  0E30               	movlw	high __pidataCOMRAM
  1075  0028B2  6EF7               	movwf	tblptrh,c
  1076  0028B4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1077  0028B6  6EF8               	movwf	tblptru,c
  1078  0028B8  0009               	tblrd		*+	;fetch initializer
  1079  0028BA  CFF5 F044          	movff	tablat,__pdataCOMRAM
  1080  0028BE                     end_of_initialization:
  1081                           	opt stack 0
  1082  0028BE                     __end_of__initialization:
  1083                           	opt stack 0
  1084  0028BE  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1085  0028C0  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1086  0028C2  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1087  0028C4  6EF8               	movwf	tblptru,c
  1088  0028C6  0100               	movlb	0
  1089  0028C8  EFA6  F00E         	goto	_main	;jump to C main() function
  1090                           tblptru	equ	0xFF8
  1091                           tblptrh	equ	0xFF7
  1092                           tblptrl	equ	0xFF6
  1093                           tablat	equ	0xFF5
  1094                           postinc0	equ	0xFEE
  1095                           wreg	equ	0xFE8
  1096                           
  1097                           	psect	bssCOMRAM
  1098  00002C                     __pbssCOMRAM:
  1099                           	opt stack 0
  1100  00002C                     _group:
  1101                           	opt stack 0
  1102  00002C                     	ds	2
  1103  00002E                     _serial_available:
  1104                           	opt stack 0
  1105  00002E                     	ds	2
  1106  000030                     _serial_read:
  1107                           	opt stack 0
  1108  000030                     	ds	2
  1109  000032                     _serial_write:
  1110                           	opt stack 0
  1111  000032                     	ds	2
  1112  000034                     I2C1_ISR@i2c_10bit_address_restart:
  1113                           	opt stack 0
  1114  000034                     	ds	1
  1115  000035                     I2C1_ISR@i2c_bytes_left:
  1116                           	opt stack 0
  1117  000035                     	ds	1
  1118  000036                     _AKNAKsend:
  1119                           	opt stack 0
  1120  000036                     	ds	1
  1121  000037                     _calc_CS:
  1122                           	opt stack 0
  1123  000037                     	ds	1
  1124  000038                     _i2c1_state:
  1125                           	opt stack 0
  1126  000038                     	ds	1
  1127  000039                     _i2c1_trb_count:
  1128                           	opt stack 0
  1129  000039                     	ds	1
  1130  00003A                     _maxDataAddress:
  1131                           	opt stack 0
  1132  00003A                     	ds	1
  1133  00003B                     _moduleAddress:
  1134                           	opt stack 0
  1135  00003B                     	ds	1
  1136  00003C                     _returnAddress:
  1137                           	opt stack 0
  1138  00003C                     	ds	1
  1139  00003D                     _rx_address:
  1140                           	opt stack 0
  1141  00003D                     	ds	1
  1142  00003E                     _rx_array_inx:
  1143                           	opt stack 0
  1144  00003E                     	ds	1
  1145  00003F                     _rx_len:
  1146                           	opt stack 0
  1147  00003F                     	ds	1
  1148  000040                     I2C1_ISR@i2c_address:
  1149                           	opt stack 0
  1150  000040                     	ds	2
  1151                           tblptru	equ	0xFF8
  1152                           tblptrh	equ	0xFF7
  1153                           tblptrl	equ	0xFF6
  1154                           tablat	equ	0xFF5
  1155                           postinc0	equ	0xFEE
  1156                           wreg	equ	0xFE8
  1157                           
  1158                           	psect	dataCOMRAM
  1159  000044                     __pdataCOMRAM:
  1160                           	opt stack 0
  1161  000044                     _Transmit_stall:
  1162                           	opt stack 0
  1163  000044                     	ds	1
  1164                           tblptru	equ	0xFF8
  1165                           tblptrh	equ	0xFF7
  1166                           tblptrl	equ	0xFF6
  1167                           tablat	equ	0xFF5
  1168                           postinc0	equ	0xFEE
  1169                           wreg	equ	0xFE8
  1170                           
  1171                           	psect	bssBANK0
  1172  000060                     __pbssBANK0:
  1173                           	opt stack 0
  1174  000060                     _displaybuffer:
  1175                           	opt stack 0
  1176  000060                     	ds	40
  1177  000088                     _LED_array:
  1178                           	opt stack 0
  1179  000088                     	ds	16
  1180  000098                     _LEDNUM_ENAB:
  1181                           	opt stack 0
  1182  000098                     	ds	12
  1183  0000A4                     _LEDState:
  1184                           	opt stack 0
  1185  0000A4                     	ds	12
  1186  0000B0                     _butnarray:
  1187                           	opt stack 0
  1188  0000B0                     	ds	8
  1189  0000B8                     _i2c1_object:
  1190                           	opt stack 0
  1191  0000B8                     	ds	7
  1192  0000BF                     I2C1_ISR@pi2c_buf_ptr:
  1193                           	opt stack 0
  1194  0000BF                     	ds	2
  1195  0000C1                     TMR0_ISR@CountCallBack:
  1196                           	opt stack 0
  1197  0000C1                     	ds	2
  1198  0000C3                     _addressErrorCounter:
  1199                           	opt stack 0
  1200  0000C3                     	ds	2
  1201  0000C5                     _alignErrorCounter:
  1202                           	opt stack 0
  1203  0000C5                     	ds	2
  1204  0000C7                     _brake:
  1205                           	opt stack 0
  1206  0000C7                     	ds	2
  1207  0000C9                     _crcErrorCounter:
  1208                           	opt stack 0
  1209  0000C9                     	ds	2
  1210  0000CB                     _dataAdressErrorCounter:
  1211                           	opt stack 0
  1212  0000CB                     	ds	2
  1213  0000CD                     _i:
  1214                           	opt stack 0
  1215  0000CD                     	ds	2
  1216  0000CF                     _k:
  1217                           	opt stack 0
  1218  0000CF                     	ds	2
  1219  0000D1                     _p_i2c1_current:
  1220                           	opt stack 0
  1221  0000D1                     	ds	2
  1222  0000D3                     _p_i2c1_trb_current:
  1223                           	opt stack 0
  1224  0000D3                     	ds	2
  1225  0000D5                     _receiveArrayAddress:
  1226                           	opt stack 0
  1227  0000D5                     	ds	2
  1228  0000D7                     _sendStructAddress:
  1229                           	opt stack 0
  1230  0000D7                     	ds	2
  1231  0000D9                     _serial_peek:
  1232                           	opt stack 0
  1233  0000D9                     	ds	2
  1234  0000DB                     _throttle:
  1235                           	opt stack 0
  1236  0000DB                     	ds	2
  1237  0000DD                     _time:
  1238                           	opt stack 0
  1239  0000DD                     	ds	2
  1240  0000DF                     _timeOut:
  1241                           	opt stack 0
  1242  0000DF                     	ds	2
  1243  0000E1                     handleIndicators@oldIndicators:
  1244                           	opt stack 0
  1245  0000E1                     	ds	2
  1246  0000E3                     I2C1_MasterRead@trBlock:
  1247                           	opt stack 0
  1248  0000E3                     	ds	5
  1249  0000E8                     I2C1_MasterWrite@trBlock:
  1250                           	opt stack 0
  1251  0000E8                     	ds	5
  1252  0000ED                     _i2c1_tr_queue:
  1253                           	opt stack 0
  1254  0000ED                     	ds	5
  1255  0000F2                     _Buff:
  1256                           	opt stack 0
  1257  0000F2                     	ds	2
  1258                           tblptru	equ	0xFF8
  1259                           tblptrh	equ	0xFF7
  1260                           tblptrl	equ	0xFF6
  1261                           tablat	equ	0xFF5
  1262                           postinc0	equ	0xFEE
  1263                           wreg	equ	0xFE8
  1264                           
  1265                           	psect	bssBANK1
  1266  000100                     __pbssBANK1:
  1267                           	opt stack 0
  1268  000100                     _receiveArray:
  1269                           	opt stack 0
  1270  000100                     	ds	40
  1271  000128                     _crc_buffer:
  1272                           	opt stack 0
  1273  000128                     	ds	17
  1274                           tblptru	equ	0xFF8
  1275                           tblptrh	equ	0xFF7
  1276                           tblptrl	equ	0xFF6
  1277                           tablat	equ	0xFF5
  1278                           postinc0	equ	0xFEE
  1279                           wreg	equ	0xFE8
  1280                           
  1281                           	psect	bssBANK2
  1282  000200                     __pbssBANK2:
  1283                           	opt stack 0
  1284  000200                     _ring_buffer:
  1285                           	opt stack 0
  1286  000200                     	ds	206
  1287                           tblptru	equ	0xFF8
  1288                           tblptrh	equ	0xFF7
  1289                           tblptrl	equ	0xFF6
  1290                           tablat	equ	0xFF5
  1291                           postinc0	equ	0xFEE
  1292                           wreg	equ	0xFE8
  1293                           
  1294                           	psect	bssBANK3
  1295  000300                     __pbssBANK3:
  1296                           	opt stack 0
  1297  000300                     _rx_buffer:
  1298                           	opt stack 0
  1299  000300                     	ds	200
  1300                           tblptru	equ	0xFF8
  1301                           tblptrh	equ	0xFF7
  1302                           tblptrl	equ	0xFF6
  1303                           tablat	equ	0xFF5
  1304                           postinc0	equ	0xFEE
  1305                           wreg	equ	0xFE8
  1306                           
  1307                           	psect	bssBANK4
  1308  000400                     __pbssBANK4:
  1309                           	opt stack 0
  1310  000400                     _input_buffer:
  1311                           	opt stack 0
  1312  000400                     	ds	206
  1313                           tblptru	equ	0xFF8
  1314                           tblptrh	equ	0xFF7
  1315                           tblptrl	equ	0xFF6
  1316                           tablat	equ	0xFF5
  1317                           postinc0	equ	0xFEE
  1318                           wreg	equ	0xFE8
  1319                           
  1320                           	psect	bssBANK5
  1321  000500                     __pbssBANK5:
  1322                           	opt stack 0
  1323  000500                     _output_buffer:
  1324                           	opt stack 0
  1325  000500                     	ds	206
  1326                           tblptru	equ	0xFF8
  1327                           tblptrh	equ	0xFF7
  1328                           tblptrl	equ	0xFF6
  1329                           tablat	equ	0xFF5
  1330                           postinc0	equ	0xFEE
  1331                           wreg	equ	0xFE8
  1332                           
  1333                           	psect	cstackBANK1
  1334  000139                     __pcstackBANK1:
  1335                           	opt stack 0
  1336  000139                     ??_LEDsetBar:
  1337  000139                     ??_receiveData:
  1338  000139                     ?___fttol:
  1339                           	opt stack 0
  1340  000139                     begin@ptr:
  1341                           	opt stack 0
  1342  000139                     LEDbegin@writeBuffer:
  1343                           	opt stack 0
  1344  000139                     ___fttol@f1:
  1345                           	opt stack 0
  1346  000139                     LEDwriteDisplay@writeBuffer:
  1347                           	opt stack 0
  1348                           
  1349                           ; 20 bytes @ 0x0
  1350  000139                     	ds	2
  1351  00013B                     begin@maxSize:
  1352                           	opt stack 0
  1353                           
  1354                           ; 1 bytes @ 0x2
  1355  00013B                     	ds	1
  1356  00013C                     begin@givenAddress:
  1357                           	opt stack 0
  1358  00013C                     LEDbegin@timeOut:
  1359                           	opt stack 0
  1360                           
  1361                           ; 2 bytes @ 0x3
  1362  00013C                     	ds	1
  1363  00013D                     ??___fttol:
  1364  00013D                     begin@error:
  1365                           	opt stack 0
  1366                           
  1367                           ; 1 bytes @ 0x4
  1368  00013D                     	ds	1
  1369  00013E                     LEDbegin@i2c_addr:
  1370                           	opt stack 0
  1371  00013E                     begin@stufftosend:
  1372                           	opt stack 0
  1373                           
  1374                           ; 2 bytes @ 0x5
  1375  00013E                     	ds	1
  1376  00013F                     LEDbegin@status:
  1377                           	opt stack 0
  1378  00013F                     receiveData@holder:
  1379                           	opt stack 0
  1380                           
  1381                           ; 3 bytes @ 0x6
  1382  00013F                     	ds	1
  1383  000140                     begin@stufftoreceive:
  1384                           	opt stack 0
  1385                           
  1386                           ; 2 bytes @ 0x7
  1387  000140                     	ds	2
  1388  000142                     ___fttol@sign1:
  1389                           	opt stack 0
  1390  000142                     begin@stuffavailable:
  1391                           	opt stack 0
  1392  000142                     receiveData@holder_2358:
  1393                           	opt stack 0
  1394                           
  1395                           ; 3 bytes @ 0x9
  1396  000142                     	ds	1
  1397  000143                     ___fttol@lval:
  1398                           	opt stack 0
  1399                           
  1400                           ; 4 bytes @ 0xA
  1401  000143                     	ds	1
  1402  000144                     begin@stuffpeek:
  1403                           	opt stack 0
  1404                           
  1405                           ; 2 bytes @ 0xB
  1406  000144                     	ds	1
  1407  000145                     receiveData@crcHolder:
  1408                           	opt stack 0
  1409                           
  1410                           ; 1 bytes @ 0xC
  1411  000145                     	ds	1
  1412  000146                     receiveData@crcHolder_2359:
  1413                           	opt stack 0
  1414                           
  1415                           ; 1 bytes @ 0xD
  1416  000146                     	ds	1
  1417  000147                     ___fttol@exp1:
  1418                           	opt stack 0
  1419  000147                     receiveData@u:
  1420                           	opt stack 0
  1421                           
  1422                           ; 2 bytes @ 0xE
  1423  000147                     	ds	2
  1424  000149                     LEDsetValue@value:
  1425                           	opt stack 0
  1426  000149                     receiveData@r:
  1427                           	opt stack 0
  1428                           
  1429                           ; 2 bytes @ 0x10
  1430  000149                     	ds	2
  1431  00014B                     LEDsetValue@color:
  1432                           	opt stack 0
  1433                           
  1434                           ; 2 bytes @ 0x12
  1435  00014B                     	ds	2
  1436  00014D                     LEDwriteDisplay@i2c_addr:
  1437                           	opt stack 0
  1438  00014D                     LEDsetValue@k:
  1439                           	opt stack 0
  1440                           
  1441                           ; 2 bytes @ 0x14
  1442  00014D                     	ds	1
  1443  00014E                     LEDwriteDisplay@timeOut:
  1444                           	opt stack 0
  1445                           
  1446                           ; 2 bytes @ 0x15
  1447  00014E                     	ds	2
  1448  000150                     LEDwriteDisplay@status:
  1449                           	opt stack 0
  1450                           
  1451                           ; 1 bytes @ 0x17
  1452  000150                     	ds	1
  1453  000151                     main@ADCNT:
  1454                           	opt stack 0
  1455                           
  1456                           ; 2 bytes @ 0x18
  1457  000151                     	ds	2
  1458                           tblptru	equ	0xFF8
  1459                           tblptrh	equ	0xFF7
  1460                           tblptrl	equ	0xFF6
  1461                           tablat	equ	0xFF5
  1462                           postinc0	equ	0xFEE
  1463                           wreg	equ	0xFE8
  1464                           
  1465                           	psect	cstackBANK0
  1466  0000F4                     __pcstackBANK0:
  1467                           	opt stack 0
  1468  0000F4                     ??___ftmul:
  1469  0000F4                     ToSend@where:
  1470                           	opt stack 0
  1471  0000F4                     CRCcheck@SentCRC:
  1472                           	opt stack 0
  1473  0000F4                     LEDBsetBrightness@b:
  1474                           	opt stack 0
  1475  0000F4                     LEDblinkRate@b:
  1476                           	opt stack 0
  1477                           
  1478                           ; 2 bytes @ 0x0
  1479  0000F4                     	ds	1
  1480  0000F5                     CRCcheck@calculatedCRC:
  1481                           	opt stack 0
  1482                           
  1483                           ; 1 bytes @ 0x1
  1484  0000F5                     	ds	1
  1485  0000F6                     LEDBsetBrightness@i2c_addr:
  1486                           	opt stack 0
  1487  0000F6                     LEDblinkRate@i2c_addr:
  1488                           	opt stack 0
  1489  0000F6                     CRCcheck@arrayHolder:
  1490                           	opt stack 0
  1491                           
  1492                           ; 3 bytes @ 0x2
  1493  0000F6                     	ds	1
  1494  0000F7                     ___ftmul@exp:
  1495                           	opt stack 0
  1496  0000F7                     LEDBsetBrightness@writeBuffer:
  1497                           	opt stack 0
  1498  0000F7                     LEDblinkRate@writeBuffer:
  1499                           	opt stack 0
  1500                           
  1501                           ; 2 bytes @ 0x3
  1502  0000F7                     	ds	1
  1503  0000F8                     ___ftmul@f3_as_product:
  1504                           	opt stack 0
  1505                           
  1506                           ; 3 bytes @ 0x4
  1507  0000F8                     	ds	1
  1508  0000F9                     LEDBsetBrightness@timeOut:
  1509                           	opt stack 0
  1510  0000F9                     LEDblinkRate@timeOut:
  1511                           	opt stack 0
  1512  0000F9                     CRCcheck@rt:
  1513                           	opt stack 0
  1514                           
  1515                           ; 2 bytes @ 0x5
  1516  0000F9                     	ds	2
  1517  0000FB                     LEDBsetBrightness@status:
  1518                           	opt stack 0
  1519  0000FB                     LEDblinkRate@status:
  1520                           	opt stack 0
  1521  0000FB                     ___ftmul@cntr:
  1522                           	opt stack 0
  1523                           
  1524                           ; 1 bytes @ 0x7
  1525  0000FB                     	ds	1
  1526  0000FC                     ___ftmul@sign:
  1527                           	opt stack 0
  1528                           
  1529                           ; 1 bytes @ 0x8
  1530  0000FC                     	ds	1
  1531  0000FD                     ??_LEDsetValue:
  1532                           
  1533                           ; 1 bytes @ 0x9
  1534  0000FD                     	ds	1
  1535                           tblptru	equ	0xFF8
  1536                           tblptrh	equ	0xFF7
  1537                           tblptrl	equ	0xFF6
  1538                           tablat	equ	0xFF5
  1539                           postinc0	equ	0xFEE
  1540                           wreg	equ	0xFE8
  1541                           
  1542                           	psect	cstackCOMRAM
  1543  000001                     __pcstackCOMRAM:
  1544                           	opt stack 0
  1545  000001                     ??_I2C1_Stop:
  1546  000001                     ??_TMR2_CallBack:
  1547  000001                     ?i2_UART_buff_size:
  1548                           	opt stack 0
  1549  000001                     ?i2_UART_buff_modulo_inc:
  1550                           	opt stack 0
  1551  000001                     ReadButtonState@btnnum:
  1552                           	opt stack 0
  1553  000001                     i2UART_buff_size@_this:
  1554                           	opt stack 0
  1555  000001                     i2UART_buff_modulo_inc@value:
  1556                           	opt stack 0
  1557                           
  1558                           ; 2 bytes @ 0x0
  1559  000001                     	ds	2
  1560  000003                     ??_ReadButtonState:
  1561  000003                     I2C1_Stop@completion_code:
  1562                           	opt stack 0
  1563  000003                     TMR2_CallBack@i:
  1564                           	opt stack 0
  1565  000003                     i2UART_buff_modulo_inc@modulus:
  1566                           	opt stack 0
  1567                           
  1568                           ; 2 bytes @ 0x2
  1569  000003                     	ds	1
  1570  000004                     ??_I2C1_ISR:
  1571                           
  1572                           ; 1 bytes @ 0x3
  1573  000004                     	ds	1
  1574  000005                     TMR0_ISR@x:
  1575                           	opt stack 0
  1576  000005                     i2UART_buff_modulo_inc@my_value:
  1577                           	opt stack 0
  1578                           
  1579                           ; 2 bytes @ 0x4
  1580  000005                     	ds	2
  1581  000007                     i2UART_buff_put@_this:
  1582                           	opt stack 0
  1583  000007                     i2UART_buff_get@_this:
  1584                           	opt stack 0
  1585                           
  1586                           ; 2 bytes @ 0x6
  1587  000007                     	ds	2
  1588  000009                     ??i2_UART_buff_get:
  1589  000009                     i2UART_buff_put@c:
  1590                           	opt stack 0
  1591                           
  1592                           ; 1 bytes @ 0x8
  1593  000009                     	ds	1
  1594  00000A                     ??i2_UART_buff_put:
  1595                           
  1596                           ; 1 bytes @ 0x9
  1597  00000A                     	ds	1
  1598  00000B                     i2UART_buff_get@c:
  1599                           	opt stack 0
  1600                           
  1601                           ; 1 bytes @ 0xA
  1602  00000B                     	ds	1
  1603  00000C                     EUSART1_Receive_ISR@data:
  1604                           	opt stack 0
  1605                           
  1606                           ; 1 bytes @ 0xB
  1607  00000C                     	ds	1
  1608  00000D                     ??_INTERRUPT_InterruptManager:
  1609                           
  1610                           ; 1 bytes @ 0xC
  1611  00000D                     	ds	14
  1612  00001B                     ?_FastTransfer_buffer_modulo_inc:
  1613                           	opt stack 0
  1614  00001B                     ?_UART_buff_modulo_inc:
  1615                           	opt stack 0
  1616  00001B                     ?_UART_buff_size:
  1617                           	opt stack 0
  1618  00001B                     ?___awdiv:
  1619                           	opt stack 0
  1620  00001B                     ?___ftpack:
  1621                           	opt stack 0
  1622  00001B                     I2C1_MasterTRBInsert@ptrb_list:
  1623                           	opt stack 0
  1624  00001B                     I2C1_MasterWriteTRBBuild@ptrb:
  1625                           	opt stack 0
  1626  00001B                     setLED@led:
  1627                           	opt stack 0
  1628  00001B                     Off_Led@led:
  1629                           	opt stack 0
  1630  00001B                     TMR2_SetInterruptHandler@InterruptHandler:
  1631                           	opt stack 0
  1632  00001B                     Delay@wait:
  1633                           	opt stack 0
  1634  00001B                     GetButtonState@btnnum:
  1635                           	opt stack 0
  1636  00001B                     TBbarGraphs@t:
  1637                           	opt stack 0
  1638  00001B                     CRC8@data:
  1639                           	opt stack 0
  1640  00001B                     FastTransfer_buffer_modulo_inc@value:
  1641                           	opt stack 0
  1642  00001B                     crcBufS_put@_this:
  1643                           	opt stack 0
  1644  00001B                     crcBufS_status_put@_this:
  1645                           	opt stack 0
  1646  00001B                     crcBufS_get@_this:
  1647                           	opt stack 0
  1648  00001B                     UART_buff_size@_this:
  1649                           	opt stack 0
  1650  00001B                     UART_buff_modulo_inc@value:
  1651                           	opt stack 0
  1652  00001B                     UART_buff_peek@_this:
  1653                           	opt stack 0
  1654  00001B                     ___awdiv@dividend:
  1655                           	opt stack 0
  1656  00001B                     memset@p1:
  1657                           	opt stack 0
  1658  00001B                     ___ftpack@arg:
  1659                           	opt stack 0
  1660                           
  1661                           ; 3 bytes @ 0x1A
  1662  00001B                     	ds	2
  1663  00001D                     ??_GetButtonState:
  1664  00001D                     ??_setLED:
  1665  00001D                     ??_Off_Led:
  1666  00001D                     ??_Delay:
  1667  00001D                     ??_UART_buff_peek:
  1668  00001D                     ?_Receive_available:
  1669                           	opt stack 0
  1670  00001D                     CRC8@len:
  1671                           	opt stack 0
  1672  00001D                     crcBufS_put@address:
  1673                           	opt stack 0
  1674  00001D                     crcBufS_status_put@time:
  1675                           	opt stack 0
  1676  00001D                     crcBufS_get@time:
  1677                           	opt stack 0
  1678  00001D                     I2C1_MasterTRBInsert@pflag:
  1679                           	opt stack 0
  1680  00001D                     I2C1_MasterWriteTRBBuild@pdata:
  1681                           	opt stack 0
  1682  00001D                     TBbarGraphs@b:
  1683                           	opt stack 0
  1684  00001D                     FastTransfer_buffer_modulo_inc@modulus:
  1685                           	opt stack 0
  1686  00001D                     UART_buff_modulo_inc@modulus:
  1687                           	opt stack 0
  1688  00001D                     ___awdiv@divisor:
  1689                           	opt stack 0
  1690  00001D                     memset@c:
  1691                           	opt stack 0
  1692                           
  1693                           ; 2 bytes @ 0x1C
  1694  00001D                     	ds	1
  1695  00001E                     CRC8@sum:
  1696                           	opt stack 0
  1697  00001E                     crcBufS_put@oldCRC:
  1698                           	opt stack 0
  1699  00001E                     crcBufS_status_put@status:
  1700                           	opt stack 0
  1701  00001E                     crcBufS_get@space:
  1702                           	opt stack 0
  1703  00001E                     ___ftpack@exp:
  1704                           	opt stack 0
  1705  00001E                     Delay@x:
  1706                           	opt stack 0
  1707                           
  1708                           ; 2 bytes @ 0x1D
  1709  00001E                     	ds	1
  1710  00001F                     ??_crcBufS_get:
  1711  00001F                     ??_crcBufS_status_put:
  1712  00001F                     I2C1_MasterWriteTRBBuild@length:
  1713                           	opt stack 0
  1714  00001F                     CRC8@extract:
  1715                           	opt stack 0
  1716  00001F                     crcBufS_put@status:
  1717                           	opt stack 0
  1718  00001F                     ___awdiv@counter:
  1719                           	opt stack 0
  1720  00001F                     ___ftpack@sign:
  1721                           	opt stack 0
  1722  00001F                     SetLEDOut@lednum:
  1723                           	opt stack 0
  1724  00001F                     FastTransfer_buffer_modulo_inc@my_value:
  1725                           	opt stack 0
  1726  00001F                     UART_buff_modulo_inc@my_value:
  1727                           	opt stack 0
  1728  00001F                     memset@n:
  1729                           	opt stack 0
  1730                           
  1731                           ; 2 bytes @ 0x1E
  1732  00001F                     	ds	1
  1733  000020                     ??_crcBufS_put:
  1734  000020                     ??___ftpack:
  1735  000020                     I2C1_MasterTRBInsert@count:
  1736                           	opt stack 0
  1737  000020                     CRC8@tempI:
  1738                           	opt stack 0
  1739  000020                     ___awdiv@sign:
  1740                           	opt stack 0
  1741  000020                     I2C1_MasterWriteTRBBuild@address:
  1742                           	opt stack 0
  1743                           
  1744                           ; 2 bytes @ 0x1F
  1745  000020                     	ds	1
  1746  000021                     ?_buttonsCollector:
  1747                           	opt stack 0
  1748  000021                     CRC8@crc:
  1749                           	opt stack 0
  1750  000021                     SetLEDOut@state:
  1751                           	opt stack 0
  1752  000021                     FastTransfer_buffer_put@_this:
  1753                           	opt stack 0
  1754  000021                     UART_buff_put@_this:
  1755                           	opt stack 0
  1756  000021                     UART_buff_get@_this:
  1757                           	opt stack 0
  1758  000021                     ___awdiv@quotient:
  1759                           	opt stack 0
  1760  000021                     memset@p:
  1761                           	opt stack 0
  1762                           
  1763                           ; 2 bytes @ 0x20
  1764  000021                     	ds	1
  1765  000022                     ??_I2C1_MasterWriteTRBBuild:
  1766                           
  1767                           ; 1 bytes @ 0x21
  1768  000022                     	ds	1
  1769  000023                     ??_buttonsCollector:
  1770  000023                     ??_SetLEDOut:
  1771  000023                     ??_UART_buff_get:
  1772  000023                     ?___lwtoft:
  1773                           	opt stack 0
  1774  000023                     FastTransfer_buffer_put@towhere:
  1775                           	opt stack 0
  1776  000023                     UART_buff_put@c:
  1777                           	opt stack 0
  1778  000023                     LEDsetBar@bar:
  1779                           	opt stack 0
  1780  000023                     FastTransfer_buffer_flush@_this:
  1781                           	opt stack 0
  1782  000023                     crcBufS_status_put@wantedTime:
  1783                           	opt stack 0
  1784  000023                     UART_buff_init@_this:
  1785                           	opt stack 0
  1786  000023                     ___lwtoft@c:
  1787                           	opt stack 0
  1788                           
  1789                           ; 2 bytes @ 0x22
  1790  000023                     	ds	1
  1791  000024                     ??_UART_buff_put:
  1792  000024                     I2C1_MasterWrite@pdata:
  1793                           	opt stack 0
  1794  000024                     FastTransfer_buffer_put@towhat:
  1795                           	opt stack 0
  1796                           
  1797                           ; 2 bytes @ 0x23
  1798  000024                     	ds	1
  1799  000025                     UART_buff_get@c:
  1800                           	opt stack 0
  1801  000025                     LEDsetBar@color:
  1802                           	opt stack 0
  1803  000025                     handleIndicators@receivedIndicators:
  1804                           	opt stack 0
  1805  000025                     FastTransfer_buffer_flush@clearBuffer:
  1806                           	opt stack 0
  1807  000025                     crcBufS_get@wantedTime:
  1808                           	opt stack 0
  1809                           
  1810                           ; 2 bytes @ 0x24
  1811  000025                     	ds	1
  1812  000026                     ??_FastTransfer_buffer_put:
  1813  000026                     ?___ftmul:
  1814                           	opt stack 0
  1815  000026                     I2C1_MasterWrite@length:
  1816                           	opt stack 0
  1817  000026                     Send_put@_data:
  1818                           	opt stack 0
  1819  000026                     buttonsCollector@sendVal:
  1820                           	opt stack 0
  1821  000026                     ___ftmul@f1:
  1822                           	opt stack 0
  1823                           
  1824                           ; 3 bytes @ 0x25
  1825  000026                     	ds	1
  1826  000027                     ??_handleIndicators:
  1827  000027                     ??_sendData:
  1828  000027                     I2C1_MasterWrite@address:
  1829                           	opt stack 0
  1830  000027                     LEDsetBar@c:
  1831                           	opt stack 0
  1832                           
  1833                           ; 2 bytes @ 0x26
  1834  000027                     	ds	1
  1835  000028                     sendData@whereToSend:
  1836                           	opt stack 0
  1837  000028                     buttonsCollector@i:
  1838                           	opt stack 0
  1839                           
  1840                           ; 2 bytes @ 0x27
  1841  000028                     	ds	1
  1842  000029                     sendData@CS:
  1843                           	opt stack 0
  1844  000029                     I2C1_MasterWrite@pflag:
  1845                           	opt stack 0
  1846  000029                     LEDsetBar@a:
  1847                           	opt stack 0
  1848  000029                     ___ftmul@f2:
  1849                           	opt stack 0
  1850                           
  1851                           ; 3 bytes @ 0x28
  1852  000029                     	ds	1
  1853  00002A                     handleIndicators@i:
  1854                           	opt stack 0
  1855  00002A                     sendData@i:
  1856                           	opt stack 0
  1857  00002A                     ToSend@what:
  1858                           	opt stack 0
  1859                           
  1860                           ; 2 bytes @ 0x29
  1861  00002A                     	ds	1
  1862  00002B                     
  1863                           ; 1 bytes @ 0x2A
  1864  00002B                     	ds	1
  1865  00002C                     tblptru	equ	0xFF8
  1866                           tblptrh	equ	0xFF7
  1867                           tblptrl	equ	0xFF6
  1868                           tablat	equ	0xFF5
  1869                           postinc0	equ	0xFEE
  1870                           wreg	equ	0xFE8
  1871                           
  1872                           ; 1 bytes @ 0x2B
  1873 ;;
  1874 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1875 ;;
  1876 ;; *************** function _main *****************
  1877 ;; Defined at:
  1878 ;;		line 32 in file "main.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;		None
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;  ADCNT           2   24[BANK1 ] int 
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      void 
  1885 ;; Registers used:
  1886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1892 ;;      Params:         0       0       0       0       0       0       0
  1893 ;;      Locals:         0       0       2       0       0       0       0
  1894 ;;      Temps:          0       0       0       0       0       0       0
  1895 ;;      Totals:         0       0       2       0       0       0       0
  1896 ;;Total ram usage:        2 bytes
  1897 ;; Hardware stack levels required when called:   10
  1898 ;; This function calls:
  1899 ;;		_GetButtonState
  1900 ;;		_LEDbegin
  1901 ;;		_LEDsetValue
  1902 ;;		_LEDwriteDisplay
  1903 ;;		_SYSTEM_Initialize
  1904 ;;		___ftmul
  1905 ;;		___fttol
  1906 ;;		___lwtoft
  1907 ;;		_updateComms
  1908 ;; This function is called by:
  1909 ;;		Startup code after reset
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           	psect	text0
  1914  001D4C                     __ptext0:
  1915                           	opt stack 0
  1916  001D4C                     _main:
  1917                           	opt stack 21
  1918                           
  1919                           ;main.c: 34: SYSTEM_Initialize();
  1920                           
  1921                           ;incstack = 0
  1922  001D4C  EC66  F014         	call	_SYSTEM_Initialize	;wreg free
  1923                           
  1924                           ;main.c: 53: (INTCONbits.GIE = 1);
  1925  001D50  8EF2               	bsf	intcon,7,c	;volatile
  1926                           
  1927                           ;main.c: 56: (INTCONbits.PEIE = 1);
  1928  001D52  8CF2               	bsf	intcon,6,c	;volatile
  1929                           
  1930                           ;main.c: 63: int ADCNT = 1;
  1931  001D54  0E00               	movlw	0
  1932  001D56  0101               	movlb	1	; () banked
  1933  001D58  6F52               	movwf	(main@ADCNT+1)& (0+255),b
  1934  001D5A  0E01               	movlw	1
  1935  001D5C  6F51               	movwf	main@ADCNT& (0+255),b
  1936                           
  1937                           ; BSR set to: 1
  1938                           ;main.c: 64: LEDbegin(0x70);
  1939  001D5E  0E70               	movlw	112
  1940  001D60  EC3B  F012         	call	_LEDbegin
  1941                           
  1942                           ;main.c: 65: LEDbegin(0x71);
  1943  001D64  0E71               	movlw	113
  1944  001D66  EC3B  F012         	call	_LEDbegin
  1945                           
  1946                           ;main.c: 66: do { LATA3 = 1; } while(0);
  1947  001D6A  8689               	bsf	3977,3,c	;volatile
  1948                           
  1949                           ;main.c: 67: LATCbits.LATC5 = 0;
  1950  001D6C  9A8B               	bcf	3979,5,c	;volatile
  1951  001D6E                     l7475:
  1952                           
  1953                           ;main.c: 69: updateComms();
  1954  001D6E  EC7C  F016         	call	_updateComms	;wreg free
  1955                           
  1956                           ;main.c: 75: if (time > 1) {
  1957  001D72  0100               	movlb	0	; () banked
  1958  001D74  51DE               	movf	(_time+1)& (0+255),w,b	;volatile
  1959  001D76  E105               	bnz	u8670
  1960  001D78  0E02               	movlw	2
  1961  001D7A  0100               	movlb	0	; () banked
  1962  001D7C  5DDD               	subwf	_time& (0+255),w,b	;volatile
  1963  001D7E  A0D8               	btfss	status,0,c
  1964  001D80  D059               	goto	l7483
  1965  001D82                     u8670:
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;main.c: 76: LEDsetValue((throttle)*(24.0 / 100.0), 1);
  1969  001D82  0EC3               	movlw	195
  1970  001D84  6E29               	movwf	___ftmul@f2,c
  1971  001D86  0E75               	movlw	117
  1972  001D88  6E2A               	movwf	___ftmul@f2+1,c
  1973  001D8A  0E3E               	movlw	62
  1974  001D8C  6E2B               	movwf	___ftmul@f2+2,c
  1975  001D8E  C0DB  F023         	movff	_throttle,___lwtoft@c
  1976  001D92  C0DC  F024         	movff	_throttle+1,___lwtoft@c+1
  1977  001D96  EC5E  F017         	call	___lwtoft	;wreg free
  1978  001D9A  C023  F026         	movff	?___lwtoft,___ftmul@f1
  1979  001D9E  C024  F027         	movff	?___lwtoft+1,___ftmul@f1+1
  1980  001DA2  C025  F028         	movff	?___lwtoft+2,___ftmul@f1+2
  1981  001DA6  ECD6  F00B         	call	___ftmul	;wreg free
  1982  001DAA  C026  F139         	movff	?___ftmul,___fttol@f1
  1983  001DAE  C027  F13A         	movff	?___ftmul+1,___fttol@f1+1
  1984  001DB2  C028  F13B         	movff	?___ftmul+2,___fttol@f1+2
  1985  001DB6  EC9C  F00A         	call	___fttol	;wreg free
  1986  001DBA  C139  F149         	movff	?___fttol,LEDsetValue@value
  1987  001DBE  C13A  F14A         	movff	?___fttol+1,LEDsetValue@value+1
  1988  001DC2  0E00               	movlw	0
  1989  001DC4  0101               	movlb	1	; () banked
  1990  001DC6  6F4C               	movwf	(LEDsetValue@color+1)& (0+255),b
  1991  001DC8  0E01               	movlw	1
  1992  001DCA  6F4B               	movwf	LEDsetValue@color& (0+255),b
  1993  001DCC  ECE9  F011         	call	_LEDsetValue	;wreg free
  1994                           
  1995                           ;main.c: 77: LEDwriteDisplay(0x70);
  1996  001DD0  0E70               	movlw	112
  1997  001DD2  EC6C  F00C         	call	_LEDwriteDisplay
  1998                           
  1999                           ;main.c: 78: LEDsetValue((brake)*(24.0 / 100.0), 1);
  2000  001DD6  0EC3               	movlw	195
  2001  001DD8  6E29               	movwf	___ftmul@f2,c
  2002  001DDA  0E75               	movlw	117
  2003  001DDC  6E2A               	movwf	___ftmul@f2+1,c
  2004  001DDE  0E3E               	movlw	62
  2005  001DE0  6E2B               	movwf	___ftmul@f2+2,c
  2006  001DE2  C0C7  F023         	movff	_brake,___lwtoft@c
  2007  001DE6  C0C8  F024         	movff	_brake+1,___lwtoft@c+1
  2008  001DEA  EC5E  F017         	call	___lwtoft	;wreg free
  2009  001DEE  C023  F026         	movff	?___lwtoft,___ftmul@f1
  2010  001DF2  C024  F027         	movff	?___lwtoft+1,___ftmul@f1+1
  2011  001DF6  C025  F028         	movff	?___lwtoft+2,___ftmul@f1+2
  2012  001DFA  ECD6  F00B         	call	___ftmul	;wreg free
  2013  001DFE  C026  F139         	movff	?___ftmul,___fttol@f1
  2014  001E02  C027  F13A         	movff	?___ftmul+1,___fttol@f1+1
  2015  001E06  C028  F13B         	movff	?___ftmul+2,___fttol@f1+2
  2016  001E0A  EC9C  F00A         	call	___fttol	;wreg free
  2017  001E0E  C139  F149         	movff	?___fttol,LEDsetValue@value
  2018  001E12  C13A  F14A         	movff	?___fttol+1,LEDsetValue@value+1
  2019  001E16  0E00               	movlw	0
  2020  001E18  0101               	movlb	1	; () banked
  2021  001E1A  6F4C               	movwf	(LEDsetValue@color+1)& (0+255),b
  2022  001E1C  0E01               	movlw	1
  2023  001E1E  6F4B               	movwf	LEDsetValue@color& (0+255),b
  2024  001E20  ECE9  F011         	call	_LEDsetValue	;wreg free
  2025                           
  2026                           ;main.c: 79: LEDwriteDisplay(0x71);
  2027  001E24  0E71               	movlw	113
  2028  001E26  EC6C  F00C         	call	_LEDwriteDisplay
  2029                           
  2030                           ;main.c: 81: time = 0;
  2031  001E2A  0E00               	movlw	0
  2032  001E2C  0100               	movlb	0	; () banked
  2033  001E2E  6FDE               	movwf	(_time+1)& (0+255),b	;volatile
  2034  001E30  0E00               	movlw	0
  2035  001E32  6FDD               	movwf	_time& (0+255),b	;volatile
  2036  001E34                     l7483:
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;main.c: 82: }
  2040                           ;main.c: 110: if(GetButtonState(4) == 0)
  2041  001E34  0E00               	movlw	0
  2042  001E36  6E1C               	movwf	GetButtonState@btnnum+1,c
  2043  001E38  0E04               	movlw	4
  2044  001E3A  6E1B               	movwf	GetButtonState@btnnum,c
  2045  001E3C  EC38  F017         	call	_GetButtonState	;wreg free
  2046  001E40  0900               	iorlw	0
  2047  001E42  A4D8               	btfss	status,2,c
  2048  001E44  D794               	goto	l7475
  2049                           
  2050                           ;main.c: 111: {
  2051                           ;main.c: 112: do { LATA3 = ~LATA3; } while(0);
  2052  001E46  B689               	btfsc	3977,3,c	;volatile
  2053  001E48  D002               	goto	u8690
  2054  001E4A  8689               	bsf	3977,3,c	;volatile
  2055  001E4C  D790               	goto	l7475
  2056  001E4E                     u8690:
  2057  001E4E  9689               	bcf	3977,3,c	;volatile
  2058  001E50  D78E               	goto	l7475
  2059  001E52                     __end_of_main:
  2060                           	opt stack 0
  2061                           tblptru	equ	0xFF8
  2062                           tblptrh	equ	0xFF7
  2063                           tblptrl	equ	0xFF6
  2064                           tablat	equ	0xFF5
  2065                           intcon	equ	0xFF2
  2066                           postinc0	equ	0xFEE
  2067                           wreg	equ	0xFE8
  2068                           status	equ	0xFD8
  2069                           
  2070 ;; *************** function _updateComms *****************
  2071 ;; Defined at:
  2072 ;;		line 8 in file "Communications.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;		None
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;		None
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  1    wreg      void 
  2079 ;; Registers used:
  2080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2086 ;;      Params:         0       0       0       0       0       0       0
  2087 ;;      Locals:         0       0       0       0       0       0       0
  2088 ;;      Temps:          0       0       0       0       0       0       0
  2089 ;;      Totals:         0       0       0       0       0       0       0
  2090 ;;Total ram usage:        0 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    9
  2093 ;; This function calls:
  2094 ;;		_TBbarGraphs
  2095 ;;		_handleIndicators
  2096 ;;		_receiveData
  2097 ;;		_respondECU
  2098 ;; This function is called by:
  2099 ;;		_main
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           	psect	text1
  2104  002CF8                     __ptext1:
  2105                           	opt stack 0
  2106  002CF8                     _updateComms:
  2107                           	opt stack 21
  2108                           
  2109                           ;Communications.c: 9: if (receiveData()) {
  2110                           
  2111                           ;incstack = 0
  2112  002CF8  EC6A  F000         	call	_receiveData	;wreg free
  2113  002CFC  0900               	iorlw	0
  2114  002CFE  B4D8               	btfsc	status,2,c
  2115  002D00  0012               	return	
  2116                           
  2117                           ;Communications.c: 12: respondECU();
  2118  002D02  ECDB  F015         	call	_respondECU	;wreg free
  2119                           
  2120                           ;Communications.c: 14: handleIndicators(receiveArray[2]);
  2121  002D06  C104  F025         	movff	_receiveArray+4,handleIndicators@receivedIndicators	;volatile
  2122  002D0A  C105  F026         	movff	_receiveArray+5,handleIndicators@receivedIndicators+1	;volatile
  2123  002D0E  ECF0  F013         	call	_handleIndicators	;wreg free
  2124                           
  2125                           ;Communications.c: 15: TBbarGraphs(receiveArray[3], receiveArray[4]);
  2126  002D12  C106  F01B         	movff	_receiveArray+6,TBbarGraphs@t	;volatile
  2127  002D16  C107  F01C         	movff	_receiveArray+7,TBbarGraphs@t+1	;volatile
  2128  002D1A  C108  F01D         	movff	_receiveArray+8,TBbarGraphs@b	;volatile
  2129  002D1E  C109  F01E         	movff	_receiveArray+9,TBbarGraphs@b+1	;volatile
  2130  002D22  ECF7  F017         	call	_TBbarGraphs	;wreg free
  2131                           
  2132                           ;Communications.c: 16: receiveArray[0] = 0;
  2133  002D26  0E00               	movlw	0
  2134  002D28  0101               	movlb	1	; () banked
  2135  002D2A  6F01               	movwf	(_receiveArray+1)& (0+255),b	;volatile
  2136  002D2C  0E00               	movlw	0
  2137  002D2E  6F00               	movwf	_receiveArray& (0+255),b	;volatile
  2138  002D30  0012               	return	
  2139  002D32                     __end_of_updateComms:
  2140                           	opt stack 0
  2141                           tblptru	equ	0xFF8
  2142                           tblptrh	equ	0xFF7
  2143                           tblptrl	equ	0xFF6
  2144                           tablat	equ	0xFF5
  2145                           intcon	equ	0xFF2
  2146                           postinc0	equ	0xFEE
  2147                           wreg	equ	0xFE8
  2148                           status	equ	0xFD8
  2149                           
  2150 ;; *************** function _respondECU *****************
  2151 ;; Defined at:
  2152 ;;		line 20 in file "Communications.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;		None
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;		None
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2166 ;;      Params:         0       0       0       0       0       0       0
  2167 ;;      Locals:         0       0       0       0       0       0       0
  2168 ;;      Temps:          0       0       0       0       0       0       0
  2169 ;;      Totals:         0       0       0       0       0       0       0
  2170 ;;Total ram usage:        0 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; Hardware stack levels required when called:    8
  2173 ;; This function calls:
  2174 ;;		_Delay
  2175 ;;		_ToSend
  2176 ;;		_buttonsCollector
  2177 ;;		_sendData
  2178 ;; This function is called by:
  2179 ;;		_updateComms
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           	psect	text2
  2184  002BB6                     __ptext2:
  2185                           	opt stack 0
  2186  002BB6                     _respondECU:
  2187                           	opt stack 21
  2188                           
  2189                           ;Communications.c: 21: LATCbits.LATC5 = 1;
  2190                           
  2191                           ;incstack = 0
  2192  002BB6  8A8B               	bsf	3979,5,c	;volatile
  2193                           
  2194                           ;Communications.c: 22: ToSend(0, 3);
  2195  002BB8  0E00               	movlw	0
  2196  002BBA  6E2B               	movwf	ToSend@what+1,c
  2197  002BBC  0E03               	movlw	3
  2198  002BBE  6E2A               	movwf	ToSend@what,c
  2199  002BC0  0E00               	movlw	0
  2200  002BC2  EC81  F017         	call	_ToSend
  2201                           
  2202                           ;Communications.c: 23: ToSend(8, buttonsCollector());
  2203  002BC6  ECA0  F014         	call	_buttonsCollector	;wreg free
  2204  002BCA  C021  F02A         	movff	?_buttonsCollector,ToSend@what
  2205  002BCE  C022  F02B         	movff	?_buttonsCollector+1,ToSend@what+1
  2206  002BD2  0E08               	movlw	8
  2207  002BD4  EC81  F017         	call	_ToSend
  2208                           
  2209                           ;Communications.c: 24: Delay(9);
  2210  002BD8  0E00               	movlw	0
  2211  002BDA  6E1C               	movwf	Delay@wait+1,c
  2212  002BDC  0E09               	movlw	9
  2213  002BDE  6E1B               	movwf	Delay@wait,c
  2214  002BE0  EC99  F016         	call	_Delay	;wreg free
  2215                           
  2216                           ;Communications.c: 25: sendData(1);
  2217  002BE4  0E01               	movlw	1
  2218  002BE6  EC3E  F00B         	call	_sendData
  2219                           
  2220                           ;Communications.c: 26: Delay(3);
  2221  002BEA  0E00               	movlw	0
  2222  002BEC  6E1C               	movwf	Delay@wait+1,c
  2223  002BEE  0E03               	movlw	3
  2224  002BF0  6E1B               	movwf	Delay@wait,c
  2225  002BF2  EC99  F016         	call	_Delay	;wreg free
  2226                           
  2227                           ;Communications.c: 27: LATCbits.LATC5 = 0;
  2228  002BF6  9A8B               	bcf	3979,5,c	;volatile
  2229  002BF8  0012               	return		;funcret
  2230  002BFA                     __end_of_respondECU:
  2231                           	opt stack 0
  2232                           tblptru	equ	0xFF8
  2233                           tblptrh	equ	0xFF7
  2234                           tblptrl	equ	0xFF6
  2235                           tablat	equ	0xFF5
  2236                           intcon	equ	0xFF2
  2237                           postinc0	equ	0xFEE
  2238                           wreg	equ	0xFE8
  2239                           status	equ	0xFD8
  2240                           
  2241 ;; *************** function _sendData *****************
  2242 ;; Defined at:
  2243 ;;		line 54 in file "FastTransfer.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;  whereToSend     1    wreg     unsigned char 
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;  whereToSend     1   39[COMRAM] unsigned char 
  2248 ;;  i               2   41[COMRAM] int 
  2249 ;;  CS              1   40[COMRAM] unsigned char 
  2250 ;; Return value:  Size  Location     Type
  2251 ;;                  1    wreg      void 
  2252 ;; Registers used:
  2253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2259 ;;      Params:         0       0       0       0       0       0       0
  2260 ;;      Locals:         4       0       0       0       0       0       0
  2261 ;;      Temps:          1       0       0       0       0       0       0
  2262 ;;      Totals:         5       0       0       0       0       0       0
  2263 ;;Total ram usage:        5 bytes
  2264 ;; Hardware stack levels used:    1
  2265 ;; Hardware stack levels required when called:    7
  2266 ;; This function calls:
  2267 ;;		Absolute function
  2268 ;;		_CRC8
  2269 ;;		_FastTransfer_buffer_flush
  2270 ;;		_Send_put
  2271 ;;		_crcBufS_put
  2272 ;; This function is called by:
  2273 ;;		_respondECU
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           	psect	text3
  2278  00167C                     __ptext3:
  2279                           	opt stack 0
  2280  00167C                     _sendData:
  2281                           	opt stack 21
  2282                           
  2283                           ;incstack = 0
  2284                           ;sendData@whereToSend stored from wreg
  2285  00167C  6E28               	movwf	sendData@whereToSend,c
  2286                           
  2287                           ;FastTransfer.c: 57: unsigned char CS = CRC8(sendStructAddress, ring_buffer.count);
  2288  00167E  C0D7  F01B         	movff	_sendStructAddress,CRC8@data
  2289  001682  C0D8  F01C         	movff	_sendStructAddress+1,CRC8@data+1
  2290  001686  C2CC  F01D         	movff	_ring_buffer+204,CRC8@len
  2291  00168A  ECB6  F015         	call	_CRC8	;wreg free
  2292  00168E  6E29               	movwf	sendData@CS,c
  2293                           
  2294                           ;FastTransfer.c: 59: serial_write(0x06);
  2295  001690  D801               	call	u6668
  2296  001692  D00B               	goto	l6405
  2297  001694                     u6668:
  2298  001694  0005               	push	
  2299  001696  6EFA               	movwf	pclath,c
  2300  001698  5032               	movf	_serial_write,w,c
  2301  00169A  6EFD               	movwf	tosl,c
  2302  00169C  5033               	movf	_serial_write+1,w,c
  2303  00169E  6EFE               	movwf	tosh,c
  2304  0016A0  50F8               	movf	tblptru,w,c
  2305  0016A2  6EFF               	movwf	tosu,c
  2306  0016A4  50FA               	movf	pclath,w,c
  2307  0016A6  0E06               	movlw	6
  2308  0016A8  0012               	return		;indir
  2309  0016AA                     l6405:
  2310                           
  2311                           ;FastTransfer.c: 60: serial_write(0x85);
  2312  0016AA  D801               	call	u6678
  2313  0016AC  D00B               	goto	l6407
  2314  0016AE                     u6678:
  2315  0016AE  0005               	push	
  2316  0016B0  6EFA               	movwf	pclath,c
  2317  0016B2  5032               	movf	_serial_write,w,c
  2318  0016B4  6EFD               	movwf	tosl,c
  2319  0016B6  5033               	movf	_serial_write+1,w,c
  2320  0016B8  6EFE               	movwf	tosh,c
  2321  0016BA  50F8               	movf	tblptru,w,c
  2322  0016BC  6EFF               	movwf	tosu,c
  2323  0016BE  50FA               	movf	pclath,w,c
  2324  0016C0  0E85               	movlw	133
  2325  0016C2  0012               	return		;indir
  2326  0016C4                     l6407:
  2327                           
  2328                           ;FastTransfer.c: 61: serial_write(whereToSend);
  2329  0016C4  D801               	call	u6688
  2330  0016C6  D00B               	goto	l6409
  2331  0016C8                     u6688:
  2332  0016C8  0005               	push	
  2333  0016CA  6EFA               	movwf	pclath,c
  2334  0016CC  5032               	movf	_serial_write,w,c
  2335  0016CE  6EFD               	movwf	tosl,c
  2336  0016D0  5033               	movf	_serial_write+1,w,c
  2337  0016D2  6EFE               	movwf	tosh,c
  2338  0016D4  50F8               	movf	tblptru,w,c
  2339  0016D6  6EFF               	movwf	tosu,c
  2340  0016D8  50FA               	movf	pclath,w,c
  2341  0016DA  5028               	movf	sendData@whereToSend,w,c
  2342  0016DC  0012               	return		;indir
  2343  0016DE                     l6409:
  2344                           
  2345                           ;FastTransfer.c: 62: serial_write(moduleAddress);
  2346  0016DE  D801               	call	u6698
  2347  0016E0  D00B               	goto	l6411
  2348  0016E2                     u6698:
  2349  0016E2  0005               	push	
  2350  0016E4  6EFA               	movwf	pclath,c
  2351  0016E6  5032               	movf	_serial_write,w,c
  2352  0016E8  6EFD               	movwf	tosl,c
  2353  0016EA  5033               	movf	_serial_write+1,w,c
  2354  0016EC  6EFE               	movwf	tosh,c
  2355  0016EE  50F8               	movf	tblptru,w,c
  2356  0016F0  6EFF               	movwf	tosu,c
  2357  0016F2  50FA               	movf	pclath,w,c
  2358  0016F4  503B               	movf	_moduleAddress,w,c
  2359  0016F6  0012               	return		;indir
  2360  0016F8                     l6411:
  2361                           
  2362                           ;FastTransfer.c: 63: serial_write(ring_buffer.count);
  2363  0016F8  D801               	call	u6708
  2364  0016FA  D00C               	goto	l6413
  2365  0016FC                     u6708:
  2366  0016FC  0005               	push	
  2367  0016FE  6EFA               	movwf	pclath,c
  2368  001700  5032               	movf	_serial_write,w,c
  2369  001702  6EFD               	movwf	tosl,c
  2370  001704  5033               	movf	_serial_write+1,w,c
  2371  001706  6EFE               	movwf	tosh,c
  2372  001708  50F8               	movf	tblptru,w,c
  2373  00170A  6EFF               	movwf	tosu,c
  2374  00170C  50FA               	movf	pclath,w,c
  2375  00170E  0102               	movlb	2	; () banked
  2376  001710  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  2377  001712  0012               	return		;indir
  2378  001714                     l6413:
  2379                           
  2380                           ;FastTransfer.c: 67: int i;
  2381                           ;FastTransfer.c: 68: for (i = 0; i < ring_buffer.count; i++) {
  2382  001714  0E00               	movlw	0
  2383  001716  6E2B               	movwf	sendData@i+1,c
  2384  001718  0E00               	movlw	0
  2385  00171A  6E2A               	movwf	sendData@i,c
  2386  00171C  D017               	goto	l6419
  2387  00171E                     l6415:
  2388                           
  2389                           ;FastTransfer.c: 69: serial_write(*(sendStructAddress + i));
  2390  00171E  D801               	call	u6718
  2391  001720  D013               	goto	l6417
  2392  001722                     u6718:
  2393  001722  0005               	push	
  2394  001724  6EFA               	movwf	pclath,c
  2395  001726  5032               	movf	_serial_write,w,c
  2396  001728  6EFD               	movwf	tosl,c
  2397  00172A  5033               	movf	_serial_write+1,w,c
  2398  00172C  6EFE               	movwf	tosh,c
  2399  00172E  50F8               	movf	tblptru,w,c
  2400  001730  6EFF               	movwf	tosu,c
  2401  001732  50FA               	movf	pclath,w,c
  2402  001734  502A               	movf	sendData@i,w,c
  2403  001736  0100               	movlb	0	; () banked
  2404  001738  25D7               	addwf	_sendStructAddress& (0+255),w,b
  2405  00173A  6ED9               	movwf	fsr2l,c
  2406  00173C  502B               	movf	sendData@i+1,w,c
  2407  00173E  0100               	movlb	0	; () banked
  2408  001740  21D8               	addwfc	(_sendStructAddress+1)& (0+255),w,b
  2409  001742  6EDA               	movwf	fsr2h,c
  2410  001744  50DF               	movf	indf2,w,c
  2411  001746  0012               	return		;indir
  2412  001748                     l6417:
  2413  001748  4A2A               	infsnz	sendData@i,f,c
  2414  00174A  2A2B               	incf	sendData@i+1,f,c
  2415  00174C                     l6419:
  2416  00174C  0102               	movlb	2	; () banked
  2417  00174E  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  2418  001750  5C2A               	subwf	sendData@i,w,c
  2419  001752  502B               	movf	sendData@i+1,w,c
  2420  001754  0A80               	xorlw	128
  2421  001756  6E27               	movwf	??_sendData& (0+255),c
  2422  001758  0102               	movlb	2	; () banked
  2423  00175A  51CD               	movf	(_ring_buffer+205)& (0+255),w,b
  2424  00175C  0A80               	xorlw	128
  2425  00175E  5827               	subwfb	??_sendData& (0+255),w,c
  2426  001760  A0D8               	btfss	status,0,c
  2427  001762  D7DD               	goto	l6415
  2428                           
  2429                           ; BSR set to: 2
  2430                           ;FastTransfer.c: 70: }
  2431                           ;FastTransfer.c: 73: serial_write(CS);
  2432                           
  2433                           ; BSR set to: 2
  2434  001764  D801               	call	u6738
  2435  001766  D00B               	goto	l6423
  2436  001768                     u6738:
  2437  001768  0005               	push	
  2438  00176A  6EFA               	movwf	pclath,c
  2439  00176C  5032               	movf	_serial_write,w,c
  2440  00176E  6EFD               	movwf	tosl,c
  2441  001770  5033               	movf	_serial_write+1,w,c
  2442  001772  6EFE               	movwf	tosh,c
  2443  001774  50F8               	movf	tblptru,w,c
  2444  001776  6EFF               	movwf	tosu,c
  2445  001778  50FA               	movf	pclath,w,c
  2446  00177A  5029               	movf	sendData@CS,w,c
  2447  00177C  0012               	return		;indir
  2448  00177E                     l6423:
  2449                           
  2450                           ;FastTransfer.c: 76: crcBufS_put(&crc_buffer, whereToSend, CS, 0);
  2451  00177E  0E28               	movlw	low _crc_buffer
  2452  001780  6E1B               	movwf	crcBufS_put@_this,c
  2453  001782  0E01               	movlw	high _crc_buffer
  2454  001784  6E1C               	movwf	crcBufS_put@_this+1,c
  2455  001786  C028  F01D         	movff	sendData@whereToSend,crcBufS_put@address
  2456  00178A  C029  F01E         	movff	sendData@CS,crcBufS_put@oldCRC
  2457  00178E  0E00               	movlw	0
  2458  001790  6E1F               	movwf	crcBufS_put@status,c
  2459  001792  EC9A  F00F         	call	_crcBufS_put
  2460                           
  2461                           ;FastTransfer.c: 79: FastTransfer_buffer_flush(&ring_buffer, 1);
  2462  001796  0E00               	movlw	low _ring_buffer
  2463  001798  6E23               	movwf	FastTransfer_buffer_flush@_this,c
  2464  00179A  0E02               	movlw	high _ring_buffer
  2465  00179C  6E24               	movwf	FastTransfer_buffer_flush@_this+1,c
  2466  00179E  0E00               	movlw	0
  2467  0017A0  6E26               	movwf	FastTransfer_buffer_flush@clearBuffer+1,c
  2468  0017A2  0E01               	movlw	1
  2469  0017A4  6E25               	movwf	FastTransfer_buffer_flush@clearBuffer,c
  2470  0017A6  ECD8  F014         	call	_FastTransfer_buffer_flush	;wreg free
  2471  0017AA  0012               	return		;funcret
  2472  0017AC                     __end_of_sendData:
  2473                           	opt stack 0
  2474                           tosu	equ	0xFFF
  2475                           tosh	equ	0xFFE
  2476                           tosl	equ	0xFFD
  2477                           pclath	equ	0xFFA
  2478                           tblptru	equ	0xFF8
  2479                           tblptrh	equ	0xFF7
  2480                           tblptrl	equ	0xFF6
  2481                           tablat	equ	0xFF5
  2482                           intcon	equ	0xFF2
  2483                           postinc0	equ	0xFEE
  2484                           wreg	equ	0xFE8
  2485                           indf2	equ	0xFDF
  2486                           fsr2h	equ	0xFDA
  2487                           fsr2l	equ	0xFD9
  2488                           status	equ	0xFD8
  2489                           
  2490 ;; *************** function _crcBufS_put *****************
  2491 ;; Defined at:
  2492 ;;		line 323 in file "FastTransfer.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  2495 ;;		 -> crc_buffer(17), 
  2496 ;;  address         1   28[COMRAM] unsigned char 
  2497 ;;  oldCRC          1   29[COMRAM] unsigned char 
  2498 ;;  status          1   30[COMRAM] unsigned char 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;		None
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2510 ;;      Params:         5       0       0       0       0       0       0
  2511 ;;      Locals:         0       0       0       0       0       0       0
  2512 ;;      Temps:          2       0       0       0       0       0       0
  2513 ;;      Totals:         7       0       0       0       0       0       0
  2514 ;;Total ram usage:        7 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    4
  2517 ;; This function calls:
  2518 ;;		Nothing
  2519 ;; This function is called by:
  2520 ;;		_sendData
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           	psect	text4
  2525  001F34                     __ptext4:
  2526                           	opt stack 0
  2527  001F34                     _crcBufS_put:
  2528                           	opt stack 23
  2529                           
  2530                           ;FastTransfer.c: 324: _this->buf[_this->head] = address;
  2531                           
  2532                           ;incstack = 0
  2533  001F34  EE20 F00F          	lfsr	2,15
  2534  001F38  501B               	movf	crcBufS_put@_this,w,c
  2535  001F3A  26D9               	addwf	fsr2l,f,c
  2536  001F3C  501C               	movf	crcBufS_put@_this+1,w,c
  2537  001F3E  22DA               	addwfc	fsr2h,f,c
  2538  001F40  CFDE F020          	movff	postinc2,??_crcBufS_put
  2539  001F44  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  2540  001F48  5020               	movf	??_crcBufS_put,w,c
  2541  001F4A  241B               	addwf	crcBufS_put@_this,w,c
  2542  001F4C  6ED9               	movwf	fsr2l,c
  2543  001F4E  5021               	movf	??_crcBufS_put+1,w,c
  2544  001F50  201C               	addwfc	crcBufS_put@_this+1,w,c
  2545  001F52  6EDA               	movwf	fsr2h,c
  2546  001F54  C01D  FFDF         	movff	crcBufS_put@address,indf2
  2547                           
  2548                           ;FastTransfer.c: 325: _this->head++;
  2549  001F58  EE20 F00F          	lfsr	2,15
  2550  001F5C  501B               	movf	crcBufS_put@_this,w,c
  2551  001F5E  26D9               	addwf	fsr2l,f,c
  2552  001F60  501C               	movf	crcBufS_put@_this+1,w,c
  2553  001F62  22DA               	addwfc	fsr2h,f,c
  2554  001F64  2ADE               	incf	postinc2,f,c
  2555  001F66  0E00               	movlw	0
  2556  001F68  22DD               	addwfc	postdec2,f,c
  2557                           
  2558                           ;FastTransfer.c: 326: _this->buf[_this->head] = oldCRC;
  2559  001F6A  EE20 F00F          	lfsr	2,15
  2560  001F6E  501B               	movf	crcBufS_put@_this,w,c
  2561  001F70  26D9               	addwf	fsr2l,f,c
  2562  001F72  501C               	movf	crcBufS_put@_this+1,w,c
  2563  001F74  22DA               	addwfc	fsr2h,f,c
  2564  001F76  CFDE F020          	movff	postinc2,??_crcBufS_put
  2565  001F7A  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  2566  001F7E  5020               	movf	??_crcBufS_put,w,c
  2567  001F80  241B               	addwf	crcBufS_put@_this,w,c
  2568  001F82  6ED9               	movwf	fsr2l,c
  2569  001F84  5021               	movf	??_crcBufS_put+1,w,c
  2570  001F86  201C               	addwfc	crcBufS_put@_this+1,w,c
  2571  001F88  6EDA               	movwf	fsr2h,c
  2572  001F8A  C01E  FFDF         	movff	crcBufS_put@oldCRC,indf2
  2573                           
  2574                           ;FastTransfer.c: 327: _this->head++;
  2575  001F8E  EE20 F00F          	lfsr	2,15
  2576  001F92  501B               	movf	crcBufS_put@_this,w,c
  2577  001F94  26D9               	addwf	fsr2l,f,c
  2578  001F96  501C               	movf	crcBufS_put@_this+1,w,c
  2579  001F98  22DA               	addwfc	fsr2h,f,c
  2580  001F9A  2ADE               	incf	postinc2,f,c
  2581  001F9C  0E00               	movlw	0
  2582  001F9E  22DD               	addwfc	postdec2,f,c
  2583                           
  2584                           ;FastTransfer.c: 328: _this->buf[_this->head] = status;
  2585  001FA0  EE20 F00F          	lfsr	2,15
  2586  001FA4  501B               	movf	crcBufS_put@_this,w,c
  2587  001FA6  26D9               	addwf	fsr2l,f,c
  2588  001FA8  501C               	movf	crcBufS_put@_this+1,w,c
  2589  001FAA  22DA               	addwfc	fsr2h,f,c
  2590  001FAC  CFDE F020          	movff	postinc2,??_crcBufS_put
  2591  001FB0  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  2592  001FB4  5020               	movf	??_crcBufS_put,w,c
  2593  001FB6  241B               	addwf	crcBufS_put@_this,w,c
  2594  001FB8  6ED9               	movwf	fsr2l,c
  2595  001FBA  5021               	movf	??_crcBufS_put+1,w,c
  2596  001FBC  201C               	addwfc	crcBufS_put@_this+1,w,c
  2597  001FBE  6EDA               	movwf	fsr2h,c
  2598  001FC0  C01F  FFDF         	movff	crcBufS_put@status,indf2
  2599                           
  2600                           ;FastTransfer.c: 329: _this->head++;
  2601  001FC4  EE20 F00F          	lfsr	2,15
  2602  001FC8  501B               	movf	crcBufS_put@_this,w,c
  2603  001FCA  26D9               	addwf	fsr2l,f,c
  2604  001FCC  501C               	movf	crcBufS_put@_this+1,w,c
  2605  001FCE  22DA               	addwfc	fsr2h,f,c
  2606  001FD0  2ADE               	incf	postinc2,f,c
  2607  001FD2  0E00               	movlw	0
  2608  001FD4  22DD               	addwfc	postdec2,f,c
  2609                           
  2610                           ;FastTransfer.c: 330: if (_this->head >= (5 * 3)) {
  2611  001FD6  EE20 F00F          	lfsr	2,15
  2612  001FDA  501B               	movf	crcBufS_put@_this,w,c
  2613  001FDC  26D9               	addwf	fsr2l,f,c
  2614  001FDE  501C               	movf	crcBufS_put@_this+1,w,c
  2615  001FE0  22DA               	addwfc	fsr2h,f,c
  2616  001FE2  0E01               	movlw	1
  2617  001FE4  BEDB               	btfsc	plusw2,7,c
  2618  001FE6  0012               	return	
  2619  001FE8  0E01               	movlw	1
  2620  001FEA  50DB               	movf	plusw2,w,c
  2621  001FEC  E104               	bnz	u6340
  2622  001FEE  0E0F               	movlw	15
  2623  001FF0  5CDE               	subwf	postinc2,w,c
  2624  001FF2  A0D8               	btfss	status,0,c
  2625  001FF4  0012               	return	
  2626  001FF6                     u6340:
  2627                           
  2628                           ;FastTransfer.c: 331: _this->head = 0;
  2629  001FF6  EE20 F00F          	lfsr	2,15
  2630  001FFA  501B               	movf	crcBufS_put@_this,w,c
  2631  001FFC  26D9               	addwf	fsr2l,f,c
  2632  001FFE  501C               	movf	crcBufS_put@_this+1,w,c
  2633  002000  22DA               	addwfc	fsr2h,f,c
  2634  002002  0E00               	movlw	0
  2635  002004  6EDE               	movwf	postinc2,c
  2636  002006  0E00               	movlw	0
  2637  002008  6EDD               	movwf	postdec2,c
  2638  00200A  0012               	return	
  2639  00200C                     __end_of_crcBufS_put:
  2640                           	opt stack 0
  2641                           tosu	equ	0xFFF
  2642                           tosh	equ	0xFFE
  2643                           tosl	equ	0xFFD
  2644                           pclath	equ	0xFFA
  2645                           tblptru	equ	0xFF8
  2646                           tblptrh	equ	0xFF7
  2647                           tblptrl	equ	0xFF6
  2648                           tablat	equ	0xFF5
  2649                           intcon	equ	0xFF2
  2650                           postinc0	equ	0xFEE
  2651                           wreg	equ	0xFE8
  2652                           indf2	equ	0xFDF
  2653                           postinc2	equ	0xFDE
  2654                           postdec2	equ	0xFDD
  2655                           plusw2	equ	0xFDB
  2656                           fsr2h	equ	0xFDA
  2657                           fsr2l	equ	0xFD9
  2658                           status	equ	0xFD8
  2659                           
  2660 ;; *************** function _FastTransfer_buffer_flush *****************
  2661 ;; Defined at:
  2662 ;;		line 263 in file "FastTransfer.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;  _this           2   34[COMRAM] PTR struct ringBufS
  2665 ;;		 -> ring_buffer(206), 
  2666 ;;  clearBuffer     2   36[COMRAM] const int 
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;		None
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  1    wreg      void 
  2671 ;; Registers used:
  2672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2678 ;;      Params:         4       0       0       0       0       0       0
  2679 ;;      Locals:         0       0       0       0       0       0       0
  2680 ;;      Temps:          0       0       0       0       0       0       0
  2681 ;;      Totals:         4       0       0       0       0       0       0
  2682 ;;Total ram usage:        4 bytes
  2683 ;; Hardware stack levels used:    1
  2684 ;; Hardware stack levels required when called:    5
  2685 ;; This function calls:
  2686 ;;		_memset
  2687 ;; This function is called by:
  2688 ;;		_sendData
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text5
  2693  0029B0                     __ptext5:
  2694                           	opt stack 0
  2695  0029B0                     _FastTransfer_buffer_flush:
  2696                           	opt stack 22
  2697                           
  2698                           ;FastTransfer.c: 264: _this->count = 0;
  2699                           
  2700                           ;incstack = 0
  2701  0029B0  EE20 F0CC          	lfsr	2,204
  2702  0029B4  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  2703  0029B6  26D9               	addwf	fsr2l,f,c
  2704  0029B8  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  2705  0029BA  22DA               	addwfc	fsr2h,f,c
  2706  0029BC  0E00               	movlw	0
  2707  0029BE  6EDE               	movwf	postinc2,c
  2708  0029C0  0E00               	movlw	0
  2709  0029C2  6EDD               	movwf	postdec2,c
  2710                           
  2711                           ;FastTransfer.c: 265: _this->head = 0;
  2712  0029C4  EE20 F0C8          	lfsr	2,200
  2713  0029C8  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  2714  0029CA  26D9               	addwf	fsr2l,f,c
  2715  0029CC  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  2716  0029CE  22DA               	addwfc	fsr2h,f,c
  2717  0029D0  0E00               	movlw	0
  2718  0029D2  6EDE               	movwf	postinc2,c
  2719  0029D4  0E00               	movlw	0
  2720  0029D6  6EDD               	movwf	postdec2,c
  2721                           
  2722                           ;FastTransfer.c: 266: _this->tail = 0;
  2723  0029D8  EE20 F0CA          	lfsr	2,202
  2724  0029DC  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  2725  0029DE  26D9               	addwf	fsr2l,f,c
  2726  0029E0  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  2727  0029E2  22DA               	addwfc	fsr2h,f,c
  2728  0029E4  0E00               	movlw	0
  2729  0029E6  6EDE               	movwf	postinc2,c
  2730  0029E8  0E00               	movlw	0
  2731  0029EA  6EDD               	movwf	postdec2,c
  2732                           
  2733                           ;FastTransfer.c: 267: if (clearBuffer) {
  2734  0029EC  5025               	movf	FastTransfer_buffer_flush@clearBuffer,w,c
  2735  0029EE  1026               	iorwf	FastTransfer_buffer_flush@clearBuffer+1,w,c
  2736  0029F0  B4D8               	btfsc	status,2,c
  2737  0029F2  0012               	return	
  2738                           
  2739                           ;FastTransfer.c: 268: memset(_this->buf, 0, sizeof (_this->buf));
  2740  0029F4  C023  F01B         	movff	FastTransfer_buffer_flush@_this,memset@p1
  2741  0029F8  C024  F01C         	movff	FastTransfer_buffer_flush@_this+1,memset@p1+1
  2742  0029FC  0E00               	movlw	0
  2743  0029FE  6E1E               	movwf	memset@c+1,c
  2744  002A00  0E00               	movlw	0
  2745  002A02  6E1D               	movwf	memset@c,c
  2746  002A04  0E00               	movlw	0
  2747  002A06  6E20               	movwf	memset@n+1,c
  2748  002A08  0EC8               	movlw	200
  2749  002A0A  6E1F               	movwf	memset@n,c
  2750  002A0C  ECE3  F016         	call	_memset	;wreg free
  2751  002A10  0012               	return	
  2752  002A12                     __end_of_FastTransfer_buffer_flush:
  2753                           	opt stack 0
  2754                           tosu	equ	0xFFF
  2755                           tosh	equ	0xFFE
  2756                           tosl	equ	0xFFD
  2757                           pclath	equ	0xFFA
  2758                           tblptru	equ	0xFF8
  2759                           tblptrh	equ	0xFF7
  2760                           tblptrl	equ	0xFF6
  2761                           tablat	equ	0xFF5
  2762                           intcon	equ	0xFF2
  2763                           postinc0	equ	0xFEE
  2764                           wreg	equ	0xFE8
  2765                           indf2	equ	0xFDF
  2766                           postinc2	equ	0xFDE
  2767                           postdec2	equ	0xFDD
  2768                           plusw2	equ	0xFDB
  2769                           fsr2h	equ	0xFDA
  2770                           fsr2l	equ	0xFD9
  2771                           status	equ	0xFD8
  2772                           
  2773 ;; *************** function _buttonsCollector *****************
  2774 ;; Defined at:
  2775 ;;		line 54 in file "Communications.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;		None
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;  i               2   39[COMRAM] int 
  2780 ;;  sendVal         2   37[COMRAM] unsigned int 
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  2   32[COMRAM] unsigned int 
  2783 ;; Registers used:
  2784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2790 ;;      Params:         2       0       0       0       0       0       0
  2791 ;;      Locals:         4       0       0       0       0       0       0
  2792 ;;      Temps:          3       0       0       0       0       0       0
  2793 ;;      Totals:         9       0       0       0       0       0       0
  2794 ;;Total ram usage:        9 bytes
  2795 ;; Hardware stack levels used:    1
  2796 ;; Hardware stack levels required when called:    5
  2797 ;; This function calls:
  2798 ;;		_GetButtonState
  2799 ;; This function is called by:
  2800 ;;		_respondECU
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text6
  2805  002940                     __ptext6:
  2806                           	opt stack 0
  2807  002940                     _buttonsCollector:
  2808                           	opt stack 23
  2809                           
  2810                           ;Communications.c: 55: unsigned int sendVal = 0;
  2811                           
  2812                           ;incstack = 0
  2813  002940  0E00               	movlw	0
  2814  002942  6E27               	movwf	buttonsCollector@sendVal+1,c
  2815  002944  0E00               	movlw	0
  2816  002946  6E26               	movwf	buttonsCollector@sendVal,c
  2817                           
  2818                           ;Communications.c: 56: int i = 0;
  2819  002948  0E00               	movlw	0
  2820  00294A  6E29               	movwf	buttonsCollector@i+1,c
  2821  00294C  0E00               	movlw	0
  2822  00294E  6E28               	movwf	buttonsCollector@i,c
  2823                           
  2824                           ;Communications.c: 57: for (i = 0; i < 8; i++) {
  2825  002950  0E00               	movlw	0
  2826  002952  6E29               	movwf	buttonsCollector@i+1,c
  2827  002954  0E00               	movlw	0
  2828  002956  6E28               	movwf	buttonsCollector@i,c
  2829  002958  BE29               	btfsc	buttonsCollector@i+1,7,c
  2830  00295A  D006               	goto	l6395
  2831  00295C  5029               	movf	buttonsCollector@i+1,w,c
  2832  00295E  E123               	bnz	l935
  2833  002960  0E08               	movlw	8
  2834  002962  5C28               	subwf	buttonsCollector@i,w,c
  2835  002964  B0D8               	btfsc	status,0,c
  2836  002966  D01F               	goto	l935
  2837  002968                     l6395:
  2838                           
  2839                           ;Communications.c: 58: sendVal = sendVal | ((GetButtonState(i)&0x01) << i);
  2840  002968  C028  F023         	movff	buttonsCollector@i,??_buttonsCollector
  2841  00296C  C028  F01B         	movff	buttonsCollector@i,GetButtonState@btnnum
  2842  002970  C029  F01C         	movff	buttonsCollector@i+1,GetButtonState@btnnum+1
  2843  002974  EC38  F017         	call	_GetButtonState	;wreg free
  2844  002978  0B01               	andlw	1
  2845  00297A  6E24               	movwf	(??_buttonsCollector+1)& (0+255),c
  2846  00297C  6A25               	clrf	(??_buttonsCollector+2)& (0+255),c
  2847  00297E  2A23               	incf	??_buttonsCollector,f,c
  2848  002980  D003               	goto	u6644
  2849  002982                     u6645:
  2850  002982  90D8               	bcf	status,0,c
  2851  002984  3624               	rlcf	??_buttonsCollector+1,f,c
  2852  002986  3625               	rlcf	??_buttonsCollector+2,f,c
  2853  002988                     u6644:
  2854  002988  2E23               	decfsz	??_buttonsCollector,f,c
  2855  00298A  D7FB               	goto	u6645
  2856  00298C  5026               	movf	buttonsCollector@sendVal,w,c
  2857  00298E  1024               	iorwf	??_buttonsCollector+1,w,c
  2858  002990  6E26               	movwf	buttonsCollector@sendVal,c
  2859  002992  5027               	movf	buttonsCollector@sendVal+1,w,c
  2860  002994  1025               	iorwf	??_buttonsCollector+2,w,c
  2861  002996  6E27               	movwf	buttonsCollector@sendVal+1,c
  2862  002998  4A28               	infsnz	buttonsCollector@i,f,c
  2863  00299A  2A29               	incf	buttonsCollector@i+1,f,c
  2864  00299C  BE29               	btfsc	buttonsCollector@i+1,7,c
  2865  00299E  D7E4               	goto	l6395
  2866  0029A0  5029               	movf	buttonsCollector@i+1,w,c
  2867  0029A2  E101               	bnz	u6650
  2868  0029A4  D7DD               	goto	L1
  2869  0029A6                     u6650:
  2870  0029A6                     l935:
  2871                           
  2872                           ;Communications.c: 59: }
  2873                           ;Communications.c: 60: return sendVal;
  2874  0029A6  C026  F021         	movff	buttonsCollector@sendVal,?_buttonsCollector
  2875  0029AA  C027  F022         	movff	buttonsCollector@sendVal+1,?_buttonsCollector+1
  2876  0029AE  0012               	return		;funcret
  2877  0029B0                     __end_of_buttonsCollector:
  2878                           	opt stack 0
  2879                           tosu	equ	0xFFF
  2880                           tosh	equ	0xFFE
  2881                           tosl	equ	0xFFD
  2882                           pclath	equ	0xFFA
  2883                           tblptru	equ	0xFF8
  2884                           tblptrh	equ	0xFF7
  2885                           tblptrl	equ	0xFF6
  2886                           tablat	equ	0xFF5
  2887                           intcon	equ	0xFF2
  2888                           postinc0	equ	0xFEE
  2889                           wreg	equ	0xFE8
  2890                           indf2	equ	0xFDF
  2891                           postinc2	equ	0xFDE
  2892                           postdec2	equ	0xFDD
  2893                           plusw2	equ	0xFDB
  2894                           fsr2h	equ	0xFDA
  2895                           fsr2l	equ	0xFD9
  2896                           status	equ	0xFD8
  2897                           
  2898 ;; *************** function _GetButtonState *****************
  2899 ;; Defined at:
  2900 ;;		line 184 in file "IO.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  btnnum          2   26[COMRAM] int 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;		None
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  1    wreg      unsigned char 
  2907 ;; Registers used:
  2908 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2914 ;;      Params:         2       0       0       0       0       0       0
  2915 ;;      Locals:         0       0       0       0       0       0       0
  2916 ;;      Temps:          4       0       0       0       0       0       0
  2917 ;;      Totals:         6       0       0       0       0       0       0
  2918 ;;Total ram usage:        6 bytes
  2919 ;; Hardware stack levels used:    1
  2920 ;; Hardware stack levels required when called:    4
  2921 ;; This function calls:
  2922 ;;		Nothing
  2923 ;; This function is called by:
  2924 ;;		_main
  2925 ;;		_buttonsCollector
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           	psect	text7
  2930  002E70                     __ptext7:
  2931                           	opt stack 0
  2932  002E70                     _GetButtonState:
  2933                           	opt stack 23
  2934                           
  2935                           ;IO.c: 185: return butnarray[btnnum - 1];
  2936                           
  2937                           ;incstack = 0
  2938  002E70  0EFF               	movlw	255
  2939  002E72  6E1D               	movwf	??_GetButtonState& (0+255),c
  2940  002E74  0EFF               	movlw	255
  2941  002E76  6E1E               	movwf	(??_GetButtonState+1)& (0+255),c
  2942  002E78  C01B  F01F         	movff	GetButtonState@btnnum,??_GetButtonState+2
  2943  002E7C  C01C  F020         	movff	GetButtonState@btnnum+1,??_GetButtonState+3
  2944  002E80  501D               	movf	??_GetButtonState,w,c
  2945  002E82  261F               	addwf	??_GetButtonState+2,f,c
  2946  002E84  501E               	movf	??_GetButtonState+1,w,c
  2947  002E86  2220               	addwfc	??_GetButtonState+3,f,c
  2948  002E88  0EB0               	movlw	low _butnarray
  2949  002E8A  241F               	addwf	??_GetButtonState+2,w,c
  2950  002E8C  6ED9               	movwf	fsr2l,c
  2951  002E8E  0E00               	movlw	high _butnarray
  2952  002E90  2020               	addwfc	??_GetButtonState+3,w,c
  2953  002E92  6EDA               	movwf	fsr2h,c
  2954  002E94  50DF               	movf	indf2,w,c
  2955  002E96  0012               	return	
  2956  002E98                     __end_of_GetButtonState:
  2957                           	opt stack 0
  2958                           tosu	equ	0xFFF
  2959                           tosh	equ	0xFFE
  2960                           tosl	equ	0xFFD
  2961                           pclath	equ	0xFFA
  2962                           tblptru	equ	0xFF8
  2963                           tblptrh	equ	0xFF7
  2964                           tblptrl	equ	0xFF6
  2965                           tablat	equ	0xFF5
  2966                           intcon	equ	0xFF2
  2967                           postinc0	equ	0xFEE
  2968                           wreg	equ	0xFE8
  2969                           indf2	equ	0xFDF
  2970                           postinc2	equ	0xFDE
  2971                           postdec2	equ	0xFDD
  2972                           plusw2	equ	0xFDB
  2973                           fsr2h	equ	0xFDA
  2974                           fsr2l	equ	0xFD9
  2975                           status	equ	0xFD8
  2976                           
  2977 ;; *************** function _ToSend *****************
  2978 ;; Defined at:
  2979 ;;		line 218 in file "FastTransfer.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;  where           1    wreg     unsigned char 
  2982 ;;  what            2   41[COMRAM] unsigned int 
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;  where           1    0[BANK0 ] unsigned char 
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  1    wreg      void 
  2987 ;; Registers used:
  2988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2994 ;;      Params:         2       0       0       0       0       0       0
  2995 ;;      Locals:         0       1       0       0       0       0       0
  2996 ;;      Temps:          0       0       0       0       0       0       0
  2997 ;;      Totals:         2       1       0       0       0       0       0
  2998 ;;Total ram usage:        3 bytes
  2999 ;; Hardware stack levels used:    1
  3000 ;; Hardware stack levels required when called:    6
  3001 ;; This function calls:
  3002 ;;		_FastTransfer_buffer_put
  3003 ;; This function is called by:
  3004 ;;		_respondECU
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           	psect	text8
  3009  002F02                     __ptext8:
  3010                           	opt stack 0
  3011  002F02                     _ToSend:
  3012                           	opt stack 22
  3013                           
  3014                           ;incstack = 0
  3015                           ;ToSend@where stored from wreg
  3016  002F02  0100               	movlb	0	; () banked
  3017  002F04  6FF4               	movwf	ToSend@where& (0+255),b
  3018                           
  3019                           ;FastTransfer.c: 219: FastTransfer_buffer_put(&ring_buffer, where, what);
  3020  002F06  0E00               	movlw	low _ring_buffer
  3021  002F08  6E21               	movwf	FastTransfer_buffer_put@_this,c
  3022  002F0A  0E02               	movlw	high _ring_buffer
  3023  002F0C  6E22               	movwf	FastTransfer_buffer_put@_this+1,c
  3024  002F0E  C0F4  F023         	movff	ToSend@where,FastTransfer_buffer_put@towhere
  3025  002F12  C02A  F024         	movff	ToSend@what,FastTransfer_buffer_put@towhat
  3026  002F16  C02B  F025         	movff	ToSend@what+1,FastTransfer_buffer_put@towhat+1
  3027  002F1A  EC39  F009         	call	_FastTransfer_buffer_put	;wreg free
  3028  002F1E  0012               	return		;funcret
  3029  002F20                     __end_of_ToSend:
  3030                           	opt stack 0
  3031                           tosu	equ	0xFFF
  3032                           tosh	equ	0xFFE
  3033                           tosl	equ	0xFFD
  3034                           pclath	equ	0xFFA
  3035                           tblptru	equ	0xFF8
  3036                           tblptrh	equ	0xFF7
  3037                           tblptrl	equ	0xFF6
  3038                           tablat	equ	0xFF5
  3039                           intcon	equ	0xFF2
  3040                           postinc0	equ	0xFEE
  3041                           wreg	equ	0xFE8
  3042                           indf2	equ	0xFDF
  3043                           postinc2	equ	0xFDE
  3044                           postdec2	equ	0xFDD
  3045                           plusw2	equ	0xFDB
  3046                           fsr2h	equ	0xFDA
  3047                           fsr2l	equ	0xFD9
  3048                           status	equ	0xFD8
  3049                           
  3050 ;; *************** function _FastTransfer_buffer_put *****************
  3051 ;; Defined at:
  3052 ;;		line 225 in file "FastTransfer.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;  _this           2   32[COMRAM] PTR struct ringBufS
  3055 ;;		 -> ring_buffer(206), 
  3056 ;;  towhere         1   34[COMRAM] unsigned char 
  3057 ;;  towhat          2   35[COMRAM] unsigned int 
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;		None
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  1    wreg      void 
  3062 ;; Registers used:
  3063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3069 ;;      Params:         5       0       0       0       0       0       0
  3070 ;;      Locals:         0       0       0       0       0       0       0
  3071 ;;      Temps:          2       0       0       0       0       0       0
  3072 ;;      Totals:         7       0       0       0       0       0       0
  3073 ;;Total ram usage:        7 bytes
  3074 ;; Hardware stack levels used:    1
  3075 ;; Hardware stack levels required when called:    5
  3076 ;; This function calls:
  3077 ;;		_FastTransfer_buffer_modulo_inc
  3078 ;; This function is called by:
  3079 ;;		_ToSend
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           
  3083                           	psect	text9
  3084  001272                     __ptext9:
  3085                           	opt stack 0
  3086  001272                     _FastTransfer_buffer_put:
  3087                           	opt stack 22
  3088                           
  3089                           ;FastTransfer.c: 227: group.integer = towhat;
  3090                           
  3091                           ;incstack = 0
  3092  001272  C024  F02C         	movff	FastTransfer_buffer_put@towhat,_group
  3093  001276  C025  F02D         	movff	FastTransfer_buffer_put@towhat+1,_group+1
  3094                           
  3095                           ;FastTransfer.c: 229: if (_this->count < (200 - 3)) {
  3096  00127A  EE20 F0CC          	lfsr	2,204
  3097  00127E  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3098  001280  26D9               	addwf	fsr2l,f,c
  3099  001282  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3100  001284  22DA               	addwfc	fsr2h,f,c
  3101  001286  0E01               	movlw	1
  3102  001288  BEDB               	btfsc	plusw2,7,c
  3103  00128A  D007               	goto	l6153
  3104  00128C  0E01               	movlw	1
  3105  00128E  50DB               	movf	plusw2,w,c
  3106  001290  E103               	bnz	u6361
  3107  001292  0EC5               	movlw	197
  3108  001294  5CDE               	subwf	postinc2,w,c
  3109  001296  B0D8               	btfsc	status,0,c
  3110  001298                     u6361:
  3111  001298  0012               	return	
  3112  00129A                     l6153:
  3113                           
  3114                           ;FastTransfer.c: 230: _this->buf[_this->head] = towhere;
  3115  00129A  EE20 F0C8          	lfsr	2,200
  3116  00129E  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3117  0012A0  26D9               	addwf	fsr2l,f,c
  3118  0012A2  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3119  0012A4  22DA               	addwfc	fsr2h,f,c
  3120  0012A6  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  3121  0012AA  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  3122  0012AE  5026               	movf	??_FastTransfer_buffer_put,w,c
  3123  0012B0  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  3124  0012B2  6ED9               	movwf	fsr2l,c
  3125  0012B4  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  3126  0012B6  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  3127  0012B8  6EDA               	movwf	fsr2h,c
  3128  0012BA  C023  FFDF         	movff	FastTransfer_buffer_put@towhere,indf2
  3129                           
  3130                           ;FastTransfer.c: 231: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  3131  0012BE  EE20 F0C8          	lfsr	2,200
  3132  0012C2  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3133  0012C4  26D9               	addwf	fsr2l,f,c
  3134  0012C6  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3135  0012C8  22DA               	addwfc	fsr2h,f,c
  3136  0012CA  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  3137  0012CE  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  3138  0012D2  0E00               	movlw	0
  3139  0012D4  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  3140  0012D6  0EC8               	movlw	200
  3141  0012D8  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  3142  0012DA  ECF9  F016         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  3143  0012DE  EE20 F0C8          	lfsr	2,200
  3144  0012E2  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3145  0012E4  26D9               	addwf	fsr2l,f,c
  3146  0012E6  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3147  0012E8  22DA               	addwfc	fsr2h,f,c
  3148  0012EA  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  3149  0012EE  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  3150                           
  3151                           ;FastTransfer.c: 232: ++_this->count;
  3152  0012F2  EE20 F0CC          	lfsr	2,204
  3153  0012F6  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3154  0012F8  26D9               	addwf	fsr2l,f,c
  3155  0012FA  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3156  0012FC  22DA               	addwfc	fsr2h,f,c
  3157  0012FE  2ADE               	incf	postinc2,f,c
  3158  001300  0E00               	movlw	0
  3159  001302  22DD               	addwfc	postdec2,f,c
  3160                           
  3161                           ;FastTransfer.c: 233: _this->buf[_this->head] = group.parts[0];
  3162  001304  EE20 F0C8          	lfsr	2,200
  3163  001308  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3164  00130A  26D9               	addwf	fsr2l,f,c
  3165  00130C  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3166  00130E  22DA               	addwfc	fsr2h,f,c
  3167  001310  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  3168  001314  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  3169  001318  5026               	movf	??_FastTransfer_buffer_put,w,c
  3170  00131A  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  3171  00131C  6ED9               	movwf	fsr2l,c
  3172  00131E  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  3173  001320  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  3174  001322  6EDA               	movwf	fsr2h,c
  3175  001324  C02C  FFDF         	movff	_group,indf2
  3176                           
  3177                           ;FastTransfer.c: 234: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  3178  001328  EE20 F0C8          	lfsr	2,200
  3179  00132C  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3180  00132E  26D9               	addwf	fsr2l,f,c
  3181  001330  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3182  001332  22DA               	addwfc	fsr2h,f,c
  3183  001334  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  3184  001338  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  3185  00133C  0E00               	movlw	0
  3186  00133E  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  3187  001340  0EC8               	movlw	200
  3188  001342  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  3189  001344  ECF9  F016         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  3190  001348  EE20 F0C8          	lfsr	2,200
  3191  00134C  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3192  00134E  26D9               	addwf	fsr2l,f,c
  3193  001350  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3194  001352  22DA               	addwfc	fsr2h,f,c
  3195  001354  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  3196  001358  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  3197                           
  3198                           ;FastTransfer.c: 235: ++_this->count;
  3199  00135C  EE20 F0CC          	lfsr	2,204
  3200  001360  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3201  001362  26D9               	addwf	fsr2l,f,c
  3202  001364  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3203  001366  22DA               	addwfc	fsr2h,f,c
  3204  001368  2ADE               	incf	postinc2,f,c
  3205  00136A  0E00               	movlw	0
  3206  00136C  22DD               	addwfc	postdec2,f,c
  3207                           
  3208                           ;FastTransfer.c: 236: _this->buf[_this->head] = group.parts[1];
  3209  00136E  EE20 F0C8          	lfsr	2,200
  3210  001372  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3211  001374  26D9               	addwf	fsr2l,f,c
  3212  001376  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3213  001378  22DA               	addwfc	fsr2h,f,c
  3214  00137A  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  3215  00137E  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  3216  001382  5026               	movf	??_FastTransfer_buffer_put,w,c
  3217  001384  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  3218  001386  6ED9               	movwf	fsr2l,c
  3219  001388  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  3220  00138A  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  3221  00138C  6EDA               	movwf	fsr2h,c
  3222  00138E  C02D  FFDF         	movff	_group+1,indf2
  3223                           
  3224                           ;FastTransfer.c: 237: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  3225  001392  EE20 F0C8          	lfsr	2,200
  3226  001396  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3227  001398  26D9               	addwf	fsr2l,f,c
  3228  00139A  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3229  00139C  22DA               	addwfc	fsr2h,f,c
  3230  00139E  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  3231  0013A2  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  3232  0013A6  0E00               	movlw	0
  3233  0013A8  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  3234  0013AA  0EC8               	movlw	200
  3235  0013AC  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  3236  0013AE  ECF9  F016         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  3237  0013B2  EE20 F0C8          	lfsr	2,200
  3238  0013B6  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3239  0013B8  26D9               	addwf	fsr2l,f,c
  3240  0013BA  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3241  0013BC  22DA               	addwfc	fsr2h,f,c
  3242  0013BE  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  3243  0013C2  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  3244                           
  3245                           ;FastTransfer.c: 238: ++_this->count;
  3246  0013C6  EE20 F0CC          	lfsr	2,204
  3247  0013CA  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3248  0013CC  26D9               	addwf	fsr2l,f,c
  3249  0013CE  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3250  0013D0  22DA               	addwfc	fsr2h,f,c
  3251  0013D2  2ADE               	incf	postinc2,f,c
  3252  0013D4  0E00               	movlw	0
  3253  0013D6  22DD               	addwfc	postdec2,f,c
  3254  0013D8  0012               	return	
  3255  0013DA                     __end_of_FastTransfer_buffer_put:
  3256                           	opt stack 0
  3257                           tosu	equ	0xFFF
  3258                           tosh	equ	0xFFE
  3259                           tosl	equ	0xFFD
  3260                           pclath	equ	0xFFA
  3261                           tblptru	equ	0xFF8
  3262                           tblptrh	equ	0xFF7
  3263                           tblptrl	equ	0xFF6
  3264                           tablat	equ	0xFF5
  3265                           intcon	equ	0xFF2
  3266                           postinc0	equ	0xFEE
  3267                           wreg	equ	0xFE8
  3268                           indf2	equ	0xFDF
  3269                           postinc2	equ	0xFDE
  3270                           postdec2	equ	0xFDD
  3271                           plusw2	equ	0xFDB
  3272                           fsr2h	equ	0xFDA
  3273                           fsr2l	equ	0xFD9
  3274                           status	equ	0xFD8
  3275                           
  3276 ;; *************** function _FastTransfer_buffer_modulo_inc *****************
  3277 ;; Defined at:
  3278 ;;		line 275 in file "FastTransfer.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;  value           2   26[COMRAM] const unsigned int 
  3281 ;;  modulus         2   28[COMRAM] const unsigned int 
  3282 ;; Auto vars:     Size  Location     Type
  3283 ;;  my_value        2   30[COMRAM] unsigned int 
  3284 ;; Return value:  Size  Location     Type
  3285 ;;                  2   26[COMRAM] unsigned int 
  3286 ;; Registers used:
  3287 ;;		wreg, status,2, status,0
  3288 ;; Tracked objects:
  3289 ;;		On entry : 0/0
  3290 ;;		On exit  : 0/0
  3291 ;;		Unchanged: 0/0
  3292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3293 ;;      Params:         4       0       0       0       0       0       0
  3294 ;;      Locals:         2       0       0       0       0       0       0
  3295 ;;      Temps:          0       0       0       0       0       0       0
  3296 ;;      Totals:         6       0       0       0       0       0       0
  3297 ;;Total ram usage:        6 bytes
  3298 ;; Hardware stack levels used:    1
  3299 ;; Hardware stack levels required when called:    4
  3300 ;; This function calls:
  3301 ;;		Nothing
  3302 ;; This function is called by:
  3303 ;;		_FastTransfer_buffer_put
  3304 ;;		_FastTransfer_buffer_get
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           	psect	text10
  3309  002DF2                     __ptext10:
  3310                           	opt stack 0
  3311  002DF2                     _FastTransfer_buffer_modulo_inc:
  3312                           	opt stack 22
  3313                           
  3314                           ;FastTransfer.c: 276: unsigned int my_value = value + 1;
  3315                           
  3316                           ;incstack = 0
  3317  002DF2  0E01               	movlw	1
  3318  002DF4  241B               	addwf	FastTransfer_buffer_modulo_inc@value,w,c
  3319  002DF6  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  3320  002DF8  0E00               	movlw	0
  3321  002DFA  201C               	addwfc	FastTransfer_buffer_modulo_inc@value+1,w,c
  3322  002DFC  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  3323                           
  3324                           ;FastTransfer.c: 277: if (my_value >= modulus) {
  3325  002DFE  501D               	movf	FastTransfer_buffer_modulo_inc@modulus,w,c
  3326  002E00  5C1F               	subwf	FastTransfer_buffer_modulo_inc@my_value,w,c
  3327  002E02  501E               	movf	FastTransfer_buffer_modulo_inc@modulus+1,w,c
  3328  002E04  5820               	subwfb	FastTransfer_buffer_modulo_inc@my_value+1,w,c
  3329  002E06  A0D8               	btfss	status,0,c
  3330  002E08  D004               	goto	l5979
  3331                           
  3332                           ;FastTransfer.c: 278: my_value = 0;
  3333  002E0A  0E00               	movlw	0
  3334  002E0C  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  3335  002E0E  0E00               	movlw	0
  3336  002E10  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  3337  002E12                     l5979:
  3338                           
  3339                           ;FastTransfer.c: 279: }
  3340                           ;FastTransfer.c: 280: return (my_value);
  3341  002E12  C01F  F01B         	movff	FastTransfer_buffer_modulo_inc@my_value,?_FastTransfer_buffer_modulo_inc
  3342  002E16  C020  F01C         	movff	FastTransfer_buffer_modulo_inc@my_value+1,?_FastTransfer_buffer_modulo_inc+1
  3343  002E1A  0012               	return	
  3344  002E1C                     __end_of_FastTransfer_buffer_modulo_inc:
  3345                           	opt stack 0
  3346                           tosu	equ	0xFFF
  3347                           tosh	equ	0xFFE
  3348                           tosl	equ	0xFFD
  3349                           pclath	equ	0xFFA
  3350                           tblptru	equ	0xFF8
  3351                           tblptrh	equ	0xFF7
  3352                           tblptrl	equ	0xFF6
  3353                           tablat	equ	0xFF5
  3354                           intcon	equ	0xFF2
  3355                           postinc0	equ	0xFEE
  3356                           wreg	equ	0xFE8
  3357                           indf2	equ	0xFDF
  3358                           postinc2	equ	0xFDE
  3359                           postdec2	equ	0xFDD
  3360                           plusw2	equ	0xFDB
  3361                           fsr2h	equ	0xFDA
  3362                           fsr2l	equ	0xFD9
  3363                           status	equ	0xFD8
  3364                           
  3365 ;; *************** function _Delay *****************
  3366 ;; Defined at:
  3367 ;;		line 117 in file "main.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;  wait            2   26[COMRAM] int 
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;  x               2   29[COMRAM] int 
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  1    wreg      void 
  3374 ;; Registers used:
  3375 ;;		wreg, status,2, status,0
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3381 ;;      Params:         2       0       0       0       0       0       0
  3382 ;;      Locals:         2       0       0       0       0       0       0
  3383 ;;      Temps:          1       0       0       0       0       0       0
  3384 ;;      Totals:         5       0       0       0       0       0       0
  3385 ;;Total ram usage:        5 bytes
  3386 ;; Hardware stack levels used:    1
  3387 ;; Hardware stack levels required when called:    4
  3388 ;; This function calls:
  3389 ;;		Nothing
  3390 ;; This function is called by:
  3391 ;;		_respondECU
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           	psect	text11
  3396  002D32                     __ptext11:
  3397                           	opt stack 0
  3398  002D32                     _Delay:
  3399                           	opt stack 24
  3400                           
  3401                           ;main.c: 118: int x;
  3402                           ;main.c: 119: for (x = 0; x < wait; x++) {
  3403                           
  3404                           ;incstack = 0
  3405  002D32  0E00               	movlw	0
  3406  002D34  6E1F               	movwf	Delay@x+1,c
  3407  002D36  0E00               	movlw	0
  3408  002D38  6E1E               	movwf	Delay@x,c
  3409  002D3A  D00A               	goto	l604
  3410  002D3C                     l6241:
  3411                           
  3412                           ;main.c: 120: _delay((unsigned long)((1)*(16000000/4000.0)));
  3413  002D3C  0E06               	movlw	6
  3414  002D3E  6E1D               	movwf	??_Delay& (0+255),c
  3415  002D40  0E30               	movlw	48
  3416  002D42                     u8827:
  3417  002D42  2EE8               	decfsz	wreg,f,c
  3418  002D44  D7FE               	goto	u8827
  3419  002D46  2E1D               	decfsz	??_Delay& (0+255),f,c
  3420  002D48  D7FC               	goto	u8827
  3421  002D4A  D000               	nop2	
  3422  002D4C  4A1E               	infsnz	Delay@x,f,c
  3423  002D4E  2A1F               	incf	Delay@x+1,f,c
  3424  002D50                     l604:
  3425  002D50  501B               	movf	Delay@wait,w,c
  3426  002D52  5C1E               	subwf	Delay@x,w,c
  3427  002D54  501F               	movf	Delay@x+1,w,c
  3428  002D56  0A80               	xorlw	128
  3429  002D58  6E1D               	movwf	??_Delay& (0+255),c
  3430  002D5A  501C               	movf	Delay@wait+1,w,c
  3431  002D5C  0A80               	xorlw	128
  3432  002D5E  581D               	subwfb	??_Delay& (0+255),w,c
  3433  002D60  B0D8               	btfsc	status,0,c
  3434  002D62  0012               	return	
  3435  002D64  D7EB               	goto	l6241
  3436  002D66                     __end_of_Delay:
  3437                           	opt stack 0
  3438                           tosu	equ	0xFFF
  3439                           tosh	equ	0xFFE
  3440                           tosl	equ	0xFFD
  3441                           pclath	equ	0xFFA
  3442                           tblptru	equ	0xFF8
  3443                           tblptrh	equ	0xFF7
  3444                           tblptrl	equ	0xFF6
  3445                           tablat	equ	0xFF5
  3446                           intcon	equ	0xFF2
  3447                           postinc0	equ	0xFEE
  3448                           wreg	equ	0xFE8
  3449                           indf2	equ	0xFDF
  3450                           postinc2	equ	0xFDE
  3451                           postdec2	equ	0xFDD
  3452                           plusw2	equ	0xFDB
  3453                           fsr2h	equ	0xFDA
  3454                           fsr2l	equ	0xFD9
  3455                           status	equ	0xFD8
  3456                           
  3457 ;; *************** function _receiveData *****************
  3458 ;; Defined at:
  3459 ;;		line 83 in file "FastTransfer.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;		None
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;  holder          3    9[BANK1 ] unsigned char [3]
  3464 ;;  crcHolder       1   13[BANK1 ] unsigned char 
  3465 ;;  holder          3    6[BANK1 ] unsigned char [3]
  3466 ;;  crcHolder       1   12[BANK1 ] unsigned char 
  3467 ;;  u               2   14[BANK1 ] int 
  3468 ;;  r               2   16[BANK1 ] int 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      unsigned char 
  3471 ;; Registers used:
  3472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3478 ;;      Params:         0       0       0       0       0       0       0
  3479 ;;      Locals:         0       0      12       0       0       0       0
  3480 ;;      Temps:          0       0       6       0       0       0       0
  3481 ;;      Totals:         0       0      18       0       0       0       0
  3482 ;;Total ram usage:       18 bytes
  3483 ;; Hardware stack levels used:    1
  3484 ;; Hardware stack levels required when called:    8
  3485 ;; This function calls:
  3486 ;;		Absolute function
  3487 ;;		_CRC8
  3488 ;;		_CRCcheck
  3489 ;;		_Receive_available
  3490 ;;		_Receive_get
  3491 ;;		_Receive_peek
  3492 ;;		_Send_put
  3493 ;; This function is called by:
  3494 ;;		_updateComms
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498                           	psect	text12
  3499  0000D4                     __ptext12:
  3500                           	opt stack 0
  3501  0000D4                     _receiveData:
  3502                           	opt stack 21
  3503                           
  3504                           ;FastTransfer.c: 86: if (rx_len == 0) {
  3505                           
  3506                           ;incstack = 0
  3507  0000D4  503F               	movf	_rx_len,w,c
  3508  0000D6  A4D8               	btfss	status,2,c
  3509  0000D8  D0AC               	goto	l6761
  3510                           
  3511                           ;FastTransfer.c: 88: if (serial_available() > 4) {
  3512  0000DA  D801               	call	u7268
  3513  0000DC  D00A               	goto	u7269
  3514  0000DE                     u7268:
  3515  0000DE  0005               	push	
  3516  0000E0  6EFA               	movwf	pclath,c
  3517  0000E2  502E               	movf	_serial_available,w,c
  3518  0000E4  6EFD               	movwf	tosl,c
  3519  0000E6  502F               	movf	_serial_available+1,w,c
  3520  0000E8  6EFE               	movwf	tosh,c
  3521  0000EA  50F8               	movf	tblptru,w,c
  3522  0000EC  6EFF               	movwf	tosu,c
  3523  0000EE  50FA               	movf	pclath,w,c
  3524  0000F0  0012               	return		;indir
  3525  0000F2                     u7269:
  3526  0000F2  BE1E               	btfsc	?_Receive_available+1,7,c
  3527  0000F4  D09E               	goto	l6761
  3528  0000F6  501E               	movf	?_Receive_available+1,w,c
  3529  0000F8  E11E               	bnz	l6737
  3530  0000FA  0E05               	movlw	5
  3531  0000FC  5C1D               	subwf	?_Receive_available,w,c
  3532  0000FE  B0D8               	btfsc	status,0,c
  3533  000100  D01A               	goto	l6737
  3534  000102  D097               	goto	l6761
  3535  000104                     l6729:
  3536                           
  3537                           ;FastTransfer.c: 94: alignErrorCounter++;
  3538  000104  0100               	movlb	0	; () banked
  3539  000106  4BC5               	infsnz	_alignErrorCounter& (0+255),f,b
  3540  000108  2BC6               	incf	(_alignErrorCounter+1)& (0+255),f,b
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;FastTransfer.c: 95: if (serial_available() < 5)
  3544  00010A  D801               	call	u7288
  3545  00010C  D00A               	goto	u7289
  3546  00010E                     u7288:
  3547  00010E  0005               	push	
  3548  000110  6EFA               	movwf	pclath,c
  3549  000112  502E               	movf	_serial_available,w,c
  3550  000114  6EFD               	movwf	tosl,c
  3551  000116  502F               	movf	_serial_available+1,w,c
  3552  000118  6EFE               	movwf	tosh,c
  3553  00011A  50F8               	movf	tblptru,w,c
  3554  00011C  6EFF               	movwf	tosu,c
  3555  00011E  50FA               	movf	pclath,w,c
  3556  000120  0012               	return		;indir
  3557  000122                     u7289:
  3558  000122  BE1E               	btfsc	?_Receive_available+1,7,c
  3559  000124  D006               	goto	l6733
  3560  000126  501E               	movf	?_Receive_available+1,w,c
  3561  000128  E106               	bnz	l6737
  3562  00012A  0E05               	movlw	5
  3563  00012C  5C1D               	subwf	?_Receive_available,w,c
  3564  00012E  B0D8               	btfsc	status,0,c
  3565  000130  D002               	goto	l6737
  3566  000132                     l6733:
  3567                           
  3568                           ;FastTransfer.c: 96: return 0;
  3569  000132  0E00               	movlw	0
  3570  000134  0012               	return	
  3571  000136                     l6737:
  3572  000136  D801               	call	u7308
  3573  000138  D00A               	goto	u7309
  3574  00013A                     u7308:
  3575  00013A  0005               	push	
  3576  00013C  6EFA               	movwf	pclath,c
  3577  00013E  5030               	movf	_serial_read,w,c
  3578  000140  6EFD               	movwf	tosl,c
  3579  000142  5031               	movf	_serial_read+1,w,c
  3580  000144  6EFE               	movwf	tosh,c
  3581  000146  50F8               	movf	tblptru,w,c
  3582  000148  6EFF               	movwf	tosu,c
  3583  00014A  50FA               	movf	pclath,w,c
  3584  00014C  0012               	return		;indir
  3585  00014E                     u7309:
  3586  00014E  0A06               	xorlw	6
  3587  000150  A4D8               	btfss	status,2,c
  3588  000152  D7D8               	goto	l6729
  3589                           
  3590                           ;FastTransfer.c: 97: }
  3591                           ;FastTransfer.c: 98: if (serial_read() == 0x85) {
  3592  000154  D801               	call	u7328
  3593  000156  D00A               	goto	u7329
  3594  000158                     u7328:
  3595  000158  0005               	push	
  3596  00015A  6EFA               	movwf	pclath,c
  3597  00015C  5030               	movf	_serial_read,w,c
  3598  00015E  6EFD               	movwf	tosl,c
  3599  000160  5031               	movf	_serial_read+1,w,c
  3600  000162  6EFE               	movwf	tosh,c
  3601  000164  50F8               	movf	tblptru,w,c
  3602  000166  6EFF               	movwf	tosu,c
  3603  000168  50FA               	movf	pclath,w,c
  3604  00016A  0012               	return		;indir
  3605  00016C                     u7329:
  3606  00016C  0A85               	xorlw	133
  3607  00016E  A4D8               	btfss	status,2,c
  3608  000170  D060               	goto	l6761
  3609                           
  3610                           ;FastTransfer.c: 100: rx_address = serial_read();
  3611  000172  D801               	call	u7348
  3612  000174  D00A               	goto	u7349
  3613  000176                     u7348:
  3614  000176  0005               	push	
  3615  000178  6EFA               	movwf	pclath,c
  3616  00017A  5030               	movf	_serial_read,w,c
  3617  00017C  6EFD               	movwf	tosl,c
  3618  00017E  5031               	movf	_serial_read+1,w,c
  3619  000180  6EFE               	movwf	tosh,c
  3620  000182  50F8               	movf	tblptru,w,c
  3621  000184  6EFF               	movwf	tosu,c
  3622  000186  50FA               	movf	pclath,w,c
  3623  000188  0012               	return		;indir
  3624  00018A                     u7349:
  3625  00018A  6E3D               	movwf	_rx_address,c
  3626                           
  3627                           ;FastTransfer.c: 101: returnAddress = serial_read();
  3628  00018C  D801               	call	u7358
  3629  00018E  D00A               	goto	u7359
  3630  000190                     u7358:
  3631  000190  0005               	push	
  3632  000192  6EFA               	movwf	pclath,c
  3633  000194  5030               	movf	_serial_read,w,c
  3634  000196  6EFD               	movwf	tosl,c
  3635  000198  5031               	movf	_serial_read+1,w,c
  3636  00019A  6EFE               	movwf	tosh,c
  3637  00019C  50F8               	movf	tblptru,w,c
  3638  00019E  6EFF               	movwf	tosu,c
  3639  0001A0  50FA               	movf	pclath,w,c
  3640  0001A2  0012               	return		;indir
  3641  0001A4                     u7359:
  3642  0001A4  6E3C               	movwf	_returnAddress,c
  3643                           
  3644                           ;FastTransfer.c: 102: rx_len = serial_read();
  3645  0001A6  D801               	call	u7368
  3646  0001A8  D00A               	goto	u7369
  3647  0001AA                     u7368:
  3648  0001AA  0005               	push	
  3649  0001AC  6EFA               	movwf	pclath,c
  3650  0001AE  5030               	movf	_serial_read,w,c
  3651  0001B0  6EFD               	movwf	tosl,c
  3652  0001B2  5031               	movf	_serial_read+1,w,c
  3653  0001B4  6EFE               	movwf	tosh,c
  3654  0001B6  50F8               	movf	tblptru,w,c
  3655  0001B8  6EFF               	movwf	tosu,c
  3656  0001BA  50FA               	movf	pclath,w,c
  3657  0001BC  0012               	return		;indir
  3658  0001BE                     u7369:
  3659  0001BE  6E3F               	movwf	_rx_len,c
  3660                           
  3661                           ;FastTransfer.c: 104: if (rx_address != moduleAddress) {
  3662  0001C0  503B               	movf	_moduleAddress,w,c
  3663  0001C2  183D               	xorwf	_rx_address,w,c
  3664  0001C4  B4D8               	btfsc	status,2,c
  3665  0001C6  D035               	goto	l6761
  3666                           
  3667                           ;FastTransfer.c: 105: addressErrorCounter++;
  3668  0001C8  0100               	movlb	0	; () banked
  3669  0001CA  4BC3               	infsnz	_addressErrorCounter& (0+255),f,b
  3670  0001CC  2BC4               	incf	(_addressErrorCounter+1)& (0+255),f,b
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;FastTransfer.c: 108: int u;
  3674                           ;FastTransfer.c: 109: for (u = 0; u <= (rx_len + 1); u++) {
  3675  0001CE  0E00               	movlw	0
  3676  0001D0  0101               	movlb	1	; () banked
  3677  0001D2  6F48               	movwf	(receiveData@u+1)& (0+255),b
  3678  0001D4  0E00               	movlw	0
  3679  0001D6  6F47               	movwf	receiveData@u& (0+255),b
  3680  0001D8  D00F               	goto	l6753
  3681  0001DA                     l6749:
  3682                           
  3683                           ; BSR set to: 1
  3684                           ;FastTransfer.c: 110: serial_read();
  3685  0001DA  D801               	call	u7388
  3686  0001DC  D00A               	goto	l6751
  3687  0001DE                     u7388:
  3688  0001DE  0005               	push	
  3689  0001E0  6EFA               	movwf	pclath,c
  3690  0001E2  5030               	movf	_serial_read,w,c
  3691  0001E4  6EFD               	movwf	tosl,c
  3692  0001E6  5031               	movf	_serial_read+1,w,c
  3693  0001E8  6EFE               	movwf	tosh,c
  3694  0001EA  50F8               	movf	tblptru,w,c
  3695  0001EC  6EFF               	movwf	tosu,c
  3696  0001EE  50FA               	movf	pclath,w,c
  3697  0001F0  0012               	return		;indir
  3698  0001F2                     l6751:
  3699  0001F2  0101               	movlb	1	; () banked
  3700  0001F4  4B47               	infsnz	receiveData@u& (0+255),f,b
  3701  0001F6  2B48               	incf	(receiveData@u+1)& (0+255),f,b
  3702  0001F8                     l6753:
  3703                           
  3704                           ; BSR set to: 1
  3705  0001F8  503F               	movf	_rx_len,w,c
  3706  0001FA  0101               	movlb	1	; () banked
  3707  0001FC  6F39               	movwf	??_receiveData& (0+255),b
  3708  0001FE  6B3A               	clrf	(??_receiveData+1)& (0+255),b
  3709  000200  0E01               	movlw	1
  3710  000202  0101               	movlb	1	; () banked
  3711  000204  2739               	addwf	??_receiveData& (0+255),f,b
  3712  000206  0E00               	movlw	0
  3713  000208  233A               	addwfc	(??_receiveData+1)& (0+255),f,b
  3714  00020A  0101               	movlb	1	; () banked
  3715  00020C  5147               	movf	receiveData@u& (0+255),w,b
  3716  00020E  0101               	movlb	1	; () banked
  3717  000210  5D39               	subwf	??_receiveData& (0+255),w,b
  3718  000212  0101               	movlb	1	; () banked
  3719  000214  513A               	movf	(??_receiveData+1)& (0+255),w,b
  3720  000216  0A80               	xorlw	128
  3721  000218  0101               	movlb	1	; () banked
  3722  00021A  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  3723  00021C  0101               	movlb	1	; () banked
  3724  00021E  5148               	movf	(receiveData@u+1)& (0+255),w,b
  3725  000220  0A80               	xorlw	128
  3726  000222  0101               	movlb	1	; () banked
  3727  000224  593B               	subwfb	(??_receiveData+2)& (0+255),w,b
  3728  000226  B0D8               	btfsc	status,0,c
  3729  000228  D7D8               	goto	l6749
  3730                           
  3731                           ; BSR set to: 1
  3732                           ;FastTransfer.c: 111: }
  3733                           ;FastTransfer.c: 112: rx_len = 0;
  3734                           
  3735                           ; BSR set to: 1
  3736  00022A  0E00               	movlw	0
  3737  00022C  6E3F               	movwf	_rx_len,c
  3738                           
  3739                           ; BSR set to: 1
  3740                           ;FastTransfer.c: 113: return 0;
  3741  00022E  0E00               	movlw	0
  3742                           
  3743                           ; BSR set to: 1
  3744  000230  0012               	return	
  3745  000232                     l6761:
  3746                           
  3747                           ;FastTransfer.c: 114: }
  3748                           ;FastTransfer.c: 116: }
  3749                           ;FastTransfer.c: 117: }
  3750                           ;FastTransfer.c: 118: }
  3751                           ;FastTransfer.c: 121: if (rx_len != 0) {
  3752  000232  503F               	movf	_rx_len,w,c
  3753  000234  B4D8               	btfsc	status,2,c
  3754  000236  D2A6               	goto	l6885
  3755                           
  3756                           ;FastTransfer.c: 124: if (rx_array_inx == 0) {
  3757  000238  503E               	movf	_rx_array_inx,w,c
  3758  00023A  A4D8               	btfss	status,2,c
  3759  00023C  D044               	goto	l6785
  3760  00023E                     l6767:
  3761  00023E  D801               	call	u7428
  3762  000240  D00A               	goto	u7429
  3763  000242                     u7428:
  3764  000242  0005               	push	
  3765  000244  6EFA               	movwf	pclath,c
  3766  000246  502E               	movf	_serial_available,w,c
  3767  000248  6EFD               	movwf	tosl,c
  3768  00024A  502F               	movf	_serial_available+1,w,c
  3769  00024C  6EFE               	movwf	tosh,c
  3770  00024E  50F8               	movf	tblptru,w,c
  3771  000250  6EFF               	movwf	tosu,c
  3772  000252  50FA               	movf	pclath,w,c
  3773  000254  0012               	return		;indir
  3774  000256                     u7429:
  3775  000256  BE1E               	btfsc	?_Receive_available+1,7,c
  3776  000258  D7F2               	goto	l6767
  3777  00025A  501E               	movf	?_Receive_available+1,w,c
  3778  00025C  E103               	bnz	l6769
  3779  00025E  041D               	decf	?_Receive_available,w,c
  3780  000260  A0D8               	btfss	status,0,c
  3781  000262  D7ED               	goto	l6767
  3782  000264                     l6769:
  3783                           
  3784                           ;FastTransfer.c: 126: if (255 == serial_peek()) {
  3785  000264  D801               	call	u7448
  3786  000266  D00B               	goto	u7449
  3787  000268                     u7448:
  3788  000268  0005               	push	
  3789  00026A  0100               	movlb	0	; () banked
  3790  00026C  6EFA               	movwf	pclath,c
  3791  00026E  51D9               	movf	_serial_peek& (0+255),w,b
  3792  000270  6EFD               	movwf	tosl,c
  3793  000272  51DA               	movf	(_serial_peek+1)& (0+255),w,b
  3794  000274  6EFE               	movwf	tosh,c
  3795  000276  50F8               	movf	tblptru,w,c
  3796  000278  6EFF               	movwf	tosu,c
  3797  00027A  50FA               	movf	pclath,w,c
  3798  00027C  0012               	return		;indir
  3799  00027E                     u7449:
  3800  00027E  0AFF               	xorlw	255
  3801  000280  A4D8               	btfss	status,2,c
  3802  000282  D021               	goto	l6785
  3803                           
  3804                           ;FastTransfer.c: 127: CRCcheck();
  3805  000284  ECED  F009         	call	_CRCcheck	;wreg free
  3806                           
  3807                           ;FastTransfer.c: 128: rx_len = 0;
  3808  000288  0E00               	movlw	0
  3809  00028A  6E3F               	movwf	_rx_len,c
  3810                           
  3811                           ;FastTransfer.c: 129: rx_array_inx = 0;
  3812  00028C  0E00               	movlw	0
  3813  00028E  6E3E               	movwf	_rx_array_inx,c
  3814                           
  3815                           ;FastTransfer.c: 130: return 0;
  3816  000290  0E00               	movlw	0
  3817  000292  0012               	return	
  3818  000294                     l6781:
  3819                           
  3820                           ;FastTransfer.c: 136: rx_buffer[rx_array_inx++] = serial_read();
  3821  000294  D801               	call	u7468
  3822  000296  D00A               	goto	u7469
  3823  000298                     u7468:
  3824  000298  0005               	push	
  3825  00029A  6EFA               	movwf	pclath,c
  3826  00029C  5030               	movf	_serial_read,w,c
  3827  00029E  6EFD               	movwf	tosl,c
  3828  0002A0  5031               	movf	_serial_read+1,w,c
  3829  0002A2  6EFE               	movwf	tosh,c
  3830  0002A4  50F8               	movf	tblptru,w,c
  3831  0002A6  6EFF               	movwf	tosu,c
  3832  0002A8  50FA               	movf	pclath,w,c
  3833  0002AA  0012               	return		;indir
  3834  0002AC                     u7469:
  3835  0002AC  0101               	movlb	1	; () banked
  3836  0002AE  6F39               	movwf	??_receiveData& (0+255),b
  3837  0002B0  503E               	movf	_rx_array_inx,w,c
  3838  0002B2  0D01               	mullw	1
  3839  0002B4  0E00               	movlw	low _rx_buffer
  3840  0002B6  24F3               	addwf	prodl,w,c
  3841  0002B8  6ED9               	movwf	fsr2l,c
  3842  0002BA  0E03               	movlw	high _rx_buffer
  3843  0002BC  20F4               	addwfc	prodh,w,c
  3844  0002BE  6EDA               	movwf	fsr2h,c
  3845  0002C0  C139  FFDF         	movff	??_receiveData,indf2
  3846                           
  3847                           ; BSR set to: 1
  3848  0002C4  2A3E               	incf	_rx_array_inx,f,c
  3849  0002C6                     l6785:
  3850  0002C6  D801               	call	u7478
  3851  0002C8  D00A               	goto	u7479
  3852  0002CA                     u7478:
  3853  0002CA  0005               	push	
  3854  0002CC  6EFA               	movwf	pclath,c
  3855  0002CE  502E               	movf	_serial_available,w,c
  3856  0002D0  6EFD               	movwf	tosl,c
  3857  0002D2  502F               	movf	_serial_available+1,w,c
  3858  0002D4  6EFE               	movwf	tosh,c
  3859  0002D6  50F8               	movf	tblptru,w,c
  3860  0002D8  6EFF               	movwf	tosu,c
  3861  0002DA  50FA               	movf	pclath,w,c
  3862  0002DC  0012               	return		;indir
  3863  0002DE                     u7479:
  3864  0002DE  501D               	movf	?_Receive_available,w,c
  3865  0002E0  101E               	iorwf	?_Receive_available+1,w,c
  3866  0002E2  B4D8               	btfsc	status,2,c
  3867  0002E4  D004               	goto	l6789
  3868  0002E6  503E               	movf	_rx_array_inx,w,c
  3869  0002E8  5C3F               	subwf	_rx_len,w,c
  3870  0002EA  B0D8               	btfsc	status,0,c
  3871  0002EC  D7D3               	goto	l6781
  3872  0002EE                     l6789:
  3873                           
  3874                           ;FastTransfer.c: 137: }
  3875                           ;FastTransfer.c: 139: if (rx_len == (rx_array_inx - 1)) {
  3876  0002EE  503F               	movf	_rx_len,w,c
  3877  0002F0  0101               	movlb	1	; () banked
  3878  0002F2  6F39               	movwf	??_receiveData& (0+255),b
  3879  0002F4  6B3A               	clrf	(??_receiveData+1)& (0+255),b
  3880  0002F6  0EFF               	movlw	255
  3881  0002F8  0101               	movlb	1	; () banked
  3882  0002FA  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  3883  0002FC  0EFF               	movlw	255
  3884  0002FE  0101               	movlb	1	; () banked
  3885  000300  6F3C               	movwf	(??_receiveData+3)& (0+255),b
  3886  000302  503E               	movf	_rx_array_inx,w,c
  3887  000304  0101               	movlb	1	; () banked
  3888  000306  6F3D               	movwf	(??_receiveData+4)& (0+255),b
  3889  000308  6B3E               	clrf	(??_receiveData+5)& (0+255),b
  3890  00030A  0101               	movlb	1	; () banked
  3891  00030C  513B               	movf	(??_receiveData+2)& (0+255),w,b
  3892  00030E  0101               	movlb	1	; () banked
  3893  000310  273D               	addwf	(??_receiveData+4)& (0+255),f,b
  3894  000312  0101               	movlb	1	; () banked
  3895  000314  513C               	movf	(??_receiveData+3)& (0+255),w,b
  3896  000316  0101               	movlb	1	; () banked
  3897  000318  233E               	addwfc	(??_receiveData+5)& (0+255),f,b
  3898  00031A  0101               	movlb	1	; () banked
  3899  00031C  5139               	movf	??_receiveData& (0+255),w,b
  3900  00031E  0101               	movlb	1	; () banked
  3901  000320  193D               	xorwf	(??_receiveData+4)& (0+255),w,b
  3902  000322  E105               	bnz	u7501
  3903  000324  0101               	movlb	1	; () banked
  3904  000326  513A               	movf	(??_receiveData+1)& (0+255),w,b
  3905  000328  0101               	movlb	1	; () banked
  3906  00032A  193E               	xorwf	(??_receiveData+5)& (0+255),w,b
  3907  00032C  A4D8               	btfss	status,2,c
  3908  00032E                     u7501:
  3909  00032E  D22A               	goto	l6885
  3910                           
  3911                           ; BSR set to: 1
  3912                           ;FastTransfer.c: 142: calc_CS = CRC8(rx_buffer, rx_len);
  3913  000330  0E00               	movlw	low _rx_buffer
  3914  000332  6E1B               	movwf	CRC8@data,c
  3915  000334  0E03               	movlw	high _rx_buffer
  3916  000336  6E1C               	movwf	CRC8@data+1,c
  3917  000338  C03F  F01D         	movff	_rx_len,CRC8@len
  3918  00033C  ECB6  F015         	call	_CRC8	;wreg free
  3919  000340  6E37               	movwf	_calc_CS,c
  3920                           
  3921                           ;FastTransfer.c: 146: if (calc_CS == rx_buffer[rx_array_inx - 1]) {
  3922  000342  0EFF               	movlw	255
  3923  000344  0101               	movlb	1	; () banked
  3924  000346  6F39               	movwf	??_receiveData& (0+255),b
  3925  000348  0EFF               	movlw	255
  3926  00034A  0101               	movlb	1	; () banked
  3927  00034C  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  3928  00034E  503E               	movf	_rx_array_inx,w,c
  3929  000350  0101               	movlb	1	; () banked
  3930  000352  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  3931  000354  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  3932  000356  0101               	movlb	1	; () banked
  3933  000358  5139               	movf	??_receiveData& (0+255),w,b
  3934  00035A  0101               	movlb	1	; () banked
  3935  00035C  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  3936  00035E  0101               	movlb	1	; () banked
  3937  000360  513A               	movf	(??_receiveData+1)& (0+255),w,b
  3938  000362  0101               	movlb	1	; () banked
  3939  000364  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  3940  000366  0E00               	movlw	low _rx_buffer
  3941  000368  0101               	movlb	1	; () banked
  3942  00036A  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  3943  00036C  6ED9               	movwf	fsr2l,c
  3944  00036E  0E03               	movlw	high _rx_buffer
  3945  000370  0101               	movlb	1	; () banked
  3946  000372  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  3947  000374  6EDA               	movwf	fsr2h,c
  3948  000376  5037               	movf	_calc_CS,w,c
  3949  000378  18DE               	xorwf	postinc2,w,c
  3950  00037A  A4D8               	btfss	status,2,c
  3951  00037C  D13B               	goto	l6847
  3952                           
  3953                           ; BSR set to: 1
  3954                           ;FastTransfer.c: 149: int r;
  3955                           ;FastTransfer.c: 150: for (r = 0; r < rx_len; r = r + 3) {
  3956  00037E  0E00               	movlw	0
  3957  000380  0101               	movlb	1	; () banked
  3958  000382  6F4A               	movwf	(receiveData@r+1)& (0+255),b
  3959  000384  0E00               	movlw	0
  3960  000386  6F49               	movwf	receiveData@r& (0+255),b
  3961  000388  D05C               	goto	l6807
  3962  00038A                     l6797:
  3963                           
  3964                           ; BSR set to: 1
  3965                           ;FastTransfer.c: 151: if (rx_buffer[r] < maxDataAddress) {
  3966  00038A  0E00               	movlw	low _rx_buffer
  3967  00038C  0101               	movlb	1	; () banked
  3968  00038E  2549               	addwf	receiveData@r& (0+255),w,b
  3969  000390  6ED9               	movwf	fsr2l,c
  3970  000392  0E03               	movlw	high _rx_buffer
  3971  000394  0101               	movlb	1	; () banked
  3972  000396  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  3973  000398  6EDA               	movwf	fsr2h,c
  3974  00039A  503A               	movf	_maxDataAddress,w,c
  3975  00039C  5CDE               	subwf	postinc2,w,c
  3976  00039E  B0D8               	btfsc	status,0,c
  3977  0003A0  D043               	goto	l6803
  3978                           
  3979                           ; BSR set to: 1
  3980                           ;FastTransfer.c: 152: group.parts[0] = rx_buffer[r + 1];
  3981  0003A2  0E01               	movlw	1
  3982  0003A4  0101               	movlb	1	; () banked
  3983  0003A6  2549               	addwf	receiveData@r& (0+255),w,b
  3984  0003A8  0101               	movlb	1	; () banked
  3985  0003AA  6F39               	movwf	??_receiveData& (0+255),b
  3986  0003AC  0E00               	movlw	0
  3987  0003AE  0101               	movlb	1	; () banked
  3988  0003B0  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  3989  0003B2  0101               	movlb	1	; () banked
  3990  0003B4  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  3991  0003B6  0E00               	movlw	low _rx_buffer
  3992  0003B8  0101               	movlb	1	; () banked
  3993  0003BA  2539               	addwf	??_receiveData& (0+255),w,b
  3994  0003BC  6ED9               	movwf	fsr2l,c
  3995  0003BE  0E03               	movlw	high _rx_buffer
  3996  0003C0  0101               	movlb	1	; () banked
  3997  0003C2  213A               	addwfc	(??_receiveData+1)& (0+255),w,b
  3998  0003C4  6EDA               	movwf	fsr2h,c
  3999  0003C6  50DF               	movf	indf2,w,c
  4000  0003C8  6E2C               	movwf	_group,c
  4001                           
  4002                           ;FastTransfer.c: 153: group.parts[1] = rx_buffer[r + 2];
  4003  0003CA  0E02               	movlw	2
  4004  0003CC  0101               	movlb	1	; () banked
  4005  0003CE  2549               	addwf	receiveData@r& (0+255),w,b
  4006  0003D0  0101               	movlb	1	; () banked
  4007  0003D2  6F39               	movwf	??_receiveData& (0+255),b
  4008  0003D4  0E00               	movlw	0
  4009  0003D6  0101               	movlb	1	; () banked
  4010  0003D8  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  4011  0003DA  0101               	movlb	1	; () banked
  4012  0003DC  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4013  0003DE  0E00               	movlw	low _rx_buffer
  4014  0003E0  0101               	movlb	1	; () banked
  4015  0003E2  2539               	addwf	??_receiveData& (0+255),w,b
  4016  0003E4  6ED9               	movwf	fsr2l,c
  4017  0003E6  0E03               	movlw	high _rx_buffer
  4018  0003E8  0101               	movlb	1	; () banked
  4019  0003EA  213A               	addwfc	(??_receiveData+1)& (0+255),w,b
  4020  0003EC  6EDA               	movwf	fsr2h,c
  4021  0003EE  50DF               	movf	indf2,w,c
  4022  0003F0  6E2D               	movwf	_group+1,c
  4023                           
  4024                           ; BSR set to: 1
  4025                           ;FastTransfer.c: 154: receiveArrayAddress[(rx_buffer[r])] = group.integer;
  4026  0003F2  0E00               	movlw	low _rx_buffer
  4027  0003F4  0101               	movlb	1	; () banked
  4028  0003F6  2549               	addwf	receiveData@r& (0+255),w,b
  4029  0003F8  6ED9               	movwf	fsr2l,c
  4030  0003FA  0E03               	movlw	high _rx_buffer
  4031  0003FC  0101               	movlb	1	; () banked
  4032  0003FE  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  4033  000400  6EDA               	movwf	fsr2h,c
  4034  000402  50DF               	movf	indf2,w,c
  4035  000404  0101               	movlb	1	; () banked
  4036  000406  6F39               	movwf	??_receiveData& (0+255),b
  4037  000408  0101               	movlb	1	; () banked
  4038  00040A  5139               	movf	??_receiveData& (0+255),w,b
  4039  00040C  0D02               	mullw	2
  4040  00040E  50F3               	movf	prodl,w,c
  4041  000410  0100               	movlb	0	; () banked
  4042  000412  25D5               	addwf	_receiveArrayAddress& (0+255),w,b
  4043  000414  6ED9               	movwf	fsr2l,c
  4044  000416  50F4               	movf	prodh,w,c
  4045  000418  0100               	movlb	0	; () banked
  4046  00041A  21D6               	addwfc	(_receiveArrayAddress+1)& (0+255),w,b
  4047  00041C  6EDA               	movwf	fsr2h,c
  4048  00041E  C02C  FFDE         	movff	_group,postinc2
  4049  000422  C02D  FFDD         	movff	_group+1,postdec2
  4050                           
  4051                           ;FastTransfer.c: 155: } else {
  4052  000426  D003               	goto	l6805
  4053  000428                     l6803:
  4054                           
  4055                           ;FastTransfer.c: 156: dataAdressErrorCounter++;
  4056  000428  0100               	movlb	0	; () banked
  4057  00042A  4BCB               	infsnz	_dataAdressErrorCounter& (0+255),f,b
  4058  00042C  2BCC               	incf	(_dataAdressErrorCounter+1)& (0+255),f,b
  4059  00042E                     l6805:
  4060                           
  4061                           ; BSR set to: 0
  4062  00042E  0E03               	movlw	3
  4063  000430  0101               	movlb	1	; () banked
  4064  000432  2549               	addwf	receiveData@r& (0+255),w,b
  4065  000434  0101               	movlb	1	; () banked
  4066  000436  6F49               	movwf	receiveData@r& (0+255),b
  4067  000438  0E00               	movlw	0
  4068  00043A  0101               	movlb	1	; () banked
  4069  00043C  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  4070  00043E  0101               	movlb	1	; () banked
  4071  000440  6F4A               	movwf	(receiveData@r+1)& (0+255),b
  4072  000442                     l6807:
  4073                           
  4074                           ; BSR set to: 1
  4075  000442  503F               	movf	_rx_len,w,c
  4076  000444  0101               	movlb	1	; () banked
  4077  000446  6F39               	movwf	??_receiveData& (0+255),b
  4078  000448  6B3A               	clrf	(??_receiveData+1)& (0+255),b
  4079  00044A  0101               	movlb	1	; () banked
  4080  00044C  5139               	movf	??_receiveData& (0+255),w,b
  4081  00044E  0101               	movlb	1	; () banked
  4082  000450  5D49               	subwf	receiveData@r& (0+255),w,b
  4083  000452  0101               	movlb	1	; () banked
  4084  000454  514A               	movf	(receiveData@r+1)& (0+255),w,b
  4085  000456  0A80               	xorlw	128
  4086  000458  0101               	movlb	1	; () banked
  4087  00045A  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4088  00045C  0101               	movlb	1	; () banked
  4089  00045E  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4090  000460  0A80               	xorlw	128
  4091  000462  0101               	movlb	1	; () banked
  4092  000464  593B               	subwfb	(??_receiveData+2)& (0+255),w,b
  4093  000466  A0D8               	btfss	status,0,c
  4094  000468  D790               	goto	l6797
  4095                           
  4096                           ; BSR set to: 1
  4097                           ;FastTransfer.c: 157: }
  4098                           ;FastTransfer.c: 158: }
  4099                           ;FastTransfer.c: 161: if (AKNAKsend) {
  4100                           
  4101                           ; BSR set to: 1
  4102  00046A  5036               	movf	_AKNAKsend,w,c
  4103  00046C  B4D8               	btfsc	status,2,c
  4104  00046E  D0BC               	goto	l6837
  4105                           
  4106                           ; BSR set to: 1
  4107                           ;FastTransfer.c: 162: unsigned char holder[3];
  4108                           ;FastTransfer.c: 163: holder[0] = 255;
  4109  000470  0101               	movlb	1	; () banked
  4110  000472  693F               	setf	receiveData@holder& (0+255),b
  4111                           
  4112                           ; BSR set to: 1
  4113                           ;FastTransfer.c: 164: holder[1] = 1;
  4114  000474  0E01               	movlw	1
  4115  000476  0101               	movlb	1	; () banked
  4116  000478  6F40               	movwf	(receiveData@holder+1)& (0+255),b
  4117                           
  4118                           ; BSR set to: 1
  4119                           ;FastTransfer.c: 165: holder[2] = rx_buffer[rx_array_inx - 1];
  4120  00047A  0EFF               	movlw	255
  4121  00047C  0101               	movlb	1	; () banked
  4122  00047E  6F39               	movwf	??_receiveData& (0+255),b
  4123  000480  0EFF               	movlw	255
  4124  000482  0101               	movlb	1	; () banked
  4125  000484  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4126  000486  503E               	movf	_rx_array_inx,w,c
  4127  000488  0101               	movlb	1	; () banked
  4128  00048A  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4129  00048C  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  4130  00048E  0101               	movlb	1	; () banked
  4131  000490  5139               	movf	??_receiveData& (0+255),w,b
  4132  000492  0101               	movlb	1	; () banked
  4133  000494  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  4134  000496  0101               	movlb	1	; () banked
  4135  000498  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4136  00049A  0101               	movlb	1	; () banked
  4137  00049C  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  4138  00049E  0E00               	movlw	low _rx_buffer
  4139  0004A0  0101               	movlb	1	; () banked
  4140  0004A2  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  4141  0004A4  6ED9               	movwf	fsr2l,c
  4142  0004A6  0E03               	movlw	high _rx_buffer
  4143  0004A8  0101               	movlb	1	; () banked
  4144  0004AA  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  4145  0004AC  6EDA               	movwf	fsr2h,c
  4146  0004AE  50DF               	movf	indf2,w,c
  4147  0004B0  0101               	movlb	1	; () banked
  4148  0004B2  6F41               	movwf	(receiveData@holder+2)& (0+255),b
  4149                           
  4150                           ; BSR set to: 1
  4151                           ;FastTransfer.c: 166: unsigned char crcHolder = CRC8(holder, 3);
  4152  0004B4  0E3F               	movlw	low receiveData@holder
  4153  0004B6  6E1B               	movwf	CRC8@data,c
  4154  0004B8  0E01               	movlw	high receiveData@holder
  4155  0004BA  6E1C               	movwf	CRC8@data+1,c
  4156  0004BC  0E03               	movlw	3
  4157  0004BE  6E1D               	movwf	CRC8@len,c
  4158  0004C0  ECB6  F015         	call	_CRC8	;wreg free
  4159  0004C4  0101               	movlb	1	; () banked
  4160  0004C6  6F45               	movwf	receiveData@crcHolder& (0+255),b
  4161                           
  4162                           ; BSR set to: 1
  4163                           ;FastTransfer.c: 167: serial_write(0x06);
  4164  0004C8  D801               	call	u7558
  4165  0004CA  D00B               	goto	l6821
  4166  0004CC                     u7558:
  4167  0004CC  0005               	push	
  4168  0004CE  6EFA               	movwf	pclath,c
  4169  0004D0  5032               	movf	_serial_write,w,c
  4170  0004D2  6EFD               	movwf	tosl,c
  4171  0004D4  5033               	movf	_serial_write+1,w,c
  4172  0004D6  6EFE               	movwf	tosh,c
  4173  0004D8  50F8               	movf	tblptru,w,c
  4174  0004DA  6EFF               	movwf	tosu,c
  4175  0004DC  50FA               	movf	pclath,w,c
  4176  0004DE  0E06               	movlw	6
  4177  0004E0  0012               	return		;indir
  4178  0004E2                     l6821:
  4179                           
  4180                           ;FastTransfer.c: 168: serial_write(0x85);
  4181  0004E2  D801               	call	u7568
  4182  0004E4  D00B               	goto	l6823
  4183  0004E6                     u7568:
  4184  0004E6  0005               	push	
  4185  0004E8  6EFA               	movwf	pclath,c
  4186  0004EA  5032               	movf	_serial_write,w,c
  4187  0004EC  6EFD               	movwf	tosl,c
  4188  0004EE  5033               	movf	_serial_write+1,w,c
  4189  0004F0  6EFE               	movwf	tosh,c
  4190  0004F2  50F8               	movf	tblptru,w,c
  4191  0004F4  6EFF               	movwf	tosu,c
  4192  0004F6  50FA               	movf	pclath,w,c
  4193  0004F8  0E85               	movlw	133
  4194  0004FA  0012               	return		;indir
  4195  0004FC                     l6823:
  4196                           
  4197                           ;FastTransfer.c: 169: serial_write(returnAddress);
  4198  0004FC  D801               	call	u7578
  4199  0004FE  D00B               	goto	l6825
  4200  000500                     u7578:
  4201  000500  0005               	push	
  4202  000502  6EFA               	movwf	pclath,c
  4203  000504  5032               	movf	_serial_write,w,c
  4204  000506  6EFD               	movwf	tosl,c
  4205  000508  5033               	movf	_serial_write+1,w,c
  4206  00050A  6EFE               	movwf	tosh,c
  4207  00050C  50F8               	movf	tblptru,w,c
  4208  00050E  6EFF               	movwf	tosu,c
  4209  000510  50FA               	movf	pclath,w,c
  4210  000512  503C               	movf	_returnAddress,w,c
  4211  000514  0012               	return		;indir
  4212  000516                     l6825:
  4213                           
  4214                           ;FastTransfer.c: 170: serial_write(moduleAddress);
  4215  000516  D801               	call	u7588
  4216  000518  D00B               	goto	l6827
  4217  00051A                     u7588:
  4218  00051A  0005               	push	
  4219  00051C  6EFA               	movwf	pclath,c
  4220  00051E  5032               	movf	_serial_write,w,c
  4221  000520  6EFD               	movwf	tosl,c
  4222  000522  5033               	movf	_serial_write+1,w,c
  4223  000524  6EFE               	movwf	tosh,c
  4224  000526  50F8               	movf	tblptru,w,c
  4225  000528  6EFF               	movwf	tosu,c
  4226  00052A  50FA               	movf	pclath,w,c
  4227  00052C  503B               	movf	_moduleAddress,w,c
  4228  00052E  0012               	return		;indir
  4229  000530                     l6827:
  4230                           
  4231                           ;FastTransfer.c: 171: serial_write(3);
  4232  000530  D801               	call	u7598
  4233  000532  D00B               	goto	l6829
  4234  000534                     u7598:
  4235  000534  0005               	push	
  4236  000536  6EFA               	movwf	pclath,c
  4237  000538  5032               	movf	_serial_write,w,c
  4238  00053A  6EFD               	movwf	tosl,c
  4239  00053C  5033               	movf	_serial_write+1,w,c
  4240  00053E  6EFE               	movwf	tosh,c
  4241  000540  50F8               	movf	tblptru,w,c
  4242  000542  6EFF               	movwf	tosu,c
  4243  000544  50FA               	movf	pclath,w,c
  4244  000546  0E03               	movlw	3
  4245  000548  0012               	return		;indir
  4246  00054A                     l6829:
  4247                           
  4248                           ;FastTransfer.c: 172: serial_write(255);
  4249  00054A  D801               	call	u7608
  4250  00054C  D00B               	goto	l6831
  4251  00054E                     u7608:
  4252  00054E  0005               	push	
  4253  000550  6EFA               	movwf	pclath,c
  4254  000552  5032               	movf	_serial_write,w,c
  4255  000554  6EFD               	movwf	tosl,c
  4256  000556  5033               	movf	_serial_write+1,w,c
  4257  000558  6EFE               	movwf	tosh,c
  4258  00055A  50F8               	movf	tblptru,w,c
  4259  00055C  6EFF               	movwf	tosu,c
  4260  00055E  50FA               	movf	pclath,w,c
  4261  000560  0EFF               	movlw	255
  4262  000562  0012               	return		;indir
  4263  000564                     l6831:
  4264                           
  4265                           ;FastTransfer.c: 173: serial_write(1);
  4266  000564  D801               	call	u7618
  4267  000566  D00B               	goto	l6833
  4268  000568                     u7618:
  4269  000568  0005               	push	
  4270  00056A  6EFA               	movwf	pclath,c
  4271  00056C  5032               	movf	_serial_write,w,c
  4272  00056E  6EFD               	movwf	tosl,c
  4273  000570  5033               	movf	_serial_write+1,w,c
  4274  000572  6EFE               	movwf	tosh,c
  4275  000574  50F8               	movf	tblptru,w,c
  4276  000576  6EFF               	movwf	tosu,c
  4277  000578  50FA               	movf	pclath,w,c
  4278  00057A  0E01               	movlw	1
  4279  00057C  0012               	return		;indir
  4280  00057E                     l6833:
  4281                           
  4282                           ;FastTransfer.c: 174: serial_write(rx_buffer[rx_array_inx - 1]);
  4283  00057E  D801               	call	u7628
  4284  000580  D025               	goto	l6835
  4285  000582                     u7628:
  4286  000582  0005               	push	
  4287  000584  6EFA               	movwf	pclath,c
  4288  000586  5032               	movf	_serial_write,w,c
  4289  000588  6EFD               	movwf	tosl,c
  4290  00058A  5033               	movf	_serial_write+1,w,c
  4291  00058C  6EFE               	movwf	tosh,c
  4292  00058E  50F8               	movf	tblptru,w,c
  4293  000590  6EFF               	movwf	tosu,c
  4294  000592  50FA               	movf	pclath,w,c
  4295  000594  0EFF               	movlw	255
  4296  000596  0101               	movlb	1	; () banked
  4297  000598  6F39               	movwf	??_receiveData& (0+255),b
  4298  00059A  0EFF               	movlw	255
  4299  00059C  0101               	movlb	1	; () banked
  4300  00059E  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4301  0005A0  503E               	movf	_rx_array_inx,w,c
  4302  0005A2  0101               	movlb	1	; () banked
  4303  0005A4  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4304  0005A6  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  4305  0005A8  0101               	movlb	1	; () banked
  4306  0005AA  5139               	movf	??_receiveData& (0+255),w,b
  4307  0005AC  0101               	movlb	1	; () banked
  4308  0005AE  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  4309  0005B0  0101               	movlb	1	; () banked
  4310  0005B2  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4311  0005B4  0101               	movlb	1	; () banked
  4312  0005B6  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  4313  0005B8  0E00               	movlw	low _rx_buffer
  4314  0005BA  0101               	movlb	1	; () banked
  4315  0005BC  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  4316  0005BE  6ED9               	movwf	fsr2l,c
  4317  0005C0  0E03               	movlw	high _rx_buffer
  4318  0005C2  0101               	movlb	1	; () banked
  4319  0005C4  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  4320  0005C6  6EDA               	movwf	fsr2h,c
  4321  0005C8  50DF               	movf	indf2,w,c
  4322  0005CA  0012               	return		;indir
  4323  0005CC                     l6835:
  4324                           
  4325                           ;FastTransfer.c: 175: serial_write(crcHolder);
  4326  0005CC  D801               	call	u7638
  4327  0005CE  D00C               	goto	l6837
  4328  0005D0                     u7638:
  4329  0005D0  0005               	push	
  4330  0005D2  6EFA               	movwf	pclath,c
  4331  0005D4  5032               	movf	_serial_write,w,c
  4332  0005D6  6EFD               	movwf	tosl,c
  4333  0005D8  5033               	movf	_serial_write+1,w,c
  4334  0005DA  6EFE               	movwf	tosh,c
  4335  0005DC  50F8               	movf	tblptru,w,c
  4336  0005DE  6EFF               	movwf	tosu,c
  4337  0005E0  50FA               	movf	pclath,w,c
  4338  0005E2  0101               	movlb	1	; () banked
  4339  0005E4  5145               	movf	receiveData@crcHolder& (0+255),w,b
  4340  0005E6  0012               	return		;indir
  4341  0005E8                     l6837:
  4342                           
  4343                           ;FastTransfer.c: 176: }
  4344                           ;FastTransfer.c: 180: rx_len = 0;
  4345  0005E8  0E00               	movlw	0
  4346  0005EA  6E3F               	movwf	_rx_len,c
  4347                           
  4348                           ;FastTransfer.c: 181: rx_array_inx = 0;
  4349  0005EC  0E00               	movlw	0
  4350  0005EE  6E3E               	movwf	_rx_array_inx,c
  4351                           
  4352                           ;FastTransfer.c: 182: return 1;
  4353  0005F0  0E01               	movlw	1
  4354  0005F2  0012               	return	
  4355  0005F4                     l6847:
  4356                           
  4357                           ;FastTransfer.c: 184: crcErrorCounter++;
  4358  0005F4  0100               	movlb	0	; () banked
  4359  0005F6  4BC9               	infsnz	_crcErrorCounter& (0+255),f,b
  4360  0005F8  2BCA               	incf	(_crcErrorCounter+1)& (0+255),f,b
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;FastTransfer.c: 186: if (AKNAKsend) {
  4364  0005FA  5036               	movf	_AKNAKsend,w,c
  4365  0005FC  B4D8               	btfsc	status,2,c
  4366  0005FE  D0BC               	goto	l6877
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;FastTransfer.c: 187: unsigned char holder[3];
  4370                           ;FastTransfer.c: 188: holder[0] = 255;
  4371  000600  0101               	movlb	1	; () banked
  4372  000602  6942               	setf	receiveData@holder_2358& (0+255),b
  4373                           
  4374                           ; BSR set to: 1
  4375                           ;FastTransfer.c: 189: holder[1] = 2;
  4376  000604  0E02               	movlw	2
  4377  000606  0101               	movlb	1	; () banked
  4378  000608  6F43               	movwf	(receiveData@holder_2358+1)& (0+255),b
  4379                           
  4380                           ; BSR set to: 1
  4381                           ;FastTransfer.c: 190: holder[2] = rx_buffer[rx_array_inx - 1];
  4382  00060A  0EFF               	movlw	255
  4383  00060C  0101               	movlb	1	; () banked
  4384  00060E  6F39               	movwf	??_receiveData& (0+255),b
  4385  000610  0EFF               	movlw	255
  4386  000612  0101               	movlb	1	; () banked
  4387  000614  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4388  000616  503E               	movf	_rx_array_inx,w,c
  4389  000618  0101               	movlb	1	; () banked
  4390  00061A  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4391  00061C  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  4392  00061E  0101               	movlb	1	; () banked
  4393  000620  5139               	movf	??_receiveData& (0+255),w,b
  4394  000622  0101               	movlb	1	; () banked
  4395  000624  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  4396  000626  0101               	movlb	1	; () banked
  4397  000628  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4398  00062A  0101               	movlb	1	; () banked
  4399  00062C  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  4400  00062E  0E00               	movlw	low _rx_buffer
  4401  000630  0101               	movlb	1	; () banked
  4402  000632  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  4403  000634  6ED9               	movwf	fsr2l,c
  4404  000636  0E03               	movlw	high _rx_buffer
  4405  000638  0101               	movlb	1	; () banked
  4406  00063A  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  4407  00063C  6EDA               	movwf	fsr2h,c
  4408  00063E  50DF               	movf	indf2,w,c
  4409  000640  0101               	movlb	1	; () banked
  4410  000642  6F44               	movwf	(receiveData@holder_2358+2)& (0+255),b
  4411                           
  4412                           ; BSR set to: 1
  4413                           ;FastTransfer.c: 191: unsigned char crcHolder = CRC8(holder, 3);
  4414  000644  0E42               	movlw	low receiveData@holder_2358
  4415  000646  6E1B               	movwf	CRC8@data,c
  4416  000648  0E01               	movlw	high receiveData@holder_2358
  4417  00064A  6E1C               	movwf	CRC8@data+1,c
  4418  00064C  0E03               	movlw	3
  4419  00064E  6E1D               	movwf	CRC8@len,c
  4420  000650  ECB6  F015         	call	_CRC8
  4421  000654  0101               	movlb	1	; () banked
  4422  000656  6F46               	movwf	receiveData@crcHolder_2359& (0+255),b
  4423                           
  4424                           ; BSR set to: 1
  4425                           ;FastTransfer.c: 192: serial_write(0x06);
  4426  000658  D801               	call	u7658
  4427  00065A  D00B               	goto	l6861
  4428  00065C                     u7658:
  4429  00065C  0005               	push	
  4430  00065E  6EFA               	movwf	pclath,c
  4431  000660  5032               	movf	_serial_write,w,c
  4432  000662  6EFD               	movwf	tosl,c
  4433  000664  5033               	movf	_serial_write+1,w,c
  4434  000666  6EFE               	movwf	tosh,c
  4435  000668  50F8               	movf	tblptru,w,c
  4436  00066A  6EFF               	movwf	tosu,c
  4437  00066C  50FA               	movf	pclath,w,c
  4438  00066E  0E06               	movlw	6
  4439  000670  0012               	return		;indir
  4440  000672                     l6861:
  4441                           
  4442                           ;FastTransfer.c: 193: serial_write(0x85);
  4443  000672  D801               	call	u7668
  4444  000674  D00B               	goto	l6863
  4445  000676                     u7668:
  4446  000676  0005               	push	
  4447  000678  6EFA               	movwf	pclath,c
  4448  00067A  5032               	movf	_serial_write,w,c
  4449  00067C  6EFD               	movwf	tosl,c
  4450  00067E  5033               	movf	_serial_write+1,w,c
  4451  000680  6EFE               	movwf	tosh,c
  4452  000682  50F8               	movf	tblptru,w,c
  4453  000684  6EFF               	movwf	tosu,c
  4454  000686  50FA               	movf	pclath,w,c
  4455  000688  0E85               	movlw	133
  4456  00068A  0012               	return		;indir
  4457  00068C                     l6863:
  4458                           
  4459                           ;FastTransfer.c: 194: serial_write(returnAddress);
  4460  00068C  D801               	call	u7678
  4461  00068E  D00B               	goto	l6865
  4462  000690                     u7678:
  4463  000690  0005               	push	
  4464  000692  6EFA               	movwf	pclath,c
  4465  000694  5032               	movf	_serial_write,w,c
  4466  000696  6EFD               	movwf	tosl,c
  4467  000698  5033               	movf	_serial_write+1,w,c
  4468  00069A  6EFE               	movwf	tosh,c
  4469  00069C  50F8               	movf	tblptru,w,c
  4470  00069E  6EFF               	movwf	tosu,c
  4471  0006A0  50FA               	movf	pclath,w,c
  4472  0006A2  503C               	movf	_returnAddress,w,c
  4473  0006A4  0012               	return		;indir
  4474  0006A6                     l6865:
  4475                           
  4476                           ;FastTransfer.c: 195: serial_write(moduleAddress);
  4477  0006A6  D801               	call	u7688
  4478  0006A8  D00B               	goto	l6867
  4479  0006AA                     u7688:
  4480  0006AA  0005               	push	
  4481  0006AC  6EFA               	movwf	pclath,c
  4482  0006AE  5032               	movf	_serial_write,w,c
  4483  0006B0  6EFD               	movwf	tosl,c
  4484  0006B2  5033               	movf	_serial_write+1,w,c
  4485  0006B4  6EFE               	movwf	tosh,c
  4486  0006B6  50F8               	movf	tblptru,w,c
  4487  0006B8  6EFF               	movwf	tosu,c
  4488  0006BA  50FA               	movf	pclath,w,c
  4489  0006BC  503B               	movf	_moduleAddress,w,c
  4490  0006BE  0012               	return		;indir
  4491  0006C0                     l6867:
  4492                           
  4493                           ;FastTransfer.c: 196: serial_write(3);
  4494  0006C0  D801               	call	u7698
  4495  0006C2  D00B               	goto	l6869
  4496  0006C4                     u7698:
  4497  0006C4  0005               	push	
  4498  0006C6  6EFA               	movwf	pclath,c
  4499  0006C8  5032               	movf	_serial_write,w,c
  4500  0006CA  6EFD               	movwf	tosl,c
  4501  0006CC  5033               	movf	_serial_write+1,w,c
  4502  0006CE  6EFE               	movwf	tosh,c
  4503  0006D0  50F8               	movf	tblptru,w,c
  4504  0006D2  6EFF               	movwf	tosu,c
  4505  0006D4  50FA               	movf	pclath,w,c
  4506  0006D6  0E03               	movlw	3
  4507  0006D8  0012               	return		;indir
  4508  0006DA                     l6869:
  4509                           
  4510                           ;FastTransfer.c: 197: serial_write(255);
  4511  0006DA  D801               	call	u7708
  4512  0006DC  D00B               	goto	l6871
  4513  0006DE                     u7708:
  4514  0006DE  0005               	push	
  4515  0006E0  6EFA               	movwf	pclath,c
  4516  0006E2  5032               	movf	_serial_write,w,c
  4517  0006E4  6EFD               	movwf	tosl,c
  4518  0006E6  5033               	movf	_serial_write+1,w,c
  4519  0006E8  6EFE               	movwf	tosh,c
  4520  0006EA  50F8               	movf	tblptru,w,c
  4521  0006EC  6EFF               	movwf	tosu,c
  4522  0006EE  50FA               	movf	pclath,w,c
  4523  0006F0  0EFF               	movlw	255
  4524  0006F2  0012               	return		;indir
  4525  0006F4                     l6871:
  4526                           
  4527                           ;FastTransfer.c: 198: serial_write(2);
  4528  0006F4  D801               	call	u7718
  4529  0006F6  D00B               	goto	l6873
  4530  0006F8                     u7718:
  4531  0006F8  0005               	push	
  4532  0006FA  6EFA               	movwf	pclath,c
  4533  0006FC  5032               	movf	_serial_write,w,c
  4534  0006FE  6EFD               	movwf	tosl,c
  4535  000700  5033               	movf	_serial_write+1,w,c
  4536  000702  6EFE               	movwf	tosh,c
  4537  000704  50F8               	movf	tblptru,w,c
  4538  000706  6EFF               	movwf	tosu,c
  4539  000708  50FA               	movf	pclath,w,c
  4540  00070A  0E02               	movlw	2
  4541  00070C  0012               	return		;indir
  4542  00070E                     l6873:
  4543                           
  4544                           ;FastTransfer.c: 199: serial_write(rx_buffer[rx_array_inx - 1]);
  4545  00070E  D801               	call	u7728
  4546  000710  D025               	goto	l6875
  4547  000712                     u7728:
  4548  000712  0005               	push	
  4549  000714  6EFA               	movwf	pclath,c
  4550  000716  5032               	movf	_serial_write,w,c
  4551  000718  6EFD               	movwf	tosl,c
  4552  00071A  5033               	movf	_serial_write+1,w,c
  4553  00071C  6EFE               	movwf	tosh,c
  4554  00071E  50F8               	movf	tblptru,w,c
  4555  000720  6EFF               	movwf	tosu,c
  4556  000722  50FA               	movf	pclath,w,c
  4557  000724  0EFF               	movlw	255
  4558  000726  0101               	movlb	1	; () banked
  4559  000728  6F39               	movwf	??_receiveData& (0+255),b
  4560  00072A  0EFF               	movlw	255
  4561  00072C  0101               	movlb	1	; () banked
  4562  00072E  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4563  000730  503E               	movf	_rx_array_inx,w,c
  4564  000732  0101               	movlb	1	; () banked
  4565  000734  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4566  000736  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  4567  000738  0101               	movlb	1	; () banked
  4568  00073A  5139               	movf	??_receiveData& (0+255),w,b
  4569  00073C  0101               	movlb	1	; () banked
  4570  00073E  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  4571  000740  0101               	movlb	1	; () banked
  4572  000742  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4573  000744  0101               	movlb	1	; () banked
  4574  000746  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  4575  000748  0E00               	movlw	low _rx_buffer
  4576  00074A  0101               	movlb	1	; () banked
  4577  00074C  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  4578  00074E  6ED9               	movwf	fsr2l,c
  4579  000750  0E03               	movlw	high _rx_buffer
  4580  000752  0101               	movlb	1	; () banked
  4581  000754  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  4582  000756  6EDA               	movwf	fsr2h,c
  4583  000758  50DF               	movf	indf2,w,c
  4584  00075A  0012               	return		;indir
  4585  00075C                     l6875:
  4586                           
  4587                           ;FastTransfer.c: 200: serial_write(crcHolder);
  4588  00075C  D801               	call	u7738
  4589  00075E  D00C               	goto	l6877
  4590  000760                     u7738:
  4591  000760  0005               	push	
  4592  000762  6EFA               	movwf	pclath,c
  4593  000764  5032               	movf	_serial_write,w,c
  4594  000766  6EFD               	movwf	tosl,c
  4595  000768  5033               	movf	_serial_write+1,w,c
  4596  00076A  6EFE               	movwf	tosh,c
  4597  00076C  50F8               	movf	tblptru,w,c
  4598  00076E  6EFF               	movwf	tosu,c
  4599  000770  50FA               	movf	pclath,w,c
  4600  000772  0101               	movlb	1	; () banked
  4601  000774  5146               	movf	receiveData@crcHolder_2359& (0+255),w,b
  4602  000776  0012               	return		;indir
  4603  000778                     l6877:
  4604                           
  4605                           ;FastTransfer.c: 201: }
  4606                           ;FastTransfer.c: 204: rx_len = 0;
  4607  000778  0E00               	movlw	0
  4608  00077A  6E3F               	movwf	_rx_len,c
  4609                           
  4610                           ;FastTransfer.c: 205: rx_array_inx = 0;
  4611  00077C  0E00               	movlw	0
  4612  00077E  6E3E               	movwf	_rx_array_inx,c
  4613                           
  4614                           ;FastTransfer.c: 206: return 0;
  4615  000780  0E00               	movlw	0
  4616  000782  0012               	return	
  4617  000784                     l6885:
  4618                           
  4619                           ;FastTransfer.c: 207: }
  4620                           ;FastTransfer.c: 208: }
  4621                           ;FastTransfer.c: 209: }
  4622                           ;FastTransfer.c: 212: return 0;
  4623  000784  0E00               	movlw	0
  4624  000786  0012               	return	
  4625  000788                     __end_of_receiveData:
  4626                           	opt stack 0
  4627                           tosu	equ	0xFFF
  4628                           tosh	equ	0xFFE
  4629                           tosl	equ	0xFFD
  4630                           pclath	equ	0xFFA
  4631                           tblptru	equ	0xFF8
  4632                           tblptrh	equ	0xFF7
  4633                           tblptrl	equ	0xFF6
  4634                           tablat	equ	0xFF5
  4635                           prodh	equ	0xFF4
  4636                           prodl	equ	0xFF3
  4637                           intcon	equ	0xFF2
  4638                           postinc0	equ	0xFEE
  4639                           wreg	equ	0xFE8
  4640                           indf2	equ	0xFDF
  4641                           postinc2	equ	0xFDE
  4642                           postdec2	equ	0xFDD
  4643                           plusw2	equ	0xFDB
  4644                           fsr2h	equ	0xFDA
  4645                           fsr2l	equ	0xFD9
  4646                           status	equ	0xFD8
  4647                           
  4648 ;; *************** function _Send_put *****************
  4649 ;; Defined at:
  4650 ;;		line 130 in file "UART.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;  _data           1    wreg     unsigned char 
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;  _data           1   37[COMRAM] unsigned char 
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1    wreg      void 
  4657 ;; Registers used:
  4658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4664 ;;      Params:         0       0       0       0       0       0       0
  4665 ;;      Locals:         1       0       0       0       0       0       0
  4666 ;;      Temps:          0       0       0       0       0       0       0
  4667 ;;      Totals:         1       0       0       0       0       0       0
  4668 ;;Total ram usage:        1 bytes
  4669 ;; Hardware stack levels used:    1
  4670 ;; Hardware stack levels required when called:    6
  4671 ;; This function calls:
  4672 ;;		_UART_buff_get
  4673 ;;		_UART_buff_put
  4674 ;; This function is called by:
  4675 ;;		_SYSTEM_Initialize
  4676 ;;		_putch
  4677 ;;		_sendData
  4678 ;;		_receiveData
  4679 ;; This function uses a non-reentrant model
  4680 ;;
  4681                           
  4682                           	psect	text13
  4683  002D98                     __ptext13:
  4684                           	opt stack 0
  4685  002D98                     _Send_put:
  4686                           	opt stack 21
  4687                           
  4688                           ;incstack = 0
  4689                           ;Send_put@_data stored from wreg
  4690  002D98  6E26               	movwf	Send_put@_data,c
  4691                           
  4692                           ;UART.c: 131: UART_buff_put(&output_buffer, _data);
  4693  002D9A  0E00               	movlw	low _output_buffer
  4694  002D9C  6E21               	movwf	UART_buff_put@_this,c
  4695  002D9E  0E05               	movlw	high _output_buffer
  4696  002DA0  6E22               	movwf	UART_buff_put@_this+1,c
  4697  002DA2  C026  F023         	movff	Send_put@_data,UART_buff_put@c
  4698  002DA6  EC01  F00D         	call	_UART_buff_put
  4699                           
  4700                           ;UART.c: 132: if (Transmit_stall == 1) {
  4701  002DAA  0444               	decf	_Transmit_stall,w,c
  4702  002DAC  A4D8               	btfss	status,2,c
  4703  002DAE  0012               	return	
  4704                           
  4705                           ;UART.c: 133: Transmit_stall = 0;
  4706  002DB0  0E00               	movlw	0
  4707  002DB2  6E44               	movwf	_Transmit_stall,c
  4708                           
  4709                           ;UART.c: 134: TXREG1 = UART_buff_get(&output_buffer);
  4710  002DB4  0E00               	movlw	low _output_buffer
  4711  002DB6  6E21               	movwf	UART_buff_get@_this,c
  4712  002DB8  0E05               	movlw	high _output_buffer
  4713  002DBA  6E22               	movwf	UART_buff_get@_this+1,c
  4714  002DBC  EC1C  F013         	call	_UART_buff_get	;wreg free
  4715  002DC0  6EAD               	movwf	4013,c	;volatile
  4716                           
  4717                           ;UART.c: 135: PIE1bits.TX1IE = 1;
  4718  002DC2  889D               	bsf	3997,4,c	;volatile
  4719  002DC4  0012               	return	
  4720  002DC6                     __end_of_Send_put:
  4721                           	opt stack 0
  4722                           tosu	equ	0xFFF
  4723                           tosh	equ	0xFFE
  4724                           tosl	equ	0xFFD
  4725                           pclath	equ	0xFFA
  4726                           tblptru	equ	0xFF8
  4727                           tblptrh	equ	0xFF7
  4728                           tblptrl	equ	0xFF6
  4729                           tablat	equ	0xFF5
  4730                           prodh	equ	0xFF4
  4731                           prodl	equ	0xFF3
  4732                           intcon	equ	0xFF2
  4733                           postinc0	equ	0xFEE
  4734                           wreg	equ	0xFE8
  4735                           indf2	equ	0xFDF
  4736                           postinc2	equ	0xFDE
  4737                           postdec2	equ	0xFDD
  4738                           plusw2	equ	0xFDB
  4739                           fsr2h	equ	0xFDA
  4740                           fsr2l	equ	0xFD9
  4741                           status	equ	0xFD8
  4742                           
  4743 ;; *************** function _UART_buff_put *****************
  4744 ;; Defined at:
  4745 ;;		line 68 in file "UART.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  4748 ;;		 -> output_buffer(206), input_buffer(206), 
  4749 ;;  c               1   34[COMRAM] const unsigned char 
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;		None
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  1    wreg      void 
  4754 ;; Registers used:
  4755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4761 ;;      Params:         3       0       0       0       0       0       0
  4762 ;;      Locals:         0       0       0       0       0       0       0
  4763 ;;      Temps:          2       0       0       0       0       0       0
  4764 ;;      Totals:         5       0       0       0       0       0       0
  4765 ;;Total ram usage:        5 bytes
  4766 ;; Hardware stack levels used:    1
  4767 ;; Hardware stack levels required when called:    5
  4768 ;; This function calls:
  4769 ;;		_UART_buff_modulo_inc
  4770 ;; This function is called by:
  4771 ;;		_Send_put
  4772 ;; This function uses a non-reentrant model
  4773 ;;
  4774                           
  4775                           	psect	text14
  4776  001A02                     __ptext14:
  4777                           	opt stack 0
  4778  001A02                     _UART_buff_put:
  4779                           	opt stack 21
  4780                           
  4781                           ;UART.c: 69: if (_this->count < 200) {
  4782                           
  4783                           ;incstack = 0
  4784  001A02  EE20 F0CC          	lfsr	2,204
  4785  001A06  5021               	movf	UART_buff_put@_this,w,c
  4786  001A08  26D9               	addwf	fsr2l,f,c
  4787  001A0A  5022               	movf	UART_buff_put@_this+1,w,c
  4788  001A0C  22DA               	addwfc	fsr2h,f,c
  4789  001A0E  0E01               	movlw	1
  4790  001A10  BEDB               	btfsc	plusw2,7,c
  4791  001A12  D007               	goto	l5993
  4792  001A14  0E01               	movlw	1
  4793  001A16  50DB               	movf	plusw2,w,c
  4794  001A18  E13A               	bnz	l5999
  4795  001A1A  0EC8               	movlw	200
  4796  001A1C  5CDE               	subwf	postinc2,w,c
  4797  001A1E  B0D8               	btfsc	status,0,c
  4798  001A20  D036               	goto	l5999
  4799  001A22                     l5993:
  4800                           
  4801                           ;UART.c: 70: _this->buf[_this->head] = c;
  4802  001A22  EE20 F0C8          	lfsr	2,200
  4803  001A26  5021               	movf	UART_buff_put@_this,w,c
  4804  001A28  26D9               	addwf	fsr2l,f,c
  4805  001A2A  5022               	movf	UART_buff_put@_this+1,w,c
  4806  001A2C  22DA               	addwfc	fsr2h,f,c
  4807  001A2E  CFDE F024          	movff	postinc2,??_UART_buff_put
  4808  001A32  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  4809  001A36  5024               	movf	??_UART_buff_put,w,c
  4810  001A38  2421               	addwf	UART_buff_put@_this,w,c
  4811  001A3A  6ED9               	movwf	fsr2l,c
  4812  001A3C  5025               	movf	??_UART_buff_put+1,w,c
  4813  001A3E  2022               	addwfc	UART_buff_put@_this+1,w,c
  4814  001A40  6EDA               	movwf	fsr2h,c
  4815  001A42  C023  FFDF         	movff	UART_buff_put@c,indf2
  4816                           
  4817                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
  4818  001A46  EE20 F0C8          	lfsr	2,200
  4819  001A4A  5021               	movf	UART_buff_put@_this,w,c
  4820  001A4C  26D9               	addwf	fsr2l,f,c
  4821  001A4E  5022               	movf	UART_buff_put@_this+1,w,c
  4822  001A50  22DA               	addwfc	fsr2h,f,c
  4823  001A52  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  4824  001A56  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  4825  001A5A  0E00               	movlw	0
  4826  001A5C  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  4827  001A5E  0EC8               	movlw	200
  4828  001A60  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  4829  001A62  EC0E  F017         	call	_UART_buff_modulo_inc	;wreg free
  4830  001A66  EE20 F0C8          	lfsr	2,200
  4831  001A6A  5021               	movf	UART_buff_put@_this,w,c
  4832  001A6C  26D9               	addwf	fsr2l,f,c
  4833  001A6E  5022               	movf	UART_buff_put@_this+1,w,c
  4834  001A70  22DA               	addwfc	fsr2h,f,c
  4835  001A72  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4836  001A76  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4837                           
  4838                           ;UART.c: 72: ++_this->count;
  4839  001A7A  EE20 F0CC          	lfsr	2,204
  4840  001A7E  5021               	movf	UART_buff_put@_this,w,c
  4841  001A80  26D9               	addwf	fsr2l,f,c
  4842  001A82  5022               	movf	UART_buff_put@_this+1,w,c
  4843  001A84  22DA               	addwfc	fsr2h,f,c
  4844  001A86  2ADE               	incf	postinc2,f,c
  4845  001A88  0E00               	movlw	0
  4846  001A8A  22DD               	addwfc	postdec2,f,c
  4847                           
  4848                           ;UART.c: 73: } else {
  4849  001A8C  0012               	return	
  4850  001A8E                     l5999:
  4851                           
  4852                           ;UART.c: 74: _this->buf[_this->head] = c;
  4853  001A8E  EE20 F0C8          	lfsr	2,200
  4854  001A92  5021               	movf	UART_buff_put@_this,w,c
  4855  001A94  26D9               	addwf	fsr2l,f,c
  4856  001A96  5022               	movf	UART_buff_put@_this+1,w,c
  4857  001A98  22DA               	addwfc	fsr2h,f,c
  4858  001A9A  CFDE F024          	movff	postinc2,??_UART_buff_put
  4859  001A9E  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  4860  001AA2  5024               	movf	??_UART_buff_put,w,c
  4861  001AA4  2421               	addwf	UART_buff_put@_this,w,c
  4862  001AA6  6ED9               	movwf	fsr2l,c
  4863  001AA8  5025               	movf	??_UART_buff_put+1,w,c
  4864  001AAA  2022               	addwfc	UART_buff_put@_this+1,w,c
  4865  001AAC  6EDA               	movwf	fsr2h,c
  4866  001AAE  C023  FFDF         	movff	UART_buff_put@c,indf2
  4867                           
  4868                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
  4869  001AB2  EE20 F0C8          	lfsr	2,200
  4870  001AB6  5021               	movf	UART_buff_put@_this,w,c
  4871  001AB8  26D9               	addwf	fsr2l,f,c
  4872  001ABA  5022               	movf	UART_buff_put@_this+1,w,c
  4873  001ABC  22DA               	addwfc	fsr2h,f,c
  4874  001ABE  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  4875  001AC2  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  4876  001AC6  0E00               	movlw	0
  4877  001AC8  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  4878  001ACA  0EC8               	movlw	200
  4879  001ACC  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  4880  001ACE  EC0E  F017         	call	_UART_buff_modulo_inc	;wreg free
  4881  001AD2  EE20 F0C8          	lfsr	2,200
  4882  001AD6  5021               	movf	UART_buff_put@_this,w,c
  4883  001AD8  26D9               	addwf	fsr2l,f,c
  4884  001ADA  5022               	movf	UART_buff_put@_this+1,w,c
  4885  001ADC  22DA               	addwfc	fsr2h,f,c
  4886  001ADE  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4887  001AE2  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4888                           
  4889                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  4890  001AE6  EE20 F0CA          	lfsr	2,202
  4891  001AEA  5021               	movf	UART_buff_put@_this,w,c
  4892  001AEC  26D9               	addwf	fsr2l,f,c
  4893  001AEE  5022               	movf	UART_buff_put@_this+1,w,c
  4894  001AF0  22DA               	addwfc	fsr2h,f,c
  4895  001AF2  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  4896  001AF6  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  4897  001AFA  0E00               	movlw	0
  4898  001AFC  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  4899  001AFE  0EC8               	movlw	200
  4900  001B00  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  4901  001B02  EC0E  F017         	call	_UART_buff_modulo_inc	;wreg free
  4902  001B06  EE20 F0CA          	lfsr	2,202
  4903  001B0A  5021               	movf	UART_buff_put@_this,w,c
  4904  001B0C  26D9               	addwf	fsr2l,f,c
  4905  001B0E  5022               	movf	UART_buff_put@_this+1,w,c
  4906  001B10  22DA               	addwfc	fsr2h,f,c
  4907  001B12  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4908  001B16  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4909  001B1A  0012               	return	
  4910  001B1C                     __end_of_UART_buff_put:
  4911                           	opt stack 0
  4912                           tosu	equ	0xFFF
  4913                           tosh	equ	0xFFE
  4914                           tosl	equ	0xFFD
  4915                           pclath	equ	0xFFA
  4916                           tblptru	equ	0xFF8
  4917                           tblptrh	equ	0xFF7
  4918                           tblptrl	equ	0xFF6
  4919                           tablat	equ	0xFF5
  4920                           prodh	equ	0xFF4
  4921                           prodl	equ	0xFF3
  4922                           intcon	equ	0xFF2
  4923                           postinc0	equ	0xFEE
  4924                           wreg	equ	0xFE8
  4925                           indf2	equ	0xFDF
  4926                           postinc2	equ	0xFDE
  4927                           postdec2	equ	0xFDD
  4928                           plusw2	equ	0xFDB
  4929                           fsr2h	equ	0xFDA
  4930                           fsr2l	equ	0xFD9
  4931                           status	equ	0xFD8
  4932                           
  4933 ;; *************** function _Receive_peek *****************
  4934 ;; Defined at:
  4935 ;;		line 118 in file "UART.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;		None
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;		None
  4940 ;; Return value:  Size  Location     Type
  4941 ;;                  1    wreg      unsigned char 
  4942 ;; Registers used:
  4943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4949 ;;      Params:         0       0       0       0       0       0       0
  4950 ;;      Locals:         0       0       0       0       0       0       0
  4951 ;;      Temps:          0       0       0       0       0       0       0
  4952 ;;      Totals:         0       0       0       0       0       0       0
  4953 ;;Total ram usage:        0 bytes
  4954 ;; Hardware stack levels used:    1
  4955 ;; Hardware stack levels required when called:    5
  4956 ;; This function calls:
  4957 ;;		_UART_buff_peek
  4958 ;; This function is called by:
  4959 ;;		_SYSTEM_Initialize
  4960 ;;		_receiveData
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           	psect	text15
  4965  003012                     __ptext15:
  4966                           	opt stack 0
  4967  003012                     _Receive_peek:
  4968                           	opt stack 23
  4969                           
  4970                           ;UART.c: 119: return UART_buff_peek(&input_buffer);
  4971                           
  4972                           ;incstack = 0
  4973  003012  0E00               	movlw	low _input_buffer
  4974  003014  6E1B               	movwf	UART_buff_peek@_this,c
  4975  003016  0E04               	movlw	high _input_buffer
  4976  003018  6E1C               	movwf	UART_buff_peek@_this+1,c
  4977  00301A  EC4C  F017         	call	_UART_buff_peek	;wreg free
  4978  00301E  0012               	return	
  4979  003020                     __end_of_Receive_peek:
  4980                           	opt stack 0
  4981                           tosu	equ	0xFFF
  4982                           tosh	equ	0xFFE
  4983                           tosl	equ	0xFFD
  4984                           pclath	equ	0xFFA
  4985                           tblptru	equ	0xFF8
  4986                           tblptrh	equ	0xFF7
  4987                           tblptrl	equ	0xFF6
  4988                           tablat	equ	0xFF5
  4989                           prodh	equ	0xFF4
  4990                           prodl	equ	0xFF3
  4991                           intcon	equ	0xFF2
  4992                           postinc0	equ	0xFEE
  4993                           wreg	equ	0xFE8
  4994                           indf2	equ	0xFDF
  4995                           postinc2	equ	0xFDE
  4996                           postdec2	equ	0xFDD
  4997                           plusw2	equ	0xFDB
  4998                           fsr2h	equ	0xFDA
  4999                           fsr2l	equ	0xFD9
  5000                           status	equ	0xFD8
  5001                           
  5002 ;; *************** function _UART_buff_peek *****************
  5003 ;; Defined at:
  5004 ;;		line 114 in file "UART.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  5007 ;;		 -> input_buffer(206), 
  5008 ;; Auto vars:     Size  Location     Type
  5009 ;;		None
  5010 ;; Return value:  Size  Location     Type
  5011 ;;                  1    wreg      unsigned char 
  5012 ;; Registers used:
  5013 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5014 ;; Tracked objects:
  5015 ;;		On entry : 0/0
  5016 ;;		On exit  : 0/0
  5017 ;;		Unchanged: 0/0
  5018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5019 ;;      Params:         2       0       0       0       0       0       0
  5020 ;;      Locals:         0       0       0       0       0       0       0
  5021 ;;      Temps:          2       0       0       0       0       0       0
  5022 ;;      Totals:         4       0       0       0       0       0       0
  5023 ;;Total ram usage:        4 bytes
  5024 ;; Hardware stack levels used:    1
  5025 ;; Hardware stack levels required when called:    4
  5026 ;; This function calls:
  5027 ;;		Nothing
  5028 ;; This function is called by:
  5029 ;;		_Receive_peek
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           	psect	text16
  5034  002E98                     __ptext16:
  5035                           	opt stack 0
  5036  002E98                     _UART_buff_peek:
  5037                           	opt stack 23
  5038                           
  5039                           ;UART.c: 115: return _this->buf[_this->tail];
  5040                           
  5041                           ;incstack = 0
  5042  002E98  EE20 F0CA          	lfsr	2,202
  5043  002E9C  501B               	movf	UART_buff_peek@_this,w,c
  5044  002E9E  26D9               	addwf	fsr2l,f,c
  5045  002EA0  501C               	movf	UART_buff_peek@_this+1,w,c
  5046  002EA2  22DA               	addwfc	fsr2h,f,c
  5047  002EA4  CFDE F01D          	movff	postinc2,??_UART_buff_peek
  5048  002EA8  CFDD F01E          	movff	postdec2,??_UART_buff_peek+1
  5049  002EAC  501D               	movf	??_UART_buff_peek,w,c
  5050  002EAE  241B               	addwf	UART_buff_peek@_this,w,c
  5051  002EB0  6ED9               	movwf	fsr2l,c
  5052  002EB2  501E               	movf	??_UART_buff_peek+1,w,c
  5053  002EB4  201C               	addwfc	UART_buff_peek@_this+1,w,c
  5054  002EB6  6EDA               	movwf	fsr2h,c
  5055  002EB8  50DF               	movf	indf2,w,c
  5056  002EBA  0012               	return	
  5057  002EBC                     __end_of_UART_buff_peek:
  5058                           	opt stack 0
  5059                           tosu	equ	0xFFF
  5060                           tosh	equ	0xFFE
  5061                           tosl	equ	0xFFD
  5062                           pclath	equ	0xFFA
  5063                           tblptru	equ	0xFF8
  5064                           tblptrh	equ	0xFF7
  5065                           tblptrl	equ	0xFF6
  5066                           tablat	equ	0xFF5
  5067                           prodh	equ	0xFF4
  5068                           prodl	equ	0xFF3
  5069                           intcon	equ	0xFF2
  5070                           postinc0	equ	0xFEE
  5071                           wreg	equ	0xFE8
  5072                           indf2	equ	0xFDF
  5073                           postinc2	equ	0xFDE
  5074                           postdec2	equ	0xFDD
  5075                           plusw2	equ	0xFDB
  5076                           fsr2h	equ	0xFDA
  5077                           fsr2l	equ	0xFD9
  5078                           status	equ	0xFD8
  5079                           
  5080 ;; *************** function _CRCcheck *****************
  5081 ;; Defined at:
  5082 ;;		line 375 in file "FastTransfer.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;		None
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;  rt              2    5[BANK0 ] int 
  5087 ;;  arrayHolder     3    2[BANK0 ] unsigned char [3]
  5088 ;;  calculatedCR    1    1[BANK0 ] unsigned char 
  5089 ;;  SentCRC         1    0[BANK0 ] unsigned char 
  5090 ;; Return value:  Size  Location     Type
  5091 ;;                  1    wreg      void 
  5092 ;; Registers used:
  5093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  5094 ;; Tracked objects:
  5095 ;;		On entry : 0/0
  5096 ;;		On exit  : 0/0
  5097 ;;		Unchanged: 0/0
  5098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5099 ;;      Params:         0       0       0       0       0       0       0
  5100 ;;      Locals:         0       7       0       0       0       0       0
  5101 ;;      Temps:          0       0       0       0       0       0       0
  5102 ;;      Totals:         0       7       0       0       0       0       0
  5103 ;;Total ram usage:        7 bytes
  5104 ;; Hardware stack levels used:    1
  5105 ;; Hardware stack levels required when called:    7
  5106 ;; This function calls:
  5107 ;;		Absolute function
  5108 ;;		_CRC8
  5109 ;;		_Receive_available
  5110 ;;		_Receive_get
  5111 ;;		_crcBufS_get
  5112 ;;		_crcBufS_status_put
  5113 ;; This function is called by:
  5114 ;;		_receiveData
  5115 ;; This function uses a non-reentrant model
  5116 ;;
  5117                           
  5118                           	psect	text17
  5119  0013DA                     __ptext17:
  5120                           	opt stack 0
  5121  0013DA                     _CRCcheck:
  5122                           	opt stack 21
  5123  0013DA                     l6429:
  5124  0013DA  D801               	call	u6748
  5125  0013DC  D00A               	goto	u6749
  5126  0013DE                     u6748:
  5127  0013DE  0005               	push	
  5128  0013E0  6EFA               	movwf	pclath,c
  5129  0013E2  502E               	movf	_serial_available,w,c
  5130  0013E4  6EFD               	movwf	tosl,c
  5131  0013E6  502F               	movf	_serial_available+1,w,c
  5132  0013E8  6EFE               	movwf	tosh,c
  5133  0013EA  50F8               	movf	tblptru,w,c
  5134  0013EC  6EFF               	movwf	tosu,c
  5135  0013EE  50FA               	movf	pclath,w,c
  5136  0013F0  0012               	return		;indir
  5137  0013F2                     u6749:
  5138  0013F2  BE1E               	btfsc	?_Receive_available+1,7,c
  5139  0013F4  D7F2               	goto	l6429
  5140  0013F6  501E               	movf	?_Receive_available+1,w,c
  5141  0013F8  E104               	bnz	l6431
  5142  0013FA  0E04               	movlw	4
  5143  0013FC  5C1D               	subwf	?_Receive_available,w,c
  5144  0013FE  A0D8               	btfss	status,0,c
  5145  001400  D7EC               	goto	l6429
  5146  001402                     l6431:
  5147                           
  5148                           ;FastTransfer.c: 379: unsigned char arrayHolder[3];
  5149                           ;FastTransfer.c: 380: arrayHolder[0] = serial_read();
  5150  001402  D801               	call	u6768
  5151  001404  D00A               	goto	u6769
  5152  001406                     u6768:
  5153  001406  0005               	push	
  5154  001408  6EFA               	movwf	pclath,c
  5155  00140A  5030               	movf	_serial_read,w,c
  5156  00140C  6EFD               	movwf	tosl,c
  5157  00140E  5031               	movf	_serial_read+1,w,c
  5158  001410  6EFE               	movwf	tosh,c
  5159  001412  50F8               	movf	tblptru,w,c
  5160  001414  6EFF               	movwf	tosu,c
  5161  001416  50FA               	movf	pclath,w,c
  5162  001418  0012               	return		;indir
  5163  00141A                     u6769:
  5164  00141A  0100               	movlb	0	; () banked
  5165  00141C  6FF6               	movwf	CRCcheck@arrayHolder& (0+255),b
  5166                           
  5167                           ;FastTransfer.c: 381: arrayHolder[1] = serial_read();
  5168  00141E  D801               	call	u6778
  5169  001420  D00A               	goto	u6779
  5170  001422                     u6778:
  5171  001422  0005               	push	
  5172  001424  6EFA               	movwf	pclath,c
  5173  001426  5030               	movf	_serial_read,w,c
  5174  001428  6EFD               	movwf	tosl,c
  5175  00142A  5031               	movf	_serial_read+1,w,c
  5176  00142C  6EFE               	movwf	tosh,c
  5177  00142E  50F8               	movf	tblptru,w,c
  5178  001430  6EFF               	movwf	tosu,c
  5179  001432  50FA               	movf	pclath,w,c
  5180  001434  0012               	return		;indir
  5181  001436                     u6779:
  5182  001436  0100               	movlb	0	; () banked
  5183  001438  6FF7               	movwf	(CRCcheck@arrayHolder+1)& (0+255),b
  5184                           
  5185                           ;FastTransfer.c: 382: arrayHolder[2] = serial_read();
  5186  00143A  D801               	call	u6788
  5187  00143C  D00A               	goto	u6789
  5188  00143E                     u6788:
  5189  00143E  0005               	push	
  5190  001440  6EFA               	movwf	pclath,c
  5191  001442  5030               	movf	_serial_read,w,c
  5192  001444  6EFD               	movwf	tosl,c
  5193  001446  5031               	movf	_serial_read+1,w,c
  5194  001448  6EFE               	movwf	tosh,c
  5195  00144A  50F8               	movf	tblptru,w,c
  5196  00144C  6EFF               	movwf	tosu,c
  5197  00144E  50FA               	movf	pclath,w,c
  5198  001450  0012               	return		;indir
  5199  001452                     u6789:
  5200  001452  0100               	movlb	0	; () banked
  5201  001454  6FF8               	movwf	(CRCcheck@arrayHolder+2)& (0+255),b
  5202                           
  5203                           ;FastTransfer.c: 383: unsigned char SentCRC = serial_read();
  5204  001456  D801               	call	u6798
  5205  001458  D00A               	goto	u6799
  5206  00145A                     u6798:
  5207  00145A  0005               	push	
  5208  00145C  6EFA               	movwf	pclath,c
  5209  00145E  5030               	movf	_serial_read,w,c
  5210  001460  6EFD               	movwf	tosl,c
  5211  001462  5031               	movf	_serial_read+1,w,c
  5212  001464  6EFE               	movwf	tosh,c
  5213  001466  50F8               	movf	tblptru,w,c
  5214  001468  6EFF               	movwf	tosu,c
  5215  00146A  50FA               	movf	pclath,w,c
  5216  00146C  0012               	return		;indir
  5217  00146E                     u6799:
  5218  00146E  0100               	movlb	0	; () banked
  5219  001470  6FF4               	movwf	CRCcheck@SentCRC& (0+255),b
  5220                           
  5221                           ; BSR set to: 0
  5222                           ;FastTransfer.c: 384: unsigned char calculatedCRC = CRC8(arrayHolder, 3);
  5223  001472  0EF6               	movlw	low CRCcheck@arrayHolder
  5224  001474  6E1B               	movwf	CRC8@data,c
  5225  001476  0E00               	movlw	high CRCcheck@arrayHolder
  5226  001478  6E1C               	movwf	CRC8@data+1,c
  5227  00147A  0E03               	movlw	3
  5228  00147C  6E1D               	movwf	CRC8@len,c
  5229  00147E  ECB6  F015         	call	_CRC8	;wreg free
  5230  001482  0100               	movlb	0	; () banked
  5231  001484  6FF5               	movwf	CRCcheck@calculatedCRC& (0+255),b
  5232                           
  5233                           ; BSR set to: 0
  5234                           ;FastTransfer.c: 387: if (SentCRC == calculatedCRC) {
  5235  001486  0100               	movlb	0	; () banked
  5236  001488  51F5               	movf	CRCcheck@calculatedCRC& (0+255),w,b
  5237  00148A  0100               	movlb	0	; () banked
  5238  00148C  19F4               	xorwf	CRCcheck@SentCRC& (0+255),w,b
  5239  00148E  A4D8               	btfss	status,2,c
  5240  001490  D04E               	goto	l6461
  5241                           
  5242                           ; BSR set to: 0
  5243                           ;FastTransfer.c: 389: int rt;
  5244                           ;FastTransfer.c: 390: for (rt = 0; rt < 5; rt++) {
  5245  001492  0E00               	movlw	0
  5246  001494  0100               	movlb	0	; () banked
  5247  001496  6FFA               	movwf	(CRCcheck@rt+1)& (0+255),b
  5248  001498  0E00               	movlw	0
  5249  00149A  6FF9               	movwf	CRCcheck@rt& (0+255),b
  5250  00149C                     l6439:
  5251                           
  5252                           ; BSR set to: 0
  5253  00149C  0100               	movlb	0	; () banked
  5254  00149E  BFFA               	btfsc	(CRCcheck@rt+1)& (0+255),7,b
  5255  0014A0  D008               	goto	l6443
  5256  0014A2  0100               	movlb	0	; () banked
  5257  0014A4  51FA               	movf	(CRCcheck@rt+1)& (0+255),w,b
  5258  0014A6  E147               	bnz	l1120
  5259  0014A8  0E05               	movlw	5
  5260  0014AA  0100               	movlb	0	; () banked
  5261  0014AC  5DF9               	subwf	CRCcheck@rt& (0+255),w,b
  5262  0014AE  B0D8               	btfsc	status,0,c
  5263  0014B0  0012               	return	
  5264  0014B2                     l6443:
  5265                           
  5266                           ; BSR set to: 0
  5267                           ;FastTransfer.c: 391: if (returnAddress == crcBufS_get(&crc_buffer, rt, 0)) {
  5268  0014B2  0E28               	movlw	low _crc_buffer
  5269  0014B4  6E1B               	movwf	crcBufS_get@_this,c
  5270  0014B6  0E01               	movlw	high _crc_buffer
  5271  0014B8  6E1C               	movwf	crcBufS_get@_this+1,c
  5272  0014BA  C0F9  F01D         	movff	CRCcheck@rt,crcBufS_get@time
  5273  0014BE  0E00               	movlw	0
  5274  0014C0  6E1E               	movwf	crcBufS_get@space,c
  5275  0014C2  EC29  F00F         	call	_crcBufS_get	;wreg free
  5276  0014C6  183C               	xorwf	_returnAddress,w,c
  5277  0014C8  A4D8               	btfss	status,2,c
  5278  0014CA  D02D               	goto	l6457
  5279                           
  5280                           ;FastTransfer.c: 392: if (arrayHolder[2] == crcBufS_get(&crc_buffer, rt, 1)) {
  5281  0014CC  0E28               	movlw	low _crc_buffer
  5282  0014CE  6E1B               	movwf	crcBufS_get@_this,c
  5283  0014D0  0E01               	movlw	high _crc_buffer
  5284  0014D2  6E1C               	movwf	crcBufS_get@_this+1,c
  5285  0014D4  C0F9  F01D         	movff	CRCcheck@rt,crcBufS_get@time
  5286  0014D8  0E01               	movlw	1
  5287  0014DA  6E1E               	movwf	crcBufS_get@space,c
  5288  0014DC  EC29  F00F         	call	_crcBufS_get	;wreg free
  5289  0014E0  0100               	movlb	0	; () banked
  5290  0014E2  19F8               	xorwf	(CRCcheck@arrayHolder+2)& (0+255),w,b
  5291  0014E4  A4D8               	btfss	status,2,c
  5292  0014E6  D01F               	goto	l6457
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;FastTransfer.c: 393: if (arrayHolder[1] == 1) {
  5296  0014E8  0100               	movlb	0	; () banked
  5297  0014EA  05F7               	decf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  5298  0014EC  A4D8               	btfss	status,2,c
  5299  0014EE  D00B               	goto	l6453
  5300                           
  5301                           ; BSR set to: 0
  5302                           ;FastTransfer.c: 394: crcBufS_status_put(&crc_buffer, rt, 1);
  5303  0014F0  0E28               	movlw	low _crc_buffer
  5304  0014F2  6E1B               	movwf	crcBufS_status_put@_this,c
  5305  0014F4  0E01               	movlw	high _crc_buffer
  5306  0014F6  6E1C               	movwf	crcBufS_status_put@_this+1,c
  5307  0014F8  C0F9  F01D         	movff	CRCcheck@rt,crcBufS_status_put@time
  5308  0014FC  0E01               	movlw	1
  5309  0014FE  6E1E               	movwf	crcBufS_status_put@status,c
  5310  001500  EC06  F010         	call	_crcBufS_status_put	;wreg free
  5311                           
  5312                           ;FastTransfer.c: 395: break;
  5313  001504  0012               	return	
  5314  001506                     l6453:
  5315  001506  0E02               	movlw	2
  5316  001508  0100               	movlb	0	; () banked
  5317  00150A  19F7               	xorwf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  5318  00150C  A4D8               	btfss	status,2,c
  5319  00150E  D00B               	goto	l6457
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;FastTransfer.c: 397: crcBufS_status_put(&crc_buffer, rt, 2);
  5323  001510  0E28               	movlw	low _crc_buffer
  5324  001512  6E1B               	movwf	crcBufS_status_put@_this,c
  5325  001514  0E01               	movlw	high _crc_buffer
  5326  001516  6E1C               	movwf	crcBufS_status_put@_this+1,c
  5327  001518  C0F9  F01D         	movff	CRCcheck@rt,crcBufS_status_put@time
  5328  00151C  0E02               	movlw	2
  5329  00151E  6E1E               	movwf	crcBufS_status_put@status,c
  5330  001520  EC06  F010         	call	_crcBufS_status_put	;wreg free
  5331                           
  5332                           ;FastTransfer.c: 398: break;
  5333  001524  0012               	return	
  5334  001526                     l6457:
  5335  001526  0100               	movlb	0	; () banked
  5336  001528  4BF9               	infsnz	CRCcheck@rt& (0+255),f,b
  5337  00152A  2BFA               	incf	(CRCcheck@rt+1)& (0+255),f,b
  5338  00152C  D7B7               	goto	l6439
  5339  00152E                     l6461:
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;FastTransfer.c: 404: crcErrorCounter++;
  5343  00152E  0100               	movlb	0	; () banked
  5344  001530  4BC9               	infsnz	_crcErrorCounter& (0+255),f,b
  5345  001532  2BCA               	incf	(_crcErrorCounter+1)& (0+255),f,b
  5346  001534  0012               	return	
  5347  001536                     l1120:
  5348  001536  0012               	return		;funcret
  5349  001538                     __end_of_CRCcheck:
  5350                           	opt stack 0
  5351                           tosu	equ	0xFFF
  5352                           tosh	equ	0xFFE
  5353                           tosl	equ	0xFFD
  5354                           pclath	equ	0xFFA
  5355                           tblptru	equ	0xFF8
  5356                           tblptrh	equ	0xFF7
  5357                           tblptrl	equ	0xFF6
  5358                           tablat	equ	0xFF5
  5359                           prodh	equ	0xFF4
  5360                           prodl	equ	0xFF3
  5361                           intcon	equ	0xFF2
  5362                           postinc0	equ	0xFEE
  5363                           wreg	equ	0xFE8
  5364                           indf2	equ	0xFDF
  5365                           postinc2	equ	0xFDE
  5366                           postdec2	equ	0xFDD
  5367                           plusw2	equ	0xFDB
  5368                           fsr2h	equ	0xFDA
  5369                           fsr2l	equ	0xFD9
  5370                           status	equ	0xFD8
  5371                           
  5372 ;; *************** function _crcBufS_status_put *****************
  5373 ;; Defined at:
  5374 ;;		line 338 in file "FastTransfer.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  5377 ;;		 -> crc_buffer(17), 
  5378 ;;  time            1   28[COMRAM] unsigned char 
  5379 ;;  status          1   29[COMRAM] unsigned char 
  5380 ;; Auto vars:     Size  Location     Type
  5381 ;;  wantedTime      2   34[COMRAM] int 
  5382 ;; Return value:  Size  Location     Type
  5383 ;;                  1    wreg      void 
  5384 ;; Registers used:
  5385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5386 ;; Tracked objects:
  5387 ;;		On entry : 0/0
  5388 ;;		On exit  : 0/0
  5389 ;;		Unchanged: 0/0
  5390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5391 ;;      Params:         4       0       0       0       0       0       0
  5392 ;;      Locals:         2       0       0       0       0       0       0
  5393 ;;      Temps:          4       0       0       0       0       0       0
  5394 ;;      Totals:        10       0       0       0       0       0       0
  5395 ;;Total ram usage:       10 bytes
  5396 ;; Hardware stack levels used:    1
  5397 ;; Hardware stack levels required when called:    4
  5398 ;; This function calls:
  5399 ;;		Nothing
  5400 ;; This function is called by:
  5401 ;;		_CRCcheck
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           
  5405                           	psect	text18
  5406  00200C                     __ptext18:
  5407                           	opt stack 0
  5408  00200C                     _crcBufS_status_put:
  5409                           	opt stack 23
  5410                           
  5411                           ;FastTransfer.c: 339: if (time >= 5) {
  5412                           
  5413                           ;incstack = 0
  5414  00200C  0E04               	movlw	4
  5415  00200E  641D               	cpfsgt	crcBufS_status_put@time,c
  5416  002010  D002               	goto	l6195
  5417                           
  5418                           ;FastTransfer.c: 340: time = 5 - 1;
  5419  002012  0E04               	movlw	4
  5420  002014  6E1D               	movwf	crcBufS_status_put@time,c
  5421  002016                     l6195:
  5422                           
  5423                           ;FastTransfer.c: 341: }
  5424                           ;FastTransfer.c: 342: time = time + 1;
  5425  002016  281D               	incf	crcBufS_status_put@time,w,c
  5426  002018  6E1D               	movwf	crcBufS_status_put@time,c
  5427                           
  5428                           ;FastTransfer.c: 343: int wantedTime = time * 3;
  5429  00201A  501D               	movf	crcBufS_status_put@time,w,c
  5430  00201C  0D03               	mullw	3
  5431  00201E  CFF3 F023          	movff	prodl,crcBufS_status_put@wantedTime
  5432  002022  CFF4 F024          	movff	prodh,crcBufS_status_put@wantedTime+1
  5433                           
  5434                           ;FastTransfer.c: 344: if (wantedTime > _this->head) {
  5435  002026  EE20 F00F          	lfsr	2,15
  5436  00202A  501B               	movf	crcBufS_status_put@_this,w,c
  5437  00202C  26D9               	addwf	fsr2l,f,c
  5438  00202E  501C               	movf	crcBufS_status_put@_this+1,w,c
  5439  002030  22DA               	addwfc	fsr2h,f,c
  5440  002032  5023               	movf	crcBufS_status_put@wantedTime,w,c
  5441  002034  5CDE               	subwf	postinc2,w,c
  5442  002036  50DE               	movf	postinc2,w,c
  5443  002038  0A80               	xorlw	128
  5444  00203A  6E21               	movwf	(??_crcBufS_status_put+2)& (0+255),c
  5445  00203C  5024               	movf	crcBufS_status_put@wantedTime+1,w,c
  5446  00203E  0A80               	xorlw	128
  5447  002040  5821               	subwfb	(??_crcBufS_status_put+2)& (0+255),w,c
  5448  002042  B0D8               	btfsc	status,0,c
  5449  002044  D02B               	goto	l6203
  5450                           
  5451                           ;FastTransfer.c: 345: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  5452  002046  EE20 F00F          	lfsr	2,15
  5453  00204A  501B               	movf	crcBufS_status_put@_this,w,c
  5454  00204C  26D9               	addwf	fsr2l,f,c
  5455  00204E  501C               	movf	crcBufS_status_put@_this+1,w,c
  5456  002050  22DA               	addwfc	fsr2h,f,c
  5457  002052  CFDE F01F          	movff	postinc2,??_crcBufS_status_put
  5458  002056  CFDD F020          	movff	postdec2,??_crcBufS_status_put+1
  5459  00205A  1E1F               	comf	??_crcBufS_status_put,f,c
  5460  00205C  1E20               	comf	??_crcBufS_status_put+1,f,c
  5461  00205E  4A1F               	infsnz	??_crcBufS_status_put,f,c
  5462  002060  2A20               	incf	??_crcBufS_status_put+1,f,c
  5463  002062  5023               	movf	crcBufS_status_put@wantedTime,w,c
  5464  002064  261F               	addwf	??_crcBufS_status_put,f,c
  5465  002066  5024               	movf	crcBufS_status_put@wantedTime+1,w,c
  5466  002068  2220               	addwfc	??_crcBufS_status_put+1,f,c
  5467  00206A  1E1F               	comf	??_crcBufS_status_put,f,c
  5468  00206C  1E20               	comf	??_crcBufS_status_put+1,f,c
  5469  00206E  4A1F               	infsnz	??_crcBufS_status_put,f,c
  5470  002070  2A20               	incf	??_crcBufS_status_put+1,f,c
  5471  002072  0E0F               	movlw	15
  5472  002074  241F               	addwf	??_crcBufS_status_put,w,c
  5473  002076  6E23               	movwf	crcBufS_status_put@wantedTime,c
  5474  002078  0E00               	movlw	0
  5475  00207A  2020               	addwfc	??_crcBufS_status_put+1,w,c
  5476  00207C  6E24               	movwf	crcBufS_status_put@wantedTime+1,c
  5477                           
  5478                           ;FastTransfer.c: 346: _this->buf[(wantedTime + 2)] = status;
  5479  00207E  0E02               	movlw	2
  5480  002080  2423               	addwf	crcBufS_status_put@wantedTime,w,c
  5481  002082  6E1F               	movwf	??_crcBufS_status_put& (0+255),c
  5482  002084  0E00               	movlw	0
  5483  002086  2024               	addwfc	crcBufS_status_put@wantedTime+1,w,c
  5484  002088  6E20               	movwf	(??_crcBufS_status_put+1)& (0+255),c
  5485  00208A  501F               	movf	??_crcBufS_status_put,w,c
  5486  00208C  241B               	addwf	crcBufS_status_put@_this,w,c
  5487  00208E  6ED9               	movwf	fsr2l,c
  5488  002090  5020               	movf	??_crcBufS_status_put+1,w,c
  5489  002092  201C               	addwfc	crcBufS_status_put@_this+1,w,c
  5490  002094  6EDA               	movwf	fsr2h,c
  5491  002096  C01E  FFDF         	movff	crcBufS_status_put@status,indf2
  5492                           
  5493                           ;FastTransfer.c: 347: } else {
  5494  00209A  0012               	return	
  5495  00209C                     l6203:
  5496                           
  5497                           ;FastTransfer.c: 348: _this->buf[(_this->head - wantedTime) + 2] = status;
  5498  00209C  EE20 F00F          	lfsr	2,15
  5499  0020A0  501B               	movf	crcBufS_status_put@_this,w,c
  5500  0020A2  26D9               	addwf	fsr2l,f,c
  5501  0020A4  501C               	movf	crcBufS_status_put@_this+1,w,c
  5502  0020A6  22DA               	addwfc	fsr2h,f,c
  5503  0020A8  CFDE F01F          	movff	postinc2,??_crcBufS_status_put
  5504  0020AC  CFDD F020          	movff	postdec2,??_crcBufS_status_put+1
  5505  0020B0  C023  F021         	movff	crcBufS_status_put@wantedTime,??_crcBufS_status_put+2
  5506  0020B4  C024  F022         	movff	crcBufS_status_put@wantedTime+1,??_crcBufS_status_put+3
  5507  0020B8  1E21               	comf	??_crcBufS_status_put+2,f,c
  5508  0020BA  1E22               	comf	??_crcBufS_status_put+3,f,c
  5509  0020BC  4A21               	infsnz	??_crcBufS_status_put+2,f,c
  5510  0020BE  2A22               	incf	??_crcBufS_status_put+3,f,c
  5511  0020C0  501F               	movf	??_crcBufS_status_put,w,c
  5512  0020C2  2621               	addwf	??_crcBufS_status_put+2,f,c
  5513  0020C4  5020               	movf	??_crcBufS_status_put+1,w,c
  5514  0020C6  2222               	addwfc	??_crcBufS_status_put+3,f,c
  5515  0020C8  0E02               	movlw	2
  5516  0020CA  2621               	addwf	??_crcBufS_status_put+2,f,c
  5517  0020CC  0E00               	movlw	0
  5518  0020CE  2222               	addwfc	??_crcBufS_status_put+3,f,c
  5519  0020D0  5021               	movf	??_crcBufS_status_put+2,w,c
  5520  0020D2  241B               	addwf	crcBufS_status_put@_this,w,c
  5521  0020D4  6ED9               	movwf	fsr2l,c
  5522  0020D6  5022               	movf	??_crcBufS_status_put+3,w,c
  5523  0020D8  201C               	addwfc	crcBufS_status_put@_this+1,w,c
  5524  0020DA  6EDA               	movwf	fsr2h,c
  5525  0020DC  C01E  FFDF         	movff	crcBufS_status_put@status,indf2
  5526  0020E0  0012               	return	
  5527  0020E2                     __end_of_crcBufS_status_put:
  5528                           	opt stack 0
  5529                           tosu	equ	0xFFF
  5530                           tosh	equ	0xFFE
  5531                           tosl	equ	0xFFD
  5532                           pclath	equ	0xFFA
  5533                           tblptru	equ	0xFF8
  5534                           tblptrh	equ	0xFF7
  5535                           tblptrl	equ	0xFF6
  5536                           tablat	equ	0xFF5
  5537                           prodh	equ	0xFF4
  5538                           prodl	equ	0xFF3
  5539                           intcon	equ	0xFF2
  5540                           postinc0	equ	0xFEE
  5541                           wreg	equ	0xFE8
  5542                           indf2	equ	0xFDF
  5543                           postinc2	equ	0xFDE
  5544                           postdec2	equ	0xFDD
  5545                           plusw2	equ	0xFDB
  5546                           fsr2h	equ	0xFDA
  5547                           fsr2l	equ	0xFD9
  5548                           status	equ	0xFD8
  5549                           
  5550 ;; *************** function _crcBufS_get *****************
  5551 ;; Defined at:
  5552 ;;		line 355 in file "FastTransfer.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  5555 ;;		 -> crc_buffer(17), 
  5556 ;;  time            1   28[COMRAM] unsigned char 
  5557 ;;  space           1   29[COMRAM] unsigned char 
  5558 ;; Auto vars:     Size  Location     Type
  5559 ;;  wantedTime      2   36[COMRAM] int 
  5560 ;; Return value:  Size  Location     Type
  5561 ;;                  1    wreg      unsigned char 
  5562 ;; Registers used:
  5563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5564 ;; Tracked objects:
  5565 ;;		On entry : 0/0
  5566 ;;		On exit  : 0/0
  5567 ;;		Unchanged: 0/0
  5568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5569 ;;      Params:         4       0       0       0       0       0       0
  5570 ;;      Locals:         2       0       0       0       0       0       0
  5571 ;;      Temps:          6       0       0       0       0       0       0
  5572 ;;      Totals:        12       0       0       0       0       0       0
  5573 ;;Total ram usage:       12 bytes
  5574 ;; Hardware stack levels used:    1
  5575 ;; Hardware stack levels required when called:    4
  5576 ;; This function calls:
  5577 ;;		Nothing
  5578 ;; This function is called by:
  5579 ;;		_CRCcheck
  5580 ;;		_AKNAK
  5581 ;; This function uses a non-reentrant model
  5582 ;;
  5583                           
  5584                           	psect	text19
  5585  001E52                     __ptext19:
  5586                           	opt stack 0
  5587  001E52                     _crcBufS_get:
  5588                           	opt stack 23
  5589                           
  5590                           ;FastTransfer.c: 356: if (time >= 5) {
  5591                           
  5592                           ;incstack = 0
  5593  001E52  0E04               	movlw	4
  5594  001E54  641D               	cpfsgt	crcBufS_get@time,c
  5595  001E56  D002               	goto	l6171
  5596                           
  5597                           ;FastTransfer.c: 357: time = 5 - 1;
  5598  001E58  0E04               	movlw	4
  5599  001E5A  6E1D               	movwf	crcBufS_get@time,c
  5600  001E5C                     l6171:
  5601                           
  5602                           ;FastTransfer.c: 358: }
  5603                           ;FastTransfer.c: 359: if (space >= 3) {
  5604  001E5C  0E02               	movlw	2
  5605  001E5E  641E               	cpfsgt	crcBufS_get@space,c
  5606  001E60  D002               	goto	l6175
  5607                           
  5608                           ;FastTransfer.c: 360: space = 3 - 1;
  5609  001E62  0E02               	movlw	2
  5610  001E64  6E1E               	movwf	crcBufS_get@space,c
  5611  001E66                     l6175:
  5612                           
  5613                           ;FastTransfer.c: 361: }
  5614                           ;FastTransfer.c: 362: time = time + 1;
  5615  001E66  281D               	incf	crcBufS_get@time,w,c
  5616  001E68  6E1D               	movwf	crcBufS_get@time,c
  5617                           
  5618                           ;FastTransfer.c: 363: int wantedTime = time * 3;
  5619  001E6A  501D               	movf	crcBufS_get@time,w,c
  5620  001E6C  0D03               	mullw	3
  5621  001E6E  CFF3 F025          	movff	prodl,crcBufS_get@wantedTime
  5622  001E72  CFF4 F026          	movff	prodh,crcBufS_get@wantedTime+1
  5623                           
  5624                           ;FastTransfer.c: 364: if (wantedTime > _this->head) {
  5625  001E76  EE20 F00F          	lfsr	2,15
  5626  001E7A  501B               	movf	crcBufS_get@_this,w,c
  5627  001E7C  26D9               	addwf	fsr2l,f,c
  5628  001E7E  501C               	movf	crcBufS_get@_this+1,w,c
  5629  001E80  22DA               	addwfc	fsr2h,f,c
  5630  001E82  5025               	movf	crcBufS_get@wantedTime,w,c
  5631  001E84  5CDE               	subwf	postinc2,w,c
  5632  001E86  50DE               	movf	postinc2,w,c
  5633  001E88  0A80               	xorlw	128
  5634  001E8A  6E21               	movwf	(??_crcBufS_get+2)& (0+255),c
  5635  001E8C  5026               	movf	crcBufS_get@wantedTime+1,w,c
  5636  001E8E  0A80               	xorlw	128
  5637  001E90  5821               	subwfb	(??_crcBufS_get+2)& (0+255),w,c
  5638  001E92  B0D8               	btfsc	status,0,c
  5639  001E94  D02A               	goto	l6187
  5640                           
  5641                           ;FastTransfer.c: 365: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  5642  001E96  EE20 F00F          	lfsr	2,15
  5643  001E9A  501B               	movf	crcBufS_get@_this,w,c
  5644  001E9C  26D9               	addwf	fsr2l,f,c
  5645  001E9E  501C               	movf	crcBufS_get@_this+1,w,c
  5646  001EA0  22DA               	addwfc	fsr2h,f,c
  5647  001EA2  CFDE F01F          	movff	postinc2,??_crcBufS_get
  5648  001EA6  CFDD F020          	movff	postdec2,??_crcBufS_get+1
  5649  001EAA  1E1F               	comf	??_crcBufS_get,f,c
  5650  001EAC  1E20               	comf	??_crcBufS_get+1,f,c
  5651  001EAE  4A1F               	infsnz	??_crcBufS_get,f,c
  5652  001EB0  2A20               	incf	??_crcBufS_get+1,f,c
  5653  001EB2  5025               	movf	crcBufS_get@wantedTime,w,c
  5654  001EB4  261F               	addwf	??_crcBufS_get,f,c
  5655  001EB6  5026               	movf	crcBufS_get@wantedTime+1,w,c
  5656  001EB8  2220               	addwfc	??_crcBufS_get+1,f,c
  5657  001EBA  1E1F               	comf	??_crcBufS_get,f,c
  5658  001EBC  1E20               	comf	??_crcBufS_get+1,f,c
  5659  001EBE  4A1F               	infsnz	??_crcBufS_get,f,c
  5660  001EC0  2A20               	incf	??_crcBufS_get+1,f,c
  5661  001EC2  0E0F               	movlw	15
  5662  001EC4  241F               	addwf	??_crcBufS_get,w,c
  5663  001EC6  6E25               	movwf	crcBufS_get@wantedTime,c
  5664  001EC8  0E00               	movlw	0
  5665  001ECA  2020               	addwfc	??_crcBufS_get+1,w,c
  5666  001ECC  6E26               	movwf	crcBufS_get@wantedTime+1,c
  5667                           
  5668                           ;FastTransfer.c: 366: return (_this->buf[(wantedTime + space)]);
  5669  001ECE  501E               	movf	crcBufS_get@space,w,c
  5670  001ED0  2425               	addwf	crcBufS_get@wantedTime,w,c
  5671  001ED2  6E1F               	movwf	??_crcBufS_get& (0+255),c
  5672  001ED4  0E00               	movlw	0
  5673  001ED6  2026               	addwfc	crcBufS_get@wantedTime+1,w,c
  5674  001ED8  6E20               	movwf	(??_crcBufS_get+1)& (0+255),c
  5675  001EDA  501F               	movf	??_crcBufS_get,w,c
  5676  001EDC  241B               	addwf	crcBufS_get@_this,w,c
  5677  001EDE  6ED9               	movwf	fsr2l,c
  5678  001EE0  5020               	movf	??_crcBufS_get+1,w,c
  5679  001EE2  201C               	addwfc	crcBufS_get@_this+1,w,c
  5680  001EE4  6EDA               	movwf	fsr2h,c
  5681  001EE6  50DF               	movf	indf2,w,c
  5682                           
  5683                           ;FastTransfer.c: 367: } else {
  5684  001EE8  0012               	return	
  5685  001EEA                     l6187:
  5686                           
  5687                           ;FastTransfer.c: 368: return (_this->buf[(_this->head - wantedTime) + space]);
  5688  001EEA  EE20 F00F          	lfsr	2,15
  5689  001EEE  501B               	movf	crcBufS_get@_this,w,c
  5690  001EF0  26D9               	addwf	fsr2l,f,c
  5691  001EF2  501C               	movf	crcBufS_get@_this+1,w,c
  5692  001EF4  22DA               	addwfc	fsr2h,f,c
  5693  001EF6  CFDE F01F          	movff	postinc2,??_crcBufS_get
  5694  001EFA  CFDD F020          	movff	postdec2,??_crcBufS_get+1
  5695  001EFE  C025  F021         	movff	crcBufS_get@wantedTime,??_crcBufS_get+2
  5696  001F02  C026  F022         	movff	crcBufS_get@wantedTime+1,??_crcBufS_get+3
  5697  001F06  1E21               	comf	??_crcBufS_get+2,f,c
  5698  001F08  1E22               	comf	??_crcBufS_get+3,f,c
  5699  001F0A  4A21               	infsnz	??_crcBufS_get+2,f,c
  5700  001F0C  2A22               	incf	??_crcBufS_get+3,f,c
  5701  001F0E  501E               	movf	crcBufS_get@space,w,c
  5702  001F10  6E23               	movwf	(??_crcBufS_get+4)& (0+255),c
  5703  001F12  6A24               	clrf	(??_crcBufS_get+5)& (0+255),c
  5704  001F14  5021               	movf	??_crcBufS_get+2,w,c
  5705  001F16  2623               	addwf	??_crcBufS_get+4,f,c
  5706  001F18  5022               	movf	??_crcBufS_get+3,w,c
  5707  001F1A  2224               	addwfc	??_crcBufS_get+5,f,c
  5708  001F1C  501F               	movf	??_crcBufS_get,w,c
  5709  001F1E  2623               	addwf	??_crcBufS_get+4,f,c
  5710  001F20  5020               	movf	??_crcBufS_get+1,w,c
  5711  001F22  2224               	addwfc	??_crcBufS_get+5,f,c
  5712  001F24  5023               	movf	??_crcBufS_get+4,w,c
  5713  001F26  241B               	addwf	crcBufS_get@_this,w,c
  5714  001F28  6ED9               	movwf	fsr2l,c
  5715  001F2A  5024               	movf	??_crcBufS_get+5,w,c
  5716  001F2C  201C               	addwfc	crcBufS_get@_this+1,w,c
  5717  001F2E  6EDA               	movwf	fsr2h,c
  5718  001F30  50DF               	movf	indf2,w,c
  5719  001F32  0012               	return	
  5720  001F34                     __end_of_crcBufS_get:
  5721                           	opt stack 0
  5722                           tosu	equ	0xFFF
  5723                           tosh	equ	0xFFE
  5724                           tosl	equ	0xFFD
  5725                           pclath	equ	0xFFA
  5726                           tblptru	equ	0xFF8
  5727                           tblptrh	equ	0xFF7
  5728                           tblptrl	equ	0xFF6
  5729                           tablat	equ	0xFF5
  5730                           prodh	equ	0xFF4
  5731                           prodl	equ	0xFF3
  5732                           intcon	equ	0xFF2
  5733                           postinc0	equ	0xFEE
  5734                           wreg	equ	0xFE8
  5735                           indf2	equ	0xFDF
  5736                           postinc2	equ	0xFDE
  5737                           postdec2	equ	0xFDD
  5738                           plusw2	equ	0xFDB
  5739                           fsr2h	equ	0xFDA
  5740                           fsr2l	equ	0xFD9
  5741                           status	equ	0xFD8
  5742                           
  5743 ;; *************** function _Receive_get *****************
  5744 ;; Defined at:
  5745 ;;		line 126 in file "UART.c"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;		None
  5748 ;; Auto vars:     Size  Location     Type
  5749 ;;		None
  5750 ;; Return value:  Size  Location     Type
  5751 ;;                  1    wreg      unsigned char 
  5752 ;; Registers used:
  5753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/0
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5759 ;;      Params:         0       0       0       0       0       0       0
  5760 ;;      Locals:         0       0       0       0       0       0       0
  5761 ;;      Temps:          0       0       0       0       0       0       0
  5762 ;;      Totals:         0       0       0       0       0       0       0
  5763 ;;Total ram usage:        0 bytes
  5764 ;; Hardware stack levels used:    1
  5765 ;; Hardware stack levels required when called:    6
  5766 ;; This function calls:
  5767 ;;		_UART_buff_get
  5768 ;; This function is called by:
  5769 ;;		_SYSTEM_Initialize
  5770 ;;		_getch
  5771 ;;		_CRCcheck
  5772 ;;		_receiveData
  5773 ;; This function uses a non-reentrant model
  5774 ;;
  5775                           
  5776                           	psect	text20
  5777  003020                     __ptext20:
  5778                           	opt stack 0
  5779  003020                     _Receive_get:
  5780                           	opt stack 22
  5781                           
  5782                           ;UART.c: 127: return UART_buff_get(&input_buffer);
  5783                           
  5784                           ;incstack = 0
  5785  003020  0E00               	movlw	low _input_buffer
  5786  003022  6E21               	movwf	UART_buff_get@_this,c
  5787  003024  0E04               	movlw	high _input_buffer
  5788  003026  6E22               	movwf	UART_buff_get@_this+1,c
  5789  003028  EC1C  F013         	call	_UART_buff_get	;wreg free
  5790  00302C  0012               	return	
  5791  00302E                     __end_of_Receive_get:
  5792                           	opt stack 0
  5793                           tosu	equ	0xFFF
  5794                           tosh	equ	0xFFE
  5795                           tosl	equ	0xFFD
  5796                           pclath	equ	0xFFA
  5797                           tblptru	equ	0xFF8
  5798                           tblptrh	equ	0xFF7
  5799                           tblptrl	equ	0xFF6
  5800                           tablat	equ	0xFF5
  5801                           prodh	equ	0xFF4
  5802                           prodl	equ	0xFF3
  5803                           intcon	equ	0xFF2
  5804                           postinc0	equ	0xFEE
  5805                           wreg	equ	0xFE8
  5806                           indf2	equ	0xFDF
  5807                           postinc2	equ	0xFDE
  5808                           postdec2	equ	0xFDD
  5809                           plusw2	equ	0xFDB
  5810                           fsr2h	equ	0xFDA
  5811                           fsr2l	equ	0xFD9
  5812                           status	equ	0xFD8
  5813                           
  5814 ;; *************** function _UART_buff_get *****************
  5815 ;; Defined at:
  5816 ;;		line 81 in file "UART.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  5819 ;;		 -> output_buffer(206), input_buffer(206), 
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;  c               1   36[COMRAM] unsigned char 
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  1    wreg      unsigned char 
  5824 ;; Registers used:
  5825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5831 ;;      Params:         2       0       0       0       0       0       0
  5832 ;;      Locals:         1       0       0       0       0       0       0
  5833 ;;      Temps:          2       0       0       0       0       0       0
  5834 ;;      Totals:         5       0       0       0       0       0       0
  5835 ;;Total ram usage:        5 bytes
  5836 ;; Hardware stack levels used:    1
  5837 ;; Hardware stack levels required when called:    5
  5838 ;; This function calls:
  5839 ;;		_UART_buff_modulo_inc
  5840 ;; This function is called by:
  5841 ;;		_Receive_get
  5842 ;;		_Send_put
  5843 ;; This function uses a non-reentrant model
  5844 ;;
  5845                           
  5846                           	psect	text21
  5847  002638                     __ptext21:
  5848                           	opt stack 0
  5849  002638                     _UART_buff_get:
  5850                           	opt stack 21
  5851                           
  5852                           ;UART.c: 82: unsigned char c;
  5853                           ;UART.c: 83: if (_this->count > 0) {
  5854                           
  5855                           ;incstack = 0
  5856  002638  EE20 F0CC          	lfsr	2,204
  5857  00263C  5021               	movf	UART_buff_get@_this,w,c
  5858  00263E  26D9               	addwf	fsr2l,f,c
  5859  002640  5022               	movf	UART_buff_get@_this+1,w,c
  5860  002642  22DA               	addwfc	fsr2h,f,c
  5861  002644  0E01               	movlw	1
  5862  002646  BEDB               	btfsc	plusw2,7,c
  5863  002648  D03C               	goto	l6013
  5864  00264A  0E01               	movlw	1
  5865  00264C  50DB               	movf	plusw2,w,c
  5866  00264E  E103               	bnz	u6250
  5867  002650  04DE               	decf	postinc2,w,c
  5868  002652  A0D8               	btfss	status,0,c
  5869  002654  D036               	goto	l6013
  5870  002656                     u6250:
  5871                           
  5872                           ;UART.c: 84: c = _this->buf[_this->tail];
  5873  002656  EE20 F0CA          	lfsr	2,202
  5874  00265A  5021               	movf	UART_buff_get@_this,w,c
  5875  00265C  26D9               	addwf	fsr2l,f,c
  5876  00265E  5022               	movf	UART_buff_get@_this+1,w,c
  5877  002660  22DA               	addwfc	fsr2h,f,c
  5878  002662  CFDE F023          	movff	postinc2,??_UART_buff_get
  5879  002666  CFDD F024          	movff	postdec2,??_UART_buff_get+1
  5880  00266A  5023               	movf	??_UART_buff_get,w,c
  5881  00266C  2421               	addwf	UART_buff_get@_this,w,c
  5882  00266E  6ED9               	movwf	fsr2l,c
  5883  002670  5024               	movf	??_UART_buff_get+1,w,c
  5884  002672  2022               	addwfc	UART_buff_get@_this+1,w,c
  5885  002674  6EDA               	movwf	fsr2h,c
  5886  002676  50DF               	movf	indf2,w,c
  5887  002678  6E25               	movwf	UART_buff_get@c,c
  5888                           
  5889                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  5890  00267A  EE20 F0CA          	lfsr	2,202
  5891  00267E  5021               	movf	UART_buff_get@_this,w,c
  5892  002680  26D9               	addwf	fsr2l,f,c
  5893  002682  5022               	movf	UART_buff_get@_this+1,w,c
  5894  002684  22DA               	addwfc	fsr2h,f,c
  5895  002686  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  5896  00268A  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  5897  00268E  0E00               	movlw	0
  5898  002690  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  5899  002692  0EC8               	movlw	200
  5900  002694  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  5901  002696  EC0E  F017         	call	_UART_buff_modulo_inc	;wreg free
  5902  00269A  EE20 F0CA          	lfsr	2,202
  5903  00269E  5021               	movf	UART_buff_get@_this,w,c
  5904  0026A0  26D9               	addwf	fsr2l,f,c
  5905  0026A2  5022               	movf	UART_buff_get@_this+1,w,c
  5906  0026A4  22DA               	addwfc	fsr2h,f,c
  5907  0026A6  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  5908  0026AA  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  5909                           
  5910                           ;UART.c: 86: --_this->count;
  5911  0026AE  EE20 F0CC          	lfsr	2,204
  5912  0026B2  5021               	movf	UART_buff_get@_this,w,c
  5913  0026B4  26D9               	addwf	fsr2l,f,c
  5914  0026B6  5022               	movf	UART_buff_get@_this+1,w,c
  5915  0026B8  22DA               	addwfc	fsr2h,f,c
  5916  0026BA  06DE               	decf	postinc2,f,c
  5917  0026BC  0E00               	movlw	0
  5918  0026BE  5ADD               	subwfb	postdec2,f,c
  5919                           
  5920                           ;UART.c: 87: } else {
  5921  0026C0  D002               	goto	l1165
  5922  0026C2                     l6013:
  5923                           
  5924                           ;UART.c: 88: c = 0;
  5925  0026C2  0E00               	movlw	0
  5926  0026C4  6E25               	movwf	UART_buff_get@c,c
  5927  0026C6                     l1165:
  5928                           
  5929                           ;UART.c: 89: }
  5930                           ;UART.c: 90: return (c);
  5931  0026C6  5025               	movf	UART_buff_get@c,w,c
  5932  0026C8  0012               	return	
  5933  0026CA                     __end_of_UART_buff_get:
  5934                           	opt stack 0
  5935                           tosu	equ	0xFFF
  5936                           tosh	equ	0xFFE
  5937                           tosl	equ	0xFFD
  5938                           pclath	equ	0xFFA
  5939                           tblptru	equ	0xFF8
  5940                           tblptrh	equ	0xFF7
  5941                           tblptrl	equ	0xFF6
  5942                           tablat	equ	0xFF5
  5943                           prodh	equ	0xFF4
  5944                           prodl	equ	0xFF3
  5945                           intcon	equ	0xFF2
  5946                           postinc0	equ	0xFEE
  5947                           wreg	equ	0xFE8
  5948                           indf2	equ	0xFDF
  5949                           postinc2	equ	0xFDE
  5950                           postdec2	equ	0xFDD
  5951                           plusw2	equ	0xFDB
  5952                           fsr2h	equ	0xFDA
  5953                           fsr2l	equ	0xFD9
  5954                           status	equ	0xFD8
  5955                           
  5956 ;; *************** function _UART_buff_modulo_inc *****************
  5957 ;; Defined at:
  5958 ;;		line 106 in file "UART.c"
  5959 ;; Parameters:    Size  Location     Type
  5960 ;;  value           2   26[COMRAM] const unsigned int 
  5961 ;;  modulus         2   28[COMRAM] const unsigned int 
  5962 ;; Auto vars:     Size  Location     Type
  5963 ;;  my_value        2   30[COMRAM] unsigned int 
  5964 ;; Return value:  Size  Location     Type
  5965 ;;                  2   26[COMRAM] unsigned int 
  5966 ;; Registers used:
  5967 ;;		wreg, status,2, status,0
  5968 ;; Tracked objects:
  5969 ;;		On entry : 0/0
  5970 ;;		On exit  : 0/0
  5971 ;;		Unchanged: 0/0
  5972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5973 ;;      Params:         4       0       0       0       0       0       0
  5974 ;;      Locals:         2       0       0       0       0       0       0
  5975 ;;      Temps:          0       0       0       0       0       0       0
  5976 ;;      Totals:         6       0       0       0       0       0       0
  5977 ;;Total ram usage:        6 bytes
  5978 ;; Hardware stack levels used:    1
  5979 ;; Hardware stack levels required when called:    4
  5980 ;; This function calls:
  5981 ;;		Nothing
  5982 ;; This function is called by:
  5983 ;;		_UART_buff_put
  5984 ;;		_UART_buff_get
  5985 ;; This function uses a non-reentrant model
  5986 ;;
  5987                           
  5988                           	psect	text22
  5989  002E1C                     __ptext22:
  5990                           	opt stack 0
  5991  002E1C                     _UART_buff_modulo_inc:
  5992                           	opt stack 21
  5993                           
  5994                           ;UART.c: 107: unsigned int my_value = value + 1;
  5995                           
  5996                           ;incstack = 0
  5997  002E1C  0E01               	movlw	1
  5998  002E1E  241B               	addwf	UART_buff_modulo_inc@value,w,c
  5999  002E20  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  6000  002E22  0E00               	movlw	0
  6001  002E24  201C               	addwfc	UART_buff_modulo_inc@value+1,w,c
  6002  002E26  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  6003                           
  6004                           ;UART.c: 108: if (my_value >= modulus) {
  6005  002E28  501D               	movf	UART_buff_modulo_inc@modulus,w,c
  6006  002E2A  5C1F               	subwf	UART_buff_modulo_inc@my_value,w,c
  6007  002E2C  501E               	movf	UART_buff_modulo_inc@modulus+1,w,c
  6008  002E2E  5820               	subwfb	UART_buff_modulo_inc@my_value+1,w,c
  6009  002E30  A0D8               	btfss	status,0,c
  6010  002E32  D004               	goto	l5971
  6011                           
  6012                           ;UART.c: 109: my_value = 0;
  6013  002E34  0E00               	movlw	0
  6014  002E36  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  6015  002E38  0E00               	movlw	0
  6016  002E3A  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  6017  002E3C                     l5971:
  6018                           
  6019                           ;UART.c: 110: }
  6020                           ;UART.c: 111: return (my_value);
  6021  002E3C  C01F  F01B         	movff	UART_buff_modulo_inc@my_value,?_UART_buff_modulo_inc
  6022  002E40  C020  F01C         	movff	UART_buff_modulo_inc@my_value+1,?_UART_buff_modulo_inc+1
  6023  002E44  0012               	return	
  6024  002E46                     __end_of_UART_buff_modulo_inc:
  6025                           	opt stack 0
  6026                           tosu	equ	0xFFF
  6027                           tosh	equ	0xFFE
  6028                           tosl	equ	0xFFD
  6029                           pclath	equ	0xFFA
  6030                           tblptru	equ	0xFF8
  6031                           tblptrh	equ	0xFF7
  6032                           tblptrl	equ	0xFF6
  6033                           tablat	equ	0xFF5
  6034                           prodh	equ	0xFF4
  6035                           prodl	equ	0xFF3
  6036                           intcon	equ	0xFF2
  6037                           postinc0	equ	0xFEE
  6038                           wreg	equ	0xFE8
  6039                           indf2	equ	0xFDF
  6040                           postinc2	equ	0xFDE
  6041                           postdec2	equ	0xFDD
  6042                           plusw2	equ	0xFDB
  6043                           fsr2h	equ	0xFDA
  6044                           fsr2l	equ	0xFD9
  6045                           status	equ	0xFD8
  6046                           
  6047 ;; *************** function _Receive_available *****************
  6048 ;; Defined at:
  6049 ;;		line 122 in file "UART.c"
  6050 ;; Parameters:    Size  Location     Type
  6051 ;;		None
  6052 ;; Auto vars:     Size  Location     Type
  6053 ;;		None
  6054 ;; Return value:  Size  Location     Type
  6055 ;;                  2   28[COMRAM] int 
  6056 ;; Registers used:
  6057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6058 ;; Tracked objects:
  6059 ;;		On entry : 0/0
  6060 ;;		On exit  : 0/0
  6061 ;;		Unchanged: 0/0
  6062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6063 ;;      Params:         2       0       0       0       0       0       0
  6064 ;;      Locals:         0       0       0       0       0       0       0
  6065 ;;      Temps:          0       0       0       0       0       0       0
  6066 ;;      Totals:         2       0       0       0       0       0       0
  6067 ;;Total ram usage:        2 bytes
  6068 ;; Hardware stack levels used:    1
  6069 ;; Hardware stack levels required when called:    5
  6070 ;; This function calls:
  6071 ;;		_UART_buff_size
  6072 ;; This function is called by:
  6073 ;;		_SYSTEM_Initialize
  6074 ;;		_CRCcheck
  6075 ;;		_receiveData
  6076 ;; This function uses a non-reentrant model
  6077 ;;
  6078                           
  6079                           	psect	text23
  6080  002FAC                     __ptext23:
  6081                           	opt stack 0
  6082  002FAC                     _Receive_available:
  6083                           	opt stack 23
  6084                           
  6085                           ;UART.c: 123: return UART_buff_size(&input_buffer);
  6086                           
  6087                           ;incstack = 0
  6088  002FAC  0E00               	movlw	low _input_buffer
  6089  002FAE  6E1B               	movwf	UART_buff_size@_this,c
  6090  002FB0  0E04               	movlw	high _input_buffer
  6091  002FB2  6E1C               	movwf	UART_buff_size@_this+1,c
  6092  002FB4  ECE1  F017         	call	_UART_buff_size	;wreg free
  6093  002FB8  C01B  F01D         	movff	?_UART_buff_size,?_Receive_available
  6094  002FBC  C01C  F01E         	movff	?_UART_buff_size+1,?_Receive_available+1
  6095  002FC0  0012               	return	
  6096  002FC2                     __end_of_Receive_available:
  6097                           	opt stack 0
  6098                           tosu	equ	0xFFF
  6099                           tosh	equ	0xFFE
  6100                           tosl	equ	0xFFD
  6101                           pclath	equ	0xFFA
  6102                           tblptru	equ	0xFF8
  6103                           tblptrh	equ	0xFF7
  6104                           tblptrl	equ	0xFF6
  6105                           tablat	equ	0xFF5
  6106                           prodh	equ	0xFF4
  6107                           prodl	equ	0xFF3
  6108                           intcon	equ	0xFF2
  6109                           postinc0	equ	0xFEE
  6110                           wreg	equ	0xFE8
  6111                           indf2	equ	0xFDF
  6112                           postinc2	equ	0xFDE
  6113                           postdec2	equ	0xFDD
  6114                           plusw2	equ	0xFDB
  6115                           fsr2h	equ	0xFDA
  6116                           fsr2l	equ	0xFD9
  6117                           status	equ	0xFD8
  6118                           
  6119 ;; *************** function _UART_buff_size *****************
  6120 ;; Defined at:
  6121 ;;		line 102 in file "UART.c"
  6122 ;; Parameters:    Size  Location     Type
  6123 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  6124 ;;		 -> output_buffer(206), input_buffer(206), 
  6125 ;; Auto vars:     Size  Location     Type
  6126 ;;		None
  6127 ;; Return value:  Size  Location     Type
  6128 ;;                  2   26[COMRAM] int 
  6129 ;; Registers used:
  6130 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6131 ;; Tracked objects:
  6132 ;;		On entry : 0/0
  6133 ;;		On exit  : 0/0
  6134 ;;		Unchanged: 0/0
  6135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6136 ;;      Params:         2       0       0       0       0       0       0
  6137 ;;      Locals:         0       0       0       0       0       0       0
  6138 ;;      Temps:          0       0       0       0       0       0       0
  6139 ;;      Totals:         2       0       0       0       0       0       0
  6140 ;;Total ram usage:        2 bytes
  6141 ;; Hardware stack levels used:    1
  6142 ;; Hardware stack levels required when called:    4
  6143 ;; This function calls:
  6144 ;;		Nothing
  6145 ;; This function is called by:
  6146 ;;		_Receive_available
  6147 ;; This function uses a non-reentrant model
  6148 ;;
  6149                           
  6150                           	psect	text24
  6151  002FC2                     __ptext24:
  6152                           	opt stack 0
  6153  002FC2                     _UART_buff_size:
  6154                           	opt stack 23
  6155                           
  6156                           ;UART.c: 103: return (_this->count);
  6157                           
  6158                           ;incstack = 0
  6159  002FC2  EE20 F0CC          	lfsr	2,204
  6160  002FC6  501B               	movf	UART_buff_size@_this,w,c
  6161  002FC8  26D9               	addwf	fsr2l,f,c
  6162  002FCA  501C               	movf	UART_buff_size@_this+1,w,c
  6163  002FCC  22DA               	addwfc	fsr2h,f,c
  6164  002FCE  CFDE F01B          	movff	postinc2,?_UART_buff_size
  6165  002FD2  CFDD F01C          	movff	postdec2,?_UART_buff_size+1
  6166  002FD6  0012               	return	
  6167  002FD8                     __end_of_UART_buff_size:
  6168                           	opt stack 0
  6169                           tosu	equ	0xFFF
  6170                           tosh	equ	0xFFE
  6171                           tosl	equ	0xFFD
  6172                           pclath	equ	0xFFA
  6173                           tblptru	equ	0xFF8
  6174                           tblptrh	equ	0xFF7
  6175                           tblptrl	equ	0xFF6
  6176                           tablat	equ	0xFF5
  6177                           prodh	equ	0xFF4
  6178                           prodl	equ	0xFF3
  6179                           intcon	equ	0xFF2
  6180                           postinc0	equ	0xFEE
  6181                           wreg	equ	0xFE8
  6182                           indf2	equ	0xFDF
  6183                           postinc2	equ	0xFDE
  6184                           postdec2	equ	0xFDD
  6185                           plusw2	equ	0xFDB
  6186                           fsr2h	equ	0xFDA
  6187                           fsr2l	equ	0xFD9
  6188                           status	equ	0xFD8
  6189                           
  6190 ;; *************** function _CRC8 *****************
  6191 ;; Defined at:
  6192 ;;		line 35 in file "FastTransfer.c"
  6193 ;; Parameters:    Size  Location     Type
  6194 ;;  data            2   26[COMRAM] PTR const unsigned char 
  6195 ;;		 -> CRCcheck@arrayHolder(3), receiveData@holder_2358(3), receiveData@holder(3), rx_buffer(200), 
  6196 ;;		 -> ring_buffer(206), NULL(0), 
  6197 ;;  len             1   28[COMRAM] unsigned char 
  6198 ;; Auto vars:     Size  Location     Type
  6199 ;;  sum             1   29[COMRAM] unsigned char 
  6200 ;;  tempI           1   31[COMRAM] unsigned char 
  6201 ;;  extract         1   30[COMRAM] unsigned char 
  6202 ;;  crc             1   32[COMRAM] unsigned char 
  6203 ;; Return value:  Size  Location     Type
  6204 ;;                  1    wreg      unsigned char 
  6205 ;; Registers used:
  6206 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6207 ;; Tracked objects:
  6208 ;;		On entry : 0/0
  6209 ;;		On exit  : 0/0
  6210 ;;		Unchanged: 0/0
  6211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6212 ;;      Params:         3       0       0       0       0       0       0
  6213 ;;      Locals:         4       0       0       0       0       0       0
  6214 ;;      Temps:          0       0       0       0       0       0       0
  6215 ;;      Totals:         7       0       0       0       0       0       0
  6216 ;;Total ram usage:        7 bytes
  6217 ;; Hardware stack levels used:    1
  6218 ;; Hardware stack levels required when called:    4
  6219 ;; This function calls:
  6220 ;;		Nothing
  6221 ;; This function is called by:
  6222 ;;		_sendData
  6223 ;;		_receiveData
  6224 ;;		_CRCcheck
  6225 ;; This function uses a non-reentrant model
  6226 ;;
  6227                           
  6228                           	psect	text25
  6229  002B6C                     __ptext25:
  6230                           	opt stack 0
  6231  002B6C                     _CRC8:
  6232                           	opt stack 23
  6233                           
  6234                           ;FastTransfer.c: 36: unsigned char crc = 0x00;
  6235                           
  6236                           ;incstack = 0
  6237  002B6C  0E00               	movlw	0
  6238  002B6E  6E21               	movwf	CRC8@crc,c
  6239                           
  6240                           ;FastTransfer.c: 37: while (len--) {
  6241  002B70  D01C               	goto	l6133
  6242  002B72                     l6117:
  6243                           
  6244                           ;FastTransfer.c: 38: unsigned char extract = *data++;
  6245  002B72  C01B  FFD9         	movff	CRC8@data,fsr2l
  6246  002B76  C01C  FFDA         	movff	CRC8@data+1,fsr2h
  6247  002B7A  50DF               	movf	indf2,w,c
  6248  002B7C  6E1F               	movwf	CRC8@extract,c
  6249  002B7E  4A1B               	infsnz	CRC8@data,f,c
  6250  002B80  2A1C               	incf	CRC8@data+1,f,c
  6251                           
  6252                           ;FastTransfer.c: 39: unsigned char tempI;
  6253                           ;FastTransfer.c: 40: for (tempI = 8; tempI; tempI--) {
  6254  002B82  0E08               	movlw	8
  6255  002B84  6E20               	movwf	CRC8@tempI,c
  6256  002B86  D00E               	goto	l6131
  6257  002B88                     l6123:
  6258                           
  6259                           ;FastTransfer.c: 41: unsigned char sum = (crc ^ extract) & 0x01;
  6260  002B88  5021               	movf	CRC8@crc,w,c
  6261  002B8A  181F               	xorwf	CRC8@extract,w,c
  6262  002B8C  0B01               	andlw	1
  6263  002B8E  6E1E               	movwf	CRC8@sum,c
  6264                           
  6265                           ;FastTransfer.c: 42: crc >>= 1;
  6266  002B90  90D8               	bcf	status,0,c
  6267  002B92  3221               	rrcf	CRC8@crc,f,c
  6268                           
  6269                           ;FastTransfer.c: 43: if (sum) {
  6270  002B94  501E               	movf	CRC8@sum,w,c
  6271  002B96  B4D8               	btfsc	status,2,c
  6272  002B98  D002               	goto	l1006
  6273                           
  6274                           ;FastTransfer.c: 44: crc ^= 0x8C;
  6275  002B9A  0E8C               	movlw	140
  6276  002B9C  1A21               	xorwf	CRC8@crc,f,c
  6277  002B9E                     l1006:
  6278                           
  6279                           ;FastTransfer.c: 45: }
  6280                           ;FastTransfer.c: 46: extract >>= 1;
  6281  002B9E  90D8               	bcf	status,0,c
  6282  002BA0  321F               	rrcf	CRC8@extract,f,c
  6283  002BA2  0620               	decf	CRC8@tempI,f,c
  6284  002BA4                     l6131:
  6285  002BA4  5020               	movf	CRC8@tempI,w,c
  6286  002BA6  A4D8               	btfss	status,2,c
  6287  002BA8  D7EF               	goto	l6123
  6288  002BAA                     l6133:
  6289  002BAA  061D               	decf	CRC8@len,f,c
  6290  002BAC  281D               	incf	CRC8@len,w,c
  6291  002BAE  A4D8               	btfss	status,2,c
  6292  002BB0  D7E0               	goto	l6117
  6293                           
  6294                           ;FastTransfer.c: 47: }
  6295                           ;FastTransfer.c: 48: }
  6296                           ;FastTransfer.c: 49: return crc;
  6297  002BB2  5021               	movf	CRC8@crc,w,c
  6298  002BB4  0012               	return	
  6299  002BB6                     __end_of_CRC8:
  6300                           	opt stack 0
  6301                           tosu	equ	0xFFF
  6302                           tosh	equ	0xFFE
  6303                           tosl	equ	0xFFD
  6304                           pclath	equ	0xFFA
  6305                           tblptru	equ	0xFF8
  6306                           tblptrh	equ	0xFF7
  6307                           tblptrl	equ	0xFF6
  6308                           tablat	equ	0xFF5
  6309                           prodh	equ	0xFF4
  6310                           prodl	equ	0xFF3
  6311                           intcon	equ	0xFF2
  6312                           postinc0	equ	0xFEE
  6313                           wreg	equ	0xFE8
  6314                           indf2	equ	0xFDF
  6315                           postinc2	equ	0xFDE
  6316                           postdec2	equ	0xFDD
  6317                           plusw2	equ	0xFDB
  6318                           fsr2h	equ	0xFDA
  6319                           fsr2l	equ	0xFD9
  6320                           status	equ	0xFD8
  6321                           
  6322 ;; *************** function _handleIndicators *****************
  6323 ;; Defined at:
  6324 ;;		line 33 in file "Communications.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;  receivedIndi    2   36[COMRAM] int 
  6327 ;; Auto vars:     Size  Location     Type
  6328 ;;  i               2   41[COMRAM] int 
  6329 ;; Return value:  Size  Location     Type
  6330 ;;                  1    wreg      void 
  6331 ;; Registers used:
  6332 ;;		wreg, status,2, status,0, cstack
  6333 ;; Tracked objects:
  6334 ;;		On entry : 0/0
  6335 ;;		On exit  : 0/0
  6336 ;;		Unchanged: 0/0
  6337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6338 ;;      Params:         2       0       0       0       0       0       0
  6339 ;;      Locals:         2       0       0       0       0       0       0
  6340 ;;      Temps:          3       0       0       0       0       0       0
  6341 ;;      Totals:         7       0       0       0       0       0       0
  6342 ;;Total ram usage:        7 bytes
  6343 ;; Hardware stack levels used:    1
  6344 ;; Hardware stack levels required when called:    6
  6345 ;; This function calls:
  6346 ;;		_SetLEDOut
  6347 ;; This function is called by:
  6348 ;;		_updateComms
  6349 ;; This function uses a non-reentrant model
  6350 ;;
  6351                           
  6352                           	psect	text26
  6353  0027E0                     __ptext26:
  6354                           	opt stack 0
  6355  0027E0                     _handleIndicators:
  6356                           	opt stack 23
  6357                           
  6358                           ;Communications.c: 34: static int oldIndicators = 0;
  6359                           ;Communications.c: 35: if (receivedIndicators != oldIndicators) {
  6360                           
  6361                           ;incstack = 0
  6362  0027E0  0100               	movlb	0	; () banked
  6363  0027E2  51E1               	movf	handleIndicators@oldIndicators& (0+255),w,b
  6364  0027E4  1825               	xorwf	handleIndicators@receivedIndicators,w,c
  6365  0027E6  E105               	bnz	u7740
  6366  0027E8  0100               	movlb	0	; () banked
  6367  0027EA  51E2               	movf	(handleIndicators@oldIndicators+1)& (0+255),w,b
  6368  0027EC  1826               	xorwf	handleIndicators@receivedIndicators+1,w,c
  6369  0027EE  B4D8               	btfsc	status,2,c
  6370  0027F0  0012               	return	
  6371  0027F2                     u7740:
  6372                           
  6373                           ; BSR set to: 0
  6374                           ;Communications.c: 36: int i = 0;
  6375  0027F2  0E00               	movlw	0
  6376  0027F4  6E2B               	movwf	handleIndicators@i+1,c
  6377  0027F6  0E00               	movlw	0
  6378  0027F8  6E2A               	movwf	handleIndicators@i,c
  6379                           
  6380                           ;Communications.c: 37: for (i = 0; i < 6; i++) {
  6381  0027FA  0E00               	movlw	0
  6382  0027FC  6E2B               	movwf	handleIndicators@i+1,c
  6383  0027FE  0E00               	movlw	0
  6384  002800  6E2A               	movwf	handleIndicators@i,c
  6385                           
  6386                           ; BSR set to: 0
  6387  002802  BE2B               	btfsc	handleIndicators@i+1,7,c
  6388  002804  D006               	goto	l6909
  6389  002806  502B               	movf	handleIndicators@i+1,w,c
  6390  002808  E122               	bnz	l927
  6391  00280A  0E06               	movlw	6
  6392  00280C  5C2A               	subwf	handleIndicators@i,w,c
  6393  00280E  B0D8               	btfsc	status,0,c
  6394  002810  D01E               	goto	l927
  6395  002812                     l6909:
  6396                           
  6397                           ;Communications.c: 38: SetLEDOut(i, ((receivedIndicators >> i)&0x01));
  6398  002812  C02A  F01F         	movff	handleIndicators@i,SetLEDOut@lednum
  6399  002816  C02B  F020         	movff	handleIndicators@i+1,SetLEDOut@lednum+1
  6400  00281A  C02A  F027         	movff	handleIndicators@i,??_handleIndicators
  6401  00281E  C025  F028         	movff	handleIndicators@receivedIndicators,??_handleIndicators+1
  6402  002822  C026  F029         	movff	handleIndicators@receivedIndicators+1,??_handleIndicators+2
  6403  002826  2A27               	incf	??_handleIndicators,f,c
  6404  002828  D003               	goto	u7764
  6405  00282A                     u7765:
  6406  00282A  3429               	rlcf	??_handleIndicators+2,w,c
  6407  00282C  3229               	rrcf	??_handleIndicators+2,f,c
  6408  00282E  3228               	rrcf	??_handleIndicators+1,f,c
  6409  002830                     u7764:
  6410  002830  2E27               	decfsz	??_handleIndicators,f,c
  6411  002832  D7FB               	goto	u7765
  6412  002834  0E01               	movlw	1
  6413  002836  1428               	andwf	??_handleIndicators+1,w,c
  6414  002838  6E21               	movwf	SetLEDOut@state,c
  6415  00283A  6A22               	clrf	SetLEDOut@state+1,c
  6416  00283C  ECC7  F005         	call	_SetLEDOut	;wreg free
  6417  002840  4A2A               	infsnz	handleIndicators@i,f,c
  6418  002842  2A2B               	incf	handleIndicators@i+1,f,c
  6419  002844  BE2B               	btfsc	handleIndicators@i+1,7,c
  6420  002846  D7E5               	goto	l6909
  6421  002848  502B               	movf	handleIndicators@i+1,w,c
  6422  00284A  E101               	bnz	u7770
  6423  00284C  D7DE               	goto	L2
  6424  00284E                     u7770:
  6425  00284E                     l927:
  6426                           
  6427                           ;Communications.c: 39: }
  6428                           ;Communications.c: 40: oldIndicators = receivedIndicators;
  6429  00284E  C025  F0E1         	movff	handleIndicators@receivedIndicators,handleIndicators@oldIndicators
  6430  002852  C026  F0E2         	movff	handleIndicators@receivedIndicators+1,handleIndicators@oldIndicators+1
  6431  002856  0012               	return	
  6432  002858                     __end_of_handleIndicators:
  6433                           	opt stack 0
  6434                           tosu	equ	0xFFF
  6435                           tosh	equ	0xFFE
  6436                           tosl	equ	0xFFD
  6437                           pclath	equ	0xFFA
  6438                           tblptru	equ	0xFF8
  6439                           tblptrh	equ	0xFF7
  6440                           tblptrl	equ	0xFF6
  6441                           tablat	equ	0xFF5
  6442                           prodh	equ	0xFF4
  6443                           prodl	equ	0xFF3
  6444                           intcon	equ	0xFF2
  6445                           postinc0	equ	0xFEE
  6446                           wreg	equ	0xFE8
  6447                           indf2	equ	0xFDF
  6448                           postinc2	equ	0xFDE
  6449                           postdec2	equ	0xFDD
  6450                           plusw2	equ	0xFDB
  6451                           fsr2h	equ	0xFDA
  6452                           fsr2l	equ	0xFD9
  6453                           status	equ	0xFD8
  6454                           
  6455 ;; *************** function _SetLEDOut *****************
  6456 ;; Defined at:
  6457 ;;		line 25 in file "IO.c"
  6458 ;; Parameters:    Size  Location     Type
  6459 ;;  lednum          2   30[COMRAM] int 
  6460 ;;  state           2   32[COMRAM] int 
  6461 ;; Auto vars:     Size  Location     Type
  6462 ;;		None
  6463 ;; Return value:  Size  Location     Type
  6464 ;;                  1    wreg      void 
  6465 ;; Registers used:
  6466 ;;		wreg, status,2, status,0, cstack
  6467 ;; Tracked objects:
  6468 ;;		On entry : 0/0
  6469 ;;		On exit  : 0/0
  6470 ;;		Unchanged: 0/0
  6471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6472 ;;      Params:         4       0       0       0       0       0       0
  6473 ;;      Locals:         0       0       0       0       0       0       0
  6474 ;;      Temps:          2       0       0       0       0       0       0
  6475 ;;      Totals:         6       0       0       0       0       0       0
  6476 ;;Total ram usage:        6 bytes
  6477 ;; Hardware stack levels used:    1
  6478 ;; Hardware stack levels required when called:    5
  6479 ;; This function calls:
  6480 ;;		_Off_Led
  6481 ;;		_setLED
  6482 ;; This function is called by:
  6483 ;;		_handleIndicators
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           
  6487                           	psect	text27
  6488  000B8E                     __ptext27:
  6489                           	opt stack 0
  6490  000B8E                     _SetLEDOut:
  6491                           	opt stack 23
  6492                           
  6493                           ;IO.c: 26: switch (lednum) {
  6494                           
  6495                           ;incstack = 0
  6496  000B8E  D138               	goto	l6381
  6497  000B90                     l6247:
  6498                           
  6499                           ;IO.c: 28: if (state == 1) {
  6500  000B90  0421               	decf	SetLEDOut@state,w,c
  6501  000B92  1022               	iorwf	SetLEDOut@state+1,w,c
  6502  000B94  A4D8               	btfss	status,2,c
  6503  000B96  D00D               	goto	l6255
  6504                           
  6505                           ;IO.c: 29: Off_Led(0);
  6506  000B98  0E00               	movlw	0
  6507  000B9A  6E1C               	movwf	Off_Led@led+1,c
  6508  000B9C  0E00               	movlw	0
  6509  000B9E  6E1B               	movwf	Off_Led@led,c
  6510  000BA0  EC71  F010         	call	_Off_Led	;wreg free
  6511                           
  6512                           ;IO.c: 30: do { LATC1 = 1; } while(0);
  6513  000BA4  828B               	bsf	3979,1,c	;volatile
  6514                           
  6515                           ;IO.c: 31: LED_array[0] = 1;
  6516  000BA6  0E00               	movlw	0
  6517  000BA8  0100               	movlb	0	; () banked
  6518  000BAA  6F89               	movwf	(_LED_array+1)& (0+255),b
  6519  000BAC  0E01               	movlw	1
  6520  000BAE  6F88               	movwf	_LED_array& (0+255),b
  6521                           
  6522                           ;IO.c: 32: } else if (state == 0) {
  6523  000BB0  0012               	return	
  6524  000BB2                     l6255:
  6525  000BB2  5021               	movf	SetLEDOut@state,w,c
  6526  000BB4  1022               	iorwf	SetLEDOut@state+1,w,c
  6527  000BB6  A4D8               	btfss	status,2,c
  6528  000BB8  D00D               	goto	l6263
  6529                           
  6530                           ;IO.c: 33: Off_Led(0);
  6531  000BBA  0E00               	movlw	0
  6532  000BBC  6E1C               	movwf	Off_Led@led+1,c
  6533  000BBE  0E00               	movlw	0
  6534  000BC0  6E1B               	movwf	Off_Led@led,c
  6535  000BC2  EC71  F010         	call	_Off_Led	;wreg free
  6536                           
  6537                           ;IO.c: 34: do { LATC1 = 0; } while(0);
  6538  000BC6  928B               	bcf	3979,1,c	;volatile
  6539                           
  6540                           ;IO.c: 35: LED_array[0] = 0;
  6541  000BC8  0E00               	movlw	0
  6542  000BCA  0100               	movlb	0	; () banked
  6543  000BCC  6F89               	movwf	(_LED_array+1)& (0+255),b
  6544  000BCE  0E00               	movlw	0
  6545  000BD0  6F88               	movwf	_LED_array& (0+255),b
  6546                           
  6547                           ;IO.c: 36: }
  6548  000BD2  0012               	return	
  6549  000BD4                     l6263:
  6550                           
  6551                           ;IO.c: 37: else if (state == 2) {
  6552  000BD4  0E02               	movlw	2
  6553  000BD6  1821               	xorwf	SetLEDOut@state,w,c
  6554  000BD8  1022               	iorwf	SetLEDOut@state+1,w,c
  6555  000BDA  A4D8               	btfss	status,2,c
  6556  000BDC  0012               	return	
  6557                           
  6558                           ;IO.c: 39: do { LATC1 = 0; } while(0);
  6559  000BDE  928B               	bcf	3979,1,c	;volatile
  6560                           
  6561                           ;IO.c: 40: setLED(0);
  6562  000BE0  0E00               	movlw	0
  6563  000BE2  6E1C               	movwf	setLED@led+1,c
  6564  000BE4  0E00               	movlw	0
  6565  000BE6  6E1B               	movwf	setLED@led,c
  6566  000BE8  ECD6  F010         	call	_setLED	;wreg free
  6567                           
  6568                           ;IO.c: 41: LED_array[0] = 2;
  6569  000BEC  0E00               	movlw	0
  6570  000BEE  0100               	movlb	0	; () banked
  6571  000BF0  6F89               	movwf	(_LED_array+1)& (0+255),b
  6572  000BF2  0E02               	movlw	2
  6573  000BF4  6F88               	movwf	_LED_array& (0+255),b
  6574                           
  6575                           ; BSR set to: 0
  6576                           ;IO.c: 43: }
  6577                           ;IO.c: 44: break;
  6578                           
  6579                           ; BSR set to: 0
  6580                           
  6581                           ; BSR set to: 0
  6582  000BF6  0012               	return	
  6583  000BF8                     l6269:
  6584                           
  6585                           ;IO.c: 47: if (state == 1) {
  6586  000BF8  0421               	decf	SetLEDOut@state,w,c
  6587  000BFA  1022               	iorwf	SetLEDOut@state+1,w,c
  6588  000BFC  A4D8               	btfss	status,2,c
  6589  000BFE  D00D               	goto	l6277
  6590                           
  6591                           ;IO.c: 48: Off_Led(1);
  6592  000C00  0E00               	movlw	0
  6593  000C02  6E1C               	movwf	Off_Led@led+1,c
  6594  000C04  0E01               	movlw	1
  6595  000C06  6E1B               	movwf	Off_Led@led,c
  6596  000C08  EC71  F010         	call	_Off_Led	;wreg free
  6597                           
  6598                           ;IO.c: 49: do { LATA6 = 1; } while(0);
  6599  000C0C  8C89               	bsf	3977,6,c	;volatile
  6600                           
  6601                           ;IO.c: 50: LED_array[1] = 1;
  6602  000C0E  0E00               	movlw	0
  6603  000C10  0100               	movlb	0	; () banked
  6604  000C12  6F8B               	movwf	(_LED_array+3)& (0+255),b
  6605  000C14  0E01               	movlw	1
  6606  000C16  6F8A               	movwf	(_LED_array+2)& (0+255),b
  6607                           
  6608                           ;IO.c: 51: } else if (state == 0) {
  6609  000C18  0012               	return	
  6610  000C1A                     l6277:
  6611  000C1A  5021               	movf	SetLEDOut@state,w,c
  6612  000C1C  1022               	iorwf	SetLEDOut@state+1,w,c
  6613  000C1E  A4D8               	btfss	status,2,c
  6614  000C20  D00D               	goto	l6285
  6615                           
  6616                           ;IO.c: 52: Off_Led(1);
  6617  000C22  0E00               	movlw	0
  6618  000C24  6E1C               	movwf	Off_Led@led+1,c
  6619  000C26  0E01               	movlw	1
  6620  000C28  6E1B               	movwf	Off_Led@led,c
  6621  000C2A  EC71  F010         	call	_Off_Led	;wreg free
  6622                           
  6623                           ;IO.c: 53: do { LATA6 = 0; } while(0);
  6624  000C2E  9C89               	bcf	3977,6,c	;volatile
  6625                           
  6626                           ;IO.c: 54: LED_array[1] = 0;
  6627  000C30  0E00               	movlw	0
  6628  000C32  0100               	movlb	0	; () banked
  6629  000C34  6F8B               	movwf	(_LED_array+3)& (0+255),b
  6630  000C36  0E00               	movlw	0
  6631  000C38  6F8A               	movwf	(_LED_array+2)& (0+255),b
  6632                           
  6633                           ;IO.c: 55: } else if (state == 2) {
  6634  000C3A  0012               	return	
  6635  000C3C                     l6285:
  6636  000C3C  0E02               	movlw	2
  6637  000C3E  1821               	xorwf	SetLEDOut@state,w,c
  6638  000C40  1022               	iorwf	SetLEDOut@state+1,w,c
  6639  000C42  A4D8               	btfss	status,2,c
  6640  000C44  0012               	return	
  6641                           
  6642                           ;IO.c: 57: do { LATA6 = 0; } while(0);
  6643  000C46  9C89               	bcf	3977,6,c	;volatile
  6644                           
  6645                           ;IO.c: 58: setLED(1);
  6646  000C48  0E00               	movlw	0
  6647  000C4A  6E1C               	movwf	setLED@led+1,c
  6648  000C4C  0E01               	movlw	1
  6649  000C4E  6E1B               	movwf	setLED@led,c
  6650  000C50  ECD6  F010         	call	_setLED	;wreg free
  6651                           
  6652                           ;IO.c: 59: LED_array[1] = 2;
  6653  000C54  0E00               	movlw	0
  6654  000C56  0100               	movlb	0	; () banked
  6655  000C58  6F8B               	movwf	(_LED_array+3)& (0+255),b
  6656  000C5A  0E02               	movlw	2
  6657  000C5C  6F8A               	movwf	(_LED_array+2)& (0+255),b
  6658                           
  6659                           ; BSR set to: 0
  6660                           ;IO.c: 61: }
  6661                           ;IO.c: 62: break;
  6662                           
  6663                           ; BSR set to: 0
  6664                           
  6665                           ; BSR set to: 0
  6666  000C5E  0012               	return	
  6667  000C60                     l6291:
  6668                           
  6669                           ;IO.c: 64: if (state == 1) {
  6670  000C60  0421               	decf	SetLEDOut@state,w,c
  6671  000C62  1022               	iorwf	SetLEDOut@state+1,w,c
  6672  000C64  A4D8               	btfss	status,2,c
  6673  000C66  D00D               	goto	l6299
  6674                           
  6675                           ;IO.c: 65: Off_Led(2);
  6676  000C68  0E00               	movlw	0
  6677  000C6A  6E1C               	movwf	Off_Led@led+1,c
  6678  000C6C  0E02               	movlw	2
  6679  000C6E  6E1B               	movwf	Off_Led@led,c
  6680  000C70  EC71  F010         	call	_Off_Led	;wreg free
  6681                           
  6682                           ;IO.c: 66: do { LATA7 = 1; } while(0);
  6683  000C74  8E89               	bsf	3977,7,c	;volatile
  6684                           
  6685                           ;IO.c: 67: LED_array[2] = 1;
  6686  000C76  0E00               	movlw	0
  6687  000C78  0100               	movlb	0	; () banked
  6688  000C7A  6F8D               	movwf	(_LED_array+5)& (0+255),b
  6689  000C7C  0E01               	movlw	1
  6690  000C7E  6F8C               	movwf	(_LED_array+4)& (0+255),b
  6691                           
  6692                           ;IO.c: 68: } else if (state == 0) {
  6693  000C80  0012               	return	
  6694  000C82                     l6299:
  6695  000C82  5021               	movf	SetLEDOut@state,w,c
  6696  000C84  1022               	iorwf	SetLEDOut@state+1,w,c
  6697  000C86  A4D8               	btfss	status,2,c
  6698  000C88  D00D               	goto	l6307
  6699                           
  6700                           ;IO.c: 69: Off_Led(2);
  6701  000C8A  0E00               	movlw	0
  6702  000C8C  6E1C               	movwf	Off_Led@led+1,c
  6703  000C8E  0E02               	movlw	2
  6704  000C90  6E1B               	movwf	Off_Led@led,c
  6705  000C92  EC71  F010         	call	_Off_Led	;wreg free
  6706                           
  6707                           ;IO.c: 70: do { LATA7 = 0; } while(0);
  6708  000C96  9E89               	bcf	3977,7,c	;volatile
  6709                           
  6710                           ;IO.c: 71: LED_array[2] = 0;
  6711  000C98  0E00               	movlw	0
  6712  000C9A  0100               	movlb	0	; () banked
  6713  000C9C  6F8D               	movwf	(_LED_array+5)& (0+255),b
  6714  000C9E  0E00               	movlw	0
  6715  000CA0  6F8C               	movwf	(_LED_array+4)& (0+255),b
  6716                           
  6717                           ;IO.c: 72: } else if (state == 2) {
  6718  000CA2  0012               	return	
  6719  000CA4                     l6307:
  6720  000CA4  0E02               	movlw	2
  6721  000CA6  1821               	xorwf	SetLEDOut@state,w,c
  6722  000CA8  1022               	iorwf	SetLEDOut@state+1,w,c
  6723  000CAA  A4D8               	btfss	status,2,c
  6724  000CAC  0012               	return	
  6725                           
  6726                           ;IO.c: 74: do { LATA7 = 0; } while(0);
  6727  000CAE  9E89               	bcf	3977,7,c	;volatile
  6728                           
  6729                           ;IO.c: 75: setLED(2);
  6730  000CB0  0E00               	movlw	0
  6731  000CB2  6E1C               	movwf	setLED@led+1,c
  6732  000CB4  0E02               	movlw	2
  6733  000CB6  6E1B               	movwf	setLED@led,c
  6734  000CB8  ECD6  F010         	call	_setLED	;wreg free
  6735                           
  6736                           ;IO.c: 77: LED_array[2] = 2;
  6737  000CBC  0E00               	movlw	0
  6738  000CBE  0100               	movlb	0	; () banked
  6739  000CC0  6F8D               	movwf	(_LED_array+5)& (0+255),b
  6740  000CC2  0E02               	movlw	2
  6741  000CC4  6F8C               	movwf	(_LED_array+4)& (0+255),b
  6742                           
  6743                           ; BSR set to: 0
  6744                           ;IO.c: 79: }
  6745                           ;IO.c: 82: break;
  6746                           
  6747                           ; BSR set to: 0
  6748                           
  6749                           ; BSR set to: 0
  6750  000CC6  0012               	return	
  6751  000CC8                     l6313:
  6752                           
  6753                           ;IO.c: 85: if (state == 1) {
  6754  000CC8  0421               	decf	SetLEDOut@state,w,c
  6755  000CCA  1022               	iorwf	SetLEDOut@state+1,w,c
  6756  000CCC  A4D8               	btfss	status,2,c
  6757  000CCE  D00D               	goto	l6321
  6758                           
  6759                           ;IO.c: 86: Off_Led(3);
  6760  000CD0  0E00               	movlw	0
  6761  000CD2  6E1C               	movwf	Off_Led@led+1,c
  6762  000CD4  0E03               	movlw	3
  6763  000CD6  6E1B               	movwf	Off_Led@led,c
  6764  000CD8  EC71  F010         	call	_Off_Led	;wreg free
  6765                           
  6766                           ;IO.c: 87: do { LATE2 = 1; } while(0);
  6767  000CDC  848D               	bsf	3981,2,c	;volatile
  6768                           
  6769                           ;IO.c: 88: LED_array[3] = 1;
  6770  000CDE  0E00               	movlw	0
  6771  000CE0  0100               	movlb	0	; () banked
  6772  000CE2  6F8F               	movwf	(_LED_array+7)& (0+255),b
  6773  000CE4  0E01               	movlw	1
  6774  000CE6  6F8E               	movwf	(_LED_array+6)& (0+255),b
  6775                           
  6776                           ;IO.c: 89: } else if (state == 0) {
  6777  000CE8  0012               	return	
  6778  000CEA                     l6321:
  6779  000CEA  5021               	movf	SetLEDOut@state,w,c
  6780  000CEC  1022               	iorwf	SetLEDOut@state+1,w,c
  6781  000CEE  A4D8               	btfss	status,2,c
  6782  000CF0  D00D               	goto	l6329
  6783                           
  6784                           ;IO.c: 90: Off_Led(3);
  6785  000CF2  0E00               	movlw	0
  6786  000CF4  6E1C               	movwf	Off_Led@led+1,c
  6787  000CF6  0E03               	movlw	3
  6788  000CF8  6E1B               	movwf	Off_Led@led,c
  6789  000CFA  EC71  F010         	call	_Off_Led	;wreg free
  6790                           
  6791                           ;IO.c: 91: do { LATE2 = 0; } while(0);
  6792  000CFE  948D               	bcf	3981,2,c	;volatile
  6793                           
  6794                           ;IO.c: 92: LED_array[3] = 0;
  6795  000D00  0E00               	movlw	0
  6796  000D02  0100               	movlb	0	; () banked
  6797  000D04  6F8F               	movwf	(_LED_array+7)& (0+255),b
  6798  000D06  0E00               	movlw	0
  6799  000D08  6F8E               	movwf	(_LED_array+6)& (0+255),b
  6800                           
  6801                           ;IO.c: 93: }
  6802  000D0A  0012               	return	
  6803  000D0C                     l6329:
  6804                           
  6805                           ;IO.c: 94: else if (state == 2) {
  6806  000D0C  0E02               	movlw	2
  6807  000D0E  1821               	xorwf	SetLEDOut@state,w,c
  6808  000D10  1022               	iorwf	SetLEDOut@state+1,w,c
  6809  000D12  A4D8               	btfss	status,2,c
  6810  000D14  0012               	return	
  6811                           
  6812                           ;IO.c: 95: do { LATE2 = 0; } while(0);
  6813  000D16  948D               	bcf	3981,2,c	;volatile
  6814                           
  6815                           ;IO.c: 96: setLED(3);
  6816  000D18  0E00               	movlw	0
  6817  000D1A  6E1C               	movwf	setLED@led+1,c
  6818  000D1C  0E03               	movlw	3
  6819  000D1E  6E1B               	movwf	setLED@led,c
  6820  000D20  ECD6  F010         	call	_setLED	;wreg free
  6821                           
  6822                           ;IO.c: 97: LED_array[3] = 2;
  6823  000D24  0E00               	movlw	0
  6824  000D26  0100               	movlb	0	; () banked
  6825  000D28  6F8F               	movwf	(_LED_array+7)& (0+255),b
  6826  000D2A  0E02               	movlw	2
  6827  000D2C  6F8E               	movwf	(_LED_array+6)& (0+255),b
  6828                           
  6829                           ; BSR set to: 0
  6830                           ;IO.c: 99: }
  6831                           ;IO.c: 101: break;
  6832                           
  6833                           ; BSR set to: 0
  6834                           
  6835                           ; BSR set to: 0
  6836  000D2E  0012               	return	
  6837  000D30                     l6335:
  6838                           
  6839                           ;IO.c: 103: if (state == 1) {
  6840  000D30  0421               	decf	SetLEDOut@state,w,c
  6841  000D32  1022               	iorwf	SetLEDOut@state+1,w,c
  6842  000D34  A4D8               	btfss	status,2,c
  6843  000D36  D00D               	goto	l6343
  6844                           
  6845                           ;IO.c: 104: Off_Led(4);
  6846  000D38  0E00               	movlw	0
  6847  000D3A  6E1C               	movwf	Off_Led@led+1,c
  6848  000D3C  0E04               	movlw	4
  6849  000D3E  6E1B               	movwf	Off_Led@led,c
  6850  000D40  EC71  F010         	call	_Off_Led	;wreg free
  6851                           
  6852                           ;IO.c: 105: do { LATE1 = 1; } while(0);
  6853  000D44  828D               	bsf	3981,1,c	;volatile
  6854                           
  6855                           ;IO.c: 106: LED_array[4] = 1;
  6856  000D46  0E00               	movlw	0
  6857  000D48  0100               	movlb	0	; () banked
  6858  000D4A  6F91               	movwf	(_LED_array+9)& (0+255),b
  6859  000D4C  0E01               	movlw	1
  6860  000D4E  6F90               	movwf	(_LED_array+8)& (0+255),b
  6861                           
  6862                           ;IO.c: 107: } else if (state == 0) {
  6863  000D50  0012               	return	
  6864  000D52                     l6343:
  6865  000D52  5021               	movf	SetLEDOut@state,w,c
  6866  000D54  1022               	iorwf	SetLEDOut@state+1,w,c
  6867  000D56  A4D8               	btfss	status,2,c
  6868  000D58  D00D               	goto	l6351
  6869                           
  6870                           ;IO.c: 108: Off_Led(4);
  6871  000D5A  0E00               	movlw	0
  6872  000D5C  6E1C               	movwf	Off_Led@led+1,c
  6873  000D5E  0E04               	movlw	4
  6874  000D60  6E1B               	movwf	Off_Led@led,c
  6875  000D62  EC71  F010         	call	_Off_Led	;wreg free
  6876                           
  6877                           ;IO.c: 109: do { LATE1 = 0; } while(0);
  6878  000D66  928D               	bcf	3981,1,c	;volatile
  6879                           
  6880                           ;IO.c: 110: LED_array[4] = 0;
  6881  000D68  0E00               	movlw	0
  6882  000D6A  0100               	movlb	0	; () banked
  6883  000D6C  6F91               	movwf	(_LED_array+9)& (0+255),b
  6884  000D6E  0E00               	movlw	0
  6885  000D70  6F90               	movwf	(_LED_array+8)& (0+255),b
  6886                           
  6887                           ;IO.c: 111: }
  6888  000D72  0012               	return	
  6889  000D74                     l6351:
  6890                           
  6891                           ;IO.c: 112: else if (state == 2) {
  6892  000D74  0E02               	movlw	2
  6893  000D76  1821               	xorwf	SetLEDOut@state,w,c
  6894  000D78  1022               	iorwf	SetLEDOut@state+1,w,c
  6895  000D7A  A4D8               	btfss	status,2,c
  6896  000D7C  0012               	return	
  6897                           
  6898                           ;IO.c: 113: do { LATE1 = 0; } while(0);
  6899  000D7E  928D               	bcf	3981,1,c	;volatile
  6900                           
  6901                           ;IO.c: 114: setLED(4);
  6902  000D80  0E00               	movlw	0
  6903  000D82  6E1C               	movwf	setLED@led+1,c
  6904  000D84  0E04               	movlw	4
  6905  000D86  6E1B               	movwf	setLED@led,c
  6906  000D88  ECD6  F010         	call	_setLED	;wreg free
  6907                           
  6908                           ;IO.c: 115: LED_array[4] = 2;
  6909  000D8C  0E00               	movlw	0
  6910  000D8E  0100               	movlb	0	; () banked
  6911  000D90  6F91               	movwf	(_LED_array+9)& (0+255),b
  6912  000D92  0E02               	movlw	2
  6913  000D94  6F90               	movwf	(_LED_array+8)& (0+255),b
  6914                           
  6915                           ; BSR set to: 0
  6916                           ;IO.c: 116: }
  6917                           ;IO.c: 118: break;
  6918                           
  6919                           ; BSR set to: 0
  6920                           
  6921                           ; BSR set to: 0
  6922  000D96  0012               	return	
  6923  000D98                     l6357:
  6924                           
  6925                           ;IO.c: 120: if (state == 1) {
  6926  000D98  0421               	decf	SetLEDOut@state,w,c
  6927  000D9A  1022               	iorwf	SetLEDOut@state+1,w,c
  6928  000D9C  A4D8               	btfss	status,2,c
  6929  000D9E  D00D               	goto	l6365
  6930                           
  6931                           ;IO.c: 121: Off_Led(5);
  6932  000DA0  0E00               	movlw	0
  6933  000DA2  6E1C               	movwf	Off_Led@led+1,c
  6934  000DA4  0E05               	movlw	5
  6935  000DA6  6E1B               	movwf	Off_Led@led,c
  6936  000DA8  EC71  F010         	call	_Off_Led	;wreg free
  6937                           
  6938                           ;IO.c: 122: do { LATE0 = 1; } while(0);
  6939  000DAC  808D               	bsf	3981,0,c	;volatile
  6940                           
  6941                           ;IO.c: 123: LED_array[5] = 1;
  6942  000DAE  0E00               	movlw	0
  6943  000DB0  0100               	movlb	0	; () banked
  6944  000DB2  6F93               	movwf	(_LED_array+11)& (0+255),b
  6945  000DB4  0E01               	movlw	1
  6946  000DB6  6F92               	movwf	(_LED_array+10)& (0+255),b
  6947                           
  6948                           ;IO.c: 124: } else if (state == 0) {
  6949  000DB8  0012               	return	
  6950  000DBA                     l6365:
  6951  000DBA  5021               	movf	SetLEDOut@state,w,c
  6952  000DBC  1022               	iorwf	SetLEDOut@state+1,w,c
  6953  000DBE  A4D8               	btfss	status,2,c
  6954  000DC0  D00D               	goto	l6373
  6955                           
  6956                           ;IO.c: 125: Off_Led(5);
  6957  000DC2  0E00               	movlw	0
  6958  000DC4  6E1C               	movwf	Off_Led@led+1,c
  6959  000DC6  0E05               	movlw	5
  6960  000DC8  6E1B               	movwf	Off_Led@led,c
  6961  000DCA  EC71  F010         	call	_Off_Led	;wreg free
  6962                           
  6963                           ;IO.c: 126: do { LATE0 = 0; } while(0);
  6964  000DCE  908D               	bcf	3981,0,c	;volatile
  6965                           
  6966                           ;IO.c: 127: LED_array[5] = 0;
  6967  000DD0  0E00               	movlw	0
  6968  000DD2  0100               	movlb	0	; () banked
  6969  000DD4  6F93               	movwf	(_LED_array+11)& (0+255),b
  6970  000DD6  0E00               	movlw	0
  6971  000DD8  6F92               	movwf	(_LED_array+10)& (0+255),b
  6972                           
  6973                           ;IO.c: 128: }
  6974  000DDA  0012               	return	
  6975  000DDC                     l6373:
  6976                           
  6977                           ;IO.c: 129: else if (state == 2) {
  6978  000DDC  0E02               	movlw	2
  6979  000DDE  1821               	xorwf	SetLEDOut@state,w,c
  6980  000DE0  1022               	iorwf	SetLEDOut@state+1,w,c
  6981  000DE2  A4D8               	btfss	status,2,c
  6982  000DE4  0012               	return	
  6983                           
  6984                           ;IO.c: 130: do { LATE0 = 0; } while(0);
  6985  000DE6  908D               	bcf	3981,0,c	;volatile
  6986                           
  6987                           ;IO.c: 131: setLED(5);
  6988  000DE8  0E00               	movlw	0
  6989  000DEA  6E1C               	movwf	setLED@led+1,c
  6990  000DEC  0E05               	movlw	5
  6991  000DEE  6E1B               	movwf	setLED@led,c
  6992  000DF0  ECD6  F010         	call	_setLED	;wreg free
  6993                           
  6994                           ;IO.c: 132: LED_array[5] = 2;
  6995  000DF4  0E00               	movlw	0
  6996  000DF6  0100               	movlb	0	; () banked
  6997  000DF8  6F93               	movwf	(_LED_array+11)& (0+255),b
  6998  000DFA  0E02               	movlw	2
  6999  000DFC  6F92               	movwf	(_LED_array+10)& (0+255),b
  7000                           
  7001                           ; BSR set to: 0
  7002                           ;IO.c: 138: }
  7003                           
  7004                           ; BSR set to: 0
  7005                           ;IO.c: 134: }
  7006                           ;IO.c: 137: break;
  7007                           
  7008                           ; BSR set to: 0
  7009                           
  7010                           ; BSR set to: 0
  7011  000DFE  0012               	return	
  7012  000E00                     l6381:
  7013  000E00  C01F  F023         	movff	SetLEDOut@lednum,??_SetLEDOut
  7014  000E04  C020  F024         	movff	SetLEDOut@lednum+1,??_SetLEDOut+1
  7015                           
  7016                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7017                           ; Switch size 1, requested type "space"
  7018                           ; Number of cases is 1, Range of values is 0 to 0
  7019                           ; switch strategies available:
  7020                           ; Name         Instructions Cycles
  7021                           ; simple_byte            4     3 (average)
  7022                           ;	Chosen strategy is simple_byte
  7023  000E08  5024               	movf	??_SetLEDOut+1,w,c
  7024  000E0A  0A00               	xorlw	0	; case 0
  7025  000E0C  A4D8               	btfss	status,2,c
  7026  000E0E  0012               	return	
  7027                           
  7028                           ; Switch size 1, requested type "space"
  7029                           ; Number of cases is 6, Range of values is 0 to 5
  7030                           ; switch strategies available:
  7031                           ; Name         Instructions Cycles
  7032                           ; simple_byte           19    10 (average)
  7033                           ;	Chosen strategy is simple_byte
  7034  000E10  5023               	movf	??_SetLEDOut,w,c
  7035  000E12  0A00               	xorlw	0	; case 0
  7036  000E14  B4D8               	btfsc	status,2,c
  7037  000E16  D6BC               	goto	l6247
  7038  000E18  0A01               	xorlw	1	; case 1
  7039  000E1A  B4D8               	btfsc	status,2,c
  7040  000E1C  D6ED               	goto	l6269
  7041  000E1E  0A03               	xorlw	3	; case 2
  7042  000E20  B4D8               	btfsc	status,2,c
  7043  000E22  D71E               	goto	l6291
  7044  000E24  0A01               	xorlw	1	; case 3
  7045  000E26  B4D8               	btfsc	status,2,c
  7046  000E28  D74F               	goto	l6313
  7047  000E2A  0A07               	xorlw	7	; case 4
  7048  000E2C  B4D8               	btfsc	status,2,c
  7049  000E2E  D780               	goto	l6335
  7050  000E30  0A01               	xorlw	1	; case 5
  7051  000E32  A4D8               	btfss	status,2,c
  7052  000E34  0012               	return	
  7053  000E36  D7B0               	goto	l6357
  7054  000E38                     __end_of_SetLEDOut:
  7055                           	opt stack 0
  7056                           tosu	equ	0xFFF
  7057                           tosh	equ	0xFFE
  7058                           tosl	equ	0xFFD
  7059                           pclath	equ	0xFFA
  7060                           tblptru	equ	0xFF8
  7061                           tblptrh	equ	0xFF7
  7062                           tblptrl	equ	0xFF6
  7063                           tablat	equ	0xFF5
  7064                           prodh	equ	0xFF4
  7065                           prodl	equ	0xFF3
  7066                           intcon	equ	0xFF2
  7067                           postinc0	equ	0xFEE
  7068                           wreg	equ	0xFE8
  7069                           indf2	equ	0xFDF
  7070                           postinc2	equ	0xFDE
  7071                           postdec2	equ	0xFDD
  7072                           plusw2	equ	0xFDB
  7073                           fsr2h	equ	0xFDA
  7074                           fsr2l	equ	0xFD9
  7075                           status	equ	0xFD8
  7076                           
  7077 ;; *************** function _setLED *****************
  7078 ;; Defined at:
  7079 ;;		line 202 in file "mcc_generated_files/tmr2.c"
  7080 ;; Parameters:    Size  Location     Type
  7081 ;;  led             2   26[COMRAM] int 
  7082 ;; Auto vars:     Size  Location     Type
  7083 ;;		None
  7084 ;; Return value:  Size  Location     Type
  7085 ;;                  1    wreg      void 
  7086 ;; Registers used:
  7087 ;;		wreg, status,2, status,0
  7088 ;; Tracked objects:
  7089 ;;		On entry : 0/0
  7090 ;;		On exit  : 0/0
  7091 ;;		Unchanged: 0/0
  7092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7093 ;;      Params:         2       0       0       0       0       0       0
  7094 ;;      Locals:         0       0       0       0       0       0       0
  7095 ;;      Temps:          2       0       0       0       0       0       0
  7096 ;;      Totals:         4       0       0       0       0       0       0
  7097 ;;Total ram usage:        4 bytes
  7098 ;; Hardware stack levels used:    1
  7099 ;; Hardware stack levels required when called:    4
  7100 ;; This function calls:
  7101 ;;		Nothing
  7102 ;; This function is called by:
  7103 ;;		_SetLEDOut
  7104 ;; This function uses a non-reentrant model
  7105 ;;
  7106                           
  7107                           	psect	text28
  7108  0021AC                     __ptext28:
  7109                           	opt stack 0
  7110  0021AC                     _setLED:
  7111                           	opt stack 23
  7112                           
  7113                           ;tmr2.c: 203: switch (led){
  7114                           
  7115                           ;incstack = 0
  7116  0021AC  D042               	goto	l6071
  7117  0021AE                     l6057:
  7118                           
  7119                           ;tmr2.c: 205: LEDNUM_ENAB[0]=1;
  7120  0021AE  0E00               	movlw	0
  7121  0021B0  0100               	movlb	0	; () banked
  7122  0021B2  6F99               	movwf	(_LEDNUM_ENAB+1)& (0+255),b
  7123  0021B4  0E01               	movlw	1
  7124  0021B6  6F98               	movwf	_LEDNUM_ENAB& (0+255),b
  7125                           
  7126                           ;tmr2.c: 206: LEDState[0]=0;
  7127  0021B8  0E00               	movlw	0
  7128  0021BA  0100               	movlb	0	; () banked
  7129  0021BC  6FA5               	movwf	(_LEDState+1)& (0+255),b
  7130  0021BE  0E00               	movlw	0
  7131  0021C0  6FA4               	movwf	_LEDState& (0+255),b
  7132                           
  7133                           ;tmr2.c: 207: break;
  7134  0021C2  0012               	return	
  7135  0021C4                     l6059:
  7136                           
  7137                           ;tmr2.c: 209: LEDNUM_ENAB[1]=1;
  7138  0021C4  0E00               	movlw	0
  7139  0021C6  0100               	movlb	0	; () banked
  7140  0021C8  6F9B               	movwf	(_LEDNUM_ENAB+3)& (0+255),b
  7141  0021CA  0E01               	movlw	1
  7142  0021CC  6F9A               	movwf	(_LEDNUM_ENAB+2)& (0+255),b
  7143                           
  7144                           ;tmr2.c: 210: LEDState[1]=0;
  7145  0021CE  0E00               	movlw	0
  7146  0021D0  0100               	movlb	0	; () banked
  7147  0021D2  6FA7               	movwf	(_LEDState+3)& (0+255),b
  7148  0021D4  0E00               	movlw	0
  7149  0021D6  6FA6               	movwf	(_LEDState+2)& (0+255),b
  7150                           
  7151                           ;tmr2.c: 211: break;
  7152  0021D8  0012               	return	
  7153  0021DA                     l6061:
  7154                           
  7155                           ;tmr2.c: 213: LEDNUM_ENAB[2]=1;
  7156  0021DA  0E00               	movlw	0
  7157  0021DC  0100               	movlb	0	; () banked
  7158  0021DE  6F9D               	movwf	(_LEDNUM_ENAB+5)& (0+255),b
  7159  0021E0  0E01               	movlw	1
  7160  0021E2  6F9C               	movwf	(_LEDNUM_ENAB+4)& (0+255),b
  7161                           
  7162                           ;tmr2.c: 214: LEDState[2]=0;
  7163  0021E4  0E00               	movlw	0
  7164  0021E6  0100               	movlb	0	; () banked
  7165  0021E8  6FA9               	movwf	(_LEDState+5)& (0+255),b
  7166  0021EA  0E00               	movlw	0
  7167  0021EC  6FA8               	movwf	(_LEDState+4)& (0+255),b
  7168                           
  7169                           ;tmr2.c: 215: break;
  7170  0021EE  0012               	return	
  7171  0021F0                     l6063:
  7172                           
  7173                           ;tmr2.c: 217: LEDNUM_ENAB[3]=1;
  7174  0021F0  0E00               	movlw	0
  7175  0021F2  0100               	movlb	0	; () banked
  7176  0021F4  6F9F               	movwf	(_LEDNUM_ENAB+7)& (0+255),b
  7177  0021F6  0E01               	movlw	1
  7178  0021F8  6F9E               	movwf	(_LEDNUM_ENAB+6)& (0+255),b
  7179                           
  7180                           ;tmr2.c: 218: LEDState[3]=0;
  7181  0021FA  0E00               	movlw	0
  7182  0021FC  0100               	movlb	0	; () banked
  7183  0021FE  6FAB               	movwf	(_LEDState+7)& (0+255),b
  7184  002200  0E00               	movlw	0
  7185  002202  6FAA               	movwf	(_LEDState+6)& (0+255),b
  7186                           
  7187                           ;tmr2.c: 219: break;
  7188  002204  0012               	return	
  7189  002206                     l6065:
  7190                           
  7191                           ;tmr2.c: 221: LEDNUM_ENAB[4]=1;
  7192  002206  0E00               	movlw	0
  7193  002208  0100               	movlb	0	; () banked
  7194  00220A  6FA1               	movwf	(_LEDNUM_ENAB+9)& (0+255),b
  7195  00220C  0E01               	movlw	1
  7196  00220E  6FA0               	movwf	(_LEDNUM_ENAB+8)& (0+255),b
  7197                           
  7198                           ;tmr2.c: 222: LEDState[4]=0;
  7199  002210  0E00               	movlw	0
  7200  002212  0100               	movlb	0	; () banked
  7201  002214  6FAD               	movwf	(_LEDState+9)& (0+255),b
  7202  002216  0E00               	movlw	0
  7203  002218  6FAC               	movwf	(_LEDState+8)& (0+255),b
  7204                           
  7205                           ;tmr2.c: 223: break;
  7206  00221A  0012               	return	
  7207  00221C                     l6067:
  7208                           
  7209                           ;tmr2.c: 225: LEDNUM_ENAB[5]=1;
  7210  00221C  0E00               	movlw	0
  7211  00221E  0100               	movlb	0	; () banked
  7212  002220  6FA3               	movwf	(_LEDNUM_ENAB+11)& (0+255),b
  7213  002222  0E01               	movlw	1
  7214  002224  6FA2               	movwf	(_LEDNUM_ENAB+10)& (0+255),b
  7215                           
  7216                           ;tmr2.c: 226: LEDState[5]=0;
  7217  002226  0E00               	movlw	0
  7218  002228  0100               	movlb	0	; () banked
  7219  00222A  6FAF               	movwf	(_LEDState+11)& (0+255),b
  7220  00222C  0E00               	movlw	0
  7221  00222E  6FAE               	movwf	(_LEDState+10)& (0+255),b
  7222                           
  7223                           ; BSR set to: 0
  7224                           ;tmr2.c: 228: }
  7225                           
  7226                           ;tmr2.c: 227: break;
  7227  002230  0012               	return	
  7228  002232                     l6071:
  7229  002232  C01B  F01D         	movff	setLED@led,??_setLED
  7230  002236  C01C  F01E         	movff	setLED@led+1,??_setLED+1
  7231                           
  7232                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7233                           ; Switch size 1, requested type "space"
  7234                           ; Number of cases is 1, Range of values is 0 to 0
  7235                           ; switch strategies available:
  7236                           ; Name         Instructions Cycles
  7237                           ; simple_byte            4     3 (average)
  7238                           ;	Chosen strategy is simple_byte
  7239  00223A  501E               	movf	??_setLED+1,w,c
  7240  00223C  0A00               	xorlw	0	; case 0
  7241  00223E  A4D8               	btfss	status,2,c
  7242  002240  0012               	return	
  7243                           
  7244                           ; Switch size 1, requested type "space"
  7245                           ; Number of cases is 6, Range of values is 0 to 5
  7246                           ; switch strategies available:
  7247                           ; Name         Instructions Cycles
  7248                           ; simple_byte           19    10 (average)
  7249                           ;	Chosen strategy is simple_byte
  7250  002242  501D               	movf	??_setLED,w,c
  7251  002244  0A00               	xorlw	0	; case 0
  7252  002246  B4D8               	btfsc	status,2,c
  7253  002248  D7B2               	goto	l6057
  7254  00224A  0A01               	xorlw	1	; case 1
  7255  00224C  B4D8               	btfsc	status,2,c
  7256  00224E  D7BA               	goto	l6059
  7257  002250  0A03               	xorlw	3	; case 2
  7258  002252  B4D8               	btfsc	status,2,c
  7259  002254  D7C2               	goto	l6061
  7260  002256  0A01               	xorlw	1	; case 3
  7261  002258  B4D8               	btfsc	status,2,c
  7262  00225A  D7CA               	goto	l6063
  7263  00225C  0A07               	xorlw	7	; case 4
  7264  00225E  B4D8               	btfsc	status,2,c
  7265  002260  D7D2               	goto	l6065
  7266  002262  0A01               	xorlw	1	; case 5
  7267  002264  A4D8               	btfss	status,2,c
  7268  002266  0012               	return	
  7269  002268  D7D9               	goto	l6067
  7270  00226A                     __end_of_setLED:
  7271                           	opt stack 0
  7272                           tosu	equ	0xFFF
  7273                           tosh	equ	0xFFE
  7274                           tosl	equ	0xFFD
  7275                           pclath	equ	0xFFA
  7276                           tblptru	equ	0xFF8
  7277                           tblptrh	equ	0xFF7
  7278                           tblptrl	equ	0xFF6
  7279                           tablat	equ	0xFF5
  7280                           prodh	equ	0xFF4
  7281                           prodl	equ	0xFF3
  7282                           intcon	equ	0xFF2
  7283                           postinc0	equ	0xFEE
  7284                           wreg	equ	0xFE8
  7285                           indf2	equ	0xFDF
  7286                           postinc2	equ	0xFDE
  7287                           postdec2	equ	0xFDD
  7288                           plusw2	equ	0xFDB
  7289                           fsr2h	equ	0xFDA
  7290                           fsr2l	equ	0xFD9
  7291                           status	equ	0xFD8
  7292                           
  7293 ;; *************** function _Off_Led *****************
  7294 ;; Defined at:
  7295 ;;		line 230 in file "mcc_generated_files/tmr2.c"
  7296 ;; Parameters:    Size  Location     Type
  7297 ;;  led             2   26[COMRAM] int 
  7298 ;; Auto vars:     Size  Location     Type
  7299 ;;		None
  7300 ;; Return value:  Size  Location     Type
  7301 ;;                  1    wreg      void 
  7302 ;; Registers used:
  7303 ;;		wreg, status,2, status,0
  7304 ;; Tracked objects:
  7305 ;;		On entry : 0/0
  7306 ;;		On exit  : 0/0
  7307 ;;		Unchanged: 0/0
  7308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7309 ;;      Params:         2       0       0       0       0       0       0
  7310 ;;      Locals:         0       0       0       0       0       0       0
  7311 ;;      Temps:          2       0       0       0       0       0       0
  7312 ;;      Totals:         4       0       0       0       0       0       0
  7313 ;;Total ram usage:        4 bytes
  7314 ;; Hardware stack levels used:    1
  7315 ;; Hardware stack levels required when called:    4
  7316 ;; This function calls:
  7317 ;;		Nothing
  7318 ;; This function is called by:
  7319 ;;		_SetLEDOut
  7320 ;; This function uses a non-reentrant model
  7321 ;;
  7322                           
  7323                           	psect	text29
  7324  0020E2                     __ptext29:
  7325                           	opt stack 0
  7326  0020E2                     _Off_Led:
  7327                           	opt stack 23
  7328                           
  7329                           ;tmr2.c: 231: switch (led){
  7330                           
  7331                           ;incstack = 0
  7332  0020E2  D048               	goto	l6105
  7333  0020E4                     l6079:
  7334                           
  7335                           ;tmr2.c: 233: LEDNUM_ENAB[0]=0;
  7336  0020E4  0E00               	movlw	0
  7337  0020E6  0100               	movlb	0	; () banked
  7338  0020E8  6F99               	movwf	(_LEDNUM_ENAB+1)& (0+255),b
  7339  0020EA  0E00               	movlw	0
  7340  0020EC  6F98               	movwf	_LEDNUM_ENAB& (0+255),b
  7341                           
  7342                           ;tmr2.c: 234: LEDState[0]=0;
  7343  0020EE  0E00               	movlw	0
  7344  0020F0  0100               	movlb	0	; () banked
  7345  0020F2  6FA5               	movwf	(_LEDState+1)& (0+255),b
  7346  0020F4  0E00               	movlw	0
  7347  0020F6  6FA4               	movwf	_LEDState& (0+255),b
  7348                           
  7349                           ; BSR set to: 0
  7350                           
  7351                           ; BSR set to: 0
  7352                           
  7353                           ;tmr2.c: 235: do { LATC1 = 0; } while(0);
  7354  0020F8  928B               	bcf	3979,1,c	;volatile
  7355                           
  7356                           ; BSR set to: 0
  7357                           ;tmr2.c: 236: break;
  7358  0020FA  0012               	return	
  7359  0020FC                     l6083:
  7360                           
  7361                           ;tmr2.c: 238: LEDNUM_ENAB[1]=0;
  7362  0020FC  0E00               	movlw	0
  7363  0020FE  0100               	movlb	0	; () banked
  7364  002100  6F9B               	movwf	(_LEDNUM_ENAB+3)& (0+255),b
  7365  002102  0E00               	movlw	0
  7366  002104  6F9A               	movwf	(_LEDNUM_ENAB+2)& (0+255),b
  7367                           
  7368                           ;tmr2.c: 239: LEDState[1]=0;
  7369  002106  0E00               	movlw	0
  7370  002108  0100               	movlb	0	; () banked
  7371  00210A  6FA7               	movwf	(_LEDState+3)& (0+255),b
  7372  00210C  0E00               	movlw	0
  7373  00210E  6FA6               	movwf	(_LEDState+2)& (0+255),b
  7374                           
  7375                           ; BSR set to: 0
  7376                           
  7377                           ; BSR set to: 0
  7378                           
  7379                           ;tmr2.c: 240: do { LATA6 = 0; } while(0);
  7380  002110  9C89               	bcf	3977,6,c	;volatile
  7381                           
  7382                           ; BSR set to: 0
  7383                           ;tmr2.c: 241: break;
  7384  002112  0012               	return	
  7385  002114                     l6087:
  7386                           
  7387                           ;tmr2.c: 243: LEDNUM_ENAB[2]=0;
  7388  002114  0E00               	movlw	0
  7389  002116  0100               	movlb	0	; () banked
  7390  002118  6F9D               	movwf	(_LEDNUM_ENAB+5)& (0+255),b
  7391  00211A  0E00               	movlw	0
  7392  00211C  6F9C               	movwf	(_LEDNUM_ENAB+4)& (0+255),b
  7393                           
  7394                           ;tmr2.c: 244: LEDState[2]=0;
  7395  00211E  0E00               	movlw	0
  7396  002120  0100               	movlb	0	; () banked
  7397  002122  6FA9               	movwf	(_LEDState+5)& (0+255),b
  7398  002124  0E00               	movlw	0
  7399  002126  6FA8               	movwf	(_LEDState+4)& (0+255),b
  7400                           
  7401                           ; BSR set to: 0
  7402                           
  7403                           ; BSR set to: 0
  7404                           
  7405                           ;tmr2.c: 245: do { LATA7 = 0; } while(0);
  7406  002128  9E89               	bcf	3977,7,c	;volatile
  7407                           
  7408                           ; BSR set to: 0
  7409                           ;tmr2.c: 246: break;
  7410  00212A  0012               	return	
  7411  00212C                     l6091:
  7412                           
  7413                           ;tmr2.c: 248: LEDNUM_ENAB[3]=0;
  7414  00212C  0E00               	movlw	0
  7415  00212E  0100               	movlb	0	; () banked
  7416  002130  6F9F               	movwf	(_LEDNUM_ENAB+7)& (0+255),b
  7417  002132  0E00               	movlw	0
  7418  002134  6F9E               	movwf	(_LEDNUM_ENAB+6)& (0+255),b
  7419                           
  7420                           ;tmr2.c: 249: LEDState[3]=0;
  7421  002136  0E00               	movlw	0
  7422  002138  0100               	movlb	0	; () banked
  7423  00213A  6FAB               	movwf	(_LEDState+7)& (0+255),b
  7424  00213C  0E00               	movlw	0
  7425  00213E  6FAA               	movwf	(_LEDState+6)& (0+255),b
  7426                           
  7427                           ; BSR set to: 0
  7428                           
  7429                           ; BSR set to: 0
  7430                           
  7431                           ;tmr2.c: 250: do { LATE2 = 0; } while(0);
  7432  002140  948D               	bcf	3981,2,c	;volatile
  7433                           
  7434                           ; BSR set to: 0
  7435                           ;tmr2.c: 251: break;
  7436  002142  0012               	return	
  7437  002144                     l6095:
  7438                           
  7439                           ;tmr2.c: 253: LEDNUM_ENAB[4]=0;
  7440  002144  0E00               	movlw	0
  7441  002146  0100               	movlb	0	; () banked
  7442  002148  6FA1               	movwf	(_LEDNUM_ENAB+9)& (0+255),b
  7443  00214A  0E00               	movlw	0
  7444  00214C  6FA0               	movwf	(_LEDNUM_ENAB+8)& (0+255),b
  7445                           
  7446                           ;tmr2.c: 254: LEDState[4]=0;
  7447  00214E  0E00               	movlw	0
  7448  002150  0100               	movlb	0	; () banked
  7449  002152  6FAD               	movwf	(_LEDState+9)& (0+255),b
  7450  002154  0E00               	movlw	0
  7451  002156  6FAC               	movwf	(_LEDState+8)& (0+255),b
  7452                           
  7453                           ; BSR set to: 0
  7454                           
  7455                           ; BSR set to: 0
  7456                           
  7457                           ;tmr2.c: 255: do { LATE1 = 0; } while(0);
  7458  002158  928D               	bcf	3981,1,c	;volatile
  7459                           
  7460                           ; BSR set to: 0
  7461                           ;tmr2.c: 256: break;
  7462  00215A  0012               	return	
  7463  00215C                     l6099:
  7464                           
  7465                           ;tmr2.c: 258: LEDNUM_ENAB[5]=0;
  7466  00215C  0E00               	movlw	0
  7467  00215E  0100               	movlb	0	; () banked
  7468  002160  6FA3               	movwf	(_LEDNUM_ENAB+11)& (0+255),b
  7469  002162  0E00               	movlw	0
  7470  002164  6FA2               	movwf	(_LEDNUM_ENAB+10)& (0+255),b
  7471                           
  7472                           ;tmr2.c: 259: LEDState[5]=0;
  7473  002166  0E00               	movlw	0
  7474  002168  0100               	movlb	0	; () banked
  7475  00216A  6FAF               	movwf	(_LEDState+11)& (0+255),b
  7476  00216C  0E00               	movlw	0
  7477  00216E  6FAE               	movwf	(_LEDState+10)& (0+255),b
  7478                           
  7479                           ; BSR set to: 0
  7480                           
  7481                           ; BSR set to: 0
  7482                           
  7483                           ;tmr2.c: 260: do { LATE0 = 0; } while(0) ;
  7484  002170  908D               	bcf	3981,0,c	;volatile
  7485                           
  7486                           ; BSR set to: 0
  7487                           ;tmr2.c: 262: }
  7488                           
  7489                           ; BSR set to: 0
  7490                           ;tmr2.c: 261: break;
  7491  002172  0012               	return	
  7492  002174                     l6105:
  7493  002174  C01B  F01D         	movff	Off_Led@led,??_Off_Led
  7494  002178  C01C  F01E         	movff	Off_Led@led+1,??_Off_Led+1
  7495                           
  7496                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7497                           ; Switch size 1, requested type "space"
  7498                           ; Number of cases is 1, Range of values is 0 to 0
  7499                           ; switch strategies available:
  7500                           ; Name         Instructions Cycles
  7501                           ; simple_byte            4     3 (average)
  7502                           ;	Chosen strategy is simple_byte
  7503  00217C  501E               	movf	??_Off_Led+1,w,c
  7504  00217E  0A00               	xorlw	0	; case 0
  7505  002180  A4D8               	btfss	status,2,c
  7506  002182  0012               	return	
  7507                           
  7508                           ; Switch size 1, requested type "space"
  7509                           ; Number of cases is 6, Range of values is 0 to 5
  7510                           ; switch strategies available:
  7511                           ; Name         Instructions Cycles
  7512                           ; simple_byte           19    10 (average)
  7513                           ;	Chosen strategy is simple_byte
  7514  002184  501D               	movf	??_Off_Led,w,c
  7515  002186  0A00               	xorlw	0	; case 0
  7516  002188  B4D8               	btfsc	status,2,c
  7517  00218A  D7AC               	goto	l6079
  7518  00218C  0A01               	xorlw	1	; case 1
  7519  00218E  B4D8               	btfsc	status,2,c
  7520  002190  D7B5               	goto	l6083
  7521  002192  0A03               	xorlw	3	; case 2
  7522  002194  B4D8               	btfsc	status,2,c
  7523  002196  D7BE               	goto	l6087
  7524  002198  0A01               	xorlw	1	; case 3
  7525  00219A  B4D8               	btfsc	status,2,c
  7526  00219C  D7C7               	goto	l6091
  7527  00219E  0A07               	xorlw	7	; case 4
  7528  0021A0  B4D8               	btfsc	status,2,c
  7529  0021A2  D7D0               	goto	l6095
  7530  0021A4  0A01               	xorlw	1	; case 5
  7531  0021A6  A4D8               	btfss	status,2,c
  7532  0021A8  0012               	return	
  7533  0021AA  D7D8               	goto	l6099
  7534  0021AC                     __end_of_Off_Led:
  7535                           	opt stack 0
  7536                           tosu	equ	0xFFF
  7537                           tosh	equ	0xFFE
  7538                           tosl	equ	0xFFD
  7539                           pclath	equ	0xFFA
  7540                           tblptru	equ	0xFF8
  7541                           tblptrh	equ	0xFF7
  7542                           tblptrl	equ	0xFF6
  7543                           tablat	equ	0xFF5
  7544                           prodh	equ	0xFF4
  7545                           prodl	equ	0xFF3
  7546                           intcon	equ	0xFF2
  7547                           postinc0	equ	0xFEE
  7548                           wreg	equ	0xFE8
  7549                           indf2	equ	0xFDF
  7550                           postinc2	equ	0xFDE
  7551                           postdec2	equ	0xFDD
  7552                           plusw2	equ	0xFDB
  7553                           fsr2h	equ	0xFDA
  7554                           fsr2l	equ	0xFD9
  7555                           status	equ	0xFD8
  7556                           
  7557 ;; *************** function _TBbarGraphs *****************
  7558 ;; Defined at:
  7559 ;;		line 45 in file "Communications.c"
  7560 ;; Parameters:    Size  Location     Type
  7561 ;;  t               2   26[COMRAM] int 
  7562 ;;  b               2   28[COMRAM] int 
  7563 ;; Auto vars:     Size  Location     Type
  7564 ;;		None
  7565 ;; Return value:  Size  Location     Type
  7566 ;;                  1    wreg      void 
  7567 ;; Registers used:
  7568 ;;		None
  7569 ;; Tracked objects:
  7570 ;;		On entry : 0/0
  7571 ;;		On exit  : 0/0
  7572 ;;		Unchanged: 0/0
  7573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7574 ;;      Params:         4       0       0       0       0       0       0
  7575 ;;      Locals:         0       0       0       0       0       0       0
  7576 ;;      Temps:          0       0       0       0       0       0       0
  7577 ;;      Totals:         4       0       0       0       0       0       0
  7578 ;;Total ram usage:        4 bytes
  7579 ;; Hardware stack levels used:    1
  7580 ;; Hardware stack levels required when called:    4
  7581 ;; This function calls:
  7582 ;;		Nothing
  7583 ;; This function is called by:
  7584 ;;		_updateComms
  7585 ;; This function uses a non-reentrant model
  7586 ;;
  7587                           
  7588                           	psect	text30
  7589  002FEE                     __ptext30:
  7590                           	opt stack 0
  7591  002FEE                     _TBbarGraphs:
  7592                           	opt stack 25
  7593                           
  7594                           ;Communications.c: 46: throttle = t;
  7595                           
  7596                           ;incstack = 0
  7597  002FEE  C01B  F0DB         	movff	TBbarGraphs@t,_throttle
  7598  002FF2  C01C  F0DC         	movff	TBbarGraphs@t+1,_throttle+1
  7599                           
  7600                           ;Communications.c: 47: brake = b;
  7601  002FF6  C01D  F0C7         	movff	TBbarGraphs@b,_brake
  7602  002FFA  C01E  F0C8         	movff	TBbarGraphs@b+1,_brake+1
  7603  002FFE  0012               	return		;funcret
  7604  003000                     __end_of_TBbarGraphs:
  7605                           	opt stack 0
  7606                           tosu	equ	0xFFF
  7607                           tosh	equ	0xFFE
  7608                           tosl	equ	0xFFD
  7609                           pclath	equ	0xFFA
  7610                           tblptru	equ	0xFF8
  7611                           tblptrh	equ	0xFF7
  7612                           tblptrl	equ	0xFF6
  7613                           tablat	equ	0xFF5
  7614                           prodh	equ	0xFF4
  7615                           prodl	equ	0xFF3
  7616                           intcon	equ	0xFF2
  7617                           postinc0	equ	0xFEE
  7618                           wreg	equ	0xFE8
  7619                           indf2	equ	0xFDF
  7620                           postinc2	equ	0xFDE
  7621                           postdec2	equ	0xFDD
  7622                           plusw2	equ	0xFDB
  7623                           fsr2h	equ	0xFDA
  7624                           fsr2l	equ	0xFD9
  7625                           status	equ	0xFD8
  7626                           
  7627 ;; *************** function ___lwtoft *****************
  7628 ;; Defined at:
  7629 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwtoft.c"
  7630 ;; Parameters:    Size  Location     Type
  7631 ;;  c               2   34[COMRAM] unsigned int 
  7632 ;; Auto vars:     Size  Location     Type
  7633 ;;		None
  7634 ;; Return value:  Size  Location     Type
  7635 ;;                  3   34[COMRAM] float 
  7636 ;; Registers used:
  7637 ;;		wreg, status,2, status,0, cstack
  7638 ;; Tracked objects:
  7639 ;;		On entry : 0/0
  7640 ;;		On exit  : 0/0
  7641 ;;		Unchanged: 0/0
  7642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7643 ;;      Params:         3       0       0       0       0       0       0
  7644 ;;      Locals:         0       0       0       0       0       0       0
  7645 ;;      Temps:          0       0       0       0       0       0       0
  7646 ;;      Totals:         3       0       0       0       0       0       0
  7647 ;;Total ram usage:        3 bytes
  7648 ;; Hardware stack levels used:    1
  7649 ;; Hardware stack levels required when called:    5
  7650 ;; This function calls:
  7651 ;;		___ftpack
  7652 ;; This function is called by:
  7653 ;;		_main
  7654 ;; This function uses a non-reentrant model
  7655 ;;
  7656                           
  7657                           	psect	text31
  7658  002EBC                     __ptext31:
  7659                           	opt stack 0
  7660  002EBC                     ___lwtoft:
  7661                           	opt stack 25
  7662                           
  7663                           ;incstack = 0
  7664  002EBC  C023  F01B         	movff	___lwtoft@c,___ftpack@arg
  7665  002EC0  C024  F01C         	movff	___lwtoft@c+1,___ftpack@arg+1
  7666  002EC4  6A1D               	clrf	___ftpack@arg+2,c
  7667  002EC6  0E8E               	movlw	142
  7668  002EC8  6E1E               	movwf	___ftpack@exp,c
  7669  002ECA  0E00               	movlw	0
  7670  002ECC  6E1F               	movwf	___ftpack@sign,c
  7671  002ECE  EC92  F011         	call	___ftpack	;wreg free
  7672  002ED2  C01B  F023         	movff	?___ftpack,?___lwtoft
  7673  002ED6  C01C  F024         	movff	?___ftpack+1,?___lwtoft+1
  7674  002EDA  C01D  F025         	movff	?___ftpack+2,?___lwtoft+2
  7675  002EDE  0012               	return	
  7676  002EE0                     __end_of___lwtoft:
  7677                           	opt stack 0
  7678                           tosu	equ	0xFFF
  7679                           tosh	equ	0xFFE
  7680                           tosl	equ	0xFFD
  7681                           pclath	equ	0xFFA
  7682                           tblptru	equ	0xFF8
  7683                           tblptrh	equ	0xFF7
  7684                           tblptrl	equ	0xFF6
  7685                           tablat	equ	0xFF5
  7686                           prodh	equ	0xFF4
  7687                           prodl	equ	0xFF3
  7688                           intcon	equ	0xFF2
  7689                           postinc0	equ	0xFEE
  7690                           wreg	equ	0xFE8
  7691                           indf2	equ	0xFDF
  7692                           postinc2	equ	0xFDE
  7693                           postdec2	equ	0xFDD
  7694                           plusw2	equ	0xFDB
  7695                           fsr2h	equ	0xFDA
  7696                           fsr2l	equ	0xFD9
  7697                           status	equ	0xFD8
  7698                           
  7699 ;; *************** function ___fttol *****************
  7700 ;; Defined at:
  7701 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  7702 ;; Parameters:    Size  Location     Type
  7703 ;;  f1              3    0[BANK1 ] float 
  7704 ;; Auto vars:     Size  Location     Type
  7705 ;;  lval            4   10[BANK1 ] unsigned long 
  7706 ;;  exp1            1   14[BANK1 ] unsigned char 
  7707 ;;  sign1           1    9[BANK1 ] unsigned char 
  7708 ;; Return value:  Size  Location     Type
  7709 ;;                  4    0[BANK1 ] long 
  7710 ;; Registers used:
  7711 ;;		wreg, status,2, status,0
  7712 ;; Tracked objects:
  7713 ;;		On entry : 0/0
  7714 ;;		On exit  : 0/0
  7715 ;;		Unchanged: 0/0
  7716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7717 ;;      Params:         0       0       4       0       0       0       0
  7718 ;;      Locals:         0       0       6       0       0       0       0
  7719 ;;      Temps:          0       0       5       0       0       0       0
  7720 ;;      Totals:         0       0      15       0       0       0       0
  7721 ;;Total ram usage:       15 bytes
  7722 ;; Hardware stack levels used:    1
  7723 ;; Hardware stack levels required when called:    4
  7724 ;; This function calls:
  7725 ;;		Nothing
  7726 ;; This function is called by:
  7727 ;;		_main
  7728 ;; This function uses a non-reentrant model
  7729 ;;
  7730                           
  7731                           	psect	text32
  7732  001538                     __ptext32:
  7733                           	opt stack 0
  7734  001538                     ___fttol:
  7735                           	opt stack 26
  7736                           
  7737                           ;incstack = 0
  7738  001538  C13B  F13D         	movff	___fttol@f1+2,??___fttol
  7739  00153C  0101               	movlb	1	; () banked
  7740  00153E  6B3E               	clrf	(??___fttol+1)& (0+255),b
  7741  001540  6B3F               	clrf	(??___fttol+2)& (0+255),b
  7742  001542  0101               	movlb	1	; () banked
  7743  001544  353A               	rlcf	(___fttol@f1+1)& (0+255),w,b
  7744  001546  0101               	movlb	1	; () banked
  7745  001548  373D               	rlcf	??___fttol& (0+255),f,b
  7746  00154A  E301               	bnc	u8441
  7747  00154C  813E               	bsf	(??___fttol+1)& (0+255),0,b
  7748  00154E                     u8441:
  7749  00154E  0101               	movlb	1	; () banked
  7750  001550  513D               	movf	??___fttol& (0+255),w,b
  7751  001552  0101               	movlb	1	; () banked
  7752  001554  6F47               	movwf	___fttol@exp1& (0+255),b
  7753  001556  0101               	movlb	1	; () banked
  7754  001558  5147               	movf	___fttol@exp1& (0+255),w,b
  7755  00155A  A4D8               	btfss	status,2,c
  7756  00155C  D00A               	goto	l7381
  7757                           
  7758                           ; BSR set to: 1
  7759  00155E  0E00               	movlw	0
  7760  001560  0101               	movlb	1	; () banked
  7761  001562  6F39               	movwf	?___fttol& (0+255),b
  7762  001564  0E00               	movlw	0
  7763  001566  6F3A               	movwf	(?___fttol+1)& (0+255),b
  7764  001568  0E00               	movlw	0
  7765  00156A  6F3B               	movwf	(?___fttol+2)& (0+255),b
  7766  00156C  0E00               	movlw	0
  7767  00156E  6F3C               	movwf	(?___fttol+3)& (0+255),b
  7768                           
  7769                           ; BSR set to: 1
  7770  001570  0012               	return	
  7771  001572                     l7381:
  7772                           
  7773                           ; BSR set to: 1
  7774  001572  0E17               	movlw	23
  7775  001574  0101               	movlb	1	; () banked
  7776  001576  6F3D               	movwf	??___fttol& (0+255),b
  7777  001578  C139  F13E         	movff	___fttol@f1,??___fttol+1
  7778  00157C  C13A  F13F         	movff	___fttol@f1+1,??___fttol+2
  7779  001580  C13B  F140         	movff	___fttol@f1+2,??___fttol+3
  7780  001584  0101               	movlb	1	; () banked
  7781  001586  293D               	incf	??___fttol& (0+255),w,b
  7782  001588  0101               	movlb	1	; () banked
  7783  00158A  6F41               	movwf	(??___fttol+4)& (0+255),b
  7784  00158C  D005               	goto	u8460
  7785  00158E                     u8465:
  7786  00158E  0101               	movlb	1	; () banked
  7787  001590  90D8               	bcf	status,0,c
  7788  001592  3340               	rrcf	(??___fttol+3)& (0+255),f,b
  7789  001594  333F               	rrcf	(??___fttol+2)& (0+255),f,b
  7790  001596  333E               	rrcf	(??___fttol+1)& (0+255),f,b
  7791  001598                     u8460:
  7792  001598  0101               	movlb	1	; () banked
  7793  00159A  2F41               	decfsz	(??___fttol+4)& (0+255),f,b
  7794  00159C  D7F8               	goto	u8465
  7795  00159E  0101               	movlb	1	; () banked
  7796  0015A0  513E               	movf	(??___fttol+1)& (0+255),w,b
  7797  0015A2  0101               	movlb	1	; () banked
  7798  0015A4  6F42               	movwf	___fttol@sign1& (0+255),b
  7799                           
  7800                           ; BSR set to: 1
  7801  0015A6  0101               	movlb	1	; () banked
  7802  0015A8  8F3A               	bsf	(___fttol@f1+1)& (0+255),7,b
  7803                           
  7804                           ; BSR set to: 1
  7805  0015AA  0EFF               	movlw	255
  7806  0015AC  0101               	movlb	1	; () banked
  7807  0015AE  1739               	andwf	___fttol@f1& (0+255),f,b
  7808  0015B0  0EFF               	movlw	255
  7809  0015B2  0101               	movlb	1	; () banked
  7810  0015B4  173A               	andwf	(___fttol@f1+1)& (0+255),f,b
  7811  0015B6  0E00               	movlw	0
  7812  0015B8  0101               	movlb	1	; () banked
  7813  0015BA  173B               	andwf	(___fttol@f1+2)& (0+255),f,b
  7814                           
  7815                           ; BSR set to: 1
  7816  0015BC  0101               	movlb	1	; () banked
  7817  0015BE  5139               	movf	___fttol@f1& (0+255),w,b
  7818  0015C0  0101               	movlb	1	; () banked
  7819  0015C2  6F43               	movwf	___fttol@lval& (0+255),b
  7820  0015C4  0101               	movlb	1	; () banked
  7821  0015C6  513A               	movf	(___fttol@f1+1)& (0+255),w,b
  7822  0015C8  0101               	movlb	1	; () banked
  7823  0015CA  6F44               	movwf	(___fttol@lval+1)& (0+255),b
  7824  0015CC  0101               	movlb	1	; () banked
  7825  0015CE  513B               	movf	(___fttol@f1+2)& (0+255),w,b
  7826  0015D0  0101               	movlb	1	; () banked
  7827  0015D2  6F45               	movwf	(___fttol@lval+2)& (0+255),b
  7828  0015D4  0101               	movlb	1	; () banked
  7829  0015D6  6B46               	clrf	(___fttol@lval+3)& (0+255),b
  7830                           
  7831                           ; BSR set to: 1
  7832  0015D8  0E8E               	movlw	142
  7833  0015DA  0101               	movlb	1	; () banked
  7834  0015DC  5F47               	subwf	___fttol@exp1& (0+255),f,b
  7835                           
  7836                           ; BSR set to: 1
  7837  0015DE  0101               	movlb	1	; () banked
  7838  0015E0  AF47               	btfss	___fttol@exp1& (0+255),7,b
  7839  0015E2  D01A               	goto	l7403
  7840                           
  7841                           ; BSR set to: 1
  7842  0015E4  0101               	movlb	1	; () banked
  7843  0015E6  5147               	movf	___fttol@exp1& (0+255),w,b
  7844  0015E8  0A80               	xorlw	128
  7845  0015EA  0F8F               	addlw	143
  7846  0015EC  B0D8               	btfsc	status,0,c
  7847  0015EE  D00A               	goto	l7399
  7848                           
  7849                           ; BSR set to: 1
  7850  0015F0  0E00               	movlw	0
  7851  0015F2  0101               	movlb	1	; () banked
  7852  0015F4  6F39               	movwf	?___fttol& (0+255),b
  7853  0015F6  0E00               	movlw	0
  7854  0015F8  6F3A               	movwf	(?___fttol+1)& (0+255),b
  7855  0015FA  0E00               	movlw	0
  7856  0015FC  6F3B               	movwf	(?___fttol+2)& (0+255),b
  7857  0015FE  0E00               	movlw	0
  7858  001600  6F3C               	movwf	(?___fttol+3)& (0+255),b
  7859                           
  7860                           ; BSR set to: 1
  7861  001602  0012               	return	
  7862  001604                     l7399:
  7863                           
  7864                           ; BSR set to: 1
  7865  001604  0101               	movlb	1	; () banked
  7866  001606  90D8               	bcf	status,0,c
  7867  001608  3346               	rrcf	(___fttol@lval+3)& (0+255),f,b
  7868  00160A  3345               	rrcf	(___fttol@lval+2)& (0+255),f,b
  7869  00160C  3344               	rrcf	(___fttol@lval+1)& (0+255),f,b
  7870  00160E  3343               	rrcf	___fttol@lval& (0+255),f,b
  7871                           
  7872                           ; BSR set to: 1
  7873  001610  0101               	movlb	1	; () banked
  7874  001612  3F47               	incfsz	___fttol@exp1& (0+255),f,b
  7875  001614  D7F7               	goto	l7399
  7876                           
  7877                           ; BSR set to: 1
  7878  001616  D01B               	goto	l7413
  7879  001618                     l7403:
  7880                           
  7881                           ; BSR set to: 1
  7882  001618  0E17               	movlw	23
  7883  00161A  0101               	movlb	1	; () banked
  7884  00161C  6547               	cpfsgt	___fttol@exp1& (0+255),b
  7885  00161E  D012               	goto	l7411
  7886                           
  7887                           ; BSR set to: 1
  7888  001620  0E00               	movlw	0
  7889  001622  0101               	movlb	1	; () banked
  7890  001624  6F39               	movwf	?___fttol& (0+255),b
  7891  001626  0E00               	movlw	0
  7892  001628  6F3A               	movwf	(?___fttol+1)& (0+255),b
  7893  00162A  0E00               	movlw	0
  7894  00162C  6F3B               	movwf	(?___fttol+2)& (0+255),b
  7895  00162E  0E00               	movlw	0
  7896  001630  6F3C               	movwf	(?___fttol+3)& (0+255),b
  7897                           
  7898                           ; BSR set to: 1
  7899  001632  0012               	return	
  7900  001634                     l7409:
  7901                           
  7902                           ; BSR set to: 1
  7903  001634  0101               	movlb	1	; () banked
  7904  001636  90D8               	bcf	status,0,c
  7905  001638  3743               	rlcf	___fttol@lval& (0+255),f,b
  7906  00163A  3744               	rlcf	(___fttol@lval+1)& (0+255),f,b
  7907  00163C  3745               	rlcf	(___fttol@lval+2)& (0+255),f,b
  7908  00163E  3746               	rlcf	(___fttol@lval+3)& (0+255),f,b
  7909  001640  0101               	movlb	1	; () banked
  7910  001642  0747               	decf	___fttol@exp1& (0+255),f,b
  7911  001644                     l7411:
  7912                           
  7913                           ; BSR set to: 1
  7914  001644  0101               	movlb	1	; () banked
  7915  001646  5147               	movf	___fttol@exp1& (0+255),w,b
  7916  001648  0101               	movlb	1	; () banked
  7917  00164A  A4D8               	btfss	status,2,c
  7918  00164C  D7F3               	goto	l7409
  7919  00164E                     l7413:
  7920                           
  7921                           ; BSR set to: 1
  7922  00164E  0101               	movlb	1	; () banked
  7923  001650  5142               	movf	___fttol@sign1& (0+255),w,b
  7924  001652  0101               	movlb	1	; () banked
  7925  001654  B4D8               	btfsc	status,2,c
  7926  001656  D009               	goto	l7417
  7927                           
  7928                           ; BSR set to: 1
  7929  001658  0101               	movlb	1	; () banked
  7930  00165A  1F46               	comf	(___fttol@lval+3)& (0+255),f,b
  7931  00165C  1F45               	comf	(___fttol@lval+2)& (0+255),f,b
  7932  00165E  1F44               	comf	(___fttol@lval+1)& (0+255),f,b
  7933  001660  6D43               	negf	___fttol@lval& (0+255),b
  7934  001662  0E00               	movlw	0
  7935  001664  2344               	addwfc	(___fttol@lval+1)& (0+255),f,b
  7936  001666  2345               	addwfc	(___fttol@lval+2)& (0+255),f,b
  7937  001668  2346               	addwfc	(___fttol@lval+3)& (0+255),f,b
  7938  00166A                     l7417:
  7939                           
  7940                           ; BSR set to: 1
  7941  00166A  C143  F139         	movff	___fttol@lval,?___fttol
  7942  00166E  C144  F13A         	movff	___fttol@lval+1,?___fttol+1
  7943  001672  C145  F13B         	movff	___fttol@lval+2,?___fttol+2
  7944  001676  C146  F13C         	movff	___fttol@lval+3,?___fttol+3
  7945  00167A  0012               	return	
  7946  00167C                     __end_of___fttol:
  7947                           	opt stack 0
  7948                           tosu	equ	0xFFF
  7949                           tosh	equ	0xFFE
  7950                           tosl	equ	0xFFD
  7951                           pclath	equ	0xFFA
  7952                           tblptru	equ	0xFF8
  7953                           tblptrh	equ	0xFF7
  7954                           tblptrl	equ	0xFF6
  7955                           tablat	equ	0xFF5
  7956                           prodh	equ	0xFF4
  7957                           prodl	equ	0xFF3
  7958                           intcon	equ	0xFF2
  7959                           postinc0	equ	0xFEE
  7960                           wreg	equ	0xFE8
  7961                           indf2	equ	0xFDF
  7962                           postinc2	equ	0xFDE
  7963                           postdec2	equ	0xFDD
  7964                           plusw2	equ	0xFDB
  7965                           fsr2h	equ	0xFDA
  7966                           fsr2l	equ	0xFD9
  7967                           status	equ	0xFD8
  7968                           
  7969 ;; *************** function ___ftmul *****************
  7970 ;; Defined at:
  7971 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  7972 ;; Parameters:    Size  Location     Type
  7973 ;;  f1              3   37[COMRAM] float 
  7974 ;;  f2              3   40[COMRAM] float 
  7975 ;; Auto vars:     Size  Location     Type
  7976 ;;  f3_as_produc    3    4[BANK0 ] unsigned um
  7977 ;;  sign            1    8[BANK0 ] unsigned char 
  7978 ;;  cntr            1    7[BANK0 ] unsigned char 
  7979 ;;  exp             1    3[BANK0 ] unsigned char 
  7980 ;; Return value:  Size  Location     Type
  7981 ;;                  3   37[COMRAM] float 
  7982 ;; Registers used:
  7983 ;;		wreg, status,2, status,0, cstack
  7984 ;; Tracked objects:
  7985 ;;		On entry : 0/0
  7986 ;;		On exit  : 0/0
  7987 ;;		Unchanged: 0/0
  7988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7989 ;;      Params:         6       0       0       0       0       0       0
  7990 ;;      Locals:         0       6       0       0       0       0       0
  7991 ;;      Temps:          0       3       0       0       0       0       0
  7992 ;;      Totals:         6       9       0       0       0       0       0
  7993 ;;Total ram usage:       15 bytes
  7994 ;; Hardware stack levels used:    1
  7995 ;; Hardware stack levels required when called:    5
  7996 ;; This function calls:
  7997 ;;		___ftpack
  7998 ;; This function is called by:
  7999 ;;		_main
  8000 ;; This function uses a non-reentrant model
  8001 ;;
  8002                           
  8003                           	psect	text33
  8004  0017AC                     __ptext33:
  8005                           	opt stack 0
  8006  0017AC                     ___ftmul:
  8007                           	opt stack 25
  8008                           
  8009                           ; BSR set to: 1
  8010                           ;incstack = 0
  8011  0017AC  C028  F0F4         	movff	___ftmul@f1+2,??___ftmul
  8012  0017B0  0100               	movlb	0	; () banked
  8013  0017B2  6BF5               	clrf	(??___ftmul+1)& (0+255),b
  8014  0017B4  6BF6               	clrf	(??___ftmul+2)& (0+255),b
  8015  0017B6  3427               	rlcf	___ftmul@f1+1,w,c
  8016  0017B8  0100               	movlb	0	; () banked
  8017  0017BA  37F4               	rlcf	??___ftmul& (0+255),f,b
  8018  0017BC  E301               	bnc	u8381
  8019  0017BE  81F5               	bsf	(??___ftmul+1)& (0+255),0,b
  8020  0017C0                     u8381:
  8021  0017C0  0100               	movlb	0	; () banked
  8022  0017C2  51F4               	movf	??___ftmul& (0+255),w,b
  8023  0017C4  0100               	movlb	0	; () banked
  8024  0017C6  6FF7               	movwf	___ftmul@exp& (0+255),b
  8025  0017C8  0100               	movlb	0	; () banked
  8026  0017CA  51F7               	movf	___ftmul@exp& (0+255),w,b
  8027  0017CC  A4D8               	btfss	status,2,c
  8028  0017CE  D007               	goto	l7333
  8029                           
  8030                           ; BSR set to: 0
  8031  0017D0  0E00               	movlw	0
  8032  0017D2  6E26               	movwf	?___ftmul,c
  8033  0017D4  0E00               	movlw	0
  8034  0017D6  6E27               	movwf	?___ftmul+1,c
  8035  0017D8  0E00               	movlw	0
  8036  0017DA  6E28               	movwf	?___ftmul+2,c
  8037                           
  8038                           ; BSR set to: 0
  8039  0017DC  0012               	return	
  8040  0017DE                     l7333:
  8041                           
  8042                           ; BSR set to: 0
  8043  0017DE  C02B  F0F4         	movff	___ftmul@f2+2,??___ftmul
  8044  0017E2  0100               	movlb	0	; () banked
  8045  0017E4  6BF5               	clrf	(??___ftmul+1)& (0+255),b
  8046  0017E6  6BF6               	clrf	(??___ftmul+2)& (0+255),b
  8047  0017E8  342A               	rlcf	___ftmul@f2+1,w,c
  8048  0017EA  0100               	movlb	0	; () banked
  8049  0017EC  37F4               	rlcf	??___ftmul& (0+255),f,b
  8050  0017EE  E301               	bnc	u8401
  8051  0017F0  81F5               	bsf	(??___ftmul+1)& (0+255),0,b
  8052  0017F2                     u8401:
  8053  0017F2  0100               	movlb	0	; () banked
  8054  0017F4  51F4               	movf	??___ftmul& (0+255),w,b
  8055  0017F6  0100               	movlb	0	; () banked
  8056  0017F8  6FFC               	movwf	___ftmul@sign& (0+255),b
  8057  0017FA  0100               	movlb	0	; () banked
  8058  0017FC  51FC               	movf	___ftmul@sign& (0+255),w,b
  8059  0017FE  A4D8               	btfss	status,2,c
  8060  001800  D007               	goto	l7339
  8061                           
  8062                           ; BSR set to: 0
  8063  001802  0E00               	movlw	0
  8064  001804  6E26               	movwf	?___ftmul,c
  8065  001806  0E00               	movlw	0
  8066  001808  6E27               	movwf	?___ftmul+1,c
  8067  00180A  0E00               	movlw	0
  8068  00180C  6E28               	movwf	?___ftmul+2,c
  8069                           
  8070                           ; BSR set to: 0
  8071  00180E  0012               	return	
  8072  001810                     l7339:
  8073                           
  8074                           ; BSR set to: 0
  8075  001810  0100               	movlb	0	; () banked
  8076  001812  51FC               	movf	___ftmul@sign& (0+255),w,b
  8077  001814  0F7B               	addlw	123
  8078  001816  0100               	movlb	0	; () banked
  8079  001818  27F7               	addwf	___ftmul@exp& (0+255),f,b
  8080                           
  8081                           ; BSR set to: 0
  8082  00181A  C028  F0FC         	movff	___ftmul@f1+2,___ftmul@sign
  8083  00181E  502B               	movf	___ftmul@f2+2,w,c
  8084  001820  0100               	movlb	0	; () banked
  8085  001822  1BFC               	xorwf	___ftmul@sign& (0+255),f,b
  8086  001824  0E80               	movlw	128
  8087  001826  0100               	movlb	0	; () banked
  8088  001828  17FC               	andwf	___ftmul@sign& (0+255),f,b
  8089                           
  8090                           ; BSR set to: 0
  8091  00182A  8E27               	bsf	___ftmul@f1+1,7,c
  8092                           
  8093                           ; BSR set to: 0
  8094  00182C  8E2A               	bsf	___ftmul@f2+1,7,c
  8095                           
  8096                           ; BSR set to: 0
  8097  00182E  0EFF               	movlw	255
  8098  001830  1629               	andwf	___ftmul@f2,f,c
  8099  001832  0EFF               	movlw	255
  8100  001834  162A               	andwf	___ftmul@f2+1,f,c
  8101  001836  0E00               	movlw	0
  8102  001838  162B               	andwf	___ftmul@f2+2,f,c
  8103                           
  8104                           ; BSR set to: 0
  8105  00183A  0E00               	movlw	0
  8106  00183C  0100               	movlb	0	; () banked
  8107  00183E  6FF8               	movwf	___ftmul@f3_as_product& (0+255),b
  8108  001840  0E00               	movlw	0
  8109  001842  0100               	movlb	0	; () banked
  8110  001844  6FF9               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  8111  001846  0E00               	movlw	0
  8112  001848  0100               	movlb	0	; () banked
  8113  00184A  6FFA               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  8114                           
  8115                           ; BSR set to: 0
  8116  00184C  0E07               	movlw	7
  8117  00184E  0100               	movlb	0	; () banked
  8118  001850  6FFB               	movwf	___ftmul@cntr& (0+255),b
  8119  001852                     l7353:
  8120                           
  8121                           ; BSR set to: 0
  8122  001852  A026               	btfss	___ftmul@f1,0,c
  8123  001854  D009               	goto	l7357
  8124                           
  8125                           ; BSR set to: 0
  8126  001856  5029               	movf	___ftmul@f2,w,c
  8127  001858  0100               	movlb	0	; () banked
  8128  00185A  27F8               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8129  00185C  502A               	movf	___ftmul@f2+1,w,c
  8130  00185E  0100               	movlb	0	; () banked
  8131  001860  23F9               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8132  001862  502B               	movf	___ftmul@f2+2,w,c
  8133  001864  0100               	movlb	0	; () banked
  8134  001866  23FA               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8135  001868                     l7357:
  8136                           
  8137                           ; BSR set to: 0
  8138  001868  90D8               	bcf	status,0,c
  8139  00186A  3228               	rrcf	___ftmul@f1+2,f,c
  8140  00186C  3227               	rrcf	___ftmul@f1+1,f,c
  8141  00186E  3226               	rrcf	___ftmul@f1,f,c
  8142  001870  90D8               	bcf	status,0,c
  8143  001872  3629               	rlcf	___ftmul@f2,f,c
  8144  001874  362A               	rlcf	___ftmul@f2+1,f,c
  8145  001876  362B               	rlcf	___ftmul@f2+2,f,c
  8146                           
  8147                           ; BSR set to: 0
  8148  001878  0100               	movlb	0	; () banked
  8149  00187A  2FFB               	decfsz	___ftmul@cntr& (0+255),f,b
  8150  00187C  D7EA               	goto	l7353
  8151                           
  8152                           ; BSR set to: 0
  8153                           
  8154                           ; BSR set to: 0
  8155  00187E  0E09               	movlw	9
  8156  001880  0100               	movlb	0	; () banked
  8157  001882  6FFB               	movwf	___ftmul@cntr& (0+255),b
  8158  001884                     l7363:
  8159                           
  8160                           ; BSR set to: 0
  8161  001884  A026               	btfss	___ftmul@f1,0,c
  8162  001886  D009               	goto	l7367
  8163                           
  8164                           ; BSR set to: 0
  8165  001888  5029               	movf	___ftmul@f2,w,c
  8166  00188A  0100               	movlb	0	; () banked
  8167  00188C  27F8               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8168  00188E  502A               	movf	___ftmul@f2+1,w,c
  8169  001890  0100               	movlb	0	; () banked
  8170  001892  23F9               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8171  001894  502B               	movf	___ftmul@f2+2,w,c
  8172  001896  0100               	movlb	0	; () banked
  8173  001898  23FA               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8174  00189A                     l7367:
  8175                           
  8176                           ; BSR set to: 0
  8177  00189A  90D8               	bcf	status,0,c
  8178  00189C  3228               	rrcf	___ftmul@f1+2,f,c
  8179  00189E  3227               	rrcf	___ftmul@f1+1,f,c
  8180  0018A0  3226               	rrcf	___ftmul@f1,f,c
  8181  0018A2  0100               	movlb	0	; () banked
  8182  0018A4  90D8               	bcf	status,0,c
  8183  0018A6  33FA               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  8184  0018A8  33F9               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  8185  0018AA  33F8               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  8186                           
  8187                           ; BSR set to: 0
  8188  0018AC  0100               	movlb	0	; () banked
  8189  0018AE  2FFB               	decfsz	___ftmul@cntr& (0+255),f,b
  8190  0018B0  D7E9               	goto	l7363
  8191                           
  8192                           ; BSR set to: 0
  8193                           
  8194                           ; BSR set to: 0
  8195  0018B2  C0F8  F01B         	movff	___ftmul@f3_as_product,___ftpack@arg
  8196  0018B6  C0F9  F01C         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  8197  0018BA  C0FA  F01D         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  8198  0018BE  C0F7  F01E         	movff	___ftmul@exp,___ftpack@exp
  8199  0018C2  C0FC  F01F         	movff	___ftmul@sign,___ftpack@sign
  8200  0018C6  EC92  F011         	call	___ftpack	;wreg free
  8201  0018CA  C01B  F026         	movff	?___ftpack,?___ftmul
  8202  0018CE  C01C  F027         	movff	?___ftpack+1,?___ftmul+1
  8203  0018D2  C01D  F028         	movff	?___ftpack+2,?___ftmul+2
  8204  0018D6  0012               	return	
  8205  0018D8                     __end_of___ftmul:
  8206                           	opt stack 0
  8207                           tosu	equ	0xFFF
  8208                           tosh	equ	0xFFE
  8209                           tosl	equ	0xFFD
  8210                           pclath	equ	0xFFA
  8211                           tblptru	equ	0xFF8
  8212                           tblptrh	equ	0xFF7
  8213                           tblptrl	equ	0xFF6
  8214                           tablat	equ	0xFF5
  8215                           prodh	equ	0xFF4
  8216                           prodl	equ	0xFF3
  8217                           intcon	equ	0xFF2
  8218                           postinc0	equ	0xFEE
  8219                           wreg	equ	0xFE8
  8220                           indf2	equ	0xFDF
  8221                           postinc2	equ	0xFDE
  8222                           postdec2	equ	0xFDD
  8223                           plusw2	equ	0xFDB
  8224                           fsr2h	equ	0xFDA
  8225                           fsr2l	equ	0xFD9
  8226                           status	equ	0xFD8
  8227                           
  8228 ;; *************** function ___ftpack *****************
  8229 ;; Defined at:
  8230 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  8231 ;; Parameters:    Size  Location     Type
  8232 ;;  arg             3   26[COMRAM] unsigned um
  8233 ;;  exp             1   29[COMRAM] unsigned char 
  8234 ;;  sign            1   30[COMRAM] unsigned char 
  8235 ;; Auto vars:     Size  Location     Type
  8236 ;;		None
  8237 ;; Return value:  Size  Location     Type
  8238 ;;                  3   26[COMRAM] float 
  8239 ;; Registers used:
  8240 ;;		wreg, status,2, status,0
  8241 ;; Tracked objects:
  8242 ;;		On entry : 0/0
  8243 ;;		On exit  : 0/0
  8244 ;;		Unchanged: 0/0
  8245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8246 ;;      Params:         5       0       0       0       0       0       0
  8247 ;;      Locals:         0       0       0       0       0       0       0
  8248 ;;      Temps:          3       0       0       0       0       0       0
  8249 ;;      Totals:         8       0       0       0       0       0       0
  8250 ;;Total ram usage:        8 bytes
  8251 ;; Hardware stack levels used:    1
  8252 ;; Hardware stack levels required when called:    4
  8253 ;; This function calls:
  8254 ;;		Nothing
  8255 ;; This function is called by:
  8256 ;;		___ftmul
  8257 ;;		___lwtoft
  8258 ;; This function uses a non-reentrant model
  8259 ;;
  8260                           
  8261                           	psect	text34
  8262  002324                     __ptext34:
  8263                           	opt stack 0
  8264  002324                     ___ftpack:
  8265                           	opt stack 25
  8266                           
  8267                           ;incstack = 0
  8268  002324  501E               	movf	___ftpack@exp,w,c
  8269  002326  B4D8               	btfsc	status,2,c
  8270  002328  D005               	goto	l6969
  8271  00232A  501B               	movf	___ftpack@arg,w,c
  8272  00232C  101C               	iorwf	___ftpack@arg+1,w,c
  8273  00232E  101D               	iorwf	___ftpack@arg+2,w,c
  8274  002330  A4D8               	btfss	status,2,c
  8275  002332  D00C               	goto	l6975
  8276  002334                     l6969:
  8277  002334  0E00               	movlw	0
  8278  002336  6E1B               	movwf	?___ftpack,c
  8279  002338  0E00               	movlw	0
  8280  00233A  6E1C               	movwf	?___ftpack+1,c
  8281  00233C  0E00               	movlw	0
  8282  00233E  6E1D               	movwf	?___ftpack+2,c
  8283  002340  0012               	return	
  8284  002342                     l6973:
  8285  002342  2A1E               	incf	___ftpack@exp,f,c
  8286  002344  90D8               	bcf	status,0,c
  8287  002346  321D               	rrcf	___ftpack@arg+2,f,c
  8288  002348  321C               	rrcf	___ftpack@arg+1,f,c
  8289  00234A  321B               	rrcf	___ftpack@arg,f,c
  8290  00234C                     l6975:
  8291  00234C  0E00               	movlw	0
  8292  00234E  141B               	andwf	___ftpack@arg,w,c
  8293  002350  6E20               	movwf	??___ftpack& (0+255),c
  8294  002352  0E00               	movlw	0
  8295  002354  141C               	andwf	___ftpack@arg+1,w,c
  8296  002356  6E21               	movwf	(??___ftpack+1)& (0+255),c
  8297  002358  0EFE               	movlw	254
  8298  00235A  141D               	andwf	___ftpack@arg+2,w,c
  8299  00235C  6E22               	movwf	(??___ftpack+2)& (0+255),c
  8300  00235E  5020               	movf	??___ftpack,w,c
  8301  002360  1021               	iorwf	??___ftpack+1,w,c
  8302  002362  1022               	iorwf	??___ftpack+2,w,c
  8303  002364  B4D8               	btfsc	status,2,c
  8304  002366  D00C               	goto	l6981
  8305  002368  D7EC               	goto	l6973
  8306  00236A                     l6977:
  8307  00236A  2A1E               	incf	___ftpack@exp,f,c
  8308  00236C  0E01               	movlw	1
  8309  00236E  261B               	addwf	___ftpack@arg,f,c
  8310  002370  0E00               	movlw	0
  8311  002372  221C               	addwfc	___ftpack@arg+1,f,c
  8312  002374  0E00               	movlw	0
  8313  002376  221D               	addwfc	___ftpack@arg+2,f,c
  8314  002378  90D8               	bcf	status,0,c
  8315  00237A  321D               	rrcf	___ftpack@arg+2,f,c
  8316  00237C  321C               	rrcf	___ftpack@arg+1,f,c
  8317  00237E  321B               	rrcf	___ftpack@arg,f,c
  8318  002380                     l6981:
  8319  002380  0E00               	movlw	0
  8320  002382  141B               	andwf	___ftpack@arg,w,c
  8321  002384  6E20               	movwf	??___ftpack& (0+255),c
  8322  002386  0E00               	movlw	0
  8323  002388  141C               	andwf	___ftpack@arg+1,w,c
  8324  00238A  6E21               	movwf	(??___ftpack+1)& (0+255),c
  8325  00238C  0EFF               	movlw	255
  8326  00238E  141D               	andwf	___ftpack@arg+2,w,c
  8327  002390  6E22               	movwf	(??___ftpack+2)& (0+255),c
  8328  002392  5020               	movf	??___ftpack,w,c
  8329  002394  1021               	iorwf	??___ftpack+1,w,c
  8330  002396  1022               	iorwf	??___ftpack+2,w,c
  8331  002398  B4D8               	btfsc	status,2,c
  8332  00239A  D006               	goto	l6985
  8333  00239C  D7E6               	goto	l6977
  8334  00239E                     l6983:
  8335  00239E  061E               	decf	___ftpack@exp,f,c
  8336  0023A0  90D8               	bcf	status,0,c
  8337  0023A2  361B               	rlcf	___ftpack@arg,f,c
  8338  0023A4  361C               	rlcf	___ftpack@arg+1,f,c
  8339  0023A6  361D               	rlcf	___ftpack@arg+2,f,c
  8340  0023A8                     l6985:
  8341  0023A8  BE1C               	btfsc	___ftpack@arg+1,7,c
  8342  0023AA  D003               	goto	l1526
  8343  0023AC  0E02               	movlw	2
  8344  0023AE  601E               	cpfslt	___ftpack@exp,c
  8345  0023B0  D7F6               	goto	l6983
  8346  0023B2                     l1526:
  8347  0023B2  A01E               	btfss	___ftpack@exp,0,c
  8348  0023B4  9E1C               	bcf	___ftpack@arg+1,7,c
  8349  0023B6  90D8               	bcf	status,0,c
  8350  0023B8  321E               	rrcf	___ftpack@exp,f,c
  8351  0023BA  501E               	movf	___ftpack@exp,w,c
  8352  0023BC  121D               	iorwf	___ftpack@arg+2,f,c
  8353  0023BE  501F               	movf	___ftpack@sign,w,c
  8354  0023C0  A4D8               	btfss	status,2,c
  8355  0023C2  8E1D               	bsf	___ftpack@arg+2,7,c
  8356  0023C4  C01B  F01B         	movff	___ftpack@arg,?___ftpack
  8357  0023C8  C01C  F01C         	movff	___ftpack@arg+1,?___ftpack+1
  8358  0023CC  C01D  F01D         	movff	___ftpack@arg+2,?___ftpack+2
  8359  0023D0  0012               	return	
  8360  0023D2                     __end_of___ftpack:
  8361                           	opt stack 0
  8362                           tosu	equ	0xFFF
  8363                           tosh	equ	0xFFE
  8364                           tosl	equ	0xFFD
  8365                           pclath	equ	0xFFA
  8366                           tblptru	equ	0xFF8
  8367                           tblptrh	equ	0xFF7
  8368                           tblptrl	equ	0xFF6
  8369                           tablat	equ	0xFF5
  8370                           prodh	equ	0xFF4
  8371                           prodl	equ	0xFF3
  8372                           intcon	equ	0xFF2
  8373                           postinc0	equ	0xFEE
  8374                           wreg	equ	0xFE8
  8375                           indf2	equ	0xFDF
  8376                           postinc2	equ	0xFDE
  8377                           postdec2	equ	0xFDD
  8378                           plusw2	equ	0xFDB
  8379                           fsr2h	equ	0xFDA
  8380                           fsr2l	equ	0xFD9
  8381                           status	equ	0xFD8
  8382                           
  8383 ;; *************** function _SYSTEM_Initialize *****************
  8384 ;; Defined at:
  8385 ;;		line 112 in file "mcc_generated_files/mcc.c"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;		None
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;		None
  8390 ;; Return value:  Size  Location     Type
  8391 ;;                  1    wreg      void 
  8392 ;; Registers used:
  8393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8394 ;; Tracked objects:
  8395 ;;		On entry : 0/0
  8396 ;;		On exit  : 0/0
  8397 ;;		Unchanged: 0/0
  8398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8399 ;;      Params:         0       0       0       0       0       0       0
  8400 ;;      Locals:         0       0       0       0       0       0       0
  8401 ;;      Temps:          0       0       0       0       0       0       0
  8402 ;;      Totals:         0       0       0       0       0       0       0
  8403 ;;Total ram usage:        0 bytes
  8404 ;; Hardware stack levels used:    1
  8405 ;; Hardware stack levels required when called:    7
  8406 ;; This function calls:
  8407 ;;		_ADC_Initialize
  8408 ;;		_EUSART1_Initialize
  8409 ;;		_I2C1_Initialize
  8410 ;;		_INTERRUPT_Initialize
  8411 ;;		_OSCILLATOR_Initialize
  8412 ;;		_PIN_MANAGER_Initialize
  8413 ;;		_TMR0_Initialize
  8414 ;;		_TMR2_Initialize
  8415 ;;		_begin
  8416 ;; This function is called by:
  8417 ;;		_main
  8418 ;; This function uses a non-reentrant model
  8419 ;;
  8420                           
  8421                           	psect	text35
  8422  0028CC                     __ptext35:
  8423                           	opt stack 0
  8424  0028CC                     _SYSTEM_Initialize:
  8425                           	opt stack 23
  8426                           
  8427                           ;mcc.c: 114: OSCILLATOR_Initialize();
  8428                           
  8429                           ;incstack = 0
  8430  0028CC  EC17  F018         	call	_OSCILLATOR_Initialize	;wreg free
  8431                           
  8432                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  8433  0028D0  EC68  F015         	call	_PIN_MANAGER_Initialize	;wreg free
  8434                           
  8435                           ;mcc.c: 116: INTERRUPT_Initialize();
  8436  0028D4  EC00  F018         	call	_INTERRUPT_Initialize	;wreg free
  8437                           
  8438                           ;mcc.c: 117: ADC_Initialize();
  8439  0028D8  ECCA  F017         	call	_ADC_Initialize	;wreg free
  8440                           
  8441                           ;mcc.c: 118: TMR0_Initialize();
  8442  0028DC  EC90  F017         	call	_TMR0_Initialize	;wreg free
  8443                           
  8444                           ;mcc.c: 119: TMR2_Initialize();
  8445  0028E0  EC70  F017         	call	_TMR2_Initialize	;wreg free
  8446                           
  8447                           ;mcc.c: 120: EUSART1_Initialize();
  8448  0028E4  EC5E  F016         	call	_EUSART1_Initialize	;wreg free
  8449                           
  8450                           ;mcc.c: 121: begin(receiveArray, sizeof (receiveArray), 3, 0, Send_put, Receive_get, Rec
      +                          eive_available, Receive_peek);
  8451  0028E8  0E00               	movlw	low _receiveArray
  8452  0028EA  0101               	movlb	1	; () banked
  8453  0028EC  6F39               	movwf	begin@ptr& (0+255),b
  8454  0028EE  0E01               	movlw	high _receiveArray
  8455  0028F0  0101               	movlb	1	; () banked
  8456  0028F2  6F3A               	movwf	(begin@ptr+1)& (0+255),b
  8457  0028F4  0E28               	movlw	40
  8458  0028F6  0101               	movlb	1	; () banked
  8459  0028F8  6F3B               	movwf	begin@maxSize& (0+255),b
  8460  0028FA  0E03               	movlw	3
  8461  0028FC  0101               	movlb	1	; () banked
  8462  0028FE  6F3C               	movwf	begin@givenAddress& (0+255),b
  8463  002900  0E00               	movlw	0
  8464  002902  0101               	movlb	1	; () banked
  8465  002904  6F3D               	movwf	begin@error& (0+255),b
  8466  002906  0E98               	movlw	low _Send_put
  8467  002908  0101               	movlb	1	; () banked
  8468  00290A  6F3E               	movwf	begin@stufftosend& (0+255),b
  8469  00290C  0E2D               	movlw	high _Send_put
  8470  00290E  0101               	movlb	1	; () banked
  8471  002910  6F3F               	movwf	(begin@stufftosend+1)& (0+255),b
  8472  002912  0E20               	movlw	low _Receive_get
  8473  002914  0101               	movlb	1	; () banked
  8474  002916  6F40               	movwf	begin@stufftoreceive& (0+255),b
  8475  002918  0E30               	movlw	high _Receive_get
  8476  00291A  0101               	movlb	1	; () banked
  8477  00291C  6F41               	movwf	(begin@stufftoreceive+1)& (0+255),b
  8478  00291E  0EAC               	movlw	low _Receive_available
  8479  002920  0101               	movlb	1	; () banked
  8480  002922  6F42               	movwf	begin@stuffavailable& (0+255),b
  8481  002924  0E2F               	movlw	high _Receive_available
  8482  002926  0101               	movlb	1	; () banked
  8483  002928  6F43               	movwf	(begin@stuffavailable+1)& (0+255),b
  8484  00292A  0E12               	movlw	low _Receive_peek
  8485  00292C  0101               	movlb	1	; () banked
  8486  00292E  6F44               	movwf	begin@stuffpeek& (0+255),b
  8487  002930  0E30               	movlw	high _Receive_peek
  8488  002932  0101               	movlb	1	; () banked
  8489  002934  6F45               	movwf	(begin@stuffpeek+1)& (0+255),b
  8490  002936  EC39  F015         	call	_begin	;wreg free
  8491                           
  8492                           ;mcc.c: 122: I2C1_Initialize();
  8493  00293A  EC40  F016         	call	_I2C1_Initialize	;wreg free
  8494  00293E  0012               	return		;funcret
  8495  002940                     __end_of_SYSTEM_Initialize:
  8496                           	opt stack 0
  8497                           tosu	equ	0xFFF
  8498                           tosh	equ	0xFFE
  8499                           tosl	equ	0xFFD
  8500                           pclath	equ	0xFFA
  8501                           tblptru	equ	0xFF8
  8502                           tblptrh	equ	0xFF7
  8503                           tblptrl	equ	0xFF6
  8504                           tablat	equ	0xFF5
  8505                           prodh	equ	0xFF4
  8506                           prodl	equ	0xFF3
  8507                           intcon	equ	0xFF2
  8508                           postinc0	equ	0xFEE
  8509                           wreg	equ	0xFE8
  8510                           indf2	equ	0xFDF
  8511                           postinc2	equ	0xFDE
  8512                           postdec2	equ	0xFDD
  8513                           plusw2	equ	0xFDB
  8514                           fsr2h	equ	0xFDA
  8515                           fsr2l	equ	0xFD9
  8516                           status	equ	0xFD8
  8517                           
  8518 ;; *************** function _begin *****************
  8519 ;; Defined at:
  8520 ;;		line 19 in file "FastTransfer.c"
  8521 ;; Parameters:    Size  Location     Type
  8522 ;;  ptr             2    0[BANK1 ] PTR volatile int 
  8523 ;;		 -> receiveArray(40), 
  8524 ;;  maxSize         1    2[BANK1 ] unsigned char 
  8525 ;;  givenAddress    1    3[BANK1 ] unsigned char 
  8526 ;;  error           1    4[BANK1 ] unsigned char 
  8527 ;;  stufftosend     2    5[BANK1 ] PTR FTN(unsigned char ,)
  8528 ;;		 -> Send_put(1), 
  8529 ;;  stufftorecei    2    7[BANK1 ] PTR FTN()unsigned char 
  8530 ;;		 -> Receive_get(1), 
  8531 ;;  stuffavailab    2    9[BANK1 ] PTR FTN()int 
  8532 ;;		 -> Receive_available(2), 
  8533 ;;  stuffpeek       2   11[BANK1 ] PTR FTN()unsigned char 
  8534 ;;		 -> Receive_peek(1), 
  8535 ;; Auto vars:     Size  Location     Type
  8536 ;;		None
  8537 ;; Return value:  Size  Location     Type
  8538 ;;                  1    wreg      void 
  8539 ;; Registers used:
  8540 ;;		wreg, status,2, status,0, cstack
  8541 ;; Tracked objects:
  8542 ;;		On entry : 0/0
  8543 ;;		On exit  : 0/0
  8544 ;;		Unchanged: 0/0
  8545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8546 ;;      Params:         0       0      13       0       0       0       0
  8547 ;;      Locals:         0       0       0       0       0       0       0
  8548 ;;      Temps:          0       0       0       0       0       0       0
  8549 ;;      Totals:         0       0      13       0       0       0       0
  8550 ;;Total ram usage:       13 bytes
  8551 ;; Hardware stack levels used:    1
  8552 ;; Hardware stack levels required when called:    5
  8553 ;; This function calls:
  8554 ;;		___awdiv
  8555 ;; This function is called by:
  8556 ;;		_SYSTEM_Initialize
  8557 ;; This function uses a non-reentrant model
  8558 ;;
  8559                           
  8560                           	psect	text36
  8561  002A72                     __ptext36:
  8562                           	opt stack 0
  8563  002A72                     _begin:
  8564                           	opt stack 24
  8565                           
  8566                           ;FastTransfer.c: 20: receiveArrayAddress = ptr;
  8567                           
  8568                           ;incstack = 0
  8569  002A72  C139  F0D5         	movff	begin@ptr,_receiveArrayAddress
  8570  002A76  C13A  F0D6         	movff	begin@ptr+1,_receiveArrayAddress+1
  8571                           
  8572                           ;FastTransfer.c: 21: moduleAddress = givenAddress;
  8573  002A7A  C13C  F03B         	movff	begin@givenAddress,_moduleAddress
  8574                           
  8575                           ;FastTransfer.c: 22: serial_write = stufftosend;
  8576  002A7E  C13E  F032         	movff	begin@stufftosend,_serial_write
  8577  002A82  C13F  F033         	movff	begin@stufftosend+1,_serial_write+1
  8578                           
  8579                           ;FastTransfer.c: 23: serial_available = stuffavailable;
  8580  002A86  C142  F02E         	movff	begin@stuffavailable,_serial_available
  8581  002A8A  C143  F02F         	movff	begin@stuffavailable+1,_serial_available+1
  8582                           
  8583                           ;FastTransfer.c: 24: serial_peek = stuffpeek;
  8584  002A8E  C144  F0D9         	movff	begin@stuffpeek,_serial_peek
  8585  002A92  C145  F0DA         	movff	begin@stuffpeek+1,_serial_peek+1
  8586                           
  8587                           ;FastTransfer.c: 25: serial_read = stufftoreceive;
  8588  002A96  C140  F030         	movff	begin@stufftoreceive,_serial_read
  8589  002A9A  C141  F031         	movff	begin@stufftoreceive+1,_serial_read+1
  8590                           
  8591                           ;FastTransfer.c: 26: maxDataAddress = maxSize / 2;
  8592  002A9E  C13B  F01B         	movff	begin@maxSize,___awdiv@dividend
  8593  002AA2  6A1C               	clrf	___awdiv@dividend+1,c
  8594  002AA4  0E00               	movlw	0
  8595  002AA6  6E1E               	movwf	___awdiv@divisor+1,c
  8596  002AA8  0E02               	movlw	2
  8597  002AAA  6E1D               	movwf	___awdiv@divisor,c
  8598  002AAC  ECAE  F013         	call	___awdiv	;wreg free
  8599  002AB0  501B               	movf	?___awdiv,w,c
  8600  002AB2  6E3A               	movwf	_maxDataAddress,c
  8601                           
  8602                           ;FastTransfer.c: 27: sendStructAddress = (unsigned char*) & ring_buffer;
  8603  002AB4  0E00               	movlw	low _ring_buffer
  8604  002AB6  0100               	movlb	0	; () banked
  8605  002AB8  6FD7               	movwf	_sendStructAddress& (0+255),b
  8606  002ABA  0E02               	movlw	high _ring_buffer
  8607  002ABC  0100               	movlb	0	; () banked
  8608  002ABE  6FD8               	movwf	(_sendStructAddress+1)& (0+255),b
  8609                           
  8610                           ; BSR set to: 0
  8611                           ;FastTransfer.c: 28: AKNAKsend = error;
  8612  002AC0  C13D  F036         	movff	begin@error,_AKNAKsend
  8613                           
  8614                           ; BSR set to: 0
  8615                           ;FastTransfer.c: 29: alignErrorCounter = 0;
  8616  002AC4  0E00               	movlw	0
  8617  002AC6  0100               	movlb	0	; () banked
  8618  002AC8  6FC6               	movwf	(_alignErrorCounter+1)& (0+255),b
  8619  002ACA  0E00               	movlw	0
  8620  002ACC  6FC5               	movwf	_alignErrorCounter& (0+255),b
  8621                           
  8622                           ; BSR set to: 0
  8623  002ACE  0012               	return		;funcret
  8624  002AD0                     __end_of_begin:
  8625                           	opt stack 0
  8626                           tosu	equ	0xFFF
  8627                           tosh	equ	0xFFE
  8628                           tosl	equ	0xFFD
  8629                           pclath	equ	0xFFA
  8630                           tblptru	equ	0xFF8
  8631                           tblptrh	equ	0xFF7
  8632                           tblptrl	equ	0xFF6
  8633                           tablat	equ	0xFF5
  8634                           prodh	equ	0xFF4
  8635                           prodl	equ	0xFF3
  8636                           intcon	equ	0xFF2
  8637                           postinc0	equ	0xFEE
  8638                           wreg	equ	0xFE8
  8639                           indf2	equ	0xFDF
  8640                           postinc2	equ	0xFDE
  8641                           postdec2	equ	0xFDD
  8642                           plusw2	equ	0xFDB
  8643                           fsr2h	equ	0xFDA
  8644                           fsr2l	equ	0xFD9
  8645                           status	equ	0xFD8
  8646                           
  8647 ;; *************** function _TMR2_Initialize *****************
  8648 ;; Defined at:
  8649 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  8650 ;; Parameters:    Size  Location     Type
  8651 ;;		None
  8652 ;; Auto vars:     Size  Location     Type
  8653 ;;		None
  8654 ;; Return value:  Size  Location     Type
  8655 ;;                  2  344[None  ] int 
  8656 ;; Registers used:
  8657 ;;		wreg, status,2, status,0, cstack
  8658 ;; Tracked objects:
  8659 ;;		On entry : 0/0
  8660 ;;		On exit  : 0/0
  8661 ;;		Unchanged: 0/0
  8662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8663 ;;      Params:         0       0       0       0       0       0       0
  8664 ;;      Locals:         0       0       0       0       0       0       0
  8665 ;;      Temps:          0       0       0       0       0       0       0
  8666 ;;      Totals:         0       0       0       0       0       0       0
  8667 ;;Total ram usage:        0 bytes
  8668 ;; Hardware stack levels used:    1
  8669 ;; Hardware stack levels required when called:    5
  8670 ;; This function calls:
  8671 ;;		_TMR2_SetInterruptHandler
  8672 ;;		_TMR2_StartTimer
  8673 ;; This function is called by:
  8674 ;;		_SYSTEM_Initialize
  8675 ;; This function uses a non-reentrant model
  8676 ;;
  8677                           
  8678                           	psect	text37
  8679  002EE0                     __ptext37:
  8680                           	opt stack 0
  8681  002EE0                     _TMR2_Initialize:
  8682                           	opt stack 24
  8683                           
  8684                           ;tmr2.c: 67: T2CON = 0x7E;
  8685                           
  8686                           ; BSR set to: 0
  8687                           ;incstack = 0
  8688  002EE0  0E7E               	movlw	126
  8689  002EE2  6EBA               	movwf	4026,c	;volatile
  8690                           
  8691                           ;tmr2.c: 70: PR2 = 0x30;
  8692  002EE4  0E30               	movlw	48
  8693  002EE6  6EBB               	movwf	4027,c	;volatile
  8694                           
  8695                           ;tmr2.c: 73: TMR2 = 0x00;
  8696  002EE8  0E00               	movlw	0
  8697  002EEA  6EBC               	movwf	4028,c	;volatile
  8698                           
  8699                           ;tmr2.c: 76: PIR1bits.TMR2IF = 0;
  8700  002EEC  929E               	bcf	3998,1,c	;volatile
  8701                           
  8702                           ;tmr2.c: 79: PIE1bits.TMR2IE = 1;
  8703  002EEE  829D               	bsf	3997,1,c	;volatile
  8704                           
  8705                           ;tmr2.c: 82: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  8706  002EF0  0E5A               	movlw	low _TMR2_DefaultInterruptHandler
  8707  002EF2  6E1B               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  8708  002EF4  0E30               	movlw	high _TMR2_DefaultInterruptHandler
  8709  002EF6  6E1C               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  8710  002EF8  EC1E  F018         	call	_TMR2_SetInterruptHandler	;wreg free
  8711                           
  8712                           ;tmr2.c: 85: TMR2_StartTimer();
  8713  002EFC  EC27  F018         	call	_TMR2_StartTimer	;wreg free
  8714  002F00  0012               	return		;funcret
  8715  002F02                     __end_of_TMR2_Initialize:
  8716                           	opt stack 0
  8717                           tosu	equ	0xFFF
  8718                           tosh	equ	0xFFE
  8719                           tosl	equ	0xFFD
  8720                           pclath	equ	0xFFA
  8721                           tblptru	equ	0xFF8
  8722                           tblptrh	equ	0xFF7
  8723                           tblptrl	equ	0xFF6
  8724                           tablat	equ	0xFF5
  8725                           prodh	equ	0xFF4
  8726                           prodl	equ	0xFF3
  8727                           intcon	equ	0xFF2
  8728                           postinc0	equ	0xFEE
  8729                           wreg	equ	0xFE8
  8730                           indf2	equ	0xFDF
  8731                           postinc2	equ	0xFDE
  8732                           postdec2	equ	0xFDD
  8733                           plusw2	equ	0xFDB
  8734                           fsr2h	equ	0xFDA
  8735                           fsr2l	equ	0xFD9
  8736                           status	equ	0xFD8
  8737                           
  8738 ;; *************** function _TMR2_StartTimer *****************
  8739 ;; Defined at:
  8740 ;;		line 88 in file "mcc_generated_files/tmr2.c"
  8741 ;; Parameters:    Size  Location     Type
  8742 ;;		None
  8743 ;; Auto vars:     Size  Location     Type
  8744 ;;		None
  8745 ;; Return value:  Size  Location     Type
  8746 ;;                  1    wreg      void 
  8747 ;; Registers used:
  8748 ;;		None
  8749 ;; Tracked objects:
  8750 ;;		On entry : 0/0
  8751 ;;		On exit  : 0/0
  8752 ;;		Unchanged: 0/0
  8753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8754 ;;      Params:         0       0       0       0       0       0       0
  8755 ;;      Locals:         0       0       0       0       0       0       0
  8756 ;;      Temps:          0       0       0       0       0       0       0
  8757 ;;      Totals:         0       0       0       0       0       0       0
  8758 ;;Total ram usage:        0 bytes
  8759 ;; Hardware stack levels used:    1
  8760 ;; Hardware stack levels required when called:    4
  8761 ;; This function calls:
  8762 ;;		Nothing
  8763 ;; This function is called by:
  8764 ;;		_TMR2_Initialize
  8765 ;; This function uses a non-reentrant model
  8766 ;;
  8767                           
  8768                           	psect	text38
  8769  00304E                     __ptext38:
  8770                           	opt stack 0
  8771  00304E                     _TMR2_StartTimer:
  8772                           	opt stack 24
  8773                           
  8774                           ;tmr2.c: 91: T2CONbits.TMR2ON = 1;
  8775                           
  8776                           ;incstack = 0
  8777  00304E  84BA               	bsf	4026,2,c	;volatile
  8778  003050  0012               	return		;funcret
  8779  003052                     __end_of_TMR2_StartTimer:
  8780                           	opt stack 0
  8781                           tosu	equ	0xFFF
  8782                           tosh	equ	0xFFE
  8783                           tosl	equ	0xFFD
  8784                           pclath	equ	0xFFA
  8785                           tblptru	equ	0xFF8
  8786                           tblptrh	equ	0xFF7
  8787                           tblptrl	equ	0xFF6
  8788                           tablat	equ	0xFF5
  8789                           prodh	equ	0xFF4
  8790                           prodl	equ	0xFF3
  8791                           intcon	equ	0xFF2
  8792                           postinc0	equ	0xFEE
  8793                           wreg	equ	0xFE8
  8794                           indf2	equ	0xFDF
  8795                           postinc2	equ	0xFDE
  8796                           postdec2	equ	0xFDD
  8797                           plusw2	equ	0xFDB
  8798                           fsr2h	equ	0xFDA
  8799                           fsr2l	equ	0xFD9
  8800                           status	equ	0xFD8
  8801                           
  8802 ;; *************** function _TMR2_SetInterruptHandler *****************
  8803 ;; Defined at:
  8804 ;;		line 293 in file "mcc_generated_files/tmr2.c"
  8805 ;; Parameters:    Size  Location     Type
  8806 ;;  InterruptHan    2   26[COMRAM] PTR void 
  8807 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  8808 ;; Auto vars:     Size  Location     Type
  8809 ;;		None
  8810 ;; Return value:  Size  Location     Type
  8811 ;;                  1    wreg      void 
  8812 ;; Registers used:
  8813 ;;		wreg, status,2, status,0
  8814 ;; Tracked objects:
  8815 ;;		On entry : 0/0
  8816 ;;		On exit  : 0/0
  8817 ;;		Unchanged: 0/0
  8818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8819 ;;      Params:         2       0       0       0       0       0       0
  8820 ;;      Locals:         0       0       0       0       0       0       0
  8821 ;;      Temps:          0       0       0       0       0       0       0
  8822 ;;      Totals:         2       0       0       0       0       0       0
  8823 ;;Total ram usage:        2 bytes
  8824 ;; Hardware stack levels used:    1
  8825 ;; Hardware stack levels required when called:    4
  8826 ;; This function calls:
  8827 ;;		Nothing
  8828 ;; This function is called by:
  8829 ;;		_TMR2_Initialize
  8830 ;; This function uses a non-reentrant model
  8831 ;;
  8832                           
  8833                           	psect	text39
  8834  00303C                     __ptext39:
  8835                           	opt stack 0
  8836  00303C                     _TMR2_SetInterruptHandler:
  8837                           	opt stack 24
  8838                           
  8839                           ;tmr2.c: 294: TMR2_InterruptHandler = InterruptHandler;
  8840                           
  8841                           ;incstack = 0
  8842  00303C  C01B  F0FE         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  8843  003040  C01C  F0FF         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  8844  003044  0012               	return		;funcret
  8845  003046                     __end_of_TMR2_SetInterruptHandler:
  8846                           	opt stack 0
  8847                           tosu	equ	0xFFF
  8848                           tosh	equ	0xFFE
  8849                           tosl	equ	0xFFD
  8850                           pclath	equ	0xFFA
  8851                           tblptru	equ	0xFF8
  8852                           tblptrh	equ	0xFF7
  8853                           tblptrl	equ	0xFF6
  8854                           tablat	equ	0xFF5
  8855                           prodh	equ	0xFF4
  8856                           prodl	equ	0xFF3
  8857                           intcon	equ	0xFF2
  8858                           postinc0	equ	0xFEE
  8859                           wreg	equ	0xFE8
  8860                           indf2	equ	0xFDF
  8861                           postinc2	equ	0xFDE
  8862                           postdec2	equ	0xFDD
  8863                           plusw2	equ	0xFDB
  8864                           fsr2h	equ	0xFDA
  8865                           fsr2l	equ	0xFD9
  8866                           status	equ	0xFD8
  8867                           
  8868 ;; *************** function _TMR0_Initialize *****************
  8869 ;; Defined at:
  8870 ;;		line 22 in file "mcc_generated_files/tmr0.c"
  8871 ;; Parameters:    Size  Location     Type
  8872 ;;		None
  8873 ;; Auto vars:     Size  Location     Type
  8874 ;;		None
  8875 ;; Return value:  Size  Location     Type
  8876 ;;                  1    wreg      void 
  8877 ;; Registers used:
  8878 ;;		wreg, status,2, cstack
  8879 ;; Tracked objects:
  8880 ;;		On entry : 0/0
  8881 ;;		On exit  : 0/0
  8882 ;;		Unchanged: 0/0
  8883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8884 ;;      Params:         0       0       0       0       0       0       0
  8885 ;;      Locals:         0       0       0       0       0       0       0
  8886 ;;      Temps:          0       0       0       0       0       0       0
  8887 ;;      Totals:         0       0       0       0       0       0       0
  8888 ;;Total ram usage:        0 bytes
  8889 ;; Hardware stack levels used:    1
  8890 ;; Hardware stack levels required when called:    5
  8891 ;; This function calls:
  8892 ;;		_TMR0_StartTimer
  8893 ;; This function is called by:
  8894 ;;		_SYSTEM_Initialize
  8895 ;; This function uses a non-reentrant model
  8896 ;;
  8897                           
  8898                           	psect	text40
  8899  002F20                     __ptext40:
  8900                           	opt stack 0
  8901  002F20                     _TMR0_Initialize:
  8902                           	opt stack 24
  8903                           
  8904                           ;tmr0.c: 26: T0CON = 0x94;
  8905                           
  8906                           ;incstack = 0
  8907  002F20  0E94               	movlw	148
  8908  002F22  6ED5               	movwf	4053,c	;volatile
  8909                           
  8910                           ;tmr0.c: 29: TMR0H = 0xCF;
  8911  002F24  0ECF               	movlw	207
  8912  002F26  6ED7               	movwf	4055,c	;volatile
  8913                           
  8914                           ;tmr0.c: 32: TMR0L = 0x2C;
  8915  002F28  0E2C               	movlw	44
  8916  002F2A  6ED6               	movwf	4054,c	;volatile
  8917                           
  8918                           ;tmr0.c: 35: timer0ReloadVal16bit = 53036;
  8919  002F2C  0ECF               	movlw	207
  8920  002F2E  6E43               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  8921  002F30  0E2C               	movlw	44
  8922  002F32  6E42               	movwf	_timer0ReloadVal16bit,c	;volatile
  8923                           
  8924                           ;tmr0.c: 38: INTCONbits.TMR0IF = 0;
  8925  002F34  94F2               	bcf	intcon,2,c	;volatile
  8926                           
  8927                           ;tmr0.c: 41: INTCONbits.TMR0IE = 1;
  8928  002F36  8AF2               	bsf	intcon,5,c	;volatile
  8929                           
  8930                           ;tmr0.c: 44: TMR0_StartTimer();
  8931  002F38  EC29  F018         	call	_TMR0_StartTimer	;wreg free
  8932  002F3C  0012               	return		;funcret
  8933  002F3E                     __end_of_TMR0_Initialize:
  8934                           	opt stack 0
  8935                           tosu	equ	0xFFF
  8936                           tosh	equ	0xFFE
  8937                           tosl	equ	0xFFD
  8938                           pclath	equ	0xFFA
  8939                           tblptru	equ	0xFF8
  8940                           tblptrh	equ	0xFF7
  8941                           tblptrl	equ	0xFF6
  8942                           tablat	equ	0xFF5
  8943                           prodh	equ	0xFF4
  8944                           prodl	equ	0xFF3
  8945                           intcon	equ	0xFF2
  8946                           postinc0	equ	0xFEE
  8947                           wreg	equ	0xFE8
  8948                           indf2	equ	0xFDF
  8949                           postinc2	equ	0xFDE
  8950                           postdec2	equ	0xFDD
  8951                           plusw2	equ	0xFDB
  8952                           fsr2h	equ	0xFDA
  8953                           fsr2l	equ	0xFD9
  8954                           status	equ	0xFD8
  8955                           
  8956 ;; *************** function _TMR0_StartTimer *****************
  8957 ;; Defined at:
  8958 ;;		line 47 in file "mcc_generated_files/tmr0.c"
  8959 ;; Parameters:    Size  Location     Type
  8960 ;;		None
  8961 ;; Auto vars:     Size  Location     Type
  8962 ;;		None
  8963 ;; Return value:  Size  Location     Type
  8964 ;;                  1    wreg      void 
  8965 ;; Registers used:
  8966 ;;		None
  8967 ;; Tracked objects:
  8968 ;;		On entry : 0/0
  8969 ;;		On exit  : 0/0
  8970 ;;		Unchanged: 0/0
  8971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8972 ;;      Params:         0       0       0       0       0       0       0
  8973 ;;      Locals:         0       0       0       0       0       0       0
  8974 ;;      Temps:          0       0       0       0       0       0       0
  8975 ;;      Totals:         0       0       0       0       0       0       0
  8976 ;;Total ram usage:        0 bytes
  8977 ;; Hardware stack levels used:    1
  8978 ;; Hardware stack levels required when called:    4
  8979 ;; This function calls:
  8980 ;;		Nothing
  8981 ;; This function is called by:
  8982 ;;		_TMR0_Initialize
  8983 ;; This function uses a non-reentrant model
  8984 ;;
  8985                           
  8986                           	psect	text41
  8987  003052                     __ptext41:
  8988                           	opt stack 0
  8989  003052                     _TMR0_StartTimer:
  8990                           	opt stack 24
  8991                           
  8992                           ;tmr0.c: 49: T0CONbits.TMR0ON = 1;
  8993                           
  8994                           ;incstack = 0
  8995  003052  8ED5               	bsf	4053,7,c	;volatile
  8996  003054  0012               	return		;funcret
  8997  003056                     __end_of_TMR0_StartTimer:
  8998                           	opt stack 0
  8999                           tosu	equ	0xFFF
  9000                           tosh	equ	0xFFE
  9001                           tosl	equ	0xFFD
  9002                           pclath	equ	0xFFA
  9003                           tblptru	equ	0xFF8
  9004                           tblptrh	equ	0xFF7
  9005                           tblptrl	equ	0xFF6
  9006                           tablat	equ	0xFF5
  9007                           prodh	equ	0xFF4
  9008                           prodl	equ	0xFF3
  9009                           intcon	equ	0xFF2
  9010                           postinc0	equ	0xFEE
  9011                           wreg	equ	0xFE8
  9012                           indf2	equ	0xFDF
  9013                           postinc2	equ	0xFDE
  9014                           postdec2	equ	0xFDD
  9015                           plusw2	equ	0xFDB
  9016                           fsr2h	equ	0xFDA
  9017                           fsr2l	equ	0xFD9
  9018                           status	equ	0xFD8
  9019                           
  9020 ;; *************** function _PIN_MANAGER_Initialize *****************
  9021 ;; Defined at:
  9022 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  9023 ;; Parameters:    Size  Location     Type
  9024 ;;		None
  9025 ;; Auto vars:     Size  Location     Type
  9026 ;;		None
  9027 ;; Return value:  Size  Location     Type
  9028 ;;                  1    wreg      void 
  9029 ;; Registers used:
  9030 ;;		wreg, status,2
  9031 ;; Tracked objects:
  9032 ;;		On entry : 0/0
  9033 ;;		On exit  : 0/0
  9034 ;;		Unchanged: 0/0
  9035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9036 ;;      Params:         0       0       0       0       0       0       0
  9037 ;;      Locals:         0       0       0       0       0       0       0
  9038 ;;      Temps:          0       0       0       0       0       0       0
  9039 ;;      Totals:         0       0       0       0       0       0       0
  9040 ;;Total ram usage:        0 bytes
  9041 ;; Hardware stack levels used:    1
  9042 ;; Hardware stack levels required when called:    4
  9043 ;; This function calls:
  9044 ;;		Nothing
  9045 ;; This function is called by:
  9046 ;;		_SYSTEM_Initialize
  9047 ;; This function uses a non-reentrant model
  9048 ;;
  9049                           
  9050                           	psect	text42
  9051  002AD0                     __ptext42:
  9052                           	opt stack 0
  9053  002AD0                     _PIN_MANAGER_Initialize:
  9054                           	opt stack 25
  9055                           
  9056                           ;pin_manager.c: 52: LATA = 0x00;
  9057                           
  9058                           ;incstack = 0
  9059  002AD0  0E00               	movlw	0
  9060  002AD2  6E89               	movwf	3977,c	;volatile
  9061                           
  9062                           ;pin_manager.c: 53: TRISA = 0xF7;
  9063  002AD4  0EF7               	movlw	247
  9064  002AD6  6E92               	movwf	3986,c	;volatile
  9065                           
  9066                           ;pin_manager.c: 54: ANSELA = 0x20;
  9067  002AD8  0E20               	movlw	32
  9068  002ADA  010F               	movlb	15	; () banked
  9069  002ADC  6F38               	movwf	56,b	;volatile
  9070                           
  9071                           ;pin_manager.c: 56: LATB = 0x00;
  9072  002ADE  0E00               	movlw	0
  9073  002AE0  6E8A               	movwf	3978,c	;volatile
  9074                           
  9075                           ;pin_manager.c: 57: TRISB = 0xD7;
  9076  002AE2  0ED7               	movlw	215
  9077  002AE4  6E93               	movwf	3987,c	;volatile
  9078                           
  9079                           ;pin_manager.c: 58: ANSELB = 0x00;
  9080  002AE6  0E00               	movlw	0
  9081  002AE8  010F               	movlb	15	; () banked
  9082  002AEA  6F39               	movwf	57,b	;volatile
  9083                           
  9084                           ;pin_manager.c: 59: WPUB = 0x00;
  9085  002AEC  0E00               	movlw	0
  9086  002AEE  6E61               	movwf	3937,c	;volatile
  9087                           
  9088                           ;pin_manager.c: 61: LATC = 0x18;
  9089  002AF0  0E18               	movlw	24
  9090  002AF2  6E8B               	movwf	3979,c	;volatile
  9091                           
  9092                           ;pin_manager.c: 62: TRISC = 0xDF;
  9093  002AF4  0EDF               	movlw	223
  9094  002AF6  6E94               	movwf	3988,c	;volatile
  9095                           
  9096                           ;pin_manager.c: 63: ANSELC = 0x04;
  9097  002AF8  0E04               	movlw	4
  9098  002AFA  010F               	movlb	15	; () banked
  9099  002AFC  6F3A               	movwf	58,b	;volatile
  9100                           
  9101                           ;pin_manager.c: 65: LATD = 0x00;
  9102  002AFE  0E00               	movlw	0
  9103  002B00  6E8C               	movwf	3980,c	;volatile
  9104                           
  9105                           ;pin_manager.c: 66: TRISD = 0xFD;
  9106  002B02  0EFD               	movlw	253
  9107  002B04  6E95               	movwf	3989,c	;volatile
  9108                           
  9109                           ;pin_manager.c: 67: ANSELD = 0xDD;
  9110  002B06  0EDD               	movlw	221
  9111  002B08  010F               	movlb	15	; () banked
  9112  002B0A  6F3B               	movwf	59,b	;volatile
  9113                           
  9114                           ;pin_manager.c: 69: LATE = 0x00;
  9115  002B0C  0E00               	movlw	0
  9116  002B0E  6E8D               	movwf	3981,c	;volatile
  9117                           
  9118                           ;pin_manager.c: 70: TRISE = 0x00;
  9119  002B10  0E00               	movlw	0
  9120  002B12  6E96               	movwf	3990,c	;volatile
  9121                           
  9122                           ;pin_manager.c: 71: ANSELE = 0x00;
  9123  002B14  0E00               	movlw	0
  9124  002B16  010F               	movlb	15	; () banked
  9125  002B18  6F3C               	movwf	60,b	;volatile
  9126                           
  9127                           ; BSR set to: 15
  9128                           ;pin_manager.c: 72: TRISCbits.TRISC5=0;
  9129  002B1A  9A94               	bcf	3988,5,c	;volatile
  9130                           
  9131                           ; BSR set to: 15
  9132                           ;pin_manager.c: 73: INTCON2bits.nRBPU = 0x01;
  9133  002B1C  8EF1               	bsf	intcon2,7,c	;volatile
  9134                           
  9135                           ; BSR set to: 15
  9136  002B1E  0012               	return		;funcret
  9137  002B20                     __end_of_PIN_MANAGER_Initialize:
  9138                           	opt stack 0
  9139                           tosu	equ	0xFFF
  9140                           tosh	equ	0xFFE
  9141                           tosl	equ	0xFFD
  9142                           pclath	equ	0xFFA
  9143                           tblptru	equ	0xFF8
  9144                           tblptrh	equ	0xFF7
  9145                           tblptrl	equ	0xFF6
  9146                           tablat	equ	0xFF5
  9147                           prodh	equ	0xFF4
  9148                           prodl	equ	0xFF3
  9149                           intcon	equ	0xFF2
  9150                           intcon2	equ	0xFF1
  9151                           postinc0	equ	0xFEE
  9152                           wreg	equ	0xFE8
  9153                           indf2	equ	0xFDF
  9154                           postinc2	equ	0xFDE
  9155                           postdec2	equ	0xFDD
  9156                           plusw2	equ	0xFDB
  9157                           fsr2h	equ	0xFDA
  9158                           fsr2l	equ	0xFD9
  9159                           status	equ	0xFD8
  9160                           
  9161 ;; *************** function _OSCILLATOR_Initialize *****************
  9162 ;; Defined at:
  9163 ;;		line 127 in file "mcc_generated_files/mcc.c"
  9164 ;; Parameters:    Size  Location     Type
  9165 ;;		None
  9166 ;; Auto vars:     Size  Location     Type
  9167 ;;		None
  9168 ;; Return value:  Size  Location     Type
  9169 ;;                  1    wreg      void 
  9170 ;; Registers used:
  9171 ;;		wreg, status,2
  9172 ;; Tracked objects:
  9173 ;;		On entry : 0/0
  9174 ;;		On exit  : 0/0
  9175 ;;		Unchanged: 0/0
  9176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9177 ;;      Params:         0       0       0       0       0       0       0
  9178 ;;      Locals:         0       0       0       0       0       0       0
  9179 ;;      Temps:          0       0       0       0       0       0       0
  9180 ;;      Totals:         0       0       0       0       0       0       0
  9181 ;;Total ram usage:        0 bytes
  9182 ;; Hardware stack levels used:    1
  9183 ;; Hardware stack levels required when called:    4
  9184 ;; This function calls:
  9185 ;;		Nothing
  9186 ;; This function is called by:
  9187 ;;		_SYSTEM_Initialize
  9188 ;; This function uses a non-reentrant model
  9189 ;;
  9190                           
  9191                           	psect	text43
  9192  00302E                     __ptext43:
  9193                           	opt stack 0
  9194  00302E                     _OSCILLATOR_Initialize:
  9195                           	opt stack 25
  9196                           
  9197                           ;mcc.c: 130: OSCCON = 0x72;
  9198                           
  9199                           ; BSR set to: 15
  9200                           ;incstack = 0
  9201  00302E  0E72               	movlw	114
  9202  003030  6ED3               	movwf	4051,c	;volatile
  9203                           
  9204                           ;mcc.c: 132: OSCCON2 = 0x04;
  9205  003032  0E04               	movlw	4
  9206  003034  6ED2               	movwf	4050,c	;volatile
  9207                           
  9208                           ;mcc.c: 134: OSCTUNE = 0x00;
  9209  003036  0E00               	movlw	0
  9210  003038  6E9B               	movwf	3995,c	;volatile
  9211  00303A  0012               	return		;funcret
  9212  00303C                     __end_of_OSCILLATOR_Initialize:
  9213                           	opt stack 0
  9214                           tosu	equ	0xFFF
  9215                           tosh	equ	0xFFE
  9216                           tosl	equ	0xFFD
  9217                           pclath	equ	0xFFA
  9218                           tblptru	equ	0xFF8
  9219                           tblptrh	equ	0xFF7
  9220                           tblptrl	equ	0xFF6
  9221                           tablat	equ	0xFF5
  9222                           prodh	equ	0xFF4
  9223                           prodl	equ	0xFF3
  9224                           intcon	equ	0xFF2
  9225                           intcon2	equ	0xFF1
  9226                           postinc0	equ	0xFEE
  9227                           wreg	equ	0xFE8
  9228                           indf2	equ	0xFDF
  9229                           postinc2	equ	0xFDE
  9230                           postdec2	equ	0xFDD
  9231                           plusw2	equ	0xFDB
  9232                           fsr2h	equ	0xFDA
  9233                           fsr2l	equ	0xFD9
  9234                           status	equ	0xFD8
  9235                           
  9236 ;; *************** function _INTERRUPT_Initialize *****************
  9237 ;; Defined at:
  9238 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9239 ;; Parameters:    Size  Location     Type
  9240 ;;		None
  9241 ;; Auto vars:     Size  Location     Type
  9242 ;;		None
  9243 ;; Return value:  Size  Location     Type
  9244 ;;                  1    wreg      void 
  9245 ;; Registers used:
  9246 ;;		None
  9247 ;; Tracked objects:
  9248 ;;		On entry : 0/0
  9249 ;;		On exit  : 0/0
  9250 ;;		Unchanged: 0/0
  9251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9252 ;;      Params:         0       0       0       0       0       0       0
  9253 ;;      Locals:         0       0       0       0       0       0       0
  9254 ;;      Temps:          0       0       0       0       0       0       0
  9255 ;;      Totals:         0       0       0       0       0       0       0
  9256 ;;Total ram usage:        0 bytes
  9257 ;; Hardware stack levels used:    1
  9258 ;; Hardware stack levels required when called:    4
  9259 ;; This function calls:
  9260 ;;		Nothing
  9261 ;; This function is called by:
  9262 ;;		_SYSTEM_Initialize
  9263 ;; This function uses a non-reentrant model
  9264 ;;
  9265                           
  9266                           	psect	text44
  9267  003000                     __ptext44:
  9268                           	opt stack 0
  9269  003000                     _INTERRUPT_Initialize:
  9270                           	opt stack 25
  9271                           
  9272                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  9273                           
  9274                           ;incstack = 0
  9275  003000  9ED0               	bcf	4048,7,c	;volatile
  9276                           
  9277                           ;interrupt_manager.c: 60: IPR1bits.RC1IP = 0;
  9278  003002  9A9F               	bcf	3999,5,c	;volatile
  9279                           
  9280                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
  9281  003004  989F               	bcf	3999,4,c	;volatile
  9282                           
  9283                           ;interrupt_manager.c: 64: INTCON2bits.TMR0IP = 0;
  9284  003006  94F1               	bcf	intcon2,2,c	;volatile
  9285                           
  9286                           ;interrupt_manager.c: 66: IPR1bits.ADIP = 0;
  9287  003008  9C9F               	bcf	3999,6,c	;volatile
  9288                           
  9289                           ;interrupt_manager.c: 68: IPR1bits.SSP1IP = 0;
  9290  00300A  969F               	bcf	3999,3,c	;volatile
  9291                           
  9292                           ;interrupt_manager.c: 70: IPR2bits.BCL1IP = 0;
  9293  00300C  96A2               	bcf	4002,3,c	;volatile
  9294                           
  9295                           ;interrupt_manager.c: 71: IPR1bits.TMR2IP=0;
  9296  00300E  929F               	bcf	3999,1,c	;volatile
  9297  003010  0012               	return		;funcret
  9298  003012                     __end_of_INTERRUPT_Initialize:
  9299                           	opt stack 0
  9300                           tosu	equ	0xFFF
  9301                           tosh	equ	0xFFE
  9302                           tosl	equ	0xFFD
  9303                           pclath	equ	0xFFA
  9304                           tblptru	equ	0xFF8
  9305                           tblptrh	equ	0xFF7
  9306                           tblptrl	equ	0xFF6
  9307                           tablat	equ	0xFF5
  9308                           prodh	equ	0xFF4
  9309                           prodl	equ	0xFF3
  9310                           intcon	equ	0xFF2
  9311                           intcon2	equ	0xFF1
  9312                           postinc0	equ	0xFEE
  9313                           wreg	equ	0xFE8
  9314                           indf2	equ	0xFDF
  9315                           postinc2	equ	0xFDE
  9316                           postdec2	equ	0xFDD
  9317                           plusw2	equ	0xFDB
  9318                           fsr2h	equ	0xFDA
  9319                           fsr2l	equ	0xFD9
  9320                           status	equ	0xFD8
  9321                           
  9322 ;; *************** function _I2C1_Initialize *****************
  9323 ;; Defined at:
  9324 ;;		line 151 in file "mcc_generated_files/i2c1.c"
  9325 ;; Parameters:    Size  Location     Type
  9326 ;;		None
  9327 ;; Auto vars:     Size  Location     Type
  9328 ;;		None
  9329 ;; Return value:  Size  Location     Type
  9330 ;;                  1    wreg      void 
  9331 ;; Registers used:
  9332 ;;		wreg, status,2, status,0
  9333 ;; Tracked objects:
  9334 ;;		On entry : 0/0
  9335 ;;		On exit  : 0/0
  9336 ;;		Unchanged: 0/0
  9337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9338 ;;      Params:         0       0       0       0       0       0       0
  9339 ;;      Locals:         0       0       0       0       0       0       0
  9340 ;;      Temps:          0       0       0       0       0       0       0
  9341 ;;      Totals:         0       0       0       0       0       0       0
  9342 ;;Total ram usage:        0 bytes
  9343 ;; Hardware stack levels used:    1
  9344 ;; Hardware stack levels required when called:    4
  9345 ;; This function calls:
  9346 ;;		Nothing
  9347 ;; This function is called by:
  9348 ;;		_SYSTEM_Initialize
  9349 ;; This function uses a non-reentrant model
  9350 ;;
  9351                           
  9352                           	psect	text45
  9353  002C80                     __ptext45:
  9354                           	opt stack 0
  9355  002C80                     _I2C1_Initialize:
  9356                           	opt stack 25
  9357                           
  9358                           ;i2c1.c: 153: i2c1_object.pTrHead = i2c1_tr_queue;
  9359                           
  9360                           ;incstack = 0
  9361  002C80  0EED               	movlw	low _i2c1_tr_queue
  9362  002C82  0100               	movlb	0	; () banked
  9363  002C84  6FBA               	movwf	(_i2c1_object+2)& (0+255),b
  9364  002C86  0E00               	movlw	high _i2c1_tr_queue
  9365  002C88  0100               	movlb	0	; () banked
  9366  002C8A  6FBB               	movwf	(_i2c1_object+3)& (0+255),b
  9367                           
  9368                           ;i2c1.c: 154: i2c1_object.pTrTail = i2c1_tr_queue;
  9369  002C8C  0EED               	movlw	low _i2c1_tr_queue
  9370  002C8E  0100               	movlb	0	; () banked
  9371  002C90  6FB8               	movwf	_i2c1_object& (0+255),b
  9372  002C92  0E00               	movlw	high _i2c1_tr_queue
  9373  002C94  0100               	movlb	0	; () banked
  9374  002C96  6FB9               	movwf	(_i2c1_object+1)& (0+255),b
  9375                           
  9376                           ; BSR set to: 0
  9377                           ;i2c1.c: 155: i2c1_object.trStatus.s.empty = 1;
  9378  002C98  0100               	movlb	0	; () banked
  9379  002C9A  83BC               	bsf	(_i2c1_object+4)& (0+255),1,b
  9380                           
  9381                           ; BSR set to: 0
  9382                           ;i2c1.c: 156: i2c1_object.trStatus.s.full = 0;
  9383  002C9C  0100               	movlb	0	; () banked
  9384  002C9E  91BC               	bcf	(_i2c1_object+4)& (0+255),0,b
  9385                           
  9386                           ; BSR set to: 0
  9387                           ;i2c1.c: 158: i2c1_object.i2cErrors = 0;
  9388  002CA0  0E00               	movlw	0
  9389  002CA2  0100               	movlb	0	; () banked
  9390  002CA4  6FBE               	movwf	(_i2c1_object+6)& (0+255),b
  9391                           
  9392                           ; BSR set to: 0
  9393                           ;i2c1.c: 161: SSP1STAT = 0x80;
  9394  002CA6  0E80               	movlw	128
  9395  002CA8  6EC7               	movwf	4039,c	;volatile
  9396                           
  9397                           ; BSR set to: 0
  9398                           ;i2c1.c: 163: SSP1CON1 = 0x28;
  9399  002CAA  0E28               	movlw	40
  9400  002CAC  6EC6               	movwf	4038,c	;volatile
  9401                           
  9402                           ; BSR set to: 0
  9403                           ;i2c1.c: 165: SSP1CON3 = 0x00;
  9404  002CAE  0E00               	movlw	0
  9405  002CB0  6ECB               	movwf	4043,c	;volatile
  9406                           
  9407                           ; BSR set to: 0
  9408                           ;i2c1.c: 167: SSP1ADD = 0x09;
  9409  002CB2  0E09               	movlw	9
  9410  002CB4  6EC8               	movwf	4040,c	;volatile
  9411                           
  9412                           ; BSR set to: 0
  9413                           ;i2c1.c: 171: PIR1bits.SSP1IF = 0;
  9414  002CB6  969E               	bcf	3998,3,c	;volatile
  9415                           
  9416                           ; BSR set to: 0
  9417                           ;i2c1.c: 173: PIE1bits.SSP1IE = 1;
  9418  002CB8  869D               	bsf	3997,3,c	;volatile
  9419                           
  9420                           ; BSR set to: 0
  9421  002CBA  0012               	return		;funcret
  9422  002CBC                     __end_of_I2C1_Initialize:
  9423                           	opt stack 0
  9424                           tosu	equ	0xFFF
  9425                           tosh	equ	0xFFE
  9426                           tosl	equ	0xFFD
  9427                           pclath	equ	0xFFA
  9428                           tblptru	equ	0xFF8
  9429                           tblptrh	equ	0xFF7
  9430                           tblptrl	equ	0xFF6
  9431                           tablat	equ	0xFF5
  9432                           prodh	equ	0xFF4
  9433                           prodl	equ	0xFF3
  9434                           intcon	equ	0xFF2
  9435                           intcon2	equ	0xFF1
  9436                           postinc0	equ	0xFEE
  9437                           wreg	equ	0xFE8
  9438                           indf2	equ	0xFDF
  9439                           postinc2	equ	0xFDE
  9440                           postdec2	equ	0xFDD
  9441                           plusw2	equ	0xFDB
  9442                           fsr2h	equ	0xFDA
  9443                           fsr2l	equ	0xFD9
  9444                           status	equ	0xFD8
  9445                           
  9446 ;; *************** function _EUSART1_Initialize *****************
  9447 ;; Defined at:
  9448 ;;		line 21 in file "UART.c"
  9449 ;; Parameters:    Size  Location     Type
  9450 ;;		None
  9451 ;; Auto vars:     Size  Location     Type
  9452 ;;		None
  9453 ;; Return value:  Size  Location     Type
  9454 ;;                  1    wreg      void 
  9455 ;; Registers used:
  9456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9457 ;; Tracked objects:
  9458 ;;		On entry : 0/0
  9459 ;;		On exit  : 0/0
  9460 ;;		Unchanged: 0/0
  9461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9462 ;;      Params:         0       0       0       0       0       0       0
  9463 ;;      Locals:         0       0       0       0       0       0       0
  9464 ;;      Temps:          0       0       0       0       0       0       0
  9465 ;;      Totals:         0       0       0       0       0       0       0
  9466 ;;Total ram usage:        0 bytes
  9467 ;; Hardware stack levels used:    1
  9468 ;; Hardware stack levels required when called:    6
  9469 ;; This function calls:
  9470 ;;		_UART_buff_init
  9471 ;; This function is called by:
  9472 ;;		_SYSTEM_Initialize
  9473 ;; This function uses a non-reentrant model
  9474 ;;
  9475                           
  9476                           	psect	text46
  9477  002CBC                     __ptext46:
  9478                           	opt stack 0
  9479  002CBC                     _EUSART1_Initialize:
  9480                           	opt stack 23
  9481                           
  9482                           ;UART.c: 23: PIE1bits.RC1IE = 0;
  9483                           
  9484                           ; BSR set to: 0
  9485                           ;incstack = 0
  9486  002CBC  9A9D               	bcf	3997,5,c	;volatile
  9487                           
  9488                           ;UART.c: 24: PIE1bits.TX1IE = 0;
  9489  002CBE  989D               	bcf	3997,4,c	;volatile
  9490                           
  9491                           ;UART.c: 29: BAUD1CON = 0x48;
  9492  002CC0  0E48               	movlw	72
  9493  002CC2  6EB8               	movwf	4024,c	;volatile
  9494                           
  9495                           ;UART.c: 32: RC1STA = 0x98;
  9496  002CC4  0E98               	movlw	152
  9497  002CC6  6EAB               	movwf	4011,c	;volatile
  9498                           
  9499                           ;UART.c: 35: TX1STA = 0x26;
  9500  002CC8  0E26               	movlw	38
  9501  002CCA  6EAC               	movwf	4012,c	;volatile
  9502                           
  9503                           ;UART.c: 38: SPBRG1 = (((16000000/38400)/4)-1);
  9504  002CCC  0E67               	movlw	103
  9505  002CCE  6EAF               	movwf	4015,c	;volatile
  9506                           
  9507                           ;UART.c: 41: SPBRGH1 = 0x00;
  9508  002CD0  0E00               	movlw	0
  9509  002CD2  6EB0               	movwf	4016,c	;volatile
  9510                           
  9511                           ;UART.c: 44: TXREG1 = 0x00;
  9512  002CD4  0E00               	movlw	0
  9513  002CD6  6EAD               	movwf	4013,c	;volatile
  9514                           
  9515                           ;UART.c: 47: RCREG1 = 0x00;
  9516  002CD8  0E00               	movlw	0
  9517  002CDA  6EAE               	movwf	4014,c	;volatile
  9518                           
  9519                           ;UART.c: 49: UART_buff_init(&input_buffer);
  9520  002CDC  0E00               	movlw	low _input_buffer
  9521  002CDE  6E23               	movwf	UART_buff_init@_this,c
  9522  002CE0  0E04               	movlw	high _input_buffer
  9523  002CE2  6E24               	movwf	UART_buff_init@_this+1,c
  9524  002CE4  EC9F  F017         	call	_UART_buff_init	;wreg free
  9525                           
  9526                           ;UART.c: 50: UART_buff_init(&output_buffer);
  9527  002CE8  0E00               	movlw	low _output_buffer
  9528  002CEA  6E23               	movwf	UART_buff_init@_this,c
  9529  002CEC  0E05               	movlw	high _output_buffer
  9530  002CEE  6E24               	movwf	UART_buff_init@_this+1,c
  9531  002CF0  EC9F  F017         	call	_UART_buff_init	;wreg free
  9532                           
  9533                           ;UART.c: 52: PIE1bits.RC1IE = 1;
  9534  002CF4  8A9D               	bsf	3997,5,c	;volatile
  9535  002CF6  0012               	return		;funcret
  9536  002CF8                     __end_of_EUSART1_Initialize:
  9537                           	opt stack 0
  9538                           tosu	equ	0xFFF
  9539                           tosh	equ	0xFFE
  9540                           tosl	equ	0xFFD
  9541                           pclath	equ	0xFFA
  9542                           tblptru	equ	0xFF8
  9543                           tblptrh	equ	0xFF7
  9544                           tblptrl	equ	0xFF6
  9545                           tablat	equ	0xFF5
  9546                           prodh	equ	0xFF4
  9547                           prodl	equ	0xFF3
  9548                           intcon	equ	0xFF2
  9549                           intcon2	equ	0xFF1
  9550                           postinc0	equ	0xFEE
  9551                           wreg	equ	0xFE8
  9552                           indf2	equ	0xFDF
  9553                           postinc2	equ	0xFDE
  9554                           postdec2	equ	0xFDD
  9555                           plusw2	equ	0xFDB
  9556                           fsr2h	equ	0xFDA
  9557                           fsr2l	equ	0xFD9
  9558                           status	equ	0xFD8
  9559                           
  9560 ;; *************** function _UART_buff_init *****************
  9561 ;; Defined at:
  9562 ;;		line 56 in file "UART.c"
  9563 ;; Parameters:    Size  Location     Type
  9564 ;;  _this           2   34[COMRAM] PTR struct UART_ring_buf
  9565 ;;		 -> output_buffer(206), input_buffer(206), 
  9566 ;; Auto vars:     Size  Location     Type
  9567 ;;		None
  9568 ;; Return value:  Size  Location     Type
  9569 ;;                  1    wreg      void 
  9570 ;; Registers used:
  9571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9572 ;; Tracked objects:
  9573 ;;		On entry : 0/0
  9574 ;;		On exit  : 0/0
  9575 ;;		Unchanged: 0/0
  9576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9577 ;;      Params:         2       0       0       0       0       0       0
  9578 ;;      Locals:         0       0       0       0       0       0       0
  9579 ;;      Temps:          0       0       0       0       0       0       0
  9580 ;;      Totals:         2       0       0       0       0       0       0
  9581 ;;Total ram usage:        2 bytes
  9582 ;; Hardware stack levels used:    1
  9583 ;; Hardware stack levels required when called:    5
  9584 ;; This function calls:
  9585 ;;		_memset
  9586 ;; This function is called by:
  9587 ;;		_EUSART1_Initialize
  9588 ;; This function uses a non-reentrant model
  9589 ;;
  9590                           
  9591                           	psect	text47
  9592  002F3E                     __ptext47:
  9593                           	opt stack 0
  9594  002F3E                     _UART_buff_init:
  9595                           	opt stack 23
  9596                           
  9597                           ;UART.c: 65: memset(_this, 0, sizeof (*_this));
  9598                           
  9599                           ;incstack = 0
  9600  002F3E  C023  F01B         	movff	UART_buff_init@_this,memset@p1
  9601  002F42  C024  F01C         	movff	UART_buff_init@_this+1,memset@p1+1
  9602  002F46  0E00               	movlw	0
  9603  002F48  6E1E               	movwf	memset@c+1,c
  9604  002F4A  0E00               	movlw	0
  9605  002F4C  6E1D               	movwf	memset@c,c
  9606  002F4E  0E00               	movlw	0
  9607  002F50  6E20               	movwf	memset@n+1,c
  9608  002F52  0ECE               	movlw	206
  9609  002F54  6E1F               	movwf	memset@n,c
  9610  002F56  ECE3  F016         	call	_memset	;wreg free
  9611  002F5A  0012               	return		;funcret
  9612  002F5C                     __end_of_UART_buff_init:
  9613                           	opt stack 0
  9614                           tosu	equ	0xFFF
  9615                           tosh	equ	0xFFE
  9616                           tosl	equ	0xFFD
  9617                           pclath	equ	0xFFA
  9618                           tblptru	equ	0xFF8
  9619                           tblptrh	equ	0xFF7
  9620                           tblptrl	equ	0xFF6
  9621                           tablat	equ	0xFF5
  9622                           prodh	equ	0xFF4
  9623                           prodl	equ	0xFF3
  9624                           intcon	equ	0xFF2
  9625                           intcon2	equ	0xFF1
  9626                           postinc0	equ	0xFEE
  9627                           wreg	equ	0xFE8
  9628                           indf2	equ	0xFDF
  9629                           postinc2	equ	0xFDE
  9630                           postdec2	equ	0xFDD
  9631                           plusw2	equ	0xFDB
  9632                           fsr2h	equ	0xFDA
  9633                           fsr2l	equ	0xFD9
  9634                           status	equ	0xFD8
  9635                           
  9636 ;; *************** function _memset *****************
  9637 ;; Defined at:
  9638 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memset.c"
  9639 ;; Parameters:    Size  Location     Type
  9640 ;;  p1              2   26[COMRAM] PTR void 
  9641 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  9642 ;;  c               2   28[COMRAM] int 
  9643 ;;  n               2   30[COMRAM] unsigned int 
  9644 ;; Auto vars:     Size  Location     Type
  9645 ;;  p               2   32[COMRAM] PTR unsigned char 
  9646 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  9647 ;; Return value:  Size  Location     Type
  9648 ;;                  2   26[COMRAM] PTR void 
  9649 ;; Registers used:
  9650 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9651 ;; Tracked objects:
  9652 ;;		On entry : 0/0
  9653 ;;		On exit  : 0/0
  9654 ;;		Unchanged: 0/0
  9655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9656 ;;      Params:         6       0       0       0       0       0       0
  9657 ;;      Locals:         2       0       0       0       0       0       0
  9658 ;;      Temps:          0       0       0       0       0       0       0
  9659 ;;      Totals:         8       0       0       0       0       0       0
  9660 ;;Total ram usage:        8 bytes
  9661 ;; Hardware stack levels used:    1
  9662 ;; Hardware stack levels required when called:    4
  9663 ;; This function calls:
  9664 ;;		Nothing
  9665 ;; This function is called by:
  9666 ;;		_FastTransfer_buffer_flush
  9667 ;;		_UART_buff_init
  9668 ;;		_UART_buff_flush
  9669 ;; This function uses a non-reentrant model
  9670 ;;
  9671                           
  9672                           	psect	text48
  9673  002DC6                     __ptext48:
  9674                           	opt stack 0
  9675  002DC6                     _memset:
  9676                           	opt stack 22
  9677                           
  9678                           ;incstack = 0
  9679  002DC6  C01B  F021         	movff	memset@p1,memset@p
  9680  002DCA  C01C  F022         	movff	memset@p1+1,memset@p+1
  9681  002DCE  D008               	goto	l5989
  9682  002DD0                     l5985:
  9683  002DD0  C021  FFD9         	movff	memset@p,fsr2l
  9684  002DD4  C022  FFDA         	movff	memset@p+1,fsr2h
  9685  002DD8  C01D  FFDF         	movff	memset@c,indf2
  9686  002DDC  4A21               	infsnz	memset@p,f,c
  9687  002DDE  2A22               	incf	memset@p+1,f,c
  9688  002DE0                     l5989:
  9689  002DE0  061F               	decf	memset@n,f,c
  9690  002DE2  A0D8               	btfss	status,0,c
  9691  002DE4  0620               	decf	memset@n+1,f,c
  9692  002DE6  281F               	incf	memset@n,w,c
  9693  002DE8  E1F3               	bnz	l5985
  9694  002DEA  2820               	incf	memset@n+1,w,c
  9695  002DEC  B4D8               	btfsc	status,2,c
  9696  002DEE  0012               	return	
  9697  002DF0  D7EF               	goto	l5985
  9698  002DF2                     __end_of_memset:
  9699                           	opt stack 0
  9700                           tosu	equ	0xFFF
  9701                           tosh	equ	0xFFE
  9702                           tosl	equ	0xFFD
  9703                           pclath	equ	0xFFA
  9704                           tblptru	equ	0xFF8
  9705                           tblptrh	equ	0xFF7
  9706                           tblptrl	equ	0xFF6
  9707                           tablat	equ	0xFF5
  9708                           prodh	equ	0xFF4
  9709                           prodl	equ	0xFF3
  9710                           intcon	equ	0xFF2
  9711                           intcon2	equ	0xFF1
  9712                           postinc0	equ	0xFEE
  9713                           wreg	equ	0xFE8
  9714                           indf2	equ	0xFDF
  9715                           postinc2	equ	0xFDE
  9716                           postdec2	equ	0xFDD
  9717                           plusw2	equ	0xFDB
  9718                           fsr2h	equ	0xFDA
  9719                           fsr2l	equ	0xFD9
  9720                           status	equ	0xFD8
  9721                           
  9722 ;; *************** function _ADC_Initialize *****************
  9723 ;; Defined at:
  9724 ;;		line 59 in file "mcc_generated_files/adc.c"
  9725 ;; Parameters:    Size  Location     Type
  9726 ;;		None
  9727 ;; Auto vars:     Size  Location     Type
  9728 ;;		None
  9729 ;; Return value:  Size  Location     Type
  9730 ;;                  1    wreg      void 
  9731 ;; Registers used:
  9732 ;;		wreg, status,2
  9733 ;; Tracked objects:
  9734 ;;		On entry : 0/0
  9735 ;;		On exit  : 0/0
  9736 ;;		Unchanged: 0/0
  9737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9738 ;;      Params:         0       0       0       0       0       0       0
  9739 ;;      Locals:         0       0       0       0       0       0       0
  9740 ;;      Temps:          0       0       0       0       0       0       0
  9741 ;;      Totals:         0       0       0       0       0       0       0
  9742 ;;Total ram usage:        0 bytes
  9743 ;; Hardware stack levels used:    1
  9744 ;; Hardware stack levels required when called:    4
  9745 ;; This function calls:
  9746 ;;		Nothing
  9747 ;; This function is called by:
  9748 ;;		_SYSTEM_Initialize
  9749 ;; This function uses a non-reentrant model
  9750 ;;
  9751                           
  9752                           	psect	text49
  9753  002F94                     __ptext49:
  9754                           	opt stack 0
  9755  002F94                     _ADC_Initialize:
  9756                           	opt stack 25
  9757                           
  9758                           ;adc.c: 64: ADCON0 = 0x01;
  9759                           
  9760                           ;incstack = 0
  9761  002F94  0E01               	movlw	1
  9762  002F96  6EC2               	movwf	4034,c	;volatile
  9763                           
  9764                           ;adc.c: 67: ADCON1 = 0x80;
  9765  002F98  0E80               	movlw	128
  9766  002F9A  6EC1               	movwf	4033,c	;volatile
  9767                           
  9768                           ;adc.c: 70: ADCON2 = 0x05;
  9769  002F9C  0E05               	movlw	5
  9770  002F9E  6EC0               	movwf	4032,c	;volatile
  9771                           
  9772                           ;adc.c: 73: ADRESL = 0x00;
  9773  002FA0  0E00               	movlw	0
  9774  002FA2  6EC3               	movwf	4035,c	;volatile
  9775                           
  9776                           ;adc.c: 76: ADRESH = 0x00;
  9777  002FA4  0E00               	movlw	0
  9778  002FA6  6EC4               	movwf	4036,c	;volatile
  9779                           
  9780                           ;adc.c: 79: PIE1bits.ADIE = 1;
  9781  002FA8  8C9D               	bsf	3997,6,c	;volatile
  9782  002FAA  0012               	return		;funcret
  9783  002FAC                     __end_of_ADC_Initialize:
  9784                           	opt stack 0
  9785                           tosu	equ	0xFFF
  9786                           tosh	equ	0xFFE
  9787                           tosl	equ	0xFFD
  9788                           pclath	equ	0xFFA
  9789                           tblptru	equ	0xFF8
  9790                           tblptrh	equ	0xFF7
  9791                           tblptrl	equ	0xFF6
  9792                           tablat	equ	0xFF5
  9793                           prodh	equ	0xFF4
  9794                           prodl	equ	0xFF3
  9795                           intcon	equ	0xFF2
  9796                           intcon2	equ	0xFF1
  9797                           postinc0	equ	0xFEE
  9798                           wreg	equ	0xFE8
  9799                           indf2	equ	0xFDF
  9800                           postinc2	equ	0xFDE
  9801                           postdec2	equ	0xFDD
  9802                           plusw2	equ	0xFDB
  9803                           fsr2h	equ	0xFDA
  9804                           fsr2l	equ	0xFD9
  9805                           status	equ	0xFD8
  9806                           
  9807 ;; *************** function _LEDwriteDisplay *****************
  9808 ;; Defined at:
  9809 ;;		line 114 in file "LED_BarGraph.c"
  9810 ;; Parameters:    Size  Location     Type
  9811 ;;  i2c_addr        1    wreg     unsigned char 
  9812 ;; Auto vars:     Size  Location     Type
  9813 ;;  i2c_addr        1   20[BANK1 ] unsigned char 
  9814 ;;  writeBuffer    20    0[BANK1 ] unsigned char [20]
  9815 ;;  timeOut         2   21[BANK1 ] unsigned int 
  9816 ;;  status          1   23[BANK1 ] enum E8697
  9817 ;; Return value:  Size  Location     Type
  9818 ;;                  1    wreg      void 
  9819 ;; Registers used:
  9820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9821 ;; Tracked objects:
  9822 ;;		On entry : 0/0
  9823 ;;		On exit  : 0/0
  9824 ;;		Unchanged: 0/0
  9825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9826 ;;      Params:         0       0       0       0       0       0       0
  9827 ;;      Locals:         0       0      24       0       0       0       0
  9828 ;;      Temps:          0       0       0       0       0       0       0
  9829 ;;      Totals:         0       0      24       0       0       0       0
  9830 ;;Total ram usage:       24 bytes
  9831 ;; Hardware stack levels used:    1
  9832 ;; Hardware stack levels required when called:    6
  9833 ;; This function calls:
  9834 ;;		_I2C1_MasterWrite
  9835 ;; This function is called by:
  9836 ;;		_main
  9837 ;; This function uses a non-reentrant model
  9838 ;;
  9839                           
  9840                           	psect	text50
  9841  0018D8                     __ptext50:
  9842                           	opt stack 0
  9843  0018D8                     _LEDwriteDisplay:
  9844                           	opt stack 24
  9845                           
  9846                           ;incstack = 0
  9847                           ;LEDwriteDisplay@i2c_addr stored from wreg
  9848  0018D8  0101               	movlb	1	; () banked
  9849  0018DA  6F4D               	movwf	LEDwriteDisplay@i2c_addr& (0+255),b
  9850                           
  9851                           ;LED_BarGraph.c: 115: uint8_t writeBuffer[20];
  9852                           ;LED_BarGraph.c: 116: uint16_t timeOut;
  9853                           ;LED_BarGraph.c: 117: writeBuffer[0] = 0x00;
  9854  0018DC  0E00               	movlw	0
  9855  0018DE  0101               	movlb	1	; () banked
  9856  0018E0  6F39               	movwf	LEDwriteDisplay@writeBuffer& (0+255),b
  9857                           
  9858                           ;LED_BarGraph.c: 118: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  9859  0018E2  0E02               	movlw	2
  9860  0018E4  0101               	movlb	1	; () banked
  9861  0018E6  6F50               	movwf	LEDwriteDisplay@status& (0+255),b
  9862                           
  9863                           ;LED_BarGraph.c: 120: timeOut = 0;
  9864  0018E8  0E00               	movlw	0
  9865  0018EA  0101               	movlb	1	; () banked
  9866  0018EC  6F4F               	movwf	(LEDwriteDisplay@timeOut+1)& (0+255),b
  9867  0018EE  0E00               	movlw	0
  9868  0018F0  6F4E               	movwf	LEDwriteDisplay@timeOut& (0+255),b
  9869                           
  9870                           ;LED_BarGraph.c: 121: while (status != I2C1_MESSAGE_FAIL) {
  9871  0018F2  D027               	goto	l7231
  9872  0018F4                     l7211:
  9873                           
  9874                           ; BSR set to: 1
  9875                           ;LED_BarGraph.c: 123: I2C1_MasterWrite(&writeBuffer,
  9876                           ;LED_BarGraph.c: 124: 1,
  9877                           ;LED_BarGraph.c: 125: i2c_addr,
  9878                           ;LED_BarGraph.c: 126: &status);
  9879  0018F4  0E39               	movlw	low LEDwriteDisplay@writeBuffer
  9880  0018F6  6E24               	movwf	I2C1_MasterWrite@pdata,c
  9881  0018F8  0E01               	movlw	high LEDwriteDisplay@writeBuffer
  9882  0018FA  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
  9883  0018FC  0E01               	movlw	1
  9884  0018FE  6E26               	movwf	I2C1_MasterWrite@length,c
  9885  001900  C14D  F027         	movff	LEDwriteDisplay@i2c_addr,I2C1_MasterWrite@address
  9886  001904  6A28               	clrf	I2C1_MasterWrite@address+1,c
  9887  001906  0E50               	movlw	low LEDwriteDisplay@status
  9888  001908  6E29               	movwf	I2C1_MasterWrite@pflag,c
  9889  00190A  0E01               	movlw	high LEDwriteDisplay@status
  9890  00190C  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
  9891  00190E  EC90  F015         	call	_I2C1_MasterWrite	;wreg free
  9892  001912                     l7213:
  9893  001912  0E02               	movlw	2
  9894  001914  0101               	movlb	1	; () banked
  9895  001916  1950               	xorwf	LEDwriteDisplay@status& (0+255),w,b
  9896  001918  B4D8               	btfsc	status,2,c
  9897  00191A  D7FB               	goto	l7213
  9898                           
  9899                           ; BSR set to: 1
  9900                           ;LED_BarGraph.c: 131: if (status == I2C1_MESSAGE_COMPLETE)
  9901                           
  9902                           ; BSR set to: 1
  9903  00191C  0101               	movlb	1	; () banked
  9904  00191E  5150               	movf	LEDwriteDisplay@status& (0+255),w,b
  9905  001920  0101               	movlb	1	; () banked
  9906  001922  B4D8               	btfsc	status,2,c
  9907  001924  D012               	goto	l7233
  9908                           
  9909                           ; BSR set to: 1
  9910                           ;LED_BarGraph.c: 133: if (timeOut == 100)
  9911                           
  9912                           ; BSR set to: 1
  9913                           
  9914                           ; BSR set to: 1
  9915                           ;LED_BarGraph.c: 132: break;
  9916  001926  0E64               	movlw	100
  9917  001928  0101               	movlb	1	; () banked
  9918  00192A  194E               	xorwf	LEDwriteDisplay@timeOut& (0+255),w,b
  9919  00192C  0101               	movlb	1	; () banked
  9920  00192E  114F               	iorwf	(LEDwriteDisplay@timeOut+1)& (0+255),w,b
  9921  001930  B4D8               	btfsc	status,2,c
  9922  001932  D00B               	goto	l7233
  9923                           
  9924                           ; BSR set to: 1
  9925                           ;LED_BarGraph.c: 135: if (status == I2C1_MESSAGE_FAIL)
  9926                           
  9927                           ; BSR set to: 1
  9928                           
  9929                           ; BSR set to: 1
  9930                           ;LED_BarGraph.c: 134: break;
  9931  001934  0101               	movlb	1	; () banked
  9932  001936  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
  9933  001938  B4D8               	btfsc	status,2,c
  9934  00193A  D007               	goto	l7233
  9935                           
  9936                           ; BSR set to: 1
  9937                           ;LED_BarGraph.c: 137: else
  9938                           ;LED_BarGraph.c: 138: timeOut++;
  9939                           
  9940                           ; BSR set to: 1
  9941                           
  9942                           ; BSR set to: 1
  9943                           
  9944                           ; BSR set to: 1
  9945                           ;LED_BarGraph.c: 136: break;
  9946  00193C  0101               	movlb	1	; () banked
  9947  00193E  4B4E               	infsnz	LEDwriteDisplay@timeOut& (0+255),f,b
  9948  001940  2B4F               	incf	(LEDwriteDisplay@timeOut+1)& (0+255),f,b
  9949  001942                     l7231:
  9950                           
  9951                           ; BSR set to: 1
  9952  001942  0101               	movlb	1	; () banked
  9953  001944  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
  9954  001946  A4D8               	btfss	status,2,c
  9955  001948  D7D5               	goto	l7211
  9956  00194A                     l7233:
  9957                           
  9958                           ; BSR set to: 1
  9959                           ;LED_BarGraph.c: 139: }
  9960                           ;LED_BarGraph.c: 140: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  9961  00194A  0E02               	movlw	2
  9962  00194C  0101               	movlb	1	; () banked
  9963  00194E  6F50               	movwf	LEDwriteDisplay@status& (0+255),b
  9964                           
  9965                           ;LED_BarGraph.c: 145: writeBuffer[0] = 0;
  9966  001950  0E00               	movlw	0
  9967  001952  0101               	movlb	1	; () banked
  9968  001954  6F39               	movwf	LEDwriteDisplay@writeBuffer& (0+255),b
  9969                           
  9970                           ; BSR set to: 1
  9971                           ;LED_BarGraph.c: 146: writeBuffer[1] = displaybuffer[0] & 0xFF;
  9972  001956  C060  F13A         	movff	_displaybuffer,LEDwriteDisplay@writeBuffer+1
  9973                           
  9974                           ; BSR set to: 1
  9975                           ;LED_BarGraph.c: 147: writeBuffer[2] = displaybuffer[0] >> 8;
  9976  00195A  C061  F13B         	movff	_displaybuffer+1,LEDwriteDisplay@writeBuffer+2
  9977                           
  9978                           ; BSR set to: 1
  9979                           ;LED_BarGraph.c: 148: writeBuffer[3] = displaybuffer[1] & 0xFF;
  9980  00195E  C064  F13C         	movff	_displaybuffer+4,LEDwriteDisplay@writeBuffer+3
  9981                           
  9982                           ; BSR set to: 1
  9983                           ;LED_BarGraph.c: 149: writeBuffer[4] = displaybuffer[1] >> 8;
  9984  001962  C065  F13D         	movff	_displaybuffer+5,LEDwriteDisplay@writeBuffer+4
  9985                           
  9986                           ; BSR set to: 1
  9987                           ;LED_BarGraph.c: 150: writeBuffer[5] = displaybuffer[2] & 0xFF;
  9988  001966  C068  F13E         	movff	_displaybuffer+8,LEDwriteDisplay@writeBuffer+5
  9989                           
  9990                           ; BSR set to: 1
  9991                           ;LED_BarGraph.c: 151: writeBuffer[6] = displaybuffer[2] >> 8;
  9992  00196A  C069  F13F         	movff	_displaybuffer+9,LEDwriteDisplay@writeBuffer+6
  9993                           
  9994                           ; BSR set to: 1
  9995                           ;LED_BarGraph.c: 152: writeBuffer[7] = displaybuffer[3] & 0xFF;
  9996  00196E  C06C  F140         	movff	_displaybuffer+12,LEDwriteDisplay@writeBuffer+7
  9997                           
  9998                           ; BSR set to: 1
  9999                           ;LED_BarGraph.c: 153: writeBuffer[8] = displaybuffer[3] >> 8;
 10000  001972  C06D  F141         	movff	_displaybuffer+13,LEDwriteDisplay@writeBuffer+8
 10001                           
 10002                           ; BSR set to: 1
 10003                           ;LED_BarGraph.c: 154: writeBuffer[9] = displaybuffer[4] & 0xFF;
 10004  001976  C070  F142         	movff	_displaybuffer+16,LEDwriteDisplay@writeBuffer+9
 10005                           
 10006                           ; BSR set to: 1
 10007                           ;LED_BarGraph.c: 155: writeBuffer[10] = displaybuffer[4] >> 8;
 10008  00197A  C071  F143         	movff	_displaybuffer+17,LEDwriteDisplay@writeBuffer+10
 10009                           
 10010                           ; BSR set to: 1
 10011                           ;LED_BarGraph.c: 156: writeBuffer[11] = displaybuffer[5] & 0xFF;
 10012  00197E  C074  F144         	movff	_displaybuffer+20,LEDwriteDisplay@writeBuffer+11
 10013                           
 10014                           ; BSR set to: 1
 10015                           ;LED_BarGraph.c: 157: writeBuffer[12] = displaybuffer[5] >> 8;
 10016  001982  C075  F145         	movff	_displaybuffer+21,LEDwriteDisplay@writeBuffer+12
 10017                           
 10018                           ; BSR set to: 1
 10019                           ;LED_BarGraph.c: 158: writeBuffer[13] = displaybuffer[6] & 0xFF;
 10020  001986  C078  F146         	movff	_displaybuffer+24,LEDwriteDisplay@writeBuffer+13
 10021                           
 10022                           ; BSR set to: 1
 10023                           ;LED_BarGraph.c: 159: writeBuffer[14] = displaybuffer[6] >> 8;
 10024  00198A  C079  F147         	movff	_displaybuffer+25,LEDwriteDisplay@writeBuffer+14
 10025                           
 10026                           ; BSR set to: 1
 10027                           ;LED_BarGraph.c: 160: writeBuffer[15] = displaybuffer[7] & 0xFF;
 10028  00198E  C07C  F148         	movff	_displaybuffer+28,LEDwriteDisplay@writeBuffer+15
 10029                           
 10030                           ; BSR set to: 1
 10031                           ;LED_BarGraph.c: 161: writeBuffer[16] = displaybuffer[7] >> 8;
 10032  001992  C07D  F149         	movff	_displaybuffer+29,LEDwriteDisplay@writeBuffer+16
 10033                           
 10034                           ; BSR set to: 1
 10035                           ;LED_BarGraph.c: 162: writeBuffer[17] = displaybuffer[8] & 0xFF;
 10036  001996  C080  F14A         	movff	_displaybuffer+32,LEDwriteDisplay@writeBuffer+17
 10037                           
 10038                           ; BSR set to: 1
 10039                           ;LED_BarGraph.c: 163: writeBuffer[18] = displaybuffer[8] >> 8;
 10040  00199A  C081  F14B         	movff	_displaybuffer+33,LEDwriteDisplay@writeBuffer+18
 10041                           
 10042                           ;LED_BarGraph.c: 165: timeOut = 0;
 10043  00199E  0E00               	movlw	0
 10044  0019A0  0101               	movlb	1	; () banked
 10045  0019A2  6F4F               	movwf	(LEDwriteDisplay@timeOut+1)& (0+255),b
 10046  0019A4  0E00               	movlw	0
 10047  0019A6  6F4E               	movwf	LEDwriteDisplay@timeOut& (0+255),b
 10048                           
 10049                           ;LED_BarGraph.c: 166: while (status != I2C1_MESSAGE_FAIL) {
 10050  0019A8  D027               	goto	l7291
 10051  0019AA                     l7271:
 10052                           
 10053                           ; BSR set to: 1
 10054                           ;LED_BarGraph.c: 168: I2C1_MasterWrite(&writeBuffer,
 10055                           ;LED_BarGraph.c: 169: 17,
 10056                           ;LED_BarGraph.c: 170: i2c_addr,
 10057                           ;LED_BarGraph.c: 171: &status);
 10058  0019AA  0E39               	movlw	low LEDwriteDisplay@writeBuffer
 10059  0019AC  6E24               	movwf	I2C1_MasterWrite@pdata,c
 10060  0019AE  0E01               	movlw	high LEDwriteDisplay@writeBuffer
 10061  0019B0  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
 10062  0019B2  0E11               	movlw	17
 10063  0019B4  6E26               	movwf	I2C1_MasterWrite@length,c
 10064  0019B6  C14D  F027         	movff	LEDwriteDisplay@i2c_addr,I2C1_MasterWrite@address
 10065  0019BA  6A28               	clrf	I2C1_MasterWrite@address+1,c
 10066  0019BC  0E50               	movlw	low LEDwriteDisplay@status
 10067  0019BE  6E29               	movwf	I2C1_MasterWrite@pflag,c
 10068  0019C0  0E01               	movlw	high LEDwriteDisplay@status
 10069  0019C2  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
 10070  0019C4  EC90  F015         	call	_I2C1_MasterWrite	;wreg free
 10071  0019C8                     l7273:
 10072  0019C8  0E02               	movlw	2
 10073  0019CA  0101               	movlb	1	; () banked
 10074  0019CC  1950               	xorwf	LEDwriteDisplay@status& (0+255),w,b
 10075  0019CE  B4D8               	btfsc	status,2,c
 10076  0019D0  D7FB               	goto	l7273
 10077                           
 10078                           ; BSR set to: 1
 10079                           ;LED_BarGraph.c: 176: if (status == I2C1_MESSAGE_COMPLETE)
 10080                           
 10081                           ; BSR set to: 1
 10082  0019D2  0101               	movlb	1	; () banked
 10083  0019D4  5150               	movf	LEDwriteDisplay@status& (0+255),w,b
 10084  0019D6  0101               	movlb	1	; () banked
 10085  0019D8  B4D8               	btfsc	status,2,c
 10086  0019DA  0012               	return	
 10087                           
 10088                           ; BSR set to: 1
 10089                           ;LED_BarGraph.c: 178: if (timeOut == 100)
 10090                           
 10091                           ; BSR set to: 1
 10092                           
 10093                           ; BSR set to: 1
 10094                           ;LED_BarGraph.c: 177: break;
 10095  0019DC  0E64               	movlw	100
 10096  0019DE  0101               	movlb	1	; () banked
 10097  0019E0  194E               	xorwf	LEDwriteDisplay@timeOut& (0+255),w,b
 10098  0019E2  0101               	movlb	1	; () banked
 10099  0019E4  114F               	iorwf	(LEDwriteDisplay@timeOut+1)& (0+255),w,b
 10100  0019E6  B4D8               	btfsc	status,2,c
 10101  0019E8  0012               	return	
 10102                           
 10103                           ; BSR set to: 1
 10104                           ;LED_BarGraph.c: 180: if (status == I2C1_MESSAGE_FAIL)
 10105                           
 10106                           ; BSR set to: 1
 10107                           
 10108                           ; BSR set to: 1
 10109                           ;LED_BarGraph.c: 179: break;
 10110  0019EA  0101               	movlb	1	; () banked
 10111  0019EC  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
 10112  0019EE  B4D8               	btfsc	status,2,c
 10113  0019F0  0012               	return	
 10114                           
 10115                           ; BSR set to: 1
 10116                           ;LED_BarGraph.c: 182: else
 10117                           ;LED_BarGraph.c: 183: timeOut++;
 10118                           
 10119                           ; BSR set to: 1
 10120                           
 10121                           ; BSR set to: 1
 10122                           
 10123                           ; BSR set to: 1
 10124                           ;LED_BarGraph.c: 181: break;
 10125  0019F2  0101               	movlb	1	; () banked
 10126  0019F4  4B4E               	infsnz	LEDwriteDisplay@timeOut& (0+255),f,b
 10127  0019F6  2B4F               	incf	(LEDwriteDisplay@timeOut+1)& (0+255),f,b
 10128  0019F8                     l7291:
 10129                           
 10130                           ; BSR set to: 1
 10131  0019F8  0101               	movlb	1	; () banked
 10132  0019FA  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
 10133  0019FC  B4D8               	btfsc	status,2,c
 10134  0019FE  0012               	return	
 10135  001A00  D7D4               	goto	l7271
 10136  001A02                     __end_of_LEDwriteDisplay:
 10137                           	opt stack 0
 10138                           tosu	equ	0xFFF
 10139                           tosh	equ	0xFFE
 10140                           tosl	equ	0xFFD
 10141                           pclath	equ	0xFFA
 10142                           tblptru	equ	0xFF8
 10143                           tblptrh	equ	0xFF7
 10144                           tblptrl	equ	0xFF6
 10145                           tablat	equ	0xFF5
 10146                           prodh	equ	0xFF4
 10147                           prodl	equ	0xFF3
 10148                           intcon	equ	0xFF2
 10149                           intcon2	equ	0xFF1
 10150                           postinc0	equ	0xFEE
 10151                           wreg	equ	0xFE8
 10152                           indf2	equ	0xFDF
 10153                           postinc2	equ	0xFDE
 10154                           postdec2	equ	0xFDD
 10155                           plusw2	equ	0xFDB
 10156                           fsr2h	equ	0xFDA
 10157                           fsr2l	equ	0xFD9
 10158                           status	equ	0xFD8
 10159                           
 10160 ;; *************** function _LEDsetValue *****************
 10161 ;; Defined at:
 10162 ;;		line 11 in file "LED_BarGraph.c"
 10163 ;; Parameters:    Size  Location     Type
 10164 ;;  value           2   16[BANK1 ] int 
 10165 ;;  color           2   18[BANK1 ] int 
 10166 ;; Auto vars:     Size  Location     Type
 10167 ;;  k               2   20[BANK1 ] int 
 10168 ;; Return value:  Size  Location     Type
 10169 ;;                  1    wreg      void 
 10170 ;; Registers used:
 10171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10172 ;; Tracked objects:
 10173 ;;		On entry : 0/0
 10174 ;;		On exit  : 0/0
 10175 ;;		Unchanged: 0/0
 10176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10177 ;;      Params:         0       0       4       0       0       0       0
 10178 ;;      Locals:         0       0       2       0       0       0       0
 10179 ;;      Temps:          0       1       0       0       0       0       0
 10180 ;;      Totals:         0       1       6       0       0       0       0
 10181 ;;Total ram usage:        7 bytes
 10182 ;; Hardware stack levels used:    1
 10183 ;; Hardware stack levels required when called:    6
 10184 ;; This function calls:
 10185 ;;		_LEDsetBar
 10186 ;; This function is called by:
 10187 ;;		_main
 10188 ;; This function uses a non-reentrant model
 10189 ;;
 10190                           
 10191                           	psect	text51
 10192  0023D2                     __ptext51:
 10193                           	opt stack 0
 10194  0023D2                     _LEDsetValue:
 10195                           	opt stack 24
 10196                           
 10197                           ;LED_BarGraph.c: 12: if (value > 24) value = 24;
 10198                           
 10199                           ; BSR set to: 1
 10200                           ;incstack = 0
 10201  0023D2  0101               	movlb	1	; () banked
 10202  0023D4  BF4A               	btfsc	(LEDsetValue@value+1)& (0+255),7,b
 10203  0023D6  D00D               	goto	l7191
 10204  0023D8  0101               	movlb	1	; () banked
 10205  0023DA  514A               	movf	(LEDsetValue@value+1)& (0+255),w,b
 10206  0023DC  E105               	bnz	u8160
 10207  0023DE  0E19               	movlw	25
 10208  0023E0  0101               	movlb	1	; () banked
 10209  0023E2  5D49               	subwf	LEDsetValue@value& (0+255),w,b
 10210  0023E4  A0D8               	btfss	status,0,c
 10211  0023E6  D005               	goto	l7191
 10212  0023E8                     u8160:
 10213                           
 10214                           ; BSR set to: 1
 10215  0023E8  0E00               	movlw	0
 10216  0023EA  0101               	movlb	1	; () banked
 10217  0023EC  6F4A               	movwf	(LEDsetValue@value+1)& (0+255),b
 10218  0023EE  0E18               	movlw	24
 10219  0023F0  6F49               	movwf	LEDsetValue@value& (0+255),b
 10220  0023F2                     l7191:
 10221                           
 10222                           ; BSR set to: 1
 10223                           ;LED_BarGraph.c: 13: if (value < 0) value = 0;
 10224  0023F2  0101               	movlb	1	; () banked
 10225  0023F4  AF4A               	btfss	(LEDsetValue@value+1)& (0+255),7,b
 10226  0023F6  D005               	goto	l617
 10227                           
 10228                           ; BSR set to: 1
 10229  0023F8  0E00               	movlw	0
 10230  0023FA  0101               	movlb	1	; () banked
 10231  0023FC  6F4A               	movwf	(LEDsetValue@value+1)& (0+255),b
 10232  0023FE  0E00               	movlw	0
 10233  002400  6F49               	movwf	LEDsetValue@value& (0+255),b
 10234  002402                     l617:
 10235                           
 10236                           ; BSR set to: 1
 10237                           ;LED_BarGraph.c: 14: int k;
 10238                           ;LED_BarGraph.c: 15: for (k = 0; k < 24; k++) {
 10239  002402  0E00               	movlw	0
 10240  002404  0101               	movlb	1	; () banked
 10241  002406  6F4E               	movwf	(LEDsetValue@k+1)& (0+255),b
 10242  002408  0E00               	movlw	0
 10243  00240A  6F4D               	movwf	LEDsetValue@k& (0+255),b
 10244  00240C                     l7195:
 10245                           
 10246                           ; BSR set to: 1
 10247  00240C  0101               	movlb	1	; () banked
 10248  00240E  BF4E               	btfsc	(LEDsetValue@k+1)& (0+255),7,b
 10249  002410  D008               	goto	l7199
 10250  002412  0101               	movlb	1	; () banked
 10251  002414  514E               	movf	(LEDsetValue@k+1)& (0+255),w,b
 10252  002416  E12E               	bnz	l622
 10253  002418  0E18               	movlw	24
 10254  00241A  0101               	movlb	1	; () banked
 10255  00241C  5D4D               	subwf	LEDsetValue@k& (0+255),w,b
 10256  00241E  B0D8               	btfsc	status,0,c
 10257  002420  0012               	return	
 10258  002422                     l7199:
 10259                           
 10260                           ; BSR set to: 1
 10261                           ;LED_BarGraph.c: 16: if (k < value) LEDsetBar(k, color);
 10262  002422  0101               	movlb	1	; () banked
 10263  002424  5149               	movf	LEDsetValue@value& (0+255),w,b
 10264  002426  0101               	movlb	1	; () banked
 10265  002428  5D4D               	subwf	LEDsetValue@k& (0+255),w,b
 10266  00242A  0101               	movlb	1	; () banked
 10267  00242C  514E               	movf	(LEDsetValue@k+1)& (0+255),w,b
 10268  00242E  0A80               	xorlw	128
 10269  002430  0100               	movlb	0	; () banked
 10270  002432  6FFD               	movwf	??_LEDsetValue& (0+255),b
 10271  002434  0101               	movlb	1	; () banked
 10272  002436  514A               	movf	(LEDsetValue@value+1)& (0+255),w,b
 10273  002438  0A80               	xorlw	128
 10274  00243A  0100               	movlb	0	; () banked
 10275  00243C  59FD               	subwfb	??_LEDsetValue& (0+255),w,b
 10276  00243E  B0D8               	btfsc	status,0,c
 10277  002440  D00B               	goto	l7203
 10278                           
 10279                           ; BSR set to: 0
 10280  002442  C14D  F023         	movff	LEDsetValue@k,LEDsetBar@bar
 10281  002446  C14E  F024         	movff	LEDsetValue@k+1,LEDsetBar@bar+1
 10282  00244A  C14B  F025         	movff	LEDsetValue@color,LEDsetBar@color
 10283  00244E  C14C  F026         	movff	LEDsetValue@color+1,LEDsetBar@color+1
 10284  002452  ECC4  F003         	call	_LEDsetBar	;wreg free
 10285  002456  D00A               	goto	l7205
 10286  002458                     l7203:
 10287                           
 10288                           ;LED_BarGraph.c: 17: else LEDsetBar(k, 0);
 10289  002458  C14D  F023         	movff	LEDsetValue@k,LEDsetBar@bar
 10290  00245C  C14E  F024         	movff	LEDsetValue@k+1,LEDsetBar@bar+1
 10291  002460  0E00               	movlw	0
 10292  002462  6E26               	movwf	LEDsetBar@color+1,c
 10293  002464  0E00               	movlw	0
 10294  002466  6E25               	movwf	LEDsetBar@color,c
 10295  002468  ECC4  F003         	call	_LEDsetBar	;wreg free
 10296  00246C                     l7205:
 10297  00246C  0101               	movlb	1	; () banked
 10298  00246E  4B4D               	infsnz	LEDsetValue@k& (0+255),f,b
 10299  002470  2B4E               	incf	(LEDsetValue@k+1)& (0+255),f,b
 10300  002472  D7CC               	goto	l7195
 10301  002474                     l622:
 10302                           
 10303                           ; BSR set to: 1
 10304  002474  0012               	return		;funcret
 10305  002476                     __end_of_LEDsetValue:
 10306                           	opt stack 0
 10307                           tosu	equ	0xFFF
 10308                           tosh	equ	0xFFE
 10309                           tosl	equ	0xFFD
 10310                           pclath	equ	0xFFA
 10311                           tblptru	equ	0xFF8
 10312                           tblptrh	equ	0xFF7
 10313                           tblptrl	equ	0xFF6
 10314                           tablat	equ	0xFF5
 10315                           prodh	equ	0xFF4
 10316                           prodl	equ	0xFF3
 10317                           intcon	equ	0xFF2
 10318                           intcon2	equ	0xFF1
 10319                           postinc0	equ	0xFEE
 10320                           wreg	equ	0xFE8
 10321                           indf2	equ	0xFDF
 10322                           postinc2	equ	0xFDE
 10323                           postdec2	equ	0xFDD
 10324                           plusw2	equ	0xFDB
 10325                           fsr2h	equ	0xFDA
 10326                           fsr2l	equ	0xFD9
 10327                           status	equ	0xFD8
 10328                           
 10329 ;; *************** function _LEDsetBar *****************
 10330 ;; Defined at:
 10331 ;;		line 193 in file "LED_BarGraph.c"
 10332 ;; Parameters:    Size  Location     Type
 10333 ;;  bar             2   34[COMRAM] int 
 10334 ;;  color           2   36[COMRAM] int 
 10335 ;; Auto vars:     Size  Location     Type
 10336 ;;  a               2   40[COMRAM] unsigned int 
 10337 ;;  c               2   38[COMRAM] unsigned int 
 10338 ;; Return value:  Size  Location     Type
 10339 ;;                  1    wreg      void 
 10340 ;; Registers used:
 10341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10342 ;; Tracked objects:
 10343 ;;		On entry : 0/0
 10344 ;;		On exit  : 0/0
 10345 ;;		Unchanged: 0/0
 10346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10347 ;;      Params:         4       0       0       0       0       0       0
 10348 ;;      Locals:         4       0       0       0       0       0       0
 10349 ;;      Temps:          0       0      16       0       0       0       0
 10350 ;;      Totals:         8       0      16       0       0       0       0
 10351 ;;Total ram usage:       24 bytes
 10352 ;; Hardware stack levels used:    1
 10353 ;; Hardware stack levels required when called:    5
 10354 ;; This function calls:
 10355 ;;		___awdiv
 10356 ;; This function is called by:
 10357 ;;		_LEDsetValue
 10358 ;; This function uses a non-reentrant model
 10359 ;;
 10360                           
 10361                           	psect	text52
 10362  000788                     __ptext52:
 10363                           	opt stack 0
 10364  000788                     _LEDsetBar:
 10365                           	opt stack 24
 10366                           
 10367                           ;LED_BarGraph.c: 194: uint16_t a, c;
 10368                           ;LED_BarGraph.c: 196: if (bar < 12)
 10369                           
 10370                           ; BSR set to: 1
 10371                           ;incstack = 0
 10372  000788  BE24               	btfsc	LEDsetBar@bar+1,7,c
 10373  00078A  D006               	goto	l6635
 10374  00078C  5024               	movf	LEDsetBar@bar+1,w,c
 10375  00078E  E10F               	bnz	l6637
 10376  000790  0E0C               	movlw	12
 10377  000792  5C23               	subwf	LEDsetBar@bar,w,c
 10378  000794  B0D8               	btfsc	status,0,c
 10379  000796  D00B               	goto	l6637
 10380  000798                     l6635:
 10381                           
 10382                           ;LED_BarGraph.c: 197: c = bar / 4;
 10383  000798  C023  F01B         	movff	LEDsetBar@bar,___awdiv@dividend
 10384  00079C  C024  F01C         	movff	LEDsetBar@bar+1,___awdiv@dividend+1
 10385  0007A0  0E00               	movlw	0
 10386  0007A2  6E1E               	movwf	___awdiv@divisor+1,c
 10387  0007A4  0E04               	movlw	4
 10388  0007A6  6E1D               	movwf	___awdiv@divisor,c
 10389  0007A8  ECAE  F013         	call	___awdiv	;wreg free
 10390  0007AC  D00C               	goto	L3
 10391  0007AE                     l6637:
 10392                           
 10393                           ;LED_BarGraph.c: 198: else
 10394                           ;LED_BarGraph.c: 199: c = (bar - 12) / 4;
 10395  0007AE  0EF4               	movlw	244
 10396  0007B0  2423               	addwf	LEDsetBar@bar,w,c
 10397  0007B2  6E1B               	movwf	___awdiv@dividend,c
 10398  0007B4  0EFF               	movlw	255
 10399  0007B6  2024               	addwfc	LEDsetBar@bar+1,w,c
 10400  0007B8  6E1C               	movwf	___awdiv@dividend+1,c
 10401  0007BA  0E00               	movlw	0
 10402  0007BC  6E1E               	movwf	___awdiv@divisor+1,c
 10403  0007BE  0E04               	movlw	4
 10404  0007C0  6E1D               	movwf	___awdiv@divisor,c
 10405  0007C2  ECAE  F013         	call	___awdiv	;wreg free
 10406  0007C6                     L3:
 10407  0007C6  C01B  F027         	movff	?___awdiv,LEDsetBar@c
 10408  0007CA  C01C  F028         	movff	?___awdiv+1,LEDsetBar@c+1
 10409                           
 10410                           ;LED_BarGraph.c: 201: a = bar % 4;
 10411  0007CE  0E03               	movlw	3
 10412  0007D0  1423               	andwf	LEDsetBar@bar,w,c
 10413  0007D2  6E29               	movwf	LEDsetBar@a,c
 10414  0007D4  6A2A               	clrf	LEDsetBar@a+1,c
 10415                           
 10416                           ;LED_BarGraph.c: 202: if (bar >= 12)
 10417  0007D6  BE24               	btfsc	LEDsetBar@bar+1,7,c
 10418  0007D8  D00A               	goto	l696
 10419  0007DA  5024               	movf	LEDsetBar@bar+1,w,c
 10420  0007DC  E104               	bnz	u7000
 10421  0007DE  0E0C               	movlw	12
 10422  0007E0  5C23               	subwf	LEDsetBar@bar,w,c
 10423  0007E2  A0D8               	btfss	status,0,c
 10424  0007E4  D004               	goto	l696
 10425  0007E6                     u7000:
 10426                           
 10427                           ;LED_BarGraph.c: 203: a += 4;
 10428  0007E6  0E04               	movlw	4
 10429  0007E8  2629               	addwf	LEDsetBar@a,f,c
 10430  0007EA  0E00               	movlw	0
 10431  0007EC  222A               	addwfc	LEDsetBar@a+1,f,c
 10432  0007EE                     l696:
 10433                           
 10434                           ;LED_BarGraph.c: 206: if (color == 1) {
 10435  0007EE  0425               	decf	LEDsetBar@color,w,c
 10436  0007F0  1026               	iorwf	LEDsetBar@color+1,w,c
 10437  0007F2  A4D8               	btfss	status,2,c
 10438  0007F4  D07D               	goto	l6647
 10439                           
 10440                           ;LED_BarGraph.c: 208: displaybuffer[c] |= (1<<(a));
 10441  0007F6  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 10442  0007FA  0E01               	movlw	1
 10443  0007FC  0101               	movlb	1	; () banked
 10444  0007FE  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 10445  000800  0E00               	movlw	0
 10446  000802  0101               	movlb	1	; () banked
 10447  000804  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 10448  000806  0101               	movlb	1	; () banked
 10449  000808  2B39               	incf	??_LEDsetBar& (0+255),f,b
 10450  00080A  D004               	goto	u7024
 10451  00080C                     u7025:
 10452  00080C  90D8               	bcf	status,0,c
 10453  00080E  0101               	movlb	1	; () banked
 10454  000810  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 10455  000812  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 10456  000814                     u7024:
 10457  000814  0101               	movlb	1	; () banked
 10458  000816  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 10459  000818  D7F9               	goto	u7025
 10460  00081A  C13A  F13C         	movff	??_LEDsetBar+1,??_LEDsetBar+3
 10461  00081E  C13B  F13D         	movff	??_LEDsetBar+2,??_LEDsetBar+4
 10462  000822  0E00               	movlw	0
 10463  000824  0101               	movlb	1	; () banked
 10464  000826  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 10465  000828  0EFF               	movlw	255
 10466  00082A  6F3E               	movwf	(??_LEDsetBar+5)& (0+255),b
 10467  00082C  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 10468  00082E  0E60               	movlw	low _displaybuffer
 10469  000830  0101               	movlb	1	; () banked
 10470  000832  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 10471  000834  0E00               	movlw	high _displaybuffer
 10472  000836  0101               	movlb	1	; () banked
 10473  000838  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 10474  00083A  90D8               	bcf	status,0,c
 10475  00083C  3427               	rlcf	LEDsetBar@c,w,c
 10476  00083E  6ED9               	movwf	fsr2l,c
 10477  000840  3428               	rlcf	LEDsetBar@c+1,w,c
 10478  000842  6EDA               	movwf	fsr2h,c
 10479  000844  90D8               	bcf	status,0,c
 10480  000846  36D9               	rlcf	fsr2l,f,c
 10481  000848  36DA               	rlcf	fsr2h,f,c
 10482  00084A  0101               	movlb	1	; () banked
 10483  00084C  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 10484  00084E  26D9               	addwf	fsr2l,f,c
 10485  000850  0101               	movlb	1	; () banked
 10486  000852  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 10487  000854  22DA               	addwfc	fsr2h,f,c
 10488  000856  0101               	movlb	1	; () banked
 10489  000858  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 10490  00085A  12DE               	iorwf	postinc2,f,c
 10491  00085C  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 10492  00085E  12DE               	iorwf	postinc2,f,c
 10493  000860  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 10494  000862  12DE               	iorwf	postinc2,f,c
 10495  000864  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 10496  000866  12DE               	iorwf	postinc2,f,c
 10497                           
 10498                           ;LED_BarGraph.c: 210: displaybuffer[c] &= ~(1<<(a + 8));
 10499  000868  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 10500  00086C  0E08               	movlw	8
 10501  00086E  0101               	movlb	1	; () banked
 10502  000870  2739               	addwf	??_LEDsetBar& (0+255),f,b
 10503  000872  0E01               	movlw	1
 10504  000874  0101               	movlb	1	; () banked
 10505  000876  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 10506  000878  0E00               	movlw	0
 10507  00087A  0101               	movlb	1	; () banked
 10508  00087C  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 10509  00087E  0101               	movlb	1	; () banked
 10510  000880  2B39               	incf	??_LEDsetBar& (0+255),f,b
 10511  000882  D004               	goto	u7034
 10512  000884                     u7035:
 10513  000884  90D8               	bcf	status,0,c
 10514  000886  0101               	movlb	1	; () banked
 10515  000888  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 10516  00088A  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 10517  00088C                     u7034:
 10518  00088C  0101               	movlb	1	; () banked
 10519  00088E  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 10520  000890  D7F9               	goto	u7035
 10521  000892  0101               	movlb	1	; () banked
 10522  000894  1D3A               	comf	(??_LEDsetBar+1)& (0+255),w,b
 10523  000896  0101               	movlb	1	; () banked
 10524  000898  6F3C               	movwf	(??_LEDsetBar+3)& (0+255),b
 10525  00089A  0101               	movlb	1	; () banked
 10526  00089C  1D3B               	comf	(??_LEDsetBar+2)& (0+255),w,b
 10527  00089E  0101               	movlb	1	; () banked
 10528  0008A0  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 10529  0008A2  0101               	movlb	1	; () banked
 10530  0008A4  6B3E               	clrf	(??_LEDsetBar+5)& (0+255),b
 10531  0008A6  0101               	movlb	1	; () banked
 10532  0008A8  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 10533  0008AA  073E               	decf	(??_LEDsetBar+5)& (0+255),f,b
 10534  0008AC  0101               	movlb	1	; () banked
 10535  0008AE  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 10536  0008B0  0101               	movlb	1	; () banked
 10537  0008B2  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 10538  0008B4  0E60               	movlw	low _displaybuffer
 10539  0008B6  0101               	movlb	1	; () banked
 10540  0008B8  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 10541  0008BA  0E00               	movlw	high _displaybuffer
 10542  0008BC  0101               	movlb	1	; () banked
 10543  0008BE  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 10544  0008C0  90D8               	bcf	status,0,c
 10545  0008C2  3427               	rlcf	LEDsetBar@c,w,c
 10546  0008C4  6ED9               	movwf	fsr2l,c
 10547  0008C6  3428               	rlcf	LEDsetBar@c+1,w,c
 10548  0008C8  6EDA               	movwf	fsr2h,c
 10549  0008CA  90D8               	bcf	status,0,c
 10550  0008CC  36D9               	rlcf	fsr2l,f,c
 10551  0008CE  36DA               	rlcf	fsr2h,f,c
 10552  0008D0  0101               	movlb	1	; () banked
 10553  0008D2  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 10554  0008D4  26D9               	addwf	fsr2l,f,c
 10555  0008D6  0101               	movlb	1	; () banked
 10556  0008D8  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 10557  0008DA  22DA               	addwfc	fsr2h,f,c
 10558  0008DC  0101               	movlb	1	; () banked
 10559  0008DE  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 10560  0008E0  16DE               	andwf	postinc2,f,c
 10561  0008E2  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 10562  0008E4  16DE               	andwf	postinc2,f,c
 10563  0008E6  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 10564  0008E8  16DE               	andwf	postinc2,f,c
 10565  0008EA  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 10566  0008EC  16DE               	andwf	postinc2,f,c
 10567                           
 10568                           ;LED_BarGraph.c: 211: } else if (color == 2) {
 10569  0008EE  0012               	return	
 10570  0008F0                     l6647:
 10571  0008F0  0E02               	movlw	2
 10572  0008F2  1825               	xorwf	LEDsetBar@color,w,c
 10573  0008F4  1026               	iorwf	LEDsetBar@color+1,w,c
 10574  0008F6  A4D8               	btfss	status,2,c
 10575  0008F8  D05A               	goto	l6651
 10576                           
 10577                           ;LED_BarGraph.c: 213: displaybuffer[c] |= (1<<(a)) | (1<<(a + 8));
 10578  0008FA  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 10579  0008FE  0E08               	movlw	8
 10580  000900  0101               	movlb	1	; () banked
 10581  000902  2739               	addwf	??_LEDsetBar& (0+255),f,b
 10582  000904  0E01               	movlw	1
 10583  000906  0101               	movlb	1	; () banked
 10584  000908  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 10585  00090A  0E00               	movlw	0
 10586  00090C  0101               	movlb	1	; () banked
 10587  00090E  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 10588  000910  0101               	movlb	1	; () banked
 10589  000912  2B39               	incf	??_LEDsetBar& (0+255),f,b
 10590  000914  D004               	goto	u7054
 10591  000916                     u7055:
 10592  000916  90D8               	bcf	status,0,c
 10593  000918  0101               	movlb	1	; () banked
 10594  00091A  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 10595  00091C  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 10596  00091E                     u7054:
 10597  00091E  0101               	movlb	1	; () banked
 10598  000920  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 10599  000922  D7F9               	goto	u7055
 10600  000924  C029  F13C         	movff	LEDsetBar@a,??_LEDsetBar+3
 10601  000928  0E01               	movlw	1
 10602  00092A  0101               	movlb	1	; () banked
 10603  00092C  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 10604  00092E  0E00               	movlw	0
 10605  000930  0101               	movlb	1	; () banked
 10606  000932  6F3E               	movwf	(??_LEDsetBar+5)& (0+255),b
 10607  000934  0101               	movlb	1	; () banked
 10608  000936  2B3C               	incf	(??_LEDsetBar+3)& (0+255),f,b
 10609  000938  D004               	goto	u7064
 10610  00093A                     u7065:
 10611  00093A  90D8               	bcf	status,0,c
 10612  00093C  0101               	movlb	1	; () banked
 10613  00093E  373D               	rlcf	(??_LEDsetBar+4)& (0+255),f,b
 10614  000940  373E               	rlcf	(??_LEDsetBar+5)& (0+255),f,b
 10615  000942                     u7064:
 10616  000942  0101               	movlb	1	; () banked
 10617  000944  2F3C               	decfsz	(??_LEDsetBar+3)& (0+255),f,b
 10618  000946  D7F9               	goto	u7065
 10619  000948  0101               	movlb	1	; () banked
 10620  00094A  513A               	movf	(??_LEDsetBar+1)& (0+255),w,b
 10621  00094C  0101               	movlb	1	; () banked
 10622  00094E  113D               	iorwf	(??_LEDsetBar+4)& (0+255),w,b
 10623  000950  0101               	movlb	1	; () banked
 10624  000952  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 10625  000954  0101               	movlb	1	; () banked
 10626  000956  513B               	movf	(??_LEDsetBar+2)& (0+255),w,b
 10627  000958  0101               	movlb	1	; () banked
 10628  00095A  113E               	iorwf	(??_LEDsetBar+5)& (0+255),w,b
 10629  00095C  0101               	movlb	1	; () banked
 10630  00095E  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 10631  000960  0101               	movlb	1	; () banked
 10632  000962  6B41               	clrf	(??_LEDsetBar+8)& (0+255),b
 10633  000964  0101               	movlb	1	; () banked
 10634  000966  BF40               	btfsc	(??_LEDsetBar+7)& (0+255),7,b
 10635  000968  0741               	decf	(??_LEDsetBar+8)& (0+255),f,b
 10636  00096A  0101               	movlb	1	; () banked
 10637  00096C  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 10638  00096E  0101               	movlb	1	; () banked
 10639  000970  6F42               	movwf	(??_LEDsetBar+9)& (0+255),b
 10640  000972  0E60               	movlw	low _displaybuffer
 10641  000974  0101               	movlb	1	; () banked
 10642  000976  6F43               	movwf	(??_LEDsetBar+10)& (0+255),b
 10643  000978  0E00               	movlw	high _displaybuffer
 10644  00097A  0101               	movlb	1	; () banked
 10645  00097C  6F44               	movwf	(??_LEDsetBar+11)& (0+255),b
 10646  00097E  90D8               	bcf	status,0,c
 10647  000980  3427               	rlcf	LEDsetBar@c,w,c
 10648  000982  6ED9               	movwf	fsr2l,c
 10649  000984  3428               	rlcf	LEDsetBar@c+1,w,c
 10650  000986  6EDA               	movwf	fsr2h,c
 10651  000988  90D8               	bcf	status,0,c
 10652  00098A  36D9               	rlcf	fsr2l,f,c
 10653  00098C  36DA               	rlcf	fsr2h,f,c
 10654  00098E  0101               	movlb	1	; () banked
 10655  000990  5143               	movf	(??_LEDsetBar+10)& (0+255),w,b
 10656  000992  26D9               	addwf	fsr2l,f,c
 10657  000994  0101               	movlb	1	; () banked
 10658  000996  5144               	movf	(??_LEDsetBar+11)& (0+255),w,b
 10659  000998  22DA               	addwfc	fsr2h,f,c
 10660  00099A  0101               	movlb	1	; () banked
 10661  00099C  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 10662  00099E  12DE               	iorwf	postinc2,f,c
 10663  0009A0  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 10664  0009A2  12DE               	iorwf	postinc2,f,c
 10665  0009A4  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 10666  0009A6  12DE               	iorwf	postinc2,f,c
 10667  0009A8  5142               	movf	(??_LEDsetBar+9)& (0+255),w,b
 10668  0009AA  12DE               	iorwf	postinc2,f,c
 10669                           
 10670                           ;LED_BarGraph.c: 214: } else if (color == 0) {
 10671  0009AC  0012               	return	
 10672  0009AE                     l6651:
 10673  0009AE  5025               	movf	LEDsetBar@color,w,c
 10674  0009B0  1026               	iorwf	LEDsetBar@color+1,w,c
 10675  0009B2  A4D8               	btfss	status,2,c
 10676  0009B4  D06A               	goto	l6655
 10677                           
 10678                           ;LED_BarGraph.c: 216: displaybuffer[c] &= ~(1<<(a)) & ~(1<<(a + 8));
 10679  0009B6  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 10680  0009BA  0E08               	movlw	8
 10681  0009BC  0101               	movlb	1	; () banked
 10682  0009BE  2739               	addwf	??_LEDsetBar& (0+255),f,b
 10683  0009C0  0E01               	movlw	1
 10684  0009C2  0101               	movlb	1	; () banked
 10685  0009C4  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 10686  0009C6  0E00               	movlw	0
 10687  0009C8  0101               	movlb	1	; () banked
 10688  0009CA  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 10689  0009CC  0101               	movlb	1	; () banked
 10690  0009CE  2B39               	incf	??_LEDsetBar& (0+255),f,b
 10691  0009D0  D004               	goto	u7084
 10692  0009D2                     u7085:
 10693  0009D2  90D8               	bcf	status,0,c
 10694  0009D4  0101               	movlb	1	; () banked
 10695  0009D6  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 10696  0009D8  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 10697  0009DA                     u7084:
 10698  0009DA  0101               	movlb	1	; () banked
 10699  0009DC  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 10700  0009DE  D7F9               	goto	u7085
 10701  0009E0  0101               	movlb	1	; () banked
 10702  0009E2  1D3A               	comf	(??_LEDsetBar+1)& (0+255),w,b
 10703  0009E4  0101               	movlb	1	; () banked
 10704  0009E6  6F3C               	movwf	(??_LEDsetBar+3)& (0+255),b
 10705  0009E8  0101               	movlb	1	; () banked
 10706  0009EA  1D3B               	comf	(??_LEDsetBar+2)& (0+255),w,b
 10707  0009EC  0101               	movlb	1	; () banked
 10708  0009EE  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 10709  0009F0  C029  F13E         	movff	LEDsetBar@a,??_LEDsetBar+5
 10710  0009F4  0E01               	movlw	1
 10711  0009F6  0101               	movlb	1	; () banked
 10712  0009F8  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 10713  0009FA  0E00               	movlw	0
 10714  0009FC  0101               	movlb	1	; () banked
 10715  0009FE  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 10716  000A00  0101               	movlb	1	; () banked
 10717  000A02  2B3E               	incf	(??_LEDsetBar+5)& (0+255),f,b
 10718  000A04  D004               	goto	u7094
 10719  000A06                     u7095:
 10720  000A06  90D8               	bcf	status,0,c
 10721  000A08  0101               	movlb	1	; () banked
 10722  000A0A  373F               	rlcf	(??_LEDsetBar+6)& (0+255),f,b
 10723  000A0C  3740               	rlcf	(??_LEDsetBar+7)& (0+255),f,b
 10724  000A0E                     u7094:
 10725  000A0E  0101               	movlb	1	; () banked
 10726  000A10  2F3E               	decfsz	(??_LEDsetBar+5)& (0+255),f,b
 10727  000A12  D7F9               	goto	u7095
 10728  000A14  0101               	movlb	1	; () banked
 10729  000A16  1D3F               	comf	(??_LEDsetBar+6)& (0+255),w,b
 10730  000A18  0101               	movlb	1	; () banked
 10731  000A1A  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 10732  000A1C  0101               	movlb	1	; () banked
 10733  000A1E  1D40               	comf	(??_LEDsetBar+7)& (0+255),w,b
 10734  000A20  0101               	movlb	1	; () banked
 10735  000A22  6F42               	movwf	(??_LEDsetBar+9)& (0+255),b
 10736  000A24  0101               	movlb	1	; () banked
 10737  000A26  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 10738  000A28  0101               	movlb	1	; () banked
 10739  000A2A  1541               	andwf	(??_LEDsetBar+8)& (0+255),w,b
 10740  000A2C  0101               	movlb	1	; () banked
 10741  000A2E  6F43               	movwf	(??_LEDsetBar+10)& (0+255),b
 10742  000A30  0101               	movlb	1	; () banked
 10743  000A32  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 10744  000A34  0101               	movlb	1	; () banked
 10745  000A36  1542               	andwf	(??_LEDsetBar+9)& (0+255),w,b
 10746  000A38  0101               	movlb	1	; () banked
 10747  000A3A  6F44               	movwf	(??_LEDsetBar+11)& (0+255),b
 10748  000A3C  0101               	movlb	1	; () banked
 10749  000A3E  6B45               	clrf	(??_LEDsetBar+12)& (0+255),b
 10750  000A40  0101               	movlb	1	; () banked
 10751  000A42  BF44               	btfsc	(??_LEDsetBar+11)& (0+255),7,b
 10752  000A44  0745               	decf	(??_LEDsetBar+12)& (0+255),f,b
 10753  000A46  0101               	movlb	1	; () banked
 10754  000A48  5145               	movf	(??_LEDsetBar+12)& (0+255),w,b
 10755  000A4A  0101               	movlb	1	; () banked
 10756  000A4C  6F46               	movwf	(??_LEDsetBar+13)& (0+255),b
 10757  000A4E  0E60               	movlw	low _displaybuffer
 10758  000A50  0101               	movlb	1	; () banked
 10759  000A52  6F47               	movwf	(??_LEDsetBar+14)& (0+255),b
 10760  000A54  0E00               	movlw	high _displaybuffer
 10761  000A56  0101               	movlb	1	; () banked
 10762  000A58  6F48               	movwf	(??_LEDsetBar+15)& (0+255),b
 10763  000A5A  90D8               	bcf	status,0,c
 10764  000A5C  3427               	rlcf	LEDsetBar@c,w,c
 10765  000A5E  6ED9               	movwf	fsr2l,c
 10766  000A60  3428               	rlcf	LEDsetBar@c+1,w,c
 10767  000A62  6EDA               	movwf	fsr2h,c
 10768  000A64  90D8               	bcf	status,0,c
 10769  000A66  36D9               	rlcf	fsr2l,f,c
 10770  000A68  36DA               	rlcf	fsr2h,f,c
 10771  000A6A  0101               	movlb	1	; () banked
 10772  000A6C  5147               	movf	(??_LEDsetBar+14)& (0+255),w,b
 10773  000A6E  26D9               	addwf	fsr2l,f,c
 10774  000A70  0101               	movlb	1	; () banked
 10775  000A72  5148               	movf	(??_LEDsetBar+15)& (0+255),w,b
 10776  000A74  22DA               	addwfc	fsr2h,f,c
 10777  000A76  0101               	movlb	1	; () banked
 10778  000A78  5143               	movf	(??_LEDsetBar+10)& (0+255),w,b
 10779  000A7A  16DE               	andwf	postinc2,f,c
 10780  000A7C  5144               	movf	(??_LEDsetBar+11)& (0+255),w,b
 10781  000A7E  16DE               	andwf	postinc2,f,c
 10782  000A80  5145               	movf	(??_LEDsetBar+12)& (0+255),w,b
 10783  000A82  16DE               	andwf	postinc2,f,c
 10784  000A84  5146               	movf	(??_LEDsetBar+13)& (0+255),w,b
 10785  000A86  16DE               	andwf	postinc2,f,c
 10786                           
 10787                           ;LED_BarGraph.c: 217: } else if (color == 3) {
 10788  000A88  0012               	return	
 10789  000A8A                     l6655:
 10790  000A8A  0E03               	movlw	3
 10791  000A8C  1825               	xorwf	LEDsetBar@color,w,c
 10792  000A8E  1026               	iorwf	LEDsetBar@color+1,w,c
 10793  000A90  A4D8               	btfss	status,2,c
 10794  000A92  0012               	return	
 10795                           
 10796                           ;LED_BarGraph.c: 219: displaybuffer[c] |= (1<<(a + 8));
 10797  000A94  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 10798  000A98  0E08               	movlw	8
 10799  000A9A  0101               	movlb	1	; () banked
 10800  000A9C  2739               	addwf	??_LEDsetBar& (0+255),f,b
 10801  000A9E  0E01               	movlw	1
 10802  000AA0  0101               	movlb	1	; () banked
 10803  000AA2  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 10804  000AA4  0E00               	movlw	0
 10805  000AA6  0101               	movlb	1	; () banked
 10806  000AA8  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 10807  000AAA  0101               	movlb	1	; () banked
 10808  000AAC  2B39               	incf	??_LEDsetBar& (0+255),f,b
 10809  000AAE  D004               	goto	u7114
 10810  000AB0                     u7115:
 10811  000AB0  90D8               	bcf	status,0,c
 10812  000AB2  0101               	movlb	1	; () banked
 10813  000AB4  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 10814  000AB6  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 10815  000AB8                     u7114:
 10816  000AB8  0101               	movlb	1	; () banked
 10817  000ABA  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 10818  000ABC  D7F9               	goto	u7115
 10819  000ABE  C13A  F13C         	movff	??_LEDsetBar+1,??_LEDsetBar+3
 10820  000AC2  C13B  F13D         	movff	??_LEDsetBar+2,??_LEDsetBar+4
 10821  000AC6  0E00               	movlw	0
 10822  000AC8  0101               	movlb	1	; () banked
 10823  000ACA  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 10824  000ACC  0EFF               	movlw	255
 10825  000ACE  6F3E               	movwf	(??_LEDsetBar+5)& (0+255),b
 10826  000AD0  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 10827  000AD2  0E60               	movlw	low _displaybuffer
 10828  000AD4  0101               	movlb	1	; () banked
 10829  000AD6  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 10830  000AD8  0E00               	movlw	high _displaybuffer
 10831  000ADA  0101               	movlb	1	; () banked
 10832  000ADC  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 10833  000ADE  90D8               	bcf	status,0,c
 10834  000AE0  3427               	rlcf	LEDsetBar@c,w,c
 10835  000AE2  6ED9               	movwf	fsr2l,c
 10836  000AE4  3428               	rlcf	LEDsetBar@c+1,w,c
 10837  000AE6  6EDA               	movwf	fsr2h,c
 10838  000AE8  90D8               	bcf	status,0,c
 10839  000AEA  36D9               	rlcf	fsr2l,f,c
 10840  000AEC  36DA               	rlcf	fsr2h,f,c
 10841  000AEE  0101               	movlb	1	; () banked
 10842  000AF0  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 10843  000AF2  26D9               	addwf	fsr2l,f,c
 10844  000AF4  0101               	movlb	1	; () banked
 10845  000AF6  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 10846  000AF8  22DA               	addwfc	fsr2h,f,c
 10847  000AFA  0101               	movlb	1	; () banked
 10848  000AFC  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 10849  000AFE  12DE               	iorwf	postinc2,f,c
 10850  000B00  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 10851  000B02  12DE               	iorwf	postinc2,f,c
 10852  000B04  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 10853  000B06  12DE               	iorwf	postinc2,f,c
 10854  000B08  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 10855  000B0A  12DE               	iorwf	postinc2,f,c
 10856                           
 10857                           ;LED_BarGraph.c: 221: displaybuffer[c] &= ~(1<<(a));
 10858  000B0C  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 10859  000B10  0E01               	movlw	1
 10860  000B12  0101               	movlb	1	; () banked
 10861  000B14  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 10862  000B16  0E00               	movlw	0
 10863  000B18  0101               	movlb	1	; () banked
 10864  000B1A  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 10865  000B1C  0101               	movlb	1	; () banked
 10866  000B1E  2B39               	incf	??_LEDsetBar& (0+255),f,b
 10867  000B20  D004               	goto	u7124
 10868  000B22                     u7125:
 10869  000B22  90D8               	bcf	status,0,c
 10870  000B24  0101               	movlb	1	; () banked
 10871  000B26  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 10872  000B28  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 10873  000B2A                     u7124:
 10874  000B2A  0101               	movlb	1	; () banked
 10875  000B2C  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 10876  000B2E  D7F9               	goto	u7125
 10877  000B30  0101               	movlb	1	; () banked
 10878  000B32  1D3A               	comf	(??_LEDsetBar+1)& (0+255),w,b
 10879  000B34  0101               	movlb	1	; () banked
 10880  000B36  6F3C               	movwf	(??_LEDsetBar+3)& (0+255),b
 10881  000B38  0101               	movlb	1	; () banked
 10882  000B3A  1D3B               	comf	(??_LEDsetBar+2)& (0+255),w,b
 10883  000B3C  0101               	movlb	1	; () banked
 10884  000B3E  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 10885  000B40  0101               	movlb	1	; () banked
 10886  000B42  6B3E               	clrf	(??_LEDsetBar+5)& (0+255),b
 10887  000B44  0101               	movlb	1	; () banked
 10888  000B46  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 10889  000B48  073E               	decf	(??_LEDsetBar+5)& (0+255),f,b
 10890  000B4A  0101               	movlb	1	; () banked
 10891  000B4C  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 10892  000B4E  0101               	movlb	1	; () banked
 10893  000B50  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 10894  000B52  0E60               	movlw	low _displaybuffer
 10895  000B54  0101               	movlb	1	; () banked
 10896  000B56  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 10897  000B58  0E00               	movlw	high _displaybuffer
 10898  000B5A  0101               	movlb	1	; () banked
 10899  000B5C  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 10900  000B5E  90D8               	bcf	status,0,c
 10901  000B60  3427               	rlcf	LEDsetBar@c,w,c
 10902  000B62  6ED9               	movwf	fsr2l,c
 10903  000B64  3428               	rlcf	LEDsetBar@c+1,w,c
 10904  000B66  6EDA               	movwf	fsr2h,c
 10905  000B68  90D8               	bcf	status,0,c
 10906  000B6A  36D9               	rlcf	fsr2l,f,c
 10907  000B6C  36DA               	rlcf	fsr2h,f,c
 10908  000B6E  0101               	movlb	1	; () banked
 10909  000B70  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 10910  000B72  26D9               	addwf	fsr2l,f,c
 10911  000B74  0101               	movlb	1	; () banked
 10912  000B76  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 10913  000B78  22DA               	addwfc	fsr2h,f,c
 10914  000B7A  0101               	movlb	1	; () banked
 10915  000B7C  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 10916  000B7E  16DE               	andwf	postinc2,f,c
 10917  000B80  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 10918  000B82  16DE               	andwf	postinc2,f,c
 10919  000B84  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 10920  000B86  16DE               	andwf	postinc2,f,c
 10921  000B88  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 10922  000B8A  16DE               	andwf	postinc2,f,c
 10923                           
 10924                           ; BSR set to: 1
 10925                           
 10926                           ; BSR set to: 1
 10927                           
 10928                           ; BSR set to: 1
 10929  000B8C  0012               	return	
 10930  000B8E                     __end_of_LEDsetBar:
 10931                           	opt stack 0
 10932                           tosu	equ	0xFFF
 10933                           tosh	equ	0xFFE
 10934                           tosl	equ	0xFFD
 10935                           pclath	equ	0xFFA
 10936                           tblptru	equ	0xFF8
 10937                           tblptrh	equ	0xFF7
 10938                           tblptrl	equ	0xFF6
 10939                           tablat	equ	0xFF5
 10940                           prodh	equ	0xFF4
 10941                           prodl	equ	0xFF3
 10942                           intcon	equ	0xFF2
 10943                           intcon2	equ	0xFF1
 10944                           postinc0	equ	0xFEE
 10945                           wreg	equ	0xFE8
 10946                           indf2	equ	0xFDF
 10947                           postinc2	equ	0xFDE
 10948                           postdec2	equ	0xFDD
 10949                           plusw2	equ	0xFDB
 10950                           fsr2h	equ	0xFDA
 10951                           fsr2l	equ	0xFD9
 10952                           status	equ	0xFD8
 10953                           
 10954 ;; *************** function ___awdiv *****************
 10955 ;; Defined at:
 10956 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
 10957 ;; Parameters:    Size  Location     Type
 10958 ;;  dividend        2   26[COMRAM] int 
 10959 ;;  divisor         2   28[COMRAM] int 
 10960 ;; Auto vars:     Size  Location     Type
 10961 ;;  quotient        2   32[COMRAM] int 
 10962 ;;  sign            1   31[COMRAM] unsigned char 
 10963 ;;  counter         1   30[COMRAM] unsigned char 
 10964 ;; Return value:  Size  Location     Type
 10965 ;;                  2   26[COMRAM] int 
 10966 ;; Registers used:
 10967 ;;		wreg, status,2, status,0
 10968 ;; Tracked objects:
 10969 ;;		On entry : 0/0
 10970 ;;		On exit  : 0/0
 10971 ;;		Unchanged: 0/0
 10972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10973 ;;      Params:         4       0       0       0       0       0       0
 10974 ;;      Locals:         4       0       0       0       0       0       0
 10975 ;;      Temps:          0       0       0       0       0       0       0
 10976 ;;      Totals:         8       0       0       0       0       0       0
 10977 ;;Total ram usage:        8 bytes
 10978 ;; Hardware stack levels used:    1
 10979 ;; Hardware stack levels required when called:    4
 10980 ;; This function calls:
 10981 ;;		Nothing
 10982 ;; This function is called by:
 10983 ;;		_LEDsetBar
 10984 ;;		_begin
 10985 ;; This function uses a non-reentrant model
 10986 ;;
 10987                           
 10988                           	psect	text53
 10989  00275C                     __ptext53:
 10990                           	opt stack 0
 10991  00275C                     ___awdiv:
 10992                           	opt stack 24
 10993                           
 10994                           ;incstack = 0
 10995  00275C  0E00               	movlw	0
 10996  00275E  6E20               	movwf	___awdiv@sign,c
 10997  002760  AE1E               	btfss	___awdiv@divisor+1,7,c
 10998  002762  D006               	goto	l6507
 10999  002764  6C1D               	negf	___awdiv@divisor,c
 11000  002766  1E1E               	comf	___awdiv@divisor+1,f,c
 11001  002768  B0D8               	btfsc	status,0,c
 11002  00276A  2A1E               	incf	___awdiv@divisor+1,f,c
 11003  00276C  0E01               	movlw	1
 11004  00276E  6E20               	movwf	___awdiv@sign,c
 11005  002770                     l6507:
 11006  002770  AE1C               	btfss	___awdiv@dividend+1,7,c
 11007  002772  D006               	goto	l6513
 11008  002774  6C1B               	negf	___awdiv@dividend,c
 11009  002776  1E1C               	comf	___awdiv@dividend+1,f,c
 11010  002778  B0D8               	btfsc	status,0,c
 11011  00277A  2A1C               	incf	___awdiv@dividend+1,f,c
 11012  00277C  0E01               	movlw	1
 11013  00277E  1A20               	xorwf	___awdiv@sign,f,c
 11014  002780                     l6513:
 11015  002780  0E00               	movlw	0
 11016  002782  6E22               	movwf	___awdiv@quotient+1,c
 11017  002784  0E00               	movlw	0
 11018  002786  6E21               	movwf	___awdiv@quotient,c
 11019  002788  501D               	movf	___awdiv@divisor,w,c
 11020  00278A  101E               	iorwf	___awdiv@divisor+1,w,c
 11021  00278C  B4D8               	btfsc	status,2,c
 11022  00278E  D01C               	goto	l6535
 11023  002790  0E01               	movlw	1
 11024  002792  6E1F               	movwf	___awdiv@counter,c
 11025  002794  D004               	goto	l6521
 11026  002796                     l6519:
 11027  002796  90D8               	bcf	status,0,c
 11028  002798  361D               	rlcf	___awdiv@divisor,f,c
 11029  00279A  361E               	rlcf	___awdiv@divisor+1,f,c
 11030  00279C  2A1F               	incf	___awdiv@counter,f,c
 11031  00279E                     l6521:
 11032  00279E  AE1E               	btfss	___awdiv@divisor+1,7,c
 11033  0027A0  D7FA               	goto	l6519
 11034  0027A2                     l6523:
 11035  0027A2  90D8               	bcf	status,0,c
 11036  0027A4  3621               	rlcf	___awdiv@quotient,f,c
 11037  0027A6  3622               	rlcf	___awdiv@quotient+1,f,c
 11038  0027A8  501D               	movf	___awdiv@divisor,w,c
 11039  0027AA  5C1B               	subwf	___awdiv@dividend,w,c
 11040  0027AC  501E               	movf	___awdiv@divisor+1,w,c
 11041  0027AE  581C               	subwfb	___awdiv@dividend+1,w,c
 11042  0027B0  A0D8               	btfss	status,0,c
 11043  0027B2  D005               	goto	l6531
 11044  0027B4  501D               	movf	___awdiv@divisor,w,c
 11045  0027B6  5E1B               	subwf	___awdiv@dividend,f,c
 11046  0027B8  501E               	movf	___awdiv@divisor+1,w,c
 11047  0027BA  5A1C               	subwfb	___awdiv@dividend+1,f,c
 11048  0027BC  8021               	bsf	___awdiv@quotient,0,c
 11049  0027BE                     l6531:
 11050  0027BE  90D8               	bcf	status,0,c
 11051  0027C0  321E               	rrcf	___awdiv@divisor+1,f,c
 11052  0027C2  321D               	rrcf	___awdiv@divisor,f,c
 11053  0027C4  2E1F               	decfsz	___awdiv@counter,f,c
 11054  0027C6  D7ED               	goto	l6523
 11055  0027C8                     l6535:
 11056  0027C8  5020               	movf	___awdiv@sign,w,c
 11057  0027CA  B4D8               	btfsc	status,2,c
 11058  0027CC  D004               	goto	l6539
 11059  0027CE  6C21               	negf	___awdiv@quotient,c
 11060  0027D0  1E22               	comf	___awdiv@quotient+1,f,c
 11061  0027D2  B0D8               	btfsc	status,0,c
 11062  0027D4  2A22               	incf	___awdiv@quotient+1,f,c
 11063  0027D6                     l6539:
 11064  0027D6  C021  F01B         	movff	___awdiv@quotient,?___awdiv
 11065  0027DA  C022  F01C         	movff	___awdiv@quotient+1,?___awdiv+1
 11066  0027DE  0012               	return	
 11067  0027E0                     __end_of___awdiv:
 11068                           	opt stack 0
 11069                           tosu	equ	0xFFF
 11070                           tosh	equ	0xFFE
 11071                           tosl	equ	0xFFD
 11072                           pclath	equ	0xFFA
 11073                           tblptru	equ	0xFF8
 11074                           tblptrh	equ	0xFF7
 11075                           tblptrl	equ	0xFF6
 11076                           tablat	equ	0xFF5
 11077                           prodh	equ	0xFF4
 11078                           prodl	equ	0xFF3
 11079                           intcon	equ	0xFF2
 11080                           intcon2	equ	0xFF1
 11081                           postinc0	equ	0xFEE
 11082                           wreg	equ	0xFE8
 11083                           indf2	equ	0xFDF
 11084                           postinc2	equ	0xFDE
 11085                           postdec2	equ	0xFDD
 11086                           plusw2	equ	0xFDB
 11087                           fsr2h	equ	0xFDA
 11088                           fsr2l	equ	0xFD9
 11089                           status	equ	0xFD8
 11090                           
 11091 ;; *************** function _LEDbegin *****************
 11092 ;; Defined at:
 11093 ;;		line 83 in file "LED_BarGraph.c"
 11094 ;; Parameters:    Size  Location     Type
 11095 ;;  i2c_addr        1    wreg     unsigned char 
 11096 ;; Auto vars:     Size  Location     Type
 11097 ;;  i2c_addr        1    5[BANK1 ] unsigned char 
 11098 ;;  writeBuffer     3    0[BANK1 ] unsigned char [3]
 11099 ;;  timeOut         2    3[BANK1 ] unsigned int 
 11100 ;;  status          1    6[BANK1 ] enum E8697
 11101 ;; Return value:  Size  Location     Type
 11102 ;;                  1    wreg      void 
 11103 ;; Registers used:
 11104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11105 ;; Tracked objects:
 11106 ;;		On entry : 0/0
 11107 ;;		On exit  : 0/0
 11108 ;;		Unchanged: 0/0
 11109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11110 ;;      Params:         0       0       0       0       0       0       0
 11111 ;;      Locals:         0       0       7       0       0       0       0
 11112 ;;      Temps:          0       0       0       0       0       0       0
 11113 ;;      Totals:         0       0       7       0       0       0       0
 11114 ;;Total ram usage:        7 bytes
 11115 ;; Hardware stack levels used:    1
 11116 ;; Hardware stack levels required when called:    7
 11117 ;; This function calls:
 11118 ;;		_I2C1_MasterWrite
 11119 ;;		_LEDBsetBrightness
 11120 ;;		_LEDblinkRate
 11121 ;; This function is called by:
 11122 ;;		_main
 11123 ;; This function uses a non-reentrant model
 11124 ;;
 11125                           
 11126                           	psect	text54
 11127  002476                     __ptext54:
 11128                           	opt stack 0
 11129  002476                     _LEDbegin:
 11130                           	opt stack 23
 11131                           
 11132                           ;incstack = 0
 11133                           ;LEDbegin@i2c_addr stored from wreg
 11134  002476  0101               	movlb	1	; () banked
 11135  002478  6F3E               	movwf	LEDbegin@i2c_addr& (0+255),b
 11136                           
 11137                           ;LED_BarGraph.c: 84: uint8_t writeBuffer[3];
 11138                           ;LED_BarGraph.c: 85: uint16_t timeOut;
 11139                           ;LED_BarGraph.c: 86: writeBuffer[0] = 0x21;
 11140  00247A  0E21               	movlw	33
 11141  00247C  0101               	movlb	1	; () banked
 11142  00247E  6F39               	movwf	LEDbegin@writeBuffer& (0+255),b
 11143                           
 11144                           ;LED_BarGraph.c: 87: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 11145  002480  0E02               	movlw	2
 11146  002482  0101               	movlb	1	; () banked
 11147  002484  6F3F               	movwf	LEDbegin@status& (0+255),b
 11148                           
 11149                           ;LED_BarGraph.c: 89: timeOut = 0;
 11150  002486  0E00               	movlw	0
 11151  002488  0101               	movlb	1	; () banked
 11152  00248A  6F3D               	movwf	(LEDbegin@timeOut+1)& (0+255),b
 11153  00248C  0E00               	movlw	0
 11154  00248E  6F3C               	movwf	LEDbegin@timeOut& (0+255),b
 11155                           
 11156                           ;LED_BarGraph.c: 90: while (status != I2C1_MESSAGE_FAIL) {
 11157  002490  D027               	goto	l7173
 11158  002492                     l7153:
 11159                           
 11160                           ; BSR set to: 1
 11161                           ;LED_BarGraph.c: 92: I2C1_MasterWrite(&writeBuffer,
 11162                           ;LED_BarGraph.c: 93: 1,
 11163                           ;LED_BarGraph.c: 94: i2c_addr,
 11164                           ;LED_BarGraph.c: 95: &status);
 11165  002492  0E39               	movlw	low LEDbegin@writeBuffer
 11166  002494  6E24               	movwf	I2C1_MasterWrite@pdata,c
 11167  002496  0E01               	movlw	high LEDbegin@writeBuffer
 11168  002498  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
 11169  00249A  0E01               	movlw	1
 11170  00249C  6E26               	movwf	I2C1_MasterWrite@length,c
 11171  00249E  C13E  F027         	movff	LEDbegin@i2c_addr,I2C1_MasterWrite@address
 11172  0024A2  6A28               	clrf	I2C1_MasterWrite@address+1,c
 11173  0024A4  0E3F               	movlw	low LEDbegin@status
 11174  0024A6  6E29               	movwf	I2C1_MasterWrite@pflag,c
 11175  0024A8  0E01               	movlw	high LEDbegin@status
 11176  0024AA  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
 11177  0024AC  EC90  F015         	call	_I2C1_MasterWrite	;wreg free
 11178  0024B0                     l7155:
 11179  0024B0  0E02               	movlw	2
 11180  0024B2  0101               	movlb	1	; () banked
 11181  0024B4  193F               	xorwf	LEDbegin@status& (0+255),w,b
 11182  0024B6  B4D8               	btfsc	status,2,c
 11183  0024B8  D7FB               	goto	l7155
 11184                           
 11185                           ; BSR set to: 1
 11186                           ;LED_BarGraph.c: 100: if (status == I2C1_MESSAGE_COMPLETE)
 11187                           
 11188                           ; BSR set to: 1
 11189  0024BA  0101               	movlb	1	; () banked
 11190  0024BC  513F               	movf	LEDbegin@status& (0+255),w,b
 11191  0024BE  0101               	movlb	1	; () banked
 11192  0024C0  B4D8               	btfsc	status,2,c
 11193  0024C2  D012               	goto	l7175
 11194                           
 11195                           ; BSR set to: 1
 11196                           ;LED_BarGraph.c: 102: if (timeOut == 100)
 11197                           
 11198                           ; BSR set to: 1
 11199                           
 11200                           ; BSR set to: 1
 11201                           ;LED_BarGraph.c: 101: break;
 11202  0024C4  0E64               	movlw	100
 11203  0024C6  0101               	movlb	1	; () banked
 11204  0024C8  193C               	xorwf	LEDbegin@timeOut& (0+255),w,b
 11205  0024CA  0101               	movlb	1	; () banked
 11206  0024CC  113D               	iorwf	(LEDbegin@timeOut+1)& (0+255),w,b
 11207  0024CE  B4D8               	btfsc	status,2,c
 11208  0024D0  D00B               	goto	l7175
 11209                           
 11210                           ; BSR set to: 1
 11211                           ;LED_BarGraph.c: 104: if (status == I2C1_MESSAGE_FAIL)
 11212                           
 11213                           ; BSR set to: 1
 11214                           
 11215                           ; BSR set to: 1
 11216                           ;LED_BarGraph.c: 103: break;
 11217  0024D2  0101               	movlb	1	; () banked
 11218  0024D4  053F               	decf	LEDbegin@status& (0+255),w,b
 11219  0024D6  B4D8               	btfsc	status,2,c
 11220  0024D8  D007               	goto	l7175
 11221                           
 11222                           ; BSR set to: 1
 11223                           ;LED_BarGraph.c: 106: else
 11224                           ;LED_BarGraph.c: 107: timeOut++;
 11225                           
 11226                           ; BSR set to: 1
 11227                           
 11228                           ; BSR set to: 1
 11229                           
 11230                           ; BSR set to: 1
 11231                           ;LED_BarGraph.c: 105: break;
 11232  0024DA  0101               	movlb	1	; () banked
 11233  0024DC  4B3C               	infsnz	LEDbegin@timeOut& (0+255),f,b
 11234  0024DE  2B3D               	incf	(LEDbegin@timeOut+1)& (0+255),f,b
 11235  0024E0                     l7173:
 11236                           
 11237                           ; BSR set to: 1
 11238  0024E0  0101               	movlb	1	; () banked
 11239  0024E2  053F               	decf	LEDbegin@status& (0+255),w,b
 11240  0024E4  A4D8               	btfss	status,2,c
 11241  0024E6  D7D5               	goto	l7153
 11242  0024E8                     l7175:
 11243                           
 11244                           ; BSR set to: 1
 11245                           ;LED_BarGraph.c: 108: }
 11246                           ;LED_BarGraph.c: 110: LEDblinkRate(0, i2c_addr);
 11247  0024E8  0E00               	movlw	0
 11248  0024EA  0100               	movlb	0	; () banked
 11249  0024EC  6FF5               	movwf	(LEDblinkRate@b+1)& (0+255),b
 11250  0024EE  0E00               	movlw	0
 11251  0024F0  6FF4               	movwf	LEDblinkRate@b& (0+255),b
 11252  0024F2  C13E  F0F6         	movff	LEDbegin@i2c_addr,LEDblinkRate@i2c_addr
 11253  0024F6  EC87  F012         	call	_LEDblinkRate	;wreg free
 11254                           
 11255                           ;LED_BarGraph.c: 111: LEDBsetBrightness(15, i2c_addr);
 11256  0024FA  0E00               	movlw	0
 11257  0024FC  0100               	movlb	0	; () banked
 11258  0024FE  6FF5               	movwf	(LEDBsetBrightness@b+1)& (0+255),b
 11259  002500  0E0F               	movlw	15
 11260  002502  6FF4               	movwf	LEDBsetBrightness@b& (0+255),b
 11261  002504  C13E  F0F6         	movff	LEDbegin@i2c_addr,LEDBsetBrightness@i2c_addr
 11262  002508  ECD2  F012         	call	_LEDBsetBrightness	;wreg free
 11263  00250C  0012               	return		;funcret
 11264  00250E                     __end_of_LEDbegin:
 11265                           	opt stack 0
 11266                           tosu	equ	0xFFF
 11267                           tosh	equ	0xFFE
 11268                           tosl	equ	0xFFD
 11269                           pclath	equ	0xFFA
 11270                           tblptru	equ	0xFF8
 11271                           tblptrh	equ	0xFF7
 11272                           tblptrl	equ	0xFF6
 11273                           tablat	equ	0xFF5
 11274                           prodh	equ	0xFF4
 11275                           prodl	equ	0xFF3
 11276                           intcon	equ	0xFF2
 11277                           intcon2	equ	0xFF1
 11278                           postinc0	equ	0xFEE
 11279                           wreg	equ	0xFE8
 11280                           indf2	equ	0xFDF
 11281                           postinc2	equ	0xFDE
 11282                           postdec2	equ	0xFDD
 11283                           plusw2	equ	0xFDB
 11284                           fsr2h	equ	0xFDA
 11285                           fsr2l	equ	0xFD9
 11286                           status	equ	0xFD8
 11287                           
 11288 ;; *************** function _LEDblinkRate *****************
 11289 ;; Defined at:
 11290 ;;		line 53 in file "LED_BarGraph.c"
 11291 ;; Parameters:    Size  Location     Type
 11292 ;;  b               2    0[BANK0 ] int 
 11293 ;;  i2c_addr        1    2[BANK0 ] unsigned char 
 11294 ;; Auto vars:     Size  Location     Type
 11295 ;;  writeBuffer     2    3[BANK0 ] unsigned char [2]
 11296 ;;  timeOut         2    5[BANK0 ] unsigned int 
 11297 ;;  status          1    7[BANK0 ] enum E8697
 11298 ;; Return value:  Size  Location     Type
 11299 ;;                  1    wreg      void 
 11300 ;; Registers used:
 11301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11302 ;; Tracked objects:
 11303 ;;		On entry : 0/0
 11304 ;;		On exit  : 0/0
 11305 ;;		Unchanged: 0/0
 11306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11307 ;;      Params:         0       3       0       0       0       0       0
 11308 ;;      Locals:         0       5       0       0       0       0       0
 11309 ;;      Temps:          0       0       0       0       0       0       0
 11310 ;;      Totals:         0       8       0       0       0       0       0
 11311 ;;Total ram usage:        8 bytes
 11312 ;; Hardware stack levels used:    1
 11313 ;; Hardware stack levels required when called:    6
 11314 ;; This function calls:
 11315 ;;		_I2C1_MasterWrite
 11316 ;; This function is called by:
 11317 ;;		_LEDbegin
 11318 ;; This function uses a non-reentrant model
 11319 ;;
 11320                           
 11321                           	psect	text55
 11322  00250E                     __ptext55:
 11323                           	opt stack 0
 11324  00250E                     _LEDblinkRate:
 11325                           	opt stack 23
 11326                           
 11327                           ;LED_BarGraph.c: 54: if (b > 3) b = 0;
 11328                           
 11329                           ;incstack = 0
 11330  00250E  0100               	movlb	0	; () banked
 11331  002510  BFF5               	btfsc	(LEDblinkRate@b+1)& (0+255),7,b
 11332  002512  D00D               	goto	l6695
 11333  002514  0100               	movlb	0	; () banked
 11334  002516  51F5               	movf	(LEDblinkRate@b+1)& (0+255),w,b
 11335  002518  E105               	bnz	u7190
 11336  00251A  0E04               	movlw	4
 11337  00251C  0100               	movlb	0	; () banked
 11338  00251E  5DF4               	subwf	LEDblinkRate@b& (0+255),w,b
 11339  002520  A0D8               	btfss	status,0,c
 11340  002522  D005               	goto	l6695
 11341  002524                     u7190:
 11342                           
 11343                           ; BSR set to: 0
 11344  002524  0E00               	movlw	0
 11345  002526  0100               	movlb	0	; () banked
 11346  002528  6FF5               	movwf	(LEDblinkRate@b+1)& (0+255),b
 11347  00252A  0E00               	movlw	0
 11348  00252C  6FF4               	movwf	LEDblinkRate@b& (0+255),b
 11349  00252E                     l6695:
 11350                           
 11351                           ; BSR set to: 0
 11352                           ;LED_BarGraph.c: 55: uint8_t writeBuffer[2];
 11353                           ;LED_BarGraph.c: 56: uint16_t timeOut;
 11354                           ;LED_BarGraph.c: 57: writeBuffer[0] = (0x80 | 0x01 | (b << 1));
 11355  00252E  0100               	movlb	0	; () banked
 11356  002530  51F4               	movf	LEDblinkRate@b& (0+255),w,b
 11357  002532  25F4               	addwf	LEDblinkRate@b& (0+255),w,b
 11358  002534  0981               	iorlw	129
 11359  002536  0100               	movlb	0	; () banked
 11360  002538  6FF7               	movwf	LEDblinkRate@writeBuffer& (0+255),b
 11361                           
 11362                           ; BSR set to: 0
 11363                           ;LED_BarGraph.c: 58: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 11364  00253A  0E02               	movlw	2
 11365  00253C  0100               	movlb	0	; () banked
 11366  00253E  6FFB               	movwf	LEDblinkRate@status& (0+255),b
 11367                           
 11368                           ; BSR set to: 0
 11369                           ;LED_BarGraph.c: 60: timeOut = 0;
 11370  002540  0E00               	movlw	0
 11371  002542  0100               	movlb	0	; () banked
 11372  002544  6FFA               	movwf	(LEDblinkRate@timeOut+1)& (0+255),b
 11373  002546  0E00               	movlw	0
 11374  002548  6FF9               	movwf	LEDblinkRate@timeOut& (0+255),b
 11375                           
 11376                           ;LED_BarGraph.c: 61: while (status != I2C1_MESSAGE_FAIL) {
 11377  00254A  D027               	goto	l6721
 11378  00254C                     l6701:
 11379                           
 11380                           ; BSR set to: 0
 11381                           ;LED_BarGraph.c: 63: I2C1_MasterWrite(&writeBuffer,
 11382                           ;LED_BarGraph.c: 64: 1,
 11383                           ;LED_BarGraph.c: 65: i2c_addr,
 11384                           ;LED_BarGraph.c: 66: &status);
 11385  00254C  0EF7               	movlw	low LEDblinkRate@writeBuffer
 11386  00254E  6E24               	movwf	I2C1_MasterWrite@pdata,c
 11387  002550  0E00               	movlw	high LEDblinkRate@writeBuffer
 11388  002552  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
 11389  002554  0E01               	movlw	1
 11390  002556  6E26               	movwf	I2C1_MasterWrite@length,c
 11391  002558  C0F6  F027         	movff	LEDblinkRate@i2c_addr,I2C1_MasterWrite@address
 11392  00255C  6A28               	clrf	I2C1_MasterWrite@address+1,c
 11393  00255E  0EFB               	movlw	low LEDblinkRate@status
 11394  002560  6E29               	movwf	I2C1_MasterWrite@pflag,c
 11395  002562  0E00               	movlw	high LEDblinkRate@status
 11396  002564  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
 11397  002566  EC90  F015         	call	_I2C1_MasterWrite	;wreg free
 11398  00256A                     l6703:
 11399  00256A  0E02               	movlw	2
 11400  00256C  0100               	movlb	0	; () banked
 11401  00256E  19FB               	xorwf	LEDblinkRate@status& (0+255),w,b
 11402  002570  B4D8               	btfsc	status,2,c
 11403  002572  D7FB               	goto	l6703
 11404                           
 11405                           ; BSR set to: 0
 11406                           ;LED_BarGraph.c: 71: if (status == I2C1_MESSAGE_COMPLETE)
 11407                           
 11408                           ; BSR set to: 0
 11409  002574  0100               	movlb	0	; () banked
 11410  002576  51FB               	movf	LEDblinkRate@status& (0+255),w,b
 11411  002578  0100               	movlb	0	; () banked
 11412  00257A  B4D8               	btfsc	status,2,c
 11413  00257C  0012               	return	
 11414                           
 11415                           ; BSR set to: 0
 11416                           ;LED_BarGraph.c: 73: if (timeOut == 100)
 11417                           
 11418                           ; BSR set to: 0
 11419                           
 11420                           ; BSR set to: 0
 11421                           ;LED_BarGraph.c: 72: break;
 11422  00257E  0E64               	movlw	100
 11423  002580  0100               	movlb	0	; () banked
 11424  002582  19F9               	xorwf	LEDblinkRate@timeOut& (0+255),w,b
 11425  002584  0100               	movlb	0	; () banked
 11426  002586  11FA               	iorwf	(LEDblinkRate@timeOut+1)& (0+255),w,b
 11427  002588  B4D8               	btfsc	status,2,c
 11428  00258A  0012               	return	
 11429                           
 11430                           ; BSR set to: 0
 11431                           ;LED_BarGraph.c: 75: if (status == I2C1_MESSAGE_FAIL)
 11432                           
 11433                           ; BSR set to: 0
 11434                           
 11435                           ; BSR set to: 0
 11436                           ;LED_BarGraph.c: 74: break;
 11437  00258C  0100               	movlb	0	; () banked
 11438  00258E  05FB               	decf	LEDblinkRate@status& (0+255),w,b
 11439  002590  B4D8               	btfsc	status,2,c
 11440  002592  0012               	return	
 11441                           
 11442                           ; BSR set to: 0
 11443                           ;LED_BarGraph.c: 77: else
 11444                           ;LED_BarGraph.c: 78: timeOut++;
 11445                           
 11446                           ; BSR set to: 0
 11447                           
 11448                           ; BSR set to: 0
 11449                           
 11450                           ; BSR set to: 0
 11451                           ;LED_BarGraph.c: 76: break;
 11452  002594  0100               	movlb	0	; () banked
 11453  002596  4BF9               	infsnz	LEDblinkRate@timeOut& (0+255),f,b
 11454  002598  2BFA               	incf	(LEDblinkRate@timeOut+1)& (0+255),f,b
 11455  00259A                     l6721:
 11456                           
 11457                           ; BSR set to: 0
 11458  00259A  0100               	movlb	0	; () banked
 11459  00259C  05FB               	decf	LEDblinkRate@status& (0+255),w,b
 11460  00259E  B4D8               	btfsc	status,2,c
 11461  0025A0  0012               	return	
 11462  0025A2  D7D4               	goto	l6701
 11463  0025A4                     __end_of_LEDblinkRate:
 11464                           	opt stack 0
 11465                           tosu	equ	0xFFF
 11466                           tosh	equ	0xFFE
 11467                           tosl	equ	0xFFD
 11468                           pclath	equ	0xFFA
 11469                           tblptru	equ	0xFF8
 11470                           tblptrh	equ	0xFF7
 11471                           tblptrl	equ	0xFF6
 11472                           tablat	equ	0xFF5
 11473                           prodh	equ	0xFF4
 11474                           prodl	equ	0xFF3
 11475                           intcon	equ	0xFF2
 11476                           intcon2	equ	0xFF1
 11477                           postinc0	equ	0xFEE
 11478                           wreg	equ	0xFE8
 11479                           indf2	equ	0xFDF
 11480                           postinc2	equ	0xFDE
 11481                           postdec2	equ	0xFDD
 11482                           plusw2	equ	0xFDB
 11483                           fsr2h	equ	0xFDA
 11484                           fsr2l	equ	0xFD9
 11485                           status	equ	0xFD8
 11486                           
 11487 ;; *************** function _LEDBsetBrightness *****************
 11488 ;; Defined at:
 11489 ;;		line 23 in file "LED_BarGraph.c"
 11490 ;; Parameters:    Size  Location     Type
 11491 ;;  b               2    0[BANK0 ] int 
 11492 ;;  i2c_addr        1    2[BANK0 ] unsigned char 
 11493 ;; Auto vars:     Size  Location     Type
 11494 ;;  writeBuffer     2    3[BANK0 ] unsigned char [2]
 11495 ;;  timeOut         2    5[BANK0 ] unsigned int 
 11496 ;;  status          1    7[BANK0 ] enum E8697
 11497 ;; Return value:  Size  Location     Type
 11498 ;;                  1    wreg      void 
 11499 ;; Registers used:
 11500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11501 ;; Tracked objects:
 11502 ;;		On entry : 0/0
 11503 ;;		On exit  : 0/0
 11504 ;;		Unchanged: 0/0
 11505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11506 ;;      Params:         0       3       0       0       0       0       0
 11507 ;;      Locals:         0       5       0       0       0       0       0
 11508 ;;      Temps:          0       0       0       0       0       0       0
 11509 ;;      Totals:         0       8       0       0       0       0       0
 11510 ;;Total ram usage:        8 bytes
 11511 ;; Hardware stack levels used:    1
 11512 ;; Hardware stack levels required when called:    6
 11513 ;; This function calls:
 11514 ;;		_I2C1_MasterWrite
 11515 ;; This function is called by:
 11516 ;;		_LEDbegin
 11517 ;; This function uses a non-reentrant model
 11518 ;;
 11519                           
 11520                           	psect	text56
 11521  0025A4                     __ptext56:
 11522                           	opt stack 0
 11523  0025A4                     _LEDBsetBrightness:
 11524                           	opt stack 23
 11525                           
 11526                           ;LED_BarGraph.c: 24: if (b > 15) b = 15;
 11527                           
 11528                           ; BSR set to: 0
 11529                           ;incstack = 0
 11530  0025A4  0100               	movlb	0	; () banked
 11531  0025A6  BFF5               	btfsc	(LEDBsetBrightness@b+1)& (0+255),7,b
 11532  0025A8  D00D               	goto	l6663
 11533  0025AA  0100               	movlb	0	; () banked
 11534  0025AC  51F5               	movf	(LEDBsetBrightness@b+1)& (0+255),w,b
 11535  0025AE  E105               	bnz	u7130
 11536  0025B0  0E10               	movlw	16
 11537  0025B2  0100               	movlb	0	; () banked
 11538  0025B4  5DF4               	subwf	LEDBsetBrightness@b& (0+255),w,b
 11539  0025B6  A0D8               	btfss	status,0,c
 11540  0025B8  D005               	goto	l6663
 11541  0025BA                     u7130:
 11542                           
 11543                           ; BSR set to: 0
 11544  0025BA  0E00               	movlw	0
 11545  0025BC  0100               	movlb	0	; () banked
 11546  0025BE  6FF5               	movwf	(LEDBsetBrightness@b+1)& (0+255),b
 11547  0025C0  0E0F               	movlw	15
 11548  0025C2  6FF4               	movwf	LEDBsetBrightness@b& (0+255),b
 11549  0025C4                     l6663:
 11550                           
 11551                           ; BSR set to: 0
 11552                           ;LED_BarGraph.c: 25: uint8_t writeBuffer[2];
 11553                           ;LED_BarGraph.c: 26: uint16_t timeOut;
 11554                           ;LED_BarGraph.c: 27: writeBuffer[0] = (0xE0 | b);
 11555  0025C4  0100               	movlb	0	; () banked
 11556  0025C6  51F4               	movf	LEDBsetBrightness@b& (0+255),w,b
 11557  0025C8  09E0               	iorlw	224
 11558  0025CA  0100               	movlb	0	; () banked
 11559  0025CC  6FF7               	movwf	LEDBsetBrightness@writeBuffer& (0+255),b
 11560                           
 11561                           ; BSR set to: 0
 11562                           ;LED_BarGraph.c: 28: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 11563  0025CE  0E02               	movlw	2
 11564  0025D0  0100               	movlb	0	; () banked
 11565  0025D2  6FFB               	movwf	LEDBsetBrightness@status& (0+255),b
 11566                           
 11567                           ; BSR set to: 0
 11568                           ;LED_BarGraph.c: 30: timeOut = 0;
 11569  0025D4  0E00               	movlw	0
 11570  0025D6  0100               	movlb	0	; () banked
 11571  0025D8  6FFA               	movwf	(LEDBsetBrightness@timeOut+1)& (0+255),b
 11572  0025DA  0E00               	movlw	0
 11573  0025DC  6FF9               	movwf	LEDBsetBrightness@timeOut& (0+255),b
 11574                           
 11575                           ;LED_BarGraph.c: 31: while (status != I2C1_MESSAGE_FAIL) {
 11576  0025DE  D027               	goto	l6689
 11577  0025E0                     l6669:
 11578                           
 11579                           ; BSR set to: 0
 11580                           ;LED_BarGraph.c: 33: I2C1_MasterWrite(&writeBuffer,
 11581                           ;LED_BarGraph.c: 34: 1,
 11582                           ;LED_BarGraph.c: 35: i2c_addr,
 11583                           ;LED_BarGraph.c: 36: &status);
 11584  0025E0  0EF7               	movlw	low LEDBsetBrightness@writeBuffer
 11585  0025E2  6E24               	movwf	I2C1_MasterWrite@pdata,c
 11586  0025E4  0E00               	movlw	high LEDBsetBrightness@writeBuffer
 11587  0025E6  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
 11588  0025E8  0E01               	movlw	1
 11589  0025EA  6E26               	movwf	I2C1_MasterWrite@length,c
 11590  0025EC  C0F6  F027         	movff	LEDBsetBrightness@i2c_addr,I2C1_MasterWrite@address
 11591  0025F0  6A28               	clrf	I2C1_MasterWrite@address+1,c
 11592  0025F2  0EFB               	movlw	low LEDBsetBrightness@status
 11593  0025F4  6E29               	movwf	I2C1_MasterWrite@pflag,c
 11594  0025F6  0E00               	movlw	high LEDBsetBrightness@status
 11595  0025F8  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
 11596  0025FA  EC90  F015         	call	_I2C1_MasterWrite	;wreg free
 11597  0025FE                     l6671:
 11598  0025FE  0E02               	movlw	2
 11599  002600  0100               	movlb	0	; () banked
 11600  002602  19FB               	xorwf	LEDBsetBrightness@status& (0+255),w,b
 11601  002604  B4D8               	btfsc	status,2,c
 11602  002606  D7FB               	goto	l6671
 11603                           
 11604                           ; BSR set to: 0
 11605                           ;LED_BarGraph.c: 41: if (status == I2C1_MESSAGE_COMPLETE)
 11606                           
 11607                           ; BSR set to: 0
 11608  002608  0100               	movlb	0	; () banked
 11609  00260A  51FB               	movf	LEDBsetBrightness@status& (0+255),w,b
 11610  00260C  0100               	movlb	0	; () banked
 11611  00260E  B4D8               	btfsc	status,2,c
 11612  002610  0012               	return	
 11613                           
 11614                           ; BSR set to: 0
 11615                           ;LED_BarGraph.c: 43: if (timeOut == 100)
 11616                           
 11617                           ; BSR set to: 0
 11618                           
 11619                           ; BSR set to: 0
 11620                           ;LED_BarGraph.c: 42: break;
 11621  002612  0E64               	movlw	100
 11622  002614  0100               	movlb	0	; () banked
 11623  002616  19F9               	xorwf	LEDBsetBrightness@timeOut& (0+255),w,b
 11624  002618  0100               	movlb	0	; () banked
 11625  00261A  11FA               	iorwf	(LEDBsetBrightness@timeOut+1)& (0+255),w,b
 11626  00261C  B4D8               	btfsc	status,2,c
 11627  00261E  0012               	return	
 11628                           
 11629                           ; BSR set to: 0
 11630                           ;LED_BarGraph.c: 45: if (status == I2C1_MESSAGE_FAIL)
 11631                           
 11632                           ; BSR set to: 0
 11633                           
 11634                           ; BSR set to: 0
 11635                           ;LED_BarGraph.c: 44: break;
 11636  002620  0100               	movlb	0	; () banked
 11637  002622  05FB               	decf	LEDBsetBrightness@status& (0+255),w,b
 11638  002624  B4D8               	btfsc	status,2,c
 11639  002626  0012               	return	
 11640                           
 11641                           ; BSR set to: 0
 11642                           ;LED_BarGraph.c: 47: else
 11643                           ;LED_BarGraph.c: 48: timeOut++;
 11644                           
 11645                           ; BSR set to: 0
 11646                           
 11647                           ; BSR set to: 0
 11648                           
 11649                           ; BSR set to: 0
 11650                           ;LED_BarGraph.c: 46: break;
 11651  002628  0100               	movlb	0	; () banked
 11652  00262A  4BF9               	infsnz	LEDBsetBrightness@timeOut& (0+255),f,b
 11653  00262C  2BFA               	incf	(LEDBsetBrightness@timeOut+1)& (0+255),f,b
 11654  00262E                     l6689:
 11655                           
 11656                           ; BSR set to: 0
 11657  00262E  0100               	movlb	0	; () banked
 11658  002630  05FB               	decf	LEDBsetBrightness@status& (0+255),w,b
 11659  002632  B4D8               	btfsc	status,2,c
 11660  002634  0012               	return	
 11661  002636  D7D4               	goto	l6669
 11662  002638                     __end_of_LEDBsetBrightness:
 11663                           	opt stack 0
 11664                           tosu	equ	0xFFF
 11665                           tosh	equ	0xFFE
 11666                           tosl	equ	0xFFD
 11667                           pclath	equ	0xFFA
 11668                           tblptru	equ	0xFF8
 11669                           tblptrh	equ	0xFF7
 11670                           tblptrl	equ	0xFF6
 11671                           tablat	equ	0xFF5
 11672                           prodh	equ	0xFF4
 11673                           prodl	equ	0xFF3
 11674                           intcon	equ	0xFF2
 11675                           intcon2	equ	0xFF1
 11676                           postinc0	equ	0xFEE
 11677                           wreg	equ	0xFE8
 11678                           indf2	equ	0xFDF
 11679                           postinc2	equ	0xFDE
 11680                           postdec2	equ	0xFDD
 11681                           plusw2	equ	0xFDB
 11682                           fsr2h	equ	0xFDA
 11683                           fsr2l	equ	0xFD9
 11684                           status	equ	0xFD8
 11685                           
 11686 ;; *************** function _I2C1_MasterWrite *****************
 11687 ;; Defined at:
 11688 ;;		line 551 in file "mcc_generated_files/i2c1.c"
 11689 ;; Parameters:    Size  Location     Type
 11690 ;;  pdata           2   35[COMRAM] PTR unsigned char 
 11691 ;;		 -> oledPutChar@bytes(9), Buff(2), LEDwriteDisplay@writeBuffer(20), LEDbegin@writeBuffer(3), 
 11692 ;;		 -> LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBuffer(2), 
 11693 ;;  length          1   37[COMRAM] unsigned char 
 11694 ;;  address         2   38[COMRAM] unsigned int 
 11695 ;;  pflag           2   40[COMRAM] PTR enum E8678
 11696 ;;		 -> oledPutChar@status(1), OLED_command@status(1), LEDwriteDisplay@status(1), LEDbegin@status(1), 
 11697 ;;		 -> LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
 11698 ;; Auto vars:     Size  Location     Type
 11699 ;;		None
 11700 ;; Return value:  Size  Location     Type
 11701 ;;                  1    wreg      void 
 11702 ;; Registers used:
 11703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11704 ;; Tracked objects:
 11705 ;;		On entry : 0/0
 11706 ;;		On exit  : 0/0
 11707 ;;		Unchanged: 0/0
 11708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11709 ;;      Params:         7       0       0       0       0       0       0
 11710 ;;      Locals:         0       0       0       0       0       0       0
 11711 ;;      Temps:          0       0       0       0       0       0       0
 11712 ;;      Totals:         7       0       0       0       0       0       0
 11713 ;;Total ram usage:        7 bytes
 11714 ;; Hardware stack levels used:    1
 11715 ;; Hardware stack levels required when called:    5
 11716 ;; This function calls:
 11717 ;;		_I2C1_MasterTRBInsert
 11718 ;;		_I2C1_MasterWriteTRBBuild
 11719 ;; This function is called by:
 11720 ;;		_LEDBsetBrightness
 11721 ;;		_LEDblinkRate
 11722 ;;		_LEDbegin
 11723 ;;		_LEDwriteDisplay
 11724 ;;		_OLED_command
 11725 ;;		_oledPutChar
 11726 ;; This function uses a non-reentrant model
 11727 ;;
 11728                           
 11729                           	psect	text57
 11730  002B20                     __ptext57:
 11731                           	opt stack 0
 11732  002B20                     _I2C1_MasterWrite:
 11733                           	opt stack 24
 11734                           
 11735                           ;i2c1.c: 557: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
 11736                           ;i2c1.c: 560: if (i2c1_object.trStatus.s.full != 1)
 11737                           
 11738                           ; BSR set to: 0
 11739                           ;incstack = 0
 11740  002B20  0100               	movlb	0	; () banked
 11741  002B22  B1BC               	btfsc	(_i2c1_object+4)& (0+255),0,b
 11742  002B24  D01C               	goto	l6231
 11743                           
 11744                           ; BSR set to: 0
 11745                           ;i2c1.c: 561: {
 11746                           ;i2c1.c: 562: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
 11747  002B26  0EE8               	movlw	low I2C1_MasterWrite@trBlock
 11748  002B28  6E1B               	movwf	I2C1_MasterWriteTRBBuild@ptrb,c
 11749  002B2A  0E00               	movlw	high I2C1_MasterWrite@trBlock
 11750  002B2C  6E1C               	movwf	I2C1_MasterWriteTRBBuild@ptrb+1,c
 11751  002B2E  C024  F01D         	movff	I2C1_MasterWrite@pdata,I2C1_MasterWriteTRBBuild@pdata
 11752  002B32  C025  F01E         	movff	I2C1_MasterWrite@pdata+1,I2C1_MasterWriteTRBBuild@pdata+1
 11753  002B36  C026  F01F         	movff	I2C1_MasterWrite@length,I2C1_MasterWriteTRBBuild@length
 11754  002B3A  C027  F020         	movff	I2C1_MasterWrite@address,I2C1_MasterWriteTRBBuild@address
 11755  002B3E  C028  F021         	movff	I2C1_MasterWrite@address+1,I2C1_MasterWriteTRBBuild@address+1
 11756  002B42  ECFD  F015         	call	_I2C1_MasterWriteTRBBuild	;wreg free
 11757                           
 11758                           ;i2c1.c: 563: I2C1_MasterTRBInsert(1, &trBlock, pflag);
 11759  002B46  0EE8               	movlw	low I2C1_MasterWrite@trBlock
 11760  002B48  6E1B               	movwf	I2C1_MasterTRBInsert@ptrb_list,c
 11761  002B4A  0E00               	movlw	high I2C1_MasterWrite@trBlock
 11762  002B4C  6E1C               	movwf	I2C1_MasterTRBInsert@ptrb_list+1,c
 11763  002B4E  C029  F01D         	movff	I2C1_MasterWrite@pflag,I2C1_MasterTRBInsert@pflag
 11764  002B52  C02A  F01E         	movff	I2C1_MasterWrite@pflag+1,I2C1_MasterTRBInsert@pflag+1
 11765  002B56  0E01               	movlw	1
 11766  002B58  EC35  F011         	call	_I2C1_MasterTRBInsert
 11767                           
 11768                           ;i2c1.c: 564: }
 11769  002B5C  0012               	return	
 11770  002B5E                     l6231:
 11771                           
 11772                           ;i2c1.c: 565: else
 11773                           ;i2c1.c: 566: {
 11774                           ;i2c1.c: 567: *pflag = I2C1_MESSAGE_FAIL;
 11775  002B5E  C029  FFD9         	movff	I2C1_MasterWrite@pflag,fsr2l
 11776  002B62  C02A  FFDA         	movff	I2C1_MasterWrite@pflag+1,fsr2h
 11777  002B66  0E01               	movlw	1
 11778  002B68  6EDF               	movwf	indf2,c
 11779  002B6A  0012               	return	
 11780  002B6C                     __end_of_I2C1_MasterWrite:
 11781                           	opt stack 0
 11782                           tosu	equ	0xFFF
 11783                           tosh	equ	0xFFE
 11784                           tosl	equ	0xFFD
 11785                           pclath	equ	0xFFA
 11786                           tblptru	equ	0xFF8
 11787                           tblptrh	equ	0xFF7
 11788                           tblptrl	equ	0xFF6
 11789                           tablat	equ	0xFF5
 11790                           prodh	equ	0xFF4
 11791                           prodl	equ	0xFF3
 11792                           intcon	equ	0xFF2
 11793                           intcon2	equ	0xFF1
 11794                           postinc0	equ	0xFEE
 11795                           wreg	equ	0xFE8
 11796                           indf2	equ	0xFDF
 11797                           postinc2	equ	0xFDE
 11798                           postdec2	equ	0xFDD
 11799                           plusw2	equ	0xFDB
 11800                           fsr2h	equ	0xFDA
 11801                           fsr2l	equ	0xFD9
 11802                           status	equ	0xFD8
 11803                           
 11804 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 11805 ;; Defined at:
 11806 ;;		line 660 in file "mcc_generated_files/i2c1.c"
 11807 ;; Parameters:    Size  Location     Type
 11808 ;;  ptrb            2   26[COMRAM] PTR struct .
 11809 ;;		 -> I2C1_MasterWrite@trBlock(5), 
 11810 ;;  pdata           2   28[COMRAM] PTR unsigned char 
 11811 ;;		 -> oledPutChar@bytes(9), Buff(2), LEDwriteDisplay@writeBuffer(20), LEDbegin@writeBuffer(3), 
 11812 ;;		 -> LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBuffer(2), 
 11813 ;;  length          1   30[COMRAM] unsigned char 
 11814 ;;  address         2   31[COMRAM] unsigned int 
 11815 ;; Auto vars:     Size  Location     Type
 11816 ;;		None
 11817 ;; Return value:  Size  Location     Type
 11818 ;;                  1    wreg      void 
 11819 ;; Registers used:
 11820 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11821 ;; Tracked objects:
 11822 ;;		On entry : 0/0
 11823 ;;		On exit  : 0/0
 11824 ;;		Unchanged: 0/0
 11825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11826 ;;      Params:         7       0       0       0       0       0       0
 11827 ;;      Locals:         0       0       0       0       0       0       0
 11828 ;;      Temps:          2       0       0       0       0       0       0
 11829 ;;      Totals:         9       0       0       0       0       0       0
 11830 ;;Total ram usage:        9 bytes
 11831 ;; Hardware stack levels used:    1
 11832 ;; Hardware stack levels required when called:    4
 11833 ;; This function calls:
 11834 ;;		Nothing
 11835 ;; This function is called by:
 11836 ;;		_I2C1_MasterWrite
 11837 ;; This function uses a non-reentrant model
 11838 ;;
 11839                           
 11840                           	psect	text58
 11841  002BFA                     __ptext58:
 11842                           	opt stack 0
 11843  002BFA                     _I2C1_MasterWriteTRBBuild:
 11844                           	opt stack 24
 11845                           
 11846                           ;i2c1.c: 666: ptrb->address = address << 1;
 11847                           
 11848                           ;incstack = 0
 11849  002BFA  C020  F022         	movff	I2C1_MasterWriteTRBBuild@address,??_I2C1_MasterWriteTRBBuild
 11850  002BFE  C021  F023         	movff	I2C1_MasterWriteTRBBuild@address+1,??_I2C1_MasterWriteTRBBuild+1
 11851  002C02  90D8               	bcf	status,0,c
 11852  002C04  3622               	rlcf	??_I2C1_MasterWriteTRBBuild,f,c
 11853  002C06  3623               	rlcf	??_I2C1_MasterWriteTRBBuild+1,f,c
 11854  002C08  C01B  FFD9         	movff	I2C1_MasterWriteTRBBuild@ptrb,fsr2l
 11855  002C0C  C01C  FFDA         	movff	I2C1_MasterWriteTRBBuild@ptrb+1,fsr2h
 11856  002C10  C022  FFDE         	movff	??_I2C1_MasterWriteTRBBuild,postinc2
 11857  002C14  C023  FFDD         	movff	??_I2C1_MasterWriteTRBBuild+1,postdec2
 11858                           
 11859                           ;i2c1.c: 667: ptrb->length = length;
 11860  002C18  EE20 F002          	lfsr	2,2
 11861  002C1C  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
 11862  002C1E  26D9               	addwf	fsr2l,f,c
 11863  002C20  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
 11864  002C22  22DA               	addwfc	fsr2h,f,c
 11865  002C24  C01F  FFDF         	movff	I2C1_MasterWriteTRBBuild@length,indf2
 11866                           
 11867                           ;i2c1.c: 668: ptrb->pbuffer = pdata;
 11868  002C28  EE20 F003          	lfsr	2,3
 11869  002C2C  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
 11870  002C2E  26D9               	addwf	fsr2l,f,c
 11871  002C30  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
 11872  002C32  22DA               	addwfc	fsr2h,f,c
 11873  002C34  C01D  FFDE         	movff	I2C1_MasterWriteTRBBuild@pdata,postinc2
 11874  002C38  C01E  FFDD         	movff	I2C1_MasterWriteTRBBuild@pdata+1,postdec2
 11875  002C3C  0012               	return		;funcret
 11876  002C3E                     __end_of_I2C1_MasterWriteTRBBuild:
 11877                           	opt stack 0
 11878                           tosu	equ	0xFFF
 11879                           tosh	equ	0xFFE
 11880                           tosl	equ	0xFFD
 11881                           pclath	equ	0xFFA
 11882                           tblptru	equ	0xFF8
 11883                           tblptrh	equ	0xFF7
 11884                           tblptrl	equ	0xFF6
 11885                           tablat	equ	0xFF5
 11886                           prodh	equ	0xFF4
 11887                           prodl	equ	0xFF3
 11888                           intcon	equ	0xFF2
 11889                           intcon2	equ	0xFF1
 11890                           postinc0	equ	0xFEE
 11891                           wreg	equ	0xFE8
 11892                           indf2	equ	0xFDF
 11893                           postinc2	equ	0xFDE
 11894                           postdec2	equ	0xFDD
 11895                           plusw2	equ	0xFDB
 11896                           fsr2h	equ	0xFDA
 11897                           fsr2l	equ	0xFD9
 11898                           status	equ	0xFD8
 11899                           
 11900 ;; *************** function _I2C1_MasterTRBInsert *****************
 11901 ;; Defined at:
 11902 ;;		line 594 in file "mcc_generated_files/i2c1.c"
 11903 ;; Parameters:    Size  Location     Type
 11904 ;;  count           1    wreg     unsigned char 
 11905 ;;  ptrb_list       2   26[COMRAM] PTR struct .
 11906 ;;		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
 11907 ;;  pflag           2   28[COMRAM] PTR enum E8678
 11908 ;;		 -> oledPutChar@status(1), OLED_command@status(1), LEDwriteDisplay@status(1), LEDbegin@status(1), 
 11909 ;;		 -> LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
 11910 ;; Auto vars:     Size  Location     Type
 11911 ;;  count           1   31[COMRAM] unsigned char 
 11912 ;; Return value:  Size  Location     Type
 11913 ;;                  1    wreg      void 
 11914 ;; Registers used:
 11915 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11916 ;; Tracked objects:
 11917 ;;		On entry : 0/0
 11918 ;;		On exit  : 0/0
 11919 ;;		Unchanged: 0/0
 11920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11921 ;;      Params:         4       0       0       0       0       0       0
 11922 ;;      Locals:         1       0       0       0       0       0       0
 11923 ;;      Temps:          1       0       0       0       0       0       0
 11924 ;;      Totals:         6       0       0       0       0       0       0
 11925 ;;Total ram usage:        6 bytes
 11926 ;; Hardware stack levels used:    1
 11927 ;; Hardware stack levels required when called:    4
 11928 ;; This function calls:
 11929 ;;		Nothing
 11930 ;; This function is called by:
 11931 ;;		_I2C1_MasterWrite
 11932 ;;		_I2C1_MasterRead
 11933 ;; This function uses a non-reentrant model
 11934 ;;
 11935                           
 11936                           	psect	text59
 11937  00226A                     __ptext59:
 11938                           	opt stack 0
 11939  00226A                     _I2C1_MasterTRBInsert:
 11940                           	opt stack 24
 11941                           
 11942                           ;incstack = 0
 11943                           ;I2C1_MasterTRBInsert@count stored from wreg
 11944  00226A  6E20               	movwf	I2C1_MasterTRBInsert@count,c
 11945                           
 11946                           ;i2c1.c: 601: if (i2c1_object.trStatus.s.full != 1)
 11947  00226C  0100               	movlb	0	; () banked
 11948  00226E  B1BC               	btfsc	(_i2c1_object+4)& (0+255),0,b
 11949  002270  D046               	goto	l6047
 11950                           
 11951                           ; BSR set to: 0
 11952                           ;i2c1.c: 602: {
 11953                           ;i2c1.c: 603: *pflag = I2C1_MESSAGE_PENDING;
 11954  002272  C01D  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 11955  002276  C01E  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 11956  00227A  0E02               	movlw	2
 11957  00227C  6EDF               	movwf	indf2,c
 11958                           
 11959                           ; BSR set to: 0
 11960                           ;i2c1.c: 605: i2c1_object.pTrTail->ptrb_list = ptrb_list;
 11961  00227E  0100               	movlb	0	; () banked
 11962  002280  EE20 F001          	lfsr	2,1
 11963  002284  51B8               	movf	_i2c1_object& (0+255),w,b
 11964  002286  26D9               	addwf	fsr2l,f,c
 11965  002288  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 11966  00228A  22DA               	addwfc	fsr2h,f,c
 11967  00228C  C01B  FFDE         	movff	I2C1_MasterTRBInsert@ptrb_list,postinc2
 11968  002290  C01C  FFDD         	movff	I2C1_MasterTRBInsert@ptrb_list+1,postdec2
 11969                           
 11970                           ; BSR set to: 0
 11971                           ;i2c1.c: 606: i2c1_object.pTrTail->count = count;
 11972  002294  C0B8  FFD9         	movff	_i2c1_object,fsr2l
 11973  002298  C0B9  FFDA         	movff	_i2c1_object+1,fsr2h
 11974  00229C  C020  FFDF         	movff	I2C1_MasterTRBInsert@count,indf2
 11975                           
 11976                           ; BSR set to: 0
 11977                           ;i2c1.c: 607: i2c1_object.pTrTail->pTrFlag = pflag;
 11978  0022A0  0100               	movlb	0	; () banked
 11979  0022A2  EE20 F003          	lfsr	2,3
 11980  0022A6  51B8               	movf	_i2c1_object& (0+255),w,b
 11981  0022A8  26D9               	addwf	fsr2l,f,c
 11982  0022AA  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 11983  0022AC  22DA               	addwfc	fsr2h,f,c
 11984  0022AE  C01D  FFDE         	movff	I2C1_MasterTRBInsert@pflag,postinc2
 11985  0022B2  C01E  FFDD         	movff	I2C1_MasterTRBInsert@pflag+1,postdec2
 11986                           
 11987                           ; BSR set to: 0
 11988                           ;i2c1.c: 608: i2c1_object.pTrTail++;
 11989  0022B6  0E05               	movlw	5
 11990  0022B8  0100               	movlb	0	; () banked
 11991  0022BA  27B8               	addwf	_i2c1_object& (0+255),f,b
 11992  0022BC  0E00               	movlw	0
 11993  0022BE  23B9               	addwfc	(_i2c1_object+1)& (0+255),f,b
 11994                           
 11995                           ; BSR set to: 0
 11996                           ;i2c1.c: 611: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
 11997  0022C0  0EF2               	movlw	low (_i2c1_tr_queue+5)
 11998  0022C2  0100               	movlb	0	; () banked
 11999  0022C4  19B8               	xorwf	_i2c1_object& (0+255),w,b
 12000  0022C6  E10B               	bnz	l6043
 12001  0022C8  0E00               	movlw	high (_i2c1_tr_queue+5)
 12002  0022CA  0100               	movlb	0	; () banked
 12003  0022CC  19B9               	xorwf	(_i2c1_object+1)& (0+255),w,b
 12004  0022CE  A4D8               	btfss	status,2,c
 12005  0022D0  D006               	goto	l6043
 12006                           
 12007                           ; BSR set to: 0
 12008                           ;i2c1.c: 612: {
 12009                           ;i2c1.c: 614: i2c1_object.pTrTail = i2c1_tr_queue;
 12010  0022D2  0EED               	movlw	low _i2c1_tr_queue
 12011  0022D4  0100               	movlb	0	; () banked
 12012  0022D6  6FB8               	movwf	_i2c1_object& (0+255),b
 12013  0022D8  0E00               	movlw	high _i2c1_tr_queue
 12014  0022DA  0100               	movlb	0	; () banked
 12015  0022DC  6FB9               	movwf	(_i2c1_object+1)& (0+255),b
 12016  0022DE                     l6043:
 12017                           
 12018                           ; BSR set to: 0
 12019                           ;i2c1.c: 615: }
 12020                           ;i2c1.c: 619: i2c1_object.trStatus.s.empty = 0;
 12021  0022DE  0100               	movlb	0	; () banked
 12022  0022E0  93BC               	bcf	(_i2c1_object+4)& (0+255),1,b
 12023                           
 12024                           ;i2c1.c: 622: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
 12025  0022E2  0100               	movlb	0	; () banked
 12026  0022E4  51B8               	movf	_i2c1_object& (0+255),w,b
 12027  0022E6  0100               	movlb	0	; () banked
 12028  0022E8  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 12029  0022EA  E10F               	bnz	l6049
 12030  0022EC  0100               	movlb	0	; () banked
 12031  0022EE  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 12032  0022F0  0100               	movlb	0	; () banked
 12033  0022F2  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 12034  0022F4  A4D8               	btfss	status,2,c
 12035  0022F6  D009               	goto	l6049
 12036                           
 12037                           ; BSR set to: 0
 12038                           ;i2c1.c: 623: {
 12039                           ;i2c1.c: 625: i2c1_object.trStatus.s.full = 1;
 12040  0022F8  0100               	movlb	0	; () banked
 12041  0022FA  81BC               	bsf	(_i2c1_object+4)& (0+255),0,b
 12042                           
 12043                           ; BSR set to: 0
 12044                           ;i2c1.c: 626: }
 12045                           ;i2c1.c: 628: }
 12046  0022FC  D006               	goto	l6049
 12047  0022FE                     l6047:
 12048                           
 12049                           ; BSR set to: 0
 12050                           ;i2c1.c: 629: else
 12051                           ;i2c1.c: 630: {
 12052                           ;i2c1.c: 631: *pflag = I2C1_MESSAGE_FAIL;
 12053  0022FE  C01D  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 12054  002302  C01E  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 12055  002306  0E01               	movlw	1
 12056  002308  6EDF               	movwf	indf2,c
 12057  00230A                     l6049:
 12058                           
 12059                           ; BSR set to: 0
 12060                           ;i2c1.c: 632: }
 12061                           ;i2c1.c: 635: if (*pflag == I2C1_MESSAGE_PENDING)
 12062  00230A  C01D  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 12063  00230E  C01E  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 12064  002312  0E02               	movlw	2
 12065  002314  18DE               	xorwf	postinc2,w,c
 12066  002316  A4D8               	btfss	status,2,c
 12067  002318  0012               	return	
 12068  00231A                     l6053:
 12069  00231A  5038               	movf	_i2c1_state,w,c
 12070  00231C  A4D8               	btfss	status,2,c
 12071  00231E  D7FD               	goto	l6053
 12072                           
 12073                           ;i2c1.c: 638: {
 12074                           ;i2c1.c: 641: PIR1bits.SSP1IF = 1;
 12075  002320  869E               	bsf	3998,3,c	;volatile
 12076  002322  0012               	return	
 12077  002324                     __end_of_I2C1_MasterTRBInsert:
 12078                           	opt stack 0
 12079                           tosu	equ	0xFFF
 12080                           tosh	equ	0xFFE
 12081                           tosl	equ	0xFFD
 12082                           pclath	equ	0xFFA
 12083                           tblptru	equ	0xFF8
 12084                           tblptrh	equ	0xFF7
 12085                           tblptrl	equ	0xFF6
 12086                           tablat	equ	0xFF5
 12087                           prodh	equ	0xFF4
 12088                           prodl	equ	0xFF3
 12089                           intcon	equ	0xFF2
 12090                           intcon2	equ	0xFF1
 12091                           postinc0	equ	0xFEE
 12092                           wreg	equ	0xFE8
 12093                           indf2	equ	0xFDF
 12094                           postinc2	equ	0xFDE
 12095                           postdec2	equ	0xFDD
 12096                           plusw2	equ	0xFDB
 12097                           fsr2h	equ	0xFDA
 12098                           fsr2l	equ	0xFD9
 12099                           status	equ	0xFD8
 12100                           
 12101 ;; *************** function _INTERRUPT_InterruptManager *****************
 12102 ;; Defined at:
 12103 ;;		line 75 in file "mcc_generated_files/interrupt_manager.c"
 12104 ;; Parameters:    Size  Location     Type
 12105 ;;		None
 12106 ;; Auto vars:     Size  Location     Type
 12107 ;;		None
 12108 ;; Return value:  Size  Location     Type
 12109 ;;                  1    wreg      void 
 12110 ;; Registers used:
 12111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 12112 ;; Tracked objects:
 12113 ;;		On entry : 0/0
 12114 ;;		On exit  : 0/0
 12115 ;;		Unchanged: 0/0
 12116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12117 ;;      Params:         0       0       0       0       0       0       0
 12118 ;;      Locals:         0       0       0       0       0       0       0
 12119 ;;      Temps:         14       0       0       0       0       0       0
 12120 ;;      Totals:        14       0       0       0       0       0       0
 12121 ;;Total ram usage:       14 bytes
 12122 ;; Hardware stack levels used:    1
 12123 ;; Hardware stack levels required when called:    3
 12124 ;; This function calls:
 12125 ;;		_ADC_ISR
 12126 ;;		_EUSART1_Receive_ISR
 12127 ;;		_EUSART1_Transmit_ISR
 12128 ;;		_I2C1_BusCollisionISR
 12129 ;;		_I2C1_ISR
 12130 ;;		_TMR0_ISR
 12131 ;;		_TMR2_ISR
 12132 ;; This function is called by:
 12133 ;;		Interrupt level 2
 12134 ;; This function uses a non-reentrant model
 12135 ;;
 12136                           
 12137                           	psect	intcode
 12138  000008                     __pintcode:
 12139                           	opt stack 0
 12140  000008                     _INTERRUPT_InterruptManager:
 12141                           	opt stack 21
 12142                           
 12143                           ;incstack = 0
 12144  000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12145  00000A  CFFA F00D          	movff	pclath,??_INTERRUPT_InterruptManager
 12146  00000E  CFFB F00E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 12147  000012  CFE9 F00F          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 12148  000016  CFEA F010          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 12149  00001A  CFE1 F011          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 12150  00001E  CFE2 F012          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 12151  000022  CFD9 F013          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 12152  000026  CFDA F014          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 12153  00002A  CFF3 F015          	movff	prodl,??_INTERRUPT_InterruptManager+8
 12154  00002E  CFF4 F016          	movff	prodh,??_INTERRUPT_InterruptManager+9
 12155  000032  CFF6 F017          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 12156  000036  CFF7 F018          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 12157  00003A  CFF8 F019          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 12158  00003E  CFF5 F01A          	movff	tablat,??_INTERRUPT_InterruptManager+13
 12159                           
 12160                           ;interrupt_manager.c: 78: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
 12161  000042  BA9D               	btfsc	3997,5,c	;volatile
 12162  000044  AA9E               	btfss	3998,5,c	;volatile
 12163  000046  D003               	goto	i2l318
 12164                           
 12165                           ;interrupt_manager.c: 79: {
 12166                           ;interrupt_manager.c: 80: EUSART1_Receive_ISR();
 12167  000048  ECAE  F017         	call	_EUSART1_Receive_ISR	;wreg free
 12168                           
 12169                           ;interrupt_manager.c: 81: }
 12170  00004C  D023               	goto	i2l332
 12171  00004E                     i2l318:
 12172                           
 12173                           ;interrupt_manager.c: 82: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
 12174  00004E  B89D               	btfsc	3997,4,c	;volatile
 12175  000050  A89E               	btfss	3998,4,c	;volatile
 12176  000052  D003               	goto	i2l320
 12177                           
 12178                           ;interrupt_manager.c: 83: {
 12179                           ;interrupt_manager.c: 84: EUSART1_Transmit_ISR();
 12180  000054  ECB3  F016         	call	_EUSART1_Transmit_ISR	;wreg free
 12181                           
 12182                           ;interrupt_manager.c: 85: }
 12183  000058  D01D               	goto	i2l332
 12184  00005A                     i2l320:
 12185                           
 12186                           ;interrupt_manager.c: 86: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 12187  00005A  BAF2               	btfsc	intcon,5,c	;volatile
 12188  00005C  A4F2               	btfss	intcon,2,c	;volatile
 12189  00005E  D003               	goto	i2l322
 12190                           
 12191                           ;interrupt_manager.c: 87: {
 12192                           ;interrupt_manager.c: 88: TMR0_ISR();
 12193  000060  EC09  F015         	call	_TMR0_ISR	;wreg free
 12194                           
 12195                           ;interrupt_manager.c: 89: }
 12196  000064  D017               	goto	i2l332
 12197  000066                     i2l322:
 12198                           
 12199                           ;interrupt_manager.c: 90: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
 12200  000066  B29D               	btfsc	3997,1,c	;volatile
 12201  000068  A29E               	btfss	3998,1,c	;volatile
 12202  00006A  D003               	goto	i2l324
 12203                           
 12204                           ;interrupt_manager.c: 91: {
 12205                           ;interrupt_manager.c: 92: TMR2_ISR();
 12206  00006C  EC23  F018         	call	_TMR2_ISR	;wreg free
 12207                           
 12208                           ;interrupt_manager.c: 93: }
 12209  000070  D011               	goto	i2l332
 12210  000072                     i2l324:
 12211                           
 12212                           ;interrupt_manager.c: 94: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 12213  000072  BC9D               	btfsc	3997,6,c	;volatile
 12214  000074  AC9E               	btfss	3998,6,c	;volatile
 12215  000076  D003               	goto	i2l326
 12216                           
 12217                           ;interrupt_manager.c: 95: {
 12218                           ;interrupt_manager.c: 96: ADC_ISR();
 12219  000078  EC2B  F018         	call	_ADC_ISR	;wreg free
 12220                           
 12221                           ;interrupt_manager.c: 97: }
 12222  00007C  D00B               	goto	i2l332
 12223  00007E                     i2l326:
 12224                           
 12225                           ;interrupt_manager.c: 98: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 12226  00007E  B69D               	btfsc	3997,3,c	;volatile
 12227  000080  A69E               	btfss	3998,3,c	;volatile
 12228  000082  D003               	goto	i2l328
 12229                           
 12230                           ;interrupt_manager.c: 99: {
 12231                           ;interrupt_manager.c: 100: I2C1_ISR();
 12232  000084  EC1C  F007         	call	_I2C1_ISR	;wreg free
 12233                           
 12234                           ;interrupt_manager.c: 101: }
 12235  000088  D005               	goto	i2l332
 12236  00008A                     i2l328:
 12237                           
 12238                           ;interrupt_manager.c: 102: else if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
 12239  00008A  B6A0               	btfsc	4000,3,c	;volatile
 12240  00008C  A6A1               	btfss	4001,3,c	;volatile
 12241  00008E  D002               	goto	i2l332
 12242                           
 12243                           ;interrupt_manager.c: 103: {
 12244                           ;interrupt_manager.c: 104: I2C1_BusCollisionISR();
 12245  000090  EC2F  F018         	call	_I2C1_BusCollisionISR	;wreg free
 12246  000094                     i2l332:
 12247  000094  C01A  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 12248  000098  C019  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 12249  00009C  C018  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 12250  0000A0  C017  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 12251  0000A4  C016  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 12252  0000A8  C015  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 12253  0000AC  C014  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 12254  0000B0  C013  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 12255  0000B4  C012  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 12256  0000B8  C011  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 12257  0000BC  C010  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 12258  0000C0  C00F  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 12259  0000C4  C00E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 12260  0000C8  C00D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 12261  0000CC  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12262  0000CE  0011               	retfie		f
 12263  0000D0                     __end_of_INTERRUPT_InterruptManager:
 12264                           	opt stack 0
 12265                           tosu	equ	0xFFF
 12266                           tosh	equ	0xFFE
 12267                           tosl	equ	0xFFD
 12268                           pclatu	equ	0xFFB
 12269                           pclath	equ	0xFFA
 12270                           tblptru	equ	0xFF8
 12271                           tblptrh	equ	0xFF7
 12272                           tblptrl	equ	0xFF6
 12273                           tablat	equ	0xFF5
 12274                           prodh	equ	0xFF4
 12275                           prodl	equ	0xFF3
 12276                           intcon	equ	0xFF2
 12277                           intcon2	equ	0xFF1
 12278                           postinc0	equ	0xFEE
 12279                           fsr0h	equ	0xFEA
 12280                           fsr0l	equ	0xFE9
 12281                           wreg	equ	0xFE8
 12282                           fsr1h	equ	0xFE2
 12283                           fsr1l	equ	0xFE1
 12284                           indf2	equ	0xFDF
 12285                           postinc2	equ	0xFDE
 12286                           postdec2	equ	0xFDD
 12287                           plusw2	equ	0xFDB
 12288                           fsr2h	equ	0xFDA
 12289                           fsr2l	equ	0xFD9
 12290                           status	equ	0xFD8
 12291                           
 12292 ;; *************** function _TMR2_ISR *****************
 12293 ;; Defined at:
 12294 ;;		line 120 in file "mcc_generated_files/tmr2.c"
 12295 ;; Parameters:    Size  Location     Type
 12296 ;;		None
 12297 ;; Auto vars:     Size  Location     Type
 12298 ;;		None
 12299 ;; Return value:  Size  Location     Type
 12300 ;;                  2  294[None  ] int 
 12301 ;; Registers used:
 12302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 12303 ;; Tracked objects:
 12304 ;;		On entry : 0/0
 12305 ;;		On exit  : 0/0
 12306 ;;		Unchanged: 0/0
 12307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12308 ;;      Params:         0       0       0       0       0       0       0
 12309 ;;      Locals:         0       0       0       0       0       0       0
 12310 ;;      Temps:          0       0       0       0       0       0       0
 12311 ;;      Totals:         0       0       0       0       0       0       0
 12312 ;;Total ram usage:        0 bytes
 12313 ;; Hardware stack levels used:    1
 12314 ;; Hardware stack levels required when called:    2
 12315 ;; This function calls:
 12316 ;;		_TMR2_CallBack
 12317 ;; This function is called by:
 12318 ;;		_INTERRUPT_InterruptManager
 12319 ;; This function uses a non-reentrant model
 12320 ;;
 12321                           
 12322                           	psect	text61
 12323  003046                     __ptext61:
 12324                           	opt stack 0
 12325  003046                     _TMR2_ISR:
 12326                           	opt stack 21
 12327                           
 12328                           ;tmr2.c: 124: PIR1bits.TMR2IF = 0;
 12329                           
 12330                           ;incstack = 0
 12331  003046  929E               	bcf	3998,1,c	;volatile
 12332                           
 12333                           ;tmr2.c: 128: TMR2_CallBack();
 12334  003048  EC56  F008         	call	_TMR2_CallBack	;wreg free
 12335  00304C  0012               	return		;funcret
 12336  00304E                     __end_of_TMR2_ISR:
 12337                           	opt stack 0
 12338                           tosu	equ	0xFFF
 12339                           tosh	equ	0xFFE
 12340                           tosl	equ	0xFFD
 12341                           pclatu	equ	0xFFB
 12342                           pclath	equ	0xFFA
 12343                           tblptru	equ	0xFF8
 12344                           tblptrh	equ	0xFF7
 12345                           tblptrl	equ	0xFF6
 12346                           tablat	equ	0xFF5
 12347                           prodh	equ	0xFF4
 12348                           prodl	equ	0xFF3
 12349                           intcon	equ	0xFF2
 12350                           intcon2	equ	0xFF1
 12351                           postinc0	equ	0xFEE
 12352                           fsr0h	equ	0xFEA
 12353                           fsr0l	equ	0xFE9
 12354                           wreg	equ	0xFE8
 12355                           fsr1h	equ	0xFE2
 12356                           fsr1l	equ	0xFE1
 12357                           indf2	equ	0xFDF
 12358                           postinc2	equ	0xFDE
 12359                           postdec2	equ	0xFDD
 12360                           plusw2	equ	0xFDB
 12361                           fsr2h	equ	0xFDA
 12362                           fsr2l	equ	0xFD9
 12363                           status	equ	0xFD8
 12364                           
 12365 ;; *************** function _TMR2_CallBack *****************
 12366 ;; Defined at:
 12367 ;;		line 131 in file "mcc_generated_files/tmr2.c"
 12368 ;; Parameters:    Size  Location     Type
 12369 ;;		None
 12370 ;; Auto vars:     Size  Location     Type
 12371 ;;  i               2    2[COMRAM] int 
 12372 ;; Return value:  Size  Location     Type
 12373 ;;                  1    wreg      void 
 12374 ;; Registers used:
 12375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 12376 ;; Tracked objects:
 12377 ;;		On entry : 0/0
 12378 ;;		On exit  : 0/0
 12379 ;;		Unchanged: 0/0
 12380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12381 ;;      Params:         0       0       0       0       0       0       0
 12382 ;;      Locals:         2       0       0       0       0       0       0
 12383 ;;      Temps:          2       0       0       0       0       0       0
 12384 ;;      Totals:         4       0       0       0       0       0       0
 12385 ;;Total ram usage:        4 bytes
 12386 ;; Hardware stack levels used:    1
 12387 ;; Hardware stack levels required when called:    1
 12388 ;; This function calls:
 12389 ;;		Absolute function
 12390 ;;		_TMR2_DefaultInterruptHandler
 12391 ;; This function is called by:
 12392 ;;		_TMR2_ISR
 12393 ;; This function uses a non-reentrant model
 12394 ;;
 12395                           
 12396                           	psect	text62
 12397  0010AC                     __ptext62:
 12398                           	opt stack 0
 12399  0010AC                     _TMR2_CallBack:
 12400                           	opt stack 21
 12401                           
 12402                           ;tmr2.c: 133: int i = 0;
 12403                           
 12404                           ;incstack = 0
 12405  0010AC  0E00               	movlw	0
 12406  0010AE  6E04               	movwf	TMR2_CallBack@i+1,c
 12407  0010B0  0E00               	movlw	0
 12408  0010B2  6E03               	movwf	TMR2_CallBack@i,c
 12409                           
 12410                           ;tmr2.c: 134: while (i <= 5) {
 12411  0010B4  D0C3               	goto	i2l452
 12412  0010B6                     i2l4683:
 12413                           
 12414                           ;tmr2.c: 136: if (LEDNUM_ENAB[i] == 1) {
 12415  0010B6  90D8               	bcf	status,0,c
 12416  0010B8  3403               	rlcf	TMR2_CallBack@i,w,c
 12417  0010BA  6ED9               	movwf	fsr2l,c
 12418  0010BC  3404               	rlcf	TMR2_CallBack@i+1,w,c
 12419  0010BE  6EDA               	movwf	fsr2h,c
 12420  0010C0  0E98               	movlw	low _LEDNUM_ENAB
 12421  0010C2  26D9               	addwf	fsr2l,f,c
 12422  0010C4  0E00               	movlw	high _LEDNUM_ENAB
 12423  0010C6  22DA               	addwfc	fsr2h,f,c
 12424  0010C8  04DE               	decf	postinc2,w,c
 12425  0010CA  10DE               	iorwf	postinc2,w,c
 12426  0010CC  B4D8               	btfsc	status,2,c
 12427  0010CE  D098               	goto	i2l4701
 12428  0010D0  D0AF               	goto	i2l4703
 12429  0010D2                     i2l459:
 12430  0010D2  B28B               	btfsc	3979,1,c	;volatile
 12431  0010D4  D002               	goto	i2u397_40
 12432  0010D6  828B               	bsf	3979,1,c	;volatile
 12433  0010D8  D03B               	goto	i2l4691
 12434  0010DA                     i2u397_40:
 12435  0010DA  928B               	bcf	3979,1,c	;volatile
 12436                           
 12437                           ;tmr2.c: 142: break;
 12438  0010DC  D039               	goto	i2l4691
 12439  0010DE                     i2l463:
 12440  0010DE  BC89               	btfsc	3977,6,c	;volatile
 12441  0010E0  D002               	goto	i2u399_40
 12442  0010E2  8C89               	bsf	3977,6,c	;volatile
 12443  0010E4  D035               	goto	i2l4691
 12444  0010E6                     i2u399_40:
 12445  0010E6  9C89               	bcf	3977,6,c	;volatile
 12446                           
 12447                           ;tmr2.c: 145: break;
 12448  0010E8  D033               	goto	i2l4691
 12449  0010EA                     i2l466:
 12450  0010EA  BE89               	btfsc	3977,7,c	;volatile
 12451  0010EC  D002               	goto	i2u401_40
 12452  0010EE  8E89               	bsf	3977,7,c	;volatile
 12453  0010F0  D02F               	goto	i2l4691
 12454  0010F2                     i2u401_40:
 12455  0010F2  9E89               	bcf	3977,7,c	;volatile
 12456                           
 12457                           ;tmr2.c: 148: break;
 12458  0010F4  D02D               	goto	i2l4691
 12459  0010F6                     i2l469:
 12460  0010F6  B48D               	btfsc	3981,2,c	;volatile
 12461  0010F8  D002               	goto	i2u403_40
 12462  0010FA  848D               	bsf	3981,2,c	;volatile
 12463  0010FC  D029               	goto	i2l4691
 12464  0010FE                     i2u403_40:
 12465  0010FE  948D               	bcf	3981,2,c	;volatile
 12466                           
 12467                           ;tmr2.c: 151: break;
 12468  001100  D027               	goto	i2l4691
 12469  001102                     i2l472:
 12470  001102  B28D               	btfsc	3981,1,c	;volatile
 12471  001104  D002               	goto	i2u405_40
 12472  001106  828D               	bsf	3981,1,c	;volatile
 12473  001108  D023               	goto	i2l4691
 12474  00110A                     i2u405_40:
 12475  00110A  928D               	bcf	3981,1,c	;volatile
 12476                           
 12477                           ;tmr2.c: 154: break;
 12478  00110C  D021               	goto	i2l4691
 12479  00110E                     i2l475:
 12480  00110E  B08D               	btfsc	3981,0,c	;volatile
 12481  001110  D002               	goto	i2u407_40
 12482  001112  808D               	bsf	3981,0,c	;volatile
 12483  001114  D01D               	goto	i2l4691
 12484  001116                     i2u407_40:
 12485  001116  908D               	bcf	3981,0,c	;volatile
 12486                           
 12487                           ;tmr2.c: 158: }
 12488                           
 12489                           ;tmr2.c: 157: break;
 12490  001118  D01B               	goto	i2l4691
 12491  00111A                     i2l4689:
 12492  00111A  C003  F001         	movff	TMR2_CallBack@i,??_TMR2_CallBack
 12493  00111E  C004  F002         	movff	TMR2_CallBack@i+1,??_TMR2_CallBack+1
 12494                           
 12495                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12496                           ; Switch size 1, requested type "space"
 12497                           ; Number of cases is 1, Range of values is 0 to 0
 12498                           ; switch strategies available:
 12499                           ; Name         Instructions Cycles
 12500                           ; simple_byte            4     3 (average)
 12501                           ;	Chosen strategy is simple_byte
 12502  001122  5002               	movf	??_TMR2_CallBack+1,w,c
 12503  001124  0A00               	xorlw	0	; case 0
 12504  001126  A4D8               	btfss	status,2,c
 12505  001128  D013               	goto	i2l4691
 12506                           
 12507                           ; Switch size 1, requested type "space"
 12508                           ; Number of cases is 6, Range of values is 0 to 5
 12509                           ; switch strategies available:
 12510                           ; Name         Instructions Cycles
 12511                           ; simple_byte           19    10 (average)
 12512                           ;	Chosen strategy is simple_byte
 12513  00112A  5001               	movf	??_TMR2_CallBack,w,c
 12514  00112C  0A00               	xorlw	0	; case 0
 12515  00112E  B4D8               	btfsc	status,2,c
 12516  001130  D7D0               	goto	i2l459
 12517  001132  0A01               	xorlw	1	; case 1
 12518  001134  B4D8               	btfsc	status,2,c
 12519  001136  D7D3               	goto	i2l463
 12520  001138  0A03               	xorlw	3	; case 2
 12521  00113A  B4D8               	btfsc	status,2,c
 12522  00113C  D7D6               	goto	i2l466
 12523  00113E  0A01               	xorlw	1	; case 3
 12524  001140  B4D8               	btfsc	status,2,c
 12525  001142  D7D9               	goto	i2l469
 12526  001144  0A07               	xorlw	7	; case 4
 12527  001146  B4D8               	btfsc	status,2,c
 12528  001148  D7DC               	goto	i2l472
 12529  00114A  0A01               	xorlw	1	; case 5
 12530  00114C  B4D8               	btfsc	status,2,c
 12531  00114E  D7DF               	goto	i2l475
 12532  001150                     i2l4691:
 12533                           
 12534                           ;tmr2.c: 159: LEDState[i] = 1;
 12535  001150  90D8               	bcf	status,0,c
 12536  001152  3403               	rlcf	TMR2_CallBack@i,w,c
 12537  001154  6ED9               	movwf	fsr2l,c
 12538  001156  3404               	rlcf	TMR2_CallBack@i+1,w,c
 12539  001158  6EDA               	movwf	fsr2h,c
 12540  00115A  0EA4               	movlw	low _LEDState
 12541  00115C  26D9               	addwf	fsr2l,f,c
 12542  00115E  0E00               	movlw	high _LEDState
 12543  001160  22DA               	addwfc	fsr2h,f,c
 12544  001162  0E01               	movlw	1
 12545  001164  D049               	goto	L4
 12546  001166                     i2l481:
 12547  001166  B28B               	btfsc	3979,1,c	;volatile
 12548  001168  D002               	goto	i2u409_40
 12549  00116A  828B               	bsf	3979,1,c	;volatile
 12550  00116C  D03B               	goto	i2l4697
 12551  00116E                     i2u409_40:
 12552  00116E  928B               	bcf	3979,1,c	;volatile
 12553                           
 12554                           ;tmr2.c: 165: break;
 12555  001170  D039               	goto	i2l4697
 12556  001172                     i2l485:
 12557  001172  BC89               	btfsc	3977,6,c	;volatile
 12558  001174  D002               	goto	i2u411_40
 12559  001176  8C89               	bsf	3977,6,c	;volatile
 12560  001178  D035               	goto	i2l4697
 12561  00117A                     i2u411_40:
 12562  00117A  9C89               	bcf	3977,6,c	;volatile
 12563                           
 12564                           ;tmr2.c: 168: break;
 12565  00117C  D033               	goto	i2l4697
 12566  00117E                     i2l488:
 12567  00117E  BE89               	btfsc	3977,7,c	;volatile
 12568  001180  D002               	goto	i2u413_40
 12569  001182  8E89               	bsf	3977,7,c	;volatile
 12570  001184  D02F               	goto	i2l4697
 12571  001186                     i2u413_40:
 12572  001186  9E89               	bcf	3977,7,c	;volatile
 12573                           
 12574                           ;tmr2.c: 171: break;
 12575  001188  D02D               	goto	i2l4697
 12576  00118A                     i2l491:
 12577  00118A  B48D               	btfsc	3981,2,c	;volatile
 12578  00118C  D002               	goto	i2u415_40
 12579  00118E  848D               	bsf	3981,2,c	;volatile
 12580  001190  D029               	goto	i2l4697
 12581  001192                     i2u415_40:
 12582  001192  948D               	bcf	3981,2,c	;volatile
 12583                           
 12584                           ;tmr2.c: 174: break;
 12585  001194  D027               	goto	i2l4697
 12586  001196                     i2l494:
 12587  001196  B28D               	btfsc	3981,1,c	;volatile
 12588  001198  D002               	goto	i2u417_40
 12589  00119A  828D               	bsf	3981,1,c	;volatile
 12590  00119C  D023               	goto	i2l4697
 12591  00119E                     i2u417_40:
 12592  00119E  928D               	bcf	3981,1,c	;volatile
 12593                           
 12594                           ;tmr2.c: 177: break;
 12595  0011A0  D021               	goto	i2l4697
 12596  0011A2                     i2l497:
 12597  0011A2  B08D               	btfsc	3981,0,c	;volatile
 12598  0011A4  D002               	goto	i2u419_40
 12599  0011A6  808D               	bsf	3981,0,c	;volatile
 12600  0011A8  D01D               	goto	i2l4697
 12601  0011AA                     i2u419_40:
 12602  0011AA  908D               	bcf	3981,0,c	;volatile
 12603                           
 12604                           ;tmr2.c: 181: }
 12605                           
 12606                           ;tmr2.c: 180: break;
 12607  0011AC  D01B               	goto	i2l4697
 12608  0011AE                     i2l4695:
 12609  0011AE  C003  F001         	movff	TMR2_CallBack@i,??_TMR2_CallBack
 12610  0011B2  C004  F002         	movff	TMR2_CallBack@i+1,??_TMR2_CallBack+1
 12611                           
 12612                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12613                           ; Switch size 1, requested type "space"
 12614                           ; Number of cases is 1, Range of values is 0 to 0
 12615                           ; switch strategies available:
 12616                           ; Name         Instructions Cycles
 12617                           ; simple_byte            4     3 (average)
 12618                           ;	Chosen strategy is simple_byte
 12619  0011B6  5002               	movf	??_TMR2_CallBack+1,w,c
 12620  0011B8  0A00               	xorlw	0	; case 0
 12621  0011BA  A4D8               	btfss	status,2,c
 12622  0011BC  D013               	goto	i2l4697
 12623                           
 12624                           ; Switch size 1, requested type "space"
 12625                           ; Number of cases is 6, Range of values is 0 to 5
 12626                           ; switch strategies available:
 12627                           ; Name         Instructions Cycles
 12628                           ; simple_byte           19    10 (average)
 12629                           ;	Chosen strategy is simple_byte
 12630  0011BE  5001               	movf	??_TMR2_CallBack,w,c
 12631  0011C0  0A00               	xorlw	0	; case 0
 12632  0011C2  B4D8               	btfsc	status,2,c
 12633  0011C4  D7D0               	goto	i2l481
 12634  0011C6  0A01               	xorlw	1	; case 1
 12635  0011C8  B4D8               	btfsc	status,2,c
 12636  0011CA  D7D3               	goto	i2l485
 12637  0011CC  0A03               	xorlw	3	; case 2
 12638  0011CE  B4D8               	btfsc	status,2,c
 12639  0011D0  D7D6               	goto	i2l488
 12640  0011D2  0A01               	xorlw	1	; case 3
 12641  0011D4  B4D8               	btfsc	status,2,c
 12642  0011D6  D7D9               	goto	i2l491
 12643  0011D8  0A07               	xorlw	7	; case 4
 12644  0011DA  B4D8               	btfsc	status,2,c
 12645  0011DC  D7DC               	goto	i2l494
 12646  0011DE  0A01               	xorlw	1	; case 5
 12647  0011E0  B4D8               	btfsc	status,2,c
 12648  0011E2  D7DF               	goto	i2l497
 12649  0011E4                     i2l4697:
 12650                           
 12651                           ;tmr2.c: 182: LEDState[i] = 0;
 12652  0011E4  90D8               	bcf	status,0,c
 12653  0011E6  3403               	rlcf	TMR2_CallBack@i,w,c
 12654  0011E8  6ED9               	movwf	fsr2l,c
 12655  0011EA  3404               	rlcf	TMR2_CallBack@i+1,w,c
 12656  0011EC  6EDA               	movwf	fsr2h,c
 12657  0011EE  0EA4               	movlw	low _LEDState
 12658  0011F0  26D9               	addwf	fsr2l,f,c
 12659  0011F2  0E00               	movlw	high _LEDState
 12660  0011F4  22DA               	addwfc	fsr2h,f,c
 12661  0011F6  0E00               	movlw	0
 12662  0011F8                     L4:
 12663  0011F8  6EDE               	movwf	postinc2,c
 12664  0011FA  0E00               	movlw	0
 12665  0011FC  6EDD               	movwf	postdec2,c
 12666                           
 12667                           ;tmr2.c: 184: }
 12668                           
 12669                           ;tmr2.c: 183: break;
 12670  0011FE  D018               	goto	i2l4703
 12671  001200                     i2l4701:
 12672  001200  90D8               	bcf	status,0,c
 12673  001202  3403               	rlcf	TMR2_CallBack@i,w,c
 12674  001204  6ED9               	movwf	fsr2l,c
 12675  001206  3404               	rlcf	TMR2_CallBack@i+1,w,c
 12676  001208  6EDA               	movwf	fsr2h,c
 12677  00120A  0EA4               	movlw	low _LEDState
 12678  00120C  26D9               	addwf	fsr2l,f,c
 12679  00120E  0E00               	movlw	high _LEDState
 12680  001210  22DA               	addwfc	fsr2h,f,c
 12681  001212  CFDE F001          	movff	postinc2,??_TMR2_CallBack
 12682  001216  CFDD F002          	movff	postdec2,??_TMR2_CallBack+1
 12683                           
 12684                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12685                           ; Switch size 1, requested type "space"
 12686                           ; Number of cases is 1, Range of values is 0 to 0
 12687                           ; switch strategies available:
 12688                           ; Name         Instructions Cycles
 12689                           ; simple_byte            4     3 (average)
 12690                           ;	Chosen strategy is simple_byte
 12691  00121A  5002               	movf	??_TMR2_CallBack+1,w,c
 12692  00121C  0A00               	xorlw	0	; case 0
 12693  00121E  A4D8               	btfss	status,2,c
 12694  001220  D007               	goto	i2l4703
 12695                           
 12696                           ; Switch size 1, requested type "space"
 12697                           ; Number of cases is 2, Range of values is 0 to 1
 12698                           ; switch strategies available:
 12699                           ; Name         Instructions Cycles
 12700                           ; simple_byte            7     4 (average)
 12701                           ;	Chosen strategy is simple_byte
 12702  001222  5001               	movf	??_TMR2_CallBack,w,c
 12703  001224  0A00               	xorlw	0	; case 0
 12704  001226  B4D8               	btfsc	status,2,c
 12705  001228  D778               	goto	i2l4689
 12706  00122A  0A01               	xorlw	1	; case 1
 12707  00122C  B4D8               	btfsc	status,2,c
 12708  00122E  D7BF               	goto	i2l4695
 12709  001230                     i2l4703:
 12710                           
 12711                           ;tmr2.c: 185: }
 12712                           ;tmr2.c: 186: i = i + 1;
 12713  001230  0E01               	movlw	1
 12714  001232  2403               	addwf	TMR2_CallBack@i,w,c
 12715  001234  6E03               	movwf	TMR2_CallBack@i,c
 12716  001236  0E00               	movlw	0
 12717  001238  2004               	addwfc	TMR2_CallBack@i+1,w,c
 12718  00123A  6E04               	movwf	TMR2_CallBack@i+1,c
 12719  00123C                     i2l452:
 12720  00123C  BE04               	btfsc	TMR2_CallBack@i+1,7,c
 12721  00123E  D73B               	goto	i2l4683
 12722  001240  5004               	movf	TMR2_CallBack@i+1,w,c
 12723  001242  E104               	bnz	i2l4705
 12724  001244  0E06               	movlw	6
 12725  001246  5C03               	subwf	TMR2_CallBack@i,w,c
 12726  001248  A0D8               	btfss	status,0,c
 12727  00124A  D735               	goto	i2l4683
 12728  00124C                     i2l4705:
 12729                           
 12730                           ;tmr2.c: 187: }
 12731                           ;tmr2.c: 191: if(TMR2_InterruptHandler)
 12732  00124C  0100               	movlb	0	; () banked
 12733  00124E  51FE               	movf	_TMR2_InterruptHandler& (0+255),w,b
 12734  001250  0100               	movlb	0	; () banked
 12735  001252  11FF               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 12736  001254  B4D8               	btfsc	status,2,c
 12737  001256  0012               	return	
 12738                           
 12739                           ; BSR set to: 0
 12740                           ;tmr2.c: 192: {
 12741                           ;tmr2.c: 193: TMR2_InterruptHandler();
 12742  001258  D801               	call	i2u423_48
 12743  00125A  0012               	return	
 12744  00125C                     i2u423_48:
 12745  00125C  0005               	push	
 12746  00125E  0100               	movlb	0	; () banked
 12747  001260  6EFA               	movwf	pclath,c
 12748  001262  51FE               	movf	_TMR2_InterruptHandler& (0+255),w,b
 12749  001264  6EFD               	movwf	tosl,c
 12750  001266  51FF               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 12751  001268  6EFE               	movwf	tosh,c
 12752  00126A  50F8               	movf	tblptru,w,c
 12753  00126C  6EFF               	movwf	tosu,c
 12754  00126E  50FA               	movf	pclath,w,c
 12755  001270  0012               	return		;indir
 12756  001272                     __end_of_TMR2_CallBack:
 12757                           	opt stack 0
 12758                           tosu	equ	0xFFF
 12759                           tosh	equ	0xFFE
 12760                           tosl	equ	0xFFD
 12761                           pclatu	equ	0xFFB
 12762                           pclath	equ	0xFFA
 12763                           tblptru	equ	0xFF8
 12764                           tblptrh	equ	0xFF7
 12765                           tblptrl	equ	0xFF6
 12766                           tablat	equ	0xFF5
 12767                           prodh	equ	0xFF4
 12768                           prodl	equ	0xFF3
 12769                           intcon	equ	0xFF2
 12770                           intcon2	equ	0xFF1
 12771                           postinc0	equ	0xFEE
 12772                           fsr0h	equ	0xFEA
 12773                           fsr0l	equ	0xFE9
 12774                           wreg	equ	0xFE8
 12775                           fsr1h	equ	0xFE2
 12776                           fsr1l	equ	0xFE1
 12777                           indf2	equ	0xFDF
 12778                           postinc2	equ	0xFDE
 12779                           postdec2	equ	0xFDD
 12780                           plusw2	equ	0xFDB
 12781                           fsr2h	equ	0xFDA
 12782                           fsr2l	equ	0xFD9
 12783                           status	equ	0xFD8
 12784                           
 12785 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 12786 ;; Defined at:
 12787 ;;		line 297 in file "mcc_generated_files/tmr2.c"
 12788 ;; Parameters:    Size  Location     Type
 12789 ;;		None
 12790 ;; Auto vars:     Size  Location     Type
 12791 ;;		None
 12792 ;; Return value:  Size  Location     Type
 12793 ;;                  1    wreg      void 
 12794 ;; Registers used:
 12795 ;;		None
 12796 ;; Tracked objects:
 12797 ;;		On entry : 0/0
 12798 ;;		On exit  : 0/0
 12799 ;;		Unchanged: 0/0
 12800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12801 ;;      Params:         0       0       0       0       0       0       0
 12802 ;;      Locals:         0       0       0       0       0       0       0
 12803 ;;      Temps:          0       0       0       0       0       0       0
 12804 ;;      Totals:         0       0       0       0       0       0       0
 12805 ;;Total ram usage:        0 bytes
 12806 ;; Hardware stack levels used:    1
 12807 ;; This function calls:
 12808 ;;		Nothing
 12809 ;; This function is called by:
 12810 ;;		_TMR2_Initialize
 12811 ;;		_TMR2_CallBack
 12812 ;; This function uses a non-reentrant model
 12813 ;;
 12814                           
 12815                           	psect	text63
 12816  00305A                     __ptext63:
 12817                           	opt stack 0
 12818  00305A                     _TMR2_DefaultInterruptHandler:
 12819                           	opt stack 21
 12820                           
 12821                           ;incstack = 0
 12822  00305A  0012               	return		;funcret
 12823  00305C                     __end_of_TMR2_DefaultInterruptHandler:
 12824                           	opt stack 0
 12825                           tosu	equ	0xFFF
 12826                           tosh	equ	0xFFE
 12827                           tosl	equ	0xFFD
 12828                           pclatu	equ	0xFFB
 12829                           pclath	equ	0xFFA
 12830                           tblptru	equ	0xFF8
 12831                           tblptrh	equ	0xFF7
 12832                           tblptrl	equ	0xFF6
 12833                           tablat	equ	0xFF5
 12834                           prodh	equ	0xFF4
 12835                           prodl	equ	0xFF3
 12836                           intcon	equ	0xFF2
 12837                           intcon2	equ	0xFF1
 12838                           postinc0	equ	0xFEE
 12839                           fsr0h	equ	0xFEA
 12840                           fsr0l	equ	0xFE9
 12841                           wreg	equ	0xFE8
 12842                           fsr1h	equ	0xFE2
 12843                           fsr1l	equ	0xFE1
 12844                           indf2	equ	0xFDF
 12845                           postinc2	equ	0xFDE
 12846                           postdec2	equ	0xFDD
 12847                           plusw2	equ	0xFDB
 12848                           fsr2h	equ	0xFDA
 12849                           fsr2l	equ	0xFD9
 12850                           status	equ	0xFD8
 12851                           
 12852 ;; *************** function _TMR0_ISR *****************
 12853 ;; Defined at:
 12854 ;;		line 81 in file "mcc_generated_files/tmr0.c"
 12855 ;; Parameters:    Size  Location     Type
 12856 ;;		None
 12857 ;; Auto vars:     Size  Location     Type
 12858 ;;  x               2    4[COMRAM] int 
 12859 ;; Return value:  Size  Location     Type
 12860 ;;                  1    wreg      void 
 12861 ;; Registers used:
 12862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12863 ;; Tracked objects:
 12864 ;;		On entry : 0/0
 12865 ;;		On exit  : 0/0
 12866 ;;		Unchanged: 0/0
 12867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12868 ;;      Params:         0       0       0       0       0       0       0
 12869 ;;      Locals:         2       0       0       0       0       0       0
 12870 ;;      Temps:          0       0       0       0       0       0       0
 12871 ;;      Totals:         2       0       0       0       0       0       0
 12872 ;;Total ram usage:        2 bytes
 12873 ;; Hardware stack levels used:    1
 12874 ;; Hardware stack levels required when called:    1
 12875 ;; This function calls:
 12876 ;;		_ReadButtonState
 12877 ;;		_TMR0_CallBack
 12878 ;; This function is called by:
 12879 ;;		_INTERRUPT_InterruptManager
 12880 ;; This function uses a non-reentrant model
 12881 ;;
 12882                           
 12883                           	psect	text64
 12884  002A12                     __ptext64:
 12885                           	opt stack 0
 12886  002A12                     _TMR0_ISR:
 12887                           	opt stack 22
 12888                           
 12889                           ;tmr0.c: 82: static volatile uint16_t CountCallBack = 0;
 12890                           ;tmr0.c: 85: TMR0H = timer0ReloadVal16bit >> 8;
 12891                           
 12892                           ;incstack = 0
 12893  002A12  5043               	movf	_timer0ReloadVal16bit+1,w,c	;volatile
 12894  002A14  6ED7               	movwf	4055,c	;volatile
 12895                           
 12896                           ;tmr0.c: 86: TMR0L = (uint8_t) timer0ReloadVal16bit;
 12897  002A16  C042  FFD6         	movff	_timer0ReloadVal16bit,4054	;volatile
 12898                           
 12899                           ;tmr0.c: 88: for (int x = 0; x < 8; x++) {
 12900  002A1A  0E00               	movlw	0
 12901  002A1C  6E06               	movwf	TMR0_ISR@x+1,c
 12902  002A1E  0E00               	movlw	0
 12903  002A20  6E05               	movwf	TMR0_ISR@x,c
 12904  002A22                     i2l5257:
 12905  002A22  BE06               	btfsc	TMR0_ISR@x+1,7,c
 12906  002A24  D006               	goto	i2l5261
 12907  002A26  5006               	movf	TMR0_ISR@x+1,w,c
 12908  002A28  E10D               	bnz	i2l5267
 12909  002A2A  0E08               	movlw	8
 12910  002A2C  5C05               	subwf	TMR0_ISR@x,w,c
 12911  002A2E  B0D8               	btfsc	status,0,c
 12912  002A30  D009               	goto	i2l5267
 12913  002A32                     i2l5261:
 12914                           
 12915                           ;tmr0.c: 89: ReadButtonState(x);
 12916  002A32  C005  F001         	movff	TMR0_ISR@x,ReadButtonState@btnnum
 12917  002A36  C006  F002         	movff	TMR0_ISR@x+1,ReadButtonState@btnnum+1
 12918  002A3A  EC1B  F00E         	call	_ReadButtonState	;wreg free
 12919  002A3E  4A05               	infsnz	TMR0_ISR@x,f,c
 12920  002A40  2A06               	incf	TMR0_ISR@x+1,f,c
 12921  002A42  D7EF               	goto	i2l5257
 12922  002A44                     i2l5267:
 12923                           
 12924                           ;tmr0.c: 90: }
 12925                           ;tmr0.c: 91: time++;
 12926  002A44  0100               	movlb	0	; () banked
 12927  002A46  4BDD               	infsnz	_time& (0+255),f,b	;volatile
 12928  002A48  2BDE               	incf	(_time+1)& (0+255),f,b	;volatile
 12929                           
 12930                           ; BSR set to: 0
 12931                           ;tmr0.c: 93: if (++CountCallBack >= 5) {
 12932  002A4A  0100               	movlb	0	; () banked
 12933  002A4C  4BC1               	infsnz	TMR0_ISR@CountCallBack& (0+255),f,b	;volatile
 12934  002A4E  2BC2               	incf	(TMR0_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 12935  002A50  0100               	movlb	0	; () banked
 12936  002A52  51C2               	movf	(TMR0_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 12937  002A54  E105               	bnz	i2u539_40
 12938  002A56  0E05               	movlw	5
 12939  002A58  0100               	movlb	0	; () banked
 12940  002A5A  5DC1               	subwf	TMR0_ISR@CountCallBack& (0+255),w,b	;volatile
 12941  002A5C  A0D8               	btfss	status,0,c
 12942  002A5E  D007               	goto	i2l5275
 12943  002A60                     i2u539_40:
 12944                           
 12945                           ; BSR set to: 0
 12946                           ;tmr0.c: 95: TMR0_CallBack();
 12947  002A60  EC2E  F018         	call	_TMR0_CallBack	;wreg free
 12948                           
 12949                           ;tmr0.c: 98: CountCallBack = 0;
 12950  002A64  0E00               	movlw	0
 12951  002A66  0100               	movlb	0	; () banked
 12952  002A68  6FC2               	movwf	(TMR0_ISR@CountCallBack+1)& (0+255),b	;volatile
 12953  002A6A  0E00               	movlw	0
 12954  002A6C  6FC1               	movwf	TMR0_ISR@CountCallBack& (0+255),b	;volatile
 12955  002A6E                     i2l5275:
 12956                           
 12957                           ; BSR set to: 0
 12958                           ;tmr0.c: 99: }
 12959                           ;tmr0.c: 101: INTCONbits.TMR0IF = 0;
 12960  002A6E  94F2               	bcf	intcon,2,c	;volatile
 12961                           
 12962                           ; BSR set to: 0
 12963  002A70  0012               	return		;funcret
 12964  002A72                     __end_of_TMR0_ISR:
 12965                           	opt stack 0
 12966                           tosu	equ	0xFFF
 12967                           tosh	equ	0xFFE
 12968                           tosl	equ	0xFFD
 12969                           pclatu	equ	0xFFB
 12970                           pclath	equ	0xFFA
 12971                           tblptru	equ	0xFF8
 12972                           tblptrh	equ	0xFF7
 12973                           tblptrl	equ	0xFF6
 12974                           tablat	equ	0xFF5
 12975                           prodh	equ	0xFF4
 12976                           prodl	equ	0xFF3
 12977                           intcon	equ	0xFF2
 12978                           intcon2	equ	0xFF1
 12979                           postinc0	equ	0xFEE
 12980                           fsr0h	equ	0xFEA
 12981                           fsr0l	equ	0xFE9
 12982                           wreg	equ	0xFE8
 12983                           fsr1h	equ	0xFE2
 12984                           fsr1l	equ	0xFE1
 12985                           indf2	equ	0xFDF
 12986                           postinc2	equ	0xFDE
 12987                           postdec2	equ	0xFDD
 12988                           plusw2	equ	0xFDB
 12989                           fsr2h	equ	0xFDA
 12990                           fsr2l	equ	0xFD9
 12991                           status	equ	0xFD8
 12992                           
 12993 ;; *************** function _TMR0_CallBack *****************
 12994 ;; Defined at:
 12995 ;;		line 104 in file "mcc_generated_files/tmr0.c"
 12996 ;; Parameters:    Size  Location     Type
 12997 ;;		None
 12998 ;; Auto vars:     Size  Location     Type
 12999 ;;		None
 13000 ;; Return value:  Size  Location     Type
 13001 ;;                  1    wreg      void 
 13002 ;; Registers used:
 13003 ;;		None
 13004 ;; Tracked objects:
 13005 ;;		On entry : 0/0
 13006 ;;		On exit  : 0/0
 13007 ;;		Unchanged: 0/0
 13008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13009 ;;      Params:         0       0       0       0       0       0       0
 13010 ;;      Locals:         0       0       0       0       0       0       0
 13011 ;;      Temps:          0       0       0       0       0       0       0
 13012 ;;      Totals:         0       0       0       0       0       0       0
 13013 ;;Total ram usage:        0 bytes
 13014 ;; Hardware stack levels used:    1
 13015 ;; This function calls:
 13016 ;;		Nothing
 13017 ;; This function is called by:
 13018 ;;		_TMR0_ISR
 13019 ;; This function uses a non-reentrant model
 13020 ;;
 13021                           
 13022                           	psect	text65
 13023  00305C                     __ptext65:
 13024                           	opt stack 0
 13025  00305C                     _TMR0_CallBack:
 13026                           	opt stack 22
 13027                           
 13028                           ; BSR set to: 0
 13029                           ;incstack = 0
 13030  00305C  0012               	return		;funcret
 13031  00305E                     __end_of_TMR0_CallBack:
 13032                           	opt stack 0
 13033                           tosu	equ	0xFFF
 13034                           tosh	equ	0xFFE
 13035                           tosl	equ	0xFFD
 13036                           pclatu	equ	0xFFB
 13037                           pclath	equ	0xFFA
 13038                           tblptru	equ	0xFF8
 13039                           tblptrh	equ	0xFF7
 13040                           tblptrl	equ	0xFF6
 13041                           tablat	equ	0xFF5
 13042                           prodh	equ	0xFF4
 13043                           prodl	equ	0xFF3
 13044                           intcon	equ	0xFF2
 13045                           intcon2	equ	0xFF1
 13046                           postinc0	equ	0xFEE
 13047                           fsr0h	equ	0xFEA
 13048                           fsr0l	equ	0xFE9
 13049                           wreg	equ	0xFE8
 13050                           fsr1h	equ	0xFE2
 13051                           fsr1l	equ	0xFE1
 13052                           indf2	equ	0xFDF
 13053                           postinc2	equ	0xFDE
 13054                           postdec2	equ	0xFDD
 13055                           plusw2	equ	0xFDB
 13056                           fsr2h	equ	0xFDA
 13057                           fsr2l	equ	0xFD9
 13058                           status	equ	0xFD8
 13059                           
 13060 ;; *************** function _ReadButtonState *****************
 13061 ;; Defined at:
 13062 ;;		line 154 in file "IO.c"
 13063 ;; Parameters:    Size  Location     Type
 13064 ;;  btnnum          2    0[COMRAM] int 
 13065 ;; Auto vars:     Size  Location     Type
 13066 ;;		None
 13067 ;; Return value:  Size  Location     Type
 13068 ;;                  1    wreg      void 
 13069 ;; Registers used:
 13070 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13071 ;; Tracked objects:
 13072 ;;		On entry : 0/0
 13073 ;;		On exit  : 0/0
 13074 ;;		Unchanged: 0/0
 13075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13076 ;;      Params:         2       0       0       0       0       0       0
 13077 ;;      Locals:         0       0       0       0       0       0       0
 13078 ;;      Temps:          2       0       0       0       0       0       0
 13079 ;;      Totals:         4       0       0       0       0       0       0
 13080 ;;Total ram usage:        4 bytes
 13081 ;; Hardware stack levels used:    1
 13082 ;; This function calls:
 13083 ;;		Nothing
 13084 ;; This function is called by:
 13085 ;;		_TMR0_ISR
 13086 ;; This function uses a non-reentrant model
 13087 ;;
 13088                           
 13089                           	psect	text66
 13090  001C36                     __ptext66:
 13091                           	opt stack 0
 13092  001C36                     _ReadButtonState:
 13093                           	opt stack 22
 13094                           
 13095                           ;IO.c: 155: switch (btnnum) {
 13096                           
 13097                           ;incstack = 0
 13098  001C36  D068               	goto	i2l4629
 13099  001C38                     i2l4611:
 13100                           
 13101                           ;IO.c: 157: butnarray[btnnum] = PORTDbits.RD5;
 13102  001C38  0EB0               	movlw	low _butnarray
 13103  001C3A  2401               	addwf	ReadButtonState@btnnum,w,c
 13104  001C3C  6ED9               	movwf	fsr2l,c
 13105  001C3E  0E00               	movlw	high _butnarray
 13106  001C40  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13107  001C42  6EDA               	movwf	fsr2h,c
 13108  001C44  AA83               	btfss	3971,5,c	;volatile
 13109  001C46  D002               	goto	i2u388_40
 13110  001C48  0E01               	movlw	1
 13111  001C4A  D001               	goto	i2u388_46
 13112  001C4C                     i2u388_40:
 13113  001C4C  0E00               	movlw	0
 13114  001C4E                     i2u388_46:
 13115  001C4E  6EDF               	movwf	indf2,c
 13116                           
 13117                           ;IO.c: 158: break;
 13118  001C50  0012               	return	
 13119  001C52                     i2l4613:
 13120                           
 13121                           ;IO.c: 160: butnarray[btnnum] = PORTBbits.RB0;
 13122  001C52  0EB0               	movlw	low _butnarray
 13123  001C54  2401               	addwf	ReadButtonState@btnnum,w,c
 13124  001C56  6ED9               	movwf	fsr2l,c
 13125  001C58  0E00               	movlw	high _butnarray
 13126  001C5A  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13127  001C5C  6EDA               	movwf	fsr2h,c
 13128  001C5E  A081               	btfss	3969,0,c	;volatile
 13129  001C60  D002               	goto	i2u389_40
 13130  001C62  0E01               	movlw	1
 13131  001C64  D001               	goto	i2u389_46
 13132  001C66                     i2u389_40:
 13133  001C66  0E00               	movlw	0
 13134  001C68                     i2u389_46:
 13135  001C68  6EDF               	movwf	indf2,c
 13136                           
 13137                           ;IO.c: 161: break;
 13138  001C6A  0012               	return	
 13139  001C6C                     i2l4615:
 13140                           
 13141                           ;IO.c: 163: butnarray[btnnum] = PORTBbits.RB1;
 13142  001C6C  0EB0               	movlw	low _butnarray
 13143  001C6E  2401               	addwf	ReadButtonState@btnnum,w,c
 13144  001C70  6ED9               	movwf	fsr2l,c
 13145  001C72  0E00               	movlw	high _butnarray
 13146  001C74  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13147  001C76  6EDA               	movwf	fsr2h,c
 13148  001C78  A281               	btfss	3969,1,c	;volatile
 13149  001C7A  D002               	goto	i2u390_40
 13150  001C7C  0E01               	movlw	1
 13151  001C7E  D001               	goto	i2u390_46
 13152  001C80                     i2u390_40:
 13153  001C80  0E00               	movlw	0
 13154  001C82                     i2u390_46:
 13155  001C82  6EDF               	movwf	indf2,c
 13156                           
 13157                           ;IO.c: 164: break;
 13158  001C84  0012               	return	
 13159  001C86                     i2l4617:
 13160                           
 13161                           ;IO.c: 166: butnarray[btnnum] = PORTBbits.RB2;
 13162  001C86  0EB0               	movlw	low _butnarray
 13163  001C88  2401               	addwf	ReadButtonState@btnnum,w,c
 13164  001C8A  6ED9               	movwf	fsr2l,c
 13165  001C8C  0E00               	movlw	high _butnarray
 13166  001C8E  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13167  001C90  6EDA               	movwf	fsr2h,c
 13168  001C92  A481               	btfss	3969,2,c	;volatile
 13169  001C94  D002               	goto	i2u391_40
 13170  001C96  0E01               	movlw	1
 13171  001C98  D001               	goto	i2u391_46
 13172  001C9A                     i2u391_40:
 13173  001C9A  0E00               	movlw	0
 13174  001C9C                     i2u391_46:
 13175  001C9C  6EDF               	movwf	indf2,c
 13176                           
 13177                           ;IO.c: 167: break;
 13178  001C9E  0012               	return	
 13179  001CA0                     i2l4619:
 13180                           
 13181                           ;IO.c: 169: butnarray[btnnum] = PORTBbits.RB4;
 13182  001CA0  0EB0               	movlw	low _butnarray
 13183  001CA2  2401               	addwf	ReadButtonState@btnnum,w,c
 13184  001CA4  6ED9               	movwf	fsr2l,c
 13185  001CA6  0E00               	movlw	high _butnarray
 13186  001CA8  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13187  001CAA  6EDA               	movwf	fsr2h,c
 13188  001CAC  A881               	btfss	3969,4,c	;volatile
 13189  001CAE  D002               	goto	i2u392_40
 13190  001CB0  0E01               	movlw	1
 13191  001CB2  D001               	goto	i2u392_46
 13192  001CB4                     i2u392_40:
 13193  001CB4  0E00               	movlw	0
 13194  001CB6                     i2u392_46:
 13195  001CB6  6EDF               	movwf	indf2,c
 13196                           
 13197                           ;IO.c: 170: break;
 13198  001CB8  0012               	return	
 13199  001CBA                     i2l4621:
 13200                           
 13201                           ;IO.c: 172: butnarray[btnnum] = PORTAbits.RA0;
 13202  001CBA  0EB0               	movlw	low _butnarray
 13203  001CBC  2401               	addwf	ReadButtonState@btnnum,w,c
 13204  001CBE  6ED9               	movwf	fsr2l,c
 13205  001CC0  0E00               	movlw	high _butnarray
 13206  001CC2  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13207  001CC4  6EDA               	movwf	fsr2h,c
 13208  001CC6  A080               	btfss	3968,0,c	;volatile
 13209  001CC8  D002               	goto	i2u393_40
 13210  001CCA  0E01               	movlw	1
 13211  001CCC  D001               	goto	i2u393_46
 13212  001CCE                     i2u393_40:
 13213  001CCE  0E00               	movlw	0
 13214  001CD0                     i2u393_46:
 13215  001CD0  6EDF               	movwf	indf2,c
 13216                           
 13217                           ;IO.c: 173: break;
 13218  001CD2  0012               	return	
 13219  001CD4                     i2l4623:
 13220                           
 13221                           ;IO.c: 175: butnarray[btnnum] = PORTAbits.RA1;
 13222  001CD4  0EB0               	movlw	low _butnarray
 13223  001CD6  2401               	addwf	ReadButtonState@btnnum,w,c
 13224  001CD8  6ED9               	movwf	fsr2l,c
 13225  001CDA  0E00               	movlw	high _butnarray
 13226  001CDC  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13227  001CDE  6EDA               	movwf	fsr2h,c
 13228  001CE0  A280               	btfss	3968,1,c	;volatile
 13229  001CE2  D002               	goto	i2u394_40
 13230  001CE4  0E01               	movlw	1
 13231  001CE6  D001               	goto	i2u394_46
 13232  001CE8                     i2u394_40:
 13233  001CE8  0E00               	movlw	0
 13234  001CEA                     i2u394_46:
 13235  001CEA  6EDF               	movwf	indf2,c
 13236                           
 13237                           ;IO.c: 176: break;
 13238  001CEC  0012               	return	
 13239  001CEE                     i2l4625:
 13240                           
 13241                           ;IO.c: 178: butnarray[btnnum] = PORTAbits.RA2;
 13242  001CEE  0EB0               	movlw	low _butnarray
 13243  001CF0  2401               	addwf	ReadButtonState@btnnum,w,c
 13244  001CF2  6ED9               	movwf	fsr2l,c
 13245  001CF4  0E00               	movlw	high _butnarray
 13246  001CF6  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13247  001CF8  6EDA               	movwf	fsr2h,c
 13248  001CFA  A480               	btfss	3968,2,c	;volatile
 13249  001CFC  D002               	goto	i2u395_40
 13250  001CFE  0E01               	movlw	1
 13251  001D00  D001               	goto	i2u395_46
 13252  001D02                     i2u395_40:
 13253  001D02  0E00               	movlw	0
 13254  001D04                     i2u395_46:
 13255  001D04  6EDF               	movwf	indf2,c
 13256                           
 13257                           ;IO.c: 181: }
 13258                           
 13259                           ;IO.c: 179: break;
 13260  001D06  0012               	return	
 13261  001D08                     i2l4629:
 13262  001D08  C001  F003         	movff	ReadButtonState@btnnum,??_ReadButtonState
 13263  001D0C  C002  F004         	movff	ReadButtonState@btnnum+1,??_ReadButtonState+1
 13264                           
 13265                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13266                           ; Switch size 1, requested type "space"
 13267                           ; Number of cases is 1, Range of values is 0 to 0
 13268                           ; switch strategies available:
 13269                           ; Name         Instructions Cycles
 13270                           ; simple_byte            4     3 (average)
 13271                           ;	Chosen strategy is simple_byte
 13272  001D10  5004               	movf	??_ReadButtonState+1,w,c
 13273  001D12  0A00               	xorlw	0	; case 0
 13274  001D14  A4D8               	btfss	status,2,c
 13275  001D16  0012               	return	
 13276                           
 13277                           ; Switch size 1, requested type "space"
 13278                           ; Number of cases is 8, Range of values is 0 to 7
 13279                           ; switch strategies available:
 13280                           ; Name         Instructions Cycles
 13281                           ; simple_byte           25    13 (average)
 13282                           ;	Chosen strategy is simple_byte
 13283  001D18  5003               	movf	??_ReadButtonState,w,c
 13284  001D1A  0A00               	xorlw	0	; case 0
 13285  001D1C  B4D8               	btfsc	status,2,c
 13286  001D1E  D78C               	goto	i2l4611
 13287  001D20  0A01               	xorlw	1	; case 1
 13288  001D22  B4D8               	btfsc	status,2,c
 13289  001D24  D796               	goto	i2l4613
 13290  001D26  0A03               	xorlw	3	; case 2
 13291  001D28  B4D8               	btfsc	status,2,c
 13292  001D2A  D7A0               	goto	i2l4615
 13293  001D2C  0A01               	xorlw	1	; case 3
 13294  001D2E  B4D8               	btfsc	status,2,c
 13295  001D30  D7AA               	goto	i2l4617
 13296  001D32  0A07               	xorlw	7	; case 4
 13297  001D34  B4D8               	btfsc	status,2,c
 13298  001D36  D7B4               	goto	i2l4619
 13299  001D38  0A01               	xorlw	1	; case 5
 13300  001D3A  B4D8               	btfsc	status,2,c
 13301  001D3C  D7BE               	goto	i2l4621
 13302  001D3E  0A03               	xorlw	3	; case 6
 13303  001D40  B4D8               	btfsc	status,2,c
 13304  001D42  D7C8               	goto	i2l4623
 13305  001D44  0A01               	xorlw	1	; case 7
 13306  001D46  A4D8               	btfss	status,2,c
 13307  001D48  0012               	return	
 13308  001D4A  D7D1               	goto	i2l4625
 13309  001D4C                     __end_of_ReadButtonState:
 13310                           	opt stack 0
 13311                           tosu	equ	0xFFF
 13312                           tosh	equ	0xFFE
 13313                           tosl	equ	0xFFD
 13314                           pclatu	equ	0xFFB
 13315                           pclath	equ	0xFFA
 13316                           tblptru	equ	0xFF8
 13317                           tblptrh	equ	0xFF7
 13318                           tblptrl	equ	0xFF6
 13319                           tablat	equ	0xFF5
 13320                           prodh	equ	0xFF4
 13321                           prodl	equ	0xFF3
 13322                           intcon	equ	0xFF2
 13323                           intcon2	equ	0xFF1
 13324                           postinc0	equ	0xFEE
 13325                           fsr0h	equ	0xFEA
 13326                           fsr0l	equ	0xFE9
 13327                           wreg	equ	0xFE8
 13328                           fsr1h	equ	0xFE2
 13329                           fsr1l	equ	0xFE1
 13330                           indf2	equ	0xFDF
 13331                           postinc2	equ	0xFDE
 13332                           postdec2	equ	0xFDD
 13333                           plusw2	equ	0xFDB
 13334                           fsr2h	equ	0xFDA
 13335                           fsr2l	equ	0xFD9
 13336                           status	equ	0xFD8
 13337                           
 13338 ;; *************** function _I2C1_ISR *****************
 13339 ;; Defined at:
 13340 ;;		line 186 in file "mcc_generated_files/i2c1.c"
 13341 ;; Parameters:    Size  Location     Type
 13342 ;;		None
 13343 ;; Auto vars:     Size  Location     Type
 13344 ;;		None
 13345 ;; Return value:  Size  Location     Type
 13346 ;;                  1    wreg      void 
 13347 ;; Registers used:
 13348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13349 ;; Tracked objects:
 13350 ;;		On entry : 0/0
 13351 ;;		On exit  : 0/0
 13352 ;;		Unchanged: 0/0
 13353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13354 ;;      Params:         0       0       0       0       0       0       0
 13355 ;;      Locals:         0       0       0       0       0       0       0
 13356 ;;      Temps:          2       0       0       0       0       0       0
 13357 ;;      Totals:         2       0       0       0       0       0       0
 13358 ;;Total ram usage:        2 bytes
 13359 ;; Hardware stack levels used:    1
 13360 ;; Hardware stack levels required when called:    1
 13361 ;; This function calls:
 13362 ;;		_I2C1_FunctionComplete
 13363 ;;		_I2C1_Stop
 13364 ;; This function is called by:
 13365 ;;		_INTERRUPT_InterruptManager
 13366 ;; This function uses a non-reentrant model
 13367 ;;
 13368                           
 13369                           	psect	text67
 13370  000E38                     __ptext67:
 13371                           	opt stack 0
 13372  000E38                     _I2C1_ISR:
 13373                           	opt stack 22
 13374                           
 13375                           ;i2c1.c: 189: static uint8_t *pi2c_buf_ptr;
 13376                           ;i2c1.c: 190: static uint16_t i2c_address = 0;
 13377                           ;i2c1.c: 191: static uint8_t i2c_bytes_left = 0;
 13378                           ;i2c1.c: 192: static uint8_t i2c_10bit_address_restart = 0;
 13379                           ;i2c1.c: 194: PIR1bits.SSP1IF = 0;
 13380                           
 13381                           ;incstack = 0
 13382  000E38  969E               	bcf	3998,3,c	;volatile
 13383                           
 13384                           ;i2c1.c: 198: if(SSP1CON1bits.WCOL)
 13385  000E3A  AEC6               	btfss	4038,7,c	;volatile
 13386  000E3C  D114               	goto	i2l7133
 13387                           
 13388                           ;i2c1.c: 199: {
 13389                           ;i2c1.c: 201: SSP1CON1bits.WCOL = 0;
 13390  000E3E  9EC6               	bcf	4038,7,c	;volatile
 13391                           
 13392                           ;i2c1.c: 202: i2c1_state = S_MASTER_IDLE;
 13393  000E40  0E00               	movlw	0
 13394  000E42  6E38               	movwf	_i2c1_state,c
 13395                           
 13396                           ;i2c1.c: 203: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
 13397  000E44  0100               	movlb	0	; () banked
 13398  000E46  EE20 F003          	lfsr	2,3
 13399  000E4A  51D1               	movf	_p_i2c1_current& (0+255),w,b
 13400  000E4C  26D9               	addwf	fsr2l,f,c
 13401  000E4E  51D2               	movf	(_p_i2c1_current+1)& (0+255),w,b
 13402  000E50  22DA               	addwfc	fsr2h,f,c
 13403  000E52  CFDE F004          	movff	postinc2,??_I2C1_ISR
 13404  000E56  CFDD F005          	movff	postdec2,??_I2C1_ISR+1
 13405  000E5A  C004  FFD9         	movff	??_I2C1_ISR,fsr2l
 13406  000E5E  C005  FFDA         	movff	??_I2C1_ISR+1,fsr2h
 13407  000E62  0E01               	movlw	1
 13408  000E64  6EDF               	movwf	indf2,c
 13409                           
 13410                           ; BSR set to: 0
 13411                           ;i2c1.c: 206: p_i2c1_current = (0);
 13412  000E66  0E00               	movlw	0
 13413  000E68  0100               	movlb	0	; () banked
 13414  000E6A  6FD1               	movwf	_p_i2c1_current& (0+255),b
 13415  000E6C  0E00               	movlw	0
 13416  000E6E  0100               	movlb	0	; () banked
 13417  000E70  6FD2               	movwf	(_p_i2c1_current+1)& (0+255),b
 13418                           
 13419                           ; BSR set to: 0
 13420                           ;i2c1.c: 208: return;
 13421  000E72  0012               	return	
 13422  000E74                     i2l60:
 13423                           
 13424                           ;i2c1.c: 216: if(i2c1_object.trStatus.s.empty != 1)
 13425  000E74  0100               	movlb	0	; () banked
 13426  000E76  B3BC               	btfsc	(_i2c1_object+4)& (0+255),1,b
 13427  000E78  0012               	return	
 13428                           
 13429                           ; BSR set to: 0
 13430                           ;i2c1.c: 217: {
 13431                           ;i2c1.c: 219: p_i2c1_current = i2c1_object.pTrHead;
 13432  000E7A  C0BA  F0D1         	movff	_i2c1_object+2,_p_i2c1_current
 13433  000E7E  C0BB  F0D2         	movff	_i2c1_object+3,_p_i2c1_current+1
 13434                           
 13435                           ; BSR set to: 0
 13436                           ;i2c1.c: 220: i2c1_trb_count = i2c1_object.pTrHead->count;
 13437  000E82  C0BA  FFD9         	movff	_i2c1_object+2,fsr2l
 13438  000E86  C0BB  FFDA         	movff	_i2c1_object+3,fsr2h
 13439  000E8A  50DF               	movf	indf2,w,c
 13440  000E8C  6E39               	movwf	_i2c1_trb_count,c
 13441                           
 13442                           ; BSR set to: 0
 13443                           ;i2c1.c: 221: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
 13444  000E8E  0100               	movlb	0	; () banked
 13445  000E90  EE20 F001          	lfsr	2,1
 13446  000E94  51BA               	movf	(_i2c1_object+2)& (0+255),w,b
 13447  000E96  26D9               	addwf	fsr2l,f,c
 13448  000E98  51BB               	movf	(_i2c1_object+3)& (0+255),w,b
 13449  000E9A  22DA               	addwfc	fsr2h,f,c
 13450  000E9C  CFDE F0D3          	movff	postinc2,_p_i2c1_trb_current
 13451  000EA0  CFDD F0D4          	movff	postdec2,_p_i2c1_trb_current+1
 13452                           
 13453                           ; BSR set to: 0
 13454                           ;i2c1.c: 223: i2c1_object.pTrHead++;
 13455  000EA4  0E05               	movlw	5
 13456  000EA6  0100               	movlb	0	; () banked
 13457  000EA8  27BA               	addwf	(_i2c1_object+2)& (0+255),f,b
 13458  000EAA  0E00               	movlw	0
 13459  000EAC  23BB               	addwfc	(_i2c1_object+3)& (0+255),f,b
 13460                           
 13461                           ; BSR set to: 0
 13462                           ;i2c1.c: 226: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
 13463  000EAE  0EF2               	movlw	low (_i2c1_tr_queue+5)
 13464  000EB0  0100               	movlb	0	; () banked
 13465  000EB2  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 13466  000EB4  E10B               	bnz	i2l7025
 13467  000EB6  0E00               	movlw	high (_i2c1_tr_queue+5)
 13468  000EB8  0100               	movlb	0	; () banked
 13469  000EBA  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 13470  000EBC  A4D8               	btfss	status,2,c
 13471  000EBE  D006               	goto	i2l7025
 13472                           
 13473                           ; BSR set to: 0
 13474                           ;i2c1.c: 227: {
 13475                           ;i2c1.c: 229: i2c1_object.pTrHead = i2c1_tr_queue;
 13476  000EC0  0EED               	movlw	low _i2c1_tr_queue
 13477  000EC2  0100               	movlb	0	; () banked
 13478  000EC4  6FBA               	movwf	(_i2c1_object+2)& (0+255),b
 13479  000EC6  0E00               	movlw	high _i2c1_tr_queue
 13480  000EC8  0100               	movlb	0	; () banked
 13481  000ECA  6FBB               	movwf	(_i2c1_object+3)& (0+255),b
 13482  000ECC                     i2l7025:
 13483                           
 13484                           ; BSR set to: 0
 13485                           ;i2c1.c: 230: }
 13486                           ;i2c1.c: 234: i2c1_object.trStatus.s.full = 0;
 13487  000ECC  0100               	movlb	0	; () banked
 13488  000ECE  91BC               	bcf	(_i2c1_object+4)& (0+255),0,b
 13489                           
 13490                           ;i2c1.c: 237: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
 13491  000ED0  0100               	movlb	0	; () banked
 13492  000ED2  51B8               	movf	_i2c1_object& (0+255),w,b
 13493  000ED4  0100               	movlb	0	; () banked
 13494  000ED6  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 13495  000ED8  E108               	bnz	i2l63
 13496  000EDA  0100               	movlb	0	; () banked
 13497  000EDC  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 13498  000EDE  0100               	movlb	0	; () banked
 13499  000EE0  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 13500  000EE2  A4D8               	btfss	status,2,c
 13501  000EE4  D002               	goto	i2l63
 13502                           
 13503                           ; BSR set to: 0
 13504                           ;i2c1.c: 238: {
 13505                           ;i2c1.c: 240: i2c1_object.trStatus.s.empty = 1;
 13506  000EE6  0100               	movlb	0	; () banked
 13507  000EE8  83BC               	bsf	(_i2c1_object+4)& (0+255),1,b
 13508  000EEA                     i2l63:
 13509                           
 13510                           ; BSR set to: 0
 13511                           ;i2c1.c: 241: }
 13512                           ;i2c1.c: 244: SSP1CON2bits.SEN = 1;
 13513  000EEA  80C5               	bsf	4037,0,c	;volatile
 13514                           
 13515                           ; BSR set to: 0
 13516                           ;i2c1.c: 247: i2c1_state = S_MASTER_SEND_ADDR;
 13517  000EEC  0E02               	movlw	2
 13518  000EEE  6E38               	movwf	_i2c1_state,c
 13519                           
 13520                           ; BSR set to: 0
 13521                           ;i2c1.c: 248: }
 13522                           ;i2c1.c: 250: break;
 13523  000EF0  0012               	return	
 13524  000EF2                     i2l65:
 13525                           
 13526                           ;i2c1.c: 257: SSP1CON2bits.RSEN = 1;
 13527  000EF2  82C5               	bsf	4037,1,c	;volatile
 13528                           
 13529                           ;i2c1.c: 260: i2c1_state = S_MASTER_SEND_ADDR;
 13530  000EF4  0E02               	movlw	2
 13531  000EF6  6E38               	movwf	_i2c1_state,c
 13532                           
 13533                           ;i2c1.c: 262: break;
 13534  000EF8  0012               	return	
 13535  000EFA                     i2l66:
 13536                           
 13537                           ;i2c1.c: 266: if(SSP1CON2bits.ACKSTAT)
 13538  000EFA  ACC5               	btfss	4037,6,c	;volatile
 13539  000EFC  D006               	goto	i2l7037
 13540                           
 13541                           ;i2c1.c: 267: {
 13542                           ;i2c1.c: 268: i2c1_object.i2cErrors++;
 13543  000EFE  0100               	movlb	0	; () banked
 13544  000F00  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 13545                           
 13546                           ; BSR set to: 0
 13547                           ;i2c1.c: 269: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 13548  000F02  0E04               	movlw	4
 13549  000F04  EC1F  F016         	call	_I2C1_Stop
 13550                           
 13551                           ;i2c1.c: 270: }
 13552  000F08  0012               	return	
 13553  000F0A                     i2l7037:
 13554                           
 13555                           ;i2c1.c: 271: else
 13556                           ;i2c1.c: 272: {
 13557                           ;i2c1.c: 274: SSP1BUF = (i2c_address >> 1) & 0x00FF;
 13558  000F0A  90D8               	bcf	status,0,c
 13559  000F0C  3041               	rrcf	I2C1_ISR@i2c_address+1,w,c
 13560  000F0E  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
 13561  000F10  3040               	rrcf	I2C1_ISR@i2c_address,w,c
 13562  000F12  6E04               	movwf	??_I2C1_ISR& (0+255),c
 13563  000F14  5004               	movf	??_I2C1_ISR,w,c
 13564  000F16  6EC9               	movwf	4041,c	;volatile
 13565                           
 13566                           ;i2c1.c: 277: if(i2c_address & 0x01)
 13567  000F18  A040               	btfss	I2C1_ISR@i2c_address,0,c
 13568  000F1A  D003               	goto	i2l7043
 13569                           
 13570                           ;i2c1.c: 278: {
 13571                           ;i2c1.c: 281: i2c1_state = S_MASTER_10BIT_RESTART;
 13572  000F1C  0E0B               	movlw	11
 13573  000F1E  6E38               	movwf	_i2c1_state,c
 13574                           
 13575                           ;i2c1.c: 282: }
 13576  000F20  0012               	return	
 13577  000F22                     i2l7043:
 13578                           
 13579                           ;i2c1.c: 283: else
 13580                           ;i2c1.c: 284: {
 13581                           ;i2c1.c: 286: i2c1_state = S_MASTER_SEND_DATA;
 13582  000F22  0E03               	movlw	3
 13583  000F24  6E38               	movwf	_i2c1_state,c
 13584                           
 13585                           ;i2c1.c: 287: }
 13586                           ;i2c1.c: 288: }
 13587                           ;i2c1.c: 290: break;
 13588  000F26  0012               	return	
 13589  000F28                     i2l71:
 13590                           
 13591                           ;i2c1.c: 294: if(SSP1CON2bits.ACKSTAT)
 13592  000F28  ACC5               	btfss	4037,6,c	;volatile
 13593  000F2A  D006               	goto	i2l72
 13594                           
 13595                           ;i2c1.c: 295: {
 13596                           ;i2c1.c: 296: i2c1_object.i2cErrors++;
 13597  000F2C  0100               	movlb	0	; () banked
 13598  000F2E  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 13599                           
 13600                           ; BSR set to: 0
 13601                           ;i2c1.c: 297: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 13602  000F30  0E04               	movlw	4
 13603  000F32  EC1F  F016         	call	_I2C1_Stop
 13604                           
 13605                           ;i2c1.c: 298: }
 13606  000F36  0012               	return	
 13607  000F38                     i2l72:
 13608                           
 13609                           ;i2c1.c: 299: else
 13610                           ;i2c1.c: 300: {
 13611                           ;i2c1.c: 303: SSP1CON2bits.RSEN = 1;
 13612  000F38  82C5               	bsf	4037,1,c	;volatile
 13613                           
 13614                           ;i2c1.c: 307: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 13615  000F3A  C040  F004         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
 13616  000F3E  C041  F005         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
 13617  000F42  C005  F004         	movff	??_I2C1_ISR+1,??_I2C1_ISR
 13618  000F46  6A05               	clrf	??_I2C1_ISR+1,c
 13619  000F48  0E06               	movlw	6
 13620  000F4A  1604               	andwf	??_I2C1_ISR,f,c
 13621  000F4C  0E00               	movlw	0
 13622  000F4E  1605               	andwf	??_I2C1_ISR+1,f,c
 13623  000F50  0EF0               	movlw	240
 13624  000F52  1004               	iorwf	??_I2C1_ISR,w,c
 13625  000F54  6E40               	movwf	I2C1_ISR@i2c_address,c
 13626  000F56  5005               	movf	??_I2C1_ISR+1,w,c
 13627  000F58  6E41               	movwf	I2C1_ISR@i2c_address+1,c
 13628                           
 13629                           ;i2c1.c: 310: i2c_address |= 0x0001;
 13630  000F5A  8040               	bsf	I2C1_ISR@i2c_address,0,c
 13631                           
 13632                           ;i2c1.c: 313: i2c_10bit_address_restart = 1;
 13633  000F5C  0E01               	movlw	1
 13634  000F5E  6E34               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
 13635                           
 13636                           ;i2c1.c: 316: i2c1_state = S_MASTER_SEND_ADDR;
 13637  000F60  0E02               	movlw	2
 13638  000F62  6E38               	movwf	_i2c1_state,c
 13639                           
 13640                           ;i2c1.c: 317: }
 13641                           ;i2c1.c: 319: break;
 13642  000F64  0012               	return	
 13643  000F66                     i2l7057:
 13644                           
 13645                           ;i2c1.c: 334: if(i2c_10bit_address_restart != 1)
 13646  000F66  0434               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
 13647  000F68  B4D8               	btfsc	status,2,c
 13648  000F6A  D01C               	goto	i2l76
 13649                           
 13650                           ;i2c1.c: 335: {
 13651                           ;i2c1.c: 337: i2c_address = p_i2c1_trb_current->address;
 13652  000F6C  C0D3  FFD9         	movff	_p_i2c1_trb_current,fsr2l
 13653  000F70  C0D4  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
 13654  000F74  CFDE F040          	movff	postinc2,I2C1_ISR@i2c_address
 13655  000F78  CFDD F041          	movff	postdec2,I2C1_ISR@i2c_address+1
 13656                           
 13657                           ;i2c1.c: 338: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
 13658  000F7C  0100               	movlb	0	; () banked
 13659  000F7E  EE20 F003          	lfsr	2,3
 13660  000F82  51D3               	movf	_p_i2c1_trb_current& (0+255),w,b
 13661  000F84  26D9               	addwf	fsr2l,f,c
 13662  000F86  51D4               	movf	(_p_i2c1_trb_current+1)& (0+255),w,b
 13663  000F88  22DA               	addwfc	fsr2h,f,c
 13664  000F8A  CFDE F0BF          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
 13665  000F8E  CFDD F0C0          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
 13666                           
 13667                           ; BSR set to: 0
 13668                           ;i2c1.c: 339: i2c_bytes_left = p_i2c1_trb_current->length;
 13669  000F92  0100               	movlb	0	; () banked
 13670  000F94  EE20 F002          	lfsr	2,2
 13671  000F98  51D3               	movf	_p_i2c1_trb_current& (0+255),w,b
 13672  000F9A  26D9               	addwf	fsr2l,f,c
 13673  000F9C  51D4               	movf	(_p_i2c1_trb_current+1)& (0+255),w,b
 13674  000F9E  22DA               	addwfc	fsr2h,f,c
 13675  000FA0  50DF               	movf	indf2,w,c
 13676  000FA2  6E35               	movwf	I2C1_ISR@i2c_bytes_left,c
 13677  000FA4                     i2l76:
 13678                           
 13679                           ;i2c1.c: 362: else
 13680                           ;i2c1.c: 363: {
 13681                           ;i2c1.c: 365: SSP1BUF = i2c_address;
 13682  000FA4  C040  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
 13683                           
 13684                           ;i2c1.c: 366: if(i2c_address & 0x01)
 13685  000FA8  A040               	btfss	I2C1_ISR@i2c_address,0,c
 13686  000FAA  D003               	goto	i2l7077
 13687                           
 13688                           ;i2c1.c: 367: {
 13689                           ;i2c1.c: 369: i2c1_state = S_MASTER_ACK_ADDR;
 13690  000FAC  0E05               	movlw	5
 13691  000FAE  6E38               	movwf	_i2c1_state,c
 13692                           
 13693                           ;i2c1.c: 370: }
 13694  000FB0  0012               	return	
 13695  000FB2                     i2l7077:
 13696                           
 13697                           ;i2c1.c: 371: else
 13698                           ;i2c1.c: 372: {
 13699                           ;i2c1.c: 374: i2c1_state = S_MASTER_SEND_DATA;
 13700  000FB2  0E03               	movlw	3
 13701  000FB4  6E38               	movwf	_i2c1_state,c
 13702                           
 13703                           ;i2c1.c: 375: }
 13704                           ;i2c1.c: 376: }
 13705                           ;i2c1.c: 377: break;
 13706  000FB6  0012               	return	
 13707  000FB8                     i2l82:
 13708                           
 13709                           ;i2c1.c: 382: if(SSP1CON2bits.ACKSTAT)
 13710  000FB8  ACC5               	btfss	4037,6,c	;volatile
 13711  000FBA  D007               	goto	i2l7085
 13712                           
 13713                           ;i2c1.c: 383: {
 13714                           ;i2c1.c: 385: i2c1_object.i2cErrors++;
 13715  000FBC  0100               	movlb	0	; () banked
 13716  000FBE  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 13717                           
 13718                           ; BSR set to: 0
 13719                           ;i2c1.c: 388: SSP1CON2bits.ACKSTAT = 0;
 13720  000FC0  9CC5               	bcf	4037,6,c	;volatile
 13721                           
 13722                           ; BSR set to: 0
 13723                           ;i2c1.c: 391: I2C1_Stop(I2C1_DATA_NO_ACK);
 13724  000FC2  0E05               	movlw	5
 13725  000FC4  EC1F  F016         	call	_I2C1_Stop
 13726                           
 13727                           ;i2c1.c: 393: }
 13728  000FC8  0012               	return	
 13729  000FCA                     i2l7085:
 13730                           
 13731                           ;i2c1.c: 394: else
 13732                           ;i2c1.c: 395: {
 13733                           ;i2c1.c: 397: if(i2c_bytes_left-- == 0U)
 13734  000FCA  0635               	decf	I2C1_ISR@i2c_bytes_left,f,c
 13735  000FCC  2835               	incf	I2C1_ISR@i2c_bytes_left,w,c
 13736  000FCE  A4D8               	btfss	status,2,c
 13737  000FD0  D00F               	goto	i2l7095
 13738                           
 13739                           ;i2c1.c: 398: {
 13740                           ;i2c1.c: 402: p_i2c1_trb_current++;
 13741  000FD2  0E05               	movlw	5
 13742  000FD4  0100               	movlb	0	; () banked
 13743  000FD6  27D3               	addwf	_p_i2c1_trb_current& (0+255),f,b
 13744  000FD8  0E00               	movlw	0
 13745  000FDA  23D4               	addwfc	(_p_i2c1_trb_current+1)& (0+255),f,b
 13746                           
 13747                           ; BSR set to: 0
 13748                           ;i2c1.c: 405: if(--i2c1_trb_count == 0)
 13749  000FDC  2E39               	decfsz	_i2c1_trb_count,f,c
 13750  000FDE  D004               	goto	i2l86
 13751                           
 13752                           ; BSR set to: 0
 13753                           ;i2c1.c: 406: {
 13754                           ;i2c1.c: 407: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 13755  000FE0  0E00               	movlw	0
 13756  000FE2  EC1F  F016         	call	_I2C1_Stop
 13757                           
 13758                           ;i2c1.c: 408: }
 13759  000FE6  0012               	return	
 13760  000FE8                     i2l86:
 13761                           
 13762                           ; BSR set to: 0
 13763                           ;i2c1.c: 409: else
 13764                           ;i2c1.c: 410: {
 13765                           ;i2c1.c: 417: SSP1CON2bits.RSEN = 1;
 13766  000FE8  82C5               	bsf	4037,1,c	;volatile
 13767                           
 13768                           ; BSR set to: 0
 13769                           ;i2c1.c: 420: i2c1_state = S_MASTER_SEND_ADDR;
 13770  000FEA  0E02               	movlw	2
 13771  000FEC  6E38               	movwf	_i2c1_state,c
 13772                           
 13773                           ; BSR set to: 0
 13774                           ;i2c1.c: 422: }
 13775                           ;i2c1.c: 423: }
 13776  000FEE  0012               	return	
 13777  000FF0                     i2l7095:
 13778                           
 13779                           ;i2c1.c: 424: else
 13780                           ;i2c1.c: 425: {
 13781                           ;i2c1.c: 427: SSP1BUF = *pi2c_buf_ptr++;
 13782  000FF0  C0BF  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 13783  000FF4  C0C0  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 13784  000FF8  50DF               	movf	indf2,w,c
 13785  000FFA  6EC9               	movwf	4041,c	;volatile
 13786  000FFC  0100               	movlb	0	; () banked
 13787  000FFE  4BBF               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 13788  001000  2BC0               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 13789                           
 13790                           ; BSR set to: 0
 13791                           ;i2c1.c: 428: }
 13792                           ;i2c1.c: 429: }
 13793                           ;i2c1.c: 430: break;
 13794                           
 13795                           ; BSR set to: 0
 13796  001002  0012               	return	
 13797  001004                     i2l89:
 13798                           
 13799                           ;i2c1.c: 435: if(SSP1CON2bits.ACKSTAT)
 13800  001004  ACC5               	btfss	4037,6,c	;volatile
 13801  001006  D007               	goto	i2l90
 13802                           
 13803                           ;i2c1.c: 436: {
 13804                           ;i2c1.c: 439: i2c1_object.i2cErrors++;
 13805  001008  0100               	movlb	0	; () banked
 13806  00100A  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 13807                           
 13808                           ; BSR set to: 0
 13809                           ;i2c1.c: 442: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 13810  00100C  0E04               	movlw	4
 13811  00100E  EC1F  F016         	call	_I2C1_Stop
 13812                           
 13813                           ;i2c1.c: 445: SSP1CON2bits.ACKSTAT = 0;
 13814  001012  9CC5               	bcf	4037,6,c	;volatile
 13815                           
 13816                           ;i2c1.c: 446: }
 13817  001014  0012               	return	
 13818  001016                     i2l90:
 13819                           
 13820                           ;i2c1.c: 447: else
 13821                           ;i2c1.c: 448: {
 13822                           ;i2c1.c: 449: SSP1CON2bits.RCEN = 1;
 13823  001016  86C5               	bsf	4037,3,c	;volatile
 13824                           
 13825                           ;i2c1.c: 450: i2c1_state = S_MASTER_ACK_RCV_DATA;
 13826  001018  0E08               	movlw	8
 13827  00101A  6E38               	movwf	_i2c1_state,c
 13828                           
 13829                           ;i2c1.c: 451: }
 13830                           ;i2c1.c: 452: break;
 13831  00101C  0012               	return	
 13832  00101E                     i2l7107:
 13833                           
 13834                           ;i2c1.c: 459: i2c1_state = S_MASTER_ACK_RCV_DATA;
 13835  00101E  0E08               	movlw	8
 13836  001020  6E38               	movwf	_i2c1_state,c
 13837                           
 13838                           ;i2c1.c: 462: SSP1CON2bits.RCEN = 1;
 13839  001022  86C5               	bsf	4037,3,c	;volatile
 13840                           
 13841                           ;i2c1.c: 464: break;
 13842  001024  0012               	return	
 13843  001026                     i2l7111:
 13844                           
 13845                           ;i2c1.c: 469: *pi2c_buf_ptr++ = SSP1BUF;
 13846  001026  C0BF  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 13847  00102A  C0C0  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 13848  00102E  CFC9 FFDF          	movff	4041,indf2	;volatile
 13849  001032  0100               	movlb	0	; () banked
 13850  001034  4BBF               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 13851  001036  2BC0               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 13852                           
 13853                           ; BSR set to: 0
 13854                           ;i2c1.c: 472: if(--i2c_bytes_left)
 13855  001038  0E01               	movlw	1
 13856  00103A  5E35               	subwf	I2C1_ISR@i2c_bytes_left,f,c
 13857  00103C  B4D8               	btfsc	status,2,c
 13858  00103E  D004               	goto	i2l94
 13859                           
 13860                           ; BSR set to: 0
 13861                           ;i2c1.c: 473: {
 13862                           ;i2c1.c: 479: SSP1CON2bits.ACKDT = 0;
 13863  001040  9AC5               	bcf	4037,5,c	;volatile
 13864                           
 13865                           ; BSR set to: 0
 13866                           ;i2c1.c: 482: i2c1_state = S_MASTER_RCV_DATA;
 13867  001042  0E06               	movlw	6
 13868  001044  6E38               	movwf	_i2c1_state,c
 13869                           
 13870                           ;i2c1.c: 483: }
 13871  001046  D003               	goto	i2l7123
 13872  001048                     i2l94:
 13873                           
 13874                           ; BSR set to: 0
 13875                           ;i2c1.c: 484: else
 13876                           ;i2c1.c: 485: {
 13877                           ;i2c1.c: 489: SSP1CON2bits.ACKDT = 1;
 13878  001048  8AC5               	bsf	4037,5,c	;volatile
 13879                           
 13880                           ; BSR set to: 0
 13881                           ;i2c1.c: 491: I2C1_FunctionComplete();
 13882  00104A  ECBD  F017         	call	_I2C1_FunctionComplete	;wreg free
 13883  00104E                     i2l7123:
 13884                           
 13885                           ;i2c1.c: 492: }
 13886                           ;i2c1.c: 495: SSP1CON2bits.ACKEN = 1;
 13887  00104E  88C5               	bsf	4037,4,c	;volatile
 13888                           
 13889                           ;i2c1.c: 496: break;
 13890  001050  0012               	return	
 13891  001052                     i2l7125:
 13892                           
 13893                           ;i2c1.c: 499: case S_MASTER_SEND_STOP:
 13894                           ;i2c1.c: 502: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 13895  001052  0E00               	movlw	0
 13896  001054  EC1F  F016         	call	_I2C1_Stop
 13897                           
 13898                           ;i2c1.c: 503: break;
 13899  001058  0012               	return	
 13900  00105A                     i2l7127:
 13901                           
 13902                           ;i2c1.c: 509: i2c1_object.i2cErrors++;
 13903  00105A  0100               	movlb	0	; () banked
 13904  00105C  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 13905                           
 13906                           ; BSR set to: 0
 13907                           ;i2c1.c: 510: I2C1_Stop(I2C1_LOST_STATE);
 13908  00105E  0E06               	movlw	6
 13909  001060  EC1F  F016         	call	_I2C1_Stop
 13910                           
 13911                           ;i2c1.c: 513: }
 13912                           
 13913                           ;i2c1.c: 511: break;
 13914  001064  0012               	return	
 13915  001066                     i2l7133:
 13916  001066  5038               	movf	_i2c1_state,w,c
 13917                           
 13918                           ; Switch size 1, requested type "space"
 13919                           ; Number of cases is 11, Range of values is 0 to 11
 13920                           ; switch strategies available:
 13921                           ; Name         Instructions Cycles
 13922                           ; simple_byte           34    18 (average)
 13923                           ;	Chosen strategy is simple_byte
 13924  001068  0A00               	xorlw	0	; case 0
 13925  00106A  B4D8               	btfsc	status,2,c
 13926  00106C  D703               	goto	i2l60
 13927  00106E  0A01               	xorlw	1	; case 1
 13928  001070  B4D8               	btfsc	status,2,c
 13929  001072  D73F               	goto	i2l65
 13930  001074  0A03               	xorlw	3	; case 2
 13931  001076  B4D8               	btfsc	status,2,c
 13932  001078  D776               	goto	i2l7057
 13933  00107A  0A01               	xorlw	1	; case 3
 13934  00107C  B4D8               	btfsc	status,2,c
 13935  00107E  D79C               	goto	i2l82
 13936  001080  0A07               	xorlw	7	; case 4
 13937  001082  B4D8               	btfsc	status,2,c
 13938  001084  D7E6               	goto	i2l7125
 13939  001086  0A01               	xorlw	1	; case 5
 13940  001088  B4D8               	btfsc	status,2,c
 13941  00108A  D7BC               	goto	i2l89
 13942  00108C  0A03               	xorlw	3	; case 6
 13943  00108E  B4D8               	btfsc	status,2,c
 13944  001090  D7C6               	goto	i2l7107
 13945  001092  0A01               	xorlw	1	; case 7
 13946  001094  B4D8               	btfsc	status,2,c
 13947  001096  D7DD               	goto	i2l7125
 13948  001098  0A0F               	xorlw	15	; case 8
 13949  00109A  B4D8               	btfsc	status,2,c
 13950  00109C  D7C4               	goto	i2l7111
 13951  00109E  0A02               	xorlw	2	; case 10
 13952  0010A0  B4D8               	btfsc	status,2,c
 13953  0010A2  D72B               	goto	i2l66
 13954  0010A4  0A01               	xorlw	1	; case 11
 13955  0010A6  B4D8               	btfsc	status,2,c
 13956  0010A8  D73F               	goto	i2l71
 13957  0010AA  D7D7               	goto	i2l7127
 13958  0010AC                     __end_of_I2C1_ISR:
 13959                           	opt stack 0
 13960                           tosu	equ	0xFFF
 13961                           tosh	equ	0xFFE
 13962                           tosl	equ	0xFFD
 13963                           pclatu	equ	0xFFB
 13964                           pclath	equ	0xFFA
 13965                           tblptru	equ	0xFF8
 13966                           tblptrh	equ	0xFF7
 13967                           tblptrl	equ	0xFF6
 13968                           tablat	equ	0xFF5
 13969                           prodh	equ	0xFF4
 13970                           prodl	equ	0xFF3
 13971                           intcon	equ	0xFF2
 13972                           intcon2	equ	0xFF1
 13973                           postinc0	equ	0xFEE
 13974                           fsr0h	equ	0xFEA
 13975                           fsr0l	equ	0xFE9
 13976                           wreg	equ	0xFE8
 13977                           fsr1h	equ	0xFE2
 13978                           fsr1l	equ	0xFE1
 13979                           indf2	equ	0xFDF
 13980                           postinc2	equ	0xFDE
 13981                           postdec2	equ	0xFDD
 13982                           plusw2	equ	0xFDB
 13983                           fsr2h	equ	0xFDA
 13984                           fsr2l	equ	0xFD9
 13985                           status	equ	0xFD8
 13986                           
 13987 ;; *************** function _I2C1_Stop *****************
 13988 ;; Defined at:
 13989 ;;		line 534 in file "mcc_generated_files/i2c1.c"
 13990 ;; Parameters:    Size  Location     Type
 13991 ;;  completion_c    1    wreg     enum E8678
 13992 ;; Auto vars:     Size  Location     Type
 13993 ;;  completion_c    1    2[COMRAM] enum E8678
 13994 ;; Return value:  Size  Location     Type
 13995 ;;                  1    wreg      void 
 13996 ;; Registers used:
 13997 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13998 ;; Tracked objects:
 13999 ;;		On entry : 0/0
 14000 ;;		On exit  : 0/0
 14001 ;;		Unchanged: 0/0
 14002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14003 ;;      Params:         0       0       0       0       0       0       0
 14004 ;;      Locals:         1       0       0       0       0       0       0
 14005 ;;      Temps:          2       0       0       0       0       0       0
 14006 ;;      Totals:         3       0       0       0       0       0       0
 14007 ;;Total ram usage:        3 bytes
 14008 ;; Hardware stack levels used:    1
 14009 ;; This function calls:
 14010 ;;		Nothing
 14011 ;; This function is called by:
 14012 ;;		_I2C1_ISR
 14013 ;; This function uses a non-reentrant model
 14014 ;;
 14015                           
 14016                           	psect	text68
 14017  002C3E                     __ptext68:
 14018                           	opt stack 0
 14019  002C3E                     _I2C1_Stop:
 14020                           	opt stack 22
 14021                           
 14022                           ;incstack = 0
 14023                           ;I2C1_Stop@completion_code stored from wreg
 14024  002C3E  6E03               	movwf	I2C1_Stop@completion_code,c
 14025                           
 14026                           ;i2c1.c: 537: SSP1CON2bits.PEN = 1;
 14027  002C40  84C5               	bsf	4037,2,c	;volatile
 14028                           
 14029                           ;i2c1.c: 540: if (p_i2c1_current->pTrFlag != (0))
 14030  002C42  0100               	movlb	0	; () banked
 14031  002C44  EE20 F003          	lfsr	2,3
 14032  002C48  51D1               	movf	_p_i2c1_current& (0+255),w,b
 14033  002C4A  26D9               	addwf	fsr2l,f,c
 14034  002C4C  51D2               	movf	(_p_i2c1_current+1)& (0+255),w,b
 14035  002C4E  22DA               	addwfc	fsr2h,f,c
 14036  002C50  50DE               	movf	postinc2,w,c
 14037  002C52  10DE               	iorwf	postinc2,w,c
 14038  002C54  B4D8               	btfsc	status,2,c
 14039  002C56  D011               	goto	i2l6569
 14040                           
 14041                           ; BSR set to: 0
 14042                           ;i2c1.c: 541: {
 14043                           ;i2c1.c: 543: *(p_i2c1_current->pTrFlag) = completion_code;
 14044  002C58  0100               	movlb	0	; () banked
 14045  002C5A  EE20 F003          	lfsr	2,3
 14046  002C5E  51D1               	movf	_p_i2c1_current& (0+255),w,b
 14047  002C60  26D9               	addwf	fsr2l,f,c
 14048  002C62  51D2               	movf	(_p_i2c1_current+1)& (0+255),w,b
 14049  002C64  22DA               	addwfc	fsr2h,f,c
 14050  002C66  CFDE F001          	movff	postinc2,??_I2C1_Stop
 14051  002C6A  CFDD F002          	movff	postdec2,??_I2C1_Stop+1
 14052  002C6E  C001  FFD9         	movff	??_I2C1_Stop,fsr2l
 14053  002C72  C002  FFDA         	movff	??_I2C1_Stop+1,fsr2h
 14054  002C76  C003  FFDF         	movff	I2C1_Stop@completion_code,indf2
 14055  002C7A                     i2l6569:
 14056                           
 14057                           ; BSR set to: 0
 14058                           ;i2c1.c: 544: }
 14059                           ;i2c1.c: 547: i2c1_state = S_MASTER_IDLE;
 14060  002C7A  0E00               	movlw	0
 14061  002C7C  6E38               	movwf	_i2c1_state,c
 14062                           
 14063                           ; BSR set to: 0
 14064  002C7E  0012               	return		;funcret
 14065  002C80                     __end_of_I2C1_Stop:
 14066                           	opt stack 0
 14067                           tosu	equ	0xFFF
 14068                           tosh	equ	0xFFE
 14069                           tosl	equ	0xFFD
 14070                           pclatu	equ	0xFFB
 14071                           pclath	equ	0xFFA
 14072                           tblptru	equ	0xFF8
 14073                           tblptrh	equ	0xFF7
 14074                           tblptrl	equ	0xFF6
 14075                           tablat	equ	0xFF5
 14076                           prodh	equ	0xFF4
 14077                           prodl	equ	0xFF3
 14078                           intcon	equ	0xFF2
 14079                           intcon2	equ	0xFF1
 14080                           postinc0	equ	0xFEE
 14081                           fsr0h	equ	0xFEA
 14082                           fsr0l	equ	0xFE9
 14083                           wreg	equ	0xFE8
 14084                           fsr1h	equ	0xFE2
 14085                           fsr1l	equ	0xFE1
 14086                           indf2	equ	0xFDF
 14087                           postinc2	equ	0xFDE
 14088                           postdec2	equ	0xFDD
 14089                           plusw2	equ	0xFDB
 14090                           fsr2h	equ	0xFDA
 14091                           fsr2l	equ	0xFD9
 14092                           status	equ	0xFD8
 14093                           
 14094 ;; *************** function _I2C1_FunctionComplete *****************
 14095 ;; Defined at:
 14096 ;;		line 516 in file "mcc_generated_files/i2c1.c"
 14097 ;; Parameters:    Size  Location     Type
 14098 ;;		None
 14099 ;; Auto vars:     Size  Location     Type
 14100 ;;		None
 14101 ;; Return value:  Size  Location     Type
 14102 ;;                  1    wreg      void 
 14103 ;; Registers used:
 14104 ;;		wreg, status,2, status,0
 14105 ;; Tracked objects:
 14106 ;;		On entry : 0/0
 14107 ;;		On exit  : 0/0
 14108 ;;		Unchanged: 0/0
 14109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14110 ;;      Params:         0       0       0       0       0       0       0
 14111 ;;      Locals:         0       0       0       0       0       0       0
 14112 ;;      Temps:          0       0       0       0       0       0       0
 14113 ;;      Totals:         0       0       0       0       0       0       0
 14114 ;;Total ram usage:        0 bytes
 14115 ;; Hardware stack levels used:    1
 14116 ;; This function calls:
 14117 ;;		Nothing
 14118 ;; This function is called by:
 14119 ;;		_I2C1_ISR
 14120 ;; This function uses a non-reentrant model
 14121 ;;
 14122                           
 14123                           	psect	text69
 14124  002F7A                     __ptext69:
 14125                           	opt stack 0
 14126  002F7A                     _I2C1_FunctionComplete:
 14127                           	opt stack 22
 14128                           
 14129                           ;i2c1.c: 520: p_i2c1_trb_current++;
 14130                           
 14131                           ; BSR set to: 0
 14132                           ;incstack = 0
 14133  002F7A  0E05               	movlw	5
 14134  002F7C  0100               	movlb	0	; () banked
 14135  002F7E  27D3               	addwf	_p_i2c1_trb_current& (0+255),f,b
 14136  002F80  0E00               	movlw	0
 14137  002F82  23D4               	addwfc	(_p_i2c1_trb_current+1)& (0+255),f,b
 14138                           
 14139                           ; BSR set to: 0
 14140                           ;i2c1.c: 523: if(--i2c1_trb_count == 0)
 14141  002F84  2E39               	decfsz	_i2c1_trb_count,f,c
 14142  002F86  D003               	goto	i2l6577
 14143                           
 14144                           ; BSR set to: 0
 14145                           ;i2c1.c: 524: {
 14146                           ;i2c1.c: 525: i2c1_state = S_MASTER_SEND_STOP;
 14147  002F88  0E04               	movlw	4
 14148  002F8A  6E38               	movwf	_i2c1_state,c
 14149                           
 14150                           ;i2c1.c: 526: }
 14151  002F8C  0012               	return	
 14152  002F8E                     i2l6577:
 14153                           
 14154                           ; BSR set to: 0
 14155                           ;i2c1.c: 527: else
 14156                           ;i2c1.c: 528: {
 14157                           ;i2c1.c: 529: i2c1_state = S_MASTER_RESTART;
 14158  002F8E  0E01               	movlw	1
 14159  002F90  6E38               	movwf	_i2c1_state,c
 14160  002F92  0012               	return	
 14161  002F94                     __end_of_I2C1_FunctionComplete:
 14162                           	opt stack 0
 14163                           tosu	equ	0xFFF
 14164                           tosh	equ	0xFFE
 14165                           tosl	equ	0xFFD
 14166                           pclatu	equ	0xFFB
 14167                           pclath	equ	0xFFA
 14168                           tblptru	equ	0xFF8
 14169                           tblptrh	equ	0xFF7
 14170                           tblptrl	equ	0xFF6
 14171                           tablat	equ	0xFF5
 14172                           prodh	equ	0xFF4
 14173                           prodl	equ	0xFF3
 14174                           intcon	equ	0xFF2
 14175                           intcon2	equ	0xFF1
 14176                           postinc0	equ	0xFEE
 14177                           fsr0h	equ	0xFEA
 14178                           fsr0l	equ	0xFE9
 14179                           wreg	equ	0xFE8
 14180                           fsr1h	equ	0xFE2
 14181                           fsr1l	equ	0xFE1
 14182                           indf2	equ	0xFDF
 14183                           postinc2	equ	0xFDE
 14184                           postdec2	equ	0xFDD
 14185                           plusw2	equ	0xFDB
 14186                           fsr2h	equ	0xFDA
 14187                           fsr2l	equ	0xFD9
 14188                           status	equ	0xFD8
 14189                           
 14190 ;; *************** function _I2C1_BusCollisionISR *****************
 14191 ;; Defined at:
 14192 ;;		line 681 in file "mcc_generated_files/i2c1.c"
 14193 ;; Parameters:    Size  Location     Type
 14194 ;;		None
 14195 ;; Auto vars:     Size  Location     Type
 14196 ;;		None
 14197 ;; Return value:  Size  Location     Type
 14198 ;;                  1    wreg      void 
 14199 ;; Registers used:
 14200 ;;		None
 14201 ;; Tracked objects:
 14202 ;;		On entry : 0/0
 14203 ;;		On exit  : 0/0
 14204 ;;		Unchanged: 0/0
 14205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14206 ;;      Params:         0       0       0       0       0       0       0
 14207 ;;      Locals:         0       0       0       0       0       0       0
 14208 ;;      Temps:          0       0       0       0       0       0       0
 14209 ;;      Totals:         0       0       0       0       0       0       0
 14210 ;;Total ram usage:        0 bytes
 14211 ;; Hardware stack levels used:    1
 14212 ;; This function calls:
 14213 ;;		Nothing
 14214 ;; This function is called by:
 14215 ;;		_INTERRUPT_InterruptManager
 14216 ;; This function uses a non-reentrant model
 14217 ;;
 14218                           
 14219                           	psect	text70
 14220  00305E                     __ptext70:
 14221                           	opt stack 0
 14222  00305E                     _I2C1_BusCollisionISR:
 14223                           	opt stack 23
 14224                           
 14225                           ; BSR set to: 0
 14226                           ;incstack = 0
 14227  00305E  0012               	return		;funcret
 14228  003060                     __end_of_I2C1_BusCollisionISR:
 14229                           	opt stack 0
 14230                           tosu	equ	0xFFF
 14231                           tosh	equ	0xFFE
 14232                           tosl	equ	0xFFD
 14233                           pclatu	equ	0xFFB
 14234                           pclath	equ	0xFFA
 14235                           tblptru	equ	0xFF8
 14236                           tblptrh	equ	0xFF7
 14237                           tblptrl	equ	0xFF6
 14238                           tablat	equ	0xFF5
 14239                           prodh	equ	0xFF4
 14240                           prodl	equ	0xFF3
 14241                           intcon	equ	0xFF2
 14242                           intcon2	equ	0xFF1
 14243                           postinc0	equ	0xFEE
 14244                           fsr0h	equ	0xFEA
 14245                           fsr0l	equ	0xFE9
 14246                           wreg	equ	0xFE8
 14247                           fsr1h	equ	0xFE2
 14248                           fsr1l	equ	0xFE1
 14249                           indf2	equ	0xFDF
 14250                           postinc2	equ	0xFDE
 14251                           postdec2	equ	0xFDD
 14252                           plusw2	equ	0xFDB
 14253                           fsr2h	equ	0xFDA
 14254                           fsr2l	equ	0xFD9
 14255                           status	equ	0xFD8
 14256                           
 14257 ;; *************** function _EUSART1_Transmit_ISR *****************
 14258 ;; Defined at:
 14259 ;;		line 150 in file "UART.c"
 14260 ;; Parameters:    Size  Location     Type
 14261 ;;		None
 14262 ;; Auto vars:     Size  Location     Type
 14263 ;;		None
 14264 ;; Return value:  Size  Location     Type
 14265 ;;                  1    wreg      void 
 14266 ;; Registers used:
 14267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14268 ;; Tracked objects:
 14269 ;;		On entry : 0/0
 14270 ;;		On exit  : 0/0
 14271 ;;		Unchanged: 0/0
 14272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14273 ;;      Params:         0       0       0       0       0       0       0
 14274 ;;      Locals:         0       0       0       0       0       0       0
 14275 ;;      Temps:          0       0       0       0       0       0       0
 14276 ;;      Totals:         0       0       0       0       0       0       0
 14277 ;;Total ram usage:        0 bytes
 14278 ;; Hardware stack levels used:    1
 14279 ;; Hardware stack levels required when called:    2
 14280 ;; This function calls:
 14281 ;;		i2_UART_buff_get
 14282 ;;		i2_UART_buff_size
 14283 ;; This function is called by:
 14284 ;;		_INTERRUPT_InterruptManager
 14285 ;; This function uses a non-reentrant model
 14286 ;;
 14287                           
 14288                           	psect	text71
 14289  002D66                     __ptext71:
 14290                           	opt stack 0
 14291  002D66                     _EUSART1_Transmit_ISR:
 14292                           	opt stack 21
 14293                           
 14294                           ;UART.c: 152: if (UART_buff_size(&output_buffer) > 0) {
 14295                           
 14296                           ;incstack = 0
 14297  002D66  0E00               	movlw	low _output_buffer
 14298  002D68  6E01               	movwf	i2UART_buff_size@_this,c
 14299  002D6A  0E05               	movlw	high _output_buffer
 14300  002D6C  6E02               	movwf	i2UART_buff_size@_this+1,c
 14301  002D6E  ECEC  F017         	call	i2_UART_buff_size	;wreg free
 14302  002D72  BE02               	btfsc	?i2_UART_buff_size+1,7,c
 14303  002D74  D00D               	goto	i2l5287
 14304  002D76  5002               	movf	?i2_UART_buff_size+1,w,c
 14305  002D78  E103               	bnz	i2u541_40
 14306  002D7A  0401               	decf	?i2_UART_buff_size,w,c
 14307  002D7C  A0D8               	btfss	status,0,c
 14308  002D7E  D008               	goto	i2l5287
 14309  002D80                     i2u541_40:
 14310                           
 14311                           ;UART.c: 153: TXREG1 = UART_buff_get(&output_buffer);
 14312  002D80  0E00               	movlw	low _output_buffer
 14313  002D82  6E07               	movwf	i2UART_buff_get@_this,c
 14314  002D84  0E05               	movlw	high _output_buffer
 14315  002D86  6E08               	movwf	i2UART_buff_get@_this+1,c
 14316  002D88  EC65  F013         	call	i2_UART_buff_get	;wreg free
 14317  002D8C  6EAD               	movwf	4013,c	;volatile
 14318                           
 14319                           ;UART.c: 154: } else {
 14320  002D8E  0012               	return	
 14321  002D90                     i2l5287:
 14322                           
 14323                           ;UART.c: 155: Transmit_stall = 1;
 14324  002D90  0E01               	movlw	1
 14325  002D92  6E44               	movwf	_Transmit_stall,c
 14326                           
 14327                           ;UART.c: 156: PIE1bits.TX1IE = 0;
 14328  002D94  989D               	bcf	3997,4,c	;volatile
 14329  002D96  0012               	return	
 14330  002D98                     __end_of_EUSART1_Transmit_ISR:
 14331                           	opt stack 0
 14332                           tosu	equ	0xFFF
 14333                           tosh	equ	0xFFE
 14334                           tosl	equ	0xFFD
 14335                           pclatu	equ	0xFFB
 14336                           pclath	equ	0xFFA
 14337                           tblptru	equ	0xFF8
 14338                           tblptrh	equ	0xFF7
 14339                           tblptrl	equ	0xFF6
 14340                           tablat	equ	0xFF5
 14341                           prodh	equ	0xFF4
 14342                           prodl	equ	0xFF3
 14343                           intcon	equ	0xFF2
 14344                           intcon2	equ	0xFF1
 14345                           postinc0	equ	0xFEE
 14346                           fsr0h	equ	0xFEA
 14347                           fsr0l	equ	0xFE9
 14348                           wreg	equ	0xFE8
 14349                           fsr1h	equ	0xFE2
 14350                           fsr1l	equ	0xFE1
 14351                           indf2	equ	0xFDF
 14352                           postinc2	equ	0xFDE
 14353                           postdec2	equ	0xFDD
 14354                           plusw2	equ	0xFDB
 14355                           fsr2h	equ	0xFDA
 14356                           fsr2l	equ	0xFD9
 14357                           status	equ	0xFD8
 14358                           
 14359 ;; *************** function i2_UART_buff_size *****************
 14360 ;; Defined at:
 14361 ;;		line 102 in file "UART.c"
 14362 ;; Parameters:    Size  Location     Type
 14363 ;;  _this           2    0[COMRAM] PTR struct UART_ring_buf
 14364 ;;		 -> output_buffer(206), input_buffer(206), 
 14365 ;; Auto vars:     Size  Location     Type
 14366 ;;		None
 14367 ;; Return value:  Size  Location     Type
 14368 ;;                  2    0[COMRAM] int 
 14369 ;; Registers used:
 14370 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14371 ;; Tracked objects:
 14372 ;;		On entry : 0/0
 14373 ;;		On exit  : 0/0
 14374 ;;		Unchanged: 0/0
 14375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14376 ;;      Params:         2       0       0       0       0       0       0
 14377 ;;      Locals:         0       0       0       0       0       0       0
 14378 ;;      Temps:          0       0       0       0       0       0       0
 14379 ;;      Totals:         2       0       0       0       0       0       0
 14380 ;;Total ram usage:        2 bytes
 14381 ;; Hardware stack levels used:    1
 14382 ;; This function calls:
 14383 ;;		Nothing
 14384 ;; This function is called by:
 14385 ;;		_EUSART1_Transmit_ISR
 14386 ;; This function uses a non-reentrant model
 14387 ;;
 14388                           
 14389                           	psect	text72
 14390  002FD8                     __ptext72:
 14391                           	opt stack 0
 14392  002FD8                     i2_UART_buff_size:
 14393                           	opt stack 22
 14394                           
 14395                           ;UART.c: 103: return (_this->count);
 14396                           
 14397                           ;incstack = 0
 14398  002FD8  EE20 F0CC          	lfsr	2,204
 14399  002FDC  5001               	movf	i2UART_buff_size@_this,w,c
 14400  002FDE  26D9               	addwf	fsr2l,f,c
 14401  002FE0  5002               	movf	i2UART_buff_size@_this+1,w,c
 14402  002FE2  22DA               	addwfc	fsr2h,f,c
 14403  002FE4  CFDE F001          	movff	postinc2,?i2_UART_buff_size
 14404  002FE8  CFDD F002          	movff	postdec2,?i2_UART_buff_size+1
 14405  002FEC  0012               	return	
 14406  002FEE                     __end_ofi2_UART_buff_size:
 14407                           	opt stack 0
 14408                           tosu	equ	0xFFF
 14409                           tosh	equ	0xFFE
 14410                           tosl	equ	0xFFD
 14411                           pclatu	equ	0xFFB
 14412                           pclath	equ	0xFFA
 14413                           tblptru	equ	0xFF8
 14414                           tblptrh	equ	0xFF7
 14415                           tblptrl	equ	0xFF6
 14416                           tablat	equ	0xFF5
 14417                           prodh	equ	0xFF4
 14418                           prodl	equ	0xFF3
 14419                           intcon	equ	0xFF2
 14420                           intcon2	equ	0xFF1
 14421                           postinc0	equ	0xFEE
 14422                           fsr0h	equ	0xFEA
 14423                           fsr0l	equ	0xFE9
 14424                           wreg	equ	0xFE8
 14425                           fsr1h	equ	0xFE2
 14426                           fsr1l	equ	0xFE1
 14427                           indf2	equ	0xFDF
 14428                           postinc2	equ	0xFDE
 14429                           postdec2	equ	0xFDD
 14430                           plusw2	equ	0xFDB
 14431                           fsr2h	equ	0xFDA
 14432                           fsr2l	equ	0xFD9
 14433                           status	equ	0xFD8
 14434                           
 14435 ;; *************** function i2_UART_buff_get *****************
 14436 ;; Defined at:
 14437 ;;		line 81 in file "UART.c"
 14438 ;; Parameters:    Size  Location     Type
 14439 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 14440 ;;		 -> output_buffer(206), input_buffer(206), 
 14441 ;; Auto vars:     Size  Location     Type
 14442 ;;  UART_buff_ge    1   10[COMRAM] unsigned char 
 14443 ;; Return value:  Size  Location     Type
 14444 ;;                  1    wreg      unsigned char 
 14445 ;; Registers used:
 14446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14447 ;; Tracked objects:
 14448 ;;		On entry : 0/0
 14449 ;;		On exit  : 0/0
 14450 ;;		Unchanged: 0/0
 14451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14452 ;;      Params:         2       0       0       0       0       0       0
 14453 ;;      Locals:         1       0       0       0       0       0       0
 14454 ;;      Temps:          2       0       0       0       0       0       0
 14455 ;;      Totals:         5       0       0       0       0       0       0
 14456 ;;Total ram usage:        5 bytes
 14457 ;; Hardware stack levels used:    1
 14458 ;; Hardware stack levels required when called:    1
 14459 ;; This function calls:
 14460 ;;		i2_UART_buff_modulo_inc
 14461 ;; This function is called by:
 14462 ;;		_EUSART1_Transmit_ISR
 14463 ;; This function uses a non-reentrant model
 14464 ;;
 14465                           
 14466                           	psect	text73
 14467  0026CA                     __ptext73:
 14468                           	opt stack 0
 14469  0026CA                     i2_UART_buff_get:
 14470                           	opt stack 21
 14471                           
 14472                           ;UART.c: 82: unsigned char c;
 14473                           ;UART.c: 83: if (_this->count > 0) {
 14474                           
 14475                           ;incstack = 0
 14476  0026CA  EE20 F0CC          	lfsr	2,204
 14477  0026CE  5007               	movf	i2UART_buff_get@_this,w,c
 14478  0026D0  26D9               	addwf	fsr2l,f,c
 14479  0026D2  5008               	movf	i2UART_buff_get@_this+1,w,c
 14480  0026D4  22DA               	addwfc	fsr2h,f,c
 14481  0026D6  0E01               	movlw	1
 14482  0026D8  BEDB               	btfsc	plusw2,7,c
 14483  0026DA  D03C               	goto	i2l5111
 14484  0026DC  0E01               	movlw	1
 14485  0026DE  50DB               	movf	plusw2,w,c
 14486  0026E0  E103               	bnz	i2u521_40
 14487  0026E2  04DE               	decf	postinc2,w,c
 14488  0026E4  A0D8               	btfss	status,0,c
 14489  0026E6  D036               	goto	i2l5111
 14490  0026E8                     i2u521_40:
 14491                           
 14492                           ;UART.c: 84: c = _this->buf[_this->tail];
 14493  0026E8  EE20 F0CA          	lfsr	2,202
 14494  0026EC  5007               	movf	i2UART_buff_get@_this,w,c
 14495  0026EE  26D9               	addwf	fsr2l,f,c
 14496  0026F0  5008               	movf	i2UART_buff_get@_this+1,w,c
 14497  0026F2  22DA               	addwfc	fsr2h,f,c
 14498  0026F4  CFDE F009          	movff	postinc2,??i2_UART_buff_get
 14499  0026F8  CFDD F00A          	movff	postdec2,??i2_UART_buff_get+1
 14500  0026FC  5009               	movf	??i2_UART_buff_get,w,c
 14501  0026FE  2407               	addwf	i2UART_buff_get@_this,w,c
 14502  002700  6ED9               	movwf	fsr2l,c
 14503  002702  500A               	movf	??i2_UART_buff_get+1,w,c
 14504  002704  2008               	addwfc	i2UART_buff_get@_this+1,w,c
 14505  002706  6EDA               	movwf	fsr2h,c
 14506  002708  50DF               	movf	indf2,w,c
 14507  00270A  6E0B               	movwf	i2UART_buff_get@c,c
 14508                           
 14509                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 14510  00270C  EE20 F0CA          	lfsr	2,202
 14511  002710  5007               	movf	i2UART_buff_get@_this,w,c
 14512  002712  26D9               	addwf	fsr2l,f,c
 14513  002714  5008               	movf	i2UART_buff_get@_this+1,w,c
 14514  002716  22DA               	addwfc	fsr2h,f,c
 14515  002718  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 14516  00271C  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 14517  002720  0E00               	movlw	0
 14518  002722  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 14519  002724  0EC8               	movlw	200
 14520  002726  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 14521  002728  EC23  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 14522  00272C  EE20 F0CA          	lfsr	2,202
 14523  002730  5007               	movf	i2UART_buff_get@_this,w,c
 14524  002732  26D9               	addwf	fsr2l,f,c
 14525  002734  5008               	movf	i2UART_buff_get@_this+1,w,c
 14526  002736  22DA               	addwfc	fsr2h,f,c
 14527  002738  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 14528  00273C  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 14529                           
 14530                           ;UART.c: 86: --_this->count;
 14531  002740  EE20 F0CC          	lfsr	2,204
 14532  002744  5007               	movf	i2UART_buff_get@_this,w,c
 14533  002746  26D9               	addwf	fsr2l,f,c
 14534  002748  5008               	movf	i2UART_buff_get@_this+1,w,c
 14535  00274A  22DA               	addwfc	fsr2h,f,c
 14536  00274C  06DE               	decf	postinc2,f,c
 14537  00274E  0E00               	movlw	0
 14538  002750  5ADD               	subwfb	postdec2,f,c
 14539                           
 14540                           ;UART.c: 87: } else {
 14541  002752  D002               	goto	i2l1165
 14542  002754                     i2l5111:
 14543                           
 14544                           ;UART.c: 88: c = 0;
 14545  002754  0E00               	movlw	0
 14546  002756  6E0B               	movwf	i2UART_buff_get@c,c
 14547  002758                     i2l1165:
 14548                           
 14549                           ;UART.c: 89: }
 14550                           ;UART.c: 90: return (c);
 14551  002758  500B               	movf	i2UART_buff_get@c,w,c
 14552  00275A  0012               	return	
 14553  00275C                     __end_ofi2_UART_buff_get:
 14554                           	opt stack 0
 14555                           tosu	equ	0xFFF
 14556                           tosh	equ	0xFFE
 14557                           tosl	equ	0xFFD
 14558                           pclatu	equ	0xFFB
 14559                           pclath	equ	0xFFA
 14560                           tblptru	equ	0xFF8
 14561                           tblptrh	equ	0xFF7
 14562                           tblptrl	equ	0xFF6
 14563                           tablat	equ	0xFF5
 14564                           prodh	equ	0xFF4
 14565                           prodl	equ	0xFF3
 14566                           intcon	equ	0xFF2
 14567                           intcon2	equ	0xFF1
 14568                           postinc0	equ	0xFEE
 14569                           fsr0h	equ	0xFEA
 14570                           fsr0l	equ	0xFE9
 14571                           wreg	equ	0xFE8
 14572                           fsr1h	equ	0xFE2
 14573                           fsr1l	equ	0xFE1
 14574                           indf2	equ	0xFDF
 14575                           postinc2	equ	0xFDE
 14576                           postdec2	equ	0xFDD
 14577                           plusw2	equ	0xFDB
 14578                           fsr2h	equ	0xFDA
 14579                           fsr2l	equ	0xFD9
 14580                           status	equ	0xFD8
 14581                           
 14582 ;; *************** function _EUSART1_Receive_ISR *****************
 14583 ;; Defined at:
 14584 ;;		line 139 in file "UART.c"
 14585 ;; Parameters:    Size  Location     Type
 14586 ;;		None
 14587 ;; Auto vars:     Size  Location     Type
 14588 ;;  data            1   11[COMRAM] unsigned char 
 14589 ;; Return value:  Size  Location     Type
 14590 ;;                  1    wreg      void 
 14591 ;; Registers used:
 14592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14593 ;; Tracked objects:
 14594 ;;		On entry : 0/0
 14595 ;;		On exit  : 0/0
 14596 ;;		Unchanged: 0/0
 14597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14598 ;;      Params:         0       0       0       0       0       0       0
 14599 ;;      Locals:         1       0       0       0       0       0       0
 14600 ;;      Temps:          0       0       0       0       0       0       0
 14601 ;;      Totals:         1       0       0       0       0       0       0
 14602 ;;Total ram usage:        1 bytes
 14603 ;; Hardware stack levels used:    1
 14604 ;; Hardware stack levels required when called:    2
 14605 ;; This function calls:
 14606 ;;		i2_UART_buff_put
 14607 ;; This function is called by:
 14608 ;;		_INTERRUPT_InterruptManager
 14609 ;; This function uses a non-reentrant model
 14610 ;;
 14611                           
 14612                           	psect	text74
 14613  002F5C                     __ptext74:
 14614                           	opt stack 0
 14615  002F5C                     _EUSART1_Receive_ISR:
 14616                           	opt stack 21
 14617                           
 14618                           ;UART.c: 140: if (1 == RC1STAbits.OERR) {
 14619                           
 14620                           ;incstack = 0
 14621  002F5C  A2AB               	btfss	4011,1,c	;volatile
 14622  002F5E  D002               	goto	i2l1196
 14623                           
 14624                           ;UART.c: 143: RC1STAbits.CREN = 0;
 14625  002F60  98AB               	bcf	4011,4,c	;volatile
 14626                           
 14627                           ;UART.c: 144: RC1STAbits.CREN = 1;
 14628  002F62  88AB               	bsf	4011,4,c	;volatile
 14629  002F64                     i2l1196:
 14630                           
 14631                           ;UART.c: 145: }
 14632                           ;UART.c: 146: unsigned char data = RCREG1;
 14633  002F64  CFAE F00C          	movff	4014,EUSART1_Receive_ISR@data	;volatile
 14634                           
 14635                           ;UART.c: 147: UART_buff_put(&input_buffer, data);
 14636  002F68  0E00               	movlw	low _input_buffer
 14637  002F6A  6E07               	movwf	i2UART_buff_put@_this,c
 14638  002F6C  0E04               	movlw	high _input_buffer
 14639  002F6E  6E08               	movwf	i2UART_buff_put@_this+1,c
 14640  002F70  C00C  F009         	movff	EUSART1_Receive_ISR@data,i2UART_buff_put@c
 14641  002F74  EC8E  F00D         	call	i2_UART_buff_put	;wreg free
 14642  002F78  0012               	return		;funcret
 14643  002F7A                     __end_of_EUSART1_Receive_ISR:
 14644                           	opt stack 0
 14645                           tosu	equ	0xFFF
 14646                           tosh	equ	0xFFE
 14647                           tosl	equ	0xFFD
 14648                           pclatu	equ	0xFFB
 14649                           pclath	equ	0xFFA
 14650                           tblptru	equ	0xFF8
 14651                           tblptrh	equ	0xFF7
 14652                           tblptrl	equ	0xFF6
 14653                           tablat	equ	0xFF5
 14654                           prodh	equ	0xFF4
 14655                           prodl	equ	0xFF3
 14656                           intcon	equ	0xFF2
 14657                           intcon2	equ	0xFF1
 14658                           postinc0	equ	0xFEE
 14659                           fsr0h	equ	0xFEA
 14660                           fsr0l	equ	0xFE9
 14661                           wreg	equ	0xFE8
 14662                           fsr1h	equ	0xFE2
 14663                           fsr1l	equ	0xFE1
 14664                           indf2	equ	0xFDF
 14665                           postinc2	equ	0xFDE
 14666                           postdec2	equ	0xFDD
 14667                           plusw2	equ	0xFDB
 14668                           fsr2h	equ	0xFDA
 14669                           fsr2l	equ	0xFD9
 14670                           status	equ	0xFD8
 14671                           
 14672 ;; *************** function i2_UART_buff_put *****************
 14673 ;; Defined at:
 14674 ;;		line 68 in file "UART.c"
 14675 ;; Parameters:    Size  Location     Type
 14676 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 14677 ;;		 -> output_buffer(206), input_buffer(206), 
 14678 ;;  c               1    8[COMRAM] const unsigned char 
 14679 ;; Auto vars:     Size  Location     Type
 14680 ;;		None
 14681 ;; Return value:  Size  Location     Type
 14682 ;;                  1    wreg      void 
 14683 ;; Registers used:
 14684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14685 ;; Tracked objects:
 14686 ;;		On entry : 0/0
 14687 ;;		On exit  : 0/0
 14688 ;;		Unchanged: 0/0
 14689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14690 ;;      Params:         3       0       0       0       0       0       0
 14691 ;;      Locals:         0       0       0       0       0       0       0
 14692 ;;      Temps:          2       0       0       0       0       0       0
 14693 ;;      Totals:         5       0       0       0       0       0       0
 14694 ;;Total ram usage:        5 bytes
 14695 ;; Hardware stack levels used:    1
 14696 ;; Hardware stack levels required when called:    1
 14697 ;; This function calls:
 14698 ;;		i2_UART_buff_modulo_inc
 14699 ;; This function is called by:
 14700 ;;		_EUSART1_Receive_ISR
 14701 ;; This function uses a non-reentrant model
 14702 ;;
 14703                           
 14704                           	psect	text75
 14705  001B1C                     __ptext75:
 14706                           	opt stack 0
 14707  001B1C                     i2_UART_buff_put:
 14708                           	opt stack 21
 14709                           
 14710                           ;UART.c: 69: if (_this->count < 200) {
 14711                           
 14712                           ;incstack = 0
 14713  001B1C  EE20 F0CC          	lfsr	2,204
 14714  001B20  5007               	movf	i2UART_buff_put@_this,w,c
 14715  001B22  26D9               	addwf	fsr2l,f,c
 14716  001B24  5008               	movf	i2UART_buff_put@_this+1,w,c
 14717  001B26  22DA               	addwfc	fsr2h,f,c
 14718  001B28  0E01               	movlw	1
 14719  001B2A  BEDB               	btfsc	plusw2,7,c
 14720  001B2C  D007               	goto	i2l5091
 14721  001B2E  0E01               	movlw	1
 14722  001B30  50DB               	movf	plusw2,w,c
 14723  001B32  E13A               	bnz	i2l5097
 14724  001B34  0EC8               	movlw	200
 14725  001B36  5CDE               	subwf	postinc2,w,c
 14726  001B38  B0D8               	btfsc	status,0,c
 14727  001B3A  D036               	goto	i2l5097
 14728  001B3C                     i2l5091:
 14729                           
 14730                           ;UART.c: 70: _this->buf[_this->head] = c;
 14731  001B3C  EE20 F0C8          	lfsr	2,200
 14732  001B40  5007               	movf	i2UART_buff_put@_this,w,c
 14733  001B42  26D9               	addwf	fsr2l,f,c
 14734  001B44  5008               	movf	i2UART_buff_put@_this+1,w,c
 14735  001B46  22DA               	addwfc	fsr2h,f,c
 14736  001B48  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 14737  001B4C  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 14738  001B50  500A               	movf	??i2_UART_buff_put,w,c
 14739  001B52  2407               	addwf	i2UART_buff_put@_this,w,c
 14740  001B54  6ED9               	movwf	fsr2l,c
 14741  001B56  500B               	movf	??i2_UART_buff_put+1,w,c
 14742  001B58  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 14743  001B5A  6EDA               	movwf	fsr2h,c
 14744  001B5C  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 14745                           
 14746                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
 14747  001B60  EE20 F0C8          	lfsr	2,200
 14748  001B64  5007               	movf	i2UART_buff_put@_this,w,c
 14749  001B66  26D9               	addwf	fsr2l,f,c
 14750  001B68  5008               	movf	i2UART_buff_put@_this+1,w,c
 14751  001B6A  22DA               	addwfc	fsr2h,f,c
 14752  001B6C  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 14753  001B70  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 14754  001B74  0E00               	movlw	0
 14755  001B76  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 14756  001B78  0EC8               	movlw	200
 14757  001B7A  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 14758  001B7C  EC23  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 14759  001B80  EE20 F0C8          	lfsr	2,200
 14760  001B84  5007               	movf	i2UART_buff_put@_this,w,c
 14761  001B86  26D9               	addwf	fsr2l,f,c
 14762  001B88  5008               	movf	i2UART_buff_put@_this+1,w,c
 14763  001B8A  22DA               	addwfc	fsr2h,f,c
 14764  001B8C  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 14765  001B90  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 14766                           
 14767                           ;UART.c: 72: ++_this->count;
 14768  001B94  EE20 F0CC          	lfsr	2,204
 14769  001B98  5007               	movf	i2UART_buff_put@_this,w,c
 14770  001B9A  26D9               	addwf	fsr2l,f,c
 14771  001B9C  5008               	movf	i2UART_buff_put@_this+1,w,c
 14772  001B9E  22DA               	addwfc	fsr2h,f,c
 14773  001BA0  2ADE               	incf	postinc2,f,c
 14774  001BA2  0E00               	movlw	0
 14775  001BA4  22DD               	addwfc	postdec2,f,c
 14776                           
 14777                           ;UART.c: 73: } else {
 14778  001BA6  0012               	return	
 14779  001BA8                     i2l5097:
 14780                           
 14781                           ;UART.c: 74: _this->buf[_this->head] = c;
 14782  001BA8  EE20 F0C8          	lfsr	2,200
 14783  001BAC  5007               	movf	i2UART_buff_put@_this,w,c
 14784  001BAE  26D9               	addwf	fsr2l,f,c
 14785  001BB0  5008               	movf	i2UART_buff_put@_this+1,w,c
 14786  001BB2  22DA               	addwfc	fsr2h,f,c
 14787  001BB4  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 14788  001BB8  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 14789  001BBC  500A               	movf	??i2_UART_buff_put,w,c
 14790  001BBE  2407               	addwf	i2UART_buff_put@_this,w,c
 14791  001BC0  6ED9               	movwf	fsr2l,c
 14792  001BC2  500B               	movf	??i2_UART_buff_put+1,w,c
 14793  001BC4  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 14794  001BC6  6EDA               	movwf	fsr2h,c
 14795  001BC8  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 14796                           
 14797                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
 14798  001BCC  EE20 F0C8          	lfsr	2,200
 14799  001BD0  5007               	movf	i2UART_buff_put@_this,w,c
 14800  001BD2  26D9               	addwf	fsr2l,f,c
 14801  001BD4  5008               	movf	i2UART_buff_put@_this+1,w,c
 14802  001BD6  22DA               	addwfc	fsr2h,f,c
 14803  001BD8  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 14804  001BDC  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 14805  001BE0  0E00               	movlw	0
 14806  001BE2  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 14807  001BE4  0EC8               	movlw	200
 14808  001BE6  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 14809  001BE8  EC23  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 14810  001BEC  EE20 F0C8          	lfsr	2,200
 14811  001BF0  5007               	movf	i2UART_buff_put@_this,w,c
 14812  001BF2  26D9               	addwf	fsr2l,f,c
 14813  001BF4  5008               	movf	i2UART_buff_put@_this+1,w,c
 14814  001BF6  22DA               	addwfc	fsr2h,f,c
 14815  001BF8  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 14816  001BFC  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 14817                           
 14818                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 14819  001C00  EE20 F0CA          	lfsr	2,202
 14820  001C04  5007               	movf	i2UART_buff_put@_this,w,c
 14821  001C06  26D9               	addwf	fsr2l,f,c
 14822  001C08  5008               	movf	i2UART_buff_put@_this+1,w,c
 14823  001C0A  22DA               	addwfc	fsr2h,f,c
 14824  001C0C  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 14825  001C10  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 14826  001C14  0E00               	movlw	0
 14827  001C16  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 14828  001C18  0EC8               	movlw	200
 14829  001C1A  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 14830  001C1C  EC23  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 14831  001C20  EE20 F0CA          	lfsr	2,202
 14832  001C24  5007               	movf	i2UART_buff_put@_this,w,c
 14833  001C26  26D9               	addwf	fsr2l,f,c
 14834  001C28  5008               	movf	i2UART_buff_put@_this+1,w,c
 14835  001C2A  22DA               	addwfc	fsr2h,f,c
 14836  001C2C  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 14837  001C30  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 14838  001C34  0012               	return	
 14839  001C36                     __end_ofi2_UART_buff_put:
 14840                           	opt stack 0
 14841                           tosu	equ	0xFFF
 14842                           tosh	equ	0xFFE
 14843                           tosl	equ	0xFFD
 14844                           pclatu	equ	0xFFB
 14845                           pclath	equ	0xFFA
 14846                           tblptru	equ	0xFF8
 14847                           tblptrh	equ	0xFF7
 14848                           tblptrl	equ	0xFF6
 14849                           tablat	equ	0xFF5
 14850                           prodh	equ	0xFF4
 14851                           prodl	equ	0xFF3
 14852                           intcon	equ	0xFF2
 14853                           intcon2	equ	0xFF1
 14854                           postinc0	equ	0xFEE
 14855                           fsr0h	equ	0xFEA
 14856                           fsr0l	equ	0xFE9
 14857                           wreg	equ	0xFE8
 14858                           fsr1h	equ	0xFE2
 14859                           fsr1l	equ	0xFE1
 14860                           indf2	equ	0xFDF
 14861                           postinc2	equ	0xFDE
 14862                           postdec2	equ	0xFDD
 14863                           plusw2	equ	0xFDB
 14864                           fsr2h	equ	0xFDA
 14865                           fsr2l	equ	0xFD9
 14866                           status	equ	0xFD8
 14867                           
 14868 ;; *************** function i2_UART_buff_modulo_inc *****************
 14869 ;; Defined at:
 14870 ;;		line 106 in file "UART.c"
 14871 ;; Parameters:    Size  Location     Type
 14872 ;;  value           2    0[COMRAM] const unsigned int 
 14873 ;;  modulus         2    2[COMRAM] const unsigned int 
 14874 ;; Auto vars:     Size  Location     Type
 14875 ;;  UART_buff_mo    2    4[COMRAM] unsigned int 
 14876 ;; Return value:  Size  Location     Type
 14877 ;;                  2    0[COMRAM] unsigned int 
 14878 ;; Registers used:
 14879 ;;		wreg, status,2, status,0
 14880 ;; Tracked objects:
 14881 ;;		On entry : 0/0
 14882 ;;		On exit  : 0/0
 14883 ;;		Unchanged: 0/0
 14884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14885 ;;      Params:         4       0       0       0       0       0       0
 14886 ;;      Locals:         2       0       0       0       0       0       0
 14887 ;;      Temps:          0       0       0       0       0       0       0
 14888 ;;      Totals:         6       0       0       0       0       0       0
 14889 ;;Total ram usage:        6 bytes
 14890 ;; Hardware stack levels used:    1
 14891 ;; This function calls:
 14892 ;;		Nothing
 14893 ;; This function is called by:
 14894 ;;		i2_UART_buff_put
 14895 ;;		i2_UART_buff_get
 14896 ;; This function uses a non-reentrant model
 14897 ;;
 14898                           
 14899                           	psect	text76
 14900  002E46                     __ptext76:
 14901                           	opt stack 0
 14902  002E46                     i2_UART_buff_modulo_inc:
 14903                           	opt stack 21
 14904                           
 14905                           ;UART.c: 107: unsigned int my_value = value + 1;
 14906                           
 14907                           ;incstack = 0
 14908  002E46  0E01               	movlw	1
 14909  002E48  2401               	addwf	i2UART_buff_modulo_inc@value,w,c
 14910  002E4A  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 14911  002E4C  0E00               	movlw	0
 14912  002E4E  2002               	addwfc	i2UART_buff_modulo_inc@value+1,w,c
 14913  002E50  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 14914                           
 14915                           ;UART.c: 108: if (my_value >= modulus) {
 14916  002E52  5003               	movf	i2UART_buff_modulo_inc@modulus,w,c
 14917  002E54  5C05               	subwf	i2UART_buff_modulo_inc@my_value,w,c
 14918  002E56  5004               	movf	i2UART_buff_modulo_inc@modulus+1,w,c
 14919  002E58  5806               	subwfb	i2UART_buff_modulo_inc@my_value+1,w,c
 14920  002E5A  A0D8               	btfss	status,0,c
 14921  002E5C  D004               	goto	i2l4561
 14922                           
 14923                           ;UART.c: 109: my_value = 0;
 14924  002E5E  0E00               	movlw	0
 14925  002E60  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 14926  002E62  0E00               	movlw	0
 14927  002E64  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 14928  002E66                     i2l4561:
 14929                           
 14930                           ;UART.c: 110: }
 14931                           ;UART.c: 111: return (my_value);
 14932  002E66  C005  F001         	movff	i2UART_buff_modulo_inc@my_value,?i2_UART_buff_modulo_inc
 14933  002E6A  C006  F002         	movff	i2UART_buff_modulo_inc@my_value+1,?i2_UART_buff_modulo_inc+1
 14934  002E6E  0012               	return	
 14935  002E70                     __end_ofi2_UART_buff_modulo_inc:
 14936                           	opt stack 0
 14937                           tosu	equ	0xFFF
 14938                           tosh	equ	0xFFE
 14939                           tosl	equ	0xFFD
 14940                           pclatu	equ	0xFFB
 14941                           pclath	equ	0xFFA
 14942                           tblptru	equ	0xFF8
 14943                           tblptrh	equ	0xFF7
 14944                           tblptrl	equ	0xFF6
 14945                           tablat	equ	0xFF5
 14946                           prodh	equ	0xFF4
 14947                           prodl	equ	0xFF3
 14948                           intcon	equ	0xFF2
 14949                           intcon2	equ	0xFF1
 14950                           postinc0	equ	0xFEE
 14951                           fsr0h	equ	0xFEA
 14952                           fsr0l	equ	0xFE9
 14953                           wreg	equ	0xFE8
 14954                           fsr1h	equ	0xFE2
 14955                           fsr1l	equ	0xFE1
 14956                           indf2	equ	0xFDF
 14957                           postinc2	equ	0xFDE
 14958                           postdec2	equ	0xFDD
 14959                           plusw2	equ	0xFDB
 14960                           fsr2h	equ	0xFDA
 14961                           fsr2l	equ	0xFD9
 14962                           status	equ	0xFD8
 14963                           
 14964 ;; *************** function _ADC_ISR *****************
 14965 ;; Defined at:
 14966 ;;		line 128 in file "mcc_generated_files/adc.c"
 14967 ;; Parameters:    Size  Location     Type
 14968 ;;		None
 14969 ;; Auto vars:     Size  Location     Type
 14970 ;;		None
 14971 ;; Return value:  Size  Location     Type
 14972 ;;                  1    wreg      void 
 14973 ;; Registers used:
 14974 ;;		None
 14975 ;; Tracked objects:
 14976 ;;		On entry : 0/0
 14977 ;;		On exit  : 0/0
 14978 ;;		Unchanged: 0/0
 14979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14980 ;;      Params:         0       0       0       0       0       0       0
 14981 ;;      Locals:         0       0       0       0       0       0       0
 14982 ;;      Temps:          0       0       0       0       0       0       0
 14983 ;;      Totals:         0       0       0       0       0       0       0
 14984 ;;Total ram usage:        0 bytes
 14985 ;; Hardware stack levels used:    1
 14986 ;; This function calls:
 14987 ;;		Nothing
 14988 ;; This function is called by:
 14989 ;;		_INTERRUPT_InterruptManager
 14990 ;; This function uses a non-reentrant model
 14991 ;;
 14992                           
 14993                           	psect	text77
 14994  003056                     __ptext77:
 14995                           	opt stack 0
 14996  003056                     _ADC_ISR:
 14997                           	opt stack 23
 14998                           
 14999                           ;adc.c: 131: PIR1bits.ADIF = 0;
 15000                           
 15001                           ;incstack = 0
 15002  003056  9C9E               	bcf	3998,6,c	;volatile
 15003  003058  0012               	return		;funcret
 15004  00305A                     __end_of_ADC_ISR:
 15005                           	opt stack 0
 15006                           tosu	equ	0xFFF
 15007                           tosh	equ	0xFFE
 15008                           tosl	equ	0xFFD
 15009                           pclatu	equ	0xFFB
 15010                           pclath	equ	0xFFA
 15011                           tblptru	equ	0xFF8
 15012                           tblptrh	equ	0xFF7
 15013                           tblptrl	equ	0xFF6
 15014                           tablat	equ	0xFF5
 15015                           prodh	equ	0xFF4
 15016                           prodl	equ	0xFF3
 15017                           intcon	equ	0xFF2
 15018                           intcon2	equ	0xFF1
 15019                           postinc0	equ	0xFEE
 15020                           fsr0h	equ	0xFEA
 15021                           fsr0l	equ	0xFE9
 15022                           wreg	equ	0xFE8
 15023                           fsr1h	equ	0xFE2
 15024                           fsr1l	equ	0xFE1
 15025                           indf2	equ	0xFDF
 15026                           postinc2	equ	0xFDE
 15027                           postdec2	equ	0xFDD
 15028                           plusw2	equ	0xFDB
 15029                           fsr2h	equ	0xFDA
 15030                           fsr2l	equ	0xFD9
 15031                           status	equ	0xFD8
 15032                           tosu	equ	0xFFF
 15033                           tosh	equ	0xFFE
 15034                           tosl	equ	0xFFD
 15035                           pclatu	equ	0xFFB
 15036                           pclath	equ	0xFFA
 15037                           tblptru	equ	0xFF8
 15038                           tblptrh	equ	0xFF7
 15039                           tblptrl	equ	0xFF6
 15040                           tablat	equ	0xFF5
 15041                           prodh	equ	0xFF4
 15042                           prodl	equ	0xFF3
 15043                           intcon	equ	0xFF2
 15044                           intcon2	equ	0xFF1
 15045                           postinc0	equ	0xFEE
 15046                           fsr0h	equ	0xFEA
 15047                           fsr0l	equ	0xFE9
 15048                           wreg	equ	0xFE8
 15049                           fsr1h	equ	0xFE2
 15050                           fsr1l	equ	0xFE1
 15051                           indf2	equ	0xFDF
 15052                           postinc2	equ	0xFDE
 15053                           postdec2	equ	0xFDD
 15054                           plusw2	equ	0xFDB
 15055                           fsr2h	equ	0xFDA
 15056                           fsr2l	equ	0xFD9
 15057                           status	equ	0xFD8
 15058                           
 15059                           	psect	text78
 15060  000000                     __ptext78:
 15061                           	opt stack 0
 15062                           tosu	equ	0xFFF
 15063                           tosh	equ	0xFFE
 15064                           tosl	equ	0xFFD
 15065                           pclatu	equ	0xFFB
 15066                           pclath	equ	0xFFA
 15067                           tblptru	equ	0xFF8
 15068                           tblptrh	equ	0xFF7
 15069                           tblptrl	equ	0xFF6
 15070                           tablat	equ	0xFF5
 15071                           prodh	equ	0xFF4
 15072                           prodl	equ	0xFF3
 15073                           intcon	equ	0xFF2
 15074                           intcon2	equ	0xFF1
 15075                           postinc0	equ	0xFEE
 15076                           fsr0h	equ	0xFEA
 15077                           fsr0l	equ	0xFE9
 15078                           wreg	equ	0xFE8
 15079                           fsr1h	equ	0xFE2
 15080                           fsr1l	equ	0xFE1
 15081                           indf2	equ	0xFDF
 15082                           postinc2	equ	0xFDE
 15083                           postdec2	equ	0xFDD
 15084                           plusw2	equ	0xFDB
 15085                           fsr2h	equ	0xFDA
 15086                           fsr2l	equ	0xFD9
 15087                           status	equ	0xFD8
 15088                           
 15089                           	psect	rparam
 15090  0000                     tosu	equ	0xFFF
 15091                           tosh	equ	0xFFE
 15092                           tosl	equ	0xFFD
 15093                           pclatu	equ	0xFFB
 15094                           pclath	equ	0xFFA
 15095                           tblptru	equ	0xFF8
 15096                           tblptrh	equ	0xFF7
 15097                           tblptrl	equ	0xFF6
 15098                           tablat	equ	0xFF5
 15099                           prodh	equ	0xFF4
 15100                           prodl	equ	0xFF3
 15101                           intcon	equ	0xFF2
 15102                           intcon2	equ	0xFF1
 15103                           postinc0	equ	0xFEE
 15104                           fsr0h	equ	0xFEA
 15105                           fsr0l	equ	0xFE9
 15106                           wreg	equ	0xFE8
 15107                           fsr1h	equ	0xFE2
 15108                           fsr1l	equ	0xFE1
 15109                           indf2	equ	0xFDF
 15110                           postinc2	equ	0xFDE
 15111                           postdec2	equ	0xFDD
 15112                           plusw2	equ	0xFDB
 15113                           fsr2h	equ	0xFDA
 15114                           fsr2l	equ	0xFD9
 15115                           status	equ	0xFD8
 15116                           
 15117                           	psect	temp
 15118  000045                     btemp:
 15119                           	opt stack 0
 15120  000045                     	ds	1
 15121  0000                     int$flags	set	btemp
 15122                           tosu	equ	0xFFF
 15123                           tosh	equ	0xFFE
 15124                           tosl	equ	0xFFD
 15125                           pclatu	equ	0xFFB
 15126                           pclath	equ	0xFFA
 15127                           tblptru	equ	0xFF8
 15128                           tblptrh	equ	0xFF7
 15129                           tblptrl	equ	0xFF6
 15130                           tablat	equ	0xFF5
 15131                           prodh	equ	0xFF4
 15132                           prodl	equ	0xFF3
 15133                           intcon	equ	0xFF2
 15134                           intcon2	equ	0xFF1
 15135                           postinc0	equ	0xFEE
 15136                           fsr0h	equ	0xFEA
 15137                           fsr0l	equ	0xFE9
 15138                           wreg	equ	0xFE8
 15139                           fsr1h	equ	0xFE2
 15140                           fsr1l	equ	0xFE1
 15141                           indf2	equ	0xFDF
 15142                           postinc2	equ	0xFDE
 15143                           postdec2	equ	0xFDD
 15144                           plusw2	equ	0xFDB
 15145                           fsr2h	equ	0xFDA
 15146                           fsr2l	equ	0xFD9
 15147                           status	equ	0xFD8


Data Sizes:
    Strings     28
    Constant    768
    Data        1
    BSS         1045
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      68
    BANK0           160     10     160
    BANK1           256     26      83
    BANK2           256      0     206
    BANK3           256      0     200
    BANK4           256      0     206
    BANK5           256      0     206

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_tr_queue.pTrFlag	PTR enum E8678 size(2) Largest target is 0
		 -> oledPutChar@status(COMRAM[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK1[1]), 
		 -> LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    memset@p1	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    memset@p	PTR unsigned char  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> SetData@s(COMRAM[20]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> SetData@s(COMRAM[20]), 

    sp__memmove	PTR void  size(2) Largest target is 9
		 -> oledPutChar@bytes(COMRAM[9]), 

    UART_buff_peek@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> input_buffer(BANK4[206]), 

    UART_buff_size@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_get@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_put@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_init@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    crcBufS_get@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    crcBufS_status_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    crcBufS_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    sp__memset	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    FastTransfer_buffer_flush@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), 

    FastTransfer_buffer_put@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), 

    CRC8@data	PTR const unsigned char  size(2) Largest target is 206
		 -> CRCcheck@arrayHolder(BANK0[3]), receiveData@holder_2358(BANK1[3]), receiveData@holder(BANK1[3]), rx_buffer(BANK3[200]), 
		 -> ring_buffer(BANK2[206]), NULL(NULL[0]), 

    sendStructAddress	PTR unsigned char  size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), NULL(NULL[0]), 

    begin@stufftoreceive	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_get(), 

    serial_read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_get(), 

    begin@stuffpeek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_peek(), 

    serial_peek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_peek(), 

    begin@stuffavailable	PTR FTN()int  size(2) Largest target is 2
		 -> Receive_available(), 

    serial_available	PTR FTN()int  size(2) Largest target is 2
		 -> Absolute function(), Receive_available(), 

    begin@stufftosend	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Send_put(), 

    serial_write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), Send_put(), 

    begin@ptr	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK1[40]), 

    receiveArrayAddress	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK1[40]), NULL(NULL[0]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E8678 size(2) Largest target is 1
		 -> oledPutChar@status(COMRAM[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK1[1]), 
		 -> LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E8678 size(2) Largest target is 1
		 -> oledPutChar@status(COMRAM[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK1[1]), 
		 -> LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    F8790.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWrite@pflag	PTR enum E8678 size(2) Largest target is 1
		 -> oledPutChar@status(COMRAM[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK1[1]), 
		 -> LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    F8785.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDblinkRate@b(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), LEDBsetBrightness@b(BANK0[2]), 
		 -> I2C1_ISR@i2c_address(COMRAM[2]), NULL(NULL[0]), 

    S21$pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> oledPutChar@bytes(COMRAM[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), LEDbegin@writeBuffer(BANK1[3]), 
		 -> LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E8678 size(2) Largest target is 1
		 -> oledPutChar@status(COMRAM[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK1[1]), 
		 -> LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    S33$pTrFlag	PTR enum E8678 size(2) Largest target is 1
		 -> oledPutChar@status(COMRAM[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK1[1]), 
		 -> LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E8678 size(2) Largest target is 1
		 -> oledPutChar@status(COMRAM[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), LEDbegin@status(BANK1[1]), 
		 -> LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    S33$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), NULL(NULL[0]), 

    S44$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    S44$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 


Critical Paths under _main in COMRAM

    _main->___ftmul
    _updateComms->_handleIndicators
    _respondECU->_ToSend
    _respondECU->_sendData
    _sendData->_FastTransfer_buffer_flush
    _sendData->_Send_put
    _FastTransfer_buffer_flush->_memset
    _buttonsCollector->_GetButtonState
    _ToSend->_buttonsCollector
    _FastTransfer_buffer_put->_FastTransfer_buffer_modulo_inc
    _receiveData->_Send_put
    _Send_put->_UART_buff_get
    _Send_put->_UART_buff_put
    _UART_buff_put->_UART_buff_modulo_inc
    _Receive_peek->_UART_buff_peek
    _CRCcheck->_crcBufS_get
    _Receive_get->_UART_buff_get
    _UART_buff_get->_UART_buff_modulo_inc
    _Receive_available->_UART_buff_size
    _handleIndicators->_SetLEDOut
    _SetLEDOut->_Off_Led
    _SetLEDOut->_setLED
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    _begin->___awdiv
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART1_Initialize->_UART_buff_init
    _UART_buff_init->_memset
    _LEDwriteDisplay->_I2C1_MasterWrite
    _LEDsetValue->___ftmul
    _LEDsetBar->___awdiv
    _LEDbegin->_I2C1_MasterWrite
    _LEDblinkRate->_I2C1_MasterWrite
    _LEDBsetBrightness->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _TMR2_ISR->_TMR2_CallBack
    _TMR0_ISR->_ReadButtonState
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Transmit_ISR->i2_UART_buff_get
    i2_UART_buff_get->i2_UART_buff_modulo_inc
    _EUSART1_Receive_ISR->i2_UART_buff_put
    i2_UART_buff_put->i2_UART_buff_modulo_inc

Critical Paths under _main in BANK0

    _main->_LEDsetValue
    _respondECU->_ToSend
    _receiveData->_CRCcheck
    ___fttol->___ftmul
    _LEDsetValue->___ftmul
    _LEDbegin->_LEDBsetBrightness
    _LEDbegin->_LEDblinkRate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LEDwriteDisplay
    _updateComms->_receiveData
    _SYSTEM_Initialize->_begin
    _LEDsetValue->_LEDsetBar

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   49289
                                             24 BANK1      2     2      0
                     _GetButtonState
                           _LEDbegin
                        _LEDsetValue
                    _LEDwriteDisplay
                  _SYSTEM_Initialize
                            ___ftmul
                            ___fttol
                           ___lwtoft
                        _updateComms
 ---------------------------------------------------------------------------------
 (1) _updateComms                                          0     0      0   21488
                        _TBbarGraphs
                   _handleIndicators
                        _receiveData
                         _respondECU
 ---------------------------------------------------------------------------------
 (2) _respondECU                                           0     0      0    8063
                              _Delay
                             _ToSend
                   _buttonsCollector
                           _sendData
 ---------------------------------------------------------------------------------
 (3) _sendData                                             5     5      0    5704
                                             38 COMRAM     5     5      0
                   Absolute function *
                               _CRC8
          _FastTransfer_buffer_flush
                           _Send_put *
                        _crcBufS_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_put                                          7     2      5     742
                                             26 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_flush                            4     0      4    1139
                                             34 COMRAM     4     0      4
                             _memset
 ---------------------------------------------------------------------------------
 (3) _buttonsCollector                                     9     7      2     386
                                             32 COMRAM     9     7      2
                     _GetButtonState
 ---------------------------------------------------------------------------------
 (4) _GetButtonState                                       6     4      2     185
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _ToSend                                               3     1      2    1751
                                             41 COMRAM     2     0      2
                                              0 BANK0      1     1      0
            _FastTransfer_buffer_put
                   _buttonsCollector (ARG)
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_put                              7     2      5    1535
                                             32 COMRAM     7     2      5
     _FastTransfer_buffer_modulo_inc
 ---------------------------------------------------------------------------------
 (5) _FastTransfer_buffer_modulo_inc                       6     2      4     746
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay                                                5     3      2     222
                                             26 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _receiveData                                         18    18      0   10715
                                              0 BANK1     18    18      0
                   Absolute function *
                               _CRC8
                           _CRCcheck
                  _Receive_available *
                        _Receive_get *
                       _Receive_peek *
                           _Send_put *
 ---------------------------------------------------------------------------------
 (4) _Send_put                                             1     1      0    2614
                                             37 COMRAM     1     1      0
                      _UART_buff_get
                      _UART_buff_put
 ---------------------------------------------------------------------------------
 (5) _UART_buff_put                                        5     2      3    1418
                                             32 COMRAM     5     2      3
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (3) _Receive_peek                                         0     0      0     139
                     _UART_buff_peek
 ---------------------------------------------------------------------------------
 (4) _UART_buff_peek                                       4     2      2     139
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _CRCcheck                                             7     7      0    5114
                                              0 BANK0      7     7      0
                   Absolute function *
                               _CRC8
                  _Receive_available *
                        _Receive_get *
                        _crcBufS_get
                 _crcBufS_status_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_status_put                                  10     6      4     908
                                             26 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (4) _crcBufS_get                                         12     8      4    1404
                                             26 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (3) _Receive_get                                          0     0      0    1165
                      _UART_buff_get
 ---------------------------------------------------------------------------------
 (5) _UART_buff_get                                        5     3      2    1165
                                             32 COMRAM     5     3      2
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (6) _UART_buff_modulo_inc                                 6     2      4     746
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Receive_available                                    2     0      2     150
                                             28 COMRAM     2     0      2
                     _UART_buff_size
 ---------------------------------------------------------------------------------
 (4) _UART_buff_size                                       2     0      2     150
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _CRC8                                                 7     4      3    1014
                                             26 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _handleIndicators                                     7     5      2    2494
                                             36 COMRAM     7     5      2
                          _SetLEDOut
 ---------------------------------------------------------------------------------
 (3) _SetLEDOut                                            6     2      4    2191
                                             30 COMRAM     6     2      4
                            _Off_Led
                             _setLED
 ---------------------------------------------------------------------------------
 (4) _setLED                                               4     2      2     493
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _Off_Led                                              4     2      2     955
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _TBbarGraphs                                          4     0      4     216
                                             26 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2529
                                             34 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     525
                                              0 BANK1     15    11      4
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3254
                                             37 COMRAM     6     0      6
                                              0 BANK0      9     9      0
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2344
                                             26 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2894
                     _ADC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                              _begin
 ---------------------------------------------------------------------------------
 (2) _begin                                               13     0     13    1771
                                              0 BANK1     13     0     13
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     108
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2     108
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0    1015
                     _UART_buff_init
 ---------------------------------------------------------------------------------
 (3) _UART_buff_init                                       2     0      2    1015
                                             34 COMRAM     2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6     830
                                             26 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDwriteDisplay                                     24    24      0    4527
                                              0 BANK1     24    24      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _LEDsetValue                                          7     3      4    2539
                                              9 BANK0      1     1      0
                                             16 BANK1      6     2      4
                          _LEDsetBar
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _LEDsetBar                                           24    20      4    1940
                                             34 COMRAM     8     4      4
                                              0 BANK1     16    16      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     907
                                             26 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LEDbegin                                             7     7      0   11345
                                              0 BANK1      7     7      0
                   _I2C1_MasterWrite
                  _LEDBsetBrightness
                       _LEDblinkRate
 ---------------------------------------------------------------------------------
 (2) _LEDblinkRate                                         8     5      3    3841
                                              0 BANK0      8     5      3
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _LEDBsetBrightness                                    8     5      3    3841
                                              0 BANK0      8     5      3
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _I2C1_MasterWrite                                     7     0      7    3299
                                             35 COMRAM     7     0      7
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterWriteTRBBuild                             9     2      7     494
                                             26 COMRAM     9     2      7
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterTRBInsert                                 6     2      4     494
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0    1748
                                             12 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0     178
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR2_CallBack                                        4     4      0     178
                                              0 COMRAM     4     4      0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             2     2      0     330
                                              4 COMRAM     2     2      0
                    _ReadButtonState
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR0_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ReadButtonState                                      4     2      2     262
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _I2C1_ISR                                             2     2      0      31
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (9) _I2C1_Stop                                            3     3      0      31
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0     528
                    i2_UART_buff_get
                   i2_UART_buff_size
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_size                                     2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_get                                      5     3      2     480
                                              6 COMRAM     5     3      2
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  1     1      0     681
                                             11 COMRAM     1     1      0
                    i2_UART_buff_put
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_put                                      5     2      3     658
                                              6 COMRAM     5     2      3
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (10) i2_UART_buff_modulo_inc                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetButtonState
   _LEDbegin
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
     _LEDBsetBrightness
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
     _LEDblinkRate
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
   _LEDsetValue
     _LEDsetBar
       ___awdiv
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   _LEDwriteDisplay
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _UART_buff_init
         _memset
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _begin
       ___awdiv
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _updateComms
     _TBbarGraphs
     _handleIndicators
       _SetLEDOut
         _Off_Led
         _setLED
     _receiveData
       Absolute function(Fake) *
       _CRC8 *
       _CRCcheck *
         Absolute function(Fake) *
         _CRC8 *
         _Receive_available *
           _UART_buff_size
         _Receive_get *
           _UART_buff_get
             _UART_buff_modulo_inc
         _crcBufS_get *
         _crcBufS_status_put *
       _Receive_available *
         _UART_buff_size
       _Receive_get *
         _UART_buff_get
           _UART_buff_modulo_inc
       _Receive_peek *
         _UART_buff_peek
       _Send_put *
         _UART_buff_get
           _UART_buff_modulo_inc
         _UART_buff_put
           _UART_buff_modulo_inc
     _respondECU
       _Delay
       _ToSend
         _FastTransfer_buffer_put
           _FastTransfer_buffer_modulo_inc
         _buttonsCollector (ARG)
           _GetButtonState
       _buttonsCollector
         _GetButtonState
       _sendData
         Absolute function(Fake) *
         _CRC8 *
         _FastTransfer_buffer_flush *
           _memset
         _Send_put *
           _UART_buff_get
             _UART_buff_modulo_inc
           _UART_buff_put
             _UART_buff_modulo_inc
         _crcBufS_put *

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
     i2_UART_buff_put
       i2_UART_buff_modulo_inc
   _EUSART1_Transmit_ISR
     i2_UART_buff_get
       i2_UART_buff_modulo_inc
     i2_UART_buff_size
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR
     _ReadButtonState
     _TMR0_CallBack
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      CE      15       80.5%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      CE      13       80.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      CE       8       80.5%
BITBANK1           100      0       0       5        0.0%
BANK1              100     1A      53       6       32.4%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      A      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      44       1       72.3%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     469       9        0.0%
DATA                 0      0     469      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Fri Jun 17 05:19:00 2016

       __end_of_FastTransfer_buffer_flush 2A12                    i2_UART_buff_modulo_inc 2E46  
        __end_of_TMR2_SetInterruptHandler 3046                                         _i 00CD  
                                       _k 00CF                              _rx_array_inx 003E  
                            ___awdiv@sign 0020                  LEDBsetBrightness@timeOut 00F9  
                              Off_Led@led 001B                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                                       l604 2D50  
                                     l622 2474                                       l617 2402  
                                     l927 284E                                       l935 29A6  
                                     l696 07EE                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                         __end_of_ADC_ISR 305A      FastTransfer_buffer_flush@clearBuffer 0025  
                         _TMR2_Initialize 2EE0                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
                             _TBbarGraphs 2FEE             i2UART_buff_modulo_inc@modulus 0003  
                            __CFG_LVP$OFF 000000                          __end_of_I2C1_ISR 10AC  
                                    l1006 2B9E                                      l1120 1536  
                                    l1165 26C6                                      l1526 23B2  
                                    l6013 26C2                                      l6105 2174  
                                    l6043 22DE                                      l6123 2B88  
                                    l6131 2BA4                                      l6203 209C  
                                    l6053 231A                                      l6061 21DA  
                                    l6117 2B72                                      l6133 2BAA  
                                    l6047 22FE                                      l6231 2B5E  
                                    l6063 21F0                                      l6071 2232  
                                    l6049 230A                                      l6065 2206  
                                    l6057 21AE                                      l6321 0CEA  
                                    l6313 0CC8                                      l6241 2D3C  
                                    l6153 129A                                      l7203 2458  
                                    l7211 18F4                                      l6091 212C  
                                    l6083 20FC                                      l6067 221C  
                                    l6059 21C4                                      l6307 0CA4  
                                    l6171 1E5C                                      l6411 16F8  
                                    l7205 246C                                      l7213 1912  
                                    l6413 1714                                      l6405 16AA  
                                    l7231 1942                                      l6095 2144  
                                    l6087 2114                                      l6079 20E4  
                                    l6351 0D74                                      l6343 0D52  
                                    l6335 0D30                                      l6263 0BD4  
                                    l6255 0BB2                                      l6247 0B90  
                                    l6175 1E66                                      l6431 1402  
                                    l6423 177E                                      l6415 171E  
                                    l6407 16C4                                      l7153 2492  
                                    l6521 279E                                      l6513 2780  
                                    l7233 194A                                      l6329 0D0C  
                                    l6417 1748                                      l6409 16DE  
                    receiveData@crcHolder 0145                                      l7155 24B0  
                                    l6531 27BE                                      l6523 27A2  
                                    l6507 2770                                      l7411 1644  
                                    l7403 1618                                      l6099 215C  
                                    l6291 0C60                                      l6187 1EEA  
                                    l6195 2016                                      l6443 14B2  
                                    l6419 174C                                      l6701 254C  
                                    l7173 24E0                                      l7333 17DE  
                                    l7413 164E                                      l6373 0DDC  
                                    l6365 0DBA                                      l6357 0D98  
                                    l6285 0C3C                                      l6277 0C1A  
                                    l6269 0BF8                                      l6381 0E00  
                                    l6453 1506                                      l6461 152E  
                                    l6429 13DA                                      l6703 256A  
                                    l7175 24E8                                      l6519 2796  
                                    l6535 27C8                                      l7191 23F2  
                                    l7271 19AA                                      l6439 149C  
                                    l6721 259A                                      l7273 19C8  
                                    l7353 1852                                      l7417 166A  
                                    l7409 1634                                      l6457 1526  
                                    l6539 27D6                                      l6651 09AE  
                                    l6635 0798                                      l7195 240C  
                                    l7291 19F8                                      l7363 1884  
                                    l7339 1810                                      l6299 0C82  
                                    l6803 0428                                      l6395 2968  
                                    l6637 07AE                                      l7357 1868  
                                    l7381 1572                                      l6821 04E2  
                                    l6805 042E                                      l6733 0132  
                                    l6671 25FE                                      l6663 25C4  
                                    l6655 0A8A                                      l6647 08F0  
                                    l7199 2422                                      l7367 189A  
                                    l6831 0564                                      l6823 04FC  
                                    l6807 0442                                      l6751 01F2  
                                    l6833 057E                                      l6825 0516  
                                    l6753 01F8                                      l6729 0104  
                                    l6737 0136                                      l6761 0232  
                                    l5971 2E3C                                      l6835 05CC  
                                    l6827 0530                                      l7483 1E34  
                                    l7475 1D6E                                      l6669 25E0  
                                    l6909 2812                                      l6861 0672  
                                    l6829 054A                                      l6837 05E8  
                                    l6781 0294                                      l6749 01DA  
                                    l6695 252E                                      l7399 1604  
                                    l6871 06F4                                      l6863 068C  
                                    l6847 05F4                                      l6767 023E  
                                    l6689 262E                                      l5985 2DD0  
                                    l5993 1A22                                      l6873 070E  
                                    l6865 06A6                                      l6769 0264  
                                    l6785 02C6                                      l6875 075C  
                                    l6867 06C0                                      l5979 2E12  
                                    l5989 2DE0                                      l6981 2380  
                                    l6973 2342                                      l6869 06DA  
                                    l6877 0778                                      l6797 038A  
                                    l6789 02EE                                      l6885 0784  
                                    l6983 239E                                      l6975 234C  
                                    l5999 1A8E                                      l6985 23A8  
                                    l6977 236A                                      l6969 2334  
                                    STR_1 7FE3                                      STR_2 7FFC  
                                    STR_3 7FF6                                      STR_4 7FEE  
                                    _CRC8 2B6C                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    u7000 07E6                                      u7024 0814  
                                    u7025 080C                                      u7130 25BA  
                                    u7114 0AB8                                      u7034 088C  
                                    u6250 2656                                      u7115 0AB0  
                                    u7035 0884                                      u7124 0B2A  
                                    u6340 1FF6                                      u7125 0B22  
                                    u7054 091E                                      u7055 0916  
                                    u7064 0942                                      u7065 093A  
                                    u6361 1298                                      i2l60 0E74  
                                    u7084 09DA                                      u7308 013A  
                                    u7085 09D2                                      u7501 032E  
                                    u7309 014E                                      u7190 2524  
                                    u7094 0A0E                                      i2l71 0F28  
                                    i2l63 0EEA                                      u7095 0A06  
                                    i2l72 0F38                                      u8160 23E8  
                                    u7328 0158                                      i2l65 0EF2  
                                    u8401 17F2                                      u7329 016C  
                                    i2l90 1016                                      i2l82 0FB8  
                                    i2l66 0EFA                                      u6650 29A6  
                                    i2l76 0FA4                                      u7428 0242  
                                    u7348 0176                                      u7268 00DE  
                                    u6644 2988                                      u6708 16FC  
                                    u7429 0256                                      u7349 018A  
                                    u7269 00F2                                      u6645 2982  
                                    i2l94 1048                                      i2l86 0FE8  
                                    u7358 0190                                      u6718 1722  
                                    u7359 01A4                                      u7608 054E  
                                    u7448 0268                                      u7368 01AA  
                                    u7288 010E                                      i2l89 1004  
                                    u8441 154E                                      u7449 027E  
                                    u7369 01BE                                      u7289 0122  
                                    u7618 0568                                      u6738 1768  
                                    u8460 1598                                      u7740 27F2  
                                    u6748 13DE                                      u7708 06DE  
                                    u7628 0582                                      u7468 0298  
                                    u7388 01DE                                      u6668 1694  
                                    u8381 17C0                                      u6749 13F2  
                                    u7469 02AC                                      u7718 06F8  
                                    u7638 05D0                                      u7558 04CC  
                                    u7478 02CA                                      u6678 16AE  
                                    u7479 02DE                                      u6768 1406  
                                    u7728 0712                                      u7568 04E6  
                                    u6688 16C8                                      u8465 158E  
                                    u6769 141A                                      u7770 284E  
                                    u6778 1422                                      u7738 0760  
                                    u7658 065C                                      u7578 0500  
                                    u6698 16E2                                      u6779 1436  
                                    u7764 2830                                      u6788 143E  
                                    u7668 0676                                      u7588 051A  
                                    u7765 282A                                      u6789 1452  
                                    u6798 145A                                      u7678 0690  
                                    u7598 0534                                      u8670 1D82  
                                    u6799 146E                                      u7688 06AA  
                                    u7698 06C4                                      u8690 1E4E  
                                    u8827 2D42                                      _TMR2 000FBC  
                                    _WPUB 000F61                                      _Buff 00F2  
                                    _main 1D4C                              ___ftpack@arg 001B  
                            ___ftpack@exp 001E                           _TMR0_StartTimer 3052  
                                    _time 00DD                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                  ??_I2C1_MasterTRBInsert 001F                                      btemp 0045  
                           __CFG_BORV$190 000000                                      pclat 000FFA  
                                    prodh 000FF4                                      prodl 000FF3  
         __end_of_FastTransfer_buffer_put 13DA                                      start 00D0  
                           __CFG_IESO$OFF 000000                              ___ftmul@cntr 00FB  
                            ___param_bank 000010                              ___ftmul@sign 00FC  
                         __end_of_Off_Led 21AC            I2C1_MasterWriteTRBBuild@length 001F  
          i2UART_buff_modulo_inc@my_value 0005                          _handleIndicators 27E0  
                            ___fttol@exp1 0147                        __size_of_LEDsetBar 0406  
                            ___fttol@lval 0143                                     ?_CRC8 001B  
                 __end_of_TMR0_Initialize 2F3E                                _i2c1_state 0038  
                        __end_of_CRCcheck 1538            __size_of_OSCILLATOR_Initialize 000E  
               I2C1_MasterTRBInsert@count 0020             __end_of_OSCILLATOR_Initialize 303C  
               I2C1_MasterTRBInsert@pflag 001D                          LEDbegin@i2c_addr 013E  
                      crcBufS_put@address 001D                          __end_of_LEDbegin 250E  
                                   ?_main 0001                           __end_of___awdiv 27E0  
                       __end_of_I2C1_Stop 2C80                           __end_of___ftmul 18D8  
                                   _T0CON 000FD5                           ___awdiv@divisor 001D  
                         __end_of___fttol 167C                                     _T2CON 000FBA  
                                   _LATA3 007C4B                                     _LATC1 007C59  
                                   _LATA6 007C4E                                     _LATA7 007C4F  
                                   _LATE0 007C68                                     _LATE1 007C69  
                                   _LATE2 007C6A                            __CFG_DEBUG$OFF 000000  
                                   i2l320 005A                                     i2l322 0066  
                                   i2l324 0072                                     i2l332 0094  
                                   i2l326 007E                                     i2l318 004E  
                                   i2l328 008A                                     i2l452 123C  
                                   i2l463 10DE                                     i2l472 1102  
                                   i2l481 1166                                     i2l466 10EA  
                                   i2l491 118A                                     i2l475 110E  
                                   i2l459 10D2                                     i2l485 1172  
                                   i2l469 10F6                                     i2l494 1196  
                                   i2l488 117E                                     i2l497 11A2  
                         ___awdiv@counter 001F                                     _TMR0H 000FD7  
                                   _TMR0L 000FD6                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                                   _Delay 2D32              __end_of_I2C1_BusCollisionISR 3060  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                       ?_buttonsCollector 0021                      _EUSART1_Transmit_ISR 2D66  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                         ??_I2C1_Initialize 001B  
                        __end_of_TMR0_ISR 2A72                          __end_of_TMR2_ISR 304E  
                           __CFG_WRTB$OFF 000000                              ?_LEDsetValue 0149  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                                   _begin 2A72                            __CFG_EBTRB$OFF 000000  
                                   _brake 00C7                        ??_buttonsCollector 0023  
                                   _group 002C                        __CFG_MCLRE$EXTMCLR 000000  
                           ___ftpack@sign 001F                                     pclath 000FFA  
                                   tablat 000FF5                             ??_Receive_get 0026  
                    __size_of_crcBufS_get 00E2                                     plusw2 000FDB  
                          begin@stuffpeek 0144                      __size_of_crcBufS_put 00D8  
                                   status 000FD8                            __CFG_HFOFST$ON 000000  
                         _TMR2_StartTimer 304E                              ?_receiveData 0001  
                          SetLEDOut@state 0021                         ??_ReadButtonState 0003  
                          __CFG_PBADEN$ON 000000           I2C1_MasterWriteTRBBuild@address 0020  
                            __end_of_CRC8 2BB6                           CRCcheck@SentCRC 00F4  
                         __initialization 2858                     I2C1_MasterWrite@pdata 0024  
                   I2C1_MasterWrite@pflag 0029                __end_of_EUSART1_Initialize 2CF8  
                            __end_of_main 1E52                                ToSend@what 002A  
                                  ??_CRC8 001E                             ?_LEDblinkRate 00F4  
                 __end_of_TMR2_Initialize 2F02                                 ??_ADC_ISR 0001  
             ?_INTERRUPT_InterruptManager 0001                          __end_of_OledFont 7FE3  
                             _i2c1_object 00B8                  _TMR2_SetInterruptHandler 303C  
                                  ??_main 002C                             ___fttol@sign1 0142  
                           __activetblptr 000002                          __end_of_Send_put 2DC6  
               __size_ofi2_UART_buff_size 0016                                    ?_Delay 001B  
                   ?_EUSART1_Transmit_ISR 0001             FastTransfer_buffer_put@towhat 0024  
                           ?_Receive_peek 0001                                    ?_begin 0139  
                 __end_of_TMR0_StartTimer 3056                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                        ___awdiv@dividend 001B                                    _ANSELA 000F38  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                                  _ANSELD 000F3B                                    _ANSELE 000F3C  
                        __end_of___ftpack 23D2                         __end_of_LEDsetBar 0B8E  
                         i2_UART_buff_get 26CA                                    _RC1STA 000FAB  
                                  i2l1165 2758                           i2_UART_buff_put 1B1C  
                                  i2l1196 2F64                            __CFG_WDTEN$OFF 000000  
                                  i2l5111 2754                                    Delay@x 001E  
             UART_buff_modulo_inc@modulus 001D                                    i2l5091 1B3C  
                                  i2l4611 1C38                                    i2l4621 1CBA  
                                  i2l4613 1C52                                    i2l5261 2A32  
                                  i2l4701 1200                                    i2l7111 1026  
                                  i2l4623 1CD4                                    i2l4615 1C6C  
                                  i2l4703 1230                                    i2l4561 2E66  
                                  i2l5097 1BA8                                    i2l7025 0ECC  
                                  i2l4625 1CEE                                    i2l4617 1C86  
                                  i2l5257 2A22                                    i2l4705 124C  
                                  i2l7123 104E                                    i2l7107 101E  
                                  i2l7043 0F22                                    i2l4619 1CA0  
                                  i2l5275 2A6E                                    i2l5267 2A44  
                                  i2l7125 1052                                    i2l7037 0F0A  
                                  i2l7133 1066                                    i2l4629 1D08  
                                  i2l5287 2D90                                    i2l7127 105A  
                                  i2l7057 0F66                                    i2l4691 1150  
                                  i2l4683 10B6                                    i2l7085 0FCA  
                                  i2l7077 0FB2                                    i2l7095 0FF0  
                                  i2l4695 11AE                                    i2l4697 11E4  
                                  i2l4689 111A                            _GetButtonState 2E70  
                                  i2l6577 2F8E                                    i2l6569 2C7A  
                                  _RCREG1 000FAE                          __end_of___lwtoft 2EE0  
                                  _OSCCON 000FD3                                    _SPBRG1 000FAF  
                                  _TX1STA 000FAC                                    _TXREG1 000FAD  
                               ??_Off_Led 001D                        __size_of_SetLEDOut 02AA  
                       ?_I2C1_MasterWrite 0024                            __CFG_XINST$OFF 000000  
                                  _ToSend 2F02                        ??_I2C1_MasterWrite 002B  
                     __end_of_Receive_get 302E                          crcBufS_get@_this 001B  
             ??_FastTransfer_buffer_flush 0027                            _p_i2c1_current 00D1  
                           _output_buffer 0500                          crcBufS_get@space 001E  
                               ??___awdiv 001F                                 CRC8@tempI 0020  
                          __CFG_STVREN$ON 000000                                 ??___ftmul 00F4  
                               ??___fttol 013D                            ??_LEDblinkRate 002B  
              ??_I2C1_MasterWriteTRBBuild 0022                          ?_TMR0_Initialize 0001  
                                  _setLED 21AC                                    _memset 2DC6  
                               ?_I2C1_ISR 0001                                    clear_0 285E  
                                  clear_1 286A                                    clear_2 2876  
                                  clear_3 2882                                    clear_4 288E  
                                  clear_5 289A                                    clear_6 28A6  
                        ___awdiv@quotient 0021                                    _rx_len 003F  
                        __end_of_sendData 17AC                     ___ftmul@f3_as_product 00F8  
                            __pdataCOMRAM 0044                             Send_put@_data 0026  
                            __mediumconst 7CE2                            ??_Receive_peek 001F  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8          __size_of_FastTransfer_buffer_put 0168  
            __end_of_UART_buff_modulo_inc 2E46                     __end_of_TMR0_CallBack 305E  
                 __end_of_TMR2_StartTimer 3052  TMR2_SetInterruptHandler@InterruptHandler 001B  
                  __end_of_GetButtonState 2E98             I2C1_MasterWriteTRBBuild@pdata 001D  
                      LEDblinkRate@status 00FB             __size_of_INTERRUPT_Initialize 0012  
                         SetLEDOut@lednum 001F                         _SYSTEM_Initialize 28CC  
                              __accesstop 0060                   __end_of__initialization 28BE  
                               ?_CRCcheck 0001                     __end_of_TMR2_CallBack 1272  
                      ?_SYSTEM_Initialize 0001                                 ?_LEDbegin 0001  
                           ___rparam_used 000001                   ?i2_UART_buff_modulo_inc 0001  
                          _i2c1_trb_count 0039                              ?_updateComms 0001  
                            TBbarGraphs@b 001D                              TBbarGraphs@t 001B  
                           __end_of_Delay 2D66                                ___ftmul@f1 0026  
                              ___ftmul@f2 0029                     _I2C1_FunctionComplete 2F7A  
                    _I2C1_BusCollisionISR 305E                                ___fttol@f1 0139  
                  LEDwriteDisplay@timeOut 014E                            __pcstackCOMRAM 0001  
                  I2C1_MasterWrite@length 0026                        _crcBufS_status_put 200C  
                     ??_SYSTEM_Initialize 0025                          crcBufS_put@_this 001B  
                           __end_of_begin 2AD0                                 ?_TMR0_ISR 0001  
                               ?_TMR2_ISR 0001    __end_of_FastTransfer_buffer_modulo_inc 2E1C  
 __size_of_FastTransfer_buffer_modulo_inc 002A            _FastTransfer_buffer_modulo_inc 2DF2  
                              ??_I2C1_ISR 0004                          ?_TMR2_Initialize 0001  
            FastTransfer_buffer_put@_this 0021                               ToSend@where 00F4  
                              ___lwtoft@c 0023                        UART_buff_get@_this 0021  
                     ?_crcBufS_status_put 001B                     __end_of_UART_buff_get 26CA  
                  ??_EUSART1_Transmit_ISR 000C                     __end_of_UART_buff_put 1B1C  
                       __end_of_SetLEDOut 0E38                     TMR0_ISR@CountCallBack 00C1  
                                 ??_Delay 001D                            LEDbegin@status 013F  
                 __end_ofi2_UART_buff_get 275C                   __end_ofi2_UART_buff_put 1C36  
                            ?_TBbarGraphs 001B               __end_of_EUSART1_Receive_ISR 2F7A  
               _FastTransfer_buffer_flush 29B0                                   CRC8@crc 0021  
                                 CRC8@len 001D                                   CRC8@sum 001E  
                                 ??_begin 0023                          ?_TMR0_StartTimer 0001  
                         ?_GetButtonState 001B                 __end_of_SYSTEM_Initialize 2940  
                __end_of_handleIndicators 2858                    receiveData@holder_2358 0142  
                     _addressErrorCounter 00C3                      __size_of_LEDsetValue 00A4  
                              __pbssBANK0 0060                                __pbssBANK1 0100  
                              __pbssBANK2 0200                                __pbssBANK3 0300  
                              __pbssBANK4 0400                                __pbssBANK5 0500  
                         __CFG_PLLCFG$OFF 000000                               _Receive_get 3020  
                              ??_CRCcheck 0027                      ??_crcBufS_status_put 001F  
          __end_ofi2_UART_buff_modulo_inc 2E70                                __pnvCOMRAM 0042  
                       begin@givenAddress 013C                   __size_of_UART_buff_init 001E  
                 __size_of_UART_buff_peek 0024                                ??_LEDbegin 002B  
                 __size_of_UART_buff_size 0016                                 ?_Send_put 0001  
                   ?_I2C1_BusCollisionISR 0001                      __size_of_receiveData 06B4  
                                 ?_ToSend 002A                        __CFG_CCP2MX$PORTC1 000000  
                __size_of_LEDwriteDisplay 012A                                ??_TMR0_ISR 0005  
                              ??_TMR2_ISR 0005                        __CFG_CCP3MX$PORTB5 000000  
     FastTransfer_buffer_modulo_inc@value 001B                           _I2C1_Initialize 2C80  
                                 _ADC_ISR 3056                                   ?_setLED 001B  
                                 ?_memset 001B                                _crc_buffer 0128  
                               ?___ftpack 001B                                 TMR0_ISR@x 0005  
                 __size_of_ADC_Initialize 0018                                 ?___lwtoft 0023  
                      UART_buff_put@_this 0021                          i2_UART_buff_size 2FD8  
             i2UART_buff_modulo_inc@value 0001                                   _OSCCON2 000FD2  
                               _I2C1_Stop 2C3E                         _Receive_available 2FAC  
            UART_buff_modulo_inc@my_value 001F                         __CFG_PRICLKEN$OFF 000000  
                                 _OSCTUNE 000F9B                                   _SPBRGH1 000FB0  
                                 _SSP1ADD 000FC8                       sendData@whereToSend 0028  
                         _ReadButtonState 1C36                       _receiveArrayAddress 00D5  
                                 _SSP1BUF 000FC9                          ?_TMR2_StartTimer 0001  
                      ?_Receive_available 001D                                begin@error 013D  
                    __end_of_LEDblinkRate 25A4             I2C1_MasterTRBInsert@ptrb_list 001B  
                                 _Off_Led 20E2                       ??_Receive_available 001F  
                               ?_sendData 0001                         _alignErrorCounter 00C5  
                         __CFG_PWRTEN$OFF 000000                 __size_of_buttonsCollector 0070  
                  ?_I2C1_FunctionComplete 0001                                ??_Send_put 0026  
                                 __Hparam 0000             __size_of_I2C1_MasterTRBInsert 00BA  
                                 __Lparam 0000                ??_TMR2_SetInterruptHandler 001D  
                         __size_of_ToSend 001E                        _p_i2c1_trb_current 00D3  
                    __end_of_Receive_peek 3020                                 _AKNAKsend 0036  
                                 ___awdiv 275C                      _UART_buff_modulo_inc 2E1C  
                                 ___ftmul 17AC                                   ___fttol 1538  
                                 _calc_CS 0037                                   __pcinit 2858  
                              ??___ftpack 0020                           __size_of_setLED 00BE  
                         __size_of_memset 002C                                   __ramtop 0600  
                        i2UART_buff_get@c 000B                                   __ptext0 1D4C  
                                 __ptext1 2CF8                                   __ptext2 2BB6  
                                 __ptext3 167C                                   __ptext4 1F34  
                                 __ptext5 29B0                                   __ptext6 2940  
                                 __ptext7 2E70                                   __ptext8 2F02  
                                 __ptext9 1272                                ??___lwtoft 0026  
                               _T0CONbits 000FD5                          i2UART_buff_put@c 0009  
                   _OSCILLATOR_Initialize 302E                 __end_of_Receive_available 2FC2  
                               _T2CONbits 000FBA                   _FastTransfer_buffer_put 1272  
                   CRCcheck@calculatedCRC 00F5                        _EUSART1_Initialize 2CBC  
                        ?i2_UART_buff_get 0007                  ??_PIN_MANAGER_Initialize 001B  
                        ?i2_UART_buff_put 0007                                ?_I2C1_Stop 0001  
            crcBufS_status_put@wantedTime 0023                                   _timeOut 00DF  
                          TMR2_CallBack@i 0003                             ??_crcBufS_get 001F  
                           ??_crcBufS_put 0020                __size_of_SYSTEM_Initialize 0074  
                    I2C1_ISR@pi2c_buf_ptr 00BF                      end_of_initialization 28BE  
                               Delay@wait 001B                       ?_EUSART1_Initialize 0001  
                 LEDwriteDisplay@i2c_addr 014D                                 _LED_array 0088  
                                 memset@c 001D                                   memset@n 001F  
                                 memset@p 0021                              LEDsetBar@bar 0023  
                           __Lmediumconst 7CE2                                 _LEDsetBar 0788  
                  ??_I2C1_BusCollisionISR 0001                                ??_sendData 0027  
                 __end_of_I2C1_Initialize 2CBC                     ?_UART_buff_modulo_inc 001B  
                    __size_of_updateComms 003A                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc2 000FDE  
                              _respondECU 2BB6                     ReadButtonState@btnnum 0001  
                        begin@stufftosend 013E                       CRCcheck@arrayHolder 00F6  
                            LEDsetValue@k 014D                      ??_EUSART1_Initialize 0025  
                     LEDblinkRate@timeOut 00F9                                 _PORTAbits 000F80  
                               _PORTBbits 000F81                                 _PORTDbits 000F83  
                       ??_LEDwriteDisplay 002B                   __end_of_ReadButtonState 1D4C  
               __size_of_I2C1_MasterWrite 004C                    _dataAdressErrorCounter 00CB  
                       __size_of_I2C1_ISR 0274                                _rx_address 003D  
                               _TRISCbits 000F94                      __size_of_TBbarGraphs 0012  
                 LEDBsetBrightness@status 00FB         I2C1_ISR@i2c_10bit_address_restart 0034  
                     LEDbegin@writeBuffer 0139                              begin@maxSize 013B  
      __size_of_FastTransfer_buffer_flush 0062                     i2UART_buff_size@_this 0001  
                          _UART_buff_init 2F3E                            _UART_buff_peek 2E98  
                          _UART_buff_size 2FC2                       __end_of_crcBufS_get 1F34  
                              ?_LEDsetBar 0023                       __end_of_crcBufS_put 200C  
                 I2C1_MasterWrite@address 0027                         __size_of_CRCcheck 015E  
               LEDBsetBrightness@i2c_addr 00F6                               ___ftmul@exp 00F7  
                       __size_of_LEDbegin 0098                             _moduleAddress 003B  
                    _timer0ReloadVal16bit 0042                                CRCcheck@rt 00F9  
                          __end_of_ToSend 2F20              __end_of_INTERRUPT_Initialize 3012  
    __end_of_TMR2_DefaultInterruptHandler 305C     __size_of_TMR2_DefaultInterruptHandler 0002  
            _TMR2_DefaultInterruptHandler 305A                           _crcErrorCounter 00C9  
                 I2C1_MasterWrite@trBlock 00E8                         crcBufS_put@oldCRC 001E  
                           __pidataCOMRAM 3060                         __size_of_TMR0_ISR 0060  
                I2C1_Stop@completion_code 0003                         __size_of_TMR2_ISR 0008  
                          _ADC_Initialize 2F94                 ??_FastTransfer_buffer_put 0026  
                  ?_OSCILLATOR_Initialize 0001                            __end_of_setLED 226A  
                          __end_of_memset 2DF2                         crcBufS_put@status 001F  
                 buttonsCollector@sendVal 0026                              receiveData@r 0149  
              __size_of_Receive_available 0016                              receiveData@u 0147  
                        ??_GetButtonState 001D                         _LEDBsetBrightness 25A4  
                     start_initialization 2858                     __size_of_LEDblinkRate 0096  
                             ??_I2C1_Stop 0001                  __size_of_TMR0_Initialize 001E  
         __size_of_PIN_MANAGER_Initialize 0050                     crcBufS_get@wantedTime 0025  
                      ?_LEDBsetBrightness 00F4                                 _SetLEDOut 0B8E  
       __size_of_I2C1_MasterWriteTRBBuild 0044                         ?_handleIndicators 0025  
               ?_I2C1_MasterWriteTRBBuild 001B                    __end_of_UART_buff_init 2F5C  
                  __end_of_UART_buff_peek 2EBC                            UART_buff_get@c 0025  
                  __end_of_UART_buff_size 2FD8                              ?_Receive_get 0001  
                          UART_buff_put@c 0023                        ??_handleIndicators 0027  
                         LEDbegin@timeOut 013C                       ??_LEDBsetBrightness 002B  
                   __size_of_Receive_peek 000E                          _buttonsCollector 2940  
                __end_ofi2_UART_buff_size 2FEE                          ?_I2C1_Initialize 0001  
                                ??_ToSend 002C                    ??_UART_buff_modulo_inc 001F  
                                CRC8@data 001B                           crcBufS_get@time 001D  
                       __size_of_Send_put 002E                               ?_respondECU 0001  
              LEDwriteDisplay@writeBuffer 0139                    __size_of_TMR0_CallBack 0002  
                  __end_of_ADC_Initialize 2FAC                                LEDsetBar@a 0029  
                              LEDsetBar@c 0027                                  ?_ADC_ISR 0001  
                                ??_setLED 001D                                  ??_memset 0021  
                            _LEDblinkRate 250E                         handleIndicators@i 002A  
           ?_TMR2_DefaultInterruptHandler 0001                 __end_of_LEDBsetBrightness 2638  
            I2C1_MasterWriteTRBBuild@ptrb 001B                          ?_ReadButtonState 0001  
                       __size_of___ftpack 00AE                    __size_of_TMR2_CallBack 01C6  
                             __pbssCOMRAM 002C                         __size_of___lwtoft 0024  
           __size_of_EUSART1_Transmit_ISR 0032                             __pcstackBANK0 00F4  
                           __pcstackBANK1 0139                             ??_LEDsetValue 00FD  
                __size_of_TMR2_Initialize 0022                             _i2c1_tr_queue 00ED  
                   LEDwriteDisplay@status 0150                              _Receive_peek 3012  
                              ?_SetLEDOut 001F                       UART_buff_init@_this 0023  
                             _crcBufS_get 1E52                       UART_buff_peek@_this 001B  
                             _crcBufS_put 1F34                          LEDsetValue@color 014B  
                         ?_UART_buff_init 0023                           ?_UART_buff_peek 001B  
                         ?_UART_buff_size 001B                          LEDsetValue@value 0149  
                 ??_I2C1_FunctionComplete 0001              __size_of_EUSART1_Receive_ISR 001E  
                           ??_receiveData 0139               __size_of_crcBufS_status_put 00D6  
                              sendData@CS 0029                                  ?_Off_Led 001B  
                             ??_LEDsetBar 0139                                 __pnvBANK0 00FE  
                __size_of_TMR0_StartTimer 0004                    __size_of_UART_buff_get 0092  
                  __size_of_UART_buff_put 011A                    _PIN_MANAGER_Initialize 2AD0  
                       __size_of_sendData 0130                                 __pintcode 0008  
                           __pmediumconst 7CE2                                  ?___awdiv 001B  
                                ?___ftmul 0026                                  ?___fttol 0139  
                         ?_ADC_Initialize 0001                                  _I2C1_ISR 0E38  
            ??_INTERRUPT_InterruptManager 000D              LEDBsetBrightness@writeBuffer 00F7  
                    i2UART_buff_get@_this 0007                          _I2C1_MasterWrite 2B20  
                                _BAUD1CON 000FB8              __end_of_I2C1_MasterTRBInsert 2324  
                       buttonsCollector@i 0028                            __size_of_Delay 0034  
                               _butnarray 00B0                            __size_of_begin 005E  
                           _TMR0_CallBack 305C                       __size_of_respondECU 0044  
                    _INTERRUPT_Initialize 3000                      GetButtonState@btnnum 001B  
                            _receiveArray 0100                               _LEDNUM_ENAB 0098  
                  I2C1_MasterRead@trBlock 00E3                         ??_TMR0_Initialize 001B  
                     __end_of_LEDsetValue 2476                                  _CRCcheck 13DA  
                                _LATCbits 000F8B                                  _LEDState 00A4  
                     UART_buff_size@_this 001B                             _TMR2_CallBack 10AC  
                                _IPR1bits 000F9F                                  _LEDbegin 2476  
                                _IPR2bits 000FA2                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                             LEDblinkRate@b 00F4  
                __size_of_TMR2_StartTimer 0004                           _LEDwriteDisplay 18D8  
     __size_of_INTERRUPT_InterruptManager 00C8                                  i2u401_40 10F2  
                                i2u411_40 117A                                  i2u403_40 10FE  
                                i2u413_40 1186                                  i2u405_40 110A  
                                i2u415_40 1192                                  i2u407_40 1116  
                                i2u423_48 125C                                  i2u521_40 26E8  
                                i2u417_40 119E                                  i2u409_40 116E  
                                _PIR1bits 000F9E                                  i2u419_40 11AA  
                                _PIR2bits 000FA1                                  i2u541_40 2D80  
                                i2u390_40 1C80                                  i2u390_46 1C82  
                                i2u391_40 1C9A                                  i2u391_46 1C9C  
                                i2u392_40 1CB4                                  i2u392_46 1CB6  
                                i2u393_40 1CCE                                  i2u393_46 1CD0  
                                i2u394_40 1CE8                                  i2u394_46 1CEA  
                                i2u395_40 1D02                                  i2u539_40 2A60  
                                i2u395_46 1D04                                  i2u388_40 1C4C  
                                i2u388_46 1C4E                                  i2u389_40 1C66  
                                i2u397_40 10DA                                  i2u389_46 1C68  
                                i2u399_40 10E6                       begin@stuffavailable 0142  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                     __end_of_receiveData 0788                                  _SSP1CON1 000FC6  
                                _SSP1CON3 000FCB                                  _TMR0_ISR 2A12  
                                _TMR2_ISR 3046                                 main@ADCNT 0151  
                                _SSP1STAT 000FC7            FastTransfer_buffer_flush@_this 0023  
                            _input_buffer 0400                                 _rx_buffer 0300  
                        __size_of_ADC_ISR 0004                                _ADCON0bits 000FC2  
              __size_of_LEDBsetBrightness 0094                      i2UART_buff_put@_this 0007  
                           _UART_buff_get 2638                             _UART_buff_put 1A02  
          ??_TMR2_DefaultInterruptHandler 0001         __size_of_TMR2_SetInterruptHandler 000A  
               ?_TMR2_SetInterruptHandler 001B                            ?_TMR0_CallBack 0001  
                ??i2_UART_buff_modulo_inc 0005                               ??_SetLEDOut 0023  
                             _INTCON2bits 000FF1                     ?_INTERRUPT_Initialize 0001  
                       _sendStructAddress 00D7                  __size_ofi2_UART_buff_get 0092  
                       ??_TMR2_Initialize 001D                  __size_ofi2_UART_buff_put 011A  
                                _OledFont 7CE3                            ?_TMR2_CallBack 0001  
                           ??_updateComms 002C                      __size_of_Receive_get 000E  
                        __size_of_Off_Led 00CA                                  __Hrparam 0000  
                                _Send_put 2D98             __size_of_I2C1_BusCollisionISR 0002  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                               setLED@led 001B                    I2C1_ISR@i2c_bytes_left 0035  
                       __CFG_P2BMX$PORTD2 000000                   LEDblinkRate@writeBuffer 00F7  
                 ??_OSCILLATOR_Initialize 001B                         ??_TMR0_StartTimer 001B  
                          LEDsetBar@color 0025                          __size_of___awdiv 0084  
                        __size_of___ftmul 012C                          __size_of___fttol 0144  
             __size_of_EUSART1_Initialize 003C                       begin@stufftoreceive 0140  
                                ___ftpack 2324          __end_of_I2C1_MasterWriteTRBBuild 2C3E  
                                ___lwtoft 2EBC                            ?_UART_buff_get 0021  
                          ?_UART_buff_put 0021                               CRC8@extract 001F  
                __end_of_buttonsCollector 29B0                                 sendData@i 002A  
                           ??_TBbarGraphs 001F                       I2C1_ISR@i2c_address 0040  
                             _LEDsetValue 23D2                  crcBufS_status_put@status 001E  
                                __ptext10 2DF2                                  __ptext11 2D32  
                                __ptext20 3020                                  __ptext12 00D4  
                                __ptext21 2638                                  __ptext13 2D98  
                                __ptext30 2FEE                                  __ptext22 2E1C  
                                __ptext14 1A02                                  __ptext31 2EBC  
                                __ptext23 2FAC                                  __ptext15 3012  
                                __ptext40 2F20                                  __ptext32 1538  
                                __ptext24 2FC2                                  __ptext16 2E98  
                                __ptext41 3052                                  __ptext33 17AC  
                                __ptext25 2B6C                                  __ptext17 13DA  
                                __ptext50 18D8                                  __ptext42 2AD0  
                                __ptext34 2324                                  __ptext26 27E0  
                                __ptext18 200C                                  __ptext51 23D2  
                                __ptext43 302E                                  __ptext35 28CC  
                                __ptext27 0B8E                                  __ptext19 1E52  
                                __ptext52 0788                                  __ptext44 3000  
                                __ptext36 2A72                                  __ptext28 21AC  
                                __ptext61 3046                                  __ptext53 275C  
                                __ptext45 2C80                                  __ptext37 2EE0  
                                __ptext29 20E2                                  __ptext70 305E  
                                __ptext62 10AC                                  __ptext54 2476  
                                __ptext46 2CBC                                  __ptext38 304E  
                                __ptext71 2D66                                  __ptext63 305A  
                                __ptext55 250E                                  __ptext47 2F3E  
                                __ptext39 303C                                  __ptext72 2FD8  
                                __ptext64 2A12                                  __ptext56 25A4  
                                __ptext48 2DC6                                  __ptext73 26CA  
                                __ptext65 305C                                  __ptext57 2B20  
                                __ptext49 2F94                                  __ptext74 2F5C  
                                __ptext66 1C36                                  __ptext58 2BFA  
                                __ptext75 1B1C                                  __ptext67 0E38  
                                __ptext59 226A                                  __ptext76 2E46  
                                __ptext68 2C3E                                  __ptext77 3056  
                                __ptext69 2F7A                                  __ptext78 0000  
                            _SSP1CON1bits 000FC6                              _SSP1CON2bits 000FC5  
                           __size_of_CRC8 004A                                  begin@ptr 0139  
                 EUSART1_Receive_ISR@data 000C                   __end_of_LEDwriteDisplay 1A02  
                           _returnAddress 003C                             __size_of_main 0106  
                             _receiveData 00D4                            _Transmit_stall 0044  
                                _sendData 167C                      _I2C1_MasterTRBInsert 226A  
                       ?i2_UART_buff_size 0001                                _RC1STAbits 000FAB  
                    LEDblinkRate@i2c_addr 00F6                              ??_respondECU 002C  
                      ??i2_UART_buff_size 0003                                  int$flags 0045  
               __size_of_handleIndicators 0078             handleIndicators@oldIndicators 00E1  
                            _serial_write 0032                                  _throttle 00DB  
                       ??_TMR2_StartTimer 001B                       __end_of_updateComms 2D32  
      __end_of_INTERRUPT_InterruptManager 00D0                _INTERRUPT_InterruptManager 0008  
                     _EUSART1_Receive_ISR 2F5C                         receiveData@holder 013F  
                      LEDBsetBrightness@b 00F4                                _INTCONbits 000FF2  
                         ??_TMR0_CallBack 0001                 UART_buff_modulo_inc@value 001B  
      handleIndicators@receivedIndicators 0025                          ??_UART_buff_init 0025  
                        ??_UART_buff_peek 001D                          ??_UART_buff_size 001D  
                  ??_INTERRUPT_Initialize 001B                                  memset@p1 001B  
                        _serial_available 002E           __size_ofi2_UART_buff_modulo_inc 002A  
                            ?_crcBufS_get 001B                              ?_crcBufS_put 001B  
                                intlevel2 0000                   crcBufS_status_put@_this 001B  
                         ??_TMR2_CallBack 0001                        __end_of_respondECU 2BFA  
                     __end_of_TBbarGraphs 3000                      ?_EUSART1_Receive_ISR 0001  
  FastTransfer_buffer_modulo_inc@my_value 001F            FastTransfer_buffer_put@towhere 0023  
                 ?_PIN_MANAGER_Initialize 0001                  __end_of_I2C1_MasterWrite 2B6C  
          __size_of_I2C1_FunctionComplete 001A             __end_of_I2C1_FunctionComplete 2F94  
                   ?_I2C1_MasterTRBInsert 001B              __end_of_EUSART1_Transmit_ISR 2D98  
                             _ring_buffer 0200                          ??_ADC_Initialize 001B  
              ?_FastTransfer_buffer_flush 0023                         ??i2_UART_buff_get 0009  
                             _serial_peek 00D9                               _serial_read 0030  
                       ??i2_UART_buff_put 000A                  ?_FastTransfer_buffer_put 0021  
           __size_of_UART_buff_modulo_inc 002A                  __size_of_I2C1_Initialize 003C  
                         ??_UART_buff_get 0023                           ??_UART_buff_put 0024  
   FastTransfer_buffer_modulo_inc@modulus 001D                    crcBufS_status_put@time 001D  
                         _TMR0_Initialize 2F20                 receiveData@crcHolder_2359 0146  
                _I2C1_MasterWriteTRBBuild 2BFA                         __CFG_T3CMX$PORTC0 000000  
                          _maxDataAddress 003A                  __size_of_ReadButtonState 0116  
              __end_of_crcBufS_status_put 20E2                     ??_EUSART1_Receive_ISR 000C  
          __end_of_PIN_MANAGER_Initialize 2B20          ??_FastTransfer_buffer_modulo_inc 001F  
         ?_FastTransfer_buffer_modulo_inc 001B                          ?_LEDwriteDisplay 0001  
                 __size_of_GetButtonState 0028                        __size_of_I2C1_Stop 0042  
                           _displaybuffer 0060                         __CFG_FOSC$INTIO67 000000  
                   _TMR2_InterruptHandler 00FE                               _updateComms 2CF8  
