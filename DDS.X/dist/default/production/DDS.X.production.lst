

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Jun 10 11:33:01 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    90  0000                     
    91                           	psect	idataCOMRAM
    92  002C4C                     __pidataCOMRAM:
    93                           	opt stack 0
    94                           
    95                           ;initializer for _Transmit_stall
    96  002C4C  01                 	db	1
    97                           
    98                           	psect	nvCOMRAM
    99  000043                     __pnvCOMRAM:
   100                           	opt stack 0
   101  000043                     _timer0ReloadVal16bit:
   102                           	opt stack 0
   103  000043                     	ds	2
   104  0000                     _ANSELA	set	3896
   105  0000                     _ANSELB	set	3897
   106  0000                     _ANSELC	set	3898
   107  0000                     _ANSELD	set	3899
   108  0000                     _ANSELE	set	3900
   109  0000                     _ADCON0	set	4034
   110  0000                     _ADCON0bits	set	4034
   111  0000                     _ADCON1	set	4033
   112  0000                     _ADCON2	set	4032
   113  0000                     _ADRESH	set	4036
   114  0000                     _ADRESL	set	4035
   115  0000                     _BAUD1CON	set	4024
   116  0000                     _INTCON2bits	set	4081
   117  0000                     _INTCONbits	set	4082
   118  0000                     _IPR1bits	set	3999
   119  0000                     _IPR2bits	set	4002
   120  0000                     _LATA	set	3977
   121  0000                     _LATB	set	3978
   122  0000                     _LATC	set	3979
   123  0000                     _LATCbits	set	3979
   124  0000                     _LATD	set	3980
   125  0000                     _LATE	set	3981
   126  0000                     _OSCCON	set	4051
   127  0000                     _OSCCON2	set	4050
   128  0000                     _OSCTUNE	set	3995
   129  0000                     _PIE1bits	set	3997
   130  0000                     _PIE2bits	set	4000
   131  0000                     _PIR1bits	set	3998
   132  0000                     _PIR2bits	set	4001
   133  0000                     _PORTAbits	set	3968
   134  0000                     _PORTBbits	set	3969
   135  0000                     _PORTDbits	set	3971
   136  0000                     _RC1STA	set	4011
   137  0000                     _RC1STAbits	set	4011
   138  0000                     _RCONbits	set	4048
   139  0000                     _RCREG1	set	4014
   140  0000                     _SPBRG1	set	4015
   141  0000                     _SPBRGH1	set	4016
   142  0000                     _SSP1ADD	set	4040
   143  0000                     _SSP1BUF	set	4041
   144  0000                     _SSP1CON1	set	4038
   145  0000                     _SSP1CON1bits	set	4038
   146  0000                     _SSP1CON2bits	set	4037
   147  0000                     _SSP1CON3	set	4043
   148  0000                     _SSP1STAT	set	4039
   149  0000                     _T0CON	set	4053
   150  0000                     _T0CONbits	set	4053
   151  0000                     _TMR0H	set	4055
   152  0000                     _TMR0L	set	4054
   153  0000                     _TRISA	set	3986
   154  0000                     _TRISB	set	3987
   155  0000                     _TRISC	set	3988
   156  0000                     _TRISCbits	set	3988
   157  0000                     _TRISD	set	3989
   158  0000                     _TRISE	set	3990
   159  0000                     _TX1STA	set	4012
   160  0000                     _TXREG1	set	4013
   161  0000                     _WPUB	set	3937
   162  0000                     _LATA3	set	31819
   163  0000                     _LATB3	set	31827
   164  0000                     _LATB5	set	31829
   165  0000                     _LATD1	set	31841
   166  0000                     _LATE1	set	31849
   167  0000                     _LATE2	set	31850
   168                           
   169                           ; #config settings
   170  0000                     
   171                           	psect	cinit
   172  0025A2                     __pcinit:
   173                           	opt stack 0
   174  0025A2                     start_initialization:
   175                           	opt stack 0
   176  0025A2                     __initialization:
   177                           	opt stack 0
   178                           
   179                           ; Clear objects allocated to BANK4 (206 bytes)
   180  0025A2  EE04  F000         	lfsr	0,__pbssBANK4
   181  0025A6  0ECE               	movlw	206
   182  0025A8                     clear_0:
   183  0025A8  6AEE               	clrf	postinc0,c
   184  0025AA  06E8               	decf	wreg,f,c
   185  0025AC  E1FD               	bnz	clear_0
   186                           
   187                           ; Clear objects allocated to BANK3 (206 bytes)
   188  0025AE  EE03  F000         	lfsr	0,__pbssBANK3
   189  0025B2  0ECE               	movlw	206
   190  0025B4                     clear_1:
   191  0025B4  6AEE               	clrf	postinc0,c
   192  0025B6  06E8               	decf	wreg,f,c
   193  0025B8  E1FD               	bnz	clear_1
   194                           
   195                           ; Clear objects allocated to BANK2 (200 bytes)
   196  0025BA  EE02  F000         	lfsr	0,__pbssBANK2
   197  0025BE  0EC8               	movlw	200
   198  0025C0                     clear_2:
   199  0025C0  6AEE               	clrf	postinc0,c
   200  0025C2  06E8               	decf	wreg,f,c
   201  0025C4  E1FD               	bnz	clear_2
   202                           
   203                           ; Clear objects allocated to BANK1 (246 bytes)
   204  0025C6  EE01  F000         	lfsr	0,__pbssBANK1
   205  0025CA  0EF6               	movlw	246
   206  0025CC                     clear_3:
   207  0025CC  6AEE               	clrf	postinc0,c
   208  0025CE  06E8               	decf	wreg,f,c
   209  0025D0  E1FD               	bnz	clear_3
   210                           
   211                           ; Clear objects allocated to BANK0 (115 bytes)
   212  0025D2  EE00  F060         	lfsr	0,__pbssBANK0
   213  0025D6  0E73               	movlw	115
   214  0025D8                     clear_4:
   215  0025D8  6AEE               	clrf	postinc0,c
   216  0025DA  06E8               	decf	wreg,f,c
   217  0025DC  E1FD               	bnz	clear_4
   218                           
   219                           ; Clear objects allocated to COMRAM (24 bytes)
   220  0025DE  EE00  F02B         	lfsr	0,__pbssCOMRAM
   221  0025E2  0E18               	movlw	24
   222  0025E4                     clear_5:
   223  0025E4  6AEE               	clrf	postinc0,c
   224  0025E6  06E8               	decf	wreg,f,c
   225  0025E8  E1FD               	bnz	clear_5
   226                           
   227                           ; Initialize objects allocated to COMRAM (1 bytes)
   228                           ; load TBLPTR registers with __pidataCOMRAM
   229  0025EA  0E4C               	movlw	low __pidataCOMRAM
   230  0025EC  6EF6               	movwf	tblptrl,c
   231  0025EE  0E2C               	movlw	high __pidataCOMRAM
   232  0025F0  6EF7               	movwf	tblptrh,c
   233  0025F2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   234  0025F4  6EF8               	movwf	tblptru,c
   235  0025F6  0009               	tblrd		*+	;fetch initializer
   236  0025F8  CFF5 F045          	movff	tablat,__pdataCOMRAM
   237  0025FC                     end_of_initialization:
   238                           	opt stack 0
   239  0025FC                     __end_of__initialization:
   240                           	opt stack 0
   241  0025FC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   242  0025FE  6EF8               	movwf	tblptru,c
   243  002600  0100               	movlb	0
   244  002602  EFDC  F00C         	goto	_main	;jump to C main() function
   245                           tblptru	equ	0xFF8
   246                           tblptrh	equ	0xFF7
   247                           tblptrl	equ	0xFF6
   248                           tablat	equ	0xFF5
   249                           postinc0	equ	0xFEE
   250                           wreg	equ	0xFE8
   251                           
   252                           	psect	bssCOMRAM
   253  00002B                     __pbssCOMRAM:
   254                           	opt stack 0
   255  00002B                     _p_i2c1_trb_current:
   256                           	opt stack 0
   257  00002B                     	ds	2
   258  00002D                     _serial_available:
   259                           	opt stack 0
   260  00002D                     	ds	2
   261  00002F                     _serial_read:
   262                           	opt stack 0
   263  00002F                     	ds	2
   264  000031                     _serial_write:
   265                           	opt stack 0
   266  000031                     	ds	2
   267  000033                     I2C1_ISR@i2c_10bit_address_restart:
   268                           	opt stack 0
   269  000033                     	ds	1
   270  000034                     I2C1_ISR@i2c_bytes_left:
   271                           	opt stack 0
   272  000034                     	ds	1
   273  000035                     _AKNAKsend:
   274                           	opt stack 0
   275  000035                     	ds	1
   276  000036                     _calc_CS:
   277                           	opt stack 0
   278  000036                     	ds	1
   279  000037                     _i2c1_state:
   280                           	opt stack 0
   281  000037                     	ds	1
   282  000038                     _i2c1_trb_count:
   283                           	opt stack 0
   284  000038                     	ds	1
   285  000039                     _maxDataAddress:
   286                           	opt stack 0
   287  000039                     	ds	1
   288  00003A                     _moduleAddress:
   289                           	opt stack 0
   290  00003A                     	ds	1
   291  00003B                     _returnAddress:
   292                           	opt stack 0
   293  00003B                     	ds	1
   294  00003C                     _rx_address:
   295                           	opt stack 0
   296  00003C                     	ds	1
   297  00003D                     _rx_array_inx:
   298                           	opt stack 0
   299  00003D                     	ds	1
   300  00003E                     _rx_len:
   301                           	opt stack 0
   302  00003E                     	ds	1
   303  00003F                     I2C1_ISR@i2c_address:
   304                           	opt stack 0
   305  00003F                     	ds	2
   306  000041                     _group:
   307                           	opt stack 0
   308  000041                     	ds	2
   309                           tblptru	equ	0xFF8
   310                           tblptrh	equ	0xFF7
   311                           tblptrl	equ	0xFF6
   312                           tablat	equ	0xFF5
   313                           postinc0	equ	0xFEE
   314                           wreg	equ	0xFE8
   315                           
   316                           	psect	dataCOMRAM
   317  000045                     __pdataCOMRAM:
   318                           	opt stack 0
   319  000045                     _Transmit_stall:
   320                           	opt stack 0
   321  000045                     	ds	1
   322                           tblptru	equ	0xFF8
   323                           tblptrh	equ	0xFF7
   324                           tblptrl	equ	0xFF6
   325                           tablat	equ	0xFF5
   326                           postinc0	equ	0xFEE
   327                           wreg	equ	0xFE8
   328                           
   329                           	psect	bssBANK0
   330  000060                     __pbssBANK0:
   331                           	opt stack 0
   332  000060                     _displaybuffer:
   333                           	opt stack 0
   334  000060                     	ds	40
   335  000088                     _butnarray:
   336                           	opt stack 0
   337  000088                     	ds	8
   338  000090                     _i2c1_object:
   339                           	opt stack 0
   340  000090                     	ds	7
   341  000097                     I2C1_ISR@pi2c_buf_ptr:
   342                           	opt stack 0
   343  000097                     	ds	2
   344  000099                     TMR0_ISR@CountCallBack:
   345                           	opt stack 0
   346  000099                     	ds	2
   347  00009B                     _addressErrorCounter:
   348                           	opt stack 0
   349  00009B                     	ds	2
   350  00009D                     _alignErrorCounter:
   351                           	opt stack 0
   352  00009D                     	ds	2
   353  00009F                     _brake:
   354                           	opt stack 0
   355  00009F                     	ds	2
   356  0000A1                     _crcErrorCounter:
   357                           	opt stack 0
   358  0000A1                     	ds	2
   359  0000A3                     _dataAdressErrorCounter:
   360                           	opt stack 0
   361  0000A3                     	ds	2
   362  0000A5                     _p_i2c1_current:
   363                           	opt stack 0
   364  0000A5                     	ds	2
   365  0000A7                     _receiveArrayAddress:
   366                           	opt stack 0
   367  0000A7                     	ds	2
   368  0000A9                     _sendStructAddress:
   369                           	opt stack 0
   370  0000A9                     	ds	2
   371  0000AB                     _serial_peek:
   372                           	opt stack 0
   373  0000AB                     	ds	2
   374  0000AD                     _throttle:
   375                           	opt stack 0
   376  0000AD                     	ds	2
   377  0000AF                     _time:
   378                           	opt stack 0
   379  0000AF                     	ds	2
   380  0000B1                     handleIndicators@oldIndicators:
   381                           	opt stack 0
   382  0000B1                     	ds	2
   383  0000B3                     _crc_buffer:
   384                           	opt stack 0
   385  0000B3                     	ds	17
   386  0000C4                     I2C1_MasterRead@trBlock:
   387                           	opt stack 0
   388  0000C4                     	ds	5
   389  0000C9                     I2C1_MasterWrite@trBlock:
   390                           	opt stack 0
   391  0000C9                     	ds	5
   392  0000CE                     _i2c1_tr_queue:
   393                           	opt stack 0
   394  0000CE                     	ds	5
   395                           tblptru	equ	0xFF8
   396                           tblptrh	equ	0xFF7
   397                           tblptrl	equ	0xFF6
   398                           tablat	equ	0xFF5
   399                           postinc0	equ	0xFEE
   400                           wreg	equ	0xFE8
   401                           
   402                           	psect	bssBANK1
   403  000100                     __pbssBANK1:
   404                           	opt stack 0
   405  000100                     _ring_buffer:
   406                           	opt stack 0
   407  000100                     	ds	206
   408  0001CE                     _receiveArray:
   409                           	opt stack 0
   410  0001CE                     	ds	40
   411                           tblptru	equ	0xFF8
   412                           tblptrh	equ	0xFF7
   413                           tblptrl	equ	0xFF6
   414                           tablat	equ	0xFF5
   415                           postinc0	equ	0xFEE
   416                           wreg	equ	0xFE8
   417                           
   418                           	psect	bssBANK2
   419  000200                     __pbssBANK2:
   420                           	opt stack 0
   421  000200                     _rx_buffer:
   422                           	opt stack 0
   423  000200                     	ds	200
   424                           tblptru	equ	0xFF8
   425                           tblptrh	equ	0xFF7
   426                           tblptrl	equ	0xFF6
   427                           tablat	equ	0xFF5
   428                           postinc0	equ	0xFEE
   429                           wreg	equ	0xFE8
   430                           
   431                           	psect	bssBANK3
   432  000300                     __pbssBANK3:
   433                           	opt stack 0
   434  000300                     _input_buffer:
   435                           	opt stack 0
   436  000300                     	ds	206
   437                           tblptru	equ	0xFF8
   438                           tblptrh	equ	0xFF7
   439                           tblptrl	equ	0xFF6
   440                           tablat	equ	0xFF5
   441                           postinc0	equ	0xFEE
   442                           wreg	equ	0xFE8
   443                           
   444                           	psect	bssBANK4
   445  000400                     __pbssBANK4:
   446                           	opt stack 0
   447  000400                     _output_buffer:
   448                           	opt stack 0
   449  000400                     	ds	206
   450                           tblptru	equ	0xFF8
   451                           tblptrh	equ	0xFF7
   452                           tblptrl	equ	0xFF6
   453                           tablat	equ	0xFF5
   454                           postinc0	equ	0xFEE
   455                           wreg	equ	0xFE8
   456                           
   457                           	psect	cstackBANK0
   458  0000D3                     __pcstackBANK0:
   459                           	opt stack 0
   460  0000D3                     ??_LEDsetBar:
   461  0000D3                     ?___ftmul:
   462                           	opt stack 0
   463  0000D3                     sendData@whereToSend:
   464                           	opt stack 0
   465  0000D3                     CRCcheck@SentCRC:
   466                           	opt stack 0
   467  0000D3                     LEDBsetBrightness@b:
   468                           	opt stack 0
   469  0000D3                     LEDblinkRate@b:
   470                           	opt stack 0
   471  0000D3                     begin@ptr:
   472                           	opt stack 0
   473  0000D3                     ToSend@what:
   474                           	opt stack 0
   475  0000D3                     ___ftmul@f1:
   476                           	opt stack 0
   477  0000D3                     LEDwriteDisplay@writeBuffer:
   478                           	opt stack 0
   479                           
   480                           ; 20 bytes @ 0x0
   481  0000D3                     	ds	1
   482  0000D4                     sendData@CS:
   483                           	opt stack 0
   484  0000D4                     CRCcheck@calculatedCRC:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0x1
   488  0000D4                     	ds	1
   489  0000D5                     LEDBsetBrightness@i2c_addr:
   490                           	opt stack 0
   491  0000D5                     LEDblinkRate@i2c_addr:
   492                           	opt stack 0
   493  0000D5                     begin@maxSize:
   494                           	opt stack 0
   495  0000D5                     sendData@i:
   496                           	opt stack 0
   497  0000D5                     CRCcheck@arrayHolder:
   498                           	opt stack 0
   499                           
   500                           ; 3 bytes @ 0x2
   501  0000D5                     	ds	1
   502  0000D6                     begin@givenAddress:
   503                           	opt stack 0
   504  0000D6                     LEDBsetBrightness@writeBuffer:
   505                           	opt stack 0
   506  0000D6                     LEDblinkRate@writeBuffer:
   507                           	opt stack 0
   508  0000D6                     ___ftmul@f2:
   509                           	opt stack 0
   510                           
   511                           ; 3 bytes @ 0x3
   512  0000D6                     	ds	1
   513  0000D7                     begin@error:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0x4
   517  0000D7                     	ds	1
   518  0000D8                     LEDBsetBrightness@timeOut:
   519                           	opt stack 0
   520  0000D8                     LEDblinkRate@timeOut:
   521                           	opt stack 0
   522  0000D8                     begin@stufftosend:
   523                           	opt stack 0
   524  0000D8                     CRCcheck@rt:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0x5
   528  0000D8                     	ds	1
   529  0000D9                     ___ftmul@exp:
   530                           	opt stack 0
   531                           
   532                           ; 1 bytes @ 0x6
   533  0000D9                     	ds	1
   534  0000DA                     ??_receiveData:
   535  0000DA                     LEDBsetBrightness@status:
   536                           	opt stack 0
   537  0000DA                     LEDblinkRate@status:
   538                           	opt stack 0
   539  0000DA                     begin@stufftoreceive:
   540                           	opt stack 0
   541  0000DA                     ___ftmul@f3_as_product:
   542                           	opt stack 0
   543                           
   544                           ; 3 bytes @ 0x7
   545  0000DA                     	ds	1
   546  0000DB                     LEDbegin@writeBuffer:
   547                           	opt stack 0
   548                           
   549                           ; 3 bytes @ 0x8
   550  0000DB                     	ds	1
   551  0000DC                     begin@stuffavailable:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x9
   555  0000DC                     	ds	1
   556  0000DD                     ___ftmul@cntr:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0xA
   560  0000DD                     	ds	1
   561  0000DE                     ___ftmul@sign:
   562                           	opt stack 0
   563  0000DE                     LEDbegin@timeOut:
   564                           	opt stack 0
   565  0000DE                     begin@stuffpeek:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0xB
   569  0000DE                     	ds	1
   570  0000DF                     ?___fttol:
   571                           	opt stack 0
   572  0000DF                     ___fttol@f1:
   573                           	opt stack 0
   574                           
   575                           ; 3 bytes @ 0xC
   576  0000DF                     	ds	1
   577  0000E0                     LEDbegin@i2c_addr:
   578                           	opt stack 0
   579  0000E0                     receiveData@holder:
   580                           	opt stack 0
   581                           
   582                           ; 3 bytes @ 0xD
   583  0000E0                     	ds	1
   584  0000E1                     LEDbegin@status:
   585                           	opt stack 0
   586                           
   587                           ; 1 bytes @ 0xE
   588  0000E1                     	ds	2
   589  0000E3                     ??___fttol:
   590  0000E3                     receiveData@holder_2257:
   591                           	opt stack 0
   592                           
   593                           ; 3 bytes @ 0x10
   594  0000E3                     	ds	3
   595  0000E6                     receiveData@crcHolder:
   596                           	opt stack 0
   597                           
   598                           ; 1 bytes @ 0x13
   599  0000E6                     	ds	1
   600  0000E7                     LEDwriteDisplay@i2c_addr:
   601                           	opt stack 0
   602  0000E7                     receiveData@crcHolder_2258:
   603                           	opt stack 0
   604                           
   605                           ; 1 bytes @ 0x14
   606  0000E7                     	ds	1
   607  0000E8                     ___fttol@sign1:
   608                           	opt stack 0
   609  0000E8                     LEDwriteDisplay@timeOut:
   610                           	opt stack 0
   611  0000E8                     receiveData@u:
   612                           	opt stack 0
   613                           
   614                           ; 2 bytes @ 0x15
   615  0000E8                     	ds	1
   616  0000E9                     ___fttol@lval:
   617                           	opt stack 0
   618                           
   619                           ; 4 bytes @ 0x16
   620  0000E9                     	ds	1
   621  0000EA                     LEDwriteDisplay@status:
   622                           	opt stack 0
   623  0000EA                     receiveData@r:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x17
   627  0000EA                     	ds	3
   628  0000ED                     ___fttol@exp1:
   629                           	opt stack 0
   630                           
   631                           ; 1 bytes @ 0x1A
   632  0000ED                     	ds	1
   633  0000EE                     LEDsetValue@value:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0x1B
   637  0000EE                     	ds	2
   638  0000F0                     LEDsetValue@color:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0x1D
   642  0000F0                     	ds	2
   643  0000F2                     ??_LEDsetValue:
   644                           
   645                           ; 0 bytes @ 0x1F
   646  0000F2                     	ds	1
   647  0000F3                     LEDsetValue@k:
   648                           	opt stack 0
   649                           
   650                           ; 2 bytes @ 0x20
   651  0000F3                     	ds	2
   652  0000F5                     main@ADCNT:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0x22
   656  0000F5                     	ds	2
   657                           tblptru	equ	0xFF8
   658                           tblptrh	equ	0xFF7
   659                           tblptrl	equ	0xFF6
   660                           tablat	equ	0xFF5
   661                           postinc0	equ	0xFEE
   662                           wreg	equ	0xFE8
   663                           
   664                           	psect	cstackCOMRAM
   665  000001                     __pcstackCOMRAM:
   666                           	opt stack 0
   667  000001                     ??_I2C1_Stop:
   668  000001                     ?i2_UART_buff_size:
   669                           	opt stack 0
   670  000001                     ?i2_UART_buff_modulo_inc:
   671                           	opt stack 0
   672  000001                     ReadButtonState@btnnum:
   673                           	opt stack 0
   674  000001                     i2UART_buff_size@_this:
   675                           	opt stack 0
   676  000001                     i2UART_buff_modulo_inc@value:
   677                           	opt stack 0
   678                           
   679                           ; 2 bytes @ 0x0
   680  000001                     	ds	2
   681  000003                     ??_ReadButtonState:
   682  000003                     I2C1_Stop@completion_code:
   683                           	opt stack 0
   684  000003                     i2UART_buff_modulo_inc@modulus:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0x2
   688  000003                     	ds	1
   689  000004                     ??_I2C1_ISR:
   690                           
   691                           ; 0 bytes @ 0x3
   692  000004                     	ds	1
   693  000005                     TMR0_ISR@x:
   694                           	opt stack 0
   695  000005                     i2UART_buff_modulo_inc@my_value:
   696                           	opt stack 0
   697                           
   698                           ; 2 bytes @ 0x4
   699  000005                     	ds	2
   700  000007                     i2UART_buff_put@_this:
   701                           	opt stack 0
   702  000007                     i2UART_buff_get@_this:
   703                           	opt stack 0
   704                           
   705                           ; 2 bytes @ 0x6
   706  000007                     	ds	2
   707  000009                     ??i2_UART_buff_get:
   708  000009                     i2UART_buff_put@c:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x8
   712  000009                     	ds	1
   713  00000A                     ??i2_UART_buff_put:
   714                           
   715                           ; 0 bytes @ 0x9
   716  00000A                     	ds	1
   717  00000B                     i2UART_buff_get@c:
   718                           	opt stack 0
   719                           
   720                           ; 1 bytes @ 0xA
   721  00000B                     	ds	1
   722  00000C                     EUSART1_Receive_ISR@data:
   723                           	opt stack 0
   724                           
   725                           ; 1 bytes @ 0xB
   726  00000C                     	ds	1
   727  00000D                     ??_INTERRUPT_InterruptManager:
   728                           
   729                           ; 0 bytes @ 0xC
   730  00000D                     	ds	14
   731  00001B                     ?_FastTransfer_buffer_modulo_inc:
   732                           	opt stack 0
   733  00001B                     ?_UART_buff_modulo_inc:
   734                           	opt stack 0
   735  00001B                     ?_UART_buff_size:
   736                           	opt stack 0
   737  00001B                     ?___awdiv:
   738                           	opt stack 0
   739  00001B                     ?___ftpack:
   740                           	opt stack 0
   741  00001B                     I2C1_MasterTRBInsert@ptrb_list:
   742                           	opt stack 0
   743  00001B                     I2C1_MasterWriteTRBBuild@ptrb:
   744                           	opt stack 0
   745  00001B                     Delay@wait:
   746                           	opt stack 0
   747  00001B                     SetLEDOut@lednum:
   748                           	opt stack 0
   749  00001B                     GetButtonState@btnnum:
   750                           	opt stack 0
   751  00001B                     TBbarGraphs@t:
   752                           	opt stack 0
   753  00001B                     CRC8@data:
   754                           	opt stack 0
   755  00001B                     FastTransfer_buffer_modulo_inc@value:
   756                           	opt stack 0
   757  00001B                     crcBufS_put@_this:
   758                           	opt stack 0
   759  00001B                     crcBufS_status_put@_this:
   760                           	opt stack 0
   761  00001B                     crcBufS_get@_this:
   762                           	opt stack 0
   763  00001B                     UART_buff_size@_this:
   764                           	opt stack 0
   765  00001B                     UART_buff_modulo_inc@value:
   766                           	opt stack 0
   767  00001B                     UART_buff_peek@_this:
   768                           	opt stack 0
   769  00001B                     ___awdiv@dividend:
   770                           	opt stack 0
   771  00001B                     memset@p1:
   772                           	opt stack 0
   773  00001B                     ___ftpack@arg:
   774                           	opt stack 0
   775                           
   776                           ; 3 bytes @ 0x1A
   777  00001B                     	ds	2
   778  00001D                     ??_Delay:
   779  00001D                     ??_GetButtonState:
   780  00001D                     ??_UART_buff_peek:
   781  00001D                     ?_Receive_available:
   782                           	opt stack 0
   783  00001D                     SetLEDOut@state:
   784                           	opt stack 0
   785  00001D                     CRC8@len:
   786                           	opt stack 0
   787  00001D                     crcBufS_put@address:
   788                           	opt stack 0
   789  00001D                     crcBufS_status_put@time:
   790                           	opt stack 0
   791  00001D                     crcBufS_get@time:
   792                           	opt stack 0
   793  00001D                     I2C1_MasterTRBInsert@pflag:
   794                           	opt stack 0
   795  00001D                     I2C1_MasterWriteTRBBuild@pdata:
   796                           	opt stack 0
   797  00001D                     TBbarGraphs@b:
   798                           	opt stack 0
   799  00001D                     FastTransfer_buffer_modulo_inc@modulus:
   800                           	opt stack 0
   801  00001D                     UART_buff_modulo_inc@modulus:
   802                           	opt stack 0
   803  00001D                     ___awdiv@divisor:
   804                           	opt stack 0
   805  00001D                     memset@c:
   806                           	opt stack 0
   807                           
   808                           ; 2 bytes @ 0x1C
   809  00001D                     	ds	1
   810  00001E                     ??_SetLEDOut:
   811  00001E                     CRC8@sum:
   812                           	opt stack 0
   813  00001E                     crcBufS_put@oldCRC:
   814                           	opt stack 0
   815  00001E                     crcBufS_status_put@status:
   816                           	opt stack 0
   817  00001E                     crcBufS_get@space:
   818                           	opt stack 0
   819  00001E                     ___ftpack@exp:
   820                           	opt stack 0
   821  00001E                     Delay@x:
   822                           	opt stack 0
   823                           
   824                           ; 2 bytes @ 0x1D
   825  00001E                     	ds	1
   826  00001F                     ??_crcBufS_get:
   827  00001F                     ??_crcBufS_status_put:
   828  00001F                     I2C1_MasterWriteTRBBuild@length:
   829                           	opt stack 0
   830  00001F                     CRC8@extract:
   831                           	opt stack 0
   832  00001F                     crcBufS_put@status:
   833                           	opt stack 0
   834  00001F                     ___awdiv@counter:
   835                           	opt stack 0
   836  00001F                     ___ftpack@sign:
   837                           	opt stack 0
   838  00001F                     FastTransfer_buffer_modulo_inc@my_value:
   839                           	opt stack 0
   840  00001F                     UART_buff_modulo_inc@my_value:
   841                           	opt stack 0
   842  00001F                     memset@n:
   843                           	opt stack 0
   844                           
   845                           ; 2 bytes @ 0x1E
   846  00001F                     	ds	1
   847  000020                     ??_crcBufS_put:
   848  000020                     ??___ftpack:
   849  000020                     I2C1_MasterTRBInsert@count:
   850                           	opt stack 0
   851  000020                     CRC8@tempI:
   852                           	opt stack 0
   853  000020                     ___awdiv@sign:
   854                           	opt stack 0
   855  000020                     I2C1_MasterWriteTRBBuild@address:
   856                           	opt stack 0
   857  000020                     handleIndicators@receivedIndicators:
   858                           	opt stack 0
   859                           
   860                           ; 2 bytes @ 0x1F
   861  000020                     	ds	1
   862  000021                     ?_buttonsCollector:
   863                           	opt stack 0
   864  000021                     CRC8@crc:
   865                           	opt stack 0
   866  000021                     FastTransfer_buffer_put@_this:
   867                           	opt stack 0
   868  000021                     UART_buff_put@_this:
   869                           	opt stack 0
   870  000021                     UART_buff_get@_this:
   871                           	opt stack 0
   872  000021                     ___awdiv@quotient:
   873                           	opt stack 0
   874  000021                     memset@p:
   875                           	opt stack 0
   876                           
   877                           ; 2 bytes @ 0x20
   878  000021                     	ds	1
   879  000022                     ??_I2C1_MasterWriteTRBBuild:
   880  000022                     ??_handleIndicators:
   881                           
   882                           ; 0 bytes @ 0x21
   883  000022                     	ds	1
   884  000023                     ??_buttonsCollector:
   885  000023                     ??_UART_buff_get:
   886  000023                     ?___lwtoft:
   887                           	opt stack 0
   888  000023                     FastTransfer_buffer_put@towhere:
   889                           	opt stack 0
   890  000023                     UART_buff_put@c:
   891                           	opt stack 0
   892  000023                     LEDsetBar@bar:
   893                           	opt stack 0
   894  000023                     FastTransfer_buffer_flush@_this:
   895                           	opt stack 0
   896  000023                     crcBufS_status_put@wantedTime:
   897                           	opt stack 0
   898  000023                     UART_buff_init@_this:
   899                           	opt stack 0
   900  000023                     ___lwtoft@c:
   901                           	opt stack 0
   902                           
   903                           ; 2 bytes @ 0x22
   904  000023                     	ds	1
   905  000024                     ??_UART_buff_put:
   906  000024                     I2C1_MasterWrite@pdata:
   907                           	opt stack 0
   908  000024                     FastTransfer_buffer_put@towhat:
   909                           	opt stack 0
   910                           
   911                           ; 2 bytes @ 0x23
   912  000024                     	ds	1
   913  000025                     UART_buff_get@c:
   914                           	opt stack 0
   915  000025                     LEDsetBar@color:
   916                           	opt stack 0
   917  000025                     handleIndicators@i:
   918                           	opt stack 0
   919  000025                     FastTransfer_buffer_flush@clearBuffer:
   920                           	opt stack 0
   921  000025                     crcBufS_get@wantedTime:
   922                           	opt stack 0
   923                           
   924                           ; 2 bytes @ 0x24
   925  000025                     	ds	1
   926  000026                     ??_FastTransfer_buffer_put:
   927  000026                     ??___ftmul:
   928  000026                     I2C1_MasterWrite@length:
   929                           	opt stack 0
   930  000026                     Send_put@_data:
   931                           	opt stack 0
   932  000026                     buttonsCollector@sendVal:
   933                           	opt stack 0
   934                           
   935                           ; 2 bytes @ 0x25
   936  000026                     	ds	1
   937  000027                     ??_sendData:
   938  000027                     I2C1_MasterWrite@address:
   939                           	opt stack 0
   940  000027                     LEDsetBar@c:
   941                           	opt stack 0
   942                           
   943                           ; 2 bytes @ 0x26
   944  000027                     	ds	1
   945  000028                     buttonsCollector@i:
   946                           	opt stack 0
   947                           
   948                           ; 2 bytes @ 0x27
   949  000028                     	ds	1
   950  000029                     I2C1_MasterWrite@pflag:
   951                           	opt stack 0
   952  000029                     LEDsetBar@a:
   953                           	opt stack 0
   954                           
   955                           ; 2 bytes @ 0x28
   956  000029                     	ds	1
   957  00002A                     ToSend@where:
   958                           	opt stack 0
   959                           
   960                           ; 1 bytes @ 0x29
   961  00002A                     	ds	1
   962  00002B                     tblptru	equ	0xFF8
   963                           tblptrh	equ	0xFF7
   964                           tblptrl	equ	0xFF6
   965                           tablat	equ	0xFF5
   966                           postinc0	equ	0xFEE
   967                           wreg	equ	0xFE8
   968                           
   969                           ; 0 bytes @ 0x2A
   970 ;;
   971 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   972 ;;
   973 ;; *************** function _main *****************
   974 ;; Defined at:
   975 ;;		line 32 in file "main.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;		None
   978 ;; Auto vars:     Size  Location     Type
   979 ;;  ADCNT           2   34[BANK0 ] int 
   980 ;; Return value:  Size  Location     Type
   981 ;;		None               void
   982 ;; Registers used:
   983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   989 ;;      Params:         0       0       0       0       0       0       0
   990 ;;      Locals:         0       2       0       0       0       0       0
   991 ;;      Temps:          0       0       0       0       0       0       0
   992 ;;      Totals:         0       2       0       0       0       0       0
   993 ;;Total ram usage:        2 bytes
   994 ;; Hardware stack levels required when called:   10
   995 ;; This function calls:
   996 ;;		_LEDbegin
   997 ;;		_LEDsetValue
   998 ;;		_LEDwriteDisplay
   999 ;;		_SYSTEM_Initialize
  1000 ;;		___ftmul
  1001 ;;		___fttol
  1002 ;;		___lwtoft
  1003 ;;		_updateComms
  1004 ;; This function is called by:
  1005 ;;		Startup code after reset
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           	psect	text0
  1010  0019B8                     __ptext0:
  1011                           	opt stack 0
  1012  0019B8                     _main:
  1013                           	opt stack 21
  1014                           
  1015                           ;main.c: 34: SYSTEM_Initialize();
  1016                           
  1017                           ;incstack = 0
  1018  0019B8  EC65  F012         	call	_SYSTEM_Initialize	;wreg free
  1019                           
  1020                           ;main.c: 53: (INTCONbits.GIE = 1);
  1021  0019BC  8EF2               	bsf	intcon,7,c	;volatile
  1022                           
  1023                           ;main.c: 56: (INTCONbits.PEIE = 1);
  1024  0019BE  8CF2               	bsf	intcon,6,c	;volatile
  1025                           
  1026                           ;main.c: 63: int ADCNT = 1;
  1027  0019C0  0E00               	movlw	0
  1028  0019C2  0100               	movlb	0	; () banked
  1029  0019C4  6FF6               	movwf	(main@ADCNT+1)& (0+255),b
  1030  0019C6  0E01               	movlw	1
  1031  0019C8  6FF5               	movwf	main@ADCNT& (0+255),b
  1032                           
  1033                           ; BSR set to: 0
  1034                           ;main.c: 64: LEDbegin(0x70);
  1035  0019CA  0E70               	movlw	112
  1036  0019CC  ECC8  F00F         	call	_LEDbegin
  1037                           
  1038                           ;main.c: 65: LEDbegin(0x71);
  1039  0019D0  0E71               	movlw	113
  1040  0019D2  ECC8  F00F         	call	_LEDbegin
  1041  0019D6  D000               	goto	l5478
  1042  0019D8                     l5478:
  1043  0019D8  8689               	bsf	3977,3,c	;volatile
  1044  0019DA  D000               	goto	l5480
  1045  0019DC                     l5480:
  1046                           
  1047                           ;main.c: 68: LATCbits.LATC5 = 0;
  1048  0019DC  9A8B               	bcf	3979,5,c	;volatile
  1049  0019DE  D000               	goto	l5482
  1050  0019E0                     l5482:
  1051                           
  1052                           ;main.c: 70: updateComms();
  1053  0019E0  EC43  F014         	call	_updateComms	;wreg free
  1054                           
  1055                           ;main.c: 76: if (time > 1) {
  1056  0019E4  0100               	movlb	0	; () banked
  1057  0019E6  51B0               	movf	(_time+1)& (0+255),w,b	;volatile
  1058  0019E8  E105               	bnz	u6610
  1059  0019EA  0E02               	movlw	2
  1060  0019EC  0100               	movlb	0	; () banked
  1061  0019EE  5DAF               	subwf	_time& (0+255),w,b	;volatile
  1062  0019F0  A0D8               	btfss	status,0,c
  1063  0019F2  D7F6               	goto	l5482
  1064  0019F4                     u6610:
  1065                           
  1066                           ; BSR set to: 0
  1067                           ;main.c: 77: LEDsetValue((throttle)*(24.0 / 100.0), 1);
  1068  0019F4  0EC3               	movlw	195
  1069  0019F6  0100               	movlb	0	; () banked
  1070  0019F8  6FD6               	movwf	___ftmul@f2& (0+255),b
  1071  0019FA  0E75               	movlw	117
  1072  0019FC  0100               	movlb	0	; () banked
  1073  0019FE  6FD7               	movwf	(___ftmul@f2+1)& (0+255),b
  1074  001A00  0E3E               	movlw	62
  1075  001A02  0100               	movlb	0	; () banked
  1076  001A04  6FD8               	movwf	(___ftmul@f2+2)& (0+255),b
  1077  001A06  C0AD  F023         	movff	_throttle,___lwtoft@c
  1078  001A0A  C0AE  F024         	movff	_throttle+1,___lwtoft@c+1
  1079  001A0E  EC6D  F015         	call	___lwtoft	;wreg free
  1080  001A12  C023  F0D3         	movff	?___lwtoft,___ftmul@f1
  1081  001A16  C024  F0D4         	movff	?___lwtoft+1,___ftmul@f1+1
  1082  001A1A  C025  F0D5         	movff	?___lwtoft+2,___ftmul@f1+2
  1083  001A1E  EC91  F008         	call	___ftmul	;wreg free
  1084  001A22  C0D3  F0DF         	movff	?___ftmul,___fttol@f1
  1085  001A26  C0D4  F0E0         	movff	?___ftmul+1,___fttol@f1+1
  1086  001A2A  C0D5  F0E1         	movff	?___ftmul+2,___fttol@f1+2
  1087  001A2E  EC41  F009         	call	___fttol	;wreg free
  1088  001A32  C0DF  F0EE         	movff	?___fttol,LEDsetValue@value
  1089  001A36  C0E0  F0EF         	movff	?___fttol+1,LEDsetValue@value+1
  1090  001A3A  0E00               	movlw	0
  1091  001A3C  0100               	movlb	0	; () banked
  1092  001A3E  6FF1               	movwf	(LEDsetValue@color+1)& (0+255),b
  1093  001A40  0E01               	movlw	1
  1094  001A42  6FF0               	movwf	LEDsetValue@color& (0+255),b
  1095  001A44  EC71  F00F         	call	_LEDsetValue	;wreg free
  1096                           
  1097                           ;main.c: 78: LEDwriteDisplay(0x70);
  1098  001A48  0E70               	movlw	112
  1099  001A4A  ECEA  F009         	call	_LEDwriteDisplay
  1100                           
  1101                           ;main.c: 79: LEDsetValue((brake)*(24.0 / 100.0), 1);
  1102  001A4E  0EC3               	movlw	195
  1103  001A50  0100               	movlb	0	; () banked
  1104  001A52  6FD6               	movwf	___ftmul@f2& (0+255),b
  1105  001A54  0E75               	movlw	117
  1106  001A56  0100               	movlb	0	; () banked
  1107  001A58  6FD7               	movwf	(___ftmul@f2+1)& (0+255),b
  1108  001A5A  0E3E               	movlw	62
  1109  001A5C  0100               	movlb	0	; () banked
  1110  001A5E  6FD8               	movwf	(___ftmul@f2+2)& (0+255),b
  1111  001A60  C09F  F023         	movff	_brake,___lwtoft@c
  1112  001A64  C0A0  F024         	movff	_brake+1,___lwtoft@c+1
  1113  001A68  EC6D  F015         	call	___lwtoft	;wreg free
  1114  001A6C  C023  F0D3         	movff	?___lwtoft,___ftmul@f1
  1115  001A70  C024  F0D4         	movff	?___lwtoft+1,___ftmul@f1+1
  1116  001A74  C025  F0D5         	movff	?___lwtoft+2,___ftmul@f1+2
  1117  001A78  EC91  F008         	call	___ftmul	;wreg free
  1118  001A7C  C0D3  F0DF         	movff	?___ftmul,___fttol@f1
  1119  001A80  C0D4  F0E0         	movff	?___ftmul+1,___fttol@f1+1
  1120  001A84  C0D5  F0E1         	movff	?___ftmul+2,___fttol@f1+2
  1121  001A88  EC41  F009         	call	___fttol	;wreg free
  1122  001A8C  C0DF  F0EE         	movff	?___fttol,LEDsetValue@value
  1123  001A90  C0E0  F0EF         	movff	?___fttol+1,LEDsetValue@value+1
  1124  001A94  0E00               	movlw	0
  1125  001A96  0100               	movlb	0	; () banked
  1126  001A98  6FF1               	movwf	(LEDsetValue@color+1)& (0+255),b
  1127  001A9A  0E01               	movlw	1
  1128  001A9C  6FF0               	movwf	LEDsetValue@color& (0+255),b
  1129  001A9E  EC71  F00F         	call	_LEDsetValue	;wreg free
  1130                           
  1131                           ;main.c: 80: LEDwriteDisplay(0x71);
  1132  001AA2  0E71               	movlw	113
  1133  001AA4  ECEA  F009         	call	_LEDwriteDisplay
  1134  001AA8  D000               	goto	l5488
  1135  001AAA                     l5488:
  1136  001AAA  7689               	btg	3977,3,c	;volatile
  1137  001AAC  D000               	goto	l5490
  1138  001AAE                     l5490:
  1139                           
  1140                           ;main.c: 82: time = 0;
  1141  001AAE  0E00               	movlw	0
  1142  001AB0  0100               	movlb	0	; () banked
  1143  001AB2  6FB0               	movwf	(_time+1)& (0+255),b	;volatile
  1144  001AB4  0E00               	movlw	0
  1145  001AB6  6FAF               	movwf	_time& (0+255),b	;volatile
  1146                           
  1147                           ; BSR set to: 0
  1148                           
  1149                           ; BSR set to: 0
  1150  001AB8  D793               	goto	l5482
  1151                           
  1152                           ; BSR set to: 0
  1153                           
  1154                           ; BSR set to: 0
  1155  001ABA  EF61  F000         	goto	start
  1156  001ABE                     __end_of_main:
  1157                           	opt stack 0
  1158                           tblptru	equ	0xFF8
  1159                           tblptrh	equ	0xFF7
  1160                           tblptrl	equ	0xFF6
  1161                           tablat	equ	0xFF5
  1162                           intcon	equ	0xFF2
  1163                           postinc0	equ	0xFEE
  1164                           wreg	equ	0xFE8
  1165                           status	equ	0xFD8
  1166                           
  1167 ;; *************** function _updateComms *****************
  1168 ;; Defined at:
  1169 ;;		line 7 in file "Communications.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;		None
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;		None
  1174 ;; Return value:  Size  Location     Type
  1175 ;;		None               void
  1176 ;; Registers used:
  1177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1183 ;;      Params:         0       0       0       0       0       0       0
  1184 ;;      Locals:         0       0       0       0       0       0       0
  1185 ;;      Temps:          0       0       0       0       0       0       0
  1186 ;;      Totals:         0       0       0       0       0       0       0
  1187 ;;Total ram usage:        0 bytes
  1188 ;; Hardware stack levels used:    1
  1189 ;; Hardware stack levels required when called:    9
  1190 ;; This function calls:
  1191 ;;		_TBbarGraphs
  1192 ;;		_handleIndicators
  1193 ;;		_receiveData
  1194 ;;		_respondECU
  1195 ;; This function is called by:
  1196 ;;		_main
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           	psect	text1
  1201  002886                     __ptext1:
  1202                           	opt stack 0
  1203  002886                     _updateComms:
  1204                           	opt stack 21
  1205                           
  1206                           ;Communications.c: 8: if (receiveData()) {
  1207                           
  1208                           ; BSR set to: 0
  1209                           ;incstack = 0
  1210  002886  EC63  F000         	call	_receiveData	;wreg free
  1211  00288A  0900               	iorlw	0
  1212  00288C  B4D8               	btfsc	status,2,c
  1213  00288E  0012               	return	
  1214                           
  1215                           ;Communications.c: 10: respondECU();
  1216  002890  ECDC  F013         	call	_respondECU	;wreg free
  1217                           
  1218                           ;Communications.c: 12: handleIndicators(receiveArray[2]);
  1219  002894  C1D2  F020         	movff	_receiveArray+4,handleIndicators@receivedIndicators	;volatile
  1220  002898  C1D3  F021         	movff	_receiveArray+5,handleIndicators@receivedIndicators+1	;volatile
  1221  00289C  ECED  F011         	call	_handleIndicators	;wreg free
  1222                           
  1223                           ;Communications.c: 13: TBbarGraphs(receiveArray[3], receiveArray[4]);
  1224  0028A0  C1D4  F01B         	movff	_receiveArray+6,TBbarGraphs@t	;volatile
  1225  0028A4  C1D5  F01C         	movff	_receiveArray+7,TBbarGraphs@t+1	;volatile
  1226  0028A8  C1D6  F01D         	movff	_receiveArray+8,TBbarGraphs@b	;volatile
  1227  0028AC  C1D7  F01E         	movff	_receiveArray+9,TBbarGraphs@b+1	;volatile
  1228  0028B0  ECF8  F015         	call	_TBbarGraphs	;wreg free
  1229                           
  1230                           ;Communications.c: 14: receiveArray[0] = 0;
  1231  0028B4  0E00               	movlw	0
  1232  0028B6  0101               	movlb	1	; () banked
  1233  0028B8  6FCF               	movwf	(_receiveArray+1)& (0+255),b	;volatile
  1234  0028BA  0E00               	movlw	0
  1235  0028BC  6FCE               	movwf	_receiveArray& (0+255),b	;volatile
  1236  0028BE  0012               	return	
  1237                           
  1238                           ; BSR set to: 1
  1239  0028C0  0012               	return		;funcret
  1240  0028C2                     __end_of_updateComms:
  1241                           	opt stack 0
  1242                           tblptru	equ	0xFF8
  1243                           tblptrh	equ	0xFF7
  1244                           tblptrl	equ	0xFF6
  1245                           tablat	equ	0xFF5
  1246                           intcon	equ	0xFF2
  1247                           postinc0	equ	0xFEE
  1248                           wreg	equ	0xFE8
  1249                           status	equ	0xFD8
  1250                           
  1251 ;; *************** function _respondECU *****************
  1252 ;; Defined at:
  1253 ;;		line 18 in file "Communications.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;		None
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;		None
  1258 ;; Return value:  Size  Location     Type
  1259 ;;		None               void
  1260 ;; Registers used:
  1261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1267 ;;      Params:         0       0       0       0       0       0       0
  1268 ;;      Locals:         0       0       0       0       0       0       0
  1269 ;;      Temps:          0       0       0       0       0       0       0
  1270 ;;      Totals:         0       0       0       0       0       0       0
  1271 ;;Total ram usage:        0 bytes
  1272 ;; Hardware stack levels used:    1
  1273 ;; Hardware stack levels required when called:    8
  1274 ;; This function calls:
  1275 ;;		_Delay
  1276 ;;		_ToSend
  1277 ;;		_buttonsCollector
  1278 ;;		_sendData
  1279 ;; This function is called by:
  1280 ;;		_updateComms
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           	psect	text2
  1285  0027B8                     __ptext2:
  1286                           	opt stack 0
  1287  0027B8                     _respondECU:
  1288                           	opt stack 21
  1289                           
  1290                           ;Communications.c: 19: LATCbits.LATC5 = 1;
  1291                           
  1292                           ;incstack = 0
  1293  0027B8  8A8B               	bsf	3979,5,c	;volatile
  1294                           
  1295                           ;Communications.c: 20: ToSend(0, 3);
  1296  0027BA  0E00               	movlw	0
  1297  0027BC  0100               	movlb	0	; () banked
  1298  0027BE  6FD4               	movwf	(ToSend@what+1)& (0+255),b
  1299  0027C0  0E03               	movlw	3
  1300  0027C2  6FD3               	movwf	ToSend@what& (0+255),b
  1301  0027C4  0E00               	movlw	0
  1302  0027C6  ECAD  F015         	call	_ToSend
  1303                           
  1304                           ;Communications.c: 21: ToSend(8, buttonsCollector());
  1305  0027CA  EC2B  F012         	call	_buttonsCollector	;wreg free
  1306  0027CE  C021  F0D3         	movff	?_buttonsCollector,ToSend@what
  1307  0027D2  C022  F0D4         	movff	?_buttonsCollector+1,ToSend@what+1
  1308  0027D6  0E08               	movlw	8
  1309  0027D8  ECAD  F015         	call	_ToSend
  1310                           
  1311                           ;Communications.c: 22: Delay(9);
  1312  0027DC  0E00               	movlw	0
  1313  0027DE  6E1C               	movwf	Delay@wait+1,c
  1314  0027E0  0E09               	movlw	9
  1315  0027E2  6E1B               	movwf	Delay@wait,c
  1316  0027E4  EC9D  F014         	call	_Delay	;wreg free
  1317                           
  1318                           ;Communications.c: 23: sendData(1);
  1319  0027E8  0E01               	movlw	1
  1320  0027EA  EC91  F00A         	call	_sendData
  1321                           
  1322                           ;Communications.c: 24: Delay(3);
  1323  0027EE  0E00               	movlw	0
  1324  0027F0  6E1C               	movwf	Delay@wait+1,c
  1325  0027F2  0E03               	movlw	3
  1326  0027F4  6E1B               	movwf	Delay@wait,c
  1327  0027F6  EC9D  F014         	call	_Delay	;wreg free
  1328                           
  1329                           ;Communications.c: 25: LATCbits.LATC5 = 0;
  1330  0027FA  9A8B               	bcf	3979,5,c	;volatile
  1331  0027FC  0012               	return		;funcret
  1332  0027FE                     __end_of_respondECU:
  1333                           	opt stack 0
  1334                           tblptru	equ	0xFF8
  1335                           tblptrh	equ	0xFF7
  1336                           tblptrl	equ	0xFF6
  1337                           tablat	equ	0xFF5
  1338                           intcon	equ	0xFF2
  1339                           postinc0	equ	0xFEE
  1340                           wreg	equ	0xFE8
  1341                           status	equ	0xFD8
  1342                           
  1343 ;; *************** function _sendData *****************
  1344 ;; Defined at:
  1345 ;;		line 53 in file "FastTransfer.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;  whereToSend     1    wreg     unsigned char 
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;  whereToSend     1    0[BANK0 ] unsigned char 
  1350 ;;  i               2    2[BANK0 ] int 
  1351 ;;  CS              1    1[BANK0 ] unsigned char 
  1352 ;; Return value:  Size  Location     Type
  1353 ;;		None               void
  1354 ;; Registers used:
  1355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1361 ;;      Params:         0       0       0       0       0       0       0
  1362 ;;      Locals:         0       4       0       0       0       0       0
  1363 ;;      Temps:          1       0       0       0       0       0       0
  1364 ;;      Totals:         1       4       0       0       0       0       0
  1365 ;;Total ram usage:        5 bytes
  1366 ;; Hardware stack levels used:    1
  1367 ;; Hardware stack levels required when called:    7
  1368 ;; This function calls:
  1369 ;;		Absolute function
  1370 ;;		_CRC8
  1371 ;;		_FastTransfer_buffer_flush
  1372 ;;		_Send_put
  1373 ;;		_crcBufS_put
  1374 ;; This function is called by:
  1375 ;;		_respondECU
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           	psect	text3
  1380  001522                     __ptext3:
  1381                           	opt stack 0
  1382  001522                     _sendData:
  1383                           	opt stack 21
  1384                           
  1385                           ;incstack = 0
  1386                           ;sendData@whereToSend stored from wreg
  1387  001522  0100               	movlb	0	; () banked
  1388  001524  6FD3               	movwf	sendData@whereToSend& (0+255),b
  1389                           
  1390                           ; BSR set to: 0
  1391                           ;FastTransfer.c: 56: unsigned char CS = CRC8(sendStructAddress, ring_buffer.count);
  1392  001526  C0A9  F01B         	movff	_sendStructAddress,CRC8@data
  1393  00152A  C0AA  F01C         	movff	_sendStructAddress+1,CRC8@data+1
  1394  00152E  C1CC  F01D         	movff	_ring_buffer+204,CRC8@len
  1395  001532  EC64  F013         	call	_CRC8	;wreg free
  1396  001536  0100               	movlb	0	; () banked
  1397  001538  6FD4               	movwf	sendData@CS& (0+255),b
  1398                           
  1399                           ; BSR set to: 0
  1400                           ;FastTransfer.c: 58: serial_write(0x06);
  1401  00153A  D801               	call	u4938
  1402  00153C  D00B               	goto	l4642
  1403  00153E                     u4938:
  1404  00153E  0005               	push	
  1405  001540  6EFA               	movwf	pclath,c
  1406  001542  5031               	movf	_serial_write,w,c
  1407  001544  6EFD               	movwf	tosl,c
  1408  001546  5032               	movf	_serial_write+1,w,c
  1409  001548  6EFE               	movwf	tosh,c
  1410  00154A  50F8               	movf	tblptru,w,c
  1411  00154C  6EFF               	movwf	tosu,c
  1412  00154E  50FA               	movf	pclath,w,c
  1413  001550  0E06               	movlw	6
  1414  001552  0012               	return		;indir
  1415  001554                     l4642:
  1416                           
  1417                           ;FastTransfer.c: 59: serial_write(0x85);
  1418  001554  D801               	call	u4948
  1419  001556  D00B               	goto	l4644
  1420  001558                     u4948:
  1421  001558  0005               	push	
  1422  00155A  6EFA               	movwf	pclath,c
  1423  00155C  5031               	movf	_serial_write,w,c
  1424  00155E  6EFD               	movwf	tosl,c
  1425  001560  5032               	movf	_serial_write+1,w,c
  1426  001562  6EFE               	movwf	tosh,c
  1427  001564  50F8               	movf	tblptru,w,c
  1428  001566  6EFF               	movwf	tosu,c
  1429  001568  50FA               	movf	pclath,w,c
  1430  00156A  0E85               	movlw	133
  1431  00156C  0012               	return		;indir
  1432  00156E                     l4644:
  1433                           
  1434                           ;FastTransfer.c: 60: serial_write(whereToSend);
  1435  00156E  D801               	call	u4958
  1436  001570  D00C               	goto	l4646
  1437  001572                     u4958:
  1438  001572  0005               	push	
  1439  001574  6EFA               	movwf	pclath,c
  1440  001576  5031               	movf	_serial_write,w,c
  1441  001578  6EFD               	movwf	tosl,c
  1442  00157A  5032               	movf	_serial_write+1,w,c
  1443  00157C  6EFE               	movwf	tosh,c
  1444  00157E  50F8               	movf	tblptru,w,c
  1445  001580  6EFF               	movwf	tosu,c
  1446  001582  50FA               	movf	pclath,w,c
  1447  001584  0100               	movlb	0	; () banked
  1448  001586  51D3               	movf	sendData@whereToSend& (0+255),w,b
  1449  001588  0012               	return		;indir
  1450  00158A                     l4646:
  1451                           
  1452                           ;FastTransfer.c: 61: serial_write(moduleAddress);
  1453  00158A  D801               	call	u4968
  1454  00158C  D00B               	goto	l4648
  1455  00158E                     u4968:
  1456  00158E  0005               	push	
  1457  001590  6EFA               	movwf	pclath,c
  1458  001592  5031               	movf	_serial_write,w,c
  1459  001594  6EFD               	movwf	tosl,c
  1460  001596  5032               	movf	_serial_write+1,w,c
  1461  001598  6EFE               	movwf	tosh,c
  1462  00159A  50F8               	movf	tblptru,w,c
  1463  00159C  6EFF               	movwf	tosu,c
  1464  00159E  50FA               	movf	pclath,w,c
  1465  0015A0  503A               	movf	_moduleAddress,w,c
  1466  0015A2  0012               	return		;indir
  1467  0015A4                     l4648:
  1468                           
  1469                           ;FastTransfer.c: 62: serial_write(ring_buffer.count);
  1470  0015A4  D801               	call	u4978
  1471  0015A6  D00C               	goto	l4650
  1472  0015A8                     u4978:
  1473  0015A8  0005               	push	
  1474  0015AA  6EFA               	movwf	pclath,c
  1475  0015AC  5031               	movf	_serial_write,w,c
  1476  0015AE  6EFD               	movwf	tosl,c
  1477  0015B0  5032               	movf	_serial_write+1,w,c
  1478  0015B2  6EFE               	movwf	tosh,c
  1479  0015B4  50F8               	movf	tblptru,w,c
  1480  0015B6  6EFF               	movwf	tosu,c
  1481  0015B8  50FA               	movf	pclath,w,c
  1482  0015BA  0101               	movlb	1	; () banked
  1483  0015BC  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  1484  0015BE  0012               	return		;indir
  1485  0015C0                     l4650:
  1486                           
  1487                           ;FastTransfer.c: 66: int i;
  1488                           ;FastTransfer.c: 67: for (i = 0; i < ring_buffer.count; i++) {
  1489  0015C0  0E00               	movlw	0
  1490  0015C2  0100               	movlb	0	; () banked
  1491  0015C4  6FD6               	movwf	(sendData@i+1)& (0+255),b
  1492  0015C6  0E00               	movlw	0
  1493  0015C8  6FD5               	movwf	sendData@i& (0+255),b
  1494  0015CA  D01B               	goto	l4656
  1495  0015CC                     l4652:
  1496                           
  1497                           ;FastTransfer.c: 68: serial_write(*(sendStructAddress + i));
  1498  0015CC  D801               	call	u4988
  1499  0015CE  D015               	goto	l4654
  1500  0015D0                     u4988:
  1501  0015D0  0005               	push	
  1502  0015D2  6EFA               	movwf	pclath,c
  1503  0015D4  5031               	movf	_serial_write,w,c
  1504  0015D6  6EFD               	movwf	tosl,c
  1505  0015D8  5032               	movf	_serial_write+1,w,c
  1506  0015DA  6EFE               	movwf	tosh,c
  1507  0015DC  50F8               	movf	tblptru,w,c
  1508  0015DE  6EFF               	movwf	tosu,c
  1509  0015E0  50FA               	movf	pclath,w,c
  1510  0015E2  0100               	movlb	0	; () banked
  1511  0015E4  51D5               	movf	sendData@i& (0+255),w,b
  1512  0015E6  0100               	movlb	0	; () banked
  1513  0015E8  25A9               	addwf	_sendStructAddress& (0+255),w,b
  1514  0015EA  6ED9               	movwf	fsr2l,c
  1515  0015EC  0100               	movlb	0	; () banked
  1516  0015EE  51D6               	movf	(sendData@i+1)& (0+255),w,b
  1517  0015F0  0100               	movlb	0	; () banked
  1518  0015F2  21AA               	addwfc	(_sendStructAddress+1)& (0+255),w,b
  1519  0015F4  6EDA               	movwf	fsr2h,c
  1520  0015F6  50DF               	movf	indf2,w,c
  1521  0015F8  0012               	return		;indir
  1522  0015FA                     l4654:
  1523  0015FA  0100               	movlb	0	; () banked
  1524  0015FC  4BD5               	infsnz	sendData@i& (0+255),f,b
  1525  0015FE  2BD6               	incf	(sendData@i+1)& (0+255),f,b
  1526  001600  D000               	goto	l4656
  1527  001602                     l4656:
  1528                           
  1529                           ; BSR set to: 0
  1530  001602  0101               	movlb	1	; () banked
  1531  001604  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  1532  001606  0100               	movlb	0	; () banked
  1533  001608  5DD5               	subwf	sendData@i& (0+255),w,b
  1534  00160A  0100               	movlb	0	; () banked
  1535  00160C  51D6               	movf	(sendData@i+1)& (0+255),w,b
  1536  00160E  0A80               	xorlw	128
  1537  001610  6E27               	movwf	??_sendData& (0+255),c
  1538  001612  0101               	movlb	1	; () banked
  1539  001614  51CD               	movf	(_ring_buffer+205)& (0+255),w,b
  1540  001616  0A80               	xorlw	128
  1541  001618  5827               	subwfb	??_sendData& (0+255),w,c
  1542  00161A  A0D8               	btfss	status,0,c
  1543  00161C  D7D7               	goto	l4652
  1544                           
  1545                           ; BSR set to: 1
  1546                           ;FastTransfer.c: 69: }
  1547                           ;FastTransfer.c: 72: serial_write(CS);
  1548                           
  1549                           ; BSR set to: 1
  1550  00161E  D801               	call	u5008
  1551  001620  D00C               	goto	l4660
  1552  001622                     u5008:
  1553  001622  0005               	push	
  1554  001624  6EFA               	movwf	pclath,c
  1555  001626  5031               	movf	_serial_write,w,c
  1556  001628  6EFD               	movwf	tosl,c
  1557  00162A  5032               	movf	_serial_write+1,w,c
  1558  00162C  6EFE               	movwf	tosh,c
  1559  00162E  50F8               	movf	tblptru,w,c
  1560  001630  6EFF               	movwf	tosu,c
  1561  001632  50FA               	movf	pclath,w,c
  1562  001634  0100               	movlb	0	; () banked
  1563  001636  51D4               	movf	sendData@CS& (0+255),w,b
  1564  001638  0012               	return		;indir
  1565  00163A                     l4660:
  1566                           
  1567                           ;FastTransfer.c: 75: crcBufS_put(&crc_buffer, whereToSend, CS, 0);
  1568  00163A  0EB3               	movlw	low _crc_buffer
  1569  00163C  6E1B               	movwf	crcBufS_put@_this,c
  1570  00163E  0E00               	movlw	high _crc_buffer
  1571  001640  6E1C               	movwf	crcBufS_put@_this+1,c
  1572  001642  C0D3  F01D         	movff	sendData@whereToSend,crcBufS_put@address
  1573  001646  C0D4  F01E         	movff	sendData@CS,crcBufS_put@oldCRC
  1574  00164A  0E00               	movlw	0
  1575  00164C  6E1F               	movwf	crcBufS_put@status,c
  1576  00164E  ECD3  F00D         	call	_crcBufS_put
  1577                           
  1578                           ;FastTransfer.c: 78: FastTransfer_buffer_flush(&ring_buffer, 1);
  1579  001652  0E00               	movlw	low _ring_buffer
  1580  001654  6E23               	movwf	FastTransfer_buffer_flush@_this,c
  1581  001656  0E01               	movlw	high _ring_buffer
  1582  001658  6E24               	movwf	FastTransfer_buffer_flush@_this+1,c
  1583  00165A  0E00               	movlw	0
  1584  00165C  6E26               	movwf	FastTransfer_buffer_flush@clearBuffer+1,c
  1585  00165E  0E01               	movlw	1
  1586  001660  6E25               	movwf	FastTransfer_buffer_flush@clearBuffer,c
  1587  001662  EC03  F013         	call	_FastTransfer_buffer_flush	;wreg free
  1588  001666  0012               	return		;funcret
  1589  001668                     __end_of_sendData:
  1590                           	opt stack 0
  1591                           tosu	equ	0xFFF
  1592                           tosh	equ	0xFFE
  1593                           tosl	equ	0xFFD
  1594                           pclath	equ	0xFFA
  1595                           tblptru	equ	0xFF8
  1596                           tblptrh	equ	0xFF7
  1597                           tblptrl	equ	0xFF6
  1598                           tablat	equ	0xFF5
  1599                           intcon	equ	0xFF2
  1600                           postinc0	equ	0xFEE
  1601                           wreg	equ	0xFE8
  1602                           indf2	equ	0xFDF
  1603                           fsr2h	equ	0xFDA
  1604                           fsr2l	equ	0xFD9
  1605                           status	equ	0xFD8
  1606                           
  1607 ;; *************** function _crcBufS_put *****************
  1608 ;; Defined at:
  1609 ;;		line 321 in file "FastTransfer.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  1612 ;;		 -> crc_buffer(17), 
  1613 ;;  address         1   28[COMRAM] unsigned char 
  1614 ;;  oldCRC          1   29[COMRAM] unsigned char 
  1615 ;;  status          1   30[COMRAM] unsigned char 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;		None
  1618 ;; Return value:  Size  Location     Type
  1619 ;;		None               void
  1620 ;; Registers used:
  1621 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1627 ;;      Params:         5       0       0       0       0       0       0
  1628 ;;      Locals:         0       0       0       0       0       0       0
  1629 ;;      Temps:          2       0       0       0       0       0       0
  1630 ;;      Totals:         7       0       0       0       0       0       0
  1631 ;;Total ram usage:        7 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; Hardware stack levels required when called:    4
  1634 ;; This function calls:
  1635 ;;		Nothing
  1636 ;; This function is called by:
  1637 ;;		_sendData
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text4
  1642  001BA6                     __ptext4:
  1643                           	opt stack 0
  1644  001BA6                     _crcBufS_put:
  1645                           	opt stack 23
  1646                           
  1647                           ;FastTransfer.c: 322: _this->buf[_this->head] = address;
  1648                           
  1649                           ;incstack = 0
  1650  001BA6  EE20 F00F          	lfsr	2,15
  1651  001BAA  501B               	movf	crcBufS_put@_this,w,c
  1652  001BAC  26D9               	addwf	fsr2l,f,c
  1653  001BAE  501C               	movf	crcBufS_put@_this+1,w,c
  1654  001BB0  22DA               	addwfc	fsr2h,f,c
  1655  001BB2  CFDE F020          	movff	postinc2,??_crcBufS_put
  1656  001BB6  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  1657  001BBA  5020               	movf	??_crcBufS_put,w,c
  1658  001BBC  241B               	addwf	crcBufS_put@_this,w,c
  1659  001BBE  6ED9               	movwf	fsr2l,c
  1660  001BC0  5021               	movf	??_crcBufS_put+1,w,c
  1661  001BC2  201C               	addwfc	crcBufS_put@_this+1,w,c
  1662  001BC4  6EDA               	movwf	fsr2h,c
  1663  001BC6  C01D  FFDF         	movff	crcBufS_put@address,indf2
  1664                           
  1665                           ;FastTransfer.c: 323: _this->head++;
  1666  001BCA  EE20 F00F          	lfsr	2,15
  1667  001BCE  501B               	movf	crcBufS_put@_this,w,c
  1668  001BD0  26D9               	addwf	fsr2l,f,c
  1669  001BD2  501C               	movf	crcBufS_put@_this+1,w,c
  1670  001BD4  22DA               	addwfc	fsr2h,f,c
  1671  001BD6  2ADE               	incf	postinc2,f,c
  1672  001BD8  0E00               	movlw	0
  1673  001BDA  22DD               	addwfc	postdec2,f,c
  1674                           
  1675                           ;FastTransfer.c: 324: _this->buf[_this->head] = oldCRC;
  1676  001BDC  EE20 F00F          	lfsr	2,15
  1677  001BE0  501B               	movf	crcBufS_put@_this,w,c
  1678  001BE2  26D9               	addwf	fsr2l,f,c
  1679  001BE4  501C               	movf	crcBufS_put@_this+1,w,c
  1680  001BE6  22DA               	addwfc	fsr2h,f,c
  1681  001BE8  CFDE F020          	movff	postinc2,??_crcBufS_put
  1682  001BEC  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  1683  001BF0  5020               	movf	??_crcBufS_put,w,c
  1684  001BF2  241B               	addwf	crcBufS_put@_this,w,c
  1685  001BF4  6ED9               	movwf	fsr2l,c
  1686  001BF6  5021               	movf	??_crcBufS_put+1,w,c
  1687  001BF8  201C               	addwfc	crcBufS_put@_this+1,w,c
  1688  001BFA  6EDA               	movwf	fsr2h,c
  1689  001BFC  C01E  FFDF         	movff	crcBufS_put@oldCRC,indf2
  1690                           
  1691                           ;FastTransfer.c: 325: _this->head++;
  1692  001C00  EE20 F00F          	lfsr	2,15
  1693  001C04  501B               	movf	crcBufS_put@_this,w,c
  1694  001C06  26D9               	addwf	fsr2l,f,c
  1695  001C08  501C               	movf	crcBufS_put@_this+1,w,c
  1696  001C0A  22DA               	addwfc	fsr2h,f,c
  1697  001C0C  2ADE               	incf	postinc2,f,c
  1698  001C0E  0E00               	movlw	0
  1699  001C10  22DD               	addwfc	postdec2,f,c
  1700                           
  1701                           ;FastTransfer.c: 326: _this->buf[_this->head] = status;
  1702  001C12  EE20 F00F          	lfsr	2,15
  1703  001C16  501B               	movf	crcBufS_put@_this,w,c
  1704  001C18  26D9               	addwf	fsr2l,f,c
  1705  001C1A  501C               	movf	crcBufS_put@_this+1,w,c
  1706  001C1C  22DA               	addwfc	fsr2h,f,c
  1707  001C1E  CFDE F020          	movff	postinc2,??_crcBufS_put
  1708  001C22  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  1709  001C26  5020               	movf	??_crcBufS_put,w,c
  1710  001C28  241B               	addwf	crcBufS_put@_this,w,c
  1711  001C2A  6ED9               	movwf	fsr2l,c
  1712  001C2C  5021               	movf	??_crcBufS_put+1,w,c
  1713  001C2E  201C               	addwfc	crcBufS_put@_this+1,w,c
  1714  001C30  6EDA               	movwf	fsr2h,c
  1715  001C32  C01F  FFDF         	movff	crcBufS_put@status,indf2
  1716                           
  1717                           ;FastTransfer.c: 327: _this->head++;
  1718  001C36  EE20 F00F          	lfsr	2,15
  1719  001C3A  501B               	movf	crcBufS_put@_this,w,c
  1720  001C3C  26D9               	addwf	fsr2l,f,c
  1721  001C3E  501C               	movf	crcBufS_put@_this+1,w,c
  1722  001C40  22DA               	addwfc	fsr2h,f,c
  1723  001C42  2ADE               	incf	postinc2,f,c
  1724  001C44  0E00               	movlw	0
  1725  001C46  22DD               	addwfc	postdec2,f,c
  1726                           
  1727                           ;FastTransfer.c: 328: if (_this->head >= (5 * 3)) {
  1728  001C48  EE20 F00F          	lfsr	2,15
  1729  001C4C  501B               	movf	crcBufS_put@_this,w,c
  1730  001C4E  26D9               	addwf	fsr2l,f,c
  1731  001C50  501C               	movf	crcBufS_put@_this+1,w,c
  1732  001C52  22DA               	addwfc	fsr2h,f,c
  1733  001C54  0E01               	movlw	1
  1734  001C56  BEDB               	btfsc	plusw2,7,c
  1735  001C58  0012               	return	
  1736  001C5A  0E01               	movlw	1
  1737  001C5C  50DB               	movf	plusw2,w,c
  1738  001C5E  E104               	bnz	u4840
  1739  001C60  0E0F               	movlw	15
  1740  001C62  5CDE               	subwf	postinc2,w,c
  1741  001C64  A0D8               	btfss	status,0,c
  1742  001C66  0012               	return	
  1743  001C68                     u4840:
  1744                           
  1745                           ;FastTransfer.c: 329: _this->head = 0;
  1746  001C68  EE20 F00F          	lfsr	2,15
  1747  001C6C  501B               	movf	crcBufS_put@_this,w,c
  1748  001C6E  26D9               	addwf	fsr2l,f,c
  1749  001C70  501C               	movf	crcBufS_put@_this+1,w,c
  1750  001C72  22DA               	addwfc	fsr2h,f,c
  1751  001C74  0E00               	movlw	0
  1752  001C76  6EDE               	movwf	postinc2,c
  1753  001C78  0E00               	movlw	0
  1754  001C7A  6EDD               	movwf	postdec2,c
  1755  001C7C  0012               	return	
  1756  001C7E  0012               	return		;funcret
  1757  001C80                     __end_of_crcBufS_put:
  1758                           	opt stack 0
  1759                           tosu	equ	0xFFF
  1760                           tosh	equ	0xFFE
  1761                           tosl	equ	0xFFD
  1762                           pclath	equ	0xFFA
  1763                           tblptru	equ	0xFF8
  1764                           tblptrh	equ	0xFF7
  1765                           tblptrl	equ	0xFF6
  1766                           tablat	equ	0xFF5
  1767                           intcon	equ	0xFF2
  1768                           postinc0	equ	0xFEE
  1769                           wreg	equ	0xFE8
  1770                           indf2	equ	0xFDF
  1771                           postinc2	equ	0xFDE
  1772                           postdec2	equ	0xFDD
  1773                           plusw2	equ	0xFDB
  1774                           fsr2h	equ	0xFDA
  1775                           fsr2l	equ	0xFD9
  1776                           status	equ	0xFD8
  1777                           
  1778 ;; *************** function _FastTransfer_buffer_flush *****************
  1779 ;; Defined at:
  1780 ;;		line 261 in file "FastTransfer.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;  _this           2   34[COMRAM] PTR struct ringBufS
  1783 ;;		 -> ring_buffer(206), 
  1784 ;;  clearBuffer     2   36[COMRAM] const int 
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;		None
  1787 ;; Return value:  Size  Location     Type
  1788 ;;		None               void
  1789 ;; Registers used:
  1790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1796 ;;      Params:         4       0       0       0       0       0       0
  1797 ;;      Locals:         0       0       0       0       0       0       0
  1798 ;;      Temps:          0       0       0       0       0       0       0
  1799 ;;      Totals:         4       0       0       0       0       0       0
  1800 ;;Total ram usage:        4 bytes
  1801 ;; Hardware stack levels used:    1
  1802 ;; Hardware stack levels required when called:    5
  1803 ;; This function calls:
  1804 ;;		_memset
  1805 ;; This function is called by:
  1806 ;;		_sendData
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           	psect	text5
  1811  002606                     __ptext5:
  1812                           	opt stack 0
  1813  002606                     _FastTransfer_buffer_flush:
  1814                           	opt stack 22
  1815                           
  1816                           ;FastTransfer.c: 262: _this->count = 0;
  1817                           
  1818                           ;incstack = 0
  1819  002606  EE20 F0CC          	lfsr	2,204
  1820  00260A  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  1821  00260C  26D9               	addwf	fsr2l,f,c
  1822  00260E  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  1823  002610  22DA               	addwfc	fsr2h,f,c
  1824  002612  0E00               	movlw	0
  1825  002614  6EDE               	movwf	postinc2,c
  1826  002616  0E00               	movlw	0
  1827  002618  6EDD               	movwf	postdec2,c
  1828                           
  1829                           ;FastTransfer.c: 263: _this->head = 0;
  1830  00261A  EE20 F0C8          	lfsr	2,200
  1831  00261E  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  1832  002620  26D9               	addwf	fsr2l,f,c
  1833  002622  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  1834  002624  22DA               	addwfc	fsr2h,f,c
  1835  002626  0E00               	movlw	0
  1836  002628  6EDE               	movwf	postinc2,c
  1837  00262A  0E00               	movlw	0
  1838  00262C  6EDD               	movwf	postdec2,c
  1839                           
  1840                           ;FastTransfer.c: 264: _this->tail = 0;
  1841  00262E  EE20 F0CA          	lfsr	2,202
  1842  002632  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  1843  002634  26D9               	addwf	fsr2l,f,c
  1844  002636  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  1845  002638  22DA               	addwfc	fsr2h,f,c
  1846  00263A  0E00               	movlw	0
  1847  00263C  6EDE               	movwf	postinc2,c
  1848  00263E  0E00               	movlw	0
  1849  002640  6EDD               	movwf	postdec2,c
  1850                           
  1851                           ;FastTransfer.c: 265: if (clearBuffer) {
  1852  002642  5025               	movf	FastTransfer_buffer_flush@clearBuffer,w,c
  1853  002644  1026               	iorwf	FastTransfer_buffer_flush@clearBuffer+1,w,c
  1854  002646  B4D8               	btfsc	status,2,c
  1855  002648  0012               	return	
  1856                           
  1857                           ;FastTransfer.c: 266: memset(_this->buf, 0, sizeof (_this->buf));
  1858  00264A  C023  F01B         	movff	FastTransfer_buffer_flush@_this,memset@p1
  1859  00264E  C024  F01C         	movff	FastTransfer_buffer_flush@_this+1,memset@p1+1
  1860  002652  0E00               	movlw	0
  1861  002654  6E1E               	movwf	memset@c+1,c
  1862  002656  0E00               	movlw	0
  1863  002658  6E1D               	movwf	memset@c,c
  1864  00265A  0E00               	movlw	0
  1865  00265C  6E20               	movwf	memset@n+1,c
  1866  00265E  0EC8               	movlw	200
  1867  002660  6E1F               	movwf	memset@n,c
  1868  002662  EC17  F015         	call	_memset	;wreg free
  1869  002666  0012               	return	
  1870  002668  0012               	return		;funcret
  1871  00266A                     __end_of_FastTransfer_buffer_flush:
  1872                           	opt stack 0
  1873                           tosu	equ	0xFFF
  1874                           tosh	equ	0xFFE
  1875                           tosl	equ	0xFFD
  1876                           pclath	equ	0xFFA
  1877                           tblptru	equ	0xFF8
  1878                           tblptrh	equ	0xFF7
  1879                           tblptrl	equ	0xFF6
  1880                           tablat	equ	0xFF5
  1881                           intcon	equ	0xFF2
  1882                           postinc0	equ	0xFEE
  1883                           wreg	equ	0xFE8
  1884                           indf2	equ	0xFDF
  1885                           postinc2	equ	0xFDE
  1886                           postdec2	equ	0xFDD
  1887                           plusw2	equ	0xFDB
  1888                           fsr2h	equ	0xFDA
  1889                           fsr2l	equ	0xFD9
  1890                           status	equ	0xFD8
  1891                           
  1892 ;; *************** function _buttonsCollector *****************
  1893 ;; Defined at:
  1894 ;;		line 52 in file "Communications.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;		None
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;  i               2   39[COMRAM] int 
  1899 ;;  sendVal         2   37[COMRAM] unsigned int 
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  2   32[COMRAM] unsigned int 
  1902 ;; Registers used:
  1903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1909 ;;      Params:         2       0       0       0       0       0       0
  1910 ;;      Locals:         4       0       0       0       0       0       0
  1911 ;;      Temps:          3       0       0       0       0       0       0
  1912 ;;      Totals:         9       0       0       0       0       0       0
  1913 ;;Total ram usage:        9 bytes
  1914 ;; Hardware stack levels used:    1
  1915 ;; Hardware stack levels required when called:    5
  1916 ;; This function calls:
  1917 ;;		_GetButtonState
  1918 ;; This function is called by:
  1919 ;;		_respondECU
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923                           	psect	text6
  1924  002456                     __ptext6:
  1925                           	opt stack 0
  1926  002456                     _buttonsCollector:
  1927                           	opt stack 23
  1928                           
  1929                           ;Communications.c: 53: unsigned int sendVal = 0;
  1930                           
  1931                           ;incstack = 0
  1932  002456  0E00               	movlw	0
  1933  002458  6E27               	movwf	buttonsCollector@sendVal+1,c
  1934  00245A  0E00               	movlw	0
  1935  00245C  6E26               	movwf	buttonsCollector@sendVal,c
  1936                           
  1937                           ;Communications.c: 54: int i = 0;
  1938  00245E  0E00               	movlw	0
  1939  002460  6E29               	movwf	buttonsCollector@i+1,c
  1940  002462  0E00               	movlw	0
  1941  002464  6E28               	movwf	buttonsCollector@i,c
  1942                           
  1943                           ;Communications.c: 55: for (i = 0; i < 8; i++) {
  1944  002466  0E00               	movlw	0
  1945  002468  6E29               	movwf	buttonsCollector@i+1,c
  1946  00246A  0E00               	movlw	0
  1947  00246C  6E28               	movwf	buttonsCollector@i,c
  1948  00246E  BE29               	btfsc	buttonsCollector@i+1,7,c
  1949  002470  D008               	goto	l3294
  1950  002472  5029               	movf	buttonsCollector@i+1,w,c
  1951  002474  E125               	bnz	l703
  1952  002476  0E08               	movlw	8
  1953  002478  5C28               	subwf	buttonsCollector@i,w,c
  1954  00247A  B0D8               	btfsc	status,0,c
  1955  00247C  D021               	goto	l703
  1956  00247E  D001               	goto	l3294
  1957  002480  D01F               	goto	l703
  1958  002482                     l3294:
  1959                           
  1960                           ;Communications.c: 56: sendVal = sendVal | ((GetButtonState(i)&0x01) << i);
  1961  002482  C028  F023         	movff	buttonsCollector@i,??_buttonsCollector
  1962  002486  C028  F01B         	movff	buttonsCollector@i,GetButtonState@btnnum
  1963  00248A  C029  F01C         	movff	buttonsCollector@i+1,GetButtonState@btnnum+1
  1964  00248E  EC45  F015         	call	_GetButtonState	;wreg free
  1965  002492  0B01               	andlw	1
  1966  002494  6E24               	movwf	(??_buttonsCollector+1)& (0+255),c
  1967  002496  6A25               	clrf	(??_buttonsCollector+2)& (0+255),c
  1968  002498  2A23               	incf	??_buttonsCollector,f,c
  1969  00249A  D003               	goto	u2684
  1970  00249C                     u2685:
  1971  00249C  90D8               	bcf	status,0,c
  1972  00249E  3624               	rlcf	??_buttonsCollector+1,f,c
  1973  0024A0  3625               	rlcf	??_buttonsCollector+2,f,c
  1974  0024A2                     u2684:
  1975  0024A2  2E23               	decfsz	??_buttonsCollector,f,c
  1976  0024A4  D7FB               	goto	u2685
  1977  0024A6  5026               	movf	buttonsCollector@sendVal,w,c
  1978  0024A8  1024               	iorwf	??_buttonsCollector+1,w,c
  1979  0024AA  6E26               	movwf	buttonsCollector@sendVal,c
  1980  0024AC  5027               	movf	buttonsCollector@sendVal+1,w,c
  1981  0024AE  1025               	iorwf	??_buttonsCollector+2,w,c
  1982  0024B0  6E27               	movwf	buttonsCollector@sendVal+1,c
  1983  0024B2  4A28               	infsnz	buttonsCollector@i,f,c
  1984  0024B4  2A29               	incf	buttonsCollector@i+1,f,c
  1985  0024B6  BE29               	btfsc	buttonsCollector@i+1,7,c
  1986  0024B8  D7E4               	goto	l3294
  1987  0024BA  5029               	movf	buttonsCollector@i+1,w,c
  1988  0024BC  E101               	bnz	u2690
  1989  0024BE  D7DB               	goto	L1
  1990  0024C0                     u2690:
  1991  0024C0                     l703:
  1992                           
  1993                           ;Communications.c: 57: }
  1994                           ;Communications.c: 58: return sendVal;
  1995  0024C0  C026  F021         	movff	buttonsCollector@sendVal,?_buttonsCollector
  1996  0024C4  C027  F022         	movff	buttonsCollector@sendVal+1,?_buttonsCollector+1
  1997  0024C8  0012               	return		;funcret
  1998  0024CA                     __end_of_buttonsCollector:
  1999                           	opt stack 0
  2000                           tosu	equ	0xFFF
  2001                           tosh	equ	0xFFE
  2002                           tosl	equ	0xFFD
  2003                           pclath	equ	0xFFA
  2004                           tblptru	equ	0xFF8
  2005                           tblptrh	equ	0xFF7
  2006                           tblptrl	equ	0xFF6
  2007                           tablat	equ	0xFF5
  2008                           intcon	equ	0xFF2
  2009                           postinc0	equ	0xFEE
  2010                           wreg	equ	0xFE8
  2011                           indf2	equ	0xFDF
  2012                           postinc2	equ	0xFDE
  2013                           postdec2	equ	0xFDD
  2014                           plusw2	equ	0xFDB
  2015                           fsr2h	equ	0xFDA
  2016                           fsr2l	equ	0xFD9
  2017                           status	equ	0xFD8
  2018                           
  2019 ;; *************** function _GetButtonState *****************
  2020 ;; Defined at:
  2021 ;;		line 72 in file "IO.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;  btnnum          2   26[COMRAM] int 
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;		None
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  1    wreg      unsigned char 
  2028 ;; Registers used:
  2029 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2035 ;;      Params:         2       0       0       0       0       0       0
  2036 ;;      Locals:         0       0       0       0       0       0       0
  2037 ;;      Temps:          4       0       0       0       0       0       0
  2038 ;;      Totals:         6       0       0       0       0       0       0
  2039 ;;Total ram usage:        6 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    4
  2042 ;; This function calls:
  2043 ;;		Nothing
  2044 ;; This function is called by:
  2045 ;;		_buttonsCollector
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           	psect	text7
  2050  002A8A                     __ptext7:
  2051                           	opt stack 0
  2052  002A8A                     _GetButtonState:
  2053                           	opt stack 23
  2054                           
  2055                           ;IO.c: 73: return butnarray[btnnum - 1];
  2056                           
  2057                           ;incstack = 0
  2058  002A8A  0EFF               	movlw	255
  2059  002A8C  6E1D               	movwf	??_GetButtonState& (0+255),c
  2060  002A8E  0EFF               	movlw	255
  2061  002A90  6E1E               	movwf	(??_GetButtonState+1)& (0+255),c
  2062  002A92  C01B  F01F         	movff	GetButtonState@btnnum,??_GetButtonState+2
  2063  002A96  C01C  F020         	movff	GetButtonState@btnnum+1,??_GetButtonState+3
  2064  002A9A  501D               	movf	??_GetButtonState,w,c
  2065  002A9C  261F               	addwf	??_GetButtonState+2,f,c
  2066  002A9E  501E               	movf	??_GetButtonState+1,w,c
  2067  002AA0  2220               	addwfc	??_GetButtonState+3,f,c
  2068  002AA2  0E88               	movlw	low _butnarray
  2069  002AA4  241F               	addwf	??_GetButtonState+2,w,c
  2070  002AA6  6ED9               	movwf	fsr2l,c
  2071  002AA8  0E00               	movlw	high _butnarray
  2072  002AAA  2020               	addwfc	??_GetButtonState+3,w,c
  2073  002AAC  6EDA               	movwf	fsr2h,c
  2074  002AAE  50DF               	movf	indf2,w,c
  2075  002AB0  0012               	return	
  2076  002AB2  0012               	return		;funcret
  2077  002AB4                     __end_of_GetButtonState:
  2078                           	opt stack 0
  2079                           tosu	equ	0xFFF
  2080                           tosh	equ	0xFFE
  2081                           tosl	equ	0xFFD
  2082                           pclath	equ	0xFFA
  2083                           tblptru	equ	0xFF8
  2084                           tblptrh	equ	0xFF7
  2085                           tblptrl	equ	0xFF6
  2086                           tablat	equ	0xFF5
  2087                           intcon	equ	0xFF2
  2088                           postinc0	equ	0xFEE
  2089                           wreg	equ	0xFE8
  2090                           indf2	equ	0xFDF
  2091                           postinc2	equ	0xFDE
  2092                           postdec2	equ	0xFDD
  2093                           plusw2	equ	0xFDB
  2094                           fsr2h	equ	0xFDA
  2095                           fsr2l	equ	0xFD9
  2096                           status	equ	0xFD8
  2097                           
  2098 ;; *************** function _ToSend *****************
  2099 ;; Defined at:
  2100 ;;		line 216 in file "FastTransfer.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;  where           1    wreg     unsigned char 
  2103 ;;  what            2    0[BANK0 ] unsigned int 
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;  where           1   41[COMRAM] unsigned char 
  2106 ;; Return value:  Size  Location     Type
  2107 ;;		None               void
  2108 ;; Registers used:
  2109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2115 ;;      Params:         0       2       0       0       0       0       0
  2116 ;;      Locals:         1       0       0       0       0       0       0
  2117 ;;      Temps:          0       0       0       0       0       0       0
  2118 ;;      Totals:         1       2       0       0       0       0       0
  2119 ;;Total ram usage:        3 bytes
  2120 ;; Hardware stack levels used:    1
  2121 ;; Hardware stack levels required when called:    6
  2122 ;; This function calls:
  2123 ;;		_FastTransfer_buffer_put
  2124 ;; This function is called by:
  2125 ;;		_respondECU
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           	psect	text8
  2130  002B5A                     __ptext8:
  2131                           	opt stack 0
  2132  002B5A                     _ToSend:
  2133                           	opt stack 22
  2134                           
  2135                           ;incstack = 0
  2136                           ;ToSend@where stored from wreg
  2137  002B5A  6E2A               	movwf	ToSend@where,c
  2138                           
  2139                           ;FastTransfer.c: 217: FastTransfer_buffer_put(&ring_buffer, where, what);
  2140  002B5C  0E00               	movlw	low _ring_buffer
  2141  002B5E  6E21               	movwf	FastTransfer_buffer_put@_this,c
  2142  002B60  0E01               	movlw	high _ring_buffer
  2143  002B62  6E22               	movwf	FastTransfer_buffer_put@_this+1,c
  2144  002B64  C02A  F023         	movff	ToSend@where,FastTransfer_buffer_put@towhere
  2145  002B68  C0D3  F024         	movff	ToSend@what,FastTransfer_buffer_put@towhat
  2146  002B6C  C0D4  F025         	movff	ToSend@what+1,FastTransfer_buffer_put@towhat+1
  2147  002B70  ECDC  F007         	call	_FastTransfer_buffer_put	;wreg free
  2148  002B74  0012               	return		;funcret
  2149  002B76                     __end_of_ToSend:
  2150                           	opt stack 0
  2151                           tosu	equ	0xFFF
  2152                           tosh	equ	0xFFE
  2153                           tosl	equ	0xFFD
  2154                           pclath	equ	0xFFA
  2155                           tblptru	equ	0xFF8
  2156                           tblptrh	equ	0xFF7
  2157                           tblptrl	equ	0xFF6
  2158                           tablat	equ	0xFF5
  2159                           intcon	equ	0xFF2
  2160                           postinc0	equ	0xFEE
  2161                           wreg	equ	0xFE8
  2162                           indf2	equ	0xFDF
  2163                           postinc2	equ	0xFDE
  2164                           postdec2	equ	0xFDD
  2165                           plusw2	equ	0xFDB
  2166                           fsr2h	equ	0xFDA
  2167                           fsr2l	equ	0xFD9
  2168                           status	equ	0xFD8
  2169                           
  2170 ;; *************** function _FastTransfer_buffer_put *****************
  2171 ;; Defined at:
  2172 ;;		line 223 in file "FastTransfer.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;  _this           2   32[COMRAM] PTR struct ringBufS
  2175 ;;		 -> ring_buffer(206), 
  2176 ;;  towhere         1   34[COMRAM] unsigned char 
  2177 ;;  towhat          2   35[COMRAM] unsigned int 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;		None
  2180 ;; Return value:  Size  Location     Type
  2181 ;;		None               void
  2182 ;; Registers used:
  2183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2189 ;;      Params:         5       0       0       0       0       0       0
  2190 ;;      Locals:         0       0       0       0       0       0       0
  2191 ;;      Temps:          2       0       0       0       0       0       0
  2192 ;;      Totals:         7       0       0       0       0       0       0
  2193 ;;Total ram usage:        7 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; Hardware stack levels required when called:    5
  2196 ;; This function calls:
  2197 ;;		_FastTransfer_buffer_modulo_inc
  2198 ;; This function is called by:
  2199 ;;		_ToSend
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           	psect	text9
  2204  000FB8                     __ptext9:
  2205                           	opt stack 0
  2206  000FB8                     _FastTransfer_buffer_put:
  2207                           	opt stack 22
  2208                           
  2209                           ;FastTransfer.c: 225: group.integer = towhat;
  2210                           
  2211                           ;incstack = 0
  2212  000FB8  C024  F041         	movff	FastTransfer_buffer_put@towhat,_group
  2213  000FBC  C025  F042         	movff	FastTransfer_buffer_put@towhat+1,_group+1
  2214                           
  2215                           ;FastTransfer.c: 227: if (_this->count < (200 - 3)) {
  2216  000FC0  EE20 F0CC          	lfsr	2,204
  2217  000FC4  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2218  000FC6  26D9               	addwf	fsr2l,f,c
  2219  000FC8  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2220  000FCA  22DA               	addwfc	fsr2h,f,c
  2221  000FCC  0E01               	movlw	1
  2222  000FCE  BEDB               	btfsc	plusw2,7,c
  2223  000FD0  D007               	goto	l3176
  2224  000FD2  0E01               	movlw	1
  2225  000FD4  50DB               	movf	plusw2,w,c
  2226  000FD6  E103               	bnz	u2521
  2227  000FD8  0EC5               	movlw	197
  2228  000FDA  5CDE               	subwf	postinc2,w,c
  2229  000FDC  B0D8               	btfsc	status,0,c
  2230  000FDE                     u2521:
  2231  000FDE  0012               	return	
  2232  000FE0                     l3176:
  2233                           
  2234                           ;FastTransfer.c: 228: _this->buf[_this->head] = towhere;
  2235  000FE0  EE20 F0C8          	lfsr	2,200
  2236  000FE4  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2237  000FE6  26D9               	addwf	fsr2l,f,c
  2238  000FE8  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2239  000FEA  22DA               	addwfc	fsr2h,f,c
  2240  000FEC  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  2241  000FF0  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  2242  000FF4  5026               	movf	??_FastTransfer_buffer_put,w,c
  2243  000FF6  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  2244  000FF8  6ED9               	movwf	fsr2l,c
  2245  000FFA  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  2246  000FFC  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  2247  000FFE  6EDA               	movwf	fsr2h,c
  2248  001000  C023  FFDF         	movff	FastTransfer_buffer_put@towhere,indf2
  2249                           
  2250                           ;FastTransfer.c: 229: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  2251  001004  EE20 F0C8          	lfsr	2,200
  2252  001008  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2253  00100A  26D9               	addwf	fsr2l,f,c
  2254  00100C  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2255  00100E  22DA               	addwfc	fsr2h,f,c
  2256  001010  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  2257  001014  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  2258  001018  0E00               	movlw	0
  2259  00101A  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  2260  00101C  0EC8               	movlw	200
  2261  00101E  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  2262  001020  ECE9  F014         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  2263  001024  EE20 F0C8          	lfsr	2,200
  2264  001028  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2265  00102A  26D9               	addwf	fsr2l,f,c
  2266  00102C  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2267  00102E  22DA               	addwfc	fsr2h,f,c
  2268  001030  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  2269  001034  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  2270                           
  2271                           ;FastTransfer.c: 230: ++_this->count;
  2272  001038  EE20 F0CC          	lfsr	2,204
  2273  00103C  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2274  00103E  26D9               	addwf	fsr2l,f,c
  2275  001040  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2276  001042  22DA               	addwfc	fsr2h,f,c
  2277  001044  2ADE               	incf	postinc2,f,c
  2278  001046  0E00               	movlw	0
  2279  001048  22DD               	addwfc	postdec2,f,c
  2280                           
  2281                           ;FastTransfer.c: 231: _this->buf[_this->head] = group.parts[0];
  2282  00104A  EE20 F0C8          	lfsr	2,200
  2283  00104E  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2284  001050  26D9               	addwf	fsr2l,f,c
  2285  001052  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2286  001054  22DA               	addwfc	fsr2h,f,c
  2287  001056  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  2288  00105A  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  2289  00105E  5026               	movf	??_FastTransfer_buffer_put,w,c
  2290  001060  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  2291  001062  6ED9               	movwf	fsr2l,c
  2292  001064  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  2293  001066  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  2294  001068  6EDA               	movwf	fsr2h,c
  2295  00106A  C041  FFDF         	movff	_group,indf2
  2296                           
  2297                           ;FastTransfer.c: 232: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  2298  00106E  EE20 F0C8          	lfsr	2,200
  2299  001072  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2300  001074  26D9               	addwf	fsr2l,f,c
  2301  001076  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2302  001078  22DA               	addwfc	fsr2h,f,c
  2303  00107A  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  2304  00107E  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  2305  001082  0E00               	movlw	0
  2306  001084  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  2307  001086  0EC8               	movlw	200
  2308  001088  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  2309  00108A  ECE9  F014         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  2310  00108E  EE20 F0C8          	lfsr	2,200
  2311  001092  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2312  001094  26D9               	addwf	fsr2l,f,c
  2313  001096  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2314  001098  22DA               	addwfc	fsr2h,f,c
  2315  00109A  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  2316  00109E  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  2317                           
  2318                           ;FastTransfer.c: 233: ++_this->count;
  2319  0010A2  EE20 F0CC          	lfsr	2,204
  2320  0010A6  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2321  0010A8  26D9               	addwf	fsr2l,f,c
  2322  0010AA  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2323  0010AC  22DA               	addwfc	fsr2h,f,c
  2324  0010AE  2ADE               	incf	postinc2,f,c
  2325  0010B0  0E00               	movlw	0
  2326  0010B2  22DD               	addwfc	postdec2,f,c
  2327                           
  2328                           ;FastTransfer.c: 234: _this->buf[_this->head] = group.parts[1];
  2329  0010B4  EE20 F0C8          	lfsr	2,200
  2330  0010B8  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2331  0010BA  26D9               	addwf	fsr2l,f,c
  2332  0010BC  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2333  0010BE  22DA               	addwfc	fsr2h,f,c
  2334  0010C0  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  2335  0010C4  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  2336  0010C8  5026               	movf	??_FastTransfer_buffer_put,w,c
  2337  0010CA  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  2338  0010CC  6ED9               	movwf	fsr2l,c
  2339  0010CE  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  2340  0010D0  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  2341  0010D2  6EDA               	movwf	fsr2h,c
  2342  0010D4  C042  FFDF         	movff	_group+1,indf2
  2343                           
  2344                           ;FastTransfer.c: 235: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  2345  0010D8  EE20 F0C8          	lfsr	2,200
  2346  0010DC  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2347  0010DE  26D9               	addwf	fsr2l,f,c
  2348  0010E0  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2349  0010E2  22DA               	addwfc	fsr2h,f,c
  2350  0010E4  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  2351  0010E8  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  2352  0010EC  0E00               	movlw	0
  2353  0010EE  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  2354  0010F0  0EC8               	movlw	200
  2355  0010F2  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  2356  0010F4  ECE9  F014         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  2357  0010F8  EE20 F0C8          	lfsr	2,200
  2358  0010FC  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2359  0010FE  26D9               	addwf	fsr2l,f,c
  2360  001100  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2361  001102  22DA               	addwfc	fsr2h,f,c
  2362  001104  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  2363  001108  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  2364                           
  2365                           ;FastTransfer.c: 236: ++_this->count;
  2366  00110C  EE20 F0CC          	lfsr	2,204
  2367  001110  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2368  001112  26D9               	addwf	fsr2l,f,c
  2369  001114  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2370  001116  22DA               	addwfc	fsr2h,f,c
  2371  001118  2ADE               	incf	postinc2,f,c
  2372  00111A  0E00               	movlw	0
  2373  00111C  22DD               	addwfc	postdec2,f,c
  2374  00111E  0012               	return	
  2375  001120  0012               	return		;funcret
  2376  001122                     __end_of_FastTransfer_buffer_put:
  2377                           	opt stack 0
  2378                           tosu	equ	0xFFF
  2379                           tosh	equ	0xFFE
  2380                           tosl	equ	0xFFD
  2381                           pclath	equ	0xFFA
  2382                           tblptru	equ	0xFF8
  2383                           tblptrh	equ	0xFF7
  2384                           tblptrl	equ	0xFF6
  2385                           tablat	equ	0xFF5
  2386                           intcon	equ	0xFF2
  2387                           postinc0	equ	0xFEE
  2388                           wreg	equ	0xFE8
  2389                           indf2	equ	0xFDF
  2390                           postinc2	equ	0xFDE
  2391                           postdec2	equ	0xFDD
  2392                           plusw2	equ	0xFDB
  2393                           fsr2h	equ	0xFDA
  2394                           fsr2l	equ	0xFD9
  2395                           status	equ	0xFD8
  2396                           
  2397 ;; *************** function _FastTransfer_buffer_modulo_inc *****************
  2398 ;; Defined at:
  2399 ;;		line 273 in file "FastTransfer.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;  value           2   26[COMRAM] const unsigned int 
  2402 ;;  modulus         2   28[COMRAM] const unsigned int 
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;  my_value        2   30[COMRAM] unsigned int 
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  2   26[COMRAM] unsigned int 
  2407 ;; Registers used:
  2408 ;;		wreg, status,2, status,0
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2414 ;;      Params:         4       0       0       0       0       0       0
  2415 ;;      Locals:         2       0       0       0       0       0       0
  2416 ;;      Temps:          0       0       0       0       0       0       0
  2417 ;;      Totals:         6       0       0       0       0       0       0
  2418 ;;Total ram usage:        6 bytes
  2419 ;; Hardware stack levels used:    1
  2420 ;; Hardware stack levels required when called:    4
  2421 ;; This function calls:
  2422 ;;		Nothing
  2423 ;; This function is called by:
  2424 ;;		_FastTransfer_buffer_put
  2425 ;;		_FastTransfer_buffer_get
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           	psect	text10
  2430  0029D2                     __ptext10:
  2431                           	opt stack 0
  2432  0029D2                     _FastTransfer_buffer_modulo_inc:
  2433                           	opt stack 22
  2434                           
  2435                           ;FastTransfer.c: 274: unsigned int my_value = value + 1;
  2436                           
  2437                           ;incstack = 0
  2438  0029D2  0E01               	movlw	1
  2439  0029D4  241B               	addwf	FastTransfer_buffer_modulo_inc@value,w,c
  2440  0029D6  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  2441  0029D8  0E00               	movlw	0
  2442  0029DA  201C               	addwfc	FastTransfer_buffer_modulo_inc@value+1,w,c
  2443  0029DC  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  2444                           
  2445                           ;FastTransfer.c: 275: if (my_value >= modulus) {
  2446  0029DE  501D               	movf	FastTransfer_buffer_modulo_inc@modulus,w,c
  2447  0029E0  5C1F               	subwf	FastTransfer_buffer_modulo_inc@my_value,w,c
  2448  0029E2  501E               	movf	FastTransfer_buffer_modulo_inc@modulus+1,w,c
  2449  0029E4  5820               	subwfb	FastTransfer_buffer_modulo_inc@my_value+1,w,c
  2450  0029E6  A0D8               	btfss	status,0,c
  2451  0029E8  D005               	goto	l3058
  2452                           
  2453                           ;FastTransfer.c: 276: my_value = 0;
  2454  0029EA  0E00               	movlw	0
  2455  0029EC  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  2456  0029EE  0E00               	movlw	0
  2457  0029F0  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  2458  0029F2  D000               	goto	l3058
  2459  0029F4                     l3058:
  2460                           
  2461                           ;FastTransfer.c: 277: }
  2462                           ;FastTransfer.c: 278: return (my_value);
  2463  0029F4  C01F  F01B         	movff	FastTransfer_buffer_modulo_inc@my_value,?_FastTransfer_buffer_modulo_inc
  2464  0029F8  C020  F01C         	movff	FastTransfer_buffer_modulo_inc@my_value+1,?_FastTransfer_buffer_modulo_inc+1
  2465  0029FC  0012               	return	
  2466  0029FE  0012               	return		;funcret
  2467  002A00                     __end_of_FastTransfer_buffer_modulo_inc:
  2468                           	opt stack 0
  2469                           tosu	equ	0xFFF
  2470                           tosh	equ	0xFFE
  2471                           tosl	equ	0xFFD
  2472                           pclath	equ	0xFFA
  2473                           tblptru	equ	0xFF8
  2474                           tblptrh	equ	0xFF7
  2475                           tblptrl	equ	0xFF6
  2476                           tablat	equ	0xFF5
  2477                           intcon	equ	0xFF2
  2478                           postinc0	equ	0xFEE
  2479                           wreg	equ	0xFE8
  2480                           indf2	equ	0xFDF
  2481                           postinc2	equ	0xFDE
  2482                           postdec2	equ	0xFDD
  2483                           plusw2	equ	0xFDB
  2484                           fsr2h	equ	0xFDA
  2485                           fsr2l	equ	0xFD9
  2486                           status	equ	0xFD8
  2487                           
  2488 ;; *************** function _Delay *****************
  2489 ;; Defined at:
  2490 ;;		line 118 in file "main.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;  wait            2   26[COMRAM] int 
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;  x               2   29[COMRAM] int 
  2495 ;; Return value:  Size  Location     Type
  2496 ;;		None               void
  2497 ;; Registers used:
  2498 ;;		wreg, status,2, status,0
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2504 ;;      Params:         2       0       0       0       0       0       0
  2505 ;;      Locals:         2       0       0       0       0       0       0
  2506 ;;      Temps:          1       0       0       0       0       0       0
  2507 ;;      Totals:         5       0       0       0       0       0       0
  2508 ;;Total ram usage:        5 bytes
  2509 ;; Hardware stack levels used:    1
  2510 ;; Hardware stack levels required when called:    4
  2511 ;; This function calls:
  2512 ;;		Nothing
  2513 ;; This function is called by:
  2514 ;;		_respondECU
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           	psect	text11
  2519  00293A                     __ptext11:
  2520                           	opt stack 0
  2521  00293A                     _Delay:
  2522                           	opt stack 24
  2523                           
  2524                           ;main.c: 119: int x;
  2525                           ;main.c: 120: for (x = 0; x < wait; x++) {
  2526                           
  2527                           ;incstack = 0
  2528  00293A  0E00               	movlw	0
  2529  00293C  6E1F               	movwf	Delay@x+1,c
  2530  00293E  0E00               	movlw	0
  2531  002940  6E1E               	movwf	Delay@x,c
  2532  002942  D00A               	goto	l420
  2533  002944                     l3260:
  2534                           
  2535                           ;main.c: 121: _delay((unsigned long)((1)*(16000000/4000.0)));
  2536  002944  0E06               	movlw	6
  2537  002946  6E1D               	movwf	??_Delay& (0+255),c
  2538  002948  0E30               	movlw	48
  2539  00294A                     u6667:
  2540  00294A  2EE8               	decfsz	wreg,f,c
  2541  00294C  D7FE               	goto	u6667
  2542  00294E  2E1D               	decfsz	??_Delay& (0+255),f,c
  2543  002950  D7FC               	goto	u6667
  2544  002952  D000               	nop2	
  2545  002954  4A1E               	infsnz	Delay@x,f,c
  2546  002956  2A1F               	incf	Delay@x+1,f,c
  2547  002958                     l420:
  2548  002958  501B               	movf	Delay@wait,w,c
  2549  00295A  5C1E               	subwf	Delay@x,w,c
  2550  00295C  501F               	movf	Delay@x+1,w,c
  2551  00295E  0A80               	xorlw	128
  2552  002960  6E1D               	movwf	??_Delay& (0+255),c
  2553  002962  501C               	movf	Delay@wait+1,w,c
  2554  002964  0A80               	xorlw	128
  2555  002966  581D               	subwfb	??_Delay& (0+255),w,c
  2556  002968  A0D8               	btfss	status,0,c
  2557  00296A  D7EC               	goto	l3260
  2558  00296C  0012               	return		;funcret
  2559  00296E                     __end_of_Delay:
  2560                           	opt stack 0
  2561                           tosu	equ	0xFFF
  2562                           tosh	equ	0xFFE
  2563                           tosl	equ	0xFFD
  2564                           pclath	equ	0xFFA
  2565                           tblptru	equ	0xFF8
  2566                           tblptrh	equ	0xFF7
  2567                           tblptrl	equ	0xFF6
  2568                           tablat	equ	0xFF5
  2569                           intcon	equ	0xFF2
  2570                           postinc0	equ	0xFEE
  2571                           wreg	equ	0xFE8
  2572                           indf2	equ	0xFDF
  2573                           postinc2	equ	0xFDE
  2574                           postdec2	equ	0xFDD
  2575                           plusw2	equ	0xFDB
  2576                           fsr2h	equ	0xFDA
  2577                           fsr2l	equ	0xFD9
  2578                           status	equ	0xFD8
  2579                           
  2580 ;; *************** function _receiveData *****************
  2581 ;; Defined at:
  2582 ;;		line 82 in file "FastTransfer.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;		None
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;  holder          3   16[BANK0 ] unsigned char [3]
  2587 ;;  crcHolder       1   20[BANK0 ] unsigned char 
  2588 ;;  holder          3   13[BANK0 ] unsigned char [3]
  2589 ;;  crcHolder       1   19[BANK0 ] unsigned char 
  2590 ;;  u               2   21[BANK0 ] int 
  2591 ;;  r               2   23[BANK0 ] int 
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      unsigned char 
  2594 ;; Registers used:
  2595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2601 ;;      Params:         0       0       0       0       0       0       0
  2602 ;;      Locals:         0      12       0       0       0       0       0
  2603 ;;      Temps:          0       6       0       0       0       0       0
  2604 ;;      Totals:         0      18       0       0       0       0       0
  2605 ;;Total ram usage:       18 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; Hardware stack levels required when called:    8
  2608 ;; This function calls:
  2609 ;;		Absolute function
  2610 ;;		_CRC8
  2611 ;;		_CRCcheck
  2612 ;;		_Receive_available
  2613 ;;		_Receive_get
  2614 ;;		_Receive_peek
  2615 ;;		_Send_put
  2616 ;; This function is called by:
  2617 ;;		_updateComms
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           	psect	text12
  2622  0000C6                     __ptext12:
  2623                           	opt stack 0
  2624  0000C6                     _receiveData:
  2625                           	opt stack 21
  2626                           
  2627                           ;FastTransfer.c: 85: if (rx_len == 0) {
  2628                           
  2629                           ;incstack = 0
  2630  0000C6  503E               	movf	_rx_len,w,c
  2631  0000C8  A4D8               	btfss	status,2,c
  2632  0000CA  D0B0               	goto	l4872
  2633                           
  2634                           ;FastTransfer.c: 87: if (serial_available() > 4) {
  2635  0000CC  D801               	call	u5428
  2636  0000CE  D00A               	goto	u5429
  2637  0000D0                     u5428:
  2638  0000D0  0005               	push	
  2639  0000D2  6EFA               	movwf	pclath,c
  2640  0000D4  502D               	movf	_serial_available,w,c
  2641  0000D6  6EFD               	movwf	tosl,c
  2642  0000D8  502E               	movf	_serial_available+1,w,c
  2643  0000DA  6EFE               	movwf	tosh,c
  2644  0000DC  50F8               	movf	tblptru,w,c
  2645  0000DE  6EFF               	movwf	tosu,c
  2646  0000E0  50FA               	movf	pclath,w,c
  2647  0000E2  0012               	return		;indir
  2648  0000E4                     u5429:
  2649  0000E4  BE1E               	btfsc	?_Receive_available+1,7,c
  2650  0000E6  D0A2               	goto	l4872
  2651  0000E8  501E               	movf	?_Receive_available+1,w,c
  2652  0000EA  E120               	bnz	l4848
  2653  0000EC  0E05               	movlw	5
  2654  0000EE  5C1D               	subwf	?_Receive_available,w,c
  2655  0000F0  B0D8               	btfsc	status,0,c
  2656  0000F2  D01C               	goto	l4848
  2657  0000F4  D09B               	goto	l4872
  2658                           
  2659                           ;FastTransfer.c: 89: while (serial_read() != 0x06) {
  2660  0000F6  D01A               	goto	l4848
  2661  0000F8                     l4840:
  2662                           
  2663                           ;FastTransfer.c: 93: alignErrorCounter++;
  2664  0000F8  0100               	movlb	0	; () banked
  2665  0000FA  4B9D               	infsnz	_alignErrorCounter& (0+255),f,b
  2666  0000FC  2B9E               	incf	(_alignErrorCounter+1)& (0+255),f,b
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;FastTransfer.c: 94: if (serial_available() < 5)
  2670  0000FE  D801               	call	u5448
  2671  000100  D00A               	goto	u5449
  2672  000102                     u5448:
  2673  000102  0005               	push	
  2674  000104  6EFA               	movwf	pclath,c
  2675  000106  502D               	movf	_serial_available,w,c
  2676  000108  6EFD               	movwf	tosl,c
  2677  00010A  502E               	movf	_serial_available+1,w,c
  2678  00010C  6EFE               	movwf	tosh,c
  2679  00010E  50F8               	movf	tblptru,w,c
  2680  000110  6EFF               	movwf	tosu,c
  2681  000112  50FA               	movf	pclath,w,c
  2682  000114  0012               	return		;indir
  2683  000116                     u5449:
  2684  000116  BE1E               	btfsc	?_Receive_available+1,7,c
  2685  000118  D006               	goto	l4844
  2686  00011A  501E               	movf	?_Receive_available+1,w,c
  2687  00011C  E107               	bnz	l4848
  2688  00011E  0E05               	movlw	5
  2689  000120  5C1D               	subwf	?_Receive_available,w,c
  2690  000122  B0D8               	btfsc	status,0,c
  2691  000124  D003               	goto	l4848
  2692  000126                     l4844:
  2693                           
  2694                           ;FastTransfer.c: 95: return 0;
  2695  000126  0E00               	movlw	0
  2696  000128  0012               	return	
  2697  00012A  D000               	goto	l4848
  2698  00012C                     l4848:
  2699  00012C  D801               	call	u5468
  2700  00012E  D00A               	goto	u5469
  2701  000130                     u5468:
  2702  000130  0005               	push	
  2703  000132  6EFA               	movwf	pclath,c
  2704  000134  502F               	movf	_serial_read,w,c
  2705  000136  6EFD               	movwf	tosl,c
  2706  000138  5030               	movf	_serial_read+1,w,c
  2707  00013A  6EFE               	movwf	tosh,c
  2708  00013C  50F8               	movf	tblptru,w,c
  2709  00013E  6EFF               	movwf	tosu,c
  2710  000140  50FA               	movf	pclath,w,c
  2711  000142  0012               	return		;indir
  2712  000144                     u5469:
  2713  000144  0A06               	xorlw	6
  2714  000146  A4D8               	btfss	status,2,c
  2715  000148  D7D7               	goto	l4840
  2716                           
  2717                           ;FastTransfer.c: 96: }
  2718                           ;FastTransfer.c: 97: if (serial_read() == 0x85) {
  2719  00014A  D801               	call	u5488
  2720  00014C  D00A               	goto	u5489
  2721  00014E                     u5488:
  2722  00014E  0005               	push	
  2723  000150  6EFA               	movwf	pclath,c
  2724  000152  502F               	movf	_serial_read,w,c
  2725  000154  6EFD               	movwf	tosl,c
  2726  000156  5030               	movf	_serial_read+1,w,c
  2727  000158  6EFE               	movwf	tosh,c
  2728  00015A  50F8               	movf	tblptru,w,c
  2729  00015C  6EFF               	movwf	tosu,c
  2730  00015E  50FA               	movf	pclath,w,c
  2731  000160  0012               	return		;indir
  2732  000162                     u5489:
  2733  000162  0A85               	xorlw	133
  2734  000164  A4D8               	btfss	status,2,c
  2735  000166  D062               	goto	l4872
  2736                           
  2737                           ;FastTransfer.c: 98: rx_address = serial_read();
  2738  000168  D801               	call	u5508
  2739  00016A  D00A               	goto	u5509
  2740  00016C                     u5508:
  2741  00016C  0005               	push	
  2742  00016E  6EFA               	movwf	pclath,c
  2743  000170  502F               	movf	_serial_read,w,c
  2744  000172  6EFD               	movwf	tosl,c
  2745  000174  5030               	movf	_serial_read+1,w,c
  2746  000176  6EFE               	movwf	tosh,c
  2747  000178  50F8               	movf	tblptru,w,c
  2748  00017A  6EFF               	movwf	tosu,c
  2749  00017C  50FA               	movf	pclath,w,c
  2750  00017E  0012               	return		;indir
  2751  000180                     u5509:
  2752  000180  6E3C               	movwf	_rx_address,c
  2753                           
  2754                           ;FastTransfer.c: 99: returnAddress = serial_read();
  2755  000182  D801               	call	u5518
  2756  000184  D00A               	goto	u5519
  2757  000186                     u5518:
  2758  000186  0005               	push	
  2759  000188  6EFA               	movwf	pclath,c
  2760  00018A  502F               	movf	_serial_read,w,c
  2761  00018C  6EFD               	movwf	tosl,c
  2762  00018E  5030               	movf	_serial_read+1,w,c
  2763  000190  6EFE               	movwf	tosh,c
  2764  000192  50F8               	movf	tblptru,w,c
  2765  000194  6EFF               	movwf	tosu,c
  2766  000196  50FA               	movf	pclath,w,c
  2767  000198  0012               	return		;indir
  2768  00019A                     u5519:
  2769  00019A  6E3B               	movwf	_returnAddress,c
  2770                           
  2771                           ;FastTransfer.c: 100: rx_len = serial_read();
  2772  00019C  D801               	call	u5528
  2773  00019E  D00A               	goto	u5529
  2774  0001A0                     u5528:
  2775  0001A0  0005               	push	
  2776  0001A2  6EFA               	movwf	pclath,c
  2777  0001A4  502F               	movf	_serial_read,w,c
  2778  0001A6  6EFD               	movwf	tosl,c
  2779  0001A8  5030               	movf	_serial_read+1,w,c
  2780  0001AA  6EFE               	movwf	tosh,c
  2781  0001AC  50F8               	movf	tblptru,w,c
  2782  0001AE  6EFF               	movwf	tosu,c
  2783  0001B0  50FA               	movf	pclath,w,c
  2784  0001B2  0012               	return		;indir
  2785  0001B4                     u5529:
  2786  0001B4  6E3E               	movwf	_rx_len,c
  2787                           
  2788                           ;FastTransfer.c: 102: if (rx_address != moduleAddress) {
  2789  0001B6  503A               	movf	_moduleAddress,w,c
  2790  0001B8  183C               	xorwf	_rx_address,w,c
  2791  0001BA  B4D8               	btfsc	status,2,c
  2792  0001BC  D037               	goto	l4872
  2793                           
  2794                           ;FastTransfer.c: 103: addressErrorCounter++;
  2795  0001BE  0100               	movlb	0	; () banked
  2796  0001C0  4B9B               	infsnz	_addressErrorCounter& (0+255),f,b
  2797  0001C2  2B9C               	incf	(_addressErrorCounter+1)& (0+255),f,b
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;FastTransfer.c: 106: int u;
  2801                           ;FastTransfer.c: 107: for (u = 0; u <= (rx_len + 1); u++) {
  2802  0001C4  0E00               	movlw	0
  2803  0001C6  0100               	movlb	0	; () banked
  2804  0001C8  6FE9               	movwf	(receiveData@u+1)& (0+255),b
  2805  0001CA  0E00               	movlw	0
  2806  0001CC  6FE8               	movwf	receiveData@u& (0+255),b
  2807  0001CE  D010               	goto	l4864
  2808  0001D0                     l4860:
  2809                           
  2810                           ; BSR set to: 0
  2811                           ;FastTransfer.c: 108: serial_read();
  2812  0001D0  D801               	call	u5548
  2813  0001D2  D00A               	goto	l4862
  2814  0001D4                     u5548:
  2815  0001D4  0005               	push	
  2816  0001D6  6EFA               	movwf	pclath,c
  2817  0001D8  502F               	movf	_serial_read,w,c
  2818  0001DA  6EFD               	movwf	tosl,c
  2819  0001DC  5030               	movf	_serial_read+1,w,c
  2820  0001DE  6EFE               	movwf	tosh,c
  2821  0001E0  50F8               	movf	tblptru,w,c
  2822  0001E2  6EFF               	movwf	tosu,c
  2823  0001E4  50FA               	movf	pclath,w,c
  2824  0001E6  0012               	return		;indir
  2825  0001E8                     l4862:
  2826  0001E8  0100               	movlb	0	; () banked
  2827  0001EA  4BE8               	infsnz	receiveData@u& (0+255),f,b
  2828  0001EC  2BE9               	incf	(receiveData@u+1)& (0+255),f,b
  2829  0001EE  D000               	goto	l4864
  2830  0001F0                     l4864:
  2831                           
  2832                           ; BSR set to: 0
  2833  0001F0  503E               	movf	_rx_len,w,c
  2834  0001F2  0100               	movlb	0	; () banked
  2835  0001F4  6FDA               	movwf	??_receiveData& (0+255),b
  2836  0001F6  6BDB               	clrf	(??_receiveData+1)& (0+255),b
  2837  0001F8  0E01               	movlw	1
  2838  0001FA  0100               	movlb	0	; () banked
  2839  0001FC  27DA               	addwf	??_receiveData& (0+255),f,b
  2840  0001FE  0E00               	movlw	0
  2841  000200  23DB               	addwfc	(??_receiveData+1)& (0+255),f,b
  2842  000202  0100               	movlb	0	; () banked
  2843  000204  51E8               	movf	receiveData@u& (0+255),w,b
  2844  000206  0100               	movlb	0	; () banked
  2845  000208  5DDA               	subwf	??_receiveData& (0+255),w,b
  2846  00020A  0100               	movlb	0	; () banked
  2847  00020C  51DB               	movf	(??_receiveData+1)& (0+255),w,b
  2848  00020E  0A80               	xorlw	128
  2849  000210  0100               	movlb	0	; () banked
  2850  000212  6FDC               	movwf	(??_receiveData+2)& (0+255),b
  2851  000214  0100               	movlb	0	; () banked
  2852  000216  51E9               	movf	(receiveData@u+1)& (0+255),w,b
  2853  000218  0A80               	xorlw	128
  2854  00021A  0100               	movlb	0	; () banked
  2855  00021C  59DC               	subwfb	(??_receiveData+2)& (0+255),w,b
  2856  00021E  B0D8               	btfsc	status,0,c
  2857  000220  D7D7               	goto	l4860
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;FastTransfer.c: 109: }
  2861                           ;FastTransfer.c: 110: rx_len = 0;
  2862                           
  2863                           ; BSR set to: 0
  2864  000222  0E00               	movlw	0
  2865  000224  6E3E               	movwf	_rx_len,c
  2866                           
  2867                           ; BSR set to: 0
  2868                           ;FastTransfer.c: 111: return 0;
  2869  000226  0E00               	movlw	0
  2870                           
  2871                           ; BSR set to: 0
  2872  000228  0012               	return	
  2873                           
  2874                           ; BSR set to: 0
  2875                           
  2876                           ; BSR set to: 0
  2877                           
  2878                           ; BSR set to: 0
  2879  00022A  D000               	goto	l4872
  2880  00022C                     l4872:
  2881                           
  2882                           ;FastTransfer.c: 112: }
  2883                           ;FastTransfer.c: 114: }
  2884                           ;FastTransfer.c: 115: }
  2885                           ;FastTransfer.c: 116: }
  2886                           ;FastTransfer.c: 119: if (rx_len != 0) {
  2887  00022C  503E               	movf	_rx_len,w,c
  2888  00022E  B4D8               	btfsc	status,2,c
  2889  000230  D2B2               	goto	l4996
  2890                           
  2891                           ;FastTransfer.c: 122: if (rx_array_inx == 0) {
  2892  000232  503D               	movf	_rx_array_inx,w,c
  2893  000234  B4D8               	btfsc	status,2,c
  2894  000236  D002               	goto	l4878
  2895  000238  D049               	goto	l4896
  2896                           
  2897                           ;FastTransfer.c: 123: while (!(serial_available() >= 1));
  2898  00023A  D000               	goto	l4878
  2899  00023C                     l4878:
  2900  00023C  D801               	call	u5588
  2901  00023E  D00A               	goto	u5589
  2902  000240                     u5588:
  2903  000240  0005               	push	
  2904  000242  6EFA               	movwf	pclath,c
  2905  000244  502D               	movf	_serial_available,w,c
  2906  000246  6EFD               	movwf	tosl,c
  2907  000248  502E               	movf	_serial_available+1,w,c
  2908  00024A  6EFE               	movwf	tosh,c
  2909  00024C  50F8               	movf	tblptru,w,c
  2910  00024E  6EFF               	movwf	tosu,c
  2911  000250  50FA               	movf	pclath,w,c
  2912  000252  0012               	return		;indir
  2913  000254                     u5589:
  2914  000254  BE1E               	btfsc	?_Receive_available+1,7,c
  2915  000256  D7F2               	goto	l4878
  2916  000258  501E               	movf	?_Receive_available+1,w,c
  2917  00025A  E105               	bnz	l4880
  2918  00025C  041D               	decf	?_Receive_available,w,c
  2919  00025E  B0D8               	btfsc	status,0,c
  2920  000260  D002               	goto	l4880
  2921  000262  D7EC               	goto	l4878
  2922  000264  D000               	goto	l4880
  2923  000266                     l4880:
  2924                           
  2925                           ;FastTransfer.c: 124: if (255 == serial_peek()) {
  2926  000266  D801               	call	u5608
  2927  000268  D00B               	goto	u5609
  2928  00026A                     u5608:
  2929  00026A  0005               	push	
  2930  00026C  0100               	movlb	0	; () banked
  2931  00026E  6EFA               	movwf	pclath,c
  2932  000270  51AB               	movf	_serial_peek& (0+255),w,b
  2933  000272  6EFD               	movwf	tosl,c
  2934  000274  51AC               	movf	(_serial_peek+1)& (0+255),w,b
  2935  000276  6EFE               	movwf	tosh,c
  2936  000278  50F8               	movf	tblptru,w,c
  2937  00027A  6EFF               	movwf	tosu,c
  2938  00027C  50FA               	movf	pclath,w,c
  2939  00027E  0012               	return		;indir
  2940  000280                     u5609:
  2941  000280  0AFF               	xorlw	255
  2942  000282  A4D8               	btfss	status,2,c
  2943  000284  D023               	goto	l4896
  2944                           
  2945                           ;FastTransfer.c: 125: CRCcheck();
  2946  000286  EC25  F007         	call	_CRCcheck	;wreg free
  2947                           
  2948                           ;FastTransfer.c: 126: rx_len = 0;
  2949  00028A  0E00               	movlw	0
  2950  00028C  6E3E               	movwf	_rx_len,c
  2951                           
  2952                           ;FastTransfer.c: 127: rx_array_inx = 0;
  2953  00028E  0E00               	movlw	0
  2954  000290  6E3D               	movwf	_rx_array_inx,c
  2955                           
  2956                           ;FastTransfer.c: 128: return 0;
  2957  000292  0E00               	movlw	0
  2958  000294  0012               	return	
  2959                           
  2960                           ;FastTransfer.c: 129: }
  2961                           ;FastTransfer.c: 130: }
  2962                           ;FastTransfer.c: 133: while (serial_available() && rx_array_inx <= rx_len) {
  2963  000296  D01A               	goto	l4896
  2964  000298                     l4892:
  2965                           
  2966                           ;FastTransfer.c: 134: rx_buffer[rx_array_inx++] = serial_read();
  2967  000298  D801               	call	u5628
  2968  00029A  D00A               	goto	u5629
  2969  00029C                     u5628:
  2970  00029C  0005               	push	
  2971  00029E  6EFA               	movwf	pclath,c
  2972  0002A0  502F               	movf	_serial_read,w,c
  2973  0002A2  6EFD               	movwf	tosl,c
  2974  0002A4  5030               	movf	_serial_read+1,w,c
  2975  0002A6  6EFE               	movwf	tosh,c
  2976  0002A8  50F8               	movf	tblptru,w,c
  2977  0002AA  6EFF               	movwf	tosu,c
  2978  0002AC  50FA               	movf	pclath,w,c
  2979  0002AE  0012               	return		;indir
  2980  0002B0                     u5629:
  2981  0002B0  0100               	movlb	0	; () banked
  2982  0002B2  6FDA               	movwf	??_receiveData& (0+255),b
  2983  0002B4  503D               	movf	_rx_array_inx,w,c
  2984  0002B6  0D01               	mullw	1
  2985  0002B8  0E00               	movlw	low _rx_buffer
  2986  0002BA  24F3               	addwf	prodl,w,c
  2987  0002BC  6ED9               	movwf	fsr2l,c
  2988  0002BE  0E02               	movlw	high _rx_buffer
  2989  0002C0  20F4               	addwfc	prodh,w,c
  2990  0002C2  6EDA               	movwf	fsr2h,c
  2991  0002C4  C0DA  FFDF         	movff	??_receiveData,indf2
  2992                           
  2993                           ; BSR set to: 0
  2994  0002C8  2A3D               	incf	_rx_array_inx,f,c
  2995  0002CA  D000               	goto	l4896
  2996  0002CC                     l4896:
  2997  0002CC  D801               	call	u5638
  2998  0002CE  D00A               	goto	u5639
  2999  0002D0                     u5638:
  3000  0002D0  0005               	push	
  3001  0002D2  6EFA               	movwf	pclath,c
  3002  0002D4  502D               	movf	_serial_available,w,c
  3003  0002D6  6EFD               	movwf	tosl,c
  3004  0002D8  502E               	movf	_serial_available+1,w,c
  3005  0002DA  6EFE               	movwf	tosh,c
  3006  0002DC  50F8               	movf	tblptru,w,c
  3007  0002DE  6EFF               	movwf	tosu,c
  3008  0002E0  50FA               	movf	pclath,w,c
  3009  0002E2  0012               	return		;indir
  3010  0002E4                     u5639:
  3011  0002E4  501D               	movf	?_Receive_available,w,c
  3012  0002E6  101E               	iorwf	?_Receive_available+1,w,c
  3013  0002E8  B4D8               	btfsc	status,2,c
  3014  0002EA  D006               	goto	l4900
  3015  0002EC  503D               	movf	_rx_array_inx,w,c
  3016  0002EE  5C3E               	subwf	_rx_len,w,c
  3017  0002F0  A0D8               	btfss	status,0,c
  3018  0002F2  D002               	goto	l4900
  3019  0002F4  D7D1               	goto	l4892
  3020  0002F6  D000               	goto	l4900
  3021  0002F8                     l4900:
  3022                           
  3023                           ;FastTransfer.c: 135: }
  3024                           ;FastTransfer.c: 137: if (rx_len == (rx_array_inx - 1)) {
  3025  0002F8  503E               	movf	_rx_len,w,c
  3026  0002FA  0100               	movlb	0	; () banked
  3027  0002FC  6FDA               	movwf	??_receiveData& (0+255),b
  3028  0002FE  6BDB               	clrf	(??_receiveData+1)& (0+255),b
  3029  000300  0EFF               	movlw	255
  3030  000302  0100               	movlb	0	; () banked
  3031  000304  6FDC               	movwf	(??_receiveData+2)& (0+255),b
  3032  000306  0EFF               	movlw	255
  3033  000308  0100               	movlb	0	; () banked
  3034  00030A  6FDD               	movwf	(??_receiveData+3)& (0+255),b
  3035  00030C  503D               	movf	_rx_array_inx,w,c
  3036  00030E  0100               	movlb	0	; () banked
  3037  000310  6FDE               	movwf	(??_receiveData+4)& (0+255),b
  3038  000312  6BDF               	clrf	(??_receiveData+5)& (0+255),b
  3039  000314  0100               	movlb	0	; () banked
  3040  000316  51DC               	movf	(??_receiveData+2)& (0+255),w,b
  3041  000318  0100               	movlb	0	; () banked
  3042  00031A  27DE               	addwf	(??_receiveData+4)& (0+255),f,b
  3043  00031C  0100               	movlb	0	; () banked
  3044  00031E  51DD               	movf	(??_receiveData+3)& (0+255),w,b
  3045  000320  0100               	movlb	0	; () banked
  3046  000322  23DF               	addwfc	(??_receiveData+5)& (0+255),f,b
  3047  000324  0100               	movlb	0	; () banked
  3048  000326  51DA               	movf	??_receiveData& (0+255),w,b
  3049  000328  0100               	movlb	0	; () banked
  3050  00032A  19DE               	xorwf	(??_receiveData+4)& (0+255),w,b
  3051  00032C  E105               	bnz	u5661
  3052  00032E  0100               	movlb	0	; () banked
  3053  000330  51DB               	movf	(??_receiveData+1)& (0+255),w,b
  3054  000332  0100               	movlb	0	; () banked
  3055  000334  19DF               	xorwf	(??_receiveData+5)& (0+255),w,b
  3056  000336  A4D8               	btfss	status,2,c
  3057  000338                     u5661:
  3058  000338  D22E               	goto	l4996
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;FastTransfer.c: 140: calc_CS = CRC8(rx_buffer, rx_len);
  3062  00033A  0E00               	movlw	low _rx_buffer
  3063  00033C  6E1B               	movwf	CRC8@data,c
  3064  00033E  0E02               	movlw	high _rx_buffer
  3065  000340  6E1C               	movwf	CRC8@data+1,c
  3066  000342  C03E  F01D         	movff	_rx_len,CRC8@len
  3067  000346  EC64  F013         	call	_CRC8	;wreg free
  3068  00034A  6E36               	movwf	_calc_CS,c
  3069                           
  3070                           ;FastTransfer.c: 144: if (calc_CS == rx_buffer[rx_array_inx - 1]) {
  3071  00034C  0EFF               	movlw	255
  3072  00034E  0100               	movlb	0	; () banked
  3073  000350  6FDA               	movwf	??_receiveData& (0+255),b
  3074  000352  0EFF               	movlw	255
  3075  000354  0100               	movlb	0	; () banked
  3076  000356  6FDB               	movwf	(??_receiveData+1)& (0+255),b
  3077  000358  503D               	movf	_rx_array_inx,w,c
  3078  00035A  0100               	movlb	0	; () banked
  3079  00035C  6FDC               	movwf	(??_receiveData+2)& (0+255),b
  3080  00035E  6BDD               	clrf	(??_receiveData+3)& (0+255),b
  3081  000360  0100               	movlb	0	; () banked
  3082  000362  51DA               	movf	??_receiveData& (0+255),w,b
  3083  000364  0100               	movlb	0	; () banked
  3084  000366  27DC               	addwf	(??_receiveData+2)& (0+255),f,b
  3085  000368  0100               	movlb	0	; () banked
  3086  00036A  51DB               	movf	(??_receiveData+1)& (0+255),w,b
  3087  00036C  0100               	movlb	0	; () banked
  3088  00036E  23DD               	addwfc	(??_receiveData+3)& (0+255),f,b
  3089  000370  0E00               	movlw	low _rx_buffer
  3090  000372  0100               	movlb	0	; () banked
  3091  000374  25DC               	addwf	(??_receiveData+2)& (0+255),w,b
  3092  000376  6ED9               	movwf	fsr2l,c
  3093  000378  0E02               	movlw	high _rx_buffer
  3094  00037A  0100               	movlb	0	; () banked
  3095  00037C  21DD               	addwfc	(??_receiveData+3)& (0+255),w,b
  3096  00037E  6EDA               	movwf	fsr2h,c
  3097  000380  5036               	movf	_calc_CS,w,c
  3098  000382  18DE               	xorwf	postinc2,w,c
  3099  000384  A4D8               	btfss	status,2,c
  3100  000386  D13E               	goto	l4958
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;FastTransfer.c: 147: int r;
  3104                           ;FastTransfer.c: 148: for (r = 0; r < rx_len; r = r + 3) {
  3105  000388  0E00               	movlw	0
  3106  00038A  0100               	movlb	0	; () banked
  3107  00038C  6FEB               	movwf	(receiveData@r+1)& (0+255),b
  3108  00038E  0E00               	movlw	0
  3109  000390  6FEA               	movwf	receiveData@r& (0+255),b
  3110  000392  D05E               	goto	l4918
  3111  000394                     l4908:
  3112                           
  3113                           ; BSR set to: 0
  3114                           ;FastTransfer.c: 149: if (rx_buffer[r] < maxDataAddress) {
  3115  000394  0E00               	movlw	low _rx_buffer
  3116  000396  0100               	movlb	0	; () banked
  3117  000398  25EA               	addwf	receiveData@r& (0+255),w,b
  3118  00039A  6ED9               	movwf	fsr2l,c
  3119  00039C  0E02               	movlw	high _rx_buffer
  3120  00039E  0100               	movlb	0	; () banked
  3121  0003A0  21EB               	addwfc	(receiveData@r+1)& (0+255),w,b
  3122  0003A2  6EDA               	movwf	fsr2h,c
  3123  0003A4  5039               	movf	_maxDataAddress,w,c
  3124  0003A6  5CDE               	subwf	postinc2,w,c
  3125  0003A8  B0D8               	btfsc	status,0,c
  3126  0003AA  D043               	goto	l4914
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;FastTransfer.c: 150: group.parts[0] = rx_buffer[r + 1];
  3130  0003AC  0E01               	movlw	1
  3131  0003AE  0100               	movlb	0	; () banked
  3132  0003B0  25EA               	addwf	receiveData@r& (0+255),w,b
  3133  0003B2  0100               	movlb	0	; () banked
  3134  0003B4  6FDA               	movwf	??_receiveData& (0+255),b
  3135  0003B6  0E00               	movlw	0
  3136  0003B8  0100               	movlb	0	; () banked
  3137  0003BA  21EB               	addwfc	(receiveData@r+1)& (0+255),w,b
  3138  0003BC  0100               	movlb	0	; () banked
  3139  0003BE  6FDB               	movwf	(??_receiveData+1)& (0+255),b
  3140  0003C0  0E00               	movlw	low _rx_buffer
  3141  0003C2  0100               	movlb	0	; () banked
  3142  0003C4  25DA               	addwf	??_receiveData& (0+255),w,b
  3143  0003C6  6ED9               	movwf	fsr2l,c
  3144  0003C8  0E02               	movlw	high _rx_buffer
  3145  0003CA  0100               	movlb	0	; () banked
  3146  0003CC  21DB               	addwfc	(??_receiveData+1)& (0+255),w,b
  3147  0003CE  6EDA               	movwf	fsr2h,c
  3148  0003D0  50DF               	movf	indf2,w,c
  3149  0003D2  6E41               	movwf	_group,c
  3150                           
  3151                           ;FastTransfer.c: 151: group.parts[1] = rx_buffer[r + 2];
  3152  0003D4  0E02               	movlw	2
  3153  0003D6  0100               	movlb	0	; () banked
  3154  0003D8  25EA               	addwf	receiveData@r& (0+255),w,b
  3155  0003DA  0100               	movlb	0	; () banked
  3156  0003DC  6FDA               	movwf	??_receiveData& (0+255),b
  3157  0003DE  0E00               	movlw	0
  3158  0003E0  0100               	movlb	0	; () banked
  3159  0003E2  21EB               	addwfc	(receiveData@r+1)& (0+255),w,b
  3160  0003E4  0100               	movlb	0	; () banked
  3161  0003E6  6FDB               	movwf	(??_receiveData+1)& (0+255),b
  3162  0003E8  0E00               	movlw	low _rx_buffer
  3163  0003EA  0100               	movlb	0	; () banked
  3164  0003EC  25DA               	addwf	??_receiveData& (0+255),w,b
  3165  0003EE  6ED9               	movwf	fsr2l,c
  3166  0003F0  0E02               	movlw	high _rx_buffer
  3167  0003F2  0100               	movlb	0	; () banked
  3168  0003F4  21DB               	addwfc	(??_receiveData+1)& (0+255),w,b
  3169  0003F6  6EDA               	movwf	fsr2h,c
  3170  0003F8  50DF               	movf	indf2,w,c
  3171  0003FA  6E42               	movwf	_group+1,c
  3172                           
  3173                           ; BSR set to: 0
  3174                           ;FastTransfer.c: 152: receiveArrayAddress[(rx_buffer[r])] = group.integer;
  3175  0003FC  0E00               	movlw	low _rx_buffer
  3176  0003FE  0100               	movlb	0	; () banked
  3177  000400  25EA               	addwf	receiveData@r& (0+255),w,b
  3178  000402  6ED9               	movwf	fsr2l,c
  3179  000404  0E02               	movlw	high _rx_buffer
  3180  000406  0100               	movlb	0	; () banked
  3181  000408  21EB               	addwfc	(receiveData@r+1)& (0+255),w,b
  3182  00040A  6EDA               	movwf	fsr2h,c
  3183  00040C  50DF               	movf	indf2,w,c
  3184  00040E  0100               	movlb	0	; () banked
  3185  000410  6FDA               	movwf	??_receiveData& (0+255),b
  3186  000412  0100               	movlb	0	; () banked
  3187  000414  51DA               	movf	??_receiveData& (0+255),w,b
  3188  000416  0D02               	mullw	2
  3189  000418  50F3               	movf	prodl,w,c
  3190  00041A  0100               	movlb	0	; () banked
  3191  00041C  25A7               	addwf	_receiveArrayAddress& (0+255),w,b
  3192  00041E  6ED9               	movwf	fsr2l,c
  3193  000420  50F4               	movf	prodh,w,c
  3194  000422  0100               	movlb	0	; () banked
  3195  000424  21A8               	addwfc	(_receiveArrayAddress+1)& (0+255),w,b
  3196  000426  6EDA               	movwf	fsr2h,c
  3197  000428  C041  FFDE         	movff	_group,postinc2
  3198  00042C  C042  FFDD         	movff	_group+1,postdec2
  3199                           
  3200                           ;FastTransfer.c: 153: } else {
  3201  000430  D004               	goto	l4916
  3202  000432                     l4914:
  3203                           
  3204                           ; BSR set to: 0
  3205                           ;FastTransfer.c: 154: dataAdressErrorCounter++;
  3206  000432  0100               	movlb	0	; () banked
  3207  000434  4BA3               	infsnz	_dataAdressErrorCounter& (0+255),f,b
  3208  000436  2BA4               	incf	(_dataAdressErrorCounter+1)& (0+255),f,b
  3209  000438  D000               	goto	l4916
  3210  00043A                     l4916:
  3211                           
  3212                           ; BSR set to: 0
  3213  00043A  0E03               	movlw	3
  3214  00043C  0100               	movlb	0	; () banked
  3215  00043E  25EA               	addwf	receiveData@r& (0+255),w,b
  3216  000440  0100               	movlb	0	; () banked
  3217  000442  6FEA               	movwf	receiveData@r& (0+255),b
  3218  000444  0E00               	movlw	0
  3219  000446  0100               	movlb	0	; () banked
  3220  000448  21EB               	addwfc	(receiveData@r+1)& (0+255),w,b
  3221  00044A  0100               	movlb	0	; () banked
  3222  00044C  6FEB               	movwf	(receiveData@r+1)& (0+255),b
  3223  00044E  D000               	goto	l4918
  3224  000450                     l4918:
  3225                           
  3226                           ; BSR set to: 0
  3227  000450  503E               	movf	_rx_len,w,c
  3228  000452  0100               	movlb	0	; () banked
  3229  000454  6FDA               	movwf	??_receiveData& (0+255),b
  3230  000456  6BDB               	clrf	(??_receiveData+1)& (0+255),b
  3231  000458  0100               	movlb	0	; () banked
  3232  00045A  51DA               	movf	??_receiveData& (0+255),w,b
  3233  00045C  0100               	movlb	0	; () banked
  3234  00045E  5DEA               	subwf	receiveData@r& (0+255),w,b
  3235  000460  0100               	movlb	0	; () banked
  3236  000462  51EB               	movf	(receiveData@r+1)& (0+255),w,b
  3237  000464  0A80               	xorlw	128
  3238  000466  0100               	movlb	0	; () banked
  3239  000468  6FDC               	movwf	(??_receiveData+2)& (0+255),b
  3240  00046A  0100               	movlb	0	; () banked
  3241  00046C  51DB               	movf	(??_receiveData+1)& (0+255),w,b
  3242  00046E  0A80               	xorlw	128
  3243  000470  0100               	movlb	0	; () banked
  3244  000472  59DC               	subwfb	(??_receiveData+2)& (0+255),w,b
  3245  000474  A0D8               	btfss	status,0,c
  3246  000476  D78E               	goto	l4908
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;FastTransfer.c: 155: }
  3250                           ;FastTransfer.c: 156: }
  3251                           ;FastTransfer.c: 159: if (AKNAKsend) {
  3252                           
  3253                           ; BSR set to: 0
  3254  000478  5035               	movf	_AKNAKsend,w,c
  3255  00047A  B4D8               	btfsc	status,2,c
  3256  00047C  D0BC               	goto	l4948
  3257                           
  3258                           ; BSR set to: 0
  3259                           ;FastTransfer.c: 160: unsigned char holder[3];
  3260                           ;FastTransfer.c: 161: holder[0] = 255;
  3261  00047E  0100               	movlb	0	; () banked
  3262  000480  69E0               	setf	receiveData@holder& (0+255),b
  3263                           
  3264                           ; BSR set to: 0
  3265                           ;FastTransfer.c: 162: holder[1] = 1;
  3266  000482  0E01               	movlw	1
  3267  000484  0100               	movlb	0	; () banked
  3268  000486  6FE1               	movwf	(receiveData@holder+1)& (0+255),b
  3269                           
  3270                           ; BSR set to: 0
  3271                           ;FastTransfer.c: 163: holder[2] = rx_buffer[rx_array_inx - 1];
  3272  000488  0EFF               	movlw	255
  3273  00048A  0100               	movlb	0	; () banked
  3274  00048C  6FDA               	movwf	??_receiveData& (0+255),b
  3275  00048E  0EFF               	movlw	255
  3276  000490  0100               	movlb	0	; () banked
  3277  000492  6FDB               	movwf	(??_receiveData+1)& (0+255),b
  3278  000494  503D               	movf	_rx_array_inx,w,c
  3279  000496  0100               	movlb	0	; () banked
  3280  000498  6FDC               	movwf	(??_receiveData+2)& (0+255),b
  3281  00049A  6BDD               	clrf	(??_receiveData+3)& (0+255),b
  3282  00049C  0100               	movlb	0	; () banked
  3283  00049E  51DA               	movf	??_receiveData& (0+255),w,b
  3284  0004A0  0100               	movlb	0	; () banked
  3285  0004A2  27DC               	addwf	(??_receiveData+2)& (0+255),f,b
  3286  0004A4  0100               	movlb	0	; () banked
  3287  0004A6  51DB               	movf	(??_receiveData+1)& (0+255),w,b
  3288  0004A8  0100               	movlb	0	; () banked
  3289  0004AA  23DD               	addwfc	(??_receiveData+3)& (0+255),f,b
  3290  0004AC  0E00               	movlw	low _rx_buffer
  3291  0004AE  0100               	movlb	0	; () banked
  3292  0004B0  25DC               	addwf	(??_receiveData+2)& (0+255),w,b
  3293  0004B2  6ED9               	movwf	fsr2l,c
  3294  0004B4  0E02               	movlw	high _rx_buffer
  3295  0004B6  0100               	movlb	0	; () banked
  3296  0004B8  21DD               	addwfc	(??_receiveData+3)& (0+255),w,b
  3297  0004BA  6EDA               	movwf	fsr2h,c
  3298  0004BC  50DF               	movf	indf2,w,c
  3299  0004BE  0100               	movlb	0	; () banked
  3300  0004C0  6FE2               	movwf	(receiveData@holder+2)& (0+255),b
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;FastTransfer.c: 164: unsigned char crcHolder = CRC8(holder, 3);
  3304  0004C2  0EE0               	movlw	low receiveData@holder
  3305  0004C4  6E1B               	movwf	CRC8@data,c
  3306  0004C6  0E00               	movlw	high receiveData@holder
  3307  0004C8  6E1C               	movwf	CRC8@data+1,c
  3308  0004CA  0E03               	movlw	3
  3309  0004CC  6E1D               	movwf	CRC8@len,c
  3310  0004CE  EC64  F013         	call	_CRC8	;wreg free
  3311  0004D2  0100               	movlb	0	; () banked
  3312  0004D4  6FE6               	movwf	receiveData@crcHolder& (0+255),b
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;FastTransfer.c: 165: serial_write(0x06);
  3316  0004D6  D801               	call	u5718
  3317  0004D8  D00B               	goto	l4932
  3318  0004DA                     u5718:
  3319  0004DA  0005               	push	
  3320  0004DC  6EFA               	movwf	pclath,c
  3321  0004DE  5031               	movf	_serial_write,w,c
  3322  0004E0  6EFD               	movwf	tosl,c
  3323  0004E2  5032               	movf	_serial_write+1,w,c
  3324  0004E4  6EFE               	movwf	tosh,c
  3325  0004E6  50F8               	movf	tblptru,w,c
  3326  0004E8  6EFF               	movwf	tosu,c
  3327  0004EA  50FA               	movf	pclath,w,c
  3328  0004EC  0E06               	movlw	6
  3329  0004EE  0012               	return		;indir
  3330  0004F0                     l4932:
  3331                           
  3332                           ;FastTransfer.c: 166: serial_write(0x85);
  3333  0004F0  D801               	call	u5728
  3334  0004F2  D00B               	goto	l4934
  3335  0004F4                     u5728:
  3336  0004F4  0005               	push	
  3337  0004F6  6EFA               	movwf	pclath,c
  3338  0004F8  5031               	movf	_serial_write,w,c
  3339  0004FA  6EFD               	movwf	tosl,c
  3340  0004FC  5032               	movf	_serial_write+1,w,c
  3341  0004FE  6EFE               	movwf	tosh,c
  3342  000500  50F8               	movf	tblptru,w,c
  3343  000502  6EFF               	movwf	tosu,c
  3344  000504  50FA               	movf	pclath,w,c
  3345  000506  0E85               	movlw	133
  3346  000508  0012               	return		;indir
  3347  00050A                     l4934:
  3348                           
  3349                           ;FastTransfer.c: 167: serial_write(returnAddress);
  3350  00050A  D801               	call	u5738
  3351  00050C  D00B               	goto	l4936
  3352  00050E                     u5738:
  3353  00050E  0005               	push	
  3354  000510  6EFA               	movwf	pclath,c
  3355  000512  5031               	movf	_serial_write,w,c
  3356  000514  6EFD               	movwf	tosl,c
  3357  000516  5032               	movf	_serial_write+1,w,c
  3358  000518  6EFE               	movwf	tosh,c
  3359  00051A  50F8               	movf	tblptru,w,c
  3360  00051C  6EFF               	movwf	tosu,c
  3361  00051E  50FA               	movf	pclath,w,c
  3362  000520  503B               	movf	_returnAddress,w,c
  3363  000522  0012               	return		;indir
  3364  000524                     l4936:
  3365                           
  3366                           ;FastTransfer.c: 168: serial_write(moduleAddress);
  3367  000524  D801               	call	u5748
  3368  000526  D00B               	goto	l4938
  3369  000528                     u5748:
  3370  000528  0005               	push	
  3371  00052A  6EFA               	movwf	pclath,c
  3372  00052C  5031               	movf	_serial_write,w,c
  3373  00052E  6EFD               	movwf	tosl,c
  3374  000530  5032               	movf	_serial_write+1,w,c
  3375  000532  6EFE               	movwf	tosh,c
  3376  000534  50F8               	movf	tblptru,w,c
  3377  000536  6EFF               	movwf	tosu,c
  3378  000538  50FA               	movf	pclath,w,c
  3379  00053A  503A               	movf	_moduleAddress,w,c
  3380  00053C  0012               	return		;indir
  3381  00053E                     l4938:
  3382                           
  3383                           ;FastTransfer.c: 169: serial_write(3);
  3384  00053E  D801               	call	u5758
  3385  000540  D00B               	goto	l4940
  3386  000542                     u5758:
  3387  000542  0005               	push	
  3388  000544  6EFA               	movwf	pclath,c
  3389  000546  5031               	movf	_serial_write,w,c
  3390  000548  6EFD               	movwf	tosl,c
  3391  00054A  5032               	movf	_serial_write+1,w,c
  3392  00054C  6EFE               	movwf	tosh,c
  3393  00054E  50F8               	movf	tblptru,w,c
  3394  000550  6EFF               	movwf	tosu,c
  3395  000552  50FA               	movf	pclath,w,c
  3396  000554  0E03               	movlw	3
  3397  000556  0012               	return		;indir
  3398  000558                     l4940:
  3399                           
  3400                           ;FastTransfer.c: 170: serial_write(255);
  3401  000558  D801               	call	u5768
  3402  00055A  D00B               	goto	l4942
  3403  00055C                     u5768:
  3404  00055C  0005               	push	
  3405  00055E  6EFA               	movwf	pclath,c
  3406  000560  5031               	movf	_serial_write,w,c
  3407  000562  6EFD               	movwf	tosl,c
  3408  000564  5032               	movf	_serial_write+1,w,c
  3409  000566  6EFE               	movwf	tosh,c
  3410  000568  50F8               	movf	tblptru,w,c
  3411  00056A  6EFF               	movwf	tosu,c
  3412  00056C  50FA               	movf	pclath,w,c
  3413  00056E  0EFF               	movlw	255
  3414  000570  0012               	return		;indir
  3415  000572                     l4942:
  3416                           
  3417                           ;FastTransfer.c: 171: serial_write(1);
  3418  000572  D801               	call	u5778
  3419  000574  D00B               	goto	l4944
  3420  000576                     u5778:
  3421  000576  0005               	push	
  3422  000578  6EFA               	movwf	pclath,c
  3423  00057A  5031               	movf	_serial_write,w,c
  3424  00057C  6EFD               	movwf	tosl,c
  3425  00057E  5032               	movf	_serial_write+1,w,c
  3426  000580  6EFE               	movwf	tosh,c
  3427  000582  50F8               	movf	tblptru,w,c
  3428  000584  6EFF               	movwf	tosu,c
  3429  000586  50FA               	movf	pclath,w,c
  3430  000588  0E01               	movlw	1
  3431  00058A  0012               	return		;indir
  3432  00058C                     l4944:
  3433                           
  3434                           ;FastTransfer.c: 172: serial_write(rx_buffer[rx_array_inx - 1]);
  3435  00058C  D801               	call	u5788
  3436  00058E  D025               	goto	l4946
  3437  000590                     u5788:
  3438  000590  0005               	push	
  3439  000592  6EFA               	movwf	pclath,c
  3440  000594  5031               	movf	_serial_write,w,c
  3441  000596  6EFD               	movwf	tosl,c
  3442  000598  5032               	movf	_serial_write+1,w,c
  3443  00059A  6EFE               	movwf	tosh,c
  3444  00059C  50F8               	movf	tblptru,w,c
  3445  00059E  6EFF               	movwf	tosu,c
  3446  0005A0  50FA               	movf	pclath,w,c
  3447  0005A2  0EFF               	movlw	255
  3448  0005A4  0100               	movlb	0	; () banked
  3449  0005A6  6FDA               	movwf	??_receiveData& (0+255),b
  3450  0005A8  0EFF               	movlw	255
  3451  0005AA  0100               	movlb	0	; () banked
  3452  0005AC  6FDB               	movwf	(??_receiveData+1)& (0+255),b
  3453  0005AE  503D               	movf	_rx_array_inx,w,c
  3454  0005B0  0100               	movlb	0	; () banked
  3455  0005B2  6FDC               	movwf	(??_receiveData+2)& (0+255),b
  3456  0005B4  6BDD               	clrf	(??_receiveData+3)& (0+255),b
  3457  0005B6  0100               	movlb	0	; () banked
  3458  0005B8  51DA               	movf	??_receiveData& (0+255),w,b
  3459  0005BA  0100               	movlb	0	; () banked
  3460  0005BC  27DC               	addwf	(??_receiveData+2)& (0+255),f,b
  3461  0005BE  0100               	movlb	0	; () banked
  3462  0005C0  51DB               	movf	(??_receiveData+1)& (0+255),w,b
  3463  0005C2  0100               	movlb	0	; () banked
  3464  0005C4  23DD               	addwfc	(??_receiveData+3)& (0+255),f,b
  3465  0005C6  0E00               	movlw	low _rx_buffer
  3466  0005C8  0100               	movlb	0	; () banked
  3467  0005CA  25DC               	addwf	(??_receiveData+2)& (0+255),w,b
  3468  0005CC  6ED9               	movwf	fsr2l,c
  3469  0005CE  0E02               	movlw	high _rx_buffer
  3470  0005D0  0100               	movlb	0	; () banked
  3471  0005D2  21DD               	addwfc	(??_receiveData+3)& (0+255),w,b
  3472  0005D4  6EDA               	movwf	fsr2h,c
  3473  0005D6  50DF               	movf	indf2,w,c
  3474  0005D8  0012               	return		;indir
  3475  0005DA                     l4946:
  3476                           
  3477                           ;FastTransfer.c: 173: serial_write(crcHolder);
  3478  0005DA  D801               	call	u5798
  3479  0005DC  D00C               	goto	l4948
  3480  0005DE                     u5798:
  3481  0005DE  0005               	push	
  3482  0005E0  6EFA               	movwf	pclath,c
  3483  0005E2  5031               	movf	_serial_write,w,c
  3484  0005E4  6EFD               	movwf	tosl,c
  3485  0005E6  5032               	movf	_serial_write+1,w,c
  3486  0005E8  6EFE               	movwf	tosh,c
  3487  0005EA  50F8               	movf	tblptru,w,c
  3488  0005EC  6EFF               	movwf	tosu,c
  3489  0005EE  50FA               	movf	pclath,w,c
  3490  0005F0  0100               	movlb	0	; () banked
  3491  0005F2  51E6               	movf	receiveData@crcHolder& (0+255),w,b
  3492  0005F4  0012               	return		;indir
  3493  0005F6                     l4948:
  3494                           
  3495                           ;FastTransfer.c: 174: }
  3496                           ;FastTransfer.c: 178: rx_len = 0;
  3497  0005F6  0E00               	movlw	0
  3498  0005F8  6E3E               	movwf	_rx_len,c
  3499                           
  3500                           ;FastTransfer.c: 179: rx_array_inx = 0;
  3501  0005FA  0E00               	movlw	0
  3502  0005FC  6E3D               	movwf	_rx_array_inx,c
  3503                           
  3504                           ;FastTransfer.c: 180: return 1;
  3505  0005FE  0E01               	movlw	1
  3506  000600  0012               	return	
  3507                           
  3508                           ;FastTransfer.c: 181: } else {
  3509  000602  D0C9               	goto	l4996
  3510  000604                     l4958:
  3511                           
  3512                           ;FastTransfer.c: 182: crcErrorCounter++;
  3513  000604  0100               	movlb	0	; () banked
  3514  000606  4BA1               	infsnz	_crcErrorCounter& (0+255),f,b
  3515  000608  2BA2               	incf	(_crcErrorCounter+1)& (0+255),f,b
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;FastTransfer.c: 184: if (AKNAKsend) {
  3519  00060A  5035               	movf	_AKNAKsend,w,c
  3520  00060C  B4D8               	btfsc	status,2,c
  3521  00060E  D0BC               	goto	l4988
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;FastTransfer.c: 185: unsigned char holder[3];
  3525                           ;FastTransfer.c: 186: holder[0] = 255;
  3526  000610  0100               	movlb	0	; () banked
  3527  000612  69E3               	setf	receiveData@holder_2257& (0+255),b
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;FastTransfer.c: 187: holder[1] = 2;
  3531  000614  0E02               	movlw	2
  3532  000616  0100               	movlb	0	; () banked
  3533  000618  6FE4               	movwf	(receiveData@holder_2257+1)& (0+255),b
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;FastTransfer.c: 188: holder[2] = rx_buffer[rx_array_inx - 1];
  3537  00061A  0EFF               	movlw	255
  3538  00061C  0100               	movlb	0	; () banked
  3539  00061E  6FDA               	movwf	??_receiveData& (0+255),b
  3540  000620  0EFF               	movlw	255
  3541  000622  0100               	movlb	0	; () banked
  3542  000624  6FDB               	movwf	(??_receiveData+1)& (0+255),b
  3543  000626  503D               	movf	_rx_array_inx,w,c
  3544  000628  0100               	movlb	0	; () banked
  3545  00062A  6FDC               	movwf	(??_receiveData+2)& (0+255),b
  3546  00062C  6BDD               	clrf	(??_receiveData+3)& (0+255),b
  3547  00062E  0100               	movlb	0	; () banked
  3548  000630  51DA               	movf	??_receiveData& (0+255),w,b
  3549  000632  0100               	movlb	0	; () banked
  3550  000634  27DC               	addwf	(??_receiveData+2)& (0+255),f,b
  3551  000636  0100               	movlb	0	; () banked
  3552  000638  51DB               	movf	(??_receiveData+1)& (0+255),w,b
  3553  00063A  0100               	movlb	0	; () banked
  3554  00063C  23DD               	addwfc	(??_receiveData+3)& (0+255),f,b
  3555  00063E  0E00               	movlw	low _rx_buffer
  3556  000640  0100               	movlb	0	; () banked
  3557  000642  25DC               	addwf	(??_receiveData+2)& (0+255),w,b
  3558  000644  6ED9               	movwf	fsr2l,c
  3559  000646  0E02               	movlw	high _rx_buffer
  3560  000648  0100               	movlb	0	; () banked
  3561  00064A  21DD               	addwfc	(??_receiveData+3)& (0+255),w,b
  3562  00064C  6EDA               	movwf	fsr2h,c
  3563  00064E  50DF               	movf	indf2,w,c
  3564  000650  0100               	movlb	0	; () banked
  3565  000652  6FE5               	movwf	(receiveData@holder_2257+2)& (0+255),b
  3566                           
  3567                           ; BSR set to: 0
  3568                           ;FastTransfer.c: 189: unsigned char crcHolder = CRC8(holder, 3);
  3569  000654  0EE3               	movlw	low receiveData@holder_2257
  3570  000656  6E1B               	movwf	CRC8@data,c
  3571  000658  0E00               	movlw	high receiveData@holder_2257
  3572  00065A  6E1C               	movwf	CRC8@data+1,c
  3573  00065C  0E03               	movlw	3
  3574  00065E  6E1D               	movwf	CRC8@len,c
  3575  000660  EC64  F013         	call	_CRC8
  3576  000664  0100               	movlb	0	; () banked
  3577  000666  6FE7               	movwf	receiveData@crcHolder_2258& (0+255),b
  3578                           
  3579                           ; BSR set to: 0
  3580                           ;FastTransfer.c: 190: serial_write(0x06);
  3581  000668  D801               	call	u5818
  3582  00066A  D00B               	goto	l4972
  3583  00066C                     u5818:
  3584  00066C  0005               	push	
  3585  00066E  6EFA               	movwf	pclath,c
  3586  000670  5031               	movf	_serial_write,w,c
  3587  000672  6EFD               	movwf	tosl,c
  3588  000674  5032               	movf	_serial_write+1,w,c
  3589  000676  6EFE               	movwf	tosh,c
  3590  000678  50F8               	movf	tblptru,w,c
  3591  00067A  6EFF               	movwf	tosu,c
  3592  00067C  50FA               	movf	pclath,w,c
  3593  00067E  0E06               	movlw	6
  3594  000680  0012               	return		;indir
  3595  000682                     l4972:
  3596                           
  3597                           ;FastTransfer.c: 191: serial_write(0x85);
  3598  000682  D801               	call	u5828
  3599  000684  D00B               	goto	l4974
  3600  000686                     u5828:
  3601  000686  0005               	push	
  3602  000688  6EFA               	movwf	pclath,c
  3603  00068A  5031               	movf	_serial_write,w,c
  3604  00068C  6EFD               	movwf	tosl,c
  3605  00068E  5032               	movf	_serial_write+1,w,c
  3606  000690  6EFE               	movwf	tosh,c
  3607  000692  50F8               	movf	tblptru,w,c
  3608  000694  6EFF               	movwf	tosu,c
  3609  000696  50FA               	movf	pclath,w,c
  3610  000698  0E85               	movlw	133
  3611  00069A  0012               	return		;indir
  3612  00069C                     l4974:
  3613                           
  3614                           ;FastTransfer.c: 192: serial_write(returnAddress);
  3615  00069C  D801               	call	u5838
  3616  00069E  D00B               	goto	l4976
  3617  0006A0                     u5838:
  3618  0006A0  0005               	push	
  3619  0006A2  6EFA               	movwf	pclath,c
  3620  0006A4  5031               	movf	_serial_write,w,c
  3621  0006A6  6EFD               	movwf	tosl,c
  3622  0006A8  5032               	movf	_serial_write+1,w,c
  3623  0006AA  6EFE               	movwf	tosh,c
  3624  0006AC  50F8               	movf	tblptru,w,c
  3625  0006AE  6EFF               	movwf	tosu,c
  3626  0006B0  50FA               	movf	pclath,w,c
  3627  0006B2  503B               	movf	_returnAddress,w,c
  3628  0006B4  0012               	return		;indir
  3629  0006B6                     l4976:
  3630                           
  3631                           ;FastTransfer.c: 193: serial_write(moduleAddress);
  3632  0006B6  D801               	call	u5848
  3633  0006B8  D00B               	goto	l4978
  3634  0006BA                     u5848:
  3635  0006BA  0005               	push	
  3636  0006BC  6EFA               	movwf	pclath,c
  3637  0006BE  5031               	movf	_serial_write,w,c
  3638  0006C0  6EFD               	movwf	tosl,c
  3639  0006C2  5032               	movf	_serial_write+1,w,c
  3640  0006C4  6EFE               	movwf	tosh,c
  3641  0006C6  50F8               	movf	tblptru,w,c
  3642  0006C8  6EFF               	movwf	tosu,c
  3643  0006CA  50FA               	movf	pclath,w,c
  3644  0006CC  503A               	movf	_moduleAddress,w,c
  3645  0006CE  0012               	return		;indir
  3646  0006D0                     l4978:
  3647                           
  3648                           ;FastTransfer.c: 194: serial_write(3);
  3649  0006D0  D801               	call	u5858
  3650  0006D2  D00B               	goto	l4980
  3651  0006D4                     u5858:
  3652  0006D4  0005               	push	
  3653  0006D6  6EFA               	movwf	pclath,c
  3654  0006D8  5031               	movf	_serial_write,w,c
  3655  0006DA  6EFD               	movwf	tosl,c
  3656  0006DC  5032               	movf	_serial_write+1,w,c
  3657  0006DE  6EFE               	movwf	tosh,c
  3658  0006E0  50F8               	movf	tblptru,w,c
  3659  0006E2  6EFF               	movwf	tosu,c
  3660  0006E4  50FA               	movf	pclath,w,c
  3661  0006E6  0E03               	movlw	3
  3662  0006E8  0012               	return		;indir
  3663  0006EA                     l4980:
  3664                           
  3665                           ;FastTransfer.c: 195: serial_write(255);
  3666  0006EA  D801               	call	u5868
  3667  0006EC  D00B               	goto	l4982
  3668  0006EE                     u5868:
  3669  0006EE  0005               	push	
  3670  0006F0  6EFA               	movwf	pclath,c
  3671  0006F2  5031               	movf	_serial_write,w,c
  3672  0006F4  6EFD               	movwf	tosl,c
  3673  0006F6  5032               	movf	_serial_write+1,w,c
  3674  0006F8  6EFE               	movwf	tosh,c
  3675  0006FA  50F8               	movf	tblptru,w,c
  3676  0006FC  6EFF               	movwf	tosu,c
  3677  0006FE  50FA               	movf	pclath,w,c
  3678  000700  0EFF               	movlw	255
  3679  000702  0012               	return		;indir
  3680  000704                     l4982:
  3681                           
  3682                           ;FastTransfer.c: 196: serial_write(2);
  3683  000704  D801               	call	u5878
  3684  000706  D00B               	goto	l4984
  3685  000708                     u5878:
  3686  000708  0005               	push	
  3687  00070A  6EFA               	movwf	pclath,c
  3688  00070C  5031               	movf	_serial_write,w,c
  3689  00070E  6EFD               	movwf	tosl,c
  3690  000710  5032               	movf	_serial_write+1,w,c
  3691  000712  6EFE               	movwf	tosh,c
  3692  000714  50F8               	movf	tblptru,w,c
  3693  000716  6EFF               	movwf	tosu,c
  3694  000718  50FA               	movf	pclath,w,c
  3695  00071A  0E02               	movlw	2
  3696  00071C  0012               	return		;indir
  3697  00071E                     l4984:
  3698                           
  3699                           ;FastTransfer.c: 197: serial_write(rx_buffer[rx_array_inx - 1]);
  3700  00071E  D801               	call	u5888
  3701  000720  D025               	goto	l4986
  3702  000722                     u5888:
  3703  000722  0005               	push	
  3704  000724  6EFA               	movwf	pclath,c
  3705  000726  5031               	movf	_serial_write,w,c
  3706  000728  6EFD               	movwf	tosl,c
  3707  00072A  5032               	movf	_serial_write+1,w,c
  3708  00072C  6EFE               	movwf	tosh,c
  3709  00072E  50F8               	movf	tblptru,w,c
  3710  000730  6EFF               	movwf	tosu,c
  3711  000732  50FA               	movf	pclath,w,c
  3712  000734  0EFF               	movlw	255
  3713  000736  0100               	movlb	0	; () banked
  3714  000738  6FDA               	movwf	??_receiveData& (0+255),b
  3715  00073A  0EFF               	movlw	255
  3716  00073C  0100               	movlb	0	; () banked
  3717  00073E  6FDB               	movwf	(??_receiveData+1)& (0+255),b
  3718  000740  503D               	movf	_rx_array_inx,w,c
  3719  000742  0100               	movlb	0	; () banked
  3720  000744  6FDC               	movwf	(??_receiveData+2)& (0+255),b
  3721  000746  6BDD               	clrf	(??_receiveData+3)& (0+255),b
  3722  000748  0100               	movlb	0	; () banked
  3723  00074A  51DA               	movf	??_receiveData& (0+255),w,b
  3724  00074C  0100               	movlb	0	; () banked
  3725  00074E  27DC               	addwf	(??_receiveData+2)& (0+255),f,b
  3726  000750  0100               	movlb	0	; () banked
  3727  000752  51DB               	movf	(??_receiveData+1)& (0+255),w,b
  3728  000754  0100               	movlb	0	; () banked
  3729  000756  23DD               	addwfc	(??_receiveData+3)& (0+255),f,b
  3730  000758  0E00               	movlw	low _rx_buffer
  3731  00075A  0100               	movlb	0	; () banked
  3732  00075C  25DC               	addwf	(??_receiveData+2)& (0+255),w,b
  3733  00075E  6ED9               	movwf	fsr2l,c
  3734  000760  0E02               	movlw	high _rx_buffer
  3735  000762  0100               	movlb	0	; () banked
  3736  000764  21DD               	addwfc	(??_receiveData+3)& (0+255),w,b
  3737  000766  6EDA               	movwf	fsr2h,c
  3738  000768  50DF               	movf	indf2,w,c
  3739  00076A  0012               	return		;indir
  3740  00076C                     l4986:
  3741                           
  3742                           ;FastTransfer.c: 198: serial_write(crcHolder);
  3743  00076C  D801               	call	u5898
  3744  00076E  D00C               	goto	l4988
  3745  000770                     u5898:
  3746  000770  0005               	push	
  3747  000772  6EFA               	movwf	pclath,c
  3748  000774  5031               	movf	_serial_write,w,c
  3749  000776  6EFD               	movwf	tosl,c
  3750  000778  5032               	movf	_serial_write+1,w,c
  3751  00077A  6EFE               	movwf	tosh,c
  3752  00077C  50F8               	movf	tblptru,w,c
  3753  00077E  6EFF               	movwf	tosu,c
  3754  000780  50FA               	movf	pclath,w,c
  3755  000782  0100               	movlb	0	; () banked
  3756  000784  51E7               	movf	receiveData@crcHolder_2258& (0+255),w,b
  3757  000786  0012               	return		;indir
  3758  000788                     l4988:
  3759                           
  3760                           ;FastTransfer.c: 199: }
  3761                           ;FastTransfer.c: 202: rx_len = 0;
  3762  000788  0E00               	movlw	0
  3763  00078A  6E3E               	movwf	_rx_len,c
  3764                           
  3765                           ;FastTransfer.c: 203: rx_array_inx = 0;
  3766  00078C  0E00               	movlw	0
  3767  00078E  6E3D               	movwf	_rx_array_inx,c
  3768                           
  3769                           ;FastTransfer.c: 204: return 0;
  3770  000790  0E00               	movlw	0
  3771  000792  0012               	return	
  3772  000794  D000               	goto	l4996
  3773  000796                     l4996:
  3774                           
  3775                           ;FastTransfer.c: 205: }
  3776                           ;FastTransfer.c: 206: }
  3777                           ;FastTransfer.c: 207: }
  3778                           ;FastTransfer.c: 210: return 0;
  3779  000796  0E00               	movlw	0
  3780  000798  0012               	return	
  3781  00079A  0012               	return		;funcret
  3782  00079C                     __end_of_receiveData:
  3783                           	opt stack 0
  3784                           tosu	equ	0xFFF
  3785                           tosh	equ	0xFFE
  3786                           tosl	equ	0xFFD
  3787                           pclath	equ	0xFFA
  3788                           tblptru	equ	0xFF8
  3789                           tblptrh	equ	0xFF7
  3790                           tblptrl	equ	0xFF6
  3791                           tablat	equ	0xFF5
  3792                           prodh	equ	0xFF4
  3793                           prodl	equ	0xFF3
  3794                           intcon	equ	0xFF2
  3795                           postinc0	equ	0xFEE
  3796                           wreg	equ	0xFE8
  3797                           indf2	equ	0xFDF
  3798                           postinc2	equ	0xFDE
  3799                           postdec2	equ	0xFDD
  3800                           plusw2	equ	0xFDB
  3801                           fsr2h	equ	0xFDA
  3802                           fsr2l	equ	0xFD9
  3803                           status	equ	0xFD8
  3804                           
  3805 ;; *************** function _Send_put *****************
  3806 ;; Defined at:
  3807 ;;		line 130 in file "UART.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;  _data           1    wreg     unsigned char 
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;  _data           1   37[COMRAM] unsigned char 
  3812 ;; Return value:  Size  Location     Type
  3813 ;;		None               void
  3814 ;; Registers used:
  3815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3821 ;;      Params:         0       0       0       0       0       0       0
  3822 ;;      Locals:         1       0       0       0       0       0       0
  3823 ;;      Temps:          0       0       0       0       0       0       0
  3824 ;;      Totals:         1       0       0       0       0       0       0
  3825 ;;Total ram usage:        1 bytes
  3826 ;; Hardware stack levels used:    1
  3827 ;; Hardware stack levels required when called:    6
  3828 ;; This function calls:
  3829 ;;		_UART_buff_get
  3830 ;;		_UART_buff_put
  3831 ;; This function is called by:
  3832 ;;		_SYSTEM_Initialize
  3833 ;;		_putch
  3834 ;;		_sendData
  3835 ;;		_receiveData
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           	psect	text13
  3840  0029A2                     __ptext13:
  3841                           	opt stack 0
  3842  0029A2                     _Send_put:
  3843                           	opt stack 21
  3844                           
  3845                           ;incstack = 0
  3846                           ;Send_put@_data stored from wreg
  3847  0029A2  6E26               	movwf	Send_put@_data,c
  3848                           
  3849                           ;UART.c: 131: UART_buff_put(&output_buffer, _data);
  3850  0029A4  0E00               	movlw	low _output_buffer
  3851  0029A6  6E21               	movwf	UART_buff_put@_this,c
  3852  0029A8  0E04               	movlw	high _output_buffer
  3853  0029AA  6E22               	movwf	UART_buff_put@_this+1,c
  3854  0029AC  C026  F023         	movff	Send_put@_data,UART_buff_put@c
  3855  0029B0  EC34  F00B         	call	_UART_buff_put
  3856                           
  3857                           ;UART.c: 132: if (Transmit_stall == 1) {
  3858  0029B4  0445               	decf	_Transmit_stall,w,c
  3859  0029B6  A4D8               	btfss	status,2,c
  3860  0029B8  0012               	return	
  3861                           
  3862                           ;UART.c: 133: Transmit_stall = 0;
  3863  0029BA  0E00               	movlw	0
  3864  0029BC  6E45               	movwf	_Transmit_stall,c
  3865                           
  3866                           ;UART.c: 134: TXREG1 = UART_buff_get(&output_buffer);
  3867  0029BE  0E00               	movlw	low _output_buffer
  3868  0029C0  6E21               	movwf	UART_buff_get@_this,c
  3869  0029C2  0E04               	movlw	high _output_buffer
  3870  0029C4  6E22               	movwf	UART_buff_get@_this+1,c
  3871  0029C6  EC11  F011         	call	_UART_buff_get	;wreg free
  3872  0029CA  6EAD               	movwf	4013,c	;volatile
  3873                           
  3874                           ;UART.c: 135: PIE1bits.TX1IE = 1;
  3875  0029CC  889D               	bsf	3997,4,c	;volatile
  3876  0029CE  0012               	return	
  3877  0029D0  0012               	return		;funcret
  3878  0029D2                     __end_of_Send_put:
  3879                           	opt stack 0
  3880                           tosu	equ	0xFFF
  3881                           tosh	equ	0xFFE
  3882                           tosl	equ	0xFFD
  3883                           pclath	equ	0xFFA
  3884                           tblptru	equ	0xFF8
  3885                           tblptrh	equ	0xFF7
  3886                           tblptrl	equ	0xFF6
  3887                           tablat	equ	0xFF5
  3888                           prodh	equ	0xFF4
  3889                           prodl	equ	0xFF3
  3890                           intcon	equ	0xFF2
  3891                           postinc0	equ	0xFEE
  3892                           wreg	equ	0xFE8
  3893                           indf2	equ	0xFDF
  3894                           postinc2	equ	0xFDE
  3895                           postdec2	equ	0xFDD
  3896                           plusw2	equ	0xFDB
  3897                           fsr2h	equ	0xFDA
  3898                           fsr2l	equ	0xFD9
  3899                           status	equ	0xFD8
  3900                           
  3901 ;; *************** function _UART_buff_put *****************
  3902 ;; Defined at:
  3903 ;;		line 68 in file "UART.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  3906 ;;		 -> output_buffer(206), input_buffer(206), 
  3907 ;;  c               1   34[COMRAM] const unsigned char 
  3908 ;; Auto vars:     Size  Location     Type
  3909 ;;		None
  3910 ;; Return value:  Size  Location     Type
  3911 ;;		None               void
  3912 ;; Registers used:
  3913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3914 ;; Tracked objects:
  3915 ;;		On entry : 0/0
  3916 ;;		On exit  : 0/0
  3917 ;;		Unchanged: 0/0
  3918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3919 ;;      Params:         3       0       0       0       0       0       0
  3920 ;;      Locals:         0       0       0       0       0       0       0
  3921 ;;      Temps:          2       0       0       0       0       0       0
  3922 ;;      Totals:         5       0       0       0       0       0       0
  3923 ;;Total ram usage:        5 bytes
  3924 ;; Hardware stack levels used:    1
  3925 ;; Hardware stack levels required when called:    5
  3926 ;; This function calls:
  3927 ;;		_UART_buff_modulo_inc
  3928 ;; This function is called by:
  3929 ;;		_Send_put
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           	psect	text14
  3934  001668                     __ptext14:
  3935                           	opt stack 0
  3936  001668                     _UART_buff_put:
  3937                           	opt stack 21
  3938                           
  3939                           ;UART.c: 69: if (_this->count < 200) {
  3940                           
  3941                           ;incstack = 0
  3942  001668  EE20 F0CC          	lfsr	2,204
  3943  00166C  5021               	movf	UART_buff_put@_this,w,c
  3944  00166E  26D9               	addwf	fsr2l,f,c
  3945  001670  5022               	movf	UART_buff_put@_this+1,w,c
  3946  001672  22DA               	addwfc	fsr2h,f,c
  3947  001674  0E01               	movlw	1
  3948  001676  BEDB               	btfsc	plusw2,7,c
  3949  001678  D007               	goto	l4474
  3950  00167A  0E01               	movlw	1
  3951  00167C  50DB               	movf	plusw2,w,c
  3952  00167E  E13A               	bnz	l4480
  3953  001680  0EC8               	movlw	200
  3954  001682  5CDE               	subwf	postinc2,w,c
  3955  001684  B0D8               	btfsc	status,0,c
  3956  001686  D036               	goto	l4480
  3957  001688                     l4474:
  3958                           
  3959                           ;UART.c: 70: _this->buf[_this->head] = c;
  3960  001688  EE20 F0C8          	lfsr	2,200
  3961  00168C  5021               	movf	UART_buff_put@_this,w,c
  3962  00168E  26D9               	addwf	fsr2l,f,c
  3963  001690  5022               	movf	UART_buff_put@_this+1,w,c
  3964  001692  22DA               	addwfc	fsr2h,f,c
  3965  001694  CFDE F024          	movff	postinc2,??_UART_buff_put
  3966  001698  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  3967  00169C  5024               	movf	??_UART_buff_put,w,c
  3968  00169E  2421               	addwf	UART_buff_put@_this,w,c
  3969  0016A0  6ED9               	movwf	fsr2l,c
  3970  0016A2  5025               	movf	??_UART_buff_put+1,w,c
  3971  0016A4  2022               	addwfc	UART_buff_put@_this+1,w,c
  3972  0016A6  6EDA               	movwf	fsr2h,c
  3973  0016A8  C023  FFDF         	movff	UART_buff_put@c,indf2
  3974                           
  3975                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
  3976  0016AC  EE20 F0C8          	lfsr	2,200
  3977  0016B0  5021               	movf	UART_buff_put@_this,w,c
  3978  0016B2  26D9               	addwf	fsr2l,f,c
  3979  0016B4  5022               	movf	UART_buff_put@_this+1,w,c
  3980  0016B6  22DA               	addwfc	fsr2h,f,c
  3981  0016B8  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  3982  0016BC  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  3983  0016C0  0E00               	movlw	0
  3984  0016C2  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  3985  0016C4  0EC8               	movlw	200
  3986  0016C6  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  3987  0016C8  EC00  F015         	call	_UART_buff_modulo_inc	;wreg free
  3988  0016CC  EE20 F0C8          	lfsr	2,200
  3989  0016D0  5021               	movf	UART_buff_put@_this,w,c
  3990  0016D2  26D9               	addwf	fsr2l,f,c
  3991  0016D4  5022               	movf	UART_buff_put@_this+1,w,c
  3992  0016D6  22DA               	addwfc	fsr2h,f,c
  3993  0016D8  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  3994  0016DC  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  3995                           
  3996                           ;UART.c: 72: ++_this->count;
  3997  0016E0  EE20 F0CC          	lfsr	2,204
  3998  0016E4  5021               	movf	UART_buff_put@_this,w,c
  3999  0016E6  26D9               	addwf	fsr2l,f,c
  4000  0016E8  5022               	movf	UART_buff_put@_this+1,w,c
  4001  0016EA  22DA               	addwfc	fsr2h,f,c
  4002  0016EC  2ADE               	incf	postinc2,f,c
  4003  0016EE  0E00               	movlw	0
  4004  0016F0  22DD               	addwfc	postdec2,f,c
  4005                           
  4006                           ;UART.c: 73: } else {
  4007  0016F2  0012               	return	
  4008  0016F4                     l4480:
  4009                           
  4010                           ;UART.c: 74: _this->buf[_this->head] = c;
  4011  0016F4  EE20 F0C8          	lfsr	2,200
  4012  0016F8  5021               	movf	UART_buff_put@_this,w,c
  4013  0016FA  26D9               	addwf	fsr2l,f,c
  4014  0016FC  5022               	movf	UART_buff_put@_this+1,w,c
  4015  0016FE  22DA               	addwfc	fsr2h,f,c
  4016  001700  CFDE F024          	movff	postinc2,??_UART_buff_put
  4017  001704  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  4018  001708  5024               	movf	??_UART_buff_put,w,c
  4019  00170A  2421               	addwf	UART_buff_put@_this,w,c
  4020  00170C  6ED9               	movwf	fsr2l,c
  4021  00170E  5025               	movf	??_UART_buff_put+1,w,c
  4022  001710  2022               	addwfc	UART_buff_put@_this+1,w,c
  4023  001712  6EDA               	movwf	fsr2h,c
  4024  001714  C023  FFDF         	movff	UART_buff_put@c,indf2
  4025                           
  4026                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
  4027  001718  EE20 F0C8          	lfsr	2,200
  4028  00171C  5021               	movf	UART_buff_put@_this,w,c
  4029  00171E  26D9               	addwf	fsr2l,f,c
  4030  001720  5022               	movf	UART_buff_put@_this+1,w,c
  4031  001722  22DA               	addwfc	fsr2h,f,c
  4032  001724  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  4033  001728  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  4034  00172C  0E00               	movlw	0
  4035  00172E  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  4036  001730  0EC8               	movlw	200
  4037  001732  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  4038  001734  EC00  F015         	call	_UART_buff_modulo_inc	;wreg free
  4039  001738  EE20 F0C8          	lfsr	2,200
  4040  00173C  5021               	movf	UART_buff_put@_this,w,c
  4041  00173E  26D9               	addwf	fsr2l,f,c
  4042  001740  5022               	movf	UART_buff_put@_this+1,w,c
  4043  001742  22DA               	addwfc	fsr2h,f,c
  4044  001744  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4045  001748  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4046                           
  4047                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  4048  00174C  EE20 F0CA          	lfsr	2,202
  4049  001750  5021               	movf	UART_buff_put@_this,w,c
  4050  001752  26D9               	addwf	fsr2l,f,c
  4051  001754  5022               	movf	UART_buff_put@_this+1,w,c
  4052  001756  22DA               	addwfc	fsr2h,f,c
  4053  001758  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  4054  00175C  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  4055  001760  0E00               	movlw	0
  4056  001762  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  4057  001764  0EC8               	movlw	200
  4058  001766  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  4059  001768  EC00  F015         	call	_UART_buff_modulo_inc	;wreg free
  4060  00176C  EE20 F0CA          	lfsr	2,202
  4061  001770  5021               	movf	UART_buff_put@_this,w,c
  4062  001772  26D9               	addwf	fsr2l,f,c
  4063  001774  5022               	movf	UART_buff_put@_this+1,w,c
  4064  001776  22DA               	addwfc	fsr2h,f,c
  4065  001778  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4066  00177C  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4067  001780  0012               	return	
  4068  001782  0012               	return		;funcret
  4069  001784                     __end_of_UART_buff_put:
  4070                           	opt stack 0
  4071                           tosu	equ	0xFFF
  4072                           tosh	equ	0xFFE
  4073                           tosl	equ	0xFFD
  4074                           pclath	equ	0xFFA
  4075                           tblptru	equ	0xFF8
  4076                           tblptrh	equ	0xFF7
  4077                           tblptrl	equ	0xFF6
  4078                           tablat	equ	0xFF5
  4079                           prodh	equ	0xFF4
  4080                           prodl	equ	0xFF3
  4081                           intcon	equ	0xFF2
  4082                           postinc0	equ	0xFEE
  4083                           wreg	equ	0xFE8
  4084                           indf2	equ	0xFDF
  4085                           postinc2	equ	0xFDE
  4086                           postdec2	equ	0xFDD
  4087                           plusw2	equ	0xFDB
  4088                           fsr2h	equ	0xFDA
  4089                           fsr2l	equ	0xFD9
  4090                           status	equ	0xFD8
  4091                           
  4092 ;; *************** function _Receive_peek *****************
  4093 ;; Defined at:
  4094 ;;		line 118 in file "UART.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;		None
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;		None
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  1    wreg      unsigned char 
  4101 ;; Registers used:
  4102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4108 ;;      Params:         0       0       0       0       0       0       0
  4109 ;;      Locals:         0       0       0       0       0       0       0
  4110 ;;      Temps:          0       0       0       0       0       0       0
  4111 ;;      Totals:         0       0       0       0       0       0       0
  4112 ;;Total ram usage:        0 bytes
  4113 ;; Hardware stack levels used:    1
  4114 ;; Hardware stack levels required when called:    5
  4115 ;; This function calls:
  4116 ;;		_UART_buff_peek
  4117 ;; This function is called by:
  4118 ;;		_SYSTEM_Initialize
  4119 ;;		_receiveData
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123                           	psect	text15
  4124  002C02                     __ptext15:
  4125                           	opt stack 0
  4126  002C02                     _Receive_peek:
  4127                           	opt stack 23
  4128                           
  4129                           ;UART.c: 119: return UART_buff_peek(&input_buffer);
  4130                           
  4131                           ;incstack = 0
  4132  002C02  0E00               	movlw	low _input_buffer
  4133  002C04  6E1B               	movwf	UART_buff_peek@_this,c
  4134  002C06  0E03               	movlw	high _input_buffer
  4135  002C08  6E1C               	movwf	UART_buff_peek@_this+1,c
  4136  002C0A  EC5A  F015         	call	_UART_buff_peek	;wreg free
  4137  002C0E  0012               	return	
  4138  002C10  0012               	return		;funcret
  4139  002C12                     __end_of_Receive_peek:
  4140                           	opt stack 0
  4141                           tosu	equ	0xFFF
  4142                           tosh	equ	0xFFE
  4143                           tosl	equ	0xFFD
  4144                           pclath	equ	0xFFA
  4145                           tblptru	equ	0xFF8
  4146                           tblptrh	equ	0xFF7
  4147                           tblptrl	equ	0xFF6
  4148                           tablat	equ	0xFF5
  4149                           prodh	equ	0xFF4
  4150                           prodl	equ	0xFF3
  4151                           intcon	equ	0xFF2
  4152                           postinc0	equ	0xFEE
  4153                           wreg	equ	0xFE8
  4154                           indf2	equ	0xFDF
  4155                           postinc2	equ	0xFDE
  4156                           postdec2	equ	0xFDD
  4157                           plusw2	equ	0xFDB
  4158                           fsr2h	equ	0xFDA
  4159                           fsr2l	equ	0xFD9
  4160                           status	equ	0xFD8
  4161                           
  4162 ;; *************** function _UART_buff_peek *****************
  4163 ;; Defined at:
  4164 ;;		line 114 in file "UART.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  4167 ;;		 -> input_buffer(206), 
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;		None
  4170 ;; Return value:  Size  Location     Type
  4171 ;;                  1    wreg      unsigned char 
  4172 ;; Registers used:
  4173 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4179 ;;      Params:         2       0       0       0       0       0       0
  4180 ;;      Locals:         0       0       0       0       0       0       0
  4181 ;;      Temps:          2       0       0       0       0       0       0
  4182 ;;      Totals:         4       0       0       0       0       0       0
  4183 ;;Total ram usage:        4 bytes
  4184 ;; Hardware stack levels used:    1
  4185 ;; Hardware stack levels required when called:    4
  4186 ;; This function calls:
  4187 ;;		Nothing
  4188 ;; This function is called by:
  4189 ;;		_Receive_peek
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           	psect	text16
  4194  002AB4                     __ptext16:
  4195                           	opt stack 0
  4196  002AB4                     _UART_buff_peek:
  4197                           	opt stack 23
  4198                           
  4199                           ;UART.c: 115: return _this->buf[_this->tail];
  4200                           
  4201                           ;incstack = 0
  4202  002AB4  EE20 F0CA          	lfsr	2,202
  4203  002AB8  501B               	movf	UART_buff_peek@_this,w,c
  4204  002ABA  26D9               	addwf	fsr2l,f,c
  4205  002ABC  501C               	movf	UART_buff_peek@_this+1,w,c
  4206  002ABE  22DA               	addwfc	fsr2h,f,c
  4207  002AC0  CFDE F01D          	movff	postinc2,??_UART_buff_peek
  4208  002AC4  CFDD F01E          	movff	postdec2,??_UART_buff_peek+1
  4209  002AC8  501D               	movf	??_UART_buff_peek,w,c
  4210  002ACA  241B               	addwf	UART_buff_peek@_this,w,c
  4211  002ACC  6ED9               	movwf	fsr2l,c
  4212  002ACE  501E               	movf	??_UART_buff_peek+1,w,c
  4213  002AD0  201C               	addwfc	UART_buff_peek@_this+1,w,c
  4214  002AD2  6EDA               	movwf	fsr2h,c
  4215  002AD4  50DF               	movf	indf2,w,c
  4216  002AD6  0012               	return	
  4217  002AD8  0012               	return		;funcret
  4218  002ADA                     __end_of_UART_buff_peek:
  4219                           	opt stack 0
  4220                           tosu	equ	0xFFF
  4221                           tosh	equ	0xFFE
  4222                           tosl	equ	0xFFD
  4223                           pclath	equ	0xFFA
  4224                           tblptru	equ	0xFF8
  4225                           tblptrh	equ	0xFF7
  4226                           tblptrl	equ	0xFF6
  4227                           tablat	equ	0xFF5
  4228                           prodh	equ	0xFF4
  4229                           prodl	equ	0xFF3
  4230                           intcon	equ	0xFF2
  4231                           postinc0	equ	0xFEE
  4232                           wreg	equ	0xFE8
  4233                           indf2	equ	0xFDF
  4234                           postinc2	equ	0xFDE
  4235                           postdec2	equ	0xFDD
  4236                           plusw2	equ	0xFDB
  4237                           fsr2h	equ	0xFDA
  4238                           fsr2l	equ	0xFD9
  4239                           status	equ	0xFD8
  4240                           
  4241 ;; *************** function _CRCcheck *****************
  4242 ;; Defined at:
  4243 ;;		line 373 in file "FastTransfer.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;		None
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;  rt              2    5[BANK0 ] int 
  4248 ;;  arrayHolder     3    2[BANK0 ] unsigned char [3]
  4249 ;;  calculatedCR    1    1[BANK0 ] unsigned char 
  4250 ;;  SentCRC         1    0[BANK0 ] unsigned char 
  4251 ;; Return value:  Size  Location     Type
  4252 ;;		None               void
  4253 ;; Registers used:
  4254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4260 ;;      Params:         0       0       0       0       0       0       0
  4261 ;;      Locals:         0       7       0       0       0       0       0
  4262 ;;      Temps:          0       0       0       0       0       0       0
  4263 ;;      Totals:         0       7       0       0       0       0       0
  4264 ;;Total ram usage:        7 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; Hardware stack levels required when called:    7
  4267 ;; This function calls:
  4268 ;;		Absolute function
  4269 ;;		_CRC8
  4270 ;;		_Receive_available
  4271 ;;		_Receive_get
  4272 ;;		_crcBufS_get
  4273 ;;		_crcBufS_status_put
  4274 ;; This function is called by:
  4275 ;;		_receiveData
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           	psect	text17
  4280  000E4A                     __ptext17:
  4281                           	opt stack 0
  4282  000E4A                     _CRCcheck:
  4283                           	opt stack 21
  4284                           
  4285                           ;FastTransfer.c: 375: while (!(serial_available() > 3));
  4286                           
  4287                           ;incstack = 0
  4288  000E4A  D000               	goto	l4666
  4289  000E4C                     l4666:
  4290  000E4C  D801               	call	u5018
  4291  000E4E  D00A               	goto	u5019
  4292  000E50                     u5018:
  4293  000E50  0005               	push	
  4294  000E52  6EFA               	movwf	pclath,c
  4295  000E54  502D               	movf	_serial_available,w,c
  4296  000E56  6EFD               	movwf	tosl,c
  4297  000E58  502E               	movf	_serial_available+1,w,c
  4298  000E5A  6EFE               	movwf	tosh,c
  4299  000E5C  50F8               	movf	tblptru,w,c
  4300  000E5E  6EFF               	movwf	tosu,c
  4301  000E60  50FA               	movf	pclath,w,c
  4302  000E62  0012               	return		;indir
  4303  000E64                     u5019:
  4304  000E64  BE1E               	btfsc	?_Receive_available+1,7,c
  4305  000E66  D7F2               	goto	l4666
  4306  000E68  501E               	movf	?_Receive_available+1,w,c
  4307  000E6A  E106               	bnz	l4668
  4308  000E6C  0E04               	movlw	4
  4309  000E6E  5C1D               	subwf	?_Receive_available,w,c
  4310  000E70  B0D8               	btfsc	status,0,c
  4311  000E72  D002               	goto	l4668
  4312  000E74  D7EB               	goto	l4666
  4313  000E76  D000               	goto	l4668
  4314  000E78                     l4668:
  4315                           
  4316                           ;FastTransfer.c: 377: unsigned char arrayHolder[3];
  4317                           ;FastTransfer.c: 378: arrayHolder[0] = serial_read();
  4318  000E78  D801               	call	u5038
  4319  000E7A  D00A               	goto	u5039
  4320  000E7C                     u5038:
  4321  000E7C  0005               	push	
  4322  000E7E  6EFA               	movwf	pclath,c
  4323  000E80  502F               	movf	_serial_read,w,c
  4324  000E82  6EFD               	movwf	tosl,c
  4325  000E84  5030               	movf	_serial_read+1,w,c
  4326  000E86  6EFE               	movwf	tosh,c
  4327  000E88  50F8               	movf	tblptru,w,c
  4328  000E8A  6EFF               	movwf	tosu,c
  4329  000E8C  50FA               	movf	pclath,w,c
  4330  000E8E  0012               	return		;indir
  4331  000E90                     u5039:
  4332  000E90  0100               	movlb	0	; () banked
  4333  000E92  6FD5               	movwf	CRCcheck@arrayHolder& (0+255),b
  4334                           
  4335                           ;FastTransfer.c: 379: arrayHolder[1] = serial_read();
  4336  000E94  D801               	call	u5048
  4337  000E96  D00A               	goto	u5049
  4338  000E98                     u5048:
  4339  000E98  0005               	push	
  4340  000E9A  6EFA               	movwf	pclath,c
  4341  000E9C  502F               	movf	_serial_read,w,c
  4342  000E9E  6EFD               	movwf	tosl,c
  4343  000EA0  5030               	movf	_serial_read+1,w,c
  4344  000EA2  6EFE               	movwf	tosh,c
  4345  000EA4  50F8               	movf	tblptru,w,c
  4346  000EA6  6EFF               	movwf	tosu,c
  4347  000EA8  50FA               	movf	pclath,w,c
  4348  000EAA  0012               	return		;indir
  4349  000EAC                     u5049:
  4350  000EAC  0100               	movlb	0	; () banked
  4351  000EAE  6FD6               	movwf	(CRCcheck@arrayHolder+1)& (0+255),b
  4352                           
  4353                           ;FastTransfer.c: 380: arrayHolder[2] = serial_read();
  4354  000EB0  D801               	call	u5058
  4355  000EB2  D00A               	goto	u5059
  4356  000EB4                     u5058:
  4357  000EB4  0005               	push	
  4358  000EB6  6EFA               	movwf	pclath,c
  4359  000EB8  502F               	movf	_serial_read,w,c
  4360  000EBA  6EFD               	movwf	tosl,c
  4361  000EBC  5030               	movf	_serial_read+1,w,c
  4362  000EBE  6EFE               	movwf	tosh,c
  4363  000EC0  50F8               	movf	tblptru,w,c
  4364  000EC2  6EFF               	movwf	tosu,c
  4365  000EC4  50FA               	movf	pclath,w,c
  4366  000EC6  0012               	return		;indir
  4367  000EC8                     u5059:
  4368  000EC8  0100               	movlb	0	; () banked
  4369  000ECA  6FD7               	movwf	(CRCcheck@arrayHolder+2)& (0+255),b
  4370                           
  4371                           ;FastTransfer.c: 381: unsigned char SentCRC = serial_read();
  4372  000ECC  D801               	call	u5068
  4373  000ECE  D00A               	goto	u5069
  4374  000ED0                     u5068:
  4375  000ED0  0005               	push	
  4376  000ED2  6EFA               	movwf	pclath,c
  4377  000ED4  502F               	movf	_serial_read,w,c
  4378  000ED6  6EFD               	movwf	tosl,c
  4379  000ED8  5030               	movf	_serial_read+1,w,c
  4380  000EDA  6EFE               	movwf	tosh,c
  4381  000EDC  50F8               	movf	tblptru,w,c
  4382  000EDE  6EFF               	movwf	tosu,c
  4383  000EE0  50FA               	movf	pclath,w,c
  4384  000EE2  0012               	return		;indir
  4385  000EE4                     u5069:
  4386  000EE4  0100               	movlb	0	; () banked
  4387  000EE6  6FD3               	movwf	CRCcheck@SentCRC& (0+255),b
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;FastTransfer.c: 382: unsigned char calculatedCRC = CRC8(arrayHolder, 3);
  4391  000EE8  0ED5               	movlw	low CRCcheck@arrayHolder
  4392  000EEA  6E1B               	movwf	CRC8@data,c
  4393  000EEC  0E00               	movlw	high CRCcheck@arrayHolder
  4394  000EEE  6E1C               	movwf	CRC8@data+1,c
  4395  000EF0  0E03               	movlw	3
  4396  000EF2  6E1D               	movwf	CRC8@len,c
  4397  000EF4  EC64  F013         	call	_CRC8	;wreg free
  4398  000EF8  0100               	movlb	0	; () banked
  4399  000EFA  6FD4               	movwf	CRCcheck@calculatedCRC& (0+255),b
  4400                           
  4401                           ; BSR set to: 0
  4402                           ;FastTransfer.c: 385: if (SentCRC == calculatedCRC) {
  4403  000EFC  0100               	movlb	0	; () banked
  4404  000EFE  51D4               	movf	CRCcheck@calculatedCRC& (0+255),w,b
  4405  000F00  0100               	movlb	0	; () banked
  4406  000F02  19D3               	xorwf	CRCcheck@SentCRC& (0+255),w,b
  4407  000F04  A4D8               	btfss	status,2,c
  4408  000F06  D053               	goto	l4698
  4409                           
  4410                           ; BSR set to: 0
  4411                           ;FastTransfer.c: 387: int rt;
  4412                           ;FastTransfer.c: 388: for (rt = 0; rt < 5; rt++) {
  4413  000F08  0E00               	movlw	0
  4414  000F0A  0100               	movlb	0	; () banked
  4415  000F0C  6FD9               	movwf	(CRCcheck@rt+1)& (0+255),b
  4416  000F0E  0E00               	movlw	0
  4417  000F10  6FD8               	movwf	CRCcheck@rt& (0+255),b
  4418  000F12                     l4676:
  4419                           
  4420                           ; BSR set to: 0
  4421  000F12  0100               	movlb	0	; () banked
  4422  000F14  BFD9               	btfsc	(CRCcheck@rt+1)& (0+255),7,b
  4423  000F16  D00A               	goto	l4680
  4424  000F18  0100               	movlb	0	; () banked
  4425  000F1A  51D9               	movf	(CRCcheck@rt+1)& (0+255),w,b
  4426  000F1C  E14C               	bnz	l888
  4427  000F1E  0E05               	movlw	5
  4428  000F20  0100               	movlb	0	; () banked
  4429  000F22  5DD8               	subwf	CRCcheck@rt& (0+255),w,b
  4430  000F24  B0D8               	btfsc	status,0,c
  4431  000F26  0012               	return	
  4432  000F28  D001               	goto	l4680
  4433                           
  4434                           ; BSR set to: 0
  4435  000F2A  0012               	return	
  4436  000F2C                     l4680:
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;FastTransfer.c: 389: if (returnAddress == crcBufS_get(&crc_buffer, rt, 0)) {
  4440  000F2C  0EB3               	movlw	low _crc_buffer
  4441  000F2E  6E1B               	movwf	crcBufS_get@_this,c
  4442  000F30  0E00               	movlw	high _crc_buffer
  4443  000F32  6E1C               	movwf	crcBufS_get@_this+1,c
  4444  000F34  C0D8  F01D         	movff	CRCcheck@rt,crcBufS_get@time
  4445  000F38  0E00               	movlw	0
  4446  000F3A  6E1E               	movwf	crcBufS_get@space,c
  4447  000F3C  EC5F  F00D         	call	_crcBufS_get	;wreg free
  4448  000F40  183B               	xorwf	_returnAddress,w,c
  4449  000F42  A4D8               	btfss	status,2,c
  4450  000F44  D02F               	goto	l4694
  4451                           
  4452                           ;FastTransfer.c: 390: if (arrayHolder[2] == crcBufS_get(&crc_buffer, rt, 1)) {
  4453  000F46  0EB3               	movlw	low _crc_buffer
  4454  000F48  6E1B               	movwf	crcBufS_get@_this,c
  4455  000F4A  0E00               	movlw	high _crc_buffer
  4456  000F4C  6E1C               	movwf	crcBufS_get@_this+1,c
  4457  000F4E  C0D8  F01D         	movff	CRCcheck@rt,crcBufS_get@time
  4458  000F52  0E01               	movlw	1
  4459  000F54  6E1E               	movwf	crcBufS_get@space,c
  4460  000F56  EC5F  F00D         	call	_crcBufS_get	;wreg free
  4461  000F5A  0100               	movlb	0	; () banked
  4462  000F5C  19D7               	xorwf	(CRCcheck@arrayHolder+2)& (0+255),w,b
  4463  000F5E  A4D8               	btfss	status,2,c
  4464  000F60  D021               	goto	l4694
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;FastTransfer.c: 391: if (arrayHolder[1] == 1) {
  4468  000F62  0100               	movlb	0	; () banked
  4469  000F64  05D6               	decf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  4470  000F66  A4D8               	btfss	status,2,c
  4471  000F68  D00C               	goto	l4690
  4472                           
  4473                           ; BSR set to: 0
  4474                           ;FastTransfer.c: 392: crcBufS_status_put(&crc_buffer, rt, 1);
  4475  000F6A  0EB3               	movlw	low _crc_buffer
  4476  000F6C  6E1B               	movwf	crcBufS_status_put@_this,c
  4477  000F6E  0E00               	movlw	high _crc_buffer
  4478  000F70  6E1C               	movwf	crcBufS_status_put@_this+1,c
  4479  000F72  C0D8  F01D         	movff	CRCcheck@rt,crcBufS_status_put@time
  4480  000F76  0E01               	movlw	1
  4481  000F78  6E1E               	movwf	crcBufS_status_put@status,c
  4482  000F7A  EC40  F00E         	call	_crcBufS_status_put	;wreg free
  4483                           
  4484                           ;FastTransfer.c: 393: break;
  4485  000F7E  0012               	return	
  4486                           
  4487                           ;FastTransfer.c: 394: } else if (arrayHolder[1] == 2) {
  4488  000F80  D011               	goto	l4694
  4489  000F82                     l4690:
  4490  000F82  0E02               	movlw	2
  4491  000F84  0100               	movlb	0	; () banked
  4492  000F86  19D6               	xorwf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  4493  000F88  A4D8               	btfss	status,2,c
  4494  000F8A  D00C               	goto	l4694
  4495                           
  4496                           ; BSR set to: 0
  4497                           ;FastTransfer.c: 395: crcBufS_status_put(&crc_buffer, rt, 2);
  4498  000F8C  0EB3               	movlw	low _crc_buffer
  4499  000F8E  6E1B               	movwf	crcBufS_status_put@_this,c
  4500  000F90  0E00               	movlw	high _crc_buffer
  4501  000F92  6E1C               	movwf	crcBufS_status_put@_this+1,c
  4502  000F94  C0D8  F01D         	movff	CRCcheck@rt,crcBufS_status_put@time
  4503  000F98  0E02               	movlw	2
  4504  000F9A  6E1E               	movwf	crcBufS_status_put@status,c
  4505  000F9C  EC40  F00E         	call	_crcBufS_status_put	;wreg free
  4506                           
  4507                           ;FastTransfer.c: 396: break;
  4508  000FA0  0012               	return	
  4509  000FA2  D000               	goto	l4694
  4510  000FA4                     l4694:
  4511  000FA4  0100               	movlb	0	; () banked
  4512  000FA6  4BD8               	infsnz	CRCcheck@rt& (0+255),f,b
  4513  000FA8  2BD9               	incf	(CRCcheck@rt+1)& (0+255),f,b
  4514  000FAA  D7B3               	goto	l4676
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;FastTransfer.c: 397: }
  4518                           ;FastTransfer.c: 398: }
  4519                           ;FastTransfer.c: 399: }
  4520                           ;FastTransfer.c: 400: }
  4521                           ;FastTransfer.c: 401: } else {
  4522                           
  4523                           ; BSR set to: 0
  4524  000FAC  0012               	return	
  4525  000FAE                     l4698:
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;FastTransfer.c: 402: crcErrorCounter++;
  4529  000FAE  0100               	movlb	0	; () banked
  4530  000FB0  4BA1               	infsnz	_crcErrorCounter& (0+255),f,b
  4531  000FB2  2BA2               	incf	(_crcErrorCounter+1)& (0+255),f,b
  4532  000FB4  0012               	return	
  4533  000FB6                     l888:
  4534  000FB6  0012               	return		;funcret
  4535  000FB8                     __end_of_CRCcheck:
  4536                           	opt stack 0
  4537                           tosu	equ	0xFFF
  4538                           tosh	equ	0xFFE
  4539                           tosl	equ	0xFFD
  4540                           pclath	equ	0xFFA
  4541                           tblptru	equ	0xFF8
  4542                           tblptrh	equ	0xFF7
  4543                           tblptrl	equ	0xFF6
  4544                           tablat	equ	0xFF5
  4545                           prodh	equ	0xFF4
  4546                           prodl	equ	0xFF3
  4547                           intcon	equ	0xFF2
  4548                           postinc0	equ	0xFEE
  4549                           wreg	equ	0xFE8
  4550                           indf2	equ	0xFDF
  4551                           postinc2	equ	0xFDE
  4552                           postdec2	equ	0xFDD
  4553                           plusw2	equ	0xFDB
  4554                           fsr2h	equ	0xFDA
  4555                           fsr2l	equ	0xFD9
  4556                           status	equ	0xFD8
  4557                           
  4558 ;; *************** function _crcBufS_status_put *****************
  4559 ;; Defined at:
  4560 ;;		line 336 in file "FastTransfer.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  4563 ;;		 -> crc_buffer(17), 
  4564 ;;  time            1   28[COMRAM] unsigned char 
  4565 ;;  status          1   29[COMRAM] unsigned char 
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;  wantedTime      2   34[COMRAM] int 
  4568 ;; Return value:  Size  Location     Type
  4569 ;;		None               void
  4570 ;; Registers used:
  4571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4577 ;;      Params:         4       0       0       0       0       0       0
  4578 ;;      Locals:         2       0       0       0       0       0       0
  4579 ;;      Temps:          4       0       0       0       0       0       0
  4580 ;;      Totals:        10       0       0       0       0       0       0
  4581 ;;Total ram usage:       10 bytes
  4582 ;; Hardware stack levels used:    1
  4583 ;; Hardware stack levels required when called:    4
  4584 ;; This function calls:
  4585 ;;		Nothing
  4586 ;; This function is called by:
  4587 ;;		_CRCcheck
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           	psect	text18
  4592  001C80                     __ptext18:
  4593                           	opt stack 0
  4594  001C80                     _crcBufS_status_put:
  4595                           	opt stack 23
  4596                           
  4597                           ;FastTransfer.c: 337: if (time >= 5) {
  4598                           
  4599                           ;incstack = 0
  4600  001C80  0E04               	movlw	4
  4601  001C82  641D               	cpfsgt	crcBufS_status_put@time,c
  4602  001C84  D003               	goto	l4598
  4603                           
  4604                           ;FastTransfer.c: 338: time = 5 - 1;
  4605  001C86  0E04               	movlw	4
  4606  001C88  6E1D               	movwf	crcBufS_status_put@time,c
  4607  001C8A  D000               	goto	l4598
  4608  001C8C                     l4598:
  4609                           
  4610                           ;FastTransfer.c: 339: }
  4611                           ;FastTransfer.c: 340: time = time + 1;
  4612  001C8C  281D               	incf	crcBufS_status_put@time,w,c
  4613  001C8E  6E1D               	movwf	crcBufS_status_put@time,c
  4614                           
  4615                           ;FastTransfer.c: 341: int wantedTime = time * 3;
  4616  001C90  501D               	movf	crcBufS_status_put@time,w,c
  4617  001C92  0D03               	mullw	3
  4618  001C94  CFF3 F023          	movff	prodl,crcBufS_status_put@wantedTime
  4619  001C98  CFF4 F024          	movff	prodh,crcBufS_status_put@wantedTime+1
  4620                           
  4621                           ;FastTransfer.c: 342: if (wantedTime > _this->head) {
  4622  001C9C  EE20 F00F          	lfsr	2,15
  4623  001CA0  501B               	movf	crcBufS_status_put@_this,w,c
  4624  001CA2  26D9               	addwf	fsr2l,f,c
  4625  001CA4  501C               	movf	crcBufS_status_put@_this+1,w,c
  4626  001CA6  22DA               	addwfc	fsr2h,f,c
  4627  001CA8  5023               	movf	crcBufS_status_put@wantedTime,w,c
  4628  001CAA  5CDE               	subwf	postinc2,w,c
  4629  001CAC  50DE               	movf	postinc2,w,c
  4630  001CAE  0A80               	xorlw	128
  4631  001CB0  6E21               	movwf	(??_crcBufS_status_put+2)& (0+255),c
  4632  001CB2  5024               	movf	crcBufS_status_put@wantedTime+1,w,c
  4633  001CB4  0A80               	xorlw	128
  4634  001CB6  5821               	subwfb	(??_crcBufS_status_put+2)& (0+255),w,c
  4635  001CB8  B0D8               	btfsc	status,0,c
  4636  001CBA  D02B               	goto	l4606
  4637                           
  4638                           ;FastTransfer.c: 343: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  4639  001CBC  EE20 F00F          	lfsr	2,15
  4640  001CC0  501B               	movf	crcBufS_status_put@_this,w,c
  4641  001CC2  26D9               	addwf	fsr2l,f,c
  4642  001CC4  501C               	movf	crcBufS_status_put@_this+1,w,c
  4643  001CC6  22DA               	addwfc	fsr2h,f,c
  4644  001CC8  CFDE F01F          	movff	postinc2,??_crcBufS_status_put
  4645  001CCC  CFDD F020          	movff	postdec2,??_crcBufS_status_put+1
  4646  001CD0  1E1F               	comf	??_crcBufS_status_put,f,c
  4647  001CD2  1E20               	comf	??_crcBufS_status_put+1,f,c
  4648  001CD4  4A1F               	infsnz	??_crcBufS_status_put,f,c
  4649  001CD6  2A20               	incf	??_crcBufS_status_put+1,f,c
  4650  001CD8  5023               	movf	crcBufS_status_put@wantedTime,w,c
  4651  001CDA  261F               	addwf	??_crcBufS_status_put,f,c
  4652  001CDC  5024               	movf	crcBufS_status_put@wantedTime+1,w,c
  4653  001CDE  2220               	addwfc	??_crcBufS_status_put+1,f,c
  4654  001CE0  1E1F               	comf	??_crcBufS_status_put,f,c
  4655  001CE2  1E20               	comf	??_crcBufS_status_put+1,f,c
  4656  001CE4  4A1F               	infsnz	??_crcBufS_status_put,f,c
  4657  001CE6  2A20               	incf	??_crcBufS_status_put+1,f,c
  4658  001CE8  0E0F               	movlw	15
  4659  001CEA  241F               	addwf	??_crcBufS_status_put,w,c
  4660  001CEC  6E23               	movwf	crcBufS_status_put@wantedTime,c
  4661  001CEE  0E00               	movlw	0
  4662  001CF0  2020               	addwfc	??_crcBufS_status_put+1,w,c
  4663  001CF2  6E24               	movwf	crcBufS_status_put@wantedTime+1,c
  4664                           
  4665                           ;FastTransfer.c: 344: _this->buf[(wantedTime + 2)] = status;
  4666  001CF4  0E02               	movlw	2
  4667  001CF6  2423               	addwf	crcBufS_status_put@wantedTime,w,c
  4668  001CF8  6E1F               	movwf	??_crcBufS_status_put& (0+255),c
  4669  001CFA  0E00               	movlw	0
  4670  001CFC  2024               	addwfc	crcBufS_status_put@wantedTime+1,w,c
  4671  001CFE  6E20               	movwf	(??_crcBufS_status_put+1)& (0+255),c
  4672  001D00  501F               	movf	??_crcBufS_status_put,w,c
  4673  001D02  241B               	addwf	crcBufS_status_put@_this,w,c
  4674  001D04  6ED9               	movwf	fsr2l,c
  4675  001D06  5020               	movf	??_crcBufS_status_put+1,w,c
  4676  001D08  201C               	addwfc	crcBufS_status_put@_this+1,w,c
  4677  001D0A  6EDA               	movwf	fsr2h,c
  4678  001D0C  C01E  FFDF         	movff	crcBufS_status_put@status,indf2
  4679                           
  4680                           ;FastTransfer.c: 345: } else {
  4681  001D10  0012               	return	
  4682  001D12                     l4606:
  4683                           
  4684                           ;FastTransfer.c: 346: _this->buf[(_this->head - wantedTime) + 2] = status;
  4685  001D12  EE20 F00F          	lfsr	2,15
  4686  001D16  501B               	movf	crcBufS_status_put@_this,w,c
  4687  001D18  26D9               	addwf	fsr2l,f,c
  4688  001D1A  501C               	movf	crcBufS_status_put@_this+1,w,c
  4689  001D1C  22DA               	addwfc	fsr2h,f,c
  4690  001D1E  CFDE F01F          	movff	postinc2,??_crcBufS_status_put
  4691  001D22  CFDD F020          	movff	postdec2,??_crcBufS_status_put+1
  4692  001D26  C023  F021         	movff	crcBufS_status_put@wantedTime,??_crcBufS_status_put+2
  4693  001D2A  C024  F022         	movff	crcBufS_status_put@wantedTime+1,??_crcBufS_status_put+3
  4694  001D2E  1E21               	comf	??_crcBufS_status_put+2,f,c
  4695  001D30  1E22               	comf	??_crcBufS_status_put+3,f,c
  4696  001D32  4A21               	infsnz	??_crcBufS_status_put+2,f,c
  4697  001D34  2A22               	incf	??_crcBufS_status_put+3,f,c
  4698  001D36  501F               	movf	??_crcBufS_status_put,w,c
  4699  001D38  2621               	addwf	??_crcBufS_status_put+2,f,c
  4700  001D3A  5020               	movf	??_crcBufS_status_put+1,w,c
  4701  001D3C  2222               	addwfc	??_crcBufS_status_put+3,f,c
  4702  001D3E  0E02               	movlw	2
  4703  001D40  2621               	addwf	??_crcBufS_status_put+2,f,c
  4704  001D42  0E00               	movlw	0
  4705  001D44  2222               	addwfc	??_crcBufS_status_put+3,f,c
  4706  001D46  5021               	movf	??_crcBufS_status_put+2,w,c
  4707  001D48  241B               	addwf	crcBufS_status_put@_this,w,c
  4708  001D4A  6ED9               	movwf	fsr2l,c
  4709  001D4C  5022               	movf	??_crcBufS_status_put+3,w,c
  4710  001D4E  201C               	addwfc	crcBufS_status_put@_this+1,w,c
  4711  001D50  6EDA               	movwf	fsr2h,c
  4712  001D52  C01E  FFDF         	movff	crcBufS_status_put@status,indf2
  4713  001D56  0012               	return	
  4714  001D58  0012               	return		;funcret
  4715  001D5A                     __end_of_crcBufS_status_put:
  4716                           	opt stack 0
  4717                           tosu	equ	0xFFF
  4718                           tosh	equ	0xFFE
  4719                           tosl	equ	0xFFD
  4720                           pclath	equ	0xFFA
  4721                           tblptru	equ	0xFF8
  4722                           tblptrh	equ	0xFF7
  4723                           tblptrl	equ	0xFF6
  4724                           tablat	equ	0xFF5
  4725                           prodh	equ	0xFF4
  4726                           prodl	equ	0xFF3
  4727                           intcon	equ	0xFF2
  4728                           postinc0	equ	0xFEE
  4729                           wreg	equ	0xFE8
  4730                           indf2	equ	0xFDF
  4731                           postinc2	equ	0xFDE
  4732                           postdec2	equ	0xFDD
  4733                           plusw2	equ	0xFDB
  4734                           fsr2h	equ	0xFDA
  4735                           fsr2l	equ	0xFD9
  4736                           status	equ	0xFD8
  4737                           
  4738 ;; *************** function _crcBufS_get *****************
  4739 ;; Defined at:
  4740 ;;		line 353 in file "FastTransfer.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  4743 ;;		 -> crc_buffer(17), 
  4744 ;;  time            1   28[COMRAM] unsigned char 
  4745 ;;  space           1   29[COMRAM] unsigned char 
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;  wantedTime      2   36[COMRAM] int 
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  1    wreg      unsigned char 
  4750 ;; Registers used:
  4751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4757 ;;      Params:         4       0       0       0       0       0       0
  4758 ;;      Locals:         2       0       0       0       0       0       0
  4759 ;;      Temps:          6       0       0       0       0       0       0
  4760 ;;      Totals:        12       0       0       0       0       0       0
  4761 ;;Total ram usage:       12 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; Hardware stack levels required when called:    4
  4764 ;; This function calls:
  4765 ;;		Nothing
  4766 ;; This function is called by:
  4767 ;;		_CRCcheck
  4768 ;;		_AKNAK
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771                           
  4772                           	psect	text19
  4773  001ABE                     __ptext19:
  4774                           	opt stack 0
  4775  001ABE                     _crcBufS_get:
  4776                           	opt stack 23
  4777                           
  4778                           ;FastTransfer.c: 354: if (time >= 5) {
  4779                           
  4780                           ;incstack = 0
  4781  001ABE  0E04               	movlw	4
  4782  001AC0  641D               	cpfsgt	crcBufS_get@time,c
  4783  001AC2  D003               	goto	l4574
  4784                           
  4785                           ;FastTransfer.c: 355: time = 5 - 1;
  4786  001AC4  0E04               	movlw	4
  4787  001AC6  6E1D               	movwf	crcBufS_get@time,c
  4788  001AC8  D000               	goto	l4574
  4789  001ACA                     l4574:
  4790                           
  4791                           ;FastTransfer.c: 356: }
  4792                           ;FastTransfer.c: 357: if (space >= 3) {
  4793  001ACA  0E02               	movlw	2
  4794  001ACC  641E               	cpfsgt	crcBufS_get@space,c
  4795  001ACE  D003               	goto	l4578
  4796                           
  4797                           ;FastTransfer.c: 358: space = 3 - 1;
  4798  001AD0  0E02               	movlw	2
  4799  001AD2  6E1E               	movwf	crcBufS_get@space,c
  4800  001AD4  D000               	goto	l4578
  4801  001AD6                     l4578:
  4802                           
  4803                           ;FastTransfer.c: 359: }
  4804                           ;FastTransfer.c: 360: time = time + 1;
  4805  001AD6  281D               	incf	crcBufS_get@time,w,c
  4806  001AD8  6E1D               	movwf	crcBufS_get@time,c
  4807                           
  4808                           ;FastTransfer.c: 361: int wantedTime = time * 3;
  4809  001ADA  501D               	movf	crcBufS_get@time,w,c
  4810  001ADC  0D03               	mullw	3
  4811  001ADE  CFF3 F025          	movff	prodl,crcBufS_get@wantedTime
  4812  001AE2  CFF4 F026          	movff	prodh,crcBufS_get@wantedTime+1
  4813                           
  4814                           ;FastTransfer.c: 362: if (wantedTime > _this->head) {
  4815  001AE6  EE20 F00F          	lfsr	2,15
  4816  001AEA  501B               	movf	crcBufS_get@_this,w,c
  4817  001AEC  26D9               	addwf	fsr2l,f,c
  4818  001AEE  501C               	movf	crcBufS_get@_this+1,w,c
  4819  001AF0  22DA               	addwfc	fsr2h,f,c
  4820  001AF2  5025               	movf	crcBufS_get@wantedTime,w,c
  4821  001AF4  5CDE               	subwf	postinc2,w,c
  4822  001AF6  50DE               	movf	postinc2,w,c
  4823  001AF8  0A80               	xorlw	128
  4824  001AFA  6E21               	movwf	(??_crcBufS_get+2)& (0+255),c
  4825  001AFC  5026               	movf	crcBufS_get@wantedTime+1,w,c
  4826  001AFE  0A80               	xorlw	128
  4827  001B00  5821               	subwfb	(??_crcBufS_get+2)& (0+255),w,c
  4828  001B02  B0D8               	btfsc	status,0,c
  4829  001B04  D02A               	goto	l4590
  4830                           
  4831                           ;FastTransfer.c: 363: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  4832  001B06  EE20 F00F          	lfsr	2,15
  4833  001B0A  501B               	movf	crcBufS_get@_this,w,c
  4834  001B0C  26D9               	addwf	fsr2l,f,c
  4835  001B0E  501C               	movf	crcBufS_get@_this+1,w,c
  4836  001B10  22DA               	addwfc	fsr2h,f,c
  4837  001B12  CFDE F01F          	movff	postinc2,??_crcBufS_get
  4838  001B16  CFDD F020          	movff	postdec2,??_crcBufS_get+1
  4839  001B1A  1E1F               	comf	??_crcBufS_get,f,c
  4840  001B1C  1E20               	comf	??_crcBufS_get+1,f,c
  4841  001B1E  4A1F               	infsnz	??_crcBufS_get,f,c
  4842  001B20  2A20               	incf	??_crcBufS_get+1,f,c
  4843  001B22  5025               	movf	crcBufS_get@wantedTime,w,c
  4844  001B24  261F               	addwf	??_crcBufS_get,f,c
  4845  001B26  5026               	movf	crcBufS_get@wantedTime+1,w,c
  4846  001B28  2220               	addwfc	??_crcBufS_get+1,f,c
  4847  001B2A  1E1F               	comf	??_crcBufS_get,f,c
  4848  001B2C  1E20               	comf	??_crcBufS_get+1,f,c
  4849  001B2E  4A1F               	infsnz	??_crcBufS_get,f,c
  4850  001B30  2A20               	incf	??_crcBufS_get+1,f,c
  4851  001B32  0E0F               	movlw	15
  4852  001B34  241F               	addwf	??_crcBufS_get,w,c
  4853  001B36  6E25               	movwf	crcBufS_get@wantedTime,c
  4854  001B38  0E00               	movlw	0
  4855  001B3A  2020               	addwfc	??_crcBufS_get+1,w,c
  4856  001B3C  6E26               	movwf	crcBufS_get@wantedTime+1,c
  4857                           
  4858                           ;FastTransfer.c: 364: return (_this->buf[(wantedTime + space)]);
  4859  001B3E  501E               	movf	crcBufS_get@space,w,c
  4860  001B40  2425               	addwf	crcBufS_get@wantedTime,w,c
  4861  001B42  6E1F               	movwf	??_crcBufS_get& (0+255),c
  4862  001B44  0E00               	movlw	0
  4863  001B46  2026               	addwfc	crcBufS_get@wantedTime+1,w,c
  4864  001B48  6E20               	movwf	(??_crcBufS_get+1)& (0+255),c
  4865  001B4A  501F               	movf	??_crcBufS_get,w,c
  4866  001B4C  241B               	addwf	crcBufS_get@_this,w,c
  4867  001B4E  6ED9               	movwf	fsr2l,c
  4868  001B50  5020               	movf	??_crcBufS_get+1,w,c
  4869  001B52  201C               	addwfc	crcBufS_get@_this+1,w,c
  4870  001B54  6EDA               	movwf	fsr2h,c
  4871  001B56  50DF               	movf	indf2,w,c
  4872                           
  4873                           ;FastTransfer.c: 365: } else {
  4874  001B58  0012               	return	
  4875  001B5A                     l4590:
  4876                           
  4877                           ;FastTransfer.c: 366: return (_this->buf[(_this->head - wantedTime) + space]);
  4878  001B5A  EE20 F00F          	lfsr	2,15
  4879  001B5E  501B               	movf	crcBufS_get@_this,w,c
  4880  001B60  26D9               	addwf	fsr2l,f,c
  4881  001B62  501C               	movf	crcBufS_get@_this+1,w,c
  4882  001B64  22DA               	addwfc	fsr2h,f,c
  4883  001B66  CFDE F01F          	movff	postinc2,??_crcBufS_get
  4884  001B6A  CFDD F020          	movff	postdec2,??_crcBufS_get+1
  4885  001B6E  C025  F021         	movff	crcBufS_get@wantedTime,??_crcBufS_get+2
  4886  001B72  C026  F022         	movff	crcBufS_get@wantedTime+1,??_crcBufS_get+3
  4887  001B76  1E21               	comf	??_crcBufS_get+2,f,c
  4888  001B78  1E22               	comf	??_crcBufS_get+3,f,c
  4889  001B7A  4A21               	infsnz	??_crcBufS_get+2,f,c
  4890  001B7C  2A22               	incf	??_crcBufS_get+3,f,c
  4891  001B7E  501E               	movf	crcBufS_get@space,w,c
  4892  001B80  6E23               	movwf	(??_crcBufS_get+4)& (0+255),c
  4893  001B82  6A24               	clrf	(??_crcBufS_get+5)& (0+255),c
  4894  001B84  5021               	movf	??_crcBufS_get+2,w,c
  4895  001B86  2623               	addwf	??_crcBufS_get+4,f,c
  4896  001B88  5022               	movf	??_crcBufS_get+3,w,c
  4897  001B8A  2224               	addwfc	??_crcBufS_get+5,f,c
  4898  001B8C  501F               	movf	??_crcBufS_get,w,c
  4899  001B8E  2623               	addwf	??_crcBufS_get+4,f,c
  4900  001B90  5020               	movf	??_crcBufS_get+1,w,c
  4901  001B92  2224               	addwfc	??_crcBufS_get+5,f,c
  4902  001B94  5023               	movf	??_crcBufS_get+4,w,c
  4903  001B96  241B               	addwf	crcBufS_get@_this,w,c
  4904  001B98  6ED9               	movwf	fsr2l,c
  4905  001B9A  5024               	movf	??_crcBufS_get+5,w,c
  4906  001B9C  201C               	addwfc	crcBufS_get@_this+1,w,c
  4907  001B9E  6EDA               	movwf	fsr2h,c
  4908  001BA0  50DF               	movf	indf2,w,c
  4909  001BA2  0012               	return	
  4910  001BA4  0012               	return		;funcret
  4911  001BA6                     __end_of_crcBufS_get:
  4912                           	opt stack 0
  4913                           tosu	equ	0xFFF
  4914                           tosh	equ	0xFFE
  4915                           tosl	equ	0xFFD
  4916                           pclath	equ	0xFFA
  4917                           tblptru	equ	0xFF8
  4918                           tblptrh	equ	0xFF7
  4919                           tblptrl	equ	0xFF6
  4920                           tablat	equ	0xFF5
  4921                           prodh	equ	0xFF4
  4922                           prodl	equ	0xFF3
  4923                           intcon	equ	0xFF2
  4924                           postinc0	equ	0xFEE
  4925                           wreg	equ	0xFE8
  4926                           indf2	equ	0xFDF
  4927                           postinc2	equ	0xFDE
  4928                           postdec2	equ	0xFDD
  4929                           plusw2	equ	0xFDB
  4930                           fsr2h	equ	0xFDA
  4931                           fsr2l	equ	0xFD9
  4932                           status	equ	0xFD8
  4933                           
  4934 ;; *************** function _Receive_get *****************
  4935 ;; Defined at:
  4936 ;;		line 126 in file "UART.c"
  4937 ;; Parameters:    Size  Location     Type
  4938 ;;		None
  4939 ;; Auto vars:     Size  Location     Type
  4940 ;;		None
  4941 ;; Return value:  Size  Location     Type
  4942 ;;                  1    wreg      unsigned char 
  4943 ;; Registers used:
  4944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4945 ;; Tracked objects:
  4946 ;;		On entry : 0/0
  4947 ;;		On exit  : 0/0
  4948 ;;		Unchanged: 0/0
  4949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4950 ;;      Params:         0       0       0       0       0       0       0
  4951 ;;      Locals:         0       0       0       0       0       0       0
  4952 ;;      Temps:          0       0       0       0       0       0       0
  4953 ;;      Totals:         0       0       0       0       0       0       0
  4954 ;;Total ram usage:        0 bytes
  4955 ;; Hardware stack levels used:    1
  4956 ;; Hardware stack levels required when called:    6
  4957 ;; This function calls:
  4958 ;;		_UART_buff_get
  4959 ;; This function is called by:
  4960 ;;		_SYSTEM_Initialize
  4961 ;;		_getch
  4962 ;;		_CRCcheck
  4963 ;;		_receiveData
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           	psect	text20
  4968  002C12                     __ptext20:
  4969                           	opt stack 0
  4970  002C12                     _Receive_get:
  4971                           	opt stack 22
  4972                           
  4973                           ;UART.c: 127: return UART_buff_get(&input_buffer);
  4974                           
  4975                           ;incstack = 0
  4976  002C12  0E00               	movlw	low _input_buffer
  4977  002C14  6E21               	movwf	UART_buff_get@_this,c
  4978  002C16  0E03               	movlw	high _input_buffer
  4979  002C18  6E22               	movwf	UART_buff_get@_this+1,c
  4980  002C1A  EC11  F011         	call	_UART_buff_get	;wreg free
  4981  002C1E  0012               	return	
  4982  002C20  0012               	return		;funcret
  4983  002C22                     __end_of_Receive_get:
  4984                           	opt stack 0
  4985                           tosu	equ	0xFFF
  4986                           tosh	equ	0xFFE
  4987                           tosl	equ	0xFFD
  4988                           pclath	equ	0xFFA
  4989                           tblptru	equ	0xFF8
  4990                           tblptrh	equ	0xFF7
  4991                           tblptrl	equ	0xFF6
  4992                           tablat	equ	0xFF5
  4993                           prodh	equ	0xFF4
  4994                           prodl	equ	0xFF3
  4995                           intcon	equ	0xFF2
  4996                           postinc0	equ	0xFEE
  4997                           wreg	equ	0xFE8
  4998                           indf2	equ	0xFDF
  4999                           postinc2	equ	0xFDE
  5000                           postdec2	equ	0xFDD
  5001                           plusw2	equ	0xFDB
  5002                           fsr2h	equ	0xFDA
  5003                           fsr2l	equ	0xFD9
  5004                           status	equ	0xFD8
  5005                           
  5006 ;; *************** function _UART_buff_get *****************
  5007 ;; Defined at:
  5008 ;;		line 81 in file "UART.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  5011 ;;		 -> output_buffer(206), input_buffer(206), 
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;  c               1   36[COMRAM] unsigned char 
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  1    wreg      unsigned char 
  5016 ;; Registers used:
  5017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5023 ;;      Params:         2       0       0       0       0       0       0
  5024 ;;      Locals:         1       0       0       0       0       0       0
  5025 ;;      Temps:          2       0       0       0       0       0       0
  5026 ;;      Totals:         5       0       0       0       0       0       0
  5027 ;;Total ram usage:        5 bytes
  5028 ;; Hardware stack levels used:    1
  5029 ;; Hardware stack levels required when called:    5
  5030 ;; This function calls:
  5031 ;;		_UART_buff_modulo_inc
  5032 ;; This function is called by:
  5033 ;;		_Receive_get
  5034 ;;		_Send_put
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038                           	psect	text21
  5039  002222                     __ptext21:
  5040                           	opt stack 0
  5041  002222                     _UART_buff_get:
  5042                           	opt stack 21
  5043                           
  5044                           ;UART.c: 82: unsigned char c;
  5045                           ;UART.c: 83: if (_this->count > 0) {
  5046                           
  5047                           ;incstack = 0
  5048  002222  EE20 F0CC          	lfsr	2,204
  5049  002226  5021               	movf	UART_buff_get@_this,w,c
  5050  002228  26D9               	addwf	fsr2l,f,c
  5051  00222A  5022               	movf	UART_buff_get@_this+1,w,c
  5052  00222C  22DA               	addwfc	fsr2h,f,c
  5053  00222E  0E01               	movlw	1
  5054  002230  BEDB               	btfsc	plusw2,7,c
  5055  002232  D03C               	goto	l4494
  5056  002234  0E01               	movlw	1
  5057  002236  50DB               	movf	plusw2,w,c
  5058  002238  E103               	bnz	u4750
  5059  00223A  04DE               	decf	postinc2,w,c
  5060  00223C  A0D8               	btfss	status,0,c
  5061  00223E  D036               	goto	l4494
  5062  002240                     u4750:
  5063                           
  5064                           ;UART.c: 84: c = _this->buf[_this->tail];
  5065  002240  EE20 F0CA          	lfsr	2,202
  5066  002244  5021               	movf	UART_buff_get@_this,w,c
  5067  002246  26D9               	addwf	fsr2l,f,c
  5068  002248  5022               	movf	UART_buff_get@_this+1,w,c
  5069  00224A  22DA               	addwfc	fsr2h,f,c
  5070  00224C  CFDE F023          	movff	postinc2,??_UART_buff_get
  5071  002250  CFDD F024          	movff	postdec2,??_UART_buff_get+1
  5072  002254  5023               	movf	??_UART_buff_get,w,c
  5073  002256  2421               	addwf	UART_buff_get@_this,w,c
  5074  002258  6ED9               	movwf	fsr2l,c
  5075  00225A  5024               	movf	??_UART_buff_get+1,w,c
  5076  00225C  2022               	addwfc	UART_buff_get@_this+1,w,c
  5077  00225E  6EDA               	movwf	fsr2h,c
  5078  002260  50DF               	movf	indf2,w,c
  5079  002262  6E25               	movwf	UART_buff_get@c,c
  5080                           
  5081                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  5082  002264  EE20 F0CA          	lfsr	2,202
  5083  002268  5021               	movf	UART_buff_get@_this,w,c
  5084  00226A  26D9               	addwf	fsr2l,f,c
  5085  00226C  5022               	movf	UART_buff_get@_this+1,w,c
  5086  00226E  22DA               	addwfc	fsr2h,f,c
  5087  002270  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  5088  002274  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  5089  002278  0E00               	movlw	0
  5090  00227A  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  5091  00227C  0EC8               	movlw	200
  5092  00227E  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  5093  002280  EC00  F015         	call	_UART_buff_modulo_inc	;wreg free
  5094  002284  EE20 F0CA          	lfsr	2,202
  5095  002288  5021               	movf	UART_buff_get@_this,w,c
  5096  00228A  26D9               	addwf	fsr2l,f,c
  5097  00228C  5022               	movf	UART_buff_get@_this+1,w,c
  5098  00228E  22DA               	addwfc	fsr2h,f,c
  5099  002290  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  5100  002294  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  5101                           
  5102                           ;UART.c: 86: --_this->count;
  5103  002298  EE20 F0CC          	lfsr	2,204
  5104  00229C  5021               	movf	UART_buff_get@_this,w,c
  5105  00229E  26D9               	addwf	fsr2l,f,c
  5106  0022A0  5022               	movf	UART_buff_get@_this+1,w,c
  5107  0022A2  22DA               	addwfc	fsr2h,f,c
  5108  0022A4  06DE               	decf	postinc2,f,c
  5109  0022A6  0E00               	movlw	0
  5110  0022A8  5ADD               	subwfb	postdec2,f,c
  5111                           
  5112                           ;UART.c: 87: } else {
  5113  0022AA  D002               	goto	l933
  5114  0022AC                     l4494:
  5115                           
  5116                           ;UART.c: 88: c = 0;
  5117  0022AC  0E00               	movlw	0
  5118  0022AE  6E25               	movwf	UART_buff_get@c,c
  5119  0022B0                     l933:
  5120                           
  5121                           ;UART.c: 89: }
  5122                           ;UART.c: 90: return (c);
  5123  0022B0  5025               	movf	UART_buff_get@c,w,c
  5124  0022B2  0012               	return	
  5125  0022B4  0012               	return		;funcret
  5126  0022B6                     __end_of_UART_buff_get:
  5127                           	opt stack 0
  5128                           tosu	equ	0xFFF
  5129                           tosh	equ	0xFFE
  5130                           tosl	equ	0xFFD
  5131                           pclath	equ	0xFFA
  5132                           tblptru	equ	0xFF8
  5133                           tblptrh	equ	0xFF7
  5134                           tblptrl	equ	0xFF6
  5135                           tablat	equ	0xFF5
  5136                           prodh	equ	0xFF4
  5137                           prodl	equ	0xFF3
  5138                           intcon	equ	0xFF2
  5139                           postinc0	equ	0xFEE
  5140                           wreg	equ	0xFE8
  5141                           indf2	equ	0xFDF
  5142                           postinc2	equ	0xFDE
  5143                           postdec2	equ	0xFDD
  5144                           plusw2	equ	0xFDB
  5145                           fsr2h	equ	0xFDA
  5146                           fsr2l	equ	0xFD9
  5147                           status	equ	0xFD8
  5148                           
  5149 ;; *************** function _UART_buff_modulo_inc *****************
  5150 ;; Defined at:
  5151 ;;		line 106 in file "UART.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;  value           2   26[COMRAM] const unsigned int 
  5154 ;;  modulus         2   28[COMRAM] const unsigned int 
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;  my_value        2   30[COMRAM] unsigned int 
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  2   26[COMRAM] unsigned int 
  5159 ;; Registers used:
  5160 ;;		wreg, status,2, status,0
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5166 ;;      Params:         4       0       0       0       0       0       0
  5167 ;;      Locals:         2       0       0       0       0       0       0
  5168 ;;      Temps:          0       0       0       0       0       0       0
  5169 ;;      Totals:         6       0       0       0       0       0       0
  5170 ;;Total ram usage:        6 bytes
  5171 ;; Hardware stack levels used:    1
  5172 ;; Hardware stack levels required when called:    4
  5173 ;; This function calls:
  5174 ;;		Nothing
  5175 ;; This function is called by:
  5176 ;;		_UART_buff_put
  5177 ;;		_UART_buff_get
  5178 ;; This function uses a non-reentrant model
  5179 ;;
  5180                           
  5181                           	psect	text22
  5182  002A00                     __ptext22:
  5183                           	opt stack 0
  5184  002A00                     _UART_buff_modulo_inc:
  5185                           	opt stack 21
  5186                           
  5187                           ;UART.c: 107: unsigned int my_value = value + 1;
  5188                           
  5189                           ;incstack = 0
  5190  002A00  0E01               	movlw	1
  5191  002A02  241B               	addwf	UART_buff_modulo_inc@value,w,c
  5192  002A04  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  5193  002A06  0E00               	movlw	0
  5194  002A08  201C               	addwfc	UART_buff_modulo_inc@value+1,w,c
  5195  002A0A  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  5196                           
  5197                           ;UART.c: 108: if (my_value >= modulus) {
  5198  002A0C  501D               	movf	UART_buff_modulo_inc@modulus,w,c
  5199  002A0E  5C1F               	subwf	UART_buff_modulo_inc@my_value,w,c
  5200  002A10  501E               	movf	UART_buff_modulo_inc@modulus+1,w,c
  5201  002A12  5820               	subwfb	UART_buff_modulo_inc@my_value+1,w,c
  5202  002A14  A0D8               	btfss	status,0,c
  5203  002A16  D005               	goto	l4460
  5204                           
  5205                           ;UART.c: 109: my_value = 0;
  5206  002A18  0E00               	movlw	0
  5207  002A1A  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  5208  002A1C  0E00               	movlw	0
  5209  002A1E  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  5210  002A20  D000               	goto	l4460
  5211  002A22                     l4460:
  5212                           
  5213                           ;UART.c: 110: }
  5214                           ;UART.c: 111: return (my_value);
  5215  002A22  C01F  F01B         	movff	UART_buff_modulo_inc@my_value,?_UART_buff_modulo_inc
  5216  002A26  C020  F01C         	movff	UART_buff_modulo_inc@my_value+1,?_UART_buff_modulo_inc+1
  5217  002A2A  0012               	return	
  5218  002A2C  0012               	return		;funcret
  5219  002A2E                     __end_of_UART_buff_modulo_inc:
  5220                           	opt stack 0
  5221                           tosu	equ	0xFFF
  5222                           tosh	equ	0xFFE
  5223                           tosl	equ	0xFFD
  5224                           pclath	equ	0xFFA
  5225                           tblptru	equ	0xFF8
  5226                           tblptrh	equ	0xFF7
  5227                           tblptrl	equ	0xFF6
  5228                           tablat	equ	0xFF5
  5229                           prodh	equ	0xFF4
  5230                           prodl	equ	0xFF3
  5231                           intcon	equ	0xFF2
  5232                           postinc0	equ	0xFEE
  5233                           wreg	equ	0xFE8
  5234                           indf2	equ	0xFDF
  5235                           postinc2	equ	0xFDE
  5236                           postdec2	equ	0xFDD
  5237                           plusw2	equ	0xFDB
  5238                           fsr2h	equ	0xFDA
  5239                           fsr2l	equ	0xFD9
  5240                           status	equ	0xFD8
  5241                           
  5242 ;; *************** function _Receive_available *****************
  5243 ;; Defined at:
  5244 ;;		line 122 in file "UART.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;		None
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;		None
  5249 ;; Return value:  Size  Location     Type
  5250 ;;                  2   28[COMRAM] int 
  5251 ;; Registers used:
  5252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5253 ;; Tracked objects:
  5254 ;;		On entry : 0/0
  5255 ;;		On exit  : 0/0
  5256 ;;		Unchanged: 0/0
  5257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5258 ;;      Params:         2       0       0       0       0       0       0
  5259 ;;      Locals:         0       0       0       0       0       0       0
  5260 ;;      Temps:          0       0       0       0       0       0       0
  5261 ;;      Totals:         2       0       0       0       0       0       0
  5262 ;;Total ram usage:        2 bytes
  5263 ;; Hardware stack levels used:    1
  5264 ;; Hardware stack levels required when called:    5
  5265 ;; This function calls:
  5266 ;;		_UART_buff_size
  5267 ;; This function is called by:
  5268 ;;		_SYSTEM_Initialize
  5269 ;;		_CRCcheck
  5270 ;;		_receiveData
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           	psect	text23
  5275  002B90                     __ptext23:
  5276                           	opt stack 0
  5277  002B90                     _Receive_available:
  5278                           	opt stack 23
  5279                           
  5280                           ;UART.c: 123: return UART_buff_size(&input_buffer);
  5281                           
  5282                           ;incstack = 0
  5283  002B90  0E00               	movlw	low _input_buffer
  5284  002B92  6E1B               	movwf	UART_buff_size@_this,c
  5285  002B94  0E03               	movlw	high _input_buffer
  5286  002B96  6E1C               	movwf	UART_buff_size@_this+1,c
  5287  002B98  ECD4  F015         	call	_UART_buff_size	;wreg free
  5288  002B9C  C01B  F01D         	movff	?_UART_buff_size,?_Receive_available
  5289  002BA0  C01C  F01E         	movff	?_UART_buff_size+1,?_Receive_available+1
  5290  002BA4  0012               	return	
  5291  002BA6  0012               	return		;funcret
  5292  002BA8                     __end_of_Receive_available:
  5293                           	opt stack 0
  5294                           tosu	equ	0xFFF
  5295                           tosh	equ	0xFFE
  5296                           tosl	equ	0xFFD
  5297                           pclath	equ	0xFFA
  5298                           tblptru	equ	0xFF8
  5299                           tblptrh	equ	0xFF7
  5300                           tblptrl	equ	0xFF6
  5301                           tablat	equ	0xFF5
  5302                           prodh	equ	0xFF4
  5303                           prodl	equ	0xFF3
  5304                           intcon	equ	0xFF2
  5305                           postinc0	equ	0xFEE
  5306                           wreg	equ	0xFE8
  5307                           indf2	equ	0xFDF
  5308                           postinc2	equ	0xFDE
  5309                           postdec2	equ	0xFDD
  5310                           plusw2	equ	0xFDB
  5311                           fsr2h	equ	0xFDA
  5312                           fsr2l	equ	0xFD9
  5313                           status	equ	0xFD8
  5314                           
  5315 ;; *************** function _UART_buff_size *****************
  5316 ;; Defined at:
  5317 ;;		line 102 in file "UART.c"
  5318 ;; Parameters:    Size  Location     Type
  5319 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  5320 ;;		 -> output_buffer(206), input_buffer(206), 
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;		None
  5323 ;; Return value:  Size  Location     Type
  5324 ;;                  2   26[COMRAM] int 
  5325 ;; Registers used:
  5326 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5327 ;; Tracked objects:
  5328 ;;		On entry : 0/0
  5329 ;;		On exit  : 0/0
  5330 ;;		Unchanged: 0/0
  5331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5332 ;;      Params:         2       0       0       0       0       0       0
  5333 ;;      Locals:         0       0       0       0       0       0       0
  5334 ;;      Temps:          0       0       0       0       0       0       0
  5335 ;;      Totals:         2       0       0       0       0       0       0
  5336 ;;Total ram usage:        2 bytes
  5337 ;; Hardware stack levels used:    1
  5338 ;; Hardware stack levels required when called:    4
  5339 ;; This function calls:
  5340 ;;		Nothing
  5341 ;; This function is called by:
  5342 ;;		_Receive_available
  5343 ;; This function uses a non-reentrant model
  5344 ;;
  5345                           
  5346                           	psect	text24
  5347  002BA8                     __ptext24:
  5348                           	opt stack 0
  5349  002BA8                     _UART_buff_size:
  5350                           	opt stack 23
  5351                           
  5352                           ;UART.c: 103: return (_this->count);
  5353                           
  5354                           ;incstack = 0
  5355  002BA8  EE20 F0CC          	lfsr	2,204
  5356  002BAC  501B               	movf	UART_buff_size@_this,w,c
  5357  002BAE  26D9               	addwf	fsr2l,f,c
  5358  002BB0  501C               	movf	UART_buff_size@_this+1,w,c
  5359  002BB2  22DA               	addwfc	fsr2h,f,c
  5360  002BB4  CFDE F01B          	movff	postinc2,?_UART_buff_size
  5361  002BB8  CFDD F01C          	movff	postdec2,?_UART_buff_size+1
  5362  002BBC  0012               	return	
  5363  002BBE  0012               	return		;funcret
  5364  002BC0                     __end_of_UART_buff_size:
  5365                           	opt stack 0
  5366                           tosu	equ	0xFFF
  5367                           tosh	equ	0xFFE
  5368                           tosl	equ	0xFFD
  5369                           pclath	equ	0xFFA
  5370                           tblptru	equ	0xFF8
  5371                           tblptrh	equ	0xFF7
  5372                           tblptrl	equ	0xFF6
  5373                           tablat	equ	0xFF5
  5374                           prodh	equ	0xFF4
  5375                           prodl	equ	0xFF3
  5376                           intcon	equ	0xFF2
  5377                           postinc0	equ	0xFEE
  5378                           wreg	equ	0xFE8
  5379                           indf2	equ	0xFDF
  5380                           postinc2	equ	0xFDE
  5381                           postdec2	equ	0xFDD
  5382                           plusw2	equ	0xFDB
  5383                           fsr2h	equ	0xFDA
  5384                           fsr2l	equ	0xFD9
  5385                           status	equ	0xFD8
  5386                           
  5387 ;; *************** function _CRC8 *****************
  5388 ;; Defined at:
  5389 ;;		line 34 in file "FastTransfer.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;  data            2   26[COMRAM] PTR const unsigned char 
  5392 ;;		 -> CRCcheck@arrayHolder(3), receiveData@holder_2257(3), receiveData@holder(3), rx_buffer(200), 
  5393 ;;		 -> ring_buffer(206), NULL(0), 
  5394 ;;  len             1   28[COMRAM] unsigned char 
  5395 ;; Auto vars:     Size  Location     Type
  5396 ;;  sum             1   29[COMRAM] unsigned char 
  5397 ;;  tempI           1   31[COMRAM] unsigned char 
  5398 ;;  extract         1   30[COMRAM] unsigned char 
  5399 ;;  crc             1   32[COMRAM] unsigned char 
  5400 ;; Return value:  Size  Location     Type
  5401 ;;                  1    wreg      unsigned char 
  5402 ;; Registers used:
  5403 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5404 ;; Tracked objects:
  5405 ;;		On entry : 0/0
  5406 ;;		On exit  : 0/0
  5407 ;;		Unchanged: 0/0
  5408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5409 ;;      Params:         3       0       0       0       0       0       0
  5410 ;;      Locals:         4       0       0       0       0       0       0
  5411 ;;      Temps:          0       0       0       0       0       0       0
  5412 ;;      Totals:         7       0       0       0       0       0       0
  5413 ;;Total ram usage:        7 bytes
  5414 ;; Hardware stack levels used:    1
  5415 ;; Hardware stack levels required when called:    4
  5416 ;; This function calls:
  5417 ;;		Nothing
  5418 ;; This function is called by:
  5419 ;;		_sendData
  5420 ;;		_receiveData
  5421 ;;		_CRCcheck
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           	psect	text25
  5426  0026C8                     __ptext25:
  5427                           	opt stack 0
  5428  0026C8                     _CRC8:
  5429                           	opt stack 23
  5430                           
  5431                           ;FastTransfer.c: 35: unsigned char crc = 0x00;
  5432                           
  5433                           ;incstack = 0
  5434  0026C8  0E00               	movlw	0
  5435  0026CA  6E21               	movwf	CRC8@crc,c
  5436                           
  5437                           ;FastTransfer.c: 36: while (len--) {
  5438  0026CC  D01F               	goto	l4554
  5439  0026CE                     l4538:
  5440                           
  5441                           ;FastTransfer.c: 37: unsigned char extract = *data++;
  5442  0026CE  C01B  FFD9         	movff	CRC8@data,fsr2l
  5443  0026D2  C01C  FFDA         	movff	CRC8@data+1,fsr2h
  5444  0026D6  50DF               	movf	indf2,w,c
  5445  0026D8  6E1F               	movwf	CRC8@extract,c
  5446  0026DA  4A1B               	infsnz	CRC8@data,f,c
  5447  0026DC  2A1C               	incf	CRC8@data+1,f,c
  5448                           
  5449                           ;FastTransfer.c: 38: unsigned char tempI;
  5450                           ;FastTransfer.c: 39: for (tempI = 8; tempI; tempI--) {
  5451  0026DE  0E08               	movlw	8
  5452  0026E0  6E20               	movwf	CRC8@tempI,c
  5453  0026E2  D00F               	goto	l4552
  5454  0026E4                     l4544:
  5455                           
  5456                           ;FastTransfer.c: 40: unsigned char sum = (crc ^ extract) & 0x01;
  5457  0026E4  5021               	movf	CRC8@crc,w,c
  5458  0026E6  181F               	xorwf	CRC8@extract,w,c
  5459  0026E8  0B01               	andlw	1
  5460  0026EA  6E1E               	movwf	CRC8@sum,c
  5461                           
  5462                           ;FastTransfer.c: 41: crc >>= 1;
  5463  0026EC  90D8               	bcf	status,0,c
  5464  0026EE  3221               	rrcf	CRC8@crc,f,c
  5465                           
  5466                           ;FastTransfer.c: 42: if (sum) {
  5467  0026F0  501E               	movf	CRC8@sum,w,c
  5468  0026F2  B4D8               	btfsc	status,2,c
  5469  0026F4  D002               	goto	l774
  5470                           
  5471                           ;FastTransfer.c: 43: crc ^= 0x8C;
  5472  0026F6  0E8C               	movlw	140
  5473  0026F8  1A21               	xorwf	CRC8@crc,f,c
  5474  0026FA                     l774:
  5475                           
  5476                           ;FastTransfer.c: 44: }
  5477                           ;FastTransfer.c: 45: extract >>= 1;
  5478  0026FA  90D8               	bcf	status,0,c
  5479  0026FC  321F               	rrcf	CRC8@extract,f,c
  5480  0026FE  0620               	decf	CRC8@tempI,f,c
  5481  002700  D000               	goto	l4552
  5482  002702                     l4552:
  5483  002702  5020               	movf	CRC8@tempI,w,c
  5484  002704  B4D8               	btfsc	status,2,c
  5485  002706  D002               	goto	l4554
  5486  002708  D7ED               	goto	l4544
  5487  00270A  D000               	goto	l4554
  5488  00270C                     l4554:
  5489  00270C  061D               	decf	CRC8@len,f,c
  5490  00270E  281D               	incf	CRC8@len,w,c
  5491  002710  A4D8               	btfss	status,2,c
  5492  002712  D7DD               	goto	l4538
  5493                           
  5494                           ;FastTransfer.c: 46: }
  5495                           ;FastTransfer.c: 47: }
  5496                           ;FastTransfer.c: 48: return crc;
  5497  002714  5021               	movf	CRC8@crc,w,c
  5498  002716  0012               	return	
  5499  002718  0012               	return		;funcret
  5500  00271A                     __end_of_CRC8:
  5501                           	opt stack 0
  5502                           tosu	equ	0xFFF
  5503                           tosh	equ	0xFFE
  5504                           tosl	equ	0xFFD
  5505                           pclath	equ	0xFFA
  5506                           tblptru	equ	0xFF8
  5507                           tblptrh	equ	0xFF7
  5508                           tblptrl	equ	0xFF6
  5509                           tablat	equ	0xFF5
  5510                           prodh	equ	0xFF4
  5511                           prodl	equ	0xFF3
  5512                           intcon	equ	0xFF2
  5513                           postinc0	equ	0xFEE
  5514                           wreg	equ	0xFE8
  5515                           indf2	equ	0xFDF
  5516                           postinc2	equ	0xFDE
  5517                           postdec2	equ	0xFDD
  5518                           plusw2	equ	0xFDB
  5519                           fsr2h	equ	0xFDA
  5520                           fsr2l	equ	0xFD9
  5521                           status	equ	0xFD8
  5522                           
  5523 ;; *************** function _handleIndicators *****************
  5524 ;; Defined at:
  5525 ;;		line 31 in file "Communications.c"
  5526 ;; Parameters:    Size  Location     Type
  5527 ;;  receivedIndi    2   31[COMRAM] int 
  5528 ;; Auto vars:     Size  Location     Type
  5529 ;;  i               2   36[COMRAM] int 
  5530 ;; Return value:  Size  Location     Type
  5531 ;;		None               void
  5532 ;; Registers used:
  5533 ;;		wreg, status,2, status,0, cstack
  5534 ;; Tracked objects:
  5535 ;;		On entry : 0/0
  5536 ;;		On exit  : 0/0
  5537 ;;		Unchanged: 0/0
  5538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5539 ;;      Params:         2       0       0       0       0       0       0
  5540 ;;      Locals:         2       0       0       0       0       0       0
  5541 ;;      Temps:          3       0       0       0       0       0       0
  5542 ;;      Totals:         7       0       0       0       0       0       0
  5543 ;;Total ram usage:        7 bytes
  5544 ;; Hardware stack levels used:    1
  5545 ;; Hardware stack levels required when called:    5
  5546 ;; This function calls:
  5547 ;;		_SetLEDOut
  5548 ;; This function is called by:
  5549 ;;		_updateComms
  5550 ;; This function uses a non-reentrant model
  5551 ;;
  5552                           
  5553                           	psect	text26
  5554  0023DA                     __ptext26:
  5555                           	opt stack 0
  5556  0023DA                     _handleIndicators:
  5557                           	opt stack 24
  5558                           
  5559                           ;Communications.c: 32: static int oldIndicators = 0;
  5560                           ;Communications.c: 33: if (receivedIndicators != oldIndicators) {
  5561                           
  5562                           ;incstack = 0
  5563  0023DA  0100               	movlb	0	; () banked
  5564  0023DC  51B1               	movf	handleIndicators@oldIndicators& (0+255),w,b
  5565  0023DE  1820               	xorwf	handleIndicators@receivedIndicators,w,c
  5566  0023E0  E105               	bnz	u3820
  5567  0023E2  0100               	movlb	0	; () banked
  5568  0023E4  51B2               	movf	(handleIndicators@oldIndicators+1)& (0+255),w,b
  5569  0023E6  1821               	xorwf	handleIndicators@receivedIndicators+1,w,c
  5570  0023E8  B4D8               	btfsc	status,2,c
  5571  0023EA  0012               	return	
  5572  0023EC                     u3820:
  5573                           
  5574                           ; BSR set to: 0
  5575                           ;Communications.c: 34: int i = 0;
  5576  0023EC  0E00               	movlw	0
  5577  0023EE  6E26               	movwf	handleIndicators@i+1,c
  5578  0023F0  0E00               	movlw	0
  5579  0023F2  6E25               	movwf	handleIndicators@i,c
  5580                           
  5581                           ;Communications.c: 35: for (i = 0; i < 6; i++) {
  5582  0023F4  0E00               	movlw	0
  5583  0023F6  6E26               	movwf	handleIndicators@i+1,c
  5584  0023F8  0E00               	movlw	0
  5585  0023FA  6E25               	movwf	handleIndicators@i,c
  5586                           
  5587                           ; BSR set to: 0
  5588  0023FC  BE26               	btfsc	handleIndicators@i+1,7,c
  5589  0023FE  D008               	goto	l3802
  5590  002400  5026               	movf	handleIndicators@i+1,w,c
  5591  002402  E123               	bnz	l695
  5592  002404  0E06               	movlw	6
  5593  002406  5C25               	subwf	handleIndicators@i,w,c
  5594  002408  B0D8               	btfsc	status,0,c
  5595  00240A  D01F               	goto	l695
  5596  00240C  D001               	goto	l3802
  5597                           
  5598                           ; BSR set to: 0
  5599  00240E  D01D               	goto	l695
  5600  002410                     l3802:
  5601                           
  5602                           ;Communications.c: 36: SetLEDOut(i, ((receivedIndicators >> i)&0x01));
  5603  002410  C025  F01B         	movff	handleIndicators@i,SetLEDOut@lednum
  5604  002414  C026  F01C         	movff	handleIndicators@i+1,SetLEDOut@lednum+1
  5605  002418  C025  F022         	movff	handleIndicators@i,??_handleIndicators
  5606  00241C  C020  F023         	movff	handleIndicators@receivedIndicators,??_handleIndicators+1
  5607  002420  C021  F024         	movff	handleIndicators@receivedIndicators+1,??_handleIndicators+2
  5608  002424  2A22               	incf	??_handleIndicators,f,c
  5609  002426  D003               	goto	u3844
  5610  002428                     u3845:
  5611  002428  3424               	rlcf	??_handleIndicators+2,w,c
  5612  00242A  3224               	rrcf	??_handleIndicators+2,f,c
  5613  00242C  3223               	rrcf	??_handleIndicators+1,f,c
  5614  00242E                     u3844:
  5615  00242E  2E22               	decfsz	??_handleIndicators,f,c
  5616  002430  D7FB               	goto	u3845
  5617  002432  5023               	movf	??_handleIndicators+1,w,c
  5618  002434  0B01               	andlw	1
  5619  002436  6E1D               	movwf	SetLEDOut@state,c
  5620  002438  ECA5  F011         	call	_SetLEDOut	;wreg free
  5621  00243C  4A25               	infsnz	handleIndicators@i,f,c
  5622  00243E  2A26               	incf	handleIndicators@i+1,f,c
  5623  002440  BE26               	btfsc	handleIndicators@i+1,7,c
  5624  002442  D7E6               	goto	l3802
  5625  002444  5026               	movf	handleIndicators@i+1,w,c
  5626  002446  E101               	bnz	u3850
  5627  002448  D7DD               	goto	L2
  5628  00244A                     u3850:
  5629  00244A                     l695:
  5630                           
  5631                           ;Communications.c: 37: }
  5632                           ;Communications.c: 38: oldIndicators = receivedIndicators;
  5633  00244A  C020  F0B1         	movff	handleIndicators@receivedIndicators,handleIndicators@oldIndicators
  5634  00244E  C021  F0B2         	movff	handleIndicators@receivedIndicators+1,handleIndicators@oldIndicators+1
  5635  002452  0012               	return	
  5636  002454  0012               	return		;funcret
  5637  002456                     __end_of_handleIndicators:
  5638                           	opt stack 0
  5639                           tosu	equ	0xFFF
  5640                           tosh	equ	0xFFE
  5641                           tosl	equ	0xFFD
  5642                           pclath	equ	0xFFA
  5643                           tblptru	equ	0xFF8
  5644                           tblptrh	equ	0xFF7
  5645                           tblptrl	equ	0xFF6
  5646                           tablat	equ	0xFF5
  5647                           prodh	equ	0xFF4
  5648                           prodl	equ	0xFF3
  5649                           intcon	equ	0xFF2
  5650                           postinc0	equ	0xFEE
  5651                           wreg	equ	0xFE8
  5652                           indf2	equ	0xFDF
  5653                           postinc2	equ	0xFDE
  5654                           postdec2	equ	0xFDD
  5655                           plusw2	equ	0xFDB
  5656                           fsr2h	equ	0xFDA
  5657                           fsr2l	equ	0xFD9
  5658                           status	equ	0xFD8
  5659                           
  5660 ;; *************** function _SetLEDOut *****************
  5661 ;; Defined at:
  5662 ;;		line 13 in file "IO.c"
  5663 ;; Parameters:    Size  Location     Type
  5664 ;;  lednum          2   26[COMRAM] int 
  5665 ;;  state           1   28[COMRAM] unsigned char 
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;		None
  5668 ;; Return value:  Size  Location     Type
  5669 ;;		None               void
  5670 ;; Registers used:
  5671 ;;		wreg, status,2, status,0
  5672 ;; Tracked objects:
  5673 ;;		On entry : 0/0
  5674 ;;		On exit  : 0/0
  5675 ;;		Unchanged: 0/0
  5676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5677 ;;      Params:         3       0       0       0       0       0       0
  5678 ;;      Locals:         0       0       0       0       0       0       0
  5679 ;;      Temps:          2       0       0       0       0       0       0
  5680 ;;      Totals:         5       0       0       0       0       0       0
  5681 ;;Total ram usage:        5 bytes
  5682 ;; Hardware stack levels used:    1
  5683 ;; Hardware stack levels required when called:    4
  5684 ;; This function calls:
  5685 ;;		Nothing
  5686 ;; This function is called by:
  5687 ;;		_handleIndicators
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690                           
  5691                           	psect	text27
  5692  00234A                     __ptext27:
  5693                           	opt stack 0
  5694  00234A                     _SetLEDOut:
  5695                           	opt stack 24
  5696                           
  5697                           ;IO.c: 14: switch (lednum) {
  5698                           
  5699                           ;incstack = 0
  5700  00234A  D02A               	goto	l3280
  5701  00234C                     l3266:
  5702                           
  5703                           ;IO.c: 16: if (state)do { LATB3 = 1; } while(0);
  5704  00234C  501D               	movf	SetLEDOut@state,w,c
  5705  00234E  B4D8               	btfsc	status,2,c
  5706  002350  D002               	goto	l555
  5707  002352  868A               	bsf	3978,3,c	;volatile
  5708  002354  0012               	return	
  5709  002356                     l555:
  5710  002356  968A               	bcf	3978,3,c	;volatile
  5711                           
  5712                           ;IO.c: 18: break;
  5713  002358  0012               	return	
  5714  00235A                     l3268:
  5715                           
  5716                           ;IO.c: 20: if (state)do { LATB5 = 1; } while(0);
  5717  00235A  501D               	movf	SetLEDOut@state,w,c
  5718  00235C  B4D8               	btfsc	status,2,c
  5719  00235E  D002               	goto	l563
  5720  002360  8A8A               	bsf	3978,5,c	;volatile
  5721  002362  0012               	return	
  5722  002364                     l563:
  5723  002364  9A8A               	bcf	3978,5,c	;volatile
  5724                           
  5725                           ;IO.c: 22: break;
  5726  002366  0012               	return	
  5727  002368                     l3270:
  5728                           
  5729                           ;IO.c: 24: if (state)do { LATD1 = 1; } while(0);
  5730  002368  501D               	movf	SetLEDOut@state,w,c
  5731  00236A  B4D8               	btfsc	status,2,c
  5732  00236C  D002               	goto	l570
  5733  00236E  828C               	bsf	3980,1,c	;volatile
  5734  002370  0012               	return	
  5735  002372                     l570:
  5736  002372  928C               	bcf	3980,1,c	;volatile
  5737                           
  5738                           ;IO.c: 26: break;
  5739  002374  0012               	return	
  5740  002376                     l3272:
  5741                           
  5742                           ;IO.c: 28: if (state)do { LATE2 = 1; } while(0);
  5743  002376  501D               	movf	SetLEDOut@state,w,c
  5744  002378  B4D8               	btfsc	status,2,c
  5745  00237A  D002               	goto	l577
  5746  00237C  848D               	bsf	3981,2,c	;volatile
  5747  00237E  0012               	return	
  5748  002380                     l577:
  5749  002380  948D               	bcf	3981,2,c	;volatile
  5750                           
  5751                           ;IO.c: 30: break;
  5752  002382  0012               	return	
  5753  002384                     l3274:
  5754                           
  5755                           ;IO.c: 32: if (state)do { LATE1 = 1; } while(0);
  5756  002384  501D               	movf	SetLEDOut@state,w,c
  5757  002386  B4D8               	btfsc	status,2,c
  5758  002388  D002               	goto	l584
  5759  00238A  828D               	bsf	3981,1,c	;volatile
  5760  00238C  0012               	return	
  5761  00238E                     l584:
  5762  00238E  928D               	bcf	3981,1,c	;volatile
  5763                           
  5764                           ;IO.c: 34: break;
  5765  002390  0012               	return	
  5766  002392                     l3276:
  5767                           
  5768                           ;IO.c: 36: if (state)do { LATE1 = 1; } while(0);
  5769  002392  501D               	movf	SetLEDOut@state,w,c
  5770  002394  B4D8               	btfsc	status,2,c
  5771  002396  D002               	goto	l591
  5772  002398  828D               	bsf	3981,1,c	;volatile
  5773  00239A  0012               	return	
  5774  00239C                     l591:
  5775  00239C  928D               	bcf	3981,1,c	;volatile
  5776                           
  5777                           ;IO.c: 39: }
  5778                           
  5779                           ;IO.c: 38: break;
  5780  00239E  0012               	return	
  5781  0023A0                     l3280:
  5782  0023A0  C01B  F01E         	movff	SetLEDOut@lednum,??_SetLEDOut
  5783  0023A4  C01C  F01F         	movff	SetLEDOut@lednum+1,??_SetLEDOut+1
  5784                           
  5785                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5786                           ; Switch size 1, requested type "space"
  5787                           ; Number of cases is 1, Range of values is 0 to 0
  5788                           ; switch strategies available:
  5789                           ; Name         Instructions Cycles
  5790                           ; simple_byte            4     3 (average)
  5791                           ;	Chosen strategy is simple_byte
  5792  0023A8  501F               	movf	??_SetLEDOut+1,w,c
  5793  0023AA  0A00               	xorlw	0	; case 0
  5794  0023AC  A4D8               	btfss	status,2,c
  5795  0023AE  0012               	return	
  5796                           
  5797                           ; Switch size 1, requested type "space"
  5798                           ; Number of cases is 6, Range of values is 0 to 5
  5799                           ; switch strategies available:
  5800                           ; Name         Instructions Cycles
  5801                           ; simple_byte           19    10 (average)
  5802                           ;	Chosen strategy is simple_byte
  5803  0023B0  501E               	movf	??_SetLEDOut,w,c
  5804  0023B2  0A00               	xorlw	0	; case 0
  5805  0023B4  B4D8               	btfsc	status,2,c
  5806  0023B6  D7CA               	goto	l3266
  5807  0023B8  0A01               	xorlw	1	; case 1
  5808  0023BA  B4D8               	btfsc	status,2,c
  5809  0023BC  D7CE               	goto	l3268
  5810  0023BE  0A03               	xorlw	3	; case 2
  5811  0023C0  B4D8               	btfsc	status,2,c
  5812  0023C2  D7D2               	goto	l3270
  5813  0023C4  0A01               	xorlw	1	; case 3
  5814  0023C6  B4D8               	btfsc	status,2,c
  5815  0023C8  D7D6               	goto	l3272
  5816  0023CA  0A07               	xorlw	7	; case 4
  5817  0023CC  B4D8               	btfsc	status,2,c
  5818  0023CE  D7DA               	goto	l3274
  5819  0023D0  0A01               	xorlw	1	; case 5
  5820  0023D2  A4D8               	btfss	status,2,c
  5821  0023D4  0012               	return	
  5822  0023D6  D7DD               	goto	l3276
  5823  0023D8  0012               	return		;funcret
  5824  0023DA                     __end_of_SetLEDOut:
  5825                           	opt stack 0
  5826                           tosu	equ	0xFFF
  5827                           tosh	equ	0xFFE
  5828                           tosl	equ	0xFFD
  5829                           pclath	equ	0xFFA
  5830                           tblptru	equ	0xFF8
  5831                           tblptrh	equ	0xFF7
  5832                           tblptrl	equ	0xFF6
  5833                           tablat	equ	0xFF5
  5834                           prodh	equ	0xFF4
  5835                           prodl	equ	0xFF3
  5836                           intcon	equ	0xFF2
  5837                           postinc0	equ	0xFEE
  5838                           wreg	equ	0xFE8
  5839                           indf2	equ	0xFDF
  5840                           postinc2	equ	0xFDE
  5841                           postdec2	equ	0xFDD
  5842                           plusw2	equ	0xFDB
  5843                           fsr2h	equ	0xFDA
  5844                           fsr2l	equ	0xFD9
  5845                           status	equ	0xFD8
  5846                           
  5847 ;; *************** function _TBbarGraphs *****************
  5848 ;; Defined at:
  5849 ;;		line 43 in file "Communications.c"
  5850 ;; Parameters:    Size  Location     Type
  5851 ;;  t               2   26[COMRAM] int 
  5852 ;;  b               2   28[COMRAM] int 
  5853 ;; Auto vars:     Size  Location     Type
  5854 ;;		None
  5855 ;; Return value:  Size  Location     Type
  5856 ;;		None               void
  5857 ;; Registers used:
  5858 ;;		None
  5859 ;; Tracked objects:
  5860 ;;		On entry : 0/0
  5861 ;;		On exit  : 0/0
  5862 ;;		Unchanged: 0/0
  5863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5864 ;;      Params:         4       0       0       0       0       0       0
  5865 ;;      Locals:         0       0       0       0       0       0       0
  5866 ;;      Temps:          0       0       0       0       0       0       0
  5867 ;;      Totals:         4       0       0       0       0       0       0
  5868 ;;Total ram usage:        4 bytes
  5869 ;; Hardware stack levels used:    1
  5870 ;; Hardware stack levels required when called:    4
  5871 ;; This function calls:
  5872 ;;		Nothing
  5873 ;; This function is called by:
  5874 ;;		_updateComms
  5875 ;; This function uses a non-reentrant model
  5876 ;;
  5877                           
  5878                           	psect	text28
  5879  002BF0                     __ptext28:
  5880                           	opt stack 0
  5881  002BF0                     _TBbarGraphs:
  5882                           	opt stack 25
  5883                           
  5884                           ;Communications.c: 44: throttle = t;
  5885                           
  5886                           ;incstack = 0
  5887  002BF0  C01B  F0AD         	movff	TBbarGraphs@t,_throttle
  5888  002BF4  C01C  F0AE         	movff	TBbarGraphs@t+1,_throttle+1
  5889                           
  5890                           ;Communications.c: 45: brake = b;
  5891  002BF8  C01D  F09F         	movff	TBbarGraphs@b,_brake
  5892  002BFC  C01E  F0A0         	movff	TBbarGraphs@b+1,_brake+1
  5893  002C00  0012               	return		;funcret
  5894  002C02                     __end_of_TBbarGraphs:
  5895                           	opt stack 0
  5896                           tosu	equ	0xFFF
  5897                           tosh	equ	0xFFE
  5898                           tosl	equ	0xFFD
  5899                           pclath	equ	0xFFA
  5900                           tblptru	equ	0xFF8
  5901                           tblptrh	equ	0xFF7
  5902                           tblptrl	equ	0xFF6
  5903                           tablat	equ	0xFF5
  5904                           prodh	equ	0xFF4
  5905                           prodl	equ	0xFF3
  5906                           intcon	equ	0xFF2
  5907                           postinc0	equ	0xFEE
  5908                           wreg	equ	0xFE8
  5909                           indf2	equ	0xFDF
  5910                           postinc2	equ	0xFDE
  5911                           postdec2	equ	0xFDD
  5912                           plusw2	equ	0xFDB
  5913                           fsr2h	equ	0xFDA
  5914                           fsr2l	equ	0xFD9
  5915                           status	equ	0xFD8
  5916                           
  5917 ;; *************** function ___lwtoft *****************
  5918 ;; Defined at:
  5919 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;  c               2   34[COMRAM] unsigned int 
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;		None
  5924 ;; Return value:  Size  Location     Type
  5925 ;;                  3   34[COMRAM] float 
  5926 ;; Registers used:
  5927 ;;		wreg, status,2, status,0, cstack
  5928 ;; Tracked objects:
  5929 ;;		On entry : 0/0
  5930 ;;		On exit  : 0/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5933 ;;      Params:         3       0       0       0       0       0       0
  5934 ;;      Locals:         0       0       0       0       0       0       0
  5935 ;;      Temps:          0       0       0       0       0       0       0
  5936 ;;      Totals:         3       0       0       0       0       0       0
  5937 ;;Total ram usage:        3 bytes
  5938 ;; Hardware stack levels used:    1
  5939 ;; Hardware stack levels required when called:    5
  5940 ;; This function calls:
  5941 ;;		___ftpack
  5942 ;; This function is called by:
  5943 ;;		_main
  5944 ;; This function uses a non-reentrant model
  5945 ;;
  5946                           
  5947                           	psect	text29
  5948  002ADA                     __ptext29:
  5949                           	opt stack 0
  5950  002ADA                     ___lwtoft:
  5951                           	opt stack 25
  5952                           
  5953                           ;incstack = 0
  5954  002ADA  C023  F01B         	movff	___lwtoft@c,___ftpack@arg
  5955  002ADE  C024  F01C         	movff	___lwtoft@c+1,___ftpack@arg+1
  5956  002AE2  6A1D               	clrf	___ftpack@arg+2,c
  5957  002AE4  0E8E               	movlw	142
  5958  002AE6  6E1E               	movwf	___ftpack@exp,c
  5959  002AE8  0E00               	movlw	0
  5960  002AEA  6E1F               	movwf	___ftpack@sign,c
  5961  002AEC  ECAD  F00E         	call	___ftpack	;wreg free
  5962  002AF0  C01B  F023         	movff	?___ftpack,?___lwtoft
  5963  002AF4  C01C  F024         	movff	?___ftpack+1,?___lwtoft+1
  5964  002AF8  C01D  F025         	movff	?___ftpack+2,?___lwtoft+2
  5965  002AFC  0012               	return	
  5966  002AFE  0012               	return		;funcret
  5967  002B00                     __end_of___lwtoft:
  5968                           	opt stack 0
  5969                           tosu	equ	0xFFF
  5970                           tosh	equ	0xFFE
  5971                           tosl	equ	0xFFD
  5972                           pclath	equ	0xFFA
  5973                           tblptru	equ	0xFF8
  5974                           tblptrh	equ	0xFF7
  5975                           tblptrl	equ	0xFF6
  5976                           tablat	equ	0xFF5
  5977                           prodh	equ	0xFF4
  5978                           prodl	equ	0xFF3
  5979                           intcon	equ	0xFF2
  5980                           postinc0	equ	0xFEE
  5981                           wreg	equ	0xFE8
  5982                           indf2	equ	0xFDF
  5983                           postinc2	equ	0xFDE
  5984                           postdec2	equ	0xFDD
  5985                           plusw2	equ	0xFDB
  5986                           fsr2h	equ	0xFDA
  5987                           fsr2l	equ	0xFD9
  5988                           status	equ	0xFD8
  5989                           
  5990 ;; *************** function ___fttol *****************
  5991 ;; Defined at:
  5992 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  5993 ;; Parameters:    Size  Location     Type
  5994 ;;  f1              3   12[BANK0 ] float 
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;  lval            4   22[BANK0 ] unsigned long 
  5997 ;;  exp1            1   26[BANK0 ] unsigned char 
  5998 ;;  sign1           1   21[BANK0 ] unsigned char 
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  4   12[BANK0 ] long 
  6001 ;; Registers used:
  6002 ;;		wreg, status,2, status,0
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6008 ;;      Params:         0       4       0       0       0       0       0
  6009 ;;      Locals:         0       6       0       0       0       0       0
  6010 ;;      Temps:          0       5       0       0       0       0       0
  6011 ;;      Totals:         0      15       0       0       0       0       0
  6012 ;;Total ram usage:       15 bytes
  6013 ;; Hardware stack levels used:    1
  6014 ;; Hardware stack levels required when called:    4
  6015 ;; This function calls:
  6016 ;;		Nothing
  6017 ;; This function is called by:
  6018 ;;		_main
  6019 ;; This function uses a non-reentrant model
  6020 ;;
  6021                           
  6022                           	psect	text30
  6023  001282                     __ptext30:
  6024                           	opt stack 0
  6025  001282                     ___fttol:
  6026                           	opt stack 26
  6027                           
  6028                           ;incstack = 0
  6029  001282  C0E1  F0E3         	movff	___fttol@f1+2,??___fttol
  6030  001286  0100               	movlb	0	; () banked
  6031  001288  6BE4               	clrf	(??___fttol+1)& (0+255),b
  6032  00128A  6BE5               	clrf	(??___fttol+2)& (0+255),b
  6033  00128C  0100               	movlb	0	; () banked
  6034  00128E  35E0               	rlcf	(___fttol@f1+1)& (0+255),w,b
  6035  001290  0100               	movlb	0	; () banked
  6036  001292  37E3               	rlcf	??___fttol& (0+255),f,b
  6037  001294  E301               	bnc	u6401
  6038  001296  81E4               	bsf	(??___fttol+1)& (0+255),0,b
  6039  001298                     u6401:
  6040  001298  0100               	movlb	0	; () banked
  6041  00129A  51E3               	movf	??___fttol& (0+255),w,b
  6042  00129C  0100               	movlb	0	; () banked
  6043  00129E  6FED               	movwf	___fttol@exp1& (0+255),b
  6044  0012A0  0100               	movlb	0	; () banked
  6045  0012A2  51ED               	movf	___fttol@exp1& (0+255),w,b
  6046  0012A4  A4D8               	btfss	status,2,c
  6047  0012A6  D00A               	goto	l5392
  6048                           
  6049                           ; BSR set to: 0
  6050  0012A8  0E00               	movlw	0
  6051  0012AA  0100               	movlb	0	; () banked
  6052  0012AC  6FDF               	movwf	?___fttol& (0+255),b
  6053  0012AE  0E00               	movlw	0
  6054  0012B0  6FE0               	movwf	(?___fttol+1)& (0+255),b
  6055  0012B2  0E00               	movlw	0
  6056  0012B4  6FE1               	movwf	(?___fttol+2)& (0+255),b
  6057  0012B6  0E00               	movlw	0
  6058  0012B8  6FE2               	movwf	(?___fttol+3)& (0+255),b
  6059                           
  6060                           ; BSR set to: 0
  6061  0012BA  0012               	return	
  6062  0012BC                     l5392:
  6063                           
  6064                           ; BSR set to: 0
  6065  0012BC  0E17               	movlw	23
  6066  0012BE  0100               	movlb	0	; () banked
  6067  0012C0  6FE3               	movwf	??___fttol& (0+255),b
  6068  0012C2  C0DF  F0E4         	movff	___fttol@f1,??___fttol+1
  6069  0012C6  C0E0  F0E5         	movff	___fttol@f1+1,??___fttol+2
  6070  0012CA  C0E1  F0E6         	movff	___fttol@f1+2,??___fttol+3
  6071  0012CE  0100               	movlb	0	; () banked
  6072  0012D0  29E3               	incf	??___fttol& (0+255),w,b
  6073  0012D2  0100               	movlb	0	; () banked
  6074  0012D4  6FE7               	movwf	(??___fttol+4)& (0+255),b
  6075  0012D6  D005               	goto	u6420
  6076  0012D8                     u6425:
  6077  0012D8  0100               	movlb	0	; () banked
  6078  0012DA  90D8               	bcf	status,0,c
  6079  0012DC  33E6               	rrcf	(??___fttol+3)& (0+255),f,b
  6080  0012DE  33E5               	rrcf	(??___fttol+2)& (0+255),f,b
  6081  0012E0  33E4               	rrcf	(??___fttol+1)& (0+255),f,b
  6082  0012E2                     u6420:
  6083  0012E2  0100               	movlb	0	; () banked
  6084  0012E4  2FE7               	decfsz	(??___fttol+4)& (0+255),f,b
  6085  0012E6  D7F8               	goto	u6425
  6086  0012E8  0100               	movlb	0	; () banked
  6087  0012EA  51E4               	movf	(??___fttol+1)& (0+255),w,b
  6088  0012EC  0100               	movlb	0	; () banked
  6089  0012EE  6FE8               	movwf	___fttol@sign1& (0+255),b
  6090                           
  6091                           ; BSR set to: 0
  6092  0012F0  0100               	movlb	0	; () banked
  6093  0012F2  8FE0               	bsf	(___fttol@f1+1)& (0+255),7,b
  6094                           
  6095                           ; BSR set to: 0
  6096  0012F4  0EFF               	movlw	255
  6097  0012F6  0100               	movlb	0	; () banked
  6098  0012F8  17DF               	andwf	___fttol@f1& (0+255),f,b
  6099  0012FA  0EFF               	movlw	255
  6100  0012FC  0100               	movlb	0	; () banked
  6101  0012FE  17E0               	andwf	(___fttol@f1+1)& (0+255),f,b
  6102  001300  0E00               	movlw	0
  6103  001302  0100               	movlb	0	; () banked
  6104  001304  17E1               	andwf	(___fttol@f1+2)& (0+255),f,b
  6105                           
  6106                           ; BSR set to: 0
  6107  001306  0100               	movlb	0	; () banked
  6108  001308  51DF               	movf	___fttol@f1& (0+255),w,b
  6109  00130A  0100               	movlb	0	; () banked
  6110  00130C  6FE9               	movwf	___fttol@lval& (0+255),b
  6111  00130E  0100               	movlb	0	; () banked
  6112  001310  51E0               	movf	(___fttol@f1+1)& (0+255),w,b
  6113  001312  0100               	movlb	0	; () banked
  6114  001314  6FEA               	movwf	(___fttol@lval+1)& (0+255),b
  6115  001316  0100               	movlb	0	; () banked
  6116  001318  51E1               	movf	(___fttol@f1+2)& (0+255),w,b
  6117  00131A  0100               	movlb	0	; () banked
  6118  00131C  6FEB               	movwf	(___fttol@lval+2)& (0+255),b
  6119  00131E  0100               	movlb	0	; () banked
  6120  001320  6BEC               	clrf	(___fttol@lval+3)& (0+255),b
  6121                           
  6122                           ; BSR set to: 0
  6123  001322  0E8E               	movlw	142
  6124  001324  0100               	movlb	0	; () banked
  6125  001326  5FED               	subwf	___fttol@exp1& (0+255),f,b
  6126                           
  6127                           ; BSR set to: 0
  6128  001328  0100               	movlb	0	; () banked
  6129  00132A  AFED               	btfss	___fttol@exp1& (0+255),7,b
  6130  00132C  D01B               	goto	l5414
  6131                           
  6132                           ; BSR set to: 0
  6133  00132E  0100               	movlb	0	; () banked
  6134  001330  51ED               	movf	___fttol@exp1& (0+255),w,b
  6135  001332  0A80               	xorlw	128
  6136  001334  0F8F               	addlw	143
  6137  001336  B0D8               	btfsc	status,0,c
  6138  001338  D00B               	goto	l5410
  6139                           
  6140                           ; BSR set to: 0
  6141  00133A  0E00               	movlw	0
  6142  00133C  0100               	movlb	0	; () banked
  6143  00133E  6FDF               	movwf	?___fttol& (0+255),b
  6144  001340  0E00               	movlw	0
  6145  001342  6FE0               	movwf	(?___fttol+1)& (0+255),b
  6146  001344  0E00               	movlw	0
  6147  001346  6FE1               	movwf	(?___fttol+2)& (0+255),b
  6148  001348  0E00               	movlw	0
  6149  00134A  6FE2               	movwf	(?___fttol+3)& (0+255),b
  6150                           
  6151                           ; BSR set to: 0
  6152  00134C  0012               	return	
  6153                           
  6154                           ; BSR set to: 0
  6155  00134E  D000               	goto	l5410
  6156  001350                     l5410:
  6157                           
  6158                           ; BSR set to: 0
  6159  001350  0100               	movlb	0	; () banked
  6160  001352  90D8               	bcf	status,0,c
  6161  001354  33EC               	rrcf	(___fttol@lval+3)& (0+255),f,b
  6162  001356  33EB               	rrcf	(___fttol@lval+2)& (0+255),f,b
  6163  001358  33EA               	rrcf	(___fttol@lval+1)& (0+255),f,b
  6164  00135A  33E9               	rrcf	___fttol@lval& (0+255),f,b
  6165                           
  6166                           ; BSR set to: 0
  6167  00135C  0100               	movlb	0	; () banked
  6168  00135E  3FED               	incfsz	___fttol@exp1& (0+255),f,b
  6169  001360  D7F7               	goto	l5410
  6170                           
  6171                           ; BSR set to: 0
  6172  001362  D01F               	goto	l5424
  6173  001364                     l5414:
  6174                           
  6175                           ; BSR set to: 0
  6176  001364  0E17               	movlw	23
  6177  001366  0100               	movlb	0	; () banked
  6178  001368  65ED               	cpfsgt	___fttol@exp1& (0+255),b
  6179  00136A  D014               	goto	l5422
  6180                           
  6181                           ; BSR set to: 0
  6182  00136C  0E00               	movlw	0
  6183  00136E  0100               	movlb	0	; () banked
  6184  001370  6FDF               	movwf	?___fttol& (0+255),b
  6185  001372  0E00               	movlw	0
  6186  001374  6FE0               	movwf	(?___fttol+1)& (0+255),b
  6187  001376  0E00               	movlw	0
  6188  001378  6FE1               	movwf	(?___fttol+2)& (0+255),b
  6189  00137A  0E00               	movlw	0
  6190  00137C  6FE2               	movwf	(?___fttol+3)& (0+255),b
  6191                           
  6192                           ; BSR set to: 0
  6193  00137E  0012               	return	
  6194                           
  6195                           ; BSR set to: 0
  6196  001380  D009               	goto	l5422
  6197  001382                     l5420:
  6198                           
  6199                           ; BSR set to: 0
  6200  001382  0100               	movlb	0	; () banked
  6201  001384  90D8               	bcf	status,0,c
  6202  001386  37E9               	rlcf	___fttol@lval& (0+255),f,b
  6203  001388  37EA               	rlcf	(___fttol@lval+1)& (0+255),f,b
  6204  00138A  37EB               	rlcf	(___fttol@lval+2)& (0+255),f,b
  6205  00138C  37EC               	rlcf	(___fttol@lval+3)& (0+255),f,b
  6206  00138E  0100               	movlb	0	; () banked
  6207  001390  07ED               	decf	___fttol@exp1& (0+255),f,b
  6208  001392  D000               	goto	l5422
  6209  001394                     l5422:
  6210                           
  6211                           ; BSR set to: 0
  6212  001394  0100               	movlb	0	; () banked
  6213  001396  51ED               	movf	___fttol@exp1& (0+255),w,b
  6214  001398  0100               	movlb	0	; () banked
  6215  00139A  B4D8               	btfsc	status,2,c
  6216  00139C  D002               	goto	l5424
  6217  00139E  D7F1               	goto	l5420
  6218                           
  6219                           ; BSR set to: 0
  6220  0013A0  D000               	goto	l5424
  6221  0013A2                     l5424:
  6222                           
  6223                           ; BSR set to: 0
  6224  0013A2  0100               	movlb	0	; () banked
  6225  0013A4  51E8               	movf	___fttol@sign1& (0+255),w,b
  6226  0013A6  0100               	movlb	0	; () banked
  6227  0013A8  B4D8               	btfsc	status,2,c
  6228  0013AA  D00A               	goto	l5428
  6229                           
  6230                           ; BSR set to: 0
  6231  0013AC  0100               	movlb	0	; () banked
  6232  0013AE  1FEC               	comf	(___fttol@lval+3)& (0+255),f,b
  6233  0013B0  1FEB               	comf	(___fttol@lval+2)& (0+255),f,b
  6234  0013B2  1FEA               	comf	(___fttol@lval+1)& (0+255),f,b
  6235  0013B4  6DE9               	negf	___fttol@lval& (0+255),b
  6236  0013B6  0E00               	movlw	0
  6237  0013B8  23EA               	addwfc	(___fttol@lval+1)& (0+255),f,b
  6238  0013BA  23EB               	addwfc	(___fttol@lval+2)& (0+255),f,b
  6239  0013BC  23EC               	addwfc	(___fttol@lval+3)& (0+255),f,b
  6240  0013BE  D000               	goto	l5428
  6241  0013C0                     l5428:
  6242                           
  6243                           ; BSR set to: 0
  6244  0013C0  C0E9  F0DF         	movff	___fttol@lval,?___fttol
  6245  0013C4  C0EA  F0E0         	movff	___fttol@lval+1,?___fttol+1
  6246  0013C8  C0EB  F0E1         	movff	___fttol@lval+2,?___fttol+2
  6247  0013CC  C0EC  F0E2         	movff	___fttol@lval+3,?___fttol+3
  6248  0013D0  0012               	return	
  6249                           
  6250                           ; BSR set to: 0
  6251                           
  6252                           ; BSR set to: 0
  6253  0013D2  0012               	return		;funcret
  6254  0013D4                     __end_of___fttol:
  6255                           	opt stack 0
  6256                           tosu	equ	0xFFF
  6257                           tosh	equ	0xFFE
  6258                           tosl	equ	0xFFD
  6259                           pclath	equ	0xFFA
  6260                           tblptru	equ	0xFF8
  6261                           tblptrh	equ	0xFF7
  6262                           tblptrl	equ	0xFF6
  6263                           tablat	equ	0xFF5
  6264                           prodh	equ	0xFF4
  6265                           prodl	equ	0xFF3
  6266                           intcon	equ	0xFF2
  6267                           postinc0	equ	0xFEE
  6268                           wreg	equ	0xFE8
  6269                           indf2	equ	0xFDF
  6270                           postinc2	equ	0xFDE
  6271                           postdec2	equ	0xFDD
  6272                           plusw2	equ	0xFDB
  6273                           fsr2h	equ	0xFDA
  6274                           fsr2l	equ	0xFD9
  6275                           status	equ	0xFD8
  6276                           
  6277 ;; *************** function ___ftmul *****************
  6278 ;; Defined at:
  6279 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  6280 ;; Parameters:    Size  Location     Type
  6281 ;;  f1              3    0[BANK0 ] float 
  6282 ;;  f2              3    3[BANK0 ] float 
  6283 ;; Auto vars:     Size  Location     Type
  6284 ;;  f3_as_produc    3    7[BANK0 ] unsigned um
  6285 ;;  sign            1   11[BANK0 ] unsigned char 
  6286 ;;  cntr            1   10[BANK0 ] unsigned char 
  6287 ;;  exp             1    6[BANK0 ] unsigned char 
  6288 ;; Return value:  Size  Location     Type
  6289 ;;                  3    0[BANK0 ] float 
  6290 ;; Registers used:
  6291 ;;		wreg, status,2, status,0, cstack
  6292 ;; Tracked objects:
  6293 ;;		On entry : 0/0
  6294 ;;		On exit  : 0/0
  6295 ;;		Unchanged: 0/0
  6296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6297 ;;      Params:         0       6       0       0       0       0       0
  6298 ;;      Locals:         0       6       0       0       0       0       0
  6299 ;;      Temps:          3       0       0       0       0       0       0
  6300 ;;      Totals:         3      12       0       0       0       0       0
  6301 ;;Total ram usage:       15 bytes
  6302 ;; Hardware stack levels used:    1
  6303 ;; Hardware stack levels required when called:    5
  6304 ;; This function calls:
  6305 ;;		___ftpack
  6306 ;; This function is called by:
  6307 ;;		_main
  6308 ;; This function uses a non-reentrant model
  6309 ;;
  6310                           
  6311                           	psect	text31
  6312  001122                     __ptext31:
  6313                           	opt stack 0
  6314  001122                     ___ftmul:
  6315                           	opt stack 25
  6316                           
  6317                           ; BSR set to: 0
  6318                           ;incstack = 0
  6319  001122  C0D5  F026         	movff	___ftmul@f1+2,??___ftmul
  6320  001126  6A27               	clrf	(??___ftmul+1)& (0+255),c
  6321  001128  6A28               	clrf	(??___ftmul+2)& (0+255),c
  6322  00112A  0100               	movlb	0	; () banked
  6323  00112C  35D4               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  6324  00112E  3626               	rlcf	??___ftmul& (0+255),f,c
  6325  001130  E301               	bnc	u6341
  6326  001132  8027               	bsf	(??___ftmul+1)& (0+255),0,c
  6327  001134                     u6341:
  6328  001134  5026               	movf	??___ftmul,w,c
  6329  001136  0100               	movlb	0	; () banked
  6330  001138  6FD9               	movwf	___ftmul@exp& (0+255),b
  6331  00113A  0100               	movlb	0	; () banked
  6332  00113C  51D9               	movf	___ftmul@exp& (0+255),w,b
  6333  00113E  A4D8               	btfss	status,2,c
  6334  001140  D00A               	goto	l5344
  6335                           
  6336                           ; BSR set to: 0
  6337  001142  0E00               	movlw	0
  6338  001144  0100               	movlb	0	; () banked
  6339  001146  6FD3               	movwf	?___ftmul& (0+255),b
  6340  001148  0E00               	movlw	0
  6341  00114A  0100               	movlb	0	; () banked
  6342  00114C  6FD4               	movwf	(?___ftmul+1)& (0+255),b
  6343  00114E  0E00               	movlw	0
  6344  001150  0100               	movlb	0	; () banked
  6345  001152  6FD5               	movwf	(?___ftmul+2)& (0+255),b
  6346                           
  6347                           ; BSR set to: 0
  6348  001154  0012               	return	
  6349  001156                     l5344:
  6350                           
  6351                           ; BSR set to: 0
  6352  001156  C0D8  F026         	movff	___ftmul@f2+2,??___ftmul
  6353  00115A  6A27               	clrf	(??___ftmul+1)& (0+255),c
  6354  00115C  6A28               	clrf	(??___ftmul+2)& (0+255),c
  6355  00115E  0100               	movlb	0	; () banked
  6356  001160  35D7               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  6357  001162  3626               	rlcf	??___ftmul& (0+255),f,c
  6358  001164  E301               	bnc	u6361
  6359  001166  8027               	bsf	(??___ftmul+1)& (0+255),0,c
  6360  001168                     u6361:
  6361  001168  5026               	movf	??___ftmul,w,c
  6362  00116A  0100               	movlb	0	; () banked
  6363  00116C  6FDE               	movwf	___ftmul@sign& (0+255),b
  6364  00116E  0100               	movlb	0	; () banked
  6365  001170  51DE               	movf	___ftmul@sign& (0+255),w,b
  6366  001172  A4D8               	btfss	status,2,c
  6367  001174  D00A               	goto	l5350
  6368                           
  6369                           ; BSR set to: 0
  6370  001176  0E00               	movlw	0
  6371  001178  0100               	movlb	0	; () banked
  6372  00117A  6FD3               	movwf	?___ftmul& (0+255),b
  6373  00117C  0E00               	movlw	0
  6374  00117E  0100               	movlb	0	; () banked
  6375  001180  6FD4               	movwf	(?___ftmul+1)& (0+255),b
  6376  001182  0E00               	movlw	0
  6377  001184  0100               	movlb	0	; () banked
  6378  001186  6FD5               	movwf	(?___ftmul+2)& (0+255),b
  6379                           
  6380                           ; BSR set to: 0
  6381  001188  0012               	return	
  6382  00118A                     l5350:
  6383                           
  6384                           ; BSR set to: 0
  6385  00118A  0100               	movlb	0	; () banked
  6386  00118C  51DE               	movf	___ftmul@sign& (0+255),w,b
  6387  00118E  0F7B               	addlw	123
  6388  001190  0100               	movlb	0	; () banked
  6389  001192  27D9               	addwf	___ftmul@exp& (0+255),f,b
  6390                           
  6391                           ; BSR set to: 0
  6392  001194  C0D5  F0DE         	movff	___ftmul@f1+2,___ftmul@sign
  6393  001198  0100               	movlb	0	; () banked
  6394  00119A  51D8               	movf	(___ftmul@f2+2)& (0+255),w,b
  6395  00119C  0100               	movlb	0	; () banked
  6396  00119E  1BDE               	xorwf	___ftmul@sign& (0+255),f,b
  6397  0011A0  0E80               	movlw	128
  6398  0011A2  0100               	movlb	0	; () banked
  6399  0011A4  17DE               	andwf	___ftmul@sign& (0+255),f,b
  6400                           
  6401                           ; BSR set to: 0
  6402  0011A6  0100               	movlb	0	; () banked
  6403  0011A8  8FD4               	bsf	(___ftmul@f1+1)& (0+255),7,b
  6404                           
  6405                           ; BSR set to: 0
  6406  0011AA  0100               	movlb	0	; () banked
  6407  0011AC  8FD7               	bsf	(___ftmul@f2+1)& (0+255),7,b
  6408                           
  6409                           ; BSR set to: 0
  6410  0011AE  0EFF               	movlw	255
  6411  0011B0  0100               	movlb	0	; () banked
  6412  0011B2  17D6               	andwf	___ftmul@f2& (0+255),f,b
  6413  0011B4  0EFF               	movlw	255
  6414  0011B6  0100               	movlb	0	; () banked
  6415  0011B8  17D7               	andwf	(___ftmul@f2+1)& (0+255),f,b
  6416  0011BA  0E00               	movlw	0
  6417  0011BC  0100               	movlb	0	; () banked
  6418  0011BE  17D8               	andwf	(___ftmul@f2+2)& (0+255),f,b
  6419                           
  6420                           ; BSR set to: 0
  6421  0011C0  0E00               	movlw	0
  6422  0011C2  0100               	movlb	0	; () banked
  6423  0011C4  6FDA               	movwf	___ftmul@f3_as_product& (0+255),b
  6424  0011C6  0E00               	movlw	0
  6425  0011C8  0100               	movlb	0	; () banked
  6426  0011CA  6FDB               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  6427  0011CC  0E00               	movlw	0
  6428  0011CE  0100               	movlb	0	; () banked
  6429  0011D0  6FDC               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  6430                           
  6431                           ; BSR set to: 0
  6432  0011D2  0E07               	movlw	7
  6433  0011D4  0100               	movlb	0	; () banked
  6434  0011D6  6FDD               	movwf	___ftmul@cntr& (0+255),b
  6435  0011D8  D000               	goto	l5364
  6436  0011DA                     l5364:
  6437                           
  6438                           ; BSR set to: 0
  6439  0011DA  0100               	movlb	0	; () banked
  6440  0011DC  A1D3               	btfss	___ftmul@f1& (0+255),0,b
  6441  0011DE  D00D               	goto	l5368
  6442                           
  6443                           ; BSR set to: 0
  6444  0011E0  0100               	movlb	0	; () banked
  6445  0011E2  51D6               	movf	___ftmul@f2& (0+255),w,b
  6446  0011E4  0100               	movlb	0	; () banked
  6447  0011E6  27DA               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6448  0011E8  0100               	movlb	0	; () banked
  6449  0011EA  51D7               	movf	(___ftmul@f2+1)& (0+255),w,b
  6450  0011EC  0100               	movlb	0	; () banked
  6451  0011EE  23DB               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6452  0011F0  0100               	movlb	0	; () banked
  6453  0011F2  51D8               	movf	(___ftmul@f2+2)& (0+255),w,b
  6454  0011F4  0100               	movlb	0	; () banked
  6455  0011F6  23DC               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6456  0011F8  D000               	goto	l5368
  6457  0011FA                     l5368:
  6458                           
  6459                           ; BSR set to: 0
  6460  0011FA  0100               	movlb	0	; () banked
  6461  0011FC  90D8               	bcf	status,0,c
  6462  0011FE  33D5               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6463  001200  33D4               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6464  001202  33D3               	rrcf	___ftmul@f1& (0+255),f,b
  6465  001204  0100               	movlb	0	; () banked
  6466  001206  90D8               	bcf	status,0,c
  6467  001208  37D6               	rlcf	___ftmul@f2& (0+255),f,b
  6468  00120A  37D7               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  6469  00120C  37D8               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  6470                           
  6471                           ; BSR set to: 0
  6472  00120E  0100               	movlb	0	; () banked
  6473  001210  2FDD               	decfsz	___ftmul@cntr& (0+255),f,b
  6474  001212  D7E3               	goto	l5364
  6475  001214  D000               	goto	l5372
  6476  001216                     l5372:
  6477                           
  6478                           ; BSR set to: 0
  6479  001216  0E09               	movlw	9
  6480  001218  0100               	movlb	0	; () banked
  6481  00121A  6FDD               	movwf	___ftmul@cntr& (0+255),b
  6482  00121C  D000               	goto	l5374
  6483  00121E                     l5374:
  6484                           
  6485                           ; BSR set to: 0
  6486  00121E  0100               	movlb	0	; () banked
  6487  001220  A1D3               	btfss	___ftmul@f1& (0+255),0,b
  6488  001222  D00D               	goto	l5378
  6489                           
  6490                           ; BSR set to: 0
  6491  001224  0100               	movlb	0	; () banked
  6492  001226  51D6               	movf	___ftmul@f2& (0+255),w,b
  6493  001228  0100               	movlb	0	; () banked
  6494  00122A  27DA               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6495  00122C  0100               	movlb	0	; () banked
  6496  00122E  51D7               	movf	(___ftmul@f2+1)& (0+255),w,b
  6497  001230  0100               	movlb	0	; () banked
  6498  001232  23DB               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6499  001234  0100               	movlb	0	; () banked
  6500  001236  51D8               	movf	(___ftmul@f2+2)& (0+255),w,b
  6501  001238  0100               	movlb	0	; () banked
  6502  00123A  23DC               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6503  00123C  D000               	goto	l5378
  6504  00123E                     l5378:
  6505                           
  6506                           ; BSR set to: 0
  6507  00123E  0100               	movlb	0	; () banked
  6508  001240  90D8               	bcf	status,0,c
  6509  001242  33D5               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6510  001244  33D4               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6511  001246  33D3               	rrcf	___ftmul@f1& (0+255),f,b
  6512  001248  0100               	movlb	0	; () banked
  6513  00124A  90D8               	bcf	status,0,c
  6514  00124C  33DC               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  6515  00124E  33DB               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  6516  001250  33DA               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  6517                           
  6518                           ; BSR set to: 0
  6519  001252  0100               	movlb	0	; () banked
  6520  001254  2FDD               	decfsz	___ftmul@cntr& (0+255),f,b
  6521  001256  D7E3               	goto	l5374
  6522  001258  D000               	goto	l5382
  6523  00125A                     l5382:
  6524                           
  6525                           ; BSR set to: 0
  6526  00125A  C0DA  F01B         	movff	___ftmul@f3_as_product,___ftpack@arg
  6527  00125E  C0DB  F01C         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  6528  001262  C0DC  F01D         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  6529  001266  C0D9  F01E         	movff	___ftmul@exp,___ftpack@exp
  6530  00126A  C0DE  F01F         	movff	___ftmul@sign,___ftpack@sign
  6531  00126E  ECAD  F00E         	call	___ftpack	;wreg free
  6532  001272  C01B  F0D3         	movff	?___ftpack,?___ftmul
  6533  001276  C01C  F0D4         	movff	?___ftpack+1,?___ftmul+1
  6534  00127A  C01D  F0D5         	movff	?___ftpack+2,?___ftmul+2
  6535  00127E  0012               	return	
  6536  001280  0012               	return		;funcret
  6537  001282                     __end_of___ftmul:
  6538                           	opt stack 0
  6539                           tosu	equ	0xFFF
  6540                           tosh	equ	0xFFE
  6541                           tosl	equ	0xFFD
  6542                           pclath	equ	0xFFA
  6543                           tblptru	equ	0xFF8
  6544                           tblptrh	equ	0xFF7
  6545                           tblptrl	equ	0xFF6
  6546                           tablat	equ	0xFF5
  6547                           prodh	equ	0xFF4
  6548                           prodl	equ	0xFF3
  6549                           intcon	equ	0xFF2
  6550                           postinc0	equ	0xFEE
  6551                           wreg	equ	0xFE8
  6552                           indf2	equ	0xFDF
  6553                           postinc2	equ	0xFDE
  6554                           postdec2	equ	0xFDD
  6555                           plusw2	equ	0xFDB
  6556                           fsr2h	equ	0xFDA
  6557                           fsr2l	equ	0xFD9
  6558                           status	equ	0xFD8
  6559                           
  6560 ;; *************** function ___ftpack *****************
  6561 ;; Defined at:
  6562 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  6563 ;; Parameters:    Size  Location     Type
  6564 ;;  arg             3   26[COMRAM] unsigned um
  6565 ;;  exp             1   29[COMRAM] unsigned char 
  6566 ;;  sign            1   30[COMRAM] unsigned char 
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;		None
  6569 ;; Return value:  Size  Location     Type
  6570 ;;                  3   26[COMRAM] float 
  6571 ;; Registers used:
  6572 ;;		wreg, status,2, status,0
  6573 ;; Tracked objects:
  6574 ;;		On entry : 0/0
  6575 ;;		On exit  : 0/0
  6576 ;;		Unchanged: 0/0
  6577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6578 ;;      Params:         5       0       0       0       0       0       0
  6579 ;;      Locals:         0       0       0       0       0       0       0
  6580 ;;      Temps:          3       0       0       0       0       0       0
  6581 ;;      Totals:         8       0       0       0       0       0       0
  6582 ;;Total ram usage:        8 bytes
  6583 ;; Hardware stack levels used:    1
  6584 ;; Hardware stack levels required when called:    4
  6585 ;; This function calls:
  6586 ;;		Nothing
  6587 ;; This function is called by:
  6588 ;;		___ftmul
  6589 ;;		___lwtoft
  6590 ;; This function uses a non-reentrant model
  6591 ;;
  6592                           
  6593                           	psect	text32
  6594  001D5A                     __ptext32:
  6595                           	opt stack 0
  6596  001D5A                     ___ftpack:
  6597                           	opt stack 25
  6598                           
  6599                           ;incstack = 0
  6600  001D5A  501E               	movf	___ftpack@exp,w,c
  6601  001D5C  B4D8               	btfsc	status,2,c
  6602  001D5E  D005               	goto	l5016
  6603  001D60  501B               	movf	___ftpack@arg,w,c
  6604  001D62  101C               	iorwf	___ftpack@arg+1,w,c
  6605  001D64  101D               	iorwf	___ftpack@arg+2,w,c
  6606  001D66  A4D8               	btfss	status,2,c
  6607  001D68  D00E               	goto	l5022
  6608  001D6A                     l5016:
  6609  001D6A  0E00               	movlw	0
  6610  001D6C  6E1B               	movwf	?___ftpack,c
  6611  001D6E  0E00               	movlw	0
  6612  001D70  6E1C               	movwf	?___ftpack+1,c
  6613  001D72  0E00               	movlw	0
  6614  001D74  6E1D               	movwf	?___ftpack+2,c
  6615  001D76  0012               	return	
  6616  001D78  D006               	goto	l5022
  6617  001D7A                     l5020:
  6618  001D7A  2A1E               	incf	___ftpack@exp,f,c
  6619  001D7C  90D8               	bcf	status,0,c
  6620  001D7E  321D               	rrcf	___ftpack@arg+2,f,c
  6621  001D80  321C               	rrcf	___ftpack@arg+1,f,c
  6622  001D82  321B               	rrcf	___ftpack@arg,f,c
  6623  001D84  D000               	goto	l5022
  6624  001D86                     l5022:
  6625  001D86  0E00               	movlw	0
  6626  001D88  141B               	andwf	___ftpack@arg,w,c
  6627  001D8A  6E20               	movwf	??___ftpack& (0+255),c
  6628  001D8C  0E00               	movlw	0
  6629  001D8E  141C               	andwf	___ftpack@arg+1,w,c
  6630  001D90  6E21               	movwf	(??___ftpack+1)& (0+255),c
  6631  001D92  0EFE               	movlw	254
  6632  001D94  141D               	andwf	___ftpack@arg+2,w,c
  6633  001D96  6E22               	movwf	(??___ftpack+2)& (0+255),c
  6634  001D98  5020               	movf	??___ftpack,w,c
  6635  001D9A  1021               	iorwf	??___ftpack+1,w,c
  6636  001D9C  1022               	iorwf	??___ftpack+2,w,c
  6637  001D9E  B4D8               	btfsc	status,2,c
  6638  001DA0  D00E               	goto	l5028
  6639  001DA2  D7EB               	goto	l5020
  6640  001DA4  D00C               	goto	l5028
  6641  001DA6                     l5024:
  6642  001DA6  2A1E               	incf	___ftpack@exp,f,c
  6643  001DA8  0E01               	movlw	1
  6644  001DAA  261B               	addwf	___ftpack@arg,f,c
  6645  001DAC  0E00               	movlw	0
  6646  001DAE  221C               	addwfc	___ftpack@arg+1,f,c
  6647  001DB0  0E00               	movlw	0
  6648  001DB2  221D               	addwfc	___ftpack@arg+2,f,c
  6649  001DB4  90D8               	bcf	status,0,c
  6650  001DB6  321D               	rrcf	___ftpack@arg+2,f,c
  6651  001DB8  321C               	rrcf	___ftpack@arg+1,f,c
  6652  001DBA  321B               	rrcf	___ftpack@arg,f,c
  6653  001DBC  D000               	goto	l5028
  6654  001DBE                     l5028:
  6655  001DBE  0E00               	movlw	0
  6656  001DC0  141B               	andwf	___ftpack@arg,w,c
  6657  001DC2  6E20               	movwf	??___ftpack& (0+255),c
  6658  001DC4  0E00               	movlw	0
  6659  001DC6  141C               	andwf	___ftpack@arg+1,w,c
  6660  001DC8  6E21               	movwf	(??___ftpack+1)& (0+255),c
  6661  001DCA  0EFF               	movlw	255
  6662  001DCC  141D               	andwf	___ftpack@arg+2,w,c
  6663  001DCE  6E22               	movwf	(??___ftpack+2)& (0+255),c
  6664  001DD0  5020               	movf	??___ftpack,w,c
  6665  001DD2  1021               	iorwf	??___ftpack+1,w,c
  6666  001DD4  1022               	iorwf	??___ftpack+2,w,c
  6667  001DD6  B4D8               	btfsc	status,2,c
  6668  001DD8  D008               	goto	l5032
  6669  001DDA  D7E5               	goto	l5024
  6670  001DDC  D006               	goto	l5032
  6671  001DDE                     l5030:
  6672  001DDE  061E               	decf	___ftpack@exp,f,c
  6673  001DE0  90D8               	bcf	status,0,c
  6674  001DE2  361B               	rlcf	___ftpack@arg,f,c
  6675  001DE4  361C               	rlcf	___ftpack@arg+1,f,c
  6676  001DE6  361D               	rlcf	___ftpack@arg+2,f,c
  6677  001DE8  D000               	goto	l5032
  6678  001DEA                     l5032:
  6679  001DEA  BE1C               	btfsc	___ftpack@arg+1,7,c
  6680  001DEC  D004               	goto	l1298
  6681  001DEE  0E02               	movlw	2
  6682  001DF0  601E               	cpfslt	___ftpack@exp,c
  6683  001DF2  D7F5               	goto	l5030
  6684  001DF4  D000               	goto	l1298
  6685  001DF6                     l1298:
  6686  001DF6  B01E               	btfsc	___ftpack@exp,0,c
  6687  001DF8  D002               	goto	l5038
  6688  001DFA  9E1C               	bcf	___ftpack@arg+1,7,c
  6689  001DFC  D000               	goto	l5038
  6690  001DFE                     l5038:
  6691  001DFE  90D8               	bcf	status,0,c
  6692  001E00  321E               	rrcf	___ftpack@exp,f,c
  6693  001E02  501E               	movf	___ftpack@exp,w,c
  6694  001E04  121D               	iorwf	___ftpack@arg+2,f,c
  6695  001E06  501F               	movf	___ftpack@sign,w,c
  6696  001E08  B4D8               	btfsc	status,2,c
  6697  001E0A  D002               	goto	l5044
  6698  001E0C  8E1D               	bsf	___ftpack@arg+2,7,c
  6699  001E0E  D000               	goto	l5044
  6700  001E10                     l5044:
  6701  001E10  C01B  F01B         	movff	___ftpack@arg,?___ftpack
  6702  001E14  C01C  F01C         	movff	___ftpack@arg+1,?___ftpack+1
  6703  001E18  C01D  F01D         	movff	___ftpack@arg+2,?___ftpack+2
  6704  001E1C  0012               	return	
  6705  001E1E  0012               	return		;funcret
  6706  001E20                     __end_of___ftpack:
  6707                           	opt stack 0
  6708                           tosu	equ	0xFFF
  6709                           tosh	equ	0xFFE
  6710                           tosl	equ	0xFFD
  6711                           pclath	equ	0xFFA
  6712                           tblptru	equ	0xFF8
  6713                           tblptrh	equ	0xFF7
  6714                           tblptrl	equ	0xFF6
  6715                           tablat	equ	0xFF5
  6716                           prodh	equ	0xFF4
  6717                           prodl	equ	0xFF3
  6718                           intcon	equ	0xFF2
  6719                           postinc0	equ	0xFEE
  6720                           wreg	equ	0xFE8
  6721                           indf2	equ	0xFDF
  6722                           postinc2	equ	0xFDE
  6723                           postdec2	equ	0xFDD
  6724                           plusw2	equ	0xFDB
  6725                           fsr2h	equ	0xFDA
  6726                           fsr2l	equ	0xFD9
  6727                           status	equ	0xFD8
  6728                           
  6729 ;; *************** function _SYSTEM_Initialize *****************
  6730 ;; Defined at:
  6731 ;;		line 112 in file "mcc_generated_files/mcc.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;		None
  6734 ;; Auto vars:     Size  Location     Type
  6735 ;;		None
  6736 ;; Return value:  Size  Location     Type
  6737 ;;		None               void
  6738 ;; Registers used:
  6739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6740 ;; Tracked objects:
  6741 ;;		On entry : 0/0
  6742 ;;		On exit  : 0/0
  6743 ;;		Unchanged: 0/0
  6744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6745 ;;      Params:         0       0       0       0       0       0       0
  6746 ;;      Locals:         0       0       0       0       0       0       0
  6747 ;;      Temps:          0       0       0       0       0       0       0
  6748 ;;      Totals:         0       0       0       0       0       0       0
  6749 ;;Total ram usage:        0 bytes
  6750 ;; Hardware stack levels used:    1
  6751 ;; Hardware stack levels required when called:    7
  6752 ;; This function calls:
  6753 ;;		_ADC_Initialize
  6754 ;;		_EUSART1_Initialize
  6755 ;;		_I2C1_Initialize
  6756 ;;		_INTERRUPT_Initialize
  6757 ;;		_OSCILLATOR_Initialize
  6758 ;;		_PIN_MANAGER_Initialize
  6759 ;;		_TMR0_Initialize
  6760 ;;		_begin
  6761 ;; This function is called by:
  6762 ;;		_main
  6763 ;; This function uses a non-reentrant model
  6764 ;;
  6765                           
  6766                           	psect	text33
  6767  0024CA                     __ptext33:
  6768                           	opt stack 0
  6769  0024CA                     _SYSTEM_Initialize:
  6770                           	opt stack 23
  6771                           
  6772                           ;mcc.c: 114: OSCILLATOR_Initialize();
  6773                           
  6774                           ;incstack = 0
  6775  0024CA  EC19  F016         	call	_OSCILLATOR_Initialize	;wreg free
  6776                           
  6777                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  6778  0024CE  EC8D  F013         	call	_PIN_MANAGER_Initialize	;wreg free
  6779                           
  6780                           ;mcc.c: 116: INTERRUPT_Initialize();
  6781  0024D2  EC11  F016         	call	_INTERRUPT_Initialize	;wreg free
  6782                           
  6783                           ;mcc.c: 117: ADC_Initialize();
  6784  0024D6  ECE0  F015         	call	_ADC_Initialize	;wreg free
  6785                           
  6786                           ;mcc.c: 118: TMR0_Initialize();
  6787  0024DA  EC80  F015         	call	_TMR0_Initialize	;wreg free
  6788                           
  6789                           ;mcc.c: 119: EUSART1_Initialize();
  6790  0024DE  EC7F  F014         	call	_EUSART1_Initialize	;wreg free
  6791                           
  6792                           ;mcc.c: 120: begin(receiveArray, sizeof (receiveArray), 3, 0, Send_put, Receive_get, Rec
      +                          eive_available, Receive_peek);
  6793  0024E2  0ECE               	movlw	low _receiveArray
  6794  0024E4  0100               	movlb	0	; () banked
  6795  0024E6  6FD3               	movwf	begin@ptr& (0+255),b
  6796  0024E8  0E01               	movlw	high _receiveArray
  6797  0024EA  0100               	movlb	0	; () banked
  6798  0024EC  6FD4               	movwf	(begin@ptr+1)& (0+255),b
  6799  0024EE  0E28               	movlw	40
  6800  0024F0  0100               	movlb	0	; () banked
  6801  0024F2  6FD5               	movwf	begin@maxSize& (0+255),b
  6802  0024F4  0E03               	movlw	3
  6803  0024F6  0100               	movlb	0	; () banked
  6804  0024F8  6FD6               	movwf	begin@givenAddress& (0+255),b
  6805  0024FA  0E00               	movlw	0
  6806  0024FC  0100               	movlb	0	; () banked
  6807  0024FE  6FD7               	movwf	begin@error& (0+255),b
  6808  002500  0EA2               	movlw	low _Send_put
  6809  002502  0100               	movlb	0	; () banked
  6810  002504  6FD8               	movwf	begin@stufftosend& (0+255),b
  6811  002506  0E29               	movlw	high _Send_put
  6812  002508  0100               	movlb	0	; () banked
  6813  00250A  6FD9               	movwf	(begin@stufftosend+1)& (0+255),b
  6814  00250C  0E12               	movlw	low _Receive_get
  6815  00250E  0100               	movlb	0	; () banked
  6816  002510  6FDA               	movwf	begin@stufftoreceive& (0+255),b
  6817  002512  0E2C               	movlw	high _Receive_get
  6818  002514  0100               	movlb	0	; () banked
  6819  002516  6FDB               	movwf	(begin@stufftoreceive+1)& (0+255),b
  6820  002518  0E90               	movlw	low _Receive_available
  6821  00251A  0100               	movlb	0	; () banked
  6822  00251C  6FDC               	movwf	begin@stuffavailable& (0+255),b
  6823  00251E  0E2B               	movlw	high _Receive_available
  6824  002520  0100               	movlb	0	; () banked
  6825  002522  6FDD               	movwf	(begin@stuffavailable+1)& (0+255),b
  6826  002524  0E02               	movlw	low _Receive_peek
  6827  002526  0100               	movlb	0	; () banked
  6828  002528  6FDE               	movwf	begin@stuffpeek& (0+255),b
  6829  00252A  0E2C               	movlw	high _Receive_peek
  6830  00252C  0100               	movlb	0	; () banked
  6831  00252E  6FDF               	movwf	(begin@stuffpeek+1)& (0+255),b
  6832  002530  EC35  F013         	call	_begin	;wreg free
  6833                           
  6834                           ;mcc.c: 121: I2C1_Initialize();
  6835  002534  EC61  F014         	call	_I2C1_Initialize	;wreg free
  6836  002538  0012               	return		;funcret
  6837  00253A                     __end_of_SYSTEM_Initialize:
  6838                           	opt stack 0
  6839                           tosu	equ	0xFFF
  6840                           tosh	equ	0xFFE
  6841                           tosl	equ	0xFFD
  6842                           pclath	equ	0xFFA
  6843                           tblptru	equ	0xFF8
  6844                           tblptrh	equ	0xFF7
  6845                           tblptrl	equ	0xFF6
  6846                           tablat	equ	0xFF5
  6847                           prodh	equ	0xFF4
  6848                           prodl	equ	0xFF3
  6849                           intcon	equ	0xFF2
  6850                           postinc0	equ	0xFEE
  6851                           wreg	equ	0xFE8
  6852                           indf2	equ	0xFDF
  6853                           postinc2	equ	0xFDE
  6854                           postdec2	equ	0xFDD
  6855                           plusw2	equ	0xFDB
  6856                           fsr2h	equ	0xFDA
  6857                           fsr2l	equ	0xFD9
  6858                           status	equ	0xFD8
  6859                           
  6860 ;; *************** function _begin *****************
  6861 ;; Defined at:
  6862 ;;		line 18 in file "FastTransfer.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;  ptr             2    0[BANK0 ] PTR volatile int 
  6865 ;;		 -> receiveArray(40), 
  6866 ;;  maxSize         1    2[BANK0 ] unsigned char 
  6867 ;;  givenAddress    1    3[BANK0 ] unsigned char 
  6868 ;;  error           1    4[BANK0 ] unsigned char 
  6869 ;;  stufftosend     2    5[BANK0 ] PTR FTN(unsigned char ,)
  6870 ;;		 -> Send_put(0), 
  6871 ;;  stufftorecei    2    7[BANK0 ] PTR FTN()unsigned char 
  6872 ;;		 -> Receive_get(1), 
  6873 ;;  stuffavailab    2    9[BANK0 ] PTR FTN()int 
  6874 ;;		 -> Receive_available(2), 
  6875 ;;  stuffpeek       2   11[BANK0 ] PTR FTN()unsigned char 
  6876 ;;		 -> Receive_peek(1), 
  6877 ;; Auto vars:     Size  Location     Type
  6878 ;;		None
  6879 ;; Return value:  Size  Location     Type
  6880 ;;		None               void
  6881 ;; Registers used:
  6882 ;;		wreg, status,2, status,0, cstack
  6883 ;; Tracked objects:
  6884 ;;		On entry : 0/0
  6885 ;;		On exit  : 0/0
  6886 ;;		Unchanged: 0/0
  6887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6888 ;;      Params:         0      13       0       0       0       0       0
  6889 ;;      Locals:         0       0       0       0       0       0       0
  6890 ;;      Temps:          0       0       0       0       0       0       0
  6891 ;;      Totals:         0      13       0       0       0       0       0
  6892 ;;Total ram usage:       13 bytes
  6893 ;; Hardware stack levels used:    1
  6894 ;; Hardware stack levels required when called:    5
  6895 ;; This function calls:
  6896 ;;		___awdiv
  6897 ;; This function is called by:
  6898 ;;		_SYSTEM_Initialize
  6899 ;; This function uses a non-reentrant model
  6900 ;;
  6901                           
  6902                           	psect	text34
  6903  00266A                     __ptext34:
  6904                           	opt stack 0
  6905  00266A                     _begin:
  6906                           	opt stack 24
  6907                           
  6908                           ;FastTransfer.c: 19: receiveArrayAddress = ptr;
  6909                           
  6910                           ;incstack = 0
  6911  00266A  C0D3  F0A7         	movff	begin@ptr,_receiveArrayAddress
  6912  00266E  C0D4  F0A8         	movff	begin@ptr+1,_receiveArrayAddress+1
  6913                           
  6914                           ;FastTransfer.c: 20: moduleAddress = givenAddress;
  6915  002672  C0D6  F03A         	movff	begin@givenAddress,_moduleAddress
  6916                           
  6917                           ;FastTransfer.c: 21: serial_write = stufftosend;
  6918  002676  C0D8  F031         	movff	begin@stufftosend,_serial_write
  6919  00267A  C0D9  F032         	movff	begin@stufftosend+1,_serial_write+1
  6920                           
  6921                           ;FastTransfer.c: 22: serial_available = stuffavailable;
  6922  00267E  C0DC  F02D         	movff	begin@stuffavailable,_serial_available
  6923  002682  C0DD  F02E         	movff	begin@stuffavailable+1,_serial_available+1
  6924                           
  6925                           ;FastTransfer.c: 23: serial_peek = stuffpeek;
  6926  002686  C0DE  F0AB         	movff	begin@stuffpeek,_serial_peek
  6927  00268A  C0DF  F0AC         	movff	begin@stuffpeek+1,_serial_peek+1
  6928                           
  6929                           ;FastTransfer.c: 24: serial_read = stufftoreceive;
  6930  00268E  C0DA  F02F         	movff	begin@stufftoreceive,_serial_read
  6931  002692  C0DB  F030         	movff	begin@stufftoreceive+1,_serial_read+1
  6932                           
  6933                           ;FastTransfer.c: 25: maxDataAddress = maxSize / 2;
  6934  002696  C0D5  F01B         	movff	begin@maxSize,___awdiv@dividend
  6935  00269A  6A1C               	clrf	___awdiv@dividend+1,c
  6936  00269C  0E00               	movlw	0
  6937  00269E  6E1E               	movwf	___awdiv@divisor+1,c
  6938  0026A0  0E02               	movlw	2
  6939  0026A2  6E1D               	movwf	___awdiv@divisor,c
  6940  0026A4  ECC6  F010         	call	___awdiv	;wreg free
  6941  0026A8  501B               	movf	?___awdiv,w,c
  6942  0026AA  6E39               	movwf	_maxDataAddress,c
  6943                           
  6944                           ;FastTransfer.c: 26: sendStructAddress = (unsigned char*) & ring_buffer;
  6945  0026AC  0E00               	movlw	low _ring_buffer
  6946  0026AE  0100               	movlb	0	; () banked
  6947  0026B0  6FA9               	movwf	_sendStructAddress& (0+255),b
  6948  0026B2  0E01               	movlw	high _ring_buffer
  6949  0026B4  0100               	movlb	0	; () banked
  6950  0026B6  6FAA               	movwf	(_sendStructAddress+1)& (0+255),b
  6951                           
  6952                           ; BSR set to: 0
  6953                           ;FastTransfer.c: 27: AKNAKsend = error;
  6954  0026B8  C0D7  F035         	movff	begin@error,_AKNAKsend
  6955                           
  6956                           ; BSR set to: 0
  6957                           ;FastTransfer.c: 28: alignErrorCounter = 0;
  6958  0026BC  0E00               	movlw	0
  6959  0026BE  0100               	movlb	0	; () banked
  6960  0026C0  6F9E               	movwf	(_alignErrorCounter+1)& (0+255),b
  6961  0026C2  0E00               	movlw	0
  6962  0026C4  6F9D               	movwf	_alignErrorCounter& (0+255),b
  6963                           
  6964                           ; BSR set to: 0
  6965  0026C6  0012               	return		;funcret
  6966  0026C8                     __end_of_begin:
  6967                           	opt stack 0
  6968                           tosu	equ	0xFFF
  6969                           tosh	equ	0xFFE
  6970                           tosl	equ	0xFFD
  6971                           pclath	equ	0xFFA
  6972                           tblptru	equ	0xFF8
  6973                           tblptrh	equ	0xFF7
  6974                           tblptrl	equ	0xFF6
  6975                           tablat	equ	0xFF5
  6976                           prodh	equ	0xFF4
  6977                           prodl	equ	0xFF3
  6978                           intcon	equ	0xFF2
  6979                           postinc0	equ	0xFEE
  6980                           wreg	equ	0xFE8
  6981                           indf2	equ	0xFDF
  6982                           postinc2	equ	0xFDE
  6983                           postdec2	equ	0xFDD
  6984                           plusw2	equ	0xFDB
  6985                           fsr2h	equ	0xFDA
  6986                           fsr2l	equ	0xFD9
  6987                           status	equ	0xFD8
  6988                           
  6989 ;; *************** function _TMR0_Initialize *****************
  6990 ;; Defined at:
  6991 ;;		line 22 in file "mcc_generated_files/tmr0.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;		None
  6994 ;; Auto vars:     Size  Location     Type
  6995 ;;		None
  6996 ;; Return value:  Size  Location     Type
  6997 ;;		None               void
  6998 ;; Registers used:
  6999 ;;		wreg, status,2, cstack
  7000 ;; Tracked objects:
  7001 ;;		On entry : 0/0
  7002 ;;		On exit  : 0/0
  7003 ;;		Unchanged: 0/0
  7004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7005 ;;      Params:         0       0       0       0       0       0       0
  7006 ;;      Locals:         0       0       0       0       0       0       0
  7007 ;;      Temps:          0       0       0       0       0       0       0
  7008 ;;      Totals:         0       0       0       0       0       0       0
  7009 ;;Total ram usage:        0 bytes
  7010 ;; Hardware stack levels used:    1
  7011 ;; Hardware stack levels required when called:    5
  7012 ;; This function calls:
  7013 ;;		_TMR0_StartTimer
  7014 ;; This function is called by:
  7015 ;;		_SYSTEM_Initialize
  7016 ;; This function uses a non-reentrant model
  7017 ;;
  7018                           
  7019                           	psect	text35
  7020  002B00                     __ptext35:
  7021                           	opt stack 0
  7022  002B00                     _TMR0_Initialize:
  7023                           	opt stack 24
  7024                           
  7025                           ;tmr0.c: 26: T0CON = 0x94;
  7026                           
  7027                           ; BSR set to: 0
  7028                           ;incstack = 0
  7029  002B00  0E94               	movlw	148
  7030  002B02  6ED5               	movwf	4053,c	;volatile
  7031                           
  7032                           ;tmr0.c: 29: TMR0H = 0xCF;
  7033  002B04  0ECF               	movlw	207
  7034  002B06  6ED7               	movwf	4055,c	;volatile
  7035                           
  7036                           ;tmr0.c: 32: TMR0L = 0x2C;
  7037  002B08  0E2C               	movlw	44
  7038  002B0A  6ED6               	movwf	4054,c	;volatile
  7039                           
  7040                           ;tmr0.c: 35: timer0ReloadVal16bit = 53036;
  7041  002B0C  0ECF               	movlw	207
  7042  002B0E  6E44               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  7043  002B10  0E2C               	movlw	44
  7044  002B12  6E43               	movwf	_timer0ReloadVal16bit,c	;volatile
  7045                           
  7046                           ;tmr0.c: 38: INTCONbits.TMR0IF = 0;
  7047  002B14  94F2               	bcf	intcon,2,c	;volatile
  7048                           
  7049                           ;tmr0.c: 41: INTCONbits.TMR0IE = 1;
  7050  002B16  8AF2               	bsf	intcon,5,c	;volatile
  7051                           
  7052                           ;tmr0.c: 44: TMR0_StartTimer();
  7053  002B18  EC20  F016         	call	_TMR0_StartTimer	;wreg free
  7054  002B1C  0012               	return		;funcret
  7055  002B1E                     __end_of_TMR0_Initialize:
  7056                           	opt stack 0
  7057                           tosu	equ	0xFFF
  7058                           tosh	equ	0xFFE
  7059                           tosl	equ	0xFFD
  7060                           pclath	equ	0xFFA
  7061                           tblptru	equ	0xFF8
  7062                           tblptrh	equ	0xFF7
  7063                           tblptrl	equ	0xFF6
  7064                           tablat	equ	0xFF5
  7065                           prodh	equ	0xFF4
  7066                           prodl	equ	0xFF3
  7067                           intcon	equ	0xFF2
  7068                           postinc0	equ	0xFEE
  7069                           wreg	equ	0xFE8
  7070                           indf2	equ	0xFDF
  7071                           postinc2	equ	0xFDE
  7072                           postdec2	equ	0xFDD
  7073                           plusw2	equ	0xFDB
  7074                           fsr2h	equ	0xFDA
  7075                           fsr2l	equ	0xFD9
  7076                           status	equ	0xFD8
  7077                           
  7078 ;; *************** function _TMR0_StartTimer *****************
  7079 ;; Defined at:
  7080 ;;		line 47 in file "mcc_generated_files/tmr0.c"
  7081 ;; Parameters:    Size  Location     Type
  7082 ;;		None
  7083 ;; Auto vars:     Size  Location     Type
  7084 ;;		None
  7085 ;; Return value:  Size  Location     Type
  7086 ;;		None               void
  7087 ;; Registers used:
  7088 ;;		None
  7089 ;; Tracked objects:
  7090 ;;		On entry : 0/0
  7091 ;;		On exit  : 0/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7094 ;;      Params:         0       0       0       0       0       0       0
  7095 ;;      Locals:         0       0       0       0       0       0       0
  7096 ;;      Temps:          0       0       0       0       0       0       0
  7097 ;;      Totals:         0       0       0       0       0       0       0
  7098 ;;Total ram usage:        0 bytes
  7099 ;; Hardware stack levels used:    1
  7100 ;; Hardware stack levels required when called:    4
  7101 ;; This function calls:
  7102 ;;		Nothing
  7103 ;; This function is called by:
  7104 ;;		_TMR0_Initialize
  7105 ;; This function uses a non-reentrant model
  7106 ;;
  7107                           
  7108                           	psect	text36
  7109  002C40                     __ptext36:
  7110                           	opt stack 0
  7111  002C40                     _TMR0_StartTimer:
  7112                           	opt stack 24
  7113                           
  7114                           ;tmr0.c: 49: T0CONbits.TMR0ON = 1;
  7115                           
  7116                           ;incstack = 0
  7117  002C40  8ED5               	bsf	4053,7,c	;volatile
  7118  002C42  0012               	return		;funcret
  7119  002C44                     __end_of_TMR0_StartTimer:
  7120                           	opt stack 0
  7121                           tosu	equ	0xFFF
  7122                           tosh	equ	0xFFE
  7123                           tosl	equ	0xFFD
  7124                           pclath	equ	0xFFA
  7125                           tblptru	equ	0xFF8
  7126                           tblptrh	equ	0xFF7
  7127                           tblptrl	equ	0xFF6
  7128                           tablat	equ	0xFF5
  7129                           prodh	equ	0xFF4
  7130                           prodl	equ	0xFF3
  7131                           intcon	equ	0xFF2
  7132                           postinc0	equ	0xFEE
  7133                           wreg	equ	0xFE8
  7134                           indf2	equ	0xFDF
  7135                           postinc2	equ	0xFDE
  7136                           postdec2	equ	0xFDD
  7137                           plusw2	equ	0xFDB
  7138                           fsr2h	equ	0xFDA
  7139                           fsr2l	equ	0xFD9
  7140                           status	equ	0xFD8
  7141                           
  7142 ;; *************** function _PIN_MANAGER_Initialize *****************
  7143 ;; Defined at:
  7144 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  7145 ;; Parameters:    Size  Location     Type
  7146 ;;		None
  7147 ;; Auto vars:     Size  Location     Type
  7148 ;;		None
  7149 ;; Return value:  Size  Location     Type
  7150 ;;		None               void
  7151 ;; Registers used:
  7152 ;;		wreg, status,2
  7153 ;; Tracked objects:
  7154 ;;		On entry : 0/0
  7155 ;;		On exit  : 0/0
  7156 ;;		Unchanged: 0/0
  7157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7158 ;;      Params:         0       0       0       0       0       0       0
  7159 ;;      Locals:         0       0       0       0       0       0       0
  7160 ;;      Temps:          0       0       0       0       0       0       0
  7161 ;;      Totals:         0       0       0       0       0       0       0
  7162 ;;Total ram usage:        0 bytes
  7163 ;; Hardware stack levels used:    1
  7164 ;; Hardware stack levels required when called:    4
  7165 ;; This function calls:
  7166 ;;		Nothing
  7167 ;; This function is called by:
  7168 ;;		_SYSTEM_Initialize
  7169 ;; This function uses a non-reentrant model
  7170 ;;
  7171                           
  7172                           	psect	text37
  7173  00271A                     __ptext37:
  7174                           	opt stack 0
  7175  00271A                     _PIN_MANAGER_Initialize:
  7176                           	opt stack 25
  7177                           
  7178                           ;pin_manager.c: 52: LATA = 0x00;
  7179                           
  7180                           ;incstack = 0
  7181  00271A  0E00               	movlw	0
  7182  00271C  6E89               	movwf	3977,c	;volatile
  7183                           
  7184                           ;pin_manager.c: 53: TRISA = 0xF7;
  7185  00271E  0EF7               	movlw	247
  7186  002720  6E92               	movwf	3986,c	;volatile
  7187                           
  7188                           ;pin_manager.c: 54: ANSELA = 0x20;
  7189  002722  0E20               	movlw	32
  7190  002724  010F               	movlb	15	; () banked
  7191  002726  6F38               	movwf	56,b	;volatile
  7192                           
  7193                           ;pin_manager.c: 56: LATB = 0x00;
  7194  002728  0E00               	movlw	0
  7195  00272A  6E8A               	movwf	3978,c	;volatile
  7196                           
  7197                           ;pin_manager.c: 57: TRISB = 0xD7;
  7198  00272C  0ED7               	movlw	215
  7199  00272E  6E93               	movwf	3987,c	;volatile
  7200                           
  7201                           ;pin_manager.c: 58: ANSELB = 0x00;
  7202  002730  0E00               	movlw	0
  7203  002732  010F               	movlb	15	; () banked
  7204  002734  6F39               	movwf	57,b	;volatile
  7205                           
  7206                           ;pin_manager.c: 59: WPUB = 0x00;
  7207  002736  0E00               	movlw	0
  7208  002738  6E61               	movwf	3937,c	;volatile
  7209                           
  7210                           ;pin_manager.c: 61: LATC = 0x18;
  7211  00273A  0E18               	movlw	24
  7212  00273C  6E8B               	movwf	3979,c	;volatile
  7213                           
  7214                           ;pin_manager.c: 62: TRISC = 0xDF;
  7215  00273E  0EDF               	movlw	223
  7216  002740  6E94               	movwf	3988,c	;volatile
  7217                           
  7218                           ;pin_manager.c: 63: ANSELC = 0x04;
  7219  002742  0E04               	movlw	4
  7220  002744  010F               	movlb	15	; () banked
  7221  002746  6F3A               	movwf	58,b	;volatile
  7222                           
  7223                           ;pin_manager.c: 65: LATD = 0x00;
  7224  002748  0E00               	movlw	0
  7225  00274A  6E8C               	movwf	3980,c	;volatile
  7226                           
  7227                           ;pin_manager.c: 66: TRISD = 0xFD;
  7228  00274C  0EFD               	movlw	253
  7229  00274E  6E95               	movwf	3989,c	;volatile
  7230                           
  7231                           ;pin_manager.c: 67: ANSELD = 0xDD;
  7232  002750  0EDD               	movlw	221
  7233  002752  010F               	movlb	15	; () banked
  7234  002754  6F3B               	movwf	59,b	;volatile
  7235                           
  7236                           ;pin_manager.c: 69: LATE = 0x00;
  7237  002756  0E00               	movlw	0
  7238  002758  6E8D               	movwf	3981,c	;volatile
  7239                           
  7240                           ;pin_manager.c: 70: TRISE = 0x00;
  7241  00275A  0E00               	movlw	0
  7242  00275C  6E96               	movwf	3990,c	;volatile
  7243                           
  7244                           ;pin_manager.c: 71: ANSELE = 0x00;
  7245  00275E  0E00               	movlw	0
  7246  002760  010F               	movlb	15	; () banked
  7247  002762  6F3C               	movwf	60,b	;volatile
  7248                           
  7249                           ; BSR set to: 15
  7250                           ;pin_manager.c: 72: TRISCbits.TRISC5=0;
  7251  002764  9A94               	bcf	3988,5,c	;volatile
  7252                           
  7253                           ; BSR set to: 15
  7254                           ;pin_manager.c: 73: INTCON2bits.nRBPU = 0x01;
  7255  002766  8EF1               	bsf	intcon2,7,c	;volatile
  7256                           
  7257                           ; BSR set to: 15
  7258  002768  0012               	return		;funcret
  7259  00276A                     __end_of_PIN_MANAGER_Initialize:
  7260                           	opt stack 0
  7261                           tosu	equ	0xFFF
  7262                           tosh	equ	0xFFE
  7263                           tosl	equ	0xFFD
  7264                           pclath	equ	0xFFA
  7265                           tblptru	equ	0xFF8
  7266                           tblptrh	equ	0xFF7
  7267                           tblptrl	equ	0xFF6
  7268                           tablat	equ	0xFF5
  7269                           prodh	equ	0xFF4
  7270                           prodl	equ	0xFF3
  7271                           intcon	equ	0xFF2
  7272                           intcon2	equ	0xFF1
  7273                           postinc0	equ	0xFEE
  7274                           wreg	equ	0xFE8
  7275                           indf2	equ	0xFDF
  7276                           postinc2	equ	0xFDE
  7277                           postdec2	equ	0xFDD
  7278                           plusw2	equ	0xFDB
  7279                           fsr2h	equ	0xFDA
  7280                           fsr2l	equ	0xFD9
  7281                           status	equ	0xFD8
  7282                           
  7283 ;; *************** function _OSCILLATOR_Initialize *****************
  7284 ;; Defined at:
  7285 ;;		line 124 in file "mcc_generated_files/mcc.c"
  7286 ;; Parameters:    Size  Location     Type
  7287 ;;		None
  7288 ;; Auto vars:     Size  Location     Type
  7289 ;;		None
  7290 ;; Return value:  Size  Location     Type
  7291 ;;		None               void
  7292 ;; Registers used:
  7293 ;;		wreg, status,2
  7294 ;; Tracked objects:
  7295 ;;		On entry : 0/0
  7296 ;;		On exit  : 0/0
  7297 ;;		Unchanged: 0/0
  7298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7299 ;;      Params:         0       0       0       0       0       0       0
  7300 ;;      Locals:         0       0       0       0       0       0       0
  7301 ;;      Temps:          0       0       0       0       0       0       0
  7302 ;;      Totals:         0       0       0       0       0       0       0
  7303 ;;Total ram usage:        0 bytes
  7304 ;; Hardware stack levels used:    1
  7305 ;; Hardware stack levels required when called:    4
  7306 ;; This function calls:
  7307 ;;		Nothing
  7308 ;; This function is called by:
  7309 ;;		_SYSTEM_Initialize
  7310 ;; This function uses a non-reentrant model
  7311 ;;
  7312                           
  7313                           	psect	text38
  7314  002C32                     __ptext38:
  7315                           	opt stack 0
  7316  002C32                     _OSCILLATOR_Initialize:
  7317                           	opt stack 25
  7318                           
  7319                           ;mcc.c: 127: OSCCON = 0x72;
  7320                           
  7321                           ; BSR set to: 15
  7322                           ;incstack = 0
  7323  002C32  0E72               	movlw	114
  7324  002C34  6ED3               	movwf	4051,c	;volatile
  7325                           
  7326                           ;mcc.c: 129: OSCCON2 = 0x04;
  7327  002C36  0E04               	movlw	4
  7328  002C38  6ED2               	movwf	4050,c	;volatile
  7329                           
  7330                           ;mcc.c: 131: OSCTUNE = 0x00;
  7331  002C3A  0E00               	movlw	0
  7332  002C3C  6E9B               	movwf	3995,c	;volatile
  7333  002C3E  0012               	return		;funcret
  7334  002C40                     __end_of_OSCILLATOR_Initialize:
  7335                           	opt stack 0
  7336                           tosu	equ	0xFFF
  7337                           tosh	equ	0xFFE
  7338                           tosl	equ	0xFFD
  7339                           pclath	equ	0xFFA
  7340                           tblptru	equ	0xFF8
  7341                           tblptrh	equ	0xFF7
  7342                           tblptrl	equ	0xFF6
  7343                           tablat	equ	0xFF5
  7344                           prodh	equ	0xFF4
  7345                           prodl	equ	0xFF3
  7346                           intcon	equ	0xFF2
  7347                           intcon2	equ	0xFF1
  7348                           postinc0	equ	0xFEE
  7349                           wreg	equ	0xFE8
  7350                           indf2	equ	0xFDF
  7351                           postinc2	equ	0xFDE
  7352                           postdec2	equ	0xFDD
  7353                           plusw2	equ	0xFDB
  7354                           fsr2h	equ	0xFDA
  7355                           fsr2l	equ	0xFD9
  7356                           status	equ	0xFD8
  7357                           
  7358 ;; *************** function _INTERRUPT_Initialize *****************
  7359 ;; Defined at:
  7360 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;		None
  7363 ;; Auto vars:     Size  Location     Type
  7364 ;;		None
  7365 ;; Return value:  Size  Location     Type
  7366 ;;		None               void
  7367 ;; Registers used:
  7368 ;;		None
  7369 ;; Tracked objects:
  7370 ;;		On entry : 0/0
  7371 ;;		On exit  : 0/0
  7372 ;;		Unchanged: 0/0
  7373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7374 ;;      Params:         0       0       0       0       0       0       0
  7375 ;;      Locals:         0       0       0       0       0       0       0
  7376 ;;      Temps:          0       0       0       0       0       0       0
  7377 ;;      Totals:         0       0       0       0       0       0       0
  7378 ;;Total ram usage:        0 bytes
  7379 ;; Hardware stack levels used:    1
  7380 ;; Hardware stack levels required when called:    4
  7381 ;; This function calls:
  7382 ;;		Nothing
  7383 ;; This function is called by:
  7384 ;;		_SYSTEM_Initialize
  7385 ;; This function uses a non-reentrant model
  7386 ;;
  7387                           
  7388                           	psect	text39
  7389  002C22                     __ptext39:
  7390                           	opt stack 0
  7391  002C22                     _INTERRUPT_Initialize:
  7392                           	opt stack 25
  7393                           
  7394                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  7395                           
  7396                           ;incstack = 0
  7397  002C22  9ED0               	bcf	4048,7,c	;volatile
  7398                           
  7399                           ;interrupt_manager.c: 60: IPR1bits.RC1IP = 0;
  7400  002C24  9A9F               	bcf	3999,5,c	;volatile
  7401                           
  7402                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
  7403  002C26  989F               	bcf	3999,4,c	;volatile
  7404                           
  7405                           ;interrupt_manager.c: 64: INTCON2bits.TMR0IP = 0;
  7406  002C28  94F1               	bcf	intcon2,2,c	;volatile
  7407                           
  7408                           ;interrupt_manager.c: 66: IPR1bits.ADIP = 0;
  7409  002C2A  9C9F               	bcf	3999,6,c	;volatile
  7410                           
  7411                           ;interrupt_manager.c: 68: IPR1bits.SSP1IP = 0;
  7412  002C2C  969F               	bcf	3999,3,c	;volatile
  7413                           
  7414                           ;interrupt_manager.c: 70: IPR2bits.BCL1IP = 0;
  7415  002C2E  96A2               	bcf	4002,3,c	;volatile
  7416  002C30  0012               	return		;funcret
  7417  002C32                     __end_of_INTERRUPT_Initialize:
  7418                           	opt stack 0
  7419                           tosu	equ	0xFFF
  7420                           tosh	equ	0xFFE
  7421                           tosl	equ	0xFFD
  7422                           pclath	equ	0xFFA
  7423                           tblptru	equ	0xFF8
  7424                           tblptrh	equ	0xFF7
  7425                           tblptrl	equ	0xFF6
  7426                           tablat	equ	0xFF5
  7427                           prodh	equ	0xFF4
  7428                           prodl	equ	0xFF3
  7429                           intcon	equ	0xFF2
  7430                           intcon2	equ	0xFF1
  7431                           postinc0	equ	0xFEE
  7432                           wreg	equ	0xFE8
  7433                           indf2	equ	0xFDF
  7434                           postinc2	equ	0xFDE
  7435                           postdec2	equ	0xFDD
  7436                           plusw2	equ	0xFDB
  7437                           fsr2h	equ	0xFDA
  7438                           fsr2l	equ	0xFD9
  7439                           status	equ	0xFD8
  7440                           
  7441 ;; *************** function _I2C1_Initialize *****************
  7442 ;; Defined at:
  7443 ;;		line 151 in file "mcc_generated_files/i2c1.c"
  7444 ;; Parameters:    Size  Location     Type
  7445 ;;		None
  7446 ;; Auto vars:     Size  Location     Type
  7447 ;;		None
  7448 ;; Return value:  Size  Location     Type
  7449 ;;		None               void
  7450 ;; Registers used:
  7451 ;;		wreg, status,2, status,0
  7452 ;; Tracked objects:
  7453 ;;		On entry : 0/0
  7454 ;;		On exit  : 0/0
  7455 ;;		Unchanged: 0/0
  7456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7457 ;;      Params:         0       0       0       0       0       0       0
  7458 ;;      Locals:         0       0       0       0       0       0       0
  7459 ;;      Temps:          0       0       0       0       0       0       0
  7460 ;;      Totals:         0       0       0       0       0       0       0
  7461 ;;Total ram usage:        0 bytes
  7462 ;; Hardware stack levels used:    1
  7463 ;; Hardware stack levels required when called:    4
  7464 ;; This function calls:
  7465 ;;		Nothing
  7466 ;; This function is called by:
  7467 ;;		_SYSTEM_Initialize
  7468 ;; This function uses a non-reentrant model
  7469 ;;
  7470                           
  7471                           	psect	text40
  7472  0028C2                     __ptext40:
  7473                           	opt stack 0
  7474  0028C2                     _I2C1_Initialize:
  7475                           	opt stack 25
  7476                           
  7477                           ;i2c1.c: 153: i2c1_object.pTrHead = i2c1_tr_queue;
  7478                           
  7479                           ;incstack = 0
  7480  0028C2  0ECE               	movlw	low _i2c1_tr_queue
  7481  0028C4  0100               	movlb	0	; () banked
  7482  0028C6  6F92               	movwf	(_i2c1_object+2)& (0+255),b
  7483  0028C8  0E00               	movlw	high _i2c1_tr_queue
  7484  0028CA  0100               	movlb	0	; () banked
  7485  0028CC  6F93               	movwf	(_i2c1_object+3)& (0+255),b
  7486                           
  7487                           ;i2c1.c: 154: i2c1_object.pTrTail = i2c1_tr_queue;
  7488  0028CE  0ECE               	movlw	low _i2c1_tr_queue
  7489  0028D0  0100               	movlb	0	; () banked
  7490  0028D2  6F90               	movwf	_i2c1_object& (0+255),b
  7491  0028D4  0E00               	movlw	high _i2c1_tr_queue
  7492  0028D6  0100               	movlb	0	; () banked
  7493  0028D8  6F91               	movwf	(_i2c1_object+1)& (0+255),b
  7494                           
  7495                           ; BSR set to: 0
  7496                           ;i2c1.c: 155: i2c1_object.trStatus.s.empty = 1;
  7497  0028DA  0100               	movlb	0	; () banked
  7498  0028DC  8394               	bsf	(_i2c1_object+4)& (0+255),1,b
  7499                           
  7500                           ; BSR set to: 0
  7501                           ;i2c1.c: 156: i2c1_object.trStatus.s.full = 0;
  7502  0028DE  0100               	movlb	0	; () banked
  7503  0028E0  9194               	bcf	(_i2c1_object+4)& (0+255),0,b
  7504                           
  7505                           ; BSR set to: 0
  7506                           ;i2c1.c: 158: i2c1_object.i2cErrors = 0;
  7507  0028E2  0E00               	movlw	0
  7508  0028E4  0100               	movlb	0	; () banked
  7509  0028E6  6F96               	movwf	(_i2c1_object+6)& (0+255),b
  7510                           
  7511                           ; BSR set to: 0
  7512                           ;i2c1.c: 161: SSP1STAT = 0x80;
  7513  0028E8  0E80               	movlw	128
  7514  0028EA  6EC7               	movwf	4039,c	;volatile
  7515                           
  7516                           ; BSR set to: 0
  7517                           ;i2c1.c: 163: SSP1CON1 = 0x28;
  7518  0028EC  0E28               	movlw	40
  7519  0028EE  6EC6               	movwf	4038,c	;volatile
  7520                           
  7521                           ; BSR set to: 0
  7522                           ;i2c1.c: 165: SSP1CON3 = 0x00;
  7523  0028F0  0E00               	movlw	0
  7524  0028F2  6ECB               	movwf	4043,c	;volatile
  7525                           
  7526                           ; BSR set to: 0
  7527                           ;i2c1.c: 167: SSP1ADD = 0x09;
  7528  0028F4  0E09               	movlw	9
  7529  0028F6  6EC8               	movwf	4040,c	;volatile
  7530                           
  7531                           ; BSR set to: 0
  7532                           ;i2c1.c: 171: PIR1bits.SSP1IF = 0;
  7533  0028F8  969E               	bcf	3998,3,c	;volatile
  7534                           
  7535                           ; BSR set to: 0
  7536                           ;i2c1.c: 173: PIE1bits.SSP1IE = 1;
  7537  0028FA  869D               	bsf	3997,3,c	;volatile
  7538                           
  7539                           ; BSR set to: 0
  7540  0028FC  0012               	return		;funcret
  7541  0028FE                     __end_of_I2C1_Initialize:
  7542                           	opt stack 0
  7543                           tosu	equ	0xFFF
  7544                           tosh	equ	0xFFE
  7545                           tosl	equ	0xFFD
  7546                           pclath	equ	0xFFA
  7547                           tblptru	equ	0xFF8
  7548                           tblptrh	equ	0xFF7
  7549                           tblptrl	equ	0xFF6
  7550                           tablat	equ	0xFF5
  7551                           prodh	equ	0xFF4
  7552                           prodl	equ	0xFF3
  7553                           intcon	equ	0xFF2
  7554                           intcon2	equ	0xFF1
  7555                           postinc0	equ	0xFEE
  7556                           wreg	equ	0xFE8
  7557                           indf2	equ	0xFDF
  7558                           postinc2	equ	0xFDE
  7559                           postdec2	equ	0xFDD
  7560                           plusw2	equ	0xFDB
  7561                           fsr2h	equ	0xFDA
  7562                           fsr2l	equ	0xFD9
  7563                           status	equ	0xFD8
  7564                           
  7565 ;; *************** function _EUSART1_Initialize *****************
  7566 ;; Defined at:
  7567 ;;		line 21 in file "UART.c"
  7568 ;; Parameters:    Size  Location     Type
  7569 ;;		None
  7570 ;; Auto vars:     Size  Location     Type
  7571 ;;		None
  7572 ;; Return value:  Size  Location     Type
  7573 ;;		None               void
  7574 ;; Registers used:
  7575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7576 ;; Tracked objects:
  7577 ;;		On entry : 0/0
  7578 ;;		On exit  : 0/0
  7579 ;;		Unchanged: 0/0
  7580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7581 ;;      Params:         0       0       0       0       0       0       0
  7582 ;;      Locals:         0       0       0       0       0       0       0
  7583 ;;      Temps:          0       0       0       0       0       0       0
  7584 ;;      Totals:         0       0       0       0       0       0       0
  7585 ;;Total ram usage:        0 bytes
  7586 ;; Hardware stack levels used:    1
  7587 ;; Hardware stack levels required when called:    6
  7588 ;; This function calls:
  7589 ;;		_UART_buff_init
  7590 ;; This function is called by:
  7591 ;;		_SYSTEM_Initialize
  7592 ;; This function uses a non-reentrant model
  7593 ;;
  7594                           
  7595                           	psect	text41
  7596  0028FE                     __ptext41:
  7597                           	opt stack 0
  7598  0028FE                     _EUSART1_Initialize:
  7599                           	opt stack 23
  7600                           
  7601                           ;UART.c: 23: PIE1bits.RC1IE = 0;
  7602                           
  7603                           ; BSR set to: 0
  7604                           ;incstack = 0
  7605  0028FE  9A9D               	bcf	3997,5,c	;volatile
  7606                           
  7607                           ;UART.c: 24: PIE1bits.TX1IE = 0;
  7608  002900  989D               	bcf	3997,4,c	;volatile
  7609                           
  7610                           ;UART.c: 29: BAUD1CON = 0x48;
  7611  002902  0E48               	movlw	72
  7612  002904  6EB8               	movwf	4024,c	;volatile
  7613                           
  7614                           ;UART.c: 32: RC1STA = 0x98;
  7615  002906  0E98               	movlw	152
  7616  002908  6EAB               	movwf	4011,c	;volatile
  7617                           
  7618                           ;UART.c: 35: TX1STA = 0x26;
  7619  00290A  0E26               	movlw	38
  7620  00290C  6EAC               	movwf	4012,c	;volatile
  7621                           
  7622                           ;UART.c: 38: SPBRG1 = (((16000000/38400)/4)-1);
  7623  00290E  0E67               	movlw	103
  7624  002910  6EAF               	movwf	4015,c	;volatile
  7625                           
  7626                           ;UART.c: 41: SPBRGH1 = 0x00;
  7627  002912  0E00               	movlw	0
  7628  002914  6EB0               	movwf	4016,c	;volatile
  7629                           
  7630                           ;UART.c: 44: TXREG1 = 0x00;
  7631  002916  0E00               	movlw	0
  7632  002918  6EAD               	movwf	4013,c	;volatile
  7633                           
  7634                           ;UART.c: 47: RCREG1 = 0x00;
  7635  00291A  0E00               	movlw	0
  7636  00291C  6EAE               	movwf	4014,c	;volatile
  7637                           
  7638                           ;UART.c: 49: UART_buff_init(&input_buffer);
  7639  00291E  0E00               	movlw	low _input_buffer
  7640  002920  6E23               	movwf	UART_buff_init@_this,c
  7641  002922  0E03               	movlw	high _input_buffer
  7642  002924  6E24               	movwf	UART_buff_init@_this+1,c
  7643  002926  EC8F  F015         	call	_UART_buff_init	;wreg free
  7644                           
  7645                           ;UART.c: 50: UART_buff_init(&output_buffer);
  7646  00292A  0E00               	movlw	low _output_buffer
  7647  00292C  6E23               	movwf	UART_buff_init@_this,c
  7648  00292E  0E04               	movlw	high _output_buffer
  7649  002930  6E24               	movwf	UART_buff_init@_this+1,c
  7650  002932  EC8F  F015         	call	_UART_buff_init	;wreg free
  7651                           
  7652                           ;UART.c: 52: PIE1bits.RC1IE = 1;
  7653  002936  8A9D               	bsf	3997,5,c	;volatile
  7654  002938  0012               	return		;funcret
  7655  00293A                     __end_of_EUSART1_Initialize:
  7656                           	opt stack 0
  7657                           tosu	equ	0xFFF
  7658                           tosh	equ	0xFFE
  7659                           tosl	equ	0xFFD
  7660                           pclath	equ	0xFFA
  7661                           tblptru	equ	0xFF8
  7662                           tblptrh	equ	0xFF7
  7663                           tblptrl	equ	0xFF6
  7664                           tablat	equ	0xFF5
  7665                           prodh	equ	0xFF4
  7666                           prodl	equ	0xFF3
  7667                           intcon	equ	0xFF2
  7668                           intcon2	equ	0xFF1
  7669                           postinc0	equ	0xFEE
  7670                           wreg	equ	0xFE8
  7671                           indf2	equ	0xFDF
  7672                           postinc2	equ	0xFDE
  7673                           postdec2	equ	0xFDD
  7674                           plusw2	equ	0xFDB
  7675                           fsr2h	equ	0xFDA
  7676                           fsr2l	equ	0xFD9
  7677                           status	equ	0xFD8
  7678                           
  7679 ;; *************** function _UART_buff_init *****************
  7680 ;; Defined at:
  7681 ;;		line 56 in file "UART.c"
  7682 ;; Parameters:    Size  Location     Type
  7683 ;;  _this           2   34[COMRAM] PTR struct UART_ring_buf
  7684 ;;		 -> output_buffer(206), input_buffer(206), 
  7685 ;; Auto vars:     Size  Location     Type
  7686 ;;		None
  7687 ;; Return value:  Size  Location     Type
  7688 ;;		None               void
  7689 ;; Registers used:
  7690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7691 ;; Tracked objects:
  7692 ;;		On entry : 0/0
  7693 ;;		On exit  : 0/0
  7694 ;;		Unchanged: 0/0
  7695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7696 ;;      Params:         2       0       0       0       0       0       0
  7697 ;;      Locals:         0       0       0       0       0       0       0
  7698 ;;      Temps:          0       0       0       0       0       0       0
  7699 ;;      Totals:         2       0       0       0       0       0       0
  7700 ;;Total ram usage:        2 bytes
  7701 ;; Hardware stack levels used:    1
  7702 ;; Hardware stack levels required when called:    5
  7703 ;; This function calls:
  7704 ;;		_memset
  7705 ;; This function is called by:
  7706 ;;		_EUSART1_Initialize
  7707 ;; This function uses a non-reentrant model
  7708 ;;
  7709                           
  7710                           	psect	text42
  7711  002B1E                     __ptext42:
  7712                           	opt stack 0
  7713  002B1E                     _UART_buff_init:
  7714                           	opt stack 23
  7715                           
  7716                           ;UART.c: 65: memset(_this, 0, sizeof (*_this));
  7717                           
  7718                           ;incstack = 0
  7719  002B1E  C023  F01B         	movff	UART_buff_init@_this,memset@p1
  7720  002B22  C024  F01C         	movff	UART_buff_init@_this+1,memset@p1+1
  7721  002B26  0E00               	movlw	0
  7722  002B28  6E1E               	movwf	memset@c+1,c
  7723  002B2A  0E00               	movlw	0
  7724  002B2C  6E1D               	movwf	memset@c,c
  7725  002B2E  0E00               	movlw	0
  7726  002B30  6E20               	movwf	memset@n+1,c
  7727  002B32  0ECE               	movlw	206
  7728  002B34  6E1F               	movwf	memset@n,c
  7729  002B36  EC17  F015         	call	_memset	;wreg free
  7730  002B3A  0012               	return		;funcret
  7731  002B3C                     __end_of_UART_buff_init:
  7732                           	opt stack 0
  7733                           tosu	equ	0xFFF
  7734                           tosh	equ	0xFFE
  7735                           tosl	equ	0xFFD
  7736                           pclath	equ	0xFFA
  7737                           tblptru	equ	0xFF8
  7738                           tblptrh	equ	0xFF7
  7739                           tblptrl	equ	0xFF6
  7740                           tablat	equ	0xFF5
  7741                           prodh	equ	0xFF4
  7742                           prodl	equ	0xFF3
  7743                           intcon	equ	0xFF2
  7744                           intcon2	equ	0xFF1
  7745                           postinc0	equ	0xFEE
  7746                           wreg	equ	0xFE8
  7747                           indf2	equ	0xFDF
  7748                           postinc2	equ	0xFDE
  7749                           postdec2	equ	0xFDD
  7750                           plusw2	equ	0xFDB
  7751                           fsr2h	equ	0xFDA
  7752                           fsr2l	equ	0xFD9
  7753                           status	equ	0xFD8
  7754                           
  7755 ;; *************** function _memset *****************
  7756 ;; Defined at:
  7757 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\memset.c"
  7758 ;; Parameters:    Size  Location     Type
  7759 ;;  p1              2   26[COMRAM] PTR void 
  7760 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  7761 ;;  c               2   28[COMRAM] int 
  7762 ;;  n               2   30[COMRAM] unsigned int 
  7763 ;; Auto vars:     Size  Location     Type
  7764 ;;  p               2   32[COMRAM] PTR unsigned char 
  7765 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  7766 ;; Return value:  Size  Location     Type
  7767 ;;                  2   26[COMRAM] PTR void 
  7768 ;; Registers used:
  7769 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7770 ;; Tracked objects:
  7771 ;;		On entry : 0/0
  7772 ;;		On exit  : 0/0
  7773 ;;		Unchanged: 0/0
  7774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7775 ;;      Params:         6       0       0       0       0       0       0
  7776 ;;      Locals:         2       0       0       0       0       0       0
  7777 ;;      Temps:          0       0       0       0       0       0       0
  7778 ;;      Totals:         8       0       0       0       0       0       0
  7779 ;;Total ram usage:        8 bytes
  7780 ;; Hardware stack levels used:    1
  7781 ;; Hardware stack levels required when called:    4
  7782 ;; This function calls:
  7783 ;;		Nothing
  7784 ;; This function is called by:
  7785 ;;		_FastTransfer_buffer_flush
  7786 ;;		_UART_buff_init
  7787 ;;		_UART_buff_flush
  7788 ;; This function uses a non-reentrant model
  7789 ;;
  7790                           
  7791                           	psect	text43
  7792  002A2E                     __ptext43:
  7793                           	opt stack 0
  7794  002A2E                     _memset:
  7795                           	opt stack 22
  7796                           
  7797                           ;incstack = 0
  7798  002A2E  C01B  F021         	movff	memset@p1,memset@p
  7799  002A32  C01C  F022         	movff	memset@p1+1,memset@p+1
  7800  002A36  D009               	goto	l4470
  7801  002A38                     l4466:
  7802  002A38  C021  FFD9         	movff	memset@p,fsr2l
  7803  002A3C  C022  FFDA         	movff	memset@p+1,fsr2h
  7804  002A40  C01D  FFDF         	movff	memset@c,indf2
  7805  002A44  4A21               	infsnz	memset@p,f,c
  7806  002A46  2A22               	incf	memset@p+1,f,c
  7807  002A48  D000               	goto	l4470
  7808  002A4A                     l4470:
  7809  002A4A  061F               	decf	memset@n,f,c
  7810  002A4C  A0D8               	btfss	status,0,c
  7811  002A4E  0620               	decf	memset@n+1,f,c
  7812  002A50  281F               	incf	memset@n,w,c
  7813  002A52  E1F2               	bnz	l4466
  7814  002A54  2820               	incf	memset@n+1,w,c
  7815  002A56  A4D8               	btfss	status,2,c
  7816  002A58  D7EF               	goto	l4466
  7817                           
  7818                           ;	Return value of _memset is never used
  7819  002A5A  0012               	return		;funcret
  7820  002A5C                     __end_of_memset:
  7821                           	opt stack 0
  7822                           tosu	equ	0xFFF
  7823                           tosh	equ	0xFFE
  7824                           tosl	equ	0xFFD
  7825                           pclath	equ	0xFFA
  7826                           tblptru	equ	0xFF8
  7827                           tblptrh	equ	0xFF7
  7828                           tblptrl	equ	0xFF6
  7829                           tablat	equ	0xFF5
  7830                           prodh	equ	0xFF4
  7831                           prodl	equ	0xFF3
  7832                           intcon	equ	0xFF2
  7833                           intcon2	equ	0xFF1
  7834                           postinc0	equ	0xFEE
  7835                           wreg	equ	0xFE8
  7836                           indf2	equ	0xFDF
  7837                           postinc2	equ	0xFDE
  7838                           postdec2	equ	0xFDD
  7839                           plusw2	equ	0xFDB
  7840                           fsr2h	equ	0xFDA
  7841                           fsr2l	equ	0xFD9
  7842                           status	equ	0xFD8
  7843                           
  7844 ;; *************** function _ADC_Initialize *****************
  7845 ;; Defined at:
  7846 ;;		line 59 in file "mcc_generated_files/adc.c"
  7847 ;; Parameters:    Size  Location     Type
  7848 ;;		None
  7849 ;; Auto vars:     Size  Location     Type
  7850 ;;		None
  7851 ;; Return value:  Size  Location     Type
  7852 ;;		None               void
  7853 ;; Registers used:
  7854 ;;		wreg, status,2
  7855 ;; Tracked objects:
  7856 ;;		On entry : 0/0
  7857 ;;		On exit  : 0/0
  7858 ;;		Unchanged: 0/0
  7859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7860 ;;      Params:         0       0       0       0       0       0       0
  7861 ;;      Locals:         0       0       0       0       0       0       0
  7862 ;;      Temps:          0       0       0       0       0       0       0
  7863 ;;      Totals:         0       0       0       0       0       0       0
  7864 ;;Total ram usage:        0 bytes
  7865 ;; Hardware stack levels used:    1
  7866 ;; Hardware stack levels required when called:    4
  7867 ;; This function calls:
  7868 ;;		Nothing
  7869 ;; This function is called by:
  7870 ;;		_SYSTEM_Initialize
  7871 ;; This function uses a non-reentrant model
  7872 ;;
  7873                           
  7874                           	psect	text44
  7875  002BC0                     __ptext44:
  7876                           	opt stack 0
  7877  002BC0                     _ADC_Initialize:
  7878                           	opt stack 25
  7879                           
  7880                           ;adc.c: 64: ADCON0 = 0x01;
  7881                           
  7882                           ;incstack = 0
  7883  002BC0  0E01               	movlw	1
  7884  002BC2  6EC2               	movwf	4034,c	;volatile
  7885                           
  7886                           ;adc.c: 67: ADCON1 = 0x80;
  7887  002BC4  0E80               	movlw	128
  7888  002BC6  6EC1               	movwf	4033,c	;volatile
  7889                           
  7890                           ;adc.c: 70: ADCON2 = 0x05;
  7891  002BC8  0E05               	movlw	5
  7892  002BCA  6EC0               	movwf	4032,c	;volatile
  7893                           
  7894                           ;adc.c: 73: ADRESL = 0x00;
  7895  002BCC  0E00               	movlw	0
  7896  002BCE  6EC3               	movwf	4035,c	;volatile
  7897                           
  7898                           ;adc.c: 76: ADRESH = 0x00;
  7899  002BD0  0E00               	movlw	0
  7900  002BD2  6EC4               	movwf	4036,c	;volatile
  7901                           
  7902                           ;adc.c: 79: PIE1bits.ADIE = 1;
  7903  002BD4  8C9D               	bsf	3997,6,c	;volatile
  7904  002BD6  0012               	return		;funcret
  7905  002BD8                     __end_of_ADC_Initialize:
  7906                           	opt stack 0
  7907                           tosu	equ	0xFFF
  7908                           tosh	equ	0xFFE
  7909                           tosl	equ	0xFFD
  7910                           pclath	equ	0xFFA
  7911                           tblptru	equ	0xFF8
  7912                           tblptrh	equ	0xFF7
  7913                           tblptrl	equ	0xFF6
  7914                           tablat	equ	0xFF5
  7915                           prodh	equ	0xFF4
  7916                           prodl	equ	0xFF3
  7917                           intcon	equ	0xFF2
  7918                           intcon2	equ	0xFF1
  7919                           postinc0	equ	0xFEE
  7920                           wreg	equ	0xFE8
  7921                           indf2	equ	0xFDF
  7922                           postinc2	equ	0xFDE
  7923                           postdec2	equ	0xFDD
  7924                           plusw2	equ	0xFDB
  7925                           fsr2h	equ	0xFDA
  7926                           fsr2l	equ	0xFD9
  7927                           status	equ	0xFD8
  7928                           
  7929 ;; *************** function _LEDwriteDisplay *****************
  7930 ;; Defined at:
  7931 ;;		line 114 in file "LED_BarGraph.c"
  7932 ;; Parameters:    Size  Location     Type
  7933 ;;  i2c_addr        1    wreg     unsigned char 
  7934 ;; Auto vars:     Size  Location     Type
  7935 ;;  i2c_addr        1   20[BANK0 ] unsigned char 
  7936 ;;  writeBuffer    20    0[BANK0 ] unsigned char [20]
  7937 ;;  timeOut         2   21[BANK0 ] unsigned int 
  7938 ;;  status          1   23[BANK0 ] enum E8855
  7939 ;; Return value:  Size  Location     Type
  7940 ;;		None               void
  7941 ;; Registers used:
  7942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7943 ;; Tracked objects:
  7944 ;;		On entry : 0/0
  7945 ;;		On exit  : 0/0
  7946 ;;		Unchanged: 0/0
  7947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7948 ;;      Params:         0       0       0       0       0       0       0
  7949 ;;      Locals:         0      24       0       0       0       0       0
  7950 ;;      Temps:          0       0       0       0       0       0       0
  7951 ;;      Totals:         0      24       0       0       0       0       0
  7952 ;;Total ram usage:       24 bytes
  7953 ;; Hardware stack levels used:    1
  7954 ;; Hardware stack levels required when called:    6
  7955 ;; This function calls:
  7956 ;;		_I2C1_MasterWrite
  7957 ;; This function is called by:
  7958 ;;		_main
  7959 ;; This function uses a non-reentrant model
  7960 ;;
  7961                           
  7962                           	psect	text45
  7963  0013D4                     __ptext45:
  7964                           	opt stack 0
  7965  0013D4                     _LEDwriteDisplay:
  7966                           	opt stack 24
  7967                           
  7968                           ;incstack = 0
  7969                           ;LEDwriteDisplay@i2c_addr stored from wreg
  7970  0013D4  0100               	movlb	0	; () banked
  7971  0013D6  6FE7               	movwf	LEDwriteDisplay@i2c_addr& (0+255),b
  7972                           
  7973                           ; BSR set to: 0
  7974                           ;LED_BarGraph.c: 115: uint8_t writeBuffer[20];
  7975                           ;LED_BarGraph.c: 116: uint16_t timeOut;
  7976                           ;LED_BarGraph.c: 117: writeBuffer[0] = 0x00;
  7977  0013D8  0E00               	movlw	0
  7978  0013DA  0100               	movlb	0	; () banked
  7979  0013DC  6FD3               	movwf	LEDwriteDisplay@writeBuffer& (0+255),b
  7980                           
  7981                           ;LED_BarGraph.c: 118: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  7982  0013DE  0E02               	movlw	2
  7983  0013E0  0100               	movlb	0	; () banked
  7984  0013E2  6FEA               	movwf	LEDwriteDisplay@status& (0+255),b
  7985                           
  7986                           ;LED_BarGraph.c: 120: timeOut = 0;
  7987  0013E4  0E00               	movlw	0
  7988  0013E6  0100               	movlb	0	; () banked
  7989  0013E8  6FE9               	movwf	(LEDwriteDisplay@timeOut+1)& (0+255),b
  7990  0013EA  0E00               	movlw	0
  7991  0013EC  6FE8               	movwf	LEDwriteDisplay@timeOut& (0+255),b
  7992                           
  7993                           ;LED_BarGraph.c: 121: while (status != I2C1_MESSAGE_FAIL) {
  7994  0013EE  D030               	goto	l5276
  7995  0013F0                     l5256:
  7996                           
  7997                           ; BSR set to: 0
  7998                           ;LED_BarGraph.c: 123: I2C1_MasterWrite(&writeBuffer,
  7999                           ;LED_BarGraph.c: 124: 1,
  8000                           ;LED_BarGraph.c: 125: i2c_addr,
  8001                           ;LED_BarGraph.c: 126: &status);
  8002  0013F0  0ED3               	movlw	low LEDwriteDisplay@writeBuffer
  8003  0013F2  6E24               	movwf	I2C1_MasterWrite@pdata,c
  8004  0013F4  0E00               	movlw	high LEDwriteDisplay@writeBuffer
  8005  0013F6  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
  8006  0013F8  0E01               	movlw	1
  8007  0013FA  6E26               	movwf	I2C1_MasterWrite@length,c
  8008  0013FC  C0E7  F027         	movff	LEDwriteDisplay@i2c_addr,I2C1_MasterWrite@address
  8009  001400  6A28               	clrf	I2C1_MasterWrite@address+1,c
  8010  001402  0EEA               	movlw	low LEDwriteDisplay@status
  8011  001404  6E29               	movwf	I2C1_MasterWrite@pflag,c
  8012  001406  0E00               	movlw	high LEDwriteDisplay@status
  8013  001408  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
  8014  00140A  ECB5  F013         	call	_I2C1_MasterWrite	;wreg free
  8015                           
  8016                           ;LED_BarGraph.c: 129: while (status == I2C1_MESSAGE_PENDING);
  8017  00140E  D000               	goto	l5258
  8018  001410                     l5258:
  8019  001410  0E02               	movlw	2
  8020  001412  0100               	movlb	0	; () banked
  8021  001414  19EA               	xorwf	LEDwriteDisplay@status& (0+255),w,b
  8022  001416  B4D8               	btfsc	status,2,c
  8023  001418  D7FB               	goto	l5258
  8024                           
  8025                           ; BSR set to: 0
  8026                           ;LED_BarGraph.c: 131: if (status == I2C1_MESSAGE_COMPLETE)
  8027                           
  8028                           ; BSR set to: 0
  8029  00141A  0100               	movlb	0	; () banked
  8030  00141C  51EA               	movf	LEDwriteDisplay@status& (0+255),w,b
  8031  00141E  0100               	movlb	0	; () banked
  8032  001420  B4D8               	btfsc	status,2,c
  8033  001422  D01A               	goto	l5278
  8034  001424  D001               	goto	l5264
  8035                           
  8036                           ; BSR set to: 0
  8037                           ;LED_BarGraph.c: 132: break;
  8038  001426  D018               	goto	l5278
  8039  001428                     l5264:
  8040                           
  8041                           ; BSR set to: 0
  8042                           ;LED_BarGraph.c: 133: if (timeOut == 100)
  8043  001428  0E64               	movlw	100
  8044  00142A  0100               	movlb	0	; () banked
  8045  00142C  19E8               	xorwf	LEDwriteDisplay@timeOut& (0+255),w,b
  8046  00142E  0100               	movlb	0	; () banked
  8047  001430  11E9               	iorwf	(LEDwriteDisplay@timeOut+1)& (0+255),w,b
  8048  001432  B4D8               	btfsc	status,2,c
  8049  001434  D011               	goto	l5278
  8050  001436  D001               	goto	l5268
  8051                           
  8052                           ; BSR set to: 0
  8053                           ;LED_BarGraph.c: 134: break;
  8054  001438  D00F               	goto	l5278
  8055  00143A                     l5268:
  8056                           
  8057                           ; BSR set to: 0
  8058                           ;LED_BarGraph.c: 135: if (status == I2C1_MESSAGE_FAIL)
  8059  00143A  0100               	movlb	0	; () banked
  8060  00143C  05EA               	decf	LEDwriteDisplay@status& (0+255),w,b
  8061  00143E  B4D8               	btfsc	status,2,c
  8062  001440  D00B               	goto	l5278
  8063  001442  D002               	goto	l5274
  8064                           
  8065                           ; BSR set to: 0
  8066                           ;LED_BarGraph.c: 136: break;
  8067  001444  D009               	goto	l5278
  8068                           
  8069                           ; BSR set to: 0
  8070  001446  D004               	goto	l5276
  8071  001448                     l5274:
  8072                           
  8073                           ; BSR set to: 0
  8074                           ;LED_BarGraph.c: 137: else
  8075                           ;LED_BarGraph.c: 138: timeOut++;
  8076  001448  0100               	movlb	0	; () banked
  8077  00144A  4BE8               	infsnz	LEDwriteDisplay@timeOut& (0+255),f,b
  8078  00144C  2BE9               	incf	(LEDwriteDisplay@timeOut+1)& (0+255),f,b
  8079                           
  8080                           ; BSR set to: 0
  8081  00144E  D000               	goto	l5276
  8082  001450                     l5276:
  8083                           
  8084                           ; BSR set to: 0
  8085  001450  0100               	movlb	0	; () banked
  8086  001452  05EA               	decf	LEDwriteDisplay@status& (0+255),w,b
  8087  001454  A4D8               	btfss	status,2,c
  8088  001456  D7CC               	goto	l5256
  8089  001458                     l5278:
  8090                           
  8091                           ; BSR set to: 0
  8092                           ;LED_BarGraph.c: 139: }
  8093                           ;LED_BarGraph.c: 140: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  8094  001458  0E02               	movlw	2
  8095  00145A  0100               	movlb	0	; () banked
  8096  00145C  6FEA               	movwf	LEDwriteDisplay@status& (0+255),b
  8097                           
  8098                           ;LED_BarGraph.c: 145: writeBuffer[0] = 0;
  8099  00145E  0E00               	movlw	0
  8100  001460  0100               	movlb	0	; () banked
  8101  001462  6FD3               	movwf	LEDwriteDisplay@writeBuffer& (0+255),b
  8102                           
  8103                           ; BSR set to: 0
  8104                           ;LED_BarGraph.c: 146: writeBuffer[1] = displaybuffer[0] & 0xFF;
  8105  001464  C060  F0D4         	movff	_displaybuffer,LEDwriteDisplay@writeBuffer+1
  8106                           
  8107                           ; BSR set to: 0
  8108                           ;LED_BarGraph.c: 147: writeBuffer[2] = displaybuffer[0] >> 8;
  8109  001468  C061  F0D5         	movff	_displaybuffer+1,LEDwriteDisplay@writeBuffer+2
  8110                           
  8111                           ; BSR set to: 0
  8112                           ;LED_BarGraph.c: 148: writeBuffer[3] = displaybuffer[1] & 0xFF;
  8113  00146C  C064  F0D6         	movff	_displaybuffer+4,LEDwriteDisplay@writeBuffer+3
  8114                           
  8115                           ; BSR set to: 0
  8116                           ;LED_BarGraph.c: 149: writeBuffer[4] = displaybuffer[1] >> 8;
  8117  001470  C065  F0D7         	movff	_displaybuffer+5,LEDwriteDisplay@writeBuffer+4
  8118                           
  8119                           ; BSR set to: 0
  8120                           ;LED_BarGraph.c: 150: writeBuffer[5] = displaybuffer[2] & 0xFF;
  8121  001474  C068  F0D8         	movff	_displaybuffer+8,LEDwriteDisplay@writeBuffer+5
  8122                           
  8123                           ; BSR set to: 0
  8124                           ;LED_BarGraph.c: 151: writeBuffer[6] = displaybuffer[2] >> 8;
  8125  001478  C069  F0D9         	movff	_displaybuffer+9,LEDwriteDisplay@writeBuffer+6
  8126                           
  8127                           ; BSR set to: 0
  8128                           ;LED_BarGraph.c: 152: writeBuffer[7] = displaybuffer[3] & 0xFF;
  8129  00147C  C06C  F0DA         	movff	_displaybuffer+12,LEDwriteDisplay@writeBuffer+7
  8130                           
  8131                           ; BSR set to: 0
  8132                           ;LED_BarGraph.c: 153: writeBuffer[8] = displaybuffer[3] >> 8;
  8133  001480  C06D  F0DB         	movff	_displaybuffer+13,LEDwriteDisplay@writeBuffer+8
  8134                           
  8135                           ; BSR set to: 0
  8136                           ;LED_BarGraph.c: 154: writeBuffer[9] = displaybuffer[4] & 0xFF;
  8137  001484  C070  F0DC         	movff	_displaybuffer+16,LEDwriteDisplay@writeBuffer+9
  8138                           
  8139                           ; BSR set to: 0
  8140                           ;LED_BarGraph.c: 155: writeBuffer[10] = displaybuffer[4] >> 8;
  8141  001488  C071  F0DD         	movff	_displaybuffer+17,LEDwriteDisplay@writeBuffer+10
  8142                           
  8143                           ; BSR set to: 0
  8144                           ;LED_BarGraph.c: 156: writeBuffer[11] = displaybuffer[5] & 0xFF;
  8145  00148C  C074  F0DE         	movff	_displaybuffer+20,LEDwriteDisplay@writeBuffer+11
  8146                           
  8147                           ; BSR set to: 0
  8148                           ;LED_BarGraph.c: 157: writeBuffer[12] = displaybuffer[5] >> 8;
  8149  001490  C075  F0DF         	movff	_displaybuffer+21,LEDwriteDisplay@writeBuffer+12
  8150                           
  8151                           ; BSR set to: 0
  8152                           ;LED_BarGraph.c: 158: writeBuffer[13] = displaybuffer[6] & 0xFF;
  8153  001494  C078  F0E0         	movff	_displaybuffer+24,LEDwriteDisplay@writeBuffer+13
  8154                           
  8155                           ; BSR set to: 0
  8156                           ;LED_BarGraph.c: 159: writeBuffer[14] = displaybuffer[6] >> 8;
  8157  001498  C079  F0E1         	movff	_displaybuffer+25,LEDwriteDisplay@writeBuffer+14
  8158                           
  8159                           ; BSR set to: 0
  8160                           ;LED_BarGraph.c: 160: writeBuffer[15] = displaybuffer[7] & 0xFF;
  8161  00149C  C07C  F0E2         	movff	_displaybuffer+28,LEDwriteDisplay@writeBuffer+15
  8162                           
  8163                           ; BSR set to: 0
  8164                           ;LED_BarGraph.c: 161: writeBuffer[16] = displaybuffer[7] >> 8;
  8165  0014A0  C07D  F0E3         	movff	_displaybuffer+29,LEDwriteDisplay@writeBuffer+16
  8166                           
  8167                           ; BSR set to: 0
  8168                           ;LED_BarGraph.c: 162: writeBuffer[17] = displaybuffer[8] & 0xFF;
  8169  0014A4  C080  F0E4         	movff	_displaybuffer+32,LEDwriteDisplay@writeBuffer+17
  8170                           
  8171                           ; BSR set to: 0
  8172                           ;LED_BarGraph.c: 163: writeBuffer[18] = displaybuffer[8] >> 8;
  8173  0014A8  C081  F0E5         	movff	_displaybuffer+33,LEDwriteDisplay@writeBuffer+18
  8174                           
  8175                           ;LED_BarGraph.c: 165: timeOut = 0;
  8176  0014AC  0E00               	movlw	0
  8177  0014AE  0100               	movlb	0	; () banked
  8178  0014B0  6FE9               	movwf	(LEDwriteDisplay@timeOut+1)& (0+255),b
  8179  0014B2  0E00               	movlw	0
  8180  0014B4  6FE8               	movwf	LEDwriteDisplay@timeOut& (0+255),b
  8181                           
  8182                           ;LED_BarGraph.c: 166: while (status != I2C1_MESSAGE_FAIL) {
  8183  0014B6  D030               	goto	l5336
  8184  0014B8                     l5316:
  8185                           
  8186                           ; BSR set to: 0
  8187                           ;LED_BarGraph.c: 168: I2C1_MasterWrite(&writeBuffer,
  8188                           ;LED_BarGraph.c: 169: 17,
  8189                           ;LED_BarGraph.c: 170: i2c_addr,
  8190                           ;LED_BarGraph.c: 171: &status);
  8191  0014B8  0ED3               	movlw	low LEDwriteDisplay@writeBuffer
  8192  0014BA  6E24               	movwf	I2C1_MasterWrite@pdata,c
  8193  0014BC  0E00               	movlw	high LEDwriteDisplay@writeBuffer
  8194  0014BE  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
  8195  0014C0  0E11               	movlw	17
  8196  0014C2  6E26               	movwf	I2C1_MasterWrite@length,c
  8197  0014C4  C0E7  F027         	movff	LEDwriteDisplay@i2c_addr,I2C1_MasterWrite@address
  8198  0014C8  6A28               	clrf	I2C1_MasterWrite@address+1,c
  8199  0014CA  0EEA               	movlw	low LEDwriteDisplay@status
  8200  0014CC  6E29               	movwf	I2C1_MasterWrite@pflag,c
  8201  0014CE  0E00               	movlw	high LEDwriteDisplay@status
  8202  0014D0  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
  8203  0014D2  ECB5  F013         	call	_I2C1_MasterWrite	;wreg free
  8204                           
  8205                           ;LED_BarGraph.c: 174: while (status == I2C1_MESSAGE_PENDING);
  8206  0014D6  D000               	goto	l5318
  8207  0014D8                     l5318:
  8208  0014D8  0E02               	movlw	2
  8209  0014DA  0100               	movlb	0	; () banked
  8210  0014DC  19EA               	xorwf	LEDwriteDisplay@status& (0+255),w,b
  8211  0014DE  B4D8               	btfsc	status,2,c
  8212  0014E0  D7FB               	goto	l5318
  8213                           
  8214                           ; BSR set to: 0
  8215                           ;LED_BarGraph.c: 176: if (status == I2C1_MESSAGE_COMPLETE)
  8216                           
  8217                           ; BSR set to: 0
  8218  0014E2  0100               	movlb	0	; () banked
  8219  0014E4  51EA               	movf	LEDwriteDisplay@status& (0+255),w,b
  8220  0014E6  0100               	movlb	0	; () banked
  8221  0014E8  B4D8               	btfsc	status,2,c
  8222  0014EA  0012               	return	
  8223  0014EC  D001               	goto	l5324
  8224                           
  8225                           ; BSR set to: 0
  8226                           ;LED_BarGraph.c: 177: break;
  8227  0014EE  0012               	return	
  8228  0014F0                     l5324:
  8229                           
  8230                           ; BSR set to: 0
  8231                           ;LED_BarGraph.c: 178: if (timeOut == 100)
  8232  0014F0  0E64               	movlw	100
  8233  0014F2  0100               	movlb	0	; () banked
  8234  0014F4  19E8               	xorwf	LEDwriteDisplay@timeOut& (0+255),w,b
  8235  0014F6  0100               	movlb	0	; () banked
  8236  0014F8  11E9               	iorwf	(LEDwriteDisplay@timeOut+1)& (0+255),w,b
  8237  0014FA  B4D8               	btfsc	status,2,c
  8238  0014FC  0012               	return	
  8239  0014FE  D001               	goto	l5328
  8240                           
  8241                           ; BSR set to: 0
  8242                           ;LED_BarGraph.c: 179: break;
  8243  001500  0012               	return	
  8244  001502                     l5328:
  8245                           
  8246                           ; BSR set to: 0
  8247                           ;LED_BarGraph.c: 180: if (status == I2C1_MESSAGE_FAIL)
  8248  001502  0100               	movlb	0	; () banked
  8249  001504  05EA               	decf	LEDwriteDisplay@status& (0+255),w,b
  8250  001506  B4D8               	btfsc	status,2,c
  8251  001508  0012               	return	
  8252  00150A  D002               	goto	l5334
  8253                           
  8254                           ; BSR set to: 0
  8255                           ;LED_BarGraph.c: 181: break;
  8256  00150C  0012               	return	
  8257                           
  8258                           ; BSR set to: 0
  8259  00150E  D004               	goto	l5336
  8260  001510                     l5334:
  8261                           
  8262                           ; BSR set to: 0
  8263                           ;LED_BarGraph.c: 182: else
  8264                           ;LED_BarGraph.c: 183: timeOut++;
  8265  001510  0100               	movlb	0	; () banked
  8266  001512  4BE8               	infsnz	LEDwriteDisplay@timeOut& (0+255),f,b
  8267  001514  2BE9               	incf	(LEDwriteDisplay@timeOut+1)& (0+255),f,b
  8268                           
  8269                           ; BSR set to: 0
  8270  001516  D000               	goto	l5336
  8271  001518                     l5336:
  8272                           
  8273                           ; BSR set to: 0
  8274  001518  0100               	movlb	0	; () banked
  8275  00151A  05EA               	decf	LEDwriteDisplay@status& (0+255),w,b
  8276  00151C  A4D8               	btfss	status,2,c
  8277  00151E  D7CC               	goto	l5316
  8278                           
  8279                           ; BSR set to: 0
  8280                           
  8281                           ; BSR set to: 0
  8282  001520  0012               	return		;funcret
  8283  001522                     __end_of_LEDwriteDisplay:
  8284                           	opt stack 0
  8285                           tosu	equ	0xFFF
  8286                           tosh	equ	0xFFE
  8287                           tosl	equ	0xFFD
  8288                           pclath	equ	0xFFA
  8289                           tblptru	equ	0xFF8
  8290                           tblptrh	equ	0xFF7
  8291                           tblptrl	equ	0xFF6
  8292                           tablat	equ	0xFF5
  8293                           prodh	equ	0xFF4
  8294                           prodl	equ	0xFF3
  8295                           intcon	equ	0xFF2
  8296                           intcon2	equ	0xFF1
  8297                           postinc0	equ	0xFEE
  8298                           wreg	equ	0xFE8
  8299                           indf2	equ	0xFDF
  8300                           postinc2	equ	0xFDE
  8301                           postdec2	equ	0xFDD
  8302                           plusw2	equ	0xFDB
  8303                           fsr2h	equ	0xFDA
  8304                           fsr2l	equ	0xFD9
  8305                           status	equ	0xFD8
  8306                           
  8307 ;; *************** function _LEDsetValue *****************
  8308 ;; Defined at:
  8309 ;;		line 11 in file "LED_BarGraph.c"
  8310 ;; Parameters:    Size  Location     Type
  8311 ;;  value           2   27[BANK0 ] int 
  8312 ;;  color           2   29[BANK0 ] int 
  8313 ;; Auto vars:     Size  Location     Type
  8314 ;;  k               2   32[BANK0 ] int 
  8315 ;; Return value:  Size  Location     Type
  8316 ;;		None               void
  8317 ;; Registers used:
  8318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8319 ;; Tracked objects:
  8320 ;;		On entry : 0/0
  8321 ;;		On exit  : 0/0
  8322 ;;		Unchanged: 0/0
  8323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8324 ;;      Params:         0       4       0       0       0       0       0
  8325 ;;      Locals:         0       2       0       0       0       0       0
  8326 ;;      Temps:          0       1       0       0       0       0       0
  8327 ;;      Totals:         0       7       0       0       0       0       0
  8328 ;;Total ram usage:        7 bytes
  8329 ;; Hardware stack levels used:    1
  8330 ;; Hardware stack levels required when called:    6
  8331 ;; This function calls:
  8332 ;;		_LEDsetBar
  8333 ;; This function is called by:
  8334 ;;		_main
  8335 ;; This function uses a non-reentrant model
  8336 ;;
  8337                           
  8338                           	psect	text46
  8339  001EE2                     __ptext46:
  8340                           	opt stack 0
  8341  001EE2                     _LEDsetValue:
  8342                           	opt stack 24
  8343                           
  8344                           ;LED_BarGraph.c: 12: if (value > 24) value = 24;
  8345                           
  8346                           ; BSR set to: 0
  8347                           ;incstack = 0
  8348  001EE2  0100               	movlb	0	; () banked
  8349  001EE4  BFEF               	btfsc	(LEDsetValue@value+1)& (0+255),7,b
  8350  001EE6  D00E               	goto	l5236
  8351  001EE8  0100               	movlb	0	; () banked
  8352  001EEA  51EF               	movf	(LEDsetValue@value+1)& (0+255),w,b
  8353  001EEC  E105               	bnz	u6190
  8354  001EEE  0E19               	movlw	25
  8355  001EF0  0100               	movlb	0	; () banked
  8356  001EF2  5DEE               	subwf	LEDsetValue@value& (0+255),w,b
  8357  001EF4  A0D8               	btfss	status,0,c
  8358  001EF6  D006               	goto	l5236
  8359  001EF8                     u6190:
  8360                           
  8361                           ; BSR set to: 0
  8362  001EF8  0E00               	movlw	0
  8363  001EFA  0100               	movlb	0	; () banked
  8364  001EFC  6FEF               	movwf	(LEDsetValue@value+1)& (0+255),b
  8365  001EFE  0E18               	movlw	24
  8366  001F00  6FEE               	movwf	LEDsetValue@value& (0+255),b
  8367  001F02  D000               	goto	l5236
  8368  001F04                     l5236:
  8369                           
  8370                           ; BSR set to: 0
  8371                           ;LED_BarGraph.c: 13: if (value < 0) value = 0;
  8372  001F04  0100               	movlb	0	; () banked
  8373  001F06  AFEF               	btfss	(LEDsetValue@value+1)& (0+255),7,b
  8374  001F08  D005               	goto	l433
  8375                           
  8376                           ; BSR set to: 0
  8377  001F0A  0E00               	movlw	0
  8378  001F0C  0100               	movlb	0	; () banked
  8379  001F0E  6FEF               	movwf	(LEDsetValue@value+1)& (0+255),b
  8380  001F10  0E00               	movlw	0
  8381  001F12  6FEE               	movwf	LEDsetValue@value& (0+255),b
  8382  001F14                     l433:
  8383                           
  8384                           ; BSR set to: 0
  8385                           ;LED_BarGraph.c: 14: int k;
  8386                           ;LED_BarGraph.c: 15: for (k = 0; k < 24; k++) {
  8387  001F14  0E00               	movlw	0
  8388  001F16  0100               	movlb	0	; () banked
  8389  001F18  6FF4               	movwf	(LEDsetValue@k+1)& (0+255),b
  8390  001F1A  0E00               	movlw	0
  8391  001F1C  6FF3               	movwf	LEDsetValue@k& (0+255),b
  8392  001F1E                     l5240:
  8393                           
  8394                           ; BSR set to: 0
  8395  001F1E  0100               	movlb	0	; () banked
  8396  001F20  BFF4               	btfsc	(LEDsetValue@k+1)& (0+255),7,b
  8397  001F22  D00A               	goto	l5244
  8398  001F24  0100               	movlb	0	; () banked
  8399  001F26  51F4               	movf	(LEDsetValue@k+1)& (0+255),w,b
  8400  001F28  E132               	bnz	l438
  8401  001F2A  0E18               	movlw	24
  8402  001F2C  0100               	movlb	0	; () banked
  8403  001F2E  5DF3               	subwf	LEDsetValue@k& (0+255),w,b
  8404  001F30  B0D8               	btfsc	status,0,c
  8405  001F32  0012               	return	
  8406  001F34  D001               	goto	l5244
  8407                           
  8408                           ; BSR set to: 0
  8409  001F36  0012               	return	
  8410  001F38                     l5244:
  8411                           
  8412                           ; BSR set to: 0
  8413                           ;LED_BarGraph.c: 16: if (k < value) LEDsetBar(k, color);
  8414  001F38  0100               	movlb	0	; () banked
  8415  001F3A  51EE               	movf	LEDsetValue@value& (0+255),w,b
  8416  001F3C  0100               	movlb	0	; () banked
  8417  001F3E  5DF3               	subwf	LEDsetValue@k& (0+255),w,b
  8418  001F40  0100               	movlb	0	; () banked
  8419  001F42  51F4               	movf	(LEDsetValue@k+1)& (0+255),w,b
  8420  001F44  0A80               	xorlw	128
  8421  001F46  0100               	movlb	0	; () banked
  8422  001F48  6FF2               	movwf	??_LEDsetValue& (0+255),b
  8423  001F4A  0100               	movlb	0	; () banked
  8424  001F4C  51EF               	movf	(LEDsetValue@value+1)& (0+255),w,b
  8425  001F4E  0A80               	xorlw	128
  8426  001F50  0100               	movlb	0	; () banked
  8427  001F52  59F2               	subwfb	??_LEDsetValue& (0+255),w,b
  8428  001F54  B0D8               	btfsc	status,0,c
  8429  001F56  D00B               	goto	l5248
  8430                           
  8431                           ; BSR set to: 0
  8432  001F58  C0F3  F023         	movff	LEDsetValue@k,LEDsetBar@bar
  8433  001F5C  C0F4  F024         	movff	LEDsetValue@k+1,LEDsetBar@bar+1
  8434  001F60  C0F0  F025         	movff	LEDsetValue@color,LEDsetBar@color
  8435  001F64  C0F1  F026         	movff	LEDsetValue@color+1,LEDsetBar@color+1
  8436  001F68  ECCE  F003         	call	_LEDsetBar	;wreg free
  8437  001F6C  D00B               	goto	l5250
  8438  001F6E                     l5248:
  8439                           
  8440                           ;LED_BarGraph.c: 17: else LEDsetBar(k, 0);
  8441  001F6E  C0F3  F023         	movff	LEDsetValue@k,LEDsetBar@bar
  8442  001F72  C0F4  F024         	movff	LEDsetValue@k+1,LEDsetBar@bar+1
  8443  001F76  0E00               	movlw	0
  8444  001F78  6E26               	movwf	LEDsetBar@color+1,c
  8445  001F7A  0E00               	movlw	0
  8446  001F7C  6E25               	movwf	LEDsetBar@color,c
  8447  001F7E  ECCE  F003         	call	_LEDsetBar	;wreg free
  8448  001F82  D000               	goto	l5250
  8449  001F84                     l5250:
  8450  001F84  0100               	movlb	0	; () banked
  8451  001F86  4BF3               	infsnz	LEDsetValue@k& (0+255),f,b
  8452  001F88  2BF4               	incf	(LEDsetValue@k+1)& (0+255),f,b
  8453  001F8A  D7C9               	goto	l5240
  8454                           
  8455                           ; BSR set to: 0
  8456  001F8C  0012               	return	
  8457  001F8E                     l438:
  8458                           
  8459                           ; BSR set to: 0
  8460  001F8E  0012               	return		;funcret
  8461  001F90                     __end_of_LEDsetValue:
  8462                           	opt stack 0
  8463                           tosu	equ	0xFFF
  8464                           tosh	equ	0xFFE
  8465                           tosl	equ	0xFFD
  8466                           pclath	equ	0xFFA
  8467                           tblptru	equ	0xFF8
  8468                           tblptrh	equ	0xFF7
  8469                           tblptrl	equ	0xFF6
  8470                           tablat	equ	0xFF5
  8471                           prodh	equ	0xFF4
  8472                           prodl	equ	0xFF3
  8473                           intcon	equ	0xFF2
  8474                           intcon2	equ	0xFF1
  8475                           postinc0	equ	0xFEE
  8476                           wreg	equ	0xFE8
  8477                           indf2	equ	0xFDF
  8478                           postinc2	equ	0xFDE
  8479                           postdec2	equ	0xFDD
  8480                           plusw2	equ	0xFDB
  8481                           fsr2h	equ	0xFDA
  8482                           fsr2l	equ	0xFD9
  8483                           status	equ	0xFD8
  8484                           
  8485 ;; *************** function _LEDsetBar *****************
  8486 ;; Defined at:
  8487 ;;		line 193 in file "LED_BarGraph.c"
  8488 ;; Parameters:    Size  Location     Type
  8489 ;;  bar             2   34[COMRAM] int 
  8490 ;;  color           2   36[COMRAM] int 
  8491 ;; Auto vars:     Size  Location     Type
  8492 ;;  a               2   40[COMRAM] unsigned int 
  8493 ;;  c               2   38[COMRAM] unsigned int 
  8494 ;; Return value:  Size  Location     Type
  8495 ;;		None               void
  8496 ;; Registers used:
  8497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8498 ;; Tracked objects:
  8499 ;;		On entry : 0/0
  8500 ;;		On exit  : 0/0
  8501 ;;		Unchanged: 0/0
  8502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8503 ;;      Params:         4       0       0       0       0       0       0
  8504 ;;      Locals:         4       0       0       0       0       0       0
  8505 ;;      Temps:          0      16       0       0       0       0       0
  8506 ;;      Totals:         8      16       0       0       0       0       0
  8507 ;;Total ram usage:       24 bytes
  8508 ;; Hardware stack levels used:    1
  8509 ;; Hardware stack levels required when called:    5
  8510 ;; This function calls:
  8511 ;;		___awdiv
  8512 ;; This function is called by:
  8513 ;;		_LEDsetValue
  8514 ;; This function uses a non-reentrant model
  8515 ;;
  8516                           
  8517                           	psect	text47
  8518  00079C                     __ptext47:
  8519                           	opt stack 0
  8520  00079C                     _LEDsetBar:
  8521                           	opt stack 24
  8522                           
  8523                           ;LED_BarGraph.c: 194: uint16_t a, c;
  8524                           ;LED_BarGraph.c: 196: if (bar < 12)
  8525                           
  8526                           ; BSR set to: 0
  8527                           ;incstack = 0
  8528  00079C  BE24               	btfsc	LEDsetBar@bar+1,7,c
  8529  00079E  D006               	goto	l4746
  8530  0007A0  5024               	movf	LEDsetBar@bar+1,w,c
  8531  0007A2  E10F               	bnz	l4748
  8532  0007A4  0E0C               	movlw	12
  8533  0007A6  5C23               	subwf	LEDsetBar@bar,w,c
  8534  0007A8  B0D8               	btfsc	status,0,c
  8535  0007AA  D00B               	goto	l4748
  8536  0007AC                     l4746:
  8537                           
  8538                           ;LED_BarGraph.c: 197: c = bar / 4;
  8539  0007AC  C023  F01B         	movff	LEDsetBar@bar,___awdiv@dividend
  8540  0007B0  C024  F01C         	movff	LEDsetBar@bar+1,___awdiv@dividend+1
  8541  0007B4  0E00               	movlw	0
  8542  0007B6  6E1E               	movwf	___awdiv@divisor+1,c
  8543  0007B8  0E04               	movlw	4
  8544  0007BA  6E1D               	movwf	___awdiv@divisor,c
  8545  0007BC  ECC6  F010         	call	___awdiv	;wreg free
  8546  0007C0  D00C               	goto	L3
  8547  0007C2                     l4748:
  8548                           
  8549                           ;LED_BarGraph.c: 198: else
  8550                           ;LED_BarGraph.c: 199: c = (bar - 12) / 4;
  8551  0007C2  0EF4               	movlw	244
  8552  0007C4  2423               	addwf	LEDsetBar@bar,w,c
  8553  0007C6  6E1B               	movwf	___awdiv@dividend,c
  8554  0007C8  0EFF               	movlw	255
  8555  0007CA  2024               	addwfc	LEDsetBar@bar+1,w,c
  8556  0007CC  6E1C               	movwf	___awdiv@dividend+1,c
  8557  0007CE  0E00               	movlw	0
  8558  0007D0  6E1E               	movwf	___awdiv@divisor+1,c
  8559  0007D2  0E04               	movlw	4
  8560  0007D4  6E1D               	movwf	___awdiv@divisor,c
  8561  0007D6  ECC6  F010         	call	___awdiv	;wreg free
  8562  0007DA                     L3:
  8563  0007DA  C01B  F027         	movff	?___awdiv,LEDsetBar@c
  8564  0007DE  C01C  F028         	movff	?___awdiv+1,LEDsetBar@c+1
  8565  0007E2  D000               	goto	l4750
  8566  0007E4                     l4750:
  8567                           
  8568                           ;LED_BarGraph.c: 201: a = bar % 4;
  8569  0007E4  0E03               	movlw	3
  8570  0007E6  1423               	andwf	LEDsetBar@bar,w,c
  8571  0007E8  6E29               	movwf	LEDsetBar@a,c
  8572  0007EA  6A2A               	clrf	LEDsetBar@a+1,c
  8573                           
  8574                           ;LED_BarGraph.c: 202: if (bar >= 12)
  8575  0007EC  BE24               	btfsc	LEDsetBar@bar+1,7,c
  8576  0007EE  D00A               	goto	l512
  8577  0007F0  5024               	movf	LEDsetBar@bar+1,w,c
  8578  0007F2  E104               	bnz	u5160
  8579  0007F4  0E0C               	movlw	12
  8580  0007F6  5C23               	subwf	LEDsetBar@bar,w,c
  8581  0007F8  A0D8               	btfss	status,0,c
  8582  0007FA  D004               	goto	l512
  8583  0007FC                     u5160:
  8584                           
  8585                           ;LED_BarGraph.c: 203: a += 4;
  8586  0007FC  0E04               	movlw	4
  8587  0007FE  2629               	addwf	LEDsetBar@a,f,c
  8588  000800  0E00               	movlw	0
  8589  000802  222A               	addwfc	LEDsetBar@a+1,f,c
  8590  000804                     l512:
  8591                           
  8592                           ;LED_BarGraph.c: 206: if (color == 1) {
  8593  000804  0425               	decf	LEDsetBar@color,w,c
  8594  000806  1026               	iorwf	LEDsetBar@color+1,w,c
  8595  000808  A4D8               	btfss	status,2,c
  8596  00080A  D07D               	goto	l4758
  8597                           
  8598                           ;LED_BarGraph.c: 208: displaybuffer[c] |= (1<<(a));
  8599  00080C  C029  F0D3         	movff	LEDsetBar@a,??_LEDsetBar
  8600  000810  0E01               	movlw	1
  8601  000812  0100               	movlb	0	; () banked
  8602  000814  6FD4               	movwf	(??_LEDsetBar+1)& (0+255),b
  8603  000816  0E00               	movlw	0
  8604  000818  0100               	movlb	0	; () banked
  8605  00081A  6FD5               	movwf	(??_LEDsetBar+2)& (0+255),b
  8606  00081C  0100               	movlb	0	; () banked
  8607  00081E  2BD3               	incf	??_LEDsetBar& (0+255),f,b
  8608  000820  D004               	goto	u5184
  8609  000822                     u5185:
  8610  000822  90D8               	bcf	status,0,c
  8611  000824  0100               	movlb	0	; () banked
  8612  000826  37D4               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  8613  000828  37D5               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  8614  00082A                     u5184:
  8615  00082A  0100               	movlb	0	; () banked
  8616  00082C  2FD3               	decfsz	??_LEDsetBar& (0+255),f,b
  8617  00082E  D7F9               	goto	u5185
  8618  000830  C0D4  F0D6         	movff	??_LEDsetBar+1,??_LEDsetBar+3
  8619  000834  C0D5  F0D7         	movff	??_LEDsetBar+2,??_LEDsetBar+4
  8620  000838  0E00               	movlw	0
  8621  00083A  0100               	movlb	0	; () banked
  8622  00083C  BFD7               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
  8623  00083E  0EFF               	movlw	255
  8624  000840  6FD8               	movwf	(??_LEDsetBar+5)& (0+255),b
  8625  000842  6FD9               	movwf	(??_LEDsetBar+6)& (0+255),b
  8626  000844  0E60               	movlw	low _displaybuffer
  8627  000846  0100               	movlb	0	; () banked
  8628  000848  6FDA               	movwf	(??_LEDsetBar+7)& (0+255),b
  8629  00084A  0E00               	movlw	high _displaybuffer
  8630  00084C  0100               	movlb	0	; () banked
  8631  00084E  6FDB               	movwf	(??_LEDsetBar+8)& (0+255),b
  8632  000850  90D8               	bcf	status,0,c
  8633  000852  3427               	rlcf	LEDsetBar@c,w,c
  8634  000854  6ED9               	movwf	fsr2l,c
  8635  000856  3428               	rlcf	LEDsetBar@c+1,w,c
  8636  000858  6EDA               	movwf	fsr2h,c
  8637  00085A  90D8               	bcf	status,0,c
  8638  00085C  36D9               	rlcf	fsr2l,f,c
  8639  00085E  36DA               	rlcf	fsr2h,f,c
  8640  000860  0100               	movlb	0	; () banked
  8641  000862  51DA               	movf	(??_LEDsetBar+7)& (0+255),w,b
  8642  000864  26D9               	addwf	fsr2l,f,c
  8643  000866  0100               	movlb	0	; () banked
  8644  000868  51DB               	movf	(??_LEDsetBar+8)& (0+255),w,b
  8645  00086A  22DA               	addwfc	fsr2h,f,c
  8646  00086C  0100               	movlb	0	; () banked
  8647  00086E  51D6               	movf	(??_LEDsetBar+3)& (0+255),w,b
  8648  000870  12DE               	iorwf	postinc2,f,c
  8649  000872  51D7               	movf	(??_LEDsetBar+4)& (0+255),w,b
  8650  000874  12DE               	iorwf	postinc2,f,c
  8651  000876  51D8               	movf	(??_LEDsetBar+5)& (0+255),w,b
  8652  000878  12DE               	iorwf	postinc2,f,c
  8653  00087A  51D9               	movf	(??_LEDsetBar+6)& (0+255),w,b
  8654  00087C  12DE               	iorwf	postinc2,f,c
  8655                           
  8656                           ;LED_BarGraph.c: 210: displaybuffer[c] &= ~(1<<(a + 8));
  8657  00087E  C029  F0D3         	movff	LEDsetBar@a,??_LEDsetBar
  8658  000882  0E08               	movlw	8
  8659  000884  0100               	movlb	0	; () banked
  8660  000886  27D3               	addwf	??_LEDsetBar& (0+255),f,b
  8661  000888  0E01               	movlw	1
  8662  00088A  0100               	movlb	0	; () banked
  8663  00088C  6FD4               	movwf	(??_LEDsetBar+1)& (0+255),b
  8664  00088E  0E00               	movlw	0
  8665  000890  0100               	movlb	0	; () banked
  8666  000892  6FD5               	movwf	(??_LEDsetBar+2)& (0+255),b
  8667  000894  0100               	movlb	0	; () banked
  8668  000896  2BD3               	incf	??_LEDsetBar& (0+255),f,b
  8669  000898  D004               	goto	u5194
  8670  00089A                     u5195:
  8671  00089A  90D8               	bcf	status,0,c
  8672  00089C  0100               	movlb	0	; () banked
  8673  00089E  37D4               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  8674  0008A0  37D5               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  8675  0008A2                     u5194:
  8676  0008A2  0100               	movlb	0	; () banked
  8677  0008A4  2FD3               	decfsz	??_LEDsetBar& (0+255),f,b
  8678  0008A6  D7F9               	goto	u5195
  8679  0008A8  0100               	movlb	0	; () banked
  8680  0008AA  1DD4               	comf	(??_LEDsetBar+1)& (0+255),w,b
  8681  0008AC  0100               	movlb	0	; () banked
  8682  0008AE  6FD6               	movwf	(??_LEDsetBar+3)& (0+255),b
  8683  0008B0  0100               	movlb	0	; () banked
  8684  0008B2  1DD5               	comf	(??_LEDsetBar+2)& (0+255),w,b
  8685  0008B4  0100               	movlb	0	; () banked
  8686  0008B6  6FD7               	movwf	(??_LEDsetBar+4)& (0+255),b
  8687  0008B8  0100               	movlb	0	; () banked
  8688  0008BA  6BD8               	clrf	(??_LEDsetBar+5)& (0+255),b
  8689  0008BC  0100               	movlb	0	; () banked
  8690  0008BE  BFD7               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
  8691  0008C0  07D8               	decf	(??_LEDsetBar+5)& (0+255),f,b
  8692  0008C2  0100               	movlb	0	; () banked
  8693  0008C4  51D8               	movf	(??_LEDsetBar+5)& (0+255),w,b
  8694  0008C6  0100               	movlb	0	; () banked
  8695  0008C8  6FD9               	movwf	(??_LEDsetBar+6)& (0+255),b
  8696  0008CA  0E60               	movlw	low _displaybuffer
  8697  0008CC  0100               	movlb	0	; () banked
  8698  0008CE  6FDA               	movwf	(??_LEDsetBar+7)& (0+255),b
  8699  0008D0  0E00               	movlw	high _displaybuffer
  8700  0008D2  0100               	movlb	0	; () banked
  8701  0008D4  6FDB               	movwf	(??_LEDsetBar+8)& (0+255),b
  8702  0008D6  90D8               	bcf	status,0,c
  8703  0008D8  3427               	rlcf	LEDsetBar@c,w,c
  8704  0008DA  6ED9               	movwf	fsr2l,c
  8705  0008DC  3428               	rlcf	LEDsetBar@c+1,w,c
  8706  0008DE  6EDA               	movwf	fsr2h,c
  8707  0008E0  90D8               	bcf	status,0,c
  8708  0008E2  36D9               	rlcf	fsr2l,f,c
  8709  0008E4  36DA               	rlcf	fsr2h,f,c
  8710  0008E6  0100               	movlb	0	; () banked
  8711  0008E8  51DA               	movf	(??_LEDsetBar+7)& (0+255),w,b
  8712  0008EA  26D9               	addwf	fsr2l,f,c
  8713  0008EC  0100               	movlb	0	; () banked
  8714  0008EE  51DB               	movf	(??_LEDsetBar+8)& (0+255),w,b
  8715  0008F0  22DA               	addwfc	fsr2h,f,c
  8716  0008F2  0100               	movlb	0	; () banked
  8717  0008F4  51D6               	movf	(??_LEDsetBar+3)& (0+255),w,b
  8718  0008F6  16DE               	andwf	postinc2,f,c
  8719  0008F8  51D7               	movf	(??_LEDsetBar+4)& (0+255),w,b
  8720  0008FA  16DE               	andwf	postinc2,f,c
  8721  0008FC  51D8               	movf	(??_LEDsetBar+5)& (0+255),w,b
  8722  0008FE  16DE               	andwf	postinc2,f,c
  8723  000900  51D9               	movf	(??_LEDsetBar+6)& (0+255),w,b
  8724  000902  16DE               	andwf	postinc2,f,c
  8725                           
  8726                           ;LED_BarGraph.c: 211: } else if (color == 2) {
  8727  000904  0012               	return	
  8728  000906                     l4758:
  8729  000906  0E02               	movlw	2
  8730  000908  1825               	xorwf	LEDsetBar@color,w,c
  8731  00090A  1026               	iorwf	LEDsetBar@color+1,w,c
  8732  00090C  A4D8               	btfss	status,2,c
  8733  00090E  D05A               	goto	l4762
  8734                           
  8735                           ;LED_BarGraph.c: 213: displaybuffer[c] |= (1<<(a)) | (1<<(a + 8));
  8736  000910  C029  F0D3         	movff	LEDsetBar@a,??_LEDsetBar
  8737  000914  0E08               	movlw	8
  8738  000916  0100               	movlb	0	; () banked
  8739  000918  27D3               	addwf	??_LEDsetBar& (0+255),f,b
  8740  00091A  0E01               	movlw	1
  8741  00091C  0100               	movlb	0	; () banked
  8742  00091E  6FD4               	movwf	(??_LEDsetBar+1)& (0+255),b
  8743  000920  0E00               	movlw	0
  8744  000922  0100               	movlb	0	; () banked
  8745  000924  6FD5               	movwf	(??_LEDsetBar+2)& (0+255),b
  8746  000926  0100               	movlb	0	; () banked
  8747  000928  2BD3               	incf	??_LEDsetBar& (0+255),f,b
  8748  00092A  D004               	goto	u5214
  8749  00092C                     u5215:
  8750  00092C  90D8               	bcf	status,0,c
  8751  00092E  0100               	movlb	0	; () banked
  8752  000930  37D4               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  8753  000932  37D5               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  8754  000934                     u5214:
  8755  000934  0100               	movlb	0	; () banked
  8756  000936  2FD3               	decfsz	??_LEDsetBar& (0+255),f,b
  8757  000938  D7F9               	goto	u5215
  8758  00093A  C029  F0D6         	movff	LEDsetBar@a,??_LEDsetBar+3
  8759  00093E  0E01               	movlw	1
  8760  000940  0100               	movlb	0	; () banked
  8761  000942  6FD7               	movwf	(??_LEDsetBar+4)& (0+255),b
  8762  000944  0E00               	movlw	0
  8763  000946  0100               	movlb	0	; () banked
  8764  000948  6FD8               	movwf	(??_LEDsetBar+5)& (0+255),b
  8765  00094A  0100               	movlb	0	; () banked
  8766  00094C  2BD6               	incf	(??_LEDsetBar+3)& (0+255),f,b
  8767  00094E  D004               	goto	u5224
  8768  000950                     u5225:
  8769  000950  90D8               	bcf	status,0,c
  8770  000952  0100               	movlb	0	; () banked
  8771  000954  37D7               	rlcf	(??_LEDsetBar+4)& (0+255),f,b
  8772  000956  37D8               	rlcf	(??_LEDsetBar+5)& (0+255),f,b
  8773  000958                     u5224:
  8774  000958  0100               	movlb	0	; () banked
  8775  00095A  2FD6               	decfsz	(??_LEDsetBar+3)& (0+255),f,b
  8776  00095C  D7F9               	goto	u5225
  8777  00095E  0100               	movlb	0	; () banked
  8778  000960  51D4               	movf	(??_LEDsetBar+1)& (0+255),w,b
  8779  000962  0100               	movlb	0	; () banked
  8780  000964  11D7               	iorwf	(??_LEDsetBar+4)& (0+255),w,b
  8781  000966  0100               	movlb	0	; () banked
  8782  000968  6FD9               	movwf	(??_LEDsetBar+6)& (0+255),b
  8783  00096A  0100               	movlb	0	; () banked
  8784  00096C  51D5               	movf	(??_LEDsetBar+2)& (0+255),w,b
  8785  00096E  0100               	movlb	0	; () banked
  8786  000970  11D8               	iorwf	(??_LEDsetBar+5)& (0+255),w,b
  8787  000972  0100               	movlb	0	; () banked
  8788  000974  6FDA               	movwf	(??_LEDsetBar+7)& (0+255),b
  8789  000976  0100               	movlb	0	; () banked
  8790  000978  6BDB               	clrf	(??_LEDsetBar+8)& (0+255),b
  8791  00097A  0100               	movlb	0	; () banked
  8792  00097C  BFDA               	btfsc	(??_LEDsetBar+7)& (0+255),7,b
  8793  00097E  07DB               	decf	(??_LEDsetBar+8)& (0+255),f,b
  8794  000980  0100               	movlb	0	; () banked
  8795  000982  51DB               	movf	(??_LEDsetBar+8)& (0+255),w,b
  8796  000984  0100               	movlb	0	; () banked
  8797  000986  6FDC               	movwf	(??_LEDsetBar+9)& (0+255),b
  8798  000988  0E60               	movlw	low _displaybuffer
  8799  00098A  0100               	movlb	0	; () banked
  8800  00098C  6FDD               	movwf	(??_LEDsetBar+10)& (0+255),b
  8801  00098E  0E00               	movlw	high _displaybuffer
  8802  000990  0100               	movlb	0	; () banked
  8803  000992  6FDE               	movwf	(??_LEDsetBar+11)& (0+255),b
  8804  000994  90D8               	bcf	status,0,c
  8805  000996  3427               	rlcf	LEDsetBar@c,w,c
  8806  000998  6ED9               	movwf	fsr2l,c
  8807  00099A  3428               	rlcf	LEDsetBar@c+1,w,c
  8808  00099C  6EDA               	movwf	fsr2h,c
  8809  00099E  90D8               	bcf	status,0,c
  8810  0009A0  36D9               	rlcf	fsr2l,f,c
  8811  0009A2  36DA               	rlcf	fsr2h,f,c
  8812  0009A4  0100               	movlb	0	; () banked
  8813  0009A6  51DD               	movf	(??_LEDsetBar+10)& (0+255),w,b
  8814  0009A8  26D9               	addwf	fsr2l,f,c
  8815  0009AA  0100               	movlb	0	; () banked
  8816  0009AC  51DE               	movf	(??_LEDsetBar+11)& (0+255),w,b
  8817  0009AE  22DA               	addwfc	fsr2h,f,c
  8818  0009B0  0100               	movlb	0	; () banked
  8819  0009B2  51D9               	movf	(??_LEDsetBar+6)& (0+255),w,b
  8820  0009B4  12DE               	iorwf	postinc2,f,c
  8821  0009B6  51DA               	movf	(??_LEDsetBar+7)& (0+255),w,b
  8822  0009B8  12DE               	iorwf	postinc2,f,c
  8823  0009BA  51DB               	movf	(??_LEDsetBar+8)& (0+255),w,b
  8824  0009BC  12DE               	iorwf	postinc2,f,c
  8825  0009BE  51DC               	movf	(??_LEDsetBar+9)& (0+255),w,b
  8826  0009C0  12DE               	iorwf	postinc2,f,c
  8827                           
  8828                           ;LED_BarGraph.c: 214: } else if (color == 0) {
  8829  0009C2  0012               	return	
  8830  0009C4                     l4762:
  8831  0009C4  5025               	movf	LEDsetBar@color,w,c
  8832  0009C6  1026               	iorwf	LEDsetBar@color+1,w,c
  8833  0009C8  A4D8               	btfss	status,2,c
  8834  0009CA  D06A               	goto	l4766
  8835                           
  8836                           ;LED_BarGraph.c: 216: displaybuffer[c] &= ~(1<<(a)) & ~(1<<(a + 8));
  8837  0009CC  C029  F0D3         	movff	LEDsetBar@a,??_LEDsetBar
  8838  0009D0  0E08               	movlw	8
  8839  0009D2  0100               	movlb	0	; () banked
  8840  0009D4  27D3               	addwf	??_LEDsetBar& (0+255),f,b
  8841  0009D6  0E01               	movlw	1
  8842  0009D8  0100               	movlb	0	; () banked
  8843  0009DA  6FD4               	movwf	(??_LEDsetBar+1)& (0+255),b
  8844  0009DC  0E00               	movlw	0
  8845  0009DE  0100               	movlb	0	; () banked
  8846  0009E0  6FD5               	movwf	(??_LEDsetBar+2)& (0+255),b
  8847  0009E2  0100               	movlb	0	; () banked
  8848  0009E4  2BD3               	incf	??_LEDsetBar& (0+255),f,b
  8849  0009E6  D004               	goto	u5244
  8850  0009E8                     u5245:
  8851  0009E8  90D8               	bcf	status,0,c
  8852  0009EA  0100               	movlb	0	; () banked
  8853  0009EC  37D4               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  8854  0009EE  37D5               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  8855  0009F0                     u5244:
  8856  0009F0  0100               	movlb	0	; () banked
  8857  0009F2  2FD3               	decfsz	??_LEDsetBar& (0+255),f,b
  8858  0009F4  D7F9               	goto	u5245
  8859  0009F6  0100               	movlb	0	; () banked
  8860  0009F8  1DD4               	comf	(??_LEDsetBar+1)& (0+255),w,b
  8861  0009FA  0100               	movlb	0	; () banked
  8862  0009FC  6FD6               	movwf	(??_LEDsetBar+3)& (0+255),b
  8863  0009FE  0100               	movlb	0	; () banked
  8864  000A00  1DD5               	comf	(??_LEDsetBar+2)& (0+255),w,b
  8865  000A02  0100               	movlb	0	; () banked
  8866  000A04  6FD7               	movwf	(??_LEDsetBar+4)& (0+255),b
  8867  000A06  C029  F0D8         	movff	LEDsetBar@a,??_LEDsetBar+5
  8868  000A0A  0E01               	movlw	1
  8869  000A0C  0100               	movlb	0	; () banked
  8870  000A0E  6FD9               	movwf	(??_LEDsetBar+6)& (0+255),b
  8871  000A10  0E00               	movlw	0
  8872  000A12  0100               	movlb	0	; () banked
  8873  000A14  6FDA               	movwf	(??_LEDsetBar+7)& (0+255),b
  8874  000A16  0100               	movlb	0	; () banked
  8875  000A18  2BD8               	incf	(??_LEDsetBar+5)& (0+255),f,b
  8876  000A1A  D004               	goto	u5254
  8877  000A1C                     u5255:
  8878  000A1C  90D8               	bcf	status,0,c
  8879  000A1E  0100               	movlb	0	; () banked
  8880  000A20  37D9               	rlcf	(??_LEDsetBar+6)& (0+255),f,b
  8881  000A22  37DA               	rlcf	(??_LEDsetBar+7)& (0+255),f,b
  8882  000A24                     u5254:
  8883  000A24  0100               	movlb	0	; () banked
  8884  000A26  2FD8               	decfsz	(??_LEDsetBar+5)& (0+255),f,b
  8885  000A28  D7F9               	goto	u5255
  8886  000A2A  0100               	movlb	0	; () banked
  8887  000A2C  1DD9               	comf	(??_LEDsetBar+6)& (0+255),w,b
  8888  000A2E  0100               	movlb	0	; () banked
  8889  000A30  6FDB               	movwf	(??_LEDsetBar+8)& (0+255),b
  8890  000A32  0100               	movlb	0	; () banked
  8891  000A34  1DDA               	comf	(??_LEDsetBar+7)& (0+255),w,b
  8892  000A36  0100               	movlb	0	; () banked
  8893  000A38  6FDC               	movwf	(??_LEDsetBar+9)& (0+255),b
  8894  000A3A  0100               	movlb	0	; () banked
  8895  000A3C  51D6               	movf	(??_LEDsetBar+3)& (0+255),w,b
  8896  000A3E  0100               	movlb	0	; () banked
  8897  000A40  15DB               	andwf	(??_LEDsetBar+8)& (0+255),w,b
  8898  000A42  0100               	movlb	0	; () banked
  8899  000A44  6FDD               	movwf	(??_LEDsetBar+10)& (0+255),b
  8900  000A46  0100               	movlb	0	; () banked
  8901  000A48  51D7               	movf	(??_LEDsetBar+4)& (0+255),w,b
  8902  000A4A  0100               	movlb	0	; () banked
  8903  000A4C  15DC               	andwf	(??_LEDsetBar+9)& (0+255),w,b
  8904  000A4E  0100               	movlb	0	; () banked
  8905  000A50  6FDE               	movwf	(??_LEDsetBar+11)& (0+255),b
  8906  000A52  0100               	movlb	0	; () banked
  8907  000A54  6BDF               	clrf	(??_LEDsetBar+12)& (0+255),b
  8908  000A56  0100               	movlb	0	; () banked
  8909  000A58  BFDE               	btfsc	(??_LEDsetBar+11)& (0+255),7,b
  8910  000A5A  07DF               	decf	(??_LEDsetBar+12)& (0+255),f,b
  8911  000A5C  0100               	movlb	0	; () banked
  8912  000A5E  51DF               	movf	(??_LEDsetBar+12)& (0+255),w,b
  8913  000A60  0100               	movlb	0	; () banked
  8914  000A62  6FE0               	movwf	(??_LEDsetBar+13)& (0+255),b
  8915  000A64  0E60               	movlw	low _displaybuffer
  8916  000A66  0100               	movlb	0	; () banked
  8917  000A68  6FE1               	movwf	(??_LEDsetBar+14)& (0+255),b
  8918  000A6A  0E00               	movlw	high _displaybuffer
  8919  000A6C  0100               	movlb	0	; () banked
  8920  000A6E  6FE2               	movwf	(??_LEDsetBar+15)& (0+255),b
  8921  000A70  90D8               	bcf	status,0,c
  8922  000A72  3427               	rlcf	LEDsetBar@c,w,c
  8923  000A74  6ED9               	movwf	fsr2l,c
  8924  000A76  3428               	rlcf	LEDsetBar@c+1,w,c
  8925  000A78  6EDA               	movwf	fsr2h,c
  8926  000A7A  90D8               	bcf	status,0,c
  8927  000A7C  36D9               	rlcf	fsr2l,f,c
  8928  000A7E  36DA               	rlcf	fsr2h,f,c
  8929  000A80  0100               	movlb	0	; () banked
  8930  000A82  51E1               	movf	(??_LEDsetBar+14)& (0+255),w,b
  8931  000A84  26D9               	addwf	fsr2l,f,c
  8932  000A86  0100               	movlb	0	; () banked
  8933  000A88  51E2               	movf	(??_LEDsetBar+15)& (0+255),w,b
  8934  000A8A  22DA               	addwfc	fsr2h,f,c
  8935  000A8C  0100               	movlb	0	; () banked
  8936  000A8E  51DD               	movf	(??_LEDsetBar+10)& (0+255),w,b
  8937  000A90  16DE               	andwf	postinc2,f,c
  8938  000A92  51DE               	movf	(??_LEDsetBar+11)& (0+255),w,b
  8939  000A94  16DE               	andwf	postinc2,f,c
  8940  000A96  51DF               	movf	(??_LEDsetBar+12)& (0+255),w,b
  8941  000A98  16DE               	andwf	postinc2,f,c
  8942  000A9A  51E0               	movf	(??_LEDsetBar+13)& (0+255),w,b
  8943  000A9C  16DE               	andwf	postinc2,f,c
  8944                           
  8945                           ;LED_BarGraph.c: 217: } else if (color == 3) {
  8946  000A9E  0012               	return	
  8947  000AA0                     l4766:
  8948  000AA0  0E03               	movlw	3
  8949  000AA2  1825               	xorwf	LEDsetBar@color,w,c
  8950  000AA4  1026               	iorwf	LEDsetBar@color+1,w,c
  8951  000AA6  A4D8               	btfss	status,2,c
  8952  000AA8  0012               	return	
  8953                           
  8954                           ;LED_BarGraph.c: 219: displaybuffer[c] |= (1<<(a + 8));
  8955  000AAA  C029  F0D3         	movff	LEDsetBar@a,??_LEDsetBar
  8956  000AAE  0E08               	movlw	8
  8957  000AB0  0100               	movlb	0	; () banked
  8958  000AB2  27D3               	addwf	??_LEDsetBar& (0+255),f,b
  8959  000AB4  0E01               	movlw	1
  8960  000AB6  0100               	movlb	0	; () banked
  8961  000AB8  6FD4               	movwf	(??_LEDsetBar+1)& (0+255),b
  8962  000ABA  0E00               	movlw	0
  8963  000ABC  0100               	movlb	0	; () banked
  8964  000ABE  6FD5               	movwf	(??_LEDsetBar+2)& (0+255),b
  8965  000AC0  0100               	movlb	0	; () banked
  8966  000AC2  2BD3               	incf	??_LEDsetBar& (0+255),f,b
  8967  000AC4  D004               	goto	u5274
  8968  000AC6                     u5275:
  8969  000AC6  90D8               	bcf	status,0,c
  8970  000AC8  0100               	movlb	0	; () banked
  8971  000ACA  37D4               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  8972  000ACC  37D5               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  8973  000ACE                     u5274:
  8974  000ACE  0100               	movlb	0	; () banked
  8975  000AD0  2FD3               	decfsz	??_LEDsetBar& (0+255),f,b
  8976  000AD2  D7F9               	goto	u5275
  8977  000AD4  C0D4  F0D6         	movff	??_LEDsetBar+1,??_LEDsetBar+3
  8978  000AD8  C0D5  F0D7         	movff	??_LEDsetBar+2,??_LEDsetBar+4
  8979  000ADC  0E00               	movlw	0
  8980  000ADE  0100               	movlb	0	; () banked
  8981  000AE0  BFD7               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
  8982  000AE2  0EFF               	movlw	255
  8983  000AE4  6FD8               	movwf	(??_LEDsetBar+5)& (0+255),b
  8984  000AE6  6FD9               	movwf	(??_LEDsetBar+6)& (0+255),b
  8985  000AE8  0E60               	movlw	low _displaybuffer
  8986  000AEA  0100               	movlb	0	; () banked
  8987  000AEC  6FDA               	movwf	(??_LEDsetBar+7)& (0+255),b
  8988  000AEE  0E00               	movlw	high _displaybuffer
  8989  000AF0  0100               	movlb	0	; () banked
  8990  000AF2  6FDB               	movwf	(??_LEDsetBar+8)& (0+255),b
  8991  000AF4  90D8               	bcf	status,0,c
  8992  000AF6  3427               	rlcf	LEDsetBar@c,w,c
  8993  000AF8  6ED9               	movwf	fsr2l,c
  8994  000AFA  3428               	rlcf	LEDsetBar@c+1,w,c
  8995  000AFC  6EDA               	movwf	fsr2h,c
  8996  000AFE  90D8               	bcf	status,0,c
  8997  000B00  36D9               	rlcf	fsr2l,f,c
  8998  000B02  36DA               	rlcf	fsr2h,f,c
  8999  000B04  0100               	movlb	0	; () banked
  9000  000B06  51DA               	movf	(??_LEDsetBar+7)& (0+255),w,b
  9001  000B08  26D9               	addwf	fsr2l,f,c
  9002  000B0A  0100               	movlb	0	; () banked
  9003  000B0C  51DB               	movf	(??_LEDsetBar+8)& (0+255),w,b
  9004  000B0E  22DA               	addwfc	fsr2h,f,c
  9005  000B10  0100               	movlb	0	; () banked
  9006  000B12  51D6               	movf	(??_LEDsetBar+3)& (0+255),w,b
  9007  000B14  12DE               	iorwf	postinc2,f,c
  9008  000B16  51D7               	movf	(??_LEDsetBar+4)& (0+255),w,b
  9009  000B18  12DE               	iorwf	postinc2,f,c
  9010  000B1A  51D8               	movf	(??_LEDsetBar+5)& (0+255),w,b
  9011  000B1C  12DE               	iorwf	postinc2,f,c
  9012  000B1E  51D9               	movf	(??_LEDsetBar+6)& (0+255),w,b
  9013  000B20  12DE               	iorwf	postinc2,f,c
  9014                           
  9015                           ;LED_BarGraph.c: 221: displaybuffer[c] &= ~(1<<(a));
  9016  000B22  C029  F0D3         	movff	LEDsetBar@a,??_LEDsetBar
  9017  000B26  0E01               	movlw	1
  9018  000B28  0100               	movlb	0	; () banked
  9019  000B2A  6FD4               	movwf	(??_LEDsetBar+1)& (0+255),b
  9020  000B2C  0E00               	movlw	0
  9021  000B2E  0100               	movlb	0	; () banked
  9022  000B30  6FD5               	movwf	(??_LEDsetBar+2)& (0+255),b
  9023  000B32  0100               	movlb	0	; () banked
  9024  000B34  2BD3               	incf	??_LEDsetBar& (0+255),f,b
  9025  000B36  D004               	goto	u5284
  9026  000B38                     u5285:
  9027  000B38  90D8               	bcf	status,0,c
  9028  000B3A  0100               	movlb	0	; () banked
  9029  000B3C  37D4               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  9030  000B3E  37D5               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  9031  000B40                     u5284:
  9032  000B40  0100               	movlb	0	; () banked
  9033  000B42  2FD3               	decfsz	??_LEDsetBar& (0+255),f,b
  9034  000B44  D7F9               	goto	u5285
  9035  000B46  0100               	movlb	0	; () banked
  9036  000B48  1DD4               	comf	(??_LEDsetBar+1)& (0+255),w,b
  9037  000B4A  0100               	movlb	0	; () banked
  9038  000B4C  6FD6               	movwf	(??_LEDsetBar+3)& (0+255),b
  9039  000B4E  0100               	movlb	0	; () banked
  9040  000B50  1DD5               	comf	(??_LEDsetBar+2)& (0+255),w,b
  9041  000B52  0100               	movlb	0	; () banked
  9042  000B54  6FD7               	movwf	(??_LEDsetBar+4)& (0+255),b
  9043  000B56  0100               	movlb	0	; () banked
  9044  000B58  6BD8               	clrf	(??_LEDsetBar+5)& (0+255),b
  9045  000B5A  0100               	movlb	0	; () banked
  9046  000B5C  BFD7               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
  9047  000B5E  07D8               	decf	(??_LEDsetBar+5)& (0+255),f,b
  9048  000B60  0100               	movlb	0	; () banked
  9049  000B62  51D8               	movf	(??_LEDsetBar+5)& (0+255),w,b
  9050  000B64  0100               	movlb	0	; () banked
  9051  000B66  6FD9               	movwf	(??_LEDsetBar+6)& (0+255),b
  9052  000B68  0E60               	movlw	low _displaybuffer
  9053  000B6A  0100               	movlb	0	; () banked
  9054  000B6C  6FDA               	movwf	(??_LEDsetBar+7)& (0+255),b
  9055  000B6E  0E00               	movlw	high _displaybuffer
  9056  000B70  0100               	movlb	0	; () banked
  9057  000B72  6FDB               	movwf	(??_LEDsetBar+8)& (0+255),b
  9058  000B74  90D8               	bcf	status,0,c
  9059  000B76  3427               	rlcf	LEDsetBar@c,w,c
  9060  000B78  6ED9               	movwf	fsr2l,c
  9061  000B7A  3428               	rlcf	LEDsetBar@c+1,w,c
  9062  000B7C  6EDA               	movwf	fsr2h,c
  9063  000B7E  90D8               	bcf	status,0,c
  9064  000B80  36D9               	rlcf	fsr2l,f,c
  9065  000B82  36DA               	rlcf	fsr2h,f,c
  9066  000B84  0100               	movlb	0	; () banked
  9067  000B86  51DA               	movf	(??_LEDsetBar+7)& (0+255),w,b
  9068  000B88  26D9               	addwf	fsr2l,f,c
  9069  000B8A  0100               	movlb	0	; () banked
  9070  000B8C  51DB               	movf	(??_LEDsetBar+8)& (0+255),w,b
  9071  000B8E  22DA               	addwfc	fsr2h,f,c
  9072  000B90  0100               	movlb	0	; () banked
  9073  000B92  51D6               	movf	(??_LEDsetBar+3)& (0+255),w,b
  9074  000B94  16DE               	andwf	postinc2,f,c
  9075  000B96  51D7               	movf	(??_LEDsetBar+4)& (0+255),w,b
  9076  000B98  16DE               	andwf	postinc2,f,c
  9077  000B9A  51D8               	movf	(??_LEDsetBar+5)& (0+255),w,b
  9078  000B9C  16DE               	andwf	postinc2,f,c
  9079  000B9E  51D9               	movf	(??_LEDsetBar+6)& (0+255),w,b
  9080  000BA0  16DE               	andwf	postinc2,f,c
  9081                           
  9082                           ; BSR set to: 0
  9083                           
  9084                           ; BSR set to: 0
  9085                           
  9086                           ; BSR set to: 0
  9087  000BA2  0012               	return	
  9088                           
  9089                           ; BSR set to: 0
  9090  000BA4  0012               	return		;funcret
  9091  000BA6                     __end_of_LEDsetBar:
  9092                           	opt stack 0
  9093                           tosu	equ	0xFFF
  9094                           tosh	equ	0xFFE
  9095                           tosl	equ	0xFFD
  9096                           pclath	equ	0xFFA
  9097                           tblptru	equ	0xFF8
  9098                           tblptrh	equ	0xFF7
  9099                           tblptrl	equ	0xFF6
  9100                           tablat	equ	0xFF5
  9101                           prodh	equ	0xFF4
  9102                           prodl	equ	0xFF3
  9103                           intcon	equ	0xFF2
  9104                           intcon2	equ	0xFF1
  9105                           postinc0	equ	0xFEE
  9106                           wreg	equ	0xFE8
  9107                           indf2	equ	0xFDF
  9108                           postinc2	equ	0xFDE
  9109                           postdec2	equ	0xFDD
  9110                           plusw2	equ	0xFDB
  9111                           fsr2h	equ	0xFDA
  9112                           fsr2l	equ	0xFD9
  9113                           status	equ	0xFD8
  9114                           
  9115 ;; *************** function ___awdiv *****************
  9116 ;; Defined at:
  9117 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  9118 ;; Parameters:    Size  Location     Type
  9119 ;;  dividend        2   26[COMRAM] int 
  9120 ;;  divisor         2   28[COMRAM] int 
  9121 ;; Auto vars:     Size  Location     Type
  9122 ;;  quotient        2   32[COMRAM] int 
  9123 ;;  sign            1   31[COMRAM] unsigned char 
  9124 ;;  counter         1   30[COMRAM] unsigned char 
  9125 ;; Return value:  Size  Location     Type
  9126 ;;                  2   26[COMRAM] int 
  9127 ;; Registers used:
  9128 ;;		wreg, status,2, status,0
  9129 ;; Tracked objects:
  9130 ;;		On entry : 0/0
  9131 ;;		On exit  : 0/0
  9132 ;;		Unchanged: 0/0
  9133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9134 ;;      Params:         4       0       0       0       0       0       0
  9135 ;;      Locals:         4       0       0       0       0       0       0
  9136 ;;      Temps:          0       0       0       0       0       0       0
  9137 ;;      Totals:         8       0       0       0       0       0       0
  9138 ;;Total ram usage:        8 bytes
  9139 ;; Hardware stack levels used:    1
  9140 ;; Hardware stack levels required when called:    4
  9141 ;; This function calls:
  9142 ;;		Nothing
  9143 ;; This function is called by:
  9144 ;;		_LEDsetBar
  9145 ;;		_begin
  9146 ;; This function uses a non-reentrant model
  9147 ;;
  9148                           
  9149                           	psect	text48
  9150  00218C                     __ptext48:
  9151                           	opt stack 0
  9152  00218C                     ___awdiv:
  9153                           	opt stack 24
  9154                           
  9155                           ;incstack = 0
  9156  00218C  0E00               	movlw	0
  9157  00218E  6E20               	movwf	___awdiv@sign,c
  9158  002190  AE1E               	btfss	___awdiv@divisor+1,7,c
  9159  002192  D007               	goto	l3376
  9160  002194  6C1D               	negf	___awdiv@divisor,c
  9161  002196  1E1E               	comf	___awdiv@divisor+1,f,c
  9162  002198  B0D8               	btfsc	status,0,c
  9163  00219A  2A1E               	incf	___awdiv@divisor+1,f,c
  9164  00219C  0E01               	movlw	1
  9165  00219E  6E20               	movwf	___awdiv@sign,c
  9166  0021A0  D000               	goto	l3376
  9167  0021A2                     l3376:
  9168  0021A2  AE1C               	btfss	___awdiv@dividend+1,7,c
  9169  0021A4  D007               	goto	l3382
  9170  0021A6  6C1B               	negf	___awdiv@dividend,c
  9171  0021A8  1E1C               	comf	___awdiv@dividend+1,f,c
  9172  0021AA  B0D8               	btfsc	status,0,c
  9173  0021AC  2A1C               	incf	___awdiv@dividend+1,f,c
  9174  0021AE  0E01               	movlw	1
  9175  0021B0  1A20               	xorwf	___awdiv@sign,f,c
  9176  0021B2  D000               	goto	l3382
  9177  0021B4                     l3382:
  9178  0021B4  0E00               	movlw	0
  9179  0021B6  6E22               	movwf	___awdiv@quotient+1,c
  9180  0021B8  0E00               	movlw	0
  9181  0021BA  6E21               	movwf	___awdiv@quotient,c
  9182  0021BC  501D               	movf	___awdiv@divisor,w,c
  9183  0021BE  101E               	iorwf	___awdiv@divisor+1,w,c
  9184  0021C0  B4D8               	btfsc	status,2,c
  9185  0021C2  D021               	goto	l3404
  9186  0021C4  0E01               	movlw	1
  9187  0021C6  6E1F               	movwf	___awdiv@counter,c
  9188  0021C8  D005               	goto	l3390
  9189  0021CA                     l3388:
  9190  0021CA  90D8               	bcf	status,0,c
  9191  0021CC  361D               	rlcf	___awdiv@divisor,f,c
  9192  0021CE  361E               	rlcf	___awdiv@divisor+1,f,c
  9193  0021D0  2A1F               	incf	___awdiv@counter,f,c
  9194  0021D2  D000               	goto	l3390
  9195  0021D4                     l3390:
  9196  0021D4  BE1E               	btfsc	___awdiv@divisor+1,7,c
  9197  0021D6  D002               	goto	l3392
  9198  0021D8  D7F8               	goto	l3388
  9199  0021DA  D000               	goto	l3392
  9200  0021DC                     l3392:
  9201  0021DC  90D8               	bcf	status,0,c
  9202  0021DE  3621               	rlcf	___awdiv@quotient,f,c
  9203  0021E0  3622               	rlcf	___awdiv@quotient+1,f,c
  9204  0021E2  501D               	movf	___awdiv@divisor,w,c
  9205  0021E4  5C1B               	subwf	___awdiv@dividend,w,c
  9206  0021E6  501E               	movf	___awdiv@divisor+1,w,c
  9207  0021E8  581C               	subwfb	___awdiv@dividend+1,w,c
  9208  0021EA  A0D8               	btfss	status,0,c
  9209  0021EC  D006               	goto	l3400
  9210  0021EE  501D               	movf	___awdiv@divisor,w,c
  9211  0021F0  5E1B               	subwf	___awdiv@dividend,f,c
  9212  0021F2  501E               	movf	___awdiv@divisor+1,w,c
  9213  0021F4  5A1C               	subwfb	___awdiv@dividend+1,f,c
  9214  0021F6  8021               	bsf	___awdiv@quotient,0,c
  9215  0021F8  D000               	goto	l3400
  9216  0021FA                     l3400:
  9217  0021FA  90D8               	bcf	status,0,c
  9218  0021FC  321E               	rrcf	___awdiv@divisor+1,f,c
  9219  0021FE  321D               	rrcf	___awdiv@divisor,f,c
  9220  002200  2E1F               	decfsz	___awdiv@counter,f,c
  9221  002202  D7EC               	goto	l3392
  9222  002204  D000               	goto	l3404
  9223  002206                     l3404:
  9224  002206  5020               	movf	___awdiv@sign,w,c
  9225  002208  B4D8               	btfsc	status,2,c
  9226  00220A  D005               	goto	l3408
  9227  00220C  6C21               	negf	___awdiv@quotient,c
  9228  00220E  1E22               	comf	___awdiv@quotient+1,f,c
  9229  002210  B0D8               	btfsc	status,0,c
  9230  002212  2A22               	incf	___awdiv@quotient+1,f,c
  9231  002214  D000               	goto	l3408
  9232  002216                     l3408:
  9233  002216  C021  F01B         	movff	___awdiv@quotient,?___awdiv
  9234  00221A  C022  F01C         	movff	___awdiv@quotient+1,?___awdiv+1
  9235  00221E  0012               	return	
  9236  002220  0012               	return		;funcret
  9237  002222                     __end_of___awdiv:
  9238                           	opt stack 0
  9239                           tosu	equ	0xFFF
  9240                           tosh	equ	0xFFE
  9241                           tosl	equ	0xFFD
  9242                           pclath	equ	0xFFA
  9243                           tblptru	equ	0xFF8
  9244                           tblptrh	equ	0xFF7
  9245                           tblptrl	equ	0xFF6
  9246                           tablat	equ	0xFF5
  9247                           prodh	equ	0xFF4
  9248                           prodl	equ	0xFF3
  9249                           intcon	equ	0xFF2
  9250                           intcon2	equ	0xFF1
  9251                           postinc0	equ	0xFEE
  9252                           wreg	equ	0xFE8
  9253                           indf2	equ	0xFDF
  9254                           postinc2	equ	0xFDE
  9255                           postdec2	equ	0xFDD
  9256                           plusw2	equ	0xFDB
  9257                           fsr2h	equ	0xFDA
  9258                           fsr2l	equ	0xFD9
  9259                           status	equ	0xFD8
  9260                           
  9261 ;; *************** function _LEDbegin *****************
  9262 ;; Defined at:
  9263 ;;		line 83 in file "LED_BarGraph.c"
  9264 ;; Parameters:    Size  Location     Type
  9265 ;;  i2c_addr        1    wreg     unsigned char 
  9266 ;; Auto vars:     Size  Location     Type
  9267 ;;  i2c_addr        1   13[BANK0 ] unsigned char 
  9268 ;;  writeBuffer     3    8[BANK0 ] unsigned char [3]
  9269 ;;  timeOut         2   11[BANK0 ] unsigned int 
  9270 ;;  status          1   14[BANK0 ] enum E8855
  9271 ;; Return value:  Size  Location     Type
  9272 ;;		None               void
  9273 ;; Registers used:
  9274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9275 ;; Tracked objects:
  9276 ;;		On entry : 0/0
  9277 ;;		On exit  : 0/0
  9278 ;;		Unchanged: 0/0
  9279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9280 ;;      Params:         0       0       0       0       0       0       0
  9281 ;;      Locals:         0       7       0       0       0       0       0
  9282 ;;      Temps:          0       0       0       0       0       0       0
  9283 ;;      Totals:         0       7       0       0       0       0       0
  9284 ;;Total ram usage:        7 bytes
  9285 ;; Hardware stack levels used:    1
  9286 ;; Hardware stack levels required when called:    7
  9287 ;; This function calls:
  9288 ;;		_I2C1_MasterWrite
  9289 ;;		_LEDBsetBrightness
  9290 ;;		_LEDblinkRate
  9291 ;; This function is called by:
  9292 ;;		_main
  9293 ;; This function uses a non-reentrant model
  9294 ;;
  9295                           
  9296                           	psect	text49
  9297  001F90                     __ptext49:
  9298                           	opt stack 0
  9299  001F90                     _LEDbegin:
  9300                           	opt stack 23
  9301                           
  9302                           ;incstack = 0
  9303                           ;LEDbegin@i2c_addr stored from wreg
  9304  001F90  0100               	movlb	0	; () banked
  9305  001F92  6FE0               	movwf	LEDbegin@i2c_addr& (0+255),b
  9306                           
  9307                           ; BSR set to: 0
  9308                           ;LED_BarGraph.c: 84: uint8_t writeBuffer[3];
  9309                           ;LED_BarGraph.c: 85: uint16_t timeOut;
  9310                           ;LED_BarGraph.c: 86: writeBuffer[0] = 0x21;
  9311  001F94  0E21               	movlw	33
  9312  001F96  0100               	movlb	0	; () banked
  9313  001F98  6FDB               	movwf	LEDbegin@writeBuffer& (0+255),b
  9314                           
  9315                           ;LED_BarGraph.c: 87: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  9316  001F9A  0E02               	movlw	2
  9317  001F9C  0100               	movlb	0	; () banked
  9318  001F9E  6FE1               	movwf	LEDbegin@status& (0+255),b
  9319                           
  9320                           ;LED_BarGraph.c: 89: timeOut = 0;
  9321  001FA0  0E00               	movlw	0
  9322  001FA2  0100               	movlb	0	; () banked
  9323  001FA4  6FDF               	movwf	(LEDbegin@timeOut+1)& (0+255),b
  9324  001FA6  0E00               	movlw	0
  9325  001FA8  6FDE               	movwf	LEDbegin@timeOut& (0+255),b
  9326                           
  9327                           ;LED_BarGraph.c: 90: while (status != I2C1_MESSAGE_FAIL) {
  9328  001FAA  D030               	goto	l5218
  9329  001FAC                     l5198:
  9330                           
  9331                           ; BSR set to: 0
  9332                           ;LED_BarGraph.c: 92: I2C1_MasterWrite(&writeBuffer,
  9333                           ;LED_BarGraph.c: 93: 1,
  9334                           ;LED_BarGraph.c: 94: i2c_addr,
  9335                           ;LED_BarGraph.c: 95: &status);
  9336  001FAC  0EDB               	movlw	low LEDbegin@writeBuffer
  9337  001FAE  6E24               	movwf	I2C1_MasterWrite@pdata,c
  9338  001FB0  0E00               	movlw	high LEDbegin@writeBuffer
  9339  001FB2  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
  9340  001FB4  0E01               	movlw	1
  9341  001FB6  6E26               	movwf	I2C1_MasterWrite@length,c
  9342  001FB8  C0E0  F027         	movff	LEDbegin@i2c_addr,I2C1_MasterWrite@address
  9343  001FBC  6A28               	clrf	I2C1_MasterWrite@address+1,c
  9344  001FBE  0EE1               	movlw	low LEDbegin@status
  9345  001FC0  6E29               	movwf	I2C1_MasterWrite@pflag,c
  9346  001FC2  0E00               	movlw	high LEDbegin@status
  9347  001FC4  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
  9348  001FC6  ECB5  F013         	call	_I2C1_MasterWrite	;wreg free
  9349                           
  9350                           ;LED_BarGraph.c: 98: while (status == I2C1_MESSAGE_PENDING);
  9351  001FCA  D000               	goto	l5200
  9352  001FCC                     l5200:
  9353  001FCC  0E02               	movlw	2
  9354  001FCE  0100               	movlb	0	; () banked
  9355  001FD0  19E1               	xorwf	LEDbegin@status& (0+255),w,b
  9356  001FD2  B4D8               	btfsc	status,2,c
  9357  001FD4  D7FB               	goto	l5200
  9358                           
  9359                           ; BSR set to: 0
  9360                           ;LED_BarGraph.c: 100: if (status == I2C1_MESSAGE_COMPLETE)
  9361                           
  9362                           ; BSR set to: 0
  9363  001FD6  0100               	movlb	0	; () banked
  9364  001FD8  51E1               	movf	LEDbegin@status& (0+255),w,b
  9365  001FDA  0100               	movlb	0	; () banked
  9366  001FDC  B4D8               	btfsc	status,2,c
  9367  001FDE  D01A               	goto	l5220
  9368  001FE0  D001               	goto	l5206
  9369                           
  9370                           ; BSR set to: 0
  9371                           ;LED_BarGraph.c: 101: break;
  9372  001FE2  D018               	goto	l5220
  9373  001FE4                     l5206:
  9374                           
  9375                           ; BSR set to: 0
  9376                           ;LED_BarGraph.c: 102: if (timeOut == 100)
  9377  001FE4  0E64               	movlw	100
  9378  001FE6  0100               	movlb	0	; () banked
  9379  001FE8  19DE               	xorwf	LEDbegin@timeOut& (0+255),w,b
  9380  001FEA  0100               	movlb	0	; () banked
  9381  001FEC  11DF               	iorwf	(LEDbegin@timeOut+1)& (0+255),w,b
  9382  001FEE  B4D8               	btfsc	status,2,c
  9383  001FF0  D011               	goto	l5220
  9384  001FF2  D001               	goto	l5210
  9385                           
  9386                           ; BSR set to: 0
  9387                           ;LED_BarGraph.c: 103: break;
  9388  001FF4  D00F               	goto	l5220
  9389  001FF6                     l5210:
  9390                           
  9391                           ; BSR set to: 0
  9392                           ;LED_BarGraph.c: 104: if (status == I2C1_MESSAGE_FAIL)
  9393  001FF6  0100               	movlb	0	; () banked
  9394  001FF8  05E1               	decf	LEDbegin@status& (0+255),w,b
  9395  001FFA  B4D8               	btfsc	status,2,c
  9396  001FFC  D00B               	goto	l5220
  9397  001FFE  D002               	goto	l5216
  9398                           
  9399                           ; BSR set to: 0
  9400                           ;LED_BarGraph.c: 105: break;
  9401  002000  D009               	goto	l5220
  9402                           
  9403                           ; BSR set to: 0
  9404  002002  D004               	goto	l5218
  9405  002004                     l5216:
  9406                           
  9407                           ; BSR set to: 0
  9408                           ;LED_BarGraph.c: 106: else
  9409                           ;LED_BarGraph.c: 107: timeOut++;
  9410  002004  0100               	movlb	0	; () banked
  9411  002006  4BDE               	infsnz	LEDbegin@timeOut& (0+255),f,b
  9412  002008  2BDF               	incf	(LEDbegin@timeOut+1)& (0+255),f,b
  9413                           
  9414                           ; BSR set to: 0
  9415  00200A  D000               	goto	l5218
  9416  00200C                     l5218:
  9417                           
  9418                           ; BSR set to: 0
  9419  00200C  0100               	movlb	0	; () banked
  9420  00200E  05E1               	decf	LEDbegin@status& (0+255),w,b
  9421  002010  A4D8               	btfss	status,2,c
  9422  002012  D7CC               	goto	l5198
  9423  002014                     l5220:
  9424                           
  9425                           ; BSR set to: 0
  9426                           ;LED_BarGraph.c: 108: }
  9427                           ;LED_BarGraph.c: 110: LEDblinkRate(0, i2c_addr);
  9428  002014  0E00               	movlw	0
  9429  002016  0100               	movlb	0	; () banked
  9430  002018  6FD4               	movwf	(LEDblinkRate@b+1)& (0+255),b
  9431  00201A  0E00               	movlw	0
  9432  00201C  6FD3               	movwf	LEDblinkRate@b& (0+255),b
  9433  00201E  C0E0  F0D5         	movff	LEDbegin@i2c_addr,LEDblinkRate@i2c_addr
  9434  002022  EC1D  F010         	call	_LEDblinkRate	;wreg free
  9435                           
  9436                           ;LED_BarGraph.c: 111: LEDBsetBrightness(15, i2c_addr);
  9437  002026  0E00               	movlw	0
  9438  002028  0100               	movlb	0	; () banked
  9439  00202A  6FD4               	movwf	(LEDBsetBrightness@b+1)& (0+255),b
  9440  00202C  0E0F               	movlw	15
  9441  00202E  6FD3               	movwf	LEDBsetBrightness@b& (0+255),b
  9442  002030  C0E0  F0D5         	movff	LEDbegin@i2c_addr,LEDBsetBrightness@i2c_addr
  9443  002034  EC72  F010         	call	_LEDBsetBrightness	;wreg free
  9444  002038  0012               	return		;funcret
  9445  00203A                     __end_of_LEDbegin:
  9446                           	opt stack 0
  9447                           tosu	equ	0xFFF
  9448                           tosh	equ	0xFFE
  9449                           tosl	equ	0xFFD
  9450                           pclath	equ	0xFFA
  9451                           tblptru	equ	0xFF8
  9452                           tblptrh	equ	0xFF7
  9453                           tblptrl	equ	0xFF6
  9454                           tablat	equ	0xFF5
  9455                           prodh	equ	0xFF4
  9456                           prodl	equ	0xFF3
  9457                           intcon	equ	0xFF2
  9458                           intcon2	equ	0xFF1
  9459                           postinc0	equ	0xFEE
  9460                           wreg	equ	0xFE8
  9461                           indf2	equ	0xFDF
  9462                           postinc2	equ	0xFDE
  9463                           postdec2	equ	0xFDD
  9464                           plusw2	equ	0xFDB
  9465                           fsr2h	equ	0xFDA
  9466                           fsr2l	equ	0xFD9
  9467                           status	equ	0xFD8
  9468                           
  9469 ;; *************** function _LEDblinkRate *****************
  9470 ;; Defined at:
  9471 ;;		line 53 in file "LED_BarGraph.c"
  9472 ;; Parameters:    Size  Location     Type
  9473 ;;  b               2    0[BANK0 ] int 
  9474 ;;  i2c_addr        1    2[BANK0 ] unsigned char 
  9475 ;; Auto vars:     Size  Location     Type
  9476 ;;  writeBuffer     2    3[BANK0 ] unsigned char [2]
  9477 ;;  timeOut         2    5[BANK0 ] unsigned int 
  9478 ;;  status          1    7[BANK0 ] enum E8855
  9479 ;; Return value:  Size  Location     Type
  9480 ;;		None               void
  9481 ;; Registers used:
  9482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9483 ;; Tracked objects:
  9484 ;;		On entry : 0/0
  9485 ;;		On exit  : 0/0
  9486 ;;		Unchanged: 0/0
  9487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9488 ;;      Params:         0       3       0       0       0       0       0
  9489 ;;      Locals:         0       5       0       0       0       0       0
  9490 ;;      Temps:          0       0       0       0       0       0       0
  9491 ;;      Totals:         0       8       0       0       0       0       0
  9492 ;;Total ram usage:        8 bytes
  9493 ;; Hardware stack levels used:    1
  9494 ;; Hardware stack levels required when called:    6
  9495 ;; This function calls:
  9496 ;;		_I2C1_MasterWrite
  9497 ;; This function is called by:
  9498 ;;		_LEDbegin
  9499 ;; This function uses a non-reentrant model
  9500 ;;
  9501                           
  9502                           	psect	text50
  9503  00203A                     __ptext50:
  9504                           	opt stack 0
  9505  00203A                     _LEDblinkRate:
  9506                           	opt stack 23
  9507                           
  9508                           ;LED_BarGraph.c: 54: if (b > 3) b = 0;
  9509                           
  9510                           ;incstack = 0
  9511  00203A  0100               	movlb	0	; () banked
  9512  00203C  BFD4               	btfsc	(LEDblinkRate@b+1)& (0+255),7,b
  9513  00203E  D00E               	goto	l4806
  9514  002040  0100               	movlb	0	; () banked
  9515  002042  51D4               	movf	(LEDblinkRate@b+1)& (0+255),w,b
  9516  002044  E105               	bnz	u5350
  9517  002046  0E04               	movlw	4
  9518  002048  0100               	movlb	0	; () banked
  9519  00204A  5DD3               	subwf	LEDblinkRate@b& (0+255),w,b
  9520  00204C  A0D8               	btfss	status,0,c
  9521  00204E  D006               	goto	l4806
  9522  002050                     u5350:
  9523                           
  9524                           ; BSR set to: 0
  9525  002050  0E00               	movlw	0
  9526  002052  0100               	movlb	0	; () banked
  9527  002054  6FD4               	movwf	(LEDblinkRate@b+1)& (0+255),b
  9528  002056  0E00               	movlw	0
  9529  002058  6FD3               	movwf	LEDblinkRate@b& (0+255),b
  9530  00205A  D000               	goto	l4806
  9531  00205C                     l4806:
  9532                           
  9533                           ; BSR set to: 0
  9534                           ;LED_BarGraph.c: 55: uint8_t writeBuffer[2];
  9535                           ;LED_BarGraph.c: 56: uint16_t timeOut;
  9536                           ;LED_BarGraph.c: 57: writeBuffer[0] = (0x80 | 0x01 | (b << 1));
  9537  00205C  0100               	movlb	0	; () banked
  9538  00205E  51D3               	movf	LEDblinkRate@b& (0+255),w,b
  9539  002060  25D3               	addwf	LEDblinkRate@b& (0+255),w,b
  9540  002062  0981               	iorlw	129
  9541  002064  0100               	movlb	0	; () banked
  9542  002066  6FD6               	movwf	LEDblinkRate@writeBuffer& (0+255),b
  9543                           
  9544                           ; BSR set to: 0
  9545                           ;LED_BarGraph.c: 58: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  9546  002068  0E02               	movlw	2
  9547  00206A  0100               	movlb	0	; () banked
  9548  00206C  6FDA               	movwf	LEDblinkRate@status& (0+255),b
  9549                           
  9550                           ; BSR set to: 0
  9551                           ;LED_BarGraph.c: 60: timeOut = 0;
  9552  00206E  0E00               	movlw	0
  9553  002070  0100               	movlb	0	; () banked
  9554  002072  6FD9               	movwf	(LEDblinkRate@timeOut+1)& (0+255),b
  9555  002074  0E00               	movlw	0
  9556  002076  6FD8               	movwf	LEDblinkRate@timeOut& (0+255),b
  9557                           
  9558                           ;LED_BarGraph.c: 61: while (status != I2C1_MESSAGE_FAIL) {
  9559  002078  D030               	goto	l4832
  9560  00207A                     l4812:
  9561                           
  9562                           ; BSR set to: 0
  9563                           ;LED_BarGraph.c: 63: I2C1_MasterWrite(&writeBuffer,
  9564                           ;LED_BarGraph.c: 64: 1,
  9565                           ;LED_BarGraph.c: 65: i2c_addr,
  9566                           ;LED_BarGraph.c: 66: &status);
  9567  00207A  0ED6               	movlw	low LEDblinkRate@writeBuffer
  9568  00207C  6E24               	movwf	I2C1_MasterWrite@pdata,c
  9569  00207E  0E00               	movlw	high LEDblinkRate@writeBuffer
  9570  002080  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
  9571  002082  0E01               	movlw	1
  9572  002084  6E26               	movwf	I2C1_MasterWrite@length,c
  9573  002086  C0D5  F027         	movff	LEDblinkRate@i2c_addr,I2C1_MasterWrite@address
  9574  00208A  6A28               	clrf	I2C1_MasterWrite@address+1,c
  9575  00208C  0EDA               	movlw	low LEDblinkRate@status
  9576  00208E  6E29               	movwf	I2C1_MasterWrite@pflag,c
  9577  002090  0E00               	movlw	high LEDblinkRate@status
  9578  002092  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
  9579  002094  ECB5  F013         	call	_I2C1_MasterWrite	;wreg free
  9580                           
  9581                           ;LED_BarGraph.c: 69: while (status == I2C1_MESSAGE_PENDING);
  9582  002098  D000               	goto	l4814
  9583  00209A                     l4814:
  9584  00209A  0E02               	movlw	2
  9585  00209C  0100               	movlb	0	; () banked
  9586  00209E  19DA               	xorwf	LEDblinkRate@status& (0+255),w,b
  9587  0020A0  B4D8               	btfsc	status,2,c
  9588  0020A2  D7FB               	goto	l4814
  9589                           
  9590                           ; BSR set to: 0
  9591                           ;LED_BarGraph.c: 71: if (status == I2C1_MESSAGE_COMPLETE)
  9592                           
  9593                           ; BSR set to: 0
  9594  0020A4  0100               	movlb	0	; () banked
  9595  0020A6  51DA               	movf	LEDblinkRate@status& (0+255),w,b
  9596  0020A8  0100               	movlb	0	; () banked
  9597  0020AA  B4D8               	btfsc	status,2,c
  9598  0020AC  0012               	return	
  9599  0020AE  D001               	goto	l4820
  9600                           
  9601                           ; BSR set to: 0
  9602                           ;LED_BarGraph.c: 72: break;
  9603  0020B0  0012               	return	
  9604  0020B2                     l4820:
  9605                           
  9606                           ; BSR set to: 0
  9607                           ;LED_BarGraph.c: 73: if (timeOut == 100)
  9608  0020B2  0E64               	movlw	100
  9609  0020B4  0100               	movlb	0	; () banked
  9610  0020B6  19D8               	xorwf	LEDblinkRate@timeOut& (0+255),w,b
  9611  0020B8  0100               	movlb	0	; () banked
  9612  0020BA  11D9               	iorwf	(LEDblinkRate@timeOut+1)& (0+255),w,b
  9613  0020BC  B4D8               	btfsc	status,2,c
  9614  0020BE  0012               	return	
  9615  0020C0  D001               	goto	l4824
  9616                           
  9617                           ; BSR set to: 0
  9618                           ;LED_BarGraph.c: 74: break;
  9619  0020C2  0012               	return	
  9620  0020C4                     l4824:
  9621                           
  9622                           ; BSR set to: 0
  9623                           ;LED_BarGraph.c: 75: if (status == I2C1_MESSAGE_FAIL)
  9624  0020C4  0100               	movlb	0	; () banked
  9625  0020C6  05DA               	decf	LEDblinkRate@status& (0+255),w,b
  9626  0020C8  B4D8               	btfsc	status,2,c
  9627  0020CA  0012               	return	
  9628  0020CC  D002               	goto	l4830
  9629                           
  9630                           ; BSR set to: 0
  9631                           ;LED_BarGraph.c: 76: break;
  9632  0020CE  0012               	return	
  9633                           
  9634                           ; BSR set to: 0
  9635  0020D0  D004               	goto	l4832
  9636  0020D2                     l4830:
  9637                           
  9638                           ; BSR set to: 0
  9639                           ;LED_BarGraph.c: 77: else
  9640                           ;LED_BarGraph.c: 78: timeOut++;
  9641  0020D2  0100               	movlb	0	; () banked
  9642  0020D4  4BD8               	infsnz	LEDblinkRate@timeOut& (0+255),f,b
  9643  0020D6  2BD9               	incf	(LEDblinkRate@timeOut+1)& (0+255),f,b
  9644                           
  9645                           ; BSR set to: 0
  9646  0020D8  D000               	goto	l4832
  9647  0020DA                     l4832:
  9648                           
  9649                           ; BSR set to: 0
  9650  0020DA  0100               	movlb	0	; () banked
  9651  0020DC  05DA               	decf	LEDblinkRate@status& (0+255),w,b
  9652  0020DE  A4D8               	btfss	status,2,c
  9653  0020E0  D7CC               	goto	l4812
  9654                           
  9655                           ; BSR set to: 0
  9656                           
  9657                           ; BSR set to: 0
  9658  0020E2  0012               	return		;funcret
  9659  0020E4                     __end_of_LEDblinkRate:
  9660                           	opt stack 0
  9661                           tosu	equ	0xFFF
  9662                           tosh	equ	0xFFE
  9663                           tosl	equ	0xFFD
  9664                           pclath	equ	0xFFA
  9665                           tblptru	equ	0xFF8
  9666                           tblptrh	equ	0xFF7
  9667                           tblptrl	equ	0xFF6
  9668                           tablat	equ	0xFF5
  9669                           prodh	equ	0xFF4
  9670                           prodl	equ	0xFF3
  9671                           intcon	equ	0xFF2
  9672                           intcon2	equ	0xFF1
  9673                           postinc0	equ	0xFEE
  9674                           wreg	equ	0xFE8
  9675                           indf2	equ	0xFDF
  9676                           postinc2	equ	0xFDE
  9677                           postdec2	equ	0xFDD
  9678                           plusw2	equ	0xFDB
  9679                           fsr2h	equ	0xFDA
  9680                           fsr2l	equ	0xFD9
  9681                           status	equ	0xFD8
  9682                           
  9683 ;; *************** function _LEDBsetBrightness *****************
  9684 ;; Defined at:
  9685 ;;		line 23 in file "LED_BarGraph.c"
  9686 ;; Parameters:    Size  Location     Type
  9687 ;;  b               2    0[BANK0 ] int 
  9688 ;;  i2c_addr        1    2[BANK0 ] unsigned char 
  9689 ;; Auto vars:     Size  Location     Type
  9690 ;;  writeBuffer     2    3[BANK0 ] unsigned char [2]
  9691 ;;  timeOut         2    5[BANK0 ] unsigned int 
  9692 ;;  status          1    7[BANK0 ] enum E8855
  9693 ;; Return value:  Size  Location     Type
  9694 ;;		None               void
  9695 ;; Registers used:
  9696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9697 ;; Tracked objects:
  9698 ;;		On entry : 0/0
  9699 ;;		On exit  : 0/0
  9700 ;;		Unchanged: 0/0
  9701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9702 ;;      Params:         0       3       0       0       0       0       0
  9703 ;;      Locals:         0       5       0       0       0       0       0
  9704 ;;      Temps:          0       0       0       0       0       0       0
  9705 ;;      Totals:         0       8       0       0       0       0       0
  9706 ;;Total ram usage:        8 bytes
  9707 ;; Hardware stack levels used:    1
  9708 ;; Hardware stack levels required when called:    6
  9709 ;; This function calls:
  9710 ;;		_I2C1_MasterWrite
  9711 ;; This function is called by:
  9712 ;;		_LEDbegin
  9713 ;; This function uses a non-reentrant model
  9714 ;;
  9715                           
  9716                           	psect	text51
  9717  0020E4                     __ptext51:
  9718                           	opt stack 0
  9719  0020E4                     _LEDBsetBrightness:
  9720                           	opt stack 23
  9721                           
  9722                           ;LED_BarGraph.c: 24: if (b > 15) b = 15;
  9723                           
  9724                           ; BSR set to: 0
  9725                           ;incstack = 0
  9726  0020E4  0100               	movlb	0	; () banked
  9727  0020E6  BFD4               	btfsc	(LEDBsetBrightness@b+1)& (0+255),7,b
  9728  0020E8  D00E               	goto	l4774
  9729  0020EA  0100               	movlb	0	; () banked
  9730  0020EC  51D4               	movf	(LEDBsetBrightness@b+1)& (0+255),w,b
  9731  0020EE  E105               	bnz	u5290
  9732  0020F0  0E10               	movlw	16
  9733  0020F2  0100               	movlb	0	; () banked
  9734  0020F4  5DD3               	subwf	LEDBsetBrightness@b& (0+255),w,b
  9735  0020F6  A0D8               	btfss	status,0,c
  9736  0020F8  D006               	goto	l4774
  9737  0020FA                     u5290:
  9738                           
  9739                           ; BSR set to: 0
  9740  0020FA  0E00               	movlw	0
  9741  0020FC  0100               	movlb	0	; () banked
  9742  0020FE  6FD4               	movwf	(LEDBsetBrightness@b+1)& (0+255),b
  9743  002100  0E0F               	movlw	15
  9744  002102  6FD3               	movwf	LEDBsetBrightness@b& (0+255),b
  9745  002104  D000               	goto	l4774
  9746  002106                     l4774:
  9747                           
  9748                           ; BSR set to: 0
  9749                           ;LED_BarGraph.c: 25: uint8_t writeBuffer[2];
  9750                           ;LED_BarGraph.c: 26: uint16_t timeOut;
  9751                           ;LED_BarGraph.c: 27: writeBuffer[0] = (0xE0 | b);
  9752  002106  0100               	movlb	0	; () banked
  9753  002108  51D3               	movf	LEDBsetBrightness@b& (0+255),w,b
  9754  00210A  09E0               	iorlw	224
  9755  00210C  0100               	movlb	0	; () banked
  9756  00210E  6FD6               	movwf	LEDBsetBrightness@writeBuffer& (0+255),b
  9757                           
  9758                           ; BSR set to: 0
  9759                           ;LED_BarGraph.c: 28: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  9760  002110  0E02               	movlw	2
  9761  002112  0100               	movlb	0	; () banked
  9762  002114  6FDA               	movwf	LEDBsetBrightness@status& (0+255),b
  9763                           
  9764                           ; BSR set to: 0
  9765                           ;LED_BarGraph.c: 30: timeOut = 0;
  9766  002116  0E00               	movlw	0
  9767  002118  0100               	movlb	0	; () banked
  9768  00211A  6FD9               	movwf	(LEDBsetBrightness@timeOut+1)& (0+255),b
  9769  00211C  0E00               	movlw	0
  9770  00211E  6FD8               	movwf	LEDBsetBrightness@timeOut& (0+255),b
  9771                           
  9772                           ;LED_BarGraph.c: 31: while (status != I2C1_MESSAGE_FAIL) {
  9773  002120  D030               	goto	l4800
  9774  002122                     l4780:
  9775                           
  9776                           ; BSR set to: 0
  9777                           ;LED_BarGraph.c: 33: I2C1_MasterWrite(&writeBuffer,
  9778                           ;LED_BarGraph.c: 34: 1,
  9779                           ;LED_BarGraph.c: 35: i2c_addr,
  9780                           ;LED_BarGraph.c: 36: &status);
  9781  002122  0ED6               	movlw	low LEDBsetBrightness@writeBuffer
  9782  002124  6E24               	movwf	I2C1_MasterWrite@pdata,c
  9783  002126  0E00               	movlw	high LEDBsetBrightness@writeBuffer
  9784  002128  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
  9785  00212A  0E01               	movlw	1
  9786  00212C  6E26               	movwf	I2C1_MasterWrite@length,c
  9787  00212E  C0D5  F027         	movff	LEDBsetBrightness@i2c_addr,I2C1_MasterWrite@address
  9788  002132  6A28               	clrf	I2C1_MasterWrite@address+1,c
  9789  002134  0EDA               	movlw	low LEDBsetBrightness@status
  9790  002136  6E29               	movwf	I2C1_MasterWrite@pflag,c
  9791  002138  0E00               	movlw	high LEDBsetBrightness@status
  9792  00213A  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
  9793  00213C  ECB5  F013         	call	_I2C1_MasterWrite	;wreg free
  9794                           
  9795                           ;LED_BarGraph.c: 39: while (status == I2C1_MESSAGE_PENDING);
  9796  002140  D000               	goto	l4782
  9797  002142                     l4782:
  9798  002142  0E02               	movlw	2
  9799  002144  0100               	movlb	0	; () banked
  9800  002146  19DA               	xorwf	LEDBsetBrightness@status& (0+255),w,b
  9801  002148  B4D8               	btfsc	status,2,c
  9802  00214A  D7FB               	goto	l4782
  9803                           
  9804                           ; BSR set to: 0
  9805                           ;LED_BarGraph.c: 41: if (status == I2C1_MESSAGE_COMPLETE)
  9806                           
  9807                           ; BSR set to: 0
  9808  00214C  0100               	movlb	0	; () banked
  9809  00214E  51DA               	movf	LEDBsetBrightness@status& (0+255),w,b
  9810  002150  0100               	movlb	0	; () banked
  9811  002152  B4D8               	btfsc	status,2,c
  9812  002154  0012               	return	
  9813  002156  D001               	goto	l4788
  9814                           
  9815                           ; BSR set to: 0
  9816                           ;LED_BarGraph.c: 42: break;
  9817  002158  0012               	return	
  9818  00215A                     l4788:
  9819                           
  9820                           ; BSR set to: 0
  9821                           ;LED_BarGraph.c: 43: if (timeOut == 100)
  9822  00215A  0E64               	movlw	100
  9823  00215C  0100               	movlb	0	; () banked
  9824  00215E  19D8               	xorwf	LEDBsetBrightness@timeOut& (0+255),w,b
  9825  002160  0100               	movlb	0	; () banked
  9826  002162  11D9               	iorwf	(LEDBsetBrightness@timeOut+1)& (0+255),w,b
  9827  002164  B4D8               	btfsc	status,2,c
  9828  002166  0012               	return	
  9829  002168  D001               	goto	l4792
  9830                           
  9831                           ; BSR set to: 0
  9832                           ;LED_BarGraph.c: 44: break;
  9833  00216A  0012               	return	
  9834  00216C                     l4792:
  9835                           
  9836                           ; BSR set to: 0
  9837                           ;LED_BarGraph.c: 45: if (status == I2C1_MESSAGE_FAIL)
  9838  00216C  0100               	movlb	0	; () banked
  9839  00216E  05DA               	decf	LEDBsetBrightness@status& (0+255),w,b
  9840  002170  B4D8               	btfsc	status,2,c
  9841  002172  0012               	return	
  9842  002174  D002               	goto	l4798
  9843                           
  9844                           ; BSR set to: 0
  9845                           ;LED_BarGraph.c: 46: break;
  9846  002176  0012               	return	
  9847                           
  9848                           ; BSR set to: 0
  9849  002178  D004               	goto	l4800
  9850  00217A                     l4798:
  9851                           
  9852                           ; BSR set to: 0
  9853                           ;LED_BarGraph.c: 47: else
  9854                           ;LED_BarGraph.c: 48: timeOut++;
  9855  00217A  0100               	movlb	0	; () banked
  9856  00217C  4BD8               	infsnz	LEDBsetBrightness@timeOut& (0+255),f,b
  9857  00217E  2BD9               	incf	(LEDBsetBrightness@timeOut+1)& (0+255),f,b
  9858                           
  9859                           ; BSR set to: 0
  9860  002180  D000               	goto	l4800
  9861  002182                     l4800:
  9862                           
  9863                           ; BSR set to: 0
  9864  002182  0100               	movlb	0	; () banked
  9865  002184  05DA               	decf	LEDBsetBrightness@status& (0+255),w,b
  9866  002186  A4D8               	btfss	status,2,c
  9867  002188  D7CC               	goto	l4780
  9868                           
  9869                           ; BSR set to: 0
  9870                           
  9871                           ; BSR set to: 0
  9872  00218A  0012               	return		;funcret
  9873  00218C                     __end_of_LEDBsetBrightness:
  9874                           	opt stack 0
  9875                           tosu	equ	0xFFF
  9876                           tosh	equ	0xFFE
  9877                           tosl	equ	0xFFD
  9878                           pclath	equ	0xFFA
  9879                           tblptru	equ	0xFF8
  9880                           tblptrh	equ	0xFF7
  9881                           tblptrl	equ	0xFF6
  9882                           tablat	equ	0xFF5
  9883                           prodh	equ	0xFF4
  9884                           prodl	equ	0xFF3
  9885                           intcon	equ	0xFF2
  9886                           intcon2	equ	0xFF1
  9887                           postinc0	equ	0xFEE
  9888                           wreg	equ	0xFE8
  9889                           indf2	equ	0xFDF
  9890                           postinc2	equ	0xFDE
  9891                           postdec2	equ	0xFDD
  9892                           plusw2	equ	0xFDB
  9893                           fsr2h	equ	0xFDA
  9894                           fsr2l	equ	0xFD9
  9895                           status	equ	0xFD8
  9896                           
  9897 ;; *************** function _I2C1_MasterWrite *****************
  9898 ;; Defined at:
  9899 ;;		line 551 in file "mcc_generated_files/i2c1.c"
  9900 ;; Parameters:    Size  Location     Type
  9901 ;;  pdata           2   35[COMRAM] PTR unsigned char 
  9902 ;;		 -> LEDwriteDisplay@writeBuffer(20), LEDbegin@writeBuffer(3), LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBu
      +ffer(2), 
  9903 ;;  length          1   37[COMRAM] unsigned char 
  9904 ;;  address         2   38[COMRAM] unsigned int 
  9905 ;;  pflag           2   40[COMRAM] PTR enum E8836
  9906 ;;		 -> LEDwriteDisplay@status(1), LEDbegin@status(1), LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
  9907 ;; Auto vars:     Size  Location     Type
  9908 ;;		None
  9909 ;; Return value:  Size  Location     Type
  9910 ;;		None               void
  9911 ;; Registers used:
  9912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9913 ;; Tracked objects:
  9914 ;;		On entry : 0/0
  9915 ;;		On exit  : 0/0
  9916 ;;		Unchanged: 0/0
  9917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9918 ;;      Params:         7       0       0       0       0       0       0
  9919 ;;      Locals:         0       0       0       0       0       0       0
  9920 ;;      Temps:          0       0       0       0       0       0       0
  9921 ;;      Totals:         7       0       0       0       0       0       0
  9922 ;;Total ram usage:        7 bytes
  9923 ;; Hardware stack levels used:    1
  9924 ;; Hardware stack levels required when called:    5
  9925 ;; This function calls:
  9926 ;;		_I2C1_MasterTRBInsert
  9927 ;;		_I2C1_MasterWriteTRBBuild
  9928 ;; This function is called by:
  9929 ;;		_LEDBsetBrightness
  9930 ;;		_LEDblinkRate
  9931 ;;		_LEDbegin
  9932 ;;		_LEDwriteDisplay
  9933 ;; This function uses a non-reentrant model
  9934 ;;
  9935                           
  9936                           	psect	text52
  9937  00276A                     __ptext52:
  9938                           	opt stack 0
  9939  00276A                     _I2C1_MasterWrite:
  9940                           	opt stack 24
  9941                           
  9942                           ;i2c1.c: 557: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
  9943                           ;i2c1.c: 560: if (i2c1_object.trStatus.s.full != 1)
  9944                           
  9945                           ; BSR set to: 0
  9946                           ;incstack = 0
  9947  00276A  0100               	movlb	0	; () banked
  9948  00276C  B194               	btfsc	(_i2c1_object+4)& (0+255),0,b
  9949  00276E  D01C               	goto	l4634
  9950                           
  9951                           ; BSR set to: 0
  9952                           ;i2c1.c: 561: {
  9953                           ;i2c1.c: 562: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
  9954  002770  0EC9               	movlw	low I2C1_MasterWrite@trBlock
  9955  002772  6E1B               	movwf	I2C1_MasterWriteTRBBuild@ptrb,c
  9956  002774  0E00               	movlw	high I2C1_MasterWrite@trBlock
  9957  002776  6E1C               	movwf	I2C1_MasterWriteTRBBuild@ptrb+1,c
  9958  002778  C024  F01D         	movff	I2C1_MasterWrite@pdata,I2C1_MasterWriteTRBBuild@pdata
  9959  00277C  C025  F01E         	movff	I2C1_MasterWrite@pdata+1,I2C1_MasterWriteTRBBuild@pdata+1
  9960  002780  C026  F01F         	movff	I2C1_MasterWrite@length,I2C1_MasterWriteTRBBuild@length
  9961  002784  C027  F020         	movff	I2C1_MasterWrite@address,I2C1_MasterWriteTRBBuild@address
  9962  002788  C028  F021         	movff	I2C1_MasterWrite@address+1,I2C1_MasterWriteTRBBuild@address+1
  9963  00278C  ECFF  F013         	call	_I2C1_MasterWriteTRBBuild	;wreg free
  9964                           
  9965                           ;i2c1.c: 563: I2C1_MasterTRBInsert(1, &trBlock, pflag);
  9966  002790  0EC9               	movlw	low I2C1_MasterWrite@trBlock
  9967  002792  6E1B               	movwf	I2C1_MasterTRBInsert@ptrb_list,c
  9968  002794  0E00               	movlw	high I2C1_MasterWrite@trBlock
  9969  002796  6E1C               	movwf	I2C1_MasterTRBInsert@ptrb_list+1,c
  9970  002798  C029  F01D         	movff	I2C1_MasterWrite@pflag,I2C1_MasterTRBInsert@pflag
  9971  00279C  C02A  F01E         	movff	I2C1_MasterWrite@pflag+1,I2C1_MasterTRBInsert@pflag+1
  9972  0027A0  0E01               	movlw	1
  9973  0027A2  EC10  F00F         	call	_I2C1_MasterTRBInsert
  9974                           
  9975                           ;i2c1.c: 564: }
  9976  0027A6  0012               	return	
  9977  0027A8                     l4634:
  9978                           
  9979                           ;i2c1.c: 565: else
  9980                           ;i2c1.c: 566: {
  9981                           ;i2c1.c: 567: *pflag = I2C1_MESSAGE_FAIL;
  9982  0027A8  C029  FFD9         	movff	I2C1_MasterWrite@pflag,fsr2l
  9983  0027AC  C02A  FFDA         	movff	I2C1_MasterWrite@pflag+1,fsr2h
  9984  0027B0  0E01               	movlw	1
  9985  0027B2  6EDF               	movwf	indf2,c
  9986  0027B4  0012               	return	
  9987  0027B6  0012               	return		;funcret
  9988  0027B8                     __end_of_I2C1_MasterWrite:
  9989                           	opt stack 0
  9990                           tosu	equ	0xFFF
  9991                           tosh	equ	0xFFE
  9992                           tosl	equ	0xFFD
  9993                           pclath	equ	0xFFA
  9994                           tblptru	equ	0xFF8
  9995                           tblptrh	equ	0xFF7
  9996                           tblptrl	equ	0xFF6
  9997                           tablat	equ	0xFF5
  9998                           prodh	equ	0xFF4
  9999                           prodl	equ	0xFF3
 10000                           intcon	equ	0xFF2
 10001                           intcon2	equ	0xFF1
 10002                           postinc0	equ	0xFEE
 10003                           wreg	equ	0xFE8
 10004                           indf2	equ	0xFDF
 10005                           postinc2	equ	0xFDE
 10006                           postdec2	equ	0xFDD
 10007                           plusw2	equ	0xFDB
 10008                           fsr2h	equ	0xFDA
 10009                           fsr2l	equ	0xFD9
 10010                           status	equ	0xFD8
 10011                           
 10012 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 10013 ;; Defined at:
 10014 ;;		line 660 in file "mcc_generated_files/i2c1.c"
 10015 ;; Parameters:    Size  Location     Type
 10016 ;;  ptrb            2   26[COMRAM] PTR struct .
 10017 ;;		 -> I2C1_MasterWrite@trBlock(5), 
 10018 ;;  pdata           2   28[COMRAM] PTR unsigned char 
 10019 ;;		 -> LEDwriteDisplay@writeBuffer(20), LEDbegin@writeBuffer(3), LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBu
      +ffer(2), 
 10020 ;;  length          1   30[COMRAM] unsigned char 
 10021 ;;  address         2   31[COMRAM] unsigned int 
 10022 ;; Auto vars:     Size  Location     Type
 10023 ;;		None
 10024 ;; Return value:  Size  Location     Type
 10025 ;;		None               void
 10026 ;; Registers used:
 10027 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10028 ;; Tracked objects:
 10029 ;;		On entry : 0/0
 10030 ;;		On exit  : 0/0
 10031 ;;		Unchanged: 0/0
 10032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10033 ;;      Params:         7       0       0       0       0       0       0
 10034 ;;      Locals:         0       0       0       0       0       0       0
 10035 ;;      Temps:          2       0       0       0       0       0       0
 10036 ;;      Totals:         9       0       0       0       0       0       0
 10037 ;;Total ram usage:        9 bytes
 10038 ;; Hardware stack levels used:    1
 10039 ;; Hardware stack levels required when called:    4
 10040 ;; This function calls:
 10041 ;;		Nothing
 10042 ;; This function is called by:
 10043 ;;		_I2C1_MasterWrite
 10044 ;; This function uses a non-reentrant model
 10045 ;;
 10046                           
 10047                           	psect	text53
 10048  0027FE                     __ptext53:
 10049                           	opt stack 0
 10050  0027FE                     _I2C1_MasterWriteTRBBuild:
 10051                           	opt stack 24
 10052                           
 10053                           ;i2c1.c: 666: ptrb->address = address << 1;
 10054                           
 10055                           ;incstack = 0
 10056  0027FE  C020  F022         	movff	I2C1_MasterWriteTRBBuild@address,??_I2C1_MasterWriteTRBBuild
 10057  002802  C021  F023         	movff	I2C1_MasterWriteTRBBuild@address+1,??_I2C1_MasterWriteTRBBuild+1
 10058  002806  90D8               	bcf	status,0,c
 10059  002808  3622               	rlcf	??_I2C1_MasterWriteTRBBuild,f,c
 10060  00280A  3623               	rlcf	??_I2C1_MasterWriteTRBBuild+1,f,c
 10061  00280C  C01B  FFD9         	movff	I2C1_MasterWriteTRBBuild@ptrb,fsr2l
 10062  002810  C01C  FFDA         	movff	I2C1_MasterWriteTRBBuild@ptrb+1,fsr2h
 10063  002814  C022  FFDE         	movff	??_I2C1_MasterWriteTRBBuild,postinc2
 10064  002818  C023  FFDD         	movff	??_I2C1_MasterWriteTRBBuild+1,postdec2
 10065                           
 10066                           ;i2c1.c: 667: ptrb->length = length;
 10067  00281C  EE20 F002          	lfsr	2,2
 10068  002820  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
 10069  002822  26D9               	addwf	fsr2l,f,c
 10070  002824  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
 10071  002826  22DA               	addwfc	fsr2h,f,c
 10072  002828  C01F  FFDF         	movff	I2C1_MasterWriteTRBBuild@length,indf2
 10073                           
 10074                           ;i2c1.c: 668: ptrb->pbuffer = pdata;
 10075  00282C  EE20 F003          	lfsr	2,3
 10076  002830  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
 10077  002832  26D9               	addwf	fsr2l,f,c
 10078  002834  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
 10079  002836  22DA               	addwfc	fsr2h,f,c
 10080  002838  C01D  FFDE         	movff	I2C1_MasterWriteTRBBuild@pdata,postinc2
 10081  00283C  C01E  FFDD         	movff	I2C1_MasterWriteTRBBuild@pdata+1,postdec2
 10082  002840  0012               	return		;funcret
 10083  002842                     __end_of_I2C1_MasterWriteTRBBuild:
 10084                           	opt stack 0
 10085                           tosu	equ	0xFFF
 10086                           tosh	equ	0xFFE
 10087                           tosl	equ	0xFFD
 10088                           pclath	equ	0xFFA
 10089                           tblptru	equ	0xFF8
 10090                           tblptrh	equ	0xFF7
 10091                           tblptrl	equ	0xFF6
 10092                           tablat	equ	0xFF5
 10093                           prodh	equ	0xFF4
 10094                           prodl	equ	0xFF3
 10095                           intcon	equ	0xFF2
 10096                           intcon2	equ	0xFF1
 10097                           postinc0	equ	0xFEE
 10098                           wreg	equ	0xFE8
 10099                           indf2	equ	0xFDF
 10100                           postinc2	equ	0xFDE
 10101                           postdec2	equ	0xFDD
 10102                           plusw2	equ	0xFDB
 10103                           fsr2h	equ	0xFDA
 10104                           fsr2l	equ	0xFD9
 10105                           status	equ	0xFD8
 10106                           
 10107 ;; *************** function _I2C1_MasterTRBInsert *****************
 10108 ;; Defined at:
 10109 ;;		line 594 in file "mcc_generated_files/i2c1.c"
 10110 ;; Parameters:    Size  Location     Type
 10111 ;;  count           1    wreg     unsigned char 
 10112 ;;  ptrb_list       2   26[COMRAM] PTR struct .
 10113 ;;		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
 10114 ;;  pflag           2   28[COMRAM] PTR enum E8836
 10115 ;;		 -> LEDwriteDisplay@status(1), LEDbegin@status(1), LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
 10116 ;; Auto vars:     Size  Location     Type
 10117 ;;  count           1   31[COMRAM] unsigned char 
 10118 ;; Return value:  Size  Location     Type
 10119 ;;		None               void
 10120 ;; Registers used:
 10121 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10122 ;; Tracked objects:
 10123 ;;		On entry : 0/0
 10124 ;;		On exit  : 0/0
 10125 ;;		Unchanged: 0/0
 10126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10127 ;;      Params:         4       0       0       0       0       0       0
 10128 ;;      Locals:         1       0       0       0       0       0       0
 10129 ;;      Temps:          1       0       0       0       0       0       0
 10130 ;;      Totals:         6       0       0       0       0       0       0
 10131 ;;Total ram usage:        6 bytes
 10132 ;; Hardware stack levels used:    1
 10133 ;; Hardware stack levels required when called:    4
 10134 ;; This function calls:
 10135 ;;		Nothing
 10136 ;; This function is called by:
 10137 ;;		_I2C1_MasterWrite
 10138 ;;		_I2C1_MasterRead
 10139 ;; This function uses a non-reentrant model
 10140 ;;
 10141                           
 10142                           	psect	text54
 10143  001E20                     __ptext54:
 10144                           	opt stack 0
 10145  001E20                     _I2C1_MasterTRBInsert:
 10146                           	opt stack 24
 10147                           
 10148                           ;incstack = 0
 10149                           ;I2C1_MasterTRBInsert@count stored from wreg
 10150  001E20  6E20               	movwf	I2C1_MasterTRBInsert@count,c
 10151                           
 10152                           ;i2c1.c: 601: if (i2c1_object.trStatus.s.full != 1)
 10153  001E22  0100               	movlb	0	; () banked
 10154  001E24  B194               	btfsc	(_i2c1_object+4)& (0+255),0,b
 10155  001E26  D047               	goto	l4528
 10156                           
 10157                           ; BSR set to: 0
 10158                           ;i2c1.c: 602: {
 10159                           ;i2c1.c: 603: *pflag = I2C1_MESSAGE_PENDING;
 10160  001E28  C01D  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 10161  001E2C  C01E  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 10162  001E30  0E02               	movlw	2
 10163  001E32  6EDF               	movwf	indf2,c
 10164                           
 10165                           ; BSR set to: 0
 10166                           ;i2c1.c: 605: i2c1_object.pTrTail->ptrb_list = ptrb_list;
 10167  001E34  0100               	movlb	0	; () banked
 10168  001E36  EE20 F001          	lfsr	2,1
 10169  001E3A  5190               	movf	_i2c1_object& (0+255),w,b
 10170  001E3C  26D9               	addwf	fsr2l,f,c
 10171  001E3E  5191               	movf	(_i2c1_object+1)& (0+255),w,b
 10172  001E40  22DA               	addwfc	fsr2h,f,c
 10173  001E42  C01B  FFDE         	movff	I2C1_MasterTRBInsert@ptrb_list,postinc2
 10174  001E46  C01C  FFDD         	movff	I2C1_MasterTRBInsert@ptrb_list+1,postdec2
 10175                           
 10176                           ; BSR set to: 0
 10177                           ;i2c1.c: 606: i2c1_object.pTrTail->count = count;
 10178  001E4A  C090  FFD9         	movff	_i2c1_object,fsr2l
 10179  001E4E  C091  FFDA         	movff	_i2c1_object+1,fsr2h
 10180  001E52  C020  FFDF         	movff	I2C1_MasterTRBInsert@count,indf2
 10181                           
 10182                           ; BSR set to: 0
 10183                           ;i2c1.c: 607: i2c1_object.pTrTail->pTrFlag = pflag;
 10184  001E56  0100               	movlb	0	; () banked
 10185  001E58  EE20 F003          	lfsr	2,3
 10186  001E5C  5190               	movf	_i2c1_object& (0+255),w,b
 10187  001E5E  26D9               	addwf	fsr2l,f,c
 10188  001E60  5191               	movf	(_i2c1_object+1)& (0+255),w,b
 10189  001E62  22DA               	addwfc	fsr2h,f,c
 10190  001E64  C01D  FFDE         	movff	I2C1_MasterTRBInsert@pflag,postinc2
 10191  001E68  C01E  FFDD         	movff	I2C1_MasterTRBInsert@pflag+1,postdec2
 10192                           
 10193                           ; BSR set to: 0
 10194                           ;i2c1.c: 608: i2c1_object.pTrTail++;
 10195  001E6C  0E05               	movlw	5
 10196  001E6E  0100               	movlb	0	; () banked
 10197  001E70  2790               	addwf	_i2c1_object& (0+255),f,b
 10198  001E72  0E00               	movlw	0
 10199  001E74  2391               	addwfc	(_i2c1_object+1)& (0+255),f,b
 10200                           
 10201                           ; BSR set to: 0
 10202                           ;i2c1.c: 611: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
 10203  001E76  0ED3               	movlw	low (_i2c1_tr_queue+5)
 10204  001E78  0100               	movlb	0	; () banked
 10205  001E7A  1990               	xorwf	_i2c1_object& (0+255),w,b
 10206  001E7C  E10C               	bnz	l4524
 10207  001E7E  0E00               	movlw	high (_i2c1_tr_queue+5)
 10208  001E80  0100               	movlb	0	; () banked
 10209  001E82  1991               	xorwf	(_i2c1_object+1)& (0+255),w,b
 10210  001E84  A4D8               	btfss	status,2,c
 10211  001E86  D007               	goto	l4524
 10212                           
 10213                           ; BSR set to: 0
 10214                           ;i2c1.c: 612: {
 10215                           ;i2c1.c: 614: i2c1_object.pTrTail = i2c1_tr_queue;
 10216  001E88  0ECE               	movlw	low _i2c1_tr_queue
 10217  001E8A  0100               	movlb	0	; () banked
 10218  001E8C  6F90               	movwf	_i2c1_object& (0+255),b
 10219  001E8E  0E00               	movlw	high _i2c1_tr_queue
 10220  001E90  0100               	movlb	0	; () banked
 10221  001E92  6F91               	movwf	(_i2c1_object+1)& (0+255),b
 10222  001E94  D000               	goto	l4524
 10223  001E96                     l4524:
 10224                           
 10225                           ; BSR set to: 0
 10226                           ;i2c1.c: 615: }
 10227                           ;i2c1.c: 619: i2c1_object.trStatus.s.empty = 0;
 10228  001E96  0100               	movlb	0	; () banked
 10229  001E98  9394               	bcf	(_i2c1_object+4)& (0+255),1,b
 10230                           
 10231                           ;i2c1.c: 622: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
 10232  001E9A  0100               	movlb	0	; () banked
 10233  001E9C  5190               	movf	_i2c1_object& (0+255),w,b
 10234  001E9E  0100               	movlb	0	; () banked
 10235  001EA0  1992               	xorwf	(_i2c1_object+2)& (0+255),w,b
 10236  001EA2  E110               	bnz	l4530
 10237  001EA4  0100               	movlb	0	; () banked
 10238  001EA6  5191               	movf	(_i2c1_object+1)& (0+255),w,b
 10239  001EA8  0100               	movlb	0	; () banked
 10240  001EAA  1993               	xorwf	(_i2c1_object+3)& (0+255),w,b
 10241  001EAC  A4D8               	btfss	status,2,c
 10242  001EAE  D00A               	goto	l4530
 10243                           
 10244                           ; BSR set to: 0
 10245                           ;i2c1.c: 623: {
 10246                           ;i2c1.c: 625: i2c1_object.trStatus.s.full = 1;
 10247  001EB0  0100               	movlb	0	; () banked
 10248  001EB2  8194               	bsf	(_i2c1_object+4)& (0+255),0,b
 10249                           
 10250                           ; BSR set to: 0
 10251                           ;i2c1.c: 626: }
 10252                           ;i2c1.c: 628: }
 10253  001EB4  D007               	goto	l4530
 10254  001EB6                     l4528:
 10255                           
 10256                           ; BSR set to: 0
 10257                           ;i2c1.c: 629: else
 10258                           ;i2c1.c: 630: {
 10259                           ;i2c1.c: 631: *pflag = I2C1_MESSAGE_FAIL;
 10260  001EB6  C01D  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 10261  001EBA  C01E  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 10262  001EBE  0E01               	movlw	1
 10263  001EC0  6EDF               	movwf	indf2,c
 10264  001EC2  D000               	goto	l4530
 10265  001EC4                     l4530:
 10266                           
 10267                           ; BSR set to: 0
 10268                           ;i2c1.c: 632: }
 10269                           ;i2c1.c: 635: if (*pflag == I2C1_MESSAGE_PENDING)
 10270  001EC4  C01D  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 10271  001EC8  C01E  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 10272  001ECC  0E02               	movlw	2
 10273  001ECE  18DE               	xorwf	postinc2,w,c
 10274  001ED0  A4D8               	btfss	status,2,c
 10275  001ED2  0012               	return	
 10276                           
 10277                           ; BSR set to: 0
 10278                           
 10279                           ; BSR set to: 0
 10280                           ;i2c1.c: 636: {
 10281                           ;i2c1.c: 637: while(i2c1_state != S_MASTER_IDLE);
 10282  001ED4  D000               	goto	l4534
 10283  001ED6                     l4534:
 10284  001ED6  5037               	movf	_i2c1_state,w,c
 10285  001ED8  A4D8               	btfss	status,2,c
 10286  001EDA  D7FD               	goto	l4534
 10287                           
 10288                           ;i2c1.c: 638: {
 10289                           ;i2c1.c: 641: PIR1bits.SSP1IF = 1;
 10290  001EDC  869E               	bsf	3998,3,c	;volatile
 10291  001EDE  0012               	return	
 10292  001EE0  0012               	return		;funcret
 10293  001EE2                     __end_of_I2C1_MasterTRBInsert:
 10294                           	opt stack 0
 10295                           tosu	equ	0xFFF
 10296                           tosh	equ	0xFFE
 10297                           tosl	equ	0xFFD
 10298                           pclath	equ	0xFFA
 10299                           tblptru	equ	0xFF8
 10300                           tblptrh	equ	0xFF7
 10301                           tblptrl	equ	0xFF6
 10302                           tablat	equ	0xFF5
 10303                           prodh	equ	0xFF4
 10304                           prodl	equ	0xFF3
 10305                           intcon	equ	0xFF2
 10306                           intcon2	equ	0xFF1
 10307                           postinc0	equ	0xFEE
 10308                           wreg	equ	0xFE8
 10309                           indf2	equ	0xFDF
 10310                           postinc2	equ	0xFDE
 10311                           postdec2	equ	0xFDD
 10312                           plusw2	equ	0xFDB
 10313                           fsr2h	equ	0xFDA
 10314                           fsr2l	equ	0xFD9
 10315                           status	equ	0xFD8
 10316                           
 10317 ;; *************** function _INTERRUPT_InterruptManager *****************
 10318 ;; Defined at:
 10319 ;;		line 73 in file "mcc_generated_files/interrupt_manager.c"
 10320 ;; Parameters:    Size  Location     Type
 10321 ;;		None
 10322 ;; Auto vars:     Size  Location     Type
 10323 ;;		None
 10324 ;; Return value:  Size  Location     Type
 10325 ;;		None               void
 10326 ;; Registers used:
 10327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10328 ;; Tracked objects:
 10329 ;;		On entry : 0/0
 10330 ;;		On exit  : 0/0
 10331 ;;		Unchanged: 0/0
 10332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10333 ;;      Params:         0       0       0       0       0       0       0
 10334 ;;      Locals:         0       0       0       0       0       0       0
 10335 ;;      Temps:         14       0       0       0       0       0       0
 10336 ;;      Totals:        14       0       0       0       0       0       0
 10337 ;;Total ram usage:       14 bytes
 10338 ;; Hardware stack levels used:    1
 10339 ;; Hardware stack levels required when called:    3
 10340 ;; This function calls:
 10341 ;;		_ADC_ISR
 10342 ;;		_EUSART1_Receive_ISR
 10343 ;;		_EUSART1_Transmit_ISR
 10344 ;;		_I2C1_BusCollisionISR
 10345 ;;		_I2C1_ISR
 10346 ;;		_TMR0_ISR
 10347 ;; This function is called by:
 10348 ;;		Interrupt level 2
 10349 ;; This function uses a non-reentrant model
 10350 ;;
 10351                           
 10352                           	psect	intcode
 10353  000008                     __pintcode:
 10354                           	opt stack 0
 10355  000008                     _INTERRUPT_InterruptManager:
 10356                           	opt stack 21
 10357                           
 10358                           ;incstack = 0
 10359  000008  CFFA F00D          	movff	pclath,??_INTERRUPT_InterruptManager
 10360  00000C  CFFB F00E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 10361  000010  CFE9 F00F          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 10362  000014  CFEA F010          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 10363  000018  CFE1 F011          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 10364  00001C  CFE2 F012          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 10365  000020  CFD9 F013          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 10366  000024  CFDA F014          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 10367  000028  CFF3 F015          	movff	prodl,??_INTERRUPT_InterruptManager+8
 10368  00002C  CFF4 F016          	movff	prodh,??_INTERRUPT_InterruptManager+9
 10369  000030  CFF6 F017          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 10370  000034  CFF7 F018          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 10371  000038  CFF8 F019          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 10372  00003C  CFF5 F01A          	movff	tablat,??_INTERRUPT_InterruptManager+13
 10373                           
 10374                           ;interrupt_manager.c: 76: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
 10375  000040  BA9D               	btfsc	3997,5,c	;volatile
 10376  000042  AA9E               	btfss	3998,5,c	;volatile
 10377  000044  D003               	goto	i2l316
 10378                           
 10379                           ;interrupt_manager.c: 77: {
 10380                           ;interrupt_manager.c: 78: EUSART1_Receive_ISR();
 10381  000046  EC9E  F015         	call	_EUSART1_Receive_ISR	;wreg free
 10382                           
 10383                           ;interrupt_manager.c: 79: }
 10384  00004A  D01E               	goto	i2l328
 10385  00004C                     i2l316:
 10386                           
 10387                           ;interrupt_manager.c: 80: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
 10388  00004C  B89D               	btfsc	3997,4,c	;volatile
 10389  00004E  A89E               	btfss	3998,4,c	;volatile
 10390  000050  D003               	goto	i2l318
 10391                           
 10392                           ;interrupt_manager.c: 81: {
 10393                           ;interrupt_manager.c: 82: EUSART1_Transmit_ISR();
 10394  000052  ECB7  F014         	call	_EUSART1_Transmit_ISR	;wreg free
 10395                           
 10396                           ;interrupt_manager.c: 83: }
 10397  000056  D018               	goto	i2l328
 10398  000058                     i2l318:
 10399                           
 10400                           ;interrupt_manager.c: 84: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 10401  000058  BAF2               	btfsc	intcon,5,c	;volatile
 10402  00005A  A4F2               	btfss	intcon,2,c	;volatile
 10403  00005C  D003               	goto	i2l320
 10404                           
 10405                           ;interrupt_manager.c: 85: {
 10406                           ;interrupt_manager.c: 86: TMR0_ISR();
 10407  00005E  EC9D  F012         	call	_TMR0_ISR	;wreg free
 10408                           
 10409                           ;interrupt_manager.c: 87: }
 10410  000062  D012               	goto	i2l328
 10411  000064                     i2l320:
 10412                           
 10413                           ;interrupt_manager.c: 88: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 10414  000064  BC9D               	btfsc	3997,6,c	;volatile
 10415  000066  AC9E               	btfss	3998,6,c	;volatile
 10416  000068  D003               	goto	i2l322
 10417                           
 10418                           ;interrupt_manager.c: 89: {
 10419                           ;interrupt_manager.c: 90: ADC_ISR();
 10420  00006A  EC22  F016         	call	_ADC_ISR	;wreg free
 10421                           
 10422                           ;interrupt_manager.c: 91: }
 10423  00006E  D00C               	goto	i2l328
 10424  000070                     i2l322:
 10425                           
 10426                           ;interrupt_manager.c: 92: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 10427  000070  B69D               	btfsc	3997,3,c	;volatile
 10428  000072  A69E               	btfss	3998,3,c	;volatile
 10429  000074  D003               	goto	i2l324
 10430                           
 10431                           ;interrupt_manager.c: 93: {
 10432                           ;interrupt_manager.c: 94: I2C1_ISR();
 10433  000076  ECD3  F005         	call	_I2C1_ISR	;wreg free
 10434                           
 10435                           ;interrupt_manager.c: 95: }
 10436  00007A  D006               	goto	i2l328
 10437  00007C                     i2l324:
 10438                           
 10439                           ;interrupt_manager.c: 96: else if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
 10440  00007C  B6A0               	btfsc	4000,3,c	;volatile
 10441  00007E  A6A1               	btfss	4001,3,c	;volatile
 10442  000080  D003               	goto	i2l328
 10443                           
 10444                           ;interrupt_manager.c: 97: {
 10445                           ;interrupt_manager.c: 98: I2C1_BusCollisionISR();
 10446  000082  EC25  F016         	call	_I2C1_BusCollisionISR	;wreg free
 10447                           
 10448                           ;interrupt_manager.c: 100: else
 10449                           ;interrupt_manager.c: 101: {
 10450                           
 10451                           ;interrupt_manager.c: 99: }
 10452  000086  D000               	goto	i2l328
 10453  000088                     i2l328:
 10454  000088  C01A  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 10455  00008C  C019  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 10456  000090  C018  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 10457  000094  C017  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 10458  000098  C016  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 10459  00009C  C015  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 10460  0000A0  C014  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 10461  0000A4  C013  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 10462  0000A8  C012  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 10463  0000AC  C011  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 10464  0000B0  C010  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 10465  0000B4  C00F  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 10466  0000B8  C00E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 10467  0000BC  C00D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 10468  0000C0  0011               	retfie		f
 10469  0000C2                     __end_of_INTERRUPT_InterruptManager:
 10470                           	opt stack 0
 10471                           tosu	equ	0xFFF
 10472                           tosh	equ	0xFFE
 10473                           tosl	equ	0xFFD
 10474                           pclatu	equ	0xFFB
 10475                           pclath	equ	0xFFA
 10476                           tblptru	equ	0xFF8
 10477                           tblptrh	equ	0xFF7
 10478                           tblptrl	equ	0xFF6
 10479                           tablat	equ	0xFF5
 10480                           prodh	equ	0xFF4
 10481                           prodl	equ	0xFF3
 10482                           intcon	equ	0xFF2
 10483                           intcon2	equ	0xFF1
 10484                           postinc0	equ	0xFEE
 10485                           fsr0h	equ	0xFEA
 10486                           fsr0l	equ	0xFE9
 10487                           wreg	equ	0xFE8
 10488                           fsr1h	equ	0xFE2
 10489                           fsr1l	equ	0xFE1
 10490                           indf2	equ	0xFDF
 10491                           postinc2	equ	0xFDE
 10492                           postdec2	equ	0xFDD
 10493                           plusw2	equ	0xFDB
 10494                           fsr2h	equ	0xFDA
 10495                           fsr2l	equ	0xFD9
 10496                           status	equ	0xFD8
 10497                           
 10498 ;; *************** function _TMR0_ISR *****************
 10499 ;; Defined at:
 10500 ;;		line 81 in file "mcc_generated_files/tmr0.c"
 10501 ;; Parameters:    Size  Location     Type
 10502 ;;		None
 10503 ;; Auto vars:     Size  Location     Type
 10504 ;;  x               2    4[COMRAM] int 
 10505 ;; Return value:  Size  Location     Type
 10506 ;;		None               void
 10507 ;; Registers used:
 10508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10509 ;; Tracked objects:
 10510 ;;		On entry : 0/0
 10511 ;;		On exit  : 0/0
 10512 ;;		Unchanged: 0/0
 10513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10514 ;;      Params:         0       0       0       0       0       0       0
 10515 ;;      Locals:         2       0       0       0       0       0       0
 10516 ;;      Temps:          0       0       0       0       0       0       0
 10517 ;;      Totals:         2       0       0       0       0       0       0
 10518 ;;Total ram usage:        2 bytes
 10519 ;; Hardware stack levels used:    1
 10520 ;; Hardware stack levels required when called:    1
 10521 ;; This function calls:
 10522 ;;		_ReadButtonState
 10523 ;;		_TMR0_CallBack
 10524 ;; This function is called by:
 10525 ;;		_INTERRUPT_InterruptManager
 10526 ;; This function uses a non-reentrant model
 10527 ;;
 10528                           
 10529                           	psect	text56
 10530  00253A                     __ptext56:
 10531                           	opt stack 0
 10532  00253A                     _TMR0_ISR:
 10533                           	opt stack 22
 10534                           
 10535                           ;tmr0.c: 82: static volatile uint16_t CountCallBack = 0;
 10536                           ;tmr0.c: 85: TMR0H = timer0ReloadVal16bit >> 8;
 10537                           
 10538                           ;incstack = 0
 10539  00253A  5044               	movf	_timer0ReloadVal16bit+1,w,c	;volatile
 10540  00253C  6ED7               	movwf	4055,c	;volatile
 10541                           
 10542                           ;tmr0.c: 86: TMR0L = (uint8_t) timer0ReloadVal16bit;
 10543  00253E  C043  FFD6         	movff	_timer0ReloadVal16bit,4054	;volatile
 10544                           
 10545                           ;tmr0.c: 88: for (int x = 0; x < 8; x++) {
 10546  002542  0E00               	movlw	0
 10547  002544  6E06               	movwf	TMR0_ISR@x+1,c
 10548  002546  0E00               	movlw	0
 10549  002548  6E05               	movwf	TMR0_ISR@x,c
 10550  00254A                     i2l4014:
 10551  00254A  BE06               	btfsc	TMR0_ISR@x+1,7,c
 10552  00254C  D008               	goto	i2l4018
 10553  00254E  5006               	movf	TMR0_ISR@x+1,w,c
 10554  002550  E110               	bnz	i2l4024
 10555  002552  0E08               	movlw	8
 10556  002554  5C05               	subwf	TMR0_ISR@x,w,c
 10557  002556  B0D8               	btfsc	status,0,c
 10558  002558  D00C               	goto	i2l4024
 10559  00255A  D001               	goto	i2l4018
 10560  00255C  D00A               	goto	i2l4024
 10561  00255E                     i2l4018:
 10562                           
 10563                           ;tmr0.c: 89: ReadButtonState(x);
 10564  00255E  C005  F001         	movff	TMR0_ISR@x,ReadButtonState@btnnum
 10565  002562  C006  F002         	movff	TMR0_ISR@x+1,ReadButtonState@btnnum+1
 10566  002566  EC50  F00C         	call	_ReadButtonState	;wreg free
 10567  00256A  4A05               	infsnz	TMR0_ISR@x,f,c
 10568  00256C  2A06               	incf	TMR0_ISR@x+1,f,c
 10569  00256E  D7ED               	goto	i2l4014
 10570  002570  D000               	goto	i2l4024
 10571  002572                     i2l4024:
 10572                           
 10573                           ;tmr0.c: 90: }
 10574                           ;tmr0.c: 91: time++;
 10575  002572  0100               	movlb	0	; () banked
 10576  002574  4BAF               	infsnz	_time& (0+255),f,b	;volatile
 10577  002576  2BB0               	incf	(_time+1)& (0+255),f,b	;volatile
 10578                           
 10579                           ; BSR set to: 0
 10580                           ;tmr0.c: 93: if (++CountCallBack >= 5) {
 10581  002578  0100               	movlb	0	; () banked
 10582  00257A  4B99               	infsnz	TMR0_ISR@CountCallBack& (0+255),f,b	;volatile
 10583  00257C  2B9A               	incf	(TMR0_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 10584  00257E  0100               	movlb	0	; () banked
 10585  002580  519A               	movf	(TMR0_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 10586  002582  E105               	bnz	i2u413_40
 10587  002584  0E05               	movlw	5
 10588  002586  0100               	movlb	0	; () banked
 10589  002588  5D99               	subwf	TMR0_ISR@CountCallBack& (0+255),w,b	;volatile
 10590  00258A  A0D8               	btfss	status,0,c
 10591  00258C  D008               	goto	i2l4032
 10592  00258E                     i2u413_40:
 10593                           
 10594                           ; BSR set to: 0
 10595                           ;tmr0.c: 95: TMR0_CallBack();
 10596  00258E  EC24  F016         	call	_TMR0_CallBack	;wreg free
 10597                           
 10598                           ;tmr0.c: 98: CountCallBack = 0;
 10599  002592  0E00               	movlw	0
 10600  002594  0100               	movlb	0	; () banked
 10601  002596  6F9A               	movwf	(TMR0_ISR@CountCallBack+1)& (0+255),b	;volatile
 10602  002598  0E00               	movlw	0
 10603  00259A  6F99               	movwf	TMR0_ISR@CountCallBack& (0+255),b	;volatile
 10604  00259C  D000               	goto	i2l4032
 10605  00259E                     i2l4032:
 10606                           
 10607                           ; BSR set to: 0
 10608                           ;tmr0.c: 99: }
 10609                           ;tmr0.c: 101: INTCONbits.TMR0IF = 0;
 10610  00259E  94F2               	bcf	intcon,2,c	;volatile
 10611                           
 10612                           ; BSR set to: 0
 10613  0025A0  0012               	return		;funcret
 10614  0025A2                     __end_of_TMR0_ISR:
 10615                           	opt stack 0
 10616                           tosu	equ	0xFFF
 10617                           tosh	equ	0xFFE
 10618                           tosl	equ	0xFFD
 10619                           pclatu	equ	0xFFB
 10620                           pclath	equ	0xFFA
 10621                           tblptru	equ	0xFF8
 10622                           tblptrh	equ	0xFF7
 10623                           tblptrl	equ	0xFF6
 10624                           tablat	equ	0xFF5
 10625                           prodh	equ	0xFF4
 10626                           prodl	equ	0xFF3
 10627                           intcon	equ	0xFF2
 10628                           intcon2	equ	0xFF1
 10629                           postinc0	equ	0xFEE
 10630                           fsr0h	equ	0xFEA
 10631                           fsr0l	equ	0xFE9
 10632                           wreg	equ	0xFE8
 10633                           fsr1h	equ	0xFE2
 10634                           fsr1l	equ	0xFE1
 10635                           indf2	equ	0xFDF
 10636                           postinc2	equ	0xFDE
 10637                           postdec2	equ	0xFDD
 10638                           plusw2	equ	0xFDB
 10639                           fsr2h	equ	0xFDA
 10640                           fsr2l	equ	0xFD9
 10641                           status	equ	0xFD8
 10642                           
 10643 ;; *************** function _TMR0_CallBack *****************
 10644 ;; Defined at:
 10645 ;;		line 104 in file "mcc_generated_files/tmr0.c"
 10646 ;; Parameters:    Size  Location     Type
 10647 ;;		None
 10648 ;; Auto vars:     Size  Location     Type
 10649 ;;		None
 10650 ;; Return value:  Size  Location     Type
 10651 ;;		None               void
 10652 ;; Registers used:
 10653 ;;		None
 10654 ;; Tracked objects:
 10655 ;;		On entry : 0/0
 10656 ;;		On exit  : 0/0
 10657 ;;		Unchanged: 0/0
 10658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10659 ;;      Params:         0       0       0       0       0       0       0
 10660 ;;      Locals:         0       0       0       0       0       0       0
 10661 ;;      Temps:          0       0       0       0       0       0       0
 10662 ;;      Totals:         0       0       0       0       0       0       0
 10663 ;;Total ram usage:        0 bytes
 10664 ;; Hardware stack levels used:    1
 10665 ;; This function calls:
 10666 ;;		Nothing
 10667 ;; This function is called by:
 10668 ;;		_TMR0_ISR
 10669 ;; This function uses a non-reentrant model
 10670 ;;
 10671                           
 10672                           	psect	text57
 10673  002C48                     __ptext57:
 10674                           	opt stack 0
 10675  002C48                     _TMR0_CallBack:
 10676                           	opt stack 22
 10677                           
 10678                           ; BSR set to: 0
 10679                           ;incstack = 0
 10680  002C48  0012               	return		;funcret
 10681  002C4A                     __end_of_TMR0_CallBack:
 10682                           	opt stack 0
 10683                           tosu	equ	0xFFF
 10684                           tosh	equ	0xFFE
 10685                           tosl	equ	0xFFD
 10686                           pclatu	equ	0xFFB
 10687                           pclath	equ	0xFFA
 10688                           tblptru	equ	0xFF8
 10689                           tblptrh	equ	0xFF7
 10690                           tblptrl	equ	0xFF6
 10691                           tablat	equ	0xFF5
 10692                           prodh	equ	0xFF4
 10693                           prodl	equ	0xFF3
 10694                           intcon	equ	0xFF2
 10695                           intcon2	equ	0xFF1
 10696                           postinc0	equ	0xFEE
 10697                           fsr0h	equ	0xFEA
 10698                           fsr0l	equ	0xFE9
 10699                           wreg	equ	0xFE8
 10700                           fsr1h	equ	0xFE2
 10701                           fsr1l	equ	0xFE1
 10702                           indf2	equ	0xFDF
 10703                           postinc2	equ	0xFDE
 10704                           postdec2	equ	0xFDD
 10705                           plusw2	equ	0xFDB
 10706                           fsr2h	equ	0xFDA
 10707                           fsr2l	equ	0xFD9
 10708                           status	equ	0xFD8
 10709                           
 10710 ;; *************** function _ReadButtonState *****************
 10711 ;; Defined at:
 10712 ;;		line 42 in file "IO.c"
 10713 ;; Parameters:    Size  Location     Type
 10714 ;;  btnnum          2    0[COMRAM] int 
 10715 ;; Auto vars:     Size  Location     Type
 10716 ;;		None
 10717 ;; Return value:  Size  Location     Type
 10718 ;;		None               void
 10719 ;; Registers used:
 10720 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10721 ;; Tracked objects:
 10722 ;;		On entry : 0/0
 10723 ;;		On exit  : 0/0
 10724 ;;		Unchanged: 0/0
 10725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10726 ;;      Params:         2       0       0       0       0       0       0
 10727 ;;      Locals:         0       0       0       0       0       0       0
 10728 ;;      Temps:          2       0       0       0       0       0       0
 10729 ;;      Totals:         4       0       0       0       0       0       0
 10730 ;;Total ram usage:        4 bytes
 10731 ;; Hardware stack levels used:    1
 10732 ;; This function calls:
 10733 ;;		Nothing
 10734 ;; This function is called by:
 10735 ;;		_TMR0_ISR
 10736 ;; This function uses a non-reentrant model
 10737 ;;
 10738                           
 10739                           	psect	text58
 10740  0018A0                     __ptext58:
 10741                           	opt stack 0
 10742  0018A0                     _ReadButtonState:
 10743                           	opt stack 22
 10744                           
 10745                           ;IO.c: 43: switch (btnnum) {
 10746                           
 10747                           ;incstack = 0
 10748  0018A0  D068               	goto	i2l3484
 10749  0018A2                     i2l3466:
 10750                           
 10751                           ;IO.c: 45: butnarray[btnnum] = PORTDbits.RD5;
 10752  0018A2  0E88               	movlw	low _butnarray
 10753  0018A4  2401               	addwf	ReadButtonState@btnnum,w,c
 10754  0018A6  6ED9               	movwf	fsr2l,c
 10755  0018A8  0E00               	movlw	high _butnarray
 10756  0018AA  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 10757  0018AC  6EDA               	movwf	fsr2h,c
 10758  0018AE  AA83               	btfss	3971,5,c	;volatile
 10759  0018B0  D002               	goto	i2u299_40
 10760  0018B2  0E01               	movlw	1
 10761  0018B4  D001               	goto	i2u299_46
 10762  0018B6                     i2u299_40:
 10763  0018B6  0E00               	movlw	0
 10764  0018B8                     i2u299_46:
 10765  0018B8  6EDF               	movwf	indf2,c
 10766                           
 10767                           ;IO.c: 46: break;
 10768  0018BA  0012               	return	
 10769  0018BC                     i2l3468:
 10770                           
 10771                           ;IO.c: 48: butnarray[btnnum] = PORTBbits.RB0;
 10772  0018BC  0E88               	movlw	low _butnarray
 10773  0018BE  2401               	addwf	ReadButtonState@btnnum,w,c
 10774  0018C0  6ED9               	movwf	fsr2l,c
 10775  0018C2  0E00               	movlw	high _butnarray
 10776  0018C4  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 10777  0018C6  6EDA               	movwf	fsr2h,c
 10778  0018C8  A081               	btfss	3969,0,c	;volatile
 10779  0018CA  D002               	goto	i2u300_40
 10780  0018CC  0E01               	movlw	1
 10781  0018CE  D001               	goto	i2u300_46
 10782  0018D0                     i2u300_40:
 10783  0018D0  0E00               	movlw	0
 10784  0018D2                     i2u300_46:
 10785  0018D2  6EDF               	movwf	indf2,c
 10786                           
 10787                           ;IO.c: 49: break;
 10788  0018D4  0012               	return	
 10789  0018D6                     i2l3470:
 10790                           
 10791                           ;IO.c: 51: butnarray[btnnum] = PORTBbits.RB1;
 10792  0018D6  0E88               	movlw	low _butnarray
 10793  0018D8  2401               	addwf	ReadButtonState@btnnum,w,c
 10794  0018DA  6ED9               	movwf	fsr2l,c
 10795  0018DC  0E00               	movlw	high _butnarray
 10796  0018DE  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 10797  0018E0  6EDA               	movwf	fsr2h,c
 10798  0018E2  A281               	btfss	3969,1,c	;volatile
 10799  0018E4  D002               	goto	i2u301_40
 10800  0018E6  0E01               	movlw	1
 10801  0018E8  D001               	goto	i2u301_46
 10802  0018EA                     i2u301_40:
 10803  0018EA  0E00               	movlw	0
 10804  0018EC                     i2u301_46:
 10805  0018EC  6EDF               	movwf	indf2,c
 10806                           
 10807                           ;IO.c: 52: break;
 10808  0018EE  0012               	return	
 10809  0018F0                     i2l3472:
 10810                           
 10811                           ;IO.c: 54: butnarray[btnnum] = PORTBbits.RB2;
 10812  0018F0  0E88               	movlw	low _butnarray
 10813  0018F2  2401               	addwf	ReadButtonState@btnnum,w,c
 10814  0018F4  6ED9               	movwf	fsr2l,c
 10815  0018F6  0E00               	movlw	high _butnarray
 10816  0018F8  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 10817  0018FA  6EDA               	movwf	fsr2h,c
 10818  0018FC  A481               	btfss	3969,2,c	;volatile
 10819  0018FE  D002               	goto	i2u302_40
 10820  001900  0E01               	movlw	1
 10821  001902  D001               	goto	i2u302_46
 10822  001904                     i2u302_40:
 10823  001904  0E00               	movlw	0
 10824  001906                     i2u302_46:
 10825  001906  6EDF               	movwf	indf2,c
 10826                           
 10827                           ;IO.c: 55: break;
 10828  001908  0012               	return	
 10829  00190A                     i2l3474:
 10830                           
 10831                           ;IO.c: 57: butnarray[btnnum] = PORTBbits.RB4;
 10832  00190A  0E88               	movlw	low _butnarray
 10833  00190C  2401               	addwf	ReadButtonState@btnnum,w,c
 10834  00190E  6ED9               	movwf	fsr2l,c
 10835  001910  0E00               	movlw	high _butnarray
 10836  001912  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 10837  001914  6EDA               	movwf	fsr2h,c
 10838  001916  A881               	btfss	3969,4,c	;volatile
 10839  001918  D002               	goto	i2u303_40
 10840  00191A  0E01               	movlw	1
 10841  00191C  D001               	goto	i2u303_46
 10842  00191E                     i2u303_40:
 10843  00191E  0E00               	movlw	0
 10844  001920                     i2u303_46:
 10845  001920  6EDF               	movwf	indf2,c
 10846                           
 10847                           ;IO.c: 58: break;
 10848  001922  0012               	return	
 10849  001924                     i2l3476:
 10850                           
 10851                           ;IO.c: 60: butnarray[btnnum] = PORTAbits.RA0;
 10852  001924  0E88               	movlw	low _butnarray
 10853  001926  2401               	addwf	ReadButtonState@btnnum,w,c
 10854  001928  6ED9               	movwf	fsr2l,c
 10855  00192A  0E00               	movlw	high _butnarray
 10856  00192C  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 10857  00192E  6EDA               	movwf	fsr2h,c
 10858  001930  A080               	btfss	3968,0,c	;volatile
 10859  001932  D002               	goto	i2u304_40
 10860  001934  0E01               	movlw	1
 10861  001936  D001               	goto	i2u304_46
 10862  001938                     i2u304_40:
 10863  001938  0E00               	movlw	0
 10864  00193A                     i2u304_46:
 10865  00193A  6EDF               	movwf	indf2,c
 10866                           
 10867                           ;IO.c: 61: break;
 10868  00193C  0012               	return	
 10869  00193E                     i2l3478:
 10870                           
 10871                           ;IO.c: 63: butnarray[btnnum] = PORTAbits.RA1;
 10872  00193E  0E88               	movlw	low _butnarray
 10873  001940  2401               	addwf	ReadButtonState@btnnum,w,c
 10874  001942  6ED9               	movwf	fsr2l,c
 10875  001944  0E00               	movlw	high _butnarray
 10876  001946  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 10877  001948  6EDA               	movwf	fsr2h,c
 10878  00194A  A280               	btfss	3968,1,c	;volatile
 10879  00194C  D002               	goto	i2u305_40
 10880  00194E  0E01               	movlw	1
 10881  001950  D001               	goto	i2u305_46
 10882  001952                     i2u305_40:
 10883  001952  0E00               	movlw	0
 10884  001954                     i2u305_46:
 10885  001954  6EDF               	movwf	indf2,c
 10886                           
 10887                           ;IO.c: 64: break;
 10888  001956  0012               	return	
 10889  001958                     i2l3480:
 10890                           
 10891                           ;IO.c: 66: butnarray[btnnum] = PORTAbits.RA2;
 10892  001958  0E88               	movlw	low _butnarray
 10893  00195A  2401               	addwf	ReadButtonState@btnnum,w,c
 10894  00195C  6ED9               	movwf	fsr2l,c
 10895  00195E  0E00               	movlw	high _butnarray
 10896  001960  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 10897  001962  6EDA               	movwf	fsr2h,c
 10898  001964  A480               	btfss	3968,2,c	;volatile
 10899  001966  D002               	goto	i2u306_40
 10900  001968  0E01               	movlw	1
 10901  00196A  D001               	goto	i2u306_46
 10902  00196C                     i2u306_40:
 10903  00196C  0E00               	movlw	0
 10904  00196E                     i2u306_46:
 10905  00196E  6EDF               	movwf	indf2,c
 10906                           
 10907                           ;IO.c: 69: }
 10908                           
 10909                           ;IO.c: 67: break;
 10910  001970  0012               	return	
 10911  001972                     i2l3484:
 10912  001972  C001  F003         	movff	ReadButtonState@btnnum,??_ReadButtonState
 10913  001976  C002  F004         	movff	ReadButtonState@btnnum+1,??_ReadButtonState+1
 10914                           
 10915                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10916                           ; Switch size 1, requested type "space"
 10917                           ; Number of cases is 1, Range of values is 0 to 0
 10918                           ; switch strategies available:
 10919                           ; Name         Instructions Cycles
 10920                           ; simple_byte            4     3 (average)
 10921                           ;	Chosen strategy is simple_byte
 10922  00197A  5004               	movf	??_ReadButtonState+1,w,c
 10923  00197C  0A00               	xorlw	0	; case 0
 10924  00197E  A4D8               	btfss	status,2,c
 10925  001980  0012               	return	
 10926                           
 10927                           ; Switch size 1, requested type "space"
 10928                           ; Number of cases is 8, Range of values is 0 to 7
 10929                           ; switch strategies available:
 10930                           ; Name         Instructions Cycles
 10931                           ; simple_byte           25    13 (average)
 10932                           ;	Chosen strategy is simple_byte
 10933  001982  5003               	movf	??_ReadButtonState,w,c
 10934  001984  0A00               	xorlw	0	; case 0
 10935  001986  B4D8               	btfsc	status,2,c
 10936  001988  D78C               	goto	i2l3466
 10937  00198A  0A01               	xorlw	1	; case 1
 10938  00198C  B4D8               	btfsc	status,2,c
 10939  00198E  D796               	goto	i2l3468
 10940  001990  0A03               	xorlw	3	; case 2
 10941  001992  B4D8               	btfsc	status,2,c
 10942  001994  D7A0               	goto	i2l3470
 10943  001996  0A01               	xorlw	1	; case 3
 10944  001998  B4D8               	btfsc	status,2,c
 10945  00199A  D7AA               	goto	i2l3472
 10946  00199C  0A07               	xorlw	7	; case 4
 10947  00199E  B4D8               	btfsc	status,2,c
 10948  0019A0  D7B4               	goto	i2l3474
 10949  0019A2  0A01               	xorlw	1	; case 5
 10950  0019A4  B4D8               	btfsc	status,2,c
 10951  0019A6  D7BE               	goto	i2l3476
 10952  0019A8  0A03               	xorlw	3	; case 6
 10953  0019AA  B4D8               	btfsc	status,2,c
 10954  0019AC  D7C8               	goto	i2l3478
 10955  0019AE  0A01               	xorlw	1	; case 7
 10956  0019B0  A4D8               	btfss	status,2,c
 10957  0019B2  0012               	return	
 10958  0019B4  D7D1               	goto	i2l3480
 10959  0019B6  0012               	return		;funcret
 10960  0019B8                     __end_of_ReadButtonState:
 10961                           	opt stack 0
 10962                           tosu	equ	0xFFF
 10963                           tosh	equ	0xFFE
 10964                           tosl	equ	0xFFD
 10965                           pclatu	equ	0xFFB
 10966                           pclath	equ	0xFFA
 10967                           tblptru	equ	0xFF8
 10968                           tblptrh	equ	0xFF7
 10969                           tblptrl	equ	0xFF6
 10970                           tablat	equ	0xFF5
 10971                           prodh	equ	0xFF4
 10972                           prodl	equ	0xFF3
 10973                           intcon	equ	0xFF2
 10974                           intcon2	equ	0xFF1
 10975                           postinc0	equ	0xFEE
 10976                           fsr0h	equ	0xFEA
 10977                           fsr0l	equ	0xFE9
 10978                           wreg	equ	0xFE8
 10979                           fsr1h	equ	0xFE2
 10980                           fsr1l	equ	0xFE1
 10981                           indf2	equ	0xFDF
 10982                           postinc2	equ	0xFDE
 10983                           postdec2	equ	0xFDD
 10984                           plusw2	equ	0xFDB
 10985                           fsr2h	equ	0xFDA
 10986                           fsr2l	equ	0xFD9
 10987                           status	equ	0xFD8
 10988                           
 10989 ;; *************** function _I2C1_ISR *****************
 10990 ;; Defined at:
 10991 ;;		line 186 in file "mcc_generated_files/i2c1.c"
 10992 ;; Parameters:    Size  Location     Type
 10993 ;;		None
 10994 ;; Auto vars:     Size  Location     Type
 10995 ;;		None
 10996 ;; Return value:  Size  Location     Type
 10997 ;;		None               void
 10998 ;; Registers used:
 10999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11000 ;; Tracked objects:
 11001 ;;		On entry : 0/0
 11002 ;;		On exit  : 0/0
 11003 ;;		Unchanged: 0/0
 11004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11005 ;;      Params:         0       0       0       0       0       0       0
 11006 ;;      Locals:         0       0       0       0       0       0       0
 11007 ;;      Temps:          2       0       0       0       0       0       0
 11008 ;;      Totals:         2       0       0       0       0       0       0
 11009 ;;Total ram usage:        2 bytes
 11010 ;; Hardware stack levels used:    1
 11011 ;; Hardware stack levels required when called:    1
 11012 ;; This function calls:
 11013 ;;		_I2C1_FunctionComplete
 11014 ;;		_I2C1_Stop
 11015 ;; This function is called by:
 11016 ;;		_INTERRUPT_InterruptManager
 11017 ;; This function uses a non-reentrant model
 11018 ;;
 11019                           
 11020                           	psect	text59
 11021  000BA6                     __ptext59:
 11022                           	opt stack 0
 11023  000BA6                     _I2C1_ISR:
 11024                           	opt stack 22
 11025                           
 11026                           ;i2c1.c: 189: static uint8_t *pi2c_buf_ptr;
 11027                           ;i2c1.c: 190: static uint16_t i2c_address = 0;
 11028                           ;i2c1.c: 191: static uint8_t i2c_bytes_left = 0;
 11029                           ;i2c1.c: 192: static uint8_t i2c_10bit_address_restart = 0;
 11030                           ;i2c1.c: 194: PIR1bits.SSP1IF = 0;
 11031                           
 11032                           ;incstack = 0
 11033  000BA6  969E               	bcf	3998,3,c	;volatile
 11034                           
 11035                           ;i2c1.c: 198: if(SSP1CON1bits.WCOL)
 11036  000BA8  AEC6               	btfss	4038,7,c	;volatile
 11037  000BAA  D12B               	goto	i2l5180
 11038                           
 11039                           ;i2c1.c: 199: {
 11040                           ;i2c1.c: 201: SSP1CON1bits.WCOL = 0;
 11041  000BAC  9EC6               	bcf	4038,7,c	;volatile
 11042                           
 11043                           ;i2c1.c: 202: i2c1_state = S_MASTER_IDLE;
 11044  000BAE  0E00               	movlw	0
 11045  000BB0  6E37               	movwf	_i2c1_state,c
 11046                           
 11047                           ;i2c1.c: 203: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
 11048  000BB2  0100               	movlb	0	; () banked
 11049  000BB4  EE20 F003          	lfsr	2,3
 11050  000BB8  51A5               	movf	_p_i2c1_current& (0+255),w,b
 11051  000BBA  26D9               	addwf	fsr2l,f,c
 11052  000BBC  51A6               	movf	(_p_i2c1_current+1)& (0+255),w,b
 11053  000BBE  22DA               	addwfc	fsr2h,f,c
 11054  000BC0  CFDE F004          	movff	postinc2,??_I2C1_ISR
 11055  000BC4  CFDD F005          	movff	postdec2,??_I2C1_ISR+1
 11056  000BC8  C004  FFD9         	movff	??_I2C1_ISR,fsr2l
 11057  000BCC  C005  FFDA         	movff	??_I2C1_ISR+1,fsr2h
 11058  000BD0  0E01               	movlw	1
 11059  000BD2  6EDF               	movwf	indf2,c
 11060                           
 11061                           ; BSR set to: 0
 11062                           ;i2c1.c: 206: p_i2c1_current = (0);
 11063  000BD4  0E00               	movlw	0
 11064  000BD6  0100               	movlb	0	; () banked
 11065  000BD8  6FA5               	movwf	_p_i2c1_current& (0+255),b
 11066  000BDA  0E00               	movlw	0
 11067  000BDC  0100               	movlb	0	; () banked
 11068  000BDE  6FA6               	movwf	(_p_i2c1_current+1)& (0+255),b
 11069                           
 11070                           ; BSR set to: 0
 11071                           ;i2c1.c: 208: return;
 11072  000BE0  0012               	return	
 11073                           
 11074                           ; BSR set to: 0
 11075                           ;i2c1.c: 209: }
 11076                           ;i2c1.c: 212: switch(i2c1_state)
 11077  000BE2  D10F               	goto	i2l5180
 11078  000BE4                     i2l60:
 11079                           
 11080                           ;i2c1.c: 216: if(i2c1_object.trStatus.s.empty != 1)
 11081  000BE4  0100               	movlb	0	; () banked
 11082  000BE6  B394               	btfsc	(_i2c1_object+4)& (0+255),1,b
 11083  000BE8  0012               	return	
 11084                           
 11085                           ; BSR set to: 0
 11086                           ;i2c1.c: 217: {
 11087                           ;i2c1.c: 219: p_i2c1_current = i2c1_object.pTrHead;
 11088  000BEA  C092  F0A5         	movff	_i2c1_object+2,_p_i2c1_current
 11089  000BEE  C093  F0A6         	movff	_i2c1_object+3,_p_i2c1_current+1
 11090                           
 11091                           ; BSR set to: 0
 11092                           ;i2c1.c: 220: i2c1_trb_count = i2c1_object.pTrHead->count;
 11093  000BF2  C092  FFD9         	movff	_i2c1_object+2,fsr2l
 11094  000BF6  C093  FFDA         	movff	_i2c1_object+3,fsr2h
 11095  000BFA  50DF               	movf	indf2,w,c
 11096  000BFC  6E38               	movwf	_i2c1_trb_count,c
 11097                           
 11098                           ; BSR set to: 0
 11099                           ;i2c1.c: 221: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
 11100  000BFE  0100               	movlb	0	; () banked
 11101  000C00  EE20 F001          	lfsr	2,1
 11102  000C04  5192               	movf	(_i2c1_object+2)& (0+255),w,b
 11103  000C06  26D9               	addwf	fsr2l,f,c
 11104  000C08  5193               	movf	(_i2c1_object+3)& (0+255),w,b
 11105  000C0A  22DA               	addwfc	fsr2h,f,c
 11106  000C0C  CFDE F02B          	movff	postinc2,_p_i2c1_trb_current
 11107  000C10  CFDD F02C          	movff	postdec2,_p_i2c1_trb_current+1
 11108                           
 11109                           ; BSR set to: 0
 11110                           ;i2c1.c: 223: i2c1_object.pTrHead++;
 11111  000C14  0E05               	movlw	5
 11112  000C16  0100               	movlb	0	; () banked
 11113  000C18  2792               	addwf	(_i2c1_object+2)& (0+255),f,b
 11114  000C1A  0E00               	movlw	0
 11115  000C1C  2393               	addwfc	(_i2c1_object+3)& (0+255),f,b
 11116                           
 11117                           ; BSR set to: 0
 11118                           ;i2c1.c: 226: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
 11119  000C1E  0ED3               	movlw	low (_i2c1_tr_queue+5)
 11120  000C20  0100               	movlb	0	; () banked
 11121  000C22  1992               	xorwf	(_i2c1_object+2)& (0+255),w,b
 11122  000C24  E10C               	bnz	i2l5072
 11123  000C26  0E00               	movlw	high (_i2c1_tr_queue+5)
 11124  000C28  0100               	movlb	0	; () banked
 11125  000C2A  1993               	xorwf	(_i2c1_object+3)& (0+255),w,b
 11126  000C2C  A4D8               	btfss	status,2,c
 11127  000C2E  D007               	goto	i2l5072
 11128                           
 11129                           ; BSR set to: 0
 11130                           ;i2c1.c: 227: {
 11131                           ;i2c1.c: 229: i2c1_object.pTrHead = i2c1_tr_queue;
 11132  000C30  0ECE               	movlw	low _i2c1_tr_queue
 11133  000C32  0100               	movlb	0	; () banked
 11134  000C34  6F92               	movwf	(_i2c1_object+2)& (0+255),b
 11135  000C36  0E00               	movlw	high _i2c1_tr_queue
 11136  000C38  0100               	movlb	0	; () banked
 11137  000C3A  6F93               	movwf	(_i2c1_object+3)& (0+255),b
 11138  000C3C  D000               	goto	i2l5072
 11139  000C3E                     i2l5072:
 11140                           
 11141                           ; BSR set to: 0
 11142                           ;i2c1.c: 230: }
 11143                           ;i2c1.c: 234: i2c1_object.trStatus.s.full = 0;
 11144  000C3E  0100               	movlb	0	; () banked
 11145  000C40  9194               	bcf	(_i2c1_object+4)& (0+255),0,b
 11146                           
 11147                           ;i2c1.c: 237: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
 11148  000C42  0100               	movlb	0	; () banked
 11149  000C44  5190               	movf	_i2c1_object& (0+255),w,b
 11150  000C46  0100               	movlb	0	; () banked
 11151  000C48  1992               	xorwf	(_i2c1_object+2)& (0+255),w,b
 11152  000C4A  E108               	bnz	i2l63
 11153  000C4C  0100               	movlb	0	; () banked
 11154  000C4E  5191               	movf	(_i2c1_object+1)& (0+255),w,b
 11155  000C50  0100               	movlb	0	; () banked
 11156  000C52  1993               	xorwf	(_i2c1_object+3)& (0+255),w,b
 11157  000C54  A4D8               	btfss	status,2,c
 11158  000C56  D002               	goto	i2l63
 11159                           
 11160                           ; BSR set to: 0
 11161                           ;i2c1.c: 238: {
 11162                           ;i2c1.c: 240: i2c1_object.trStatus.s.empty = 1;
 11163  000C58  0100               	movlb	0	; () banked
 11164  000C5A  8394               	bsf	(_i2c1_object+4)& (0+255),1,b
 11165  000C5C                     i2l63:
 11166                           
 11167                           ; BSR set to: 0
 11168                           ;i2c1.c: 241: }
 11169                           ;i2c1.c: 244: SSP1CON2bits.SEN = 1;
 11170  000C5C  80C5               	bsf	4037,0,c	;volatile
 11171                           
 11172                           ; BSR set to: 0
 11173                           ;i2c1.c: 247: i2c1_state = S_MASTER_SEND_ADDR;
 11174  000C5E  0E02               	movlw	2
 11175  000C60  6E37               	movwf	_i2c1_state,c
 11176                           
 11177                           ; BSR set to: 0
 11178                           ;i2c1.c: 248: }
 11179                           ;i2c1.c: 250: break;
 11180  000C62  0012               	return	
 11181  000C64                     i2l65:
 11182                           
 11183                           ;i2c1.c: 257: SSP1CON2bits.RSEN = 1;
 11184  000C64  82C5               	bsf	4037,1,c	;volatile
 11185                           
 11186                           ;i2c1.c: 260: i2c1_state = S_MASTER_SEND_ADDR;
 11187  000C66  0E02               	movlw	2
 11188  000C68  6E37               	movwf	_i2c1_state,c
 11189                           
 11190                           ;i2c1.c: 262: break;
 11191  000C6A  0012               	return	
 11192  000C6C                     i2l66:
 11193                           
 11194                           ;i2c1.c: 266: if(SSP1CON2bits.ACKSTAT)
 11195  000C6C  ACC5               	btfss	4037,6,c	;volatile
 11196  000C6E  D006               	goto	i2l5084
 11197                           
 11198                           ;i2c1.c: 267: {
 11199                           ;i2c1.c: 268: i2c1_object.i2cErrors++;
 11200  000C70  0100               	movlb	0	; () banked
 11201  000C72  2B96               	incf	(_i2c1_object+6)& (0+255),f,b
 11202                           
 11203                           ; BSR set to: 0
 11204                           ;i2c1.c: 269: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 11205  000C74  0E04               	movlw	4
 11206  000C76  EC21  F014         	call	_I2C1_Stop
 11207                           
 11208                           ;i2c1.c: 270: }
 11209  000C7A  0012               	return	
 11210  000C7C                     i2l5084:
 11211                           
 11212                           ;i2c1.c: 271: else
 11213                           ;i2c1.c: 272: {
 11214                           ;i2c1.c: 274: SSP1BUF = (i2c_address >> 1) & 0x00FF;
 11215  000C7C  90D8               	bcf	status,0,c
 11216  000C7E  3040               	rrcf	I2C1_ISR@i2c_address+1,w,c
 11217  000C80  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
 11218  000C82  303F               	rrcf	I2C1_ISR@i2c_address,w,c
 11219  000C84  6E04               	movwf	??_I2C1_ISR& (0+255),c
 11220  000C86  5004               	movf	??_I2C1_ISR,w,c
 11221  000C88  6EC9               	movwf	4041,c	;volatile
 11222                           
 11223                           ;i2c1.c: 277: if(i2c_address & 0x01)
 11224  000C8A  A03F               	btfss	I2C1_ISR@i2c_address,0,c
 11225  000C8C  D003               	goto	i2l5090
 11226                           
 11227                           ;i2c1.c: 278: {
 11228                           ;i2c1.c: 281: i2c1_state = S_MASTER_10BIT_RESTART;
 11229  000C8E  0E0B               	movlw	11
 11230  000C90  6E37               	movwf	_i2c1_state,c
 11231                           
 11232                           ;i2c1.c: 282: }
 11233  000C92  0012               	return	
 11234  000C94                     i2l5090:
 11235                           
 11236                           ;i2c1.c: 283: else
 11237                           ;i2c1.c: 284: {
 11238                           ;i2c1.c: 286: i2c1_state = S_MASTER_SEND_DATA;
 11239  000C94  0E03               	movlw	3
 11240  000C96  6E37               	movwf	_i2c1_state,c
 11241                           
 11242                           ;i2c1.c: 287: }
 11243                           ;i2c1.c: 288: }
 11244                           ;i2c1.c: 290: break;
 11245  000C98  0012               	return	
 11246  000C9A                     i2l71:
 11247                           
 11248                           ;i2c1.c: 294: if(SSP1CON2bits.ACKSTAT)
 11249  000C9A  ACC5               	btfss	4037,6,c	;volatile
 11250  000C9C  D006               	goto	i2l72
 11251                           
 11252                           ;i2c1.c: 295: {
 11253                           ;i2c1.c: 296: i2c1_object.i2cErrors++;
 11254  000C9E  0100               	movlb	0	; () banked
 11255  000CA0  2B96               	incf	(_i2c1_object+6)& (0+255),f,b
 11256                           
 11257                           ; BSR set to: 0
 11258                           ;i2c1.c: 297: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 11259  000CA2  0E04               	movlw	4
 11260  000CA4  EC21  F014         	call	_I2C1_Stop
 11261                           
 11262                           ;i2c1.c: 298: }
 11263  000CA8  0012               	return	
 11264  000CAA                     i2l72:
 11265                           
 11266                           ;i2c1.c: 299: else
 11267                           ;i2c1.c: 300: {
 11268                           ;i2c1.c: 303: SSP1CON2bits.RSEN = 1;
 11269  000CAA  82C5               	bsf	4037,1,c	;volatile
 11270                           
 11271                           ;i2c1.c: 307: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 11272  000CAC  C03F  F004         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
 11273  000CB0  C040  F005         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
 11274  000CB4  C005  F004         	movff	??_I2C1_ISR+1,??_I2C1_ISR
 11275  000CB8  6A05               	clrf	??_I2C1_ISR+1,c
 11276  000CBA  0E06               	movlw	6
 11277  000CBC  1604               	andwf	??_I2C1_ISR,f,c
 11278  000CBE  0E00               	movlw	0
 11279  000CC0  1605               	andwf	??_I2C1_ISR+1,f,c
 11280  000CC2  0EF0               	movlw	240
 11281  000CC4  1004               	iorwf	??_I2C1_ISR,w,c
 11282  000CC6  6E3F               	movwf	I2C1_ISR@i2c_address,c
 11283  000CC8  5005               	movf	??_I2C1_ISR+1,w,c
 11284  000CCA  6E40               	movwf	I2C1_ISR@i2c_address+1,c
 11285                           
 11286                           ;i2c1.c: 310: i2c_address |= 0x0001;
 11287  000CCC  803F               	bsf	I2C1_ISR@i2c_address,0,c
 11288                           
 11289                           ;i2c1.c: 313: i2c_10bit_address_restart = 1;
 11290  000CCE  0E01               	movlw	1
 11291  000CD0  6E33               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
 11292                           
 11293                           ;i2c1.c: 316: i2c1_state = S_MASTER_SEND_ADDR;
 11294  000CD2  0E02               	movlw	2
 11295  000CD4  6E37               	movwf	_i2c1_state,c
 11296                           
 11297                           ;i2c1.c: 317: }
 11298                           ;i2c1.c: 319: break;
 11299  000CD6  0012               	return	
 11300  000CD8                     i2l5104:
 11301                           
 11302                           ;i2c1.c: 334: if(i2c_10bit_address_restart != 1)
 11303  000CD8  0433               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
 11304  000CDA  B4D8               	btfsc	status,2,c
 11305  000CDC  D030               	goto	i2l76
 11306                           
 11307                           ;i2c1.c: 335: {
 11308                           ;i2c1.c: 337: i2c_address = p_i2c1_trb_current->address;
 11309  000CDE  C02B  FFD9         	movff	_p_i2c1_trb_current,fsr2l
 11310  000CE2  C02C  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
 11311  000CE6  CFDE F03F          	movff	postinc2,I2C1_ISR@i2c_address
 11312  000CEA  CFDD F040          	movff	postdec2,I2C1_ISR@i2c_address+1
 11313                           
 11314                           ;i2c1.c: 338: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
 11315  000CEE  EE20 F003          	lfsr	2,3
 11316  000CF2  502B               	movf	_p_i2c1_trb_current,w,c
 11317  000CF4  26D9               	addwf	fsr2l,f,c
 11318  000CF6  502C               	movf	_p_i2c1_trb_current+1,w,c
 11319  000CF8  22DA               	addwfc	fsr2h,f,c
 11320  000CFA  CFDE F097          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
 11321  000CFE  CFDD F098          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
 11322                           
 11323                           ;i2c1.c: 339: i2c_bytes_left = p_i2c1_trb_current->length;
 11324  000D02  EE20 F002          	lfsr	2,2
 11325  000D06  502B               	movf	_p_i2c1_trb_current,w,c
 11326  000D08  26D9               	addwf	fsr2l,f,c
 11327  000D0A  502C               	movf	_p_i2c1_trb_current+1,w,c
 11328  000D0C  22DA               	addwfc	fsr2h,f,c
 11329  000D0E  50DF               	movf	indf2,w,c
 11330  000D10  6E34               	movwf	I2C1_ISR@i2c_bytes_left,c
 11331                           
 11332                           ;i2c1.c: 340: }
 11333                           ;i2c1.c: 343: if(!1 && (0x0 != i2c_address))
 11334  000D12  D015               	goto	i2l76
 11335  000D14  503F               	movf	I2C1_ISR@i2c_address,w,c
 11336  000D16  1040               	iorwf	I2C1_ISR@i2c_address+1,w,c
 11337  000D18  B4D8               	btfsc	status,2,c
 11338  000D1A  D011               	goto	i2l76
 11339                           
 11340                           ;i2c1.c: 344: {
 11341                           ;i2c1.c: 345: if (0 == i2c_10bit_address_restart)
 11342  000D1C  5033               	movf	I2C1_ISR@i2c_10bit_address_restart,w,c
 11343  000D1E  A4D8               	btfss	status,2,c
 11344  000D20  D007               	goto	i2l77
 11345                           
 11346                           ;i2c1.c: 346: {
 11347                           ;i2c1.c: 350: SSP1BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
 11348  000D22  5040               	movf	I2C1_ISR@i2c_address+1,w,c
 11349  000D24  0B06               	andlw	6
 11350  000D26  09F0               	iorlw	240
 11351  000D28  6EC9               	movwf	4041,c	;volatile
 11352                           
 11353                           ;i2c1.c: 351: i2c1_state = S_MASTER_SEND_ADDR_10BIT_LSB;
 11354  000D2A  0E0A               	movlw	10
 11355  000D2C  6E37               	movwf	_i2c1_state,c
 11356                           
 11357                           ;i2c1.c: 352: }
 11358  000D2E  0012               	return	
 11359  000D30                     i2l77:
 11360                           
 11361                           ;i2c1.c: 353: else
 11362                           ;i2c1.c: 354: {
 11363                           ;i2c1.c: 356: SSP1BUF = i2c_address;
 11364  000D30  C03F  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
 11365                           
 11366                           ;i2c1.c: 357: i2c1_state = S_MASTER_ACK_ADDR;
 11367  000D34  0E05               	movlw	5
 11368  000D36  6E37               	movwf	_i2c1_state,c
 11369                           
 11370                           ;i2c1.c: 359: i2c_10bit_address_restart = 0;
 11371  000D38  0E00               	movlw	0
 11372  000D3A  6E33               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
 11373                           
 11374                           ;i2c1.c: 360: }
 11375                           ;i2c1.c: 361: }
 11376  000D3C  0012               	return	
 11377  000D3E                     i2l76:
 11378                           
 11379                           ;i2c1.c: 362: else
 11380                           ;i2c1.c: 363: {
 11381                           ;i2c1.c: 365: SSP1BUF = i2c_address;
 11382  000D3E  C03F  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
 11383                           
 11384                           ;i2c1.c: 366: if(i2c_address & 0x01)
 11385  000D42  A03F               	btfss	I2C1_ISR@i2c_address,0,c
 11386  000D44  D003               	goto	i2l5124
 11387                           
 11388                           ;i2c1.c: 367: {
 11389                           ;i2c1.c: 369: i2c1_state = S_MASTER_ACK_ADDR;
 11390  000D46  0E05               	movlw	5
 11391  000D48  6E37               	movwf	_i2c1_state,c
 11392                           
 11393                           ;i2c1.c: 370: }
 11394  000D4A  0012               	return	
 11395  000D4C                     i2l5124:
 11396                           
 11397                           ;i2c1.c: 371: else
 11398                           ;i2c1.c: 372: {
 11399                           ;i2c1.c: 374: i2c1_state = S_MASTER_SEND_DATA;
 11400  000D4C  0E03               	movlw	3
 11401  000D4E  6E37               	movwf	_i2c1_state,c
 11402                           
 11403                           ;i2c1.c: 375: }
 11404                           ;i2c1.c: 376: }
 11405                           ;i2c1.c: 377: break;
 11406  000D50  0012               	return	
 11407  000D52                     i2l82:
 11408                           
 11409                           ;i2c1.c: 382: if(SSP1CON2bits.ACKSTAT)
 11410  000D52  ACC5               	btfss	4037,6,c	;volatile
 11411  000D54  D007               	goto	i2l5132
 11412                           
 11413                           ;i2c1.c: 383: {
 11414                           ;i2c1.c: 385: i2c1_object.i2cErrors++;
 11415  000D56  0100               	movlb	0	; () banked
 11416  000D58  2B96               	incf	(_i2c1_object+6)& (0+255),f,b
 11417                           
 11418                           ; BSR set to: 0
 11419                           ;i2c1.c: 388: SSP1CON2bits.ACKSTAT = 0;
 11420  000D5A  9CC5               	bcf	4037,6,c	;volatile
 11421                           
 11422                           ; BSR set to: 0
 11423                           ;i2c1.c: 391: I2C1_Stop(I2C1_DATA_NO_ACK);
 11424  000D5C  0E05               	movlw	5
 11425  000D5E  EC21  F014         	call	_I2C1_Stop
 11426                           
 11427                           ;i2c1.c: 393: }
 11428  000D62  0012               	return	
 11429  000D64                     i2l5132:
 11430                           
 11431                           ;i2c1.c: 394: else
 11432                           ;i2c1.c: 395: {
 11433                           ;i2c1.c: 397: if(i2c_bytes_left-- == 0U)
 11434  000D64  0634               	decf	I2C1_ISR@i2c_bytes_left,f,c
 11435  000D66  2834               	incf	I2C1_ISR@i2c_bytes_left,w,c
 11436  000D68  A4D8               	btfss	status,2,c
 11437  000D6A  D00E               	goto	i2l5142
 11438                           
 11439                           ;i2c1.c: 398: {
 11440                           ;i2c1.c: 402: p_i2c1_trb_current++;
 11441  000D6C  0E05               	movlw	5
 11442  000D6E  262B               	addwf	_p_i2c1_trb_current,f,c
 11443  000D70  0E00               	movlw	0
 11444  000D72  222C               	addwfc	_p_i2c1_trb_current+1,f,c
 11445                           
 11446                           ;i2c1.c: 405: if(--i2c1_trb_count == 0)
 11447  000D74  2E38               	decfsz	_i2c1_trb_count,f,c
 11448  000D76  D004               	goto	i2l86
 11449                           
 11450                           ;i2c1.c: 406: {
 11451                           ;i2c1.c: 407: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 11452  000D78  0E00               	movlw	0
 11453  000D7A  EC21  F014         	call	_I2C1_Stop
 11454                           
 11455                           ;i2c1.c: 408: }
 11456  000D7E  0012               	return	
 11457  000D80                     i2l86:
 11458                           
 11459                           ;i2c1.c: 409: else
 11460                           ;i2c1.c: 410: {
 11461                           ;i2c1.c: 417: SSP1CON2bits.RSEN = 1;
 11462  000D80  82C5               	bsf	4037,1,c	;volatile
 11463                           
 11464                           ;i2c1.c: 420: i2c1_state = S_MASTER_SEND_ADDR;
 11465  000D82  0E02               	movlw	2
 11466  000D84  6E37               	movwf	_i2c1_state,c
 11467                           
 11468                           ;i2c1.c: 422: }
 11469                           ;i2c1.c: 423: }
 11470  000D86  0012               	return	
 11471  000D88                     i2l5142:
 11472                           
 11473                           ;i2c1.c: 424: else
 11474                           ;i2c1.c: 425: {
 11475                           ;i2c1.c: 427: SSP1BUF = *pi2c_buf_ptr++;
 11476  000D88  C097  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 11477  000D8C  C098  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 11478  000D90  50DF               	movf	indf2,w,c
 11479  000D92  6EC9               	movwf	4041,c	;volatile
 11480  000D94  0100               	movlb	0	; () banked
 11481  000D96  4B97               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 11482  000D98  2B98               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 11483                           
 11484                           ; BSR set to: 0
 11485                           ;i2c1.c: 428: }
 11486                           ;i2c1.c: 429: }
 11487                           ;i2c1.c: 430: break;
 11488                           
 11489                           ; BSR set to: 0
 11490  000D9A  0012               	return	
 11491  000D9C                     i2l89:
 11492                           
 11493                           ;i2c1.c: 435: if(SSP1CON2bits.ACKSTAT)
 11494  000D9C  ACC5               	btfss	4037,6,c	;volatile
 11495  000D9E  D007               	goto	i2l90
 11496                           
 11497                           ;i2c1.c: 436: {
 11498                           ;i2c1.c: 439: i2c1_object.i2cErrors++;
 11499  000DA0  0100               	movlb	0	; () banked
 11500  000DA2  2B96               	incf	(_i2c1_object+6)& (0+255),f,b
 11501                           
 11502                           ; BSR set to: 0
 11503                           ;i2c1.c: 442: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 11504  000DA4  0E04               	movlw	4
 11505  000DA6  EC21  F014         	call	_I2C1_Stop
 11506                           
 11507                           ;i2c1.c: 445: SSP1CON2bits.ACKSTAT = 0;
 11508  000DAA  9CC5               	bcf	4037,6,c	;volatile
 11509                           
 11510                           ;i2c1.c: 446: }
 11511  000DAC  0012               	return	
 11512  000DAE                     i2l90:
 11513                           
 11514                           ;i2c1.c: 447: else
 11515                           ;i2c1.c: 448: {
 11516                           ;i2c1.c: 449: SSP1CON2bits.RCEN = 1;
 11517  000DAE  86C5               	bsf	4037,3,c	;volatile
 11518                           
 11519                           ;i2c1.c: 450: i2c1_state = S_MASTER_ACK_RCV_DATA;
 11520  000DB0  0E08               	movlw	8
 11521  000DB2  6E37               	movwf	_i2c1_state,c
 11522                           
 11523                           ;i2c1.c: 451: }
 11524                           ;i2c1.c: 452: break;
 11525  000DB4  0012               	return	
 11526  000DB6                     i2l5154:
 11527                           
 11528                           ;i2c1.c: 459: i2c1_state = S_MASTER_ACK_RCV_DATA;
 11529  000DB6  0E08               	movlw	8
 11530  000DB8  6E37               	movwf	_i2c1_state,c
 11531                           
 11532                           ;i2c1.c: 462: SSP1CON2bits.RCEN = 1;
 11533  000DBA  86C5               	bsf	4037,3,c	;volatile
 11534                           
 11535                           ;i2c1.c: 464: break;
 11536  000DBC  0012               	return	
 11537  000DBE                     i2l5158:
 11538                           
 11539                           ;i2c1.c: 469: *pi2c_buf_ptr++ = SSP1BUF;
 11540  000DBE  C097  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 11541  000DC2  C098  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 11542  000DC6  CFC9 FFDF          	movff	4041,indf2	;volatile
 11543  000DCA  0100               	movlb	0	; () banked
 11544  000DCC  4B97               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 11545  000DCE  2B98               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 11546                           
 11547                           ; BSR set to: 0
 11548                           ;i2c1.c: 472: if(--i2c_bytes_left)
 11549  000DD0  0E01               	movlw	1
 11550  000DD2  5E34               	subwf	I2C1_ISR@i2c_bytes_left,f,c
 11551  000DD4  B4D8               	btfsc	status,2,c
 11552  000DD6  D004               	goto	i2l94
 11553                           
 11554                           ; BSR set to: 0
 11555                           ;i2c1.c: 473: {
 11556                           ;i2c1.c: 479: SSP1CON2bits.ACKDT = 0;
 11557  000DD8  9AC5               	bcf	4037,5,c	;volatile
 11558                           
 11559                           ; BSR set to: 0
 11560                           ;i2c1.c: 482: i2c1_state = S_MASTER_RCV_DATA;
 11561  000DDA  0E06               	movlw	6
 11562  000DDC  6E37               	movwf	_i2c1_state,c
 11563                           
 11564                           ;i2c1.c: 483: }
 11565  000DDE  D004               	goto	i2l5170
 11566  000DE0                     i2l94:
 11567                           
 11568                           ; BSR set to: 0
 11569                           ;i2c1.c: 484: else
 11570                           ;i2c1.c: 485: {
 11571                           ;i2c1.c: 489: SSP1CON2bits.ACKDT = 1;
 11572  000DE0  8AC5               	bsf	4037,5,c	;volatile
 11573                           
 11574                           ; BSR set to: 0
 11575                           ;i2c1.c: 491: I2C1_FunctionComplete();
 11576  000DE2  ECBB  F015         	call	_I2C1_FunctionComplete	;wreg free
 11577  000DE6  D000               	goto	i2l5170
 11578  000DE8                     i2l5170:
 11579                           
 11580                           ;i2c1.c: 492: }
 11581                           ;i2c1.c: 495: SSP1CON2bits.ACKEN = 1;
 11582  000DE8  88C5               	bsf	4037,4,c	;volatile
 11583                           
 11584                           ;i2c1.c: 496: break;
 11585  000DEA  0012               	return	
 11586                           
 11587                           ;i2c1.c: 498: case S_MASTER_RCV_STOP:
 11588  000DEC  D000               	goto	i2l5172
 11589  000DEE                     i2l5172:
 11590                           
 11591                           ;i2c1.c: 499: case S_MASTER_SEND_STOP:
 11592                           ;i2c1.c: 502: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 11593  000DEE  0E00               	movlw	0
 11594  000DF0  EC21  F014         	call	_I2C1_Stop
 11595                           
 11596                           ;i2c1.c: 503: break;
 11597  000DF4  0012               	return	
 11598  000DF6                     i2l5174:
 11599                           
 11600                           ;i2c1.c: 509: i2c1_object.i2cErrors++;
 11601  000DF6  0100               	movlb	0	; () banked
 11602  000DF8  2B96               	incf	(_i2c1_object+6)& (0+255),f,b
 11603                           
 11604                           ; BSR set to: 0
 11605                           ;i2c1.c: 510: I2C1_Stop(I2C1_LOST_STATE);
 11606  000DFA  0E06               	movlw	6
 11607  000DFC  EC21  F014         	call	_I2C1_Stop
 11608                           
 11609                           ;i2c1.c: 513: }
 11610                           
 11611                           ;i2c1.c: 511: break;
 11612  000E00  0012               	return	
 11613  000E02                     i2l5180:
 11614  000E02  5037               	movf	_i2c1_state,w,c
 11615                           
 11616                           ; Switch size 1, requested type "space"
 11617                           ; Number of cases is 11, Range of values is 0 to 11
 11618                           ; switch strategies available:
 11619                           ; Name         Instructions Cycles
 11620                           ; simple_byte           34    18 (average)
 11621                           ;	Chosen strategy is simple_byte
 11622  000E04  0A00               	xorlw	0	; case 0
 11623  000E06  B4D8               	btfsc	status,2,c
 11624  000E08  D6ED               	goto	i2l60
 11625  000E0A  0A01               	xorlw	1	; case 1
 11626  000E0C  B4D8               	btfsc	status,2,c
 11627  000E0E  D72A               	goto	i2l65
 11628  000E10  0A03               	xorlw	3	; case 2
 11629  000E12  B4D8               	btfsc	status,2,c
 11630  000E14  D761               	goto	i2l5104
 11631  000E16  0A01               	xorlw	1	; case 3
 11632  000E18  B4D8               	btfsc	status,2,c
 11633  000E1A  D79B               	goto	i2l82
 11634  000E1C  0A07               	xorlw	7	; case 4
 11635  000E1E  B4D8               	btfsc	status,2,c
 11636  000E20  D7E6               	goto	i2l5172
 11637  000E22  0A01               	xorlw	1	; case 5
 11638  000E24  B4D8               	btfsc	status,2,c
 11639  000E26  D7BA               	goto	i2l89
 11640  000E28  0A03               	xorlw	3	; case 6
 11641  000E2A  B4D8               	btfsc	status,2,c
 11642  000E2C  D7C4               	goto	i2l5154
 11643  000E2E  0A01               	xorlw	1	; case 7
 11644  000E30  B4D8               	btfsc	status,2,c
 11645  000E32  D7DD               	goto	i2l5172
 11646  000E34  0A0F               	xorlw	15	; case 8
 11647  000E36  B4D8               	btfsc	status,2,c
 11648  000E38  D7C2               	goto	i2l5158
 11649  000E3A  0A02               	xorlw	2	; case 10
 11650  000E3C  B4D8               	btfsc	status,2,c
 11651  000E3E  D716               	goto	i2l66
 11652  000E40  0A01               	xorlw	1	; case 11
 11653  000E42  B4D8               	btfsc	status,2,c
 11654  000E44  D72A               	goto	i2l71
 11655  000E46  D7D7               	goto	i2l5174
 11656  000E48  0012               	return		;funcret
 11657  000E4A                     __end_of_I2C1_ISR:
 11658                           	opt stack 0
 11659                           tosu	equ	0xFFF
 11660                           tosh	equ	0xFFE
 11661                           tosl	equ	0xFFD
 11662                           pclatu	equ	0xFFB
 11663                           pclath	equ	0xFFA
 11664                           tblptru	equ	0xFF8
 11665                           tblptrh	equ	0xFF7
 11666                           tblptrl	equ	0xFF6
 11667                           tablat	equ	0xFF5
 11668                           prodh	equ	0xFF4
 11669                           prodl	equ	0xFF3
 11670                           intcon	equ	0xFF2
 11671                           intcon2	equ	0xFF1
 11672                           postinc0	equ	0xFEE
 11673                           fsr0h	equ	0xFEA
 11674                           fsr0l	equ	0xFE9
 11675                           wreg	equ	0xFE8
 11676                           fsr1h	equ	0xFE2
 11677                           fsr1l	equ	0xFE1
 11678                           indf2	equ	0xFDF
 11679                           postinc2	equ	0xFDE
 11680                           postdec2	equ	0xFDD
 11681                           plusw2	equ	0xFDB
 11682                           fsr2h	equ	0xFDA
 11683                           fsr2l	equ	0xFD9
 11684                           status	equ	0xFD8
 11685                           
 11686 ;; *************** function _I2C1_Stop *****************
 11687 ;; Defined at:
 11688 ;;		line 534 in file "mcc_generated_files/i2c1.c"
 11689 ;; Parameters:    Size  Location     Type
 11690 ;;  completion_c    1    wreg     enum E8836
 11691 ;; Auto vars:     Size  Location     Type
 11692 ;;  completion_c    1    2[COMRAM] enum E8836
 11693 ;; Return value:  Size  Location     Type
 11694 ;;		None               void
 11695 ;; Registers used:
 11696 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11697 ;; Tracked objects:
 11698 ;;		On entry : 0/0
 11699 ;;		On exit  : 0/0
 11700 ;;		Unchanged: 0/0
 11701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11702 ;;      Params:         0       0       0       0       0       0       0
 11703 ;;      Locals:         1       0       0       0       0       0       0
 11704 ;;      Temps:          2       0       0       0       0       0       0
 11705 ;;      Totals:         3       0       0       0       0       0       0
 11706 ;;Total ram usage:        3 bytes
 11707 ;; Hardware stack levels used:    1
 11708 ;; This function calls:
 11709 ;;		Nothing
 11710 ;; This function is called by:
 11711 ;;		_I2C1_ISR
 11712 ;; This function uses a non-reentrant model
 11713 ;;
 11714                           
 11715                           	psect	text60
 11716  002842                     __ptext60:
 11717                           	opt stack 0
 11718  002842                     _I2C1_Stop:
 11719                           	opt stack 22
 11720                           
 11721                           ;incstack = 0
 11722                           ;I2C1_Stop@completion_code stored from wreg
 11723  002842  6E03               	movwf	I2C1_Stop@completion_code,c
 11724                           
 11725                           ;i2c1.c: 537: SSP1CON2bits.PEN = 1;
 11726  002844  84C5               	bsf	4037,2,c	;volatile
 11727                           
 11728                           ;i2c1.c: 540: if (p_i2c1_current->pTrFlag != (0))
 11729  002846  0100               	movlb	0	; () banked
 11730  002848  EE20 F003          	lfsr	2,3
 11731  00284C  51A5               	movf	_p_i2c1_current& (0+255),w,b
 11732  00284E  26D9               	addwf	fsr2l,f,c
 11733  002850  51A6               	movf	(_p_i2c1_current+1)& (0+255),w,b
 11734  002852  22DA               	addwfc	fsr2h,f,c
 11735  002854  50DE               	movf	postinc2,w,c
 11736  002856  10DE               	iorwf	postinc2,w,c
 11737  002858  B4D8               	btfsc	status,2,c
 11738  00285A  D012               	goto	i2l4712
 11739                           
 11740                           ; BSR set to: 0
 11741                           ;i2c1.c: 541: {
 11742                           ;i2c1.c: 543: *(p_i2c1_current->pTrFlag) = completion_code;
 11743  00285C  0100               	movlb	0	; () banked
 11744  00285E  EE20 F003          	lfsr	2,3
 11745  002862  51A5               	movf	_p_i2c1_current& (0+255),w,b
 11746  002864  26D9               	addwf	fsr2l,f,c
 11747  002866  51A6               	movf	(_p_i2c1_current+1)& (0+255),w,b
 11748  002868  22DA               	addwfc	fsr2h,f,c
 11749  00286A  CFDE F001          	movff	postinc2,??_I2C1_Stop
 11750  00286E  CFDD F002          	movff	postdec2,??_I2C1_Stop+1
 11751  002872  C001  FFD9         	movff	??_I2C1_Stop,fsr2l
 11752  002876  C002  FFDA         	movff	??_I2C1_Stop+1,fsr2h
 11753  00287A  C003  FFDF         	movff	I2C1_Stop@completion_code,indf2
 11754  00287E  D000               	goto	i2l4712
 11755  002880                     i2l4712:
 11756                           
 11757                           ; BSR set to: 0
 11758                           ;i2c1.c: 544: }
 11759                           ;i2c1.c: 547: i2c1_state = S_MASTER_IDLE;
 11760  002880  0E00               	movlw	0
 11761  002882  6E37               	movwf	_i2c1_state,c
 11762                           
 11763                           ; BSR set to: 0
 11764  002884  0012               	return		;funcret
 11765  002886                     __end_of_I2C1_Stop:
 11766                           	opt stack 0
 11767                           tosu	equ	0xFFF
 11768                           tosh	equ	0xFFE
 11769                           tosl	equ	0xFFD
 11770                           pclatu	equ	0xFFB
 11771                           pclath	equ	0xFFA
 11772                           tblptru	equ	0xFF8
 11773                           tblptrh	equ	0xFF7
 11774                           tblptrl	equ	0xFF6
 11775                           tablat	equ	0xFF5
 11776                           prodh	equ	0xFF4
 11777                           prodl	equ	0xFF3
 11778                           intcon	equ	0xFF2
 11779                           intcon2	equ	0xFF1
 11780                           postinc0	equ	0xFEE
 11781                           fsr0h	equ	0xFEA
 11782                           fsr0l	equ	0xFE9
 11783                           wreg	equ	0xFE8
 11784                           fsr1h	equ	0xFE2
 11785                           fsr1l	equ	0xFE1
 11786                           indf2	equ	0xFDF
 11787                           postinc2	equ	0xFDE
 11788                           postdec2	equ	0xFDD
 11789                           plusw2	equ	0xFDB
 11790                           fsr2h	equ	0xFDA
 11791                           fsr2l	equ	0xFD9
 11792                           status	equ	0xFD8
 11793                           
 11794 ;; *************** function _I2C1_FunctionComplete *****************
 11795 ;; Defined at:
 11796 ;;		line 516 in file "mcc_generated_files/i2c1.c"
 11797 ;; Parameters:    Size  Location     Type
 11798 ;;		None
 11799 ;; Auto vars:     Size  Location     Type
 11800 ;;		None
 11801 ;; Return value:  Size  Location     Type
 11802 ;;		None               void
 11803 ;; Registers used:
 11804 ;;		wreg, status,2, status,0
 11805 ;; Tracked objects:
 11806 ;;		On entry : 0/0
 11807 ;;		On exit  : 0/0
 11808 ;;		Unchanged: 0/0
 11809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11810 ;;      Params:         0       0       0       0       0       0       0
 11811 ;;      Locals:         0       0       0       0       0       0       0
 11812 ;;      Temps:          0       0       0       0       0       0       0
 11813 ;;      Totals:         0       0       0       0       0       0       0
 11814 ;;Total ram usage:        0 bytes
 11815 ;; Hardware stack levels used:    1
 11816 ;; This function calls:
 11817 ;;		Nothing
 11818 ;; This function is called by:
 11819 ;;		_I2C1_ISR
 11820 ;; This function uses a non-reentrant model
 11821 ;;
 11822                           
 11823                           	psect	text61
 11824  002B76                     __ptext61:
 11825                           	opt stack 0
 11826  002B76                     _I2C1_FunctionComplete:
 11827                           	opt stack 22
 11828                           
 11829                           ;i2c1.c: 520: p_i2c1_trb_current++;
 11830                           
 11831                           ; BSR set to: 0
 11832                           ;incstack = 0
 11833  002B76  0E05               	movlw	5
 11834  002B78  262B               	addwf	_p_i2c1_trb_current,f,c
 11835  002B7A  0E00               	movlw	0
 11836  002B7C  222C               	addwfc	_p_i2c1_trb_current+1,f,c
 11837                           
 11838                           ;i2c1.c: 523: if(--i2c1_trb_count == 0)
 11839  002B7E  2E38               	decfsz	_i2c1_trb_count,f,c
 11840  002B80  D003               	goto	i2l4720
 11841                           
 11842                           ;i2c1.c: 524: {
 11843                           ;i2c1.c: 525: i2c1_state = S_MASTER_SEND_STOP;
 11844  002B82  0E04               	movlw	4
 11845  002B84  6E37               	movwf	_i2c1_state,c
 11846                           
 11847                           ;i2c1.c: 526: }
 11848  002B86  0012               	return	
 11849  002B88                     i2l4720:
 11850                           
 11851                           ;i2c1.c: 527: else
 11852                           ;i2c1.c: 528: {
 11853                           ;i2c1.c: 529: i2c1_state = S_MASTER_RESTART;
 11854  002B88  0E01               	movlw	1
 11855  002B8A  6E37               	movwf	_i2c1_state,c
 11856  002B8C  0012               	return	
 11857  002B8E  0012               	return		;funcret
 11858  002B90                     __end_of_I2C1_FunctionComplete:
 11859                           	opt stack 0
 11860                           tosu	equ	0xFFF
 11861                           tosh	equ	0xFFE
 11862                           tosl	equ	0xFFD
 11863                           pclatu	equ	0xFFB
 11864                           pclath	equ	0xFFA
 11865                           tblptru	equ	0xFF8
 11866                           tblptrh	equ	0xFF7
 11867                           tblptrl	equ	0xFF6
 11868                           tablat	equ	0xFF5
 11869                           prodh	equ	0xFF4
 11870                           prodl	equ	0xFF3
 11871                           intcon	equ	0xFF2
 11872                           intcon2	equ	0xFF1
 11873                           postinc0	equ	0xFEE
 11874                           fsr0h	equ	0xFEA
 11875                           fsr0l	equ	0xFE9
 11876                           wreg	equ	0xFE8
 11877                           fsr1h	equ	0xFE2
 11878                           fsr1l	equ	0xFE1
 11879                           indf2	equ	0xFDF
 11880                           postinc2	equ	0xFDE
 11881                           postdec2	equ	0xFDD
 11882                           plusw2	equ	0xFDB
 11883                           fsr2h	equ	0xFDA
 11884                           fsr2l	equ	0xFD9
 11885                           status	equ	0xFD8
 11886                           
 11887 ;; *************** function _I2C1_BusCollisionISR *****************
 11888 ;; Defined at:
 11889 ;;		line 681 in file "mcc_generated_files/i2c1.c"
 11890 ;; Parameters:    Size  Location     Type
 11891 ;;		None
 11892 ;; Auto vars:     Size  Location     Type
 11893 ;;		None
 11894 ;; Return value:  Size  Location     Type
 11895 ;;		None               void
 11896 ;; Registers used:
 11897 ;;		None
 11898 ;; Tracked objects:
 11899 ;;		On entry : 0/0
 11900 ;;		On exit  : 0/0
 11901 ;;		Unchanged: 0/0
 11902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11903 ;;      Params:         0       0       0       0       0       0       0
 11904 ;;      Locals:         0       0       0       0       0       0       0
 11905 ;;      Temps:          0       0       0       0       0       0       0
 11906 ;;      Totals:         0       0       0       0       0       0       0
 11907 ;;Total ram usage:        0 bytes
 11908 ;; Hardware stack levels used:    1
 11909 ;; This function calls:
 11910 ;;		Nothing
 11911 ;; This function is called by:
 11912 ;;		_INTERRUPT_InterruptManager
 11913 ;; This function uses a non-reentrant model
 11914 ;;
 11915                           
 11916                           	psect	text62
 11917  002C4A                     __ptext62:
 11918                           	opt stack 0
 11919  002C4A                     _I2C1_BusCollisionISR:
 11920                           	opt stack 23
 11921                           
 11922                           ;incstack = 0
 11923  002C4A  0012               	return		;funcret
 11924  002C4C                     __end_of_I2C1_BusCollisionISR:
 11925                           	opt stack 0
 11926                           tosu	equ	0xFFF
 11927                           tosh	equ	0xFFE
 11928                           tosl	equ	0xFFD
 11929                           pclatu	equ	0xFFB
 11930                           pclath	equ	0xFFA
 11931                           tblptru	equ	0xFF8
 11932                           tblptrh	equ	0xFF7
 11933                           tblptrl	equ	0xFF6
 11934                           tablat	equ	0xFF5
 11935                           prodh	equ	0xFF4
 11936                           prodl	equ	0xFF3
 11937                           intcon	equ	0xFF2
 11938                           intcon2	equ	0xFF1
 11939                           postinc0	equ	0xFEE
 11940                           fsr0h	equ	0xFEA
 11941                           fsr0l	equ	0xFE9
 11942                           wreg	equ	0xFE8
 11943                           fsr1h	equ	0xFE2
 11944                           fsr1l	equ	0xFE1
 11945                           indf2	equ	0xFDF
 11946                           postinc2	equ	0xFDE
 11947                           postdec2	equ	0xFDD
 11948                           plusw2	equ	0xFDB
 11949                           fsr2h	equ	0xFDA
 11950                           fsr2l	equ	0xFD9
 11951                           status	equ	0xFD8
 11952                           
 11953 ;; *************** function _EUSART1_Transmit_ISR *****************
 11954 ;; Defined at:
 11955 ;;		line 150 in file "UART.c"
 11956 ;; Parameters:    Size  Location     Type
 11957 ;;		None
 11958 ;; Auto vars:     Size  Location     Type
 11959 ;;		None
 11960 ;; Return value:  Size  Location     Type
 11961 ;;		None               void
 11962 ;; Registers used:
 11963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11964 ;; Tracked objects:
 11965 ;;		On entry : 0/0
 11966 ;;		On exit  : 0/0
 11967 ;;		Unchanged: 0/0
 11968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11969 ;;      Params:         0       0       0       0       0       0       0
 11970 ;;      Locals:         0       0       0       0       0       0       0
 11971 ;;      Temps:          0       0       0       0       0       0       0
 11972 ;;      Totals:         0       0       0       0       0       0       0
 11973 ;;Total ram usage:        0 bytes
 11974 ;; Hardware stack levels used:    1
 11975 ;; Hardware stack levels required when called:    2
 11976 ;; This function calls:
 11977 ;;		i2_UART_buff_get
 11978 ;;		i2_UART_buff_size
 11979 ;; This function is called by:
 11980 ;;		_INTERRUPT_InterruptManager
 11981 ;; This function uses a non-reentrant model
 11982 ;;
 11983                           
 11984                           	psect	text63
 11985  00296E                     __ptext63:
 11986                           	opt stack 0
 11987  00296E                     _EUSART1_Transmit_ISR:
 11988                           	opt stack 21
 11989                           
 11990                           ;UART.c: 152: if (UART_buff_size(&output_buffer) > 0) {
 11991                           
 11992                           ;incstack = 0
 11993  00296E  0E00               	movlw	low _output_buffer
 11994  002970  6E01               	movwf	i2UART_buff_size@_this,c
 11995  002972  0E04               	movlw	high _output_buffer
 11996  002974  6E02               	movwf	i2UART_buff_size@_this+1,c
 11997  002976  ECEC  F015         	call	i2_UART_buff_size	;wreg free
 11998  00297A  BE02               	btfsc	?i2_UART_buff_size+1,7,c
 11999  00297C  D00D               	goto	i2l4044
 12000  00297E  5002               	movf	?i2_UART_buff_size+1,w,c
 12001  002980  E103               	bnz	i2u415_40
 12002  002982  0401               	decf	?i2_UART_buff_size,w,c
 12003  002984  A0D8               	btfss	status,0,c
 12004  002986  D008               	goto	i2l4044
 12005  002988                     i2u415_40:
 12006                           
 12007                           ;UART.c: 153: TXREG1 = UART_buff_get(&output_buffer);
 12008  002988  0E00               	movlw	low _output_buffer
 12009  00298A  6E07               	movwf	i2UART_buff_get@_this,c
 12010  00298C  0E04               	movlw	high _output_buffer
 12011  00298E  6E08               	movwf	i2UART_buff_get@_this+1,c
 12012  002990  EC5B  F011         	call	i2_UART_buff_get	;wreg free
 12013  002994  6EAD               	movwf	4013,c	;volatile
 12014                           
 12015                           ;UART.c: 154: } else {
 12016  002996  0012               	return	
 12017  002998                     i2l4044:
 12018                           
 12019                           ;UART.c: 155: Transmit_stall = 1;
 12020  002998  0E01               	movlw	1
 12021  00299A  6E45               	movwf	_Transmit_stall,c
 12022                           
 12023                           ;UART.c: 156: PIE1bits.TX1IE = 0;
 12024  00299C  989D               	bcf	3997,4,c	;volatile
 12025  00299E  0012               	return	
 12026  0029A0  0012               	return		;funcret
 12027  0029A2                     __end_of_EUSART1_Transmit_ISR:
 12028                           	opt stack 0
 12029                           tosu	equ	0xFFF
 12030                           tosh	equ	0xFFE
 12031                           tosl	equ	0xFFD
 12032                           pclatu	equ	0xFFB
 12033                           pclath	equ	0xFFA
 12034                           tblptru	equ	0xFF8
 12035                           tblptrh	equ	0xFF7
 12036                           tblptrl	equ	0xFF6
 12037                           tablat	equ	0xFF5
 12038                           prodh	equ	0xFF4
 12039                           prodl	equ	0xFF3
 12040                           intcon	equ	0xFF2
 12041                           intcon2	equ	0xFF1
 12042                           postinc0	equ	0xFEE
 12043                           fsr0h	equ	0xFEA
 12044                           fsr0l	equ	0xFE9
 12045                           wreg	equ	0xFE8
 12046                           fsr1h	equ	0xFE2
 12047                           fsr1l	equ	0xFE1
 12048                           indf2	equ	0xFDF
 12049                           postinc2	equ	0xFDE
 12050                           postdec2	equ	0xFDD
 12051                           plusw2	equ	0xFDB
 12052                           fsr2h	equ	0xFDA
 12053                           fsr2l	equ	0xFD9
 12054                           status	equ	0xFD8
 12055                           
 12056 ;; *************** function i2_UART_buff_size *****************
 12057 ;; Defined at:
 12058 ;;		line 102 in file "UART.c"
 12059 ;; Parameters:    Size  Location     Type
 12060 ;;  _this           2    0[COMRAM] PTR struct UART_ring_buf
 12061 ;;		 -> output_buffer(206), input_buffer(206), 
 12062 ;; Auto vars:     Size  Location     Type
 12063 ;;		None
 12064 ;; Return value:  Size  Location     Type
 12065 ;;                  2    0[COMRAM] int 
 12066 ;; Registers used:
 12067 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12068 ;; Tracked objects:
 12069 ;;		On entry : 0/0
 12070 ;;		On exit  : 0/0
 12071 ;;		Unchanged: 0/0
 12072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12073 ;;      Params:         2       0       0       0       0       0       0
 12074 ;;      Locals:         0       0       0       0       0       0       0
 12075 ;;      Temps:          0       0       0       0       0       0       0
 12076 ;;      Totals:         2       0       0       0       0       0       0
 12077 ;;Total ram usage:        2 bytes
 12078 ;; Hardware stack levels used:    1
 12079 ;; This function calls:
 12080 ;;		Nothing
 12081 ;; This function is called by:
 12082 ;;		_EUSART1_Transmit_ISR
 12083 ;; This function uses a non-reentrant model
 12084 ;;
 12085                           
 12086                           	psect	text64
 12087  002BD8                     __ptext64:
 12088                           	opt stack 0
 12089  002BD8                     i2_UART_buff_size:
 12090                           	opt stack 22
 12091                           
 12092                           ;UART.c: 103: return (_this->count);
 12093                           
 12094                           ;incstack = 0
 12095  002BD8  EE20 F0CC          	lfsr	2,204
 12096  002BDC  5001               	movf	i2UART_buff_size@_this,w,c
 12097  002BDE  26D9               	addwf	fsr2l,f,c
 12098  002BE0  5002               	movf	i2UART_buff_size@_this+1,w,c
 12099  002BE2  22DA               	addwfc	fsr2h,f,c
 12100  002BE4  CFDE F001          	movff	postinc2,?i2_UART_buff_size
 12101  002BE8  CFDD F002          	movff	postdec2,?i2_UART_buff_size+1
 12102  002BEC  0012               	return	
 12103  002BEE  0012               	return		;funcret
 12104  002BF0                     __end_ofi2_UART_buff_size:
 12105                           	opt stack 0
 12106                           tosu	equ	0xFFF
 12107                           tosh	equ	0xFFE
 12108                           tosl	equ	0xFFD
 12109                           pclatu	equ	0xFFB
 12110                           pclath	equ	0xFFA
 12111                           tblptru	equ	0xFF8
 12112                           tblptrh	equ	0xFF7
 12113                           tblptrl	equ	0xFF6
 12114                           tablat	equ	0xFF5
 12115                           prodh	equ	0xFF4
 12116                           prodl	equ	0xFF3
 12117                           intcon	equ	0xFF2
 12118                           intcon2	equ	0xFF1
 12119                           postinc0	equ	0xFEE
 12120                           fsr0h	equ	0xFEA
 12121                           fsr0l	equ	0xFE9
 12122                           wreg	equ	0xFE8
 12123                           fsr1h	equ	0xFE2
 12124                           fsr1l	equ	0xFE1
 12125                           indf2	equ	0xFDF
 12126                           postinc2	equ	0xFDE
 12127                           postdec2	equ	0xFDD
 12128                           plusw2	equ	0xFDB
 12129                           fsr2h	equ	0xFDA
 12130                           fsr2l	equ	0xFD9
 12131                           status	equ	0xFD8
 12132                           
 12133 ;; *************** function i2_UART_buff_get *****************
 12134 ;; Defined at:
 12135 ;;		line 81 in file "UART.c"
 12136 ;; Parameters:    Size  Location     Type
 12137 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 12138 ;;		 -> output_buffer(206), input_buffer(206), 
 12139 ;; Auto vars:     Size  Location     Type
 12140 ;;  UART_buff_ge    1   10[COMRAM] unsigned char 
 12141 ;; Return value:  Size  Location     Type
 12142 ;;                  1    wreg      unsigned char 
 12143 ;; Registers used:
 12144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12145 ;; Tracked objects:
 12146 ;;		On entry : 0/0
 12147 ;;		On exit  : 0/0
 12148 ;;		Unchanged: 0/0
 12149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12150 ;;      Params:         2       0       0       0       0       0       0
 12151 ;;      Locals:         1       0       0       0       0       0       0
 12152 ;;      Temps:          2       0       0       0       0       0       0
 12153 ;;      Totals:         5       0       0       0       0       0       0
 12154 ;;Total ram usage:        5 bytes
 12155 ;; Hardware stack levels used:    1
 12156 ;; Hardware stack levels required when called:    1
 12157 ;; This function calls:
 12158 ;;		i2_UART_buff_modulo_inc
 12159 ;; This function is called by:
 12160 ;;		_EUSART1_Transmit_ISR
 12161 ;; This function uses a non-reentrant model
 12162 ;;
 12163                           
 12164                           	psect	text65
 12165  0022B6                     __ptext65:
 12166                           	opt stack 0
 12167  0022B6                     i2_UART_buff_get:
 12168                           	opt stack 21
 12169                           
 12170                           ;UART.c: 82: unsigned char c;
 12171                           ;UART.c: 83: if (_this->count > 0) {
 12172                           
 12173                           ;incstack = 0
 12174  0022B6  EE20 F0CC          	lfsr	2,204
 12175  0022BA  5007               	movf	i2UART_buff_get@_this,w,c
 12176  0022BC  26D9               	addwf	fsr2l,f,c
 12177  0022BE  5008               	movf	i2UART_buff_get@_this+1,w,c
 12178  0022C0  22DA               	addwfc	fsr2h,f,c
 12179  0022C2  0E01               	movlw	1
 12180  0022C4  BEDB               	btfsc	plusw2,7,c
 12181  0022C6  D03C               	goto	i2l3868
 12182  0022C8  0E01               	movlw	1
 12183  0022CA  50DB               	movf	plusw2,w,c
 12184  0022CC  E103               	bnz	i2u395_40
 12185  0022CE  04DE               	decf	postinc2,w,c
 12186  0022D0  A0D8               	btfss	status,0,c
 12187  0022D2  D036               	goto	i2l3868
 12188  0022D4                     i2u395_40:
 12189                           
 12190                           ;UART.c: 84: c = _this->buf[_this->tail];
 12191  0022D4  EE20 F0CA          	lfsr	2,202
 12192  0022D8  5007               	movf	i2UART_buff_get@_this,w,c
 12193  0022DA  26D9               	addwf	fsr2l,f,c
 12194  0022DC  5008               	movf	i2UART_buff_get@_this+1,w,c
 12195  0022DE  22DA               	addwfc	fsr2h,f,c
 12196  0022E0  CFDE F009          	movff	postinc2,??i2_UART_buff_get
 12197  0022E4  CFDD F00A          	movff	postdec2,??i2_UART_buff_get+1
 12198  0022E8  5009               	movf	??i2_UART_buff_get,w,c
 12199  0022EA  2407               	addwf	i2UART_buff_get@_this,w,c
 12200  0022EC  6ED9               	movwf	fsr2l,c
 12201  0022EE  500A               	movf	??i2_UART_buff_get+1,w,c
 12202  0022F0  2008               	addwfc	i2UART_buff_get@_this+1,w,c
 12203  0022F2  6EDA               	movwf	fsr2h,c
 12204  0022F4  50DF               	movf	indf2,w,c
 12205  0022F6  6E0B               	movwf	i2UART_buff_get@c,c
 12206                           
 12207                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 12208  0022F8  EE20 F0CA          	lfsr	2,202
 12209  0022FC  5007               	movf	i2UART_buff_get@_this,w,c
 12210  0022FE  26D9               	addwf	fsr2l,f,c
 12211  002300  5008               	movf	i2UART_buff_get@_this+1,w,c
 12212  002302  22DA               	addwfc	fsr2h,f,c
 12213  002304  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 12214  002308  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 12215  00230C  0E00               	movlw	0
 12216  00230E  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 12217  002310  0EC8               	movlw	200
 12218  002312  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 12219  002314  EC2E  F015         	call	i2_UART_buff_modulo_inc	;wreg free
 12220  002318  EE20 F0CA          	lfsr	2,202
 12221  00231C  5007               	movf	i2UART_buff_get@_this,w,c
 12222  00231E  26D9               	addwf	fsr2l,f,c
 12223  002320  5008               	movf	i2UART_buff_get@_this+1,w,c
 12224  002322  22DA               	addwfc	fsr2h,f,c
 12225  002324  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 12226  002328  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 12227                           
 12228                           ;UART.c: 86: --_this->count;
 12229  00232C  EE20 F0CC          	lfsr	2,204
 12230  002330  5007               	movf	i2UART_buff_get@_this,w,c
 12231  002332  26D9               	addwf	fsr2l,f,c
 12232  002334  5008               	movf	i2UART_buff_get@_this+1,w,c
 12233  002336  22DA               	addwfc	fsr2h,f,c
 12234  002338  06DE               	decf	postinc2,f,c
 12235  00233A  0E00               	movlw	0
 12236  00233C  5ADD               	subwfb	postdec2,f,c
 12237                           
 12238                           ;UART.c: 87: } else {
 12239  00233E  D002               	goto	i2l933
 12240  002340                     i2l3868:
 12241                           
 12242                           ;UART.c: 88: c = 0;
 12243  002340  0E00               	movlw	0
 12244  002342  6E0B               	movwf	i2UART_buff_get@c,c
 12245  002344                     i2l933:
 12246                           
 12247                           ;UART.c: 89: }
 12248                           ;UART.c: 90: return (c);
 12249  002344  500B               	movf	i2UART_buff_get@c,w,c
 12250  002346  0012               	return	
 12251  002348  0012               	return		;funcret
 12252  00234A                     __end_ofi2_UART_buff_get:
 12253                           	opt stack 0
 12254                           tosu	equ	0xFFF
 12255                           tosh	equ	0xFFE
 12256                           tosl	equ	0xFFD
 12257                           pclatu	equ	0xFFB
 12258                           pclath	equ	0xFFA
 12259                           tblptru	equ	0xFF8
 12260                           tblptrh	equ	0xFF7
 12261                           tblptrl	equ	0xFF6
 12262                           tablat	equ	0xFF5
 12263                           prodh	equ	0xFF4
 12264                           prodl	equ	0xFF3
 12265                           intcon	equ	0xFF2
 12266                           intcon2	equ	0xFF1
 12267                           postinc0	equ	0xFEE
 12268                           fsr0h	equ	0xFEA
 12269                           fsr0l	equ	0xFE9
 12270                           wreg	equ	0xFE8
 12271                           fsr1h	equ	0xFE2
 12272                           fsr1l	equ	0xFE1
 12273                           indf2	equ	0xFDF
 12274                           postinc2	equ	0xFDE
 12275                           postdec2	equ	0xFDD
 12276                           plusw2	equ	0xFDB
 12277                           fsr2h	equ	0xFDA
 12278                           fsr2l	equ	0xFD9
 12279                           status	equ	0xFD8
 12280                           
 12281 ;; *************** function _EUSART1_Receive_ISR *****************
 12282 ;; Defined at:
 12283 ;;		line 139 in file "UART.c"
 12284 ;; Parameters:    Size  Location     Type
 12285 ;;		None
 12286 ;; Auto vars:     Size  Location     Type
 12287 ;;  data            1   11[COMRAM] unsigned char 
 12288 ;; Return value:  Size  Location     Type
 12289 ;;		None               void
 12290 ;; Registers used:
 12291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12292 ;; Tracked objects:
 12293 ;;		On entry : 0/0
 12294 ;;		On exit  : 0/0
 12295 ;;		Unchanged: 0/0
 12296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12297 ;;      Params:         0       0       0       0       0       0       0
 12298 ;;      Locals:         1       0       0       0       0       0       0
 12299 ;;      Temps:          0       0       0       0       0       0       0
 12300 ;;      Totals:         1       0       0       0       0       0       0
 12301 ;;Total ram usage:        1 bytes
 12302 ;; Hardware stack levels used:    1
 12303 ;; Hardware stack levels required when called:    2
 12304 ;; This function calls:
 12305 ;;		i2_UART_buff_put
 12306 ;; This function is called by:
 12307 ;;		_INTERRUPT_InterruptManager
 12308 ;; This function uses a non-reentrant model
 12309 ;;
 12310                           
 12311                           	psect	text66
 12312  002B3C                     __ptext66:
 12313                           	opt stack 0
 12314  002B3C                     _EUSART1_Receive_ISR:
 12315                           	opt stack 21
 12316                           
 12317                           ;UART.c: 140: if (1 == RC1STAbits.OERR) {
 12318                           
 12319                           ;incstack = 0
 12320  002B3C  A2AB               	btfss	4011,1,c	;volatile
 12321  002B3E  D002               	goto	i2l964
 12322                           
 12323                           ;UART.c: 143: RC1STAbits.CREN = 0;
 12324  002B40  98AB               	bcf	4011,4,c	;volatile
 12325                           
 12326                           ;UART.c: 144: RC1STAbits.CREN = 1;
 12327  002B42  88AB               	bsf	4011,4,c	;volatile
 12328  002B44                     i2l964:
 12329                           
 12330                           ;UART.c: 145: }
 12331                           ;UART.c: 146: unsigned char data = RCREG1;
 12332  002B44  CFAE F00C          	movff	4014,EUSART1_Receive_ISR@data	;volatile
 12333                           
 12334                           ;UART.c: 147: UART_buff_put(&input_buffer, data);
 12335  002B48  0E00               	movlw	low _input_buffer
 12336  002B4A  6E07               	movwf	i2UART_buff_put@_this,c
 12337  002B4C  0E03               	movlw	high _input_buffer
 12338  002B4E  6E08               	movwf	i2UART_buff_put@_this+1,c
 12339  002B50  C00C  F009         	movff	EUSART1_Receive_ISR@data,i2UART_buff_put@c
 12340  002B54  ECC2  F00B         	call	i2_UART_buff_put	;wreg free
 12341  002B58  0012               	return		;funcret
 12342  002B5A                     __end_of_EUSART1_Receive_ISR:
 12343                           	opt stack 0
 12344                           tosu	equ	0xFFF
 12345                           tosh	equ	0xFFE
 12346                           tosl	equ	0xFFD
 12347                           pclatu	equ	0xFFB
 12348                           pclath	equ	0xFFA
 12349                           tblptru	equ	0xFF8
 12350                           tblptrh	equ	0xFF7
 12351                           tblptrl	equ	0xFF6
 12352                           tablat	equ	0xFF5
 12353                           prodh	equ	0xFF4
 12354                           prodl	equ	0xFF3
 12355                           intcon	equ	0xFF2
 12356                           intcon2	equ	0xFF1
 12357                           postinc0	equ	0xFEE
 12358                           fsr0h	equ	0xFEA
 12359                           fsr0l	equ	0xFE9
 12360                           wreg	equ	0xFE8
 12361                           fsr1h	equ	0xFE2
 12362                           fsr1l	equ	0xFE1
 12363                           indf2	equ	0xFDF
 12364                           postinc2	equ	0xFDE
 12365                           postdec2	equ	0xFDD
 12366                           plusw2	equ	0xFDB
 12367                           fsr2h	equ	0xFDA
 12368                           fsr2l	equ	0xFD9
 12369                           status	equ	0xFD8
 12370                           
 12371 ;; *************** function i2_UART_buff_put *****************
 12372 ;; Defined at:
 12373 ;;		line 68 in file "UART.c"
 12374 ;; Parameters:    Size  Location     Type
 12375 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 12376 ;;		 -> output_buffer(206), input_buffer(206), 
 12377 ;;  c               1    8[COMRAM] const unsigned char 
 12378 ;; Auto vars:     Size  Location     Type
 12379 ;;		None
 12380 ;; Return value:  Size  Location     Type
 12381 ;;		None               void
 12382 ;; Registers used:
 12383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12384 ;; Tracked objects:
 12385 ;;		On entry : 0/0
 12386 ;;		On exit  : 0/0
 12387 ;;		Unchanged: 0/0
 12388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12389 ;;      Params:         3       0       0       0       0       0       0
 12390 ;;      Locals:         0       0       0       0       0       0       0
 12391 ;;      Temps:          2       0       0       0       0       0       0
 12392 ;;      Totals:         5       0       0       0       0       0       0
 12393 ;;Total ram usage:        5 bytes
 12394 ;; Hardware stack levels used:    1
 12395 ;; Hardware stack levels required when called:    1
 12396 ;; This function calls:
 12397 ;;		i2_UART_buff_modulo_inc
 12398 ;; This function is called by:
 12399 ;;		_EUSART1_Receive_ISR
 12400 ;; This function uses a non-reentrant model
 12401 ;;
 12402                           
 12403                           	psect	text67
 12404  001784                     __ptext67:
 12405                           	opt stack 0
 12406  001784                     i2_UART_buff_put:
 12407                           	opt stack 21
 12408                           
 12409                           ;UART.c: 69: if (_this->count < 200) {
 12410                           
 12411                           ;incstack = 0
 12412  001784  EE20 F0CC          	lfsr	2,204
 12413  001788  5007               	movf	i2UART_buff_put@_this,w,c
 12414  00178A  26D9               	addwf	fsr2l,f,c
 12415  00178C  5008               	movf	i2UART_buff_put@_this+1,w,c
 12416  00178E  22DA               	addwfc	fsr2h,f,c
 12417  001790  0E01               	movlw	1
 12418  001792  BEDB               	btfsc	plusw2,7,c
 12419  001794  D007               	goto	i2l3848
 12420  001796  0E01               	movlw	1
 12421  001798  50DB               	movf	plusw2,w,c
 12422  00179A  E13A               	bnz	i2l3854
 12423  00179C  0EC8               	movlw	200
 12424  00179E  5CDE               	subwf	postinc2,w,c
 12425  0017A0  B0D8               	btfsc	status,0,c
 12426  0017A2  D036               	goto	i2l3854
 12427  0017A4                     i2l3848:
 12428                           
 12429                           ;UART.c: 70: _this->buf[_this->head] = c;
 12430  0017A4  EE20 F0C8          	lfsr	2,200
 12431  0017A8  5007               	movf	i2UART_buff_put@_this,w,c
 12432  0017AA  26D9               	addwf	fsr2l,f,c
 12433  0017AC  5008               	movf	i2UART_buff_put@_this+1,w,c
 12434  0017AE  22DA               	addwfc	fsr2h,f,c
 12435  0017B0  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 12436  0017B4  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 12437  0017B8  500A               	movf	??i2_UART_buff_put,w,c
 12438  0017BA  2407               	addwf	i2UART_buff_put@_this,w,c
 12439  0017BC  6ED9               	movwf	fsr2l,c
 12440  0017BE  500B               	movf	??i2_UART_buff_put+1,w,c
 12441  0017C0  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 12442  0017C2  6EDA               	movwf	fsr2h,c
 12443  0017C4  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 12444                           
 12445                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
 12446  0017C8  EE20 F0C8          	lfsr	2,200
 12447  0017CC  5007               	movf	i2UART_buff_put@_this,w,c
 12448  0017CE  26D9               	addwf	fsr2l,f,c
 12449  0017D0  5008               	movf	i2UART_buff_put@_this+1,w,c
 12450  0017D2  22DA               	addwfc	fsr2h,f,c
 12451  0017D4  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 12452  0017D8  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 12453  0017DC  0E00               	movlw	0
 12454  0017DE  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 12455  0017E0  0EC8               	movlw	200
 12456  0017E2  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 12457  0017E4  EC2E  F015         	call	i2_UART_buff_modulo_inc	;wreg free
 12458  0017E8  EE20 F0C8          	lfsr	2,200
 12459  0017EC  5007               	movf	i2UART_buff_put@_this,w,c
 12460  0017EE  26D9               	addwf	fsr2l,f,c
 12461  0017F0  5008               	movf	i2UART_buff_put@_this+1,w,c
 12462  0017F2  22DA               	addwfc	fsr2h,f,c
 12463  0017F4  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 12464  0017F8  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 12465                           
 12466                           ;UART.c: 72: ++_this->count;
 12467  0017FC  EE20 F0CC          	lfsr	2,204
 12468  001800  5007               	movf	i2UART_buff_put@_this,w,c
 12469  001802  26D9               	addwf	fsr2l,f,c
 12470  001804  5008               	movf	i2UART_buff_put@_this+1,w,c
 12471  001806  22DA               	addwfc	fsr2h,f,c
 12472  001808  2ADE               	incf	postinc2,f,c
 12473  00180A  0E00               	movlw	0
 12474  00180C  22DD               	addwfc	postdec2,f,c
 12475                           
 12476                           ;UART.c: 73: } else {
 12477  00180E  0012               	return	
 12478  001810                     i2l3854:
 12479                           
 12480                           ;UART.c: 74: _this->buf[_this->head] = c;
 12481  001810  EE20 F0C8          	lfsr	2,200
 12482  001814  5007               	movf	i2UART_buff_put@_this,w,c
 12483  001816  26D9               	addwf	fsr2l,f,c
 12484  001818  5008               	movf	i2UART_buff_put@_this+1,w,c
 12485  00181A  22DA               	addwfc	fsr2h,f,c
 12486  00181C  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 12487  001820  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 12488  001824  500A               	movf	??i2_UART_buff_put,w,c
 12489  001826  2407               	addwf	i2UART_buff_put@_this,w,c
 12490  001828  6ED9               	movwf	fsr2l,c
 12491  00182A  500B               	movf	??i2_UART_buff_put+1,w,c
 12492  00182C  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 12493  00182E  6EDA               	movwf	fsr2h,c
 12494  001830  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 12495                           
 12496                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
 12497  001834  EE20 F0C8          	lfsr	2,200
 12498  001838  5007               	movf	i2UART_buff_put@_this,w,c
 12499  00183A  26D9               	addwf	fsr2l,f,c
 12500  00183C  5008               	movf	i2UART_buff_put@_this+1,w,c
 12501  00183E  22DA               	addwfc	fsr2h,f,c
 12502  001840  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 12503  001844  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 12504  001848  0E00               	movlw	0
 12505  00184A  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 12506  00184C  0EC8               	movlw	200
 12507  00184E  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 12508  001850  EC2E  F015         	call	i2_UART_buff_modulo_inc	;wreg free
 12509  001854  EE20 F0C8          	lfsr	2,200
 12510  001858  5007               	movf	i2UART_buff_put@_this,w,c
 12511  00185A  26D9               	addwf	fsr2l,f,c
 12512  00185C  5008               	movf	i2UART_buff_put@_this+1,w,c
 12513  00185E  22DA               	addwfc	fsr2h,f,c
 12514  001860  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 12515  001864  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 12516                           
 12517                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 12518  001868  EE20 F0CA          	lfsr	2,202
 12519  00186C  5007               	movf	i2UART_buff_put@_this,w,c
 12520  00186E  26D9               	addwf	fsr2l,f,c
 12521  001870  5008               	movf	i2UART_buff_put@_this+1,w,c
 12522  001872  22DA               	addwfc	fsr2h,f,c
 12523  001874  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 12524  001878  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 12525  00187C  0E00               	movlw	0
 12526  00187E  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 12527  001880  0EC8               	movlw	200
 12528  001882  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 12529  001884  EC2E  F015         	call	i2_UART_buff_modulo_inc	;wreg free
 12530  001888  EE20 F0CA          	lfsr	2,202
 12531  00188C  5007               	movf	i2UART_buff_put@_this,w,c
 12532  00188E  26D9               	addwf	fsr2l,f,c
 12533  001890  5008               	movf	i2UART_buff_put@_this+1,w,c
 12534  001892  22DA               	addwfc	fsr2h,f,c
 12535  001894  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 12536  001898  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 12537  00189C  0012               	return	
 12538  00189E  0012               	return		;funcret
 12539  0018A0                     __end_ofi2_UART_buff_put:
 12540                           	opt stack 0
 12541                           tosu	equ	0xFFF
 12542                           tosh	equ	0xFFE
 12543                           tosl	equ	0xFFD
 12544                           pclatu	equ	0xFFB
 12545                           pclath	equ	0xFFA
 12546                           tblptru	equ	0xFF8
 12547                           tblptrh	equ	0xFF7
 12548                           tblptrl	equ	0xFF6
 12549                           tablat	equ	0xFF5
 12550                           prodh	equ	0xFF4
 12551                           prodl	equ	0xFF3
 12552                           intcon	equ	0xFF2
 12553                           intcon2	equ	0xFF1
 12554                           postinc0	equ	0xFEE
 12555                           fsr0h	equ	0xFEA
 12556                           fsr0l	equ	0xFE9
 12557                           wreg	equ	0xFE8
 12558                           fsr1h	equ	0xFE2
 12559                           fsr1l	equ	0xFE1
 12560                           indf2	equ	0xFDF
 12561                           postinc2	equ	0xFDE
 12562                           postdec2	equ	0xFDD
 12563                           plusw2	equ	0xFDB
 12564                           fsr2h	equ	0xFDA
 12565                           fsr2l	equ	0xFD9
 12566                           status	equ	0xFD8
 12567                           
 12568 ;; *************** function i2_UART_buff_modulo_inc *****************
 12569 ;; Defined at:
 12570 ;;		line 106 in file "UART.c"
 12571 ;; Parameters:    Size  Location     Type
 12572 ;;  value           2    0[COMRAM] const unsigned int 
 12573 ;;  modulus         2    2[COMRAM] const unsigned int 
 12574 ;; Auto vars:     Size  Location     Type
 12575 ;;  UART_buff_mo    2    4[COMRAM] unsigned int 
 12576 ;; Return value:  Size  Location     Type
 12577 ;;                  2    0[COMRAM] unsigned int 
 12578 ;; Registers used:
 12579 ;;		wreg, status,2, status,0
 12580 ;; Tracked objects:
 12581 ;;		On entry : 0/0
 12582 ;;		On exit  : 0/0
 12583 ;;		Unchanged: 0/0
 12584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12585 ;;      Params:         4       0       0       0       0       0       0
 12586 ;;      Locals:         2       0       0       0       0       0       0
 12587 ;;      Temps:          0       0       0       0       0       0       0
 12588 ;;      Totals:         6       0       0       0       0       0       0
 12589 ;;Total ram usage:        6 bytes
 12590 ;; Hardware stack levels used:    1
 12591 ;; This function calls:
 12592 ;;		Nothing
 12593 ;; This function is called by:
 12594 ;;		i2_UART_buff_put
 12595 ;;		i2_UART_buff_get
 12596 ;; This function uses a non-reentrant model
 12597 ;;
 12598                           
 12599                           	psect	text68
 12600  002A5C                     __ptext68:
 12601                           	opt stack 0
 12602  002A5C                     i2_UART_buff_modulo_inc:
 12603                           	opt stack 21
 12604                           
 12605                           ;UART.c: 107: unsigned int my_value = value + 1;
 12606                           
 12607                           ;incstack = 0
 12608  002A5C  0E01               	movlw	1
 12609  002A5E  2401               	addwf	i2UART_buff_modulo_inc@value,w,c
 12610  002A60  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 12611  002A62  0E00               	movlw	0
 12612  002A64  2002               	addwfc	i2UART_buff_modulo_inc@value+1,w,c
 12613  002A66  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 12614                           
 12615                           ;UART.c: 108: if (my_value >= modulus) {
 12616  002A68  5003               	movf	i2UART_buff_modulo_inc@modulus,w,c
 12617  002A6A  5C05               	subwf	i2UART_buff_modulo_inc@my_value,w,c
 12618  002A6C  5004               	movf	i2UART_buff_modulo_inc@modulus+1,w,c
 12619  002A6E  5806               	subwfb	i2UART_buff_modulo_inc@my_value+1,w,c
 12620  002A70  A0D8               	btfss	status,0,c
 12621  002A72  D005               	goto	i2l3416
 12622                           
 12623                           ;UART.c: 109: my_value = 0;
 12624  002A74  0E00               	movlw	0
 12625  002A76  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 12626  002A78  0E00               	movlw	0
 12627  002A7A  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 12628  002A7C  D000               	goto	i2l3416
 12629  002A7E                     i2l3416:
 12630                           
 12631                           ;UART.c: 110: }
 12632                           ;UART.c: 111: return (my_value);
 12633  002A7E  C005  F001         	movff	i2UART_buff_modulo_inc@my_value,?i2_UART_buff_modulo_inc
 12634  002A82  C006  F002         	movff	i2UART_buff_modulo_inc@my_value+1,?i2_UART_buff_modulo_inc+1
 12635  002A86  0012               	return	
 12636  002A88  0012               	return		;funcret
 12637  002A8A                     __end_ofi2_UART_buff_modulo_inc:
 12638                           	opt stack 0
 12639                           tosu	equ	0xFFF
 12640                           tosh	equ	0xFFE
 12641                           tosl	equ	0xFFD
 12642                           pclatu	equ	0xFFB
 12643                           pclath	equ	0xFFA
 12644                           tblptru	equ	0xFF8
 12645                           tblptrh	equ	0xFF7
 12646                           tblptrl	equ	0xFF6
 12647                           tablat	equ	0xFF5
 12648                           prodh	equ	0xFF4
 12649                           prodl	equ	0xFF3
 12650                           intcon	equ	0xFF2
 12651                           intcon2	equ	0xFF1
 12652                           postinc0	equ	0xFEE
 12653                           fsr0h	equ	0xFEA
 12654                           fsr0l	equ	0xFE9
 12655                           wreg	equ	0xFE8
 12656                           fsr1h	equ	0xFE2
 12657                           fsr1l	equ	0xFE1
 12658                           indf2	equ	0xFDF
 12659                           postinc2	equ	0xFDE
 12660                           postdec2	equ	0xFDD
 12661                           plusw2	equ	0xFDB
 12662                           fsr2h	equ	0xFDA
 12663                           fsr2l	equ	0xFD9
 12664                           status	equ	0xFD8
 12665                           
 12666 ;; *************** function _ADC_ISR *****************
 12667 ;; Defined at:
 12668 ;;		line 128 in file "mcc_generated_files/adc.c"
 12669 ;; Parameters:    Size  Location     Type
 12670 ;;		None
 12671 ;; Auto vars:     Size  Location     Type
 12672 ;;		None
 12673 ;; Return value:  Size  Location     Type
 12674 ;;		None               void
 12675 ;; Registers used:
 12676 ;;		None
 12677 ;; Tracked objects:
 12678 ;;		On entry : 0/0
 12679 ;;		On exit  : 0/0
 12680 ;;		Unchanged: 0/0
 12681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12682 ;;      Params:         0       0       0       0       0       0       0
 12683 ;;      Locals:         0       0       0       0       0       0       0
 12684 ;;      Temps:          0       0       0       0       0       0       0
 12685 ;;      Totals:         0       0       0       0       0       0       0
 12686 ;;Total ram usage:        0 bytes
 12687 ;; Hardware stack levels used:    1
 12688 ;; This function calls:
 12689 ;;		Nothing
 12690 ;; This function is called by:
 12691 ;;		_INTERRUPT_InterruptManager
 12692 ;; This function uses a non-reentrant model
 12693 ;;
 12694                           
 12695                           	psect	text69
 12696  002C44                     __ptext69:
 12697                           	opt stack 0
 12698  002C44                     _ADC_ISR:
 12699                           	opt stack 23
 12700                           
 12701                           ;adc.c: 131: PIR1bits.ADIF = 0;
 12702                           
 12703                           ;incstack = 0
 12704  002C44  9C9E               	bcf	3998,6,c	;volatile
 12705  002C46  0012               	return		;funcret
 12706  002C48                     __end_of_ADC_ISR:
 12707                           	opt stack 0
 12708  0000                     tosu	equ	0xFFF
 12709                           tosh	equ	0xFFE
 12710                           tosl	equ	0xFFD
 12711                           pclatu	equ	0xFFB
 12712                           pclath	equ	0xFFA
 12713                           tblptru	equ	0xFF8
 12714                           tblptrh	equ	0xFF7
 12715                           tblptrl	equ	0xFF6
 12716                           tablat	equ	0xFF5
 12717                           prodh	equ	0xFF4
 12718                           prodl	equ	0xFF3
 12719                           intcon	equ	0xFF2
 12720                           intcon2	equ	0xFF1
 12721                           postinc0	equ	0xFEE
 12722                           fsr0h	equ	0xFEA
 12723                           fsr0l	equ	0xFE9
 12724                           wreg	equ	0xFE8
 12725                           fsr1h	equ	0xFE2
 12726                           fsr1l	equ	0xFE1
 12727                           indf2	equ	0xFDF
 12728                           postinc2	equ	0xFDE
 12729                           postdec2	equ	0xFDD
 12730                           plusw2	equ	0xFDB
 12731                           fsr2h	equ	0xFDA
 12732                           fsr2l	equ	0xFD9
 12733                           status	equ	0xFD8
 12734                           tosu	equ	0xFFF
 12735                           tosh	equ	0xFFE
 12736                           tosl	equ	0xFFD
 12737                           pclatu	equ	0xFFB
 12738                           pclath	equ	0xFFA
 12739                           tblptru	equ	0xFF8
 12740                           tblptrh	equ	0xFF7
 12741                           tblptrl	equ	0xFF6
 12742                           tablat	equ	0xFF5
 12743                           prodh	equ	0xFF4
 12744                           prodl	equ	0xFF3
 12745                           intcon	equ	0xFF2
 12746                           intcon2	equ	0xFF1
 12747                           postinc0	equ	0xFEE
 12748                           fsr0h	equ	0xFEA
 12749                           fsr0l	equ	0xFE9
 12750                           wreg	equ	0xFE8
 12751                           fsr1h	equ	0xFE2
 12752                           fsr1l	equ	0xFE1
 12753                           indf2	equ	0xFDF
 12754                           postinc2	equ	0xFDE
 12755                           postdec2	equ	0xFDD
 12756                           plusw2	equ	0xFDB
 12757                           fsr2h	equ	0xFDA
 12758                           fsr2l	equ	0xFD9
 12759                           status	equ	0xFD8
 12760                           
 12761                           	psect	text70
 12762  000000                     __ptext70:
 12763                           	opt stack 0
 12764                           tosu	equ	0xFFF
 12765                           tosh	equ	0xFFE
 12766                           tosl	equ	0xFFD
 12767                           pclatu	equ	0xFFB
 12768                           pclath	equ	0xFFA
 12769                           tblptru	equ	0xFF8
 12770                           tblptrh	equ	0xFF7
 12771                           tblptrl	equ	0xFF6
 12772                           tablat	equ	0xFF5
 12773                           prodh	equ	0xFF4
 12774                           prodl	equ	0xFF3
 12775                           intcon	equ	0xFF2
 12776                           intcon2	equ	0xFF1
 12777                           postinc0	equ	0xFEE
 12778                           fsr0h	equ	0xFEA
 12779                           fsr0l	equ	0xFE9
 12780                           wreg	equ	0xFE8
 12781                           fsr1h	equ	0xFE2
 12782                           fsr1l	equ	0xFE1
 12783                           indf2	equ	0xFDF
 12784                           postinc2	equ	0xFDE
 12785                           postdec2	equ	0xFDD
 12786                           plusw2	equ	0xFDB
 12787                           fsr2h	equ	0xFDA
 12788                           fsr2l	equ	0xFD9
 12789                           status	equ	0xFD8
 12790                           
 12791                           	psect	rparam
 12792  0000                     tosu	equ	0xFFF
 12793                           tosh	equ	0xFFE
 12794                           tosl	equ	0xFFD
 12795                           pclatu	equ	0xFFB
 12796                           pclath	equ	0xFFA
 12797                           tblptru	equ	0xFF8
 12798                           tblptrh	equ	0xFF7
 12799                           tblptrl	equ	0xFF6
 12800                           tablat	equ	0xFF5
 12801                           prodh	equ	0xFF4
 12802                           prodl	equ	0xFF3
 12803                           intcon	equ	0xFF2
 12804                           intcon2	equ	0xFF1
 12805                           postinc0	equ	0xFEE
 12806                           fsr0h	equ	0xFEA
 12807                           fsr0l	equ	0xFE9
 12808                           wreg	equ	0xFE8
 12809                           fsr1h	equ	0xFE2
 12810                           fsr1l	equ	0xFE1
 12811                           indf2	equ	0xFDF
 12812                           postinc2	equ	0xFDE
 12813                           postdec2	equ	0xFDD
 12814                           plusw2	equ	0xFDB
 12815                           fsr2h	equ	0xFDA
 12816                           fsr2l	equ	0xFD9
 12817                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         997
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     42      69
    BANK0           160     36     151
    BANK1           256      0     246
    BANK2           256      0     200
    BANK3           256      0     206
    BANK4           256      0     206
    BANK5           256      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> LEDwriteDisplay@writeBuffer(BANK0[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_tr_queue.pTrFlag	PTR enum E8836 size(2) Largest target is 0
		 -> LEDwriteDisplay@status(BANK0[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    memset@p1	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), ring_buffer(BANK1[206]), 

    memset@p	PTR unsigned char  size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), ring_buffer(BANK1[206]), 

    UART_buff_peek@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> input_buffer(BANK3[206]), 

    UART_buff_size@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    UART_buff_get@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    UART_buff_put@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    UART_buff_init@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    crcBufS_get@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK0[17]), 

    crcBufS_status_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK0[17]), 

    crcBufS_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK0[17]), 

    sp__memset	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), ring_buffer(BANK1[206]), 

    FastTransfer_buffer_flush@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK1[206]), 

    FastTransfer_buffer_put@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK1[206]), 

    CRC8@data	PTR const unsigned char  size(2) Largest target is 206
		 -> CRCcheck@arrayHolder(BANK0[3]), receiveData@holder_2257(BANK0[3]), receiveData@holder(BANK0[3]), rx_buffer(BANK2[200]), 
		 -> ring_buffer(BANK1[206]), NULL(NULL[0]), 

    sendStructAddress	PTR unsigned char  size(2) Largest target is 206
		 -> ring_buffer(BANK1[206]), NULL(NULL[0]), 

    begin@stufftoreceive	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_get(), 

    serial_read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_get(), 

    begin@stuffpeek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_peek(), 

    serial_peek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_peek(), 

    begin@stuffavailable	PTR FTN()int  size(2) Largest target is 2
		 -> Receive_available(), 

    serial_available	PTR FTN()int  size(2) Largest target is 2
		 -> Absolute function(), Receive_available(), 

    begin@stufftosend	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Send_put(), 

    serial_write	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), Send_put(), 

    begin@ptr	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK1[40]), 

    receiveArrayAddress	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK1[40]), NULL(NULL[0]), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK0[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK0[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK0[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK0[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E8836 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK0[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E8836 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK0[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    F8948.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK0[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWrite@pflag	PTR enum E8836 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK0[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK0[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    F8943.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK0[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 20
		 -> group(COMRAM[2]), LEDwriteDisplay@writeBuffer(BANK0[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), 
		 -> LEDblinkRate@b(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), LEDBsetBrightness@b(BANK0[2]), I2C1_ISR@i2c_address(COMRAM[2]), 
		 -> NULL(NULL[0]), 

    S21$pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK0[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK0[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E8836 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK0[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    S33$pTrFlag	PTR enum E8836 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK0[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E8836 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK0[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    S33$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), NULL(NULL[0]), 

    S44$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    S44$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 


Critical Paths under _main in COMRAM

    _respondECU->_ToSend
    _sendData->_FastTransfer_buffer_flush
    _sendData->_Send_put
    _FastTransfer_buffer_flush->_memset
    _buttonsCollector->_GetButtonState
    _ToSend->_buttonsCollector
    _FastTransfer_buffer_put->_FastTransfer_buffer_modulo_inc
    _receiveData->_Send_put
    _Send_put->_UART_buff_get
    _Send_put->_UART_buff_put
    _UART_buff_put->_UART_buff_modulo_inc
    _Receive_peek->_UART_buff_peek
    _CRCcheck->_crcBufS_get
    _Receive_get->_UART_buff_get
    _UART_buff_get->_UART_buff_modulo_inc
    _Receive_available->_UART_buff_size
    _handleIndicators->_SetLEDOut
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    _begin->___awdiv
    _EUSART1_Initialize->_UART_buff_init
    _UART_buff_init->_memset
    _LEDwriteDisplay->_I2C1_MasterWrite
    _LEDsetValue->_LEDsetBar
    _LEDsetBar->___awdiv
    _LEDbegin->_I2C1_MasterWrite
    _LEDblinkRate->_I2C1_MasterWrite
    _LEDBsetBrightness->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _TMR0_ISR->_ReadButtonState
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Transmit_ISR->i2_UART_buff_get
    i2_UART_buff_get->i2_UART_buff_modulo_inc
    _EUSART1_Receive_ISR->i2_UART_buff_put
    i2_UART_buff_put->i2_UART_buff_modulo_inc

Critical Paths under _main in BANK0

    _main->_LEDsetValue
    _updateComms->_receiveData
    _respondECU->_sendData
    _receiveData->_CRCcheck
    ___fttol->___ftmul
    _SYSTEM_Initialize->_begin
    _LEDsetValue->___fttol
    _LEDbegin->_LEDBsetBrightness
    _LEDbegin->_LEDblinkRate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   43495
                                             34 BANK0      2     2      0
                           _LEDbegin
                        _LEDsetValue
                    _LEDwriteDisplay
                  _SYSTEM_Initialize
                            ___ftmul
                            ___fttol
                           ___lwtoft
                        _updateComms
 ---------------------------------------------------------------------------------
 (1) _updateComms                                          0     0      0   18897
                        _TBbarGraphs
                   _handleIndicators
                        _receiveData
                         _respondECU
 ---------------------------------------------------------------------------------
 (2) _respondECU                                           0     0      0    7507
                              _Delay
                             _ToSend
                   _buttonsCollector
                           _sendData
 ---------------------------------------------------------------------------------
 (3) _sendData                                             5     5      0    5704
                                             38 COMRAM     1     1      0
                                              0 BANK0      4     4      0
                   Absolute function *
                               _CRC8
          _FastTransfer_buffer_flush
                           _Send_put *
                        _crcBufS_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_put                                          7     2      5     742
                                             26 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_flush                            4     0      4    1139
                                             34 COMRAM     4     0      4
                             _memset
 ---------------------------------------------------------------------------------
 (3) _buttonsCollector                                     9     7      2     223
                                             32 COMRAM     9     7      2
                     _GetButtonState
 ---------------------------------------------------------------------------------
 (4) _GetButtonState                                       6     4      2      86
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _ToSend                                               3     1      2    1406
                                             41 COMRAM     1     1      0
                                              0 BANK0      2     0      2
            _FastTransfer_buffer_put
                   _buttonsCollector (ARG)
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_put                              7     2      5    1190
                                             32 COMRAM     7     2      5
     _FastTransfer_buffer_modulo_inc
 ---------------------------------------------------------------------------------
 (5) _FastTransfer_buffer_modulo_inc                       6     2      4     602
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay                                                5     3      2     174
                                             26 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _receiveData                                         18    18      0   10715
                                              7 BANK0     18    18      0
                   Absolute function *
                               _CRC8
                           _CRCcheck
                  _Receive_available *
                        _Receive_get *
                       _Receive_peek *
                           _Send_put *
 ---------------------------------------------------------------------------------
 (4) _Send_put                                             1     1      0    2614
                                             37 COMRAM     1     1      0
                      _UART_buff_get
                      _UART_buff_put
 ---------------------------------------------------------------------------------
 (5) _UART_buff_put                                        5     2      3    1418
                                             32 COMRAM     5     2      3
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (3) _Receive_peek                                         0     0      0     139
                     _UART_buff_peek
 ---------------------------------------------------------------------------------
 (4) _UART_buff_peek                                       4     2      2     139
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _CRCcheck                                             7     7      0    5114
                                              0 BANK0      7     7      0
                   Absolute function *
                               _CRC8
                  _Receive_available *
                        _Receive_get *
                        _crcBufS_get
                 _crcBufS_status_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_status_put                                  10     6      4     908
                                             26 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (4) _crcBufS_get                                         12     8      4    1404
                                             26 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (3) _Receive_get                                          0     0      0    1165
                      _UART_buff_get
 ---------------------------------------------------------------------------------
 (5) _UART_buff_get                                        5     3      2    1165
                                             32 COMRAM     5     3      2
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (6) _UART_buff_modulo_inc                                 6     2      4     746
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Receive_available                                    2     0      2     150
                                             28 COMRAM     2     0      2
                     _UART_buff_size
 ---------------------------------------------------------------------------------
 (4) _UART_buff_size                                       2     0      2     150
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _CRC8                                                 7     4      3    1014
                                             26 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _handleIndicators                                     7     5      2     503
                                             31 COMRAM     7     5      2
                          _SetLEDOut
 ---------------------------------------------------------------------------------
 (3) _SetLEDOut                                            5     2      3     282
                                             26 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _TBbarGraphs                                          4     0      4     172
                                             26 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2529
                                             34 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     525
                                             12 BANK0     15    11      4
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3254
                                             37 COMRAM     3     3      0
                                              0 BANK0     12     6      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2344
                                             26 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2563
                     _ADC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                              _begin
 ---------------------------------------------------------------------------------
 (2) _begin                                               13     0     13    1548
                                              0 BANK0     13     0     13
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0    1015
                     _UART_buff_init
 ---------------------------------------------------------------------------------
 (3) _UART_buff_init                                       2     0      2    1015
                                             34 COMRAM     2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6     830
                                             26 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDwriteDisplay                                     24    24      0    3911
                                              0 BANK0     24    24      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _LEDsetValue                                          7     3      4    2316
                                             27 BANK0      7     3      4
                          _LEDsetBar
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _LEDsetBar                                           24    20      4    1717
                                             34 COMRAM     8     4      4
                                              0 BANK0     16    16      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     684
                                             26 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LEDbegin                                             7     7      0    9497
                                              8 BANK0      7     7      0
                   _I2C1_MasterWrite
                  _LEDBsetBrightness
                       _LEDblinkRate
 ---------------------------------------------------------------------------------
 (2) _LEDblinkRate                                         8     5      3    3225
                                              0 BANK0      8     5      3
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _LEDBsetBrightness                                    8     5      3    3225
                                              0 BANK0      8     5      3
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _I2C1_MasterWrite                                     7     0      7    2683
                                             35 COMRAM     7     0      7
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterWriteTRBBuild                             9     2      7     494
                                             26 COMRAM     9     2      7
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterTRBInsert                                 6     2      4     494
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0    1570
                                             12 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             2     2      0     330
                                              4 COMRAM     2     2      0
                    _ReadButtonState
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR0_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ReadButtonState                                      4     2      2     262
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _I2C1_ISR                                             2     2      0      31
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (9) _I2C1_Stop                                            3     3      0      31
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0     528
                    i2_UART_buff_get
                   i2_UART_buff_size
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_size                                     2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_get                                      5     3      2     480
                                              6 COMRAM     5     3      2
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  1     1      0     681
                                             11 COMRAM     1     1      0
                    i2_UART_buff_put
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_put                                      5     2      3     658
                                              6 COMRAM     5     2      3
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (10) i2_UART_buff_modulo_inc                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LEDbegin
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
     _LEDBsetBrightness
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
     _LEDblinkRate
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
   _LEDsetValue
     _LEDsetBar
       ___awdiv
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   _LEDwriteDisplay
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _UART_buff_init
         _memset
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _begin
       ___awdiv
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _updateComms
     _TBbarGraphs
     _handleIndicators
       _SetLEDOut
     _receiveData
       Absolute function(Fake) *
       _CRC8 *
       _CRCcheck *
         Absolute function(Fake) *
         _CRC8 *
         _Receive_available *
           _UART_buff_size
         _Receive_get *
           _UART_buff_get
             _UART_buff_modulo_inc
         _crcBufS_get *
         _crcBufS_status_put *
       _Receive_available *
         _UART_buff_size
       _Receive_get *
         _UART_buff_get
           _UART_buff_modulo_inc
       _Receive_peek *
         _UART_buff_peek
       _Send_put *
         _UART_buff_get
           _UART_buff_modulo_inc
         _UART_buff_put
           _UART_buff_modulo_inc
     _respondECU
       _Delay
       _ToSend
         _FastTransfer_buffer_put
           _FastTransfer_buffer_modulo_inc
         _buttonsCollector (ARG)
           _GetButtonState
       _buttonsCollector
         _GetButtonState
       _sendData
         Absolute function(Fake) *
         _CRC8 *
         _FastTransfer_buffer_flush *
           _memset
         _Send_put *
           _UART_buff_get
             _UART_buff_modulo_inc
           _UART_buff_put
             _UART_buff_modulo_inc
         _crcBufS_put *

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
     i2_UART_buff_put
       i2_UART_buff_modulo_inc
   _EUSART1_Transmit_ISR
     i2_UART_buff_get
       i2_UART_buff_modulo_inc
     i2_UART_buff_size
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR
     _ReadButtonState
     _TMR0_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      CE      13       80.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      CE      11       80.5%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      C8       8       78.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      F6       6       96.1%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     24      97       4       94.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2A      45       1       72.6%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     436       9        0.0%
DATA                 0      0     436      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Jun 10 11:33:01 2015

      __end_of_FastTransfer_buffer_flush 266A                   i2_UART_buff_modulo_inc 2A5C  
                           _rx_array_inx 003D                             ___awdiv@sign 0020  
               LEDBsetBrightness@timeOut 00D8                             __CFG_CP0$OFF 000000  
                           __CFG_CP1$OFF 000000                             __CFG_CP2$OFF 000000  
                           __CFG_CP3$OFF 000000                                      l420 2958  
                                    l512 0804                                      l433 1F14  
                                    l438 1F8E                                      l703 24C0  
                                    l570 2372                                      l563 2364  
                                    l555 2356                                      l591 239C  
                                    l584 238E                                      l577 2380  
                                    l933 22B0                                      l774 26FA  
                                    l695 244A                                      l888 0FB6  
                           __CFG_CPB$OFF 000000                             __CFG_CPD$OFF 000000  
                        __end_of_ADC_ISR 2C48     FastTransfer_buffer_flush@clearBuffer 0025  
                                    prod 000FF3                                      tosl 000FFD  
                                    wreg 000FE8                              _TBbarGraphs 2BF0  
          i2UART_buff_modulo_inc@modulus 0003                             __CFG_LVP$OFF 000000  
                       __end_of_I2C1_ISR 0E4A                                     l3400 21FA  
                                   l1298 1DF6                                     l3058 29F4  
                                   l3404 2206                                     l5020 1D7A  
                                   l3260 2944                                     l5030 1DDE  
                                   l5022 1D86                                     l3270 2368  
                                   l5200 1FCC                                     l3408 2216  
                                   l5032 1DEA                                     l5024 1DA6  
                                   l5016 1D6A                                     l3272 2376  
                                   l3280 23A0                                     l3176 0FE0  
                                   l5210 1FF6                                     l3274 2384  
                                   l3266 234C                                     l5220 2014  
                                   l5044 1E10                                     l5028 1DBE  
                                   l3276 2392                                     l3268 235A  
                                   l5206 1FE4                                     l3390 21D4  
                                   l3382 21B4                                     l5038 1DFE  
                                   l3294 2482                                     l5216 2004  
                                   l3392 21DC                                     l3376 21A2  
                                   l5240 1F1E                                     l4530 1EC4  
                                   l5218 200C                                     l5250 1F84  
                                   l5410 1350                                     l3802 2410  
                                   l4524 1E96                                     l3388 21CA  
                                   l5244 1F38                                     l5236 1F04  
                                   l5324 14F0                                     l5316 14B8  
                                   l5420 1382                                     l4460 2A22  
                                   l4534 1ED6                                     l5334 1510  
                                   l5318 14D8                                     l4470 2A4A  
                                   l5350 118A                                     l5422 1394  
                                   l5414 1364                                     l4606 1D12  
                                   l4528 1EB6                                     l4800 2182  
                                   l5248 1F6E                                     l5328 1502  
                                   l5336 1518                                     l5264 1428  
                                   l5256 13F0                                     l5344 1156  
                                   l5424 13A2                                     l4544 26E4  
                                   l4552 2702                                     l4480 16F4  
                                   l4634 27A8                                     l5274 1448  
                                   l5258 1410                                     l4466 2A38  
                                   l4538 26CE                                     l4554 270C  
                                   l4474 1688                                     l4650 15C0  
                                   l4642 1554                                     l4820 20B2  
                                   l4812 207A                                     l5268 143A  
                                   l5276 1450                                     l5372 1216  
                                   l5364 11DA                                     l5428 13C0  
                                   l4900 02F8                                     l4660 163A  
                                   l4652 15CC                                     l4644 156E  
                                   l4830 20D2                                     l4814 209A  
                                   l4806 205C                                     l5198 1FAC  
                                   l4750 07E4                                     l5278 1458  
                                   l5382 125A                                     l5374 121E  
                                   l4494 22AC                                     l4590 1B5A  
                                   l4574 1ACA                                     l4654 15FA  
                                   l4646 158A                                     l4824 20C4  
                                   l4832 20DA                                     l5368 11FA  
                                   l5392 12BC                                     l4680 0F2C  
                                   l4840 00F8                                     l4656 1602  
                                   l4648 15A4                                     l5480 19DC  
                   receiveData@crcHolder 00E6                                     l4762 09C4  
                                   l4746 07AC                                     l5378 123E  
                                   l4578 1AD6                                     l4690 0F82  
                                   l4666 0E4C                                     l4914 0432  
                                   l5490 1AAE                                     l5482 19E0  
                                   l4780 2122                                     l4748 07C2  
                                   l4676 0F12                                     l4668 0E78  
                                   l4940 0558                                     l4932 04F0  
                                   l4916 043A                                     l4908 0394  
                                   l4860 01D0                                     l4844 0126  
                                   l4782 2142                                     l4774 2106  
                                   l4766 0AA0                                     l4758 0906  
                                   l4598 1C8C                                     l4694 0FA4  
                                   l4942 0572                                     l4934 050A  
                                   l4918 0450                                     l4862 01E8  
                                   l5478 19D8                                     l4792 216C  
                                   l4944 058C                                     l4936 0524  
                                   l4880 0266                                     l4864 01F0  
                                   l4848 012C                                     l4872 022C  
                                   l5488 1AAA                                     l4698 0FAE  
                                   l4946 05DA                                     l4938 053E  
                                   l4788 215A                                     l4980 06EA  
                                   l4972 0682                                     l4948 05F6  
                                   l4892 0298                                     l4798 217A  
                                   l4982 0704                                     l4974 069C  
                                   l4958 0604                                     l4878 023C  
                                   l4984 071E                                     l4976 06B6  
                                   l4896 02CC                                     l4986 076C  
                                   l4978 06D0                                     l4988 0788  
                                   l4996 0796                                     _CRC8 26C8  
                                   _LATA 000F89                                     _LATB 000F8A  
                                   _LATC 000F8B                                     _LATD 000F8C  
                                   _LATE 000F8D                                     u2521 0FDE  
                                   u5008 1622                                     u5018 0E50  
                                   u5019 0E64                                     u5214 0934  
                                   u5038 0E7C                                     u5215 092C  
                                   u5039 0E90                                     u5224 0958  
                                   u5160 07FC                                     u5048 0E98  
                                   u5225 0950                                     u5049 0EAC  
                                   u5058 0EB4                                     u2690 24C0  
                                   u5059 0EC8                                     u5244 09F0  
                                   u3820 23EC                                     u5068 0ED0  
                                   u2684 24A2                                     u5245 09E8  
                                   u5069 0EE4                                     u2685 249C  
                                   u5350 2050                                     u5254 0A24  
                                   u5255 0A1C                                     u5184 082A  
                                   u5185 0822                                     u6401 1298  
                                   u5290 20FA                                     u5274 0ACE  
                                   u5194 08A2                                     u3850 244A  
                                   u5275 0AC6                                     u5195 089A  
                                   u5284 0B40                                     u6420 12E2  
                                   u3844 242E                                     u5508 016C  
                                   u5428 00D0                                     u5285 0B38  
                                   u6341 1134                                     u3845 2428  
                                   u5509 0180                                     u5429 00E4  
                                   u6190 1EF8                                     u4750 2240  
                                   u5518 0186                                     u5519 019A  
                                   u5608 026A                                     u5528 01A0  
                                   u5448 0102                                     u4840 1C68  
                                   u6361 1168                                     u6425 12D8  
                                   u5609 0280                                     u5529 01B4  
                                   u5449 0116                                     u6610 19F4  
                                   i2l60 0BE4                                     u5628 029C  
                                   u5548 01D4                                     u5468 0130  
                                   u5661 0338                                     u5629 02B0  
                                   u5469 0144                                     u5718 04DA  
                                   u5638 02D0                                     i2l71 0C9A  
                                   i2l63 0C5C                                     u5639 02E4  
                                   i2l72 0CAA                                     u5728 04F4  
                                   u5488 014E                                     i2l65 0C64  
                                   u5489 0162                                     i2l90 0DAE  
                                   i2l82 0D52                                     i2l66 0C6C  
                                   u5818 066C                                     u5738 050E  
                                   u4938 153E                                     i2l76 0D3E  
                                   u5828 0686                                     u5748 0528  
                                   u5588 0240                                     u4948 1558  
                                   i2l77 0D30                                     u5589 0254  
                                   i2l94 0DE0                                     i2l86 0D80  
                                   u5838 06A0                                     u5758 0542  
                                   u4958 1572                                     u5848 06BA  
                                   u5768 055C                                     u4968 158E  
                                   i2l89 0D9C                                     u5858 06D4  
                                   u5778 0576                                     u4978 15A8  
                                   u6667 294A                                     u5868 06EE  
                                   u5788 0590                                     u4988 15D0  
                                   u5878 0708                                     u5798 05DE  
                                   u5888 0722                                     u5898 0770  
                                   _WPUB 000F61                                     _main 19B8  
                           ___ftpack@arg 001B                             ___ftpack@exp 001E  
                        _TMR0_StartTimer 2C40                                     _time 00AF  
                                   fsr0h 000FEA                                     fsr1h 000FE2  
                                   fsr0l 000FE9                                     fsr2h 000FDA  
                                   fsr1l 000FE1                                     indf2 000FDF  
                                   fsr2l 000FD9                   ??_I2C1_MasterTRBInsert 001F  
                          __CFG_BORV$190 000000                                     pclat 000FFA  
                                   prodh 000FF4                                     prodl 000FF3  
        __end_of_FastTransfer_buffer_put 1122                                     start 00C2  
                          __CFG_IESO$OFF 000000                             ___ftmul@cntr 00DD  
                           ___param_bank 000010                             ___ftmul@sign 00DE  
         I2C1_MasterWriteTRBBuild@length 001F           i2UART_buff_modulo_inc@my_value 0005  
                       _handleIndicators 23DA                             ___fttol@exp1 00ED  
                     __size_of_LEDsetBar 040A                             ___fttol@lval 00E9  
                                  ?_CRC8 001B                  __end_of_TMR0_Initialize 2B1E  
                             _i2c1_state 0037                         __end_of_CRCcheck 0FB8  
         __size_of_OSCILLATOR_Initialize 000E                I2C1_MasterTRBInsert@count 0020  
          __end_of_OSCILLATOR_Initialize 2C40                I2C1_MasterTRBInsert@pflag 001D  
                       LEDbegin@i2c_addr 00E0                       crcBufS_put@address 001D  
                       __end_of_LEDbegin 203A                                    ?_main 0001  
                        __end_of___awdiv 2222                        __end_of_I2C1_Stop 2886  
                        __end_of___ftmul 1282                                    _T0CON 000FD5  
                        ___awdiv@divisor 001D                          __end_of___fttol 13D4  
                                  _LATA3 007C4B                                    _LATB3 007C53  
                                  _LATD1 007C61                                    _LATB5 007C55  
                                  _LATE1 007C69                                    _LATE2 007C6A  
                         __CFG_DEBUG$OFF 000000                                    i2l320 0064  
                                  i2l322 0070                                    i2l324 007C  
                                  i2l316 004C                                    i2l318 0058  
                                  i2l328 0088                                    i2l933 2344  
                                  i2l964 2B44                          ___awdiv@counter 001F  
                                  _TMR0H 000FD7                                    _TMR0L 000FD6  
                                  _TRISA 000F92                                    _TRISB 000F93  
                                  _TRISC 000F94                                    _TRISD 000F95  
                                  _TRISE 000F96                                    _Delay 293A  
           __end_of_I2C1_BusCollisionISR 2C4C                            __CFG_WRT0$OFF 000000  
                          __CFG_WRT1$OFF 000000                            __CFG_WRT2$OFF 000000  
                          __CFG_WRT3$OFF 000000                        ?_buttonsCollector 0021  
                   _EUSART1_Transmit_ISR 296E                           __CFG_EBTR0$OFF 000000  
                         __CFG_FCMEN$OFF 000000                           __CFG_EBTR1$OFF 000000  
                         __CFG_EBTR2$OFF 000000                           __CFG_EBTR3$OFF 000000  
                      ??_I2C1_Initialize 001B                         __end_of_TMR0_ISR 25A2  
                          __CFG_WRTB$OFF 000000                             ?_LEDsetValue 00EE  
                          __CFG_WRTC$OFF 000000                            __CFG_WRTD$OFF 000000  
                                  _begin 266A                           __CFG_EBTRB$OFF 000000  
                                  _brake 009F                       ??_buttonsCollector 0023  
                                  _group 0041                       __CFG_MCLRE$EXTMCLR 000000  
                          ___ftpack@sign 001F                                    pclath 000FFA  
                                  tablat 000FF5                            ??_Receive_get 0026  
                   __size_of_crcBufS_get 00E8                                    plusw2 000FDB  
                         begin@stuffpeek 00DE                     __size_of_crcBufS_put 00DA  
                                  status 000FD8                           __CFG_HFOFST$ON 000000  
                           ?_receiveData 0001                           SetLEDOut@state 001D  
                      ??_ReadButtonState 0003                           __CFG_PBADEN$ON 000000  
        I2C1_MasterWriteTRBBuild@address 0020                             __end_of_CRC8 271A  
                        CRCcheck@SentCRC 00D3                          __initialization 25A2  
                  I2C1_MasterWrite@pdata 0024                    I2C1_MasterWrite@pflag 0029  
             __end_of_EUSART1_Initialize 293A                             __end_of_main 1ABE  
                             ToSend@what 00D3                                   ??_CRC8 001E  
                          ?_LEDblinkRate 00D3                                ??_ADC_ISR 0001  
            ?_INTERRUPT_InterruptManager 0001                              _i2c1_object 0090  
                                 ??_main 002B                            ___fttol@sign1 00E8  
                          __activetblptr 000002                         __end_of_Send_put 29D2  
              __size_ofi2_UART_buff_size 0018                                   ?_Delay 001B  
                  ?_EUSART1_Transmit_ISR 0001            FastTransfer_buffer_put@towhat 0024  
                          ?_Receive_peek 0001                                   ?_begin 00D3  
                __end_of_TMR0_StartTimer 2C44                                   _ADCON0 000FC2  
                                 _ADCON1 000FC1                                   _ADCON2 000FC0  
                                 _ADRESH 000FC4                                   _ADRESL 000FC3  
                       ___awdiv@dividend 001B                                   _ANSELA 000F38  
                                 _ANSELB 000F39                                   _ANSELC 000F3A  
                                 _ANSELD 000F3B                                   _ANSELE 000F3C  
                       __end_of___ftpack 1E20                        __end_of_LEDsetBar 0BA6  
                        i2_UART_buff_get 22B6                                   _RC1STA 000FAB  
                        i2_UART_buff_put 1784                                   i2l4014 254A  
                                 i2l4032 259E                                   i2l4024 2572  
                                 i2l4018 255E                                   i2l4044 2998  
                         __CFG_WDTEN$OFF 000000                                   i2l3416 2A7E  
                                 i2l5104 0CD8                                   i2l5132 0D64  
                                 i2l5124 0D4C                                   Delay@x 001E  
                                 i2l5142 0D88                                   i2l3470 18D6  
                                 i2l5072 0C3E                                   i2l3480 1958  
                                 i2l3472 18F0              UART_buff_modulo_inc@modulus 001D  
                                 i2l5170 0DE8                                   i2l5154 0DB6  
                                 i2l5090 0C94                                   i2l3474 190A  
                                 i2l3466 18A2                                   i2l5172 0DEE  
                                 i2l5084 0C7C                                   i2l5180 0E02  
                                 i2l3476 1924                                   i2l3468 18BC  
                                 i2l3484 1972                                   i2l5174 0DF6  
                                 i2l5158 0DBE                                   i2l3478 193E  
                                 i2l4720 2B88                                   i2l4712 2880  
                                 i2l3854 1810                                   i2l3848 17A4  
                                 i2l3868 2340                           _GetButtonState 2A8A  
                                 _RCREG1 000FAE                         __end_of___lwtoft 2B00  
                                 _OSCCON 000FD3                                   _SPBRG1 000FAF  
                                 _TX1STA 000FAC                                   _TXREG1 000FAD  
                     __size_of_SetLEDOut 0090                        ?_I2C1_MasterWrite 0024  
                         __CFG_XINST$OFF 000000                                   _ToSend 2B5A  
                     ??_I2C1_MasterWrite 002B                      __end_of_Receive_get 2C22  
                       crcBufS_get@_this 001B              ??_FastTransfer_buffer_flush 0027  
                         _p_i2c1_current 00A5                            _output_buffer 0400  
                       crcBufS_get@space 001E                                ??___awdiv 001F  
                              CRC8@tempI 0020                           __CFG_STVREN$ON 000000  
                              ??___ftmul 0026                                ??___fttol 00E3  
                         ??_LEDblinkRate 002B               ??_I2C1_MasterWriteTRBBuild 0022  
                       ?_TMR0_Initialize 0001                                   _memset 2A2E  
                              ?_I2C1_ISR 0001                                   clear_0 25A8  
                                 clear_1 25B4                                   clear_2 25C0  
                                 clear_3 25CC                                   clear_4 25D8  
                                 clear_5 25E4                         ___awdiv@quotient 0021  
                                 _rx_len 003E                         __end_of_sendData 1668  
                  ___ftmul@f3_as_product 00DA                             __pdataCOMRAM 0045  
                          Send_put@_data 0026                           ??_Receive_peek 001F  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                                 tblptru 000FF8         __size_of_FastTransfer_buffer_put 016A  
           __end_of_UART_buff_modulo_inc 2A2E                    __end_of_TMR0_CallBack 2C4A  
                 __end_of_GetButtonState 2AB4            I2C1_MasterWriteTRBBuild@pdata 001D  
                     LEDblinkRate@status 00DA            __size_of_INTERRUPT_Initialize 0010  
                        SetLEDOut@lednum 001B                        _SYSTEM_Initialize 24CA  
                             __accesstop 0060                  __end_of__initialization 25FC  
                              ?_CRCcheck 0001                       ?_SYSTEM_Initialize 0001  
                              ?_LEDbegin 0001                            ___rparam_used 000001  
                ?i2_UART_buff_modulo_inc 0001                           _i2c1_trb_count 0038  
                           ?_updateComms 0001                             TBbarGraphs@b 001D  
                           TBbarGraphs@t 001B                            __end_of_Delay 296E  
                             ___ftmul@f1 00D3                               ___ftmul@f2 00D6  
                  _I2C1_FunctionComplete 2B76                     _I2C1_BusCollisionISR 2C4A  
                             ___fttol@f1 00DF                   LEDwriteDisplay@timeOut 00E8  
                         __pcstackCOMRAM 0001                   I2C1_MasterWrite@length 0026  
                     _crcBufS_status_put 1C80                      ??_SYSTEM_Initialize 0025  
                       crcBufS_put@_this 001B                            __end_of_begin 26C8  
                              ?_TMR0_ISR 0001   __end_of_FastTransfer_buffer_modulo_inc 2A00  
__size_of_FastTransfer_buffer_modulo_inc 002E           _FastTransfer_buffer_modulo_inc 29D2  
                             ??_I2C1_ISR 0004             FastTransfer_buffer_put@_this 0021  
                            ToSend@where 002A                               ___lwtoft@c 0023  
                     UART_buff_get@_this 0021                      ?_crcBufS_status_put 001B  
                  __end_of_UART_buff_get 22B6                   ??_EUSART1_Transmit_ISR 000C  
                  __end_of_UART_buff_put 1784                        __end_of_SetLEDOut 23DA  
                  TMR0_ISR@CountCallBack 0099                                  ??_Delay 001D  
                         LEDbegin@status 00E1                  __end_ofi2_UART_buff_get 234A  
                __end_ofi2_UART_buff_put 18A0                             ?_TBbarGraphs 001B  
            __end_of_EUSART1_Receive_ISR 2B5A                _FastTransfer_buffer_flush 2606  
                                CRC8@crc 0021                                  CRC8@len 001D  
                                CRC8@sum 001E                                  ??_begin 0023  
                       ?_TMR0_StartTimer 0001                          ?_GetButtonState 001B  
              __end_of_SYSTEM_Initialize 253A                 __end_of_handleIndicators 2456  
                 receiveData@holder_2257 00E3                      _addressErrorCounter 009B  
                   __size_of_LEDsetValue 00AE                               __pbssBANK0 0060  
                             __pbssBANK1 0100                               __pbssBANK2 0200  
                             __pbssBANK3 0300                               __pbssBANK4 0400  
                        __CFG_PLLCFG$OFF 000000                              _Receive_get 2C12  
                             ??_CRCcheck 0027                     ??_crcBufS_status_put 001F  
         __end_ofi2_UART_buff_modulo_inc 2A8A                               __pnvCOMRAM 0043  
                      begin@givenAddress 00D6                  __size_of_UART_buff_init 001E  
                __size_of_UART_buff_peek 0026                               ??_LEDbegin 002B  
                __size_of_UART_buff_size 0018                                ?_Send_put 0001  
                  ?_I2C1_BusCollisionISR 0001                     __size_of_receiveData 06D6  
                                ?_ToSend 00D3                       __CFG_CCP2MX$PORTC1 000000  
               __size_of_LEDwriteDisplay 014E                               ??_TMR0_ISR 0005  
                     __CFG_CCP3MX$PORTB5 000000      FastTransfer_buffer_modulo_inc@value 001B  
                        _I2C1_Initialize 28C2                                  _ADC_ISR 2C44  
                                ?_memset 001B                               _crc_buffer 00B3  
                              ?___ftpack 001B                                TMR0_ISR@x 0005  
                __size_of_ADC_Initialize 0018                                ?___lwtoft 0023  
                     UART_buff_put@_this 0021                         i2_UART_buff_size 2BD8  
            i2UART_buff_modulo_inc@value 0001                                  _OSCCON2 000FD2  
                              _I2C1_Stop 2842                        _Receive_available 2B90  
           UART_buff_modulo_inc@my_value 001F                        __CFG_PRICLKEN$OFF 000000  
                                _OSCTUNE 000F9B                                  _SPBRGH1 000FB0  
                                _SSP1ADD 000FC8                      sendData@whereToSend 00D3  
                        _ReadButtonState 18A0                      _receiveArrayAddress 00A7  
                                _SSP1BUF 000FC9                       ?_Receive_available 001D  
                             begin@error 00D7                     __end_of_LEDblinkRate 20E4  
          I2C1_MasterTRBInsert@ptrb_list 001B                      ??_Receive_available 001F  
                              ?_sendData 0001                        _alignErrorCounter 009D  
                        __CFG_PWRTEN$OFF 000000                __size_of_buttonsCollector 0074  
                 ?_I2C1_FunctionComplete 0001                               ??_Send_put 0026  
                                __Hparam 0000            __size_of_I2C1_MasterTRBInsert 00C2  
                                __Lparam 0000                          __size_of_ToSend 001C  
                     _p_i2c1_trb_current 002B                     __end_of_Receive_peek 2C12  
                              _AKNAKsend 0035                                  ___awdiv 218C  
                   _UART_buff_modulo_inc 2A00                                  ___ftmul 1122  
                                ___fttol 1282                                  _calc_CS 0036  
                                __pcinit 25A2                               ??___ftpack 0020  
                        __size_of_memset 002E                                  __ramtop 0600  
                       i2UART_buff_get@c 000B                                  __ptext0 19B8  
                                __ptext1 2886                                  __ptext2 27B8  
                                __ptext3 1522                                  __ptext4 1BA6  
                                __ptext5 2606                                  __ptext6 2456  
                                __ptext7 2A8A                                  __ptext8 2B5A  
                                __ptext9 0FB8                               ??___lwtoft 0026  
                              _T0CONbits 000FD5                         i2UART_buff_put@c 0009  
                  _OSCILLATOR_Initialize 2C32                __end_of_Receive_available 2BA8  
                _FastTransfer_buffer_put 0FB8                    CRCcheck@calculatedCRC 00D4  
                     _EUSART1_Initialize 28FE                         ?i2_UART_buff_get 0007  
               ??_PIN_MANAGER_Initialize 001B                         ?i2_UART_buff_put 0007  
                             ?_I2C1_Stop 0001             crcBufS_status_put@wantedTime 0023  
                          ??_crcBufS_get 001F                            ??_crcBufS_put 0020  
             __size_of_SYSTEM_Initialize 0070                     I2C1_ISR@pi2c_buf_ptr 0097  
                   end_of_initialization 25FC                                Delay@wait 001B  
                    ?_EUSART1_Initialize 0001                  LEDwriteDisplay@i2c_addr 00E7  
                                memset@c 001D                                  memset@n 001F  
                                memset@p 0021                             LEDsetBar@bar 0023  
                          __Lmediumconst 0000                                _LEDsetBar 079C  
                 ??_I2C1_BusCollisionISR 0001                               ??_sendData 0027  
                __end_of_I2C1_Initialize 28FE                    ?_UART_buff_modulo_inc 001B  
                   __size_of_updateComms 003C                                  postdec2 000FDD  
                                postinc0 000FEE                                  postinc2 000FDE  
                             _respondECU 27B8                    ReadButtonState@btnnum 0001  
                       begin@stufftosend 00D8                      CRCcheck@arrayHolder 00D5  
                           LEDsetValue@k 00F3                     ??_EUSART1_Initialize 0025  
                    LEDblinkRate@timeOut 00D8                                _PORTAbits 000F80  
                              _PORTBbits 000F81                                _PORTDbits 000F83  
                      ??_LEDwriteDisplay 002B                  __end_of_ReadButtonState 19B8  
              __size_of_I2C1_MasterWrite 004E                   _dataAdressErrorCounter 00A3  
                      __size_of_I2C1_ISR 02A4                               _rx_address 003C  
                              _TRISCbits 000F94                     __size_of_TBbarGraphs 0012  
                LEDBsetBrightness@status 00DA        I2C1_ISR@i2c_10bit_address_restart 0033  
                    LEDbegin@writeBuffer 00DB                             begin@maxSize 00D5  
     __size_of_FastTransfer_buffer_flush 0064                    i2UART_buff_size@_this 0001  
                         _UART_buff_init 2B1E                           _UART_buff_peek 2AB4  
                         _UART_buff_size 2BA8                      __end_of_crcBufS_get 1BA6  
                             ?_LEDsetBar 0023                      __end_of_crcBufS_put 1C80  
                I2C1_MasterWrite@address 0027                        __size_of_CRCcheck 016E  
              LEDBsetBrightness@i2c_addr 00D5                              ___ftmul@exp 00D9  
                      __size_of_LEDbegin 00AA                            _moduleAddress 003A  
                   _timer0ReloadVal16bit 0043                               CRCcheck@rt 00D8  
                         __end_of_ToSend 2B76             __end_of_INTERRUPT_Initialize 2C32  
                        _crcErrorCounter 00A1                  I2C1_MasterWrite@trBlock 00C9  
                      crcBufS_put@oldCRC 001E                            __pidataCOMRAM 2C4C  
                      __size_of_TMR0_ISR 0068                 I2C1_Stop@completion_code 0003  
                         _ADC_Initialize 2BC0                ??_FastTransfer_buffer_put 0026  
                 ?_OSCILLATOR_Initialize 0001                           __end_of_memset 2A5C  
                      crcBufS_put@status 001F                  buttonsCollector@sendVal 0026  
                           receiveData@r 00EA               __size_of_Receive_available 0018  
                           receiveData@u 00E8                         ??_GetButtonState 001D  
                      _LEDBsetBrightness 20E4                      start_initialization 25A2  
                  __size_of_LEDblinkRate 00AA                              ??_I2C1_Stop 0001  
               __size_of_TMR0_Initialize 001E          __size_of_PIN_MANAGER_Initialize 0050  
                  crcBufS_get@wantedTime 0025                       ?_LEDBsetBrightness 00D3  
                              _SetLEDOut 234A        __size_of_I2C1_MasterWriteTRBBuild 0044  
                      ?_handleIndicators 0020                ?_I2C1_MasterWriteTRBBuild 001B  
                 __end_of_UART_buff_init 2B3C                   __end_of_UART_buff_peek 2ADA  
                         UART_buff_get@c 0025                   __end_of_UART_buff_size 2BC0  
                           ?_Receive_get 0001                           UART_buff_put@c 0023  
                     ??_handleIndicators 0022                          LEDbegin@timeOut 00DE  
                    ??_LEDBsetBrightness 002B                    __size_of_Receive_peek 0010  
                       _buttonsCollector 2456                 __end_ofi2_UART_buff_size 2BF0  
                       ?_I2C1_Initialize 0001                                 ??_ToSend 002A  
                 ??_UART_buff_modulo_inc 001F                                 CRC8@data 001B  
                        crcBufS_get@time 001D                        __size_of_Send_put 0030  
                            ?_respondECU 0001               LEDwriteDisplay@writeBuffer 00D3  
                 __size_of_TMR0_CallBack 0002                   __end_of_ADC_Initialize 2BD8  
                             LEDsetBar@a 0029                               LEDsetBar@c 0027  
                               ?_ADC_ISR 0001                                 ??_memset 0021  
                           _LEDblinkRate 203A                        handleIndicators@i 0025  
              __end_of_LEDBsetBrightness 218C             I2C1_MasterWriteTRBBuild@ptrb 001B  
                       ?_ReadButtonState 0001                        __size_of___ftpack 00C6  
                            __pbssCOMRAM 002B                        __size_of___lwtoft 0026  
          __size_of_EUSART1_Transmit_ISR 0034                            __pcstackBANK0 00D3  
                          ??_LEDsetValue 00F2                            _i2c1_tr_queue 00CE  
                  LEDwriteDisplay@status 00EA                             _Receive_peek 2C02  
                             ?_SetLEDOut 001B                      UART_buff_init@_this 0023  
                            _crcBufS_get 1ABE                      UART_buff_peek@_this 001B  
                            _crcBufS_put 1BA6                         LEDsetValue@color 00F0  
                        ?_UART_buff_init 0023                          ?_UART_buff_peek 001B  
                        ?_UART_buff_size 001B                         LEDsetValue@value 00EE  
                ??_I2C1_FunctionComplete 0001             __size_of_EUSART1_Receive_ISR 001E  
                          ??_receiveData 00DA              __size_of_crcBufS_status_put 00DA  
                             sendData@CS 00D4                              ??_LEDsetBar 00D3  
               __size_of_TMR0_StartTimer 0004                   __size_of_UART_buff_get 0094  
                 __size_of_UART_buff_put 011C                   _PIN_MANAGER_Initialize 271A  
                      __size_of_sendData 0146                                __pintcode 0008  
                               ?___awdiv 001B                                 ?___ftmul 00D3  
                               ?___fttol 00DF                          ?_ADC_Initialize 0001  
                               _I2C1_ISR 0BA6             ??_INTERRUPT_InterruptManager 000D  
           LEDBsetBrightness@writeBuffer 00D6                     i2UART_buff_get@_this 0007  
                       _I2C1_MasterWrite 276A                                 _BAUD1CON 000FB8  
           __end_of_I2C1_MasterTRBInsert 1EE2                        buttonsCollector@i 0028  
                         __size_of_Delay 0034                                _butnarray 0088  
                         __size_of_begin 005E                            _TMR0_CallBack 2C48  
                    __size_of_respondECU 0046                     _INTERRUPT_Initialize 2C22  
                   GetButtonState@btnnum 001B                             _receiveArray 01CE  
                 I2C1_MasterRead@trBlock 00C4                        ??_TMR0_Initialize 001B  
                    __end_of_LEDsetValue 1F90                                 _CRCcheck 0E4A  
                               _LATCbits 000F8B                      UART_buff_size@_this 001B  
                               _IPR1bits 000F9F                                 _LEDbegin 1F90  
                               _IPR2bits 000FA2                                 _PIE1bits 000F9D  
                               _PIE2bits 000FA0                            LEDblinkRate@b 00D3  
                               i2u300_40 18D0                                 i2u300_46 18D2  
                               i2u301_40 18EA                                 i2u301_46 18EC  
                        _LEDwriteDisplay 13D4                                 i2u302_40 1904  
                               i2u302_46 1906                                 i2u303_40 191E  
    __size_of_INTERRUPT_InterruptManager 00BA                                 i2u303_46 1920  
                               i2u304_40 1938                                 i2u304_46 193A  
                               i2u305_40 1952                                 i2u305_46 1954  
                               i2u306_40 196C                                 i2u306_46 196E  
                               i2u413_40 258E                                 i2u415_40 2988  
                               _PIR1bits 000F9E                                 _PIR2bits 000FA1  
                               i2u395_40 22D4                                 i2u299_40 18B6  
                               i2u299_46 18B8                      begin@stuffavailable 00DC  
                               _RCONbits 000FD0                         __CFG_WDTPS$32768 000000  
                    __end_of_receiveData 079C                                 _SSP1CON1 000FC6  
                               _SSP1CON3 000FCB                                 _TMR0_ISR 253A  
                              main@ADCNT 00F5                                 _SSP1STAT 000FC7  
         FastTransfer_buffer_flush@_this 0023                             _input_buffer 0300  
                              _rx_buffer 0200                         __size_of_ADC_ISR 0004  
                             _ADCON0bits 000FC2               __size_of_LEDBsetBrightness 00A8  
                   i2UART_buff_put@_this 0007                            _UART_buff_get 2222  
                          _UART_buff_put 1668                           ?_TMR0_CallBack 0001  
               ??i2_UART_buff_modulo_inc 0005                              ??_SetLEDOut 001E  
                            _INTCON2bits 000FF1                    ?_INTERRUPT_Initialize 0001  
                      _sendStructAddress 00A9                 __size_ofi2_UART_buff_get 0094  
               __size_ofi2_UART_buff_put 011C                            ??_updateComms 002B  
                   __size_of_Receive_get 0010                                 __Hrparam 0000  
                               _Send_put 29A2            __size_of_I2C1_BusCollisionISR 0002  
                               __Lrparam 0000                       __CFG_BOREN$SBORDIS 000000  
                 I2C1_ISR@i2c_bytes_left 0034                        __CFG_P2BMX$PORTD2 000000  
                LEDblinkRate@writeBuffer 00D6                  ??_OSCILLATOR_Initialize 001B  
                      ??_TMR0_StartTimer 001B                           LEDsetBar@color 0025  
                       __size_of___awdiv 0096                         __size_of___ftmul 0160  
                       __size_of___fttol 0152              __size_of_EUSART1_Initialize 003C  
                    begin@stufftoreceive 00DA                                 ___ftpack 1D5A  
       __end_of_I2C1_MasterWriteTRBBuild 2842                                 ___lwtoft 2ADA  
                         ?_UART_buff_get 0021                           ?_UART_buff_put 0021  
                            CRC8@extract 001F                 __end_of_buttonsCollector 24CA  
                              sendData@i 00D5                            ??_TBbarGraphs 001F  
                    I2C1_ISR@i2c_address 003F                              _LEDsetValue 1EE2  
               crcBufS_status_put@status 001E                                 __ptext10 29D2  
                               __ptext11 293A                                 __ptext20 2C12  
                               __ptext12 00C6                                 __ptext21 2222  
                               __ptext13 29A2                                 __ptext30 1282  
                               __ptext22 2A00                                 __ptext14 1668  
                               __ptext31 1122                                 __ptext23 2B90  
                               __ptext15 2C02                                 __ptext40 28C2  
                               __ptext32 1D5A                                 __ptext24 2BA8  
                               __ptext16 2AB4                                 __ptext41 28FE  
                               __ptext33 24CA                                 __ptext25 26C8  
                               __ptext17 0E4A                                 __ptext50 203A  
                               __ptext42 2B1E                                 __ptext34 266A  
                               __ptext26 23DA                                 __ptext18 1C80  
                               __ptext51 20E4                                 __ptext43 2A2E  
                               __ptext35 2B00                                 __ptext27 234A  
                               __ptext19 1ABE                                 __ptext60 2842  
                               __ptext52 276A                                 __ptext44 2BC0  
                               __ptext36 2C40                                 __ptext28 2BF0  
                               __ptext61 2B76                                 __ptext53 27FE  
                               __ptext45 13D4                                 __ptext37 271A  
                               __ptext29 2ADA                                 __ptext70 0000  
                               __ptext62 2C4A                                 __ptext54 1E20  
                               __ptext46 1EE2                                 __ptext38 2C32  
                               __ptext63 296E                                 __ptext47 079C  
                               __ptext39 2C22                                 __ptext64 2BD8  
                               __ptext56 253A                                 __ptext48 218C  
                               __ptext65 22B6                                 __ptext57 2C48  
                               __ptext49 1F90                                 __ptext66 2B3C  
                               __ptext58 18A0                                 __ptext67 1784  
                               __ptext59 0BA6                                 __ptext68 2A5C  
                               __ptext69 2C44                             _SSP1CON1bits 000FC6  
                           _SSP1CON2bits 000FC5                            __size_of_CRC8 0052  
                               begin@ptr 00D3                  EUSART1_Receive_ISR@data 000C  
                __end_of_LEDwriteDisplay 1522                            _returnAddress 003B  
                          __size_of_main 0106                              _receiveData 00C6  
                         _Transmit_stall 0045                                 _sendData 1522  
                   _I2C1_MasterTRBInsert 1E20                        ?i2_UART_buff_size 0001  
                             _RC1STAbits 000FAB                     LEDblinkRate@i2c_addr 00D5  
                           ??_respondECU 002B                       ??i2_UART_buff_size 0003  
              __size_of_handleIndicators 007C            handleIndicators@oldIndicators 00B1  
                           _serial_write 0031                                 _throttle 00AD  
                    __end_of_updateComms 28C2       __end_of_INTERRUPT_InterruptManager 00C2  
             _INTERRUPT_InterruptManager 0008                      _EUSART1_Receive_ISR 2B3C  
                      receiveData@holder 00E0                       LEDBsetBrightness@b 00D3  
                             _INTCONbits 000FF2                          ??_TMR0_CallBack 0001  
              UART_buff_modulo_inc@value 001B       handleIndicators@receivedIndicators 0020  
                       ??_UART_buff_init 0025                         ??_UART_buff_peek 001D  
                       ??_UART_buff_size 001D                   ??_INTERRUPT_Initialize 001B  
                               memset@p1 001B                         _serial_available 002D  
        __size_ofi2_UART_buff_modulo_inc 002E                             ?_crcBufS_get 001B  
                           ?_crcBufS_put 001B                                 intlevel2 0000  
                crcBufS_status_put@_this 001B                       __end_of_respondECU 27FE  
                    __end_of_TBbarGraphs 2C02                     ?_EUSART1_Receive_ISR 0001  
 FastTransfer_buffer_modulo_inc@my_value 001F           FastTransfer_buffer_put@towhere 0023  
                ?_PIN_MANAGER_Initialize 0001                 __end_of_I2C1_MasterWrite 27B8  
         __size_of_I2C1_FunctionComplete 001A            __end_of_I2C1_FunctionComplete 2B90  
                  ?_I2C1_MasterTRBInsert 001B             __end_of_EUSART1_Transmit_ISR 29A2  
                            _ring_buffer 0100                         ??_ADC_Initialize 001B  
             ?_FastTransfer_buffer_flush 0023                        ??i2_UART_buff_get 0009  
                            _serial_peek 00AB                              _serial_read 002F  
                      ??i2_UART_buff_put 000A                 ?_FastTransfer_buffer_put 0021  
          __size_of_UART_buff_modulo_inc 002E                 __size_of_I2C1_Initialize 003C  
                        ??_UART_buff_get 0023                          ??_UART_buff_put 0024  
  FastTransfer_buffer_modulo_inc@modulus 001D                   crcBufS_status_put@time 001D  
                        _TMR0_Initialize 2B00                receiveData@crcHolder_2258 00E7  
               _I2C1_MasterWriteTRBBuild 27FE                        __CFG_T3CMX$PORTC0 000000  
                         _maxDataAddress 0039                 __size_of_ReadButtonState 0118  
             __end_of_crcBufS_status_put 1D5A                    ??_EUSART1_Receive_ISR 000C  
         __end_of_PIN_MANAGER_Initialize 276A         ??_FastTransfer_buffer_modulo_inc 001F  
        ?_FastTransfer_buffer_modulo_inc 001B                         ?_LEDwriteDisplay 0001  
                __size_of_GetButtonState 002A                       __size_of_I2C1_Stop 0044  
                          _displaybuffer 0060                        __CFG_FOSC$INTIO67 000000  
                            _updateComms 2886  
