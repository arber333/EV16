

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Thu May 05 01:09:36 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62  0000                     
    63                           	psect	idataCOMRAM
    64  0010F0                     __pidataCOMRAM:
    65                           	opt stack 0
    66                           
    67                           ;initializer for _Transmit_stall
    68  0010F0  01                 	db	1
    69  0000                     _ANSELA	set	3896
    70  0000                     _ANSELB	set	3897
    71  0000                     _ANSELC	set	3898
    72  0000                     _ANSELD	set	3899
    73  0000                     _ANSELE	set	3900
    74  0000                     _CCP4CON	set	3927
    75  0000                     _CCP5CON	set	3924
    76  0000                     _CCPR4H	set	3929
    77  0000                     _CCPR4L	set	3928
    78  0000                     _CCPR5H	set	3926
    79  0000                     _CCPR5L	set	3925
    80  0000                     _CCPTMRS1bits	set	3912
    81  0000                     _ADCON0	set	4034
    82  0000                     _ADCON0bits	set	4034
    83  0000                     _ADCON1	set	4033
    84  0000                     _ADCON2	set	4032
    85  0000                     _ADRESH	set	4036
    86  0000                     _ADRESL	set	4035
    87  0000                     _BAUD1CON	set	4024
    88  0000                     _EEADR	set	4009
    89  0000                     _EECON1bits	set	4006
    90  0000                     _EECON2	set	4007
    91  0000                     _EEDATA	set	4008
    92  0000                     _INTCON2bits	set	4081
    93  0000                     _INTCONbits	set	4082
    94  0000                     _IPR1bits	set	3999
    95  0000                     _IPR4bits	set	3964
    96  0000                     _LATA	set	3977
    97  0000                     _LATB	set	3978
    98  0000                     _LATC	set	3979
    99  0000                     _LATCbits	set	3979
   100  0000                     _LATD	set	3980
   101  0000                     _LATE	set	3981
   102  0000                     _OSCCON	set	4051
   103  0000                     _OSCCON2	set	4050
   104  0000                     _OSCTUNE	set	3995
   105  0000                     _PIE1bits	set	3997
   106  0000                     _PIE4bits	set	3962
   107  0000                     _PIR1bits	set	3998
   108  0000                     _PIR2bits	set	4001
   109  0000                     _PIR4bits	set	3963
   110  0000                     _PR2	set	4027
   111  0000                     _RC1STA	set	4011
   112  0000                     _RC1STAbits	set	4011
   113  0000                     _RCONbits	set	4048
   114  0000                     _RCREG1	set	4014
   115  0000                     _SPBRG1	set	4015
   116  0000                     _SPBRGH1	set	4016
   117  0000                     _T2CON	set	4026
   118  0000                     _T2CONbits	set	4026
   119  0000                     _TABLAT	set	4085
   120  0000                     _TBLPTRH	set	4087
   121  0000                     _TBLPTRL	set	4086
   122  0000                     _TBLPTRU	set	4088
   123  0000                     _TMR2	set	4028
   124  0000                     _TRISA	set	3986
   125  0000                     _TRISB	set	3987
   126  0000                     _TRISC	set	3988
   127  0000                     _TRISD	set	3989
   128  0000                     _TRISE	set	3990
   129  0000                     _TX1STA	set	4012
   130  0000                     _TXREG1	set	4013
   131  0000                     _WPUB	set	3937
   132  0000                     _LATB0	set	31824
   133  0000                     _LATB3	set	31827
   134  0000                     _LATB4	set	31828
   135  0000                     _LATB5	set	31829
   136  0000                     _LATD4	set	31844
   137  0000                     _LATD5	set	31845
   138  0000                     _LATD6	set	31846
   139  0000                     _LATD7	set	31847
   140                           
   141                           ; #config settings
   142  0000                     
   143                           	psect	cinit
   144  000B70                     __pcinit:
   145                           	opt stack 0
   146  000B70                     start_initialization:
   147                           	opt stack 0
   148  000B70                     __initialization:
   149                           	opt stack 0
   150                           
   151                           ; Clear objects allocated to BANK4 (200 bytes)
   152  000B70  EE04  F000         	lfsr	0,__pbssBANK4
   153  000B74  0EC8               	movlw	200
   154  000B76                     clear_0:
   155  000B76  6AEE               	clrf	postinc0,c
   156  000B78  06E8               	decf	wreg,f,c
   157  000B7A  E1FD               	bnz	clear_0
   158                           
   159                           ; Clear objects allocated to BANK3 (206 bytes)
   160  000B7C  EE03  F000         	lfsr	0,__pbssBANK3
   161  000B80  0ECE               	movlw	206
   162  000B82                     clear_1:
   163  000B82  6AEE               	clrf	postinc0,c
   164  000B84  06E8               	decf	wreg,f,c
   165  000B86  E1FD               	bnz	clear_1
   166                           
   167                           ; Clear objects allocated to BANK2 (206 bytes)
   168  000B88  EE02  F000         	lfsr	0,__pbssBANK2
   169  000B8C  0ECE               	movlw	206
   170  000B8E                     clear_2:
   171  000B8E  6AEE               	clrf	postinc0,c
   172  000B90  06E8               	decf	wreg,f,c
   173  000B92  E1FD               	bnz	clear_2
   174                           
   175                           ; Clear objects allocated to BANK1 (206 bytes)
   176  000B94  EE01  F000         	lfsr	0,__pbssBANK1
   177  000B98  0ECE               	movlw	206
   178  000B9A                     clear_3:
   179  000B9A  6AEE               	clrf	postinc0,c
   180  000B9C  06E8               	decf	wreg,f,c
   181  000B9E  E1FD               	bnz	clear_3
   182                           
   183                           ; Clear objects allocated to BANK0 (153 bytes)
   184  000BA0  EE00  F060         	lfsr	0,__pbssBANK0
   185  000BA4  0E99               	movlw	153
   186  000BA6                     clear_4:
   187  000BA6  6AEE               	clrf	postinc0,c
   188  000BA8  06E8               	decf	wreg,f,c
   189  000BAA  E1FD               	bnz	clear_4
   190                           
   191                           ; Clear objects allocated to COMRAM (34 bytes)
   192  000BAC  EE00  F026         	lfsr	0,__pbssCOMRAM
   193  000BB0  0E22               	movlw	34
   194  000BB2                     clear_5:
   195  000BB2  6AEE               	clrf	postinc0,c
   196  000BB4  06E8               	decf	wreg,f,c
   197  000BB6  E1FD               	bnz	clear_5
   198                           
   199                           ; Initialize objects allocated to COMRAM (1 bytes)
   200                           ; load TBLPTR registers with __pidataCOMRAM
   201  000BB8  0EF0               	movlw	low __pidataCOMRAM
   202  000BBA  6EF6               	movwf	tblptrl,c
   203  000BBC  0E10               	movlw	high __pidataCOMRAM
   204  000BBE  6EF7               	movwf	tblptrh,c
   205  000BC0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   206  000BC2  6EF8               	movwf	tblptru,c
   207  000BC4  0009               	tblrd		*+	;fetch initializer
   208  000BC6  CFF5 F048          	movff	tablat,__pdataCOMRAM
   209  000BCA                     end_of_initialization:
   210                           	opt stack 0
   211  000BCA                     __end_of__initialization:
   212                           	opt stack 0
   213  000BCA  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   214  000BCC  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   215  000BCE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   216  000BD0  6EF8               	movwf	tblptru,c
   217  000BD2  0100               	movlb	0
   218  000BD4  EF47  F008         	goto	_main	;jump to C main() function
   219                           tblptru	equ	0xFF8
   220                           tblptrh	equ	0xFF7
   221                           tblptrl	equ	0xFF6
   222                           tablat	equ	0xFF5
   223                           postinc0	equ	0xFEE
   224                           wreg	equ	0xFE8
   225                           
   226                           	psect	bssCOMRAM
   227  000026                     __pbssCOMRAM:
   228                           	opt stack 0
   229  000026                     _addressErrorCounter:
   230                           	opt stack 0
   231  000026                     	ds	2
   232  000028                     _alignErrorCounter:
   233                           	opt stack 0
   234  000028                     	ds	2
   235  00002A                     _crcErrorCounter:
   236                           	opt stack 0
   237  00002A                     	ds	2
   238  00002C                     _dataAdressErrorCounter:
   239                           	opt stack 0
   240  00002C                     	ds	2
   241  00002E                     _group:
   242                           	opt stack 0
   243  00002E                     	ds	2
   244  000030                     _prev_pos:
   245                           	opt stack 0
   246  000030                     	ds	2
   247  000032                     _receiveArrayAddress:
   248                           	opt stack 0
   249  000032                     	ds	2
   250  000034                     _sendStructAddress:
   251                           	opt stack 0
   252  000034                     	ds	2
   253  000036                     _serial_available:
   254                           	opt stack 0
   255  000036                     	ds	2
   256  000038                     _serial_peek:
   257                           	opt stack 0
   258  000038                     	ds	2
   259  00003A                     _serial_read:
   260                           	opt stack 0
   261  00003A                     	ds	2
   262  00003C                     _serial_write:
   263                           	opt stack 0
   264  00003C                     	ds	2
   265  00003E                     updateComms@previousPowerState:
   266                           	opt stack 0
   267  00003E                     	ds	2
   268  000040                     _AKNAKsend:
   269                           	opt stack 0
   270  000040                     	ds	1
   271  000041                     _calc_CS:
   272                           	opt stack 0
   273  000041                     	ds	1
   274  000042                     _maxDataAddress:
   275                           	opt stack 0
   276  000042                     	ds	1
   277  000043                     _moduleAddress:
   278                           	opt stack 0
   279  000043                     	ds	1
   280  000044                     _returnAddress:
   281                           	opt stack 0
   282  000044                     	ds	1
   283  000045                     _rx_address:
   284                           	opt stack 0
   285  000045                     	ds	1
   286  000046                     _rx_array_inx:
   287                           	opt stack 0
   288  000046                     	ds	1
   289  000047                     _rx_len:
   290                           	opt stack 0
   291  000047                     	ds	1
   292                           tblptru	equ	0xFF8
   293                           tblptrh	equ	0xFF7
   294                           tblptrl	equ	0xFF6
   295                           tablat	equ	0xFF5
   296                           postinc0	equ	0xFEE
   297                           wreg	equ	0xFE8
   298                           
   299                           	psect	dataCOMRAM
   300  000048                     __pdataCOMRAM:
   301                           	opt stack 0
   302  000048                     _Transmit_stall:
   303                           	opt stack 0
   304  000048                     	ds	1
   305                           tblptru	equ	0xFF8
   306                           tblptrh	equ	0xFF7
   307                           tblptrl	equ	0xFF6
   308                           tablat	equ	0xFF5
   309                           postinc0	equ	0xFEE
   310                           wreg	equ	0xFE8
   311                           
   312                           	psect	bssBANK0
   313  000060                     __pbssBANK0:
   314                           	opt stack 0
   315  000060                     _registers:
   316                           	opt stack 0
   317  000060                     	ds	48
   318  000090                     _receiveArray:
   319                           	opt stack 0
   320  000090                     	ds	40
   321  0000B8                     _Current:
   322                           	opt stack 0
   323  0000B8                     	ds	12
   324  0000C4                     _CurrentADC:
   325                           	opt stack 0
   326  0000C4                     	ds	12
   327  0000D0                     _Currentcomp:
   328                           	opt stack 0
   329  0000D0                     	ds	12
   330  0000DC                     _data:
   331                           	opt stack 0
   332  0000DC                     	ds	12
   333  0000E8                     _crc_buffer:
   334                           	opt stack 0
   335  0000E8                     	ds	17
   336                           tblptru	equ	0xFF8
   337                           tblptrh	equ	0xFF7
   338                           tblptrl	equ	0xFF6
   339                           tablat	equ	0xFF5
   340                           postinc0	equ	0xFEE
   341                           wreg	equ	0xFE8
   342                           
   343                           	psect	bssBANK1
   344  000100                     __pbssBANK1:
   345                           	opt stack 0
   346  000100                     _ring_buffer:
   347                           	opt stack 0
   348  000100                     	ds	206
   349                           tblptru	equ	0xFF8
   350                           tblptrh	equ	0xFF7
   351                           tblptrl	equ	0xFF6
   352                           tablat	equ	0xFF5
   353                           postinc0	equ	0xFEE
   354                           wreg	equ	0xFE8
   355                           
   356                           	psect	bssBANK2
   357  000200                     __pbssBANK2:
   358                           	opt stack 0
   359  000200                     _input_buffer:
   360                           	opt stack 0
   361  000200                     	ds	206
   362                           tblptru	equ	0xFF8
   363                           tblptrh	equ	0xFF7
   364                           tblptrl	equ	0xFF6
   365                           tablat	equ	0xFF5
   366                           postinc0	equ	0xFEE
   367                           wreg	equ	0xFE8
   368                           
   369                           	psect	bssBANK3
   370  000300                     __pbssBANK3:
   371                           	opt stack 0
   372  000300                     _output_buffer:
   373                           	opt stack 0
   374  000300                     	ds	206
   375                           tblptru	equ	0xFF8
   376                           tblptrh	equ	0xFF7
   377                           tblptrl	equ	0xFF6
   378                           tablat	equ	0xFF5
   379                           postinc0	equ	0xFEE
   380                           wreg	equ	0xFE8
   381                           
   382                           	psect	bssBANK4
   383  000400                     __pbssBANK4:
   384                           	opt stack 0
   385  000400                     _rx_buffer:
   386                           	opt stack 0
   387  000400                     	ds	200
   388                           tblptru	equ	0xFF8
   389                           tblptrh	equ	0xFF7
   390                           tblptrl	equ	0xFF6
   391                           tablat	equ	0xFF5
   392                           postinc0	equ	0xFEE
   393                           wreg	equ	0xFE8
   394                           
   395                           	psect	cstackBANK1
   396  0001CE                     __pcstackBANK1:
   397                           	opt stack 0
   398  0001CE                     receiveData@crcHolder:
   399                           	opt stack 0
   400                           
   401                           ; 1 bytes @ 0x0
   402  0001CE                     	ds	1
   403  0001CF                     receiveData@crcHolder_1192:
   404                           	opt stack 0
   405                           
   406                           ; 1 bytes @ 0x1
   407  0001CF                     	ds	1
   408  0001D0                     receiveData@holder:
   409                           	opt stack 0
   410                           
   411                           ; 3 bytes @ 0x2
   412  0001D0                     	ds	3
   413  0001D3                     receiveData@holder_1191:
   414                           	opt stack 0
   415                           
   416                           ; 3 bytes @ 0x5
   417  0001D3                     	ds	3
   418  0001D6                     receiveData@u:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x8
   422  0001D6                     	ds	2
   423  0001D8                     receiveData@r:
   424                           	opt stack 0
   425                           
   426                           ; 2 bytes @ 0xA
   427  0001D8                     	ds	2
   428                           tblptru	equ	0xFF8
   429                           tblptrh	equ	0xFF7
   430                           tblptrl	equ	0xFF6
   431                           tablat	equ	0xFF5
   432                           postinc0	equ	0xFEE
   433                           wreg	equ	0xFE8
   434                           
   435                           	psect	cstackBANK0
   436  0000F9                     __pcstackBANK0:
   437                           	opt stack 0
   438  0000F9                     ??_receiveData:
   439                           
   440                           ; 1 bytes @ 0x0
   441  0000F9                     	ds	6
   442                           tblptru	equ	0xFF8
   443                           tblptrh	equ	0xFF7
   444                           tblptrl	equ	0xFF6
   445                           tablat	equ	0xFF5
   446                           postinc0	equ	0xFEE
   447                           wreg	equ	0xFE8
   448                           
   449                           	psect	cstackCOMRAM
   450  000001                     __pcstackCOMRAM:
   451                           	opt stack 0
   452  000001                     CCP5_CallBack@capturedValue:
   453                           	opt stack 0
   454                           
   455                           ; 2 bytes @ 0x0
   456  000001                     	ds	2
   457  000003                     CCP5_CaptureISR@module:
   458                           	opt stack 0
   459                           
   460                           ; 2 bytes @ 0x2
   461  000003                     	ds	2
   462  000005                     ??_INTERRUPT_InterruptManager:
   463                           
   464                           ; 1 bytes @ 0x4
   465  000005                     	ds	14
   466  000013                     ?_FastTransfer_buffer_modulo_inc:
   467                           	opt stack 0
   468  000013                     DATAEE_ReadByte@bAdd:
   469                           	opt stack 0
   470  000013                     PWM4_LoadDutyValue@dutyValue:
   471                           	opt stack 0
   472  000013                     PotSetpoint@new_point:
   473                           	opt stack 0
   474  000013                     CRC8@data:
   475                           	opt stack 0
   476  000013                     FastTransfer_buffer_modulo_inc@value:
   477                           	opt stack 0
   478  000013                     crcBufS_put@_this:
   479                           	opt stack 0
   480  000013                     crcBufS_status_put@_this:
   481                           	opt stack 0
   482  000013                     crcBufS_get@_this:
   483                           	opt stack 0
   484  000013                     SetPin595@Reg:
   485                           	opt stack 0
   486  000013                     memset@p1:
   487                           	opt stack 0
   488  000013                     Delay@wait:
   489                           	opt stack 0
   490                           
   491                           ; 4 bytes @ 0x12
   492  000013                     	ds	1
   493  000014                     ??_ComputeStorageData:
   494                           
   495                           ; 1 bytes @ 0x13
   496  000014                     	ds	1
   497  000015                     ??_PotSetpoint:
   498  000015                     ??_PWM4_LoadDutyValue:
   499  000015                     CRC8@len:
   500                           	opt stack 0
   501  000015                     crcBufS_put@address:
   502                           	opt stack 0
   503  000015                     crcBufS_status_put@time:
   504                           	opt stack 0
   505  000015                     crcBufS_get@time:
   506                           	opt stack 0
   507  000015                     FastTransfer_buffer_modulo_inc@modulus:
   508                           	opt stack 0
   509  000015                     SetPin595@pin:
   510                           	opt stack 0
   511  000015                     memset@c:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0x14
   515  000015                     	ds	1
   516  000016                     CRC8@sum:
   517                           	opt stack 0
   518  000016                     crcBufS_put@oldCRC:
   519                           	opt stack 0
   520  000016                     crcBufS_status_put@status:
   521                           	opt stack 0
   522  000016                     crcBufS_get@space:
   523                           	opt stack 0
   524  000016                     ComputeStorageData@i:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0x15
   528  000016                     	ds	1
   529  000017                     ??_Delay:
   530  000017                     ??_crcBufS_get:
   531  000017                     ??_crcBufS_status_put:
   532  000017                     CRC8@extract:
   533                           	opt stack 0
   534  000017                     crcBufS_put@status:
   535                           	opt stack 0
   536  000017                     PotSetpoint@set_point:
   537                           	opt stack 0
   538  000017                     FastTransfer_buffer_modulo_inc@my_value:
   539                           	opt stack 0
   540  000017                     SetPin595@value:
   541                           	opt stack 0
   542  000017                     memset@n:
   543                           	opt stack 0
   544                           
   545                           ; 2 bytes @ 0x16
   546  000017                     	ds	1
   547  000018                     ??_crcBufS_put:
   548  000018                     CRC8@tempI:
   549                           	opt stack 0
   550  000018                     Delay@i:
   551                           	opt stack 0
   552                           
   553                           ; 4 bytes @ 0x17
   554  000018                     	ds	1
   555  000019                     ??_SetPin595:
   556  000019                     CRC8@crc:
   557                           	opt stack 0
   558  000019                     PotSetpoint@x:
   559                           	opt stack 0
   560  000019                     FastTransfer_buffer_put@_this:
   561                           	opt stack 0
   562  000019                     memset@p:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0x18
   566  000019                     	ds	2
   567  00001B                     FastTransfer_buffer_put@towhere:
   568                           	opt stack 0
   569  00001B                     PotSetpoint@new_pos:
   570                           	opt stack 0
   571  00001B                     FastTransfer_buffer_flush@_this:
   572                           	opt stack 0
   573  00001B                     crcBufS_status_put@wantedTime:
   574                           	opt stack 0
   575                           
   576                           ; 2 bytes @ 0x1A
   577  00001B                     	ds	1
   578  00001C                     FastTransfer_buffer_put@towhat:
   579                           	opt stack 0
   580  00001C                     writeRegisters@val:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0x1B
   584  00001C                     	ds	1
   585  00001D                     FastTransfer_buffer_flush@clearBuffer:
   586                           	opt stack 0
   587  00001D                     crcBufS_get@wantedTime:
   588                           	opt stack 0
   589  00001D                     EnableSlavePower@onof:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0x1C
   593  00001D                     	ds	1
   594  00001E                     ??_FastTransfer_buffer_put:
   595  00001E                     writeRegisters@i:
   596                           	opt stack 0
   597                           
   598                           ; 2 bytes @ 0x1D
   599  00001E                     	ds	1
   600  00001F                     ??_sendData:
   601  00001F                     CRCcheck@SentCRC:
   602                           	opt stack 0
   603  00001F                     EnableSlavePower@slave:
   604                           	opt stack 0
   605                           
   606                           ; 1 bytes @ 0x1E
   607  00001F                     	ds	1
   608  000020                     sendData@whereToSend:
   609                           	opt stack 0
   610  000020                     CRCcheck@calculatedCRC:
   611                           	opt stack 0
   612  000020                     processPowerRequest@powerSet:
   613                           	opt stack 0
   614  000020                     ToSend@what:
   615                           	opt stack 0
   616  000020                     Clear595@i:
   617                           	opt stack 0
   618                           
   619                           ; 2 bytes @ 0x1F
   620  000020                     	ds	1
   621  000021                     sendData@CS:
   622                           	opt stack 0
   623  000021                     CRCcheck@arrayHolder:
   624                           	opt stack 0
   625                           
   626                           ; 3 bytes @ 0x20
   627  000021                     	ds	1
   628  000022                     ToSend@where:
   629                           	opt stack 0
   630  000022                     sendData@i:
   631                           	opt stack 0
   632                           
   633                           ; 2 bytes @ 0x21
   634  000022                     	ds	2
   635  000024                     CRCcheck@rt:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x23
   639  000024                     	ds	2
   640  000026                     tblptru	equ	0xFF8
   641                           tblptrh	equ	0xFF7
   642                           tblptrl	equ	0xFF6
   643                           tablat	equ	0xFF5
   644                           postinc0	equ	0xFEE
   645                           wreg	equ	0xFE8
   646                           
   647                           ; 1 bytes @ 0x25
   648 ;;
   649 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   650 ;;
   651 ;; *************** function _main *****************
   652 ;; Defined at:
   653 ;;		line 55 in file "main.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;		None
   656 ;; Auto vars:     Size  Location     Type
   657 ;;		None
   658 ;; Return value:  Size  Location     Type
   659 ;;                  1    wreg      void 
   660 ;; Registers used:
   661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   667 ;;      Params:         0       0       0       0       0       0       0
   668 ;;      Locals:         0       0       0       0       0       0       0
   669 ;;      Temps:          0       0       0       0       0       0       0
   670 ;;      Totals:         0       0       0       0       0       0       0
   671 ;;Total ram usage:        0 bytes
   672 ;; Hardware stack levels required when called:    8
   673 ;; This function calls:
   674 ;;		_CoolingStart
   675 ;;		_PDUStartup
   676 ;;		_SYSTEM_Initialize
   677 ;;		_updateComms
   678 ;; This function is called by:
   679 ;;		Startup code after reset
   680 ;; This function uses a non-reentrant model
   681 ;;
   682                           
   683                           	psect	text0
   684  00108E                     __ptext0:
   685                           	opt stack 0
   686  00108E                     _main:
   687                           	opt stack 23
   688                           
   689                           ;main.c: 58: SYSTEM_Initialize();
   690                           
   691                           ;incstack = 0
   692  00108E  ECE9  F007         	call	_SYSTEM_Initialize	;wreg free
   693                           
   694                           ;main.c: 59: PDUStartup();
   695  001092  EC82  F006         	call	_PDUStartup	;wreg free
   696                           
   697                           ;main.c: 60: CoolingStart();
   698  001096  EC22  F008         	call	_CoolingStart	;wreg free
   699                           
   700                           ;main.c: 78: (INTCONbits.GIE = 1);
   701  00109A  8EF2               	bsf	intcon,7,c	;volatile
   702                           
   703                           ;main.c: 81: (INTCONbits.PEIE = 1);
   704  00109C  8CF2               	bsf	intcon,6,c	;volatile
   705  00109E                     l3258:
   706                           
   707                           ;main.c: 90: {
   708                           ;main.c: 92: updateComms();
   709  00109E  EC6E  F007         	call	_updateComms	;wreg free
   710  0010A2  D7FD               	goto	l3258
   711  0010A4                     __end_of_main:
   712                           	opt stack 0
   713                           tblptru	equ	0xFF8
   714                           tblptrh	equ	0xFF7
   715                           tblptrl	equ	0xFF6
   716                           tablat	equ	0xFF5
   717                           intcon	equ	0xFF2
   718                           postinc0	equ	0xFEE
   719                           wreg	equ	0xFE8
   720                           
   721 ;; *************** function _updateComms *****************
   722 ;; Defined at:
   723 ;;		line 21 in file "Communications.c"
   724 ;; Parameters:    Size  Location     Type
   725 ;;		None
   726 ;; Auto vars:     Size  Location     Type
   727 ;;		None
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      void 
   730 ;; Registers used:
   731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   737 ;;      Params:         0       0       0       0       0       0       0
   738 ;;      Locals:         0       0       0       0       0       0       0
   739 ;;      Temps:          0       0       0       0       0       0       0
   740 ;;      Totals:         0       0       0       0       0       0       0
   741 ;;Total ram usage:        0 bytes
   742 ;; Hardware stack levels used:    1
   743 ;; Hardware stack levels required when called:    7
   744 ;; This function calls:
   745 ;;		_processPowerRequest
   746 ;;		_receiveData
   747 ;;		_respondECU
   748 ;; This function is called by:
   749 ;;		_main
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           	psect	text1
   754  000EDC                     __ptext1:
   755                           	opt stack 0
   756  000EDC                     _updateComms:
   757                           	opt stack 23
   758                           
   759                           ;Communications.c: 22: if (receiveData()) {
   760                           
   761                           ;incstack = 0
   762  000EDC  EC4C  F000         	call	_receiveData	;wreg free
   763  000EE0  0900               	iorlw	0
   764  000EE2  B4D8               	btfsc	status,2,c
   765  000EE4  0012               	return	
   766                           
   767                           ;Communications.c: 23: static int previousPowerState;
   768                           ;Communications.c: 24: if (previousPowerState != receiveArray[1]) {
   769  000EE6  503E               	movf	updateComms@previousPowerState,w,c
   770  000EE8  0100               	movlb	0	; () banked
   771  000EEA  1992               	xorwf	(_receiveArray+2)& (0+255),w,b	;volatile
   772  000EEC  E105               	bnz	u1920
   773  000EEE  503F               	movf	updateComms@previousPowerState+1,w,c
   774  000EF0  0100               	movlb	0	; () banked
   775  000EF2  1993               	xorwf	(_receiveArray+3)& (0+255),w,b	;volatile
   776  000EF4  B4D8               	btfsc	status,2,c
   777  000EF6  D00A               	goto	l322
   778  000EF8                     u1920:
   779                           
   780                           ; BSR set to: 0
   781                           ;Communications.c: 25: previousPowerState = receiveArray[1];
   782  000EF8  C092  F03E         	movff	_receiveArray+2,updateComms@previousPowerState	;volatile
   783  000EFC  C093  F03F         	movff	_receiveArray+3,updateComms@previousPowerState+1	;volatile
   784                           
   785                           ; BSR set to: 0
   786                           ;Communications.c: 26: processPowerRequest(previousPowerState);
   787  000F00  C03E  F020         	movff	updateComms@previousPowerState,processPowerRequest@powerSet
   788  000F04  C03F  F021         	movff	updateComms@previousPowerState+1,processPowerRequest@powerSet+1
   789  000F08  ECDD  F004         	call	_processPowerRequest	;wreg free
   790  000F0C                     l322:
   791                           
   792                           ;Communications.c: 27: }
   793                           ;Communications.c: 28: respondECU();
   794  000F0C  ECAC  F006         	call	_respondECU	;wreg free
   795  000F10  0012               	return	
   796  000F12                     __end_of_updateComms:
   797                           	opt stack 0
   798                           tblptru	equ	0xFF8
   799                           tblptrh	equ	0xFF7
   800                           tblptrl	equ	0xFF6
   801                           tablat	equ	0xFF5
   802                           intcon	equ	0xFF2
   803                           postinc0	equ	0xFEE
   804                           wreg	equ	0xFE8
   805                           status	equ	0xFD8
   806                           
   807 ;; *************** function _respondECU *****************
   808 ;; Defined at:
   809 ;;		line 48 in file "Communications.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;		None
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   823 ;;      Params:         0       0       0       0       0       0       0
   824 ;;      Locals:         0       0       0       0       0       0       0
   825 ;;      Temps:          0       0       0       0       0       0       0
   826 ;;      Totals:         0       0       0       0       0       0       0
   827 ;;Total ram usage:        0 bytes
   828 ;; Hardware stack levels used:    1
   829 ;; Hardware stack levels required when called:    6
   830 ;; This function calls:
   831 ;;		_Delay
   832 ;;		_ToSend
   833 ;;		_sendData
   834 ;; This function is called by:
   835 ;;		_updateComms
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           	psect	text2
   840  000D58                     __ptext2:
   841                           	opt stack 0
   842  000D58                     _respondECU:
   843                           	opt stack 23
   844                           
   845                           ;Communications.c: 49: LATCbits.LATC5 = 1;
   846                           
   847                           ;incstack = 0
   848  000D58  8A8B               	bsf	3979,5,c	;volatile
   849                           
   850                           ;Communications.c: 50: ToSend(0, 5);
   851  000D5A  0E00               	movlw	0
   852  000D5C  6E21               	movwf	ToSend@what+1,c
   853  000D5E  0E05               	movlw	5
   854  000D60  6E20               	movwf	ToSend@what,c
   855  000D62  0E00               	movlw	0
   856  000D64  EC07  F008         	call	_ToSend
   857                           
   858                           ;Communications.c: 51: ToSend(9, 5);
   859  000D68  0E00               	movlw	0
   860  000D6A  6E21               	movwf	ToSend@what+1,c
   861  000D6C  0E05               	movlw	5
   862  000D6E  6E20               	movwf	ToSend@what,c
   863  000D70  0E09               	movlw	9
   864  000D72  EC07  F008         	call	_ToSend
   865                           
   866                           ;Communications.c: 52: Delay(5);
   867  000D76  0E05               	movlw	5
   868  000D78  6E13               	movwf	Delay@wait,c
   869  000D7A  0E00               	movlw	0
   870  000D7C  6E14               	movwf	Delay@wait+1,c
   871  000D7E  0E00               	movlw	0
   872  000D80  6E15               	movwf	Delay@wait+2,c
   873  000D82  0E00               	movlw	0
   874  000D84  6E16               	movwf	Delay@wait+3,c
   875  000D86  EC23  F007         	call	_Delay	;wreg free
   876                           
   877                           ;Communications.c: 54: sendData(1);
   878  000D8A  0E01               	movlw	1
   879  000D8C  ECEC  F005         	call	_sendData
   880                           
   881                           ;Communications.c: 55: Delay(3);
   882  000D90  0E03               	movlw	3
   883  000D92  6E13               	movwf	Delay@wait,c
   884  000D94  0E00               	movlw	0
   885  000D96  6E14               	movwf	Delay@wait+1,c
   886  000D98  0E00               	movlw	0
   887  000D9A  6E15               	movwf	Delay@wait+2,c
   888  000D9C  0E00               	movlw	0
   889  000D9E  6E16               	movwf	Delay@wait+3,c
   890  000DA0  EC23  F007         	call	_Delay	;wreg free
   891                           
   892                           ;Communications.c: 56: LATCbits.LATC5 = 0;
   893  000DA4  9A8B               	bcf	3979,5,c	;volatile
   894  000DA6  0012               	return		;funcret
   895  000DA8                     __end_of_respondECU:
   896                           	opt stack 0
   897                           tblptru	equ	0xFF8
   898                           tblptrh	equ	0xFF7
   899                           tblptrl	equ	0xFF6
   900                           tablat	equ	0xFF5
   901                           intcon	equ	0xFF2
   902                           postinc0	equ	0xFEE
   903                           wreg	equ	0xFE8
   904                           status	equ	0xFD8
   905                           
   906 ;; *************** function _sendData *****************
   907 ;; Defined at:
   908 ;;		line 53 in file "FastTransfer.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;  whereToSend     1    wreg     unsigned char 
   911 ;; Auto vars:     Size  Location     Type
   912 ;;  whereToSend     1   31[COMRAM] unsigned char 
   913 ;;  i               2   33[COMRAM] int 
   914 ;;  CS              1   32[COMRAM] unsigned char 
   915 ;; Return value:  Size  Location     Type
   916 ;;                  1    wreg      void 
   917 ;; Registers used:
   918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   924 ;;      Params:         0       0       0       0       0       0       0
   925 ;;      Locals:         4       0       0       0       0       0       0
   926 ;;      Temps:          1       0       0       0       0       0       0
   927 ;;      Totals:         5       0       0       0       0       0       0
   928 ;;Total ram usage:        5 bytes
   929 ;; Hardware stack levels used:    1
   930 ;; Hardware stack levels required when called:    5
   931 ;; This function calls:
   932 ;;		_CRC8
   933 ;;		_FastTransfer_buffer_flush
   934 ;;		_crcBufS_put
   935 ;; This function is called by:
   936 ;;		_respondECU
   937 ;; This function uses a non-reentrant model
   938 ;;
   939                           
   940                           	psect	text3
   941  000BD8                     __ptext3:
   942                           	opt stack 0
   943  000BD8                     _sendData:
   944                           	opt stack 23
   945                           
   946                           ;incstack = 0
   947                           ;sendData@whereToSend stored from wreg
   948  000BD8  6E20               	movwf	sendData@whereToSend,c
   949                           
   950                           ;FastTransfer.c: 62: serial_write(ring_buffer.count);
   951  000BDA  C034  F013         	movff	_sendStructAddress,CRC8@data
   952  000BDE  C035  F014         	movff	_sendStructAddress+1,CRC8@data+1
   953  000BE2  C1CC  F015         	movff	_ring_buffer+204,CRC8@len
   954  000BE6  EC49  F007         	call	_CRC8	;wreg free
   955  000BEA  6E21               	movwf	sendData@CS,c
   956                           
   957                           ;FastTransfer.c: 66: int i;
   958                           ;FastTransfer.c: 67: for (i = 0; i < ring_buffer.count; i++) {
   959  000BEC  0E00               	movlw	0
   960  000BEE  6E23               	movwf	sendData@i+1,c
   961  000BF0  0E00               	movlw	0
   962  000BF2  6E22               	movwf	sendData@i,c
   963  000BF4  D002               	goto	l3076
   964  000BF6                     l3074:
   965  000BF6  4A22               	infsnz	sendData@i,f,c
   966  000BF8  2A23               	incf	sendData@i+1,f,c
   967  000BFA                     l3076:
   968  000BFA  0101               	movlb	1	; () banked
   969  000BFC  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
   970  000BFE  5C22               	subwf	sendData@i,w,c
   971  000C00  5023               	movf	sendData@i+1,w,c
   972  000C02  0A80               	xorlw	128
   973  000C04  6E1F               	movwf	??_sendData& (0+255),c
   974  000C06  0101               	movlb	1	; () banked
   975  000C08  51CD               	movf	(_ring_buffer+205)& (0+255),w,b
   976  000C0A  0A80               	xorlw	128
   977  000C0C  581F               	subwfb	??_sendData& (0+255),w,c
   978  000C0E  A0D8               	btfss	status,0,c
   979  000C10  D7F2               	goto	l3074
   980                           
   981                           ; BSR set to: 1
   982                           ;FastTransfer.c: 75: crcBufS_put(&crc_buffer, whereToSend, CS, 0);
   983                           
   984                           ; BSR set to: 1
   985                           
   986                           ;FastTransfer.c: 69: }
   987                           ;FastTransfer.c: 72: serial_write(CS);
   988  000C12  0EE8               	movlw	low _crc_buffer
   989  000C14  6E13               	movwf	crcBufS_put@_this,c
   990  000C16  0E00               	movlw	high _crc_buffer
   991  000C18  6E14               	movwf	crcBufS_put@_this+1,c
   992  000C1A  C020  F015         	movff	sendData@whereToSend,crcBufS_put@address
   993  000C1E  C021  F016         	movff	sendData@CS,crcBufS_put@oldCRC
   994  000C22  0E00               	movlw	0
   995  000C24  6E17               	movwf	crcBufS_put@status,c
   996  000C26  EC9F  F003         	call	_crcBufS_put	;wreg free
   997                           
   998                           ;FastTransfer.c: 78: FastTransfer_buffer_flush(&ring_buffer, 1);
   999  000C2A  0E00               	movlw	low _ring_buffer
  1000  000C2C  6E1B               	movwf	FastTransfer_buffer_flush@_this,c
  1001  000C2E  0E01               	movlw	high _ring_buffer
  1002  000C30  6E1C               	movwf	FastTransfer_buffer_flush@_this+1,c
  1003  000C32  0E00               	movlw	0
  1004  000C34  6E1E               	movwf	FastTransfer_buffer_flush@clearBuffer+1,c
  1005  000C36  0E01               	movlw	1
  1006  000C38  6E1D               	movwf	FastTransfer_buffer_flush@clearBuffer,c
  1007  000C3A  EC20  F006         	call	_FastTransfer_buffer_flush	;wreg free
  1008  000C3E  0012               	return		;funcret
  1009  000C40                     __end_of_sendData:
  1010                           	opt stack 0
  1011                           tblptru	equ	0xFF8
  1012                           tblptrh	equ	0xFF7
  1013                           tblptrl	equ	0xFF6
  1014                           tablat	equ	0xFF5
  1015                           intcon	equ	0xFF2
  1016                           postinc0	equ	0xFEE
  1017                           wreg	equ	0xFE8
  1018                           status	equ	0xFD8
  1019                           
  1020 ;; *************** function _crcBufS_put *****************
  1021 ;; Defined at:
  1022 ;;		line 321 in file "FastTransfer.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;  _this           2   18[COMRAM] PTR struct crcBufS
  1025 ;;		 -> crc_buffer(17), 
  1026 ;;  address         1   20[COMRAM] unsigned char 
  1027 ;;  oldCRC          1   21[COMRAM] unsigned char 
  1028 ;;  status          1   22[COMRAM] unsigned char 
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;		None
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      void 
  1033 ;; Registers used:
  1034 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1040 ;;      Params:         5       0       0       0       0       0       0
  1041 ;;      Locals:         0       0       0       0       0       0       0
  1042 ;;      Temps:          2       0       0       0       0       0       0
  1043 ;;      Totals:         7       0       0       0       0       0       0
  1044 ;;Total ram usage:        7 bytes
  1045 ;; Hardware stack levels used:    1
  1046 ;; Hardware stack levels required when called:    3
  1047 ;; This function calls:
  1048 ;;		Nothing
  1049 ;; This function is called by:
  1050 ;;		_sendData
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           	psect	text4
  1055  00073E                     __ptext4:
  1056                           	opt stack 0
  1057  00073E                     _crcBufS_put:
  1058                           	opt stack 24
  1059                           
  1060                           ;FastTransfer.c: 322: _this->buf[_this->head] = address;
  1061                           
  1062                           ;incstack = 0
  1063  00073E  EE20 F00F          	lfsr	2,15
  1064  000742  5013               	movf	crcBufS_put@_this,w,c
  1065  000744  26D9               	addwf	fsr2l,f,c
  1066  000746  5014               	movf	crcBufS_put@_this+1,w,c
  1067  000748  22DA               	addwfc	fsr2h,f,c
  1068  00074A  CFDE F018          	movff	postinc2,??_crcBufS_put
  1069  00074E  CFDD F019          	movff	postdec2,??_crcBufS_put+1
  1070  000752  5018               	movf	??_crcBufS_put,w,c
  1071  000754  2413               	addwf	crcBufS_put@_this,w,c
  1072  000756  6ED9               	movwf	fsr2l,c
  1073  000758  5019               	movf	??_crcBufS_put+1,w,c
  1074  00075A  2014               	addwfc	crcBufS_put@_this+1,w,c
  1075  00075C  6EDA               	movwf	fsr2h,c
  1076  00075E  C015  FFDF         	movff	crcBufS_put@address,indf2
  1077                           
  1078                           ;FastTransfer.c: 323: _this->head++;
  1079  000762  EE20 F00F          	lfsr	2,15
  1080  000766  5013               	movf	crcBufS_put@_this,w,c
  1081  000768  26D9               	addwf	fsr2l,f,c
  1082  00076A  5014               	movf	crcBufS_put@_this+1,w,c
  1083  00076C  22DA               	addwfc	fsr2h,f,c
  1084  00076E  2ADE               	incf	postinc2,f,c
  1085  000770  0E00               	movlw	0
  1086  000772  22DD               	addwfc	postdec2,f,c
  1087                           
  1088                           ;FastTransfer.c: 324: _this->buf[_this->head] = oldCRC;
  1089  000774  EE20 F00F          	lfsr	2,15
  1090  000778  5013               	movf	crcBufS_put@_this,w,c
  1091  00077A  26D9               	addwf	fsr2l,f,c
  1092  00077C  5014               	movf	crcBufS_put@_this+1,w,c
  1093  00077E  22DA               	addwfc	fsr2h,f,c
  1094  000780  CFDE F018          	movff	postinc2,??_crcBufS_put
  1095  000784  CFDD F019          	movff	postdec2,??_crcBufS_put+1
  1096  000788  5018               	movf	??_crcBufS_put,w,c
  1097  00078A  2413               	addwf	crcBufS_put@_this,w,c
  1098  00078C  6ED9               	movwf	fsr2l,c
  1099  00078E  5019               	movf	??_crcBufS_put+1,w,c
  1100  000790  2014               	addwfc	crcBufS_put@_this+1,w,c
  1101  000792  6EDA               	movwf	fsr2h,c
  1102  000794  C016  FFDF         	movff	crcBufS_put@oldCRC,indf2
  1103                           
  1104                           ;FastTransfer.c: 325: _this->head++;
  1105  000798  EE20 F00F          	lfsr	2,15
  1106  00079C  5013               	movf	crcBufS_put@_this,w,c
  1107  00079E  26D9               	addwf	fsr2l,f,c
  1108  0007A0  5014               	movf	crcBufS_put@_this+1,w,c
  1109  0007A2  22DA               	addwfc	fsr2h,f,c
  1110  0007A4  2ADE               	incf	postinc2,f,c
  1111  0007A6  0E00               	movlw	0
  1112  0007A8  22DD               	addwfc	postdec2,f,c
  1113                           
  1114                           ;FastTransfer.c: 326: _this->buf[_this->head] = status;
  1115  0007AA  EE20 F00F          	lfsr	2,15
  1116  0007AE  5013               	movf	crcBufS_put@_this,w,c
  1117  0007B0  26D9               	addwf	fsr2l,f,c
  1118  0007B2  5014               	movf	crcBufS_put@_this+1,w,c
  1119  0007B4  22DA               	addwfc	fsr2h,f,c
  1120  0007B6  CFDE F018          	movff	postinc2,??_crcBufS_put
  1121  0007BA  CFDD F019          	movff	postdec2,??_crcBufS_put+1
  1122  0007BE  5018               	movf	??_crcBufS_put,w,c
  1123  0007C0  2413               	addwf	crcBufS_put@_this,w,c
  1124  0007C2  6ED9               	movwf	fsr2l,c
  1125  0007C4  5019               	movf	??_crcBufS_put+1,w,c
  1126  0007C6  2014               	addwfc	crcBufS_put@_this+1,w,c
  1127  0007C8  6EDA               	movwf	fsr2h,c
  1128  0007CA  C017  FFDF         	movff	crcBufS_put@status,indf2
  1129                           
  1130                           ;FastTransfer.c: 327: _this->head++;
  1131  0007CE  EE20 F00F          	lfsr	2,15
  1132  0007D2  5013               	movf	crcBufS_put@_this,w,c
  1133  0007D4  26D9               	addwf	fsr2l,f,c
  1134  0007D6  5014               	movf	crcBufS_put@_this+1,w,c
  1135  0007D8  22DA               	addwfc	fsr2h,f,c
  1136  0007DA  2ADE               	incf	postinc2,f,c
  1137  0007DC  0E00               	movlw	0
  1138  0007DE  22DD               	addwfc	postdec2,f,c
  1139                           
  1140                           ;FastTransfer.c: 328: if (_this->head >= (5 * 3)) {
  1141  0007E0  EE20 F00F          	lfsr	2,15
  1142  0007E4  5013               	movf	crcBufS_put@_this,w,c
  1143  0007E6  26D9               	addwf	fsr2l,f,c
  1144  0007E8  5014               	movf	crcBufS_put@_this+1,w,c
  1145  0007EA  22DA               	addwfc	fsr2h,f,c
  1146  0007EC  0E01               	movlw	1
  1147  0007EE  BEDB               	btfsc	plusw2,7,c
  1148  0007F0  0012               	return	
  1149  0007F2  0E01               	movlw	1
  1150  0007F4  50DB               	movf	plusw2,w,c
  1151  0007F6  E104               	bnz	u950
  1152  0007F8  0E0F               	movlw	15
  1153  0007FA  5CDE               	subwf	postinc2,w,c
  1154  0007FC  A0D8               	btfss	status,0,c
  1155  0007FE  0012               	return	
  1156  000800                     u950:
  1157                           
  1158                           ;FastTransfer.c: 329: _this->head = 0;
  1159  000800  EE20 F00F          	lfsr	2,15
  1160  000804  5013               	movf	crcBufS_put@_this,w,c
  1161  000806  26D9               	addwf	fsr2l,f,c
  1162  000808  5014               	movf	crcBufS_put@_this+1,w,c
  1163  00080A  22DA               	addwfc	fsr2h,f,c
  1164  00080C  0E00               	movlw	0
  1165  00080E  6EDE               	movwf	postinc2,c
  1166  000810  0E00               	movlw	0
  1167  000812  6EDD               	movwf	postdec2,c
  1168  000814  0012               	return	
  1169  000816                     __end_of_crcBufS_put:
  1170                           	opt stack 0
  1171                           tblptru	equ	0xFF8
  1172                           tblptrh	equ	0xFF7
  1173                           tblptrl	equ	0xFF6
  1174                           tablat	equ	0xFF5
  1175                           intcon	equ	0xFF2
  1176                           postinc0	equ	0xFEE
  1177                           wreg	equ	0xFE8
  1178                           indf2	equ	0xFDF
  1179                           postinc2	equ	0xFDE
  1180                           postdec2	equ	0xFDD
  1181                           plusw2	equ	0xFDB
  1182                           fsr2h	equ	0xFDA
  1183                           fsr2l	equ	0xFD9
  1184                           status	equ	0xFD8
  1185                           
  1186 ;; *************** function _FastTransfer_buffer_flush *****************
  1187 ;; Defined at:
  1188 ;;		line 261 in file "FastTransfer.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;  _this           2   26[COMRAM] PTR struct ringBufS
  1191 ;;		 -> ring_buffer(206), 
  1192 ;;  clearBuffer     2   28[COMRAM] const int 
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;		None
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      void 
  1197 ;; Registers used:
  1198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1204 ;;      Params:         4       0       0       0       0       0       0
  1205 ;;      Locals:         0       0       0       0       0       0       0
  1206 ;;      Temps:          0       0       0       0       0       0       0
  1207 ;;      Totals:         4       0       0       0       0       0       0
  1208 ;;Total ram usage:        4 bytes
  1209 ;; Hardware stack levels used:    1
  1210 ;; Hardware stack levels required when called:    4
  1211 ;; This function calls:
  1212 ;;		_memset
  1213 ;; This function is called by:
  1214 ;;		_sendData
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	text5
  1219  000C40                     __ptext5:
  1220                           	opt stack 0
  1221  000C40                     _FastTransfer_buffer_flush:
  1222                           	opt stack 23
  1223                           
  1224                           ;FastTransfer.c: 262: _this->count = 0;
  1225                           
  1226                           ;incstack = 0
  1227  000C40  EE20 F0CC          	lfsr	2,204
  1228  000C44  501B               	movf	FastTransfer_buffer_flush@_this,w,c
  1229  000C46  26D9               	addwf	fsr2l,f,c
  1230  000C48  501C               	movf	FastTransfer_buffer_flush@_this+1,w,c
  1231  000C4A  22DA               	addwfc	fsr2h,f,c
  1232  000C4C  0E00               	movlw	0
  1233  000C4E  6EDE               	movwf	postinc2,c
  1234  000C50  0E00               	movlw	0
  1235  000C52  6EDD               	movwf	postdec2,c
  1236                           
  1237                           ;FastTransfer.c: 263: _this->head = 0;
  1238  000C54  EE20 F0C8          	lfsr	2,200
  1239  000C58  501B               	movf	FastTransfer_buffer_flush@_this,w,c
  1240  000C5A  26D9               	addwf	fsr2l,f,c
  1241  000C5C  501C               	movf	FastTransfer_buffer_flush@_this+1,w,c
  1242  000C5E  22DA               	addwfc	fsr2h,f,c
  1243  000C60  0E00               	movlw	0
  1244  000C62  6EDE               	movwf	postinc2,c
  1245  000C64  0E00               	movlw	0
  1246  000C66  6EDD               	movwf	postdec2,c
  1247                           
  1248                           ;FastTransfer.c: 264: _this->tail = 0;
  1249  000C68  EE20 F0CA          	lfsr	2,202
  1250  000C6C  501B               	movf	FastTransfer_buffer_flush@_this,w,c
  1251  000C6E  26D9               	addwf	fsr2l,f,c
  1252  000C70  501C               	movf	FastTransfer_buffer_flush@_this+1,w,c
  1253  000C72  22DA               	addwfc	fsr2h,f,c
  1254  000C74  0E00               	movlw	0
  1255  000C76  6EDE               	movwf	postinc2,c
  1256  000C78  0E00               	movlw	0
  1257  000C7A  6EDD               	movwf	postdec2,c
  1258                           
  1259                           ;FastTransfer.c: 265: if (clearBuffer) {
  1260  000C7C  501D               	movf	FastTransfer_buffer_flush@clearBuffer,w,c
  1261  000C7E  101E               	iorwf	FastTransfer_buffer_flush@clearBuffer+1,w,c
  1262  000C80  B4D8               	btfsc	status,2,c
  1263  000C82  0012               	return	
  1264                           
  1265                           ;FastTransfer.c: 266: memset(_this->buf, 0, sizeof (_this->buf));
  1266  000C84  C01B  F013         	movff	FastTransfer_buffer_flush@_this,memset@p1
  1267  000C88  C01C  F014         	movff	FastTransfer_buffer_flush@_this+1,memset@p1+1
  1268  000C8C  0E00               	movlw	0
  1269  000C8E  6E16               	movwf	memset@c+1,c
  1270  000C90  0E00               	movlw	0
  1271  000C92  6E15               	movwf	memset@c,c
  1272  000C94  0E00               	movlw	0
  1273  000C96  6E18               	movwf	memset@n+1,c
  1274  000C98  0EC8               	movlw	200
  1275  000C9A  6E17               	movwf	memset@n,c
  1276  000C9C  ECBE  F007         	call	_memset	;wreg free
  1277  000CA0  0012               	return	
  1278  000CA2                     __end_of_FastTransfer_buffer_flush:
  1279                           	opt stack 0
  1280                           tblptru	equ	0xFF8
  1281                           tblptrh	equ	0xFF7
  1282                           tblptrl	equ	0xFF6
  1283                           tablat	equ	0xFF5
  1284                           intcon	equ	0xFF2
  1285                           postinc0	equ	0xFEE
  1286                           wreg	equ	0xFE8
  1287                           indf2	equ	0xFDF
  1288                           postinc2	equ	0xFDE
  1289                           postdec2	equ	0xFDD
  1290                           plusw2	equ	0xFDB
  1291                           fsr2h	equ	0xFDA
  1292                           fsr2l	equ	0xFD9
  1293                           status	equ	0xFD8
  1294                           
  1295 ;; *************** function _memset *****************
  1296 ;; Defined at:
  1297 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\memset.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;  p1              2   18[COMRAM] PTR void 
  1300 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  1301 ;;  c               2   20[COMRAM] int 
  1302 ;;  n               2   22[COMRAM] unsigned int 
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;  p               2   24[COMRAM] PTR unsigned char 
  1305 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  2   18[COMRAM] PTR void 
  1308 ;; Registers used:
  1309 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1315 ;;      Params:         6       0       0       0       0       0       0
  1316 ;;      Locals:         2       0       0       0       0       0       0
  1317 ;;      Temps:          0       0       0       0       0       0       0
  1318 ;;      Totals:         8       0       0       0       0       0       0
  1319 ;;Total ram usage:        8 bytes
  1320 ;; Hardware stack levels used:    1
  1321 ;; Hardware stack levels required when called:    3
  1322 ;; This function calls:
  1323 ;;		Nothing
  1324 ;; This function is called by:
  1325 ;;		_FastTransfer_buffer_flush
  1326 ;;		_UART_buff_init
  1327 ;;		_UART_buff_flush
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           	psect	text6
  1332  000F7C                     __ptext6:
  1333                           	opt stack 0
  1334  000F7C                     _memset:
  1335                           	opt stack 23
  1336                           
  1337                           ;incstack = 0
  1338  000F7C  C013  F019         	movff	memset@p1,memset@p
  1339  000F80  C014  F01A         	movff	memset@p1+1,memset@p+1
  1340  000F84  D008               	goto	l2340
  1341  000F86                     l2336:
  1342  000F86  C019  FFD9         	movff	memset@p,fsr2l
  1343  000F8A  C01A  FFDA         	movff	memset@p+1,fsr2h
  1344  000F8E  C015  FFDF         	movff	memset@c,indf2
  1345  000F92  4A19               	infsnz	memset@p,f,c
  1346  000F94  2A1A               	incf	memset@p+1,f,c
  1347  000F96                     l2340:
  1348  000F96  0617               	decf	memset@n,f,c
  1349  000F98  A0D8               	btfss	status,0,c
  1350  000F9A  0618               	decf	memset@n+1,f,c
  1351  000F9C  2817               	incf	memset@n,w,c
  1352  000F9E  E1F3               	bnz	l2336
  1353  000FA0  2818               	incf	memset@n+1,w,c
  1354  000FA2  B4D8               	btfsc	status,2,c
  1355  000FA4  0012               	return	
  1356  000FA6  D7EF               	goto	l2336
  1357  000FA8                     __end_of_memset:
  1358                           	opt stack 0
  1359                           tblptru	equ	0xFF8
  1360                           tblptrh	equ	0xFF7
  1361                           tblptrl	equ	0xFF6
  1362                           tablat	equ	0xFF5
  1363                           intcon	equ	0xFF2
  1364                           postinc0	equ	0xFEE
  1365                           wreg	equ	0xFE8
  1366                           indf2	equ	0xFDF
  1367                           postinc2	equ	0xFDE
  1368                           postdec2	equ	0xFDD
  1369                           plusw2	equ	0xFDB
  1370                           fsr2h	equ	0xFDA
  1371                           fsr2l	equ	0xFD9
  1372                           status	equ	0xFD8
  1373                           
  1374 ;; *************** function _ToSend *****************
  1375 ;; Defined at:
  1376 ;;		line 216 in file "FastTransfer.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;  where           1    wreg     unsigned char 
  1379 ;;  what            2   31[COMRAM] unsigned int 
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;  where           1   33[COMRAM] unsigned char 
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  1    wreg      void 
  1384 ;; Registers used:
  1385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1391 ;;      Params:         2       0       0       0       0       0       0
  1392 ;;      Locals:         1       0       0       0       0       0       0
  1393 ;;      Temps:          0       0       0       0       0       0       0
  1394 ;;      Totals:         3       0       0       0       0       0       0
  1395 ;;Total ram usage:        3 bytes
  1396 ;; Hardware stack levels used:    1
  1397 ;; Hardware stack levels required when called:    5
  1398 ;; This function calls:
  1399 ;;		_FastTransfer_buffer_put
  1400 ;; This function is called by:
  1401 ;;		_respondECU
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	text7
  1406  00100E                     __ptext7:
  1407                           	opt stack 0
  1408  00100E                     _ToSend:
  1409                           	opt stack 23
  1410                           
  1411                           ;incstack = 0
  1412                           ;ToSend@where stored from wreg
  1413  00100E  6E22               	movwf	ToSend@where,c
  1414                           
  1415                           ;FastTransfer.c: 217: FastTransfer_buffer_put(&ring_buffer, where, what);
  1416  001010  0E00               	movlw	low _ring_buffer
  1417  001012  6E19               	movwf	FastTransfer_buffer_put@_this,c
  1418  001014  0E01               	movlw	high _ring_buffer
  1419  001016  6E1A               	movwf	FastTransfer_buffer_put@_this+1,c
  1420  001018  C022  F01B         	movff	ToSend@where,FastTransfer_buffer_put@towhere
  1421  00101C  C020  F01C         	movff	ToSend@what,FastTransfer_buffer_put@towhat
  1422  001020  C021  F01D         	movff	ToSend@what+1,FastTransfer_buffer_put@towhat+1
  1423  001024  EC9C  F001         	call	_FastTransfer_buffer_put	;wreg free
  1424  001028  0012               	return		;funcret
  1425  00102A                     __end_of_ToSend:
  1426                           	opt stack 0
  1427                           tblptru	equ	0xFF8
  1428                           tblptrh	equ	0xFF7
  1429                           tblptrl	equ	0xFF6
  1430                           tablat	equ	0xFF5
  1431                           intcon	equ	0xFF2
  1432                           postinc0	equ	0xFEE
  1433                           wreg	equ	0xFE8
  1434                           indf2	equ	0xFDF
  1435                           postinc2	equ	0xFDE
  1436                           postdec2	equ	0xFDD
  1437                           plusw2	equ	0xFDB
  1438                           fsr2h	equ	0xFDA
  1439                           fsr2l	equ	0xFD9
  1440                           status	equ	0xFD8
  1441                           
  1442 ;; *************** function _FastTransfer_buffer_put *****************
  1443 ;; Defined at:
  1444 ;;		line 223 in file "FastTransfer.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;  _this           2   24[COMRAM] PTR struct ringBufS
  1447 ;;		 -> ring_buffer(206), 
  1448 ;;  towhere         1   26[COMRAM] unsigned char 
  1449 ;;  towhat          2   27[COMRAM] unsigned int 
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;		None
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  1    wreg      void 
  1454 ;; Registers used:
  1455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1461 ;;      Params:         5       0       0       0       0       0       0
  1462 ;;      Locals:         0       0       0       0       0       0       0
  1463 ;;      Temps:          2       0       0       0       0       0       0
  1464 ;;      Totals:         7       0       0       0       0       0       0
  1465 ;;Total ram usage:        7 bytes
  1466 ;; Hardware stack levels used:    1
  1467 ;; Hardware stack levels required when called:    4
  1468 ;; This function calls:
  1469 ;;		_FastTransfer_buffer_modulo_inc
  1470 ;; This function is called by:
  1471 ;;		_ToSend
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475                           	psect	text8
  1476  000338                     __ptext8:
  1477                           	opt stack 0
  1478  000338                     _FastTransfer_buffer_put:
  1479                           	opt stack 23
  1480                           
  1481                           ;FastTransfer.c: 225: group.integer = towhat;
  1482                           
  1483                           ;incstack = 0
  1484  000338  C01C  F02E         	movff	FastTransfer_buffer_put@towhat,_group
  1485  00033C  C01D  F02F         	movff	FastTransfer_buffer_put@towhat+1,_group+1
  1486                           
  1487                           ;FastTransfer.c: 227: if (_this->count < (200 - 3)) {
  1488  000340  EE20 F0CC          	lfsr	2,204
  1489  000344  5019               	movf	FastTransfer_buffer_put@_this,w,c
  1490  000346  26D9               	addwf	fsr2l,f,c
  1491  000348  501A               	movf	FastTransfer_buffer_put@_this+1,w,c
  1492  00034A  22DA               	addwfc	fsr2h,f,c
  1493  00034C  0E01               	movlw	1
  1494  00034E  BEDB               	btfsc	plusw2,7,c
  1495  000350  D007               	goto	l2380
  1496  000352  0E01               	movlw	1
  1497  000354  50DB               	movf	plusw2,w,c
  1498  000356  E103               	bnz	u971
  1499  000358  0EC5               	movlw	197
  1500  00035A  5CDE               	subwf	postinc2,w,c
  1501  00035C  B0D8               	btfsc	status,0,c
  1502  00035E                     u971:
  1503  00035E  0012               	return	
  1504  000360                     l2380:
  1505                           
  1506                           ;FastTransfer.c: 228: _this->buf[_this->head] = towhere;
  1507  000360  EE20 F0C8          	lfsr	2,200
  1508  000364  5019               	movf	FastTransfer_buffer_put@_this,w,c
  1509  000366  26D9               	addwf	fsr2l,f,c
  1510  000368  501A               	movf	FastTransfer_buffer_put@_this+1,w,c
  1511  00036A  22DA               	addwfc	fsr2h,f,c
  1512  00036C  CFDE F01E          	movff	postinc2,??_FastTransfer_buffer_put
  1513  000370  CFDD F01F          	movff	postdec2,??_FastTransfer_buffer_put+1
  1514  000374  501E               	movf	??_FastTransfer_buffer_put,w,c
  1515  000376  2419               	addwf	FastTransfer_buffer_put@_this,w,c
  1516  000378  6ED9               	movwf	fsr2l,c
  1517  00037A  501F               	movf	??_FastTransfer_buffer_put+1,w,c
  1518  00037C  201A               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  1519  00037E  6EDA               	movwf	fsr2h,c
  1520  000380  C01B  FFDF         	movff	FastTransfer_buffer_put@towhere,indf2
  1521                           
  1522                           ;FastTransfer.c: 229: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  1523  000384  EE20 F0C8          	lfsr	2,200
  1524  000388  5019               	movf	FastTransfer_buffer_put@_this,w,c
  1525  00038A  26D9               	addwf	fsr2l,f,c
  1526  00038C  501A               	movf	FastTransfer_buffer_put@_this+1,w,c
  1527  00038E  22DA               	addwfc	fsr2h,f,c
  1528  000390  CFDE F013          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  1529  000394  CFDD F014          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  1530  000398  0E00               	movlw	0
  1531  00039A  6E16               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  1532  00039C  0EC8               	movlw	200
  1533  00039E  6E15               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  1534  0003A0  ECD4  F007         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  1535  0003A4  EE20 F0C8          	lfsr	2,200
  1536  0003A8  5019               	movf	FastTransfer_buffer_put@_this,w,c
  1537  0003AA  26D9               	addwf	fsr2l,f,c
  1538  0003AC  501A               	movf	FastTransfer_buffer_put@_this+1,w,c
  1539  0003AE  22DA               	addwfc	fsr2h,f,c
  1540  0003B0  C013  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  1541  0003B4  C014  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  1542                           
  1543                           ;FastTransfer.c: 230: ++_this->count;
  1544  0003B8  EE20 F0CC          	lfsr	2,204
  1545  0003BC  5019               	movf	FastTransfer_buffer_put@_this,w,c
  1546  0003BE  26D9               	addwf	fsr2l,f,c
  1547  0003C0  501A               	movf	FastTransfer_buffer_put@_this+1,w,c
  1548  0003C2  22DA               	addwfc	fsr2h,f,c
  1549  0003C4  2ADE               	incf	postinc2,f,c
  1550  0003C6  0E00               	movlw	0
  1551  0003C8  22DD               	addwfc	postdec2,f,c
  1552                           
  1553                           ;FastTransfer.c: 231: _this->buf[_this->head] = group.parts[0];
  1554  0003CA  EE20 F0C8          	lfsr	2,200
  1555  0003CE  5019               	movf	FastTransfer_buffer_put@_this,w,c
  1556  0003D0  26D9               	addwf	fsr2l,f,c
  1557  0003D2  501A               	movf	FastTransfer_buffer_put@_this+1,w,c
  1558  0003D4  22DA               	addwfc	fsr2h,f,c
  1559  0003D6  CFDE F01E          	movff	postinc2,??_FastTransfer_buffer_put
  1560  0003DA  CFDD F01F          	movff	postdec2,??_FastTransfer_buffer_put+1
  1561  0003DE  501E               	movf	??_FastTransfer_buffer_put,w,c
  1562  0003E0  2419               	addwf	FastTransfer_buffer_put@_this,w,c
  1563  0003E2  6ED9               	movwf	fsr2l,c
  1564  0003E4  501F               	movf	??_FastTransfer_buffer_put+1,w,c
  1565  0003E6  201A               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  1566  0003E8  6EDA               	movwf	fsr2h,c
  1567  0003EA  C02E  FFDF         	movff	_group,indf2
  1568                           
  1569                           ;FastTransfer.c: 232: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  1570  0003EE  EE20 F0C8          	lfsr	2,200
  1571  0003F2  5019               	movf	FastTransfer_buffer_put@_this,w,c
  1572  0003F4  26D9               	addwf	fsr2l,f,c
  1573  0003F6  501A               	movf	FastTransfer_buffer_put@_this+1,w,c
  1574  0003F8  22DA               	addwfc	fsr2h,f,c
  1575  0003FA  CFDE F013          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  1576  0003FE  CFDD F014          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  1577  000402  0E00               	movlw	0
  1578  000404  6E16               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  1579  000406  0EC8               	movlw	200
  1580  000408  6E15               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  1581  00040A  ECD4  F007         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  1582  00040E  EE20 F0C8          	lfsr	2,200
  1583  000412  5019               	movf	FastTransfer_buffer_put@_this,w,c
  1584  000414  26D9               	addwf	fsr2l,f,c
  1585  000416  501A               	movf	FastTransfer_buffer_put@_this+1,w,c
  1586  000418  22DA               	addwfc	fsr2h,f,c
  1587  00041A  C013  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  1588  00041E  C014  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  1589                           
  1590                           ;FastTransfer.c: 233: ++_this->count;
  1591  000422  EE20 F0CC          	lfsr	2,204
  1592  000426  5019               	movf	FastTransfer_buffer_put@_this,w,c
  1593  000428  26D9               	addwf	fsr2l,f,c
  1594  00042A  501A               	movf	FastTransfer_buffer_put@_this+1,w,c
  1595  00042C  22DA               	addwfc	fsr2h,f,c
  1596  00042E  2ADE               	incf	postinc2,f,c
  1597  000430  0E00               	movlw	0
  1598  000432  22DD               	addwfc	postdec2,f,c
  1599                           
  1600                           ;FastTransfer.c: 234: _this->buf[_this->head] = group.parts[1];
  1601  000434  EE20 F0C8          	lfsr	2,200
  1602  000438  5019               	movf	FastTransfer_buffer_put@_this,w,c
  1603  00043A  26D9               	addwf	fsr2l,f,c
  1604  00043C  501A               	movf	FastTransfer_buffer_put@_this+1,w,c
  1605  00043E  22DA               	addwfc	fsr2h,f,c
  1606  000440  CFDE F01E          	movff	postinc2,??_FastTransfer_buffer_put
  1607  000444  CFDD F01F          	movff	postdec2,??_FastTransfer_buffer_put+1
  1608  000448  501E               	movf	??_FastTransfer_buffer_put,w,c
  1609  00044A  2419               	addwf	FastTransfer_buffer_put@_this,w,c
  1610  00044C  6ED9               	movwf	fsr2l,c
  1611  00044E  501F               	movf	??_FastTransfer_buffer_put+1,w,c
  1612  000450  201A               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  1613  000452  6EDA               	movwf	fsr2h,c
  1614  000454  C02F  FFDF         	movff	_group+1,indf2
  1615                           
  1616                           ;FastTransfer.c: 235: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  1617  000458  EE20 F0C8          	lfsr	2,200
  1618  00045C  5019               	movf	FastTransfer_buffer_put@_this,w,c
  1619  00045E  26D9               	addwf	fsr2l,f,c
  1620  000460  501A               	movf	FastTransfer_buffer_put@_this+1,w,c
  1621  000462  22DA               	addwfc	fsr2h,f,c
  1622  000464  CFDE F013          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  1623  000468  CFDD F014          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  1624  00046C  0E00               	movlw	0
  1625  00046E  6E16               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  1626  000470  0EC8               	movlw	200
  1627  000472  6E15               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  1628  000474  ECD4  F007         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  1629  000478  EE20 F0C8          	lfsr	2,200
  1630  00047C  5019               	movf	FastTransfer_buffer_put@_this,w,c
  1631  00047E  26D9               	addwf	fsr2l,f,c
  1632  000480  501A               	movf	FastTransfer_buffer_put@_this+1,w,c
  1633  000482  22DA               	addwfc	fsr2h,f,c
  1634  000484  C013  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  1635  000488  C014  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  1636                           
  1637                           ;FastTransfer.c: 236: ++_this->count;
  1638  00048C  EE20 F0CC          	lfsr	2,204
  1639  000490  5019               	movf	FastTransfer_buffer_put@_this,w,c
  1640  000492  26D9               	addwf	fsr2l,f,c
  1641  000494  501A               	movf	FastTransfer_buffer_put@_this+1,w,c
  1642  000496  22DA               	addwfc	fsr2h,f,c
  1643  000498  2ADE               	incf	postinc2,f,c
  1644  00049A  0E00               	movlw	0
  1645  00049C  22DD               	addwfc	postdec2,f,c
  1646  00049E  0012               	return	
  1647  0004A0                     __end_of_FastTransfer_buffer_put:
  1648                           	opt stack 0
  1649                           tblptru	equ	0xFF8
  1650                           tblptrh	equ	0xFF7
  1651                           tblptrl	equ	0xFF6
  1652                           tablat	equ	0xFF5
  1653                           intcon	equ	0xFF2
  1654                           postinc0	equ	0xFEE
  1655                           wreg	equ	0xFE8
  1656                           indf2	equ	0xFDF
  1657                           postinc2	equ	0xFDE
  1658                           postdec2	equ	0xFDD
  1659                           plusw2	equ	0xFDB
  1660                           fsr2h	equ	0xFDA
  1661                           fsr2l	equ	0xFD9
  1662                           status	equ	0xFD8
  1663                           
  1664 ;; *************** function _FastTransfer_buffer_modulo_inc *****************
  1665 ;; Defined at:
  1666 ;;		line 273 in file "FastTransfer.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;  value           2   18[COMRAM] const unsigned int 
  1669 ;;  modulus         2   20[COMRAM] const unsigned int 
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;  my_value        2   22[COMRAM] unsigned int 
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  2   18[COMRAM] unsigned int 
  1674 ;; Registers used:
  1675 ;;		wreg, status,2, status,0
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1681 ;;      Params:         4       0       0       0       0       0       0
  1682 ;;      Locals:         2       0       0       0       0       0       0
  1683 ;;      Temps:          0       0       0       0       0       0       0
  1684 ;;      Totals:         6       0       0       0       0       0       0
  1685 ;;Total ram usage:        6 bytes
  1686 ;; Hardware stack levels used:    1
  1687 ;; Hardware stack levels required when called:    3
  1688 ;; This function calls:
  1689 ;;		Nothing
  1690 ;; This function is called by:
  1691 ;;		_FastTransfer_buffer_put
  1692 ;;		_FastTransfer_buffer_get
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           	psect	text9
  1697  000FA8                     __ptext9:
  1698                           	opt stack 0
  1699  000FA8                     _FastTransfer_buffer_modulo_inc:
  1700                           	opt stack 23
  1701                           
  1702                           ;FastTransfer.c: 274: unsigned int my_value = value + 1;
  1703                           
  1704                           ;incstack = 0
  1705  000FA8  0E01               	movlw	1
  1706  000FAA  2413               	addwf	FastTransfer_buffer_modulo_inc@value,w,c
  1707  000FAC  6E17               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  1708  000FAE  0E00               	movlw	0
  1709  000FB0  2014               	addwfc	FastTransfer_buffer_modulo_inc@value+1,w,c
  1710  000FB2  6E18               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  1711                           
  1712                           ;FastTransfer.c: 275: if (my_value >= modulus) {
  1713  000FB4  5015               	movf	FastTransfer_buffer_modulo_inc@modulus,w,c
  1714  000FB6  5C17               	subwf	FastTransfer_buffer_modulo_inc@my_value,w,c
  1715  000FB8  5016               	movf	FastTransfer_buffer_modulo_inc@modulus+1,w,c
  1716  000FBA  5818               	subwfb	FastTransfer_buffer_modulo_inc@my_value+1,w,c
  1717  000FBC  A0D8               	btfss	status,0,c
  1718  000FBE  D004               	goto	l2330
  1719                           
  1720                           ;FastTransfer.c: 276: my_value = 0;
  1721  000FC0  0E00               	movlw	0
  1722  000FC2  6E18               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  1723  000FC4  0E00               	movlw	0
  1724  000FC6  6E17               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  1725  000FC8                     l2330:
  1726                           
  1727                           ;FastTransfer.c: 277: }
  1728                           ;FastTransfer.c: 278: return (my_value);
  1729  000FC8  C017  F013         	movff	FastTransfer_buffer_modulo_inc@my_value,?_FastTransfer_buffer_modulo_inc
  1730  000FCC  C018  F014         	movff	FastTransfer_buffer_modulo_inc@my_value+1,?_FastTransfer_buffer_modulo_inc+1
  1731  000FD0  0012               	return	
  1732  000FD2                     __end_of_FastTransfer_buffer_modulo_inc:
  1733                           	opt stack 0
  1734                           tblptru	equ	0xFF8
  1735                           tblptrh	equ	0xFF7
  1736                           tblptrl	equ	0xFF6
  1737                           tablat	equ	0xFF5
  1738                           intcon	equ	0xFF2
  1739                           postinc0	equ	0xFEE
  1740                           wreg	equ	0xFE8
  1741                           indf2	equ	0xFDF
  1742                           postinc2	equ	0xFDE
  1743                           postdec2	equ	0xFDD
  1744                           plusw2	equ	0xFDB
  1745                           fsr2h	equ	0xFDA
  1746                           fsr2l	equ	0xFD9
  1747                           status	equ	0xFD8
  1748                           
  1749 ;; *************** function _receiveData *****************
  1750 ;; Defined at:
  1751 ;;		line 82 in file "FastTransfer.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;		None
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;  holder          3    5[BANK1 ] unsigned char [3]
  1756 ;;  crcHolder       1    1[BANK1 ] unsigned char 
  1757 ;;  holder          3    2[BANK1 ] unsigned char [3]
  1758 ;;  crcHolder       1    0[BANK1 ] unsigned char 
  1759 ;;  u               2    8[BANK1 ] int 
  1760 ;;  r               2   10[BANK1 ] int 
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      unsigned char 
  1763 ;; Registers used:
  1764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1770 ;;      Params:         0       0       0       0       0       0       0
  1771 ;;      Locals:         0       0      12       0       0       0       0
  1772 ;;      Temps:          0       6       0       0       0       0       0
  1773 ;;      Totals:         0       6      12       0       0       0       0
  1774 ;;Total ram usage:       18 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; Hardware stack levels required when called:    5
  1777 ;; This function calls:
  1778 ;;		_CRC8
  1779 ;;		_CRCcheck
  1780 ;; This function is called by:
  1781 ;;		_updateComms
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           	psect	text10
  1786  000098                     __ptext10:
  1787                           	opt stack 0
  1788  000098                     _receiveData:
  1789                           	opt stack 24
  1790                           
  1791                           ;FastTransfer.c: 87: if (serial_available() > 4) {
  1792                           
  1793                           ;incstack = 0
  1794  000098  D020               	goto	l3144
  1795  00009A                     l3134:
  1796  00009A  0101               	movlb	1	; () banked
  1797  00009C  4BD6               	infsnz	receiveData@u& (0+255),f,b
  1798  00009E  2BD7               	incf	(receiveData@u+1)& (0+255),f,b
  1799                           
  1800                           ; BSR set to: 1
  1801                           
  1802                           ; BSR set to: 1
  1803  0000A0  5047               	movf	_rx_len,w,c
  1804  0000A2  0100               	movlb	0	; () banked
  1805  0000A4  6FF9               	movwf	??_receiveData& (0+255),b
  1806  0000A6  6BFA               	clrf	(??_receiveData+1)& (0+255),b
  1807  0000A8  0E01               	movlw	1
  1808  0000AA  0100               	movlb	0	; () banked
  1809  0000AC  27F9               	addwf	??_receiveData& (0+255),f,b
  1810  0000AE  0E00               	movlw	0
  1811  0000B0  23FA               	addwfc	(??_receiveData+1)& (0+255),f,b
  1812  0000B2  0101               	movlb	1	; () banked
  1813  0000B4  51D6               	movf	receiveData@u& (0+255),w,b
  1814  0000B6  0100               	movlb	0	; () banked
  1815  0000B8  5DF9               	subwf	??_receiveData& (0+255),w,b
  1816  0000BA  0100               	movlb	0	; () banked
  1817  0000BC  51FA               	movf	(??_receiveData+1)& (0+255),w,b
  1818  0000BE  0A80               	xorlw	128
  1819  0000C0  0100               	movlb	0	; () banked
  1820  0000C2  6FFB               	movwf	(??_receiveData+2)& (0+255),b
  1821  0000C4  0101               	movlb	1	; () banked
  1822  0000C6  51D7               	movf	(receiveData@u+1)& (0+255),w,b
  1823  0000C8  0A80               	xorlw	128
  1824  0000CA  0100               	movlb	0	; () banked
  1825  0000CC  59FB               	subwfb	(??_receiveData+2)& (0+255),w,b
  1826  0000CE  B0D8               	btfsc	status,0,c
  1827  0000D0  D7E4               	goto	l3134
  1828                           
  1829                           ; BSR set to: 0
  1830                           ;FastTransfer.c: 109: }
  1831                           ;FastTransfer.c: 110: rx_len = 0;
  1832                           
  1833                           ; BSR set to: 0
  1834  0000D2  0E00               	movlw	0
  1835  0000D4  6E47               	movwf	_rx_len,c
  1836                           
  1837                           ; BSR set to: 0
  1838                           ;FastTransfer.c: 111: return 0;
  1839  0000D6  0E00               	movlw	0
  1840                           
  1841                           ; BSR set to: 0
  1842  0000D8  0012               	return	
  1843  0000DA                     l3144:
  1844                           
  1845                           ;FastTransfer.c: 112: }
  1846                           ;FastTransfer.c: 114: }
  1847                           ;FastTransfer.c: 115: }
  1848                           ;FastTransfer.c: 116: }
  1849                           ;FastTransfer.c: 119: if (rx_len != 0) {
  1850  0000DA  5047               	movf	_rx_len,w,c
  1851  0000DC  B4D8               	btfsc	status,2,c
  1852  0000DE  D12A               	goto	l3226
  1853                           
  1854                           ;FastTransfer.c: 122: if (rx_array_inx == 0) {
  1855  0000E0  5046               	movf	_rx_array_inx,w,c
  1856  0000E2  B4D8               	btfsc	status,2,c
  1857  0000E4                     l469:
  1858  0000E4  D7FF               	goto	l469
  1859                           
  1860                           ;FastTransfer.c: 135: }
  1861                           ;FastTransfer.c: 137: if (rx_len == (rx_array_inx - 1)) {
  1862                           
  1863                           ;FastTransfer.c: 134: rx_buffer[rx_array_inx++] = serial_read();
  1864                           
  1865                           ;FastTransfer.c: 129: }
  1866                           ;FastTransfer.c: 130: }
  1867                           ;FastTransfer.c: 133: while (serial_available() && rx_array_inx <= rx_len) {
  1868                           
  1869                           ;FastTransfer.c: 128: return 0;
  1870                           
  1871                           ;FastTransfer.c: 127: rx_array_inx = 0;
  1872                           
  1873                           ;FastTransfer.c: 126: rx_len = 0;
  1874                           
  1875                           ;FastTransfer.c: 125: CRCcheck();
  1876                           
  1877                           ;FastTransfer.c: 124: if (255 == serial_peek()) {
  1878  0000E6  5047               	movf	_rx_len,w,c
  1879  0000E8  0100               	movlb	0	; () banked
  1880  0000EA  6FF9               	movwf	??_receiveData& (0+255),b
  1881  0000EC  6BFA               	clrf	(??_receiveData+1)& (0+255),b
  1882  0000EE  0EFF               	movlw	255
  1883  0000F0  0100               	movlb	0	; () banked
  1884  0000F2  6FFB               	movwf	(??_receiveData+2)& (0+255),b
  1885  0000F4  0EFF               	movlw	255
  1886  0000F6  0100               	movlb	0	; () banked
  1887  0000F8  6FFC               	movwf	(??_receiveData+3)& (0+255),b
  1888  0000FA  5046               	movf	_rx_array_inx,w,c
  1889  0000FC  0100               	movlb	0	; () banked
  1890  0000FE  6FFD               	movwf	(??_receiveData+4)& (0+255),b
  1891  000100  6BFE               	clrf	(??_receiveData+5)& (0+255),b
  1892  000102  0100               	movlb	0	; () banked
  1893  000104  51FB               	movf	(??_receiveData+2)& (0+255),w,b
  1894  000106  0100               	movlb	0	; () banked
  1895  000108  27FD               	addwf	(??_receiveData+4)& (0+255),f,b
  1896  00010A  0100               	movlb	0	; () banked
  1897  00010C  51FC               	movf	(??_receiveData+3)& (0+255),w,b
  1898  00010E  0100               	movlb	0	; () banked
  1899  000110  23FE               	addwfc	(??_receiveData+5)& (0+255),f,b
  1900  000112  0100               	movlb	0	; () banked
  1901  000114  51F9               	movf	??_receiveData& (0+255),w,b
  1902  000116  0100               	movlb	0	; () banked
  1903  000118  19FD               	xorwf	(??_receiveData+4)& (0+255),w,b
  1904  00011A  E105               	bnz	u1851
  1905  00011C  0100               	movlb	0	; () banked
  1906  00011E  51FA               	movf	(??_receiveData+1)& (0+255),w,b
  1907  000120  0100               	movlb	0	; () banked
  1908  000122  19FE               	xorwf	(??_receiveData+5)& (0+255),w,b
  1909  000124  A4D8               	btfss	status,2,c
  1910  000126                     u1851:
  1911  000126  D106               	goto	l3226
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;FastTransfer.c: 140: calc_CS = CRC8(rx_buffer, rx_len);
  1915  000128  0E00               	movlw	low _rx_buffer
  1916  00012A  6E13               	movwf	CRC8@data,c
  1917  00012C  0E04               	movlw	high _rx_buffer
  1918  00012E  6E14               	movwf	CRC8@data+1,c
  1919  000130  C047  F015         	movff	_rx_len,CRC8@len
  1920  000134  EC49  F007         	call	_CRC8	;wreg free
  1921  000138  6E41               	movwf	_calc_CS,c
  1922                           
  1923                           ;FastTransfer.c: 144: if (calc_CS == rx_buffer[rx_array_inx - 1]) {
  1924  00013A  0EFF               	movlw	255
  1925  00013C  0100               	movlb	0	; () banked
  1926  00013E  6FF9               	movwf	??_receiveData& (0+255),b
  1927  000140  0EFF               	movlw	255
  1928  000142  0100               	movlb	0	; () banked
  1929  000144  6FFA               	movwf	(??_receiveData+1)& (0+255),b
  1930  000146  5046               	movf	_rx_array_inx,w,c
  1931  000148  0100               	movlb	0	; () banked
  1932  00014A  6FFB               	movwf	(??_receiveData+2)& (0+255),b
  1933  00014C  6BFC               	clrf	(??_receiveData+3)& (0+255),b
  1934  00014E  0100               	movlb	0	; () banked
  1935  000150  51F9               	movf	??_receiveData& (0+255),w,b
  1936  000152  0100               	movlb	0	; () banked
  1937  000154  27FB               	addwf	(??_receiveData+2)& (0+255),f,b
  1938  000156  0100               	movlb	0	; () banked
  1939  000158  51FA               	movf	(??_receiveData+1)& (0+255),w,b
  1940  00015A  0100               	movlb	0	; () banked
  1941  00015C  23FC               	addwfc	(??_receiveData+3)& (0+255),f,b
  1942  00015E  0E00               	movlw	low _rx_buffer
  1943  000160  0100               	movlb	0	; () banked
  1944  000162  25FB               	addwf	(??_receiveData+2)& (0+255),w,b
  1945  000164  6ED9               	movwf	fsr2l,c
  1946  000166  0E04               	movlw	high _rx_buffer
  1947  000168  0100               	movlb	0	; () banked
  1948  00016A  21FC               	addwfc	(??_receiveData+3)& (0+255),w,b
  1949  00016C  6EDA               	movwf	fsr2h,c
  1950  00016E  5041               	movf	_calc_CS,w,c
  1951  000170  18DE               	xorwf	postinc2,w,c
  1952  000172  A4D8               	btfss	status,2,c
  1953  000174  D0A8               	goto	l3206
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;FastTransfer.c: 147: int r;
  1957                           ;FastTransfer.c: 148: for (r = 0; r < rx_len; r = r + 3) {
  1958  000176  0E00               	movlw	0
  1959  000178  0101               	movlb	1	; () banked
  1960  00017A  6FD9               	movwf	(receiveData@r+1)& (0+255),b
  1961  00017C  0E00               	movlw	0
  1962  00017E  6FD8               	movwf	receiveData@r& (0+255),b
  1963  000180  D059               	goto	l3184
  1964  000182                     l3174:
  1965                           
  1966                           ;FastTransfer.c: 149: if (rx_buffer[r] < maxDataAddress) {
  1967  000182  0E00               	movlw	low _rx_buffer
  1968  000184  0101               	movlb	1	; () banked
  1969  000186  25D8               	addwf	receiveData@r& (0+255),w,b
  1970  000188  6ED9               	movwf	fsr2l,c
  1971  00018A  0E04               	movlw	high _rx_buffer
  1972  00018C  0101               	movlb	1	; () banked
  1973  00018E  21D9               	addwfc	(receiveData@r+1)& (0+255),w,b
  1974  000190  6EDA               	movwf	fsr2h,c
  1975  000192  5042               	movf	_maxDataAddress,w,c
  1976  000194  5CDE               	subwf	postinc2,w,c
  1977  000196  B0D8               	btfsc	status,0,c
  1978  000198  D041               	goto	l3180
  1979                           
  1980                           ; BSR set to: 1
  1981                           ;FastTransfer.c: 150: group.parts[0] = rx_buffer[r + 1];
  1982  00019A  0E01               	movlw	1
  1983  00019C  0101               	movlb	1	; () banked
  1984  00019E  25D8               	addwf	receiveData@r& (0+255),w,b
  1985  0001A0  0100               	movlb	0	; () banked
  1986  0001A2  6FF9               	movwf	??_receiveData& (0+255),b
  1987  0001A4  0E00               	movlw	0
  1988  0001A6  0101               	movlb	1	; () banked
  1989  0001A8  21D9               	addwfc	(receiveData@r+1)& (0+255),w,b
  1990  0001AA  0100               	movlb	0	; () banked
  1991  0001AC  6FFA               	movwf	(??_receiveData+1)& (0+255),b
  1992  0001AE  0E00               	movlw	low _rx_buffer
  1993  0001B0  0100               	movlb	0	; () banked
  1994  0001B2  25F9               	addwf	??_receiveData& (0+255),w,b
  1995  0001B4  6ED9               	movwf	fsr2l,c
  1996  0001B6  0E04               	movlw	high _rx_buffer
  1997  0001B8  0100               	movlb	0	; () banked
  1998  0001BA  21FA               	addwfc	(??_receiveData+1)& (0+255),w,b
  1999  0001BC  6EDA               	movwf	fsr2h,c
  2000  0001BE  50DF               	movf	indf2,w,c
  2001  0001C0  6E2E               	movwf	_group,c
  2002                           
  2003                           ;FastTransfer.c: 151: group.parts[1] = rx_buffer[r + 2];
  2004  0001C2  0E02               	movlw	2
  2005  0001C4  0101               	movlb	1	; () banked
  2006  0001C6  25D8               	addwf	receiveData@r& (0+255),w,b
  2007  0001C8  0100               	movlb	0	; () banked
  2008  0001CA  6FF9               	movwf	??_receiveData& (0+255),b
  2009  0001CC  0E00               	movlw	0
  2010  0001CE  0101               	movlb	1	; () banked
  2011  0001D0  21D9               	addwfc	(receiveData@r+1)& (0+255),w,b
  2012  0001D2  0100               	movlb	0	; () banked
  2013  0001D4  6FFA               	movwf	(??_receiveData+1)& (0+255),b
  2014  0001D6  0E00               	movlw	low _rx_buffer
  2015  0001D8  0100               	movlb	0	; () banked
  2016  0001DA  25F9               	addwf	??_receiveData& (0+255),w,b
  2017  0001DC  6ED9               	movwf	fsr2l,c
  2018  0001DE  0E04               	movlw	high _rx_buffer
  2019  0001E0  0100               	movlb	0	; () banked
  2020  0001E2  21FA               	addwfc	(??_receiveData+1)& (0+255),w,b
  2021  0001E4  6EDA               	movwf	fsr2h,c
  2022  0001E6  50DF               	movf	indf2,w,c
  2023  0001E8  6E2F               	movwf	_group+1,c
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;FastTransfer.c: 152: receiveArrayAddress[(rx_buffer[r])] = group.integer;
  2027  0001EA  0E00               	movlw	low _rx_buffer
  2028  0001EC  0101               	movlb	1	; () banked
  2029  0001EE  25D8               	addwf	receiveData@r& (0+255),w,b
  2030  0001F0  6ED9               	movwf	fsr2l,c
  2031  0001F2  0E04               	movlw	high _rx_buffer
  2032  0001F4  0101               	movlb	1	; () banked
  2033  0001F6  21D9               	addwfc	(receiveData@r+1)& (0+255),w,b
  2034  0001F8  6EDA               	movwf	fsr2h,c
  2035  0001FA  50DF               	movf	indf2,w,c
  2036  0001FC  0100               	movlb	0	; () banked
  2037  0001FE  6FF9               	movwf	??_receiveData& (0+255),b
  2038  000200  0100               	movlb	0	; () banked
  2039  000202  51F9               	movf	??_receiveData& (0+255),w,b
  2040  000204  0D02               	mullw	2
  2041  000206  50F3               	movf	prodl,w,c
  2042  000208  2432               	addwf	_receiveArrayAddress,w,c
  2043  00020A  6ED9               	movwf	fsr2l,c
  2044  00020C  50F4               	movf	prodh,w,c
  2045  00020E  2033               	addwfc	_receiveArrayAddress+1,w,c
  2046  000210  6EDA               	movwf	fsr2h,c
  2047  000212  C02E  FFDE         	movff	_group,postinc2
  2048  000216  C02F  FFDD         	movff	_group+1,postdec2
  2049                           
  2050                           ;FastTransfer.c: 153: } else {
  2051  00021A  D002               	goto	l3182
  2052  00021C                     l3180:
  2053                           
  2054                           ;FastTransfer.c: 154: dataAdressErrorCounter++;
  2055  00021C  4A2C               	infsnz	_dataAdressErrorCounter,f,c
  2056  00021E  2A2D               	incf	_dataAdressErrorCounter+1,f,c
  2057  000220                     l3182:
  2058  000220  0E03               	movlw	3
  2059  000222  0101               	movlb	1	; () banked
  2060  000224  25D8               	addwf	receiveData@r& (0+255),w,b
  2061  000226  0101               	movlb	1	; () banked
  2062  000228  6FD8               	movwf	receiveData@r& (0+255),b
  2063  00022A  0E00               	movlw	0
  2064  00022C  0101               	movlb	1	; () banked
  2065  00022E  21D9               	addwfc	(receiveData@r+1)& (0+255),w,b
  2066  000230  0101               	movlb	1	; () banked
  2067  000232  6FD9               	movwf	(receiveData@r+1)& (0+255),b
  2068  000234                     l3184:
  2069                           
  2070                           ; BSR set to: 1
  2071  000234  5047               	movf	_rx_len,w,c
  2072  000236  0100               	movlb	0	; () banked
  2073  000238  6FF9               	movwf	??_receiveData& (0+255),b
  2074  00023A  6BFA               	clrf	(??_receiveData+1)& (0+255),b
  2075  00023C  0100               	movlb	0	; () banked
  2076  00023E  51F9               	movf	??_receiveData& (0+255),w,b
  2077  000240  0101               	movlb	1	; () banked
  2078  000242  5DD8               	subwf	receiveData@r& (0+255),w,b
  2079  000244  0101               	movlb	1	; () banked
  2080  000246  51D9               	movf	(receiveData@r+1)& (0+255),w,b
  2081  000248  0A80               	xorlw	128
  2082  00024A  0100               	movlb	0	; () banked
  2083  00024C  6FFB               	movwf	(??_receiveData+2)& (0+255),b
  2084  00024E  0100               	movlb	0	; () banked
  2085  000250  51FA               	movf	(??_receiveData+1)& (0+255),w,b
  2086  000252  0A80               	xorlw	128
  2087  000254  0100               	movlb	0	; () banked
  2088  000256  59FB               	subwfb	(??_receiveData+2)& (0+255),w,b
  2089  000258  A0D8               	btfss	status,0,c
  2090  00025A  D793               	goto	l3174
  2091                           
  2092                           ; BSR set to: 0
  2093                           ;FastTransfer.c: 155: }
  2094                           ;FastTransfer.c: 156: }
  2095                           ;FastTransfer.c: 159: if (AKNAKsend) {
  2096                           
  2097                           ; BSR set to: 0
  2098  00025C  5040               	movf	_AKNAKsend,w,c
  2099  00025E  B4D8               	btfsc	status,2,c
  2100  000260  D02C               	goto	l3196
  2101                           
  2102                           ; BSR set to: 0
  2103                           ;FastTransfer.c: 160: unsigned char holder[3];
  2104                           ;FastTransfer.c: 161: holder[0] = 255;
  2105  000262  0101               	movlb	1	; () banked
  2106  000264  69D0               	setf	receiveData@holder& (0+255),b
  2107                           
  2108                           ; BSR set to: 1
  2109                           ;FastTransfer.c: 162: holder[1] = 1;
  2110  000266  0E01               	movlw	1
  2111  000268  0101               	movlb	1	; () banked
  2112  00026A  6FD1               	movwf	(receiveData@holder+1)& (0+255),b
  2113                           
  2114                           ; BSR set to: 1
  2115                           ;FastTransfer.c: 163: holder[2] = rx_buffer[rx_array_inx - 1];
  2116  00026C  0EFF               	movlw	255
  2117  00026E  0100               	movlb	0	; () banked
  2118  000270  6FF9               	movwf	??_receiveData& (0+255),b
  2119  000272  0EFF               	movlw	255
  2120  000274  0100               	movlb	0	; () banked
  2121  000276  6FFA               	movwf	(??_receiveData+1)& (0+255),b
  2122  000278  5046               	movf	_rx_array_inx,w,c
  2123  00027A  0100               	movlb	0	; () banked
  2124  00027C  6FFB               	movwf	(??_receiveData+2)& (0+255),b
  2125  00027E  6BFC               	clrf	(??_receiveData+3)& (0+255),b
  2126  000280  0100               	movlb	0	; () banked
  2127  000282  51F9               	movf	??_receiveData& (0+255),w,b
  2128  000284  0100               	movlb	0	; () banked
  2129  000286  27FB               	addwf	(??_receiveData+2)& (0+255),f,b
  2130  000288  0100               	movlb	0	; () banked
  2131  00028A  51FA               	movf	(??_receiveData+1)& (0+255),w,b
  2132  00028C  0100               	movlb	0	; () banked
  2133  00028E  23FC               	addwfc	(??_receiveData+3)& (0+255),f,b
  2134  000290  0E00               	movlw	low _rx_buffer
  2135  000292  0100               	movlb	0	; () banked
  2136  000294  25FB               	addwf	(??_receiveData+2)& (0+255),w,b
  2137  000296  6ED9               	movwf	fsr2l,c
  2138  000298  0E04               	movlw	high _rx_buffer
  2139  00029A  0100               	movlb	0	; () banked
  2140  00029C  21FC               	addwfc	(??_receiveData+3)& (0+255),w,b
  2141  00029E  6EDA               	movwf	fsr2h,c
  2142  0002A0  50DF               	movf	indf2,w,c
  2143  0002A2  0101               	movlb	1	; () banked
  2144  0002A4  6FD2               	movwf	(receiveData@holder+2)& (0+255),b
  2145                           
  2146                           ; BSR set to: 1
  2147                           ;FastTransfer.c: 173: serial_write(crcHolder);
  2148  0002A6  0ED0               	movlw	low receiveData@holder
  2149  0002A8  6E13               	movwf	CRC8@data,c
  2150  0002AA  0E01               	movlw	high receiveData@holder
  2151  0002AC  6E14               	movwf	CRC8@data+1,c
  2152  0002AE  0E03               	movlw	3
  2153  0002B0  6E15               	movwf	CRC8@len,c
  2154  0002B2  EC49  F007         	call	_CRC8	;wreg free
  2155  0002B6  0101               	movlb	1	; () banked
  2156  0002B8  6FCE               	movwf	receiveData@crcHolder& (0+255),b
  2157  0002BA                     l3196:
  2158                           
  2159                           ;FastTransfer.c: 174: }
  2160                           ;FastTransfer.c: 178: rx_len = 0;
  2161  0002BA  0E00               	movlw	0
  2162  0002BC  6E47               	movwf	_rx_len,c
  2163                           
  2164                           ;FastTransfer.c: 179: rx_array_inx = 0;
  2165  0002BE  0E00               	movlw	0
  2166  0002C0  6E46               	movwf	_rx_array_inx,c
  2167                           
  2168                           ;FastTransfer.c: 180: return 1;
  2169  0002C2  0E01               	movlw	1
  2170  0002C4  0012               	return	
  2171  0002C6                     l3206:
  2172                           
  2173                           ;FastTransfer.c: 182: crcErrorCounter++;
  2174  0002C6  4A2A               	infsnz	_crcErrorCounter,f,c
  2175  0002C8  2A2B               	incf	_crcErrorCounter+1,f,c
  2176                           
  2177                           ;FastTransfer.c: 184: if (AKNAKsend) {
  2178  0002CA  5040               	movf	_AKNAKsend,w,c
  2179  0002CC  B4D8               	btfsc	status,2,c
  2180  0002CE  D02C               	goto	l3218
  2181                           
  2182                           ;FastTransfer.c: 185: unsigned char holder[3];
  2183                           ;FastTransfer.c: 186: holder[0] = 255;
  2184  0002D0  0101               	movlb	1	; () banked
  2185  0002D2  69D3               	setf	receiveData@holder_1191& (0+255),b
  2186                           
  2187                           ; BSR set to: 1
  2188                           ;FastTransfer.c: 187: holder[1] = 2;
  2189  0002D4  0E02               	movlw	2
  2190  0002D6  0101               	movlb	1	; () banked
  2191  0002D8  6FD4               	movwf	(receiveData@holder_1191+1)& (0+255),b
  2192                           
  2193                           ; BSR set to: 1
  2194                           ;FastTransfer.c: 188: holder[2] = rx_buffer[rx_array_inx - 1];
  2195  0002DA  0EFF               	movlw	255
  2196  0002DC  0100               	movlb	0	; () banked
  2197  0002DE  6FF9               	movwf	??_receiveData& (0+255),b
  2198  0002E0  0EFF               	movlw	255
  2199  0002E2  0100               	movlb	0	; () banked
  2200  0002E4  6FFA               	movwf	(??_receiveData+1)& (0+255),b
  2201  0002E6  5046               	movf	_rx_array_inx,w,c
  2202  0002E8  0100               	movlb	0	; () banked
  2203  0002EA  6FFB               	movwf	(??_receiveData+2)& (0+255),b
  2204  0002EC  6BFC               	clrf	(??_receiveData+3)& (0+255),b
  2205  0002EE  0100               	movlb	0	; () banked
  2206  0002F0  51F9               	movf	??_receiveData& (0+255),w,b
  2207  0002F2  0100               	movlb	0	; () banked
  2208  0002F4  27FB               	addwf	(??_receiveData+2)& (0+255),f,b
  2209  0002F6  0100               	movlb	0	; () banked
  2210  0002F8  51FA               	movf	(??_receiveData+1)& (0+255),w,b
  2211  0002FA  0100               	movlb	0	; () banked
  2212  0002FC  23FC               	addwfc	(??_receiveData+3)& (0+255),f,b
  2213  0002FE  0E00               	movlw	low _rx_buffer
  2214  000300  0100               	movlb	0	; () banked
  2215  000302  25FB               	addwf	(??_receiveData+2)& (0+255),w,b
  2216  000304  6ED9               	movwf	fsr2l,c
  2217  000306  0E04               	movlw	high _rx_buffer
  2218  000308  0100               	movlb	0	; () banked
  2219  00030A  21FC               	addwfc	(??_receiveData+3)& (0+255),w,b
  2220  00030C  6EDA               	movwf	fsr2h,c
  2221  00030E  50DF               	movf	indf2,w,c
  2222  000310  0101               	movlb	1	; () banked
  2223  000312  6FD5               	movwf	(receiveData@holder_1191+2)& (0+255),b
  2224                           
  2225                           ; BSR set to: 1
  2226                           ;FastTransfer.c: 198: serial_write(crcHolder);
  2227  000314  0ED3               	movlw	low receiveData@holder_1191
  2228  000316  6E13               	movwf	CRC8@data,c
  2229  000318  0E01               	movlw	high receiveData@holder_1191
  2230  00031A  6E14               	movwf	CRC8@data+1,c
  2231  00031C  0E03               	movlw	3
  2232  00031E  6E15               	movwf	CRC8@len,c
  2233  000320  EC49  F007         	call	_CRC8	;wreg free
  2234  000324  0101               	movlb	1	; () banked
  2235  000326  6FCF               	movwf	receiveData@crcHolder_1192& (0+255),b
  2236  000328                     l3218:
  2237                           
  2238                           ;FastTransfer.c: 199: }
  2239                           ;FastTransfer.c: 202: rx_len = 0;
  2240  000328  0E00               	movlw	0
  2241  00032A  6E47               	movwf	_rx_len,c
  2242                           
  2243                           ;FastTransfer.c: 203: rx_array_inx = 0;
  2244  00032C  0E00               	movlw	0
  2245  00032E  6E46               	movwf	_rx_array_inx,c
  2246                           
  2247                           ;FastTransfer.c: 204: return 0;
  2248  000330  0E00               	movlw	0
  2249  000332  0012               	return	
  2250  000334                     l3226:
  2251                           
  2252                           ;FastTransfer.c: 205: }
  2253                           ;FastTransfer.c: 206: }
  2254                           ;FastTransfer.c: 207: }
  2255                           ;FastTransfer.c: 210: return 0;
  2256  000334  0E00               	movlw	0
  2257  000336  0012               	return	
  2258  000338                     __end_of_receiveData:
  2259                           	opt stack 0
  2260                           tblptru	equ	0xFF8
  2261                           tblptrh	equ	0xFF7
  2262                           tblptrl	equ	0xFF6
  2263                           tablat	equ	0xFF5
  2264                           prodh	equ	0xFF4
  2265                           prodl	equ	0xFF3
  2266                           intcon	equ	0xFF2
  2267                           postinc0	equ	0xFEE
  2268                           wreg	equ	0xFE8
  2269                           indf2	equ	0xFDF
  2270                           postinc2	equ	0xFDE
  2271                           postdec2	equ	0xFDD
  2272                           plusw2	equ	0xFDB
  2273                           fsr2h	equ	0xFDA
  2274                           fsr2l	equ	0xFD9
  2275                           status	equ	0xFD8
  2276                           
  2277 ;; *************** function _CRCcheck *****************
  2278 ;; Defined at:
  2279 ;;		line 373 in file "FastTransfer.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;		None
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;  rt              2   35[COMRAM] int 
  2284 ;;  arrayHolder     3   32[COMRAM] unsigned char [3]
  2285 ;;  calculatedCR    1   31[COMRAM] unsigned char 
  2286 ;;  SentCRC         1   30[COMRAM] unsigned char 
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  1    wreg      void 
  2289 ;; Registers used:
  2290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2296 ;;      Params:         0       0       0       0       0       0       0
  2297 ;;      Locals:         7       0       0       0       0       0       0
  2298 ;;      Temps:          0       0       0       0       0       0       0
  2299 ;;      Totals:         7       0       0       0       0       0       0
  2300 ;;Total ram usage:        7 bytes
  2301 ;; Hardware stack levels used:    1
  2302 ;; Hardware stack levels required when called:    4
  2303 ;; This function calls:
  2304 ;;		_CRC8
  2305 ;;		_crcBufS_get
  2306 ;;		_crcBufS_status_put
  2307 ;; This function is called by:
  2308 ;;		_receiveData
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           	psect	text11
  2313  000A6A                     __ptext11:
  2314                           	opt stack 0
  2315  000A6A                     _CRCcheck:
  2316                           	opt stack 24
  2317  000A6A                     l545:
  2318  000A6A  D7FF               	goto	l545
  2319  000A6C                     l3090:
  2320  000A6C  BE25               	btfsc	CRCcheck@rt+1,7,c
  2321  000A6E  D006               	goto	l3094
  2322  000A70  5025               	movf	CRCcheck@rt+1,w,c
  2323  000A72  E13E               	bnz	l556
  2324  000A74  0E05               	movlw	5
  2325  000A76  5C24               	subwf	CRCcheck@rt,w,c
  2326  000A78  B0D8               	btfsc	status,0,c
  2327  000A7A  0012               	return	
  2328  000A7C                     l3094:
  2329                           
  2330                           ;FastTransfer.c: 389: if (returnAddress == crcBufS_get(&crc_buffer, rt, 0)) {
  2331  000A7C  0EE8               	movlw	low _crc_buffer
  2332  000A7E  6E13               	movwf	crcBufS_get@_this,c
  2333  000A80  0E00               	movlw	high _crc_buffer
  2334  000A82  6E14               	movwf	crcBufS_get@_this+1,c
  2335  000A84  C024  F015         	movff	CRCcheck@rt,crcBufS_get@time
  2336  000A88  0E00               	movlw	0
  2337  000A8A  6E16               	movwf	crcBufS_get@space,c
  2338  000A8C  EC50  F002         	call	_crcBufS_get	;wreg free
  2339  000A90  1844               	xorwf	_returnAddress,w,c
  2340  000A92  A4D8               	btfss	status,2,c
  2341  000A94  D02A               	goto	l3108
  2342                           
  2343                           ;FastTransfer.c: 390: if (arrayHolder[2] == crcBufS_get(&crc_buffer, rt, 1)) {
  2344  000A96  0EE8               	movlw	low _crc_buffer
  2345  000A98  6E13               	movwf	crcBufS_get@_this,c
  2346  000A9A  0E00               	movlw	high _crc_buffer
  2347  000A9C  6E14               	movwf	crcBufS_get@_this+1,c
  2348  000A9E  C024  F015         	movff	CRCcheck@rt,crcBufS_get@time
  2349  000AA2  0E01               	movlw	1
  2350  000AA4  6E16               	movwf	crcBufS_get@space,c
  2351  000AA6  EC50  F002         	call	_crcBufS_get	;wreg free
  2352  000AAA  1823               	xorwf	CRCcheck@arrayHolder+2,w,c
  2353  000AAC  A4D8               	btfss	status,2,c
  2354  000AAE  D01D               	goto	l3108
  2355                           
  2356                           ;FastTransfer.c: 391: if (arrayHolder[1] == 1) {
  2357  000AB0  0422               	decf	CRCcheck@arrayHolder+1,w,c
  2358  000AB2  A4D8               	btfss	status,2,c
  2359  000AB4  D00B               	goto	l3104
  2360                           
  2361                           ;FastTransfer.c: 392: crcBufS_status_put(&crc_buffer, rt, 1);
  2362  000AB6  0EE8               	movlw	low _crc_buffer
  2363  000AB8  6E13               	movwf	crcBufS_status_put@_this,c
  2364  000ABA  0E00               	movlw	high _crc_buffer
  2365  000ABC  6E14               	movwf	crcBufS_status_put@_this+1,c
  2366  000ABE  C024  F015         	movff	CRCcheck@rt,crcBufS_status_put@time
  2367  000AC2  0E01               	movlw	1
  2368  000AC4  6E16               	movwf	crcBufS_status_put@status,c
  2369  000AC6  EC0B  F004         	call	_crcBufS_status_put	;wreg free
  2370                           
  2371                           ;FastTransfer.c: 393: break;
  2372  000ACA  0012               	return	
  2373  000ACC                     l3104:
  2374  000ACC  0E02               	movlw	2
  2375  000ACE  1822               	xorwf	CRCcheck@arrayHolder+1,w,c
  2376  000AD0  A4D8               	btfss	status,2,c
  2377  000AD2  D00B               	goto	l3108
  2378                           
  2379                           ;FastTransfer.c: 395: crcBufS_status_put(&crc_buffer, rt, 2);
  2380  000AD4  0EE8               	movlw	low _crc_buffer
  2381  000AD6  6E13               	movwf	crcBufS_status_put@_this,c
  2382  000AD8  0E00               	movlw	high _crc_buffer
  2383  000ADA  6E14               	movwf	crcBufS_status_put@_this+1,c
  2384  000ADC  C024  F015         	movff	CRCcheck@rt,crcBufS_status_put@time
  2385  000AE0  0E02               	movlw	2
  2386  000AE2  6E16               	movwf	crcBufS_status_put@status,c
  2387  000AE4  EC0B  F004         	call	_crcBufS_status_put	;wreg free
  2388                           
  2389                           ;FastTransfer.c: 396: break;
  2390  000AE8  0012               	return	
  2391  000AEA                     l3108:
  2392  000AEA  4A24               	infsnz	CRCcheck@rt,f,c
  2393  000AEC  2A25               	incf	CRCcheck@rt+1,f,c
  2394  000AEE  D7BE               	goto	l3090
  2395  000AF0                     l556:
  2396  000AF0  0012               	return		;funcret
  2397  000AF2                     __end_of_CRCcheck:
  2398                           	opt stack 0
  2399                           tblptru	equ	0xFF8
  2400                           tblptrh	equ	0xFF7
  2401                           tblptrl	equ	0xFF6
  2402                           tablat	equ	0xFF5
  2403                           prodh	equ	0xFF4
  2404                           prodl	equ	0xFF3
  2405                           intcon	equ	0xFF2
  2406                           postinc0	equ	0xFEE
  2407                           wreg	equ	0xFE8
  2408                           indf2	equ	0xFDF
  2409                           postinc2	equ	0xFDE
  2410                           postdec2	equ	0xFDD
  2411                           plusw2	equ	0xFDB
  2412                           fsr2h	equ	0xFDA
  2413                           fsr2l	equ	0xFD9
  2414                           status	equ	0xFD8
  2415                           
  2416 ;; *************** function _crcBufS_status_put *****************
  2417 ;; Defined at:
  2418 ;;		line 336 in file "FastTransfer.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;  _this           2   18[COMRAM] PTR struct crcBufS
  2421 ;;		 -> crc_buffer(17), 
  2422 ;;  time            1   20[COMRAM] unsigned char 
  2423 ;;  status          1   21[COMRAM] unsigned char 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;  wantedTime      2   26[COMRAM] int 
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  1    wreg      void 
  2428 ;; Registers used:
  2429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2435 ;;      Params:         4       0       0       0       0       0       0
  2436 ;;      Locals:         2       0       0       0       0       0       0
  2437 ;;      Temps:          4       0       0       0       0       0       0
  2438 ;;      Totals:        10       0       0       0       0       0       0
  2439 ;;Total ram usage:       10 bytes
  2440 ;; Hardware stack levels used:    1
  2441 ;; Hardware stack levels required when called:    3
  2442 ;; This function calls:
  2443 ;;		Nothing
  2444 ;; This function is called by:
  2445 ;;		_CRCcheck
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           	psect	text12
  2450  000816                     __ptext12:
  2451                           	opt stack 0
  2452  000816                     _crcBufS_status_put:
  2453                           	opt stack 24
  2454                           
  2455                           ;FastTransfer.c: 337: if (time >= 5) {
  2456                           
  2457                           ;incstack = 0
  2458  000816  0E04               	movlw	4
  2459  000818  6415               	cpfsgt	crcBufS_status_put@time,c
  2460  00081A  D002               	goto	l3060
  2461                           
  2462                           ;FastTransfer.c: 338: time = 5 - 1;
  2463  00081C  0E04               	movlw	4
  2464  00081E  6E15               	movwf	crcBufS_status_put@time,c
  2465  000820                     l3060:
  2466                           
  2467                           ;FastTransfer.c: 339: }
  2468                           ;FastTransfer.c: 340: time = time + 1;
  2469  000820  2815               	incf	crcBufS_status_put@time,w,c
  2470  000822  6E15               	movwf	crcBufS_status_put@time,c
  2471                           
  2472                           ;FastTransfer.c: 341: int wantedTime = time * 3;
  2473  000824  5015               	movf	crcBufS_status_put@time,w,c
  2474  000826  0D03               	mullw	3
  2475  000828  CFF3 F01B          	movff	prodl,crcBufS_status_put@wantedTime
  2476  00082C  CFF4 F01C          	movff	prodh,crcBufS_status_put@wantedTime+1
  2477                           
  2478                           ;FastTransfer.c: 342: if (wantedTime > _this->head) {
  2479  000830  EE20 F00F          	lfsr	2,15
  2480  000834  5013               	movf	crcBufS_status_put@_this,w,c
  2481  000836  26D9               	addwf	fsr2l,f,c
  2482  000838  5014               	movf	crcBufS_status_put@_this+1,w,c
  2483  00083A  22DA               	addwfc	fsr2h,f,c
  2484  00083C  501B               	movf	crcBufS_status_put@wantedTime,w,c
  2485  00083E  5CDE               	subwf	postinc2,w,c
  2486  000840  50DE               	movf	postinc2,w,c
  2487  000842  0A80               	xorlw	128
  2488  000844  6E19               	movwf	(??_crcBufS_status_put+2)& (0+255),c
  2489  000846  501C               	movf	crcBufS_status_put@wantedTime+1,w,c
  2490  000848  0A80               	xorlw	128
  2491  00084A  5819               	subwfb	(??_crcBufS_status_put+2)& (0+255),w,c
  2492  00084C  B0D8               	btfsc	status,0,c
  2493  00084E  D02B               	goto	l3068
  2494                           
  2495                           ;FastTransfer.c: 343: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  2496  000850  EE20 F00F          	lfsr	2,15
  2497  000854  5013               	movf	crcBufS_status_put@_this,w,c
  2498  000856  26D9               	addwf	fsr2l,f,c
  2499  000858  5014               	movf	crcBufS_status_put@_this+1,w,c
  2500  00085A  22DA               	addwfc	fsr2h,f,c
  2501  00085C  CFDE F017          	movff	postinc2,??_crcBufS_status_put
  2502  000860  CFDD F018          	movff	postdec2,??_crcBufS_status_put+1
  2503  000864  1E17               	comf	??_crcBufS_status_put,f,c
  2504  000866  1E18               	comf	??_crcBufS_status_put+1,f,c
  2505  000868  4A17               	infsnz	??_crcBufS_status_put,f,c
  2506  00086A  2A18               	incf	??_crcBufS_status_put+1,f,c
  2507  00086C  501B               	movf	crcBufS_status_put@wantedTime,w,c
  2508  00086E  2617               	addwf	??_crcBufS_status_put,f,c
  2509  000870  501C               	movf	crcBufS_status_put@wantedTime+1,w,c
  2510  000872  2218               	addwfc	??_crcBufS_status_put+1,f,c
  2511  000874  1E17               	comf	??_crcBufS_status_put,f,c
  2512  000876  1E18               	comf	??_crcBufS_status_put+1,f,c
  2513  000878  4A17               	infsnz	??_crcBufS_status_put,f,c
  2514  00087A  2A18               	incf	??_crcBufS_status_put+1,f,c
  2515  00087C  0E0F               	movlw	15
  2516  00087E  2417               	addwf	??_crcBufS_status_put,w,c
  2517  000880  6E1B               	movwf	crcBufS_status_put@wantedTime,c
  2518  000882  0E00               	movlw	0
  2519  000884  2018               	addwfc	??_crcBufS_status_put+1,w,c
  2520  000886  6E1C               	movwf	crcBufS_status_put@wantedTime+1,c
  2521                           
  2522                           ;FastTransfer.c: 344: _this->buf[(wantedTime + 2)] = status;
  2523  000888  0E02               	movlw	2
  2524  00088A  241B               	addwf	crcBufS_status_put@wantedTime,w,c
  2525  00088C  6E17               	movwf	??_crcBufS_status_put& (0+255),c
  2526  00088E  0E00               	movlw	0
  2527  000890  201C               	addwfc	crcBufS_status_put@wantedTime+1,w,c
  2528  000892  6E18               	movwf	(??_crcBufS_status_put+1)& (0+255),c
  2529  000894  5017               	movf	??_crcBufS_status_put,w,c
  2530  000896  2413               	addwf	crcBufS_status_put@_this,w,c
  2531  000898  6ED9               	movwf	fsr2l,c
  2532  00089A  5018               	movf	??_crcBufS_status_put+1,w,c
  2533  00089C  2014               	addwfc	crcBufS_status_put@_this+1,w,c
  2534  00089E  6EDA               	movwf	fsr2h,c
  2535  0008A0  C016  FFDF         	movff	crcBufS_status_put@status,indf2
  2536                           
  2537                           ;FastTransfer.c: 345: } else {
  2538  0008A4  0012               	return	
  2539  0008A6                     l3068:
  2540                           
  2541                           ;FastTransfer.c: 346: _this->buf[(_this->head - wantedTime) + 2] = status;
  2542  0008A6  EE20 F00F          	lfsr	2,15
  2543  0008AA  5013               	movf	crcBufS_status_put@_this,w,c
  2544  0008AC  26D9               	addwf	fsr2l,f,c
  2545  0008AE  5014               	movf	crcBufS_status_put@_this+1,w,c
  2546  0008B0  22DA               	addwfc	fsr2h,f,c
  2547  0008B2  CFDE F017          	movff	postinc2,??_crcBufS_status_put
  2548  0008B6  CFDD F018          	movff	postdec2,??_crcBufS_status_put+1
  2549  0008BA  C01B  F019         	movff	crcBufS_status_put@wantedTime,??_crcBufS_status_put+2
  2550  0008BE  C01C  F01A         	movff	crcBufS_status_put@wantedTime+1,??_crcBufS_status_put+3
  2551  0008C2  1E19               	comf	??_crcBufS_status_put+2,f,c
  2552  0008C4  1E1A               	comf	??_crcBufS_status_put+3,f,c
  2553  0008C6  4A19               	infsnz	??_crcBufS_status_put+2,f,c
  2554  0008C8  2A1A               	incf	??_crcBufS_status_put+3,f,c
  2555  0008CA  5017               	movf	??_crcBufS_status_put,w,c
  2556  0008CC  2619               	addwf	??_crcBufS_status_put+2,f,c
  2557  0008CE  5018               	movf	??_crcBufS_status_put+1,w,c
  2558  0008D0  221A               	addwfc	??_crcBufS_status_put+3,f,c
  2559  0008D2  0E02               	movlw	2
  2560  0008D4  2619               	addwf	??_crcBufS_status_put+2,f,c
  2561  0008D6  0E00               	movlw	0
  2562  0008D8  221A               	addwfc	??_crcBufS_status_put+3,f,c
  2563  0008DA  5019               	movf	??_crcBufS_status_put+2,w,c
  2564  0008DC  2413               	addwf	crcBufS_status_put@_this,w,c
  2565  0008DE  6ED9               	movwf	fsr2l,c
  2566  0008E0  501A               	movf	??_crcBufS_status_put+3,w,c
  2567  0008E2  2014               	addwfc	crcBufS_status_put@_this+1,w,c
  2568  0008E4  6EDA               	movwf	fsr2h,c
  2569  0008E6  C016  FFDF         	movff	crcBufS_status_put@status,indf2
  2570  0008EA  0012               	return	
  2571  0008EC                     __end_of_crcBufS_status_put:
  2572                           	opt stack 0
  2573                           tblptru	equ	0xFF8
  2574                           tblptrh	equ	0xFF7
  2575                           tblptrl	equ	0xFF6
  2576                           tablat	equ	0xFF5
  2577                           prodh	equ	0xFF4
  2578                           prodl	equ	0xFF3
  2579                           intcon	equ	0xFF2
  2580                           postinc0	equ	0xFEE
  2581                           wreg	equ	0xFE8
  2582                           indf2	equ	0xFDF
  2583                           postinc2	equ	0xFDE
  2584                           postdec2	equ	0xFDD
  2585                           plusw2	equ	0xFDB
  2586                           fsr2h	equ	0xFDA
  2587                           fsr2l	equ	0xFD9
  2588                           status	equ	0xFD8
  2589                           
  2590 ;; *************** function _crcBufS_get *****************
  2591 ;; Defined at:
  2592 ;;		line 353 in file "FastTransfer.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;  _this           2   18[COMRAM] PTR struct crcBufS
  2595 ;;		 -> crc_buffer(17), 
  2596 ;;  time            1   20[COMRAM] unsigned char 
  2597 ;;  space           1   21[COMRAM] unsigned char 
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;  wantedTime      2   28[COMRAM] int 
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  1    wreg      unsigned char 
  2602 ;; Registers used:
  2603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2609 ;;      Params:         4       0       0       0       0       0       0
  2610 ;;      Locals:         2       0       0       0       0       0       0
  2611 ;;      Temps:          6       0       0       0       0       0       0
  2612 ;;      Totals:        12       0       0       0       0       0       0
  2613 ;;Total ram usage:       12 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; Hardware stack levels required when called:    3
  2616 ;; This function calls:
  2617 ;;		Nothing
  2618 ;; This function is called by:
  2619 ;;		_CRCcheck
  2620 ;;		_AKNAK
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           	psect	text13
  2625  0004A0                     __ptext13:
  2626                           	opt stack 0
  2627  0004A0                     _crcBufS_get:
  2628                           	opt stack 24
  2629                           
  2630                           ;FastTransfer.c: 354: if (time >= 5) {
  2631                           
  2632                           ;incstack = 0
  2633  0004A0  0E04               	movlw	4
  2634  0004A2  6415               	cpfsgt	crcBufS_get@time,c
  2635  0004A4  D002               	goto	l3036
  2636                           
  2637                           ;FastTransfer.c: 355: time = 5 - 1;
  2638  0004A6  0E04               	movlw	4
  2639  0004A8  6E15               	movwf	crcBufS_get@time,c
  2640  0004AA                     l3036:
  2641                           
  2642                           ;FastTransfer.c: 356: }
  2643                           ;FastTransfer.c: 357: if (space >= 3) {
  2644  0004AA  0E02               	movlw	2
  2645  0004AC  6416               	cpfsgt	crcBufS_get@space,c
  2646  0004AE  D002               	goto	l3040
  2647                           
  2648                           ;FastTransfer.c: 358: space = 3 - 1;
  2649  0004B0  0E02               	movlw	2
  2650  0004B2  6E16               	movwf	crcBufS_get@space,c
  2651  0004B4                     l3040:
  2652                           
  2653                           ;FastTransfer.c: 359: }
  2654                           ;FastTransfer.c: 360: time = time + 1;
  2655  0004B4  2815               	incf	crcBufS_get@time,w,c
  2656  0004B6  6E15               	movwf	crcBufS_get@time,c
  2657                           
  2658                           ;FastTransfer.c: 361: int wantedTime = time * 3;
  2659  0004B8  5015               	movf	crcBufS_get@time,w,c
  2660  0004BA  0D03               	mullw	3
  2661  0004BC  CFF3 F01D          	movff	prodl,crcBufS_get@wantedTime
  2662  0004C0  CFF4 F01E          	movff	prodh,crcBufS_get@wantedTime+1
  2663                           
  2664                           ;FastTransfer.c: 362: if (wantedTime > _this->head) {
  2665  0004C4  EE20 F00F          	lfsr	2,15
  2666  0004C8  5013               	movf	crcBufS_get@_this,w,c
  2667  0004CA  26D9               	addwf	fsr2l,f,c
  2668  0004CC  5014               	movf	crcBufS_get@_this+1,w,c
  2669  0004CE  22DA               	addwfc	fsr2h,f,c
  2670  0004D0  501D               	movf	crcBufS_get@wantedTime,w,c
  2671  0004D2  5CDE               	subwf	postinc2,w,c
  2672  0004D4  50DE               	movf	postinc2,w,c
  2673  0004D6  0A80               	xorlw	128
  2674  0004D8  6E19               	movwf	(??_crcBufS_get+2)& (0+255),c
  2675  0004DA  501E               	movf	crcBufS_get@wantedTime+1,w,c
  2676  0004DC  0A80               	xorlw	128
  2677  0004DE  5819               	subwfb	(??_crcBufS_get+2)& (0+255),w,c
  2678  0004E0  B0D8               	btfsc	status,0,c
  2679  0004E2  D02A               	goto	l3052
  2680                           
  2681                           ;FastTransfer.c: 363: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  2682  0004E4  EE20 F00F          	lfsr	2,15
  2683  0004E8  5013               	movf	crcBufS_get@_this,w,c
  2684  0004EA  26D9               	addwf	fsr2l,f,c
  2685  0004EC  5014               	movf	crcBufS_get@_this+1,w,c
  2686  0004EE  22DA               	addwfc	fsr2h,f,c
  2687  0004F0  CFDE F017          	movff	postinc2,??_crcBufS_get
  2688  0004F4  CFDD F018          	movff	postdec2,??_crcBufS_get+1
  2689  0004F8  1E17               	comf	??_crcBufS_get,f,c
  2690  0004FA  1E18               	comf	??_crcBufS_get+1,f,c
  2691  0004FC  4A17               	infsnz	??_crcBufS_get,f,c
  2692  0004FE  2A18               	incf	??_crcBufS_get+1,f,c
  2693  000500  501D               	movf	crcBufS_get@wantedTime,w,c
  2694  000502  2617               	addwf	??_crcBufS_get,f,c
  2695  000504  501E               	movf	crcBufS_get@wantedTime+1,w,c
  2696  000506  2218               	addwfc	??_crcBufS_get+1,f,c
  2697  000508  1E17               	comf	??_crcBufS_get,f,c
  2698  00050A  1E18               	comf	??_crcBufS_get+1,f,c
  2699  00050C  4A17               	infsnz	??_crcBufS_get,f,c
  2700  00050E  2A18               	incf	??_crcBufS_get+1,f,c
  2701  000510  0E0F               	movlw	15
  2702  000512  2417               	addwf	??_crcBufS_get,w,c
  2703  000514  6E1D               	movwf	crcBufS_get@wantedTime,c
  2704  000516  0E00               	movlw	0
  2705  000518  2018               	addwfc	??_crcBufS_get+1,w,c
  2706  00051A  6E1E               	movwf	crcBufS_get@wantedTime+1,c
  2707                           
  2708                           ;FastTransfer.c: 364: return (_this->buf[(wantedTime + space)]);
  2709  00051C  5016               	movf	crcBufS_get@space,w,c
  2710  00051E  241D               	addwf	crcBufS_get@wantedTime,w,c
  2711  000520  6E17               	movwf	??_crcBufS_get& (0+255),c
  2712  000522  0E00               	movlw	0
  2713  000524  201E               	addwfc	crcBufS_get@wantedTime+1,w,c
  2714  000526  6E18               	movwf	(??_crcBufS_get+1)& (0+255),c
  2715  000528  5017               	movf	??_crcBufS_get,w,c
  2716  00052A  2413               	addwf	crcBufS_get@_this,w,c
  2717  00052C  6ED9               	movwf	fsr2l,c
  2718  00052E  5018               	movf	??_crcBufS_get+1,w,c
  2719  000530  2014               	addwfc	crcBufS_get@_this+1,w,c
  2720  000532  6EDA               	movwf	fsr2h,c
  2721  000534  50DF               	movf	indf2,w,c
  2722                           
  2723                           ;FastTransfer.c: 365: } else {
  2724  000536  0012               	return	
  2725  000538                     l3052:
  2726                           
  2727                           ;FastTransfer.c: 366: return (_this->buf[(_this->head - wantedTime) + space]);
  2728  000538  EE20 F00F          	lfsr	2,15
  2729  00053C  5013               	movf	crcBufS_get@_this,w,c
  2730  00053E  26D9               	addwf	fsr2l,f,c
  2731  000540  5014               	movf	crcBufS_get@_this+1,w,c
  2732  000542  22DA               	addwfc	fsr2h,f,c
  2733  000544  CFDE F017          	movff	postinc2,??_crcBufS_get
  2734  000548  CFDD F018          	movff	postdec2,??_crcBufS_get+1
  2735  00054C  C01D  F019         	movff	crcBufS_get@wantedTime,??_crcBufS_get+2
  2736  000550  C01E  F01A         	movff	crcBufS_get@wantedTime+1,??_crcBufS_get+3
  2737  000554  1E19               	comf	??_crcBufS_get+2,f,c
  2738  000556  1E1A               	comf	??_crcBufS_get+3,f,c
  2739  000558  4A19               	infsnz	??_crcBufS_get+2,f,c
  2740  00055A  2A1A               	incf	??_crcBufS_get+3,f,c
  2741  00055C  5016               	movf	crcBufS_get@space,w,c
  2742  00055E  6E1B               	movwf	(??_crcBufS_get+4)& (0+255),c
  2743  000560  6A1C               	clrf	(??_crcBufS_get+5)& (0+255),c
  2744  000562  5019               	movf	??_crcBufS_get+2,w,c
  2745  000564  261B               	addwf	??_crcBufS_get+4,f,c
  2746  000566  501A               	movf	??_crcBufS_get+3,w,c
  2747  000568  221C               	addwfc	??_crcBufS_get+5,f,c
  2748  00056A  5017               	movf	??_crcBufS_get,w,c
  2749  00056C  261B               	addwf	??_crcBufS_get+4,f,c
  2750  00056E  5018               	movf	??_crcBufS_get+1,w,c
  2751  000570  221C               	addwfc	??_crcBufS_get+5,f,c
  2752  000572  501B               	movf	??_crcBufS_get+4,w,c
  2753  000574  2413               	addwf	crcBufS_get@_this,w,c
  2754  000576  6ED9               	movwf	fsr2l,c
  2755  000578  501C               	movf	??_crcBufS_get+5,w,c
  2756  00057A  2014               	addwfc	crcBufS_get@_this+1,w,c
  2757  00057C  6EDA               	movwf	fsr2h,c
  2758  00057E  50DF               	movf	indf2,w,c
  2759  000580  0012               	return	
  2760  000582                     __end_of_crcBufS_get:
  2761                           	opt stack 0
  2762                           tblptru	equ	0xFF8
  2763                           tblptrh	equ	0xFF7
  2764                           tblptrl	equ	0xFF6
  2765                           tablat	equ	0xFF5
  2766                           prodh	equ	0xFF4
  2767                           prodl	equ	0xFF3
  2768                           intcon	equ	0xFF2
  2769                           postinc0	equ	0xFEE
  2770                           wreg	equ	0xFE8
  2771                           indf2	equ	0xFDF
  2772                           postinc2	equ	0xFDE
  2773                           postdec2	equ	0xFDD
  2774                           plusw2	equ	0xFDB
  2775                           fsr2h	equ	0xFDA
  2776                           fsr2l	equ	0xFD9
  2777                           status	equ	0xFD8
  2778                           
  2779 ;; *************** function _CRC8 *****************
  2780 ;; Defined at:
  2781 ;;		line 34 in file "FastTransfer.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;  data            2   18[COMRAM] PTR const unsigned char 
  2784 ;;		 -> NULL(0), CRCcheck@arrayHolder(3), receiveData@holder_1191(3), receiveData@holder(3), 
  2785 ;;		 -> rx_buffer(200), ring_buffer(206), 
  2786 ;;  len             1   20[COMRAM] unsigned char 
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;  sum             1   21[COMRAM] unsigned char 
  2789 ;;  tempI           1   23[COMRAM] unsigned char 
  2790 ;;  extract         1   22[COMRAM] unsigned char 
  2791 ;;  crc             1   24[COMRAM] unsigned char 
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      unsigned char 
  2794 ;; Registers used:
  2795 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2801 ;;      Params:         3       0       0       0       0       0       0
  2802 ;;      Locals:         4       0       0       0       0       0       0
  2803 ;;      Temps:          0       0       0       0       0       0       0
  2804 ;;      Totals:         7       0       0       0       0       0       0
  2805 ;;Total ram usage:        7 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; Hardware stack levels required when called:    3
  2808 ;; This function calls:
  2809 ;;		Nothing
  2810 ;; This function is called by:
  2811 ;;		_sendData
  2812 ;;		_receiveData
  2813 ;;		_CRCcheck
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           
  2817                           	psect	text14
  2818  000E92                     __ptext14:
  2819                           	opt stack 0
  2820  000E92                     _CRC8:
  2821                           	opt stack 24
  2822                           
  2823                           ;FastTransfer.c: 35: unsigned char crc = 0x00;
  2824                           
  2825                           ;incstack = 0
  2826  000E92  0E00               	movlw	0
  2827  000E94  6E19               	movwf	CRC8@crc,c
  2828                           
  2829                           ;FastTransfer.c: 36: while (len--) {
  2830  000E96  D01C               	goto	l3026
  2831  000E98                     l3010:
  2832                           
  2833                           ;FastTransfer.c: 37: unsigned char extract = *data++;
  2834  000E98  C013  FFD9         	movff	CRC8@data,fsr2l
  2835  000E9C  C014  FFDA         	movff	CRC8@data+1,fsr2h
  2836  000EA0  50DF               	movf	indf2,w,c
  2837  000EA2  6E17               	movwf	CRC8@extract,c
  2838  000EA4  4A13               	infsnz	CRC8@data,f,c
  2839  000EA6  2A14               	incf	CRC8@data+1,f,c
  2840                           
  2841                           ;FastTransfer.c: 38: unsigned char tempI;
  2842                           ;FastTransfer.c: 39: for (tempI = 8; tempI; tempI--) {
  2843  000EA8  0E08               	movlw	8
  2844  000EAA  6E18               	movwf	CRC8@tempI,c
  2845  000EAC  D00E               	goto	l3024
  2846  000EAE                     l3016:
  2847                           
  2848                           ;FastTransfer.c: 40: unsigned char sum = (crc ^ extract) & 0x01;
  2849  000EAE  5019               	movf	CRC8@crc,w,c
  2850  000EB0  1817               	xorwf	CRC8@extract,w,c
  2851  000EB2  0B01               	andlw	1
  2852  000EB4  6E16               	movwf	CRC8@sum,c
  2853                           
  2854                           ;FastTransfer.c: 41: crc >>= 1;
  2855  000EB6  90D8               	bcf	status,0,c
  2856  000EB8  3219               	rrcf	CRC8@crc,f,c
  2857                           
  2858                           ;FastTransfer.c: 42: if (sum) {
  2859  000EBA  5016               	movf	CRC8@sum,w,c
  2860  000EBC  B4D8               	btfsc	status,2,c
  2861  000EBE  D002               	goto	l442
  2862                           
  2863                           ;FastTransfer.c: 43: crc ^= 0x8C;
  2864  000EC0  0E8C               	movlw	140
  2865  000EC2  1A19               	xorwf	CRC8@crc,f,c
  2866  000EC4                     l442:
  2867                           
  2868                           ;FastTransfer.c: 44: }
  2869                           ;FastTransfer.c: 45: extract >>= 1;
  2870  000EC4  90D8               	bcf	status,0,c
  2871  000EC6  3217               	rrcf	CRC8@extract,f,c
  2872  000EC8  0618               	decf	CRC8@tempI,f,c
  2873  000ECA                     l3024:
  2874  000ECA  5018               	movf	CRC8@tempI,w,c
  2875  000ECC  A4D8               	btfss	status,2,c
  2876  000ECE  D7EF               	goto	l3016
  2877  000ED0                     l3026:
  2878  000ED0  0615               	decf	CRC8@len,f,c
  2879  000ED2  2815               	incf	CRC8@len,w,c
  2880  000ED4  A4D8               	btfss	status,2,c
  2881  000ED6  D7E0               	goto	l3010
  2882                           
  2883                           ;FastTransfer.c: 46: }
  2884                           ;FastTransfer.c: 47: }
  2885                           ;FastTransfer.c: 48: return crc;
  2886  000ED8  5019               	movf	CRC8@crc,w,c
  2887  000EDA  0012               	return	
  2888  000EDC                     __end_of_CRC8:
  2889                           	opt stack 0
  2890                           tblptru	equ	0xFF8
  2891                           tblptrh	equ	0xFF7
  2892                           tblptrl	equ	0xFF6
  2893                           tablat	equ	0xFF5
  2894                           prodh	equ	0xFF4
  2895                           prodl	equ	0xFF3
  2896                           intcon	equ	0xFF2
  2897                           postinc0	equ	0xFEE
  2898                           wreg	equ	0xFE8
  2899                           indf2	equ	0xFDF
  2900                           postinc2	equ	0xFDE
  2901                           postdec2	equ	0xFDD
  2902                           plusw2	equ	0xFDB
  2903                           fsr2h	equ	0xFDA
  2904                           fsr2l	equ	0xFD9
  2905                           status	equ	0xFD8
  2906                           
  2907 ;; *************** function _processPowerRequest *****************
  2908 ;; Defined at:
  2909 ;;		line 33 in file "Communications.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;  powerSet        2   31[COMRAM] int 
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;		None
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  1    wreg      void 
  2916 ;; Registers used:
  2917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2923 ;;      Params:         2       0       0       0       0       0       0
  2924 ;;      Locals:         0       0       0       0       0       0       0
  2925 ;;      Temps:          0       0       0       0       0       0       0
  2926 ;;      Totals:         2       0       0       0       0       0       0
  2927 ;;Total ram usage:        2 bytes
  2928 ;; Hardware stack levels used:    1
  2929 ;; Hardware stack levels required when called:    6
  2930 ;; This function calls:
  2931 ;;		_EnableSlavePower
  2932 ;;		_Update
  2933 ;; This function is called by:
  2934 ;;		_updateComms
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text15
  2939  0009BA                     __ptext15:
  2940                           	opt stack 0
  2941  0009BA                     _processPowerRequest:
  2942                           	opt stack 23
  2943                           
  2944                           ;Communications.c: 35: if (powerSet & 0x01) EnableSlavePower(BMM, ON);
  2945                           
  2946                           ;incstack = 0
  2947  0009BA  A020               	btfss	processPowerRequest@powerSet,0,c
  2948  0009BC  D008               	goto	l2682
  2949  0009BE  0E00               	movlw	0
  2950  0009C0  6E1E               	movwf	EnableSlavePower@onof+1,c
  2951  0009C2  0E01               	movlw	1
  2952  0009C4  6E1D               	movwf	EnableSlavePower@onof,c
  2953  0009C6  0E04               	movlw	4
  2954  0009C8  ECC1  F002         	call	_EnableSlavePower
  2955  0009CC  D007               	goto	l2684
  2956  0009CE                     l2682:
  2957                           
  2958                           ;Communications.c: 36: else EnableSlavePower(BMM, OFF);
  2959  0009CE  0E00               	movlw	0
  2960  0009D0  6E1E               	movwf	EnableSlavePower@onof+1,c
  2961  0009D2  0E00               	movlw	0
  2962  0009D4  6E1D               	movwf	EnableSlavePower@onof,c
  2963  0009D6  0E04               	movlw	4
  2964  0009D8  ECC1  F002         	call	_EnableSlavePower
  2965  0009DC                     l2684:
  2966                           
  2967                           ;Communications.c: 37: if (powerSet & 0x02) EnableSlavePower(MCS, ON);
  2968  0009DC  A220               	btfss	processPowerRequest@powerSet,1,c
  2969  0009DE  D008               	goto	l2688
  2970  0009E0  0E00               	movlw	0
  2971  0009E2  6E1E               	movwf	EnableSlavePower@onof+1,c
  2972  0009E4  0E01               	movlw	1
  2973  0009E6  6E1D               	movwf	EnableSlavePower@onof,c
  2974  0009E8  0E02               	movlw	2
  2975  0009EA  ECC1  F002         	call	_EnableSlavePower
  2976  0009EE  D007               	goto	l2690
  2977  0009F0                     l2688:
  2978                           
  2979                           ;Communications.c: 38: else EnableSlavePower(MCS,OFF);
  2980  0009F0  0E00               	movlw	0
  2981  0009F2  6E1E               	movwf	EnableSlavePower@onof+1,c
  2982  0009F4  0E00               	movlw	0
  2983  0009F6  6E1D               	movwf	EnableSlavePower@onof,c
  2984  0009F8  0E02               	movlw	2
  2985  0009FA  ECC1  F002         	call	_EnableSlavePower
  2986  0009FE                     l2690:
  2987                           
  2988                           ;Communications.c: 39: if (powerSet & 0x04) EnableSlavePower(DDS,ON);
  2989  0009FE  A420               	btfss	processPowerRequest@powerSet,2,c
  2990  000A00  D008               	goto	l2694
  2991  000A02  0E00               	movlw	0
  2992  000A04  6E1E               	movwf	EnableSlavePower@onof+1,c
  2993  000A06  0E01               	movlw	1
  2994  000A08  6E1D               	movwf	EnableSlavePower@onof,c
  2995  000A0A  0E01               	movlw	1
  2996  000A0C  ECC1  F002         	call	_EnableSlavePower
  2997  000A10  D007               	goto	l2696
  2998  000A12                     l2694:
  2999                           
  3000                           ;Communications.c: 40: else EnableSlavePower(DDS,OFF);
  3001  000A12  0E00               	movlw	0
  3002  000A14  6E1E               	movwf	EnableSlavePower@onof+1,c
  3003  000A16  0E00               	movlw	0
  3004  000A18  6E1D               	movwf	EnableSlavePower@onof,c
  3005  000A1A  0E01               	movlw	1
  3006  000A1C  ECC1  F002         	call	_EnableSlavePower
  3007  000A20                     l2696:
  3008                           
  3009                           ;Communications.c: 41: if(powerSet & 0x08) EnableSlavePower(SAS,ON);
  3010  000A20  A620               	btfss	processPowerRequest@powerSet,3,c
  3011  000A22  D008               	goto	l2700
  3012  000A24  0E00               	movlw	0
  3013  000A26  6E1E               	movwf	EnableSlavePower@onof+1,c
  3014  000A28  0E01               	movlw	1
  3015  000A2A  6E1D               	movwf	EnableSlavePower@onof,c
  3016  000A2C  0E03               	movlw	3
  3017  000A2E  ECC1  F002         	call	_EnableSlavePower
  3018  000A32  D007               	goto	l2702
  3019  000A34                     l2700:
  3020                           
  3021                           ;Communications.c: 42: else EnableSlavePower(SAS,OFF);
  3022  000A34  0E00               	movlw	0
  3023  000A36  6E1E               	movwf	EnableSlavePower@onof+1,c
  3024  000A38  0E00               	movlw	0
  3025  000A3A  6E1D               	movwf	EnableSlavePower@onof,c
  3026  000A3C  0E03               	movlw	3
  3027  000A3E  ECC1  F002         	call	_EnableSlavePower
  3028  000A42                     l2702:
  3029                           
  3030                           ;Communications.c: 43: if(powerSet & 0x10) EnableSlavePower(TSS, ON);
  3031  000A42  A820               	btfss	processPowerRequest@powerSet,4,c
  3032  000A44  D008               	goto	l2706
  3033  000A46  0E00               	movlw	0
  3034  000A48  6E1E               	movwf	EnableSlavePower@onof+1,c
  3035  000A4A  0E01               	movlw	1
  3036  000A4C  6E1D               	movwf	EnableSlavePower@onof,c
  3037  000A4E  0E05               	movlw	5
  3038  000A50  ECC1  F002         	call	_EnableSlavePower
  3039  000A54  D007               	goto	l335
  3040  000A56                     l2706:
  3041                           
  3042                           ;Communications.c: 44: else EnableSlavePower(TSS,OFF);
  3043  000A56  0E00               	movlw	0
  3044  000A58  6E1E               	movwf	EnableSlavePower@onof+1,c
  3045  000A5A  0E00               	movlw	0
  3046  000A5C  6E1D               	movwf	EnableSlavePower@onof,c
  3047  000A5E  0E05               	movlw	5
  3048  000A60  ECC1  F002         	call	_EnableSlavePower
  3049  000A64                     l335:
  3050                           
  3051                           ;Communications.c: 45: Update();
  3052  000A64  EC70  F008         	call	_Update	;wreg free
  3053  000A68  0012               	return		;funcret
  3054  000A6A                     __end_of_processPowerRequest:
  3055                           	opt stack 0
  3056                           tblptru	equ	0xFF8
  3057                           tblptrh	equ	0xFF7
  3058                           tblptrl	equ	0xFF6
  3059                           tablat	equ	0xFF5
  3060                           prodh	equ	0xFF4
  3061                           prodl	equ	0xFF3
  3062                           intcon	equ	0xFF2
  3063                           postinc0	equ	0xFEE
  3064                           wreg	equ	0xFE8
  3065                           indf2	equ	0xFDF
  3066                           postinc2	equ	0xFDE
  3067                           postdec2	equ	0xFDD
  3068                           plusw2	equ	0xFDB
  3069                           fsr2h	equ	0xFDA
  3070                           fsr2l	equ	0xFD9
  3071                           status	equ	0xFD8
  3072                           
  3073 ;; *************** function _SYSTEM_Initialize *****************
  3074 ;; Defined at:
  3075 ;;		line 112 in file "mcc_generated_files/mcc.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;		None
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;		None
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  1    wreg      void 
  3082 ;; Registers used:
  3083 ;;		wreg, status,2, cstack
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3089 ;;      Params:         0       0       0       0       0       0       0
  3090 ;;      Locals:         0       0       0       0       0       0       0
  3091 ;;      Temps:          0       0       0       0       0       0       0
  3092 ;;      Totals:         0       0       0       0       0       0       0
  3093 ;;Total ram usage:        0 bytes
  3094 ;; Hardware stack levels used:    1
  3095 ;; Hardware stack levels required when called:    5
  3096 ;; This function calls:
  3097 ;;		_ADC_Initialize
  3098 ;;		_CCP5_Initialize
  3099 ;;		_INTERRUPT_Initialize
  3100 ;;		_OSCILLATOR_Initialize
  3101 ;;		_PIN_MANAGER_Initialize
  3102 ;;		_PWM4_Initialize
  3103 ;;		_TMR2_Initialize
  3104 ;; This function is called by:
  3105 ;;		_main
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109                           	psect	text16
  3110  000FD2                     __ptext16:
  3111                           	opt stack 0
  3112  000FD2                     _SYSTEM_Initialize:
  3113                           	opt stack 25
  3114                           
  3115                           ;mcc.c: 115: INTERRUPT_Initialize();
  3116                           
  3117                           ;incstack = 0
  3118  000FD2  EC6C  F008         	call	_INTERRUPT_Initialize	;wreg free
  3119                           
  3120                           ;mcc.c: 116: PIN_MANAGER_Initialize();
  3121  000FD6  ECD4  F006         	call	_PIN_MANAGER_Initialize	;wreg free
  3122                           
  3123                           ;mcc.c: 117: OSCILLATOR_Initialize();
  3124  000FDA  EC65  F008         	call	_OSCILLATOR_Initialize	;wreg free
  3125                           
  3126                           ;mcc.c: 118: PWM4_Initialize();
  3127  000FDE  EC15  F008         	call	_PWM4_Initialize	;wreg free
  3128                           
  3129                           ;mcc.c: 119: TMR2_Initialize();
  3130  000FE2  EC5C  F008         	call	_TMR2_Initialize	;wreg free
  3131                           
  3132                           ;mcc.c: 120: ADC_Initialize();
  3133  000FE6  EC2F  F008         	call	_ADC_Initialize	;wreg free
  3134                           
  3135                           ;mcc.c: 121: CCP5_Initialize();
  3136  000FEA  ECF8  F007         	call	_CCP5_Initialize	;wreg free
  3137  000FEE  0012               	return		;funcret
  3138  000FF0                     __end_of_SYSTEM_Initialize:
  3139                           	opt stack 0
  3140                           tblptru	equ	0xFF8
  3141                           tblptrh	equ	0xFF7
  3142                           tblptrl	equ	0xFF6
  3143                           tablat	equ	0xFF5
  3144                           prodh	equ	0xFF4
  3145                           prodl	equ	0xFF3
  3146                           intcon	equ	0xFF2
  3147                           postinc0	equ	0xFEE
  3148                           wreg	equ	0xFE8
  3149                           indf2	equ	0xFDF
  3150                           postinc2	equ	0xFDE
  3151                           postdec2	equ	0xFDD
  3152                           plusw2	equ	0xFDB
  3153                           fsr2h	equ	0xFDA
  3154                           fsr2l	equ	0xFD9
  3155                           status	equ	0xFD8
  3156                           
  3157 ;; *************** function _TMR2_Initialize *****************
  3158 ;; Defined at:
  3159 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;		None
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;		None
  3164 ;; Return value:  Size  Location     Type
  3165 ;;                  1    wreg      void 
  3166 ;; Registers used:
  3167 ;;		wreg, status,2, cstack
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 0/0
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3173 ;;      Params:         0       0       0       0       0       0       0
  3174 ;;      Locals:         0       0       0       0       0       0       0
  3175 ;;      Temps:          0       0       0       0       0       0       0
  3176 ;;      Totals:         0       0       0       0       0       0       0
  3177 ;;Total ram usage:        0 bytes
  3178 ;; Hardware stack levels used:    1
  3179 ;; Hardware stack levels required when called:    4
  3180 ;; This function calls:
  3181 ;;		_TMR2_StartTimer
  3182 ;; This function is called by:
  3183 ;;		_SYSTEM_Initialize
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187                           	psect	text17
  3188  0010B8                     __ptext17:
  3189                           	opt stack 0
  3190  0010B8                     _TMR2_Initialize:
  3191                           	opt stack 25
  3192                           
  3193                           ;tmr2.c: 63: T2CON = 0x00;
  3194                           
  3195                           ;incstack = 0
  3196  0010B8  0E00               	movlw	0
  3197  0010BA  6EBA               	movwf	4026,c	;volatile
  3198                           
  3199                           ;tmr2.c: 66: PR2 = 0xFF;
  3200  0010BC  68BB               	setf	4027,c	;volatile
  3201                           
  3202                           ;tmr2.c: 69: TMR2 = 0x00;
  3203  0010BE  0E00               	movlw	0
  3204  0010C0  6EBC               	movwf	4028,c	;volatile
  3205                           
  3206                           ;tmr2.c: 72: PIR1bits.TMR2IF = 0;
  3207  0010C2  929E               	bcf	3998,1,c	;volatile
  3208                           
  3209                           ;tmr2.c: 75: TMR2_StartTimer();
  3210  0010C4  EC73  F008         	call	_TMR2_StartTimer	;wreg free
  3211  0010C8  0012               	return		;funcret
  3212  0010CA                     __end_of_TMR2_Initialize:
  3213                           	opt stack 0
  3214                           tblptru	equ	0xFF8
  3215                           tblptrh	equ	0xFF7
  3216                           tblptrl	equ	0xFF6
  3217                           tablat	equ	0xFF5
  3218                           prodh	equ	0xFF4
  3219                           prodl	equ	0xFF3
  3220                           intcon	equ	0xFF2
  3221                           postinc0	equ	0xFEE
  3222                           wreg	equ	0xFE8
  3223                           indf2	equ	0xFDF
  3224                           postinc2	equ	0xFDE
  3225                           postdec2	equ	0xFDD
  3226                           plusw2	equ	0xFDB
  3227                           fsr2h	equ	0xFDA
  3228                           fsr2l	equ	0xFD9
  3229                           status	equ	0xFD8
  3230                           
  3231 ;; *************** function _TMR2_StartTimer *****************
  3232 ;; Defined at:
  3233 ;;		line 78 in file "mcc_generated_files/tmr2.c"
  3234 ;; Parameters:    Size  Location     Type
  3235 ;;		None
  3236 ;; Auto vars:     Size  Location     Type
  3237 ;;		None
  3238 ;; Return value:  Size  Location     Type
  3239 ;;                  1    wreg      void 
  3240 ;; Registers used:
  3241 ;;		None
  3242 ;; Tracked objects:
  3243 ;;		On entry : 0/0
  3244 ;;		On exit  : 0/0
  3245 ;;		Unchanged: 0/0
  3246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3247 ;;      Params:         0       0       0       0       0       0       0
  3248 ;;      Locals:         0       0       0       0       0       0       0
  3249 ;;      Temps:          0       0       0       0       0       0       0
  3250 ;;      Totals:         0       0       0       0       0       0       0
  3251 ;;Total ram usage:        0 bytes
  3252 ;; Hardware stack levels used:    1
  3253 ;; Hardware stack levels required when called:    3
  3254 ;; This function calls:
  3255 ;;		Nothing
  3256 ;; This function is called by:
  3257 ;;		_TMR2_Initialize
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           	psect	text18
  3262  0010E6                     __ptext18:
  3263                           	opt stack 0
  3264  0010E6                     _TMR2_StartTimer:
  3265                           	opt stack 25
  3266                           
  3267                           ;tmr2.c: 81: T2CONbits.TMR2ON = 1;
  3268                           
  3269                           ;incstack = 0
  3270  0010E6  84BA               	bsf	4026,2,c	;volatile
  3271  0010E8  0012               	return		;funcret
  3272  0010EA                     __end_of_TMR2_StartTimer:
  3273                           	opt stack 0
  3274                           tblptru	equ	0xFF8
  3275                           tblptrh	equ	0xFF7
  3276                           tblptrl	equ	0xFF6
  3277                           tablat	equ	0xFF5
  3278                           prodh	equ	0xFF4
  3279                           prodl	equ	0xFF3
  3280                           intcon	equ	0xFF2
  3281                           postinc0	equ	0xFEE
  3282                           wreg	equ	0xFE8
  3283                           indf2	equ	0xFDF
  3284                           postinc2	equ	0xFDE
  3285                           postdec2	equ	0xFDD
  3286                           plusw2	equ	0xFDB
  3287                           fsr2h	equ	0xFDA
  3288                           fsr2l	equ	0xFD9
  3289                           status	equ	0xFD8
  3290                           
  3291 ;; *************** function _PWM4_Initialize *****************
  3292 ;; Defined at:
  3293 ;;		line 64 in file "mcc_generated_files/pwm4.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;		None
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;		None
  3298 ;; Return value:  Size  Location     Type
  3299 ;;                  1    wreg      void 
  3300 ;; Registers used:
  3301 ;;		wreg, status,2
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3307 ;;      Params:         0       0       0       0       0       0       0
  3308 ;;      Locals:         0       0       0       0       0       0       0
  3309 ;;      Temps:          0       0       0       0       0       0       0
  3310 ;;      Totals:         0       0       0       0       0       0       0
  3311 ;;Total ram usage:        0 bytes
  3312 ;; Hardware stack levels used:    1
  3313 ;; Hardware stack levels required when called:    3
  3314 ;; This function calls:
  3315 ;;		Nothing
  3316 ;; This function is called by:
  3317 ;;		_SYSTEM_Initialize
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321                           	psect	text19
  3322  00102A                     __ptext19:
  3323                           	opt stack 0
  3324  00102A                     _PWM4_Initialize:
  3325                           	opt stack 26
  3326                           
  3327                           ;pwm4.c: 69: CCP4CON = 0x3C;
  3328                           
  3329                           ;incstack = 0
  3330  00102A  0E3C               	movlw	60
  3331  00102C  010F               	movlb	15	; () banked
  3332  00102E  6F57               	movwf	87,b	;volatile
  3333                           
  3334                           ;pwm4.c: 72: CCPR4L = 0x7F;
  3335  001030  0E7F               	movlw	127
  3336  001032  010F               	movlb	15	; () banked
  3337  001034  6F58               	movwf	88,b	;volatile
  3338                           
  3339                           ;pwm4.c: 75: CCPR4H = 0x00;
  3340  001036  0E00               	movlw	0
  3341  001038  010F               	movlb	15	; () banked
  3342  00103A  6F59               	movwf	89,b	;volatile
  3343                           
  3344                           ;pwm4.c: 78: CCPTMRS1bits.C4TSEL = 0x0;
  3345  00103C  0EFC               	movlw	-4
  3346  00103E  010F               	movlb	15	; () banked
  3347  001040  1748               	andwf	72,f,b	;volatile
  3348                           
  3349                           ; BSR set to: 15
  3350  001042  0012               	return		;funcret
  3351  001044                     __end_of_PWM4_Initialize:
  3352                           	opt stack 0
  3353                           tblptru	equ	0xFF8
  3354                           tblptrh	equ	0xFF7
  3355                           tblptrl	equ	0xFF6
  3356                           tablat	equ	0xFF5
  3357                           prodh	equ	0xFF4
  3358                           prodl	equ	0xFF3
  3359                           intcon	equ	0xFF2
  3360                           postinc0	equ	0xFEE
  3361                           wreg	equ	0xFE8
  3362                           indf2	equ	0xFDF
  3363                           postinc2	equ	0xFDE
  3364                           postdec2	equ	0xFDD
  3365                           plusw2	equ	0xFDB
  3366                           fsr2h	equ	0xFDA
  3367                           fsr2l	equ	0xFD9
  3368                           status	equ	0xFD8
  3369                           
  3370 ;; *************** function _PIN_MANAGER_Initialize *****************
  3371 ;; Defined at:
  3372 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;		None
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1    wreg      void 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3386 ;;      Params:         0       0       0       0       0       0       0
  3387 ;;      Locals:         0       0       0       0       0       0       0
  3388 ;;      Temps:          0       0       0       0       0       0       0
  3389 ;;      Totals:         0       0       0       0       0       0       0
  3390 ;;Total ram usage:        0 bytes
  3391 ;; Hardware stack levels used:    1
  3392 ;; Hardware stack levels required when called:    3
  3393 ;; This function calls:
  3394 ;;		Nothing
  3395 ;; This function is called by:
  3396 ;;		_SYSTEM_Initialize
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           	psect	text20
  3401  000DA8                     __ptext20:
  3402                           	opt stack 0
  3403  000DA8                     _PIN_MANAGER_Initialize:
  3404                           	opt stack 26
  3405                           
  3406                           ;pin_manager.c: 51: LATB = 0x0;
  3407                           
  3408                           ; BSR set to: 15
  3409                           ;incstack = 0
  3410  000DA8  0E00               	movlw	0
  3411  000DAA  6E8A               	movwf	3978,c	;volatile
  3412                           
  3413                           ;pin_manager.c: 52: LATA = 0x0;
  3414  000DAC  0E00               	movlw	0
  3415  000DAE  6E89               	movwf	3977,c	;volatile
  3416                           
  3417                           ;pin_manager.c: 53: ANSELE = 0x3;
  3418  000DB0  0E03               	movlw	3
  3419  000DB2  010F               	movlb	15	; () banked
  3420  000DB4  6F3C               	movwf	60,b	;volatile
  3421                           
  3422                           ;pin_manager.c: 54: LATE = 0x0;
  3423  000DB6  0E00               	movlw	0
  3424  000DB8  6E8D               	movwf	3981,c	;volatile
  3425                           
  3426                           ;pin_manager.c: 55: LATD = 0x0;
  3427  000DBA  0E00               	movlw	0
  3428  000DBC  6E8C               	movwf	3980,c	;volatile
  3429                           
  3430                           ;pin_manager.c: 56: LATC = 0x0;
  3431  000DBE  0E00               	movlw	0
  3432  000DC0  6E8B               	movwf	3979,c	;volatile
  3433                           
  3434                           ;pin_manager.c: 57: ANSELA = 0x27;
  3435  000DC2  0E27               	movlw	39
  3436  000DC4  010F               	movlb	15	; () banked
  3437  000DC6  6F38               	movwf	56,b	;volatile
  3438                           
  3439                           ;pin_manager.c: 58: ANSELB = 0x6;
  3440  000DC8  0E06               	movlw	6
  3441  000DCA  010F               	movlb	15	; () banked
  3442  000DCC  6F39               	movwf	57,b	;volatile
  3443                           
  3444                           ;pin_manager.c: 59: ANSELC = 0xDC;
  3445  000DCE  0EDC               	movlw	220
  3446  000DD0  010F               	movlb	15	; () banked
  3447  000DD2  6F3A               	movwf	58,b	;volatile
  3448                           
  3449                           ;pin_manager.c: 60: ANSELD = 0xED;
  3450  000DD4  0EED               	movlw	237
  3451  000DD6  010F               	movlb	15	; () banked
  3452  000DD8  6F3B               	movwf	59,b	;volatile
  3453                           
  3454                           ;pin_manager.c: 61: WPUB = 0xC6;
  3455  000DDA  0EC6               	movlw	198
  3456  000DDC  6E61               	movwf	3937,c	;volatile
  3457                           
  3458                           ;pin_manager.c: 62: TRISD = 0xD;
  3459  000DDE  0E0D               	movlw	13
  3460  000DE0  6E95               	movwf	3989,c	;volatile
  3461                           
  3462                           ;pin_manager.c: 63: TRISE = 0x7;
  3463  000DE2  0E07               	movlw	7
  3464  000DE4  6E96               	movwf	3990,c	;volatile
  3465                           
  3466                           ;pin_manager.c: 64: TRISB = 0xC6;
  3467  000DE6  0EC6               	movlw	198
  3468  000DE8  6E93               	movwf	3987,c	;volatile
  3469                           
  3470                           ;pin_manager.c: 65: TRISC = 0xDF;
  3471  000DEA  0EDF               	movlw	223
  3472  000DEC  6E94               	movwf	3988,c	;volatile
  3473                           
  3474                           ;pin_manager.c: 66: TRISA = 0xE7;
  3475  000DEE  0EE7               	movlw	231
  3476  000DF0  6E92               	movwf	3986,c	;volatile
  3477                           
  3478                           ; BSR set to: 15
  3479                           ;pin_manager.c: 68: INTCON2bits.nRBPU = 0x1;
  3480  000DF2  8EF1               	bsf	intcon2,7,c	;volatile
  3481                           
  3482                           ; BSR set to: 15
  3483                           ;pin_manager.c: 72: INTCONbits.RBIE = 0;
  3484  000DF4  96F2               	bcf	intcon,3,c	;volatile
  3485                           
  3486                           ; BSR set to: 15
  3487  000DF6  0012               	return		;funcret
  3488  000DF8                     __end_of_PIN_MANAGER_Initialize:
  3489                           	opt stack 0
  3490                           tblptru	equ	0xFF8
  3491                           tblptrh	equ	0xFF7
  3492                           tblptrl	equ	0xFF6
  3493                           tablat	equ	0xFF5
  3494                           prodh	equ	0xFF4
  3495                           prodl	equ	0xFF3
  3496                           intcon	equ	0xFF2
  3497                           intcon2	equ	0xFF1
  3498                           postinc0	equ	0xFEE
  3499                           wreg	equ	0xFE8
  3500                           indf2	equ	0xFDF
  3501                           postinc2	equ	0xFDE
  3502                           postdec2	equ	0xFDD
  3503                           plusw2	equ	0xFDB
  3504                           fsr2h	equ	0xFDA
  3505                           fsr2l	equ	0xFD9
  3506                           status	equ	0xFD8
  3507                           
  3508 ;; *************** function _OSCILLATOR_Initialize *****************
  3509 ;; Defined at:
  3510 ;;		line 124 in file "mcc_generated_files/mcc.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;		None
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;		None
  3515 ;; Return value:  Size  Location     Type
  3516 ;;                  1    wreg      void 
  3517 ;; Registers used:
  3518 ;;		wreg, status,2
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3524 ;;      Params:         0       0       0       0       0       0       0
  3525 ;;      Locals:         0       0       0       0       0       0       0
  3526 ;;      Temps:          0       0       0       0       0       0       0
  3527 ;;      Totals:         0       0       0       0       0       0       0
  3528 ;;Total ram usage:        0 bytes
  3529 ;; Hardware stack levels used:    1
  3530 ;; Hardware stack levels required when called:    3
  3531 ;; This function calls:
  3532 ;;		Nothing
  3533 ;; This function is called by:
  3534 ;;		_SYSTEM_Initialize
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           
  3538                           	psect	text21
  3539  0010CA                     __ptext21:
  3540                           	opt stack 0
  3541  0010CA                     _OSCILLATOR_Initialize:
  3542                           	opt stack 26
  3543                           
  3544                           ;mcc.c: 127: OSCCON = 0x70;
  3545                           
  3546                           ; BSR set to: 15
  3547                           ;incstack = 0
  3548  0010CA  0E70               	movlw	112
  3549  0010CC  6ED3               	movwf	4051,c	;volatile
  3550                           
  3551                           ;mcc.c: 129: OSCCON2 = 0x04;
  3552  0010CE  0E04               	movlw	4
  3553  0010D0  6ED2               	movwf	4050,c	;volatile
  3554                           
  3555                           ;mcc.c: 131: OSCTUNE = 0x00;
  3556  0010D2  0E00               	movlw	0
  3557  0010D4  6E9B               	movwf	3995,c	;volatile
  3558  0010D6  0012               	return		;funcret
  3559  0010D8                     __end_of_OSCILLATOR_Initialize:
  3560                           	opt stack 0
  3561                           tblptru	equ	0xFF8
  3562                           tblptrh	equ	0xFF7
  3563                           tblptrl	equ	0xFF6
  3564                           tablat	equ	0xFF5
  3565                           prodh	equ	0xFF4
  3566                           prodl	equ	0xFF3
  3567                           intcon	equ	0xFF2
  3568                           intcon2	equ	0xFF1
  3569                           postinc0	equ	0xFEE
  3570                           wreg	equ	0xFE8
  3571                           indf2	equ	0xFDF
  3572                           postinc2	equ	0xFDE
  3573                           postdec2	equ	0xFDD
  3574                           plusw2	equ	0xFDB
  3575                           fsr2h	equ	0xFDA
  3576                           fsr2l	equ	0xFD9
  3577                           status	equ	0xFD8
  3578                           
  3579 ;; *************** function _INTERRUPT_Initialize *****************
  3580 ;; Defined at:
  3581 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;		None
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;		None
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  1    wreg      void 
  3588 ;; Registers used:
  3589 ;;		None
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3595 ;;      Params:         0       0       0       0       0       0       0
  3596 ;;      Locals:         0       0       0       0       0       0       0
  3597 ;;      Temps:          0       0       0       0       0       0       0
  3598 ;;      Totals:         0       0       0       0       0       0       0
  3599 ;;Total ram usage:        0 bytes
  3600 ;; Hardware stack levels used:    1
  3601 ;; Hardware stack levels required when called:    3
  3602 ;; This function calls:
  3603 ;;		Nothing
  3604 ;; This function is called by:
  3605 ;;		_SYSTEM_Initialize
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           	psect	text22
  3610  0010D8                     __ptext22:
  3611                           	opt stack 0
  3612  0010D8                     _INTERRUPT_Initialize:
  3613                           	opt stack 26
  3614                           
  3615                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  3616                           
  3617                           ;incstack = 0
  3618  0010D8  9ED0               	bcf	4048,7,c	;volatile
  3619                           
  3620                           ;interrupt_manager.c: 60: IPR1bits.ADIP = 0;
  3621  0010DA  9C9F               	bcf	3999,6,c	;volatile
  3622                           
  3623                           ;interrupt_manager.c: 62: IPR4bits.CCP5IP = 0;
  3624  0010DC  947C               	bcf	3964,2,c	;volatile
  3625  0010DE  0012               	return		;funcret
  3626  0010E0                     __end_of_INTERRUPT_Initialize:
  3627                           	opt stack 0
  3628                           tblptru	equ	0xFF8
  3629                           tblptrh	equ	0xFF7
  3630                           tblptrl	equ	0xFF6
  3631                           tablat	equ	0xFF5
  3632                           prodh	equ	0xFF4
  3633                           prodl	equ	0xFF3
  3634                           intcon	equ	0xFF2
  3635                           intcon2	equ	0xFF1
  3636                           postinc0	equ	0xFEE
  3637                           wreg	equ	0xFE8
  3638                           indf2	equ	0xFDF
  3639                           postinc2	equ	0xFDE
  3640                           postdec2	equ	0xFDD
  3641                           plusw2	equ	0xFDB
  3642                           fsr2h	equ	0xFDA
  3643                           fsr2l	equ	0xFD9
  3644                           status	equ	0xFD8
  3645                           
  3646 ;; *************** function _CCP5_Initialize *****************
  3647 ;; Defined at:
  3648 ;;		line 58 in file "mcc_generated_files/ccp5.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;		None
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;		None
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  1    wreg      void 
  3655 ;; Registers used:
  3656 ;;		wreg, status,2
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3662 ;;      Params:         0       0       0       0       0       0       0
  3663 ;;      Locals:         0       0       0       0       0       0       0
  3664 ;;      Temps:          0       0       0       0       0       0       0
  3665 ;;      Totals:         0       0       0       0       0       0       0
  3666 ;;Total ram usage:        0 bytes
  3667 ;; Hardware stack levels used:    1
  3668 ;; Hardware stack levels required when called:    3
  3669 ;; This function calls:
  3670 ;;		Nothing
  3671 ;; This function is called by:
  3672 ;;		_SYSTEM_Initialize
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676                           	psect	text23
  3677  000FF0                     __ptext23:
  3678                           	opt stack 0
  3679  000FF0                     _CCP5_Initialize:
  3680                           	opt stack 26
  3681                           
  3682                           ;ccp5.c: 63: CCP5CON = 0x04;
  3683                           
  3684                           ;incstack = 0
  3685  000FF0  0E04               	movlw	4
  3686  000FF2  010F               	movlb	15	; () banked
  3687  000FF4  6F54               	movwf	84,b	;volatile
  3688                           
  3689                           ;ccp5.c: 66: CCPR5L = 0x00;
  3690  000FF6  0E00               	movlw	0
  3691  000FF8  010F               	movlb	15	; () banked
  3692  000FFA  6F55               	movwf	85,b	;volatile
  3693                           
  3694                           ;ccp5.c: 69: CCPR5H = 0x00;
  3695  000FFC  0E00               	movlw	0
  3696  000FFE  010F               	movlb	15	; () banked
  3697  001000  6F56               	movwf	86,b	;volatile
  3698                           
  3699                           ;ccp5.c: 72: CCPTMRS1bits.C5TSEL = 0x0;
  3700  001002  0EF3               	movlw	-13
  3701  001004  010F               	movlb	15	; () banked
  3702  001006  1748               	andwf	72,f,b	;volatile
  3703                           
  3704                           ; BSR set to: 15
  3705                           ;ccp5.c: 75: PIR4bits.CCP5IF = 0;
  3706  001008  947B               	bcf	3963,2,c	;volatile
  3707                           
  3708                           ; BSR set to: 15
  3709                           ;ccp5.c: 78: PIE4bits.CCP5IE = 1;
  3710  00100A  847A               	bsf	3962,2,c	;volatile
  3711                           
  3712                           ; BSR set to: 15
  3713  00100C  0012               	return		;funcret
  3714  00100E                     __end_of_CCP5_Initialize:
  3715                           	opt stack 0
  3716                           tblptru	equ	0xFF8
  3717                           tblptrh	equ	0xFF7
  3718                           tblptrl	equ	0xFF6
  3719                           tablat	equ	0xFF5
  3720                           prodh	equ	0xFF4
  3721                           prodl	equ	0xFF3
  3722                           intcon	equ	0xFF2
  3723                           intcon2	equ	0xFF1
  3724                           postinc0	equ	0xFEE
  3725                           wreg	equ	0xFE8
  3726                           indf2	equ	0xFDF
  3727                           postinc2	equ	0xFDE
  3728                           postdec2	equ	0xFDD
  3729                           plusw2	equ	0xFDB
  3730                           fsr2h	equ	0xFDA
  3731                           fsr2l	equ	0xFD9
  3732                           status	equ	0xFD8
  3733                           
  3734 ;; *************** function _ADC_Initialize *****************
  3735 ;; Defined at:
  3736 ;;		line 59 in file "mcc_generated_files/adc.c"
  3737 ;; Parameters:    Size  Location     Type
  3738 ;;		None
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;		None
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  1    wreg      void 
  3743 ;; Registers used:
  3744 ;;		wreg, status,2
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3750 ;;      Params:         0       0       0       0       0       0       0
  3751 ;;      Locals:         0       0       0       0       0       0       0
  3752 ;;      Temps:          0       0       0       0       0       0       0
  3753 ;;      Totals:         0       0       0       0       0       0       0
  3754 ;;Total ram usage:        0 bytes
  3755 ;; Hardware stack levels used:    1
  3756 ;; Hardware stack levels required when called:    3
  3757 ;; This function calls:
  3758 ;;		Nothing
  3759 ;; This function is called by:
  3760 ;;		_SYSTEM_Initialize
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764                           	psect	text24
  3765  00105E                     __ptext24:
  3766                           	opt stack 0
  3767  00105E                     _ADC_Initialize:
  3768                           	opt stack 26
  3769                           
  3770                           ;adc.c: 64: ADCON0 = 0x01;
  3771                           
  3772                           ; BSR set to: 15
  3773                           ;incstack = 0
  3774  00105E  0E01               	movlw	1
  3775  001060  6EC2               	movwf	4034,c	;volatile
  3776                           
  3777                           ;adc.c: 67: ADCON1 = 0x00;
  3778  001062  0E00               	movlw	0
  3779  001064  6EC1               	movwf	4033,c	;volatile
  3780                           
  3781                           ;adc.c: 70: ADCON2 = 0x0D;
  3782  001066  0E0D               	movlw	13
  3783  001068  6EC0               	movwf	4032,c	;volatile
  3784                           
  3785                           ;adc.c: 73: ADRESL = 0x00;
  3786  00106A  0E00               	movlw	0
  3787  00106C  6EC3               	movwf	4035,c	;volatile
  3788                           
  3789                           ;adc.c: 76: ADRESH = 0x00;
  3790  00106E  0E00               	movlw	0
  3791  001070  6EC4               	movwf	4036,c	;volatile
  3792                           
  3793                           ;adc.c: 79: PIE1bits.ADIE = 1;
  3794  001072  8C9D               	bsf	3997,6,c	;volatile
  3795  001074  0012               	return		;funcret
  3796  001076                     __end_of_ADC_Initialize:
  3797                           	opt stack 0
  3798                           tblptru	equ	0xFF8
  3799                           tblptrh	equ	0xFF7
  3800                           tblptrl	equ	0xFF6
  3801                           tablat	equ	0xFF5
  3802                           prodh	equ	0xFF4
  3803                           prodl	equ	0xFF3
  3804                           intcon	equ	0xFF2
  3805                           intcon2	equ	0xFF1
  3806                           postinc0	equ	0xFEE
  3807                           wreg	equ	0xFE8
  3808                           indf2	equ	0xFDF
  3809                           postinc2	equ	0xFDE
  3810                           postdec2	equ	0xFDD
  3811                           plusw2	equ	0xFDB
  3812                           fsr2h	equ	0xFDA
  3813                           fsr2l	equ	0xFD9
  3814                           status	equ	0xFD8
  3815                           
  3816 ;; *************** function _PDUStartup *****************
  3817 ;; Defined at:
  3818 ;;		line 15 in file "PDU.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;		None
  3821 ;; Auto vars:     Size  Location     Type
  3822 ;;		None
  3823 ;; Return value:  Size  Location     Type
  3824 ;;                  1    wreg      void 
  3825 ;; Registers used:
  3826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3827 ;; Tracked objects:
  3828 ;;		On entry : 0/0
  3829 ;;		On exit  : 0/0
  3830 ;;		Unchanged: 0/0
  3831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3832 ;;      Params:         0       0       0       0       0       0       0
  3833 ;;      Locals:         0       0       0       0       0       0       0
  3834 ;;      Temps:          0       0       0       0       0       0       0
  3835 ;;      Totals:         0       0       0       0       0       0       0
  3836 ;;Total ram usage:        0 bytes
  3837 ;; Hardware stack levels used:    1
  3838 ;; Hardware stack levels required when called:    7
  3839 ;; This function calls:
  3840 ;;		_ComputeStorageData
  3841 ;;		_EnableSlavePower
  3842 ;;		_StartUp595
  3843 ;;		_Update
  3844 ;; This function is called by:
  3845 ;;		_main
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text25
  3850  000D04                     __ptext25:
  3851                           	opt stack 0
  3852  000D04                     _PDUStartup:
  3853                           	opt stack 23
  3854                           
  3855                           ;PDU.c: 18: StartUp595();
  3856                           
  3857                           ;incstack = 0
  3858  000D04  EC51  F006         	call	_StartUp595	;wreg free
  3859                           
  3860                           ;PDU.c: 20: EnableSlavePower(SAS, ON);
  3861  000D08  0E00               	movlw	0
  3862  000D0A  6E1E               	movwf	EnableSlavePower@onof+1,c
  3863  000D0C  0E01               	movlw	1
  3864  000D0E  6E1D               	movwf	EnableSlavePower@onof,c
  3865  000D10  0E03               	movlw	3
  3866  000D12  ECC1  F002         	call	_EnableSlavePower
  3867                           
  3868                           ;PDU.c: 21: EnableSlavePower(DDS, ON);
  3869  000D16  0E00               	movlw	0
  3870  000D18  6E1E               	movwf	EnableSlavePower@onof+1,c
  3871  000D1A  0E01               	movlw	1
  3872  000D1C  6E1D               	movwf	EnableSlavePower@onof,c
  3873  000D1E  0E01               	movlw	1
  3874  000D20  ECC1  F002         	call	_EnableSlavePower
  3875                           
  3876                           ;PDU.c: 22: EnableSlavePower(MCS, ON);
  3877  000D24  0E00               	movlw	0
  3878  000D26  6E1E               	movwf	EnableSlavePower@onof+1,c
  3879  000D28  0E01               	movlw	1
  3880  000D2A  6E1D               	movwf	EnableSlavePower@onof,c
  3881  000D2C  0E02               	movlw	2
  3882  000D2E  ECC1  F002         	call	_EnableSlavePower
  3883                           
  3884                           ;PDU.c: 23: EnableSlavePower(BMM, ON);
  3885  000D32  0E00               	movlw	0
  3886  000D34  6E1E               	movwf	EnableSlavePower@onof+1,c
  3887  000D36  0E01               	movlw	1
  3888  000D38  6E1D               	movwf	EnableSlavePower@onof,c
  3889  000D3A  0E04               	movlw	4
  3890  000D3C  ECC1  F002         	call	_EnableSlavePower
  3891                           
  3892                           ;PDU.c: 24: EnableSlavePower(TSS, ON);
  3893  000D40  0E00               	movlw	0
  3894  000D42  6E1E               	movwf	EnableSlavePower@onof+1,c
  3895  000D44  0E01               	movlw	1
  3896  000D46  6E1D               	movwf	EnableSlavePower@onof,c
  3897  000D48  0E05               	movlw	5
  3898  000D4A  ECC1  F002         	call	_EnableSlavePower
  3899                           
  3900                           ;PDU.c: 25: Update();
  3901  000D4E  EC70  F008         	call	_Update	;wreg free
  3902                           
  3903                           ;PDU.c: 27: ComputeStorageData();
  3904  000D52  EC31  F003         	call	_ComputeStorageData	;wreg free
  3905  000D56  0012               	return		;funcret
  3906  000D58                     __end_of_PDUStartup:
  3907                           	opt stack 0
  3908                           tblptru	equ	0xFF8
  3909                           tblptrh	equ	0xFF7
  3910                           tblptrl	equ	0xFF6
  3911                           tablat	equ	0xFF5
  3912                           prodh	equ	0xFF4
  3913                           prodl	equ	0xFF3
  3914                           intcon	equ	0xFF2
  3915                           intcon2	equ	0xFF1
  3916                           postinc0	equ	0xFEE
  3917                           wreg	equ	0xFE8
  3918                           indf2	equ	0xFDF
  3919                           postinc2	equ	0xFDE
  3920                           postdec2	equ	0xFDD
  3921                           plusw2	equ	0xFDB
  3922                           fsr2h	equ	0xFDA
  3923                           fsr2l	equ	0xFD9
  3924                           status	equ	0xFD8
  3925                           
  3926 ;; *************** function _Update *****************
  3927 ;; Defined at:
  3928 ;;		line 142 in file "PDU.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;		None
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;		None
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3942 ;;      Params:         0       0       0       0       0       0       0
  3943 ;;      Locals:         0       0       0       0       0       0       0
  3944 ;;      Temps:          0       0       0       0       0       0       0
  3945 ;;      Totals:         0       0       0       0       0       0       0
  3946 ;;Total ram usage:        0 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; Hardware stack levels required when called:    5
  3949 ;; This function calls:
  3950 ;;		_writeRegisters
  3951 ;; This function is called by:
  3952 ;;		_processPowerRequest
  3953 ;;		_PDUStartup
  3954 ;;		_ReadCurrent
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           	psect	text26
  3959  0010E0                     __ptext26:
  3960                           	opt stack 0
  3961  0010E0                     _Update:
  3962                           	opt stack 23
  3963                           
  3964                           ;PDU.c: 143: writeRegisters();
  3965                           
  3966                           ;incstack = 0
  3967  0010E0  EC79  F005         	call	_writeRegisters	;wreg free
  3968  0010E4  0012               	return		;funcret
  3969  0010E6                     __end_of_Update:
  3970                           	opt stack 0
  3971                           tblptru	equ	0xFF8
  3972                           tblptrh	equ	0xFF7
  3973                           tblptrl	equ	0xFF6
  3974                           tablat	equ	0xFF5
  3975                           prodh	equ	0xFF4
  3976                           prodl	equ	0xFF3
  3977                           intcon	equ	0xFF2
  3978                           intcon2	equ	0xFF1
  3979                           postinc0	equ	0xFEE
  3980                           wreg	equ	0xFE8
  3981                           indf2	equ	0xFDF
  3982                           postinc2	equ	0xFDE
  3983                           postdec2	equ	0xFDD
  3984                           plusw2	equ	0xFDB
  3985                           fsr2h	equ	0xFDA
  3986                           fsr2l	equ	0xFD9
  3987                           status	equ	0xFD8
  3988                           
  3989 ;; *************** function _StartUp595 *****************
  3990 ;; Defined at:
  3991 ;;		line 10 in file "Shift595.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;		None
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;		None
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  1    wreg      void 
  3998 ;; Registers used:
  3999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4005 ;;      Params:         0       0       0       0       0       0       0
  4006 ;;      Locals:         0       0       0       0       0       0       0
  4007 ;;      Temps:          0       0       0       0       0       0       0
  4008 ;;      Totals:         0       0       0       0       0       0       0
  4009 ;;Total ram usage:        0 bytes
  4010 ;; Hardware stack levels used:    1
  4011 ;; Hardware stack levels required when called:    6
  4012 ;; This function calls:
  4013 ;;		_Clear595
  4014 ;;		_Delay
  4015 ;; This function is called by:
  4016 ;;		_PDUStartup
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           	psect	text27
  4021  000CA2                     __ptext27:
  4022                           	opt stack 0
  4023  000CA2                     _StartUp595:
  4024                           	opt stack 23
  4025                           
  4026                           ;incstack = 0
  4027                           ;Shift595.c: 12: do { LATD5 = 1; } while(0);
  4028  000CA2  8A8C               	bsf	3980,5,c	;volatile
  4029                           
  4030                           ;Shift595.c: 13: do { LATB0 = 1; } while(0);
  4031  000CA4  808A               	bsf	3978,0,c	;volatile
  4032                           
  4033                           ;Shift595.c: 15: Delay(2);
  4034  000CA6  0E02               	movlw	2
  4035  000CA8  6E13               	movwf	Delay@wait,c
  4036  000CAA  0E00               	movlw	0
  4037  000CAC  6E14               	movwf	Delay@wait+1,c
  4038  000CAE  0E00               	movlw	0
  4039  000CB0  6E15               	movwf	Delay@wait+2,c
  4040  000CB2  0E00               	movlw	0
  4041  000CB4  6E16               	movwf	Delay@wait+3,c
  4042  000CB6  EC23  F007         	call	_Delay	;wreg free
  4043                           
  4044                           ;Shift595.c: 16: do { LATD5 = 0; } while(0);
  4045  000CBA  9A8C               	bcf	3980,5,c	;volatile
  4046                           
  4047                           ;Shift595.c: 17: Delay(2);
  4048  000CBC  0E02               	movlw	2
  4049  000CBE  6E13               	movwf	Delay@wait,c
  4050  000CC0  0E00               	movlw	0
  4051  000CC2  6E14               	movwf	Delay@wait+1,c
  4052  000CC4  0E00               	movlw	0
  4053  000CC6  6E15               	movwf	Delay@wait+2,c
  4054  000CC8  0E00               	movlw	0
  4055  000CCA  6E16               	movwf	Delay@wait+3,c
  4056  000CCC  EC23  F007         	call	_Delay	;wreg free
  4057                           
  4058                           ;Shift595.c: 18: do { LATB0 = 0; } while(0);
  4059  000CD0  908A               	bcf	3978,0,c	;volatile
  4060                           
  4061                           ;Shift595.c: 19: Delay(2);
  4062  000CD2  0E02               	movlw	2
  4063  000CD4  6E13               	movwf	Delay@wait,c
  4064  000CD6  0E00               	movlw	0
  4065  000CD8  6E14               	movwf	Delay@wait+1,c
  4066  000CDA  0E00               	movlw	0
  4067  000CDC  6E15               	movwf	Delay@wait+2,c
  4068  000CDE  0E00               	movlw	0
  4069  000CE0  6E16               	movwf	Delay@wait+3,c
  4070  000CE2  EC23  F007         	call	_Delay	;wreg free
  4071                           
  4072                           ;Shift595.c: 20: do { LATD5 = 1; } while(0);
  4073  000CE6  8A8C               	bsf	3980,5,c	;volatile
  4074                           
  4075                           ;Shift595.c: 21: Delay(2);
  4076  000CE8  0E02               	movlw	2
  4077  000CEA  6E13               	movwf	Delay@wait,c
  4078  000CEC  0E00               	movlw	0
  4079  000CEE  6E14               	movwf	Delay@wait+1,c
  4080  000CF0  0E00               	movlw	0
  4081  000CF2  6E15               	movwf	Delay@wait+2,c
  4082  000CF4  0E00               	movlw	0
  4083  000CF6  6E16               	movwf	Delay@wait+3,c
  4084  000CF8  EC23  F007         	call	_Delay	;wreg free
  4085                           
  4086                           ;Shift595.c: 22: do { LATB0 = 1; } while(0);
  4087  000CFC  808A               	bsf	3978,0,c	;volatile
  4088                           
  4089                           ;Shift595.c: 24: Clear595();
  4090  000CFE  ECA4  F007         	call	_Clear595	;wreg free
  4091  000D02  0012               	return		;funcret
  4092  000D04                     __end_of_StartUp595:
  4093                           	opt stack 0
  4094                           tblptru	equ	0xFF8
  4095                           tblptrh	equ	0xFF7
  4096                           tblptrl	equ	0xFF6
  4097                           tablat	equ	0xFF5
  4098                           prodh	equ	0xFF4
  4099                           prodl	equ	0xFF3
  4100                           intcon	equ	0xFF2
  4101                           intcon2	equ	0xFF1
  4102                           postinc0	equ	0xFEE
  4103                           wreg	equ	0xFE8
  4104                           indf2	equ	0xFDF
  4105                           postinc2	equ	0xFDE
  4106                           postdec2	equ	0xFDD
  4107                           plusw2	equ	0xFDB
  4108                           fsr2h	equ	0xFDA
  4109                           fsr2l	equ	0xFD9
  4110                           status	equ	0xFD8
  4111                           
  4112 ;; *************** function _Clear595 *****************
  4113 ;; Defined at:
  4114 ;;		line 39 in file "Shift595.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;		None
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;  i               2   31[COMRAM] int 
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  1    wreg      void 
  4121 ;; Registers used:
  4122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4128 ;;      Params:         0       0       0       0       0       0       0
  4129 ;;      Locals:         2       0       0       0       0       0       0
  4130 ;;      Temps:          0       0       0       0       0       0       0
  4131 ;;      Totals:         2       0       0       0       0       0       0
  4132 ;;Total ram usage:        2 bytes
  4133 ;; Hardware stack levels used:    1
  4134 ;; Hardware stack levels required when called:    5
  4135 ;; This function calls:
  4136 ;;		_writeRegisters
  4137 ;; This function is called by:
  4138 ;;		_StartUp595
  4139 ;; This function uses a non-reentrant model
  4140 ;;
  4141                           
  4142                           	psect	text28
  4143  000F48                     __ptext28:
  4144                           	opt stack 0
  4145  000F48                     _Clear595:
  4146                           	opt stack 23
  4147                           
  4148                           ;Shift595.c: 40: for (int i = 3 * 8 - 1; i >= 0; i--) {
  4149                           
  4150                           ;incstack = 0
  4151  000F48  0E00               	movlw	0
  4152  000F4A  6E21               	movwf	Clear595@i+1,c
  4153  000F4C  0E17               	movlw	23
  4154  000F4E  6E20               	movwf	Clear595@i,c
  4155  000F50                     l2540:
  4156  000F50  BE21               	btfsc	Clear595@i+1,7,c
  4157  000F52  D011               	goto	l2550
  4158                           
  4159                           ;Shift595.c: 41: registers[i] = 0;
  4160  000F54  90D8               	bcf	status,0,c
  4161  000F56  3420               	rlcf	Clear595@i,w,c
  4162  000F58  6ED9               	movwf	fsr2l,c
  4163  000F5A  3421               	rlcf	Clear595@i+1,w,c
  4164  000F5C  6EDA               	movwf	fsr2h,c
  4165  000F5E  0E60               	movlw	low _registers
  4166  000F60  26D9               	addwf	fsr2l,f,c
  4167  000F62  0E00               	movlw	high _registers
  4168  000F64  22DA               	addwfc	fsr2h,f,c
  4169  000F66  0E00               	movlw	0
  4170  000F68  6EDE               	movwf	postinc2,c
  4171  000F6A  0E00               	movlw	0
  4172  000F6C  6EDD               	movwf	postdec2,c
  4173  000F6E  0620               	decf	Clear595@i,f,c
  4174  000F70  A0D8               	btfss	status,0,c
  4175  000F72  0621               	decf	Clear595@i+1,f,c
  4176  000F74  D7ED               	goto	l2540
  4177  000F76                     l2550:
  4178                           
  4179                           ;Shift595.c: 42: }
  4180                           ;Shift595.c: 44: writeRegisters();
  4181  000F76  EC79  F005         	call	_writeRegisters	;wreg free
  4182  000F7A  0012               	return		;funcret
  4183  000F7C                     __end_of_Clear595:
  4184                           	opt stack 0
  4185                           tblptru	equ	0xFF8
  4186                           tblptrh	equ	0xFF7
  4187                           tblptrl	equ	0xFF6
  4188                           tablat	equ	0xFF5
  4189                           prodh	equ	0xFF4
  4190                           prodl	equ	0xFF3
  4191                           intcon	equ	0xFF2
  4192                           intcon2	equ	0xFF1
  4193                           postinc0	equ	0xFEE
  4194                           wreg	equ	0xFE8
  4195                           indf2	equ	0xFDF
  4196                           postinc2	equ	0xFDE
  4197                           postdec2	equ	0xFDD
  4198                           plusw2	equ	0xFDB
  4199                           fsr2h	equ	0xFDA
  4200                           fsr2l	equ	0xFD9
  4201                           status	equ	0xFD8
  4202                           
  4203 ;; *************** function _writeRegisters *****************
  4204 ;; Defined at:
  4205 ;;		line 50 in file "Shift595.c"
  4206 ;; Parameters:    Size  Location     Type
  4207 ;;		None
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;  i               2   29[COMRAM] int 
  4210 ;;  val             2   27[COMRAM] int 
  4211 ;; Return value:  Size  Location     Type
  4212 ;;                  1    wreg      void 
  4213 ;; Registers used:
  4214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4215 ;; Tracked objects:
  4216 ;;		On entry : 0/0
  4217 ;;		On exit  : 0/0
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4220 ;;      Params:         0       0       0       0       0       0       0
  4221 ;;      Locals:         4       0       0       0       0       0       0
  4222 ;;      Temps:          0       0       0       0       0       0       0
  4223 ;;      Totals:         4       0       0       0       0       0       0
  4224 ;;Total ram usage:        4 bytes
  4225 ;; Hardware stack levels used:    1
  4226 ;; Hardware stack levels required when called:    4
  4227 ;; This function calls:
  4228 ;;		_Delay
  4229 ;; This function is called by:
  4230 ;;		_Update
  4231 ;;		_Clear595
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           	psect	text29
  4236  000AF2                     __ptext29:
  4237                           	opt stack 0
  4238  000AF2                     _writeRegisters:
  4239                           	opt stack 23
  4240                           
  4241                           ;Shift595.c: 51: int val = 0;
  4242                           
  4243                           ;incstack = 0
  4244  000AF2  0E00               	movlw	0
  4245  000AF4  6E1D               	movwf	writeRegisters@val+1,c
  4246  000AF6  0E00               	movlw	0
  4247  000AF8  6E1C               	movwf	writeRegisters@val,c
  4248                           
  4249                           ;Shift595.c: 52: for (int i = 3 * 8 - 1; i >= 0; i--) {
  4250  000AFA  0E00               	movlw	0
  4251  000AFC  6E1F               	movwf	writeRegisters@i+1,c
  4252  000AFE  0E17               	movlw	23
  4253  000B00  6E1E               	movwf	writeRegisters@i,c
  4254  000B02                     l2436:
  4255  000B02  BE1F               	btfsc	writeRegisters@i+1,7,c
  4256  000B04  D01D               	goto	l692
  4257                           
  4258                           ;Shift595.c: 53: do { LATD7 = 0; } while(0);
  4259  000B06  9E8C               	bcf	3980,7,c	;volatile
  4260                           
  4261                           ;Shift595.c: 55: val = registers[i];
  4262  000B08  90D8               	bcf	status,0,c
  4263  000B0A  341E               	rlcf	writeRegisters@i,w,c
  4264  000B0C  6ED9               	movwf	fsr2l,c
  4265  000B0E  341F               	rlcf	writeRegisters@i+1,w,c
  4266  000B10  6EDA               	movwf	fsr2h,c
  4267  000B12  0E60               	movlw	low _registers
  4268  000B14  26D9               	addwf	fsr2l,f,c
  4269  000B16  0E00               	movlw	high _registers
  4270  000B18  22DA               	addwfc	fsr2h,f,c
  4271  000B1A  CFDE F01C          	movff	postinc2,writeRegisters@val
  4272  000B1E  CFDD F01D          	movff	postdec2,writeRegisters@val+1
  4273                           
  4274                           ;Shift595.c: 56: if (val == 1) {
  4275  000B22  041C               	decf	writeRegisters@val,w,c
  4276  000B24  101D               	iorwf	writeRegisters@val+1,w,c
  4277  000B26  A4D8               	btfss	status,2,c
  4278  000B28  D002               	goto	l2444
  4279                           
  4280                           ;Shift595.c: 57: do { LATD4 = 1; } while(0);
  4281  000B2A  888C               	bsf	3980,4,c	;volatile
  4282                           
  4283                           ;Shift595.c: 58: } else if (val == 0) {
  4284  000B2C  D004               	goto	l690
  4285  000B2E                     l2444:
  4286  000B2E  501C               	movf	writeRegisters@val,w,c
  4287  000B30  101D               	iorwf	writeRegisters@val+1,w,c
  4288  000B32  B4D8               	btfsc	status,2,c
  4289                           
  4290                           ;Shift595.c: 59: do { LATD4 = 0; } while(0);
  4291  000B34  988C               	bcf	3980,4,c	;volatile
  4292  000B36                     l690:
  4293  000B36  8E8C               	bsf	3980,7,c	;volatile
  4294  000B38  061E               	decf	writeRegisters@i,f,c
  4295  000B3A  A0D8               	btfss	status,0,c
  4296  000B3C  061F               	decf	writeRegisters@i+1,f,c
  4297  000B3E  D7E1               	goto	l2436
  4298  000B40                     l692:
  4299  000B40  9E8C               	bcf	3980,7,c	;volatile
  4300                           
  4301                           ;Shift595.c: 67: Delay(1);
  4302  000B42  0E01               	movlw	1
  4303  000B44  6E13               	movwf	Delay@wait,c
  4304  000B46  0E00               	movlw	0
  4305  000B48  6E14               	movwf	Delay@wait+1,c
  4306  000B4A  0E00               	movlw	0
  4307  000B4C  6E15               	movwf	Delay@wait+2,c
  4308  000B4E  0E00               	movlw	0
  4309  000B50  6E16               	movwf	Delay@wait+3,c
  4310  000B52  EC23  F007         	call	_Delay	;wreg free
  4311                           
  4312                           ;Shift595.c: 68: do { LATD6 = 1; } while(0);
  4313  000B56  8C8C               	bsf	3980,6,c	;volatile
  4314                           
  4315                           ;Shift595.c: 69: Delay(1);
  4316  000B58  0E01               	movlw	1
  4317  000B5A  6E13               	movwf	Delay@wait,c
  4318  000B5C  0E00               	movlw	0
  4319  000B5E  6E14               	movwf	Delay@wait+1,c
  4320  000B60  0E00               	movlw	0
  4321  000B62  6E15               	movwf	Delay@wait+2,c
  4322  000B64  0E00               	movlw	0
  4323  000B66  6E16               	movwf	Delay@wait+3,c
  4324  000B68  EC23  F007         	call	_Delay	;wreg free
  4325                           
  4326                           ;Shift595.c: 70: do { LATD6 = 0; } while(0);
  4327  000B6C  9C8C               	bcf	3980,6,c	;volatile
  4328  000B6E  0012               	return	
  4329  000B70                     __end_of_writeRegisters:
  4330                           	opt stack 0
  4331                           tblptru	equ	0xFF8
  4332                           tblptrh	equ	0xFF7
  4333                           tblptrl	equ	0xFF6
  4334                           tablat	equ	0xFF5
  4335                           prodh	equ	0xFF4
  4336                           prodl	equ	0xFF3
  4337                           intcon	equ	0xFF2
  4338                           intcon2	equ	0xFF1
  4339                           postinc0	equ	0xFEE
  4340                           wreg	equ	0xFE8
  4341                           indf2	equ	0xFDF
  4342                           postinc2	equ	0xFDE
  4343                           postdec2	equ	0xFDD
  4344                           plusw2	equ	0xFDB
  4345                           fsr2h	equ	0xFDA
  4346                           fsr2l	equ	0xFD9
  4347                           status	equ	0xFD8
  4348                           
  4349 ;; *************** function _Delay *****************
  4350 ;; Defined at:
  4351 ;;		line 9 in file "Functions.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;  wait            4   18[COMRAM] long 
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;  i               4   23[COMRAM] long 
  4356 ;; Return value:  Size  Location     Type
  4357 ;;                  1    wreg      void 
  4358 ;; Registers used:
  4359 ;;		wreg, status,2, status,0
  4360 ;; Tracked objects:
  4361 ;;		On entry : 0/0
  4362 ;;		On exit  : 0/0
  4363 ;;		Unchanged: 0/0
  4364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4365 ;;      Params:         4       0       0       0       0       0       0
  4366 ;;      Locals:         4       0       0       0       0       0       0
  4367 ;;      Temps:          1       0       0       0       0       0       0
  4368 ;;      Totals:         9       0       0       0       0       0       0
  4369 ;;Total ram usage:        9 bytes
  4370 ;; Hardware stack levels used:    1
  4371 ;; Hardware stack levels required when called:    3
  4372 ;; This function calls:
  4373 ;;		Nothing
  4374 ;; This function is called by:
  4375 ;;		_respondECU
  4376 ;;		_StartUp595
  4377 ;;		_writeRegisters
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           	psect	text30
  4382  000E46                     __ptext30:
  4383                           	opt stack 0
  4384  000E46                     _Delay:
  4385                           	opt stack 25
  4386                           
  4387                           ;Functions.c: 10: long int i = 0;
  4388                           
  4389                           ;incstack = 0
  4390  000E46  0E00               	movlw	0
  4391  000E48  6E18               	movwf	Delay@i,c
  4392  000E4A  0E00               	movlw	0
  4393  000E4C  6E19               	movwf	Delay@i+1,c
  4394  000E4E  0E00               	movlw	0
  4395  000E50  6E1A               	movwf	Delay@i+2,c
  4396  000E52  0E00               	movlw	0
  4397  000E54  6E1B               	movwf	Delay@i+3,c
  4398                           
  4399                           ;Functions.c: 11: for (; wait > i; i++) {
  4400  000E56  D00E               	goto	l2324
  4401  000E58                     l2320:
  4402                           
  4403                           ;Functions.c: 12: _delay((unsigned long)((1)*(16000000/4000.0)));
  4404  000E58  0E06               	movlw	6
  4405  000E5A  6E17               	movwf	??_Delay& (0+255),c
  4406  000E5C  0E30               	movlw	48
  4407  000E5E                     u1967:
  4408  000E5E  2EE8               	decfsz	wreg,f,c
  4409  000E60  D7FE               	goto	u1967
  4410  000E62  2E17               	decfsz	??_Delay& (0+255),f,c
  4411  000E64  D7FC               	goto	u1967
  4412  000E66  D000               	nop2	
  4413  000E68  0E01               	movlw	1
  4414  000E6A  2618               	addwf	Delay@i,f,c
  4415  000E6C  0E00               	movlw	0
  4416  000E6E  2219               	addwfc	Delay@i+1,f,c
  4417  000E70  221A               	addwfc	Delay@i+2,f,c
  4418  000E72  221B               	addwfc	Delay@i+3,f,c
  4419  000E74                     l2324:
  4420  000E74  5013               	movf	Delay@wait,w,c
  4421  000E76  5C18               	subwf	Delay@i,w,c
  4422  000E78  5014               	movf	Delay@wait+1,w,c
  4423  000E7A  5819               	subwfb	Delay@i+1,w,c
  4424  000E7C  5015               	movf	Delay@wait+2,w,c
  4425  000E7E  581A               	subwfb	Delay@i+2,w,c
  4426  000E80  501B               	movf	Delay@i+3,w,c
  4427  000E82  0A80               	xorlw	128
  4428  000E84  6E17               	movwf	??_Delay& (0+255),c
  4429  000E86  5016               	movf	Delay@wait+3,w,c
  4430  000E88  0A80               	xorlw	128
  4431  000E8A  5817               	subwfb	??_Delay& (0+255),w,c
  4432  000E8C  B0D8               	btfsc	status,0,c
  4433  000E8E  0012               	return	
  4434  000E90  D7E3               	goto	l2320
  4435  000E92                     __end_of_Delay:
  4436                           	opt stack 0
  4437                           tblptru	equ	0xFF8
  4438                           tblptrh	equ	0xFF7
  4439                           tblptrl	equ	0xFF6
  4440                           tablat	equ	0xFF5
  4441                           prodh	equ	0xFF4
  4442                           prodl	equ	0xFF3
  4443                           intcon	equ	0xFF2
  4444                           intcon2	equ	0xFF1
  4445                           postinc0	equ	0xFEE
  4446                           wreg	equ	0xFE8
  4447                           indf2	equ	0xFDF
  4448                           postinc2	equ	0xFDE
  4449                           postdec2	equ	0xFDD
  4450                           plusw2	equ	0xFDB
  4451                           fsr2h	equ	0xFDA
  4452                           fsr2l	equ	0xFD9
  4453                           status	equ	0xFD8
  4454                           
  4455 ;; *************** function _EnableSlavePower *****************
  4456 ;; Defined at:
  4457 ;;		line 32 in file "PDU.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;  slave           1    wreg     enum E5
  4460 ;;  onof            2   28[COMRAM] int 
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;  slave           1   30[COMRAM] enum E5
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  1    wreg      void 
  4465 ;; Registers used:
  4466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4472 ;;      Params:         2       0       0       0       0       0       0
  4473 ;;      Locals:         1       0       0       0       0       0       0
  4474 ;;      Temps:          0       0       0       0       0       0       0
  4475 ;;      Totals:         3       0       0       0       0       0       0
  4476 ;;Total ram usage:        3 bytes
  4477 ;; Hardware stack levels used:    1
  4478 ;; Hardware stack levels required when called:    4
  4479 ;; This function calls:
  4480 ;;		_SetPin595
  4481 ;; This function is called by:
  4482 ;;		_processPowerRequest
  4483 ;;		_PDUStartup
  4484 ;;		_FuseSystem
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           	psect	text31
  4489  000582                     __ptext31:
  4490                           	opt stack 0
  4491  000582                     _EnableSlavePower:
  4492                           	opt stack 24
  4493                           
  4494                           ;incstack = 0
  4495                           ;EnableSlavePower@slave stored from wreg
  4496  000582  6E1F               	movwf	EnableSlavePower@slave,c
  4497                           
  4498                           ;PDU.c: 33: switch (slave) {
  4499  000584  D05A               	goto	l2488
  4500  000586                     l2474:
  4501                           
  4502                           ;PDU.c: 35: SetPin595(2, 1, onof);
  4503  000586  0E00               	movlw	0
  4504  000588  6E14               	movwf	SetPin595@Reg+1,c
  4505  00058A  0E02               	movlw	2
  4506  00058C  6E13               	movwf	SetPin595@Reg,c
  4507  00058E  0E00               	movlw	0
  4508  000590  6E16               	movwf	SetPin595@pin+1,c
  4509  000592  0E01               	movlw	1
  4510  000594  6E15               	movwf	SetPin595@pin,c
  4511  000596  C01D  F017         	movff	EnableSlavePower@onof,SetPin595@value
  4512  00059A  C01E  F018         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  4513  00059E  ECFC  F006         	call	_SetPin595	;wreg free
  4514                           
  4515                           ;PDU.c: 36: break;
  4516  0005A2  0012               	return	
  4517  0005A4                     l2476:
  4518                           
  4519                           ;PDU.c: 38: SetPin595(1, 1, onof);
  4520  0005A4  0E00               	movlw	0
  4521  0005A6  6E14               	movwf	SetPin595@Reg+1,c
  4522  0005A8  0E01               	movlw	1
  4523  0005AA  6E13               	movwf	SetPin595@Reg,c
  4524  0005AC  0E00               	movlw	0
  4525  0005AE  6E16               	movwf	SetPin595@pin+1,c
  4526  0005B0  0E01               	movlw	1
  4527  0005B2  6E15               	movwf	SetPin595@pin,c
  4528  0005B4  C01D  F017         	movff	EnableSlavePower@onof,SetPin595@value
  4529  0005B8  C01E  F018         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  4530  0005BC  ECFC  F006         	call	_SetPin595	;wreg free
  4531                           
  4532                           ;PDU.c: 39: break;
  4533  0005C0  0012               	return	
  4534  0005C2                     l2478:
  4535                           
  4536                           ;PDU.c: 41: SetPin595(1, 6, onof);
  4537  0005C2  0E00               	movlw	0
  4538  0005C4  6E14               	movwf	SetPin595@Reg+1,c
  4539  0005C6  0E01               	movlw	1
  4540  0005C8  6E13               	movwf	SetPin595@Reg,c
  4541  0005CA  0E00               	movlw	0
  4542  0005CC  6E16               	movwf	SetPin595@pin+1,c
  4543  0005CE  0E06               	movlw	6
  4544  0005D0  6E15               	movwf	SetPin595@pin,c
  4545  0005D2  C01D  F017         	movff	EnableSlavePower@onof,SetPin595@value
  4546  0005D6  C01E  F018         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  4547  0005DA  ECFC  F006         	call	_SetPin595	;wreg free
  4548                           
  4549                           ;PDU.c: 42: break;
  4550  0005DE  0012               	return	
  4551  0005E0                     l2480:
  4552                           
  4553                           ;PDU.c: 44: SetPin595(2, 6, onof);
  4554  0005E0  0E00               	movlw	0
  4555  0005E2  6E14               	movwf	SetPin595@Reg+1,c
  4556  0005E4  0E02               	movlw	2
  4557  0005E6  6E13               	movwf	SetPin595@Reg,c
  4558  0005E8  0E00               	movlw	0
  4559  0005EA  6E16               	movwf	SetPin595@pin+1,c
  4560  0005EC  0E06               	movlw	6
  4561  0005EE  6E15               	movwf	SetPin595@pin,c
  4562  0005F0  C01D  F017         	movff	EnableSlavePower@onof,SetPin595@value
  4563  0005F4  C01E  F018         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  4564  0005F8  ECFC  F006         	call	_SetPin595	;wreg free
  4565                           
  4566                           ;PDU.c: 45: break;
  4567  0005FC  0012               	return	
  4568  0005FE                     l2482:
  4569                           
  4570                           ;PDU.c: 47: SetPin595(3, 6, onof);
  4571  0005FE  0E00               	movlw	0
  4572  000600  6E14               	movwf	SetPin595@Reg+1,c
  4573  000602  0E03               	movlw	3
  4574  000604  6E13               	movwf	SetPin595@Reg,c
  4575  000606  0E00               	movlw	0
  4576  000608  6E16               	movwf	SetPin595@pin+1,c
  4577  00060A  0E06               	movlw	6
  4578  00060C  6E15               	movwf	SetPin595@pin,c
  4579  00060E  C01D  F017         	movff	EnableSlavePower@onof,SetPin595@value
  4580  000612  C01E  F018         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  4581  000616  ECFC  F006         	call	_SetPin595	;wreg free
  4582                           
  4583                           ;PDU.c: 48: break;
  4584  00061A  0012               	return	
  4585  00061C                     l2484:
  4586                           
  4587                           ;PDU.c: 50: SetPin595(3, 1, onof);
  4588  00061C  0E00               	movlw	0
  4589  00061E  6E14               	movwf	SetPin595@Reg+1,c
  4590  000620  0E03               	movlw	3
  4591  000622  6E13               	movwf	SetPin595@Reg,c
  4592  000624  0E00               	movlw	0
  4593  000626  6E16               	movwf	SetPin595@pin+1,c
  4594  000628  0E01               	movlw	1
  4595  00062A  6E15               	movwf	SetPin595@pin,c
  4596  00062C  C01D  F017         	movff	EnableSlavePower@onof,SetPin595@value
  4597  000630  C01E  F018         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  4598  000634  ECFC  F006         	call	_SetPin595	;wreg free
  4599                           
  4600                           ;PDU.c: 52: }
  4601                           
  4602                           ;PDU.c: 51: break;
  4603  000638  0012               	return	
  4604  00063A                     l2488:
  4605  00063A  501F               	movf	EnableSlavePower@slave,w,c
  4606                           
  4607                           ; Switch size 1, requested type "space"
  4608                           ; Number of cases is 6, Range of values is 1 to 6
  4609                           ; switch strategies available:
  4610                           ; Name         Instructions Cycles
  4611                           ; simple_byte           19    10 (average)
  4612                           ;	Chosen strategy is simple_byte
  4613  00063C  0A01               	xorlw	1	; case 1
  4614  00063E  B4D8               	btfsc	status,2,c
  4615  000640  D7CF               	goto	l2480
  4616  000642  0A03               	xorlw	3	; case 2
  4617  000644  B4D8               	btfsc	status,2,c
  4618  000646  D7BD               	goto	l2478
  4619  000648  0A01               	xorlw	1	; case 3
  4620  00064A  B4D8               	btfsc	status,2,c
  4621  00064C  D79C               	goto	l2474
  4622  00064E  0A07               	xorlw	7	; case 4
  4623  000650  B4D8               	btfsc	status,2,c
  4624  000652  D7A8               	goto	l2476
  4625  000654  0A01               	xorlw	1	; case 5
  4626  000656  B4D8               	btfsc	status,2,c
  4627  000658  D7D2               	goto	l2482
  4628  00065A  0A03               	xorlw	3	; case 6
  4629  00065C  A4D8               	btfss	status,2,c
  4630  00065E  0012               	return	
  4631  000660  D7DD               	goto	l2484
  4632  000662                     __end_of_EnableSlavePower:
  4633                           	opt stack 0
  4634                           tblptru	equ	0xFF8
  4635                           tblptrh	equ	0xFF7
  4636                           tblptrl	equ	0xFF6
  4637                           tablat	equ	0xFF5
  4638                           prodh	equ	0xFF4
  4639                           prodl	equ	0xFF3
  4640                           intcon	equ	0xFF2
  4641                           intcon2	equ	0xFF1
  4642                           postinc0	equ	0xFEE
  4643                           wreg	equ	0xFE8
  4644                           indf2	equ	0xFDF
  4645                           postinc2	equ	0xFDE
  4646                           postdec2	equ	0xFDD
  4647                           plusw2	equ	0xFDB
  4648                           fsr2h	equ	0xFDA
  4649                           fsr2l	equ	0xFD9
  4650                           status	equ	0xFD8
  4651                           
  4652 ;; *************** function _SetPin595 *****************
  4653 ;; Defined at:
  4654 ;;		line 32 in file "Shift595.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;  Reg             2   18[COMRAM] int 
  4657 ;;  pin             2   20[COMRAM] int 
  4658 ;;  value           2   22[COMRAM] int 
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;		None
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  1    wreg      void 
  4663 ;; Registers used:
  4664 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4670 ;;      Params:         6       0       0       0       0       0       0
  4671 ;;      Locals:         0       0       0       0       0       0       0
  4672 ;;      Temps:          4       0       0       0       0       0       0
  4673 ;;      Totals:        10       0       0       0       0       0       0
  4674 ;;Total ram usage:       10 bytes
  4675 ;; Hardware stack levels used:    1
  4676 ;; Hardware stack levels required when called:    3
  4677 ;; This function calls:
  4678 ;;		Nothing
  4679 ;; This function is called by:
  4680 ;;		_EnableSlavePower
  4681 ;;		_ReadCurrent
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685                           	psect	text32
  4686  000DF8                     __ptext32:
  4687                           	opt stack 0
  4688  000DF8                     _SetPin595:
  4689                           	opt stack 24
  4690                           
  4691                           ;Shift595.c: 33: registers[((Reg - 1)*8) + pin] = value;
  4692                           
  4693                           ;incstack = 0
  4694  000DF8  0EF0               	movlw	240
  4695  000DFA  6E19               	movwf	??_SetPin595& (0+255),c
  4696  000DFC  0EFF               	movlw	255
  4697  000DFE  6E1A               	movwf	(??_SetPin595+1)& (0+255),c
  4698  000E00  C013  F01B         	movff	SetPin595@Reg,??_SetPin595+2
  4699  000E04  C014  F01C         	movff	SetPin595@Reg+1,??_SetPin595+3
  4700  000E08  90D8               	bcf	status,0,c
  4701  000E0A  361B               	rlcf	??_SetPin595+2,f,c
  4702  000E0C  361C               	rlcf	??_SetPin595+3,f,c
  4703  000E0E  90D8               	bcf	status,0,c
  4704  000E10  361B               	rlcf	??_SetPin595+2,f,c
  4705  000E12  361C               	rlcf	??_SetPin595+3,f,c
  4706  000E14  90D8               	bcf	status,0,c
  4707  000E16  361B               	rlcf	??_SetPin595+2,f,c
  4708  000E18  361C               	rlcf	??_SetPin595+3,f,c
  4709  000E1A  5015               	movf	SetPin595@pin,w,c
  4710  000E1C  261B               	addwf	??_SetPin595+2,f,c
  4711  000E1E  5016               	movf	SetPin595@pin+1,w,c
  4712  000E20  221C               	addwfc	??_SetPin595+3,f,c
  4713  000E22  90D8               	bcf	status,0,c
  4714  000E24  361B               	rlcf	??_SetPin595+2,f,c
  4715  000E26  361C               	rlcf	??_SetPin595+3,f,c
  4716  000E28  5019               	movf	??_SetPin595,w,c
  4717  000E2A  261B               	addwf	??_SetPin595+2,f,c
  4718  000E2C  501A               	movf	??_SetPin595+1,w,c
  4719  000E2E  221C               	addwfc	??_SetPin595+3,f,c
  4720  000E30  0E60               	movlw	low _registers
  4721  000E32  241B               	addwf	??_SetPin595+2,w,c
  4722  000E34  6ED9               	movwf	fsr2l,c
  4723  000E36  0E00               	movlw	high _registers
  4724  000E38  201C               	addwfc	??_SetPin595+3,w,c
  4725  000E3A  6EDA               	movwf	fsr2h,c
  4726  000E3C  C017  FFDE         	movff	SetPin595@value,postinc2
  4727  000E40  C018  FFDD         	movff	SetPin595@value+1,postdec2
  4728  000E44  0012               	return		;funcret
  4729  000E46                     __end_of_SetPin595:
  4730                           	opt stack 0
  4731                           tblptru	equ	0xFF8
  4732                           tblptrh	equ	0xFF7
  4733                           tblptrl	equ	0xFF6
  4734                           tablat	equ	0xFF5
  4735                           prodh	equ	0xFF4
  4736                           prodl	equ	0xFF3
  4737                           intcon	equ	0xFF2
  4738                           intcon2	equ	0xFF1
  4739                           postinc0	equ	0xFEE
  4740                           wreg	equ	0xFE8
  4741                           indf2	equ	0xFDF
  4742                           postinc2	equ	0xFDE
  4743                           postdec2	equ	0xFDD
  4744                           plusw2	equ	0xFDB
  4745                           fsr2h	equ	0xFDA
  4746                           fsr2l	equ	0xFD9
  4747                           status	equ	0xFD8
  4748                           
  4749 ;; *************** function _ComputeStorageData *****************
  4750 ;; Defined at:
  4751 ;;		line 94 in file "PDU.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;		None
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;  i               2   21[COMRAM] int 
  4756 ;; Return value:  Size  Location     Type
  4757 ;;                  1    wreg      void 
  4758 ;; Registers used:
  4759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4760 ;; Tracked objects:
  4761 ;;		On entry : 0/0
  4762 ;;		On exit  : 0/0
  4763 ;;		Unchanged: 0/0
  4764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4765 ;;      Params:         0       0       0       0       0       0       0
  4766 ;;      Locals:         2       0       0       0       0       0       0
  4767 ;;      Temps:          2       0       0       0       0       0       0
  4768 ;;      Totals:         4       0       0       0       0       0       0
  4769 ;;Total ram usage:        4 bytes
  4770 ;; Hardware stack levels used:    1
  4771 ;; Hardware stack levels required when called:    4
  4772 ;; This function calls:
  4773 ;;		_DATAEE_ReadByte
  4774 ;; This function is called by:
  4775 ;;		_PDUStartup
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779                           	psect	text33
  4780  000662                     __ptext33:
  4781                           	opt stack 0
  4782  000662                     _ComputeStorageData:
  4783                           	opt stack 25
  4784                           
  4785                           ;PDU.c: 95: for (int i = 0; i < 12; i++) {
  4786                           
  4787                           ;incstack = 0
  4788  000662  0E00               	movlw	0
  4789  000664  6E17               	movwf	ComputeStorageData@i+1,c
  4790  000666  0E00               	movlw	0
  4791  000668  6E16               	movwf	ComputeStorageData@i,c
  4792  00066A                     l2760:
  4793  00066A  BE17               	btfsc	ComputeStorageData@i+1,7,c
  4794  00066C  D006               	goto	l2764
  4795  00066E  5017               	movf	ComputeStorageData@i+1,w,c
  4796  000670  E111               	bnz	l2770
  4797  000672  0E0C               	movlw	12
  4798  000674  5C16               	subwf	ComputeStorageData@i,w,c
  4799  000676  B0D8               	btfsc	status,0,c
  4800  000678  D00D               	goto	l2770
  4801  00067A                     l2764:
  4802                           
  4803                           ;PDU.c: 96: data[i] = DATAEE_ReadByte(i);
  4804  00067A  0EDC               	movlw	low _data
  4805  00067C  2416               	addwf	ComputeStorageData@i,w,c
  4806  00067E  6ED9               	movwf	fsr2l,c
  4807  000680  0E00               	movlw	high _data
  4808  000682  2017               	addwfc	ComputeStorageData@i+1,w,c
  4809  000684  6EDA               	movwf	fsr2h,c
  4810  000686  5016               	movf	ComputeStorageData@i,w,c
  4811  000688  EC52  F008         	call	_DATAEE_ReadByte
  4812  00068C  6EDF               	movwf	indf2,c
  4813  00068E  4A16               	infsnz	ComputeStorageData@i,f,c
  4814  000690  2A17               	incf	ComputeStorageData@i+1,f,c
  4815  000692  D7EB               	goto	l2760
  4816  000694                     l2770:
  4817                           
  4818                           ;PDU.c: 97: }
  4819                           ;PDU.c: 98: Currentcomp[0] = ((data[0] << 8) | data[1]);
  4820  000694  0100               	movlb	0	; () banked
  4821  000696  51DD               	movf	(_data+1)& (0+255),w,b
  4822  000698  C0DC  F014         	movff	_data,??_ComputeStorageData
  4823  00069C  6A15               	clrf	(??_ComputeStorageData+1)& (0+255),c
  4824  00069E  C014  F015         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  4825  0006A2  6A14               	clrf	??_ComputeStorageData,c
  4826  0006A4  1014               	iorwf	??_ComputeStorageData,w,c
  4827  0006A6  0100               	movlb	0	; () banked
  4828  0006A8  6FD0               	movwf	_Currentcomp& (0+255),b
  4829  0006AA  5015               	movf	??_ComputeStorageData+1,w,c
  4830  0006AC  0100               	movlb	0	; () banked
  4831  0006AE  6FD1               	movwf	(_Currentcomp+1)& (0+255),b
  4832                           
  4833                           ;PDU.c: 99: Currentcomp[1] = ((data[2] << 8) | data[3]);
  4834  0006B0  0100               	movlb	0	; () banked
  4835  0006B2  51DF               	movf	(_data+3)& (0+255),w,b
  4836  0006B4  C0DE  F014         	movff	_data+2,??_ComputeStorageData
  4837  0006B8  6A15               	clrf	(??_ComputeStorageData+1)& (0+255),c
  4838  0006BA  C014  F015         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  4839  0006BE  6A14               	clrf	??_ComputeStorageData,c
  4840  0006C0  1014               	iorwf	??_ComputeStorageData,w,c
  4841  0006C2  0100               	movlb	0	; () banked
  4842  0006C4  6FD2               	movwf	(_Currentcomp+2)& (0+255),b
  4843  0006C6  5015               	movf	??_ComputeStorageData+1,w,c
  4844  0006C8  0100               	movlb	0	; () banked
  4845  0006CA  6FD3               	movwf	(_Currentcomp+3)& (0+255),b
  4846                           
  4847                           ;PDU.c: 100: Currentcomp[2] = ((data[4] << 8) | data[5]);
  4848  0006CC  0100               	movlb	0	; () banked
  4849  0006CE  51E1               	movf	(_data+5)& (0+255),w,b
  4850  0006D0  C0E0  F014         	movff	_data+4,??_ComputeStorageData
  4851  0006D4  6A15               	clrf	(??_ComputeStorageData+1)& (0+255),c
  4852  0006D6  C014  F015         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  4853  0006DA  6A14               	clrf	??_ComputeStorageData,c
  4854  0006DC  1014               	iorwf	??_ComputeStorageData,w,c
  4855  0006DE  0100               	movlb	0	; () banked
  4856  0006E0  6FD4               	movwf	(_Currentcomp+4)& (0+255),b
  4857  0006E2  5015               	movf	??_ComputeStorageData+1,w,c
  4858  0006E4  0100               	movlb	0	; () banked
  4859  0006E6  6FD5               	movwf	(_Currentcomp+5)& (0+255),b
  4860                           
  4861                           ;PDU.c: 101: Currentcomp[3] = ((data[6] << 8) | data[7]);
  4862  0006E8  0100               	movlb	0	; () banked
  4863  0006EA  51E3               	movf	(_data+7)& (0+255),w,b
  4864  0006EC  C0E2  F014         	movff	_data+6,??_ComputeStorageData
  4865  0006F0  6A15               	clrf	(??_ComputeStorageData+1)& (0+255),c
  4866  0006F2  C014  F015         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  4867  0006F6  6A14               	clrf	??_ComputeStorageData,c
  4868  0006F8  1014               	iorwf	??_ComputeStorageData,w,c
  4869  0006FA  0100               	movlb	0	; () banked
  4870  0006FC  6FD6               	movwf	(_Currentcomp+6)& (0+255),b
  4871  0006FE  5015               	movf	??_ComputeStorageData+1,w,c
  4872  000700  0100               	movlb	0	; () banked
  4873  000702  6FD7               	movwf	(_Currentcomp+7)& (0+255),b
  4874                           
  4875                           ;PDU.c: 102: Currentcomp[4] = ((data[8] << 8) | data[9]);
  4876  000704  0100               	movlb	0	; () banked
  4877  000706  51E5               	movf	(_data+9)& (0+255),w,b
  4878  000708  C0E4  F014         	movff	_data+8,??_ComputeStorageData
  4879  00070C  6A15               	clrf	(??_ComputeStorageData+1)& (0+255),c
  4880  00070E  C014  F015         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  4881  000712  6A14               	clrf	??_ComputeStorageData,c
  4882  000714  1014               	iorwf	??_ComputeStorageData,w,c
  4883  000716  0100               	movlb	0	; () banked
  4884  000718  6FD8               	movwf	(_Currentcomp+8)& (0+255),b
  4885  00071A  5015               	movf	??_ComputeStorageData+1,w,c
  4886  00071C  0100               	movlb	0	; () banked
  4887  00071E  6FD9               	movwf	(_Currentcomp+9)& (0+255),b
  4888                           
  4889                           ;PDU.c: 103: Currentcomp[5] = ((data[10] << 8) | data[11]);
  4890  000720  0100               	movlb	0	; () banked
  4891  000722  51E7               	movf	(_data+11)& (0+255),w,b
  4892  000724  C0E6  F014         	movff	_data+10,??_ComputeStorageData
  4893  000728  6A15               	clrf	(??_ComputeStorageData+1)& (0+255),c
  4894  00072A  C014  F015         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  4895  00072E  6A14               	clrf	??_ComputeStorageData,c
  4896  000730  1014               	iorwf	??_ComputeStorageData,w,c
  4897  000732  0100               	movlb	0	; () banked
  4898  000734  6FDA               	movwf	(_Currentcomp+10)& (0+255),b
  4899  000736  5015               	movf	??_ComputeStorageData+1,w,c
  4900  000738  0100               	movlb	0	; () banked
  4901  00073A  6FDB               	movwf	(_Currentcomp+11)& (0+255),b
  4902                           
  4903                           ; BSR set to: 0
  4904  00073C  0012               	return		;funcret
  4905  00073E                     __end_of_ComputeStorageData:
  4906                           	opt stack 0
  4907                           tblptru	equ	0xFF8
  4908                           tblptrh	equ	0xFF7
  4909                           tblptrl	equ	0xFF6
  4910                           tablat	equ	0xFF5
  4911                           prodh	equ	0xFF4
  4912                           prodl	equ	0xFF3
  4913                           intcon	equ	0xFF2
  4914                           intcon2	equ	0xFF1
  4915                           postinc0	equ	0xFEE
  4916                           wreg	equ	0xFE8
  4917                           indf2	equ	0xFDF
  4918                           postinc2	equ	0xFDE
  4919                           postdec2	equ	0xFDD
  4920                           plusw2	equ	0xFDB
  4921                           fsr2h	equ	0xFDA
  4922                           fsr2l	equ	0xFD9
  4923                           status	equ	0xFD8
  4924                           
  4925 ;; *************** function _DATAEE_ReadByte *****************
  4926 ;; Defined at:
  4927 ;;		line 189 in file "mcc_generated_files/memory.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;  bAdd            1    wreg     unsigned char 
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;  bAdd            1   18[COMRAM] unsigned char 
  4932 ;; Return value:  Size  Location     Type
  4933 ;;                  1    wreg      unsigned char 
  4934 ;; Registers used:
  4935 ;;		wreg, status,2
  4936 ;; Tracked objects:
  4937 ;;		On entry : 0/0
  4938 ;;		On exit  : 0/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4941 ;;      Params:         0       0       0       0       0       0       0
  4942 ;;      Locals:         1       0       0       0       0       0       0
  4943 ;;      Temps:          0       0       0       0       0       0       0
  4944 ;;      Totals:         1       0       0       0       0       0       0
  4945 ;;Total ram usage:        1 bytes
  4946 ;; Hardware stack levels used:    1
  4947 ;; Hardware stack levels required when called:    3
  4948 ;; This function calls:
  4949 ;;		Nothing
  4950 ;; This function is called by:
  4951 ;;		_ComputeStorageData
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955                           	psect	text34
  4956  0010A4                     __ptext34:
  4957                           	opt stack 0
  4958  0010A4                     _DATAEE_ReadByte:
  4959                           	opt stack 25
  4960                           
  4961                           ; BSR set to: 0
  4962                           ;incstack = 0
  4963                           ;DATAEE_ReadByte@bAdd stored from wreg
  4964  0010A4  6E13               	movwf	DATAEE_ReadByte@bAdd,c
  4965                           
  4966                           ;memory.c: 191: EEADR = (bAdd & 0xFF);
  4967  0010A6  C013  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
  4968                           
  4969                           ;memory.c: 192: EECON1bits.CFGS = 0;
  4970  0010AA  9CA6               	bcf	4006,6,c	;volatile
  4971                           
  4972                           ;memory.c: 193: EECON1bits.EEPGD = 0;
  4973  0010AC  9EA6               	bcf	4006,7,c	;volatile
  4974                           
  4975                           ;memory.c: 194: EECON1bits.RD = 1;
  4976  0010AE  80A6               	bsf	4006,0,c	;volatile
  4977                           
  4978                           ;memory.c: 195: __nop();
  4979  0010B0  F000               	nop	
  4980                           
  4981                           ;memory.c: 196: __nop();
  4982  0010B2  F000               	nop	
  4983                           
  4984                           ;memory.c: 198: return (EEDATA);
  4985  0010B4  50A8               	movf	4008,w,c	;volatile
  4986  0010B6  0012               	return	
  4987  0010B8                     __end_of_DATAEE_ReadByte:
  4988                           	opt stack 0
  4989                           tblptru	equ	0xFF8
  4990                           tblptrh	equ	0xFF7
  4991                           tblptrl	equ	0xFF6
  4992                           tablat	equ	0xFF5
  4993                           prodh	equ	0xFF4
  4994                           prodl	equ	0xFF3
  4995                           intcon	equ	0xFF2
  4996                           intcon2	equ	0xFF1
  4997                           postinc0	equ	0xFEE
  4998                           wreg	equ	0xFE8
  4999                           indf2	equ	0xFDF
  5000                           postinc2	equ	0xFDE
  5001                           postdec2	equ	0xFDD
  5002                           plusw2	equ	0xFDB
  5003                           fsr2h	equ	0xFDA
  5004                           fsr2l	equ	0xFD9
  5005                           status	equ	0xFD8
  5006                           
  5007 ;; *************** function _CoolingStart *****************
  5008 ;; Defined at:
  5009 ;;		line 19 in file "CoolingControl.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;		None
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;		None
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  1    wreg      void 
  5016 ;; Registers used:
  5017 ;;		wreg, status,2, status,0, cstack
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5023 ;;      Params:         0       0       0       0       0       0       0
  5024 ;;      Locals:         0       0       0       0       0       0       0
  5025 ;;      Temps:          0       0       0       0       0       0       0
  5026 ;;      Totals:         0       0       0       0       0       0       0
  5027 ;;Total ram usage:        0 bytes
  5028 ;; Hardware stack levels used:    1
  5029 ;; Hardware stack levels required when called:    4
  5030 ;; This function calls:
  5031 ;;		_PWM4_LoadDutyValue
  5032 ;;		_PotSetpoint
  5033 ;; This function is called by:
  5034 ;;		_main
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038                           	psect	text35
  5039  001044                     __ptext35:
  5040                           	opt stack 0
  5041  001044                     _CoolingStart:
  5042                           	opt stack 26
  5043                           
  5044                           ;CoolingControl.c: 20: PotSetpoint(40);
  5045                           
  5046                           ;incstack = 0
  5047  001044  0E00               	movlw	0
  5048  001046  6E14               	movwf	PotSetpoint@new_point+1,c
  5049  001048  0E28               	movlw	40
  5050  00104A  6E13               	movwf	PotSetpoint@new_point,c
  5051  00104C  EC76  F004         	call	_PotSetpoint	;wreg free
  5052                           
  5053                           ;CoolingControl.c: 21: PWM4_LoadDutyValue(20);
  5054  001050  0E00               	movlw	0
  5055  001052  6E14               	movwf	PWM4_LoadDutyValue@dutyValue+1,c
  5056  001054  0E14               	movlw	20
  5057  001056  6E13               	movwf	PWM4_LoadDutyValue@dutyValue,c
  5058  001058  EC89  F007         	call	_PWM4_LoadDutyValue	;wreg free
  5059  00105C  0012               	return		;funcret
  5060  00105E                     __end_of_CoolingStart:
  5061                           	opt stack 0
  5062                           tblptru	equ	0xFF8
  5063                           tblptrh	equ	0xFF7
  5064                           tblptrl	equ	0xFF6
  5065                           tablat	equ	0xFF5
  5066                           prodh	equ	0xFF4
  5067                           prodl	equ	0xFF3
  5068                           intcon	equ	0xFF2
  5069                           intcon2	equ	0xFF1
  5070                           postinc0	equ	0xFEE
  5071                           wreg	equ	0xFE8
  5072                           indf2	equ	0xFDF
  5073                           postinc2	equ	0xFDE
  5074                           postdec2	equ	0xFDD
  5075                           plusw2	equ	0xFDB
  5076                           fsr2h	equ	0xFDA
  5077                           fsr2l	equ	0xFD9
  5078                           status	equ	0xFD8
  5079                           
  5080 ;; *************** function _PotSetpoint *****************
  5081 ;; Defined at:
  5082 ;;		line 20 in file "DigiPot.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;  new_point       2   18[COMRAM] int 
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;  new_pos         2   26[COMRAM] int 
  5087 ;;  x               2   24[COMRAM] int 
  5088 ;;  set_point       2   22[COMRAM] int 
  5089 ;; Return value:  Size  Location     Type
  5090 ;;                  1    wreg      void 
  5091 ;; Registers used:
  5092 ;;		wreg, status,2, status,0
  5093 ;; Tracked objects:
  5094 ;;		On entry : 0/0
  5095 ;;		On exit  : 0/0
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5098 ;;      Params:         2       0       0       0       0       0       0
  5099 ;;      Locals:         6       0       0       0       0       0       0
  5100 ;;      Temps:          2       0       0       0       0       0       0
  5101 ;;      Totals:        10       0       0       0       0       0       0
  5102 ;;Total ram usage:       10 bytes
  5103 ;; Hardware stack levels used:    1
  5104 ;; Hardware stack levels required when called:    3
  5105 ;; This function calls:
  5106 ;;		Nothing
  5107 ;; This function is called by:
  5108 ;;		_CoolingStart
  5109 ;; This function uses a non-reentrant model
  5110 ;;
  5111                           
  5112                           	psect	text36
  5113  0008EC                     __ptext36:
  5114                           	opt stack 0
  5115  0008EC                     _PotSetpoint:
  5116                           	opt stack 26
  5117                           
  5118                           ;DigiPot.c: 21: int set_point;
  5119                           ;DigiPot.c: 23: if (new_point > 32) {
  5120                           
  5121                           ;incstack = 0
  5122  0008EC  BE14               	btfsc	PotSetpoint@new_point+1,7,c
  5123  0008EE  D00A               	goto	l2722
  5124  0008F0  5014               	movf	PotSetpoint@new_point+1,w,c
  5125  0008F2  E104               	bnz	u1340
  5126  0008F4  0E21               	movlw	33
  5127  0008F6  5C13               	subwf	PotSetpoint@new_point,w,c
  5128  0008F8  A0D8               	btfss	status,0,c
  5129  0008FA  D004               	goto	l2722
  5130  0008FC                     u1340:
  5131                           
  5132                           ;DigiPot.c: 24: new_point = 32;
  5133  0008FC  0E00               	movlw	0
  5134  0008FE  6E14               	movwf	PotSetpoint@new_point+1,c
  5135  000900  0E20               	movlw	32
  5136  000902  6E13               	movwf	PotSetpoint@new_point,c
  5137  000904                     l2722:
  5138                           
  5139                           ;DigiPot.c: 25: }
  5140                           ;DigiPot.c: 26: if (new_point <= 0) {
  5141  000904  BE14               	btfsc	PotSetpoint@new_point+1,7,c
  5142  000906  D005               	goto	l2724
  5143  000908  5014               	movf	PotSetpoint@new_point+1,w,c
  5144  00090A  E107               	bnz	l2726
  5145  00090C  0413               	decf	PotSetpoint@new_point,w,c
  5146  00090E  B0D8               	btfsc	status,0,c
  5147  000910  D004               	goto	l2726
  5148  000912                     l2724:
  5149                           
  5150                           ;DigiPot.c: 27: new_point = 0;
  5151  000912  0E00               	movlw	0
  5152  000914  6E14               	movwf	PotSetpoint@new_point+1,c
  5153  000916  0E00               	movlw	0
  5154  000918  6E13               	movwf	PotSetpoint@new_point,c
  5155  00091A                     l2726:
  5156                           
  5157                           ;DigiPot.c: 28: }
  5158                           ;DigiPot.c: 30: int new_pos = new_point;
  5159  00091A  C013  F01B         	movff	PotSetpoint@new_point,PotSetpoint@new_pos
  5160  00091E  C014  F01C         	movff	PotSetpoint@new_point+1,PotSetpoint@new_pos+1
  5161                           
  5162                           ;DigiPot.c: 34: LATB5 = 0;
  5163  000922  9A8A               	bcf	3978,5,c	;volatile
  5164                           
  5165                           ;DigiPot.c: 37: if (new_pos > prev_pos) {
  5166  000924  501B               	movf	PotSetpoint@new_pos,w,c
  5167  000926  5C30               	subwf	_prev_pos,w,c
  5168  000928  5031               	movf	_prev_pos+1,w,c
  5169  00092A  0A80               	xorlw	128
  5170  00092C  6E15               	movwf	??_PotSetpoint& (0+255),c
  5171  00092E  501C               	movf	PotSetpoint@new_pos+1,w,c
  5172  000930  0A80               	xorlw	128
  5173  000932  5815               	subwfb	??_PotSetpoint& (0+255),w,c
  5174  000934  B0D8               	btfsc	status,0,c
  5175  000936  D00F               	goto	l362
  5176                           
  5177                           ;DigiPot.c: 39: LATB3 = 1;
  5178  000938  868A               	bsf	3978,3,c	;volatile
  5179                           
  5180                           ;DigiPot.c: 40: set_point = new_pos - prev_pos;
  5181  00093A  C030  F015         	movff	_prev_pos,??_PotSetpoint
  5182  00093E  C031  F016         	movff	_prev_pos+1,??_PotSetpoint+1
  5183  000942  1E15               	comf	??_PotSetpoint,f,c
  5184  000944  1E16               	comf	??_PotSetpoint+1,f,c
  5185  000946  4A15               	infsnz	??_PotSetpoint,f,c
  5186  000948  2A16               	incf	??_PotSetpoint+1,f,c
  5187  00094A  501B               	movf	PotSetpoint@new_pos,w,c
  5188  00094C  2415               	addwf	??_PotSetpoint,w,c
  5189  00094E  6E17               	movwf	PotSetpoint@set_point,c
  5190  000950  501C               	movf	PotSetpoint@new_pos+1,w,c
  5191  000952  2016               	addwfc	??_PotSetpoint+1,w,c
  5192  000954  6E18               	movwf	PotSetpoint@set_point+1,c
  5193  000956                     l362:
  5194                           
  5195                           ;DigiPot.c: 41: }
  5196                           ;DigiPot.c: 42: if (new_pos < prev_pos) {
  5197  000956  5030               	movf	_prev_pos,w,c
  5198  000958  5C1B               	subwf	PotSetpoint@new_pos,w,c
  5199  00095A  501C               	movf	PotSetpoint@new_pos+1,w,c
  5200  00095C  0A80               	xorlw	128
  5201  00095E  6E15               	movwf	??_PotSetpoint& (0+255),c
  5202  000960  5031               	movf	_prev_pos+1,w,c
  5203  000962  0A80               	xorlw	128
  5204  000964  5815               	subwfb	??_PotSetpoint& (0+255),w,c
  5205  000966  B0D8               	btfsc	status,0,c
  5206  000968  D00F               	goto	l2740
  5207                           
  5208                           ;DigiPot.c: 44: LATB3 = 0;
  5209  00096A  968A               	bcf	3978,3,c	;volatile
  5210                           
  5211                           ;DigiPot.c: 45: set_point = prev_pos - new_pos;
  5212  00096C  C01B  F015         	movff	PotSetpoint@new_pos,??_PotSetpoint
  5213  000970  C01C  F016         	movff	PotSetpoint@new_pos+1,??_PotSetpoint+1
  5214  000974  1E15               	comf	??_PotSetpoint,f,c
  5215  000976  1E16               	comf	??_PotSetpoint+1,f,c
  5216  000978  4A15               	infsnz	??_PotSetpoint,f,c
  5217  00097A  2A16               	incf	??_PotSetpoint+1,f,c
  5218  00097C  5030               	movf	_prev_pos,w,c
  5219  00097E  2415               	addwf	??_PotSetpoint,w,c
  5220  000980  6E17               	movwf	PotSetpoint@set_point,c
  5221  000982  5031               	movf	_prev_pos+1,w,c
  5222  000984  2016               	addwfc	??_PotSetpoint+1,w,c
  5223  000986  6E18               	movwf	PotSetpoint@set_point+1,c
  5224  000988                     l2740:
  5225                           
  5226                           ;DigiPot.c: 46: }
  5227                           ;DigiPot.c: 48: int x;
  5228                           ;DigiPot.c: 50: for (x = 0; x < set_point; x++) {
  5229  000988  0E00               	movlw	0
  5230  00098A  6E1A               	movwf	PotSetpoint@x+1,c
  5231  00098C  0E00               	movlw	0
  5232  00098E  6E19               	movwf	PotSetpoint@x,c
  5233  000990  D004               	goto	l2744
  5234  000992                     l365:
  5235                           
  5236                           ;DigiPot.c: 51: LATB4 = 1;
  5237  000992  888A               	bsf	3978,4,c	;volatile
  5238                           
  5239                           ;DigiPot.c: 53: LATB4 = 0;
  5240  000994  988A               	bcf	3978,4,c	;volatile
  5241  000996  4A19               	infsnz	PotSetpoint@x,f,c
  5242  000998  2A1A               	incf	PotSetpoint@x+1,f,c
  5243  00099A                     l2744:
  5244  00099A  5017               	movf	PotSetpoint@set_point,w,c
  5245  00099C  5C19               	subwf	PotSetpoint@x,w,c
  5246  00099E  501A               	movf	PotSetpoint@x+1,w,c
  5247  0009A0  0A80               	xorlw	128
  5248  0009A2  6E15               	movwf	??_PotSetpoint& (0+255),c
  5249  0009A4  5018               	movf	PotSetpoint@set_point+1,w,c
  5250  0009A6  0A80               	xorlw	128
  5251  0009A8  5815               	subwfb	??_PotSetpoint& (0+255),w,c
  5252  0009AA  A0D8               	btfss	status,0,c
  5253  0009AC  D7F2               	goto	l365
  5254                           
  5255                           ;DigiPot.c: 55: }
  5256                           ;DigiPot.c: 57: LATB5 = 1;
  5257  0009AE  8A8A               	bsf	3978,5,c	;volatile
  5258                           
  5259                           ;DigiPot.c: 58: prev_pos = new_pos;
  5260  0009B0  C01B  F030         	movff	PotSetpoint@new_pos,_prev_pos
  5261  0009B4  C01C  F031         	movff	PotSetpoint@new_pos+1,_prev_pos+1
  5262  0009B8  0012               	return		;funcret
  5263  0009BA                     __end_of_PotSetpoint:
  5264                           	opt stack 0
  5265                           tblptru	equ	0xFF8
  5266                           tblptrh	equ	0xFF7
  5267                           tblptrl	equ	0xFF6
  5268                           tablat	equ	0xFF5
  5269                           prodh	equ	0xFF4
  5270                           prodl	equ	0xFF3
  5271                           intcon	equ	0xFF2
  5272                           intcon2	equ	0xFF1
  5273                           postinc0	equ	0xFEE
  5274                           wreg	equ	0xFE8
  5275                           indf2	equ	0xFDF
  5276                           postinc2	equ	0xFDE
  5277                           postdec2	equ	0xFDD
  5278                           plusw2	equ	0xFDB
  5279                           fsr2h	equ	0xFDA
  5280                           fsr2l	equ	0xFD9
  5281                           status	equ	0xFD8
  5282                           
  5283 ;; *************** function _PWM4_LoadDutyValue *****************
  5284 ;; Defined at:
  5285 ;;		line 81 in file "mcc_generated_files/pwm4.c"
  5286 ;; Parameters:    Size  Location     Type
  5287 ;;  dutyValue       2   18[COMRAM] unsigned int 
  5288 ;; Auto vars:     Size  Location     Type
  5289 ;;		None
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  1    wreg      void 
  5292 ;; Registers used:
  5293 ;;		wreg, status,2, status,0
  5294 ;; Tracked objects:
  5295 ;;		On entry : 0/0
  5296 ;;		On exit  : 0/0
  5297 ;;		Unchanged: 0/0
  5298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5299 ;;      Params:         2       0       0       0       0       0       0
  5300 ;;      Locals:         0       0       0       0       0       0       0
  5301 ;;      Temps:          2       0       0       0       0       0       0
  5302 ;;      Totals:         4       0       0       0       0       0       0
  5303 ;;Total ram usage:        4 bytes
  5304 ;; Hardware stack levels used:    1
  5305 ;; Hardware stack levels required when called:    3
  5306 ;; This function calls:
  5307 ;;		Nothing
  5308 ;; This function is called by:
  5309 ;;		_CoolingStart
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313                           	psect	text37
  5314  000F12                     __ptext37:
  5315                           	opt stack 0
  5316  000F12                     _PWM4_LoadDutyValue:
  5317                           	opt stack 26
  5318                           
  5319                           ;pwm4.c: 84: CCPR4L = ((dutyValue & 0x03FC)>>2);
  5320                           
  5321                           ;incstack = 0
  5322  000F12  C013  F015         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  5323  000F16  C014  F016         	movff	PWM4_LoadDutyValue@dutyValue+1,??_PWM4_LoadDutyValue+1
  5324  000F1A  90D8               	bcf	status,0,c
  5325  000F1C  3216               	rrcf	??_PWM4_LoadDutyValue+1,f,c
  5326  000F1E  3215               	rrcf	??_PWM4_LoadDutyValue,f,c
  5327  000F20  90D8               	bcf	status,0,c
  5328  000F22  3216               	rrcf	??_PWM4_LoadDutyValue+1,f,c
  5329  000F24  3215               	rrcf	??_PWM4_LoadDutyValue,f,c
  5330  000F26  5015               	movf	??_PWM4_LoadDutyValue,w,c
  5331  000F28  010F               	movlb	15	; () banked
  5332  000F2A  6F58               	movwf	88,b	;volatile
  5333                           
  5334                           ;pwm4.c: 87: CCP4CON = (CCP4CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  5335  000F2C  C013  F015         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  5336  000F30  0E03               	movlw	3
  5337  000F32  1615               	andwf	??_PWM4_LoadDutyValue,f,c
  5338  000F34  3A15               	swapf	??_PWM4_LoadDutyValue,f,c
  5339  000F36  0EF0               	movlw	240
  5340  000F38  1615               	andwf	??_PWM4_LoadDutyValue,f,c
  5341  000F3A  010F               	movlb	15	; () banked
  5342  000F3C  5157               	movf	87,w,b	;volatile
  5343  000F3E  0BCF               	andlw	207
  5344  000F40  1015               	iorwf	??_PWM4_LoadDutyValue,w,c
  5345  000F42  010F               	movlb	15	; () banked
  5346  000F44  6F57               	movwf	87,b	;volatile
  5347                           
  5348                           ; BSR set to: 15
  5349  000F46  0012               	return		;funcret
  5350  000F48                     __end_of_PWM4_LoadDutyValue:
  5351                           	opt stack 0
  5352                           tblptru	equ	0xFF8
  5353                           tblptrh	equ	0xFF7
  5354                           tblptrl	equ	0xFF6
  5355                           tablat	equ	0xFF5
  5356                           prodh	equ	0xFF4
  5357                           prodl	equ	0xFF3
  5358                           intcon	equ	0xFF2
  5359                           intcon2	equ	0xFF1
  5360                           postinc0	equ	0xFEE
  5361                           wreg	equ	0xFE8
  5362                           indf2	equ	0xFDF
  5363                           postinc2	equ	0xFDE
  5364                           postdec2	equ	0xFDD
  5365                           plusw2	equ	0xFDB
  5366                           fsr2h	equ	0xFDA
  5367                           fsr2l	equ	0xFD9
  5368                           status	equ	0xFD8
  5369                           
  5370 ;; *************** function _INTERRUPT_InterruptManager *****************
  5371 ;; Defined at:
  5372 ;;		line 65 in file "mcc_generated_files/interrupt_manager.c"
  5373 ;; Parameters:    Size  Location     Type
  5374 ;;		None
  5375 ;; Auto vars:     Size  Location     Type
  5376 ;;		None
  5377 ;; Return value:  Size  Location     Type
  5378 ;;                  1    wreg      void 
  5379 ;; Registers used:
  5380 ;;		cstack
  5381 ;; Tracked objects:
  5382 ;;		On entry : 0/0
  5383 ;;		On exit  : 0/0
  5384 ;;		Unchanged: 0/0
  5385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5386 ;;      Params:         0       0       0       0       0       0       0
  5387 ;;      Locals:         0       0       0       0       0       0       0
  5388 ;;      Temps:         14       0       0       0       0       0       0
  5389 ;;      Totals:        14       0       0       0       0       0       0
  5390 ;;Total ram usage:       14 bytes
  5391 ;; Hardware stack levels used:    1
  5392 ;; Hardware stack levels required when called:    2
  5393 ;; This function calls:
  5394 ;;		_ADC_ISR
  5395 ;;		_CCP5_CaptureISR
  5396 ;; This function is called by:
  5397 ;;		Interrupt level 2
  5398 ;; This function uses a non-reentrant model
  5399 ;;
  5400                           
  5401                           	psect	intcode
  5402  000008                     __pintcode:
  5403                           	opt stack 0
  5404  000008                     _INTERRUPT_InterruptManager:
  5405                           	opt stack 23
  5406                           
  5407                           ; BSR set to: 15
  5408                           ;incstack = 0
  5409  000008  8249               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5410  00000A  CFFA F005          	movff	pclath,??_INTERRUPT_InterruptManager
  5411  00000E  CFFB F006          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5412  000012  CFE9 F007          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  5413  000016  CFEA F008          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  5414  00001A  CFE1 F009          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  5415  00001E  CFE2 F00A          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  5416  000022  CFD9 F00B          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  5417  000026  CFDA F00C          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  5418  00002A  CFF3 F00D          	movff	prodl,??_INTERRUPT_InterruptManager+8
  5419  00002E  CFF4 F00E          	movff	prodh,??_INTERRUPT_InterruptManager+9
  5420  000032  CFF6 F00F          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  5421  000036  CFF7 F010          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  5422  00003A  CFF8 F011          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  5423  00003E  CFF5 F012          	movff	tablat,??_INTERRUPT_InterruptManager+13
  5424                           
  5425                           ;interrupt_manager.c: 68: if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  5426  000042  BC9D               	btfsc	3997,6,c	;volatile
  5427  000044  AC9E               	btfss	3998,6,c	;volatile
  5428  000046  D003               	goto	i2l220
  5429                           
  5430                           ;interrupt_manager.c: 69: {
  5431                           ;interrupt_manager.c: 70: ADC_ISR();
  5432  000048  EC75  F008         	call	_ADC_ISR	;wreg free
  5433                           
  5434                           ;interrupt_manager.c: 71: }
  5435  00004C  D005               	goto	i2l224
  5436  00004E                     i2l220:
  5437                           
  5438                           ;interrupt_manager.c: 72: else if(PIE4bits.CCP5IE == 1 && PIR4bits.CCP5IF == 1)
  5439  00004E  B47A               	btfsc	3962,2,c	;volatile
  5440  000050  A47B               	btfss	3963,2,c	;volatile
  5441  000052  D002               	goto	i2l224
  5442                           
  5443                           ;interrupt_manager.c: 73: {
  5444                           ;interrupt_manager.c: 74: CCP5_CaptureISR();
  5445  000054  EC3B  F008         	call	_CCP5_CaptureISR	;wreg free
  5446  000058                     i2l224:
  5447  000058  C012  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  5448  00005C  C011  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  5449  000060  C010  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  5450  000064  C00F  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  5451  000068  C00E  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  5452  00006C  C00D  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  5453  000070  C00C  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  5454  000074  C00B  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  5455  000078  C00A  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  5456  00007C  C009  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  5457  000080  C008  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  5458  000084  C007  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  5459  000088  C006  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5460  00008C  C005  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5461  000090  9249               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5462  000092  0011               	retfie		f
  5463  000094                     __end_of_INTERRUPT_InterruptManager:
  5464                           	opt stack 0
  5465                           pclatu	equ	0xFFB
  5466                           pclath	equ	0xFFA
  5467                           tblptru	equ	0xFF8
  5468                           tblptrh	equ	0xFF7
  5469                           tblptrl	equ	0xFF6
  5470                           tablat	equ	0xFF5
  5471                           prodh	equ	0xFF4
  5472                           prodl	equ	0xFF3
  5473                           intcon	equ	0xFF2
  5474                           intcon2	equ	0xFF1
  5475                           postinc0	equ	0xFEE
  5476                           fsr0h	equ	0xFEA
  5477                           fsr0l	equ	0xFE9
  5478                           wreg	equ	0xFE8
  5479                           fsr1h	equ	0xFE2
  5480                           fsr1l	equ	0xFE1
  5481                           indf2	equ	0xFDF
  5482                           postinc2	equ	0xFDE
  5483                           postdec2	equ	0xFDD
  5484                           plusw2	equ	0xFDB
  5485                           fsr2h	equ	0xFDA
  5486                           fsr2l	equ	0xFD9
  5487                           status	equ	0xFD8
  5488                           
  5489 ;; *************** function _CCP5_CaptureISR *****************
  5490 ;; Defined at:
  5491 ;;		line 81 in file "mcc_generated_files/ccp5.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;		None
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;  module          2    2[COMRAM] struct CCPR5Reg_tag
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  1    wreg      void 
  5498 ;; Registers used:
  5499 ;;		cstack
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5505 ;;      Params:         0       0       0       0       0       0       0
  5506 ;;      Locals:         2       0       0       0       0       0       0
  5507 ;;      Temps:          0       0       0       0       0       0       0
  5508 ;;      Totals:         2       0       0       0       0       0       0
  5509 ;;Total ram usage:        2 bytes
  5510 ;; Hardware stack levels used:    1
  5511 ;; Hardware stack levels required when called:    1
  5512 ;; This function calls:
  5513 ;;		_CCP5_CallBack
  5514 ;; This function is called by:
  5515 ;;		_INTERRUPT_InterruptManager
  5516 ;; This function uses a non-reentrant model
  5517 ;;
  5518                           
  5519                           	psect	text39
  5520  001076                     __ptext39:
  5521                           	opt stack 0
  5522  001076                     _CCP5_CaptureISR:
  5523                           	opt stack 23
  5524                           
  5525                           ;ccp5.c: 83: CCP_PERIOD_REG_T module;
  5526                           ;ccp5.c: 86: PIR4bits.CCP5IF = 0;
  5527                           
  5528                           ;incstack = 0
  5529  001076  947B               	bcf	3963,2,c	;volatile
  5530                           
  5531                           ;ccp5.c: 89: module.ccpr5l = CCPR5L;
  5532  001078  CF55 F003          	movff	3925,CCP5_CaptureISR@module	;volatile
  5533                           
  5534                           ;ccp5.c: 90: module.ccpr5h = CCPR5H;
  5535  00107C  CF56 F004          	movff	3926,CCP5_CaptureISR@module+1	;volatile
  5536                           
  5537                           ;ccp5.c: 93: CCP5_CallBack(module.ccpr5_16Bit);
  5538  001080  C003  F001         	movff	CCP5_CaptureISR@module,CCP5_CallBack@capturedValue
  5539  001084  C004  F002         	movff	CCP5_CaptureISR@module+1,CCP5_CallBack@capturedValue+1
  5540  001088  EC77  F008         	call	_CCP5_CallBack	;wreg free
  5541  00108C  0012               	return		;funcret
  5542  00108E                     __end_of_CCP5_CaptureISR:
  5543                           	opt stack 0
  5544                           pclatu	equ	0xFFB
  5545                           pclath	equ	0xFFA
  5546                           tblptru	equ	0xFF8
  5547                           tblptrh	equ	0xFF7
  5548                           tblptrl	equ	0xFF6
  5549                           tablat	equ	0xFF5
  5550                           prodh	equ	0xFF4
  5551                           prodl	equ	0xFF3
  5552                           intcon	equ	0xFF2
  5553                           intcon2	equ	0xFF1
  5554                           postinc0	equ	0xFEE
  5555                           fsr0h	equ	0xFEA
  5556                           fsr0l	equ	0xFE9
  5557                           wreg	equ	0xFE8
  5558                           fsr1h	equ	0xFE2
  5559                           fsr1l	equ	0xFE1
  5560                           indf2	equ	0xFDF
  5561                           postinc2	equ	0xFDE
  5562                           postdec2	equ	0xFDD
  5563                           plusw2	equ	0xFDB
  5564                           fsr2h	equ	0xFDA
  5565                           fsr2l	equ	0xFD9
  5566                           status	equ	0xFD8
  5567                           
  5568 ;; *************** function _CCP5_CallBack *****************
  5569 ;; Defined at:
  5570 ;;		line 96 in file "mcc_generated_files/ccp5.c"
  5571 ;; Parameters:    Size  Location     Type
  5572 ;;  capturedValu    2    0[COMRAM] unsigned int 
  5573 ;; Auto vars:     Size  Location     Type
  5574 ;;		None
  5575 ;; Return value:  Size  Location     Type
  5576 ;;                  1    wreg      void 
  5577 ;; Registers used:
  5578 ;;		None
  5579 ;; Tracked objects:
  5580 ;;		On entry : 0/0
  5581 ;;		On exit  : 0/0
  5582 ;;		Unchanged: 0/0
  5583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5584 ;;      Params:         2       0       0       0       0       0       0
  5585 ;;      Locals:         0       0       0       0       0       0       0
  5586 ;;      Temps:          0       0       0       0       0       0       0
  5587 ;;      Totals:         2       0       0       0       0       0       0
  5588 ;;Total ram usage:        2 bytes
  5589 ;; Hardware stack levels used:    1
  5590 ;; This function calls:
  5591 ;;		Nothing
  5592 ;; This function is called by:
  5593 ;;		_CCP5_CaptureISR
  5594 ;; This function uses a non-reentrant model
  5595 ;;
  5596                           
  5597                           	psect	text40
  5598  0010EE                     __ptext40:
  5599                           	opt stack 0
  5600  0010EE                     _CCP5_CallBack:
  5601                           	opt stack 23
  5602                           
  5603                           ;incstack = 0
  5604  0010EE  0012               	return		;funcret
  5605  0010F0                     __end_of_CCP5_CallBack:
  5606                           	opt stack 0
  5607                           pclatu	equ	0xFFB
  5608                           pclath	equ	0xFFA
  5609                           tblptru	equ	0xFF8
  5610                           tblptrh	equ	0xFF7
  5611                           tblptrl	equ	0xFF6
  5612                           tablat	equ	0xFF5
  5613                           prodh	equ	0xFF4
  5614                           prodl	equ	0xFF3
  5615                           intcon	equ	0xFF2
  5616                           intcon2	equ	0xFF1
  5617                           postinc0	equ	0xFEE
  5618                           fsr0h	equ	0xFEA
  5619                           fsr0l	equ	0xFE9
  5620                           wreg	equ	0xFE8
  5621                           fsr1h	equ	0xFE2
  5622                           fsr1l	equ	0xFE1
  5623                           indf2	equ	0xFDF
  5624                           postinc2	equ	0xFDE
  5625                           postdec2	equ	0xFDD
  5626                           plusw2	equ	0xFDB
  5627                           fsr2h	equ	0xFDA
  5628                           fsr2l	equ	0xFD9
  5629                           status	equ	0xFD8
  5630                           
  5631 ;; *************** function _ADC_ISR *****************
  5632 ;; Defined at:
  5633 ;;		line 128 in file "mcc_generated_files/adc.c"
  5634 ;; Parameters:    Size  Location     Type
  5635 ;;		None
  5636 ;; Auto vars:     Size  Location     Type
  5637 ;;		None
  5638 ;; Return value:  Size  Location     Type
  5639 ;;                  1    wreg      void 
  5640 ;; Registers used:
  5641 ;;		None
  5642 ;; Tracked objects:
  5643 ;;		On entry : 0/0
  5644 ;;		On exit  : 0/0
  5645 ;;		Unchanged: 0/0
  5646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5647 ;;      Params:         0       0       0       0       0       0       0
  5648 ;;      Locals:         0       0       0       0       0       0       0
  5649 ;;      Temps:          0       0       0       0       0       0       0
  5650 ;;      Totals:         0       0       0       0       0       0       0
  5651 ;;Total ram usage:        0 bytes
  5652 ;; Hardware stack levels used:    1
  5653 ;; This function calls:
  5654 ;;		Nothing
  5655 ;; This function is called by:
  5656 ;;		_INTERRUPT_InterruptManager
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           	psect	text41
  5661  0010EA                     __ptext41:
  5662                           	opt stack 0
  5663  0010EA                     _ADC_ISR:
  5664                           	opt stack 24
  5665                           
  5666                           ;adc.c: 131: PIR1bits.ADIF = 0;
  5667                           
  5668                           ;incstack = 0
  5669  0010EA  9C9E               	bcf	3998,6,c	;volatile
  5670  0010EC  0012               	return		;funcret
  5671  0010EE                     __end_of_ADC_ISR:
  5672                           	opt stack 0
  5673  0000                     pclatu	equ	0xFFB
  5674                           pclath	equ	0xFFA
  5675                           tblptru	equ	0xFF8
  5676                           tblptrh	equ	0xFF7
  5677                           tblptrl	equ	0xFF6
  5678                           tablat	equ	0xFF5
  5679                           prodh	equ	0xFF4
  5680                           prodl	equ	0xFF3
  5681                           intcon	equ	0xFF2
  5682                           intcon2	equ	0xFF1
  5683                           postinc0	equ	0xFEE
  5684                           fsr0h	equ	0xFEA
  5685                           fsr0l	equ	0xFE9
  5686                           wreg	equ	0xFE8
  5687                           fsr1h	equ	0xFE2
  5688                           fsr1l	equ	0xFE1
  5689                           indf2	equ	0xFDF
  5690                           postinc2	equ	0xFDE
  5691                           postdec2	equ	0xFDD
  5692                           plusw2	equ	0xFDB
  5693                           fsr2h	equ	0xFDA
  5694                           fsr2l	equ	0xFD9
  5695                           status	equ	0xFD8
  5696                           pclatu	equ	0xFFB
  5697                           pclath	equ	0xFFA
  5698                           tblptru	equ	0xFF8
  5699                           tblptrh	equ	0xFF7
  5700                           tblptrl	equ	0xFF6
  5701                           tablat	equ	0xFF5
  5702                           prodh	equ	0xFF4
  5703                           prodl	equ	0xFF3
  5704                           intcon	equ	0xFF2
  5705                           intcon2	equ	0xFF1
  5706                           postinc0	equ	0xFEE
  5707                           fsr0h	equ	0xFEA
  5708                           fsr0l	equ	0xFE9
  5709                           wreg	equ	0xFE8
  5710                           fsr1h	equ	0xFE2
  5711                           fsr1l	equ	0xFE1
  5712                           indf2	equ	0xFDF
  5713                           postinc2	equ	0xFDE
  5714                           postdec2	equ	0xFDD
  5715                           plusw2	equ	0xFDB
  5716                           fsr2h	equ	0xFDA
  5717                           fsr2l	equ	0xFD9
  5718                           status	equ	0xFD8
  5719                           
  5720                           	psect	rparam
  5721  0000                     pclatu	equ	0xFFB
  5722                           pclath	equ	0xFFA
  5723                           tblptru	equ	0xFF8
  5724                           tblptrh	equ	0xFF7
  5725                           tblptrl	equ	0xFF6
  5726                           tablat	equ	0xFF5
  5727                           prodh	equ	0xFF4
  5728                           prodl	equ	0xFF3
  5729                           intcon	equ	0xFF2
  5730                           intcon2	equ	0xFF1
  5731                           postinc0	equ	0xFEE
  5732                           fsr0h	equ	0xFEA
  5733                           fsr0l	equ	0xFE9
  5734                           wreg	equ	0xFE8
  5735                           fsr1h	equ	0xFE2
  5736                           fsr1l	equ	0xFE1
  5737                           indf2	equ	0xFDF
  5738                           postinc2	equ	0xFDE
  5739                           postdec2	equ	0xFDD
  5740                           plusw2	equ	0xFDB
  5741                           fsr2h	equ	0xFDA
  5742                           fsr2l	equ	0xFD9
  5743                           status	equ	0xFD8
  5744                           
  5745                           	psect	temp
  5746  000049                     btemp:
  5747                           	opt stack 0
  5748  000049                     	ds	1
  5749  0000                     int$flags	set	btemp
  5750                           pclatu	equ	0xFFB
  5751                           pclath	equ	0xFFA
  5752                           tblptru	equ	0xFF8
  5753                           tblptrh	equ	0xFF7
  5754                           tblptrl	equ	0xFF6
  5755                           tablat	equ	0xFF5
  5756                           prodh	equ	0xFF4
  5757                           prodl	equ	0xFF3
  5758                           intcon	equ	0xFF2
  5759                           intcon2	equ	0xFF1
  5760                           postinc0	equ	0xFEE
  5761                           fsr0h	equ	0xFEA
  5762                           fsr0l	equ	0xFE9
  5763                           wreg	equ	0xFE8
  5764                           fsr1h	equ	0xFE2
  5765                           fsr1l	equ	0xFE1
  5766                           indf2	equ	0xFDF
  5767                           postinc2	equ	0xFDE
  5768                           postdec2	equ	0xFDD
  5769                           plusw2	equ	0xFDB
  5770                           fsr2h	equ	0xFDA
  5771                           fsr2l	equ	0xFD9
  5772                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         1005
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      72
    BANK0           160      6     159
    BANK1           256     12     218
    BANK2           256      0     206
    BANK3           256      0     206
    BANK4           256      0     200
    BANK5           256      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK3[206]), input_buffer(BANK2[206]), ring_buffer(BANK1[206]), 

    memset@p	PTR unsigned char  size(2) Largest target is 206
		 -> output_buffer(BANK3[206]), input_buffer(BANK2[206]), ring_buffer(BANK1[206]), 

    crcBufS_get@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK0[17]), 

    crcBufS_status_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK0[17]), 

    crcBufS_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK0[17]), 

    sp__memset	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK3[206]), input_buffer(BANK2[206]), ring_buffer(BANK1[206]), 

    FastTransfer_buffer_flush@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK1[206]), 

    FastTransfer_buffer_put@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK1[206]), 

    CRC8@data	PTR const unsigned char  size(2) Largest target is 206
		 -> NULL(NULL[0]), CRCcheck@arrayHolder(COMRAM[3]), receiveData@holder_1191(BANK1[3]), receiveData@holder(BANK1[3]), 
		 -> rx_buffer(BANK4[200]), ring_buffer(BANK1[206]), 

    sendStructAddress	PTR unsigned char  size(2) Largest target is 206
		 -> NULL(NULL[0]), ring_buffer(BANK1[206]), 

    serial_read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    serial_peek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    serial_available	PTR FTN()int  size(2) Largest target is 1
		 -> Absolute function(), 

    serial_write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    receiveArrayAddress	PTR volatile int  size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _respondECU->_sendData
    _sendData->_FastTransfer_buffer_flush
    _FastTransfer_buffer_flush->_memset
    _ToSend->_FastTransfer_buffer_put
    _FastTransfer_buffer_put->_FastTransfer_buffer_modulo_inc
    _receiveData->_CRCcheck
    _CRCcheck->_crcBufS_get
    _processPowerRequest->_EnableSlavePower
    _Update->_writeRegisters
    _StartUp595->_Clear595
    _Clear595->_writeRegisters
    _writeRegisters->_Delay
    _EnableSlavePower->_SetPin595
    _ComputeStorageData->_DATAEE_ReadByte
    _CoolingStart->_PotSetpoint

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_CCP5_CaptureISR
    _CCP5_CaptureISR->_CCP5_CallBack

Critical Paths under _main in BANK0

    _updateComms->_receiveData

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _updateComms->_receiveData

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   25451
                       _CoolingStart
                         _PDUStartup
                  _SYSTEM_Initialize
                        _updateComms
 ---------------------------------------------------------------------------------
 (1) _updateComms                                          0     0      0   16798
                _processPowerRequest
                        _receiveData
                         _respondECU
 ---------------------------------------------------------------------------------
 (2) _respondECU                                           0     0      0    4510
                              _Delay
                             _ToSend
                           _sendData
 ---------------------------------------------------------------------------------
 (3) _sendData                                             5     5      0    2590
                                             30 COMRAM     5     5      0
                               _CRC8
          _FastTransfer_buffer_flush
                        _crcBufS_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_put                                          7     2      5     564
                                             18 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_flush                            4     0      4     910
                                             26 COMRAM     4     0      4
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6     672
                                             18 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (3) _ToSend                                               3     1      2    1362
                                             31 COMRAM     3     1      2
            _FastTransfer_buffer_put
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_put                              7     2      5    1190
                                             24 COMRAM     7     2      5
     _FastTransfer_buffer_modulo_inc
 ---------------------------------------------------------------------------------
 (5) _FastTransfer_buffer_modulo_inc                       6     2      4     602
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _receiveData                                         18    18      0    5270
                                              0 BANK0      6     6      0
                                              0 BANK1     12    12      0
                               _CRC8
                           _CRCcheck
 ---------------------------------------------------------------------------------
 (3) _CRCcheck                                             7     7      0    3799
                                             30 COMRAM     7     7      0
                               _CRC8
                        _crcBufS_get
                 _crcBufS_status_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_status_put                                  10     6      4     908
                                             18 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (4) _crcBufS_get                                         12     8      4    1404
                                             18 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (4) _CRC8                                                 7     4      3    1014
                                             18 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _processPowerRequest                                  2     0      2    7018
                                             31 COMRAM     2     0      2
                   _EnableSlavePower
                             _Update
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CCP5_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM4_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PDUStartup                                           0     0      0    8254
                 _ComputeStorageData
                   _EnableSlavePower
                         _StartUp595
                             _Update
 ---------------------------------------------------------------------------------
 (3) _Update                                               0     0      0     672
                     _writeRegisters
 ---------------------------------------------------------------------------------
 (2) _StartUp595                                           0     0      0    1298
                           _Clear595
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _Clear595                                             2     2      0     740
                                             31 COMRAM     2     2      0
                     _writeRegisters
 ---------------------------------------------------------------------------------
 (4) _writeRegisters                                       4     4      0     672
                                             27 COMRAM     4     4      0
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _Delay                                                9     5      4     558
                                             18 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (3) _EnableSlavePower                                     3     1      2    6172
                                             28 COMRAM     3     1      2
                          _SetPin595
 ---------------------------------------------------------------------------------
 (4) _SetPin595                                           10     4      6    4674
                                             18 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (2) _ComputeStorageData                                   4     4      0     112
                                             19 COMRAM     4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      1     1      0      22
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CoolingStart                                         0     0      0     399
                 _PWM4_LoadDutyValue
                        _PotSetpoint
 ---------------------------------------------------------------------------------
 (2) _PotSetpoint                                         10     8      2     291
                                             18 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (2) _PWM4_LoadDutyValue                                   4     2      2     108
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                          14    14      0     111
                                              4 COMRAM    14    14      0
                            _ADC_ISR
                    _CCP5_CaptureISR
 ---------------------------------------------------------------------------------
 (7) _CCP5_CaptureISR                                      2     2      0     111
                                              2 COMRAM     2     2      0
                      _CCP5_CallBack
 ---------------------------------------------------------------------------------
 (8) _CCP5_CallBack                                        2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CoolingStart
     _PWM4_LoadDutyValue
     _PotSetpoint
   _PDUStartup
     _ComputeStorageData
       _DATAEE_ReadByte
     _EnableSlavePower
       _SetPin595
     _StartUp595
       _Clear595
         _writeRegisters
           _Delay
       _Delay
     _Update
       _writeRegisters
         _Delay
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM4_Initialize
     _TMR2_Initialize
       _TMR2_StartTimer
   _updateComms
     _processPowerRequest
       _EnableSlavePower
         _SetPin595
       _Update
         _writeRegisters
           _Delay
     _receiveData
       _CRC8
       _CRCcheck
         _CRC8
         _crcBufS_get
         _crcBufS_status_put
     _respondECU
       _Delay
       _ToSend
         _FastTransfer_buffer_put
           _FastTransfer_buffer_modulo_inc
       _sendData
         _CRC8
         _FastTransfer_buffer_flush
           _memset
         _crcBufS_put

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _CCP5_CaptureISR
     _CCP5_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C8      13       78.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      CE      11       80.5%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      CE       8       80.5%
BITBANK1           100      0       0       5        0.0%
BANK1              100      C      DA       6       85.2%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      6      9F       4       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      48       1       76.6%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     425       9        0.0%
DATA                 0      0     425      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Thu May 05 01:09:36 2016

      __end_of_FastTransfer_buffer_flush 0CA2                             _rx_array_inx 0046  
                         ??_CoolingStart 001D                             __CFG_CP0$OFF 000000  
                           __CFG_CP1$OFF 000000                             __CFG_CP2$OFF 000000  
                           __CFG_CP3$OFF 000000                                      l322 0F0C  
                                    l335 0A64                                      l362 0956  
                                    l442 0EC4                                      l365 0992  
                                    l545 0A6A                                      l556 0AF0  
                                    l469 00E4                                      l690 0B36  
                                    l692 0B40                             __CFG_CPB$OFF 000000  
                                    _PR2 000FBB                             __CFG_CPD$OFF 000000  
                                    u950 0800                                      u971 035E  
                        __end_of_ADC_ISR 10EE     FastTransfer_buffer_flush@clearBuffer 001D  
                        _TMR2_Initialize 10B8                          _PWM4_Initialize 102A  
                                    prod 000FF3                                      wreg 000FE8  
                        _CCP5_Initialize 0FF0                             __CFG_LVP$OFF 000000  
                                   l3010 0E98                                     l2320 0E58  
                                   l3016 0EAE                                     l3024 0ECA  
                                   l3040 04B4                                     l3104 0ACC  
                                   l3026 0ED0                                     l2330 0FC8  
                                   l2324 0E74                                     l3052 0538  
                                   l3036 04AA                                     l3060 0820  
                                   l3108 0AEA                                     l2340 0F96  
                                   l3206 02C6                                     l3134 009A  
                                   l3144 00DA                                     l2336 0F86  
                                   l3090 0A6C                                     l3218 0328  
                                   l3226 0334                                     l3074 0BF6  
                                   l2444 0B2E                                     l2436 0B02  
                                   l2540 0F50                                     l2700 0A34  
                                   l3068 08A6                                     l3180 021C  
                                   l2380 0360                                     l3076 0BFA  
                                   l2550 0F76                                     l2702 0A42  
                                   l3094 0A7C                                     l3182 0220  
                                   l3174 0182                                     l2480 05E0  
                                   l3184 0234                                     l2722 0904  
                                   l2482 05FE                                     l2474 0586  
                                   l2706 0A56                                     l3258 109E  
                                   l2740 0988                                     l2724 0912  
                                   l2484 061C                                     l2476 05A4  
                                   l3196 02BA                                     l2726 091A  
                                   l2478 05C2                                     l2744 099A  
                                   l2760 066A                                     l2488 063A  
                                   l2770 0694                                     l2690 09FE  
                                   l2682 09CE                                     l2764 067A  
                                   l2684 09DC                                     l2694 0A12  
                                   l2696 0A20                                     l2688 09F0  
                   receiveData@crcHolder 01CE                                     _CRC8 0E92  
                                   u1340 08FC                                     _LATA 000F89  
                                   _LATB 000F8A                                     _LATC 000F8B  
                                   _LATD 000F8C                                     _LATE 000F8D  
                                   u1920 0EF8                                     u1851 0126  
                                   u1967 0E5E                                     _TMR2 000FBC  
                                   _WPUB 000F61                                     _data 00DC  
                                   _main 108E                 __end_of_EnableSlavePower 0662  
                                   fsr0h 000FEA                                     fsr1h 000FE2  
                                   fsr0l 000FE9                                     fsr2h 000FDA  
                                   fsr1l 000FE1                                     indf2 000FDF  
                                   fsr2l 000FD9                                     btemp 0049  
                          __CFG_BORV$190 000000                                     pclat 000FFA  
                                   prodh 000FF4                                     prodl 000FF3  
        __end_of_FastTransfer_buffer_put 04A0                                     start 0094  
                          __CFG_IESO$OFF 000000                             ___param_bank 000010  
                __end_of_CCP5_CaptureISR 108E                                    ?_CRC8 0013  
                       __end_of_CRCcheck 0AF2           __size_of_OSCILLATOR_Initialize 000E  
          __end_of_OSCILLATOR_Initialize 10D8                       crcBufS_put@address 0015  
                                  ?_main 0001                                    _EEADR 000FA9  
                                  _T2CON 000FBA                                    _LATB0 007C50  
                                  _LATB3 007C53                                    _LATB4 007C54  
                                  _LATB5 007C55                                    _LATD4 007C64  
                                  _LATD5 007C65                                    _LATD6 007C66  
                                  _LATD7 007C67                           __CFG_DEBUG$OFF 000000  
                                  i2l220 004E                                    i2l224 0058  
                            ?_PDUStartup 0001                       _PWM4_LoadDutyValue 0F12  
                                  _TRISA 000F92                                    _TRISB 000F93  
                                  _TRISC 000F94                                    _TRISD 000F95  
                                  _TRISE 000F96                                    _Delay 0E46  
                          __CFG_WRT0$OFF 000000                            __CFG_WRT1$OFF 000000  
                          __CFG_WRT2$OFF 000000                            __CFG_WRT3$OFF 000000  
                         __CFG_EBTR0$OFF 000000                           __CFG_FCMEN$OFF 000000  
                         __CFG_EBTR1$OFF 000000                           __CFG_EBTR2$OFF 000000  
                         __CFG_EBTR3$OFF 000000                         ??_writeRegisters 001C  
                          __CFG_WRTB$OFF 000000                            __CFG_WRTC$OFF 000000  
                          __CFG_WRTD$OFF 000000                          _DATAEE_ReadByte 10A4  
                         __CFG_EBTRB$OFF 000000                                    _group 002E  
                    ?_PWM4_LoadDutyValue 0013                       __CFG_MCLRE$EXTMCLR 000000  
                                  tablat 000FF5                     __size_of_crcBufS_get 00E2  
                                  plusw2 000FDB                     __size_of_crcBufS_put 00D8  
                                  status 000FD8                         __end_of_Clear595 0F7C  
                         __CFG_HFOFST$ON 000000                          _TMR2_StartTimer 10E6  
                           ?_receiveData 0001                           __CFG_PBADEN$ON 000000  
                 __size_of_CCP5_CallBack 0002                     PotSetpoint@new_point 0013  
                           __end_of_CRC8 0EDC                          CRCcheck@SentCRC 001F  
                        __initialization 0B70                             __end_of_main 10A4  
                             _CurrentADC 00C4                     ??_PWM4_LoadDutyValue 0015  
                             ToSend@what 0020                                   ??_CRC8 0016  
                __end_of_PWM4_Initialize 1044                  __end_of_TMR2_Initialize 10CA  
                              ??_ADC_ISR 0001              ?_INTERRUPT_InterruptManager 0001  
                   PotSetpoint@set_point 0017                                   ??_main 0026  
                __end_of_CCP5_Initialize 100E                            __activetblptr 000002  
                                 ?_Delay 0013            FastTransfer_buffer_put@towhat 001C  
                                 _ADCON0 000FC2                                   _ADCON1 000FC1  
                                 _ADCON2 000FC0                                   _ADRESH 000FC4  
                                 _ADRESL 000FC3                                   _EEDATA 000FA8  
                                 _CCPR4H 000F59                                   _CCPR5H 000F56  
                                 _CCPR4L 000F58                                   _CCPR5L 000F55  
                                 _EECON2 000FA7                                   _ANSELA 000F38  
                                 _ANSELB 000F39                                   _ANSELC 000F3A  
                                 _ANSELD 000F3B                                   _ANSELE 000F3C  
                                 _RC1STA 000FAB                                   Delay@i 0018  
                         __CFG_WDTEN$OFF 000000                                   _TABLAT 000FF5  
                                 _RCREG1 000FAE                                   _OSCCON 000FD3  
            __end_of_processPowerRequest 0A6A                                   _SPBRG1 000FAF  
                   __end_of_CoolingStart 105E                                   _TX1STA 000FAC  
                                 _TXREG1 000FAD                      __size_of_PDUStartup 0054  
                         __CFG_XINST$OFF 000000                                   _ToSend 100E  
                          ??_PotSetpoint 0015                         crcBufS_get@_this 0013  
                           _CCPTMRS1bits 000F48              ??_FastTransfer_buffer_flush 001F  
                                 _Update 10E0                       __size_of_SetPin595 004E  
                       ?_CCP5_CaptureISR 0001                            _output_buffer 0300  
                       crcBufS_get@space 0016                                CRC8@tempI 0018  
                         __CFG_STVREN$ON 000000                                   _memset 0F7C  
                                 clear_0 0B76                                   clear_1 0B82  
                                 clear_2 0B8E                                   clear_3 0B9A  
                                 clear_4 0BA6                                   clear_5 0BB2  
                                 _rx_len 0047                         __end_of_sendData 0C40  
                __end_of_DATAEE_ReadByte 10B8                             __pdataCOMRAM 0048  
                          _CCP5_CallBack 10EE                                   tblptrh 000FF7  
                                 tblptrl 000FF6                                   tblptru 000FF8  
       __size_of_FastTransfer_buffer_put 0168                               _StartUp595 0CA2  
                __end_of_TMR2_StartTimer 10EA            __size_of_INTERRUPT_Initialize 0008  
                      _SYSTEM_Initialize 0FD2                               __accesstop 0060  
                __end_of__initialization 0BCA                                ?_CRCcheck 0001  
                     ?_SYSTEM_Initialize 0001                            ___rparam_used 000001  
                           ?_updateComms 0001                            __end_of_Delay 0E92  
                         __pcstackCOMRAM 0001                       _crcBufS_status_put 0816  
                    ??_SYSTEM_Initialize 0013                         crcBufS_put@_this 0013  
 __end_of_FastTransfer_buffer_modulo_inc 0FD2  __size_of_FastTransfer_buffer_modulo_inc 002A  
         _FastTransfer_buffer_modulo_inc 0FA8                         ?_TMR2_Initialize 0001  
                       ?_PWM4_Initialize 0001             FastTransfer_buffer_put@_this 0019  
                            ToSend@where 0022                      __end_of_PotSetpoint 09BA  
            __size_of_ComputeStorageData 00DC              PWM4_LoadDutyValue@dutyValue 0013  
                    ?_crcBufS_status_put 0013                              _Currentcomp 00D0  
                       ?_CCP5_Initialize 0001                           ?_CCP5_CallBack 0001  
                              ?_Clear595 0001                                  ??_Delay 0017  
              _FastTransfer_buffer_flush 0C40                                  CRC8@crc 0019  
                                CRC8@len 0015                                  CRC8@sum 0016  
                      __end_of_SetPin595 0E46                __end_of_SYSTEM_Initialize 0FF0  
                 receiveData@holder_1191 01D3                      _addressErrorCounter 0026  
                             __pbssBANK0 0060                               __pbssBANK1 0100  
                             __pbssBANK2 0200                               __pbssBANK3 0300  
                             __pbssBANK4 0400                          __CFG_PLLCFG$OFF 000000  
                             ??_CRCcheck 001F                     ??_crcBufS_status_put 0017  
                      ?_EnableSlavePower 001D                       ??_EnableSlavePower 001F  
                   __size_of_receiveData 02A0                                  ?_ToSend 0020  
                     __CFG_CCP2MX$PORTC1 000000                                  ?_Update 0001  
                     __CFG_CCP3MX$PORTB5 000000      FastTransfer_buffer_modulo_inc@value 0013  
                                _CCP4CON 000F57                                  _CCP5CON 000F54  
                                _ADC_ISR 10EA                                  ?_memset 0013  
                             _crc_buffer 00E8                  __size_of_ADC_Initialize 0018  
                       ?_DATAEE_ReadByte 0001                             ??_PDUStartup 0022  
                             ??_Clear595 0020                                  _OSCCON2 000FD2  
                                _TBLPTRH 000FF7                                  _TBLPTRL 000FF6  
                                _TBLPTRU 000FF8                              ?_StartUp595 0001  
                                _OSCTUNE 000F9B                                  _SPBRGH1 000FB0  
                    sendData@whereToSend 0020                      _receiveArrayAddress 0032  
                  __size_of_CoolingStart 001A                         ?_TMR2_StartTimer 0001  
                              ?_sendData 0001                                  _Current 00B8  
                      _alignErrorCounter 0028                          __CFG_PWRTEN$OFF 000000  
                                __Hparam 0000                                  __Lparam 0000  
                     __end_of_PDUStartup 0D58                          __size_of_ToSend 001C  
                            _PotSetpoint 08EC                                _AKNAKsend 0040  
                        __size_of_Update 0006                                  _calc_CS 0041  
                                __pcinit 0B70                          ??_CCP5_CallBack 0003  
                        __size_of_memset 002C                                  __ramtop 0600  
                                __ptext0 108E                                  __ptext1 0EDC  
                                __ptext2 0D58                                  __ptext3 0BD8  
                                __ptext4 073E                                  __ptext5 0C40  
                                __ptext6 0F7C                                  __ptext7 100E  
                                __ptext8 0338                                  __ptext9 0FA8  
                           _CoolingStart 1044                    _OSCILLATOR_Initialize 10CA  
                              _T2CONbits 000FBA                  _FastTransfer_buffer_put 0338  
                  CRCcheck@calculatedCRC 0020                 ??_PIN_MANAGER_Initialize 0013  
                              Clear595@i 0020             crcBufS_status_put@wantedTime 001B  
                          ??_crcBufS_get 0017                            ??_crcBufS_put 0018  
             __size_of_SYSTEM_Initialize 001E                     end_of_initialization 0BCA  
                              Delay@wait 0013                                  memset@c 0015  
                                memset@n 0017                                  memset@p 0019  
                          __Lmediumconst 0000                               ??_sendData 001F  
                   __size_of_updateComms 0036                                  postdec2 000FDD  
                    __size_of_StartUp595 0062                                  postinc0 000FEE  
                                postinc2 000FDE                               _respondECU 0D58  
            __size_of_PWM4_LoadDutyValue 0036                      CRCcheck@arrayHolder 0021  
                           SetPin595@Reg 0013                             SetPin595@pin 0015  
                 _dataAdressErrorCounter 002C                               _rx_address 0045  
             CCP5_CallBack@capturedValue 0001       __size_of_FastTransfer_buffer_flush 0062  
                    __end_of_crcBufS_get 0582                  __size_of_writeRegisters 007E  
                    __end_of_crcBufS_put 0816                        __size_of_CRCcheck 0088  
                          _moduleAddress 0043                               CRCcheck@rt 0024  
           __size_of_processPowerRequest 00B0                           __end_of_ToSend 102A  
           __end_of_INTERRUPT_Initialize 10E0                           __end_of_Update 10E6  
                        _crcErrorCounter 002A                        crcBufS_put@oldCRC 0016  
                          __pidataCOMRAM 10F0                           _ADC_Initialize 105E  
              ??_FastTransfer_buffer_put 001E                   ?_OSCILLATOR_Initialize 0001  
                         __end_of_memset 0FA8                        crcBufS_put@status 0017  
               __size_of_CCP5_CaptureISR 0018                             receiveData@r 01D8  
                           receiveData@u 01D6                      start_initialization 0B70  
        __size_of_PIN_MANAGER_Initialize 0050                    crcBufS_get@wantedTime 001D  
                  EnableSlavePower@slave 001F                        __size_of_Clear595 0034  
                              _SetPin595 0DF8                      DATAEE_ReadByte@bAdd 0013  
                               ??_ToSend 0022                                 CRC8@data 0013  
                               ??_Update 0020                          crcBufS_get@time 0015  
                            ?_respondECU 0001                   __end_of_ADC_Initialize 1076  
             __end_of_ComputeStorageData 073E                                 ?_ADC_ISR 0001  
                               ??_memset 0019                __size_of_EnableSlavePower 00E0  
                            __pbssCOMRAM 0026                            __pcstackBANK0 00F9  
                          __pcstackBANK1 01CE                             ??_StartUp595 0022  
               __size_of_PWM4_Initialize 001A                 __size_of_TMR2_Initialize 0012  
                            _crcBufS_get 04A0                 __size_of_CCP5_Initialize 001E  
                            _crcBufS_put 073E                               ?_SetPin595 0013  
                          ??_receiveData 00F9              __size_of_crcBufS_status_put 00D6  
                             sendData@CS 0021                   _PIN_MANAGER_Initialize 0DA8  
                      __size_of_sendData 0068                             ?_PotSetpoint 0013  
                              __pintcode 0008                       __end_of_StartUp595 0D04  
                        ?_ADC_Initialize 0001             ??_INTERRUPT_InterruptManager 0005  
                       __CFG_PRICLKEN$ON 000000                                 _BAUD1CON 000FB8  
                         __size_of_Delay 004C                        ??_CCP5_CaptureISR 0003  
               __size_of_DATAEE_ReadByte 0014                      __size_of_respondECU 0050  
                   _INTERRUPT_Initialize 10D8                             _receiveArray 0090  
            processPowerRequest@powerSet 0020                                 _CRCcheck 0A6A  
                               _LATCbits 000F8B                           _writeRegisters 0AF2  
                              _registers 0060                                 _IPR1bits 000F9F  
                               _PIE1bits 000F9D                                 _IPR4bits 000F7C  
                               _PIE4bits 000F7A                 __size_of_TMR2_StartTimer 0004  
    __size_of_INTERRUPT_InterruptManager 008C                                 _PIR1bits 000F9E  
                               _PIR2bits 000FA1                                 _PIR4bits 000F7B  
                               _RCONbits 000FD0                         __CFG_WDTPS$32768 000000  
                    __end_of_receiveData 0338           FastTransfer_buffer_flush@_this 001B  
                           PotSetpoint@x 0019                             _input_buffer 0200  
                              _rx_buffer 0400                         __size_of_ADC_ISR 0004  
                             _ADCON0bits 000FC2                    __end_of_CCP5_CallBack 10F0  
                               _Clear595 0F48                      _processPowerRequest 09BA  
                            _INTCON2bits 000FF1                    ?_INTERRUPT_Initialize 0001  
                      _sendStructAddress 0034                   __end_of_writeRegisters 0B70  
                     PotSetpoint@new_pos 001B                              ??_SetPin595 0019  
                   EnableSlavePower@onof 001D                        ??_TMR2_Initialize 0013  
                      ??_PWM4_Initialize 0013                               _EECON1bits 000FA6  
                      ??_CCP5_Initialize 0013                            ??_updateComms 0026  
                               __Hrparam 0000               __end_of_PWM4_LoadDutyValue 0F48  
                               __Lrparam 0000                     ?_processPowerRequest 0020  
                     __CFG_BOREN$SBORDIS 000000                        __CFG_P2BMX$PORTD2 000000  
                ??_OSCILLATOR_Initialize 0013                         _EnableSlavePower 0582  
                            CRC8@extract 0017                                sendData@i 0022  
               crcBufS_status_put@status 0016                                 __ptext10 0098  
                               __ptext11 0A6A                                 __ptext20 0DA8  
                               __ptext12 0816                                 __ptext21 10CA  
                               __ptext13 04A0                                 __ptext30 0E46  
                               __ptext22 10D8                                 __ptext14 0E92  
                               __ptext31 0582                                 __ptext23 0FF0  
                               __ptext15 09BA                                 __ptext40 10EE  
                               __ptext32 0DF8                                 __ptext24 105E  
                               __ptext16 0FD2                                 __ptext41 10EA  
                               __ptext33 0662                                 __ptext25 0D04  
                               __ptext17 10B8                                 __ptext34 10A4  
                               __ptext26 10E0                                 __ptext18 10E6  
                               __ptext35 1044                                 __ptext27 0CA2  
                               __ptext19 102A                                 __ptext36 08EC  
                               __ptext28 0F48                                 __ptext37 0F12  
                               __ptext29 0AF2                                 __ptext39 1076  
                          __size_of_CRC8 004A                          ?_writeRegisters 0001  
                          _returnAddress 0044                            __size_of_main 0016  
                            _receiveData 0098                           _Transmit_stall 0048  
                               _sendData 0BD8                        ??_DATAEE_ReadByte 0013  
                  ??_processPowerRequest 0022                               _RC1STAbits 000FAB  
                               _prev_pos 0030                             ??_respondECU 0024  
                      writeRegisters@val 001C                                 int$flags 0049  
                           _serial_write 003C                        ??_TMR2_StartTimer 0013  
                    __end_of_updateComms 0F12       __end_of_INTERRUPT_InterruptManager 0094  
             _INTERRUPT_InterruptManager 0008                     __size_of_PotSetpoint 00CE  
                      receiveData@holder 01D0                               _INTCONbits 000FF2  
                    ComputeStorageData@i 0016                       _ComputeStorageData 0662  
                 ??_INTERRUPT_Initialize 0013                                 memset@p1 0013  
                       _serial_available 0036                             ?_crcBufS_get 0013  
                           ?_crcBufS_put 0013                                 intlevel2 0000  
                crcBufS_status_put@_this 0013                       __end_of_respondECU 0DA8  
 FastTransfer_buffer_modulo_inc@my_value 0017           FastTransfer_buffer_put@towhere 001B  
                    ?_ComputeStorageData 0001                  ?_PIN_MANAGER_Initialize 0001  
                         SetPin595@value 0017                              _ring_buffer 0100  
                       ??_ADC_Initialize 0013               ?_FastTransfer_buffer_flush 001B  
                            _serial_peek 0038                              _serial_read 003A  
               ?_FastTransfer_buffer_put 0019                     ??_ComputeStorageData 0014  
                          ?_CoolingStart 0001                          _CCP5_CaptureISR 1076  
  FastTransfer_buffer_modulo_inc@modulus 0015                    CCP5_CaptureISR@module 0003  
                             _PDUStartup 0D04                   crcBufS_status_put@time 0015  
              receiveData@crcHolder_1192 01CF                        __CFG_T3CMX$PORTC0 000000  
                         _maxDataAddress 0042                          writeRegisters@i 001E  
             __end_of_crcBufS_status_put 08EC           __end_of_PIN_MANAGER_Initialize 0DF8  
       ??_FastTransfer_buffer_modulo_inc 0017          ?_FastTransfer_buffer_modulo_inc 0013  
          updateComms@previousPowerState 003E                        __CFG_FOSC$INTIO67 000000  
                            _updateComms 0EDC  
