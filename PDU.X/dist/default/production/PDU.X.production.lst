

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon May 16 16:53:24 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61  0000                     
    62                           	psect	idataCOMRAM
    63  001084                     __pidataCOMRAM:
    64                           	opt stack 0
    65                           
    66                           ;initializer for _Transmit_stall
    67  001084  01                 	db	1
    68  0000                     _ANSELA	set	3896
    69  0000                     _ANSELB	set	3897
    70  0000                     _ANSELC	set	3898
    71  0000                     _ANSELD	set	3899
    72  0000                     _ANSELE	set	3900
    73  0000                     _CCP4CON	set	3927
    74  0000                     _CCP5CON	set	3924
    75  0000                     _CCPR4H	set	3929
    76  0000                     _CCPR4L	set	3928
    77  0000                     _CCPR5H	set	3926
    78  0000                     _CCPR5L	set	3925
    79  0000                     _CCPTMRS1bits	set	3912
    80  0000                     _ADCON0	set	4034
    81  0000                     _ADCON0bits	set	4034
    82  0000                     _ADCON1	set	4033
    83  0000                     _ADCON2	set	4032
    84  0000                     _ADRESH	set	4036
    85  0000                     _ADRESL	set	4035
    86  0000                     _BAUD1CON	set	4024
    87  0000                     _EEADR	set	4009
    88  0000                     _EECON1bits	set	4006
    89  0000                     _EECON2	set	4007
    90  0000                     _EEDATA	set	4008
    91  0000                     _INTCON2bits	set	4081
    92  0000                     _INTCONbits	set	4082
    93  0000                     _IPR1bits	set	3999
    94  0000                     _IPR4bits	set	3964
    95  0000                     _LATA	set	3977
    96  0000                     _LATB	set	3978
    97  0000                     _LATC	set	3979
    98  0000                     _LATCbits	set	3979
    99  0000                     _LATD	set	3980
   100  0000                     _LATE	set	3981
   101  0000                     _OSCCON	set	4051
   102  0000                     _OSCCON2	set	4050
   103  0000                     _OSCTUNE	set	3995
   104  0000                     _PIE1bits	set	3997
   105  0000                     _PIE4bits	set	3962
   106  0000                     _PIR1bits	set	3998
   107  0000                     _PIR2bits	set	4001
   108  0000                     _PIR4bits	set	3963
   109  0000                     _PR2	set	4027
   110  0000                     _RC1STA	set	4011
   111  0000                     _RC1STAbits	set	4011
   112  0000                     _RCONbits	set	4048
   113  0000                     _RCREG1	set	4014
   114  0000                     _SPBRG1	set	4015
   115  0000                     _SPBRGH1	set	4016
   116  0000                     _T2CON	set	4026
   117  0000                     _T2CONbits	set	4026
   118  0000                     _TABLAT	set	4085
   119  0000                     _TBLPTRH	set	4087
   120  0000                     _TBLPTRL	set	4086
   121  0000                     _TBLPTRU	set	4088
   122  0000                     _TMR2	set	4028
   123  0000                     _TRISA	set	3986
   124  0000                     _TRISB	set	3987
   125  0000                     _TRISC	set	3988
   126  0000                     _TRISD	set	3989
   127  0000                     _TRISE	set	3990
   128  0000                     _TX1STA	set	4012
   129  0000                     _TXREG1	set	4013
   130  0000                     _WPUB	set	3937
   131  0000                     _LATB0	set	31824
   132  0000                     _LATB3	set	31827
   133  0000                     _LATB4	set	31828
   134  0000                     _LATB5	set	31829
   135  0000                     _LATD4	set	31844
   136  0000                     _LATD5	set	31845
   137  0000                     _LATD6	set	31846
   138  0000                     _LATD7	set	31847
   139                           
   140                           ; #config settings
   141  0000                     
   142                           	psect	cinit
   143  000B18                     __pcinit:
   144                           	opt stack 0
   145  000B18                     start_initialization:
   146                           	opt stack 0
   147  000B18                     __initialization:
   148                           	opt stack 0
   149                           
   150                           ; Clear objects allocated to BANK4 (200 bytes)
   151  000B18  EE04  F000         	lfsr	0,__pbssBANK4
   152  000B1C  0EC8               	movlw	200
   153  000B1E                     clear_0:
   154  000B1E  6AEE               	clrf	postinc0,c
   155  000B20  06E8               	decf	wreg,f,c
   156  000B22  E1FD               	bnz	clear_0
   157                           
   158                           ; Clear objects allocated to BANK3 (206 bytes)
   159  000B24  EE03  F000         	lfsr	0,__pbssBANK3
   160  000B28  0ECE               	movlw	206
   161  000B2A                     clear_1:
   162  000B2A  6AEE               	clrf	postinc0,c
   163  000B2C  06E8               	decf	wreg,f,c
   164  000B2E  E1FD               	bnz	clear_1
   165                           
   166                           ; Clear objects allocated to BANK2 (206 bytes)
   167  000B30  EE02  F000         	lfsr	0,__pbssBANK2
   168  000B34  0ECE               	movlw	206
   169  000B36                     clear_2:
   170  000B36  6AEE               	clrf	postinc0,c
   171  000B38  06E8               	decf	wreg,f,c
   172  000B3A  E1FD               	bnz	clear_2
   173                           
   174                           ; Clear objects allocated to BANK1 (206 bytes)
   175  000B3C  EE01  F000         	lfsr	0,__pbssBANK1
   176  000B40  0ECE               	movlw	206
   177  000B42                     clear_3:
   178  000B42  6AEE               	clrf	postinc0,c
   179  000B44  06E8               	decf	wreg,f,c
   180  000B46  E1FD               	bnz	clear_3
   181                           
   182                           ; Clear objects allocated to BANK0 (129 bytes)
   183  000B48  EE00  F060         	lfsr	0,__pbssBANK0
   184  000B4C  0E81               	movlw	129
   185  000B4E                     clear_4:
   186  000B4E  6AEE               	clrf	postinc0,c
   187  000B50  06E8               	decf	wreg,f,c
   188  000B52  E1FD               	bnz	clear_4
   189                           
   190                           ; Clear objects allocated to COMRAM (34 bytes)
   191  000B54  EE00  F026         	lfsr	0,__pbssCOMRAM
   192  000B58  0E22               	movlw	34
   193  000B5A                     clear_5:
   194  000B5A  6AEE               	clrf	postinc0,c
   195  000B5C  06E8               	decf	wreg,f,c
   196  000B5E  E1FD               	bnz	clear_5
   197                           
   198                           ; Initialize objects allocated to COMRAM (1 bytes)
   199                           ; load TBLPTR registers with __pidataCOMRAM
   200  000B60  0E84               	movlw	low __pidataCOMRAM
   201  000B62  6EF6               	movwf	tblptrl,c
   202  000B64  0E10               	movlw	high __pidataCOMRAM
   203  000B66  6EF7               	movwf	tblptrh,c
   204  000B68  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   205  000B6A  6EF8               	movwf	tblptru,c
   206  000B6C  0009               	tblrd		*+	;fetch initializer
   207  000B6E  CFF5 F048          	movff	tablat,__pdataCOMRAM
   208  000B72                     end_of_initialization:
   209                           	opt stack 0
   210  000B72                     __end_of__initialization:
   211                           	opt stack 0
   212  000B72  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   213  000B74  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   214  000B76  0E00               	movlw	low (__Lmediumconst shr (0+16))
   215  000B78  6EF8               	movwf	tblptru,c
   216  000B7A  0100               	movlb	0
   217  000B7C  EF11  F008         	goto	_main	;jump to C main() function
   218                           tblptru	equ	0xFF8
   219                           tblptrh	equ	0xFF7
   220                           tblptrl	equ	0xFF6
   221                           tablat	equ	0xFF5
   222                           postinc0	equ	0xFEE
   223                           wreg	equ	0xFE8
   224                           
   225                           	psect	bssCOMRAM
   226  000026                     __pbssCOMRAM:
   227                           	opt stack 0
   228  000026                     _addressErrorCounter:
   229                           	opt stack 0
   230  000026                     	ds	2
   231  000028                     _alignErrorCounter:
   232                           	opt stack 0
   233  000028                     	ds	2
   234  00002A                     _crcErrorCounter:
   235                           	opt stack 0
   236  00002A                     	ds	2
   237  00002C                     _dataAdressErrorCounter:
   238                           	opt stack 0
   239  00002C                     	ds	2
   240  00002E                     _group:
   241                           	opt stack 0
   242  00002E                     	ds	2
   243  000030                     _prev_pos:
   244                           	opt stack 0
   245  000030                     	ds	2
   246  000032                     _receiveArrayAddress:
   247                           	opt stack 0
   248  000032                     	ds	2
   249  000034                     _sendStructAddress:
   250                           	opt stack 0
   251  000034                     	ds	2
   252  000036                     _serial_available:
   253                           	opt stack 0
   254  000036                     	ds	2
   255  000038                     _serial_peek:
   256                           	opt stack 0
   257  000038                     	ds	2
   258  00003A                     _serial_read:
   259                           	opt stack 0
   260  00003A                     	ds	2
   261  00003C                     _serial_write:
   262                           	opt stack 0
   263  00003C                     	ds	2
   264  00003E                     updateComms@previousPowerState:
   265                           	opt stack 0
   266  00003E                     	ds	2
   267  000040                     _AKNAKsend:
   268                           	opt stack 0
   269  000040                     	ds	1
   270  000041                     _calc_CS:
   271                           	opt stack 0
   272  000041                     	ds	1
   273  000042                     _maxDataAddress:
   274                           	opt stack 0
   275  000042                     	ds	1
   276  000043                     _moduleAddress:
   277                           	opt stack 0
   278  000043                     	ds	1
   279  000044                     _returnAddress:
   280                           	opt stack 0
   281  000044                     	ds	1
   282  000045                     _rx_address:
   283                           	opt stack 0
   284  000045                     	ds	1
   285  000046                     _rx_array_inx:
   286                           	opt stack 0
   287  000046                     	ds	1
   288  000047                     _rx_len:
   289                           	opt stack 0
   290  000047                     	ds	1
   291                           tblptru	equ	0xFF8
   292                           tblptrh	equ	0xFF7
   293                           tblptrl	equ	0xFF6
   294                           tablat	equ	0xFF5
   295                           postinc0	equ	0xFEE
   296                           wreg	equ	0xFE8
   297                           
   298                           	psect	dataCOMRAM
   299  000048                     __pdataCOMRAM:
   300                           	opt stack 0
   301  000048                     _Transmit_stall:
   302                           	opt stack 0
   303  000048                     	ds	1
   304                           tblptru	equ	0xFF8
   305                           tblptrh	equ	0xFF7
   306                           tblptrl	equ	0xFF6
   307                           tablat	equ	0xFF5
   308                           postinc0	equ	0xFEE
   309                           wreg	equ	0xFE8
   310                           
   311                           	psect	bssBANK0
   312  000060                     __pbssBANK0:
   313                           	opt stack 0
   314  000060                     _receiveArray:
   315                           	opt stack 0
   316  000060                     	ds	40
   317  000088                     _registers:
   318                           	opt stack 0
   319  000088                     	ds	24
   320  0000A0                     _Current:
   321                           	opt stack 0
   322  0000A0                     	ds	12
   323  0000AC                     _CurrentADC:
   324                           	opt stack 0
   325  0000AC                     	ds	12
   326  0000B8                     _Currentcomp:
   327                           	opt stack 0
   328  0000B8                     	ds	12
   329  0000C4                     _data:
   330                           	opt stack 0
   331  0000C4                     	ds	12
   332  0000D0                     _crc_buffer:
   333                           	opt stack 0
   334  0000D0                     	ds	17
   335                           tblptru	equ	0xFF8
   336                           tblptrh	equ	0xFF7
   337                           tblptrl	equ	0xFF6
   338                           tablat	equ	0xFF5
   339                           postinc0	equ	0xFEE
   340                           wreg	equ	0xFE8
   341                           
   342                           	psect	bssBANK1
   343  000100                     __pbssBANK1:
   344                           	opt stack 0
   345  000100                     _ring_buffer:
   346                           	opt stack 0
   347  000100                     	ds	206
   348                           tblptru	equ	0xFF8
   349                           tblptrh	equ	0xFF7
   350                           tblptrl	equ	0xFF6
   351                           tablat	equ	0xFF5
   352                           postinc0	equ	0xFEE
   353                           wreg	equ	0xFE8
   354                           
   355                           	psect	bssBANK2
   356  000200                     __pbssBANK2:
   357                           	opt stack 0
   358  000200                     _input_buffer:
   359                           	opt stack 0
   360  000200                     	ds	206
   361                           tblptru	equ	0xFF8
   362                           tblptrh	equ	0xFF7
   363                           tblptrl	equ	0xFF6
   364                           tablat	equ	0xFF5
   365                           postinc0	equ	0xFEE
   366                           wreg	equ	0xFE8
   367                           
   368                           	psect	bssBANK3
   369  000300                     __pbssBANK3:
   370                           	opt stack 0
   371  000300                     _output_buffer:
   372                           	opt stack 0
   373  000300                     	ds	206
   374                           tblptru	equ	0xFF8
   375                           tblptrh	equ	0xFF7
   376                           tblptrl	equ	0xFF6
   377                           tablat	equ	0xFF5
   378                           postinc0	equ	0xFEE
   379                           wreg	equ	0xFE8
   380                           
   381                           	psect	bssBANK4
   382  000400                     __pbssBANK4:
   383                           	opt stack 0
   384  000400                     _rx_buffer:
   385                           	opt stack 0
   386  000400                     	ds	200
   387                           tblptru	equ	0xFF8
   388                           tblptrh	equ	0xFF7
   389                           tblptrl	equ	0xFF6
   390                           tablat	equ	0xFF5
   391                           postinc0	equ	0xFEE
   392                           wreg	equ	0xFE8
   393                           
   394                           	psect	cstackBANK0
   395  0000E1                     __pcstackBANK0:
   396                           	opt stack 0
   397  0000E1                     ??_receiveData:
   398                           
   399                           ; 0 bytes @ 0x0
   400  0000E1                     	ds	6
   401  0000E7                     receiveData@crcHolder:
   402                           	opt stack 0
   403                           
   404                           ; 1 bytes @ 0x6
   405  0000E7                     	ds	1
   406  0000E8                     receiveData@crcHolder_1250:
   407                           	opt stack 0
   408                           
   409                           ; 1 bytes @ 0x7
   410  0000E8                     	ds	1
   411  0000E9                     receiveData@holder:
   412                           	opt stack 0
   413                           
   414                           ; 3 bytes @ 0x8
   415  0000E9                     	ds	3
   416  0000EC                     receiveData@holder_1249:
   417                           	opt stack 0
   418                           
   419                           ; 3 bytes @ 0xB
   420  0000EC                     	ds	3
   421  0000EF                     receiveData@u:
   422                           	opt stack 0
   423                           
   424                           ; 2 bytes @ 0xE
   425  0000EF                     	ds	2
   426  0000F1                     receiveData@r:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x10
   430  0000F1                     	ds	2
   431                           tblptru	equ	0xFF8
   432                           tblptrh	equ	0xFF7
   433                           tblptrl	equ	0xFF6
   434                           tablat	equ	0xFF5
   435                           postinc0	equ	0xFEE
   436                           wreg	equ	0xFE8
   437                           
   438                           	psect	cstackCOMRAM
   439  000001                     __pcstackCOMRAM:
   440                           	opt stack 0
   441  000001                     CCP5_CallBack@capturedValue:
   442                           	opt stack 0
   443                           
   444                           ; 2 bytes @ 0x0
   445  000001                     	ds	2
   446  000003                     CCP5_CaptureISR@module:
   447                           	opt stack 0
   448                           
   449                           ; 2 bytes @ 0x2
   450  000003                     	ds	2
   451  000005                     ??_INTERRUPT_InterruptManager:
   452                           
   453                           ; 0 bytes @ 0x4
   454  000005                     	ds	14
   455  000013                     ?_FastTransfer_buffer_modulo_inc:
   456                           	opt stack 0
   457  000013                     DATAEE_ReadByte@bAdd:
   458                           	opt stack 0
   459  000013                     SetPin595@pin:
   460                           	opt stack 0
   461  000013                     PWM4_LoadDutyValue@dutyValue:
   462                           	opt stack 0
   463  000013                     PotSetpoint@new_point:
   464                           	opt stack 0
   465  000013                     CRC8@data:
   466                           	opt stack 0
   467  000013                     FastTransfer_buffer_modulo_inc@value:
   468                           	opt stack 0
   469  000013                     crcBufS_put@_this:
   470                           	opt stack 0
   471  000013                     crcBufS_status_put@_this:
   472                           	opt stack 0
   473  000013                     crcBufS_get@_this:
   474                           	opt stack 0
   475  000013                     memset@p1:
   476                           	opt stack 0
   477  000013                     Delay@wait:
   478                           	opt stack 0
   479                           
   480                           ; 4 bytes @ 0x12
   481  000013                     	ds	1
   482  000014                     ??_ComputeStorageData:
   483  000014                     SetPin595@value:
   484                           	opt stack 0
   485                           
   486                           ; 1 bytes @ 0x13
   487  000014                     	ds	1
   488  000015                     ??_PotSetpoint:
   489  000015                     ??_SetPin595:
   490  000015                     ??_PWM4_LoadDutyValue:
   491  000015                     CRC8@len:
   492                           	opt stack 0
   493  000015                     crcBufS_put@address:
   494                           	opt stack 0
   495  000015                     crcBufS_status_put@time:
   496                           	opt stack 0
   497  000015                     crcBufS_get@time:
   498                           	opt stack 0
   499  000015                     FastTransfer_buffer_modulo_inc@modulus:
   500                           	opt stack 0
   501  000015                     memset@c:
   502                           	opt stack 0
   503                           
   504                           ; 2 bytes @ 0x14
   505  000015                     	ds	1
   506  000016                     CRC8@sum:
   507                           	opt stack 0
   508  000016                     crcBufS_put@oldCRC:
   509                           	opt stack 0
   510  000016                     crcBufS_status_put@status:
   511                           	opt stack 0
   512  000016                     crcBufS_get@space:
   513                           	opt stack 0
   514  000016                     ComputeStorageData@i:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0x15
   518  000016                     	ds	1
   519  000017                     ??_Delay:
   520  000017                     ??_crcBufS_get:
   521  000017                     ??_crcBufS_status_put:
   522  000017                     CRC8@extract:
   523                           	opt stack 0
   524  000017                     crcBufS_put@status:
   525                           	opt stack 0
   526  000017                     PotSetpoint@set_point:
   527                           	opt stack 0
   528  000017                     FastTransfer_buffer_modulo_inc@my_value:
   529                           	opt stack 0
   530  000017                     memset@n:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x16
   534  000017                     	ds	1
   535  000018                     ??_crcBufS_put:
   536  000018                     CRC8@tempI:
   537                           	opt stack 0
   538  000018                     Delay@i:
   539                           	opt stack 0
   540                           
   541                           ; 4 bytes @ 0x17
   542  000018                     	ds	1
   543  000019                     CRC8@crc:
   544                           	opt stack 0
   545  000019                     SetPin595@Reg:
   546                           	opt stack 0
   547  000019                     PotSetpoint@x:
   548                           	opt stack 0
   549  000019                     FastTransfer_buffer_put@_this:
   550                           	opt stack 0
   551  000019                     memset@p:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x18
   555  000019                     	ds	1
   556  00001A                     EnableSlavePower@onof:
   557                           	opt stack 0
   558                           
   559                           ; 2 bytes @ 0x19
   560  00001A                     	ds	1
   561  00001B                     FastTransfer_buffer_put@towhere:
   562                           	opt stack 0
   563  00001B                     PotSetpoint@new_pos:
   564                           	opt stack 0
   565  00001B                     FastTransfer_buffer_flush@_this:
   566                           	opt stack 0
   567  00001B                     crcBufS_status_put@wantedTime:
   568                           	opt stack 0
   569                           
   570                           ; 2 bytes @ 0x1A
   571  00001B                     	ds	1
   572  00001C                     ??_writeRegisters:
   573  00001C                     EnableSlavePower@slave:
   574                           	opt stack 0
   575  00001C                     FastTransfer_buffer_put@towhat:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x1B
   579  00001C                     	ds	1
   580  00001D                     FastTransfer_buffer_flush@clearBuffer:
   581                           	opt stack 0
   582  00001D                     crcBufS_get@wantedTime:
   583                           	opt stack 0
   584  00001D                     writeRegisters@val:
   585                           	opt stack 0
   586                           
   587                           ; 2 bytes @ 0x1C
   588  00001D                     	ds	1
   589  00001E                     ??_FastTransfer_buffer_put:
   590                           
   591                           ; 0 bytes @ 0x1D
   592  00001E                     	ds	1
   593  00001F                     ??_sendData:
   594  00001F                     CRCcheck@SentCRC:
   595                           	opt stack 0
   596  00001F                     writeRegisters@i:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x1E
   600  00001F                     	ds	1
   601  000020                     sendData@whereToSend:
   602                           	opt stack 0
   603  000020                     CRCcheck@calculatedCRC:
   604                           	opt stack 0
   605  000020                     ToSend@what:
   606                           	opt stack 0
   607                           
   608                           ; 2 bytes @ 0x1F
   609  000020                     	ds	1
   610  000021                     sendData@CS:
   611                           	opt stack 0
   612  000021                     processPowerRequest@powerSet:
   613                           	opt stack 0
   614  000021                     Clear595@i:
   615                           	opt stack 0
   616  000021                     CRCcheck@arrayHolder:
   617                           	opt stack 0
   618                           
   619                           ; 3 bytes @ 0x20
   620  000021                     	ds	1
   621  000022                     ToSend@where:
   622                           	opt stack 0
   623  000022                     sendData@i:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x21
   627  000022                     	ds	1
   628  000023                     
   629                           ; 0 bytes @ 0x22
   630  000023                     	ds	1
   631  000024                     CRCcheck@rt:
   632                           	opt stack 0
   633                           
   634                           ; 2 bytes @ 0x23
   635  000024                     	ds	2
   636  000026                     tblptru	equ	0xFF8
   637                           tblptrh	equ	0xFF7
   638                           tblptrl	equ	0xFF6
   639                           tablat	equ	0xFF5
   640                           postinc0	equ	0xFEE
   641                           wreg	equ	0xFE8
   642                           
   643                           ; 0 bytes @ 0x25
   644 ;;
   645 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   646 ;;
   647 ;; *************** function _main *****************
   648 ;; Defined at:
   649 ;;		line 55 in file "main.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;		None
   652 ;; Auto vars:     Size  Location     Type
   653 ;;		None
   654 ;; Return value:  Size  Location     Type
   655 ;;		None               void
   656 ;; Registers used:
   657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   663 ;;      Params:         0       0       0       0       0       0       0
   664 ;;      Locals:         0       0       0       0       0       0       0
   665 ;;      Temps:          0       0       0       0       0       0       0
   666 ;;      Totals:         0       0       0       0       0       0       0
   667 ;;Total ram usage:        0 bytes
   668 ;; Hardware stack levels required when called:    8
   669 ;; This function calls:
   670 ;;		_CoolingStart
   671 ;;		_PDUStartup
   672 ;;		_SYSTEM_Initialize
   673 ;;		_updateComms
   674 ;; This function is called by:
   675 ;;		Startup code after reset
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           	psect	text0
   680  001022                     __ptext0:
   681                           	opt stack 0
   682  001022                     _main:
   683                           	opt stack 23
   684                           
   685                           ;main.c: 58: SYSTEM_Initialize();
   686                           
   687                           ;incstack = 0
   688  001022  ECB3  F007         	call	_SYSTEM_Initialize	;wreg free
   689                           
   690                           ;main.c: 59: PDUStartup();
   691  001026  EC56  F006         	call	_PDUStartup	;wreg free
   692                           
   693                           ;main.c: 60: CoolingStart();
   694  00102A  ECEC  F007         	call	_CoolingStart	;wreg free
   695                           
   696                           ;main.c: 78: (INTCONbits.GIE = 1);
   697  00102E  8EF2               	bsf	intcon,7,c	;volatile
   698                           
   699                           ;main.c: 81: (INTCONbits.PEIE = 1);
   700  001030  8CF2               	bsf	intcon,6,c	;volatile
   701  001032                     l3258:
   702                           
   703                           ;main.c: 90: {
   704                           ;main.c: 92: updateComms();
   705  001032  EC3D  F007         	call	_updateComms	;wreg free
   706  001036  D7FD               	goto	l3258
   707  001038                     __end_of_main:
   708                           	opt stack 0
   709                           tblptru	equ	0xFF8
   710                           tblptrh	equ	0xFF7
   711                           tblptrl	equ	0xFF6
   712                           tablat	equ	0xFF5
   713                           intcon	equ	0xFF2
   714                           postinc0	equ	0xFEE
   715                           wreg	equ	0xFE8
   716                           
   717 ;; *************** function _updateComms *****************
   718 ;; Defined at:
   719 ;;		line 21 in file "Communications.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;		None
   724 ;; Return value:  Size  Location     Type
   725 ;;		None               void
   726 ;; Registers used:
   727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   733 ;;      Params:         0       0       0       0       0       0       0
   734 ;;      Locals:         0       0       0       0       0       0       0
   735 ;;      Temps:          0       0       0       0       0       0       0
   736 ;;      Totals:         0       0       0       0       0       0       0
   737 ;;Total ram usage:        0 bytes
   738 ;; Hardware stack levels used:    1
   739 ;; Hardware stack levels required when called:    7
   740 ;; This function calls:
   741 ;;		_processPowerRequest
   742 ;;		_receiveData
   743 ;;		_respondECU
   744 ;; This function is called by:
   745 ;;		_main
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           	psect	text1
   750  000E7A                     __ptext1:
   751                           	opt stack 0
   752  000E7A                     _updateComms:
   753                           	opt stack 23
   754                           
   755                           ;Communications.c: 22: if (receiveData()) {
   756                           
   757                           ;incstack = 0
   758  000E7A  EC4C  F000         	call	_receiveData	;wreg free
   759  000E7E  0900               	iorlw	0
   760  000E80  B4D8               	btfsc	status,2,c
   761  000E82  0012               	return	
   762                           
   763                           ;Communications.c: 23: static int previousPowerState;
   764                           ;Communications.c: 24: if (previousPowerState != receiveArray[1]) {
   765  000E84  503E               	movf	updateComms@previousPowerState,w,c
   766  000E86  0100               	movlb	0	; () banked
   767  000E88  1962               	xorwf	(_receiveArray+2)& (0+255),w,b	;volatile
   768  000E8A  E105               	bnz	u1920
   769  000E8C  503F               	movf	updateComms@previousPowerState+1,w,c
   770  000E8E  0100               	movlb	0	; () banked
   771  000E90  1963               	xorwf	(_receiveArray+3)& (0+255),w,b	;volatile
   772  000E92  B4D8               	btfsc	status,2,c
   773  000E94  D00A               	goto	l322
   774  000E96                     u1920:
   775                           
   776                           ; BSR set to: 0
   777                           ;Communications.c: 25: previousPowerState = receiveArray[1];
   778  000E96  C062  F03E         	movff	_receiveArray+2,updateComms@previousPowerState	;volatile
   779  000E9A  C063  F03F         	movff	_receiveArray+3,updateComms@previousPowerState+1	;volatile
   780                           
   781                           ; BSR set to: 0
   782                           ;Communications.c: 26: processPowerRequest(previousPowerState);
   783  000E9E  C03E  F021         	movff	updateComms@previousPowerState,processPowerRequest@powerSet
   784  000EA2  C03F  F022         	movff	updateComms@previousPowerState+1,processPowerRequest@powerSet+1
   785  000EA6  EC6D  F004         	call	_processPowerRequest	;wreg free
   786  000EAA                     l322:
   787                           
   788                           ;Communications.c: 27: }
   789                           ;Communications.c: 28: respondECU();
   790  000EAA  EC80  F006         	call	_respondECU	;wreg free
   791  000EAE  0012               	return	
   792  000EB0                     __end_of_updateComms:
   793                           	opt stack 0
   794                           tblptru	equ	0xFF8
   795                           tblptrh	equ	0xFF7
   796                           tblptrl	equ	0xFF6
   797                           tablat	equ	0xFF5
   798                           intcon	equ	0xFF2
   799                           postinc0	equ	0xFEE
   800                           wreg	equ	0xFE8
   801                           status	equ	0xFD8
   802                           
   803 ;; *************** function _respondECU *****************
   804 ;; Defined at:
   805 ;;		line 48 in file "Communications.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;		None
   808 ;; Auto vars:     Size  Location     Type
   809 ;;		None
   810 ;; Return value:  Size  Location     Type
   811 ;;		None               void
   812 ;; Registers used:
   813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   819 ;;      Params:         0       0       0       0       0       0       0
   820 ;;      Locals:         0       0       0       0       0       0       0
   821 ;;      Temps:          0       0       0       0       0       0       0
   822 ;;      Totals:         0       0       0       0       0       0       0
   823 ;;Total ram usage:        0 bytes
   824 ;; Hardware stack levels used:    1
   825 ;; Hardware stack levels required when called:    6
   826 ;; This function calls:
   827 ;;		_Delay
   828 ;;		_ToSend
   829 ;;		_sendData
   830 ;; This function is called by:
   831 ;;		_updateComms
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835                           	psect	text2
   836  000D00                     __ptext2:
   837                           	opt stack 0
   838  000D00                     _respondECU:
   839                           	opt stack 23
   840                           
   841                           ;Communications.c: 49: LATCbits.LATC5 = 1;
   842                           
   843                           ;incstack = 0
   844  000D00  8A8B               	bsf	3979,5,c	;volatile
   845                           
   846                           ;Communications.c: 50: ToSend(0, 5);
   847  000D02  0E00               	movlw	0
   848  000D04  6E21               	movwf	ToSend@what+1,c
   849  000D06  0E05               	movlw	5
   850  000D08  6E20               	movwf	ToSend@what,c
   851  000D0A  0E00               	movlw	0
   852  000D0C  ECD1  F007         	call	_ToSend
   853                           
   854                           ;Communications.c: 51: ToSend(9, 5);
   855  000D10  0E00               	movlw	0
   856  000D12  6E21               	movwf	ToSend@what+1,c
   857  000D14  0E05               	movlw	5
   858  000D16  6E20               	movwf	ToSend@what,c
   859  000D18  0E09               	movlw	9
   860  000D1A  ECD1  F007         	call	_ToSend
   861                           
   862                           ;Communications.c: 52: Delay(5);
   863  000D1E  0E05               	movlw	5
   864  000D20  6E13               	movwf	Delay@wait,c
   865  000D22  0E00               	movlw	0
   866  000D24  6E14               	movwf	Delay@wait+1,c
   867  000D26  0E00               	movlw	0
   868  000D28  6E15               	movwf	Delay@wait+2,c
   869  000D2A  0E00               	movlw	0
   870  000D2C  6E16               	movwf	Delay@wait+3,c
   871  000D2E  ECD0  F006         	call	_Delay	;wreg free
   872                           
   873                           ;Communications.c: 54: sendData(1);
   874  000D32  0E01               	movlw	1
   875  000D34  ECC0  F005         	call	_sendData
   876                           
   877                           ;Communications.c: 55: Delay(3);
   878  000D38  0E03               	movlw	3
   879  000D3A  6E13               	movwf	Delay@wait,c
   880  000D3C  0E00               	movlw	0
   881  000D3E  6E14               	movwf	Delay@wait+1,c
   882  000D40  0E00               	movlw	0
   883  000D42  6E15               	movwf	Delay@wait+2,c
   884  000D44  0E00               	movlw	0
   885  000D46  6E16               	movwf	Delay@wait+3,c
   886  000D48  ECD0  F006         	call	_Delay	;wreg free
   887                           
   888                           ;Communications.c: 56: LATCbits.LATC5 = 0;
   889  000D4C  9A8B               	bcf	3979,5,c	;volatile
   890  000D4E  0012               	return		;funcret
   891  000D50                     __end_of_respondECU:
   892                           	opt stack 0
   893                           tblptru	equ	0xFF8
   894                           tblptrh	equ	0xFF7
   895                           tblptrl	equ	0xFF6
   896                           tablat	equ	0xFF5
   897                           intcon	equ	0xFF2
   898                           postinc0	equ	0xFEE
   899                           wreg	equ	0xFE8
   900                           status	equ	0xFD8
   901                           
   902 ;; *************** function _sendData *****************
   903 ;; Defined at:
   904 ;;		line 53 in file "FastTransfer.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;  whereToSend     1    wreg     unsigned char 
   907 ;; Auto vars:     Size  Location     Type
   908 ;;  whereToSend     1   31[COMRAM] unsigned char 
   909 ;;  i               2   33[COMRAM] int 
   910 ;;  CS              1   32[COMRAM] unsigned char 
   911 ;; Return value:  Size  Location     Type
   912 ;;		None               void
   913 ;; Registers used:
   914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   920 ;;      Params:         0       0       0       0       0       0       0
   921 ;;      Locals:         4       0       0       0       0       0       0
   922 ;;      Temps:          1       0       0       0       0       0       0
   923 ;;      Totals:         5       0       0       0       0       0       0
   924 ;;Total ram usage:        5 bytes
   925 ;; Hardware stack levels used:    1
   926 ;; Hardware stack levels required when called:    5
   927 ;; This function calls:
   928 ;;		_CRC8
   929 ;;		_FastTransfer_buffer_flush
   930 ;;		_crcBufS_put
   931 ;; This function is called by:
   932 ;;		_respondECU
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           	psect	text3
   937  000B80                     __ptext3:
   938                           	opt stack 0
   939  000B80                     _sendData:
   940                           	opt stack 23
   941                           
   942                           ;incstack = 0
   943                           ;sendData@whereToSend stored from wreg
   944  000B80  6E20               	movwf	sendData@whereToSend,c
   945                           
   946                           ;FastTransfer.c: 62: serial_write(ring_buffer.count);
   947  000B82  C034  F013         	movff	_sendStructAddress,CRC8@data
   948  000B86  C035  F014         	movff	_sendStructAddress+1,CRC8@data+1
   949  000B8A  C1CC  F015         	movff	_ring_buffer+204,CRC8@len
   950  000B8E  ECF6  F006         	call	_CRC8	;wreg free
   951  000B92  6E21               	movwf	sendData@CS,c
   952                           
   953                           ;FastTransfer.c: 66: int i;
   954                           ;FastTransfer.c: 67: for (i = 0; i < ring_buffer.count; i++) {
   955  000B94  0E00               	movlw	0
   956  000B96  6E23               	movwf	sendData@i+1,c
   957  000B98  0E00               	movlw	0
   958  000B9A  6E22               	movwf	sendData@i,c
   959  000B9C  D002               	goto	l3076
   960  000B9E                     l3074:
   961  000B9E  4A22               	infsnz	sendData@i,f,c
   962  000BA0  2A23               	incf	sendData@i+1,f,c
   963  000BA2                     l3076:
   964  000BA2  0101               	movlb	1	; () banked
   965  000BA4  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
   966  000BA6  5C22               	subwf	sendData@i,w,c
   967  000BA8  5023               	movf	sendData@i+1,w,c
   968  000BAA  0A80               	xorlw	128
   969  000BAC  6E1F               	movwf	??_sendData& (0+255),c
   970  000BAE  0101               	movlb	1	; () banked
   971  000BB0  51CD               	movf	(_ring_buffer+205)& (0+255),w,b
   972  000BB2  0A80               	xorlw	128
   973  000BB4  581F               	subwfb	??_sendData& (0+255),w,c
   974  000BB6  A0D8               	btfss	status,0,c
   975  000BB8  D7F2               	goto	l3074
   976                           
   977                           ; BSR set to: 1
   978                           ;FastTransfer.c: 75: crcBufS_put(&crc_buffer, whereToSend, CS, 0);
   979                           
   980                           ; BSR set to: 1
   981                           
   982                           ;FastTransfer.c: 69: }
   983                           ;FastTransfer.c: 72: serial_write(CS);
   984  000BBA  0ED0               	movlw	low _crc_buffer
   985  000BBC  6E13               	movwf	crcBufS_put@_this,c
   986  000BBE  0E00               	movlw	high _crc_buffer
   987  000BC0  6E14               	movwf	crcBufS_put@_this+1,c
   988  000BC2  C020  F015         	movff	sendData@whereToSend,crcBufS_put@address
   989  000BC6  C021  F016         	movff	sendData@CS,crcBufS_put@oldCRC
   990  000BCA  0E00               	movlw	0
   991  000BCC  6E17               	movwf	crcBufS_put@status,c
   992  000BCE  EC2F  F003         	call	_crcBufS_put	;wreg free
   993                           
   994                           ;FastTransfer.c: 78: FastTransfer_buffer_flush(&ring_buffer, 1);
   995  000BD2  0E00               	movlw	low _ring_buffer
   996  000BD4  6E1B               	movwf	FastTransfer_buffer_flush@_this,c
   997  000BD6  0E01               	movlw	high _ring_buffer
   998  000BD8  6E1C               	movwf	FastTransfer_buffer_flush@_this+1,c
   999  000BDA  0E00               	movlw	0
  1000  000BDC  6E1E               	movwf	FastTransfer_buffer_flush@clearBuffer+1,c
  1001  000BDE  0E01               	movlw	1
  1002  000BE0  6E1D               	movwf	FastTransfer_buffer_flush@clearBuffer,c
  1003  000BE2  ECF4  F005         	call	_FastTransfer_buffer_flush	;wreg free
  1004  000BE6  0012               	return		;funcret
  1005  000BE8                     __end_of_sendData:
  1006                           	opt stack 0
  1007                           tblptru	equ	0xFF8
  1008                           tblptrh	equ	0xFF7
  1009                           tblptrl	equ	0xFF6
  1010                           tablat	equ	0xFF5
  1011                           intcon	equ	0xFF2
  1012                           postinc0	equ	0xFEE
  1013                           wreg	equ	0xFE8
  1014                           status	equ	0xFD8
  1015                           
  1016 ;; *************** function _crcBufS_put *****************
  1017 ;; Defined at:
  1018 ;;		line 321 in file "FastTransfer.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;  _this           2   18[COMRAM] PTR struct crcBufS
  1021 ;;		 -> crc_buffer(17), 
  1022 ;;  address         1   20[COMRAM] unsigned char 
  1023 ;;  oldCRC          1   21[COMRAM] unsigned char 
  1024 ;;  status          1   22[COMRAM] unsigned char 
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;		None
  1027 ;; Return value:  Size  Location     Type
  1028 ;;		None               void
  1029 ;; Registers used:
  1030 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1036 ;;      Params:         5       0       0       0       0       0       0
  1037 ;;      Locals:         0       0       0       0       0       0       0
  1038 ;;      Temps:          2       0       0       0       0       0       0
  1039 ;;      Totals:         7       0       0       0       0       0       0
  1040 ;;Total ram usage:        7 bytes
  1041 ;; Hardware stack levels used:    1
  1042 ;; Hardware stack levels required when called:    3
  1043 ;; This function calls:
  1044 ;;		Nothing
  1045 ;; This function is called by:
  1046 ;;		_sendData
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           	psect	text4
  1051  00065E                     __ptext4:
  1052                           	opt stack 0
  1053  00065E                     _crcBufS_put:
  1054                           	opt stack 24
  1055                           
  1056                           ;FastTransfer.c: 322: _this->buf[_this->head] = address;
  1057                           
  1058                           ;incstack = 0
  1059  00065E  EE20 F00F          	lfsr	2,15
  1060  000662  5013               	movf	crcBufS_put@_this,w,c
  1061  000664  26D9               	addwf	fsr2l,f,c
  1062  000666  5014               	movf	crcBufS_put@_this+1,w,c
  1063  000668  22DA               	addwfc	fsr2h,f,c
  1064  00066A  CFDE F018          	movff	postinc2,??_crcBufS_put
  1065  00066E  CFDD F019          	movff	postdec2,??_crcBufS_put+1
  1066  000672  5018               	movf	??_crcBufS_put,w,c
  1067  000674  2413               	addwf	crcBufS_put@_this,w,c
  1068  000676  6ED9               	movwf	fsr2l,c
  1069  000678  5019               	movf	??_crcBufS_put+1,w,c
  1070  00067A  2014               	addwfc	crcBufS_put@_this+1,w,c
  1071  00067C  6EDA               	movwf	fsr2h,c
  1072  00067E  C015  FFDF         	movff	crcBufS_put@address,indf2
  1073                           
  1074                           ;FastTransfer.c: 323: _this->head++;
  1075  000682  EE20 F00F          	lfsr	2,15
  1076  000686  5013               	movf	crcBufS_put@_this,w,c
  1077  000688  26D9               	addwf	fsr2l,f,c
  1078  00068A  5014               	movf	crcBufS_put@_this+1,w,c
  1079  00068C  22DA               	addwfc	fsr2h,f,c
  1080  00068E  2ADE               	incf	postinc2,f,c
  1081  000690  0E00               	movlw	0
  1082  000692  22DD               	addwfc	postdec2,f,c
  1083                           
  1084                           ;FastTransfer.c: 324: _this->buf[_this->head] = oldCRC;
  1085  000694  EE20 F00F          	lfsr	2,15
  1086  000698  5013               	movf	crcBufS_put@_this,w,c
  1087  00069A  26D9               	addwf	fsr2l,f,c
  1088  00069C  5014               	movf	crcBufS_put@_this+1,w,c
  1089  00069E  22DA               	addwfc	fsr2h,f,c
  1090  0006A0  CFDE F018          	movff	postinc2,??_crcBufS_put
  1091  0006A4  CFDD F019          	movff	postdec2,??_crcBufS_put+1
  1092  0006A8  5018               	movf	??_crcBufS_put,w,c
  1093  0006AA  2413               	addwf	crcBufS_put@_this,w,c
  1094  0006AC  6ED9               	movwf	fsr2l,c
  1095  0006AE  5019               	movf	??_crcBufS_put+1,w,c
  1096  0006B0  2014               	addwfc	crcBufS_put@_this+1,w,c
  1097  0006B2  6EDA               	movwf	fsr2h,c
  1098  0006B4  C016  FFDF         	movff	crcBufS_put@oldCRC,indf2
  1099                           
  1100                           ;FastTransfer.c: 325: _this->head++;
  1101  0006B8  EE20 F00F          	lfsr	2,15
  1102  0006BC  5013               	movf	crcBufS_put@_this,w,c
  1103  0006BE  26D9               	addwf	fsr2l,f,c
  1104  0006C0  5014               	movf	crcBufS_put@_this+1,w,c
  1105  0006C2  22DA               	addwfc	fsr2h,f,c
  1106  0006C4  2ADE               	incf	postinc2,f,c
  1107  0006C6  0E00               	movlw	0
  1108  0006C8  22DD               	addwfc	postdec2,f,c
  1109                           
  1110                           ;FastTransfer.c: 326: _this->buf[_this->head] = status;
  1111  0006CA  EE20 F00F          	lfsr	2,15
  1112  0006CE  5013               	movf	crcBufS_put@_this,w,c
  1113  0006D0  26D9               	addwf	fsr2l,f,c
  1114  0006D2  5014               	movf	crcBufS_put@_this+1,w,c
  1115  0006D4  22DA               	addwfc	fsr2h,f,c
  1116  0006D6  CFDE F018          	movff	postinc2,??_crcBufS_put
  1117  0006DA  CFDD F019          	movff	postdec2,??_crcBufS_put+1
  1118  0006DE  5018               	movf	??_crcBufS_put,w,c
  1119  0006E0  2413               	addwf	crcBufS_put@_this,w,c
  1120  0006E2  6ED9               	movwf	fsr2l,c
  1121  0006E4  5019               	movf	??_crcBufS_put+1,w,c
  1122  0006E6  2014               	addwfc	crcBufS_put@_this+1,w,c
  1123  0006E8  6EDA               	movwf	fsr2h,c
  1124  0006EA  C017  FFDF         	movff	crcBufS_put@status,indf2
  1125                           
  1126                           ;FastTransfer.c: 327: _this->head++;
  1127  0006EE  EE20 F00F          	lfsr	2,15
  1128  0006F2  5013               	movf	crcBufS_put@_this,w,c
  1129  0006F4  26D9               	addwf	fsr2l,f,c
  1130  0006F6  5014               	movf	crcBufS_put@_this+1,w,c
  1131  0006F8  22DA               	addwfc	fsr2h,f,c
  1132  0006FA  2ADE               	incf	postinc2,f,c
  1133  0006FC  0E00               	movlw	0
  1134  0006FE  22DD               	addwfc	postdec2,f,c
  1135                           
  1136                           ;FastTransfer.c: 328: if (_this->head >= (5 * 3)) {
  1137  000700  EE20 F00F          	lfsr	2,15
  1138  000704  5013               	movf	crcBufS_put@_this,w,c
  1139  000706  26D9               	addwf	fsr2l,f,c
  1140  000708  5014               	movf	crcBufS_put@_this+1,w,c
  1141  00070A  22DA               	addwfc	fsr2h,f,c
  1142  00070C  0E01               	movlw	1
  1143  00070E  BEDB               	btfsc	plusw2,7,c
  1144  000710  0012               	return	
  1145  000712  0E01               	movlw	1
  1146  000714  50DB               	movf	plusw2,w,c
  1147  000716  E104               	bnz	u950
  1148  000718  0E0F               	movlw	15
  1149  00071A  5CDE               	subwf	postinc2,w,c
  1150  00071C  A0D8               	btfss	status,0,c
  1151  00071E  0012               	return	
  1152  000720                     u950:
  1153                           
  1154                           ;FastTransfer.c: 329: _this->head = 0;
  1155  000720  EE20 F00F          	lfsr	2,15
  1156  000724  5013               	movf	crcBufS_put@_this,w,c
  1157  000726  26D9               	addwf	fsr2l,f,c
  1158  000728  5014               	movf	crcBufS_put@_this+1,w,c
  1159  00072A  22DA               	addwfc	fsr2h,f,c
  1160  00072C  0E00               	movlw	0
  1161  00072E  6EDE               	movwf	postinc2,c
  1162  000730  0E00               	movlw	0
  1163  000732  6EDD               	movwf	postdec2,c
  1164  000734  0012               	return	
  1165  000736                     __end_of_crcBufS_put:
  1166                           	opt stack 0
  1167                           tblptru	equ	0xFF8
  1168                           tblptrh	equ	0xFF7
  1169                           tblptrl	equ	0xFF6
  1170                           tablat	equ	0xFF5
  1171                           intcon	equ	0xFF2
  1172                           postinc0	equ	0xFEE
  1173                           wreg	equ	0xFE8
  1174                           indf2	equ	0xFDF
  1175                           postinc2	equ	0xFDE
  1176                           postdec2	equ	0xFDD
  1177                           plusw2	equ	0xFDB
  1178                           fsr2h	equ	0xFDA
  1179                           fsr2l	equ	0xFD9
  1180                           status	equ	0xFD8
  1181                           
  1182 ;; *************** function _FastTransfer_buffer_flush *****************
  1183 ;; Defined at:
  1184 ;;		line 261 in file "FastTransfer.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;  _this           2   26[COMRAM] PTR struct ringBufS
  1187 ;;		 -> ring_buffer(206), 
  1188 ;;  clearBuffer     2   28[COMRAM] const int 
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;		None
  1191 ;; Return value:  Size  Location     Type
  1192 ;;		None               void
  1193 ;; Registers used:
  1194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1200 ;;      Params:         4       0       0       0       0       0       0
  1201 ;;      Locals:         0       0       0       0       0       0       0
  1202 ;;      Temps:          0       0       0       0       0       0       0
  1203 ;;      Totals:         4       0       0       0       0       0       0
  1204 ;;Total ram usage:        4 bytes
  1205 ;; Hardware stack levels used:    1
  1206 ;; Hardware stack levels required when called:    4
  1207 ;; This function calls:
  1208 ;;		_memset
  1209 ;; This function is called by:
  1210 ;;		_sendData
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           	psect	text5
  1215  000BE8                     __ptext5:
  1216                           	opt stack 0
  1217  000BE8                     _FastTransfer_buffer_flush:
  1218                           	opt stack 23
  1219                           
  1220                           ;FastTransfer.c: 262: _this->count = 0;
  1221                           
  1222                           ;incstack = 0
  1223  000BE8  EE20 F0CC          	lfsr	2,204
  1224  000BEC  501B               	movf	FastTransfer_buffer_flush@_this,w,c
  1225  000BEE  26D9               	addwf	fsr2l,f,c
  1226  000BF0  501C               	movf	FastTransfer_buffer_flush@_this+1,w,c
  1227  000BF2  22DA               	addwfc	fsr2h,f,c
  1228  000BF4  0E00               	movlw	0
  1229  000BF6  6EDE               	movwf	postinc2,c
  1230  000BF8  0E00               	movlw	0
  1231  000BFA  6EDD               	movwf	postdec2,c
  1232                           
  1233                           ;FastTransfer.c: 263: _this->head = 0;
  1234  000BFC  EE20 F0C8          	lfsr	2,200
  1235  000C00  501B               	movf	FastTransfer_buffer_flush@_this,w,c
  1236  000C02  26D9               	addwf	fsr2l,f,c
  1237  000C04  501C               	movf	FastTransfer_buffer_flush@_this+1,w,c
  1238  000C06  22DA               	addwfc	fsr2h,f,c
  1239  000C08  0E00               	movlw	0
  1240  000C0A  6EDE               	movwf	postinc2,c
  1241  000C0C  0E00               	movlw	0
  1242  000C0E  6EDD               	movwf	postdec2,c
  1243                           
  1244                           ;FastTransfer.c: 264: _this->tail = 0;
  1245  000C10  EE20 F0CA          	lfsr	2,202
  1246  000C14  501B               	movf	FastTransfer_buffer_flush@_this,w,c
  1247  000C16  26D9               	addwf	fsr2l,f,c
  1248  000C18  501C               	movf	FastTransfer_buffer_flush@_this+1,w,c
  1249  000C1A  22DA               	addwfc	fsr2h,f,c
  1250  000C1C  0E00               	movlw	0
  1251  000C1E  6EDE               	movwf	postinc2,c
  1252  000C20  0E00               	movlw	0
  1253  000C22  6EDD               	movwf	postdec2,c
  1254                           
  1255                           ;FastTransfer.c: 265: if (clearBuffer) {
  1256  000C24  501D               	movf	FastTransfer_buffer_flush@clearBuffer,w,c
  1257  000C26  101E               	iorwf	FastTransfer_buffer_flush@clearBuffer+1,w,c
  1258  000C28  B4D8               	btfsc	status,2,c
  1259  000C2A  0012               	return	
  1260                           
  1261                           ;FastTransfer.c: 266: memset(_this->buf, 0, sizeof (_this->buf));
  1262  000C2C  C01B  F013         	movff	FastTransfer_buffer_flush@_this,memset@p1
  1263  000C30  C01C  F014         	movff	FastTransfer_buffer_flush@_this+1,memset@p1+1
  1264  000C34  0E00               	movlw	0
  1265  000C36  6E16               	movwf	memset@c+1,c
  1266  000C38  0E00               	movlw	0
  1267  000C3A  6E15               	movwf	memset@c,c
  1268  000C3C  0E00               	movlw	0
  1269  000C3E  6E18               	movwf	memset@n+1,c
  1270  000C40  0EC8               	movlw	200
  1271  000C42  6E17               	movwf	memset@n,c
  1272  000C44  EC73  F007         	call	_memset	;wreg free
  1273  000C48  0012               	return	
  1274  000C4A                     __end_of_FastTransfer_buffer_flush:
  1275                           	opt stack 0
  1276                           tblptru	equ	0xFF8
  1277                           tblptrh	equ	0xFF7
  1278                           tblptrl	equ	0xFF6
  1279                           tablat	equ	0xFF5
  1280                           intcon	equ	0xFF2
  1281                           postinc0	equ	0xFEE
  1282                           wreg	equ	0xFE8
  1283                           indf2	equ	0xFDF
  1284                           postinc2	equ	0xFDE
  1285                           postdec2	equ	0xFDD
  1286                           plusw2	equ	0xFDB
  1287                           fsr2h	equ	0xFDA
  1288                           fsr2l	equ	0xFD9
  1289                           status	equ	0xFD8
  1290                           
  1291 ;; *************** function _memset *****************
  1292 ;; Defined at:
  1293 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;  p1              2   18[COMRAM] PTR void 
  1296 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  1297 ;;  c               2   20[COMRAM] int 
  1298 ;;  n               2   22[COMRAM] unsigned int 
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;  p               2   24[COMRAM] PTR unsigned char 
  1301 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  1302 ;; Return value:  Size  Location     Type
  1303 ;;                  2   18[COMRAM] PTR void 
  1304 ;; Registers used:
  1305 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1311 ;;      Params:         6       0       0       0       0       0       0
  1312 ;;      Locals:         2       0       0       0       0       0       0
  1313 ;;      Temps:          0       0       0       0       0       0       0
  1314 ;;      Totals:         8       0       0       0       0       0       0
  1315 ;;Total ram usage:        8 bytes
  1316 ;; Hardware stack levels used:    1
  1317 ;; Hardware stack levels required when called:    3
  1318 ;; This function calls:
  1319 ;;		Nothing
  1320 ;; This function is called by:
  1321 ;;		_FastTransfer_buffer_flush
  1322 ;;		_UART_buff_init
  1323 ;;		_UART_buff_flush
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           	psect	text6
  1328  000EE6                     __ptext6:
  1329                           	opt stack 0
  1330  000EE6                     _memset:
  1331                           	opt stack 23
  1332                           
  1333                           ;incstack = 0
  1334  000EE6  C013  F019         	movff	memset@p1,memset@p
  1335  000EEA  C014  F01A         	movff	memset@p1+1,memset@p+1
  1336  000EEE  D008               	goto	l2340
  1337  000EF0                     l2336:
  1338  000EF0  C019  FFD9         	movff	memset@p,fsr2l
  1339  000EF4  C01A  FFDA         	movff	memset@p+1,fsr2h
  1340  000EF8  C015  FFDF         	movff	memset@c,indf2
  1341  000EFC  4A19               	infsnz	memset@p,f,c
  1342  000EFE  2A1A               	incf	memset@p+1,f,c
  1343  000F00                     l2340:
  1344  000F00  0617               	decf	memset@n,f,c
  1345  000F02  A0D8               	btfss	status,0,c
  1346  000F04  0618               	decf	memset@n+1,f,c
  1347  000F06  2817               	incf	memset@n,w,c
  1348  000F08  E1F3               	bnz	l2336
  1349  000F0A  2818               	incf	memset@n+1,w,c
  1350  000F0C  B4D8               	btfsc	status,2,c
  1351  000F0E  0012               	return	
  1352  000F10  D7EF               	goto	l2336
  1353  000F12                     __end_of_memset:
  1354                           	opt stack 0
  1355                           tblptru	equ	0xFF8
  1356                           tblptrh	equ	0xFF7
  1357                           tblptrl	equ	0xFF6
  1358                           tablat	equ	0xFF5
  1359                           intcon	equ	0xFF2
  1360                           postinc0	equ	0xFEE
  1361                           wreg	equ	0xFE8
  1362                           indf2	equ	0xFDF
  1363                           postinc2	equ	0xFDE
  1364                           postdec2	equ	0xFDD
  1365                           plusw2	equ	0xFDB
  1366                           fsr2h	equ	0xFDA
  1367                           fsr2l	equ	0xFD9
  1368                           status	equ	0xFD8
  1369                           
  1370 ;; *************** function _ToSend *****************
  1371 ;; Defined at:
  1372 ;;		line 216 in file "FastTransfer.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;  where           1    wreg     unsigned char 
  1375 ;;  what            2   31[COMRAM] unsigned int 
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;  where           1   33[COMRAM] unsigned char 
  1378 ;; Return value:  Size  Location     Type
  1379 ;;		None               void
  1380 ;; Registers used:
  1381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1387 ;;      Params:         2       0       0       0       0       0       0
  1388 ;;      Locals:         1       0       0       0       0       0       0
  1389 ;;      Temps:          0       0       0       0       0       0       0
  1390 ;;      Totals:         3       0       0       0       0       0       0
  1391 ;;Total ram usage:        3 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; Hardware stack levels required when called:    5
  1394 ;; This function calls:
  1395 ;;		_FastTransfer_buffer_put
  1396 ;; This function is called by:
  1397 ;;		_respondECU
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           	psect	text7
  1402  000FA2                     __ptext7:
  1403                           	opt stack 0
  1404  000FA2                     _ToSend:
  1405                           	opt stack 23
  1406                           
  1407                           ;incstack = 0
  1408                           ;ToSend@where stored from wreg
  1409  000FA2  6E22               	movwf	ToSend@where,c
  1410                           
  1411                           ;FastTransfer.c: 217: FastTransfer_buffer_put(&ring_buffer, where, what);
  1412  000FA4  0E00               	movlw	low _ring_buffer
  1413  000FA6  6E19               	movwf	FastTransfer_buffer_put@_this,c
  1414  000FA8  0E01               	movlw	high _ring_buffer
  1415  000FAA  6E1A               	movwf	FastTransfer_buffer_put@_this+1,c
  1416  000FAC  C022  F01B         	movff	ToSend@where,FastTransfer_buffer_put@towhere
  1417  000FB0  C020  F01C         	movff	ToSend@what,FastTransfer_buffer_put@towhat
  1418  000FB4  C021  F01D         	movff	ToSend@what+1,FastTransfer_buffer_put@towhat+1
  1419  000FB8  EC9C  F001         	call	_FastTransfer_buffer_put	;wreg free
  1420  000FBC  0012               	return		;funcret
  1421  000FBE                     __end_of_ToSend:
  1422                           	opt stack 0
  1423                           tblptru	equ	0xFF8
  1424                           tblptrh	equ	0xFF7
  1425                           tblptrl	equ	0xFF6
  1426                           tablat	equ	0xFF5
  1427                           intcon	equ	0xFF2
  1428                           postinc0	equ	0xFEE
  1429                           wreg	equ	0xFE8
  1430                           indf2	equ	0xFDF
  1431                           postinc2	equ	0xFDE
  1432                           postdec2	equ	0xFDD
  1433                           plusw2	equ	0xFDB
  1434                           fsr2h	equ	0xFDA
  1435                           fsr2l	equ	0xFD9
  1436                           status	equ	0xFD8
  1437                           
  1438 ;; *************** function _FastTransfer_buffer_put *****************
  1439 ;; Defined at:
  1440 ;;		line 223 in file "FastTransfer.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;  _this           2   24[COMRAM] PTR struct ringBufS
  1443 ;;		 -> ring_buffer(206), 
  1444 ;;  towhere         1   26[COMRAM] unsigned char 
  1445 ;;  towhat          2   27[COMRAM] unsigned int 
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;		None
  1448 ;; Return value:  Size  Location     Type
  1449 ;;		None               void
  1450 ;; Registers used:
  1451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1457 ;;      Params:         5       0       0       0       0       0       0
  1458 ;;      Locals:         0       0       0       0       0       0       0
  1459 ;;      Temps:          2       0       0       0       0       0       0
  1460 ;;      Totals:         7       0       0       0       0       0       0
  1461 ;;Total ram usage:        7 bytes
  1462 ;; Hardware stack levels used:    1
  1463 ;; Hardware stack levels required when called:    4
  1464 ;; This function calls:
  1465 ;;		_FastTransfer_buffer_modulo_inc
  1466 ;; This function is called by:
  1467 ;;		_ToSend
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           	psect	text8
  1472  000338                     __ptext8:
  1473                           	opt stack 0
  1474  000338                     _FastTransfer_buffer_put:
  1475                           	opt stack 23
  1476                           
  1477                           ;FastTransfer.c: 225: group.integer = towhat;
  1478                           
  1479                           ;incstack = 0
  1480  000338  C01C  F02E         	movff	FastTransfer_buffer_put@towhat,_group
  1481  00033C  C01D  F02F         	movff	FastTransfer_buffer_put@towhat+1,_group+1
  1482                           
  1483                           ;FastTransfer.c: 227: if (_this->count < (200 - 3)) {
  1484  000340  EE20 F0CC          	lfsr	2,204
  1485  000344  5019               	movf	FastTransfer_buffer_put@_this,w,c
  1486  000346  26D9               	addwf	fsr2l,f,c
  1487  000348  501A               	movf	FastTransfer_buffer_put@_this+1,w,c
  1488  00034A  22DA               	addwfc	fsr2h,f,c
  1489  00034C  0E01               	movlw	1
  1490  00034E  BEDB               	btfsc	plusw2,7,c
  1491  000350  D007               	goto	l2380
  1492  000352  0E01               	movlw	1
  1493  000354  50DB               	movf	plusw2,w,c
  1494  000356  E103               	bnz	u971
  1495  000358  0EC5               	movlw	197
  1496  00035A  5CDE               	subwf	postinc2,w,c
  1497  00035C  B0D8               	btfsc	status,0,c
  1498  00035E                     u971:
  1499  00035E  0012               	return	
  1500  000360                     l2380:
  1501                           
  1502                           ;FastTransfer.c: 228: _this->buf[_this->head] = towhere;
  1503  000360  EE20 F0C8          	lfsr	2,200
  1504  000364  5019               	movf	FastTransfer_buffer_put@_this,w,c
  1505  000366  26D9               	addwf	fsr2l,f,c
  1506  000368  501A               	movf	FastTransfer_buffer_put@_this+1,w,c
  1507  00036A  22DA               	addwfc	fsr2h,f,c
  1508  00036C  CFDE F01E          	movff	postinc2,??_FastTransfer_buffer_put
  1509  000370  CFDD F01F          	movff	postdec2,??_FastTransfer_buffer_put+1
  1510  000374  501E               	movf	??_FastTransfer_buffer_put,w,c
  1511  000376  2419               	addwf	FastTransfer_buffer_put@_this,w,c
  1512  000378  6ED9               	movwf	fsr2l,c
  1513  00037A  501F               	movf	??_FastTransfer_buffer_put+1,w,c
  1514  00037C  201A               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  1515  00037E  6EDA               	movwf	fsr2h,c
  1516  000380  C01B  FFDF         	movff	FastTransfer_buffer_put@towhere,indf2
  1517                           
  1518                           ;FastTransfer.c: 229: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  1519  000384  EE20 F0C8          	lfsr	2,200
  1520  000388  5019               	movf	FastTransfer_buffer_put@_this,w,c
  1521  00038A  26D9               	addwf	fsr2l,f,c
  1522  00038C  501A               	movf	FastTransfer_buffer_put@_this+1,w,c
  1523  00038E  22DA               	addwfc	fsr2h,f,c
  1524  000390  CFDE F013          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  1525  000394  CFDD F014          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  1526  000398  0E00               	movlw	0
  1527  00039A  6E16               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  1528  00039C  0EC8               	movlw	200
  1529  00039E  6E15               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  1530  0003A0  EC89  F007         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  1531  0003A4  EE20 F0C8          	lfsr	2,200
  1532  0003A8  5019               	movf	FastTransfer_buffer_put@_this,w,c
  1533  0003AA  26D9               	addwf	fsr2l,f,c
  1534  0003AC  501A               	movf	FastTransfer_buffer_put@_this+1,w,c
  1535  0003AE  22DA               	addwfc	fsr2h,f,c
  1536  0003B0  C013  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  1537  0003B4  C014  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  1538                           
  1539                           ;FastTransfer.c: 230: ++_this->count;
  1540  0003B8  EE20 F0CC          	lfsr	2,204
  1541  0003BC  5019               	movf	FastTransfer_buffer_put@_this,w,c
  1542  0003BE  26D9               	addwf	fsr2l,f,c
  1543  0003C0  501A               	movf	FastTransfer_buffer_put@_this+1,w,c
  1544  0003C2  22DA               	addwfc	fsr2h,f,c
  1545  0003C4  2ADE               	incf	postinc2,f,c
  1546  0003C6  0E00               	movlw	0
  1547  0003C8  22DD               	addwfc	postdec2,f,c
  1548                           
  1549                           ;FastTransfer.c: 231: _this->buf[_this->head] = group.parts[0];
  1550  0003CA  EE20 F0C8          	lfsr	2,200
  1551  0003CE  5019               	movf	FastTransfer_buffer_put@_this,w,c
  1552  0003D0  26D9               	addwf	fsr2l,f,c
  1553  0003D2  501A               	movf	FastTransfer_buffer_put@_this+1,w,c
  1554  0003D4  22DA               	addwfc	fsr2h,f,c
  1555  0003D6  CFDE F01E          	movff	postinc2,??_FastTransfer_buffer_put
  1556  0003DA  CFDD F01F          	movff	postdec2,??_FastTransfer_buffer_put+1
  1557  0003DE  501E               	movf	??_FastTransfer_buffer_put,w,c
  1558  0003E0  2419               	addwf	FastTransfer_buffer_put@_this,w,c
  1559  0003E2  6ED9               	movwf	fsr2l,c
  1560  0003E4  501F               	movf	??_FastTransfer_buffer_put+1,w,c
  1561  0003E6  201A               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  1562  0003E8  6EDA               	movwf	fsr2h,c
  1563  0003EA  C02E  FFDF         	movff	_group,indf2
  1564                           
  1565                           ;FastTransfer.c: 232: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  1566  0003EE  EE20 F0C8          	lfsr	2,200
  1567  0003F2  5019               	movf	FastTransfer_buffer_put@_this,w,c
  1568  0003F4  26D9               	addwf	fsr2l,f,c
  1569  0003F6  501A               	movf	FastTransfer_buffer_put@_this+1,w,c
  1570  0003F8  22DA               	addwfc	fsr2h,f,c
  1571  0003FA  CFDE F013          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  1572  0003FE  CFDD F014          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  1573  000402  0E00               	movlw	0
  1574  000404  6E16               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  1575  000406  0EC8               	movlw	200
  1576  000408  6E15               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  1577  00040A  EC89  F007         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  1578  00040E  EE20 F0C8          	lfsr	2,200
  1579  000412  5019               	movf	FastTransfer_buffer_put@_this,w,c
  1580  000414  26D9               	addwf	fsr2l,f,c
  1581  000416  501A               	movf	FastTransfer_buffer_put@_this+1,w,c
  1582  000418  22DA               	addwfc	fsr2h,f,c
  1583  00041A  C013  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  1584  00041E  C014  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  1585                           
  1586                           ;FastTransfer.c: 233: ++_this->count;
  1587  000422  EE20 F0CC          	lfsr	2,204
  1588  000426  5019               	movf	FastTransfer_buffer_put@_this,w,c
  1589  000428  26D9               	addwf	fsr2l,f,c
  1590  00042A  501A               	movf	FastTransfer_buffer_put@_this+1,w,c
  1591  00042C  22DA               	addwfc	fsr2h,f,c
  1592  00042E  2ADE               	incf	postinc2,f,c
  1593  000430  0E00               	movlw	0
  1594  000432  22DD               	addwfc	postdec2,f,c
  1595                           
  1596                           ;FastTransfer.c: 234: _this->buf[_this->head] = group.parts[1];
  1597  000434  EE20 F0C8          	lfsr	2,200
  1598  000438  5019               	movf	FastTransfer_buffer_put@_this,w,c
  1599  00043A  26D9               	addwf	fsr2l,f,c
  1600  00043C  501A               	movf	FastTransfer_buffer_put@_this+1,w,c
  1601  00043E  22DA               	addwfc	fsr2h,f,c
  1602  000440  CFDE F01E          	movff	postinc2,??_FastTransfer_buffer_put
  1603  000444  CFDD F01F          	movff	postdec2,??_FastTransfer_buffer_put+1
  1604  000448  501E               	movf	??_FastTransfer_buffer_put,w,c
  1605  00044A  2419               	addwf	FastTransfer_buffer_put@_this,w,c
  1606  00044C  6ED9               	movwf	fsr2l,c
  1607  00044E  501F               	movf	??_FastTransfer_buffer_put+1,w,c
  1608  000450  201A               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  1609  000452  6EDA               	movwf	fsr2h,c
  1610  000454  C02F  FFDF         	movff	_group+1,indf2
  1611                           
  1612                           ;FastTransfer.c: 235: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  1613  000458  EE20 F0C8          	lfsr	2,200
  1614  00045C  5019               	movf	FastTransfer_buffer_put@_this,w,c
  1615  00045E  26D9               	addwf	fsr2l,f,c
  1616  000460  501A               	movf	FastTransfer_buffer_put@_this+1,w,c
  1617  000462  22DA               	addwfc	fsr2h,f,c
  1618  000464  CFDE F013          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  1619  000468  CFDD F014          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  1620  00046C  0E00               	movlw	0
  1621  00046E  6E16               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  1622  000470  0EC8               	movlw	200
  1623  000472  6E15               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  1624  000474  EC89  F007         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  1625  000478  EE20 F0C8          	lfsr	2,200
  1626  00047C  5019               	movf	FastTransfer_buffer_put@_this,w,c
  1627  00047E  26D9               	addwf	fsr2l,f,c
  1628  000480  501A               	movf	FastTransfer_buffer_put@_this+1,w,c
  1629  000482  22DA               	addwfc	fsr2h,f,c
  1630  000484  C013  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  1631  000488  C014  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  1632                           
  1633                           ;FastTransfer.c: 236: ++_this->count;
  1634  00048C  EE20 F0CC          	lfsr	2,204
  1635  000490  5019               	movf	FastTransfer_buffer_put@_this,w,c
  1636  000492  26D9               	addwf	fsr2l,f,c
  1637  000494  501A               	movf	FastTransfer_buffer_put@_this+1,w,c
  1638  000496  22DA               	addwfc	fsr2h,f,c
  1639  000498  2ADE               	incf	postinc2,f,c
  1640  00049A  0E00               	movlw	0
  1641  00049C  22DD               	addwfc	postdec2,f,c
  1642  00049E  0012               	return	
  1643  0004A0                     __end_of_FastTransfer_buffer_put:
  1644                           	opt stack 0
  1645                           tblptru	equ	0xFF8
  1646                           tblptrh	equ	0xFF7
  1647                           tblptrl	equ	0xFF6
  1648                           tablat	equ	0xFF5
  1649                           intcon	equ	0xFF2
  1650                           postinc0	equ	0xFEE
  1651                           wreg	equ	0xFE8
  1652                           indf2	equ	0xFDF
  1653                           postinc2	equ	0xFDE
  1654                           postdec2	equ	0xFDD
  1655                           plusw2	equ	0xFDB
  1656                           fsr2h	equ	0xFDA
  1657                           fsr2l	equ	0xFD9
  1658                           status	equ	0xFD8
  1659                           
  1660 ;; *************** function _FastTransfer_buffer_modulo_inc *****************
  1661 ;; Defined at:
  1662 ;;		line 273 in file "FastTransfer.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;  value           2   18[COMRAM] const unsigned int 
  1665 ;;  modulus         2   20[COMRAM] const unsigned int 
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;  my_value        2   22[COMRAM] unsigned int 
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  2   18[COMRAM] unsigned int 
  1670 ;; Registers used:
  1671 ;;		wreg, status,2, status,0
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1677 ;;      Params:         4       0       0       0       0       0       0
  1678 ;;      Locals:         2       0       0       0       0       0       0
  1679 ;;      Temps:          0       0       0       0       0       0       0
  1680 ;;      Totals:         6       0       0       0       0       0       0
  1681 ;;Total ram usage:        6 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; Hardware stack levels required when called:    3
  1684 ;; This function calls:
  1685 ;;		Nothing
  1686 ;; This function is called by:
  1687 ;;		_FastTransfer_buffer_put
  1688 ;;		_FastTransfer_buffer_get
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           	psect	text9
  1693  000F12                     __ptext9:
  1694                           	opt stack 0
  1695  000F12                     _FastTransfer_buffer_modulo_inc:
  1696                           	opt stack 23
  1697                           
  1698                           ;FastTransfer.c: 274: unsigned int my_value = value + 1;
  1699                           
  1700                           ;incstack = 0
  1701  000F12  0E01               	movlw	1
  1702  000F14  2413               	addwf	FastTransfer_buffer_modulo_inc@value,w,c
  1703  000F16  6E17               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  1704  000F18  0E00               	movlw	0
  1705  000F1A  2014               	addwfc	FastTransfer_buffer_modulo_inc@value+1,w,c
  1706  000F1C  6E18               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  1707                           
  1708                           ;FastTransfer.c: 275: if (my_value >= modulus) {
  1709  000F1E  5015               	movf	FastTransfer_buffer_modulo_inc@modulus,w,c
  1710  000F20  5C17               	subwf	FastTransfer_buffer_modulo_inc@my_value,w,c
  1711  000F22  5016               	movf	FastTransfer_buffer_modulo_inc@modulus+1,w,c
  1712  000F24  5818               	subwfb	FastTransfer_buffer_modulo_inc@my_value+1,w,c
  1713  000F26  A0D8               	btfss	status,0,c
  1714  000F28  D004               	goto	l2330
  1715                           
  1716                           ;FastTransfer.c: 276: my_value = 0;
  1717  000F2A  0E00               	movlw	0
  1718  000F2C  6E18               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  1719  000F2E  0E00               	movlw	0
  1720  000F30  6E17               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  1721  000F32                     l2330:
  1722                           
  1723                           ;FastTransfer.c: 277: }
  1724                           ;FastTransfer.c: 278: return (my_value);
  1725  000F32  C017  F013         	movff	FastTransfer_buffer_modulo_inc@my_value,?_FastTransfer_buffer_modulo_inc
  1726  000F36  C018  F014         	movff	FastTransfer_buffer_modulo_inc@my_value+1,?_FastTransfer_buffer_modulo_inc+1
  1727  000F3A  0012               	return	
  1728  000F3C                     __end_of_FastTransfer_buffer_modulo_inc:
  1729                           	opt stack 0
  1730                           tblptru	equ	0xFF8
  1731                           tblptrh	equ	0xFF7
  1732                           tblptrl	equ	0xFF6
  1733                           tablat	equ	0xFF5
  1734                           intcon	equ	0xFF2
  1735                           postinc0	equ	0xFEE
  1736                           wreg	equ	0xFE8
  1737                           indf2	equ	0xFDF
  1738                           postinc2	equ	0xFDE
  1739                           postdec2	equ	0xFDD
  1740                           plusw2	equ	0xFDB
  1741                           fsr2h	equ	0xFDA
  1742                           fsr2l	equ	0xFD9
  1743                           status	equ	0xFD8
  1744                           
  1745 ;; *************** function _receiveData *****************
  1746 ;; Defined at:
  1747 ;;		line 82 in file "FastTransfer.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;		None
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;  holder          3   11[BANK0 ] unsigned char [3]
  1752 ;;  crcHolder       1    7[BANK0 ] unsigned char 
  1753 ;;  holder          3    8[BANK0 ] unsigned char [3]
  1754 ;;  crcHolder       1    6[BANK0 ] unsigned char 
  1755 ;;  u               2   14[BANK0 ] int 
  1756 ;;  r               2   16[BANK0 ] int 
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  1    wreg      unsigned char 
  1759 ;; Registers used:
  1760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1766 ;;      Params:         0       0       0       0       0       0       0
  1767 ;;      Locals:         0      12       0       0       0       0       0
  1768 ;;      Temps:          0       6       0       0       0       0       0
  1769 ;;      Totals:         0      18       0       0       0       0       0
  1770 ;;Total ram usage:       18 bytes
  1771 ;; Hardware stack levels used:    1
  1772 ;; Hardware stack levels required when called:    5
  1773 ;; This function calls:
  1774 ;;		_CRC8
  1775 ;;		_CRCcheck
  1776 ;; This function is called by:
  1777 ;;		_updateComms
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           	psect	text10
  1782  000098                     __ptext10:
  1783                           	opt stack 0
  1784  000098                     _receiveData:
  1785                           	opt stack 24
  1786                           
  1787                           ;FastTransfer.c: 87: if (serial_available() > 4) {
  1788                           
  1789                           ;incstack = 0
  1790  000098  D020               	goto	l3144
  1791  00009A                     l3134:
  1792                           
  1793                           ; BSR set to: 0
  1794  00009A  0100               	movlb	0	; () banked
  1795  00009C  4BEF               	infsnz	receiveData@u& (0+255),f,b
  1796  00009E  2BF0               	incf	(receiveData@u+1)& (0+255),f,b
  1797                           
  1798                           ; BSR set to: 0
  1799                           
  1800                           ; BSR set to: 0
  1801  0000A0  5047               	movf	_rx_len,w,c
  1802  0000A2  0100               	movlb	0	; () banked
  1803  0000A4  6FE1               	movwf	??_receiveData& (0+255),b
  1804  0000A6  6BE2               	clrf	(??_receiveData+1)& (0+255),b
  1805  0000A8  0E01               	movlw	1
  1806  0000AA  0100               	movlb	0	; () banked
  1807  0000AC  27E1               	addwf	??_receiveData& (0+255),f,b
  1808  0000AE  0E00               	movlw	0
  1809  0000B0  23E2               	addwfc	(??_receiveData+1)& (0+255),f,b
  1810  0000B2  0100               	movlb	0	; () banked
  1811  0000B4  51EF               	movf	receiveData@u& (0+255),w,b
  1812  0000B6  0100               	movlb	0	; () banked
  1813  0000B8  5DE1               	subwf	??_receiveData& (0+255),w,b
  1814  0000BA  0100               	movlb	0	; () banked
  1815  0000BC  51E2               	movf	(??_receiveData+1)& (0+255),w,b
  1816  0000BE  0A80               	xorlw	128
  1817  0000C0  0100               	movlb	0	; () banked
  1818  0000C2  6FE3               	movwf	(??_receiveData+2)& (0+255),b
  1819  0000C4  0100               	movlb	0	; () banked
  1820  0000C6  51F0               	movf	(receiveData@u+1)& (0+255),w,b
  1821  0000C8  0A80               	xorlw	128
  1822  0000CA  0100               	movlb	0	; () banked
  1823  0000CC  59E3               	subwfb	(??_receiveData+2)& (0+255),w,b
  1824  0000CE  B0D8               	btfsc	status,0,c
  1825  0000D0  D7E4               	goto	l3134
  1826                           
  1827                           ; BSR set to: 0
  1828                           ;FastTransfer.c: 109: }
  1829                           ;FastTransfer.c: 110: rx_len = 0;
  1830                           
  1831                           ; BSR set to: 0
  1832  0000D2  0E00               	movlw	0
  1833  0000D4  6E47               	movwf	_rx_len,c
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;FastTransfer.c: 111: return 0;
  1837  0000D6  0E00               	movlw	0
  1838                           
  1839                           ; BSR set to: 0
  1840  0000D8  0012               	return	
  1841  0000DA                     l3144:
  1842                           
  1843                           ;FastTransfer.c: 112: }
  1844                           ;FastTransfer.c: 114: }
  1845                           ;FastTransfer.c: 115: }
  1846                           ;FastTransfer.c: 116: }
  1847                           ;FastTransfer.c: 119: if (rx_len != 0) {
  1848  0000DA  5047               	movf	_rx_len,w,c
  1849  0000DC  B4D8               	btfsc	status,2,c
  1850  0000DE  D12A               	goto	l3226
  1851                           
  1852                           ;FastTransfer.c: 122: if (rx_array_inx == 0) {
  1853  0000E0  5046               	movf	_rx_array_inx,w,c
  1854  0000E2  B4D8               	btfsc	status,2,c
  1855  0000E4                     l468:
  1856  0000E4  D7FF               	goto	l468
  1857                           
  1858                           ;FastTransfer.c: 135: }
  1859                           ;FastTransfer.c: 137: if (rx_len == (rx_array_inx - 1)) {
  1860                           
  1861                           ;FastTransfer.c: 134: rx_buffer[rx_array_inx++] = serial_read();
  1862                           
  1863                           ;FastTransfer.c: 129: }
  1864                           ;FastTransfer.c: 130: }
  1865                           ;FastTransfer.c: 133: while (serial_available() && rx_array_inx <= rx_len) {
  1866                           
  1867                           ;FastTransfer.c: 128: return 0;
  1868                           
  1869                           ;FastTransfer.c: 127: rx_array_inx = 0;
  1870                           
  1871                           ;FastTransfer.c: 126: rx_len = 0;
  1872                           
  1873                           ;FastTransfer.c: 125: CRCcheck();
  1874                           
  1875                           ;FastTransfer.c: 124: if (255 == serial_peek()) {
  1876  0000E6  5047               	movf	_rx_len,w,c
  1877  0000E8  0100               	movlb	0	; () banked
  1878  0000EA  6FE1               	movwf	??_receiveData& (0+255),b
  1879  0000EC  6BE2               	clrf	(??_receiveData+1)& (0+255),b
  1880  0000EE  0EFF               	movlw	255
  1881  0000F0  0100               	movlb	0	; () banked
  1882  0000F2  6FE3               	movwf	(??_receiveData+2)& (0+255),b
  1883  0000F4  0EFF               	movlw	255
  1884  0000F6  0100               	movlb	0	; () banked
  1885  0000F8  6FE4               	movwf	(??_receiveData+3)& (0+255),b
  1886  0000FA  5046               	movf	_rx_array_inx,w,c
  1887  0000FC  0100               	movlb	0	; () banked
  1888  0000FE  6FE5               	movwf	(??_receiveData+4)& (0+255),b
  1889  000100  6BE6               	clrf	(??_receiveData+5)& (0+255),b
  1890  000102  0100               	movlb	0	; () banked
  1891  000104  51E3               	movf	(??_receiveData+2)& (0+255),w,b
  1892  000106  0100               	movlb	0	; () banked
  1893  000108  27E5               	addwf	(??_receiveData+4)& (0+255),f,b
  1894  00010A  0100               	movlb	0	; () banked
  1895  00010C  51E4               	movf	(??_receiveData+3)& (0+255),w,b
  1896  00010E  0100               	movlb	0	; () banked
  1897  000110  23E6               	addwfc	(??_receiveData+5)& (0+255),f,b
  1898  000112  0100               	movlb	0	; () banked
  1899  000114  51E1               	movf	??_receiveData& (0+255),w,b
  1900  000116  0100               	movlb	0	; () banked
  1901  000118  19E5               	xorwf	(??_receiveData+4)& (0+255),w,b
  1902  00011A  E105               	bnz	u1851
  1903  00011C  0100               	movlb	0	; () banked
  1904  00011E  51E2               	movf	(??_receiveData+1)& (0+255),w,b
  1905  000120  0100               	movlb	0	; () banked
  1906  000122  19E6               	xorwf	(??_receiveData+5)& (0+255),w,b
  1907  000124  A4D8               	btfss	status,2,c
  1908  000126                     u1851:
  1909  000126  D106               	goto	l3226
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;FastTransfer.c: 140: calc_CS = CRC8(rx_buffer, rx_len);
  1913  000128  0E00               	movlw	low _rx_buffer
  1914  00012A  6E13               	movwf	CRC8@data,c
  1915  00012C  0E04               	movlw	high _rx_buffer
  1916  00012E  6E14               	movwf	CRC8@data+1,c
  1917  000130  C047  F015         	movff	_rx_len,CRC8@len
  1918  000134  ECF6  F006         	call	_CRC8	;wreg free
  1919  000138  6E41               	movwf	_calc_CS,c
  1920                           
  1921                           ;FastTransfer.c: 144: if (calc_CS == rx_buffer[rx_array_inx - 1]) {
  1922  00013A  0EFF               	movlw	255
  1923  00013C  0100               	movlb	0	; () banked
  1924  00013E  6FE1               	movwf	??_receiveData& (0+255),b
  1925  000140  0EFF               	movlw	255
  1926  000142  0100               	movlb	0	; () banked
  1927  000144  6FE2               	movwf	(??_receiveData+1)& (0+255),b
  1928  000146  5046               	movf	_rx_array_inx,w,c
  1929  000148  0100               	movlb	0	; () banked
  1930  00014A  6FE3               	movwf	(??_receiveData+2)& (0+255),b
  1931  00014C  6BE4               	clrf	(??_receiveData+3)& (0+255),b
  1932  00014E  0100               	movlb	0	; () banked
  1933  000150  51E1               	movf	??_receiveData& (0+255),w,b
  1934  000152  0100               	movlb	0	; () banked
  1935  000154  27E3               	addwf	(??_receiveData+2)& (0+255),f,b
  1936  000156  0100               	movlb	0	; () banked
  1937  000158  51E2               	movf	(??_receiveData+1)& (0+255),w,b
  1938  00015A  0100               	movlb	0	; () banked
  1939  00015C  23E4               	addwfc	(??_receiveData+3)& (0+255),f,b
  1940  00015E  0E00               	movlw	low _rx_buffer
  1941  000160  0100               	movlb	0	; () banked
  1942  000162  25E3               	addwf	(??_receiveData+2)& (0+255),w,b
  1943  000164  6ED9               	movwf	fsr2l,c
  1944  000166  0E04               	movlw	high _rx_buffer
  1945  000168  0100               	movlb	0	; () banked
  1946  00016A  21E4               	addwfc	(??_receiveData+3)& (0+255),w,b
  1947  00016C  6EDA               	movwf	fsr2h,c
  1948  00016E  5041               	movf	_calc_CS,w,c
  1949  000170  18DE               	xorwf	postinc2,w,c
  1950  000172  A4D8               	btfss	status,2,c
  1951  000174  D0A8               	goto	l3206
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;FastTransfer.c: 147: int r;
  1955                           ;FastTransfer.c: 148: for (r = 0; r < rx_len; r = r + 3) {
  1956  000176  0E00               	movlw	0
  1957  000178  0100               	movlb	0	; () banked
  1958  00017A  6FF2               	movwf	(receiveData@r+1)& (0+255),b
  1959  00017C  0E00               	movlw	0
  1960  00017E  6FF1               	movwf	receiveData@r& (0+255),b
  1961  000180  D059               	goto	l3184
  1962  000182                     l3174:
  1963                           
  1964                           ; BSR set to: 0
  1965                           ;FastTransfer.c: 149: if (rx_buffer[r] < maxDataAddress) {
  1966  000182  0E00               	movlw	low _rx_buffer
  1967  000184  0100               	movlb	0	; () banked
  1968  000186  25F1               	addwf	receiveData@r& (0+255),w,b
  1969  000188  6ED9               	movwf	fsr2l,c
  1970  00018A  0E04               	movlw	high _rx_buffer
  1971  00018C  0100               	movlb	0	; () banked
  1972  00018E  21F2               	addwfc	(receiveData@r+1)& (0+255),w,b
  1973  000190  6EDA               	movwf	fsr2h,c
  1974  000192  5042               	movf	_maxDataAddress,w,c
  1975  000194  5CDE               	subwf	postinc2,w,c
  1976  000196  B0D8               	btfsc	status,0,c
  1977  000198  D041               	goto	l3180
  1978                           
  1979                           ; BSR set to: 0
  1980                           ;FastTransfer.c: 150: group.parts[0] = rx_buffer[r + 1];
  1981  00019A  0E01               	movlw	1
  1982  00019C  0100               	movlb	0	; () banked
  1983  00019E  25F1               	addwf	receiveData@r& (0+255),w,b
  1984  0001A0  0100               	movlb	0	; () banked
  1985  0001A2  6FE1               	movwf	??_receiveData& (0+255),b
  1986  0001A4  0E00               	movlw	0
  1987  0001A6  0100               	movlb	0	; () banked
  1988  0001A8  21F2               	addwfc	(receiveData@r+1)& (0+255),w,b
  1989  0001AA  0100               	movlb	0	; () banked
  1990  0001AC  6FE2               	movwf	(??_receiveData+1)& (0+255),b
  1991  0001AE  0E00               	movlw	low _rx_buffer
  1992  0001B0  0100               	movlb	0	; () banked
  1993  0001B2  25E1               	addwf	??_receiveData& (0+255),w,b
  1994  0001B4  6ED9               	movwf	fsr2l,c
  1995  0001B6  0E04               	movlw	high _rx_buffer
  1996  0001B8  0100               	movlb	0	; () banked
  1997  0001BA  21E2               	addwfc	(??_receiveData+1)& (0+255),w,b
  1998  0001BC  6EDA               	movwf	fsr2h,c
  1999  0001BE  50DF               	movf	indf2,w,c
  2000  0001C0  6E2E               	movwf	_group,c
  2001                           
  2002                           ;FastTransfer.c: 151: group.parts[1] = rx_buffer[r + 2];
  2003  0001C2  0E02               	movlw	2
  2004  0001C4  0100               	movlb	0	; () banked
  2005  0001C6  25F1               	addwf	receiveData@r& (0+255),w,b
  2006  0001C8  0100               	movlb	0	; () banked
  2007  0001CA  6FE1               	movwf	??_receiveData& (0+255),b
  2008  0001CC  0E00               	movlw	0
  2009  0001CE  0100               	movlb	0	; () banked
  2010  0001D0  21F2               	addwfc	(receiveData@r+1)& (0+255),w,b
  2011  0001D2  0100               	movlb	0	; () banked
  2012  0001D4  6FE2               	movwf	(??_receiveData+1)& (0+255),b
  2013  0001D6  0E00               	movlw	low _rx_buffer
  2014  0001D8  0100               	movlb	0	; () banked
  2015  0001DA  25E1               	addwf	??_receiveData& (0+255),w,b
  2016  0001DC  6ED9               	movwf	fsr2l,c
  2017  0001DE  0E04               	movlw	high _rx_buffer
  2018  0001E0  0100               	movlb	0	; () banked
  2019  0001E2  21E2               	addwfc	(??_receiveData+1)& (0+255),w,b
  2020  0001E4  6EDA               	movwf	fsr2h,c
  2021  0001E6  50DF               	movf	indf2,w,c
  2022  0001E8  6E2F               	movwf	_group+1,c
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;FastTransfer.c: 152: receiveArrayAddress[(rx_buffer[r])] = group.integer;
  2026  0001EA  0E00               	movlw	low _rx_buffer
  2027  0001EC  0100               	movlb	0	; () banked
  2028  0001EE  25F1               	addwf	receiveData@r& (0+255),w,b
  2029  0001F0  6ED9               	movwf	fsr2l,c
  2030  0001F2  0E04               	movlw	high _rx_buffer
  2031  0001F4  0100               	movlb	0	; () banked
  2032  0001F6  21F2               	addwfc	(receiveData@r+1)& (0+255),w,b
  2033  0001F8  6EDA               	movwf	fsr2h,c
  2034  0001FA  50DF               	movf	indf2,w,c
  2035  0001FC  0100               	movlb	0	; () banked
  2036  0001FE  6FE1               	movwf	??_receiveData& (0+255),b
  2037  000200  0100               	movlb	0	; () banked
  2038  000202  51E1               	movf	??_receiveData& (0+255),w,b
  2039  000204  0D02               	mullw	2
  2040  000206  50F3               	movf	prodl,w,c
  2041  000208  2432               	addwf	_receiveArrayAddress,w,c
  2042  00020A  6ED9               	movwf	fsr2l,c
  2043  00020C  50F4               	movf	prodh,w,c
  2044  00020E  2033               	addwfc	_receiveArrayAddress+1,w,c
  2045  000210  6EDA               	movwf	fsr2h,c
  2046  000212  C02E  FFDE         	movff	_group,postinc2
  2047  000216  C02F  FFDD         	movff	_group+1,postdec2
  2048                           
  2049                           ;FastTransfer.c: 153: } else {
  2050  00021A  D002               	goto	l3182
  2051  00021C                     l3180:
  2052                           
  2053                           ; BSR set to: 0
  2054                           ;FastTransfer.c: 154: dataAdressErrorCounter++;
  2055  00021C  4A2C               	infsnz	_dataAdressErrorCounter,f,c
  2056  00021E  2A2D               	incf	_dataAdressErrorCounter+1,f,c
  2057  000220                     l3182:
  2058                           
  2059                           ; BSR set to: 0
  2060  000220  0E03               	movlw	3
  2061  000222  0100               	movlb	0	; () banked
  2062  000224  25F1               	addwf	receiveData@r& (0+255),w,b
  2063  000226  0100               	movlb	0	; () banked
  2064  000228  6FF1               	movwf	receiveData@r& (0+255),b
  2065  00022A  0E00               	movlw	0
  2066  00022C  0100               	movlb	0	; () banked
  2067  00022E  21F2               	addwfc	(receiveData@r+1)& (0+255),w,b
  2068  000230  0100               	movlb	0	; () banked
  2069  000232  6FF2               	movwf	(receiveData@r+1)& (0+255),b
  2070  000234                     l3184:
  2071                           
  2072                           ; BSR set to: 0
  2073  000234  5047               	movf	_rx_len,w,c
  2074  000236  0100               	movlb	0	; () banked
  2075  000238  6FE1               	movwf	??_receiveData& (0+255),b
  2076  00023A  6BE2               	clrf	(??_receiveData+1)& (0+255),b
  2077  00023C  0100               	movlb	0	; () banked
  2078  00023E  51E1               	movf	??_receiveData& (0+255),w,b
  2079  000240  0100               	movlb	0	; () banked
  2080  000242  5DF1               	subwf	receiveData@r& (0+255),w,b
  2081  000244  0100               	movlb	0	; () banked
  2082  000246  51F2               	movf	(receiveData@r+1)& (0+255),w,b
  2083  000248  0A80               	xorlw	128
  2084  00024A  0100               	movlb	0	; () banked
  2085  00024C  6FE3               	movwf	(??_receiveData+2)& (0+255),b
  2086  00024E  0100               	movlb	0	; () banked
  2087  000250  51E2               	movf	(??_receiveData+1)& (0+255),w,b
  2088  000252  0A80               	xorlw	128
  2089  000254  0100               	movlb	0	; () banked
  2090  000256  59E3               	subwfb	(??_receiveData+2)& (0+255),w,b
  2091  000258  A0D8               	btfss	status,0,c
  2092  00025A  D793               	goto	l3174
  2093                           
  2094                           ; BSR set to: 0
  2095                           ;FastTransfer.c: 155: }
  2096                           ;FastTransfer.c: 156: }
  2097                           ;FastTransfer.c: 159: if (AKNAKsend) {
  2098                           
  2099                           ; BSR set to: 0
  2100  00025C  5040               	movf	_AKNAKsend,w,c
  2101  00025E  B4D8               	btfsc	status,2,c
  2102  000260  D02C               	goto	l3196
  2103                           
  2104                           ; BSR set to: 0
  2105                           ;FastTransfer.c: 160: unsigned char holder[3];
  2106                           ;FastTransfer.c: 161: holder[0] = 255;
  2107  000262  0100               	movlb	0	; () banked
  2108  000264  69E9               	setf	receiveData@holder& (0+255),b
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;FastTransfer.c: 162: holder[1] = 1;
  2112  000266  0E01               	movlw	1
  2113  000268  0100               	movlb	0	; () banked
  2114  00026A  6FEA               	movwf	(receiveData@holder+1)& (0+255),b
  2115                           
  2116                           ; BSR set to: 0
  2117                           ;FastTransfer.c: 163: holder[2] = rx_buffer[rx_array_inx - 1];
  2118  00026C  0EFF               	movlw	255
  2119  00026E  0100               	movlb	0	; () banked
  2120  000270  6FE1               	movwf	??_receiveData& (0+255),b
  2121  000272  0EFF               	movlw	255
  2122  000274  0100               	movlb	0	; () banked
  2123  000276  6FE2               	movwf	(??_receiveData+1)& (0+255),b
  2124  000278  5046               	movf	_rx_array_inx,w,c
  2125  00027A  0100               	movlb	0	; () banked
  2126  00027C  6FE3               	movwf	(??_receiveData+2)& (0+255),b
  2127  00027E  6BE4               	clrf	(??_receiveData+3)& (0+255),b
  2128  000280  0100               	movlb	0	; () banked
  2129  000282  51E1               	movf	??_receiveData& (0+255),w,b
  2130  000284  0100               	movlb	0	; () banked
  2131  000286  27E3               	addwf	(??_receiveData+2)& (0+255),f,b
  2132  000288  0100               	movlb	0	; () banked
  2133  00028A  51E2               	movf	(??_receiveData+1)& (0+255),w,b
  2134  00028C  0100               	movlb	0	; () banked
  2135  00028E  23E4               	addwfc	(??_receiveData+3)& (0+255),f,b
  2136  000290  0E00               	movlw	low _rx_buffer
  2137  000292  0100               	movlb	0	; () banked
  2138  000294  25E3               	addwf	(??_receiveData+2)& (0+255),w,b
  2139  000296  6ED9               	movwf	fsr2l,c
  2140  000298  0E04               	movlw	high _rx_buffer
  2141  00029A  0100               	movlb	0	; () banked
  2142  00029C  21E4               	addwfc	(??_receiveData+3)& (0+255),w,b
  2143  00029E  6EDA               	movwf	fsr2h,c
  2144  0002A0  50DF               	movf	indf2,w,c
  2145  0002A2  0100               	movlb	0	; () banked
  2146  0002A4  6FEB               	movwf	(receiveData@holder+2)& (0+255),b
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;FastTransfer.c: 173: serial_write(crcHolder);
  2150  0002A6  0EE9               	movlw	low receiveData@holder
  2151  0002A8  6E13               	movwf	CRC8@data,c
  2152  0002AA  0E00               	movlw	high receiveData@holder
  2153  0002AC  6E14               	movwf	CRC8@data+1,c
  2154  0002AE  0E03               	movlw	3
  2155  0002B0  6E15               	movwf	CRC8@len,c
  2156  0002B2  ECF6  F006         	call	_CRC8	;wreg free
  2157  0002B6  0100               	movlb	0	; () banked
  2158  0002B8  6FE7               	movwf	receiveData@crcHolder& (0+255),b
  2159  0002BA                     l3196:
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;FastTransfer.c: 174: }
  2163                           ;FastTransfer.c: 178: rx_len = 0;
  2164  0002BA  0E00               	movlw	0
  2165  0002BC  6E47               	movwf	_rx_len,c
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;FastTransfer.c: 179: rx_array_inx = 0;
  2169  0002BE  0E00               	movlw	0
  2170  0002C0  6E46               	movwf	_rx_array_inx,c
  2171                           
  2172                           ; BSR set to: 0
  2173                           ;FastTransfer.c: 180: return 1;
  2174  0002C2  0E01               	movlw	1
  2175                           
  2176                           ; BSR set to: 0
  2177  0002C4  0012               	return	
  2178  0002C6                     l3206:
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;FastTransfer.c: 182: crcErrorCounter++;
  2182  0002C6  4A2A               	infsnz	_crcErrorCounter,f,c
  2183  0002C8  2A2B               	incf	_crcErrorCounter+1,f,c
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;FastTransfer.c: 184: if (AKNAKsend) {
  2187  0002CA  5040               	movf	_AKNAKsend,w,c
  2188  0002CC  B4D8               	btfsc	status,2,c
  2189  0002CE  D02C               	goto	l3218
  2190                           
  2191                           ; BSR set to: 0
  2192                           ;FastTransfer.c: 185: unsigned char holder[3];
  2193                           ;FastTransfer.c: 186: holder[0] = 255;
  2194  0002D0  0100               	movlb	0	; () banked
  2195  0002D2  69EC               	setf	receiveData@holder_1249& (0+255),b
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;FastTransfer.c: 187: holder[1] = 2;
  2199  0002D4  0E02               	movlw	2
  2200  0002D6  0100               	movlb	0	; () banked
  2201  0002D8  6FED               	movwf	(receiveData@holder_1249+1)& (0+255),b
  2202                           
  2203                           ; BSR set to: 0
  2204                           ;FastTransfer.c: 188: holder[2] = rx_buffer[rx_array_inx - 1];
  2205  0002DA  0EFF               	movlw	255
  2206  0002DC  0100               	movlb	0	; () banked
  2207  0002DE  6FE1               	movwf	??_receiveData& (0+255),b
  2208  0002E0  0EFF               	movlw	255
  2209  0002E2  0100               	movlb	0	; () banked
  2210  0002E4  6FE2               	movwf	(??_receiveData+1)& (0+255),b
  2211  0002E6  5046               	movf	_rx_array_inx,w,c
  2212  0002E8  0100               	movlb	0	; () banked
  2213  0002EA  6FE3               	movwf	(??_receiveData+2)& (0+255),b
  2214  0002EC  6BE4               	clrf	(??_receiveData+3)& (0+255),b
  2215  0002EE  0100               	movlb	0	; () banked
  2216  0002F0  51E1               	movf	??_receiveData& (0+255),w,b
  2217  0002F2  0100               	movlb	0	; () banked
  2218  0002F4  27E3               	addwf	(??_receiveData+2)& (0+255),f,b
  2219  0002F6  0100               	movlb	0	; () banked
  2220  0002F8  51E2               	movf	(??_receiveData+1)& (0+255),w,b
  2221  0002FA  0100               	movlb	0	; () banked
  2222  0002FC  23E4               	addwfc	(??_receiveData+3)& (0+255),f,b
  2223  0002FE  0E00               	movlw	low _rx_buffer
  2224  000300  0100               	movlb	0	; () banked
  2225  000302  25E3               	addwf	(??_receiveData+2)& (0+255),w,b
  2226  000304  6ED9               	movwf	fsr2l,c
  2227  000306  0E04               	movlw	high _rx_buffer
  2228  000308  0100               	movlb	0	; () banked
  2229  00030A  21E4               	addwfc	(??_receiveData+3)& (0+255),w,b
  2230  00030C  6EDA               	movwf	fsr2h,c
  2231  00030E  50DF               	movf	indf2,w,c
  2232  000310  0100               	movlb	0	; () banked
  2233  000312  6FEE               	movwf	(receiveData@holder_1249+2)& (0+255),b
  2234                           
  2235                           ; BSR set to: 0
  2236                           ;FastTransfer.c: 198: serial_write(crcHolder);
  2237  000314  0EEC               	movlw	low receiveData@holder_1249
  2238  000316  6E13               	movwf	CRC8@data,c
  2239  000318  0E00               	movlw	high receiveData@holder_1249
  2240  00031A  6E14               	movwf	CRC8@data+1,c
  2241  00031C  0E03               	movlw	3
  2242  00031E  6E15               	movwf	CRC8@len,c
  2243  000320  ECF6  F006         	call	_CRC8	;wreg free
  2244  000324  0100               	movlb	0	; () banked
  2245  000326  6FE8               	movwf	receiveData@crcHolder_1250& (0+255),b
  2246  000328                     l3218:
  2247                           
  2248                           ; BSR set to: 0
  2249                           ;FastTransfer.c: 199: }
  2250                           ;FastTransfer.c: 202: rx_len = 0;
  2251  000328  0E00               	movlw	0
  2252  00032A  6E47               	movwf	_rx_len,c
  2253                           
  2254                           ; BSR set to: 0
  2255                           ;FastTransfer.c: 203: rx_array_inx = 0;
  2256  00032C  0E00               	movlw	0
  2257  00032E  6E46               	movwf	_rx_array_inx,c
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;FastTransfer.c: 204: return 0;
  2261  000330  0E00               	movlw	0
  2262                           
  2263                           ; BSR set to: 0
  2264  000332  0012               	return	
  2265  000334                     l3226:
  2266                           
  2267                           ;FastTransfer.c: 205: }
  2268                           ;FastTransfer.c: 206: }
  2269                           ;FastTransfer.c: 207: }
  2270                           ;FastTransfer.c: 210: return 0;
  2271  000334  0E00               	movlw	0
  2272  000336  0012               	return	
  2273  000338                     __end_of_receiveData:
  2274                           	opt stack 0
  2275                           tblptru	equ	0xFF8
  2276                           tblptrh	equ	0xFF7
  2277                           tblptrl	equ	0xFF6
  2278                           tablat	equ	0xFF5
  2279                           prodh	equ	0xFF4
  2280                           prodl	equ	0xFF3
  2281                           intcon	equ	0xFF2
  2282                           postinc0	equ	0xFEE
  2283                           wreg	equ	0xFE8
  2284                           indf2	equ	0xFDF
  2285                           postinc2	equ	0xFDE
  2286                           postdec2	equ	0xFDD
  2287                           plusw2	equ	0xFDB
  2288                           fsr2h	equ	0xFDA
  2289                           fsr2l	equ	0xFD9
  2290                           status	equ	0xFD8
  2291                           
  2292 ;; *************** function _CRCcheck *****************
  2293 ;; Defined at:
  2294 ;;		line 373 in file "FastTransfer.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;		None
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;  rt              2   35[COMRAM] int 
  2299 ;;  arrayHolder     3   32[COMRAM] unsigned char [3]
  2300 ;;  calculatedCR    1   31[COMRAM] unsigned char 
  2301 ;;  SentCRC         1   30[COMRAM] unsigned char 
  2302 ;; Return value:  Size  Location     Type
  2303 ;;		None               void
  2304 ;; Registers used:
  2305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2311 ;;      Params:         0       0       0       0       0       0       0
  2312 ;;      Locals:         7       0       0       0       0       0       0
  2313 ;;      Temps:          0       0       0       0       0       0       0
  2314 ;;      Totals:         7       0       0       0       0       0       0
  2315 ;;Total ram usage:        7 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; Hardware stack levels required when called:    4
  2318 ;; This function calls:
  2319 ;;		_CRC8
  2320 ;;		_crcBufS_get
  2321 ;;		_crcBufS_status_put
  2322 ;; This function is called by:
  2323 ;;		_receiveData
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           	psect	text11
  2328  000A16                     __ptext11:
  2329                           	opt stack 0
  2330  000A16                     _CRCcheck:
  2331                           	opt stack 24
  2332  000A16                     l544:
  2333  000A16  D7FF               	goto	l544
  2334  000A18                     l3090:
  2335  000A18  BE25               	btfsc	CRCcheck@rt+1,7,c
  2336  000A1A  D006               	goto	l3094
  2337  000A1C  5025               	movf	CRCcheck@rt+1,w,c
  2338  000A1E  E13E               	bnz	l556
  2339  000A20  0E05               	movlw	5
  2340  000A22  5C24               	subwf	CRCcheck@rt,w,c
  2341  000A24  B0D8               	btfsc	status,0,c
  2342  000A26  0012               	return	
  2343  000A28                     l3094:
  2344                           
  2345                           ;FastTransfer.c: 389: if (returnAddress == crcBufS_get(&crc_buffer, rt, 0)) {
  2346  000A28  0ED0               	movlw	low _crc_buffer
  2347  000A2A  6E13               	movwf	crcBufS_get@_this,c
  2348  000A2C  0E00               	movlw	high _crc_buffer
  2349  000A2E  6E14               	movwf	crcBufS_get@_this+1,c
  2350  000A30  C024  F015         	movff	CRCcheck@rt,crcBufS_get@time
  2351  000A34  0E00               	movlw	0
  2352  000A36  6E16               	movwf	crcBufS_get@space,c
  2353  000A38  EC50  F002         	call	_crcBufS_get	;wreg free
  2354  000A3C  1844               	xorwf	_returnAddress,w,c
  2355  000A3E  A4D8               	btfss	status,2,c
  2356  000A40  D02A               	goto	l3108
  2357                           
  2358                           ;FastTransfer.c: 390: if (arrayHolder[2] == crcBufS_get(&crc_buffer, rt, 1)) {
  2359  000A42  0ED0               	movlw	low _crc_buffer
  2360  000A44  6E13               	movwf	crcBufS_get@_this,c
  2361  000A46  0E00               	movlw	high _crc_buffer
  2362  000A48  6E14               	movwf	crcBufS_get@_this+1,c
  2363  000A4A  C024  F015         	movff	CRCcheck@rt,crcBufS_get@time
  2364  000A4E  0E01               	movlw	1
  2365  000A50  6E16               	movwf	crcBufS_get@space,c
  2366  000A52  EC50  F002         	call	_crcBufS_get	;wreg free
  2367  000A56  1823               	xorwf	CRCcheck@arrayHolder+2,w,c
  2368  000A58  A4D8               	btfss	status,2,c
  2369  000A5A  D01D               	goto	l3108
  2370                           
  2371                           ;FastTransfer.c: 391: if (arrayHolder[1] == 1) {
  2372  000A5C  0422               	decf	CRCcheck@arrayHolder+1,w,c
  2373  000A5E  A4D8               	btfss	status,2,c
  2374  000A60  D00B               	goto	l3104
  2375                           
  2376                           ;FastTransfer.c: 392: crcBufS_status_put(&crc_buffer, rt, 1);
  2377  000A62  0ED0               	movlw	low _crc_buffer
  2378  000A64  6E13               	movwf	crcBufS_status_put@_this,c
  2379  000A66  0E00               	movlw	high _crc_buffer
  2380  000A68  6E14               	movwf	crcBufS_status_put@_this+1,c
  2381  000A6A  C024  F015         	movff	CRCcheck@rt,crcBufS_status_put@time
  2382  000A6E  0E01               	movlw	1
  2383  000A70  6E16               	movwf	crcBufS_status_put@status,c
  2384  000A72  EC9B  F003         	call	_crcBufS_status_put	;wreg free
  2385                           
  2386                           ;FastTransfer.c: 393: break;
  2387  000A76  0012               	return	
  2388  000A78                     l3104:
  2389  000A78  0E02               	movlw	2
  2390  000A7A  1822               	xorwf	CRCcheck@arrayHolder+1,w,c
  2391  000A7C  A4D8               	btfss	status,2,c
  2392  000A7E  D00B               	goto	l3108
  2393                           
  2394                           ;FastTransfer.c: 395: crcBufS_status_put(&crc_buffer, rt, 2);
  2395  000A80  0ED0               	movlw	low _crc_buffer
  2396  000A82  6E13               	movwf	crcBufS_status_put@_this,c
  2397  000A84  0E00               	movlw	high _crc_buffer
  2398  000A86  6E14               	movwf	crcBufS_status_put@_this+1,c
  2399  000A88  C024  F015         	movff	CRCcheck@rt,crcBufS_status_put@time
  2400  000A8C  0E02               	movlw	2
  2401  000A8E  6E16               	movwf	crcBufS_status_put@status,c
  2402  000A90  EC9B  F003         	call	_crcBufS_status_put	;wreg free
  2403                           
  2404                           ;FastTransfer.c: 396: break;
  2405  000A94  0012               	return	
  2406  000A96                     l3108:
  2407  000A96  4A24               	infsnz	CRCcheck@rt,f,c
  2408  000A98  2A25               	incf	CRCcheck@rt+1,f,c
  2409  000A9A  D7BE               	goto	l3090
  2410  000A9C                     l556:
  2411  000A9C  0012               	return		;funcret
  2412  000A9E                     __end_of_CRCcheck:
  2413                           	opt stack 0
  2414                           tblptru	equ	0xFF8
  2415                           tblptrh	equ	0xFF7
  2416                           tblptrl	equ	0xFF6
  2417                           tablat	equ	0xFF5
  2418                           prodh	equ	0xFF4
  2419                           prodl	equ	0xFF3
  2420                           intcon	equ	0xFF2
  2421                           postinc0	equ	0xFEE
  2422                           wreg	equ	0xFE8
  2423                           indf2	equ	0xFDF
  2424                           postinc2	equ	0xFDE
  2425                           postdec2	equ	0xFDD
  2426                           plusw2	equ	0xFDB
  2427                           fsr2h	equ	0xFDA
  2428                           fsr2l	equ	0xFD9
  2429                           status	equ	0xFD8
  2430                           
  2431 ;; *************** function _crcBufS_status_put *****************
  2432 ;; Defined at:
  2433 ;;		line 336 in file "FastTransfer.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;  _this           2   18[COMRAM] PTR struct crcBufS
  2436 ;;		 -> crc_buffer(17), 
  2437 ;;  time            1   20[COMRAM] unsigned char 
  2438 ;;  status          1   21[COMRAM] unsigned char 
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;  wantedTime      2   26[COMRAM] int 
  2441 ;; Return value:  Size  Location     Type
  2442 ;;		None               void
  2443 ;; Registers used:
  2444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2450 ;;      Params:         4       0       0       0       0       0       0
  2451 ;;      Locals:         2       0       0       0       0       0       0
  2452 ;;      Temps:          4       0       0       0       0       0       0
  2453 ;;      Totals:        10       0       0       0       0       0       0
  2454 ;;Total ram usage:       10 bytes
  2455 ;; Hardware stack levels used:    1
  2456 ;; Hardware stack levels required when called:    3
  2457 ;; This function calls:
  2458 ;;		Nothing
  2459 ;; This function is called by:
  2460 ;;		_CRCcheck
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           	psect	text12
  2465  000736                     __ptext12:
  2466                           	opt stack 0
  2467  000736                     _crcBufS_status_put:
  2468                           	opt stack 24
  2469                           
  2470                           ;FastTransfer.c: 337: if (time >= 5) {
  2471                           
  2472                           ;incstack = 0
  2473  000736  0E04               	movlw	4
  2474  000738  6415               	cpfsgt	crcBufS_status_put@time,c
  2475  00073A  D002               	goto	l3060
  2476                           
  2477                           ;FastTransfer.c: 338: time = 5 - 1;
  2478  00073C  0E04               	movlw	4
  2479  00073E  6E15               	movwf	crcBufS_status_put@time,c
  2480  000740                     l3060:
  2481                           
  2482                           ;FastTransfer.c: 339: }
  2483                           ;FastTransfer.c: 340: time = time + 1;
  2484  000740  2815               	incf	crcBufS_status_put@time,w,c
  2485  000742  6E15               	movwf	crcBufS_status_put@time,c
  2486                           
  2487                           ;FastTransfer.c: 341: int wantedTime = time * 3;
  2488  000744  5015               	movf	crcBufS_status_put@time,w,c
  2489  000746  0D03               	mullw	3
  2490  000748  CFF3 F01B          	movff	prodl,crcBufS_status_put@wantedTime
  2491  00074C  CFF4 F01C          	movff	prodh,crcBufS_status_put@wantedTime+1
  2492                           
  2493                           ;FastTransfer.c: 342: if (wantedTime > _this->head) {
  2494  000750  EE20 F00F          	lfsr	2,15
  2495  000754  5013               	movf	crcBufS_status_put@_this,w,c
  2496  000756  26D9               	addwf	fsr2l,f,c
  2497  000758  5014               	movf	crcBufS_status_put@_this+1,w,c
  2498  00075A  22DA               	addwfc	fsr2h,f,c
  2499  00075C  501B               	movf	crcBufS_status_put@wantedTime,w,c
  2500  00075E  5CDE               	subwf	postinc2,w,c
  2501  000760  50DE               	movf	postinc2,w,c
  2502  000762  0A80               	xorlw	128
  2503  000764  6E19               	movwf	(??_crcBufS_status_put+2)& (0+255),c
  2504  000766  501C               	movf	crcBufS_status_put@wantedTime+1,w,c
  2505  000768  0A80               	xorlw	128
  2506  00076A  5819               	subwfb	(??_crcBufS_status_put+2)& (0+255),w,c
  2507  00076C  B0D8               	btfsc	status,0,c
  2508  00076E  D02B               	goto	l3068
  2509                           
  2510                           ;FastTransfer.c: 343: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  2511  000770  EE20 F00F          	lfsr	2,15
  2512  000774  5013               	movf	crcBufS_status_put@_this,w,c
  2513  000776  26D9               	addwf	fsr2l,f,c
  2514  000778  5014               	movf	crcBufS_status_put@_this+1,w,c
  2515  00077A  22DA               	addwfc	fsr2h,f,c
  2516  00077C  CFDE F017          	movff	postinc2,??_crcBufS_status_put
  2517  000780  CFDD F018          	movff	postdec2,??_crcBufS_status_put+1
  2518  000784  1E17               	comf	??_crcBufS_status_put,f,c
  2519  000786  1E18               	comf	??_crcBufS_status_put+1,f,c
  2520  000788  4A17               	infsnz	??_crcBufS_status_put,f,c
  2521  00078A  2A18               	incf	??_crcBufS_status_put+1,f,c
  2522  00078C  501B               	movf	crcBufS_status_put@wantedTime,w,c
  2523  00078E  2617               	addwf	??_crcBufS_status_put,f,c
  2524  000790  501C               	movf	crcBufS_status_put@wantedTime+1,w,c
  2525  000792  2218               	addwfc	??_crcBufS_status_put+1,f,c
  2526  000794  1E17               	comf	??_crcBufS_status_put,f,c
  2527  000796  1E18               	comf	??_crcBufS_status_put+1,f,c
  2528  000798  4A17               	infsnz	??_crcBufS_status_put,f,c
  2529  00079A  2A18               	incf	??_crcBufS_status_put+1,f,c
  2530  00079C  0E0F               	movlw	15
  2531  00079E  2417               	addwf	??_crcBufS_status_put,w,c
  2532  0007A0  6E1B               	movwf	crcBufS_status_put@wantedTime,c
  2533  0007A2  0E00               	movlw	0
  2534  0007A4  2018               	addwfc	??_crcBufS_status_put+1,w,c
  2535  0007A6  6E1C               	movwf	crcBufS_status_put@wantedTime+1,c
  2536                           
  2537                           ;FastTransfer.c: 344: _this->buf[(wantedTime + 2)] = status;
  2538  0007A8  0E02               	movlw	2
  2539  0007AA  241B               	addwf	crcBufS_status_put@wantedTime,w,c
  2540  0007AC  6E17               	movwf	??_crcBufS_status_put& (0+255),c
  2541  0007AE  0E00               	movlw	0
  2542  0007B0  201C               	addwfc	crcBufS_status_put@wantedTime+1,w,c
  2543  0007B2  6E18               	movwf	(??_crcBufS_status_put+1)& (0+255),c
  2544  0007B4  5017               	movf	??_crcBufS_status_put,w,c
  2545  0007B6  2413               	addwf	crcBufS_status_put@_this,w,c
  2546  0007B8  6ED9               	movwf	fsr2l,c
  2547  0007BA  5018               	movf	??_crcBufS_status_put+1,w,c
  2548  0007BC  2014               	addwfc	crcBufS_status_put@_this+1,w,c
  2549  0007BE  6EDA               	movwf	fsr2h,c
  2550  0007C0  C016  FFDF         	movff	crcBufS_status_put@status,indf2
  2551                           
  2552                           ;FastTransfer.c: 345: } else {
  2553  0007C4  0012               	return	
  2554  0007C6                     l3068:
  2555                           
  2556                           ;FastTransfer.c: 346: _this->buf[(_this->head - wantedTime) + 2] = status;
  2557  0007C6  EE20 F00F          	lfsr	2,15
  2558  0007CA  5013               	movf	crcBufS_status_put@_this,w,c
  2559  0007CC  26D9               	addwf	fsr2l,f,c
  2560  0007CE  5014               	movf	crcBufS_status_put@_this+1,w,c
  2561  0007D0  22DA               	addwfc	fsr2h,f,c
  2562  0007D2  CFDE F017          	movff	postinc2,??_crcBufS_status_put
  2563  0007D6  CFDD F018          	movff	postdec2,??_crcBufS_status_put+1
  2564  0007DA  C01B  F019         	movff	crcBufS_status_put@wantedTime,??_crcBufS_status_put+2
  2565  0007DE  C01C  F01A         	movff	crcBufS_status_put@wantedTime+1,??_crcBufS_status_put+3
  2566  0007E2  1E19               	comf	??_crcBufS_status_put+2,f,c
  2567  0007E4  1E1A               	comf	??_crcBufS_status_put+3,f,c
  2568  0007E6  4A19               	infsnz	??_crcBufS_status_put+2,f,c
  2569  0007E8  2A1A               	incf	??_crcBufS_status_put+3,f,c
  2570  0007EA  5017               	movf	??_crcBufS_status_put,w,c
  2571  0007EC  2619               	addwf	??_crcBufS_status_put+2,f,c
  2572  0007EE  5018               	movf	??_crcBufS_status_put+1,w,c
  2573  0007F0  221A               	addwfc	??_crcBufS_status_put+3,f,c
  2574  0007F2  0E02               	movlw	2
  2575  0007F4  2619               	addwf	??_crcBufS_status_put+2,f,c
  2576  0007F6  0E00               	movlw	0
  2577  0007F8  221A               	addwfc	??_crcBufS_status_put+3,f,c
  2578  0007FA  5019               	movf	??_crcBufS_status_put+2,w,c
  2579  0007FC  2413               	addwf	crcBufS_status_put@_this,w,c
  2580  0007FE  6ED9               	movwf	fsr2l,c
  2581  000800  501A               	movf	??_crcBufS_status_put+3,w,c
  2582  000802  2014               	addwfc	crcBufS_status_put@_this+1,w,c
  2583  000804  6EDA               	movwf	fsr2h,c
  2584  000806  C016  FFDF         	movff	crcBufS_status_put@status,indf2
  2585  00080A  0012               	return	
  2586  00080C                     __end_of_crcBufS_status_put:
  2587                           	opt stack 0
  2588                           tblptru	equ	0xFF8
  2589                           tblptrh	equ	0xFF7
  2590                           tblptrl	equ	0xFF6
  2591                           tablat	equ	0xFF5
  2592                           prodh	equ	0xFF4
  2593                           prodl	equ	0xFF3
  2594                           intcon	equ	0xFF2
  2595                           postinc0	equ	0xFEE
  2596                           wreg	equ	0xFE8
  2597                           indf2	equ	0xFDF
  2598                           postinc2	equ	0xFDE
  2599                           postdec2	equ	0xFDD
  2600                           plusw2	equ	0xFDB
  2601                           fsr2h	equ	0xFDA
  2602                           fsr2l	equ	0xFD9
  2603                           status	equ	0xFD8
  2604                           
  2605 ;; *************** function _crcBufS_get *****************
  2606 ;; Defined at:
  2607 ;;		line 353 in file "FastTransfer.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;  _this           2   18[COMRAM] PTR struct crcBufS
  2610 ;;		 -> crc_buffer(17), 
  2611 ;;  time            1   20[COMRAM] unsigned char 
  2612 ;;  space           1   21[COMRAM] unsigned char 
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;  wantedTime      2   28[COMRAM] int 
  2615 ;; Return value:  Size  Location     Type
  2616 ;;                  1    wreg      unsigned char 
  2617 ;; Registers used:
  2618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2619 ;; Tracked objects:
  2620 ;;		On entry : 0/0
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2624 ;;      Params:         4       0       0       0       0       0       0
  2625 ;;      Locals:         2       0       0       0       0       0       0
  2626 ;;      Temps:          6       0       0       0       0       0       0
  2627 ;;      Totals:        12       0       0       0       0       0       0
  2628 ;;Total ram usage:       12 bytes
  2629 ;; Hardware stack levels used:    1
  2630 ;; Hardware stack levels required when called:    3
  2631 ;; This function calls:
  2632 ;;		Nothing
  2633 ;; This function is called by:
  2634 ;;		_CRCcheck
  2635 ;;		_AKNAK
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           	psect	text13
  2640  0004A0                     __ptext13:
  2641                           	opt stack 0
  2642  0004A0                     _crcBufS_get:
  2643                           	opt stack 24
  2644                           
  2645                           ;FastTransfer.c: 354: if (time >= 5) {
  2646                           
  2647                           ;incstack = 0
  2648  0004A0  0E04               	movlw	4
  2649  0004A2  6415               	cpfsgt	crcBufS_get@time,c
  2650  0004A4  D002               	goto	l3036
  2651                           
  2652                           ;FastTransfer.c: 355: time = 5 - 1;
  2653  0004A6  0E04               	movlw	4
  2654  0004A8  6E15               	movwf	crcBufS_get@time,c
  2655  0004AA                     l3036:
  2656                           
  2657                           ;FastTransfer.c: 356: }
  2658                           ;FastTransfer.c: 357: if (space >= 3) {
  2659  0004AA  0E02               	movlw	2
  2660  0004AC  6416               	cpfsgt	crcBufS_get@space,c
  2661  0004AE  D002               	goto	l3040
  2662                           
  2663                           ;FastTransfer.c: 358: space = 3 - 1;
  2664  0004B0  0E02               	movlw	2
  2665  0004B2  6E16               	movwf	crcBufS_get@space,c
  2666  0004B4                     l3040:
  2667                           
  2668                           ;FastTransfer.c: 359: }
  2669                           ;FastTransfer.c: 360: time = time + 1;
  2670  0004B4  2815               	incf	crcBufS_get@time,w,c
  2671  0004B6  6E15               	movwf	crcBufS_get@time,c
  2672                           
  2673                           ;FastTransfer.c: 361: int wantedTime = time * 3;
  2674  0004B8  5015               	movf	crcBufS_get@time,w,c
  2675  0004BA  0D03               	mullw	3
  2676  0004BC  CFF3 F01D          	movff	prodl,crcBufS_get@wantedTime
  2677  0004C0  CFF4 F01E          	movff	prodh,crcBufS_get@wantedTime+1
  2678                           
  2679                           ;FastTransfer.c: 362: if (wantedTime > _this->head) {
  2680  0004C4  EE20 F00F          	lfsr	2,15
  2681  0004C8  5013               	movf	crcBufS_get@_this,w,c
  2682  0004CA  26D9               	addwf	fsr2l,f,c
  2683  0004CC  5014               	movf	crcBufS_get@_this+1,w,c
  2684  0004CE  22DA               	addwfc	fsr2h,f,c
  2685  0004D0  501D               	movf	crcBufS_get@wantedTime,w,c
  2686  0004D2  5CDE               	subwf	postinc2,w,c
  2687  0004D4  50DE               	movf	postinc2,w,c
  2688  0004D6  0A80               	xorlw	128
  2689  0004D8  6E19               	movwf	(??_crcBufS_get+2)& (0+255),c
  2690  0004DA  501E               	movf	crcBufS_get@wantedTime+1,w,c
  2691  0004DC  0A80               	xorlw	128
  2692  0004DE  5819               	subwfb	(??_crcBufS_get+2)& (0+255),w,c
  2693  0004E0  B0D8               	btfsc	status,0,c
  2694  0004E2  D02A               	goto	l3052
  2695                           
  2696                           ;FastTransfer.c: 363: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  2697  0004E4  EE20 F00F          	lfsr	2,15
  2698  0004E8  5013               	movf	crcBufS_get@_this,w,c
  2699  0004EA  26D9               	addwf	fsr2l,f,c
  2700  0004EC  5014               	movf	crcBufS_get@_this+1,w,c
  2701  0004EE  22DA               	addwfc	fsr2h,f,c
  2702  0004F0  CFDE F017          	movff	postinc2,??_crcBufS_get
  2703  0004F4  CFDD F018          	movff	postdec2,??_crcBufS_get+1
  2704  0004F8  1E17               	comf	??_crcBufS_get,f,c
  2705  0004FA  1E18               	comf	??_crcBufS_get+1,f,c
  2706  0004FC  4A17               	infsnz	??_crcBufS_get,f,c
  2707  0004FE  2A18               	incf	??_crcBufS_get+1,f,c
  2708  000500  501D               	movf	crcBufS_get@wantedTime,w,c
  2709  000502  2617               	addwf	??_crcBufS_get,f,c
  2710  000504  501E               	movf	crcBufS_get@wantedTime+1,w,c
  2711  000506  2218               	addwfc	??_crcBufS_get+1,f,c
  2712  000508  1E17               	comf	??_crcBufS_get,f,c
  2713  00050A  1E18               	comf	??_crcBufS_get+1,f,c
  2714  00050C  4A17               	infsnz	??_crcBufS_get,f,c
  2715  00050E  2A18               	incf	??_crcBufS_get+1,f,c
  2716  000510  0E0F               	movlw	15
  2717  000512  2417               	addwf	??_crcBufS_get,w,c
  2718  000514  6E1D               	movwf	crcBufS_get@wantedTime,c
  2719  000516  0E00               	movlw	0
  2720  000518  2018               	addwfc	??_crcBufS_get+1,w,c
  2721  00051A  6E1E               	movwf	crcBufS_get@wantedTime+1,c
  2722                           
  2723                           ;FastTransfer.c: 364: return (_this->buf[(wantedTime + space)]);
  2724  00051C  5016               	movf	crcBufS_get@space,w,c
  2725  00051E  241D               	addwf	crcBufS_get@wantedTime,w,c
  2726  000520  6E17               	movwf	??_crcBufS_get& (0+255),c
  2727  000522  0E00               	movlw	0
  2728  000524  201E               	addwfc	crcBufS_get@wantedTime+1,w,c
  2729  000526  6E18               	movwf	(??_crcBufS_get+1)& (0+255),c
  2730  000528  5017               	movf	??_crcBufS_get,w,c
  2731  00052A  2413               	addwf	crcBufS_get@_this,w,c
  2732  00052C  6ED9               	movwf	fsr2l,c
  2733  00052E  5018               	movf	??_crcBufS_get+1,w,c
  2734  000530  2014               	addwfc	crcBufS_get@_this+1,w,c
  2735  000532  6EDA               	movwf	fsr2h,c
  2736  000534  50DF               	movf	indf2,w,c
  2737                           
  2738                           ;FastTransfer.c: 365: } else {
  2739  000536  0012               	return	
  2740  000538                     l3052:
  2741                           
  2742                           ;FastTransfer.c: 366: return (_this->buf[(_this->head - wantedTime) + space]);
  2743  000538  EE20 F00F          	lfsr	2,15
  2744  00053C  5013               	movf	crcBufS_get@_this,w,c
  2745  00053E  26D9               	addwf	fsr2l,f,c
  2746  000540  5014               	movf	crcBufS_get@_this+1,w,c
  2747  000542  22DA               	addwfc	fsr2h,f,c
  2748  000544  CFDE F017          	movff	postinc2,??_crcBufS_get
  2749  000548  CFDD F018          	movff	postdec2,??_crcBufS_get+1
  2750  00054C  C01D  F019         	movff	crcBufS_get@wantedTime,??_crcBufS_get+2
  2751  000550  C01E  F01A         	movff	crcBufS_get@wantedTime+1,??_crcBufS_get+3
  2752  000554  1E19               	comf	??_crcBufS_get+2,f,c
  2753  000556  1E1A               	comf	??_crcBufS_get+3,f,c
  2754  000558  4A19               	infsnz	??_crcBufS_get+2,f,c
  2755  00055A  2A1A               	incf	??_crcBufS_get+3,f,c
  2756  00055C  5016               	movf	crcBufS_get@space,w,c
  2757  00055E  6E1B               	movwf	(??_crcBufS_get+4)& (0+255),c
  2758  000560  6A1C               	clrf	(??_crcBufS_get+5)& (0+255),c
  2759  000562  5019               	movf	??_crcBufS_get+2,w,c
  2760  000564  261B               	addwf	??_crcBufS_get+4,f,c
  2761  000566  501A               	movf	??_crcBufS_get+3,w,c
  2762  000568  221C               	addwfc	??_crcBufS_get+5,f,c
  2763  00056A  5017               	movf	??_crcBufS_get,w,c
  2764  00056C  261B               	addwf	??_crcBufS_get+4,f,c
  2765  00056E  5018               	movf	??_crcBufS_get+1,w,c
  2766  000570  221C               	addwfc	??_crcBufS_get+5,f,c
  2767  000572  501B               	movf	??_crcBufS_get+4,w,c
  2768  000574  2413               	addwf	crcBufS_get@_this,w,c
  2769  000576  6ED9               	movwf	fsr2l,c
  2770  000578  501C               	movf	??_crcBufS_get+5,w,c
  2771  00057A  2014               	addwfc	crcBufS_get@_this+1,w,c
  2772  00057C  6EDA               	movwf	fsr2h,c
  2773  00057E  50DF               	movf	indf2,w,c
  2774  000580  0012               	return	
  2775  000582                     __end_of_crcBufS_get:
  2776                           	opt stack 0
  2777                           tblptru	equ	0xFF8
  2778                           tblptrh	equ	0xFF7
  2779                           tblptrl	equ	0xFF6
  2780                           tablat	equ	0xFF5
  2781                           prodh	equ	0xFF4
  2782                           prodl	equ	0xFF3
  2783                           intcon	equ	0xFF2
  2784                           postinc0	equ	0xFEE
  2785                           wreg	equ	0xFE8
  2786                           indf2	equ	0xFDF
  2787                           postinc2	equ	0xFDE
  2788                           postdec2	equ	0xFDD
  2789                           plusw2	equ	0xFDB
  2790                           fsr2h	equ	0xFDA
  2791                           fsr2l	equ	0xFD9
  2792                           status	equ	0xFD8
  2793                           
  2794 ;; *************** function _CRC8 *****************
  2795 ;; Defined at:
  2796 ;;		line 34 in file "FastTransfer.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;  data            2   18[COMRAM] PTR const unsigned char 
  2799 ;;		 -> NULL(0), CRCcheck@arrayHolder(3), receiveData@holder_1249(3), receiveData@holder(3), 
  2800 ;;		 -> rx_buffer(200), ring_buffer(206), 
  2801 ;;  len             1   20[COMRAM] unsigned char 
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;  sum             1   21[COMRAM] unsigned char 
  2804 ;;  tempI           1   23[COMRAM] unsigned char 
  2805 ;;  extract         1   22[COMRAM] unsigned char 
  2806 ;;  crc             1   24[COMRAM] unsigned char 
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  1    wreg      unsigned char 
  2809 ;; Registers used:
  2810 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2816 ;;      Params:         3       0       0       0       0       0       0
  2817 ;;      Locals:         4       0       0       0       0       0       0
  2818 ;;      Temps:          0       0       0       0       0       0       0
  2819 ;;      Totals:         7       0       0       0       0       0       0
  2820 ;;Total ram usage:        7 bytes
  2821 ;; Hardware stack levels used:    1
  2822 ;; Hardware stack levels required when called:    3
  2823 ;; This function calls:
  2824 ;;		Nothing
  2825 ;; This function is called by:
  2826 ;;		_sendData
  2827 ;;		_receiveData
  2828 ;;		_CRCcheck
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           	psect	text14
  2833  000DEC                     __ptext14:
  2834                           	opt stack 0
  2835  000DEC                     _CRC8:
  2836                           	opt stack 24
  2837                           
  2838                           ;FastTransfer.c: 35: unsigned char crc = 0x00;
  2839                           
  2840                           ;incstack = 0
  2841  000DEC  0E00               	movlw	0
  2842  000DEE  6E19               	movwf	CRC8@crc,c
  2843                           
  2844                           ;FastTransfer.c: 36: while (len--) {
  2845  000DF0  D01C               	goto	l3026
  2846  000DF2                     l3010:
  2847                           
  2848                           ;FastTransfer.c: 37: unsigned char extract = *data++;
  2849  000DF2  C013  FFD9         	movff	CRC8@data,fsr2l
  2850  000DF6  C014  FFDA         	movff	CRC8@data+1,fsr2h
  2851  000DFA  50DF               	movf	indf2,w,c
  2852  000DFC  6E17               	movwf	CRC8@extract,c
  2853  000DFE  4A13               	infsnz	CRC8@data,f,c
  2854  000E00  2A14               	incf	CRC8@data+1,f,c
  2855                           
  2856                           ;FastTransfer.c: 38: unsigned char tempI;
  2857                           ;FastTransfer.c: 39: for (tempI = 8; tempI; tempI--) {
  2858  000E02  0E08               	movlw	8
  2859  000E04  6E18               	movwf	CRC8@tempI,c
  2860  000E06  D00E               	goto	l3024
  2861  000E08                     l3016:
  2862                           
  2863                           ;FastTransfer.c: 40: unsigned char sum = (crc ^ extract) & 0x01;
  2864  000E08  5019               	movf	CRC8@crc,w,c
  2865  000E0A  1817               	xorwf	CRC8@extract,w,c
  2866  000E0C  0B01               	andlw	1
  2867  000E0E  6E16               	movwf	CRC8@sum,c
  2868                           
  2869                           ;FastTransfer.c: 41: crc >>= 1;
  2870  000E10  90D8               	bcf	status,0,c
  2871  000E12  3219               	rrcf	CRC8@crc,f,c
  2872                           
  2873                           ;FastTransfer.c: 42: if (sum) {
  2874  000E14  5016               	movf	CRC8@sum,w,c
  2875  000E16  B4D8               	btfsc	status,2,c
  2876  000E18  D002               	goto	l442
  2877                           
  2878                           ;FastTransfer.c: 43: crc ^= 0x8C;
  2879  000E1A  0E8C               	movlw	140
  2880  000E1C  1A19               	xorwf	CRC8@crc,f,c
  2881  000E1E                     l442:
  2882                           
  2883                           ;FastTransfer.c: 44: }
  2884                           ;FastTransfer.c: 45: extract >>= 1;
  2885  000E1E  90D8               	bcf	status,0,c
  2886  000E20  3217               	rrcf	CRC8@extract,f,c
  2887  000E22  0618               	decf	CRC8@tempI,f,c
  2888  000E24                     l3024:
  2889  000E24  5018               	movf	CRC8@tempI,w,c
  2890  000E26  A4D8               	btfss	status,2,c
  2891  000E28  D7EF               	goto	l3016
  2892  000E2A                     l3026:
  2893  000E2A  0615               	decf	CRC8@len,f,c
  2894  000E2C  2815               	incf	CRC8@len,w,c
  2895  000E2E  A4D8               	btfss	status,2,c
  2896  000E30  D7E0               	goto	l3010
  2897                           
  2898                           ;FastTransfer.c: 46: }
  2899                           ;FastTransfer.c: 47: }
  2900                           ;FastTransfer.c: 48: return crc;
  2901  000E32  5019               	movf	CRC8@crc,w,c
  2902  000E34  0012               	return	
  2903  000E36                     __end_of_CRC8:
  2904                           	opt stack 0
  2905                           tblptru	equ	0xFF8
  2906                           tblptrh	equ	0xFF7
  2907                           tblptrl	equ	0xFF6
  2908                           tablat	equ	0xFF5
  2909                           prodh	equ	0xFF4
  2910                           prodl	equ	0xFF3
  2911                           intcon	equ	0xFF2
  2912                           postinc0	equ	0xFEE
  2913                           wreg	equ	0xFE8
  2914                           indf2	equ	0xFDF
  2915                           postinc2	equ	0xFDE
  2916                           postdec2	equ	0xFDD
  2917                           plusw2	equ	0xFDB
  2918                           fsr2h	equ	0xFDA
  2919                           fsr2l	equ	0xFD9
  2920                           status	equ	0xFD8
  2921                           
  2922 ;; *************** function _processPowerRequest *****************
  2923 ;; Defined at:
  2924 ;;		line 33 in file "Communications.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;  powerSet        2   32[COMRAM] int 
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;		None
  2929 ;; Return value:  Size  Location     Type
  2930 ;;		None               void
  2931 ;; Registers used:
  2932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2938 ;;      Params:         2       0       0       0       0       0       0
  2939 ;;      Locals:         0       0       0       0       0       0       0
  2940 ;;      Temps:          0       0       0       0       0       0       0
  2941 ;;      Totals:         2       0       0       0       0       0       0
  2942 ;;Total ram usage:        2 bytes
  2943 ;; Hardware stack levels used:    1
  2944 ;; Hardware stack levels required when called:    6
  2945 ;; This function calls:
  2946 ;;		_EnableSlavePower
  2947 ;;		_Update
  2948 ;; This function is called by:
  2949 ;;		_updateComms
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text15
  2954  0008DA                     __ptext15:
  2955                           	opt stack 0
  2956  0008DA                     _processPowerRequest:
  2957                           	opt stack 23
  2958                           
  2959                           ;Communications.c: 35: if (powerSet & 0x01) EnableSlavePower(BMM, ON);
  2960                           
  2961                           ;incstack = 0
  2962  0008DA  A021               	btfss	processPowerRequest@powerSet,0,c
  2963  0008DC  D008               	goto	l2682
  2964  0008DE  0E00               	movlw	0
  2965  0008E0  6E1B               	movwf	EnableSlavePower@onof+1,c
  2966  0008E2  0E01               	movlw	1
  2967  0008E4  6E1A               	movwf	EnableSlavePower@onof,c
  2968  0008E6  0E04               	movlw	4
  2969  0008E8  ECC5  F004         	call	_EnableSlavePower
  2970  0008EC  D007               	goto	l2684
  2971  0008EE                     l2682:
  2972                           
  2973                           ;Communications.c: 36: else EnableSlavePower(BMM, OFF);
  2974  0008EE  0E00               	movlw	0
  2975  0008F0  6E1B               	movwf	EnableSlavePower@onof+1,c
  2976  0008F2  0E00               	movlw	0
  2977  0008F4  6E1A               	movwf	EnableSlavePower@onof,c
  2978  0008F6  0E04               	movlw	4
  2979  0008F8  ECC5  F004         	call	_EnableSlavePower
  2980  0008FC                     l2684:
  2981                           
  2982                           ;Communications.c: 37: if (powerSet & 0x02) EnableSlavePower(MCS, ON);
  2983  0008FC  A221               	btfss	processPowerRequest@powerSet,1,c
  2984  0008FE  D008               	goto	l2688
  2985  000900  0E00               	movlw	0
  2986  000902  6E1B               	movwf	EnableSlavePower@onof+1,c
  2987  000904  0E01               	movlw	1
  2988  000906  6E1A               	movwf	EnableSlavePower@onof,c
  2989  000908  0E02               	movlw	2
  2990  00090A  ECC5  F004         	call	_EnableSlavePower
  2991  00090E  D007               	goto	l2690
  2992  000910                     l2688:
  2993                           
  2994                           ;Communications.c: 38: else EnableSlavePower(MCS,OFF);
  2995  000910  0E00               	movlw	0
  2996  000912  6E1B               	movwf	EnableSlavePower@onof+1,c
  2997  000914  0E00               	movlw	0
  2998  000916  6E1A               	movwf	EnableSlavePower@onof,c
  2999  000918  0E02               	movlw	2
  3000  00091A  ECC5  F004         	call	_EnableSlavePower
  3001  00091E                     l2690:
  3002                           
  3003                           ;Communications.c: 39: if (powerSet & 0x04) EnableSlavePower(DDS,ON);
  3004  00091E  A421               	btfss	processPowerRequest@powerSet,2,c
  3005  000920  D008               	goto	l2694
  3006  000922  0E00               	movlw	0
  3007  000924  6E1B               	movwf	EnableSlavePower@onof+1,c
  3008  000926  0E01               	movlw	1
  3009  000928  6E1A               	movwf	EnableSlavePower@onof,c
  3010  00092A  0E01               	movlw	1
  3011  00092C  ECC5  F004         	call	_EnableSlavePower
  3012  000930  D007               	goto	l2696
  3013  000932                     l2694:
  3014                           
  3015                           ;Communications.c: 40: else EnableSlavePower(DDS,OFF);
  3016  000932  0E00               	movlw	0
  3017  000934  6E1B               	movwf	EnableSlavePower@onof+1,c
  3018  000936  0E00               	movlw	0
  3019  000938  6E1A               	movwf	EnableSlavePower@onof,c
  3020  00093A  0E01               	movlw	1
  3021  00093C  ECC5  F004         	call	_EnableSlavePower
  3022  000940                     l2696:
  3023                           
  3024                           ;Communications.c: 41: if(powerSet & 0x08) EnableSlavePower(SAS,ON);
  3025  000940  A621               	btfss	processPowerRequest@powerSet,3,c
  3026  000942  D008               	goto	l2700
  3027  000944  0E00               	movlw	0
  3028  000946  6E1B               	movwf	EnableSlavePower@onof+1,c
  3029  000948  0E01               	movlw	1
  3030  00094A  6E1A               	movwf	EnableSlavePower@onof,c
  3031  00094C  0E03               	movlw	3
  3032  00094E  ECC5  F004         	call	_EnableSlavePower
  3033  000952  D007               	goto	l2702
  3034  000954                     l2700:
  3035                           
  3036                           ;Communications.c: 42: else EnableSlavePower(SAS,OFF);
  3037  000954  0E00               	movlw	0
  3038  000956  6E1B               	movwf	EnableSlavePower@onof+1,c
  3039  000958  0E00               	movlw	0
  3040  00095A  6E1A               	movwf	EnableSlavePower@onof,c
  3041  00095C  0E03               	movlw	3
  3042  00095E  ECC5  F004         	call	_EnableSlavePower
  3043  000962                     l2702:
  3044                           
  3045                           ;Communications.c: 43: if(powerSet & 0x10) EnableSlavePower(TSS, ON);
  3046  000962  A821               	btfss	processPowerRequest@powerSet,4,c
  3047  000964  D008               	goto	l2706
  3048  000966  0E00               	movlw	0
  3049  000968  6E1B               	movwf	EnableSlavePower@onof+1,c
  3050  00096A  0E01               	movlw	1
  3051  00096C  6E1A               	movwf	EnableSlavePower@onof,c
  3052  00096E  0E05               	movlw	5
  3053  000970  ECC5  F004         	call	_EnableSlavePower
  3054  000974  D007               	goto	l335
  3055  000976                     l2706:
  3056                           
  3057                           ;Communications.c: 44: else EnableSlavePower(TSS,OFF);
  3058  000976  0E00               	movlw	0
  3059  000978  6E1B               	movwf	EnableSlavePower@onof+1,c
  3060  00097A  0E00               	movlw	0
  3061  00097C  6E1A               	movwf	EnableSlavePower@onof,c
  3062  00097E  0E05               	movlw	5
  3063  000980  ECC5  F004         	call	_EnableSlavePower
  3064  000984                     l335:
  3065                           
  3066                           ;Communications.c: 45: Update();
  3067  000984  EC3A  F008         	call	_Update	;wreg free
  3068  000988  0012               	return		;funcret
  3069  00098A                     __end_of_processPowerRequest:
  3070                           	opt stack 0
  3071                           tblptru	equ	0xFF8
  3072                           tblptrh	equ	0xFF7
  3073                           tblptrl	equ	0xFF6
  3074                           tablat	equ	0xFF5
  3075                           prodh	equ	0xFF4
  3076                           prodl	equ	0xFF3
  3077                           intcon	equ	0xFF2
  3078                           postinc0	equ	0xFEE
  3079                           wreg	equ	0xFE8
  3080                           indf2	equ	0xFDF
  3081                           postinc2	equ	0xFDE
  3082                           postdec2	equ	0xFDD
  3083                           plusw2	equ	0xFDB
  3084                           fsr2h	equ	0xFDA
  3085                           fsr2l	equ	0xFD9
  3086                           status	equ	0xFD8
  3087                           
  3088 ;; *************** function _SYSTEM_Initialize *****************
  3089 ;; Defined at:
  3090 ;;		line 112 in file "mcc_generated_files/mcc.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;		None
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;		None
  3095 ;; Return value:  Size  Location     Type
  3096 ;;		None               void
  3097 ;; Registers used:
  3098 ;;		wreg, status,2, cstack
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3104 ;;      Params:         0       0       0       0       0       0       0
  3105 ;;      Locals:         0       0       0       0       0       0       0
  3106 ;;      Temps:          0       0       0       0       0       0       0
  3107 ;;      Totals:         0       0       0       0       0       0       0
  3108 ;;Total ram usage:        0 bytes
  3109 ;; Hardware stack levels used:    1
  3110 ;; Hardware stack levels required when called:    5
  3111 ;; This function calls:
  3112 ;;		_ADC_Initialize
  3113 ;;		_CCP5_Initialize
  3114 ;;		_INTERRUPT_Initialize
  3115 ;;		_OSCILLATOR_Initialize
  3116 ;;		_PIN_MANAGER_Initialize
  3117 ;;		_PWM4_Initialize
  3118 ;;		_TMR2_Initialize
  3119 ;; This function is called by:
  3120 ;;		_main
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124                           	psect	text16
  3125  000F66                     __ptext16:
  3126                           	opt stack 0
  3127  000F66                     _SYSTEM_Initialize:
  3128                           	opt stack 25
  3129                           
  3130                           ;mcc.c: 115: INTERRUPT_Initialize();
  3131                           
  3132                           ;incstack = 0
  3133  000F66  EC36  F008         	call	_INTERRUPT_Initialize	;wreg free
  3134                           
  3135                           ;mcc.c: 116: PIN_MANAGER_Initialize();
  3136  000F6A  ECA8  F006         	call	_PIN_MANAGER_Initialize	;wreg free
  3137                           
  3138                           ;mcc.c: 117: OSCILLATOR_Initialize();
  3139  000F6E  EC2F  F008         	call	_OSCILLATOR_Initialize	;wreg free
  3140                           
  3141                           ;mcc.c: 118: PWM4_Initialize();
  3142  000F72  ECDF  F007         	call	_PWM4_Initialize	;wreg free
  3143                           
  3144                           ;mcc.c: 119: TMR2_Initialize();
  3145  000F76  EC26  F008         	call	_TMR2_Initialize	;wreg free
  3146                           
  3147                           ;mcc.c: 120: ADC_Initialize();
  3148  000F7A  ECF9  F007         	call	_ADC_Initialize	;wreg free
  3149                           
  3150                           ;mcc.c: 121: CCP5_Initialize();
  3151  000F7E  ECC2  F007         	call	_CCP5_Initialize	;wreg free
  3152  000F82  0012               	return		;funcret
  3153  000F84                     __end_of_SYSTEM_Initialize:
  3154                           	opt stack 0
  3155                           tblptru	equ	0xFF8
  3156                           tblptrh	equ	0xFF7
  3157                           tblptrl	equ	0xFF6
  3158                           tablat	equ	0xFF5
  3159                           prodh	equ	0xFF4
  3160                           prodl	equ	0xFF3
  3161                           intcon	equ	0xFF2
  3162                           postinc0	equ	0xFEE
  3163                           wreg	equ	0xFE8
  3164                           indf2	equ	0xFDF
  3165                           postinc2	equ	0xFDE
  3166                           postdec2	equ	0xFDD
  3167                           plusw2	equ	0xFDB
  3168                           fsr2h	equ	0xFDA
  3169                           fsr2l	equ	0xFD9
  3170                           status	equ	0xFD8
  3171                           
  3172 ;; *************** function _TMR2_Initialize *****************
  3173 ;; Defined at:
  3174 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;		None
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;		None
  3179 ;; Return value:  Size  Location     Type
  3180 ;;		None               void
  3181 ;; Registers used:
  3182 ;;		wreg, status,2, cstack
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3188 ;;      Params:         0       0       0       0       0       0       0
  3189 ;;      Locals:         0       0       0       0       0       0       0
  3190 ;;      Temps:          0       0       0       0       0       0       0
  3191 ;;      Totals:         0       0       0       0       0       0       0
  3192 ;;Total ram usage:        0 bytes
  3193 ;; Hardware stack levels used:    1
  3194 ;; Hardware stack levels required when called:    4
  3195 ;; This function calls:
  3196 ;;		_TMR2_StartTimer
  3197 ;; This function is called by:
  3198 ;;		_SYSTEM_Initialize
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	text17
  3203  00104C                     __ptext17:
  3204                           	opt stack 0
  3205  00104C                     _TMR2_Initialize:
  3206                           	opt stack 25
  3207                           
  3208                           ;tmr2.c: 63: T2CON = 0x00;
  3209                           
  3210                           ;incstack = 0
  3211  00104C  0E00               	movlw	0
  3212  00104E  6EBA               	movwf	4026,c	;volatile
  3213                           
  3214                           ;tmr2.c: 66: PR2 = 0xFF;
  3215  001050  68BB               	setf	4027,c	;volatile
  3216                           
  3217                           ;tmr2.c: 69: TMR2 = 0x00;
  3218  001052  0E00               	movlw	0
  3219  001054  6EBC               	movwf	4028,c	;volatile
  3220                           
  3221                           ;tmr2.c: 72: PIR1bits.TMR2IF = 0;
  3222  001056  929E               	bcf	3998,1,c	;volatile
  3223                           
  3224                           ;tmr2.c: 75: TMR2_StartTimer();
  3225  001058  EC3D  F008         	call	_TMR2_StartTimer	;wreg free
  3226  00105C  0012               	return		;funcret
  3227  00105E                     __end_of_TMR2_Initialize:
  3228                           	opt stack 0
  3229                           tblptru	equ	0xFF8
  3230                           tblptrh	equ	0xFF7
  3231                           tblptrl	equ	0xFF6
  3232                           tablat	equ	0xFF5
  3233                           prodh	equ	0xFF4
  3234                           prodl	equ	0xFF3
  3235                           intcon	equ	0xFF2
  3236                           postinc0	equ	0xFEE
  3237                           wreg	equ	0xFE8
  3238                           indf2	equ	0xFDF
  3239                           postinc2	equ	0xFDE
  3240                           postdec2	equ	0xFDD
  3241                           plusw2	equ	0xFDB
  3242                           fsr2h	equ	0xFDA
  3243                           fsr2l	equ	0xFD9
  3244                           status	equ	0xFD8
  3245                           
  3246 ;; *************** function _TMR2_StartTimer *****************
  3247 ;; Defined at:
  3248 ;;		line 78 in file "mcc_generated_files/tmr2.c"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;		None
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;		None
  3253 ;; Return value:  Size  Location     Type
  3254 ;;		None               void
  3255 ;; Registers used:
  3256 ;;		None
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3262 ;;      Params:         0       0       0       0       0       0       0
  3263 ;;      Locals:         0       0       0       0       0       0       0
  3264 ;;      Temps:          0       0       0       0       0       0       0
  3265 ;;      Totals:         0       0       0       0       0       0       0
  3266 ;;Total ram usage:        0 bytes
  3267 ;; Hardware stack levels used:    1
  3268 ;; Hardware stack levels required when called:    3
  3269 ;; This function calls:
  3270 ;;		Nothing
  3271 ;; This function is called by:
  3272 ;;		_TMR2_Initialize
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           	psect	text18
  3277  00107A                     __ptext18:
  3278                           	opt stack 0
  3279  00107A                     _TMR2_StartTimer:
  3280                           	opt stack 25
  3281                           
  3282                           ;tmr2.c: 81: T2CONbits.TMR2ON = 1;
  3283                           
  3284                           ;incstack = 0
  3285  00107A  84BA               	bsf	4026,2,c	;volatile
  3286  00107C  0012               	return		;funcret
  3287  00107E                     __end_of_TMR2_StartTimer:
  3288                           	opt stack 0
  3289                           tblptru	equ	0xFF8
  3290                           tblptrh	equ	0xFF7
  3291                           tblptrl	equ	0xFF6
  3292                           tablat	equ	0xFF5
  3293                           prodh	equ	0xFF4
  3294                           prodl	equ	0xFF3
  3295                           intcon	equ	0xFF2
  3296                           postinc0	equ	0xFEE
  3297                           wreg	equ	0xFE8
  3298                           indf2	equ	0xFDF
  3299                           postinc2	equ	0xFDE
  3300                           postdec2	equ	0xFDD
  3301                           plusw2	equ	0xFDB
  3302                           fsr2h	equ	0xFDA
  3303                           fsr2l	equ	0xFD9
  3304                           status	equ	0xFD8
  3305                           
  3306 ;; *************** function _PWM4_Initialize *****************
  3307 ;; Defined at:
  3308 ;;		line 64 in file "mcc_generated_files/pwm4.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;		None
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;		None
  3313 ;; Return value:  Size  Location     Type
  3314 ;;		None               void
  3315 ;; Registers used:
  3316 ;;		wreg, status,2
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3322 ;;      Params:         0       0       0       0       0       0       0
  3323 ;;      Locals:         0       0       0       0       0       0       0
  3324 ;;      Temps:          0       0       0       0       0       0       0
  3325 ;;      Totals:         0       0       0       0       0       0       0
  3326 ;;Total ram usage:        0 bytes
  3327 ;; Hardware stack levels used:    1
  3328 ;; Hardware stack levels required when called:    3
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_SYSTEM_Initialize
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text19
  3337  000FBE                     __ptext19:
  3338                           	opt stack 0
  3339  000FBE                     _PWM4_Initialize:
  3340                           	opt stack 26
  3341                           
  3342                           ;pwm4.c: 69: CCP4CON = 0x3C;
  3343                           
  3344                           ;incstack = 0
  3345  000FBE  0E3C               	movlw	60
  3346  000FC0  010F               	movlb	15	; () banked
  3347  000FC2  6F57               	movwf	87,b	;volatile
  3348                           
  3349                           ;pwm4.c: 72: CCPR4L = 0x7F;
  3350  000FC4  0E7F               	movlw	127
  3351  000FC6  010F               	movlb	15	; () banked
  3352  000FC8  6F58               	movwf	88,b	;volatile
  3353                           
  3354                           ;pwm4.c: 75: CCPR4H = 0x00;
  3355  000FCA  0E00               	movlw	0
  3356  000FCC  010F               	movlb	15	; () banked
  3357  000FCE  6F59               	movwf	89,b	;volatile
  3358                           
  3359                           ;pwm4.c: 78: CCPTMRS1bits.C4TSEL = 0x0;
  3360  000FD0  0EFC               	movlw	-4
  3361  000FD2  010F               	movlb	15	; () banked
  3362  000FD4  1748               	andwf	72,f,b	;volatile
  3363                           
  3364                           ; BSR set to: 15
  3365  000FD6  0012               	return		;funcret
  3366  000FD8                     __end_of_PWM4_Initialize:
  3367                           	opt stack 0
  3368                           tblptru	equ	0xFF8
  3369                           tblptrh	equ	0xFF7
  3370                           tblptrl	equ	0xFF6
  3371                           tablat	equ	0xFF5
  3372                           prodh	equ	0xFF4
  3373                           prodl	equ	0xFF3
  3374                           intcon	equ	0xFF2
  3375                           postinc0	equ	0xFEE
  3376                           wreg	equ	0xFE8
  3377                           indf2	equ	0xFDF
  3378                           postinc2	equ	0xFDE
  3379                           postdec2	equ	0xFDD
  3380                           plusw2	equ	0xFDB
  3381                           fsr2h	equ	0xFDA
  3382                           fsr2l	equ	0xFD9
  3383                           status	equ	0xFD8
  3384                           
  3385 ;; *************** function _PIN_MANAGER_Initialize *****************
  3386 ;; Defined at:
  3387 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;		None
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;		None
  3392 ;; Return value:  Size  Location     Type
  3393 ;;		None               void
  3394 ;; Registers used:
  3395 ;;		wreg, status,2
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3401 ;;      Params:         0       0       0       0       0       0       0
  3402 ;;      Locals:         0       0       0       0       0       0       0
  3403 ;;      Temps:          0       0       0       0       0       0       0
  3404 ;;      Totals:         0       0       0       0       0       0       0
  3405 ;;Total ram usage:        0 bytes
  3406 ;; Hardware stack levels used:    1
  3407 ;; Hardware stack levels required when called:    3
  3408 ;; This function calls:
  3409 ;;		Nothing
  3410 ;; This function is called by:
  3411 ;;		_SYSTEM_Initialize
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           	psect	text20
  3416  000D50                     __ptext20:
  3417                           	opt stack 0
  3418  000D50                     _PIN_MANAGER_Initialize:
  3419                           	opt stack 26
  3420                           
  3421                           ;pin_manager.c: 51: LATB = 0x0;
  3422                           
  3423                           ; BSR set to: 15
  3424                           ;incstack = 0
  3425  000D50  0E00               	movlw	0
  3426  000D52  6E8A               	movwf	3978,c	;volatile
  3427                           
  3428                           ;pin_manager.c: 52: LATA = 0x0;
  3429  000D54  0E00               	movlw	0
  3430  000D56  6E89               	movwf	3977,c	;volatile
  3431                           
  3432                           ;pin_manager.c: 53: ANSELE = 0x3;
  3433  000D58  0E03               	movlw	3
  3434  000D5A  010F               	movlb	15	; () banked
  3435  000D5C  6F3C               	movwf	60,b	;volatile
  3436                           
  3437                           ;pin_manager.c: 54: LATE = 0x0;
  3438  000D5E  0E00               	movlw	0
  3439  000D60  6E8D               	movwf	3981,c	;volatile
  3440                           
  3441                           ;pin_manager.c: 55: LATD = 0x0;
  3442  000D62  0E00               	movlw	0
  3443  000D64  6E8C               	movwf	3980,c	;volatile
  3444                           
  3445                           ;pin_manager.c: 56: LATC = 0x0;
  3446  000D66  0E00               	movlw	0
  3447  000D68  6E8B               	movwf	3979,c	;volatile
  3448                           
  3449                           ;pin_manager.c: 57: ANSELA = 0x27;
  3450  000D6A  0E27               	movlw	39
  3451  000D6C  010F               	movlb	15	; () banked
  3452  000D6E  6F38               	movwf	56,b	;volatile
  3453                           
  3454                           ;pin_manager.c: 58: ANSELB = 0x6;
  3455  000D70  0E06               	movlw	6
  3456  000D72  010F               	movlb	15	; () banked
  3457  000D74  6F39               	movwf	57,b	;volatile
  3458                           
  3459                           ;pin_manager.c: 59: ANSELC = 0xDC;
  3460  000D76  0EDC               	movlw	220
  3461  000D78  010F               	movlb	15	; () banked
  3462  000D7A  6F3A               	movwf	58,b	;volatile
  3463                           
  3464                           ;pin_manager.c: 60: ANSELD = 0xED;
  3465  000D7C  0EED               	movlw	237
  3466  000D7E  010F               	movlb	15	; () banked
  3467  000D80  6F3B               	movwf	59,b	;volatile
  3468                           
  3469                           ;pin_manager.c: 61: WPUB = 0xC6;
  3470  000D82  0EC6               	movlw	198
  3471  000D84  6E61               	movwf	3937,c	;volatile
  3472                           
  3473                           ;pin_manager.c: 62: TRISD = 0xD;
  3474  000D86  0E0D               	movlw	13
  3475  000D88  6E95               	movwf	3989,c	;volatile
  3476                           
  3477                           ;pin_manager.c: 63: TRISE = 0x7;
  3478  000D8A  0E07               	movlw	7
  3479  000D8C  6E96               	movwf	3990,c	;volatile
  3480                           
  3481                           ;pin_manager.c: 64: TRISB = 0xC6;
  3482  000D8E  0EC6               	movlw	198
  3483  000D90  6E93               	movwf	3987,c	;volatile
  3484                           
  3485                           ;pin_manager.c: 65: TRISC = 0xDF;
  3486  000D92  0EDF               	movlw	223
  3487  000D94  6E94               	movwf	3988,c	;volatile
  3488                           
  3489                           ;pin_manager.c: 66: TRISA = 0xE7;
  3490  000D96  0EE7               	movlw	231
  3491  000D98  6E92               	movwf	3986,c	;volatile
  3492                           
  3493                           ; BSR set to: 15
  3494                           ;pin_manager.c: 68: INTCON2bits.nRBPU = 0x1;
  3495  000D9A  8EF1               	bsf	intcon2,7,c	;volatile
  3496                           
  3497                           ; BSR set to: 15
  3498                           ;pin_manager.c: 72: INTCONbits.RBIE = 0;
  3499  000D9C  96F2               	bcf	intcon,3,c	;volatile
  3500                           
  3501                           ; BSR set to: 15
  3502  000D9E  0012               	return		;funcret
  3503  000DA0                     __end_of_PIN_MANAGER_Initialize:
  3504                           	opt stack 0
  3505                           tblptru	equ	0xFF8
  3506                           tblptrh	equ	0xFF7
  3507                           tblptrl	equ	0xFF6
  3508                           tablat	equ	0xFF5
  3509                           prodh	equ	0xFF4
  3510                           prodl	equ	0xFF3
  3511                           intcon	equ	0xFF2
  3512                           intcon2	equ	0xFF1
  3513                           postinc0	equ	0xFEE
  3514                           wreg	equ	0xFE8
  3515                           indf2	equ	0xFDF
  3516                           postinc2	equ	0xFDE
  3517                           postdec2	equ	0xFDD
  3518                           plusw2	equ	0xFDB
  3519                           fsr2h	equ	0xFDA
  3520                           fsr2l	equ	0xFD9
  3521                           status	equ	0xFD8
  3522                           
  3523 ;; *************** function _OSCILLATOR_Initialize *****************
  3524 ;; Defined at:
  3525 ;;		line 124 in file "mcc_generated_files/mcc.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;		None
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;		None
  3530 ;; Return value:  Size  Location     Type
  3531 ;;		None               void
  3532 ;; Registers used:
  3533 ;;		wreg, status,2
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3539 ;;      Params:         0       0       0       0       0       0       0
  3540 ;;      Locals:         0       0       0       0       0       0       0
  3541 ;;      Temps:          0       0       0       0       0       0       0
  3542 ;;      Totals:         0       0       0       0       0       0       0
  3543 ;;Total ram usage:        0 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; Hardware stack levels required when called:    3
  3546 ;; This function calls:
  3547 ;;		Nothing
  3548 ;; This function is called by:
  3549 ;;		_SYSTEM_Initialize
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           	psect	text21
  3554  00105E                     __ptext21:
  3555                           	opt stack 0
  3556  00105E                     _OSCILLATOR_Initialize:
  3557                           	opt stack 26
  3558                           
  3559                           ;mcc.c: 127: OSCCON = 0x70;
  3560                           
  3561                           ; BSR set to: 15
  3562                           ;incstack = 0
  3563  00105E  0E70               	movlw	112
  3564  001060  6ED3               	movwf	4051,c	;volatile
  3565                           
  3566                           ;mcc.c: 129: OSCCON2 = 0x04;
  3567  001062  0E04               	movlw	4
  3568  001064  6ED2               	movwf	4050,c	;volatile
  3569                           
  3570                           ;mcc.c: 131: OSCTUNE = 0x00;
  3571  001066  0E00               	movlw	0
  3572  001068  6E9B               	movwf	3995,c	;volatile
  3573  00106A  0012               	return		;funcret
  3574  00106C                     __end_of_OSCILLATOR_Initialize:
  3575                           	opt stack 0
  3576                           tblptru	equ	0xFF8
  3577                           tblptrh	equ	0xFF7
  3578                           tblptrl	equ	0xFF6
  3579                           tablat	equ	0xFF5
  3580                           prodh	equ	0xFF4
  3581                           prodl	equ	0xFF3
  3582                           intcon	equ	0xFF2
  3583                           intcon2	equ	0xFF1
  3584                           postinc0	equ	0xFEE
  3585                           wreg	equ	0xFE8
  3586                           indf2	equ	0xFDF
  3587                           postinc2	equ	0xFDE
  3588                           postdec2	equ	0xFDD
  3589                           plusw2	equ	0xFDB
  3590                           fsr2h	equ	0xFDA
  3591                           fsr2l	equ	0xFD9
  3592                           status	equ	0xFD8
  3593                           
  3594 ;; *************** function _INTERRUPT_Initialize *****************
  3595 ;; Defined at:
  3596 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;		None
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;		None
  3601 ;; Return value:  Size  Location     Type
  3602 ;;		None               void
  3603 ;; Registers used:
  3604 ;;		None
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3610 ;;      Params:         0       0       0       0       0       0       0
  3611 ;;      Locals:         0       0       0       0       0       0       0
  3612 ;;      Temps:          0       0       0       0       0       0       0
  3613 ;;      Totals:         0       0       0       0       0       0       0
  3614 ;;Total ram usage:        0 bytes
  3615 ;; Hardware stack levels used:    1
  3616 ;; Hardware stack levels required when called:    3
  3617 ;; This function calls:
  3618 ;;		Nothing
  3619 ;; This function is called by:
  3620 ;;		_SYSTEM_Initialize
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           	psect	text22
  3625  00106C                     __ptext22:
  3626                           	opt stack 0
  3627  00106C                     _INTERRUPT_Initialize:
  3628                           	opt stack 26
  3629                           
  3630                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  3631                           
  3632                           ;incstack = 0
  3633  00106C  9ED0               	bcf	4048,7,c	;volatile
  3634                           
  3635                           ;interrupt_manager.c: 60: IPR1bits.ADIP = 0;
  3636  00106E  9C9F               	bcf	3999,6,c	;volatile
  3637                           
  3638                           ;interrupt_manager.c: 62: IPR4bits.CCP5IP = 0;
  3639  001070  947C               	bcf	3964,2,c	;volatile
  3640  001072  0012               	return		;funcret
  3641  001074                     __end_of_INTERRUPT_Initialize:
  3642                           	opt stack 0
  3643                           tblptru	equ	0xFF8
  3644                           tblptrh	equ	0xFF7
  3645                           tblptrl	equ	0xFF6
  3646                           tablat	equ	0xFF5
  3647                           prodh	equ	0xFF4
  3648                           prodl	equ	0xFF3
  3649                           intcon	equ	0xFF2
  3650                           intcon2	equ	0xFF1
  3651                           postinc0	equ	0xFEE
  3652                           wreg	equ	0xFE8
  3653                           indf2	equ	0xFDF
  3654                           postinc2	equ	0xFDE
  3655                           postdec2	equ	0xFDD
  3656                           plusw2	equ	0xFDB
  3657                           fsr2h	equ	0xFDA
  3658                           fsr2l	equ	0xFD9
  3659                           status	equ	0xFD8
  3660                           
  3661 ;; *************** function _CCP5_Initialize *****************
  3662 ;; Defined at:
  3663 ;;		line 58 in file "mcc_generated_files/ccp5.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;		None
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;		None
  3668 ;; Return value:  Size  Location     Type
  3669 ;;		None               void
  3670 ;; Registers used:
  3671 ;;		wreg, status,2
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3677 ;;      Params:         0       0       0       0       0       0       0
  3678 ;;      Locals:         0       0       0       0       0       0       0
  3679 ;;      Temps:          0       0       0       0       0       0       0
  3680 ;;      Totals:         0       0       0       0       0       0       0
  3681 ;;Total ram usage:        0 bytes
  3682 ;; Hardware stack levels used:    1
  3683 ;; Hardware stack levels required when called:    3
  3684 ;; This function calls:
  3685 ;;		Nothing
  3686 ;; This function is called by:
  3687 ;;		_SYSTEM_Initialize
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           
  3691                           	psect	text23
  3692  000F84                     __ptext23:
  3693                           	opt stack 0
  3694  000F84                     _CCP5_Initialize:
  3695                           	opt stack 26
  3696                           
  3697                           ;ccp5.c: 63: CCP5CON = 0x04;
  3698                           
  3699                           ;incstack = 0
  3700  000F84  0E04               	movlw	4
  3701  000F86  010F               	movlb	15	; () banked
  3702  000F88  6F54               	movwf	84,b	;volatile
  3703                           
  3704                           ;ccp5.c: 66: CCPR5L = 0x00;
  3705  000F8A  0E00               	movlw	0
  3706  000F8C  010F               	movlb	15	; () banked
  3707  000F8E  6F55               	movwf	85,b	;volatile
  3708                           
  3709                           ;ccp5.c: 69: CCPR5H = 0x00;
  3710  000F90  0E00               	movlw	0
  3711  000F92  010F               	movlb	15	; () banked
  3712  000F94  6F56               	movwf	86,b	;volatile
  3713                           
  3714                           ;ccp5.c: 72: CCPTMRS1bits.C5TSEL = 0x0;
  3715  000F96  0EF3               	movlw	-13
  3716  000F98  010F               	movlb	15	; () banked
  3717  000F9A  1748               	andwf	72,f,b	;volatile
  3718                           
  3719                           ; BSR set to: 15
  3720                           ;ccp5.c: 75: PIR4bits.CCP5IF = 0;
  3721  000F9C  947B               	bcf	3963,2,c	;volatile
  3722                           
  3723                           ; BSR set to: 15
  3724                           ;ccp5.c: 78: PIE4bits.CCP5IE = 1;
  3725  000F9E  847A               	bsf	3962,2,c	;volatile
  3726                           
  3727                           ; BSR set to: 15
  3728  000FA0  0012               	return		;funcret
  3729  000FA2                     __end_of_CCP5_Initialize:
  3730                           	opt stack 0
  3731                           tblptru	equ	0xFF8
  3732                           tblptrh	equ	0xFF7
  3733                           tblptrl	equ	0xFF6
  3734                           tablat	equ	0xFF5
  3735                           prodh	equ	0xFF4
  3736                           prodl	equ	0xFF3
  3737                           intcon	equ	0xFF2
  3738                           intcon2	equ	0xFF1
  3739                           postinc0	equ	0xFEE
  3740                           wreg	equ	0xFE8
  3741                           indf2	equ	0xFDF
  3742                           postinc2	equ	0xFDE
  3743                           postdec2	equ	0xFDD
  3744                           plusw2	equ	0xFDB
  3745                           fsr2h	equ	0xFDA
  3746                           fsr2l	equ	0xFD9
  3747                           status	equ	0xFD8
  3748                           
  3749 ;; *************** function _ADC_Initialize *****************
  3750 ;; Defined at:
  3751 ;;		line 59 in file "mcc_generated_files/adc.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;		None
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;		None
  3756 ;; Return value:  Size  Location     Type
  3757 ;;		None               void
  3758 ;; Registers used:
  3759 ;;		wreg, status,2
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3765 ;;      Params:         0       0       0       0       0       0       0
  3766 ;;      Locals:         0       0       0       0       0       0       0
  3767 ;;      Temps:          0       0       0       0       0       0       0
  3768 ;;      Totals:         0       0       0       0       0       0       0
  3769 ;;Total ram usage:        0 bytes
  3770 ;; Hardware stack levels used:    1
  3771 ;; Hardware stack levels required when called:    3
  3772 ;; This function calls:
  3773 ;;		Nothing
  3774 ;; This function is called by:
  3775 ;;		_SYSTEM_Initialize
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           	psect	text24
  3780  000FF2                     __ptext24:
  3781                           	opt stack 0
  3782  000FF2                     _ADC_Initialize:
  3783                           	opt stack 26
  3784                           
  3785                           ;adc.c: 64: ADCON0 = 0x01;
  3786                           
  3787                           ; BSR set to: 15
  3788                           ;incstack = 0
  3789  000FF2  0E01               	movlw	1
  3790  000FF4  6EC2               	movwf	4034,c	;volatile
  3791                           
  3792                           ;adc.c: 67: ADCON1 = 0x00;
  3793  000FF6  0E00               	movlw	0
  3794  000FF8  6EC1               	movwf	4033,c	;volatile
  3795                           
  3796                           ;adc.c: 70: ADCON2 = 0x0D;
  3797  000FFA  0E0D               	movlw	13
  3798  000FFC  6EC0               	movwf	4032,c	;volatile
  3799                           
  3800                           ;adc.c: 73: ADRESL = 0x00;
  3801  000FFE  0E00               	movlw	0
  3802  001000  6EC3               	movwf	4035,c	;volatile
  3803                           
  3804                           ;adc.c: 76: ADRESH = 0x00;
  3805  001002  0E00               	movlw	0
  3806  001004  6EC4               	movwf	4036,c	;volatile
  3807                           
  3808                           ;adc.c: 79: PIE1bits.ADIE = 1;
  3809  001006  8C9D               	bsf	3997,6,c	;volatile
  3810  001008  0012               	return		;funcret
  3811  00100A                     __end_of_ADC_Initialize:
  3812                           	opt stack 0
  3813                           tblptru	equ	0xFF8
  3814                           tblptrh	equ	0xFF7
  3815                           tblptrl	equ	0xFF6
  3816                           tablat	equ	0xFF5
  3817                           prodh	equ	0xFF4
  3818                           prodl	equ	0xFF3
  3819                           intcon	equ	0xFF2
  3820                           intcon2	equ	0xFF1
  3821                           postinc0	equ	0xFEE
  3822                           wreg	equ	0xFE8
  3823                           indf2	equ	0xFDF
  3824                           postinc2	equ	0xFDE
  3825                           postdec2	equ	0xFDD
  3826                           plusw2	equ	0xFDB
  3827                           fsr2h	equ	0xFDA
  3828                           fsr2l	equ	0xFD9
  3829                           status	equ	0xFD8
  3830                           
  3831 ;; *************** function _PDUStartup *****************
  3832 ;; Defined at:
  3833 ;;		line 15 in file "PDU.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;		None
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;		None
  3838 ;; Return value:  Size  Location     Type
  3839 ;;		None               void
  3840 ;; Registers used:
  3841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3847 ;;      Params:         0       0       0       0       0       0       0
  3848 ;;      Locals:         0       0       0       0       0       0       0
  3849 ;;      Temps:          0       0       0       0       0       0       0
  3850 ;;      Totals:         0       0       0       0       0       0       0
  3851 ;;Total ram usage:        0 bytes
  3852 ;; Hardware stack levels used:    1
  3853 ;; Hardware stack levels required when called:    7
  3854 ;; This function calls:
  3855 ;;		_ComputeStorageData
  3856 ;;		_EnableSlavePower
  3857 ;;		_StartUp595
  3858 ;;		_Update
  3859 ;; This function is called by:
  3860 ;;		_main
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text25
  3865  000CAC                     __ptext25:
  3866                           	opt stack 0
  3867  000CAC                     _PDUStartup:
  3868                           	opt stack 23
  3869                           
  3870                           ;PDU.c: 18: StartUp595();
  3871                           
  3872                           ;incstack = 0
  3873  000CAC  EC25  F006         	call	_StartUp595	;wreg free
  3874                           
  3875                           ;PDU.c: 20: EnableSlavePower(SAS, ON);
  3876  000CB0  0E00               	movlw	0
  3877  000CB2  6E1B               	movwf	EnableSlavePower@onof+1,c
  3878  000CB4  0E01               	movlw	1
  3879  000CB6  6E1A               	movwf	EnableSlavePower@onof,c
  3880  000CB8  0E03               	movlw	3
  3881  000CBA  ECC5  F004         	call	_EnableSlavePower
  3882                           
  3883                           ;PDU.c: 21: EnableSlavePower(DDS, ON);
  3884  000CBE  0E00               	movlw	0
  3885  000CC0  6E1B               	movwf	EnableSlavePower@onof+1,c
  3886  000CC2  0E01               	movlw	1
  3887  000CC4  6E1A               	movwf	EnableSlavePower@onof,c
  3888  000CC6  0E01               	movlw	1
  3889  000CC8  ECC5  F004         	call	_EnableSlavePower
  3890                           
  3891                           ;PDU.c: 22: EnableSlavePower(MCS, OFF);
  3892  000CCC  0E00               	movlw	0
  3893  000CCE  6E1B               	movwf	EnableSlavePower@onof+1,c
  3894  000CD0  0E00               	movlw	0
  3895  000CD2  6E1A               	movwf	EnableSlavePower@onof,c
  3896  000CD4  0E02               	movlw	2
  3897  000CD6  ECC5  F004         	call	_EnableSlavePower
  3898                           
  3899                           ;PDU.c: 23: EnableSlavePower(BMM, OFF);
  3900  000CDA  0E00               	movlw	0
  3901  000CDC  6E1B               	movwf	EnableSlavePower@onof+1,c
  3902  000CDE  0E00               	movlw	0
  3903  000CE0  6E1A               	movwf	EnableSlavePower@onof,c
  3904  000CE2  0E04               	movlw	4
  3905  000CE4  ECC5  F004         	call	_EnableSlavePower
  3906                           
  3907                           ;PDU.c: 24: EnableSlavePower(TSS, OFF);
  3908  000CE8  0E00               	movlw	0
  3909  000CEA  6E1B               	movwf	EnableSlavePower@onof+1,c
  3910  000CEC  0E00               	movlw	0
  3911  000CEE  6E1A               	movwf	EnableSlavePower@onof,c
  3912  000CF0  0E05               	movlw	5
  3913  000CF2  ECC5  F004         	call	_EnableSlavePower
  3914                           
  3915                           ;PDU.c: 25: Update();
  3916  000CF6  EC3A  F008         	call	_Update	;wreg free
  3917                           
  3918                           ;PDU.c: 27: ComputeStorageData();
  3919  000CFA  ECC1  F002         	call	_ComputeStorageData	;wreg free
  3920  000CFE  0012               	return		;funcret
  3921  000D00                     __end_of_PDUStartup:
  3922                           	opt stack 0
  3923                           tblptru	equ	0xFF8
  3924                           tblptrh	equ	0xFF7
  3925                           tblptrl	equ	0xFF6
  3926                           tablat	equ	0xFF5
  3927                           prodh	equ	0xFF4
  3928                           prodl	equ	0xFF3
  3929                           intcon	equ	0xFF2
  3930                           intcon2	equ	0xFF1
  3931                           postinc0	equ	0xFEE
  3932                           wreg	equ	0xFE8
  3933                           indf2	equ	0xFDF
  3934                           postinc2	equ	0xFDE
  3935                           postdec2	equ	0xFDD
  3936                           plusw2	equ	0xFDB
  3937                           fsr2h	equ	0xFDA
  3938                           fsr2l	equ	0xFD9
  3939                           status	equ	0xFD8
  3940                           
  3941 ;; *************** function _Update *****************
  3942 ;; Defined at:
  3943 ;;		line 142 in file "PDU.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;		None
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;		None
  3948 ;; Return value:  Size  Location     Type
  3949 ;;		None               void
  3950 ;; Registers used:
  3951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3957 ;;      Params:         0       0       0       0       0       0       0
  3958 ;;      Locals:         0       0       0       0       0       0       0
  3959 ;;      Temps:          0       0       0       0       0       0       0
  3960 ;;      Totals:         0       0       0       0       0       0       0
  3961 ;;Total ram usage:        0 bytes
  3962 ;; Hardware stack levels used:    1
  3963 ;; Hardware stack levels required when called:    5
  3964 ;; This function calls:
  3965 ;;		_writeRegisters
  3966 ;; This function is called by:
  3967 ;;		_processPowerRequest
  3968 ;;		_PDUStartup
  3969 ;;		_ReadCurrent
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973                           	psect	text26
  3974  001074                     __ptext26:
  3975                           	opt stack 0
  3976  001074                     _Update:
  3977                           	opt stack 23
  3978                           
  3979                           ;PDU.c: 143: writeRegisters();
  3980                           
  3981                           ;incstack = 0
  3982  001074  EC4F  F005         	call	_writeRegisters	;wreg free
  3983  001078  0012               	return		;funcret
  3984  00107A                     __end_of_Update:
  3985                           	opt stack 0
  3986                           tblptru	equ	0xFF8
  3987                           tblptrh	equ	0xFF7
  3988                           tblptrl	equ	0xFF6
  3989                           tablat	equ	0xFF5
  3990                           prodh	equ	0xFF4
  3991                           prodl	equ	0xFF3
  3992                           intcon	equ	0xFF2
  3993                           intcon2	equ	0xFF1
  3994                           postinc0	equ	0xFEE
  3995                           wreg	equ	0xFE8
  3996                           indf2	equ	0xFDF
  3997                           postinc2	equ	0xFDE
  3998                           postdec2	equ	0xFDD
  3999                           plusw2	equ	0xFDB
  4000                           fsr2h	equ	0xFDA
  4001                           fsr2l	equ	0xFD9
  4002                           status	equ	0xFD8
  4003                           
  4004 ;; *************** function _StartUp595 *****************
  4005 ;; Defined at:
  4006 ;;		line 10 in file "Shift595.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;		None
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;		None
  4011 ;; Return value:  Size  Location     Type
  4012 ;;		None               void
  4013 ;; Registers used:
  4014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4020 ;;      Params:         0       0       0       0       0       0       0
  4021 ;;      Locals:         0       0       0       0       0       0       0
  4022 ;;      Temps:          0       0       0       0       0       0       0
  4023 ;;      Totals:         0       0       0       0       0       0       0
  4024 ;;Total ram usage:        0 bytes
  4025 ;; Hardware stack levels used:    1
  4026 ;; Hardware stack levels required when called:    6
  4027 ;; This function calls:
  4028 ;;		_Clear595
  4029 ;;		_Delay
  4030 ;; This function is called by:
  4031 ;;		_PDUStartup
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           	psect	text27
  4036  000C4A                     __ptext27:
  4037                           	opt stack 0
  4038  000C4A                     _StartUp595:
  4039                           	opt stack 23
  4040                           
  4041                           ;incstack = 0
  4042                           ;Shift595.c: 12: do { LATD5 = 1; } while(0);
  4043  000C4A  8A8C               	bsf	3980,5,c	;volatile
  4044                           
  4045                           ;Shift595.c: 13: do { LATB0 = 1; } while(0);
  4046  000C4C  808A               	bsf	3978,0,c	;volatile
  4047                           
  4048                           ;Shift595.c: 15: Delay(2);
  4049  000C4E  0E02               	movlw	2
  4050  000C50  6E13               	movwf	Delay@wait,c
  4051  000C52  0E00               	movlw	0
  4052  000C54  6E14               	movwf	Delay@wait+1,c
  4053  000C56  0E00               	movlw	0
  4054  000C58  6E15               	movwf	Delay@wait+2,c
  4055  000C5A  0E00               	movlw	0
  4056  000C5C  6E16               	movwf	Delay@wait+3,c
  4057  000C5E  ECD0  F006         	call	_Delay	;wreg free
  4058                           
  4059                           ;Shift595.c: 16: do { LATD5 = 0; } while(0);
  4060  000C62  9A8C               	bcf	3980,5,c	;volatile
  4061                           
  4062                           ;Shift595.c: 17: Delay(2);
  4063  000C64  0E02               	movlw	2
  4064  000C66  6E13               	movwf	Delay@wait,c
  4065  000C68  0E00               	movlw	0
  4066  000C6A  6E14               	movwf	Delay@wait+1,c
  4067  000C6C  0E00               	movlw	0
  4068  000C6E  6E15               	movwf	Delay@wait+2,c
  4069  000C70  0E00               	movlw	0
  4070  000C72  6E16               	movwf	Delay@wait+3,c
  4071  000C74  ECD0  F006         	call	_Delay	;wreg free
  4072                           
  4073                           ;Shift595.c: 18: do { LATB0 = 0; } while(0);
  4074  000C78  908A               	bcf	3978,0,c	;volatile
  4075                           
  4076                           ;Shift595.c: 19: Delay(2);
  4077  000C7A  0E02               	movlw	2
  4078  000C7C  6E13               	movwf	Delay@wait,c
  4079  000C7E  0E00               	movlw	0
  4080  000C80  6E14               	movwf	Delay@wait+1,c
  4081  000C82  0E00               	movlw	0
  4082  000C84  6E15               	movwf	Delay@wait+2,c
  4083  000C86  0E00               	movlw	0
  4084  000C88  6E16               	movwf	Delay@wait+3,c
  4085  000C8A  ECD0  F006         	call	_Delay	;wreg free
  4086                           
  4087                           ;Shift595.c: 20: do { LATD5 = 1; } while(0);
  4088  000C8E  8A8C               	bsf	3980,5,c	;volatile
  4089                           
  4090                           ;Shift595.c: 21: Delay(2);
  4091  000C90  0E02               	movlw	2
  4092  000C92  6E13               	movwf	Delay@wait,c
  4093  000C94  0E00               	movlw	0
  4094  000C96  6E14               	movwf	Delay@wait+1,c
  4095  000C98  0E00               	movlw	0
  4096  000C9A  6E15               	movwf	Delay@wait+2,c
  4097  000C9C  0E00               	movlw	0
  4098  000C9E  6E16               	movwf	Delay@wait+3,c
  4099  000CA0  ECD0  F006         	call	_Delay	;wreg free
  4100                           
  4101                           ;Shift595.c: 22: do { LATB0 = 1; } while(0);
  4102  000CA4  808A               	bsf	3978,0,c	;volatile
  4103                           
  4104                           ;Shift595.c: 24: Clear595();
  4105  000CA6  EC9E  F007         	call	_Clear595	;wreg free
  4106  000CAA  0012               	return		;funcret
  4107  000CAC                     __end_of_StartUp595:
  4108                           	opt stack 0
  4109                           tblptru	equ	0xFF8
  4110                           tblptrh	equ	0xFF7
  4111                           tblptrl	equ	0xFF6
  4112                           tablat	equ	0xFF5
  4113                           prodh	equ	0xFF4
  4114                           prodl	equ	0xFF3
  4115                           intcon	equ	0xFF2
  4116                           intcon2	equ	0xFF1
  4117                           postinc0	equ	0xFEE
  4118                           wreg	equ	0xFE8
  4119                           indf2	equ	0xFDF
  4120                           postinc2	equ	0xFDE
  4121                           postdec2	equ	0xFDD
  4122                           plusw2	equ	0xFDB
  4123                           fsr2h	equ	0xFDA
  4124                           fsr2l	equ	0xFD9
  4125                           status	equ	0xFD8
  4126                           
  4127 ;; *************** function _Clear595 *****************
  4128 ;; Defined at:
  4129 ;;		line 39 in file "Shift595.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;		None
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;  i               2   32[COMRAM] int 
  4134 ;; Return value:  Size  Location     Type
  4135 ;;		None               void
  4136 ;; Registers used:
  4137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4138 ;; Tracked objects:
  4139 ;;		On entry : 0/0
  4140 ;;		On exit  : 0/0
  4141 ;;		Unchanged: 0/0
  4142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4143 ;;      Params:         0       0       0       0       0       0       0
  4144 ;;      Locals:         2       0       0       0       0       0       0
  4145 ;;      Temps:          0       0       0       0       0       0       0
  4146 ;;      Totals:         2       0       0       0       0       0       0
  4147 ;;Total ram usage:        2 bytes
  4148 ;; Hardware stack levels used:    1
  4149 ;; Hardware stack levels required when called:    5
  4150 ;; This function calls:
  4151 ;;		_writeRegisters
  4152 ;; This function is called by:
  4153 ;;		_StartUp595
  4154 ;; This function uses a non-reentrant model
  4155 ;;
  4156                           
  4157                           	psect	text28
  4158  000F3C                     __ptext28:
  4159                           	opt stack 0
  4160  000F3C                     _Clear595:
  4161                           	opt stack 23
  4162                           
  4163                           ;Shift595.c: 40: for (int i = 3 * 8 - 1; i >= 0; i--) {
  4164                           
  4165                           ;incstack = 0
  4166  000F3C  0E00               	movlw	0
  4167  000F3E  6E22               	movwf	Clear595@i+1,c
  4168  000F40  0E17               	movlw	23
  4169  000F42  6E21               	movwf	Clear595@i,c
  4170  000F44                     l2540:
  4171  000F44  BE22               	btfsc	Clear595@i+1,7,c
  4172  000F46  D00C               	goto	l2550
  4173                           
  4174                           ;Shift595.c: 41: registers[i] = 0;
  4175  000F48  0E88               	movlw	low _registers
  4176  000F4A  2421               	addwf	Clear595@i,w,c
  4177  000F4C  6ED9               	movwf	fsr2l,c
  4178  000F4E  0E00               	movlw	high _registers
  4179  000F50  2022               	addwfc	Clear595@i+1,w,c
  4180  000F52  6EDA               	movwf	fsr2h,c
  4181  000F54  0E00               	movlw	0
  4182  000F56  6EDF               	movwf	indf2,c
  4183  000F58  0621               	decf	Clear595@i,f,c
  4184  000F5A  A0D8               	btfss	status,0,c
  4185  000F5C  0622               	decf	Clear595@i+1,f,c
  4186  000F5E  D7F2               	goto	l2540
  4187  000F60                     l2550:
  4188                           
  4189                           ;Shift595.c: 42: }
  4190                           ;Shift595.c: 44: writeRegisters();
  4191  000F60  EC4F  F005         	call	_writeRegisters	;wreg free
  4192  000F64  0012               	return		;funcret
  4193  000F66                     __end_of_Clear595:
  4194                           	opt stack 0
  4195                           tblptru	equ	0xFF8
  4196                           tblptrh	equ	0xFF7
  4197                           tblptrl	equ	0xFF6
  4198                           tablat	equ	0xFF5
  4199                           prodh	equ	0xFF4
  4200                           prodl	equ	0xFF3
  4201                           intcon	equ	0xFF2
  4202                           intcon2	equ	0xFF1
  4203                           postinc0	equ	0xFEE
  4204                           wreg	equ	0xFE8
  4205                           indf2	equ	0xFDF
  4206                           postinc2	equ	0xFDE
  4207                           postdec2	equ	0xFDD
  4208                           plusw2	equ	0xFDB
  4209                           fsr2h	equ	0xFDA
  4210                           fsr2l	equ	0xFD9
  4211                           status	equ	0xFD8
  4212                           
  4213 ;; *************** function _writeRegisters *****************
  4214 ;; Defined at:
  4215 ;;		line 50 in file "Shift595.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;		None
  4218 ;; Auto vars:     Size  Location     Type
  4219 ;;  i               2   30[COMRAM] int 
  4220 ;;  val             2   28[COMRAM] int 
  4221 ;; Return value:  Size  Location     Type
  4222 ;;		None               void
  4223 ;; Registers used:
  4224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4225 ;; Tracked objects:
  4226 ;;		On entry : 0/0
  4227 ;;		On exit  : 0/0
  4228 ;;		Unchanged: 0/0
  4229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4230 ;;      Params:         0       0       0       0       0       0       0
  4231 ;;      Locals:         4       0       0       0       0       0       0
  4232 ;;      Temps:          1       0       0       0       0       0       0
  4233 ;;      Totals:         5       0       0       0       0       0       0
  4234 ;;Total ram usage:        5 bytes
  4235 ;; Hardware stack levels used:    1
  4236 ;; Hardware stack levels required when called:    4
  4237 ;; This function calls:
  4238 ;;		_Delay
  4239 ;; This function is called by:
  4240 ;;		_Update
  4241 ;;		_Clear595
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           	psect	text29
  4246  000A9E                     __ptext29:
  4247                           	opt stack 0
  4248  000A9E                     _writeRegisters:
  4249                           	opt stack 23
  4250                           
  4251                           ;Shift595.c: 51: int val = 0;
  4252                           
  4253                           ;incstack = 0
  4254  000A9E  0E00               	movlw	0
  4255  000AA0  6E1E               	movwf	writeRegisters@val+1,c
  4256  000AA2  0E00               	movlw	0
  4257  000AA4  6E1D               	movwf	writeRegisters@val,c
  4258                           
  4259                           ;Shift595.c: 52: for (int i = 3 * 8 - 1; i >= 0; i--) {
  4260  000AA6  0E00               	movlw	0
  4261  000AA8  6E20               	movwf	writeRegisters@i+1,c
  4262  000AAA  0E17               	movlw	23
  4263  000AAC  6E1F               	movwf	writeRegisters@i,c
  4264  000AAE                     l2436:
  4265  000AAE  BE20               	btfsc	writeRegisters@i+1,7,c
  4266  000AB0  D01B               	goto	l692
  4267                           
  4268                           ;Shift595.c: 53: do { LATD7 = 0; } while(0);
  4269  000AB2  9E8C               	bcf	3980,7,c	;volatile
  4270                           
  4271                           ;Shift595.c: 55: val = registers[i];
  4272  000AB4  0E88               	movlw	low _registers
  4273  000AB6  241F               	addwf	writeRegisters@i,w,c
  4274  000AB8  6ED9               	movwf	fsr2l,c
  4275  000ABA  0E00               	movlw	high _registers
  4276  000ABC  2020               	addwfc	writeRegisters@i+1,w,c
  4277  000ABE  6EDA               	movwf	fsr2h,c
  4278  000AC0  50DF               	movf	indf2,w,c
  4279  000AC2  6E1C               	movwf	??_writeRegisters& (0+255),c
  4280  000AC4  501C               	movf	??_writeRegisters,w,c
  4281  000AC6  6E1D               	movwf	writeRegisters@val,c
  4282  000AC8  6A1E               	clrf	writeRegisters@val+1,c
  4283                           
  4284                           ;Shift595.c: 56: if (val == 1) {
  4285  000ACA  041D               	decf	writeRegisters@val,w,c
  4286  000ACC  101E               	iorwf	writeRegisters@val+1,w,c
  4287  000ACE  A4D8               	btfss	status,2,c
  4288  000AD0  D002               	goto	l2444
  4289                           
  4290                           ;Shift595.c: 57: do { LATD4 = 1; } while(0);
  4291  000AD2  888C               	bsf	3980,4,c	;volatile
  4292                           
  4293                           ;Shift595.c: 58: } else if (val == 0) {
  4294  000AD4  D004               	goto	l690
  4295  000AD6                     l2444:
  4296  000AD6  501D               	movf	writeRegisters@val,w,c
  4297  000AD8  101E               	iorwf	writeRegisters@val+1,w,c
  4298  000ADA  B4D8               	btfsc	status,2,c
  4299                           
  4300                           ;Shift595.c: 59: do { LATD4 = 0; } while(0);
  4301  000ADC  988C               	bcf	3980,4,c	;volatile
  4302  000ADE                     l690:
  4303  000ADE  8E8C               	bsf	3980,7,c	;volatile
  4304  000AE0  061F               	decf	writeRegisters@i,f,c
  4305  000AE2  A0D8               	btfss	status,0,c
  4306  000AE4  0620               	decf	writeRegisters@i+1,f,c
  4307  000AE6  D7E3               	goto	l2436
  4308  000AE8                     l692:
  4309  000AE8  9E8C               	bcf	3980,7,c	;volatile
  4310                           
  4311                           ;Shift595.c: 67: Delay(1);
  4312  000AEA  0E01               	movlw	1
  4313  000AEC  6E13               	movwf	Delay@wait,c
  4314  000AEE  0E00               	movlw	0
  4315  000AF0  6E14               	movwf	Delay@wait+1,c
  4316  000AF2  0E00               	movlw	0
  4317  000AF4  6E15               	movwf	Delay@wait+2,c
  4318  000AF6  0E00               	movlw	0
  4319  000AF8  6E16               	movwf	Delay@wait+3,c
  4320  000AFA  ECD0  F006         	call	_Delay	;wreg free
  4321                           
  4322                           ;Shift595.c: 68: do { LATD6 = 1; } while(0);
  4323  000AFE  8C8C               	bsf	3980,6,c	;volatile
  4324                           
  4325                           ;Shift595.c: 69: Delay(1);
  4326  000B00  0E01               	movlw	1
  4327  000B02  6E13               	movwf	Delay@wait,c
  4328  000B04  0E00               	movlw	0
  4329  000B06  6E14               	movwf	Delay@wait+1,c
  4330  000B08  0E00               	movlw	0
  4331  000B0A  6E15               	movwf	Delay@wait+2,c
  4332  000B0C  0E00               	movlw	0
  4333  000B0E  6E16               	movwf	Delay@wait+3,c
  4334  000B10  ECD0  F006         	call	_Delay	;wreg free
  4335                           
  4336                           ;Shift595.c: 70: do { LATD6 = 0; } while(0);
  4337  000B14  9C8C               	bcf	3980,6,c	;volatile
  4338  000B16  0012               	return	
  4339  000B18                     __end_of_writeRegisters:
  4340                           	opt stack 0
  4341                           tblptru	equ	0xFF8
  4342                           tblptrh	equ	0xFF7
  4343                           tblptrl	equ	0xFF6
  4344                           tablat	equ	0xFF5
  4345                           prodh	equ	0xFF4
  4346                           prodl	equ	0xFF3
  4347                           intcon	equ	0xFF2
  4348                           intcon2	equ	0xFF1
  4349                           postinc0	equ	0xFEE
  4350                           wreg	equ	0xFE8
  4351                           indf2	equ	0xFDF
  4352                           postinc2	equ	0xFDE
  4353                           postdec2	equ	0xFDD
  4354                           plusw2	equ	0xFDB
  4355                           fsr2h	equ	0xFDA
  4356                           fsr2l	equ	0xFD9
  4357                           status	equ	0xFD8
  4358                           
  4359 ;; *************** function _Delay *****************
  4360 ;; Defined at:
  4361 ;;		line 9 in file "Functions.c"
  4362 ;; Parameters:    Size  Location     Type
  4363 ;;  wait            4   18[COMRAM] long 
  4364 ;; Auto vars:     Size  Location     Type
  4365 ;;  i               4   23[COMRAM] long 
  4366 ;; Return value:  Size  Location     Type
  4367 ;;		None               void
  4368 ;; Registers used:
  4369 ;;		wreg, status,2, status,0
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/0
  4372 ;;		On exit  : 0/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4375 ;;      Params:         4       0       0       0       0       0       0
  4376 ;;      Locals:         4       0       0       0       0       0       0
  4377 ;;      Temps:          1       0       0       0       0       0       0
  4378 ;;      Totals:         9       0       0       0       0       0       0
  4379 ;;Total ram usage:        9 bytes
  4380 ;; Hardware stack levels used:    1
  4381 ;; Hardware stack levels required when called:    3
  4382 ;; This function calls:
  4383 ;;		Nothing
  4384 ;; This function is called by:
  4385 ;;		_respondECU
  4386 ;;		_StartUp595
  4387 ;;		_writeRegisters
  4388 ;; This function uses a non-reentrant model
  4389 ;;
  4390                           
  4391                           	psect	text30
  4392  000DA0                     __ptext30:
  4393                           	opt stack 0
  4394  000DA0                     _Delay:
  4395                           	opt stack 25
  4396                           
  4397                           ;Functions.c: 10: long int i = 0;
  4398                           
  4399                           ;incstack = 0
  4400  000DA0  0E00               	movlw	0
  4401  000DA2  6E18               	movwf	Delay@i,c
  4402  000DA4  0E00               	movlw	0
  4403  000DA6  6E19               	movwf	Delay@i+1,c
  4404  000DA8  0E00               	movlw	0
  4405  000DAA  6E1A               	movwf	Delay@i+2,c
  4406  000DAC  0E00               	movlw	0
  4407  000DAE  6E1B               	movwf	Delay@i+3,c
  4408                           
  4409                           ;Functions.c: 11: for (; wait > i; i++) {
  4410  000DB0  D00E               	goto	l2324
  4411  000DB2                     l2320:
  4412                           
  4413                           ;Functions.c: 12: _delay((unsigned long)((1)*(16000000/4000.0)));
  4414  000DB2  0E06               	movlw	6
  4415  000DB4  6E17               	movwf	??_Delay& (0+255),c
  4416  000DB6  0E30               	movlw	48
  4417  000DB8                     u1967:
  4418  000DB8  2EE8               	decfsz	wreg,f,c
  4419  000DBA  D7FE               	goto	u1967
  4420  000DBC  2E17               	decfsz	??_Delay& (0+255),f,c
  4421  000DBE  D7FC               	goto	u1967
  4422  000DC0  D000               	nop2	
  4423  000DC2  0E01               	movlw	1
  4424  000DC4  2618               	addwf	Delay@i,f,c
  4425  000DC6  0E00               	movlw	0
  4426  000DC8  2219               	addwfc	Delay@i+1,f,c
  4427  000DCA  221A               	addwfc	Delay@i+2,f,c
  4428  000DCC  221B               	addwfc	Delay@i+3,f,c
  4429  000DCE                     l2324:
  4430  000DCE  5013               	movf	Delay@wait,w,c
  4431  000DD0  5C18               	subwf	Delay@i,w,c
  4432  000DD2  5014               	movf	Delay@wait+1,w,c
  4433  000DD4  5819               	subwfb	Delay@i+1,w,c
  4434  000DD6  5015               	movf	Delay@wait+2,w,c
  4435  000DD8  581A               	subwfb	Delay@i+2,w,c
  4436  000DDA  501B               	movf	Delay@i+3,w,c
  4437  000DDC  0A80               	xorlw	128
  4438  000DDE  6E17               	movwf	??_Delay& (0+255),c
  4439  000DE0  5016               	movf	Delay@wait+3,w,c
  4440  000DE2  0A80               	xorlw	128
  4441  000DE4  5817               	subwfb	??_Delay& (0+255),w,c
  4442  000DE6  B0D8               	btfsc	status,0,c
  4443  000DE8  0012               	return	
  4444  000DEA  D7E3               	goto	l2320
  4445  000DEC                     __end_of_Delay:
  4446                           	opt stack 0
  4447                           tblptru	equ	0xFF8
  4448                           tblptrh	equ	0xFF7
  4449                           tblptrl	equ	0xFF6
  4450                           tablat	equ	0xFF5
  4451                           prodh	equ	0xFF4
  4452                           prodl	equ	0xFF3
  4453                           intcon	equ	0xFF2
  4454                           intcon2	equ	0xFF1
  4455                           postinc0	equ	0xFEE
  4456                           wreg	equ	0xFE8
  4457                           indf2	equ	0xFDF
  4458                           postinc2	equ	0xFDE
  4459                           postdec2	equ	0xFDD
  4460                           plusw2	equ	0xFDB
  4461                           fsr2h	equ	0xFDA
  4462                           fsr2l	equ	0xFD9
  4463                           status	equ	0xFD8
  4464                           
  4465 ;; *************** function _EnableSlavePower *****************
  4466 ;; Defined at:
  4467 ;;		line 32 in file "PDU.c"
  4468 ;; Parameters:    Size  Location     Type
  4469 ;;  slave           1    wreg     enum E5
  4470 ;;  onof            2   25[COMRAM] int 
  4471 ;; Auto vars:     Size  Location     Type
  4472 ;;  slave           1   27[COMRAM] enum E5
  4473 ;; Return value:  Size  Location     Type
  4474 ;;		None               void
  4475 ;; Registers used:
  4476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4477 ;; Tracked objects:
  4478 ;;		On entry : 0/0
  4479 ;;		On exit  : 0/0
  4480 ;;		Unchanged: 0/0
  4481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4482 ;;      Params:         2       0       0       0       0       0       0
  4483 ;;      Locals:         1       0       0       0       0       0       0
  4484 ;;      Temps:          0       0       0       0       0       0       0
  4485 ;;      Totals:         3       0       0       0       0       0       0
  4486 ;;Total ram usage:        3 bytes
  4487 ;; Hardware stack levels used:    1
  4488 ;; Hardware stack levels required when called:    4
  4489 ;; This function calls:
  4490 ;;		_SetPin595
  4491 ;; This function is called by:
  4492 ;;		_processPowerRequest
  4493 ;;		_PDUStartup
  4494 ;;		_FuseSystem
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           
  4498                           	psect	text31
  4499  00098A                     __ptext31:
  4500                           	opt stack 0
  4501  00098A                     _EnableSlavePower:
  4502                           	opt stack 24
  4503                           
  4504                           ;incstack = 0
  4505                           ;EnableSlavePower@slave stored from wreg
  4506  00098A  6E1C               	movwf	EnableSlavePower@slave,c
  4507                           
  4508                           ;PDU.c: 33: switch (slave) {
  4509  00098C  D030               	goto	l2488
  4510  00098E                     l2474:
  4511                           
  4512                           ;PDU.c: 35: SetPin595(2, 1, onof);
  4513  00098E  0E01               	movlw	1
  4514  000990  6E13               	movwf	SetPin595@pin,c
  4515  000992  C01A  F014         	movff	EnableSlavePower@onof,SetPin595@value
  4516  000996  0E02               	movlw	2
  4517  000998  EC1B  F007         	call	_SetPin595
  4518                           
  4519                           ;PDU.c: 36: break;
  4520  00099C  0012               	return	
  4521  00099E                     l2476:
  4522                           
  4523                           ;PDU.c: 38: SetPin595(1, 1, onof);
  4524  00099E  0E01               	movlw	1
  4525  0009A0  6E13               	movwf	SetPin595@pin,c
  4526  0009A2  C01A  F014         	movff	EnableSlavePower@onof,SetPin595@value
  4527  0009A6  0E01               	movlw	1
  4528  0009A8  EC1B  F007         	call	_SetPin595
  4529                           
  4530                           ;PDU.c: 39: break;
  4531  0009AC  0012               	return	
  4532  0009AE                     l2478:
  4533                           
  4534                           ;PDU.c: 41: SetPin595(1, 6, onof);
  4535  0009AE  0E06               	movlw	6
  4536  0009B0  6E13               	movwf	SetPin595@pin,c
  4537  0009B2  C01A  F014         	movff	EnableSlavePower@onof,SetPin595@value
  4538  0009B6  0E01               	movlw	1
  4539  0009B8  EC1B  F007         	call	_SetPin595
  4540                           
  4541                           ;PDU.c: 42: break;
  4542  0009BC  0012               	return	
  4543  0009BE                     l2480:
  4544                           
  4545                           ;PDU.c: 44: SetPin595(2, 6, onof);
  4546  0009BE  0E06               	movlw	6
  4547  0009C0  6E13               	movwf	SetPin595@pin,c
  4548  0009C2  C01A  F014         	movff	EnableSlavePower@onof,SetPin595@value
  4549  0009C6  0E02               	movlw	2
  4550  0009C8  EC1B  F007         	call	_SetPin595
  4551                           
  4552                           ;PDU.c: 45: break;
  4553  0009CC  0012               	return	
  4554  0009CE                     l2482:
  4555                           
  4556                           ;PDU.c: 47: SetPin595(3, 6, onof);
  4557  0009CE  0E06               	movlw	6
  4558  0009D0  6E13               	movwf	SetPin595@pin,c
  4559  0009D2  C01A  F014         	movff	EnableSlavePower@onof,SetPin595@value
  4560  0009D6  0E03               	movlw	3
  4561  0009D8  EC1B  F007         	call	_SetPin595
  4562                           
  4563                           ;PDU.c: 48: break;
  4564  0009DC  0012               	return	
  4565  0009DE                     l2484:
  4566                           
  4567                           ;PDU.c: 50: SetPin595(3, 1, onof);
  4568  0009DE  0E01               	movlw	1
  4569  0009E0  6E13               	movwf	SetPin595@pin,c
  4570  0009E2  C01A  F014         	movff	EnableSlavePower@onof,SetPin595@value
  4571  0009E6  0E03               	movlw	3
  4572  0009E8  EC1B  F007         	call	_SetPin595
  4573                           
  4574                           ;PDU.c: 52: }
  4575                           
  4576                           ;PDU.c: 51: break;
  4577  0009EC  0012               	return	
  4578  0009EE                     l2488:
  4579  0009EE  501C               	movf	EnableSlavePower@slave,w,c
  4580                           
  4581                           ; Switch size 1, requested type "space"
  4582                           ; Number of cases is 6, Range of values is 1 to 6
  4583                           ; switch strategies available:
  4584                           ; Name         Instructions Cycles
  4585                           ; simple_byte           19    10 (average)
  4586                           ;	Chosen strategy is simple_byte
  4587  0009F0  0A01               	xorlw	1	; case 1
  4588  0009F2  B4D8               	btfsc	status,2,c
  4589  0009F4  D7E4               	goto	l2480
  4590  0009F6  0A03               	xorlw	3	; case 2
  4591  0009F8  B4D8               	btfsc	status,2,c
  4592  0009FA  D7D9               	goto	l2478
  4593  0009FC  0A01               	xorlw	1	; case 3
  4594  0009FE  B4D8               	btfsc	status,2,c
  4595  000A00  D7C6               	goto	l2474
  4596  000A02  0A07               	xorlw	7	; case 4
  4597  000A04  B4D8               	btfsc	status,2,c
  4598  000A06  D7CB               	goto	l2476
  4599  000A08  0A01               	xorlw	1	; case 5
  4600  000A0A  B4D8               	btfsc	status,2,c
  4601  000A0C  D7E0               	goto	l2482
  4602  000A0E  0A03               	xorlw	3	; case 6
  4603  000A10  A4D8               	btfss	status,2,c
  4604  000A12  0012               	return	
  4605  000A14  D7E4               	goto	l2484
  4606  000A16                     __end_of_EnableSlavePower:
  4607                           	opt stack 0
  4608                           tblptru	equ	0xFF8
  4609                           tblptrh	equ	0xFF7
  4610                           tblptrl	equ	0xFF6
  4611                           tablat	equ	0xFF5
  4612                           prodh	equ	0xFF4
  4613                           prodl	equ	0xFF3
  4614                           intcon	equ	0xFF2
  4615                           intcon2	equ	0xFF1
  4616                           postinc0	equ	0xFEE
  4617                           wreg	equ	0xFE8
  4618                           indf2	equ	0xFDF
  4619                           postinc2	equ	0xFDE
  4620                           postdec2	equ	0xFDD
  4621                           plusw2	equ	0xFDB
  4622                           fsr2h	equ	0xFDA
  4623                           fsr2l	equ	0xFD9
  4624                           status	equ	0xFD8
  4625                           
  4626 ;; *************** function _SetPin595 *****************
  4627 ;; Defined at:
  4628 ;;		line 32 in file "Shift595.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;  Reg             1    wreg     unsigned char 
  4631 ;;  pin             1   18[COMRAM] unsigned char 
  4632 ;;  value           1   19[COMRAM] unsigned char 
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;  Reg             1   24[COMRAM] unsigned char 
  4635 ;; Return value:  Size  Location     Type
  4636 ;;		None               void
  4637 ;; Registers used:
  4638 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/0
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4644 ;;      Params:         2       0       0       0       0       0       0
  4645 ;;      Locals:         1       0       0       0       0       0       0
  4646 ;;      Temps:          4       0       0       0       0       0       0
  4647 ;;      Totals:         7       0       0       0       0       0       0
  4648 ;;Total ram usage:        7 bytes
  4649 ;; Hardware stack levels used:    1
  4650 ;; Hardware stack levels required when called:    3
  4651 ;; This function calls:
  4652 ;;		Nothing
  4653 ;; This function is called by:
  4654 ;;		_EnableSlavePower
  4655 ;;		_ReadCurrent
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text32
  4660  000E36                     __ptext32:
  4661                           	opt stack 0
  4662  000E36                     _SetPin595:
  4663                           	opt stack 24
  4664                           
  4665                           ;incstack = 0
  4666                           ;SetPin595@Reg stored from wreg
  4667  000E36  6E19               	movwf	SetPin595@Reg,c
  4668                           
  4669                           ;Shift595.c: 33: registers[((Reg - 1)*8) + pin] = value;
  4670  000E38  0EF8               	movlw	248
  4671  000E3A  6E15               	movwf	??_SetPin595& (0+255),c
  4672  000E3C  0EFF               	movlw	255
  4673  000E3E  6E16               	movwf	(??_SetPin595+1)& (0+255),c
  4674  000E40  5013               	movf	SetPin595@pin,w,c
  4675  000E42  C019  F017         	movff	SetPin595@Reg,??_SetPin595+2
  4676  000E46  6A18               	clrf	(??_SetPin595+3)& (0+255),c
  4677  000E48  90D8               	bcf	status,0,c
  4678  000E4A  3617               	rlcf	??_SetPin595+2,f,c
  4679  000E4C  3618               	rlcf	??_SetPin595+3,f,c
  4680  000E4E  90D8               	bcf	status,0,c
  4681  000E50  3617               	rlcf	??_SetPin595+2,f,c
  4682  000E52  3618               	rlcf	??_SetPin595+3,f,c
  4683  000E54  90D8               	bcf	status,0,c
  4684  000E56  3617               	rlcf	??_SetPin595+2,f,c
  4685  000E58  3618               	rlcf	??_SetPin595+3,f,c
  4686  000E5A  2617               	addwf	??_SetPin595+2,f,c
  4687  000E5C  0E00               	movlw	0
  4688  000E5E  2218               	addwfc	??_SetPin595+3,f,c
  4689  000E60  5015               	movf	??_SetPin595,w,c
  4690  000E62  2617               	addwf	??_SetPin595+2,f,c
  4691  000E64  5016               	movf	??_SetPin595+1,w,c
  4692  000E66  2218               	addwfc	??_SetPin595+3,f,c
  4693  000E68  0E88               	movlw	low _registers
  4694  000E6A  2417               	addwf	??_SetPin595+2,w,c
  4695  000E6C  6ED9               	movwf	fsr2l,c
  4696  000E6E  0E00               	movlw	high _registers
  4697  000E70  2018               	addwfc	??_SetPin595+3,w,c
  4698  000E72  6EDA               	movwf	fsr2h,c
  4699  000E74  C014  FFDF         	movff	SetPin595@value,indf2
  4700  000E78  0012               	return		;funcret
  4701  000E7A                     __end_of_SetPin595:
  4702                           	opt stack 0
  4703                           tblptru	equ	0xFF8
  4704                           tblptrh	equ	0xFF7
  4705                           tblptrl	equ	0xFF6
  4706                           tablat	equ	0xFF5
  4707                           prodh	equ	0xFF4
  4708                           prodl	equ	0xFF3
  4709                           intcon	equ	0xFF2
  4710                           intcon2	equ	0xFF1
  4711                           postinc0	equ	0xFEE
  4712                           wreg	equ	0xFE8
  4713                           indf2	equ	0xFDF
  4714                           postinc2	equ	0xFDE
  4715                           postdec2	equ	0xFDD
  4716                           plusw2	equ	0xFDB
  4717                           fsr2h	equ	0xFDA
  4718                           fsr2l	equ	0xFD9
  4719                           status	equ	0xFD8
  4720                           
  4721 ;; *************** function _ComputeStorageData *****************
  4722 ;; Defined at:
  4723 ;;		line 94 in file "PDU.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;		None
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;  i               2   21[COMRAM] int 
  4728 ;; Return value:  Size  Location     Type
  4729 ;;		None               void
  4730 ;; Registers used:
  4731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4737 ;;      Params:         0       0       0       0       0       0       0
  4738 ;;      Locals:         2       0       0       0       0       0       0
  4739 ;;      Temps:          2       0       0       0       0       0       0
  4740 ;;      Totals:         4       0       0       0       0       0       0
  4741 ;;Total ram usage:        4 bytes
  4742 ;; Hardware stack levels used:    1
  4743 ;; Hardware stack levels required when called:    4
  4744 ;; This function calls:
  4745 ;;		_DATAEE_ReadByte
  4746 ;; This function is called by:
  4747 ;;		_PDUStartup
  4748 ;; This function uses a non-reentrant model
  4749 ;;
  4750                           
  4751                           	psect	text33
  4752  000582                     __ptext33:
  4753                           	opt stack 0
  4754  000582                     _ComputeStorageData:
  4755                           	opt stack 25
  4756                           
  4757                           ;PDU.c: 95: for (int i = 0; i < 12; i++) {
  4758                           
  4759                           ;incstack = 0
  4760  000582  0E00               	movlw	0
  4761  000584  6E17               	movwf	ComputeStorageData@i+1,c
  4762  000586  0E00               	movlw	0
  4763  000588  6E16               	movwf	ComputeStorageData@i,c
  4764  00058A                     l2760:
  4765  00058A  BE17               	btfsc	ComputeStorageData@i+1,7,c
  4766  00058C  D006               	goto	l2764
  4767  00058E  5017               	movf	ComputeStorageData@i+1,w,c
  4768  000590  E111               	bnz	l2770
  4769  000592  0E0C               	movlw	12
  4770  000594  5C16               	subwf	ComputeStorageData@i,w,c
  4771  000596  B0D8               	btfsc	status,0,c
  4772  000598  D00D               	goto	l2770
  4773  00059A                     l2764:
  4774                           
  4775                           ;PDU.c: 96: data[i] = DATAEE_ReadByte(i);
  4776  00059A  0EC4               	movlw	low _data
  4777  00059C  2416               	addwf	ComputeStorageData@i,w,c
  4778  00059E  6ED9               	movwf	fsr2l,c
  4779  0005A0  0E00               	movlw	high _data
  4780  0005A2  2017               	addwfc	ComputeStorageData@i+1,w,c
  4781  0005A4  6EDA               	movwf	fsr2h,c
  4782  0005A6  5016               	movf	ComputeStorageData@i,w,c
  4783  0005A8  EC1C  F008         	call	_DATAEE_ReadByte
  4784  0005AC  6EDF               	movwf	indf2,c
  4785  0005AE  4A16               	infsnz	ComputeStorageData@i,f,c
  4786  0005B0  2A17               	incf	ComputeStorageData@i+1,f,c
  4787  0005B2  D7EB               	goto	l2760
  4788  0005B4                     l2770:
  4789                           
  4790                           ;PDU.c: 97: }
  4791                           ;PDU.c: 98: Currentcomp[0] = ((data[0] << 8) | data[1]);
  4792  0005B4  0100               	movlb	0	; () banked
  4793  0005B6  51C5               	movf	(_data+1)& (0+255),w,b
  4794  0005B8  C0C4  F014         	movff	_data,??_ComputeStorageData
  4795  0005BC  6A15               	clrf	(??_ComputeStorageData+1)& (0+255),c
  4796  0005BE  C014  F015         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  4797  0005C2  6A14               	clrf	??_ComputeStorageData,c
  4798  0005C4  1014               	iorwf	??_ComputeStorageData,w,c
  4799  0005C6  0100               	movlb	0	; () banked
  4800  0005C8  6FB8               	movwf	_Currentcomp& (0+255),b
  4801  0005CA  5015               	movf	??_ComputeStorageData+1,w,c
  4802  0005CC  0100               	movlb	0	; () banked
  4803  0005CE  6FB9               	movwf	(_Currentcomp+1)& (0+255),b
  4804                           
  4805                           ;PDU.c: 99: Currentcomp[1] = ((data[2] << 8) | data[3]);
  4806  0005D0  0100               	movlb	0	; () banked
  4807  0005D2  51C7               	movf	(_data+3)& (0+255),w,b
  4808  0005D4  C0C6  F014         	movff	_data+2,??_ComputeStorageData
  4809  0005D8  6A15               	clrf	(??_ComputeStorageData+1)& (0+255),c
  4810  0005DA  C014  F015         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  4811  0005DE  6A14               	clrf	??_ComputeStorageData,c
  4812  0005E0  1014               	iorwf	??_ComputeStorageData,w,c
  4813  0005E2  0100               	movlb	0	; () banked
  4814  0005E4  6FBA               	movwf	(_Currentcomp+2)& (0+255),b
  4815  0005E6  5015               	movf	??_ComputeStorageData+1,w,c
  4816  0005E8  0100               	movlb	0	; () banked
  4817  0005EA  6FBB               	movwf	(_Currentcomp+3)& (0+255),b
  4818                           
  4819                           ;PDU.c: 100: Currentcomp[2] = ((data[4] << 8) | data[5]);
  4820  0005EC  0100               	movlb	0	; () banked
  4821  0005EE  51C9               	movf	(_data+5)& (0+255),w,b
  4822  0005F0  C0C8  F014         	movff	_data+4,??_ComputeStorageData
  4823  0005F4  6A15               	clrf	(??_ComputeStorageData+1)& (0+255),c
  4824  0005F6  C014  F015         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  4825  0005FA  6A14               	clrf	??_ComputeStorageData,c
  4826  0005FC  1014               	iorwf	??_ComputeStorageData,w,c
  4827  0005FE  0100               	movlb	0	; () banked
  4828  000600  6FBC               	movwf	(_Currentcomp+4)& (0+255),b
  4829  000602  5015               	movf	??_ComputeStorageData+1,w,c
  4830  000604  0100               	movlb	0	; () banked
  4831  000606  6FBD               	movwf	(_Currentcomp+5)& (0+255),b
  4832                           
  4833                           ;PDU.c: 101: Currentcomp[3] = ((data[6] << 8) | data[7]);
  4834  000608  0100               	movlb	0	; () banked
  4835  00060A  51CB               	movf	(_data+7)& (0+255),w,b
  4836  00060C  C0CA  F014         	movff	_data+6,??_ComputeStorageData
  4837  000610  6A15               	clrf	(??_ComputeStorageData+1)& (0+255),c
  4838  000612  C014  F015         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  4839  000616  6A14               	clrf	??_ComputeStorageData,c
  4840  000618  1014               	iorwf	??_ComputeStorageData,w,c
  4841  00061A  0100               	movlb	0	; () banked
  4842  00061C  6FBE               	movwf	(_Currentcomp+6)& (0+255),b
  4843  00061E  5015               	movf	??_ComputeStorageData+1,w,c
  4844  000620  0100               	movlb	0	; () banked
  4845  000622  6FBF               	movwf	(_Currentcomp+7)& (0+255),b
  4846                           
  4847                           ;PDU.c: 102: Currentcomp[4] = ((data[8] << 8) | data[9]);
  4848  000624  0100               	movlb	0	; () banked
  4849  000626  51CD               	movf	(_data+9)& (0+255),w,b
  4850  000628  C0CC  F014         	movff	_data+8,??_ComputeStorageData
  4851  00062C  6A15               	clrf	(??_ComputeStorageData+1)& (0+255),c
  4852  00062E  C014  F015         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  4853  000632  6A14               	clrf	??_ComputeStorageData,c
  4854  000634  1014               	iorwf	??_ComputeStorageData,w,c
  4855  000636  0100               	movlb	0	; () banked
  4856  000638  6FC0               	movwf	(_Currentcomp+8)& (0+255),b
  4857  00063A  5015               	movf	??_ComputeStorageData+1,w,c
  4858  00063C  0100               	movlb	0	; () banked
  4859  00063E  6FC1               	movwf	(_Currentcomp+9)& (0+255),b
  4860                           
  4861                           ;PDU.c: 103: Currentcomp[5] = ((data[10] << 8) | data[11]);
  4862  000640  0100               	movlb	0	; () banked
  4863  000642  51CF               	movf	(_data+11)& (0+255),w,b
  4864  000644  C0CE  F014         	movff	_data+10,??_ComputeStorageData
  4865  000648  6A15               	clrf	(??_ComputeStorageData+1)& (0+255),c
  4866  00064A  C014  F015         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  4867  00064E  6A14               	clrf	??_ComputeStorageData,c
  4868  000650  1014               	iorwf	??_ComputeStorageData,w,c
  4869  000652  0100               	movlb	0	; () banked
  4870  000654  6FC2               	movwf	(_Currentcomp+10)& (0+255),b
  4871  000656  5015               	movf	??_ComputeStorageData+1,w,c
  4872  000658  0100               	movlb	0	; () banked
  4873  00065A  6FC3               	movwf	(_Currentcomp+11)& (0+255),b
  4874                           
  4875                           ; BSR set to: 0
  4876  00065C  0012               	return		;funcret
  4877  00065E                     __end_of_ComputeStorageData:
  4878                           	opt stack 0
  4879                           tblptru	equ	0xFF8
  4880                           tblptrh	equ	0xFF7
  4881                           tblptrl	equ	0xFF6
  4882                           tablat	equ	0xFF5
  4883                           prodh	equ	0xFF4
  4884                           prodl	equ	0xFF3
  4885                           intcon	equ	0xFF2
  4886                           intcon2	equ	0xFF1
  4887                           postinc0	equ	0xFEE
  4888                           wreg	equ	0xFE8
  4889                           indf2	equ	0xFDF
  4890                           postinc2	equ	0xFDE
  4891                           postdec2	equ	0xFDD
  4892                           plusw2	equ	0xFDB
  4893                           fsr2h	equ	0xFDA
  4894                           fsr2l	equ	0xFD9
  4895                           status	equ	0xFD8
  4896                           
  4897 ;; *************** function _DATAEE_ReadByte *****************
  4898 ;; Defined at:
  4899 ;;		line 189 in file "mcc_generated_files/memory.c"
  4900 ;; Parameters:    Size  Location     Type
  4901 ;;  bAdd            1    wreg     unsigned char 
  4902 ;; Auto vars:     Size  Location     Type
  4903 ;;  bAdd            1   18[COMRAM] unsigned char 
  4904 ;; Return value:  Size  Location     Type
  4905 ;;                  1    wreg      unsigned char 
  4906 ;; Registers used:
  4907 ;;		wreg, status,2
  4908 ;; Tracked objects:
  4909 ;;		On entry : 0/0
  4910 ;;		On exit  : 0/0
  4911 ;;		Unchanged: 0/0
  4912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4913 ;;      Params:         0       0       0       0       0       0       0
  4914 ;;      Locals:         1       0       0       0       0       0       0
  4915 ;;      Temps:          0       0       0       0       0       0       0
  4916 ;;      Totals:         1       0       0       0       0       0       0
  4917 ;;Total ram usage:        1 bytes
  4918 ;; Hardware stack levels used:    1
  4919 ;; Hardware stack levels required when called:    3
  4920 ;; This function calls:
  4921 ;;		Nothing
  4922 ;; This function is called by:
  4923 ;;		_ComputeStorageData
  4924 ;; This function uses a non-reentrant model
  4925 ;;
  4926                           
  4927                           	psect	text34
  4928  001038                     __ptext34:
  4929                           	opt stack 0
  4930  001038                     _DATAEE_ReadByte:
  4931                           	opt stack 25
  4932                           
  4933                           ; BSR set to: 0
  4934                           ;incstack = 0
  4935                           ;DATAEE_ReadByte@bAdd stored from wreg
  4936  001038  6E13               	movwf	DATAEE_ReadByte@bAdd,c
  4937                           
  4938                           ;memory.c: 191: EEADR = (bAdd & 0xFF);
  4939  00103A  C013  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
  4940                           
  4941                           ;memory.c: 192: EECON1bits.CFGS = 0;
  4942  00103E  9CA6               	bcf	4006,6,c	;volatile
  4943                           
  4944                           ;memory.c: 193: EECON1bits.EEPGD = 0;
  4945  001040  9EA6               	bcf	4006,7,c	;volatile
  4946                           
  4947                           ;memory.c: 194: EECON1bits.RD = 1;
  4948  001042  80A6               	bsf	4006,0,c	;volatile
  4949                           
  4950                           ;memory.c: 195: __nop();
  4951  001044  F000               	nop	
  4952                           
  4953                           ;memory.c: 196: __nop();
  4954  001046  F000               	nop	
  4955                           
  4956                           ;memory.c: 198: return (EEDATA);
  4957  001048  50A8               	movf	4008,w,c	;volatile
  4958  00104A  0012               	return	
  4959  00104C                     __end_of_DATAEE_ReadByte:
  4960                           	opt stack 0
  4961                           tblptru	equ	0xFF8
  4962                           tblptrh	equ	0xFF7
  4963                           tblptrl	equ	0xFF6
  4964                           tablat	equ	0xFF5
  4965                           prodh	equ	0xFF4
  4966                           prodl	equ	0xFF3
  4967                           intcon	equ	0xFF2
  4968                           intcon2	equ	0xFF1
  4969                           postinc0	equ	0xFEE
  4970                           wreg	equ	0xFE8
  4971                           indf2	equ	0xFDF
  4972                           postinc2	equ	0xFDE
  4973                           postdec2	equ	0xFDD
  4974                           plusw2	equ	0xFDB
  4975                           fsr2h	equ	0xFDA
  4976                           fsr2l	equ	0xFD9
  4977                           status	equ	0xFD8
  4978                           
  4979 ;; *************** function _CoolingStart *****************
  4980 ;; Defined at:
  4981 ;;		line 19 in file "CoolingControl.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;		None
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;		None
  4986 ;; Return value:  Size  Location     Type
  4987 ;;		None               void
  4988 ;; Registers used:
  4989 ;;		wreg, status,2, status,0, cstack
  4990 ;; Tracked objects:
  4991 ;;		On entry : 0/0
  4992 ;;		On exit  : 0/0
  4993 ;;		Unchanged: 0/0
  4994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4995 ;;      Params:         0       0       0       0       0       0       0
  4996 ;;      Locals:         0       0       0       0       0       0       0
  4997 ;;      Temps:          0       0       0       0       0       0       0
  4998 ;;      Totals:         0       0       0       0       0       0       0
  4999 ;;Total ram usage:        0 bytes
  5000 ;; Hardware stack levels used:    1
  5001 ;; Hardware stack levels required when called:    4
  5002 ;; This function calls:
  5003 ;;		_PWM4_LoadDutyValue
  5004 ;;		_PotSetpoint
  5005 ;; This function is called by:
  5006 ;;		_main
  5007 ;; This function uses a non-reentrant model
  5008 ;;
  5009                           
  5010                           	psect	text35
  5011  000FD8                     __ptext35:
  5012                           	opt stack 0
  5013  000FD8                     _CoolingStart:
  5014                           	opt stack 26
  5015                           
  5016                           ;CoolingControl.c: 20: PotSetpoint(40);
  5017                           
  5018                           ;incstack = 0
  5019  000FD8  0E00               	movlw	0
  5020  000FDA  6E14               	movwf	PotSetpoint@new_point+1,c
  5021  000FDC  0E28               	movlw	40
  5022  000FDE  6E13               	movwf	PotSetpoint@new_point,c
  5023  000FE0  EC06  F004         	call	_PotSetpoint	;wreg free
  5024                           
  5025                           ;CoolingControl.c: 21: PWM4_LoadDutyValue(20);
  5026  000FE4  0E00               	movlw	0
  5027  000FE6  6E14               	movwf	PWM4_LoadDutyValue@dutyValue+1,c
  5028  000FE8  0E14               	movlw	20
  5029  000FEA  6E13               	movwf	PWM4_LoadDutyValue@dutyValue,c
  5030  000FEC  EC58  F007         	call	_PWM4_LoadDutyValue	;wreg free
  5031  000FF0  0012               	return		;funcret
  5032  000FF2                     __end_of_CoolingStart:
  5033                           	opt stack 0
  5034                           tblptru	equ	0xFF8
  5035                           tblptrh	equ	0xFF7
  5036                           tblptrl	equ	0xFF6
  5037                           tablat	equ	0xFF5
  5038                           prodh	equ	0xFF4
  5039                           prodl	equ	0xFF3
  5040                           intcon	equ	0xFF2
  5041                           intcon2	equ	0xFF1
  5042                           postinc0	equ	0xFEE
  5043                           wreg	equ	0xFE8
  5044                           indf2	equ	0xFDF
  5045                           postinc2	equ	0xFDE
  5046                           postdec2	equ	0xFDD
  5047                           plusw2	equ	0xFDB
  5048                           fsr2h	equ	0xFDA
  5049                           fsr2l	equ	0xFD9
  5050                           status	equ	0xFD8
  5051                           
  5052 ;; *************** function _PotSetpoint *****************
  5053 ;; Defined at:
  5054 ;;		line 20 in file "DigiPot.c"
  5055 ;; Parameters:    Size  Location     Type
  5056 ;;  new_point       2   18[COMRAM] int 
  5057 ;; Auto vars:     Size  Location     Type
  5058 ;;  new_pos         2   26[COMRAM] int 
  5059 ;;  x               2   24[COMRAM] int 
  5060 ;;  set_point       2   22[COMRAM] int 
  5061 ;; Return value:  Size  Location     Type
  5062 ;;		None               void
  5063 ;; Registers used:
  5064 ;;		wreg, status,2, status,0
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5070 ;;      Params:         2       0       0       0       0       0       0
  5071 ;;      Locals:         6       0       0       0       0       0       0
  5072 ;;      Temps:          2       0       0       0       0       0       0
  5073 ;;      Totals:        10       0       0       0       0       0       0
  5074 ;;Total ram usage:       10 bytes
  5075 ;; Hardware stack levels used:    1
  5076 ;; Hardware stack levels required when called:    3
  5077 ;; This function calls:
  5078 ;;		Nothing
  5079 ;; This function is called by:
  5080 ;;		_CoolingStart
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           	psect	text36
  5085  00080C                     __ptext36:
  5086                           	opt stack 0
  5087  00080C                     _PotSetpoint:
  5088                           	opt stack 26
  5089                           
  5090                           ;DigiPot.c: 21: int set_point;
  5091                           ;DigiPot.c: 23: if (new_point > 32) {
  5092                           
  5093                           ;incstack = 0
  5094  00080C  BE14               	btfsc	PotSetpoint@new_point+1,7,c
  5095  00080E  D00A               	goto	l2722
  5096  000810  5014               	movf	PotSetpoint@new_point+1,w,c
  5097  000812  E104               	bnz	u1340
  5098  000814  0E21               	movlw	33
  5099  000816  5C13               	subwf	PotSetpoint@new_point,w,c
  5100  000818  A0D8               	btfss	status,0,c
  5101  00081A  D004               	goto	l2722
  5102  00081C                     u1340:
  5103                           
  5104                           ;DigiPot.c: 24: new_point = 32;
  5105  00081C  0E00               	movlw	0
  5106  00081E  6E14               	movwf	PotSetpoint@new_point+1,c
  5107  000820  0E20               	movlw	32
  5108  000822  6E13               	movwf	PotSetpoint@new_point,c
  5109  000824                     l2722:
  5110                           
  5111                           ;DigiPot.c: 25: }
  5112                           ;DigiPot.c: 26: if (new_point <= 0) {
  5113  000824  BE14               	btfsc	PotSetpoint@new_point+1,7,c
  5114  000826  D005               	goto	l2724
  5115  000828  5014               	movf	PotSetpoint@new_point+1,w,c
  5116  00082A  E107               	bnz	l2726
  5117  00082C  0413               	decf	PotSetpoint@new_point,w,c
  5118  00082E  B0D8               	btfsc	status,0,c
  5119  000830  D004               	goto	l2726
  5120  000832                     l2724:
  5121                           
  5122                           ;DigiPot.c: 27: new_point = 0;
  5123  000832  0E00               	movlw	0
  5124  000834  6E14               	movwf	PotSetpoint@new_point+1,c
  5125  000836  0E00               	movlw	0
  5126  000838  6E13               	movwf	PotSetpoint@new_point,c
  5127  00083A                     l2726:
  5128                           
  5129                           ;DigiPot.c: 28: }
  5130                           ;DigiPot.c: 30: int new_pos = new_point;
  5131  00083A  C013  F01B         	movff	PotSetpoint@new_point,PotSetpoint@new_pos
  5132  00083E  C014  F01C         	movff	PotSetpoint@new_point+1,PotSetpoint@new_pos+1
  5133                           
  5134                           ;DigiPot.c: 34: LATB5 = 0;
  5135  000842  9A8A               	bcf	3978,5,c	;volatile
  5136                           
  5137                           ;DigiPot.c: 37: if (new_pos > prev_pos) {
  5138  000844  501B               	movf	PotSetpoint@new_pos,w,c
  5139  000846  5C30               	subwf	_prev_pos,w,c
  5140  000848  5031               	movf	_prev_pos+1,w,c
  5141  00084A  0A80               	xorlw	128
  5142  00084C  6E15               	movwf	??_PotSetpoint& (0+255),c
  5143  00084E  501C               	movf	PotSetpoint@new_pos+1,w,c
  5144  000850  0A80               	xorlw	128
  5145  000852  5815               	subwfb	??_PotSetpoint& (0+255),w,c
  5146  000854  B0D8               	btfsc	status,0,c
  5147  000856  D00F               	goto	l362
  5148                           
  5149                           ;DigiPot.c: 39: LATB3 = 1;
  5150  000858  868A               	bsf	3978,3,c	;volatile
  5151                           
  5152                           ;DigiPot.c: 40: set_point = new_pos - prev_pos;
  5153  00085A  C030  F015         	movff	_prev_pos,??_PotSetpoint
  5154  00085E  C031  F016         	movff	_prev_pos+1,??_PotSetpoint+1
  5155  000862  1E15               	comf	??_PotSetpoint,f,c
  5156  000864  1E16               	comf	??_PotSetpoint+1,f,c
  5157  000866  4A15               	infsnz	??_PotSetpoint,f,c
  5158  000868  2A16               	incf	??_PotSetpoint+1,f,c
  5159  00086A  501B               	movf	PotSetpoint@new_pos,w,c
  5160  00086C  2415               	addwf	??_PotSetpoint,w,c
  5161  00086E  6E17               	movwf	PotSetpoint@set_point,c
  5162  000870  501C               	movf	PotSetpoint@new_pos+1,w,c
  5163  000872  2016               	addwfc	??_PotSetpoint+1,w,c
  5164  000874  6E18               	movwf	PotSetpoint@set_point+1,c
  5165  000876                     l362:
  5166                           
  5167                           ;DigiPot.c: 41: }
  5168                           ;DigiPot.c: 42: if (new_pos < prev_pos) {
  5169  000876  5030               	movf	_prev_pos,w,c
  5170  000878  5C1B               	subwf	PotSetpoint@new_pos,w,c
  5171  00087A  501C               	movf	PotSetpoint@new_pos+1,w,c
  5172  00087C  0A80               	xorlw	128
  5173  00087E  6E15               	movwf	??_PotSetpoint& (0+255),c
  5174  000880  5031               	movf	_prev_pos+1,w,c
  5175  000882  0A80               	xorlw	128
  5176  000884  5815               	subwfb	??_PotSetpoint& (0+255),w,c
  5177  000886  B0D8               	btfsc	status,0,c
  5178  000888  D00F               	goto	l2740
  5179                           
  5180                           ;DigiPot.c: 44: LATB3 = 0;
  5181  00088A  968A               	bcf	3978,3,c	;volatile
  5182                           
  5183                           ;DigiPot.c: 45: set_point = prev_pos - new_pos;
  5184  00088C  C01B  F015         	movff	PotSetpoint@new_pos,??_PotSetpoint
  5185  000890  C01C  F016         	movff	PotSetpoint@new_pos+1,??_PotSetpoint+1
  5186  000894  1E15               	comf	??_PotSetpoint,f,c
  5187  000896  1E16               	comf	??_PotSetpoint+1,f,c
  5188  000898  4A15               	infsnz	??_PotSetpoint,f,c
  5189  00089A  2A16               	incf	??_PotSetpoint+1,f,c
  5190  00089C  5030               	movf	_prev_pos,w,c
  5191  00089E  2415               	addwf	??_PotSetpoint,w,c
  5192  0008A0  6E17               	movwf	PotSetpoint@set_point,c
  5193  0008A2  5031               	movf	_prev_pos+1,w,c
  5194  0008A4  2016               	addwfc	??_PotSetpoint+1,w,c
  5195  0008A6  6E18               	movwf	PotSetpoint@set_point+1,c
  5196  0008A8                     l2740:
  5197                           
  5198                           ;DigiPot.c: 46: }
  5199                           ;DigiPot.c: 48: int x;
  5200                           ;DigiPot.c: 50: for (x = 0; x < set_point; x++) {
  5201  0008A8  0E00               	movlw	0
  5202  0008AA  6E1A               	movwf	PotSetpoint@x+1,c
  5203  0008AC  0E00               	movlw	0
  5204  0008AE  6E19               	movwf	PotSetpoint@x,c
  5205  0008B0  D004               	goto	l2744
  5206  0008B2                     l365:
  5207                           
  5208                           ;DigiPot.c: 51: LATB4 = 1;
  5209  0008B2  888A               	bsf	3978,4,c	;volatile
  5210                           
  5211                           ;DigiPot.c: 53: LATB4 = 0;
  5212  0008B4  988A               	bcf	3978,4,c	;volatile
  5213  0008B6  4A19               	infsnz	PotSetpoint@x,f,c
  5214  0008B8  2A1A               	incf	PotSetpoint@x+1,f,c
  5215  0008BA                     l2744:
  5216  0008BA  5017               	movf	PotSetpoint@set_point,w,c
  5217  0008BC  5C19               	subwf	PotSetpoint@x,w,c
  5218  0008BE  501A               	movf	PotSetpoint@x+1,w,c
  5219  0008C0  0A80               	xorlw	128
  5220  0008C2  6E15               	movwf	??_PotSetpoint& (0+255),c
  5221  0008C4  5018               	movf	PotSetpoint@set_point+1,w,c
  5222  0008C6  0A80               	xorlw	128
  5223  0008C8  5815               	subwfb	??_PotSetpoint& (0+255),w,c
  5224  0008CA  A0D8               	btfss	status,0,c
  5225  0008CC  D7F2               	goto	l365
  5226                           
  5227                           ;DigiPot.c: 55: }
  5228                           ;DigiPot.c: 57: LATB5 = 1;
  5229  0008CE  8A8A               	bsf	3978,5,c	;volatile
  5230                           
  5231                           ;DigiPot.c: 58: prev_pos = new_pos;
  5232  0008D0  C01B  F030         	movff	PotSetpoint@new_pos,_prev_pos
  5233  0008D4  C01C  F031         	movff	PotSetpoint@new_pos+1,_prev_pos+1
  5234  0008D8  0012               	return		;funcret
  5235  0008DA                     __end_of_PotSetpoint:
  5236                           	opt stack 0
  5237                           tblptru	equ	0xFF8
  5238                           tblptrh	equ	0xFF7
  5239                           tblptrl	equ	0xFF6
  5240                           tablat	equ	0xFF5
  5241                           prodh	equ	0xFF4
  5242                           prodl	equ	0xFF3
  5243                           intcon	equ	0xFF2
  5244                           intcon2	equ	0xFF1
  5245                           postinc0	equ	0xFEE
  5246                           wreg	equ	0xFE8
  5247                           indf2	equ	0xFDF
  5248                           postinc2	equ	0xFDE
  5249                           postdec2	equ	0xFDD
  5250                           plusw2	equ	0xFDB
  5251                           fsr2h	equ	0xFDA
  5252                           fsr2l	equ	0xFD9
  5253                           status	equ	0xFD8
  5254                           
  5255 ;; *************** function _PWM4_LoadDutyValue *****************
  5256 ;; Defined at:
  5257 ;;		line 81 in file "mcc_generated_files/pwm4.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;  dutyValue       2   18[COMRAM] unsigned int 
  5260 ;; Auto vars:     Size  Location     Type
  5261 ;;		None
  5262 ;; Return value:  Size  Location     Type
  5263 ;;		None               void
  5264 ;; Registers used:
  5265 ;;		wreg, status,2, status,0
  5266 ;; Tracked objects:
  5267 ;;		On entry : 0/0
  5268 ;;		On exit  : 0/0
  5269 ;;		Unchanged: 0/0
  5270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5271 ;;      Params:         2       0       0       0       0       0       0
  5272 ;;      Locals:         0       0       0       0       0       0       0
  5273 ;;      Temps:          2       0       0       0       0       0       0
  5274 ;;      Totals:         4       0       0       0       0       0       0
  5275 ;;Total ram usage:        4 bytes
  5276 ;; Hardware stack levels used:    1
  5277 ;; Hardware stack levels required when called:    3
  5278 ;; This function calls:
  5279 ;;		Nothing
  5280 ;; This function is called by:
  5281 ;;		_CoolingStart
  5282 ;; This function uses a non-reentrant model
  5283 ;;
  5284                           
  5285                           	psect	text37
  5286  000EB0                     __ptext37:
  5287                           	opt stack 0
  5288  000EB0                     _PWM4_LoadDutyValue:
  5289                           	opt stack 26
  5290                           
  5291                           ;pwm4.c: 84: CCPR4L = ((dutyValue & 0x03FC)>>2);
  5292                           
  5293                           ;incstack = 0
  5294  000EB0  C013  F015         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  5295  000EB4  C014  F016         	movff	PWM4_LoadDutyValue@dutyValue+1,??_PWM4_LoadDutyValue+1
  5296  000EB8  90D8               	bcf	status,0,c
  5297  000EBA  3216               	rrcf	??_PWM4_LoadDutyValue+1,f,c
  5298  000EBC  3215               	rrcf	??_PWM4_LoadDutyValue,f,c
  5299  000EBE  90D8               	bcf	status,0,c
  5300  000EC0  3216               	rrcf	??_PWM4_LoadDutyValue+1,f,c
  5301  000EC2  3215               	rrcf	??_PWM4_LoadDutyValue,f,c
  5302  000EC4  5015               	movf	??_PWM4_LoadDutyValue,w,c
  5303  000EC6  010F               	movlb	15	; () banked
  5304  000EC8  6F58               	movwf	88,b	;volatile
  5305                           
  5306                           ;pwm4.c: 87: CCP4CON = (CCP4CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  5307  000ECA  C013  F015         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  5308  000ECE  0E03               	movlw	3
  5309  000ED0  1615               	andwf	??_PWM4_LoadDutyValue,f,c
  5310  000ED2  3A15               	swapf	??_PWM4_LoadDutyValue,f,c
  5311  000ED4  0EF0               	movlw	240
  5312  000ED6  1615               	andwf	??_PWM4_LoadDutyValue,f,c
  5313  000ED8  010F               	movlb	15	; () banked
  5314  000EDA  5157               	movf	87,w,b	;volatile
  5315  000EDC  0BCF               	andlw	207
  5316  000EDE  1015               	iorwf	??_PWM4_LoadDutyValue,w,c
  5317  000EE0  010F               	movlb	15	; () banked
  5318  000EE2  6F57               	movwf	87,b	;volatile
  5319                           
  5320                           ; BSR set to: 15
  5321  000EE4  0012               	return		;funcret
  5322  000EE6                     __end_of_PWM4_LoadDutyValue:
  5323                           	opt stack 0
  5324                           tblptru	equ	0xFF8
  5325                           tblptrh	equ	0xFF7
  5326                           tblptrl	equ	0xFF6
  5327                           tablat	equ	0xFF5
  5328                           prodh	equ	0xFF4
  5329                           prodl	equ	0xFF3
  5330                           intcon	equ	0xFF2
  5331                           intcon2	equ	0xFF1
  5332                           postinc0	equ	0xFEE
  5333                           wreg	equ	0xFE8
  5334                           indf2	equ	0xFDF
  5335                           postinc2	equ	0xFDE
  5336                           postdec2	equ	0xFDD
  5337                           plusw2	equ	0xFDB
  5338                           fsr2h	equ	0xFDA
  5339                           fsr2l	equ	0xFD9
  5340                           status	equ	0xFD8
  5341                           
  5342 ;; *************** function _INTERRUPT_InterruptManager *****************
  5343 ;; Defined at:
  5344 ;;		line 65 in file "mcc_generated_files/interrupt_manager.c"
  5345 ;; Parameters:    Size  Location     Type
  5346 ;;		None
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;		None
  5349 ;; Return value:  Size  Location     Type
  5350 ;;		None               void
  5351 ;; Registers used:
  5352 ;;		cstack
  5353 ;; Tracked objects:
  5354 ;;		On entry : 0/0
  5355 ;;		On exit  : 0/0
  5356 ;;		Unchanged: 0/0
  5357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5358 ;;      Params:         0       0       0       0       0       0       0
  5359 ;;      Locals:         0       0       0       0       0       0       0
  5360 ;;      Temps:         14       0       0       0       0       0       0
  5361 ;;      Totals:        14       0       0       0       0       0       0
  5362 ;;Total ram usage:       14 bytes
  5363 ;; Hardware stack levels used:    1
  5364 ;; Hardware stack levels required when called:    2
  5365 ;; This function calls:
  5366 ;;		_ADC_ISR
  5367 ;;		_CCP5_CaptureISR
  5368 ;; This function is called by:
  5369 ;;		Interrupt level 2
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           
  5373                           	psect	intcode
  5374  000008                     __pintcode:
  5375                           	opt stack 0
  5376  000008                     _INTERRUPT_InterruptManager:
  5377                           	opt stack 23
  5378                           
  5379                           ; BSR set to: 15
  5380                           ;incstack = 0
  5381  000008  8249               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5382  00000A  CFFA F005          	movff	pclath,??_INTERRUPT_InterruptManager
  5383  00000E  CFFB F006          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5384  000012  CFE9 F007          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  5385  000016  CFEA F008          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  5386  00001A  CFE1 F009          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  5387  00001E  CFE2 F00A          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  5388  000022  CFD9 F00B          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  5389  000026  CFDA F00C          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  5390  00002A  CFF3 F00D          	movff	prodl,??_INTERRUPT_InterruptManager+8
  5391  00002E  CFF4 F00E          	movff	prodh,??_INTERRUPT_InterruptManager+9
  5392  000032  CFF6 F00F          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  5393  000036  CFF7 F010          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  5394  00003A  CFF8 F011          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  5395  00003E  CFF5 F012          	movff	tablat,??_INTERRUPT_InterruptManager+13
  5396                           
  5397                           ;interrupt_manager.c: 68: if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  5398  000042  BC9D               	btfsc	3997,6,c	;volatile
  5399  000044  AC9E               	btfss	3998,6,c	;volatile
  5400  000046  D003               	goto	i2l220
  5401                           
  5402                           ;interrupt_manager.c: 69: {
  5403                           ;interrupt_manager.c: 70: ADC_ISR();
  5404  000048  EC3F  F008         	call	_ADC_ISR	;wreg free
  5405                           
  5406                           ;interrupt_manager.c: 71: }
  5407  00004C  D005               	goto	i2l224
  5408  00004E                     i2l220:
  5409                           
  5410                           ;interrupt_manager.c: 72: else if(PIE4bits.CCP5IE == 1 && PIR4bits.CCP5IF == 1)
  5411  00004E  B47A               	btfsc	3962,2,c	;volatile
  5412  000050  A47B               	btfss	3963,2,c	;volatile
  5413  000052  D002               	goto	i2l224
  5414                           
  5415                           ;interrupt_manager.c: 73: {
  5416                           ;interrupt_manager.c: 74: CCP5_CaptureISR();
  5417  000054  EC05  F008         	call	_CCP5_CaptureISR	;wreg free
  5418  000058                     i2l224:
  5419  000058  C012  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  5420  00005C  C011  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  5421  000060  C010  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  5422  000064  C00F  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  5423  000068  C00E  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  5424  00006C  C00D  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  5425  000070  C00C  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  5426  000074  C00B  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  5427  000078  C00A  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  5428  00007C  C009  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  5429  000080  C008  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  5430  000084  C007  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  5431  000088  C006  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5432  00008C  C005  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5433  000090  9249               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5434  000092  0011               	retfie		f
  5435  000094                     __end_of_INTERRUPT_InterruptManager:
  5436                           	opt stack 0
  5437                           pclatu	equ	0xFFB
  5438                           pclath	equ	0xFFA
  5439                           tblptru	equ	0xFF8
  5440                           tblptrh	equ	0xFF7
  5441                           tblptrl	equ	0xFF6
  5442                           tablat	equ	0xFF5
  5443                           prodh	equ	0xFF4
  5444                           prodl	equ	0xFF3
  5445                           intcon	equ	0xFF2
  5446                           intcon2	equ	0xFF1
  5447                           postinc0	equ	0xFEE
  5448                           fsr0h	equ	0xFEA
  5449                           fsr0l	equ	0xFE9
  5450                           wreg	equ	0xFE8
  5451                           fsr1h	equ	0xFE2
  5452                           fsr1l	equ	0xFE1
  5453                           indf2	equ	0xFDF
  5454                           postinc2	equ	0xFDE
  5455                           postdec2	equ	0xFDD
  5456                           plusw2	equ	0xFDB
  5457                           fsr2h	equ	0xFDA
  5458                           fsr2l	equ	0xFD9
  5459                           status	equ	0xFD8
  5460                           
  5461 ;; *************** function _CCP5_CaptureISR *****************
  5462 ;; Defined at:
  5463 ;;		line 81 in file "mcc_generated_files/ccp5.c"
  5464 ;; Parameters:    Size  Location     Type
  5465 ;;		None
  5466 ;; Auto vars:     Size  Location     Type
  5467 ;;  module          2    2[COMRAM] struct CCPR5Reg_tag
  5468 ;; Return value:  Size  Location     Type
  5469 ;;		None               void
  5470 ;; Registers used:
  5471 ;;		cstack
  5472 ;; Tracked objects:
  5473 ;;		On entry : 0/0
  5474 ;;		On exit  : 0/0
  5475 ;;		Unchanged: 0/0
  5476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5477 ;;      Params:         0       0       0       0       0       0       0
  5478 ;;      Locals:         2       0       0       0       0       0       0
  5479 ;;      Temps:          0       0       0       0       0       0       0
  5480 ;;      Totals:         2       0       0       0       0       0       0
  5481 ;;Total ram usage:        2 bytes
  5482 ;; Hardware stack levels used:    1
  5483 ;; Hardware stack levels required when called:    1
  5484 ;; This function calls:
  5485 ;;		_CCP5_CallBack
  5486 ;; This function is called by:
  5487 ;;		_INTERRUPT_InterruptManager
  5488 ;; This function uses a non-reentrant model
  5489 ;;
  5490                           
  5491                           	psect	text39
  5492  00100A                     __ptext39:
  5493                           	opt stack 0
  5494  00100A                     _CCP5_CaptureISR:
  5495                           	opt stack 23
  5496                           
  5497                           ;ccp5.c: 83: CCP_PERIOD_REG_T module;
  5498                           ;ccp5.c: 86: PIR4bits.CCP5IF = 0;
  5499                           
  5500                           ;incstack = 0
  5501  00100A  947B               	bcf	3963,2,c	;volatile
  5502                           
  5503                           ;ccp5.c: 89: module.ccpr5l = CCPR5L;
  5504  00100C  CF55 F003          	movff	3925,CCP5_CaptureISR@module	;volatile
  5505                           
  5506                           ;ccp5.c: 90: module.ccpr5h = CCPR5H;
  5507  001010  CF56 F004          	movff	3926,CCP5_CaptureISR@module+1	;volatile
  5508                           
  5509                           ;ccp5.c: 93: CCP5_CallBack(module.ccpr5_16Bit);
  5510  001014  C003  F001         	movff	CCP5_CaptureISR@module,CCP5_CallBack@capturedValue
  5511  001018  C004  F002         	movff	CCP5_CaptureISR@module+1,CCP5_CallBack@capturedValue+1
  5512  00101C  EC41  F008         	call	_CCP5_CallBack	;wreg free
  5513  001020  0012               	return		;funcret
  5514  001022                     __end_of_CCP5_CaptureISR:
  5515                           	opt stack 0
  5516                           pclatu	equ	0xFFB
  5517                           pclath	equ	0xFFA
  5518                           tblptru	equ	0xFF8
  5519                           tblptrh	equ	0xFF7
  5520                           tblptrl	equ	0xFF6
  5521                           tablat	equ	0xFF5
  5522                           prodh	equ	0xFF4
  5523                           prodl	equ	0xFF3
  5524                           intcon	equ	0xFF2
  5525                           intcon2	equ	0xFF1
  5526                           postinc0	equ	0xFEE
  5527                           fsr0h	equ	0xFEA
  5528                           fsr0l	equ	0xFE9
  5529                           wreg	equ	0xFE8
  5530                           fsr1h	equ	0xFE2
  5531                           fsr1l	equ	0xFE1
  5532                           indf2	equ	0xFDF
  5533                           postinc2	equ	0xFDE
  5534                           postdec2	equ	0xFDD
  5535                           plusw2	equ	0xFDB
  5536                           fsr2h	equ	0xFDA
  5537                           fsr2l	equ	0xFD9
  5538                           status	equ	0xFD8
  5539                           
  5540 ;; *************** function _CCP5_CallBack *****************
  5541 ;; Defined at:
  5542 ;;		line 96 in file "mcc_generated_files/ccp5.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  capturedValu    2    0[COMRAM] unsigned int 
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;		None
  5547 ;; Return value:  Size  Location     Type
  5548 ;;		None               void
  5549 ;; Registers used:
  5550 ;;		None
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5556 ;;      Params:         2       0       0       0       0       0       0
  5557 ;;      Locals:         0       0       0       0       0       0       0
  5558 ;;      Temps:          0       0       0       0       0       0       0
  5559 ;;      Totals:         2       0       0       0       0       0       0
  5560 ;;Total ram usage:        2 bytes
  5561 ;; Hardware stack levels used:    1
  5562 ;; This function calls:
  5563 ;;		Nothing
  5564 ;; This function is called by:
  5565 ;;		_CCP5_CaptureISR
  5566 ;; This function uses a non-reentrant model
  5567 ;;
  5568                           
  5569                           	psect	text40
  5570  001082                     __ptext40:
  5571                           	opt stack 0
  5572  001082                     _CCP5_CallBack:
  5573                           	opt stack 23
  5574                           
  5575                           ;incstack = 0
  5576  001082  0012               	return		;funcret
  5577  001084                     __end_of_CCP5_CallBack:
  5578                           	opt stack 0
  5579                           pclatu	equ	0xFFB
  5580                           pclath	equ	0xFFA
  5581                           tblptru	equ	0xFF8
  5582                           tblptrh	equ	0xFF7
  5583                           tblptrl	equ	0xFF6
  5584                           tablat	equ	0xFF5
  5585                           prodh	equ	0xFF4
  5586                           prodl	equ	0xFF3
  5587                           intcon	equ	0xFF2
  5588                           intcon2	equ	0xFF1
  5589                           postinc0	equ	0xFEE
  5590                           fsr0h	equ	0xFEA
  5591                           fsr0l	equ	0xFE9
  5592                           wreg	equ	0xFE8
  5593                           fsr1h	equ	0xFE2
  5594                           fsr1l	equ	0xFE1
  5595                           indf2	equ	0xFDF
  5596                           postinc2	equ	0xFDE
  5597                           postdec2	equ	0xFDD
  5598                           plusw2	equ	0xFDB
  5599                           fsr2h	equ	0xFDA
  5600                           fsr2l	equ	0xFD9
  5601                           status	equ	0xFD8
  5602                           
  5603 ;; *************** function _ADC_ISR *****************
  5604 ;; Defined at:
  5605 ;;		line 128 in file "mcc_generated_files/adc.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;		None
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;		None
  5610 ;; Return value:  Size  Location     Type
  5611 ;;		None               void
  5612 ;; Registers used:
  5613 ;;		None
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5619 ;;      Params:         0       0       0       0       0       0       0
  5620 ;;      Locals:         0       0       0       0       0       0       0
  5621 ;;      Temps:          0       0       0       0       0       0       0
  5622 ;;      Totals:         0       0       0       0       0       0       0
  5623 ;;Total ram usage:        0 bytes
  5624 ;; Hardware stack levels used:    1
  5625 ;; This function calls:
  5626 ;;		Nothing
  5627 ;; This function is called by:
  5628 ;;		_INTERRUPT_InterruptManager
  5629 ;; This function uses a non-reentrant model
  5630 ;;
  5631                           
  5632                           	psect	text41
  5633  00107E                     __ptext41:
  5634                           	opt stack 0
  5635  00107E                     _ADC_ISR:
  5636                           	opt stack 24
  5637                           
  5638                           ;adc.c: 131: PIR1bits.ADIF = 0;
  5639                           
  5640                           ;incstack = 0
  5641  00107E  9C9E               	bcf	3998,6,c	;volatile
  5642  001080  0012               	return		;funcret
  5643  001082                     __end_of_ADC_ISR:
  5644                           	opt stack 0
  5645  0000                     pclatu	equ	0xFFB
  5646                           pclath	equ	0xFFA
  5647                           tblptru	equ	0xFF8
  5648                           tblptrh	equ	0xFF7
  5649                           tblptrl	equ	0xFF6
  5650                           tablat	equ	0xFF5
  5651                           prodh	equ	0xFF4
  5652                           prodl	equ	0xFF3
  5653                           intcon	equ	0xFF2
  5654                           intcon2	equ	0xFF1
  5655                           postinc0	equ	0xFEE
  5656                           fsr0h	equ	0xFEA
  5657                           fsr0l	equ	0xFE9
  5658                           wreg	equ	0xFE8
  5659                           fsr1h	equ	0xFE2
  5660                           fsr1l	equ	0xFE1
  5661                           indf2	equ	0xFDF
  5662                           postinc2	equ	0xFDE
  5663                           postdec2	equ	0xFDD
  5664                           plusw2	equ	0xFDB
  5665                           fsr2h	equ	0xFDA
  5666                           fsr2l	equ	0xFD9
  5667                           status	equ	0xFD8
  5668                           pclatu	equ	0xFFB
  5669                           pclath	equ	0xFFA
  5670                           tblptru	equ	0xFF8
  5671                           tblptrh	equ	0xFF7
  5672                           tblptrl	equ	0xFF6
  5673                           tablat	equ	0xFF5
  5674                           prodh	equ	0xFF4
  5675                           prodl	equ	0xFF3
  5676                           intcon	equ	0xFF2
  5677                           intcon2	equ	0xFF1
  5678                           postinc0	equ	0xFEE
  5679                           fsr0h	equ	0xFEA
  5680                           fsr0l	equ	0xFE9
  5681                           wreg	equ	0xFE8
  5682                           fsr1h	equ	0xFE2
  5683                           fsr1l	equ	0xFE1
  5684                           indf2	equ	0xFDF
  5685                           postinc2	equ	0xFDE
  5686                           postdec2	equ	0xFDD
  5687                           plusw2	equ	0xFDB
  5688                           fsr2h	equ	0xFDA
  5689                           fsr2l	equ	0xFD9
  5690                           status	equ	0xFD8
  5691                           
  5692                           	psect	rparam
  5693  0000                     pclatu	equ	0xFFB
  5694                           pclath	equ	0xFFA
  5695                           tblptru	equ	0xFF8
  5696                           tblptrh	equ	0xFF7
  5697                           tblptrl	equ	0xFF6
  5698                           tablat	equ	0xFF5
  5699                           prodh	equ	0xFF4
  5700                           prodl	equ	0xFF3
  5701                           intcon	equ	0xFF2
  5702                           intcon2	equ	0xFF1
  5703                           postinc0	equ	0xFEE
  5704                           fsr0h	equ	0xFEA
  5705                           fsr0l	equ	0xFE9
  5706                           wreg	equ	0xFE8
  5707                           fsr1h	equ	0xFE2
  5708                           fsr1l	equ	0xFE1
  5709                           indf2	equ	0xFDF
  5710                           postinc2	equ	0xFDE
  5711                           postdec2	equ	0xFDD
  5712                           plusw2	equ	0xFDB
  5713                           fsr2h	equ	0xFDA
  5714                           fsr2l	equ	0xFD9
  5715                           status	equ	0xFD8
  5716                           
  5717                           	psect	temp
  5718  000049                     btemp:
  5719                           	opt stack 0
  5720  000049                     	ds	1
  5721  0000                     int$flags	set	btemp
  5722                           pclatu	equ	0xFFB
  5723                           pclath	equ	0xFFA
  5724                           tblptru	equ	0xFF8
  5725                           tblptrh	equ	0xFF7
  5726                           tblptrl	equ	0xFF6
  5727                           tablat	equ	0xFF5
  5728                           prodh	equ	0xFF4
  5729                           prodl	equ	0xFF3
  5730                           intcon	equ	0xFF2
  5731                           intcon2	equ	0xFF1
  5732                           postinc0	equ	0xFEE
  5733                           fsr0h	equ	0xFEA
  5734                           fsr0l	equ	0xFE9
  5735                           wreg	equ	0xFE8
  5736                           fsr1h	equ	0xFE2
  5737                           fsr1l	equ	0xFE1
  5738                           indf2	equ	0xFDF
  5739                           postinc2	equ	0xFDE
  5740                           postdec2	equ	0xFDD
  5741                           plusw2	equ	0xFDB
  5742                           fsr2h	equ	0xFDA
  5743                           fsr2l	equ	0xFD9
  5744                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         981
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      72
    BANK0           160     18     147
    BANK1           256      0     206
    BANK2           256      0     206
    BANK3           256      0     206
    BANK4           256      0     200
    BANK5           256      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK3[206]), input_buffer(BANK2[206]), ring_buffer(BANK1[206]), 

    memset@p	PTR unsigned char  size(2) Largest target is 206
		 -> output_buffer(BANK3[206]), input_buffer(BANK2[206]), ring_buffer(BANK1[206]), 

    crcBufS_get@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK0[17]), 

    crcBufS_status_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK0[17]), 

    crcBufS_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK0[17]), 

    sp__memset	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK3[206]), input_buffer(BANK2[206]), ring_buffer(BANK1[206]), 

    FastTransfer_buffer_flush@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK1[206]), 

    FastTransfer_buffer_put@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK1[206]), 

    CRC8@data	PTR const unsigned char  size(2) Largest target is 206
		 -> NULL(NULL[0]), CRCcheck@arrayHolder(COMRAM[3]), receiveData@holder_1249(BANK0[3]), receiveData@holder(BANK0[3]), 
		 -> rx_buffer(BANK4[200]), ring_buffer(BANK1[206]), 

    sendStructAddress	PTR unsigned char  size(2) Largest target is 206
		 -> NULL(NULL[0]), ring_buffer(BANK1[206]), 

    serial_read	PTR FTN()unsigned char  size(2) Largest target is 0
		 -> Absolute function(), 

    serial_peek	PTR FTN()unsigned char  size(2) Largest target is 0
		 -> Absolute function(), 

    serial_available	PTR FTN()int  size(2) Largest target is 0
		 -> Absolute function(), 

    serial_write	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    receiveArrayAddress	PTR volatile int  size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _respondECU->_sendData
    _sendData->_FastTransfer_buffer_flush
    _FastTransfer_buffer_flush->_memset
    _ToSend->_FastTransfer_buffer_put
    _FastTransfer_buffer_put->_FastTransfer_buffer_modulo_inc
    _receiveData->_CRCcheck
    _CRCcheck->_crcBufS_get
    _Update->_writeRegisters
    _StartUp595->_Clear595
    _Clear595->_writeRegisters
    _writeRegisters->_Delay
    _EnableSlavePower->_SetPin595
    _ComputeStorageData->_DATAEE_ReadByte
    _CoolingStart->_PotSetpoint

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_CCP5_CaptureISR
    _CCP5_CaptureISR->_CCP5_CallBack

Critical Paths under _main in BANK0

    _updateComms->_receiveData

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   22379
                       _CoolingStart
                         _PDUStartup
                  _SYSTEM_Initialize
                        _updateComms
 ---------------------------------------------------------------------------------
 (1) _updateComms                                          0     0      0   15262
                _processPowerRequest
                        _receiveData
                         _respondECU
 ---------------------------------------------------------------------------------
 (2) _respondECU                                           0     0      0    4510
                              _Delay
                             _ToSend
                           _sendData
 ---------------------------------------------------------------------------------
 (3) _sendData                                             5     5      0    2590
                                             30 COMRAM     5     5      0
                               _CRC8
          _FastTransfer_buffer_flush
                        _crcBufS_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_put                                          7     2      5     564
                                             18 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_flush                            4     0      4     910
                                             26 COMRAM     4     0      4
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6     672
                                             18 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (3) _ToSend                                               3     1      2    1362
                                             31 COMRAM     3     1      2
            _FastTransfer_buffer_put
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_put                              7     2      5    1190
                                             24 COMRAM     7     2      5
     _FastTransfer_buffer_modulo_inc
 ---------------------------------------------------------------------------------
 (5) _FastTransfer_buffer_modulo_inc                       6     2      4     602
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _receiveData                                         18    18      0    5270
                                              0 BANK0     18    18      0
                               _CRC8
                           _CRCcheck
 ---------------------------------------------------------------------------------
 (3) _CRCcheck                                             7     7      0    3799
                                             30 COMRAM     7     7      0
                               _CRC8
                        _crcBufS_get
                 _crcBufS_status_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_status_put                                  10     6      4     908
                                             18 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (4) _crcBufS_get                                         12     8      4    1404
                                             18 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (4) _CRC8                                                 7     4      3    1014
                                             18 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _processPowerRequest                                  2     0      2    5482
                                             32 COMRAM     2     0      2
                   _EnableSlavePower
                             _Update
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CCP5_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM4_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PDUStartup                                           0     0      0    6718
                 _ComputeStorageData
                   _EnableSlavePower
                         _StartUp595
                             _Update
 ---------------------------------------------------------------------------------
 (3) _Update                                               0     0      0     672
                     _writeRegisters
 ---------------------------------------------------------------------------------
 (2) _StartUp595                                           0     0      0    1298
                           _Clear595
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _Clear595                                             2     2      0     740
                                             32 COMRAM     2     2      0
                     _writeRegisters
 ---------------------------------------------------------------------------------
 (4) _writeRegisters                                       5     5      0     672
                                             27 COMRAM     5     5      0
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _Delay                                                9     5      4     558
                                             18 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (3) _EnableSlavePower                                     3     1      2    4636
                                             25 COMRAM     3     1      2
                          _SetPin595
 ---------------------------------------------------------------------------------
 (4) _SetPin595                                            7     5      2    3138
                                             18 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _ComputeStorageData                                   4     4      0     112
                                             19 COMRAM     4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      1     1      0      22
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CoolingStart                                         0     0      0     399
                 _PWM4_LoadDutyValue
                        _PotSetpoint
 ---------------------------------------------------------------------------------
 (2) _PotSetpoint                                         10     8      2     291
                                             18 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (2) _PWM4_LoadDutyValue                                   4     2      2     108
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                          14    14      0     111
                                              4 COMRAM    14    14      0
                            _ADC_ISR
                    _CCP5_CaptureISR
 ---------------------------------------------------------------------------------
 (7) _CCP5_CaptureISR                                      2     2      0     111
                                              2 COMRAM     2     2      0
                      _CCP5_CallBack
 ---------------------------------------------------------------------------------
 (8) _CCP5_CallBack                                        2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CoolingStart
     _PWM4_LoadDutyValue
     _PotSetpoint
   _PDUStartup
     _ComputeStorageData
       _DATAEE_ReadByte
     _EnableSlavePower
       _SetPin595
     _StartUp595
       _Clear595
         _writeRegisters
           _Delay
       _Delay
     _Update
       _writeRegisters
         _Delay
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM4_Initialize
     _TMR2_Initialize
       _TMR2_StartTimer
   _updateComms
     _processPowerRequest
       _EnableSlavePower
         _SetPin595
       _Update
         _writeRegisters
           _Delay
     _receiveData
       _CRC8
       _CRCcheck
         _CRC8
         _crcBufS_get
         _crcBufS_status_put
     _respondECU
       _Delay
       _ToSend
         _FastTransfer_buffer_put
           _FastTransfer_buffer_modulo_inc
       _sendData
         _CRC8
         _FastTransfer_buffer_flush
           _memset
         _crcBufS_put

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _CCP5_CaptureISR
     _CCP5_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C8      13       78.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      CE      11       80.5%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      CE       8       80.5%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      CE       6       80.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     12      93       4       91.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      48       1       76.6%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     40D       9        0.0%
DATA                 0      0     40D      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon May 16 16:53:24 2016

      __end_of_FastTransfer_buffer_flush 0C4A                             _rx_array_inx 0046  
                         ??_CoolingStart 001D                             __CFG_CP0$OFF 000000  
                           __CFG_CP1$OFF 000000                             __CFG_CP2$OFF 000000  
                           __CFG_CP3$OFF 000000                                      l322 0EAA  
                                    l335 0984                                      l362 0876  
                                    l442 0E1E                                      l365 08B2  
                                    l544 0A16                                      l556 0A9C  
                                    l468 00E4                                      l690 0ADE  
                                    l692 0AE8                             __CFG_CPB$OFF 000000  
                                    _PR2 000FBB                             __CFG_CPD$OFF 000000  
                                    u950 0720                                      u971 035E  
                        __end_of_ADC_ISR 1082     FastTransfer_buffer_flush@clearBuffer 001D  
                        _TMR2_Initialize 104C                          _PWM4_Initialize 0FBE  
                                    prod 000FF3                                      wreg 000FE8  
                        _CCP5_Initialize 0F84                             __CFG_LVP$OFF 000000  
                                   l3010 0DF2                                     l2320 0DB2  
                                   l3016 0E08                                     l3024 0E24  
                                   l3040 04B4                                     l3104 0A78  
                                   l3026 0E2A                                     l2330 0F32  
                                   l2324 0DCE                                     l3052 0538  
                                   l3036 04AA                                     l3060 0740  
                                   l3108 0A96                                     l2340 0F00  
                                   l3206 02C6                                     l3134 009A  
                                   l3144 00DA                                     l2336 0EF0  
                                   l3090 0A18                                     l3218 0328  
                                   l3226 0334                                     l3074 0B9E  
                                   l2444 0AD6                                     l2436 0AAE  
                                   l2540 0F44                                     l2700 0954  
                                   l3068 07C6                                     l3180 021C  
                                   l2380 0360                                     l3076 0BA2  
                                   l2550 0F60                                     l2702 0962  
                                   l3094 0A28                                     l3182 0220  
                                   l3174 0182                                     l2480 09BE  
                                   l3184 0234                                     l2722 0824  
                                   l2482 09CE                                     l2474 098E  
                                   l2706 0976                                     l3258 1032  
                                   l2740 08A8                                     l2724 0832  
                                   l2484 09DE                                     l2476 099E  
                                   l3196 02BA                                     l2726 083A  
                                   l2478 09AE                                     l2744 08BA  
                                   l2760 058A                                     l2488 09EE  
                                   l2770 05B4                                     l2690 091E  
                                   l2682 08EE                                     l2764 059A  
                                   l2684 08FC                                     l2694 0932  
                                   l2696 0940                                     l2688 0910  
                   receiveData@crcHolder 00E7                                     _CRC8 0DEC  
                                   u1340 081C                                     _LATA 000F89  
                                   _LATB 000F8A                                     _LATC 000F8B  
                                   _LATD 000F8C                                     _LATE 000F8D  
                                   u1920 0E96                                     u1851 0126  
                                   u1967 0DB8                                     _TMR2 000FBC  
                                   _WPUB 000F61                                     _data 00C4  
                                   _main 1022                 __end_of_EnableSlavePower 0A16  
                                   fsr0h 000FEA                                     fsr1h 000FE2  
                                   fsr0l 000FE9                                     fsr2h 000FDA  
                                   fsr1l 000FE1                                     indf2 000FDF  
                                   fsr2l 000FD9                                     btemp 0049  
                          __CFG_BORV$190 000000                                     pclat 000FFA  
                                   prodh 000FF4                                     prodl 000FF3  
        __end_of_FastTransfer_buffer_put 04A0                                     start 0094  
                          __CFG_IESO$OFF 000000                             ___param_bank 000010  
                __end_of_CCP5_CaptureISR 1022                                    ?_CRC8 0013  
                       __end_of_CRCcheck 0A9E           __size_of_OSCILLATOR_Initialize 000E  
          __end_of_OSCILLATOR_Initialize 106C                       crcBufS_put@address 0015  
                                  ?_main 0001                                    _EEADR 000FA9  
                                  _T2CON 000FBA                                    _LATB0 007C50  
                                  _LATB3 007C53                                    _LATB4 007C54  
                                  _LATB5 007C55                                    _LATD4 007C64  
                                  _LATD5 007C65                                    _LATD6 007C66  
                                  _LATD7 007C67                           __CFG_DEBUG$OFF 000000  
                                  i2l220 004E                                    i2l224 0058  
                            ?_PDUStartup 0001                       _PWM4_LoadDutyValue 0EB0  
                                  _TRISA 000F92                                    _TRISB 000F93  
                                  _TRISC 000F94                                    _TRISD 000F95  
                                  _TRISE 000F96                                    _Delay 0DA0  
                          __CFG_WRT0$OFF 000000                            __CFG_WRT1$OFF 000000  
                          __CFG_WRT2$OFF 000000                            __CFG_WRT3$OFF 000000  
                         __CFG_EBTR0$OFF 000000                           __CFG_FCMEN$OFF 000000  
                         __CFG_EBTR1$OFF 000000                           __CFG_EBTR2$OFF 000000  
                         __CFG_EBTR3$OFF 000000                         ??_writeRegisters 001C  
                          __CFG_WRTB$OFF 000000                            __CFG_WRTC$OFF 000000  
                          __CFG_WRTD$OFF 000000                          _DATAEE_ReadByte 1038  
                         __CFG_EBTRB$OFF 000000                                    _group 002E  
                    ?_PWM4_LoadDutyValue 0013                       __CFG_MCLRE$EXTMCLR 000000  
                                  tablat 000FF5                     __size_of_crcBufS_get 00E2  
                                  plusw2 000FDB                     __size_of_crcBufS_put 00D8  
                                  status 000FD8                         __end_of_Clear595 0F66  
                         __CFG_HFOFST$ON 000000                          _TMR2_StartTimer 107A  
                           ?_receiveData 0001                           __CFG_PBADEN$ON 000000  
                 __size_of_CCP5_CallBack 0002                     PotSetpoint@new_point 0013  
                           __end_of_CRC8 0E36                          CRCcheck@SentCRC 001F  
                        __initialization 0B18                             __end_of_main 1038  
                             _CurrentADC 00AC                     ??_PWM4_LoadDutyValue 0015  
                             ToSend@what 0020                                   ??_CRC8 0016  
                __end_of_PWM4_Initialize 0FD8                  __end_of_TMR2_Initialize 105E  
                              ??_ADC_ISR 0001              ?_INTERRUPT_InterruptManager 0001  
                   PotSetpoint@set_point 0017                                   ??_main 0026  
                __end_of_CCP5_Initialize 0FA2                            __activetblptr 000002  
                                 ?_Delay 0013            FastTransfer_buffer_put@towhat 001C  
                                 _ADCON0 000FC2                                   _ADCON1 000FC1  
                                 _ADCON2 000FC0                                   _ADRESH 000FC4  
                                 _ADRESL 000FC3                                   _EEDATA 000FA8  
                                 _CCPR4H 000F59                                   _CCPR5H 000F56  
                                 _CCPR4L 000F58                                   _CCPR5L 000F55  
                                 _EECON2 000FA7                                   _ANSELA 000F38  
                                 _ANSELB 000F39                                   _ANSELC 000F3A  
                                 _ANSELD 000F3B                                   _ANSELE 000F3C  
                                 _RC1STA 000FAB                                   Delay@i 0018  
                         __CFG_WDTEN$OFF 000000                                   _TABLAT 000FF5  
                                 _RCREG1 000FAE                                   _OSCCON 000FD3  
            __end_of_processPowerRequest 098A                                   _SPBRG1 000FAF  
                   __end_of_CoolingStart 0FF2                                   _TX1STA 000FAC  
                                 _TXREG1 000FAD                      __size_of_PDUStartup 0054  
                         __CFG_XINST$OFF 000000                                   _ToSend 0FA2  
                          ??_PotSetpoint 0015                         crcBufS_get@_this 0013  
                           _CCPTMRS1bits 000F48              ??_FastTransfer_buffer_flush 001F  
                                 _Update 1074                       __size_of_SetPin595 0044  
                       ?_CCP5_CaptureISR 0001                            _output_buffer 0300  
                       crcBufS_get@space 0016                                CRC8@tempI 0018  
                         __CFG_STVREN$ON 000000                                   _memset 0EE6  
                                 clear_0 0B1E                                   clear_1 0B2A  
                                 clear_2 0B36                                   clear_3 0B42  
                                 clear_4 0B4E                                   clear_5 0B5A  
                                 _rx_len 0047                         __end_of_sendData 0BE8  
                __end_of_DATAEE_ReadByte 104C                             __pdataCOMRAM 0048  
                          _CCP5_CallBack 1082                                   tblptrh 000FF7  
                                 tblptrl 000FF6                                   tblptru 000FF8  
       __size_of_FastTransfer_buffer_put 0168                               _StartUp595 0C4A  
                __end_of_TMR2_StartTimer 107E            __size_of_INTERRUPT_Initialize 0008  
                      _SYSTEM_Initialize 0F66                               __accesstop 0060  
                __end_of__initialization 0B72                                ?_CRCcheck 0001  
                     ?_SYSTEM_Initialize 0001                            ___rparam_used 000001  
                           ?_updateComms 0001                            __end_of_Delay 0DEC  
                         __pcstackCOMRAM 0001                       _crcBufS_status_put 0736  
                    ??_SYSTEM_Initialize 0013                         crcBufS_put@_this 0013  
 __end_of_FastTransfer_buffer_modulo_inc 0F3C  __size_of_FastTransfer_buffer_modulo_inc 002A  
         _FastTransfer_buffer_modulo_inc 0F12                         ?_TMR2_Initialize 0001  
                       ?_PWM4_Initialize 0001             FastTransfer_buffer_put@_this 0019  
                            ToSend@where 0022                      __end_of_PotSetpoint 08DA  
            __size_of_ComputeStorageData 00DC              PWM4_LoadDutyValue@dutyValue 0013  
                    ?_crcBufS_status_put 0013                              _Currentcomp 00B8  
                       ?_CCP5_Initialize 0001                           ?_CCP5_CallBack 0001  
                              ?_Clear595 0001                                  ??_Delay 0017  
              _FastTransfer_buffer_flush 0BE8                                  CRC8@crc 0019  
                                CRC8@len 0015                                  CRC8@sum 0016  
                      __end_of_SetPin595 0E7A                __end_of_SYSTEM_Initialize 0F84  
                 receiveData@holder_1249 00EC                      _addressErrorCounter 0026  
                             __pbssBANK0 0060                               __pbssBANK1 0100  
                             __pbssBANK2 0200                               __pbssBANK3 0300  
                             __pbssBANK4 0400                          __CFG_PLLCFG$OFF 000000  
                             ??_CRCcheck 001F                     ??_crcBufS_status_put 0017  
                      ?_EnableSlavePower 001A                       ??_EnableSlavePower 001C  
                   __size_of_receiveData 02A0                                  ?_ToSend 0020  
                     __CFG_CCP2MX$PORTC1 000000                                  ?_Update 0001  
                     __CFG_CCP3MX$PORTB5 000000      FastTransfer_buffer_modulo_inc@value 0013  
                                _CCP4CON 000F57                                  _CCP5CON 000F54  
                                _ADC_ISR 107E                                  ?_memset 0013  
                             _crc_buffer 00D0                  __size_of_ADC_Initialize 0018  
                       ?_DATAEE_ReadByte 0001                             ??_PDUStartup 0023  
                             ??_Clear595 0021                                  _OSCCON2 000FD2  
                                _TBLPTRH 000FF7                                  _TBLPTRL 000FF6  
                                _TBLPTRU 000FF8                              ?_StartUp595 0001  
                                _OSCTUNE 000F9B                                  _SPBRGH1 000FB0  
                    sendData@whereToSend 0020                      _receiveArrayAddress 0032  
                  __size_of_CoolingStart 001A                         ?_TMR2_StartTimer 0001  
                              ?_sendData 0001                                  _Current 00A0  
                      _alignErrorCounter 0028                          __CFG_PWRTEN$OFF 000000  
                                __Hparam 0000                                  __Lparam 0000  
                     __end_of_PDUStartup 0D00                          __size_of_ToSend 001C  
                            _PotSetpoint 080C                                _AKNAKsend 0040  
                        __size_of_Update 0006                                  _calc_CS 0041  
                                __pcinit 0B18                          ??_CCP5_CallBack 0003  
                        __size_of_memset 002C                                  __ramtop 0600  
                                __ptext0 1022                                  __ptext1 0E7A  
                                __ptext2 0D00                                  __ptext3 0B80  
                                __ptext4 065E                                  __ptext5 0BE8  
                                __ptext6 0EE6                                  __ptext7 0FA2  
                                __ptext8 0338                                  __ptext9 0F12  
                           _CoolingStart 0FD8                    _OSCILLATOR_Initialize 105E  
                              _T2CONbits 000FBA                  _FastTransfer_buffer_put 0338  
                  CRCcheck@calculatedCRC 0020                 ??_PIN_MANAGER_Initialize 0013  
                              Clear595@i 0021             crcBufS_status_put@wantedTime 001B  
                          ??_crcBufS_get 0017                            ??_crcBufS_put 0018  
             __size_of_SYSTEM_Initialize 001E                     end_of_initialization 0B72  
                              Delay@wait 0013                                  memset@c 0015  
                                memset@n 0017                                  memset@p 0019  
                          __Lmediumconst 0000                               ??_sendData 001F  
                   __size_of_updateComms 0036                                  postdec2 000FDD  
                    __size_of_StartUp595 0062                                  postinc0 000FEE  
                                postinc2 000FDE                               _respondECU 0D00  
            __size_of_PWM4_LoadDutyValue 0036                      CRCcheck@arrayHolder 0021  
                           SetPin595@Reg 0019                             SetPin595@pin 0013  
                 _dataAdressErrorCounter 002C                               _rx_address 0045  
             CCP5_CallBack@capturedValue 0001       __size_of_FastTransfer_buffer_flush 0062  
                    __end_of_crcBufS_get 0582                  __size_of_writeRegisters 007A  
                    __end_of_crcBufS_put 0736                        __size_of_CRCcheck 0088  
                          _moduleAddress 0043                               CRCcheck@rt 0024  
           __size_of_processPowerRequest 00B0                           __end_of_ToSend 0FBE  
           __end_of_INTERRUPT_Initialize 1074                           __end_of_Update 107A  
                        _crcErrorCounter 002A                        crcBufS_put@oldCRC 0016  
                          __pidataCOMRAM 1084                           _ADC_Initialize 0FF2  
              ??_FastTransfer_buffer_put 001E                   ?_OSCILLATOR_Initialize 0001  
                         __end_of_memset 0F12                        crcBufS_put@status 0017  
               __size_of_CCP5_CaptureISR 0018                             receiveData@r 00F1  
                           receiveData@u 00EF                      start_initialization 0B18  
        __size_of_PIN_MANAGER_Initialize 0050                    crcBufS_get@wantedTime 001D  
                  EnableSlavePower@slave 001C                        __size_of_Clear595 002A  
                              _SetPin595 0E36                      DATAEE_ReadByte@bAdd 0013  
                               ??_ToSend 0022                                 CRC8@data 0013  
                               ??_Update 0021                          crcBufS_get@time 0015  
                            ?_respondECU 0001                   __end_of_ADC_Initialize 100A  
             __end_of_ComputeStorageData 065E                                 ?_ADC_ISR 0001  
                               ??_memset 0019                __size_of_EnableSlavePower 008C  
                            __pbssCOMRAM 0026                            __pcstackBANK0 00E1  
                           ??_StartUp595 0023                 __size_of_PWM4_Initialize 001A  
               __size_of_TMR2_Initialize 0012                              _crcBufS_get 04A0  
               __size_of_CCP5_Initialize 001E                              _crcBufS_put 065E  
                             ?_SetPin595 0013                            ??_receiveData 00E1  
            __size_of_crcBufS_status_put 00D6                               sendData@CS 0021  
                 _PIN_MANAGER_Initialize 0D50                        __size_of_sendData 0068  
                           ?_PotSetpoint 0013                                __pintcode 0008  
                     __end_of_StartUp595 0CAC                          ?_ADC_Initialize 0001  
           ??_INTERRUPT_InterruptManager 0005                         __CFG_PRICLKEN$ON 000000  
                               _BAUD1CON 000FB8                           __size_of_Delay 004C  
                      ??_CCP5_CaptureISR 0003                 __size_of_DATAEE_ReadByte 0014  
                    __size_of_respondECU 0050                     _INTERRUPT_Initialize 106C  
                           _receiveArray 0060              processPowerRequest@powerSet 0021  
                               _CRCcheck 0A16                                 _LATCbits 000F8B  
                         _writeRegisters 0A9E                                _registers 0088  
                               _IPR1bits 000F9F                                 _PIE1bits 000F9D  
                               _IPR4bits 000F7C                                 _PIE4bits 000F7A  
               __size_of_TMR2_StartTimer 0004      __size_of_INTERRUPT_InterruptManager 008C  
                               _PIR1bits 000F9E                                 _PIR2bits 000FA1  
                               _PIR4bits 000F7B                                 _RCONbits 000FD0  
                       __CFG_WDTPS$32768 000000                      __end_of_receiveData 0338  
         FastTransfer_buffer_flush@_this 001B                             PotSetpoint@x 0019  
                           _input_buffer 0200                                _rx_buffer 0400  
                       __size_of_ADC_ISR 0004                               _ADCON0bits 000FC2  
                  __end_of_CCP5_CallBack 1084                                 _Clear595 0F3C  
                    _processPowerRequest 08DA                              _INTCON2bits 000FF1  
                  ?_INTERRUPT_Initialize 0001                        _sendStructAddress 0034  
                 __end_of_writeRegisters 0B18                       PotSetpoint@new_pos 001B  
                            ??_SetPin595 0015                     EnableSlavePower@onof 001A  
                      ??_TMR2_Initialize 0013                        ??_PWM4_Initialize 0013  
                             _EECON1bits 000FA6                        ??_CCP5_Initialize 0013  
                          ??_updateComms 0026                                 __Hrparam 0000  
             __end_of_PWM4_LoadDutyValue 0EE6                                 __Lrparam 0000  
                   ?_processPowerRequest 0021                       __CFG_BOREN$SBORDIS 000000  
                      __CFG_P2BMX$PORTD2 000000                  ??_OSCILLATOR_Initialize 0013  
                       _EnableSlavePower 098A                              CRC8@extract 0017  
                              sendData@i 0022                 crcBufS_status_put@status 0016  
                               __ptext10 0098                                 __ptext11 0A16  
                               __ptext20 0D50                                 __ptext12 0736  
                               __ptext21 105E                                 __ptext13 04A0  
                               __ptext30 0DA0                                 __ptext22 106C  
                               __ptext14 0DEC                                 __ptext31 098A  
                               __ptext23 0F84                                 __ptext15 08DA  
                               __ptext40 1082                                 __ptext32 0E36  
                               __ptext24 0FF2                                 __ptext16 0F66  
                               __ptext41 107E                                 __ptext33 0582  
                               __ptext25 0CAC                                 __ptext17 104C  
                               __ptext34 1038                                 __ptext26 1074  
                               __ptext18 107A                                 __ptext35 0FD8  
                               __ptext27 0C4A                                 __ptext19 0FBE  
                               __ptext36 080C                                 __ptext28 0F3C  
                               __ptext37 0EB0                                 __ptext29 0A9E  
                               __ptext39 100A                            __size_of_CRC8 004A  
                        ?_writeRegisters 0001                            _returnAddress 0044  
                          __size_of_main 0016                              _receiveData 0098  
                         _Transmit_stall 0048                                 _sendData 0B80  
                      ??_DATAEE_ReadByte 0013                    ??_processPowerRequest 0023  
                             _RC1STAbits 000FAB                                 _prev_pos 0030  
                           ??_respondECU 0024                        writeRegisters@val 001D  
                               int$flags 0049                             _serial_write 003C  
                      ??_TMR2_StartTimer 0013                      __end_of_updateComms 0EB0  
     __end_of_INTERRUPT_InterruptManager 0094               _INTERRUPT_InterruptManager 0008  
                   __size_of_PotSetpoint 00CE                        receiveData@holder 00E9  
                             _INTCONbits 000FF2                      ComputeStorageData@i 0016  
                     _ComputeStorageData 0582                   ??_INTERRUPT_Initialize 0013  
                               memset@p1 0013                         _serial_available 0036  
                           ?_crcBufS_get 0013                             ?_crcBufS_put 0013  
                               intlevel2 0000                  crcBufS_status_put@_this 0013  
                     __end_of_respondECU 0D50   FastTransfer_buffer_modulo_inc@my_value 0017  
         FastTransfer_buffer_put@towhere 001B                      ?_ComputeStorageData 0001  
                ?_PIN_MANAGER_Initialize 0001                           SetPin595@value 0014  
                            _ring_buffer 0100                         ??_ADC_Initialize 0013  
             ?_FastTransfer_buffer_flush 001B                              _serial_peek 0038  
                            _serial_read 003A                 ?_FastTransfer_buffer_put 0019  
                   ??_ComputeStorageData 0014                            ?_CoolingStart 0001  
                        _CCP5_CaptureISR 100A    FastTransfer_buffer_modulo_inc@modulus 0015  
                  CCP5_CaptureISR@module 0003                               _PDUStartup 0CAC  
                 crcBufS_status_put@time 0015                receiveData@crcHolder_1250 00E8  
                      __CFG_T3CMX$PORTC0 000000                           _maxDataAddress 0042  
                        writeRegisters@i 001F               __end_of_crcBufS_status_put 080C  
         __end_of_PIN_MANAGER_Initialize 0DA0         ??_FastTransfer_buffer_modulo_inc 0017  
        ?_FastTransfer_buffer_modulo_inc 0013            updateComms@previousPowerState 003E  
                      __CFG_FOSC$INTIO67 000000                              _updateComms 0E7A  
