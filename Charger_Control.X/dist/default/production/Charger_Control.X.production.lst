

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sun May 01 19:31:21 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           	psect	idataCOMRAM
    50  000802                     __pidataCOMRAM:
    51                           	opt stack 0
    52                           
    53                           ;initializer for _Transmit_stall
    54  000802  01                 	db	1
    55                           
    56                           ;initializer for _ChargerData
    57  000803  4D                 	db	77
    58  000804  2C                 	db	44
    59  000805  00                 	db	0
    60  000806  2C                 	db	44
    61  000807  00                 	db	0
    62  000808  2C                 	db	44
    63  000809  00                 	db	0
    64  00080A  2C                 	db	44
    65  00080B  45                 	db	69
    66                           
    67                           	psect	mediumconst
    68  007E2C                     __pmediumconst:
    69                           	opt stack 0
    70  007E2C  00                 	db	0
    71  007E2D                     _FONTLOOKUP:
    72                           	opt stack 0
    73  007E2D  00                 	db	0
    74  007E2E  00                 	db	0
    75  007E2F  00                 	db	0
    76  007E30  00                 	db	0
    77  007E31  00                 	db	0
    78  007E32  00                 	db	0
    79  007E33  00                 	db	0
    80  007E34  2F                 	db	47
    81  007E35  00                 	db	0
    82  007E36  00                 	db	0
    83  007E37  00                 	db	0
    84  007E38  07                 	db	7
    85  007E39  00                 	db	0
    86  007E3A  07                 	db	7
    87  007E3B  00                 	db	0
    88  007E3C  14                 	db	20
    89  007E3D  7F                 	db	127
    90  007E3E  14                 	db	20
    91  007E3F  7F                 	db	127
    92  007E40  14                 	db	20
    93  007E41  24                 	db	36
    94  007E42  2A                 	db	42
    95  007E43  7F                 	db	127
    96  007E44  2A                 	db	42
    97  007E45  12                 	db	18
    98  007E46  C4                 	db	196
    99  007E47  C8                 	db	200
   100  007E48  10                 	db	16
   101  007E49  26                 	db	38
   102  007E4A  46                 	db	70
   103  007E4B  36                 	db	54
   104  007E4C  49                 	db	73
   105  007E4D  55                 	db	85
   106  007E4E  22                 	db	34
   107  007E4F  50                 	db	80
   108  007E50  00                 	db	0
   109  007E51  05                 	db	5
   110  007E52  03                 	db	3
   111  007E53  00                 	db	0
   112  007E54  00                 	db	0
   113  007E55  00                 	db	0
   114  007E56  1C                 	db	28
   115  007E57  22                 	db	34
   116  007E58  41                 	db	65
   117  007E59  00                 	db	0
   118  007E5A  00                 	db	0
   119  007E5B  41                 	db	65
   120  007E5C  22                 	db	34
   121  007E5D  1C                 	db	28
   122  007E5E  00                 	db	0
   123  007E5F  14                 	db	20
   124  007E60  08                 	db	8
   125  007E61  3E                 	db	62
   126  007E62  08                 	db	8
   127  007E63  14                 	db	20
   128  007E64  08                 	db	8
   129  007E65  08                 	db	8
   130  007E66  3E                 	db	62
   131  007E67  08                 	db	8
   132  007E68  08                 	db	8
   133  007E69  00                 	db	0
   134  007E6A  00                 	db	0
   135  007E6B  50                 	db	80
   136  007E6C  30                 	db	48
   137  007E6D  00                 	db	0
   138  007E6E  10                 	db	16
   139  007E6F  10                 	db	16
   140  007E70  10                 	db	16
   141  007E71  10                 	db	16
   142  007E72  10                 	db	16
   143  007E73  00                 	db	0
   144  007E74  60                 	db	96
   145  007E75  60                 	db	96
   146  007E76  00                 	db	0
   147  007E77  00                 	db	0
   148  007E78  20                 	db	32
   149  007E79  10                 	db	16
   150  007E7A  08                 	db	8
   151  007E7B  04                 	db	4
   152  007E7C  02                 	db	2
   153  007E7D  3E                 	db	62
   154  007E7E  51                 	db	81
   155  007E7F  49                 	db	73
   156  007E80  45                 	db	69
   157  007E81  3E                 	db	62
   158  007E82  00                 	db	0
   159  007E83  42                 	db	66
   160  007E84  7F                 	db	127
   161  007E85  40                 	db	64
   162  007E86  00                 	db	0
   163  007E87  42                 	db	66
   164  007E88  61                 	db	97
   165  007E89  51                 	db	81
   166  007E8A  49                 	db	73
   167  007E8B  46                 	db	70
   168  007E8C  21                 	db	33
   169  007E8D  41                 	db	65
   170  007E8E  45                 	db	69
   171  007E8F  4B                 	db	75
   172  007E90  31                 	db	49
   173  007E91  18                 	db	24
   174  007E92  14                 	db	20
   175  007E93  12                 	db	18
   176  007E94  7F                 	db	127
   177  007E95  10                 	db	16
   178  007E96  27                 	db	39
   179  007E97  45                 	db	69
   180  007E98  45                 	db	69
   181  007E99  45                 	db	69
   182  007E9A  39                 	db	57
   183  007E9B  3C                 	db	60
   184  007E9C  4A                 	db	74
   185  007E9D  49                 	db	73
   186  007E9E  49                 	db	73
   187  007E9F  30                 	db	48
   188  007EA0  01                 	db	1
   189  007EA1  71                 	db	113
   190  007EA2  09                 	db	9
   191  007EA3  05                 	db	5
   192  007EA4  03                 	db	3
   193  007EA5  36                 	db	54
   194  007EA6  49                 	db	73
   195  007EA7  49                 	db	73
   196  007EA8  49                 	db	73
   197  007EA9  36                 	db	54
   198  007EAA  06                 	db	6
   199  007EAB  49                 	db	73
   200  007EAC  49                 	db	73
   201  007EAD  29                 	db	41
   202  007EAE  1E                 	db	30
   203  007EAF  00                 	db	0
   204  007EB0  36                 	db	54
   205  007EB1  36                 	db	54
   206  007EB2  00                 	db	0
   207  007EB3  00                 	db	0
   208  007EB4  00                 	db	0
   209  007EB5  56                 	db	86
   210  007EB6  36                 	db	54
   211  007EB7  00                 	db	0
   212  007EB8  00                 	db	0
   213  007EB9  08                 	db	8
   214  007EBA  14                 	db	20
   215  007EBB  22                 	db	34
   216  007EBC  41                 	db	65
   217  007EBD  00                 	db	0
   218  007EBE  14                 	db	20
   219  007EBF  14                 	db	20
   220  007EC0  14                 	db	20
   221  007EC1  14                 	db	20
   222  007EC2  14                 	db	20
   223  007EC3  00                 	db	0
   224  007EC4  41                 	db	65
   225  007EC5  22                 	db	34
   226  007EC6  14                 	db	20
   227  007EC7  08                 	db	8
   228  007EC8  02                 	db	2
   229  007EC9  01                 	db	1
   230  007ECA  51                 	db	81
   231  007ECB  09                 	db	9
   232  007ECC  06                 	db	6
   233  007ECD  32                 	db	50
   234  007ECE  49                 	db	73
   235  007ECF  59                 	db	89
   236  007ED0  51                 	db	81
   237  007ED1  3E                 	db	62
   238  007ED2  7E                 	db	126
   239  007ED3  11                 	db	17
   240  007ED4  11                 	db	17
   241  007ED5  11                 	db	17
   242  007ED6  7E                 	db	126
   243  007ED7  7F                 	db	127
   244  007ED8  49                 	db	73
   245  007ED9  49                 	db	73
   246  007EDA  49                 	db	73
   247  007EDB  36                 	db	54
   248  007EDC  3E                 	db	62
   249  007EDD  41                 	db	65
   250  007EDE  41                 	db	65
   251  007EDF  41                 	db	65
   252  007EE0  22                 	db	34
   253  007EE1  7F                 	db	127
   254  007EE2  41                 	db	65
   255  007EE3  41                 	db	65
   256  007EE4  22                 	db	34
   257  007EE5  1C                 	db	28
   258  007EE6  7F                 	db	127
   259  007EE7  49                 	db	73
   260  007EE8  49                 	db	73
   261  007EE9  49                 	db	73
   262  007EEA  41                 	db	65
   263  007EEB  7F                 	db	127
   264  007EEC  09                 	db	9
   265  007EED  09                 	db	9
   266  007EEE  09                 	db	9
   267  007EEF  01                 	db	1
   268  007EF0  3E                 	db	62
   269  007EF1  41                 	db	65
   270  007EF2  49                 	db	73
   271  007EF3  49                 	db	73
   272  007EF4  7A                 	db	122
   273  007EF5  7F                 	db	127
   274  007EF6  08                 	db	8
   275  007EF7  08                 	db	8
   276  007EF8  08                 	db	8
   277  007EF9  7F                 	db	127
   278  007EFA  00                 	db	0
   279  007EFB  41                 	db	65
   280  007EFC  7F                 	db	127
   281  007EFD  41                 	db	65
   282  007EFE  00                 	db	0
   283  007EFF  20                 	db	32
   284  007F00  40                 	db	64
   285  007F01  41                 	db	65
   286  007F02  3F                 	db	63
   287  007F03  01                 	db	1
   288  007F04  7F                 	db	127
   289  007F05  08                 	db	8
   290  007F06  14                 	db	20
   291  007F07  22                 	db	34
   292  007F08  41                 	db	65
   293  007F09  7F                 	db	127
   294  007F0A  40                 	db	64
   295  007F0B  40                 	db	64
   296  007F0C  40                 	db	64
   297  007F0D  40                 	db	64
   298  007F0E  7F                 	db	127
   299  007F0F  02                 	db	2
   300  007F10  0C                 	db	12
   301  007F11  02                 	db	2
   302  007F12  7F                 	db	127
   303  007F13  7F                 	db	127
   304  007F14  04                 	db	4
   305  007F15  08                 	db	8
   306  007F16  10                 	db	16
   307  007F17  7F                 	db	127
   308  007F18  3E                 	db	62
   309  007F19  41                 	db	65
   310  007F1A  41                 	db	65
   311  007F1B  41                 	db	65
   312  007F1C  3E                 	db	62
   313  007F1D  7F                 	db	127
   314  007F1E  09                 	db	9
   315  007F1F  09                 	db	9
   316  007F20  09                 	db	9
   317  007F21  06                 	db	6
   318  007F22  3E                 	db	62
   319  007F23  41                 	db	65
   320  007F24  51                 	db	81
   321  007F25  21                 	db	33
   322  007F26  5E                 	db	94
   323  007F27  7F                 	db	127
   324  007F28  09                 	db	9
   325  007F29  19                 	db	25
   326  007F2A  29                 	db	41
   327  007F2B  46                 	db	70
   328  007F2C  46                 	db	70
   329  007F2D  49                 	db	73
   330  007F2E  49                 	db	73
   331  007F2F  49                 	db	73
   332  007F30  31                 	db	49
   333  007F31  01                 	db	1
   334  007F32  01                 	db	1
   335  007F33  7F                 	db	127
   336  007F34  01                 	db	1
   337  007F35  01                 	db	1
   338  007F36  3F                 	db	63
   339  007F37  40                 	db	64
   340  007F38  40                 	db	64
   341  007F39  40                 	db	64
   342  007F3A  3F                 	db	63
   343  007F3B  1F                 	db	31
   344  007F3C  20                 	db	32
   345  007F3D  40                 	db	64
   346  007F3E  20                 	db	32
   347  007F3F  1F                 	db	31
   348  007F40  3F                 	db	63
   349  007F41  40                 	db	64
   350  007F42  38                 	db	56
   351  007F43  40                 	db	64
   352  007F44  3F                 	db	63
   353  007F45  63                 	db	99
   354  007F46  14                 	db	20
   355  007F47  08                 	db	8
   356  007F48  14                 	db	20
   357  007F49  63                 	db	99
   358  007F4A  07                 	db	7
   359  007F4B  08                 	db	8
   360  007F4C  70                 	db	112
   361  007F4D  08                 	db	8
   362  007F4E  07                 	db	7
   363  007F4F  61                 	db	97
   364  007F50  51                 	db	81
   365  007F51  49                 	db	73
   366  007F52  45                 	db	69
   367  007F53  43                 	db	67
   368  007F54  00                 	db	0
   369  007F55  7F                 	db	127
   370  007F56  41                 	db	65
   371  007F57  41                 	db	65
   372  007F58  00                 	db	0
   373  007F59  55                 	db	85
   374  007F5A  2A                 	db	42
   375  007F5B  55                 	db	85
   376  007F5C  2A                 	db	42
   377  007F5D  55                 	db	85
   378  007F5E  00                 	db	0
   379  007F5F  41                 	db	65
   380  007F60  41                 	db	65
   381  007F61  7F                 	db	127
   382  007F62  00                 	db	0
   383  007F63  04                 	db	4
   384  007F64  02                 	db	2
   385  007F65  01                 	db	1
   386  007F66  02                 	db	2
   387  007F67  04                 	db	4
   388  007F68  40                 	db	64
   389  007F69  40                 	db	64
   390  007F6A  40                 	db	64
   391  007F6B  40                 	db	64
   392  007F6C  40                 	db	64
   393  007F6D  00                 	db	0
   394  007F6E  01                 	db	1
   395  007F6F  02                 	db	2
   396  007F70  04                 	db	4
   397  007F71  00                 	db	0
   398  007F72  20                 	db	32
   399  007F73  54                 	db	84
   400  007F74  54                 	db	84
   401  007F75  54                 	db	84
   402  007F76  78                 	db	120
   403  007F77  7F                 	db	127
   404  007F78  48                 	db	72
   405  007F79  44                 	db	68
   406  007F7A  44                 	db	68
   407  007F7B  38                 	db	56
   408  007F7C  38                 	db	56
   409  007F7D  44                 	db	68
   410  007F7E  44                 	db	68
   411  007F7F  44                 	db	68
   412  007F80  20                 	db	32
   413  007F81  38                 	db	56
   414  007F82  44                 	db	68
   415  007F83  44                 	db	68
   416  007F84  48                 	db	72
   417  007F85  7F                 	db	127
   418  007F86  38                 	db	56
   419  007F87  54                 	db	84
   420  007F88  54                 	db	84
   421  007F89  54                 	db	84
   422  007F8A  18                 	db	24
   423  007F8B  08                 	db	8
   424  007F8C  7E                 	db	126
   425  007F8D  09                 	db	9
   426  007F8E  01                 	db	1
   427  007F8F  02                 	db	2
   428  007F90  0C                 	db	12
   429  007F91  52                 	db	82
   430  007F92  52                 	db	82
   431  007F93  52                 	db	82
   432  007F94  3E                 	db	62
   433  007F95  7F                 	db	127
   434  007F96  08                 	db	8
   435  007F97  04                 	db	4
   436  007F98  04                 	db	4
   437  007F99  78                 	db	120
   438  007F9A  00                 	db	0
   439  007F9B  44                 	db	68
   440  007F9C  7D                 	db	125
   441  007F9D  40                 	db	64
   442  007F9E  00                 	db	0
   443  007F9F  20                 	db	32
   444  007FA0  40                 	db	64
   445  007FA1  44                 	db	68
   446  007FA2  3D                 	db	61
   447  007FA3  00                 	db	0
   448  007FA4  7F                 	db	127
   449  007FA5  10                 	db	16
   450  007FA6  28                 	db	40
   451  007FA7  44                 	db	68
   452  007FA8  00                 	db	0
   453  007FA9  00                 	db	0
   454  007FAA  41                 	db	65
   455  007FAB  7F                 	db	127
   456  007FAC  40                 	db	64
   457  007FAD  00                 	db	0
   458  007FAE  7C                 	db	124
   459  007FAF  04                 	db	4
   460  007FB0  18                 	db	24
   461  007FB1  04                 	db	4
   462  007FB2  78                 	db	120
   463  007FB3  7C                 	db	124
   464  007FB4  08                 	db	8
   465  007FB5  04                 	db	4
   466  007FB6  04                 	db	4
   467  007FB7  78                 	db	120
   468  007FB8  38                 	db	56
   469  007FB9  44                 	db	68
   470  007FBA  44                 	db	68
   471  007FBB  44                 	db	68
   472  007FBC  38                 	db	56
   473  007FBD  7C                 	db	124
   474  007FBE  14                 	db	20
   475  007FBF  14                 	db	20
   476  007FC0  14                 	db	20
   477  007FC1  08                 	db	8
   478  007FC2  08                 	db	8
   479  007FC3  14                 	db	20
   480  007FC4  14                 	db	20
   481  007FC5  18                 	db	24
   482  007FC6  7C                 	db	124
   483  007FC7  7C                 	db	124
   484  007FC8  08                 	db	8
   485  007FC9  04                 	db	4
   486  007FCA  04                 	db	4
   487  007FCB  08                 	db	8
   488  007FCC  48                 	db	72
   489  007FCD  54                 	db	84
   490  007FCE  54                 	db	84
   491  007FCF  54                 	db	84
   492  007FD0  20                 	db	32
   493  007FD1  04                 	db	4
   494  007FD2  3F                 	db	63
   495  007FD3  44                 	db	68
   496  007FD4  40                 	db	64
   497  007FD5  20                 	db	32
   498  007FD6  3C                 	db	60
   499  007FD7  40                 	db	64
   500  007FD8  40                 	db	64
   501  007FD9  20                 	db	32
   502  007FDA  7C                 	db	124
   503  007FDB  1C                 	db	28
   504  007FDC  20                 	db	32
   505  007FDD  40                 	db	64
   506  007FDE  20                 	db	32
   507  007FDF  1C                 	db	28
   508  007FE0  3C                 	db	60
   509  007FE1  40                 	db	64
   510  007FE2  30                 	db	48
   511  007FE3  40                 	db	64
   512  007FE4  3C                 	db	60
   513  007FE5  44                 	db	68
   514  007FE6  28                 	db	40
   515  007FE7  10                 	db	16
   516  007FE8  28                 	db	40
   517  007FE9  44                 	db	68
   518  007FEA  0C                 	db	12
   519  007FEB  50                 	db	80
   520  007FEC  50                 	db	80
   521  007FED  50                 	db	80
   522  007FEE  3C                 	db	60
   523  007FEF  44                 	db	68
   524  007FF0  64                 	db	100
   525  007FF1  54                 	db	84
   526  007FF2  4C                 	db	76
   527  007FF3  44                 	db	68
   528  007FF4                     __end_of_FONTLOOKUP:
   529                           	opt stack 0
   530  007FF4  28                 	db	40
   531  007FF5  6E                 	db	110	;'n'
   532  007FF6  75                 	db	117	;'u'
   533  007FF7  6C                 	db	108	;'l'
   534  007FF8  6C                 	db	108	;'l'
   535  007FF9  29                 	db	41
   536  007FFA  00                 	db	0
   537  007FFB                     STR_1:
   538  007FFB  25                 	db	37
   539  007FFC  73                 	db	115	;'s'
   540  007FFD  00                 	db	0
   541  0000                     
   542                           ; #config settings
   543  007FFE  00                 	db	0	; dummy byte at the end
   544  0000                     
   545                           	psect	nvCOMRAM
   546  00004B                     __pnvCOMRAM:
   547                           	opt stack 0
   548  00004B                     _timer0ReloadVal16bit:
   549                           	opt stack 0
   550  00004B                     	ds	2
   551  00004D                     _eusart2TxBufferRemaining:
   552                           	opt stack 0
   553  00004D                     	ds	1
   554  0000                     _ANSELA	set	3896
   555  0000                     _ANSELB	set	3897
   556  0000                     _ANSELC	set	3898
   557  0000                     _ANSELD	set	3899
   558  0000                     _ANSELE	set	3900
   559  0000                     _BAUD1CON	set	4024
   560  0000                     _BAUD2CON	set	3952
   561  0000                     _INTCON2bits	set	4081
   562  0000                     _INTCONbits	set	4082
   563  0000                     _IPR1bits	set	3999
   564  0000                     _IPR3bits	set	4005
   565  0000                     _LATA	set	3977
   566  0000                     _LATB	set	3978
   567  0000                     _LATBbits	set	3978
   568  0000                     _LATC	set	3979
   569  0000                     _LATCbits	set	3979
   570  0000                     _LATD	set	3980
   571  0000                     _LATE	set	3981
   572  0000                     _OSCCON	set	4051
   573  0000                     _OSCCON2	set	4050
   574  0000                     _OSCTUNE	set	3995
   575  0000                     _PIE1bits	set	3997
   576  0000                     _PIE3bits	set	4003
   577  0000                     _PIR1bits	set	3998
   578  0000                     _PIR3bits	set	4004
   579  0000                     _RC1STA	set	4011
   580  0000                     _RC1STAbits	set	4011
   581  0000                     _RC2STA	set	3953
   582  0000                     _RC2STAbits	set	3953
   583  0000                     _RCONbits	set	4048
   584  0000                     _RCREG1	set	4014
   585  0000                     _RCREG2	set	3956
   586  0000                     _SPBRG1	set	4015
   587  0000                     _SPBRG2	set	3957
   588  0000                     _SPBRGH1	set	4016
   589  0000                     _SPBRGH2	set	3958
   590  0000                     _SSP1ADD	set	4040
   591  0000                     _SSP1BUF	set	4041
   592  0000                     _SSP1CON1	set	4038
   593  0000                     _SSP1CON1bits	set	4038
   594  0000                     _SSP1STAT	set	4039
   595  0000                     _SSP1STATbits	set	4039
   596  0000                     _T0CON	set	4053
   597  0000                     _T0CONbits	set	4053
   598  0000                     _TMR0H	set	4055
   599  0000                     _TMR0L	set	4054
   600  0000                     _TRISA	set	3986
   601  0000                     _TRISB	set	3987
   602  0000                     _TRISBbits	set	3987
   603  0000                     _TRISC	set	3988
   604  0000                     _TRISD	set	3989
   605  0000                     _TRISE	set	3990
   606  0000                     _TX1STA	set	4012
   607  0000                     _TX2STA	set	3954
   608  0000                     _TXREG1	set	4013
   609  0000                     _TXREG2	set	3955
   610  0000                     _WPUB	set	3937
   611  0000                     _LATA3	set	31819
   612  0000                     _LATA6	set	31822
   613  0000                     _LATB0	set	31824
   614  0000                     _LATB1	set	31825
   615  0000                     _LATB3	set	31827
   616  0000                     _LATB4	set	31828
   617  0000                     _LATB5	set	31829
   618  0000                     _LATC0	set	31832
   619  0000                     _LATC1	set	31833
   620  0000                     _LATD0	set	31840
   621  0000                     _LATD3	set	31843
   622  0000                     _TRISA3	set	31891
   623  0000                     _TRISD0	set	31912
   624  0000                     _TRISD2	set	31914
   625  0000                     _TRISD3	set	31915
   626                           
   627                           	psect	cinit
   628  000460                     __pcinit:
   629                           	opt stack 0
   630  000460                     start_initialization:
   631                           	opt stack 0
   632  000460                     __initialization:
   633                           	opt stack 0
   634                           
   635                           ; Clear objects allocated to BANK4 (200 bytes)
   636  000460  EE04  F000         	lfsr	0,__pbssBANK4
   637  000464  0EC8               	movlw	200
   638  000466                     clear_0:
   639  000466  6AEE               	clrf	postinc0,c
   640  000468  06E8               	decf	wreg,f,c
   641  00046A  E1FD               	bnz	clear_0
   642                           
   643                           ; Clear objects allocated to BANK3 (206 bytes)
   644  00046C  EE03  F000         	lfsr	0,__pbssBANK3
   645  000470  0ECE               	movlw	206
   646  000472                     clear_1:
   647  000472  6AEE               	clrf	postinc0,c
   648  000474  06E8               	decf	wreg,f,c
   649  000476  E1FD               	bnz	clear_1
   650                           
   651                           ; Clear objects allocated to BANK2 (206 bytes)
   652  000478  EE02  F000         	lfsr	0,__pbssBANK2
   653  00047C  0ECE               	movlw	206
   654  00047E                     clear_2:
   655  00047E  6AEE               	clrf	postinc0,c
   656  000480  06E8               	decf	wreg,f,c
   657  000482  E1FD               	bnz	clear_2
   658                           
   659                           ; Clear objects allocated to BANK1 (206 bytes)
   660  000484  EE01  F000         	lfsr	0,__pbssBANK1
   661  000488  0ECE               	movlw	206
   662  00048A                     clear_3:
   663  00048A  6AEE               	clrf	postinc0,c
   664  00048C  06E8               	decf	wreg,f,c
   665  00048E  E1FD               	bnz	clear_3
   666                           
   667                           ; Clear objects allocated to BANK0 (84 bytes)
   668  000490  EE00  F060         	lfsr	0,__pbssBANK0
   669  000494  0E54               	movlw	84
   670  000496                     clear_4:
   671  000496  6AEE               	clrf	postinc0,c
   672  000498  06E8               	decf	wreg,f,c
   673  00049A  E1FD               	bnz	clear_4
   674                           
   675                           ; Clear objects allocated to COMRAM (38 bytes)
   676  00049C  EE00  F001         	lfsr	0,__pbssCOMRAM
   677  0004A0  0E26               	movlw	38
   678  0004A2                     clear_5:
   679  0004A2  6AEE               	clrf	postinc0,c
   680  0004A4  06E8               	decf	wreg,f,c
   681  0004A6  E1FD               	bnz	clear_5
   682                           
   683                           ; Initialize objects allocated to COMRAM (10 bytes)
   684                           ; load TBLPTR registers with __pidataCOMRAM
   685  0004A8  0E02               	movlw	low __pidataCOMRAM
   686  0004AA  6EF6               	movwf	tblptrl,c
   687  0004AC  0E08               	movlw	high __pidataCOMRAM
   688  0004AE  6EF7               	movwf	tblptrh,c
   689  0004B0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   690  0004B2  6EF8               	movwf	tblptru,c
   691  0004B4  EE00  F041         	lfsr	0,__pdataCOMRAM
   692  0004B8  EE10 F00A          	lfsr	1,10
   693  0004BC                     copy_data0:
   694  0004BC  0009               	tblrd		*+
   695  0004BE  CFF5 FFEE          	movff	tablat,postinc0
   696  0004C2  50E5               	movf	postdec1,w,c
   697  0004C4  50E1               	movf	fsr1l,w,c
   698  0004C6  E1FA               	bnz	copy_data0
   699  0004C8                     end_of_initialization:
   700                           	opt stack 0
   701  0004C8                     __end_of__initialization:
   702                           	opt stack 0
   703  0004C8  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   704  0004CA  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   705  0004CC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   706  0004CE  6EF8               	movwf	tblptru,c
   707  0004D0  0100               	movlb	0
   708  0004D2  EF41  F001         	goto	_main	;jump to C main() function
   709                           tblptru	equ	0xFF8
   710                           tblptrh	equ	0xFF7
   711                           tblptrl	equ	0xFF6
   712                           tablat	equ	0xFF5
   713                           postinc0	equ	0xFEE
   714                           wreg	equ	0xFE8
   715                           postdec1	equ	0xFE5
   716                           fsr1l	equ	0xFE1
   717                           
   718                           	psect	bssCOMRAM
   719  000001                     __pbssCOMRAM:
   720                           	opt stack 0
   721  000001                     _Start:
   722                           	opt stack 0
   723  000001                     	ds	2
   724  000003                     _addressErrorCounter:
   725                           	opt stack 0
   726  000003                     	ds	2
   727  000005                     _alignErrorCounter:
   728                           	opt stack 0
   729  000005                     	ds	2
   730  000007                     _crcErrorCounter:
   731                           	opt stack 0
   732  000007                     	ds	2
   733  000009                     _dataAdressErrorCounter:
   734                           	opt stack 0
   735  000009                     	ds	2
   736  00000B                     _group:
   737                           	opt stack 0
   738  00000B                     	ds	2
   739  00000D                     _receiveArrayAddress:
   740                           	opt stack 0
   741  00000D                     	ds	2
   742  00000F                     _sendStructAddress:
   743                           	opt stack 0
   744  00000F                     	ds	2
   745  000011                     _serial_available:
   746                           	opt stack 0
   747  000011                     	ds	2
   748  000013                     _serial_peek:
   749                           	opt stack 0
   750  000013                     	ds	2
   751  000015                     _serial_read:
   752                           	opt stack 0
   753  000015                     	ds	2
   754  000017                     _serial_write:
   755                           	opt stack 0
   756  000017                     	ds	2
   757  000019                     _AKNAKsend:
   758                           	opt stack 0
   759  000019                     	ds	1
   760  00001A                     _calc_CS:
   761                           	opt stack 0
   762  00001A                     	ds	1
   763  00001B                     _eusart2RxCount:
   764                           	opt stack 0
   765  00001B                     	ds	1
   766  00001C                     _eusart2RxHead:
   767                           	opt stack 0
   768  00001C                     	ds	1
   769  00001D                     _eusart2RxTail:
   770                           	opt stack 0
   771  00001D                     	ds	1
   772  00001E                     _eusart2TxHead:
   773                           	opt stack 0
   774  00001E                     	ds	1
   775  00001F                     _eusart2TxTail:
   776                           	opt stack 0
   777  00001F                     	ds	1
   778  000020                     _i:
   779                           	opt stack 0
   780  000020                     	ds	1
   781  000021                     _maxDataAddress:
   782                           	opt stack 0
   783  000021                     	ds	1
   784  000022                     _moduleAddress:
   785                           	opt stack 0
   786  000022                     	ds	1
   787  000023                     _returnAddress:
   788                           	opt stack 0
   789  000023                     	ds	1
   790  000024                     _rx_address:
   791                           	opt stack 0
   792  000024                     	ds	1
   793  000025                     _rx_array_inx:
   794                           	opt stack 0
   795  000025                     	ds	1
   796  000026                     _rx_len:
   797                           	opt stack 0
   798  000026                     	ds	1
   799                           tblptru	equ	0xFF8
   800                           tblptrh	equ	0xFF7
   801                           tblptrl	equ	0xFF6
   802                           tablat	equ	0xFF5
   803                           postinc0	equ	0xFEE
   804                           wreg	equ	0xFE8
   805                           postdec1	equ	0xFE5
   806                           fsr1l	equ	0xFE1
   807                           
   808                           	psect	dataCOMRAM
   809  000041                     __pdataCOMRAM:
   810                           	opt stack 0
   811  000041                     _Transmit_stall:
   812                           	opt stack 0
   813  000041                     	ds	1
   814  000042                     _ChargerData:
   815                           	opt stack 0
   816  000042                     	ds	9
   817                           tblptru	equ	0xFF8
   818                           tblptrh	equ	0xFF7
   819                           tblptrl	equ	0xFF6
   820                           tablat	equ	0xFF5
   821                           postinc0	equ	0xFEE
   822                           wreg	equ	0xFE8
   823                           postdec1	equ	0xFE5
   824                           fsr1l	equ	0xFE1
   825                           
   826                           	psect	bssBANK0
   827  000060                     __pbssBANK0:
   828                           	opt stack 0
   829  000060                     _receiveArray:
   830                           	opt stack 0
   831  000060                     	ds	40
   832  000088                     _eusart2RxBuffer:
   833                           	opt stack 0
   834  000088                     	ds	8
   835  000090                     _eusart2TxBuffer:
   836                           	opt stack 0
   837  000090                     	ds	8
   838  000098                     _crc_buffer:
   839                           	opt stack 0
   840  000098                     	ds	17
   841  0000A9                     _ddata:
   842                           	opt stack 0
   843  0000A9                     	ds	11
   844                           tblptru	equ	0xFF8
   845                           tblptrh	equ	0xFF7
   846                           tblptrl	equ	0xFF6
   847                           tablat	equ	0xFF5
   848                           postinc0	equ	0xFEE
   849                           wreg	equ	0xFE8
   850                           postdec1	equ	0xFE5
   851                           fsr1l	equ	0xFE1
   852                           
   853                           	psect	bssBANK1
   854  000100                     __pbssBANK1:
   855                           	opt stack 0
   856  000100                     _ring_buffer:
   857                           	opt stack 0
   858  000100                     	ds	206
   859                           tblptru	equ	0xFF8
   860                           tblptrh	equ	0xFF7
   861                           tblptrl	equ	0xFF6
   862                           tablat	equ	0xFF5
   863                           postinc0	equ	0xFEE
   864                           wreg	equ	0xFE8
   865                           postdec1	equ	0xFE5
   866                           fsr1l	equ	0xFE1
   867                           
   868                           	psect	bssBANK2
   869  000200                     __pbssBANK2:
   870                           	opt stack 0
   871  000200                     _input_buffer:
   872                           	opt stack 0
   873  000200                     	ds	206
   874                           tblptru	equ	0xFF8
   875                           tblptrh	equ	0xFF7
   876                           tblptrl	equ	0xFF6
   877                           tablat	equ	0xFF5
   878                           postinc0	equ	0xFEE
   879                           wreg	equ	0xFE8
   880                           postdec1	equ	0xFE5
   881                           fsr1l	equ	0xFE1
   882                           
   883                           	psect	bssBANK3
   884  000300                     __pbssBANK3:
   885                           	opt stack 0
   886  000300                     _output_buffer:
   887                           	opt stack 0
   888  000300                     	ds	206
   889                           tblptru	equ	0xFF8
   890                           tblptrh	equ	0xFF7
   891                           tblptrl	equ	0xFF6
   892                           tablat	equ	0xFF5
   893                           postinc0	equ	0xFEE
   894                           wreg	equ	0xFE8
   895                           postdec1	equ	0xFE5
   896                           fsr1l	equ	0xFE1
   897                           
   898                           	psect	bssBANK4
   899  000400                     __pbssBANK4:
   900                           	opt stack 0
   901  000400                     _rx_buffer:
   902                           	opt stack 0
   903  000400                     	ds	200
   904                           tblptru	equ	0xFF8
   905                           tblptrh	equ	0xFF7
   906                           tblptrl	equ	0xFF6
   907                           tablat	equ	0xFF5
   908                           postinc0	equ	0xFEE
   909                           wreg	equ	0xFE8
   910                           postdec1	equ	0xFE5
   911                           fsr1l	equ	0xFE1
   912                           
   913                           	psect	cstackBANK0
   914  0000B4                     __pcstackBANK0:
   915                           	opt stack 0
   916  0000B4                     ?___wmul:
   917                           	opt stack 0
   918  0000B4                     SPI1_Exchange8bit@data:
   919                           	opt stack 0
   920  0000B4                     ___wmul@multiplier:
   921                           	opt stack 0
   922  0000B4                     Delay@wait:
   923                           	opt stack 0
   924                           
   925                           ; 4 bytes @ 0x0
   926  0000B4                     	ds	2
   927  0000B6                     ___wmul@multiplicand:
   928                           	opt stack 0
   929                           
   930                           ; 2 bytes @ 0x2
   931  0000B6                     	ds	2
   932  0000B8                     ??_Delay:
   933  0000B8                     ___wmul@product:
   934                           	opt stack 0
   935                           
   936                           ; 2 bytes @ 0x4
   937  0000B8                     	ds	1
   938  0000B9                     Delay@i:
   939                           	opt stack 0
   940                           
   941                           ; 4 bytes @ 0x5
   942  0000B9                     	ds	1
   943  0000BA                     LCDwrite@data:
   944                           	opt stack 0
   945                           
   946                           ; 1 bytes @ 0x6
   947  0000BA                     	ds	1
   948  0000BB                     LCDwrite@mode:
   949                           	opt stack 0
   950                           
   951                           ; 1 bytes @ 0x7
   952  0000BB                     	ds	1
   953  0000BC                     gotoXy@y:
   954                           	opt stack 0
   955  0000BC                     clearLcd@res:
   956                           	opt stack 0
   957  0000BC                     blackLcd@res:
   958                           	opt stack 0
   959  0000BC                     NokiaStr@str:
   960                           	opt stack 0
   961                           
   962                           ; 2 bytes @ 0x8
   963  0000BC                     	ds	1
   964  0000BD                     gotoXy@x:
   965                           	opt stack 0
   966                           
   967                           ; 1 bytes @ 0x9
   968  0000BD                     	ds	1
   969  0000BE                     NokiaStr@len:
   970                           	opt stack 0
   971                           
   972                           ; 1 bytes @ 0xA
   973  0000BE                     	ds	1
   974  0000BF                     ??_NokiaStr:
   975                           
   976                           ; 1 bytes @ 0xB
   977  0000BF                     	ds	3
   978  0000C2                     NokiaStr@i:
   979                           	opt stack 0
   980                           
   981                           ; 2 bytes @ 0xE
   982  0000C2                     	ds	2
   983  0000C4                     tblptru	equ	0xFF8
   984                           tblptrh	equ	0xFF7
   985                           tblptrl	equ	0xFF6
   986                           tablat	equ	0xFF5
   987                           postinc0	equ	0xFEE
   988                           wreg	equ	0xFE8
   989                           postdec1	equ	0xFE5
   990                           fsr1l	equ	0xFE1
   991                           
   992                           ; 1 bytes @ 0x10
   993                           
   994                           	psect	cstackCOMRAM
   995  000027                     __pcstackCOMRAM:
   996                           	opt stack 0
   997  000027                     ?_UART_buff_modulo_inc:
   998                           	opt stack 0
   999  000027                     ?_UART_buff_size:
  1000                           	opt stack 0
  1001  000027                     UART_buff_size@_this:
  1002                           	opt stack 0
  1003  000027                     UART_buff_modulo_inc@value:
  1004                           	opt stack 0
  1005                           
  1006                           ; 2 bytes @ 0x0
  1007  000027                     	ds	2
  1008  000029                     UART_buff_modulo_inc@modulus:
  1009                           	opt stack 0
  1010                           
  1011                           ; 2 bytes @ 0x2
  1012  000029                     	ds	2
  1013  00002B                     UART_buff_modulo_inc@my_value:
  1014                           	opt stack 0
  1015                           
  1016                           ; 2 bytes @ 0x4
  1017  00002B                     	ds	2
  1018  00002D                     UART_buff_put@_this:
  1019                           	opt stack 0
  1020  00002D                     UART_buff_get@_this:
  1021                           	opt stack 0
  1022                           
  1023                           ; 2 bytes @ 0x6
  1024  00002D                     	ds	2
  1025  00002F                     ??_UART_buff_get:
  1026  00002F                     UART_buff_put@c:
  1027                           	opt stack 0
  1028                           
  1029                           ; 1 bytes @ 0x8
  1030  00002F                     	ds	1
  1031  000030                     ??_UART_buff_put:
  1032                           
  1033                           ; 1 bytes @ 0x9
  1034  000030                     	ds	1
  1035  000031                     UART_buff_get@c:
  1036                           	opt stack 0
  1037                           
  1038                           ; 1 bytes @ 0xA
  1039  000031                     	ds	1
  1040  000032                     EUSART1_Receive_ISR@data:
  1041                           	opt stack 0
  1042                           
  1043                           ; 1 bytes @ 0xB
  1044  000032                     	ds	1
  1045  000033                     ??_INTERRUPT_InterruptManager:
  1046                           
  1047                           ; 1 bytes @ 0xC
  1048  000033                     	ds	14
  1049                           tblptru	equ	0xFF8
  1050                           tblptrh	equ	0xFF7
  1051                           tblptrl	equ	0xFF6
  1052                           tablat	equ	0xFF5
  1053                           postinc0	equ	0xFEE
  1054                           wreg	equ	0xFE8
  1055                           postdec1	equ	0xFE5
  1056                           fsr1l	equ	0xFE1
  1057                           
  1058 ;;
  1059 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1060 ;;
  1061 ;; *************** function _main *****************
  1062 ;; Defined at:
  1063 ;;		line 16 in file "main.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;		None
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;		None
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1077 ;;      Params:         0       0       0       0       0       0       0
  1078 ;;      Locals:         0       0       0       0       0       0       0
  1079 ;;      Temps:          0       0       0       0       0       0       0
  1080 ;;      Totals:         0       0       0       0       0       0       0
  1081 ;;Total ram usage:        0 bytes
  1082 ;; Hardware stack levels required when called:    8
  1083 ;; This function calls:
  1084 ;;		_Delay
  1085 ;;		_NokiaStart
  1086 ;;		_NokiaStr
  1087 ;;		_SYSTEM_Initialize
  1088 ;;		_gotoXy
  1089 ;; This function is called by:
  1090 ;;		Startup code after reset
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           	psect	text0
  1095  000282                     __ptext0:
  1096                           	opt stack 0
  1097  000282                     _main:
  1098                           	opt stack 23
  1099                           
  1100                           ;main.c: 18: SYSTEM_Initialize();
  1101                           
  1102                           ;incstack = 0
  1103  000282  ECCE  F003         	call	_SYSTEM_Initialize	;wreg free
  1104                           
  1105                           ;main.c: 37: (INTCONbits.GIE = 1);
  1106  000286  8EF2               	bsf	intcon,7,c	;volatile
  1107                           
  1108                           ;main.c: 40: (INTCONbits.PEIE = 1);
  1109  000288  8CF2               	bsf	intcon,6,c	;volatile
  1110                           
  1111                           ;main.c: 47: NokiaStart();
  1112  00028A  EC98  F001         	call	_NokiaStart	;wreg free
  1113                           
  1114                           ;main.c: 48: do { TRISA3 = 0; } while(0);
  1115  00028E  9692               	bcf	3986,3,c	;volatile
  1116  000290  D04B               	goto	u2151
  1117  000292                     l3148:
  1118                           
  1119                           ;main.c: 52: Delay(1000);
  1120  000292  0EE8               	movlw	232
  1121  000294  0100               	movlb	0	; () banked
  1122  000296  6FB4               	movwf	Delay@wait& (0+255),b
  1123  000298  0E03               	movlw	3
  1124  00029A  6FB5               	movwf	(Delay@wait+1)& (0+255),b
  1125  00029C  0E00               	movlw	0
  1126  00029E  6FB6               	movwf	(Delay@wait+2)& (0+255),b
  1127  0002A0  0E00               	movlw	0
  1128  0002A2  6FB7               	movwf	(Delay@wait+3)& (0+255),b
  1129  0002A4  EC6B  F002         	call	_Delay	;wreg free
  1130                           
  1131                           ;main.c: 54: ddata[0]='T';
  1132  0002A8  0E54               	movlw	84
  1133  0002AA  0100               	movlb	0	; () banked
  1134  0002AC  6FA9               	movwf	_ddata& (0+255),b
  1135                           
  1136                           ; BSR set to: 0
  1137                           ;main.c: 55: ddata[1]='E';
  1138  0002AE  0E45               	movlw	69
  1139  0002B0  0100               	movlb	0	; () banked
  1140  0002B2  6FAA               	movwf	(_ddata+1)& (0+255),b
  1141                           
  1142                           ; BSR set to: 0
  1143                           ;main.c: 56: ddata[2]='S';
  1144  0002B4  0E53               	movlw	83
  1145  0002B6  0100               	movlb	0	; () banked
  1146  0002B8  6FAB               	movwf	(_ddata+2)& (0+255),b
  1147                           
  1148                           ; BSR set to: 0
  1149                           ;main.c: 57: ddata[3]='T';
  1150  0002BA  0E54               	movlw	84
  1151  0002BC  0100               	movlb	0	; () banked
  1152  0002BE  6FAC               	movwf	(_ddata+3)& (0+255),b
  1153                           
  1154                           ; BSR set to: 0
  1155                           ;main.c: 58: ddata[4]=' ';
  1156  0002C0  0E20               	movlw	32
  1157  0002C2  0100               	movlb	0	; () banked
  1158  0002C4  6FAD               	movwf	(_ddata+4)& (0+255),b
  1159                           
  1160                           ; BSR set to: 0
  1161                           ;main.c: 59: ddata[5]='L';
  1162  0002C6  0E4C               	movlw	76
  1163  0002C8  0100               	movlb	0	; () banked
  1164  0002CA  6FAE               	movwf	(_ddata+5)& (0+255),b
  1165                           
  1166                           ; BSR set to: 0
  1167                           ;main.c: 60: ddata[6]='C';
  1168  0002CC  0E43               	movlw	67
  1169  0002CE  0100               	movlb	0	; () banked
  1170  0002D0  6FAF               	movwf	(_ddata+6)& (0+255),b
  1171                           
  1172                           ; BSR set to: 0
  1173                           ;main.c: 61: ddata[7]='D';
  1174  0002D2  0E44               	movlw	68
  1175  0002D4  0100               	movlb	0	; () banked
  1176  0002D6  6FB0               	movwf	(_ddata+7)& (0+255),b
  1177                           
  1178                           ; BSR set to: 0
  1179                           ;main.c: 62: ddata[8]=' ';
  1180  0002D8  0E20               	movlw	32
  1181  0002DA  0100               	movlb	0	; () banked
  1182  0002DC  6FB1               	movwf	(_ddata+8)& (0+255),b
  1183                           
  1184                           ; BSR set to: 0
  1185                           ;main.c: 63: ddata[9]=i;
  1186  0002DE  C020  F0B2         	movff	_i,_ddata+9
  1187                           
  1188                           ; BSR set to: 0
  1189                           ;main.c: 64: i++;
  1190  0002E2  2A20               	incf	_i,f,c
  1191                           
  1192                           ; BSR set to: 0
  1193                           ;main.c: 65: gotoXy(2,2);
  1194  0002E4  0E02               	movlw	2
  1195  0002E6  0100               	movlb	0	; () banked
  1196  0002E8  6FBC               	movwf	gotoXy@y& (0+255),b
  1197  0002EA  0E02               	movlw	2
  1198  0002EC  EC15  F003         	call	_gotoXy
  1199                           
  1200                           ;main.c: 66: NokiaStr(ddata,10);
  1201  0002F0  0EA9               	movlw	low _ddata
  1202  0002F2  0100               	movlb	0	; () banked
  1203  0002F4  6FBC               	movwf	NokiaStr@str& (0+255),b
  1204  0002F6  0E00               	movlw	high _ddata
  1205  0002F8  0100               	movlb	0	; () banked
  1206  0002FA  6FBD               	movwf	(NokiaStr@str+1)& (0+255),b
  1207  0002FC  0E0A               	movlw	10
  1208  0002FE  0100               	movlb	0	; () banked
  1209  000300  6FBE               	movwf	NokiaStr@len& (0+255),b
  1210  000302  ECE5  F000         	call	_NokiaStr	;wreg free
  1211                           
  1212                           ;main.c: 68: do { LATA6 = ~LATA6; } while(0);
  1213  000306  BC89               	btfsc	3977,6,c	;volatile
  1214  000308  D002               	goto	u2090
  1215  00030A  8C89               	bsf	3977,6,c	;volatile
  1216  00030C  D001               	goto	l3178
  1217  00030E                     u2090:
  1218  00030E  9C89               	bcf	3977,6,c	;volatile
  1219  000310                     l3178:
  1220  000310  B08B               	btfsc	3979,0,c	;volatile
  1221  000312  D002               	goto	u2110
  1222  000314  808B               	bsf	3979,0,c	;volatile
  1223  000316  D001               	goto	l3180
  1224  000318                     u2110:
  1225  000318  908B               	bcf	3979,0,c	;volatile
  1226  00031A                     l3180:
  1227  00031A  B28B               	btfsc	3979,1,c	;volatile
  1228  00031C  D002               	goto	u2130
  1229  00031E  828B               	bsf	3979,1,c	;volatile
  1230  000320  D001               	goto	l3182
  1231  000322                     u2130:
  1232  000322  928B               	bcf	3979,1,c	;volatile
  1233  000324                     l3182:
  1234  000324  B689               	btfsc	3977,3,c	;volatile
  1235  000326  D002               	goto	u2150
  1236  000328                     u2151:
  1237  000328  8689               	bsf	3977,3,c	;volatile
  1238  00032A  D7B3               	goto	l3148
  1239  00032C                     u2150:
  1240  00032C  9689               	bcf	3977,3,c	;volatile
  1241  00032E  D7B1               	goto	l3148
  1242  000330                     __end_of_main:
  1243                           	opt stack 0
  1244                           tblptru	equ	0xFF8
  1245                           tblptrh	equ	0xFF7
  1246                           tblptrl	equ	0xFF6
  1247                           tablat	equ	0xFF5
  1248                           intcon	equ	0xFF2
  1249                           postinc0	equ	0xFEE
  1250                           wreg	equ	0xFE8
  1251                           postdec1	equ	0xFE5
  1252                           fsr1l	equ	0xFE1
  1253                           
  1254 ;; *************** function _gotoXy *****************
  1255 ;; Defined at:
  1256 ;;		line 95 in file "NokiaLCD.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;  x               1    wreg     unsigned char 
  1259 ;;  y               1    8[BANK0 ] unsigned char 
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;  x               1    9[BANK0 ] unsigned char 
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1271 ;;      Params:         0       1       0       0       0       0       0
  1272 ;;      Locals:         0       1       0       0       0       0       0
  1273 ;;      Temps:          0       0       0       0       0       0       0
  1274 ;;      Totals:         0       2       0       0       0       0       0
  1275 ;;Total ram usage:        2 bytes
  1276 ;; Hardware stack levels used:    1
  1277 ;; Hardware stack levels required when called:    6
  1278 ;; This function calls:
  1279 ;;		_LCDwrite
  1280 ;; This function is called by:
  1281 ;;		_main
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text1
  1286  00062A                     __ptext1:
  1287                           	opt stack 0
  1288  00062A                     _gotoXy:
  1289                           	opt stack 24
  1290                           
  1291                           ;incstack = 0
  1292                           ;gotoXy@x stored from wreg
  1293  00062A  0100               	movlb	0	; () banked
  1294  00062C  6FBD               	movwf	gotoXy@x& (0+255),b
  1295                           
  1296                           ;NokiaLCD.c: 96: y=y|0x40;
  1297  00062E  0100               	movlb	0	; () banked
  1298  000630  51BC               	movf	gotoXy@y& (0+255),w,b
  1299  000632  0940               	iorlw	64
  1300  000634  0100               	movlb	0	; () banked
  1301  000636  6FBC               	movwf	gotoXy@y& (0+255),b
  1302                           
  1303                           ; BSR set to: 0
  1304                           ;NokiaLCD.c: 97: LCDwrite(0, y);
  1305  000638  C0BC  F0BA         	movff	gotoXy@y,LCDwrite@data
  1306  00063C  0E00               	movlw	0
  1307  00063E  ECA2  F003         	call	_LCDwrite
  1308                           
  1309                           ;NokiaLCD.c: 98: x=(x*6)|0x80;
  1310  000642  0100               	movlb	0	; () banked
  1311  000644  51BD               	movf	gotoXy@x& (0+255),w,b
  1312  000646  0D06               	mullw	6
  1313  000648  50F3               	movf	prodl,w,c
  1314  00064A  0980               	iorlw	128
  1315  00064C  0100               	movlb	0	; () banked
  1316  00064E  6FBD               	movwf	gotoXy@x& (0+255),b
  1317                           
  1318                           ; BSR set to: 0
  1319                           ;NokiaLCD.c: 99: LCDwrite(0, x);
  1320  000650  C0BD  F0BA         	movff	gotoXy@x,LCDwrite@data
  1321  000654  0E00               	movlw	0
  1322  000656  ECA2  F003         	call	_LCDwrite
  1323  00065A  0012               	return		;funcret
  1324  00065C                     __end_of_gotoXy:
  1325                           	opt stack 0
  1326                           tblptru	equ	0xFF8
  1327                           tblptrh	equ	0xFF7
  1328                           tblptrl	equ	0xFF6
  1329                           tablat	equ	0xFF5
  1330                           prodl	equ	0xFF3
  1331                           intcon	equ	0xFF2
  1332                           postinc0	equ	0xFEE
  1333                           wreg	equ	0xFE8
  1334                           postdec1	equ	0xFE5
  1335                           fsr1l	equ	0xFE1
  1336                           
  1337 ;; *************** function _SYSTEM_Initialize *****************
  1338 ;; Defined at:
  1339 ;;		line 112 in file "mcc_generated_files/mcc.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;		None
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;		None
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  1    wreg      void 
  1346 ;; Registers used:
  1347 ;;		wreg, status,2, cstack
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1353 ;;      Params:         0       0       0       0       0       0       0
  1354 ;;      Locals:         0       0       0       0       0       0       0
  1355 ;;      Temps:          0       0       0       0       0       0       0
  1356 ;;      Totals:         0       0       0       0       0       0       0
  1357 ;;Total ram usage:        0 bytes
  1358 ;; Hardware stack levels used:    1
  1359 ;; Hardware stack levels required when called:    6
  1360 ;; This function calls:
  1361 ;;		_EUSART2_Initialize
  1362 ;;		_INTERRUPT_Initialize
  1363 ;;		_OSCILLATOR_Initialize
  1364 ;;		_PIN_MANAGER_Initialize
  1365 ;;		_TMR0_Initialize
  1366 ;; This function is called by:
  1367 ;;		_main
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           	psect	text2
  1372  00079C                     __ptext2:
  1373                           	opt stack 0
  1374  00079C                     _SYSTEM_Initialize:
  1375                           	opt stack 24
  1376                           
  1377                           ;mcc.c: 113: OSCILLATOR_Initialize();
  1378                           
  1379                           ;incstack = 0
  1380  00079C  ECED  F003         	call	_OSCILLATOR_Initialize	;wreg free
  1381                           
  1382                           ;mcc.c: 114: PIN_MANAGER_Initialize();
  1383  0007A0  EC9E  F002         	call	_PIN_MANAGER_Initialize	;wreg free
  1384                           
  1385                           ;mcc.c: 115: INTERRUPT_Initialize();
  1386  0007A4  ECFB  F003         	call	_INTERRUPT_Initialize	;wreg free
  1387                           
  1388                           ;mcc.c: 117: EUSART2_Initialize();
  1389  0007A8  ECE1  F002         	call	_EUSART2_Initialize	;wreg free
  1390                           
  1391                           ;mcc.c: 118: TMR0_Initialize();
  1392  0007AC  ECC2  F003         	call	_TMR0_Initialize	;wreg free
  1393  0007B0  0012               	return		;funcret
  1394  0007B2                     __end_of_SYSTEM_Initialize:
  1395                           	opt stack 0
  1396                           tblptru	equ	0xFF8
  1397                           tblptrh	equ	0xFF7
  1398                           tblptrl	equ	0xFF6
  1399                           tablat	equ	0xFF5
  1400                           prodl	equ	0xFF3
  1401                           intcon	equ	0xFF2
  1402                           postinc0	equ	0xFEE
  1403                           wreg	equ	0xFE8
  1404                           postdec1	equ	0xFE5
  1405                           fsr1l	equ	0xFE1
  1406                           
  1407 ;; *************** function _TMR0_Initialize *****************
  1408 ;; Defined at:
  1409 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;		None
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;		None
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      void 
  1416 ;; Registers used:
  1417 ;;		wreg, status,2, cstack
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1423 ;;      Params:         0       0       0       0       0       0       0
  1424 ;;      Locals:         0       0       0       0       0       0       0
  1425 ;;      Temps:          0       0       0       0       0       0       0
  1426 ;;      Totals:         0       0       0       0       0       0       0
  1427 ;;Total ram usage:        0 bytes
  1428 ;; Hardware stack levels used:    1
  1429 ;; Hardware stack levels required when called:    5
  1430 ;; This function calls:
  1431 ;;		_TMR0_StartTimer
  1432 ;; This function is called by:
  1433 ;;		_SYSTEM_Initialize
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           	psect	text3
  1438  000784                     __ptext3:
  1439                           	opt stack 0
  1440  000784                     _TMR0_Initialize:
  1441                           	opt stack 24
  1442                           
  1443                           ;tmr0.c: 68: T0CON = 0x91;
  1444                           
  1445                           ;incstack = 0
  1446  000784  0E91               	movlw	145
  1447  000786  6ED5               	movwf	4053,c	;volatile
  1448                           
  1449                           ;tmr0.c: 71: TMR0H = 0x0A;
  1450  000788  0E0A               	movlw	10
  1451  00078A  6ED7               	movwf	4055,c	;volatile
  1452                           
  1453                           ;tmr0.c: 74: TMR0L = 0xFF;
  1454  00078C  68D6               	setf	4054,c	;volatile
  1455                           
  1456                           ;tmr0.c: 77: timer0ReloadVal16bit = 2815;
  1457  00078E  0E0A               	movlw	10
  1458  000790  6E4C               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  1459  000792  684B               	setf	_timer0ReloadVal16bit,c	;volatile
  1460                           
  1461                           ;tmr0.c: 80: INTCONbits.TMR0IF = 0;
  1462  000794  94F2               	bcf	intcon,2,c	;volatile
  1463                           
  1464                           ;tmr0.c: 83: TMR0_StartTimer();
  1465  000796  EC06  F004         	call	_TMR0_StartTimer	;wreg free
  1466  00079A  0012               	return		;funcret
  1467  00079C                     __end_of_TMR0_Initialize:
  1468                           	opt stack 0
  1469                           tblptru	equ	0xFF8
  1470                           tblptrh	equ	0xFF7
  1471                           tblptrl	equ	0xFF6
  1472                           tablat	equ	0xFF5
  1473                           prodl	equ	0xFF3
  1474                           intcon	equ	0xFF2
  1475                           postinc0	equ	0xFEE
  1476                           wreg	equ	0xFE8
  1477                           postdec1	equ	0xFE5
  1478                           fsr1l	equ	0xFE1
  1479                           
  1480 ;; *************** function _TMR0_StartTimer *****************
  1481 ;; Defined at:
  1482 ;;		line 86 in file "mcc_generated_files/tmr0.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;		None
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;		None
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      void 
  1489 ;; Registers used:
  1490 ;;		None
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1496 ;;      Params:         0       0       0       0       0       0       0
  1497 ;;      Locals:         0       0       0       0       0       0       0
  1498 ;;      Temps:          0       0       0       0       0       0       0
  1499 ;;      Totals:         0       0       0       0       0       0       0
  1500 ;;Total ram usage:        0 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; Hardware stack levels required when called:    4
  1503 ;; This function calls:
  1504 ;;		Nothing
  1505 ;; This function is called by:
  1506 ;;		_TMR0_Initialize
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text4
  1511  00080C                     __ptext4:
  1512                           	opt stack 0
  1513  00080C                     _TMR0_StartTimer:
  1514                           	opt stack 24
  1515                           
  1516                           ;tmr0.c: 88: T0CONbits.TMR0ON = 1;
  1517                           
  1518                           ;incstack = 0
  1519  00080C  8ED5               	bsf	4053,7,c	;volatile
  1520  00080E  0012               	return		;funcret
  1521  000810                     __end_of_TMR0_StartTimer:
  1522                           	opt stack 0
  1523                           tblptru	equ	0xFF8
  1524                           tblptrh	equ	0xFF7
  1525                           tblptrl	equ	0xFF6
  1526                           tablat	equ	0xFF5
  1527                           prodl	equ	0xFF3
  1528                           intcon	equ	0xFF2
  1529                           postinc0	equ	0xFEE
  1530                           wreg	equ	0xFE8
  1531                           postdec1	equ	0xFE5
  1532                           fsr1l	equ	0xFE1
  1533                           
  1534 ;; *************** function _PIN_MANAGER_Initialize *****************
  1535 ;; Defined at:
  1536 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;		None
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;		None
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      void 
  1543 ;; Registers used:
  1544 ;;		wreg, status,2
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1550 ;;      Params:         0       0       0       0       0       0       0
  1551 ;;      Locals:         0       0       0       0       0       0       0
  1552 ;;      Temps:          0       0       0       0       0       0       0
  1553 ;;      Totals:         0       0       0       0       0       0       0
  1554 ;;Total ram usage:        0 bytes
  1555 ;; Hardware stack levels used:    1
  1556 ;; Hardware stack levels required when called:    4
  1557 ;; This function calls:
  1558 ;;		Nothing
  1559 ;; This function is called by:
  1560 ;;		_SYSTEM_Initialize
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text5
  1565  00053C                     __ptext5:
  1566                           	opt stack 0
  1567  00053C                     _PIN_MANAGER_Initialize:
  1568                           	opt stack 25
  1569                           
  1570                           ;pin_manager.c: 51: LATB = 0x0;
  1571                           
  1572                           ;incstack = 0
  1573  00053C  0E00               	movlw	0
  1574  00053E  6E8A               	movwf	3978,c	;volatile
  1575                           
  1576                           ;pin_manager.c: 52: LATA = 0x0;
  1577  000540  0E00               	movlw	0
  1578  000542  6E89               	movwf	3977,c	;volatile
  1579                           
  1580                           ;pin_manager.c: 53: ANSELE = 0x7;
  1581  000544  0E07               	movlw	7
  1582  000546  010F               	movlb	15	; () banked
  1583  000548  6F3C               	movwf	60,b	;volatile
  1584                           
  1585                           ;pin_manager.c: 54: LATE = 0x0;
  1586  00054A  0E00               	movlw	0
  1587  00054C  6E8D               	movwf	3981,c	;volatile
  1588                           
  1589                           ;pin_manager.c: 55: LATD = 0x0;
  1590  00054E  0E00               	movlw	0
  1591  000550  6E8C               	movwf	3980,c	;volatile
  1592                           
  1593                           ;pin_manager.c: 56: LATC = 0x0;
  1594  000552  0E00               	movlw	0
  1595  000554  6E8B               	movwf	3979,c	;volatile
  1596                           
  1597                           ;pin_manager.c: 57: ANSELA = 0x2F;
  1598  000556  0E2F               	movlw	47
  1599  000558  010F               	movlb	15	; () banked
  1600  00055A  6F38               	movwf	56,b	;volatile
  1601                           
  1602                           ;pin_manager.c: 58: ANSELB = 0x3F;
  1603  00055C  0E3F               	movlw	63
  1604  00055E  010F               	movlb	15	; () banked
  1605  000560  6F39               	movwf	57,b	;volatile
  1606                           
  1607                           ;pin_manager.c: 59: ANSELC = 0xCC;
  1608  000562  0ECC               	movlw	204
  1609  000564  010F               	movlb	15	; () banked
  1610  000566  6F3A               	movwf	58,b	;volatile
  1611                           
  1612                           ;pin_manager.c: 60: ANSELD = 0x3F;
  1613  000568  0E3F               	movlw	63
  1614  00056A  010F               	movlb	15	; () banked
  1615  00056C  6F3B               	movwf	59,b	;volatile
  1616                           
  1617                           ;pin_manager.c: 61: WPUB = 0xFC;
  1618  00056E  0EFC               	movlw	252
  1619  000570  6E61               	movwf	3937,c	;volatile
  1620                           
  1621                           ;pin_manager.c: 62: TRISD = 0xF2;
  1622  000572  0EF2               	movlw	242
  1623  000574  6E95               	movwf	3989,c	;volatile
  1624                           
  1625                           ;pin_manager.c: 63: TRISE = 0x7;
  1626  000576  0E07               	movlw	7
  1627  000578  6E96               	movwf	3990,c	;volatile
  1628                           
  1629                           ;pin_manager.c: 64: TRISB = 0xC4;
  1630  00057A  0EC4               	movlw	196
  1631  00057C  6E93               	movwf	3987,c	;volatile
  1632                           
  1633                           ;pin_manager.c: 65: TRISC = 0xD4;
  1634  00057E  0ED4               	movlw	212
  1635  000580  6E94               	movwf	3988,c	;volatile
  1636                           
  1637                           ;pin_manager.c: 66: TRISA = 0x37;
  1638  000582  0E37               	movlw	55
  1639  000584  6E92               	movwf	3986,c	;volatile
  1640                           
  1641                           ; BSR set to: 15
  1642                           ;pin_manager.c: 68: INTCON2bits.nRBPU = 0x0;
  1643  000586  9EF1               	bcf	intcon2,7,c	;volatile
  1644                           
  1645                           ; BSR set to: 15
  1646                           ;pin_manager.c: 72: INTCONbits.RBIE = 0;
  1647  000588  96F2               	bcf	intcon,3,c	;volatile
  1648                           
  1649                           ; BSR set to: 15
  1650  00058A  0012               	return		;funcret
  1651  00058C                     __end_of_PIN_MANAGER_Initialize:
  1652                           	opt stack 0
  1653                           tblptru	equ	0xFF8
  1654                           tblptrh	equ	0xFF7
  1655                           tblptrl	equ	0xFF6
  1656                           tablat	equ	0xFF5
  1657                           prodl	equ	0xFF3
  1658                           intcon	equ	0xFF2
  1659                           intcon2	equ	0xFF1
  1660                           postinc0	equ	0xFEE
  1661                           wreg	equ	0xFE8
  1662                           postdec1	equ	0xFE5
  1663                           fsr1l	equ	0xFE1
  1664                           
  1665 ;; *************** function _OSCILLATOR_Initialize *****************
  1666 ;; Defined at:
  1667 ;;		line 121 in file "mcc_generated_files/mcc.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;		None
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;		None
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  1    wreg      void 
  1674 ;; Registers used:
  1675 ;;		wreg, status,2
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1681 ;;      Params:         0       0       0       0       0       0       0
  1682 ;;      Locals:         0       0       0       0       0       0       0
  1683 ;;      Temps:          0       0       0       0       0       0       0
  1684 ;;      Totals:         0       0       0       0       0       0       0
  1685 ;;Total ram usage:        0 bytes
  1686 ;; Hardware stack levels used:    1
  1687 ;; Hardware stack levels required when called:    4
  1688 ;; This function calls:
  1689 ;;		Nothing
  1690 ;; This function is called by:
  1691 ;;		_SYSTEM_Initialize
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695                           	psect	text6
  1696  0007DA                     __ptext6:
  1697                           	opt stack 0
  1698  0007DA                     _OSCILLATOR_Initialize:
  1699                           	opt stack 25
  1700                           
  1701                           ;mcc.c: 123: OSCCON = 0x70;
  1702                           
  1703                           ; BSR set to: 15
  1704                           ;incstack = 0
  1705  0007DA  0E70               	movlw	112
  1706  0007DC  6ED3               	movwf	4051,c	;volatile
  1707                           
  1708                           ;mcc.c: 125: OSCCON2 = 0x04;
  1709  0007DE  0E04               	movlw	4
  1710  0007E0  6ED2               	movwf	4050,c	;volatile
  1711                           
  1712                           ;mcc.c: 127: OSCTUNE = 0x00;
  1713  0007E2  0E00               	movlw	0
  1714  0007E4  6E9B               	movwf	3995,c	;volatile
  1715  0007E6  0012               	return		;funcret
  1716  0007E8                     __end_of_OSCILLATOR_Initialize:
  1717                           	opt stack 0
  1718                           tblptru	equ	0xFF8
  1719                           tblptrh	equ	0xFF7
  1720                           tblptrl	equ	0xFF6
  1721                           tablat	equ	0xFF5
  1722                           prodl	equ	0xFF3
  1723                           intcon	equ	0xFF2
  1724                           intcon2	equ	0xFF1
  1725                           postinc0	equ	0xFEE
  1726                           wreg	equ	0xFE8
  1727                           postdec1	equ	0xFE5
  1728                           fsr1l	equ	0xFE1
  1729                           
  1730 ;; *************** function _INTERRUPT_Initialize *****************
  1731 ;; Defined at:
  1732 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;		None
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;		None
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		None
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1746 ;;      Params:         0       0       0       0       0       0       0
  1747 ;;      Locals:         0       0       0       0       0       0       0
  1748 ;;      Temps:          0       0       0       0       0       0       0
  1749 ;;      Totals:         0       0       0       0       0       0       0
  1750 ;;Total ram usage:        0 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:    4
  1753 ;; This function calls:
  1754 ;;		Nothing
  1755 ;; This function is called by:
  1756 ;;		_SYSTEM_Initialize
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text7
  1761  0007F6                     __ptext7:
  1762                           	opt stack 0
  1763  0007F6                     _INTERRUPT_Initialize:
  1764                           	opt stack 25
  1765                           
  1766                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1767                           
  1768                           ;incstack = 0
  1769  0007F6  9ED0               	bcf	4048,7,c	;volatile
  1770                           
  1771                           ;interrupt_manager.c: 59: IPR3bits.RC2IP = 0;
  1772  0007F8  9AA5               	bcf	4005,5,c	;volatile
  1773                           
  1774                           ;interrupt_manager.c: 61: IPR3bits.TX2IP = 0;
  1775  0007FA  98A5               	bcf	4005,4,c	;volatile
  1776                           
  1777                           ;interrupt_manager.c: 63: IPR1bits.RC1IP = 0;
  1778  0007FC  9A9F               	bcf	3999,5,c	;volatile
  1779                           
  1780                           ;interrupt_manager.c: 65: IPR1bits.TX1IP = 0;
  1781  0007FE  989F               	bcf	3999,4,c	;volatile
  1782  000800  0012               	return		;funcret
  1783  000802                     __end_of_INTERRUPT_Initialize:
  1784                           	opt stack 0
  1785                           tblptru	equ	0xFF8
  1786                           tblptrh	equ	0xFF7
  1787                           tblptrl	equ	0xFF6
  1788                           tablat	equ	0xFF5
  1789                           prodl	equ	0xFF3
  1790                           intcon	equ	0xFF2
  1791                           intcon2	equ	0xFF1
  1792                           postinc0	equ	0xFEE
  1793                           wreg	equ	0xFE8
  1794                           postdec1	equ	0xFE5
  1795                           fsr1l	equ	0xFE1
  1796                           
  1797 ;; *************** function _EUSART2_Initialize *****************
  1798 ;; Defined at:
  1799 ;;		line 76 in file "mcc_generated_files/eusart2.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;		None
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;		None
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  1    wreg      void 
  1806 ;; Registers used:
  1807 ;;		wreg, status,2
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1813 ;;      Params:         0       0       0       0       0       0       0
  1814 ;;      Locals:         0       0       0       0       0       0       0
  1815 ;;      Temps:          0       0       0       0       0       0       0
  1816 ;;      Totals:         0       0       0       0       0       0       0
  1817 ;;Total ram usage:        0 bytes
  1818 ;; Hardware stack levels used:    1
  1819 ;; Hardware stack levels required when called:    4
  1820 ;; This function calls:
  1821 ;;		Nothing
  1822 ;; This function is called by:
  1823 ;;		_SYSTEM_Initialize
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           
  1827                           	psect	text8
  1828  0005C2                     __ptext8:
  1829                           	opt stack 0
  1830  0005C2                     _EUSART2_Initialize:
  1831                           	opt stack 25
  1832                           
  1833                           ;eusart2.c: 78: PIE3bits.RC2IE = 0;
  1834                           
  1835                           ;incstack = 0
  1836  0005C2  9AA3               	bcf	4003,5,c	;volatile
  1837                           
  1838                           ;eusart2.c: 79: PIE3bits.TX2IE = 0;
  1839  0005C4  98A3               	bcf	4003,4,c	;volatile
  1840                           
  1841                           ;eusart2.c: 84: BAUD2CON = 0x48;
  1842  0005C6  0E48               	movlw	72
  1843  0005C8  6E70               	movwf	3952,c	;volatile
  1844                           
  1845                           ;eusart2.c: 87: RC2STA = 0x90;
  1846  0005CA  0E90               	movlw	144
  1847  0005CC  6E71               	movwf	3953,c	;volatile
  1848                           
  1849                           ;eusart2.c: 90: TX2STA = 0x26;
  1850  0005CE  0E26               	movlw	38
  1851  0005D0  6E72               	movwf	3954,c	;volatile
  1852                           
  1853                           ;eusart2.c: 93: SPBRG2 = 0xA0;
  1854  0005D2  0EA0               	movlw	160
  1855  0005D4  6E75               	movwf	3957,c	;volatile
  1856                           
  1857                           ;eusart2.c: 96: SPBRGH2 = 0x01;
  1858  0005D6  0E01               	movlw	1
  1859  0005D8  6E76               	movwf	3958,c	;volatile
  1860                           
  1861                           ;eusart2.c: 100: eusart2TxHead = 0;
  1862  0005DA  0E00               	movlw	0
  1863  0005DC  6E1E               	movwf	_eusart2TxHead,c
  1864                           
  1865                           ;eusart2.c: 101: eusart2TxTail = 0;
  1866  0005DE  0E00               	movlw	0
  1867  0005E0  6E1F               	movwf	_eusart2TxTail,c
  1868                           
  1869                           ;eusart2.c: 102: eusart2TxBufferRemaining = sizeof (eusart2TxBuffer);
  1870  0005E2  0E08               	movlw	8
  1871  0005E4  6E4D               	movwf	_eusart2TxBufferRemaining,c	;volatile
  1872                           
  1873                           ;eusart2.c: 104: eusart2RxHead = 0;
  1874  0005E6  0E00               	movlw	0
  1875  0005E8  6E1C               	movwf	_eusart2RxHead,c
  1876                           
  1877                           ;eusart2.c: 105: eusart2RxTail = 0;
  1878  0005EA  0E00               	movlw	0
  1879  0005EC  6E1D               	movwf	_eusart2RxTail,c
  1880                           
  1881                           ;eusart2.c: 106: eusart2RxCount = 0;
  1882  0005EE  0E00               	movlw	0
  1883  0005F0  6E1B               	movwf	_eusart2RxCount,c	;volatile
  1884                           
  1885                           ;eusart2.c: 109: PIE3bits.RC2IE = 1;
  1886  0005F2  8AA3               	bsf	4003,5,c	;volatile
  1887  0005F4  0012               	return		;funcret
  1888  0005F6                     __end_of_EUSART2_Initialize:
  1889                           	opt stack 0
  1890                           tblptru	equ	0xFF8
  1891                           tblptrh	equ	0xFF7
  1892                           tblptrl	equ	0xFF6
  1893                           tablat	equ	0xFF5
  1894                           prodl	equ	0xFF3
  1895                           intcon	equ	0xFF2
  1896                           intcon2	equ	0xFF1
  1897                           postinc0	equ	0xFEE
  1898                           wreg	equ	0xFE8
  1899                           postdec1	equ	0xFE5
  1900                           fsr1l	equ	0xFE1
  1901                           
  1902 ;; *************** function _NokiaStr *****************
  1903 ;; Defined at:
  1904 ;;		line 109 in file "NokiaLCD.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;  str             2    8[BANK0 ] PTR unsigned char 
  1907 ;;		 -> ddata(11), 
  1908 ;;  len             1   10[BANK0 ] unsigned char 
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;  i               2   14[BANK0 ] int 
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      void 
  1913 ;; Registers used:
  1914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1920 ;;      Params:         0       3       0       0       0       0       0
  1921 ;;      Locals:         0       2       0       0       0       0       0
  1922 ;;      Temps:          0       3       0       0       0       0       0
  1923 ;;      Totals:         0       8       0       0       0       0       0
  1924 ;;Total ram usage:        8 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; Hardware stack levels required when called:    6
  1927 ;; This function calls:
  1928 ;;		_LCDwrite
  1929 ;;		___wmul
  1930 ;; This function is called by:
  1931 ;;		_main
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           	psect	text9
  1936  0001CA                     __ptext9:
  1937                           	opt stack 0
  1938  0001CA                     _NokiaStr:
  1939                           	opt stack 24
  1940  0001CA                     l3086:
  1941                           
  1942                           ;NokiaLCD.c: 110: int i;
  1943                           ;NokiaLCD.c: 111: for(;len>0;len --){
  1944  0001CA  0100               	movlb	0	; () banked
  1945  0001CC  51BE               	movf	NokiaStr@len& (0+255),w,b
  1946  0001CE  0100               	movlb	0	; () banked
  1947  0001D0  B4D8               	btfsc	status,2,c
  1948  0001D2  0012               	return	
  1949                           
  1950                           ; BSR set to: 0
  1951                           ;NokiaLCD.c: 112: for(i=0;i<=4;i++){
  1952                           
  1953                           ; BSR set to: 0
  1954                           
  1955                           ; BSR set to: 0
  1956  0001D4  0E00               	movlw	0
  1957  0001D6  0100               	movlb	0	; () banked
  1958  0001D8  6FC3               	movwf	(NokiaStr@i+1)& (0+255),b
  1959  0001DA  0E00               	movlw	0
  1960  0001DC  6FC2               	movwf	NokiaStr@i& (0+255),b
  1961  0001DE                     l3092:
  1962                           
  1963                           ; BSR set to: 0
  1964  0001DE  0100               	movlb	0	; () banked
  1965  0001E0  BFC3               	btfsc	(NokiaStr@i+1)& (0+255),7,b
  1966  0001E2  D008               	goto	l3096
  1967  0001E4  0100               	movlb	0	; () banked
  1968  0001E6  51C3               	movf	(NokiaStr@i+1)& (0+255),w,b
  1969  0001E8  E149               	bnz	l3106
  1970  0001EA  0E05               	movlw	5
  1971  0001EC  0100               	movlb	0	; () banked
  1972  0001EE  5DC2               	subwf	NokiaStr@i& (0+255),w,b
  1973  0001F0  B0D8               	btfsc	status,0,c
  1974  0001F2  D044               	goto	l3106
  1975  0001F4                     l3096:
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;NokiaLCD.c: 113: LCDwrite(1,(FONTLOOKUP[*str-32][i]));
  1979  0001F4  C0BC  FFD9         	movff	NokiaStr@str,fsr2l
  1980  0001F8  C0BD  FFDA         	movff	NokiaStr@str+1,fsr2h
  1981  0001FC  50DF               	movf	indf2,w,c
  1982  0001FE  0100               	movlb	0	; () banked
  1983  000200  6FBF               	movwf	??_NokiaStr& (0+255),b
  1984  000202  0EE0               	movlw	224
  1985  000204  0100               	movlb	0	; () banked
  1986  000206  25BF               	addwf	??_NokiaStr& (0+255),w,b
  1987  000208  0100               	movlb	0	; () banked
  1988  00020A  6FB4               	movwf	___wmul@multiplier& (0+255),b
  1989  00020C  0100               	movlb	0	; () banked
  1990  00020E  6BB5               	clrf	(___wmul@multiplier+1)& (0+255),b
  1991  000210  0EFF               	movlw	255
  1992  000212  23B5               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
  1993  000214  0E00               	movlw	0
  1994  000216  0100               	movlb	0	; () banked
  1995  000218  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1996  00021A  0E05               	movlw	5
  1997  00021C  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1998  00021E  ECC6  F002         	call	___wmul	;wreg free
  1999  000222  0E2D               	movlw	low _FONTLOOKUP
  2000  000224  0100               	movlb	0	; () banked
  2001  000226  6FC0               	movwf	(??_NokiaStr+1)& (0+255),b
  2002  000228  0E7E               	movlw	high _FONTLOOKUP
  2003  00022A  0100               	movlb	0	; () banked
  2004  00022C  6FC1               	movwf	(??_NokiaStr+2)& (0+255),b
  2005  00022E  0100               	movlb	0	; () banked
  2006  000230  51B4               	movf	?___wmul& (0+255),w,b
  2007  000232  0100               	movlb	0	; () banked
  2008  000234  27C0               	addwf	(??_NokiaStr+1)& (0+255),f,b
  2009  000236  0100               	movlb	0	; () banked
  2010  000238  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2011  00023A  0100               	movlb	0	; () banked
  2012  00023C  23C1               	addwfc	(??_NokiaStr+2)& (0+255),f,b
  2013  00023E  0100               	movlb	0	; () banked
  2014  000240  51C2               	movf	NokiaStr@i& (0+255),w,b
  2015  000242  0100               	movlb	0	; () banked
  2016  000244  27C0               	addwf	(??_NokiaStr+1)& (0+255),f,b
  2017  000246  0100               	movlb	0	; () banked
  2018  000248  51C3               	movf	(NokiaStr@i+1)& (0+255),w,b
  2019  00024A  0100               	movlb	0	; () banked
  2020  00024C  23C1               	addwfc	(??_NokiaStr+2)& (0+255),f,b
  2021  00024E  C0C0  FFF6         	movff	??_NokiaStr+1,tblptrl
  2022  000252  C0C1  FFF7         	movff	??_NokiaStr+2,tblptrh
  2023  000256                     	if	0	;tblptru may be non-zero
  2024  000256                     	endif
  2025  000256                     	if	0	;tblptru may be non-zero
  2026  000256                     	endif
  2027  000256  0008               	tblrd		*
  2028  000258  CFF5 F0BA          	movff	tablat,LCDwrite@data
  2029  00025C  0E01               	movlw	1
  2030  00025E  ECA2  F003         	call	_LCDwrite
  2031                           
  2032                           ;NokiaLCD.c: 114: LCDwrite(1,(0x00));
  2033  000262  0E00               	movlw	0
  2034  000264  0100               	movlb	0	; () banked
  2035  000266  6FBA               	movwf	LCDwrite@data& (0+255),b
  2036  000268  0E01               	movlw	1
  2037  00026A  ECA2  F003         	call	_LCDwrite
  2038                           
  2039                           ;NokiaLCD.c: 115: str++;
  2040  00026E  0100               	movlb	0	; () banked
  2041  000270  4BBC               	infsnz	NokiaStr@str& (0+255),f,b
  2042  000272  2BBD               	incf	(NokiaStr@str+1)& (0+255),f,b
  2043                           
  2044                           ; BSR set to: 0
  2045  000274  0100               	movlb	0	; () banked
  2046  000276  4BC2               	infsnz	NokiaStr@i& (0+255),f,b
  2047  000278  2BC3               	incf	(NokiaStr@i+1)& (0+255),f,b
  2048  00027A  D7B1               	goto	l3092
  2049  00027C                     l3106:
  2050                           
  2051                           ; BSR set to: 0
  2052  00027C  0100               	movlb	0	; () banked
  2053  00027E  07BE               	decf	NokiaStr@len& (0+255),f,b
  2054  000280  D7A4               	goto	l3086
  2055  000282                     __end_of_NokiaStr:
  2056                           	opt stack 0
  2057                           tblptru	equ	0xFF8
  2058                           tblptrh	equ	0xFF7
  2059                           tblptrl	equ	0xFF6
  2060                           tablat	equ	0xFF5
  2061                           prodl	equ	0xFF3
  2062                           intcon	equ	0xFF2
  2063                           intcon2	equ	0xFF1
  2064                           postinc0	equ	0xFEE
  2065                           wreg	equ	0xFE8
  2066                           postdec1	equ	0xFE5
  2067                           fsr1l	equ	0xFE1
  2068                           indf2	equ	0xFDF
  2069                           fsr2h	equ	0xFDA
  2070                           fsr2l	equ	0xFD9
  2071                           status	equ	0xFD8
  2072                           
  2073 ;; *************** function ___wmul *****************
  2074 ;; Defined at:
  2075 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2078 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;  product         2    4[BANK0 ] unsigned int 
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  2    0[BANK0 ] unsigned int 
  2083 ;; Registers used:
  2084 ;;		wreg, status,2, status,0, prodl, prodh
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2090 ;;      Params:         0       4       0       0       0       0       0
  2091 ;;      Locals:         0       2       0       0       0       0       0
  2092 ;;      Temps:          0       0       0       0       0       0       0
  2093 ;;      Totals:         0       6       0       0       0       0       0
  2094 ;;Total ram usage:        6 bytes
  2095 ;; Hardware stack levels used:    1
  2096 ;; Hardware stack levels required when called:    4
  2097 ;; This function calls:
  2098 ;;		Nothing
  2099 ;; This function is called by:
  2100 ;;		_NokiaStr
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104                           	psect	text10
  2105  00058C                     __ptext10:
  2106                           	opt stack 0
  2107  00058C                     ___wmul:
  2108                           	opt stack 25
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;incstack = 0
  2112  00058C  0100               	movlb	0	; () banked
  2113  00058E  51B4               	movf	___wmul@multiplier& (0+255),w,b
  2114  000590  0100               	movlb	0	; () banked
  2115  000592  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  2116  000594  CFF3 F0B8          	movff	prodl,___wmul@product
  2117  000598  CFF4 F0B9          	movff	prodh,___wmul@product+1
  2118  00059C  0100               	movlb	0	; () banked
  2119  00059E  51B4               	movf	___wmul@multiplier& (0+255),w,b
  2120  0005A0  0100               	movlb	0	; () banked
  2121  0005A2  03B7               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2122  0005A4  50F3               	movf	prodl,w,c
  2123  0005A6  0100               	movlb	0	; () banked
  2124  0005A8  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  2125  0005AA  0100               	movlb	0	; () banked
  2126  0005AC  51B5               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2127  0005AE  0100               	movlb	0	; () banked
  2128  0005B0  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  2129  0005B2  50F3               	movf	prodl,w,c
  2130  0005B4  0100               	movlb	0	; () banked
  2131  0005B6  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  2132                           
  2133                           ; BSR set to: 0
  2134  0005B8  C0B8  F0B4         	movff	___wmul@product,?___wmul
  2135  0005BC  C0B9  F0B5         	movff	___wmul@product+1,?___wmul+1
  2136  0005C0  0012               	return	
  2137  0005C2                     __end_of___wmul:
  2138                           	opt stack 0
  2139                           tblptru	equ	0xFF8
  2140                           tblptrh	equ	0xFF7
  2141                           tblptrl	equ	0xFF6
  2142                           tablat	equ	0xFF5
  2143                           prodh	equ	0xFF4
  2144                           prodl	equ	0xFF3
  2145                           intcon	equ	0xFF2
  2146                           intcon2	equ	0xFF1
  2147                           postinc0	equ	0xFEE
  2148                           wreg	equ	0xFE8
  2149                           postdec1	equ	0xFE5
  2150                           fsr1l	equ	0xFE1
  2151                           indf2	equ	0xFDF
  2152                           fsr2h	equ	0xFDA
  2153                           fsr2l	equ	0xFD9
  2154                           status	equ	0xFD8
  2155                           
  2156 ;; *************** function _NokiaStart *****************
  2157 ;; Defined at:
  2158 ;;		line 24 in file "NokiaLCD.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;		None
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;		None
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      void 
  2165 ;; Registers used:
  2166 ;;		wreg, status,2, status,0, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2172 ;;      Params:         0       0       0       0       0       0       0
  2173 ;;      Locals:         0       0       0       0       0       0       0
  2174 ;;      Temps:          0       0       0       0       0       0       0
  2175 ;;      Totals:         0       0       0       0       0       0       0
  2176 ;;Total ram usage:        0 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; Hardware stack levels required when called:    7
  2179 ;; This function calls:
  2180 ;;		_Delay
  2181 ;;		_LCDwrite
  2182 ;;		_SPI1_Initialize
  2183 ;;		_blackLcd
  2184 ;;		_clearLcd
  2185 ;; This function is called by:
  2186 ;;		_main
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text11
  2191  000330                     __ptext11:
  2192                           	opt stack 0
  2193  000330                     _NokiaStart:
  2194                           	opt stack 23
  2195                           
  2196                           ;NokiaLCD.c: 25: TRISBbits.TRISB6 = 0;
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;incstack = 0
  2200  000330  9C93               	bcf	3987,6,c	;volatile
  2201                           
  2202                           ;NokiaLCD.c: 26: do { TRISD0 = 0; } while(0);
  2203  000332  9095               	bcf	3989,0,c	;volatile
  2204                           
  2205                           ;NokiaLCD.c: 27: do { TRISD3 = 0; } while(0);
  2206  000334  9695               	bcf	3989,3,c	;volatile
  2207                           
  2208                           ;NokiaLCD.c: 28: do { TRISD2 = 0; } while(0);
  2209  000336  9495               	bcf	3989,2,c	;volatile
  2210                           
  2211                           ;NokiaLCD.c: 29: do { LATD0 = 1; } while(0);
  2212  000338  808C               	bsf	3980,0,c	;volatile
  2213                           
  2214                           ;NokiaLCD.c: 30: SPI1_Initialize();
  2215  00033A  ECF4  F003         	call	_SPI1_Initialize	;wreg free
  2216                           
  2217                           ;NokiaLCD.c: 31: LATBbits.LATB6 = 1;
  2218  00033E  8C8A               	bsf	3978,6,c	;volatile
  2219                           
  2220                           ;NokiaLCD.c: 32: Delay(100);
  2221  000340  0E64               	movlw	100
  2222  000342  0100               	movlb	0	; () banked
  2223  000344  6FB4               	movwf	Delay@wait& (0+255),b
  2224  000346  0E00               	movlw	0
  2225  000348  6FB5               	movwf	(Delay@wait+1)& (0+255),b
  2226  00034A  0E00               	movlw	0
  2227  00034C  6FB6               	movwf	(Delay@wait+2)& (0+255),b
  2228  00034E  0E00               	movlw	0
  2229  000350  6FB7               	movwf	(Delay@wait+3)& (0+255),b
  2230  000352  EC6B  F002         	call	_Delay	;wreg free
  2231                           
  2232                           ;NokiaLCD.c: 33: LATBbits.LATB6 = 0;
  2233  000356  9C8A               	bcf	3978,6,c	;volatile
  2234                           
  2235                           ;NokiaLCD.c: 34: Delay(100);
  2236  000358  0E64               	movlw	100
  2237  00035A  0100               	movlb	0	; () banked
  2238  00035C  6FB4               	movwf	Delay@wait& (0+255),b
  2239  00035E  0E00               	movlw	0
  2240  000360  6FB5               	movwf	(Delay@wait+1)& (0+255),b
  2241  000362  0E00               	movlw	0
  2242  000364  6FB6               	movwf	(Delay@wait+2)& (0+255),b
  2243  000366  0E00               	movlw	0
  2244  000368  6FB7               	movwf	(Delay@wait+3)& (0+255),b
  2245  00036A  EC6B  F002         	call	_Delay	;wreg free
  2246                           
  2247                           ;NokiaLCD.c: 35: LATBbits.LATB6 = 1;
  2248  00036E  8C8A               	bsf	3978,6,c	;volatile
  2249                           
  2250                           ;NokiaLCD.c: 36: LCDwrite(0, 0x21);
  2251  000370  0E21               	movlw	33
  2252  000372  0100               	movlb	0	; () banked
  2253  000374  6FBA               	movwf	LCDwrite@data& (0+255),b
  2254  000376  0E00               	movlw	0
  2255  000378  ECA2  F003         	call	_LCDwrite
  2256                           
  2257                           ;NokiaLCD.c: 37: LCDwrite(0, 0xBF);
  2258  00037C  0EBF               	movlw	191
  2259  00037E  0100               	movlb	0	; () banked
  2260  000380  6FBA               	movwf	LCDwrite@data& (0+255),b
  2261  000382  0E00               	movlw	0
  2262  000384  ECA2  F003         	call	_LCDwrite
  2263                           
  2264                           ;NokiaLCD.c: 38: LCDwrite(0, 0x04);
  2265  000388  0E04               	movlw	4
  2266  00038A  0100               	movlb	0	; () banked
  2267  00038C  6FBA               	movwf	LCDwrite@data& (0+255),b
  2268  00038E  0E00               	movlw	0
  2269  000390  ECA2  F003         	call	_LCDwrite
  2270                           
  2271                           ;NokiaLCD.c: 39: LCDwrite(0, 0x14);
  2272  000394  0E14               	movlw	20
  2273  000396  0100               	movlb	0	; () banked
  2274  000398  6FBA               	movwf	LCDwrite@data& (0+255),b
  2275  00039A  0E00               	movlw	0
  2276  00039C  ECA2  F003         	call	_LCDwrite
  2277                           
  2278                           ;NokiaLCD.c: 40: LCDwrite(0, 0x0C);
  2279  0003A0  0E0C               	movlw	12
  2280  0003A2  0100               	movlb	0	; () banked
  2281  0003A4  6FBA               	movwf	LCDwrite@data& (0+255),b
  2282  0003A6  0E00               	movlw	0
  2283  0003A8  ECA2  F003         	call	_LCDwrite
  2284                           
  2285                           ;NokiaLCD.c: 41: LCDwrite(0, 0x20);
  2286  0003AC  0E20               	movlw	32
  2287  0003AE  0100               	movlb	0	; () banked
  2288  0003B0  6FBA               	movwf	LCDwrite@data& (0+255),b
  2289  0003B2  0E00               	movlw	0
  2290  0003B4  ECA2  F003         	call	_LCDwrite
  2291                           
  2292                           ;NokiaLCD.c: 42: LCDwrite(0, 0x0C);
  2293  0003B8  0E0C               	movlw	12
  2294  0003BA  0100               	movlb	0	; () banked
  2295  0003BC  6FBA               	movwf	LCDwrite@data& (0+255),b
  2296  0003BE  0E00               	movlw	0
  2297  0003C0  ECA2  F003         	call	_LCDwrite
  2298                           
  2299                           ;NokiaLCD.c: 43: clearLcd();
  2300  0003C4  ECFB  F002         	call	_clearLcd	;wreg free
  2301                           
  2302                           ;NokiaLCD.c: 44: blackLcd();
  2303  0003C8  EC2E  F003         	call	_blackLcd	;wreg free
  2304  0003CC  0012               	return		;funcret
  2305  0003CE                     __end_of_NokiaStart:
  2306                           	opt stack 0
  2307                           tblptru	equ	0xFF8
  2308                           tblptrh	equ	0xFF7
  2309                           tblptrl	equ	0xFF6
  2310                           tablat	equ	0xFF5
  2311                           prodh	equ	0xFF4
  2312                           prodl	equ	0xFF3
  2313                           intcon	equ	0xFF2
  2314                           intcon2	equ	0xFF1
  2315                           postinc0	equ	0xFEE
  2316                           wreg	equ	0xFE8
  2317                           postdec1	equ	0xFE5
  2318                           fsr1l	equ	0xFE1
  2319                           indf2	equ	0xFDF
  2320                           fsr2h	equ	0xFDA
  2321                           fsr2l	equ	0xFD9
  2322                           status	equ	0xFD8
  2323                           
  2324 ;; *************** function _clearLcd *****************
  2325 ;; Defined at:
  2326 ;;		line 66 in file "NokiaLCD.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;		None
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;  res             2    8[BANK0 ] int 
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1    wreg      void 
  2333 ;; Registers used:
  2334 ;;		wreg, status,2, status,0, cstack
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2340 ;;      Params:         0       0       0       0       0       0       0
  2341 ;;      Locals:         0       2       0       0       0       0       0
  2342 ;;      Temps:          0       0       0       0       0       0       0
  2343 ;;      Totals:         0       2       0       0       0       0       0
  2344 ;;Total ram usage:        2 bytes
  2345 ;; Hardware stack levels used:    1
  2346 ;; Hardware stack levels required when called:    6
  2347 ;; This function calls:
  2348 ;;		_LCDwrite
  2349 ;; This function is called by:
  2350 ;;		_NokiaStart
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           	psect	text12
  2355  0005F6                     __ptext12:
  2356                           	opt stack 0
  2357  0005F6                     _clearLcd:
  2358                           	opt stack 23
  2359                           
  2360                           ;NokiaLCD.c: 67: int res;
  2361                           ;NokiaLCD.c: 68: for(res=0;res<504;res++){
  2362                           
  2363                           ;incstack = 0
  2364  0005F6  0E00               	movlw	0
  2365  0005F8  0100               	movlb	0	; () banked
  2366  0005FA  6FBD               	movwf	(clearLcd@res+1)& (0+255),b
  2367  0005FC  0E00               	movlw	0
  2368  0005FE  6FBC               	movwf	clearLcd@res& (0+255),b
  2369  000600                     l3024:
  2370                           
  2371                           ; BSR set to: 0
  2372  000600  0100               	movlb	0	; () banked
  2373  000602  BFBD               	btfsc	(clearLcd@res+1)& (0+255),7,b
  2374  000604  D008               	goto	l3028
  2375  000606  0EF8               	movlw	248
  2376  000608  0100               	movlb	0	; () banked
  2377  00060A  5DBC               	subwf	clearLcd@res& (0+255),w,b
  2378  00060C  0E01               	movlw	1
  2379  00060E  0100               	movlb	0	; () banked
  2380  000610  59BD               	subwfb	(clearLcd@res+1)& (0+255),w,b
  2381  000612  B0D8               	btfsc	status,0,c
  2382  000614  0012               	return	
  2383  000616                     l3028:
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;NokiaLCD.c: 69: LCDwrite(1, 0x00);
  2387  000616  0E00               	movlw	0
  2388  000618  0100               	movlb	0	; () banked
  2389  00061A  6FBA               	movwf	LCDwrite@data& (0+255),b
  2390  00061C  0E01               	movlw	1
  2391  00061E  ECA2  F003         	call	_LCDwrite
  2392  000622  0100               	movlb	0	; () banked
  2393  000624  4BBC               	infsnz	clearLcd@res& (0+255),f,b
  2394  000626  2BBD               	incf	(clearLcd@res+1)& (0+255),f,b
  2395  000628  D7EB               	goto	l3024
  2396  00062A                     __end_of_clearLcd:
  2397                           	opt stack 0
  2398                           tblptru	equ	0xFF8
  2399                           tblptrh	equ	0xFF7
  2400                           tblptrl	equ	0xFF6
  2401                           tablat	equ	0xFF5
  2402                           prodh	equ	0xFF4
  2403                           prodl	equ	0xFF3
  2404                           intcon	equ	0xFF2
  2405                           intcon2	equ	0xFF1
  2406                           postinc0	equ	0xFEE
  2407                           wreg	equ	0xFE8
  2408                           postdec1	equ	0xFE5
  2409                           fsr1l	equ	0xFE1
  2410                           indf2	equ	0xFDF
  2411                           fsr2h	equ	0xFDA
  2412                           fsr2l	equ	0xFD9
  2413                           status	equ	0xFD8
  2414                           
  2415 ;; *************** function _blackLcd *****************
  2416 ;; Defined at:
  2417 ;;		line 81 in file "NokiaLCD.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;		None
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  res             2    8[BANK0 ] int 
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  1    wreg      void 
  2424 ;; Registers used:
  2425 ;;		wreg, status,2, status,0, cstack
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2431 ;;      Params:         0       0       0       0       0       0       0
  2432 ;;      Locals:         0       2       0       0       0       0       0
  2433 ;;      Temps:          0       0       0       0       0       0       0
  2434 ;;      Totals:         0       2       0       0       0       0       0
  2435 ;;Total ram usage:        2 bytes
  2436 ;; Hardware stack levels used:    1
  2437 ;; Hardware stack levels required when called:    6
  2438 ;; This function calls:
  2439 ;;		_LCDwrite
  2440 ;; This function is called by:
  2441 ;;		_NokiaStart
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           	psect	text13
  2446  00065C                     __ptext13:
  2447                           	opt stack 0
  2448  00065C                     _blackLcd:
  2449                           	opt stack 23
  2450                           
  2451                           ;NokiaLCD.c: 82: int res;
  2452                           ;NokiaLCD.c: 83: for(res=0;res<504;res++){
  2453                           
  2454                           ; BSR set to: 0
  2455                           ;incstack = 0
  2456  00065C  0E00               	movlw	0
  2457  00065E  0100               	movlb	0	; () banked
  2458  000660  6FBD               	movwf	(blackLcd@res+1)& (0+255),b
  2459  000662  0E00               	movlw	0
  2460  000664  6FBC               	movwf	blackLcd@res& (0+255),b
  2461  000666                     l3036:
  2462                           
  2463                           ; BSR set to: 0
  2464  000666  0100               	movlb	0	; () banked
  2465  000668  BFBD               	btfsc	(blackLcd@res+1)& (0+255),7,b
  2466  00066A  D008               	goto	l3040
  2467  00066C  0EF8               	movlw	248
  2468  00066E  0100               	movlb	0	; () banked
  2469  000670  5DBC               	subwf	blackLcd@res& (0+255),w,b
  2470  000672  0E01               	movlw	1
  2471  000674  0100               	movlb	0	; () banked
  2472  000676  59BD               	subwfb	(blackLcd@res+1)& (0+255),w,b
  2473  000678  B0D8               	btfsc	status,0,c
  2474  00067A  0012               	return	
  2475  00067C                     l3040:
  2476                           
  2477                           ; BSR set to: 0
  2478                           ;NokiaLCD.c: 84: LCDwrite(1, res);
  2479  00067C  C0BC  F0BA         	movff	blackLcd@res,LCDwrite@data
  2480  000680  0E01               	movlw	1
  2481  000682  ECA2  F003         	call	_LCDwrite
  2482  000686  0100               	movlb	0	; () banked
  2483  000688  4BBC               	infsnz	blackLcd@res& (0+255),f,b
  2484  00068A  2BBD               	incf	(blackLcd@res+1)& (0+255),f,b
  2485  00068C  D7EC               	goto	l3036
  2486  00068E                     __end_of_blackLcd:
  2487                           	opt stack 0
  2488                           tblptru	equ	0xFF8
  2489                           tblptrh	equ	0xFF7
  2490                           tblptrl	equ	0xFF6
  2491                           tablat	equ	0xFF5
  2492                           prodh	equ	0xFF4
  2493                           prodl	equ	0xFF3
  2494                           intcon	equ	0xFF2
  2495                           intcon2	equ	0xFF1
  2496                           postinc0	equ	0xFEE
  2497                           wreg	equ	0xFE8
  2498                           postdec1	equ	0xFE5
  2499                           fsr1l	equ	0xFE1
  2500                           indf2	equ	0xFDF
  2501                           fsr2h	equ	0xFDA
  2502                           fsr2l	equ	0xFD9
  2503                           status	equ	0xFD8
  2504                           
  2505 ;; *************** function _LCDwrite *****************
  2506 ;; Defined at:
  2507 ;;		line 47 in file "NokiaLCD.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  mode            1    wreg     unsigned char 
  2510 ;;  data            1    6[BANK0 ] unsigned char 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  mode            1    7[BANK0 ] unsigned char 
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      void 
  2515 ;; Registers used:
  2516 ;;		wreg, status,2, cstack
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2522 ;;      Params:         0       1       0       0       0       0       0
  2523 ;;      Locals:         0       1       0       0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0
  2525 ;;      Totals:         0       2       0       0       0       0       0
  2526 ;;Total ram usage:        2 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; Hardware stack levels required when called:    5
  2529 ;; This function calls:
  2530 ;;		_SPI1_Exchange8bit
  2531 ;; This function is called by:
  2532 ;;		_NokiaStart
  2533 ;;		_clearLcd
  2534 ;;		_blackLcd
  2535 ;;		_gotoXy
  2536 ;;		_NokiaStr
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           	psect	text14
  2541  000744                     __ptext14:
  2542                           	opt stack 0
  2543  000744                     _LCDwrite:
  2544                           	opt stack 24
  2545                           
  2546                           ; BSR set to: 0
  2547                           ;incstack = 0
  2548                           ;LCDwrite@mode stored from wreg
  2549  000744  0100               	movlb	0	; () banked
  2550  000746  6FBB               	movwf	LCDwrite@mode& (0+255),b
  2551                           
  2552                           ;NokiaLCD.c: 48: if(mode){
  2553  000748  0100               	movlb	0	; () banked
  2554  00074A  51BB               	movf	LCDwrite@mode& (0+255),w,b
  2555  00074C  0100               	movlb	0	; () banked
  2556  00074E  B4D8               	btfsc	status,2,c
  2557  000750  D002               	goto	l723
  2558                           
  2559                           ; BSR set to: 0
  2560                           
  2561                           ;NokiaLCD.c: 49: do { LATD3 = 0; } while(0);
  2562  000752  968C               	bcf	3980,3,c	;volatile
  2563                           
  2564                           ; BSR set to: 0
  2565                           ;NokiaLCD.c: 50: }
  2566  000754  D001               	goto	l725
  2567  000756                     l723:
  2568                           
  2569                           ; BSR set to: 0
  2570  000756  868C               	bsf	3980,3,c	;volatile
  2571  000758                     l725:
  2572                           
  2573                           ; BSR set to: 0
  2574  000758  908C               	bcf	3980,0,c	;volatile
  2575                           
  2576                           ; BSR set to: 0
  2577                           ;NokiaLCD.c: 55: SPI1_Exchange8bit(data);
  2578                           
  2579                           ; BSR set to: 0
  2580  00075A  0100               	movlb	0	; () banked
  2581  00075C  51BA               	movf	LCDwrite@data& (0+255),w,b
  2582  00075E  ECE4  F003         	call	_SPI1_Exchange8bit
  2583                           
  2584                           ;NokiaLCD.c: 56: do { LATD0 = 1; } while(0);
  2585  000762  808C               	bsf	3980,0,c	;volatile
  2586  000764  0012               	return	
  2587  000766                     __end_of_LCDwrite:
  2588                           	opt stack 0
  2589                           tblptru	equ	0xFF8
  2590                           tblptrh	equ	0xFF7
  2591                           tblptrl	equ	0xFF6
  2592                           tablat	equ	0xFF5
  2593                           prodh	equ	0xFF4
  2594                           prodl	equ	0xFF3
  2595                           intcon	equ	0xFF2
  2596                           intcon2	equ	0xFF1
  2597                           postinc0	equ	0xFEE
  2598                           wreg	equ	0xFE8
  2599                           postdec1	equ	0xFE5
  2600                           fsr1l	equ	0xFE1
  2601                           indf2	equ	0xFDF
  2602                           fsr2h	equ	0xFDA
  2603                           fsr2l	equ	0xFD9
  2604                           status	equ	0xFD8
  2605                           
  2606 ;; *************** function _SPI1_Exchange8bit *****************
  2607 ;; Defined at:
  2608 ;;		line 78 in file "mcc_generated_files/spi1.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  data            1    wreg     unsigned char 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  data            1    0[BANK0 ] unsigned char 
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  1    wreg      unsigned char 
  2615 ;; Registers used:
  2616 ;;		wreg, status,2
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2622 ;;      Params:         0       0       0       0       0       0       0
  2623 ;;      Locals:         0       1       0       0       0       0       0
  2624 ;;      Temps:          0       0       0       0       0       0       0
  2625 ;;      Totals:         0       1       0       0       0       0       0
  2626 ;;Total ram usage:        1 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; Hardware stack levels required when called:    4
  2629 ;; This function calls:
  2630 ;;		Nothing
  2631 ;; This function is called by:
  2632 ;;		_LCDwrite
  2633 ;;		_SPI1_Exchange8bitBuffer
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           	psect	text15
  2638  0007C8                     __ptext15:
  2639                           	opt stack 0
  2640  0007C8                     _SPI1_Exchange8bit:
  2641                           	opt stack 24
  2642                           
  2643                           ;incstack = 0
  2644                           ;SPI1_Exchange8bit@data stored from wreg
  2645  0007C8  0100               	movlb	0	; () banked
  2646  0007CA  6FB4               	movwf	SPI1_Exchange8bit@data& (0+255),b
  2647                           
  2648                           ;spi1.c: 81: SSP1CON1bits.WCOL = 0;
  2649  0007CC  9EC6               	bcf	4038,7,c	;volatile
  2650                           
  2651                           ;spi1.c: 83: SSP1BUF = data;
  2652  0007CE  C0B4  FFC9         	movff	SPI1_Exchange8bit@data,4041	;volatile
  2653  0007D2                     l223:
  2654  0007D2  A0C7               	btfss	4039,0,c	;volatile
  2655  0007D4  D7FE               	goto	l223
  2656                           
  2657                           ;spi1.c: 87: }
  2658                           ;spi1.c: 89: return (SSP1BUF);
  2659  0007D6  50C9               	movf	4041,w,c	;volatile
  2660  0007D8  0012               	return		;funcret
  2661  0007DA                     __end_of_SPI1_Exchange8bit:
  2662                           	opt stack 0
  2663                           tblptru	equ	0xFF8
  2664                           tblptrh	equ	0xFF7
  2665                           tblptrl	equ	0xFF6
  2666                           tablat	equ	0xFF5
  2667                           prodh	equ	0xFF4
  2668                           prodl	equ	0xFF3
  2669                           intcon	equ	0xFF2
  2670                           intcon2	equ	0xFF1
  2671                           postinc0	equ	0xFEE
  2672                           wreg	equ	0xFE8
  2673                           postdec1	equ	0xFE5
  2674                           fsr1l	equ	0xFE1
  2675                           indf2	equ	0xFDF
  2676                           fsr2h	equ	0xFDA
  2677                           fsr2l	equ	0xFD9
  2678                           status	equ	0xFD8
  2679                           
  2680 ;; *************** function _SPI1_Initialize *****************
  2681 ;; Defined at:
  2682 ;;		line 64 in file "mcc_generated_files/spi1.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;		None
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;		None
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1    wreg      void 
  2689 ;; Registers used:
  2690 ;;		wreg, status,2
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2696 ;;      Params:         0       0       0       0       0       0       0
  2697 ;;      Locals:         0       0       0       0       0       0       0
  2698 ;;      Temps:          0       0       0       0       0       0       0
  2699 ;;      Totals:         0       0       0       0       0       0       0
  2700 ;;Total ram usage:        0 bytes
  2701 ;; Hardware stack levels used:    1
  2702 ;; Hardware stack levels required when called:    4
  2703 ;; This function calls:
  2704 ;;		Nothing
  2705 ;; This function is called by:
  2706 ;;		_NokiaStart
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           	psect	text16
  2711  0007E8                     __ptext16:
  2712                           	opt stack 0
  2713  0007E8                     _SPI1_Initialize:
  2714                           	opt stack 25
  2715                           
  2716                           ;spi1.c: 69: SSP1STAT = 0x80;
  2717                           
  2718                           ;incstack = 0
  2719  0007E8  0E80               	movlw	128
  2720  0007EA  6EC7               	movwf	4039,c	;volatile
  2721                           
  2722                           ;spi1.c: 72: SSP1CON1 = 0x30;
  2723  0007EC  0E30               	movlw	48
  2724  0007EE  6EC6               	movwf	4038,c	;volatile
  2725                           
  2726                           ;spi1.c: 75: SSP1ADD = 0x00;
  2727  0007F0  0E00               	movlw	0
  2728  0007F2  6EC8               	movwf	4040,c	;volatile
  2729  0007F4  0012               	return		;funcret
  2730  0007F6                     __end_of_SPI1_Initialize:
  2731                           	opt stack 0
  2732                           tblptru	equ	0xFF8
  2733                           tblptrh	equ	0xFF7
  2734                           tblptrl	equ	0xFF6
  2735                           tablat	equ	0xFF5
  2736                           prodh	equ	0xFF4
  2737                           prodl	equ	0xFF3
  2738                           intcon	equ	0xFF2
  2739                           intcon2	equ	0xFF1
  2740                           postinc0	equ	0xFEE
  2741                           wreg	equ	0xFE8
  2742                           postdec1	equ	0xFE5
  2743                           fsr1l	equ	0xFE1
  2744                           indf2	equ	0xFDF
  2745                           fsr2h	equ	0xFDA
  2746                           fsr2l	equ	0xFD9
  2747                           status	equ	0xFD8
  2748                           
  2749 ;; *************** function _Delay *****************
  2750 ;; Defined at:
  2751 ;;		line 11 in file "Functions.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  wait            4    0[BANK0 ] long 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;  i               4    5[BANK0 ] long 
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  1    wreg      void 
  2758 ;; Registers used:
  2759 ;;		wreg, status,2, status,0
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2765 ;;      Params:         0       4       0       0       0       0       0
  2766 ;;      Locals:         0       4       0       0       0       0       0
  2767 ;;      Temps:          0       1       0       0       0       0       0
  2768 ;;      Totals:         0       9       0       0       0       0       0
  2769 ;;Total ram usage:        9 bytes
  2770 ;; Hardware stack levels used:    1
  2771 ;; Hardware stack levels required when called:    4
  2772 ;; This function calls:
  2773 ;;		Nothing
  2774 ;; This function is called by:
  2775 ;;		_main
  2776 ;;		_NokiaStart
  2777 ;;		_respondECU
  2778 ;;		_Precharge
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           	psect	text17
  2783  0004D6                     __ptext17:
  2784                           	opt stack 0
  2785  0004D6                     _Delay:
  2786                           	opt stack 25
  2787                           
  2788                           ;Functions.c: 12: long int i = 0;
  2789                           
  2790                           ;incstack = 0
  2791  0004D6  0E00               	movlw	0
  2792  0004D8  0100               	movlb	0	; () banked
  2793  0004DA  6FB9               	movwf	Delay@i& (0+255),b
  2794  0004DC  0E00               	movlw	0
  2795  0004DE  6FBA               	movwf	(Delay@i+1)& (0+255),b
  2796  0004E0  0E00               	movlw	0
  2797  0004E2  6FBB               	movwf	(Delay@i+2)& (0+255),b
  2798  0004E4  0E00               	movlw	0
  2799  0004E6  6FBC               	movwf	(Delay@i+3)& (0+255),b
  2800                           
  2801                           ;Functions.c: 13: for (; wait > i; i++) {
  2802  0004E8  D010               	goto	l3020
  2803  0004EA                     l3016:
  2804                           
  2805                           ; BSR set to: 0
  2806                           ;Functions.c: 14: _delay((unsigned long)((1)*(16000000/4000.0)));
  2807  0004EA  0E06               	movlw	6
  2808  0004EC  0100               	movlb	0	; () banked
  2809  0004EE  6FB8               	movwf	??_Delay& (0+255),b
  2810  0004F0  0E30               	movlw	48
  2811  0004F2                     u2237:
  2812  0004F2  2EE8               	decfsz	wreg,f,c
  2813  0004F4  D7FE               	goto	u2237
  2814  0004F6  2FB8               	decfsz	??_Delay& (0+255),f,b
  2815  0004F8  D7FC               	goto	u2237
  2816  0004FA  D000               	nop2	
  2817  0004FC  0E01               	movlw	1
  2818  0004FE  0100               	movlb	0	; () banked
  2819  000500  27B9               	addwf	Delay@i& (0+255),f,b
  2820  000502  0E00               	movlw	0
  2821  000504  23BA               	addwfc	(Delay@i+1)& (0+255),f,b
  2822  000506  23BB               	addwfc	(Delay@i+2)& (0+255),f,b
  2823  000508  23BC               	addwfc	(Delay@i+3)& (0+255),f,b
  2824  00050A                     l3020:
  2825                           
  2826                           ; BSR set to: 0
  2827  00050A  0100               	movlb	0	; () banked
  2828  00050C  51B4               	movf	Delay@wait& (0+255),w,b
  2829  00050E  0100               	movlb	0	; () banked
  2830  000510  5DB9               	subwf	Delay@i& (0+255),w,b
  2831  000512  0100               	movlb	0	; () banked
  2832  000514  51B5               	movf	(Delay@wait+1)& (0+255),w,b
  2833  000516  0100               	movlb	0	; () banked
  2834  000518  59BA               	subwfb	(Delay@i+1)& (0+255),w,b
  2835  00051A  0100               	movlb	0	; () banked
  2836  00051C  51B6               	movf	(Delay@wait+2)& (0+255),w,b
  2837  00051E  0100               	movlb	0	; () banked
  2838  000520  59BB               	subwfb	(Delay@i+2)& (0+255),w,b
  2839  000522  0100               	movlb	0	; () banked
  2840  000524  51BC               	movf	(Delay@i+3)& (0+255),w,b
  2841  000526  0A80               	xorlw	128
  2842  000528  0100               	movlb	0	; () banked
  2843  00052A  6FB8               	movwf	??_Delay& (0+255),b
  2844  00052C  0100               	movlb	0	; () banked
  2845  00052E  51B7               	movf	(Delay@wait+3)& (0+255),w,b
  2846  000530  0A80               	xorlw	128
  2847  000532  0100               	movlb	0	; () banked
  2848  000534  59B8               	subwfb	??_Delay& (0+255),w,b
  2849  000536  B0D8               	btfsc	status,0,c
  2850  000538  0012               	return	
  2851  00053A  D7D7               	goto	l3016
  2852  00053C                     __end_of_Delay:
  2853                           	opt stack 0
  2854                           tblptru	equ	0xFF8
  2855                           tblptrh	equ	0xFF7
  2856                           tblptrl	equ	0xFF6
  2857                           tablat	equ	0xFF5
  2858                           prodh	equ	0xFF4
  2859                           prodl	equ	0xFF3
  2860                           intcon	equ	0xFF2
  2861                           intcon2	equ	0xFF1
  2862                           postinc0	equ	0xFEE
  2863                           wreg	equ	0xFE8
  2864                           postdec1	equ	0xFE5
  2865                           fsr1l	equ	0xFE1
  2866                           indf2	equ	0xFDF
  2867                           fsr2h	equ	0xFDA
  2868                           fsr2l	equ	0xFD9
  2869                           status	equ	0xFD8
  2870                           
  2871 ;; *************** function _INTERRUPT_InterruptManager *****************
  2872 ;; Defined at:
  2873 ;;		line 68 in file "mcc_generated_files/interrupt_manager.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;		None
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;		None
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  1    wreg      void 
  2880 ;; Registers used:
  2881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2887 ;;      Params:         0       0       0       0       0       0       0
  2888 ;;      Locals:         0       0       0       0       0       0       0
  2889 ;;      Temps:         14       0       0       0       0       0       0
  2890 ;;      Totals:        14       0       0       0       0       0       0
  2891 ;;Total ram usage:       14 bytes
  2892 ;; Hardware stack levels used:    1
  2893 ;; Hardware stack levels required when called:    3
  2894 ;; This function calls:
  2895 ;;		_EUSART1_Receive_ISR
  2896 ;;		_EUSART1_Transmit_ISR
  2897 ;;		_EUSART2_Receive_ISR
  2898 ;;		_EUSART2_Transmit_ISR
  2899 ;; This function is called by:
  2900 ;;		Interrupt level 2
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	intcode
  2905  000008                     __pintcode:
  2906                           	opt stack 0
  2907  000008                     _INTERRUPT_InterruptManager:
  2908                           	opt stack 23
  2909                           
  2910                           ; BSR set to: 0
  2911                           ;incstack = 0
  2912  000008  824E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2913  00000A  CFFA F033          	movff	pclath,??_INTERRUPT_InterruptManager
  2914  00000E  CFFB F034          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2915  000012  CFE9 F035          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  2916  000016  CFEA F036          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  2917  00001A  CFE1 F037          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  2918  00001E  CFE2 F038          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  2919  000022  CFD9 F039          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  2920  000026  CFDA F03A          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  2921  00002A  CFF3 F03B          	movff	prodl,??_INTERRUPT_InterruptManager+8
  2922  00002E  CFF4 F03C          	movff	prodh,??_INTERRUPT_InterruptManager+9
  2923  000032  CFF6 F03D          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  2924  000036  CFF7 F03E          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  2925  00003A  CFF8 F03F          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  2926  00003E  CFF5 F040          	movff	tablat,??_INTERRUPT_InterruptManager+13
  2927                           
  2928                           ;interrupt_manager.c: 70: if (PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1) {
  2929  000042  BAA3               	btfsc	4003,5,c	;volatile
  2930  000044  AAA4               	btfss	4004,5,c	;volatile
  2931  000046  D003               	goto	i2l175
  2932                           
  2933                           ;interrupt_manager.c: 71: EUSART2_Receive_ISR();
  2934  000048  EC77  F003         	call	_EUSART2_Receive_ISR	;wreg free
  2935                           
  2936                           ;interrupt_manager.c: 72: } else if (PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1) {
  2937  00004C  D011               	goto	i2l183
  2938  00004E                     i2l175:
  2939  00004E  B8A3               	btfsc	4003,4,c	;volatile
  2940  000050  A8A4               	btfss	4004,4,c	;volatile
  2941  000052  D003               	goto	i2l177
  2942                           
  2943                           ;interrupt_manager.c: 73: EUSART2_Transmit_ISR();
  2944  000054  EC60  F003         	call	_EUSART2_Transmit_ISR	;wreg free
  2945                           
  2946                           ;interrupt_manager.c: 74: } else if (PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1) {
  2947  000058  D00B               	goto	i2l183
  2948  00005A                     i2l177:
  2949  00005A  BA9D               	btfsc	3997,5,c	;volatile
  2950  00005C  AA9E               	btfss	3998,5,c	;volatile
  2951  00005E  D003               	goto	i2l179
  2952                           
  2953                           ;interrupt_manager.c: 75: EUSART1_Receive_ISR();
  2954  000060  ECB3  F003         	call	_EUSART1_Receive_ISR	;wreg free
  2955                           
  2956                           ;interrupt_manager.c: 76: } else if (PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1) {
  2957  000064  D005               	goto	i2l183
  2958  000066                     i2l179:
  2959  000066  B89D               	btfsc	3997,4,c	;volatile
  2960  000068  A89E               	btfss	3998,4,c	;volatile
  2961  00006A  D002               	goto	i2l183
  2962                           
  2963                           ;interrupt_manager.c: 77: EUSART1_Transmit_ISR();
  2964  00006C  EC47  F003         	call	_EUSART1_Transmit_ISR	;wreg free
  2965  000070                     i2l183:
  2966  000070  C040  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  2967  000074  C03F  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  2968  000078  C03E  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  2969  00007C  C03D  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  2970  000080  C03C  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  2971  000084  C03B  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  2972  000088  C03A  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  2973  00008C  C039  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  2974  000090  C038  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  2975  000094  C037  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  2976  000098  C036  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  2977  00009C  C035  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  2978  0000A0  C034  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2979  0000A4  C033  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2980  0000A8  924E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2981  0000AA  0011               	retfie		f
  2982  0000AC                     __end_of_INTERRUPT_InterruptManager:
  2983                           	opt stack 0
  2984                           pclatu	equ	0xFFB
  2985                           pclath	equ	0xFFA
  2986                           tblptru	equ	0xFF8
  2987                           tblptrh	equ	0xFF7
  2988                           tblptrl	equ	0xFF6
  2989                           tablat	equ	0xFF5
  2990                           prodh	equ	0xFF4
  2991                           prodl	equ	0xFF3
  2992                           intcon	equ	0xFF2
  2993                           intcon2	equ	0xFF1
  2994                           postinc0	equ	0xFEE
  2995                           fsr0h	equ	0xFEA
  2996                           fsr0l	equ	0xFE9
  2997                           wreg	equ	0xFE8
  2998                           postdec1	equ	0xFE5
  2999                           fsr1h	equ	0xFE2
  3000                           fsr1l	equ	0xFE1
  3001                           indf2	equ	0xFDF
  3002                           fsr2h	equ	0xFDA
  3003                           fsr2l	equ	0xFD9
  3004                           status	equ	0xFD8
  3005                           
  3006 ;; *************** function _EUSART2_Transmit_ISR *****************
  3007 ;; Defined at:
  3008 ;;		line 155 in file "mcc_generated_files/eusart2.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;		None
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;		None
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  1    wreg      void 
  3015 ;; Registers used:
  3016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3022 ;;      Params:         0       0       0       0       0       0       0
  3023 ;;      Locals:         0       0       0       0       0       0       0
  3024 ;;      Temps:          0       0       0       0       0       0       0
  3025 ;;      Totals:         0       0       0       0       0       0       0
  3026 ;;Total ram usage:        0 bytes
  3027 ;; Hardware stack levels used:    1
  3028 ;; This function calls:
  3029 ;;		Nothing
  3030 ;; This function is called by:
  3031 ;;		_INTERRUPT_InterruptManager
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           	psect	text19
  3036  0006C0                     __ptext19:
  3037                           	opt stack 0
  3038  0006C0                     _EUSART2_Transmit_ISR:
  3039                           	opt stack 25
  3040                           
  3041                           ;eusart2.c: 158: if (sizeof (eusart2TxBuffer) > eusart2TxBufferRemaining) {
  3042                           
  3043                           ;incstack = 0
  3044  0006C0  0E08               	movlw	8
  3045  0006C2  604D               	cpfslt	_eusart2TxBufferRemaining,c	;volatile
  3046  0006C4  D012               	goto	i2l97
  3047                           
  3048                           ;eusart2.c: 159: TXREG2 = eusart2TxBuffer[eusart2TxTail++];
  3049  0006C6  501F               	movf	_eusart2TxTail,w,c
  3050  0006C8  0D01               	mullw	1
  3051  0006CA  0E90               	movlw	low _eusart2TxBuffer
  3052  0006CC  24F3               	addwf	prodl,w,c
  3053  0006CE  6ED9               	movwf	fsr2l,c
  3054  0006D0  0E00               	movlw	high _eusart2TxBuffer
  3055  0006D2  20F4               	addwfc	prodh,w,c
  3056  0006D4  6EDA               	movwf	fsr2h,c
  3057  0006D6  50DF               	movf	indf2,w,c
  3058  0006D8  6E73               	movwf	3955,c	;volatile
  3059  0006DA  2A1F               	incf	_eusart2TxTail,f,c
  3060                           
  3061                           ;eusart2.c: 160: if (sizeof (eusart2TxBuffer) <= eusart2TxTail) {
  3062  0006DC  0E07               	movlw	7
  3063  0006DE  641F               	cpfsgt	_eusart2TxTail,c
  3064  0006E0  D002               	goto	i2l2352
  3065                           
  3066                           ;eusart2.c: 161: eusart2TxTail = 0;
  3067  0006E2  0E00               	movlw	0
  3068  0006E4  6E1F               	movwf	_eusart2TxTail,c
  3069  0006E6                     i2l2352:
  3070                           
  3071                           ;eusart2.c: 162: }
  3072                           ;eusart2.c: 163: eusart2TxBufferRemaining++;
  3073  0006E6  2A4D               	incf	_eusart2TxBufferRemaining,f,c	;volatile
  3074                           
  3075                           ;eusart2.c: 164: } else {
  3076  0006E8  0012               	return	
  3077  0006EA                     i2l97:
  3078                           
  3079                           ;eusart2.c: 165: PIE3bits.TX2IE = 0;
  3080  0006EA  98A3               	bcf	4003,4,c	;volatile
  3081  0006EC  0012               	return	
  3082  0006EE                     __end_of_EUSART2_Transmit_ISR:
  3083                           	opt stack 0
  3084                           pclatu	equ	0xFFB
  3085                           pclath	equ	0xFFA
  3086                           tblptru	equ	0xFF8
  3087                           tblptrh	equ	0xFF7
  3088                           tblptrl	equ	0xFF6
  3089                           tablat	equ	0xFF5
  3090                           prodh	equ	0xFF4
  3091                           prodl	equ	0xFF3
  3092                           intcon	equ	0xFF2
  3093                           intcon2	equ	0xFF1
  3094                           postinc0	equ	0xFEE
  3095                           fsr0h	equ	0xFEA
  3096                           fsr0l	equ	0xFE9
  3097                           wreg	equ	0xFE8
  3098                           postdec1	equ	0xFE5
  3099                           fsr1h	equ	0xFE2
  3100                           fsr1l	equ	0xFE1
  3101                           indf2	equ	0xFDF
  3102                           fsr2h	equ	0xFDA
  3103                           fsr2l	equ	0xFD9
  3104                           status	equ	0xFD8
  3105                           
  3106 ;; *************** function _EUSART2_Receive_ISR *****************
  3107 ;; Defined at:
  3108 ;;		line 169 in file "mcc_generated_files/eusart2.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;		None
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;		None
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  1    wreg      void 
  3115 ;; Registers used:
  3116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3122 ;;      Params:         0       0       0       0       0       0       0
  3123 ;;      Locals:         0       0       0       0       0       0       0
  3124 ;;      Temps:          0       0       0       0       0       0       0
  3125 ;;      Totals:         0       0       0       0       0       0       0
  3126 ;;Total ram usage:        0 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; This function calls:
  3129 ;;		Nothing
  3130 ;; This function is called by:
  3131 ;;		_INTERRUPT_InterruptManager
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135                           	psect	text20
  3136  0006EE                     __ptext20:
  3137                           	opt stack 0
  3138  0006EE                     _EUSART2_Receive_ISR:
  3139                           	opt stack 25
  3140                           
  3141                           ;eusart2.c: 170: if (1 == RC2STAbits.OERR) {
  3142                           
  3143                           ;incstack = 0
  3144  0006EE  A271               	btfss	3953,1,c	;volatile
  3145  0006F0  D002               	goto	i2l2358
  3146                           
  3147                           ;eusart2.c: 173: RC2STAbits.CREN = 0;
  3148  0006F2  9871               	bcf	3953,4,c	;volatile
  3149                           
  3150                           ;eusart2.c: 174: RC2STAbits.CREN = 1;
  3151  0006F4  8871               	bsf	3953,4,c	;volatile
  3152  0006F6                     i2l2358:
  3153                           
  3154                           ;eusart2.c: 175: }
  3155                           ;eusart2.c: 178: eusart2RxBuffer[eusart2RxHead++] = RCREG2;
  3156  0006F6  501C               	movf	_eusart2RxHead,w,c
  3157  0006F8  0D01               	mullw	1
  3158  0006FA  0E88               	movlw	low _eusart2RxBuffer
  3159  0006FC  24F3               	addwf	prodl,w,c
  3160  0006FE  6ED9               	movwf	fsr2l,c
  3161  000700  0E00               	movlw	high _eusart2RxBuffer
  3162  000702  20F4               	addwfc	prodh,w,c
  3163  000704  6EDA               	movwf	fsr2h,c
  3164  000706  CF74 FFDF          	movff	3956,indf2	;volatile
  3165  00070A  2A1C               	incf	_eusart2RxHead,f,c
  3166                           
  3167                           ;eusart2.c: 179: if (sizeof (eusart2RxBuffer) <= eusart2RxHead) {
  3168  00070C  0E07               	movlw	7
  3169  00070E  641C               	cpfsgt	_eusart2RxHead,c
  3170  000710  D002               	goto	i2l2366
  3171                           
  3172                           ;eusart2.c: 180: eusart2RxHead = 0;
  3173  000712  0E00               	movlw	0
  3174  000714  6E1C               	movwf	_eusart2RxHead,c
  3175  000716                     i2l2366:
  3176                           
  3177                           ;eusart2.c: 181: }
  3178                           ;eusart2.c: 182: eusart2RxCount++;
  3179  000716  2A1B               	incf	_eusart2RxCount,f,c	;volatile
  3180  000718  0012               	return		;funcret
  3181  00071A                     __end_of_EUSART2_Receive_ISR:
  3182                           	opt stack 0
  3183                           pclatu	equ	0xFFB
  3184                           pclath	equ	0xFFA
  3185                           tblptru	equ	0xFF8
  3186                           tblptrh	equ	0xFF7
  3187                           tblptrl	equ	0xFF6
  3188                           tablat	equ	0xFF5
  3189                           prodh	equ	0xFF4
  3190                           prodl	equ	0xFF3
  3191                           intcon	equ	0xFF2
  3192                           intcon2	equ	0xFF1
  3193                           postinc0	equ	0xFEE
  3194                           fsr0h	equ	0xFEA
  3195                           fsr0l	equ	0xFE9
  3196                           wreg	equ	0xFE8
  3197                           postdec1	equ	0xFE5
  3198                           fsr1h	equ	0xFE2
  3199                           fsr1l	equ	0xFE1
  3200                           indf2	equ	0xFDF
  3201                           fsr2h	equ	0xFDA
  3202                           fsr2l	equ	0xFD9
  3203                           status	equ	0xFD8
  3204                           
  3205 ;; *************** function _EUSART1_Transmit_ISR *****************
  3206 ;; Defined at:
  3207 ;;		line 150 in file "UART.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;		None
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;		None
  3212 ;; Return value:  Size  Location     Type
  3213 ;;                  2  169[None  ] int 
  3214 ;; Registers used:
  3215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3221 ;;      Params:         0       0       0       0       0       0       0
  3222 ;;      Locals:         0       0       0       0       0       0       0
  3223 ;;      Temps:          0       0       0       0       0       0       0
  3224 ;;      Totals:         0       0       0       0       0       0       0
  3225 ;;Total ram usage:        0 bytes
  3226 ;; Hardware stack levels used:    1
  3227 ;; Hardware stack levels required when called:    2
  3228 ;; This function calls:
  3229 ;;		_UART_buff_get
  3230 ;;		_UART_buff_size
  3231 ;; This function is called by:
  3232 ;;		_INTERRUPT_InterruptManager
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text21
  3237  00068E                     __ptext21:
  3238                           	opt stack 0
  3239  00068E                     _EUSART1_Transmit_ISR:
  3240                           	opt stack 23
  3241                           
  3242                           ;UART.c: 152: if (UART_buff_size(&output_buffer) > 0) {
  3243                           
  3244                           ;incstack = 0
  3245  00068E  0E00               	movlw	low _output_buffer
  3246  000690  6E27               	movwf	UART_buff_size@_this,c
  3247  000692  0E03               	movlw	high _output_buffer
  3248  000694  6E28               	movwf	UART_buff_size@_this+1,c
  3249  000696  ECD9  F003         	call	_UART_buff_size	;wreg free
  3250  00069A  BE28               	btfsc	?_UART_buff_size+1,7,c
  3251  00069C  D00D               	goto	i2l2378
  3252  00069E  5028               	movf	?_UART_buff_size+1,w,c
  3253  0006A0  E103               	bnz	i2u113_40
  3254  0006A2  0427               	decf	?_UART_buff_size,w,c
  3255  0006A4  A0D8               	btfss	status,0,c
  3256  0006A6  D008               	goto	i2l2378
  3257  0006A8                     i2u113_40:
  3258                           
  3259                           ;UART.c: 153: TXREG1 = UART_buff_get(&output_buffer);
  3260  0006A8  0E00               	movlw	low _output_buffer
  3261  0006AA  6E2D               	movwf	UART_buff_get@_this,c
  3262  0006AC  0E03               	movlw	high _output_buffer
  3263  0006AE  6E2E               	movwf	UART_buff_get@_this+1,c
  3264  0006B0  ECE7  F001         	call	_UART_buff_get	;wreg free
  3265  0006B4  6EAD               	movwf	4013,c	;volatile
  3266                           
  3267                           ;UART.c: 154: } else {
  3268  0006B6  0012               	return	
  3269  0006B8                     i2l2378:
  3270                           
  3271                           ;UART.c: 155: Transmit_stall = 1;
  3272  0006B8  0E01               	movlw	1
  3273  0006BA  6E41               	movwf	_Transmit_stall,c
  3274                           
  3275                           ;UART.c: 156: PIE1bits.TX1IE = 0;
  3276  0006BC  989D               	bcf	3997,4,c	;volatile
  3277  0006BE  0012               	return	
  3278  0006C0                     __end_of_EUSART1_Transmit_ISR:
  3279                           	opt stack 0
  3280                           pclatu	equ	0xFFB
  3281                           pclath	equ	0xFFA
  3282                           tblptru	equ	0xFF8
  3283                           tblptrh	equ	0xFF7
  3284                           tblptrl	equ	0xFF6
  3285                           tablat	equ	0xFF5
  3286                           prodh	equ	0xFF4
  3287                           prodl	equ	0xFF3
  3288                           intcon	equ	0xFF2
  3289                           intcon2	equ	0xFF1
  3290                           postinc0	equ	0xFEE
  3291                           fsr0h	equ	0xFEA
  3292                           fsr0l	equ	0xFE9
  3293                           wreg	equ	0xFE8
  3294                           postdec1	equ	0xFE5
  3295                           fsr1h	equ	0xFE2
  3296                           fsr1l	equ	0xFE1
  3297                           indf2	equ	0xFDF
  3298                           fsr2h	equ	0xFDA
  3299                           fsr2l	equ	0xFD9
  3300                           status	equ	0xFD8
  3301                           
  3302 ;; *************** function _UART_buff_size *****************
  3303 ;; Defined at:
  3304 ;;		line 102 in file "UART.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;  _this           2    0[COMRAM] PTR struct UART_ring_buf
  3307 ;;		 -> output_buffer(206), input_buffer(206), 
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;		None
  3310 ;; Return value:  Size  Location     Type
  3311 ;;                  2    0[COMRAM] int 
  3312 ;; Registers used:
  3313 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 0/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3319 ;;      Params:         2       0       0       0       0       0       0
  3320 ;;      Locals:         0       0       0       0       0       0       0
  3321 ;;      Temps:          0       0       0       0       0       0       0
  3322 ;;      Totals:         2       0       0       0       0       0       0
  3323 ;;Total ram usage:        2 bytes
  3324 ;; Hardware stack levels used:    1
  3325 ;; This function calls:
  3326 ;;		Nothing
  3327 ;; This function is called by:
  3328 ;;		_EUSART1_Transmit_ISR
  3329 ;;		_Receive_available
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           	psect	text22
  3334  0007B2                     __ptext22:
  3335                           	opt stack 0
  3336  0007B2                     _UART_buff_size:
  3337                           	opt stack 24
  3338                           
  3339                           ;UART.c: 103: return (_this->count);
  3340                           
  3341                           ;incstack = 0
  3342  0007B2  EE20 F0CC          	lfsr	2,204
  3343  0007B6  5027               	movf	UART_buff_size@_this,w,c
  3344  0007B8  26D9               	addwf	fsr2l,f,c
  3345  0007BA  5028               	movf	UART_buff_size@_this+1,w,c
  3346  0007BC  22DA               	addwfc	fsr2h,f,c
  3347  0007BE  CFDE F027          	movff	postinc2,?_UART_buff_size
  3348  0007C2  CFDD F028          	movff	postdec2,?_UART_buff_size+1
  3349  0007C6  0012               	return	
  3350  0007C8                     __end_of_UART_buff_size:
  3351                           	opt stack 0
  3352                           pclatu	equ	0xFFB
  3353                           pclath	equ	0xFFA
  3354                           tblptru	equ	0xFF8
  3355                           tblptrh	equ	0xFF7
  3356                           tblptrl	equ	0xFF6
  3357                           tablat	equ	0xFF5
  3358                           prodh	equ	0xFF4
  3359                           prodl	equ	0xFF3
  3360                           intcon	equ	0xFF2
  3361                           intcon2	equ	0xFF1
  3362                           postinc0	equ	0xFEE
  3363                           fsr0h	equ	0xFEA
  3364                           fsr0l	equ	0xFE9
  3365                           wreg	equ	0xFE8
  3366                           postdec1	equ	0xFE5
  3367                           fsr1h	equ	0xFE2
  3368                           fsr1l	equ	0xFE1
  3369                           indf2	equ	0xFDF
  3370                           postinc2	equ	0xFDE
  3371                           postdec2	equ	0xFDD
  3372                           fsr2h	equ	0xFDA
  3373                           fsr2l	equ	0xFD9
  3374                           status	equ	0xFD8
  3375                           
  3376 ;; *************** function _UART_buff_get *****************
  3377 ;; Defined at:
  3378 ;;		line 81 in file "UART.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
  3381 ;;		 -> output_buffer(206), input_buffer(206), 
  3382 ;; Auto vars:     Size  Location     Type
  3383 ;;  c               1   10[COMRAM] unsigned char 
  3384 ;; Return value:  Size  Location     Type
  3385 ;;                  1    wreg      unsigned char 
  3386 ;; Registers used:
  3387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3388 ;; Tracked objects:
  3389 ;;		On entry : 0/0
  3390 ;;		On exit  : 0/0
  3391 ;;		Unchanged: 0/0
  3392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3393 ;;      Params:         2       0       0       0       0       0       0
  3394 ;;      Locals:         1       0       0       0       0       0       0
  3395 ;;      Temps:          2       0       0       0       0       0       0
  3396 ;;      Totals:         5       0       0       0       0       0       0
  3397 ;;Total ram usage:        5 bytes
  3398 ;; Hardware stack levels used:    1
  3399 ;; Hardware stack levels required when called:    1
  3400 ;; This function calls:
  3401 ;;		_UART_buff_modulo_inc
  3402 ;; This function is called by:
  3403 ;;		_EUSART1_Transmit_ISR
  3404 ;;		_Receive_get
  3405 ;;		_Send_put
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409                           	psect	text23
  3410  0003CE                     __ptext23:
  3411                           	opt stack 0
  3412  0003CE                     _UART_buff_get:
  3413                           	opt stack 23
  3414                           
  3415                           ;UART.c: 82: unsigned char c;
  3416                           ;UART.c: 83: if (_this->count > 0) {
  3417                           
  3418                           ;incstack = 0
  3419  0003CE  EE20 F0CC          	lfsr	2,204
  3420  0003D2  502D               	movf	UART_buff_get@_this,w,c
  3421  0003D4  26D9               	addwf	fsr2l,f,c
  3422  0003D6  502E               	movf	UART_buff_get@_this+1,w,c
  3423  0003D8  22DA               	addwfc	fsr2h,f,c
  3424  0003DA  0E01               	movlw	1
  3425  0003DC  BEDB               	btfsc	plusw2,7,c
  3426  0003DE  D03C               	goto	i2l2282
  3427  0003E0  0E01               	movlw	1
  3428  0003E2  50DB               	movf	plusw2,w,c
  3429  0003E4  E103               	bnz	i2u101_40
  3430  0003E6  04DE               	decf	postinc2,w,c
  3431  0003E8  A0D8               	btfss	status,0,c
  3432  0003EA  D036               	goto	i2l2282
  3433  0003EC                     i2u101_40:
  3434                           
  3435                           ;UART.c: 84: c = _this->buf[_this->tail];
  3436  0003EC  EE20 F0CA          	lfsr	2,202
  3437  0003F0  502D               	movf	UART_buff_get@_this,w,c
  3438  0003F2  26D9               	addwf	fsr2l,f,c
  3439  0003F4  502E               	movf	UART_buff_get@_this+1,w,c
  3440  0003F6  22DA               	addwfc	fsr2h,f,c
  3441  0003F8  CFDE F02F          	movff	postinc2,??_UART_buff_get
  3442  0003FC  CFDD F030          	movff	postdec2,??_UART_buff_get+1
  3443  000400  502F               	movf	??_UART_buff_get,w,c
  3444  000402  242D               	addwf	UART_buff_get@_this,w,c
  3445  000404  6ED9               	movwf	fsr2l,c
  3446  000406  5030               	movf	??_UART_buff_get+1,w,c
  3447  000408  202E               	addwfc	UART_buff_get@_this+1,w,c
  3448  00040A  6EDA               	movwf	fsr2h,c
  3449  00040C  50DF               	movf	indf2,w,c
  3450  00040E  6E31               	movwf	UART_buff_get@c,c
  3451                           
  3452                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  3453  000410  EE20 F0CA          	lfsr	2,202
  3454  000414  502D               	movf	UART_buff_get@_this,w,c
  3455  000416  26D9               	addwf	fsr2l,f,c
  3456  000418  502E               	movf	UART_buff_get@_this+1,w,c
  3457  00041A  22DA               	addwfc	fsr2h,f,c
  3458  00041C  CFDE F027          	movff	postinc2,UART_buff_modulo_inc@value
  3459  000420  CFDD F028          	movff	postdec2,UART_buff_modulo_inc@value+1
  3460  000424  0E00               	movlw	0
  3461  000426  6E2A               	movwf	UART_buff_modulo_inc@modulus+1,c
  3462  000428  0EC8               	movlw	200
  3463  00042A  6E29               	movwf	UART_buff_modulo_inc@modulus,c
  3464  00042C  EC8D  F003         	call	_UART_buff_modulo_inc	;wreg free
  3465  000430  EE20 F0CA          	lfsr	2,202
  3466  000434  502D               	movf	UART_buff_get@_this,w,c
  3467  000436  26D9               	addwf	fsr2l,f,c
  3468  000438  502E               	movf	UART_buff_get@_this+1,w,c
  3469  00043A  22DA               	addwfc	fsr2h,f,c
  3470  00043C  C027  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  3471  000440  C028  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  3472                           
  3473                           ;UART.c: 86: --_this->count;
  3474  000444  EE20 F0CC          	lfsr	2,204
  3475  000448  502D               	movf	UART_buff_get@_this,w,c
  3476  00044A  26D9               	addwf	fsr2l,f,c
  3477  00044C  502E               	movf	UART_buff_get@_this+1,w,c
  3478  00044E  22DA               	addwfc	fsr2h,f,c
  3479  000450  06DE               	decf	postinc2,f,c
  3480  000452  0E00               	movlw	0
  3481  000454  5ADD               	subwfb	postdec2,f,c
  3482                           
  3483                           ;UART.c: 87: } else {
  3484  000456  D002               	goto	i2l552
  3485  000458                     i2l2282:
  3486                           
  3487                           ;UART.c: 88: c = 0;
  3488  000458  0E00               	movlw	0
  3489  00045A  6E31               	movwf	UART_buff_get@c,c
  3490  00045C                     i2l552:
  3491                           
  3492                           ;UART.c: 89: }
  3493                           ;UART.c: 90: return (c);
  3494  00045C  5031               	movf	UART_buff_get@c,w,c
  3495  00045E  0012               	return	
  3496  000460                     __end_of_UART_buff_get:
  3497                           	opt stack 0
  3498                           pclatu	equ	0xFFB
  3499                           pclath	equ	0xFFA
  3500                           tblptru	equ	0xFF8
  3501                           tblptrh	equ	0xFF7
  3502                           tblptrl	equ	0xFF6
  3503                           tablat	equ	0xFF5
  3504                           prodh	equ	0xFF4
  3505                           prodl	equ	0xFF3
  3506                           intcon	equ	0xFF2
  3507                           intcon2	equ	0xFF1
  3508                           postinc0	equ	0xFEE
  3509                           fsr0h	equ	0xFEA
  3510                           fsr0l	equ	0xFE9
  3511                           wreg	equ	0xFE8
  3512                           postdec1	equ	0xFE5
  3513                           fsr1h	equ	0xFE2
  3514                           fsr1l	equ	0xFE1
  3515                           indf2	equ	0xFDF
  3516                           postinc2	equ	0xFDE
  3517                           postdec2	equ	0xFDD
  3518                           plusw2	equ	0xFDB
  3519                           fsr2h	equ	0xFDA
  3520                           fsr2l	equ	0xFD9
  3521                           status	equ	0xFD8
  3522                           
  3523 ;; *************** function _EUSART1_Receive_ISR *****************
  3524 ;; Defined at:
  3525 ;;		line 139 in file "UART.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;		None
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  data            1   11[COMRAM] unsigned char 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  2  167[None  ] int 
  3532 ;; Registers used:
  3533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3539 ;;      Params:         0       0       0       0       0       0       0
  3540 ;;      Locals:         1       0       0       0       0       0       0
  3541 ;;      Temps:          0       0       0       0       0       0       0
  3542 ;;      Totals:         1       0       0       0       0       0       0
  3543 ;;Total ram usage:        1 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; Hardware stack levels required when called:    2
  3546 ;; This function calls:
  3547 ;;		_UART_buff_put
  3548 ;; This function is called by:
  3549 ;;		_INTERRUPT_InterruptManager
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           	psect	text24
  3554  000766                     __ptext24:
  3555                           	opt stack 0
  3556  000766                     _EUSART1_Receive_ISR:
  3557                           	opt stack 23
  3558                           
  3559                           ;UART.c: 140: if (1 == RC1STAbits.OERR) {
  3560                           
  3561                           ;incstack = 0
  3562  000766  A2AB               	btfss	4011,1,c	;volatile
  3563  000768  D002               	goto	i2l583
  3564                           
  3565                           ;UART.c: 143: RC1STAbits.CREN = 0;
  3566  00076A  98AB               	bcf	4011,4,c	;volatile
  3567                           
  3568                           ;UART.c: 144: RC1STAbits.CREN = 1;
  3569  00076C  88AB               	bsf	4011,4,c	;volatile
  3570  00076E                     i2l583:
  3571                           
  3572                           ;UART.c: 145: }
  3573                           ;UART.c: 146: unsigned char data = RCREG1;
  3574  00076E  CFAE F032          	movff	4014,EUSART1_Receive_ISR@data	;volatile
  3575                           
  3576                           ;UART.c: 147: UART_buff_put(&input_buffer, data);
  3577  000772  0E00               	movlw	low _input_buffer
  3578  000774  6E2D               	movwf	UART_buff_put@_this,c
  3579  000776  0E02               	movlw	high _input_buffer
  3580  000778  6E2E               	movwf	UART_buff_put@_this+1,c
  3581  00077A  C032  F02F         	movff	EUSART1_Receive_ISR@data,UART_buff_put@c
  3582  00077E  EC58  F000         	call	_UART_buff_put	;wreg free
  3583  000782  0012               	return		;funcret
  3584  000784                     __end_of_EUSART1_Receive_ISR:
  3585                           	opt stack 0
  3586                           pclatu	equ	0xFFB
  3587                           pclath	equ	0xFFA
  3588                           tblptru	equ	0xFF8
  3589                           tblptrh	equ	0xFF7
  3590                           tblptrl	equ	0xFF6
  3591                           tablat	equ	0xFF5
  3592                           prodh	equ	0xFF4
  3593                           prodl	equ	0xFF3
  3594                           intcon	equ	0xFF2
  3595                           intcon2	equ	0xFF1
  3596                           postinc0	equ	0xFEE
  3597                           fsr0h	equ	0xFEA
  3598                           fsr0l	equ	0xFE9
  3599                           wreg	equ	0xFE8
  3600                           postdec1	equ	0xFE5
  3601                           fsr1h	equ	0xFE2
  3602                           fsr1l	equ	0xFE1
  3603                           indf2	equ	0xFDF
  3604                           postinc2	equ	0xFDE
  3605                           postdec2	equ	0xFDD
  3606                           plusw2	equ	0xFDB
  3607                           fsr2h	equ	0xFDA
  3608                           fsr2l	equ	0xFD9
  3609                           status	equ	0xFD8
  3610                           
  3611 ;; *************** function _UART_buff_put *****************
  3612 ;; Defined at:
  3613 ;;		line 68 in file "UART.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
  3616 ;;		 -> output_buffer(206), input_buffer(206), 
  3617 ;;  c               1    8[COMRAM] const unsigned char 
  3618 ;; Auto vars:     Size  Location     Type
  3619 ;;		None
  3620 ;; Return value:  Size  Location     Type
  3621 ;;                  1    wreg      void 
  3622 ;; Registers used:
  3623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3629 ;;      Params:         3       0       0       0       0       0       0
  3630 ;;      Locals:         0       0       0       0       0       0       0
  3631 ;;      Temps:          2       0       0       0       0       0       0
  3632 ;;      Totals:         5       0       0       0       0       0       0
  3633 ;;Total ram usage:        5 bytes
  3634 ;; Hardware stack levels used:    1
  3635 ;; Hardware stack levels required when called:    1
  3636 ;; This function calls:
  3637 ;;		_UART_buff_modulo_inc
  3638 ;; This function is called by:
  3639 ;;		_EUSART1_Receive_ISR
  3640 ;;		_Send_put
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644                           	psect	text25
  3645  0000B0                     __ptext25:
  3646                           	opt stack 0
  3647  0000B0                     _UART_buff_put:
  3648                           	opt stack 23
  3649                           
  3650                           ;UART.c: 69: if (_this->count < 200) {
  3651                           
  3652                           ;incstack = 0
  3653  0000B0  EE20 F0CC          	lfsr	2,204
  3654  0000B4  502D               	movf	UART_buff_put@_this,w,c
  3655  0000B6  26D9               	addwf	fsr2l,f,c
  3656  0000B8  502E               	movf	UART_buff_put@_this+1,w,c
  3657  0000BA  22DA               	addwfc	fsr2h,f,c
  3658  0000BC  0E01               	movlw	1
  3659  0000BE  BEDB               	btfsc	plusw2,7,c
  3660  0000C0  D007               	goto	i2l2262
  3661  0000C2  0E01               	movlw	1
  3662  0000C4  50DB               	movf	plusw2,w,c
  3663  0000C6  E13A               	bnz	i2l2268
  3664  0000C8  0EC8               	movlw	200
  3665  0000CA  5CDE               	subwf	postinc2,w,c
  3666  0000CC  B0D8               	btfsc	status,0,c
  3667  0000CE  D036               	goto	i2l2268
  3668  0000D0                     i2l2262:
  3669                           
  3670                           ;UART.c: 70: _this->buf[_this->head] = c;
  3671  0000D0  EE20 F0C8          	lfsr	2,200
  3672  0000D4  502D               	movf	UART_buff_put@_this,w,c
  3673  0000D6  26D9               	addwf	fsr2l,f,c
  3674  0000D8  502E               	movf	UART_buff_put@_this+1,w,c
  3675  0000DA  22DA               	addwfc	fsr2h,f,c
  3676  0000DC  CFDE F030          	movff	postinc2,??_UART_buff_put
  3677  0000E0  CFDD F031          	movff	postdec2,??_UART_buff_put+1
  3678  0000E4  5030               	movf	??_UART_buff_put,w,c
  3679  0000E6  242D               	addwf	UART_buff_put@_this,w,c
  3680  0000E8  6ED9               	movwf	fsr2l,c
  3681  0000EA  5031               	movf	??_UART_buff_put+1,w,c
  3682  0000EC  202E               	addwfc	UART_buff_put@_this+1,w,c
  3683  0000EE  6EDA               	movwf	fsr2h,c
  3684  0000F0  C02F  FFDF         	movff	UART_buff_put@c,indf2
  3685                           
  3686                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
  3687  0000F4  EE20 F0C8          	lfsr	2,200
  3688  0000F8  502D               	movf	UART_buff_put@_this,w,c
  3689  0000FA  26D9               	addwf	fsr2l,f,c
  3690  0000FC  502E               	movf	UART_buff_put@_this+1,w,c
  3691  0000FE  22DA               	addwfc	fsr2h,f,c
  3692  000100  CFDE F027          	movff	postinc2,UART_buff_modulo_inc@value
  3693  000104  CFDD F028          	movff	postdec2,UART_buff_modulo_inc@value+1
  3694  000108  0E00               	movlw	0
  3695  00010A  6E2A               	movwf	UART_buff_modulo_inc@modulus+1,c
  3696  00010C  0EC8               	movlw	200
  3697  00010E  6E29               	movwf	UART_buff_modulo_inc@modulus,c
  3698  000110  EC8D  F003         	call	_UART_buff_modulo_inc	;wreg free
  3699  000114  EE20 F0C8          	lfsr	2,200
  3700  000118  502D               	movf	UART_buff_put@_this,w,c
  3701  00011A  26D9               	addwf	fsr2l,f,c
  3702  00011C  502E               	movf	UART_buff_put@_this+1,w,c
  3703  00011E  22DA               	addwfc	fsr2h,f,c
  3704  000120  C027  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  3705  000124  C028  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  3706                           
  3707                           ;UART.c: 72: ++_this->count;
  3708  000128  EE20 F0CC          	lfsr	2,204
  3709  00012C  502D               	movf	UART_buff_put@_this,w,c
  3710  00012E  26D9               	addwf	fsr2l,f,c
  3711  000130  502E               	movf	UART_buff_put@_this+1,w,c
  3712  000132  22DA               	addwfc	fsr2h,f,c
  3713  000134  2ADE               	incf	postinc2,f,c
  3714  000136  0E00               	movlw	0
  3715  000138  22DD               	addwfc	postdec2,f,c
  3716                           
  3717                           ;UART.c: 73: } else {
  3718  00013A  0012               	return	
  3719  00013C                     i2l2268:
  3720                           
  3721                           ;UART.c: 74: _this->buf[_this->head] = c;
  3722  00013C  EE20 F0C8          	lfsr	2,200
  3723  000140  502D               	movf	UART_buff_put@_this,w,c
  3724  000142  26D9               	addwf	fsr2l,f,c
  3725  000144  502E               	movf	UART_buff_put@_this+1,w,c
  3726  000146  22DA               	addwfc	fsr2h,f,c
  3727  000148  CFDE F030          	movff	postinc2,??_UART_buff_put
  3728  00014C  CFDD F031          	movff	postdec2,??_UART_buff_put+1
  3729  000150  5030               	movf	??_UART_buff_put,w,c
  3730  000152  242D               	addwf	UART_buff_put@_this,w,c
  3731  000154  6ED9               	movwf	fsr2l,c
  3732  000156  5031               	movf	??_UART_buff_put+1,w,c
  3733  000158  202E               	addwfc	UART_buff_put@_this+1,w,c
  3734  00015A  6EDA               	movwf	fsr2h,c
  3735  00015C  C02F  FFDF         	movff	UART_buff_put@c,indf2
  3736                           
  3737                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
  3738  000160  EE20 F0C8          	lfsr	2,200
  3739  000164  502D               	movf	UART_buff_put@_this,w,c
  3740  000166  26D9               	addwf	fsr2l,f,c
  3741  000168  502E               	movf	UART_buff_put@_this+1,w,c
  3742  00016A  22DA               	addwfc	fsr2h,f,c
  3743  00016C  CFDE F027          	movff	postinc2,UART_buff_modulo_inc@value
  3744  000170  CFDD F028          	movff	postdec2,UART_buff_modulo_inc@value+1
  3745  000174  0E00               	movlw	0
  3746  000176  6E2A               	movwf	UART_buff_modulo_inc@modulus+1,c
  3747  000178  0EC8               	movlw	200
  3748  00017A  6E29               	movwf	UART_buff_modulo_inc@modulus,c
  3749  00017C  EC8D  F003         	call	_UART_buff_modulo_inc	;wreg free
  3750  000180  EE20 F0C8          	lfsr	2,200
  3751  000184  502D               	movf	UART_buff_put@_this,w,c
  3752  000186  26D9               	addwf	fsr2l,f,c
  3753  000188  502E               	movf	UART_buff_put@_this+1,w,c
  3754  00018A  22DA               	addwfc	fsr2h,f,c
  3755  00018C  C027  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  3756  000190  C028  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  3757                           
  3758                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  3759  000194  EE20 F0CA          	lfsr	2,202
  3760  000198  502D               	movf	UART_buff_put@_this,w,c
  3761  00019A  26D9               	addwf	fsr2l,f,c
  3762  00019C  502E               	movf	UART_buff_put@_this+1,w,c
  3763  00019E  22DA               	addwfc	fsr2h,f,c
  3764  0001A0  CFDE F027          	movff	postinc2,UART_buff_modulo_inc@value
  3765  0001A4  CFDD F028          	movff	postdec2,UART_buff_modulo_inc@value+1
  3766  0001A8  0E00               	movlw	0
  3767  0001AA  6E2A               	movwf	UART_buff_modulo_inc@modulus+1,c
  3768  0001AC  0EC8               	movlw	200
  3769  0001AE  6E29               	movwf	UART_buff_modulo_inc@modulus,c
  3770  0001B0  EC8D  F003         	call	_UART_buff_modulo_inc	;wreg free
  3771  0001B4  EE20 F0CA          	lfsr	2,202
  3772  0001B8  502D               	movf	UART_buff_put@_this,w,c
  3773  0001BA  26D9               	addwf	fsr2l,f,c
  3774  0001BC  502E               	movf	UART_buff_put@_this+1,w,c
  3775  0001BE  22DA               	addwfc	fsr2h,f,c
  3776  0001C0  C027  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  3777  0001C4  C028  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  3778  0001C8  0012               	return	
  3779  0001CA                     __end_of_UART_buff_put:
  3780                           	opt stack 0
  3781                           pclatu	equ	0xFFB
  3782                           pclath	equ	0xFFA
  3783                           tblptru	equ	0xFF8
  3784                           tblptrh	equ	0xFF7
  3785                           tblptrl	equ	0xFF6
  3786                           tablat	equ	0xFF5
  3787                           prodh	equ	0xFF4
  3788                           prodl	equ	0xFF3
  3789                           intcon	equ	0xFF2
  3790                           intcon2	equ	0xFF1
  3791                           postinc0	equ	0xFEE
  3792                           fsr0h	equ	0xFEA
  3793                           fsr0l	equ	0xFE9
  3794                           wreg	equ	0xFE8
  3795                           postdec1	equ	0xFE5
  3796                           fsr1h	equ	0xFE2
  3797                           fsr1l	equ	0xFE1
  3798                           indf2	equ	0xFDF
  3799                           postinc2	equ	0xFDE
  3800                           postdec2	equ	0xFDD
  3801                           plusw2	equ	0xFDB
  3802                           fsr2h	equ	0xFDA
  3803                           fsr2l	equ	0xFD9
  3804                           status	equ	0xFD8
  3805                           
  3806 ;; *************** function _UART_buff_modulo_inc *****************
  3807 ;; Defined at:
  3808 ;;		line 106 in file "UART.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;  value           2    0[COMRAM] const unsigned int 
  3811 ;;  modulus         2    2[COMRAM] const unsigned int 
  3812 ;; Auto vars:     Size  Location     Type
  3813 ;;  my_value        2    4[COMRAM] unsigned int 
  3814 ;; Return value:  Size  Location     Type
  3815 ;;                  2    0[COMRAM] unsigned int 
  3816 ;; Registers used:
  3817 ;;		wreg, status,2, status,0
  3818 ;; Tracked objects:
  3819 ;;		On entry : 0/0
  3820 ;;		On exit  : 0/0
  3821 ;;		Unchanged: 0/0
  3822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3823 ;;      Params:         4       0       0       0       0       0       0
  3824 ;;      Locals:         2       0       0       0       0       0       0
  3825 ;;      Temps:          0       0       0       0       0       0       0
  3826 ;;      Totals:         6       0       0       0       0       0       0
  3827 ;;Total ram usage:        6 bytes
  3828 ;; Hardware stack levels used:    1
  3829 ;; This function calls:
  3830 ;;		Nothing
  3831 ;; This function is called by:
  3832 ;;		_UART_buff_put
  3833 ;;		_UART_buff_get
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           	psect	text26
  3838  00071A                     __ptext26:
  3839                           	opt stack 0
  3840  00071A                     _UART_buff_modulo_inc:
  3841                           	opt stack 23
  3842                           
  3843                           ;UART.c: 107: unsigned int my_value = value + 1;
  3844                           
  3845                           ;incstack = 0
  3846  00071A  0E01               	movlw	1
  3847  00071C  2427               	addwf	UART_buff_modulo_inc@value,w,c
  3848  00071E  6E2B               	movwf	UART_buff_modulo_inc@my_value,c
  3849  000720  0E00               	movlw	0
  3850  000722  2028               	addwfc	UART_buff_modulo_inc@value+1,w,c
  3851  000724  6E2C               	movwf	UART_buff_modulo_inc@my_value+1,c
  3852                           
  3853                           ;UART.c: 108: if (my_value >= modulus) {
  3854  000726  5029               	movf	UART_buff_modulo_inc@modulus,w,c
  3855  000728  5C2B               	subwf	UART_buff_modulo_inc@my_value,w,c
  3856  00072A  502A               	movf	UART_buff_modulo_inc@modulus+1,w,c
  3857  00072C  582C               	subwfb	UART_buff_modulo_inc@my_value+1,w,c
  3858  00072E  A0D8               	btfss	status,0,c
  3859  000730  D004               	goto	i2l2198
  3860                           
  3861                           ;UART.c: 109: my_value = 0;
  3862  000732  0E00               	movlw	0
  3863  000734  6E2C               	movwf	UART_buff_modulo_inc@my_value+1,c
  3864  000736  0E00               	movlw	0
  3865  000738  6E2B               	movwf	UART_buff_modulo_inc@my_value,c
  3866  00073A                     i2l2198:
  3867                           
  3868                           ;UART.c: 110: }
  3869                           ;UART.c: 111: return (my_value);
  3870  00073A  C02B  F027         	movff	UART_buff_modulo_inc@my_value,?_UART_buff_modulo_inc
  3871  00073E  C02C  F028         	movff	UART_buff_modulo_inc@my_value+1,?_UART_buff_modulo_inc+1
  3872  000742  0012               	return	
  3873  000744                     __end_of_UART_buff_modulo_inc:
  3874                           	opt stack 0
  3875                           pclatu	equ	0xFFB
  3876                           pclath	equ	0xFFA
  3877                           tblptru	equ	0xFF8
  3878                           tblptrh	equ	0xFF7
  3879                           tblptrl	equ	0xFF6
  3880                           tablat	equ	0xFF5
  3881                           prodh	equ	0xFF4
  3882                           prodl	equ	0xFF3
  3883                           intcon	equ	0xFF2
  3884                           intcon2	equ	0xFF1
  3885                           postinc0	equ	0xFEE
  3886                           fsr0h	equ	0xFEA
  3887                           fsr0l	equ	0xFE9
  3888                           wreg	equ	0xFE8
  3889                           postdec1	equ	0xFE5
  3890                           fsr1h	equ	0xFE2
  3891                           fsr1l	equ	0xFE1
  3892                           indf2	equ	0xFDF
  3893                           postinc2	equ	0xFDE
  3894                           postdec2	equ	0xFDD
  3895                           plusw2	equ	0xFDB
  3896                           fsr2h	equ	0xFDA
  3897                           fsr2l	equ	0xFD9
  3898                           status	equ	0xFD8
  3899                           pclatu	equ	0xFFB
  3900                           pclath	equ	0xFFA
  3901                           tblptru	equ	0xFF8
  3902                           tblptrh	equ	0xFF7
  3903                           tblptrl	equ	0xFF6
  3904                           tablat	equ	0xFF5
  3905                           prodh	equ	0xFF4
  3906                           prodl	equ	0xFF3
  3907                           intcon	equ	0xFF2
  3908                           intcon2	equ	0xFF1
  3909                           postinc0	equ	0xFEE
  3910                           fsr0h	equ	0xFEA
  3911                           fsr0l	equ	0xFE9
  3912                           wreg	equ	0xFE8
  3913                           postdec1	equ	0xFE5
  3914                           fsr1h	equ	0xFE2
  3915                           fsr1l	equ	0xFE1
  3916                           indf2	equ	0xFDF
  3917                           postinc2	equ	0xFDE
  3918                           postdec2	equ	0xFDD
  3919                           plusw2	equ	0xFDB
  3920                           fsr2h	equ	0xFDA
  3921                           fsr2l	equ	0xFD9
  3922                           status	equ	0xFD8
  3923                           
  3924                           	psect	rparam
  3925  0000                     pclatu	equ	0xFFB
  3926                           pclath	equ	0xFFA
  3927                           tblptru	equ	0xFF8
  3928                           tblptrh	equ	0xFF7
  3929                           tblptrl	equ	0xFF6
  3930                           tablat	equ	0xFF5
  3931                           prodh	equ	0xFF4
  3932                           prodl	equ	0xFF3
  3933                           intcon	equ	0xFF2
  3934                           intcon2	equ	0xFF1
  3935                           postinc0	equ	0xFEE
  3936                           fsr0h	equ	0xFEA
  3937                           fsr0l	equ	0xFE9
  3938                           wreg	equ	0xFE8
  3939                           postdec1	equ	0xFE5
  3940                           fsr1h	equ	0xFE2
  3941                           fsr1l	equ	0xFE1
  3942                           indf2	equ	0xFDF
  3943                           postinc2	equ	0xFDE
  3944                           postdec2	equ	0xFDD
  3945                           plusw2	equ	0xFDB
  3946                           fsr2h	equ	0xFDA
  3947                           fsr2l	equ	0xFD9
  3948                           status	equ	0xFD8
  3949                           
  3950                           	psect	temp
  3951  00004E                     btemp:
  3952                           	opt stack 0
  3953  00004E                     	ds	1
  3954  0000                     int$flags	set	btemp
  3955                           pclatu	equ	0xFFB
  3956                           pclath	equ	0xFFA
  3957                           tblptru	equ	0xFF8
  3958                           tblptrh	equ	0xFF7
  3959                           tblptrl	equ	0xFF6
  3960                           tablat	equ	0xFF5
  3961                           prodh	equ	0xFF4
  3962                           prodl	equ	0xFF3
  3963                           intcon	equ	0xFF2
  3964                           intcon2	equ	0xFF1
  3965                           postinc0	equ	0xFEE
  3966                           fsr0h	equ	0xFEA
  3967                           fsr0l	equ	0xFE9
  3968                           wreg	equ	0xFE8
  3969                           postdec1	equ	0xFE5
  3970                           fsr1h	equ	0xFE2
  3971                           fsr1l	equ	0xFE1
  3972                           indf2	equ	0xFDF
  3973                           postinc2	equ	0xFDE
  3974                           postdec2	equ	0xFDD
  3975                           plusw2	equ	0xFDB
  3976                           fsr2h	equ	0xFDA
  3977                           fsr2l	equ	0xFD9
  3978                           status	equ	0xFD8


Data Sizes:
    Strings     10
    Constant    455
    Data        10
    BSS         940
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      77
    BANK0           160     16     100
    BANK1           256      0     206
    BANK2           256      0     206
    BANK3           256      0     206
    BANK4           256      0     200
    BANK5           256      0       0

Pointer List with Targets:

    NokiaStr@str	PTR unsigned char  size(2) Largest target is 11
		 -> ddata(BANK0[11]), 

    UART_buff_size@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK3[206]), input_buffer(BANK2[206]), 

    UART_buff_get@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK3[206]), input_buffer(BANK2[206]), 

    UART_buff_put@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK3[206]), input_buffer(BANK2[206]), 

    sp__memset	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK3[206]), input_buffer(BANK2[206]), ring_buffer(BANK1[206]), 

    sendStructAddress	PTR unsigned char  size(2) Largest target is 206
		 -> ring_buffer(BANK1[206]), NULL(NULL[0]), 

    serial_read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    serial_peek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    serial_available	PTR FTN()int  size(2) Largest target is 1
		 -> Absolute function(), 

    serial_write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    receiveArrayAddress	PTR volatile int  size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _EUSART1_Transmit_ISR->_UART_buff_get
    _UART_buff_get->_UART_buff_modulo_inc
    _EUSART1_Receive_ISR->_UART_buff_put
    _UART_buff_put->_UART_buff_modulo_inc

Critical Paths under _main in BANK0

    _main->_NokiaStr
    _gotoXy->_LCDwrite
    _NokiaStr->_LCDwrite
    _NokiaStart->_blackLcd
    _NokiaStart->_clearLcd
    _clearLcd->_LCDwrite
    _blackLcd->_LCDwrite
    _LCDwrite->___wmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7796
                              _Delay
                         _NokiaStart
                           _NokiaStr
                  _SYSTEM_Initialize
                             _gotoXy
 ---------------------------------------------------------------------------------
 (1) _gotoXy                                               2     1      1    1301
                                              8 BANK0      2     1      1
                           _LCDwrite
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _NokiaStr                                             8     5      3    1832
                                              8 BANK0      8     5      3
                           _LCDwrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     386
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _NokiaStart                                           0     0      0    4056
                              _Delay
                           _LCDwrite
                    _SPI1_Initialize
                           _blackLcd
                           _clearLcd
 ---------------------------------------------------------------------------------
 (2) _clearLcd                                             2     2      0    1162
                                              8 BANK0      2     2      0
                           _LCDwrite
 ---------------------------------------------------------------------------------
 (2) _blackLcd                                             2     2      0    1193
                                              8 BANK0      2     2      0
                           _LCDwrite
 ---------------------------------------------------------------------------------
 (2) _LCDwrite                                             2     1      1    1094
                                              6 BANK0      2     1      1
                  _SPI1_Exchange8bit
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Delay                                                9     5      4     607
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                          14    14      0    2289
                                             12 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                _EUSART2_Receive_ISR
               _EUSART2_Transmit_ISR
 ---------------------------------------------------------------------------------
 (6) _EUSART2_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART2_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Transmit_ISR                                 0     0      0    1100
                      _UART_buff_get
                     _UART_buff_size
 ---------------------------------------------------------------------------------
 (7) _UART_buff_size                                       2     0      2     150
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _UART_buff_get                                        5     3      2     950
                                              6 COMRAM     5     3      2
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Receive_ISR                                  1     1      0    1189
                                             11 COMRAM     1     1      0
                      _UART_buff_put
 ---------------------------------------------------------------------------------
 (7) _UART_buff_put                                        5     2      3    1166
                                              6 COMRAM     5     2      3
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (8) _UART_buff_modulo_inc                                 6     2      4     602
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay
   _NokiaStart
     _Delay
     _LCDwrite
       _SPI1_Exchange8bit
       ___wmul (ARG)
     _SPI1_Initialize
     _blackLcd
       _LCDwrite
         _SPI1_Exchange8bit
         ___wmul (ARG)
     _clearLcd
       _LCDwrite
         _SPI1_Exchange8bit
         ___wmul (ARG)
   _NokiaStr
     _LCDwrite
       _SPI1_Exchange8bit
       ___wmul (ARG)
     ___wmul
   _SYSTEM_Initialize
     _EUSART2_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
   _gotoXy
     _LCDwrite
       _SPI1_Exchange8bit
       ___wmul (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
     _UART_buff_put
       _UART_buff_modulo_inc
   _EUSART1_Transmit_ISR
     _UART_buff_get
       _UART_buff_modulo_inc
     _UART_buff_size
   _EUSART2_Receive_ISR
   _EUSART2_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C8      13       78.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      CE      11       80.5%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      CE       8       80.5%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      CE       6       80.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     10      64       4       62.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1A      4D       1       81.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3E3       9        0.0%
DATA                 0      0     3E3      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sun May 01 19:31:21 2016

                  _SPI1_Exchange8bit 07C8                                    _i 0020  
                       _rx_array_inx 0025                   ?_SPI1_Exchange8bit 0027  
                ___wmul@multiplicand 00B6                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                                  l223 07D2  
                                l723 0756                                  l725 0758  
                       __CFG_CPB$OFF 000000                         __CFG_CPD$OFF 000000  
                ??_SPI1_Exchange8bit 00B4                                  prod 000FF3  
                                wreg 000FE8                         __CFG_LVP$OFF 000000  
                               l3020 050A                                 l3016 04EA  
                               l3040 067C                                 l3024 0600  
                               l3106 027C                                 l3036 0666  
                               l3028 0616                                 l3092 01DE  
                               l3180 031A                                 l3148 0292  
                               l3086 01CA                                 l3182 0324  
                               l3096 01F4                                 l3178 0310  
                               STR_1 7FFB                                 STR_3 7FF4  
                               u2110 0318                                 u2130 0322  
                               _LATA 000F89                                 u2150 032C  
                               _LATB 000F8A                                 u2151 0328  
                               _LATC 000F8B                                 _LATD 000F8C  
                               _LATE 000F8D                                 u2090 030E  
                               u2237 04F2                                 i2l97 06EA  
                               _WPUB 000F61                ??_EUSART2_Receive_ISR 0027  
                               _main 0282                      _TMR0_StartTimer 080C  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                                 btemp 004E  
                      __CFG_BORV$190 000000                                 pclat 000FFA  
                               prodh 000FF4                                 prodl 000FF3  
                               start 00AC            __end_of_SPI1_Exchange8bit 07DA  
                      __CFG_IESO$OFF 000000         __end_of_EUSART2_Transmit_ISR 06EE  
                       ___param_bank 000010              __end_of_TMR0_Initialize 079C  
     __size_of_OSCILLATOR_Initialize 000E        __end_of_OSCILLATOR_Initialize 07E8  
                              ?_main 0027                                _T0CON 000FD5  
                              _LATB0 007C50                                _LATB1 007C51  
                              _LATA3 007C4B                                _LATC0 007C58  
                              _LATC1 007C59                                _LATB3 007C53  
                              _LATD0 007C60                                _LATB4 007C54  
                              _LATA6 007C4E                                _LATB5 007C55  
                              _LATD3 007C63                       __CFG_DEBUG$OFF 000000  
                              i2l183 0070                                i2l175 004E  
                   __end_of_LCDwrite 0766                                i2l177 005A  
                              i2l179 0066                                i2l552 045C  
                              i2l583 076E                                _TMR0H 000FD7  
                              _TMR0L 000FD6                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                                _TRISE 000F96  
                              _Delay 04D6                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                        _ChargerData 0042                        __CFG_WRT3$OFF 000000  
               _EUSART1_Transmit_ISR 068E                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                              _Start 0001                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                              _ddata 00A9                       __CFG_EBTRB$OFF 000000  
                              _group 000B                   __CFG_MCLRE$EXTMCLR 000000  
                              tablat 000FF5                                plusw2 000FDB  
                              status 000FD8                       __CFG_HFOFST$ON 000000  
           __size_of_SPI1_Initialize 000E                       __CFG_PBADEN$ON 000000  
                    __initialization 0460                         __end_of_main 0330  
        ?_INTERRUPT_InterruptManager 0027                               ??_main 00C4  
                   __end_of_NokiaStr 0282                        __activetblptr 000002  
                             ?_Delay 00B4                ?_EUSART1_Transmit_ISR 0027  
            __end_of_TMR0_StartTimer 0810           __end_of_EUSART2_Initialize 05F6  
           _eusart2TxBufferRemaining 004D                               _ANSELA 000F38  
                             _ANSELB 000F39                               _ANSELC 000F3A  
                             _ANSELD 000F3B                               _ANSELE 000F3C  
                         _NokiaStart 0330                               _RC1STA 000FAB  
                             _RC2STA 000F71                               Delay@i 00B9  
                             i2l2262 00D0                               i2l2352 06E6  
                             i2l2282 0458                               i2l2268 013C  
                             i2l2198 073A                               i2l2366 0716  
                             i2l2358 06F6                       __CFG_WDTEN$OFF 000000  
                             i2l2378 06B8          UART_buff_modulo_inc@modulus 0029  
                             _RCREG1 000FAE                               _RCREG2 000F74  
                             _OSCCON 000FD3                               _SPBRG1 000FAF  
                             _SPBRG2 000F75                               _TX1STA 000FAC  
                             _TX2STA 000F72                               _TRISA3 007C93  
                             _TRISD0 007CA8                               _TRISD2 007CAA  
                             _TRISD3 007CAB                     __end_of_blackLcd 068E  
                             _TXREG1 000FAD                               _TXREG2 000F73  
              SPI1_Exchange8bit@data 00B4                     __end_of_clearLcd 062A  
         __size_of_SPI1_Exchange8bit 0012                       __CFG_XINST$OFF 000000  
                      _output_buffer 0300                               ___wmul 058C  
                     __CFG_STVREN$ON 000000                     ?_TMR0_Initialize 0027  
                             _gotoXy 062A                               clear_0 0466  
                             clear_1 0472                               clear_2 047E  
                             clear_3 048A                               clear_4 0496  
                             clear_5 04A2                               _rx_len 0026  
                       __pdataCOMRAM 0041                         __mediumconst 7E2C  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                 _EUSART2_Transmit_ISR 06C0  
       __end_of_UART_buff_modulo_inc 0744        __size_of_INTERRUPT_Initialize 000C  
                    _eusart2RxBuffer 0088                    _SYSTEM_Initialize 079C  
                    _eusart2TxBuffer 0090                           __accesstop 0060  
            __end_of__initialization 04C8                   ?_SYSTEM_Initialize 0027  
                      ___rparam_used 000001                            ?_LCDwrite 00BA  
                      __end_of_Delay 053C                       __pcstackCOMRAM 0027  
                ??_SYSTEM_Initialize 00B4                          NokiaStr@len 00BE  
                  ??_SPI1_Initialize 00B4                          NokiaStr@str 00BC  
                 UART_buff_get@_this 002D                __end_of_UART_buff_get 0460  
             ??_EUSART1_Transmit_ISR 0032                __end_of_UART_buff_put 01CA  
                            ??_Delay 00B8                ?_EUSART2_Transmit_ISR 0027  
        __end_of_EUSART1_Receive_ISR 0784                     ?_TMR0_StartTimer 0027  
          __end_of_SYSTEM_Initialize 07B2                  _addressErrorCounter 0003  
                        ?_NokiaStart 0027                        _eusart2RxHead 001C  
                      _eusart2TxHead 001E                           __pbssBANK0 0060  
                         __pbssBANK1 0100                           __pbssBANK2 0200  
                         __pbssBANK3 0300                           __pbssBANK4 0400  
                 __end_of_FONTLOOKUP 7FF4                        _eusart2RxTail 001D  
                      _eusart2TxTail 001F                      __CFG_PLLCFG$OFF 000000  
                         __pnvCOMRAM 004B              __size_of_UART_buff_size 0016  
                          ?_NokiaStr 00BC                           ??_LCDwrite 00BB  
                 __CFG_CCP2MX$PORTC1 000000                              ?___wmul 00B4  
                 __CFG_CCP3MX$PORTB5 000000                              ?_gotoXy 00BC  
                         _crc_buffer 0098                   UART_buff_put@_this 002D  
                          ?_blackLcd 0027                            ?_clearLcd 0027  
                            _OSCCON2 000FD2          __end_of_EUSART2_Receive_ISR 071A  
       UART_buff_modulo_inc@my_value 002B                    __CFG_PRICLKEN$OFF 000000  
                            _OSCTUNE 000F9B                              _SPBRGH1 000FB0  
                            _SPBRGH2 000F76                              _SSP1ADD 000FC8  
                _receiveArrayAddress 000D                              _SSP1BUF 000FC9  
                  _alignErrorCounter 0005                           ??_NokiaStr 00BF  
                    __CFG_PWRTEN$OFF 000000                              __Hparam 0000  
                            __Lparam 0000                            _AKNAKsend 0019  
               _UART_buff_modulo_inc 071A                      __size_of___wmul 0036  
                            _calc_CS 001A                              __pcinit 0460  
                __size_of_NokiaStart 009E                      __size_of_gotoXy 0032  
                            __ramtop 0600                              __ptext0 0282  
                            __ptext1 062A                              __ptext2 079C  
                            __ptext3 0784                              __ptext4 080C  
                            __ptext5 053C                              __ptext6 07DA  
                            __ptext7 07F6                              __ptext8 05C2  
                            __ptext9 01CA                            _T0CONbits 000FD5  
              _OSCILLATOR_Initialize 07DA               ??_EUSART2_Transmit_ISR 0027  
                         ??_blackLcd 00BC             ??_PIN_MANAGER_Initialize 00B4  
                         ??_clearLcd 00BC           __size_of_SYSTEM_Initialize 0016  
               end_of_initialization 04C8                            Delay@wait 00B4  
                            gotoXy@x 00BD                              gotoXy@y 00BC  
                      __Lmediumconst 7E2C                   _EUSART2_Initialize 05C2  
              ?_UART_buff_modulo_inc 0027                              postdec1 000FE5  
                            postdec2 000FDD                              postinc0 000FEE  
                            postinc2 000FDE                  ?_EUSART2_Initialize 0027  
             _dataAdressErrorCounter 0009                           _rx_address 0024  
                       LCDwrite@data 00BA                         LCDwrite@mode 00BB  
                          _TRISBbits 000F93                 ??_EUSART2_Initialize 00B4  
                    _SPI1_Initialize 07E8                       _UART_buff_size 07B2  
                      _moduleAddress 0022                 _timer0ReloadVal16bit 004B  
                  __size_of_LCDwrite 0022         __end_of_INTERRUPT_Initialize 0802  
                    _crcErrorCounter 0007                       __end_of___wmul 05C2  
                      __pidataCOMRAM 0802               ?_OSCILLATOR_Initialize 0027  
                     __end_of_gotoXy 065C                  start_initialization 0460  
           __size_of_TMR0_Initialize 0018      __size_of_PIN_MANAGER_Initialize 0050  
                          NokiaStr@i 00C2                         ??_NokiaStart 00BE  
                     UART_buff_get@c 0031               __end_of_UART_buff_size 07C8  
                     UART_buff_put@c 002F               ??_UART_buff_modulo_inc 002B  
                  __size_of_NokiaStr 00B8                             ??___wmul 00B8  
                           ??_gotoXy 00BD                   __end_of_NokiaStart 03CE  
                     _eusart2RxCount 001B                          __pbssCOMRAM 0001  
      __size_of_EUSART1_Transmit_ISR 0032                        __pcstackBANK0 00B4  
                  __size_of_blackLcd 0032              __end_of_SPI1_Initialize 07F6  
                  __size_of_clearLcd 0034                      ?_UART_buff_size 0027  
       __size_of_EUSART1_Receive_ISR 001E             __size_of_TMR0_StartTimer 0004  
             __size_of_UART_buff_get 0092               __size_of_UART_buff_put 011A  
             _PIN_MANAGER_Initialize 053C                            __pintcode 0008  
                      __pmediumconst 7E2C         ??_INTERRUPT_InterruptManager 0033  
                           _BAUD1CON 000FB8                             _BAUD2CON 000F70  
                     __size_of_Delay 0066                 _INTERRUPT_Initialize 07F6  
                       _receiveArray 0060                    ??_TMR0_Initialize 00B4  
       __size_of_EUSART2_Receive_ISR 002C                       ___wmul@product 00B8  
                           _LATBbits 000F8A                             _LATCbits 000F8B  
                UART_buff_size@_this 0027                             _IPR1bits 000F9F  
                           _PIE1bits 000F9D                             _IPR3bits 000FA5  
                           _PIE3bits 000FA3                             i2u101_40 03EC  
                           i2u113_40 06A8                             _LCDwrite 0744  
__size_of_INTERRUPT_InterruptManager 00A4                             _PIR1bits 000F9E  
                           _PIR3bits 000FA4                             _RCONbits 000FD0  
                   __CFG_WDTPS$32768 000000                             _SSP1CON1 000FC6  
                           _SSP1STAT 000FC7                         _input_buffer 0200  
                          _rx_buffer 0400                    ___wmul@multiplier 00B4  
                      _UART_buff_get 03CE                        _UART_buff_put 00B0  
      __size_of_EUSART2_Transmit_ISR 002E                     ?_SPI1_Initialize 0027  
                        _INTCON2bits 000FF1                            copy_data0 04BC  
              ?_INTERRUPT_Initialize 0027                    _sendStructAddress 000F  
                        blackLcd@res 00BC                             _NokiaStr 01CA  
                           __Hrparam 0000                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000                    __CFG_P2BMX$PORTD2 000000  
            ??_OSCILLATOR_Initialize 00B4                    ??_TMR0_StartTimer 00B4  
                     ?_UART_buff_get 002D                       ?_UART_buff_put 002D  
                           _blackLcd 065C                             _clearLcd 05F6  
                           __ptext10 058C                             __ptext11 0330  
                           __ptext20 06EE                             __ptext12 05F6  
                           __ptext21 068E                             __ptext13 065C  
                           __ptext22 07B2                             __ptext14 0744  
                           __ptext23 03CE                             __ptext15 07C8  
                           __ptext24 0766                             __ptext16 07E8  
                           __ptext25 00B0                             __ptext17 04D6  
                           __ptext26 071A                             __ptext19 06C0  
                       _SSP1CON1bits 000FC6              EUSART1_Receive_ISR@data 0032  
        __size_of_EUSART2_Initialize 0034                        _returnAddress 0023  
                      __size_of_main 00AE                       _Transmit_stall 0041  
                         _RC1STAbits 000FAB                           _RC2STAbits 000F71  
                        clearLcd@res 00BC                           _FONTLOOKUP 7E2D  
                           int$flags 004E                         _serial_write 0017  
 __end_of_INTERRUPT_InterruptManager 00AC           _INTERRUPT_InterruptManager 0008  
                       _SSP1STATbits 000FC7                  _EUSART1_Receive_ISR 0766  
                         _INTCONbits 000FF2            UART_buff_modulo_inc@value 0027  
                   ??_UART_buff_size 0029               ??_INTERRUPT_Initialize 00B4  
                   _serial_available 0011                             intlevel2 0000  
               ?_EUSART1_Receive_ISR 0027              ?_PIN_MANAGER_Initialize 0027  
       __end_of_EUSART1_Transmit_ISR 06C0                          _ring_buffer 0100  
                        _serial_peek 0013                          _serial_read 0015  
      __size_of_UART_buff_modulo_inc 002A                      ??_UART_buff_get 002F  
                    ??_UART_buff_put 0030                  _EUSART2_Receive_ISR 06EE  
                    _TMR0_Initialize 0784                    __CFG_T3CMX$PORTC0 000000  
                     _maxDataAddress 0021                ??_EUSART1_Receive_ISR 0032  
     __end_of_PIN_MANAGER_Initialize 058C                 ?_EUSART2_Receive_ISR 0027  
                  __CFG_FOSC$INTIO67 000000  
