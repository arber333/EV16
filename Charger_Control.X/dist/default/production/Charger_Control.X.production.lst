

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Apr 23 02:38:51 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           	psect	idataCOMRAM
    46  00063A                     __pidataCOMRAM:
    47                           	opt stack 0
    48                           
    49                           ;initializer for _Transmit_stall
    50  00063A  01                 	db	1
    51                           
    52                           ;initializer for _ChargerData
    53  00063B  4D                 	db	77
    54  00063C  2C                 	db	44
    55  00063D  00                 	db	0
    56  00063E  2C                 	db	44
    57  00063F  00                 	db	0
    58  000640  2C                 	db	44
    59  000641  00                 	db	0
    60  000642  2C                 	db	44
    61  000643  45                 	db	69
    62                           
    63                           	psect	mediumconst
    64  007E2C                     __pmediumconst:
    65                           	opt stack 0
    66  007E2C  00                 	db	0
    67  007E2D                     _FONTLOOKUP:
    68                           	opt stack 0
    69  007E2D  00                 	db	0
    70  007E2E  00                 	db	0
    71  007E2F  00                 	db	0
    72  007E30  00                 	db	0
    73  007E31  00                 	db	0
    74  007E32  00                 	db	0
    75  007E33  00                 	db	0
    76  007E34  2F                 	db	47
    77  007E35  00                 	db	0
    78  007E36  00                 	db	0
    79  007E37  00                 	db	0
    80  007E38  07                 	db	7
    81  007E39  00                 	db	0
    82  007E3A  07                 	db	7
    83  007E3B  00                 	db	0
    84  007E3C  14                 	db	20
    85  007E3D  7F                 	db	127
    86  007E3E  14                 	db	20
    87  007E3F  7F                 	db	127
    88  007E40  14                 	db	20
    89  007E41  24                 	db	36
    90  007E42  2A                 	db	42
    91  007E43  7F                 	db	127
    92  007E44  2A                 	db	42
    93  007E45  12                 	db	18
    94  007E46  C4                 	db	196
    95  007E47  C8                 	db	200
    96  007E48  10                 	db	16
    97  007E49  26                 	db	38
    98  007E4A  46                 	db	70
    99  007E4B  36                 	db	54
   100  007E4C  49                 	db	73
   101  007E4D  55                 	db	85
   102  007E4E  22                 	db	34
   103  007E4F  50                 	db	80
   104  007E50  00                 	db	0
   105  007E51  05                 	db	5
   106  007E52  03                 	db	3
   107  007E53  00                 	db	0
   108  007E54  00                 	db	0
   109  007E55  00                 	db	0
   110  007E56  1C                 	db	28
   111  007E57  22                 	db	34
   112  007E58  41                 	db	65
   113  007E59  00                 	db	0
   114  007E5A  00                 	db	0
   115  007E5B  41                 	db	65
   116  007E5C  22                 	db	34
   117  007E5D  1C                 	db	28
   118  007E5E  00                 	db	0
   119  007E5F  14                 	db	20
   120  007E60  08                 	db	8
   121  007E61  3E                 	db	62
   122  007E62  08                 	db	8
   123  007E63  14                 	db	20
   124  007E64  08                 	db	8
   125  007E65  08                 	db	8
   126  007E66  3E                 	db	62
   127  007E67  08                 	db	8
   128  007E68  08                 	db	8
   129  007E69  00                 	db	0
   130  007E6A  00                 	db	0
   131  007E6B  50                 	db	80
   132  007E6C  30                 	db	48
   133  007E6D  00                 	db	0
   134  007E6E  10                 	db	16
   135  007E6F  10                 	db	16
   136  007E70  10                 	db	16
   137  007E71  10                 	db	16
   138  007E72  10                 	db	16
   139  007E73  00                 	db	0
   140  007E74  60                 	db	96
   141  007E75  60                 	db	96
   142  007E76  00                 	db	0
   143  007E77  00                 	db	0
   144  007E78  20                 	db	32
   145  007E79  10                 	db	16
   146  007E7A  08                 	db	8
   147  007E7B  04                 	db	4
   148  007E7C  02                 	db	2
   149  007E7D  3E                 	db	62
   150  007E7E  51                 	db	81
   151  007E7F  49                 	db	73
   152  007E80  45                 	db	69
   153  007E81  3E                 	db	62
   154  007E82  00                 	db	0
   155  007E83  42                 	db	66
   156  007E84  7F                 	db	127
   157  007E85  40                 	db	64
   158  007E86  00                 	db	0
   159  007E87  42                 	db	66
   160  007E88  61                 	db	97
   161  007E89  51                 	db	81
   162  007E8A  49                 	db	73
   163  007E8B  46                 	db	70
   164  007E8C  21                 	db	33
   165  007E8D  41                 	db	65
   166  007E8E  45                 	db	69
   167  007E8F  4B                 	db	75
   168  007E90  31                 	db	49
   169  007E91  18                 	db	24
   170  007E92  14                 	db	20
   171  007E93  12                 	db	18
   172  007E94  7F                 	db	127
   173  007E95  10                 	db	16
   174  007E96  27                 	db	39
   175  007E97  45                 	db	69
   176  007E98  45                 	db	69
   177  007E99  45                 	db	69
   178  007E9A  39                 	db	57
   179  007E9B  3C                 	db	60
   180  007E9C  4A                 	db	74
   181  007E9D  49                 	db	73
   182  007E9E  49                 	db	73
   183  007E9F  30                 	db	48
   184  007EA0  01                 	db	1
   185  007EA1  71                 	db	113
   186  007EA2  09                 	db	9
   187  007EA3  05                 	db	5
   188  007EA4  03                 	db	3
   189  007EA5  36                 	db	54
   190  007EA6  49                 	db	73
   191  007EA7  49                 	db	73
   192  007EA8  49                 	db	73
   193  007EA9  36                 	db	54
   194  007EAA  06                 	db	6
   195  007EAB  49                 	db	73
   196  007EAC  49                 	db	73
   197  007EAD  29                 	db	41
   198  007EAE  1E                 	db	30
   199  007EAF  00                 	db	0
   200  007EB0  36                 	db	54
   201  007EB1  36                 	db	54
   202  007EB2  00                 	db	0
   203  007EB3  00                 	db	0
   204  007EB4  00                 	db	0
   205  007EB5  56                 	db	86
   206  007EB6  36                 	db	54
   207  007EB7  00                 	db	0
   208  007EB8  00                 	db	0
   209  007EB9  08                 	db	8
   210  007EBA  14                 	db	20
   211  007EBB  22                 	db	34
   212  007EBC  41                 	db	65
   213  007EBD  00                 	db	0
   214  007EBE  14                 	db	20
   215  007EBF  14                 	db	20
   216  007EC0  14                 	db	20
   217  007EC1  14                 	db	20
   218  007EC2  14                 	db	20
   219  007EC3  00                 	db	0
   220  007EC4  41                 	db	65
   221  007EC5  22                 	db	34
   222  007EC6  14                 	db	20
   223  007EC7  08                 	db	8
   224  007EC8  02                 	db	2
   225  007EC9  01                 	db	1
   226  007ECA  51                 	db	81
   227  007ECB  09                 	db	9
   228  007ECC  06                 	db	6
   229  007ECD  32                 	db	50
   230  007ECE  49                 	db	73
   231  007ECF  59                 	db	89
   232  007ED0  51                 	db	81
   233  007ED1  3E                 	db	62
   234  007ED2  7E                 	db	126
   235  007ED3  11                 	db	17
   236  007ED4  11                 	db	17
   237  007ED5  11                 	db	17
   238  007ED6  7E                 	db	126
   239  007ED7  7F                 	db	127
   240  007ED8  49                 	db	73
   241  007ED9  49                 	db	73
   242  007EDA  49                 	db	73
   243  007EDB  36                 	db	54
   244  007EDC  3E                 	db	62
   245  007EDD  41                 	db	65
   246  007EDE  41                 	db	65
   247  007EDF  41                 	db	65
   248  007EE0  22                 	db	34
   249  007EE1  7F                 	db	127
   250  007EE2  41                 	db	65
   251  007EE3  41                 	db	65
   252  007EE4  22                 	db	34
   253  007EE5  1C                 	db	28
   254  007EE6  7F                 	db	127
   255  007EE7  49                 	db	73
   256  007EE8  49                 	db	73
   257  007EE9  49                 	db	73
   258  007EEA  41                 	db	65
   259  007EEB  7F                 	db	127
   260  007EEC  09                 	db	9
   261  007EED  09                 	db	9
   262  007EEE  09                 	db	9
   263  007EEF  01                 	db	1
   264  007EF0  3E                 	db	62
   265  007EF1  41                 	db	65
   266  007EF2  49                 	db	73
   267  007EF3  49                 	db	73
   268  007EF4  7A                 	db	122
   269  007EF5  7F                 	db	127
   270  007EF6  08                 	db	8
   271  007EF7  08                 	db	8
   272  007EF8  08                 	db	8
   273  007EF9  7F                 	db	127
   274  007EFA  00                 	db	0
   275  007EFB  41                 	db	65
   276  007EFC  7F                 	db	127
   277  007EFD  41                 	db	65
   278  007EFE  00                 	db	0
   279  007EFF  20                 	db	32
   280  007F00  40                 	db	64
   281  007F01  41                 	db	65
   282  007F02  3F                 	db	63
   283  007F03  01                 	db	1
   284  007F04  7F                 	db	127
   285  007F05  08                 	db	8
   286  007F06  14                 	db	20
   287  007F07  22                 	db	34
   288  007F08  41                 	db	65
   289  007F09  7F                 	db	127
   290  007F0A  40                 	db	64
   291  007F0B  40                 	db	64
   292  007F0C  40                 	db	64
   293  007F0D  40                 	db	64
   294  007F0E  7F                 	db	127
   295  007F0F  02                 	db	2
   296  007F10  0C                 	db	12
   297  007F11  02                 	db	2
   298  007F12  7F                 	db	127
   299  007F13  7F                 	db	127
   300  007F14  04                 	db	4
   301  007F15  08                 	db	8
   302  007F16  10                 	db	16
   303  007F17  7F                 	db	127
   304  007F18  3E                 	db	62
   305  007F19  41                 	db	65
   306  007F1A  41                 	db	65
   307  007F1B  41                 	db	65
   308  007F1C  3E                 	db	62
   309  007F1D  7F                 	db	127
   310  007F1E  09                 	db	9
   311  007F1F  09                 	db	9
   312  007F20  09                 	db	9
   313  007F21  06                 	db	6
   314  007F22  3E                 	db	62
   315  007F23  41                 	db	65
   316  007F24  51                 	db	81
   317  007F25  21                 	db	33
   318  007F26  5E                 	db	94
   319  007F27  7F                 	db	127
   320  007F28  09                 	db	9
   321  007F29  19                 	db	25
   322  007F2A  29                 	db	41
   323  007F2B  46                 	db	70
   324  007F2C  46                 	db	70
   325  007F2D  49                 	db	73
   326  007F2E  49                 	db	73
   327  007F2F  49                 	db	73
   328  007F30  31                 	db	49
   329  007F31  01                 	db	1
   330  007F32  01                 	db	1
   331  007F33  7F                 	db	127
   332  007F34  01                 	db	1
   333  007F35  01                 	db	1
   334  007F36  3F                 	db	63
   335  007F37  40                 	db	64
   336  007F38  40                 	db	64
   337  007F39  40                 	db	64
   338  007F3A  3F                 	db	63
   339  007F3B  1F                 	db	31
   340  007F3C  20                 	db	32
   341  007F3D  40                 	db	64
   342  007F3E  20                 	db	32
   343  007F3F  1F                 	db	31
   344  007F40  3F                 	db	63
   345  007F41  40                 	db	64
   346  007F42  38                 	db	56
   347  007F43  40                 	db	64
   348  007F44  3F                 	db	63
   349  007F45  63                 	db	99
   350  007F46  14                 	db	20
   351  007F47  08                 	db	8
   352  007F48  14                 	db	20
   353  007F49  63                 	db	99
   354  007F4A  07                 	db	7
   355  007F4B  08                 	db	8
   356  007F4C  70                 	db	112
   357  007F4D  08                 	db	8
   358  007F4E  07                 	db	7
   359  007F4F  61                 	db	97
   360  007F50  51                 	db	81
   361  007F51  49                 	db	73
   362  007F52  45                 	db	69
   363  007F53  43                 	db	67
   364  007F54  00                 	db	0
   365  007F55  7F                 	db	127
   366  007F56  41                 	db	65
   367  007F57  41                 	db	65
   368  007F58  00                 	db	0
   369  007F59  55                 	db	85
   370  007F5A  2A                 	db	42
   371  007F5B  55                 	db	85
   372  007F5C  2A                 	db	42
   373  007F5D  55                 	db	85
   374  007F5E  00                 	db	0
   375  007F5F  41                 	db	65
   376  007F60  41                 	db	65
   377  007F61  7F                 	db	127
   378  007F62  00                 	db	0
   379  007F63  04                 	db	4
   380  007F64  02                 	db	2
   381  007F65  01                 	db	1
   382  007F66  02                 	db	2
   383  007F67  04                 	db	4
   384  007F68  40                 	db	64
   385  007F69  40                 	db	64
   386  007F6A  40                 	db	64
   387  007F6B  40                 	db	64
   388  007F6C  40                 	db	64
   389  007F6D  00                 	db	0
   390  007F6E  01                 	db	1
   391  007F6F  02                 	db	2
   392  007F70  04                 	db	4
   393  007F71  00                 	db	0
   394  007F72  20                 	db	32
   395  007F73  54                 	db	84
   396  007F74  54                 	db	84
   397  007F75  54                 	db	84
   398  007F76  78                 	db	120
   399  007F77  7F                 	db	127
   400  007F78  48                 	db	72
   401  007F79  44                 	db	68
   402  007F7A  44                 	db	68
   403  007F7B  38                 	db	56
   404  007F7C  38                 	db	56
   405  007F7D  44                 	db	68
   406  007F7E  44                 	db	68
   407  007F7F  44                 	db	68
   408  007F80  20                 	db	32
   409  007F81  38                 	db	56
   410  007F82  44                 	db	68
   411  007F83  44                 	db	68
   412  007F84  48                 	db	72
   413  007F85  7F                 	db	127
   414  007F86  38                 	db	56
   415  007F87  54                 	db	84
   416  007F88  54                 	db	84
   417  007F89  54                 	db	84
   418  007F8A  18                 	db	24
   419  007F8B  08                 	db	8
   420  007F8C  7E                 	db	126
   421  007F8D  09                 	db	9
   422  007F8E  01                 	db	1
   423  007F8F  02                 	db	2
   424  007F90  0C                 	db	12
   425  007F91  52                 	db	82
   426  007F92  52                 	db	82
   427  007F93  52                 	db	82
   428  007F94  3E                 	db	62
   429  007F95  7F                 	db	127
   430  007F96  08                 	db	8
   431  007F97  04                 	db	4
   432  007F98  04                 	db	4
   433  007F99  78                 	db	120
   434  007F9A  00                 	db	0
   435  007F9B  44                 	db	68
   436  007F9C  7D                 	db	125
   437  007F9D  40                 	db	64
   438  007F9E  00                 	db	0
   439  007F9F  20                 	db	32
   440  007FA0  40                 	db	64
   441  007FA1  44                 	db	68
   442  007FA2  3D                 	db	61
   443  007FA3  00                 	db	0
   444  007FA4  7F                 	db	127
   445  007FA5  10                 	db	16
   446  007FA6  28                 	db	40
   447  007FA7  44                 	db	68
   448  007FA8  00                 	db	0
   449  007FA9  00                 	db	0
   450  007FAA  41                 	db	65
   451  007FAB  7F                 	db	127
   452  007FAC  40                 	db	64
   453  007FAD  00                 	db	0
   454  007FAE  7C                 	db	124
   455  007FAF  04                 	db	4
   456  007FB0  18                 	db	24
   457  007FB1  04                 	db	4
   458  007FB2  78                 	db	120
   459  007FB3  7C                 	db	124
   460  007FB4  08                 	db	8
   461  007FB5  04                 	db	4
   462  007FB6  04                 	db	4
   463  007FB7  78                 	db	120
   464  007FB8  38                 	db	56
   465  007FB9  44                 	db	68
   466  007FBA  44                 	db	68
   467  007FBB  44                 	db	68
   468  007FBC  38                 	db	56
   469  007FBD  7C                 	db	124
   470  007FBE  14                 	db	20
   471  007FBF  14                 	db	20
   472  007FC0  14                 	db	20
   473  007FC1  08                 	db	8
   474  007FC2  08                 	db	8
   475  007FC3  14                 	db	20
   476  007FC4  14                 	db	20
   477  007FC5  18                 	db	24
   478  007FC6  7C                 	db	124
   479  007FC7  7C                 	db	124
   480  007FC8  08                 	db	8
   481  007FC9  04                 	db	4
   482  007FCA  04                 	db	4
   483  007FCB  08                 	db	8
   484  007FCC  48                 	db	72
   485  007FCD  54                 	db	84
   486  007FCE  54                 	db	84
   487  007FCF  54                 	db	84
   488  007FD0  20                 	db	32
   489  007FD1  04                 	db	4
   490  007FD2  3F                 	db	63
   491  007FD3  44                 	db	68
   492  007FD4  40                 	db	64
   493  007FD5  20                 	db	32
   494  007FD6  3C                 	db	60
   495  007FD7  40                 	db	64
   496  007FD8  40                 	db	64
   497  007FD9  20                 	db	32
   498  007FDA  7C                 	db	124
   499  007FDB  1C                 	db	28
   500  007FDC  20                 	db	32
   501  007FDD  40                 	db	64
   502  007FDE  20                 	db	32
   503  007FDF  1C                 	db	28
   504  007FE0  3C                 	db	60
   505  007FE1  40                 	db	64
   506  007FE2  30                 	db	48
   507  007FE3  40                 	db	64
   508  007FE4  3C                 	db	60
   509  007FE5  44                 	db	68
   510  007FE6  28                 	db	40
   511  007FE7  10                 	db	16
   512  007FE8  28                 	db	40
   513  007FE9  44                 	db	68
   514  007FEA  0C                 	db	12
   515  007FEB  50                 	db	80
   516  007FEC  50                 	db	80
   517  007FED  50                 	db	80
   518  007FEE  3C                 	db	60
   519  007FEF  44                 	db	68
   520  007FF0  64                 	db	100
   521  007FF1  54                 	db	84
   522  007FF2  4C                 	db	76
   523  007FF3  44                 	db	68
   524  007FF4                     __end_of_FONTLOOKUP:
   525                           	opt stack 0
   526  007FF4  28                 	db	40
   527  007FF5  6E                 	db	110	;'n'
   528  007FF6  75                 	db	117	;'u'
   529  007FF7  6C                 	db	108	;'l'
   530  007FF8  6C                 	db	108	;'l'
   531  007FF9  29                 	db	41
   532  007FFA  00                 	db	0
   533  007FFB                     STR_1:
   534  007FFB  25                 	db	37
   535  007FFC  73                 	db	115	;'s'
   536  007FFD  00                 	db	0
   537  0000                     
   538                           ; #config settings
   539  007FFE  00                 	db	0	; dummy byte at the end
   540  0000                     
   541                           	psect	nvCOMRAM
   542  000053                     __pnvCOMRAM:
   543                           	opt stack 0
   544  000053                     _timer0ReloadVal16bit:
   545                           	opt stack 0
   546  000053                     	ds	2
   547  000055                     _eusart2TxBufferRemaining:
   548                           	opt stack 0
   549  000055                     	ds	1
   550  0000                     _ANSELA	set	3896
   551  0000                     _ANSELB	set	3897
   552  0000                     _ANSELC	set	3898
   553  0000                     _ANSELD	set	3899
   554  0000                     _ANSELE	set	3900
   555  0000                     _BAUD1CON	set	4024
   556  0000                     _BAUD2CON	set	3952
   557  0000                     _INTCON2bits	set	4081
   558  0000                     _INTCONbits	set	4082
   559  0000                     _IPR1bits	set	3999
   560  0000                     _IPR3bits	set	4005
   561  0000                     _LATA	set	3977
   562  0000                     _LATB	set	3978
   563  0000                     _LATC	set	3979
   564  0000                     _LATCbits	set	3979
   565  0000                     _LATD	set	3980
   566  0000                     _LATE	set	3981
   567  0000                     _OSCCON	set	4051
   568  0000                     _OSCCON2	set	4050
   569  0000                     _OSCTUNE	set	3995
   570  0000                     _PIE1bits	set	3997
   571  0000                     _PIE3bits	set	4003
   572  0000                     _PIR1bits	set	3998
   573  0000                     _PIR3bits	set	4004
   574  0000                     _RC1STA	set	4011
   575  0000                     _RC1STAbits	set	4011
   576  0000                     _RC2STA	set	3953
   577  0000                     _RC2STAbits	set	3953
   578  0000                     _RCONbits	set	4048
   579  0000                     _RCREG1	set	4014
   580  0000                     _RCREG2	set	3956
   581  0000                     _SPBRG1	set	4015
   582  0000                     _SPBRG2	set	3957
   583  0000                     _SPBRGH1	set	4016
   584  0000                     _SPBRGH2	set	3958
   585  0000                     _SSP1ADD	set	4040
   586  0000                     _SSP1BUF	set	4041
   587  0000                     _SSP1CON1	set	4038
   588  0000                     _SSP1CON1bits	set	4038
   589  0000                     _SSP1STAT	set	4039
   590  0000                     _SSP1STATbits	set	4039
   591  0000                     _T0CON	set	4053
   592  0000                     _T0CONbits	set	4053
   593  0000                     _TMR0H	set	4055
   594  0000                     _TMR0L	set	4054
   595  0000                     _TRISA	set	3986
   596  0000                     _TRISB	set	3987
   597  0000                     _TRISC	set	3988
   598  0000                     _TRISD	set	3989
   599  0000                     _TRISE	set	3990
   600  0000                     _TX1STA	set	4012
   601  0000                     _TX2STA	set	3954
   602  0000                     _TXREG1	set	4013
   603  0000                     _TXREG2	set	3955
   604  0000                     _WPUB	set	3937
   605  0000                     _LATA3	set	31819
   606  0000                     _LATA6	set	31822
   607  0000                     _LATB0	set	31824
   608  0000                     _LATB1	set	31825
   609  0000                     _LATB3	set	31827
   610  0000                     _LATB4	set	31828
   611  0000                     _LATB5	set	31829
   612  0000                     _LATC0	set	31832
   613  0000                     _LATC1	set	31833
   614  0000                     _LATD0	set	31840
   615  0000                     _LATD2	set	31842
   616  0000                     _LATD3	set	31843
   617  0000                     _TRISA3	set	31891
   618  0000                     _TRISD0	set	31912
   619  0000                     _TRISD2	set	31914
   620  0000                     _TRISD3	set	31915
   621                           
   622                           	psect	cinit
   623  00025C                     __pcinit:
   624                           	opt stack 0
   625  00025C                     start_initialization:
   626                           	opt stack 0
   627  00025C                     __initialization:
   628                           	opt stack 0
   629                           
   630                           ; Clear objects allocated to BANK4 (200 bytes)
   631  00025C  EE04  F000         	lfsr	0,__pbssBANK4
   632  000260  0EC8               	movlw	200
   633  000262                     clear_0:
   634  000262  6AEE               	clrf	postinc0,c
   635  000264  06E8               	decf	wreg,f,c
   636  000266  E1FD               	bnz	clear_0
   637                           
   638                           ; Clear objects allocated to BANK3 (206 bytes)
   639  000268  EE03  F000         	lfsr	0,__pbssBANK3
   640  00026C  0ECE               	movlw	206
   641  00026E                     clear_1:
   642  00026E  6AEE               	clrf	postinc0,c
   643  000270  06E8               	decf	wreg,f,c
   644  000272  E1FD               	bnz	clear_1
   645                           
   646                           ; Clear objects allocated to BANK2 (206 bytes)
   647  000274  EE02  F000         	lfsr	0,__pbssBANK2
   648  000278  0ECE               	movlw	206
   649  00027A                     clear_2:
   650  00027A  6AEE               	clrf	postinc0,c
   651  00027C  06E8               	decf	wreg,f,c
   652  00027E  E1FD               	bnz	clear_2
   653                           
   654                           ; Clear objects allocated to BANK1 (206 bytes)
   655  000280  EE01  F000         	lfsr	0,__pbssBANK1
   656  000284  0ECE               	movlw	206
   657  000286                     clear_3:
   658  000286  6AEE               	clrf	postinc0,c
   659  000288  06E8               	decf	wreg,f,c
   660  00028A  E1FD               	bnz	clear_3
   661                           
   662                           ; Clear objects allocated to BANK0 (76 bytes)
   663  00028C  EE00  F060         	lfsr	0,__pbssBANK0
   664  000290  0E4C               	movlw	76
   665  000292                     clear_4:
   666  000292  6AEE               	clrf	postinc0,c
   667  000294  06E8               	decf	wreg,f,c
   668  000296  E1FD               	bnz	clear_4
   669                           
   670                           ; Clear objects allocated to COMRAM (46 bytes)
   671  000298  EE00  F001         	lfsr	0,__pbssCOMRAM
   672  00029C  0E2E               	movlw	46
   673  00029E                     clear_5:
   674  00029E  6AEE               	clrf	postinc0,c
   675  0002A0  06E8               	decf	wreg,f,c
   676  0002A2  E1FD               	bnz	clear_5
   677                           
   678                           ; Initialize objects allocated to COMRAM (10 bytes)
   679                           ; load TBLPTR registers with __pidataCOMRAM
   680  0002A4  0E3A               	movlw	low __pidataCOMRAM
   681  0002A6  6EF6               	movwf	tblptrl,c
   682  0002A8  0E06               	movlw	high __pidataCOMRAM
   683  0002AA  6EF7               	movwf	tblptrh,c
   684  0002AC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   685  0002AE  6EF8               	movwf	tblptru,c
   686  0002B0  EE00  F049         	lfsr	0,__pdataCOMRAM
   687  0002B4  EE10 F00A          	lfsr	1,10
   688  0002B8                     copy_data0:
   689  0002B8  0009               	tblrd		*+
   690  0002BA  CFF5 FFEE          	movff	tablat,postinc0
   691  0002BE  50E5               	movf	postdec1,w,c
   692  0002C0  50E1               	movf	fsr1l,w,c
   693  0002C2  E1FA               	bnz	copy_data0
   694  0002C4                     end_of_initialization:
   695                           	opt stack 0
   696  0002C4                     __end_of__initialization:
   697                           	opt stack 0
   698  0002C4  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   699  0002C6  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   700  0002C8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   701  0002CA  6EF8               	movwf	tblptru,c
   702  0002CC  0100               	movlb	0
   703  0002CE  EFD4  F001         	goto	_main	;jump to C main() function
   704                           tblptru	equ	0xFF8
   705                           tblptrh	equ	0xFF7
   706                           tblptrl	equ	0xFF6
   707                           tablat	equ	0xFF5
   708                           postinc0	equ	0xFEE
   709                           wreg	equ	0xFE8
   710                           postdec1	equ	0xFE5
   711                           fsr1l	equ	0xFE1
   712                           
   713                           	psect	bssCOMRAM
   714  000001                     __pbssCOMRAM:
   715                           	opt stack 0
   716  000001                     _eusart2TxBuffer:
   717                           	opt stack 0
   718  000001                     	ds	8
   719  000009                     _Start:
   720                           	opt stack 0
   721  000009                     	ds	2
   722  00000B                     _addressErrorCounter:
   723                           	opt stack 0
   724  00000B                     	ds	2
   725  00000D                     _alignErrorCounter:
   726                           	opt stack 0
   727  00000D                     	ds	2
   728  00000F                     _crcErrorCounter:
   729                           	opt stack 0
   730  00000F                     	ds	2
   731  000011                     _dataAdressErrorCounter:
   732                           	opt stack 0
   733  000011                     	ds	2
   734  000013                     _group:
   735                           	opt stack 0
   736  000013                     	ds	2
   737  000015                     _receiveArrayAddress:
   738                           	opt stack 0
   739  000015                     	ds	2
   740  000017                     _sendStructAddress:
   741                           	opt stack 0
   742  000017                     	ds	2
   743  000019                     _serial_available:
   744                           	opt stack 0
   745  000019                     	ds	2
   746  00001B                     _serial_peek:
   747                           	opt stack 0
   748  00001B                     	ds	2
   749  00001D                     _serial_read:
   750                           	opt stack 0
   751  00001D                     	ds	2
   752  00001F                     _serial_write:
   753                           	opt stack 0
   754  00001F                     	ds	2
   755  000021                     _AKNAKsend:
   756                           	opt stack 0
   757  000021                     	ds	1
   758  000022                     _calc_CS:
   759                           	opt stack 0
   760  000022                     	ds	1
   761  000023                     _eusart2RxCount:
   762                           	opt stack 0
   763  000023                     	ds	1
   764  000024                     _eusart2RxHead:
   765                           	opt stack 0
   766  000024                     	ds	1
   767  000025                     _eusart2RxTail:
   768                           	opt stack 0
   769  000025                     	ds	1
   770  000026                     _eusart2TxHead:
   771                           	opt stack 0
   772  000026                     	ds	1
   773  000027                     _eusart2TxTail:
   774                           	opt stack 0
   775  000027                     	ds	1
   776  000028                     _i:
   777                           	opt stack 0
   778  000028                     	ds	1
   779  000029                     _maxDataAddress:
   780                           	opt stack 0
   781  000029                     	ds	1
   782  00002A                     _moduleAddress:
   783                           	opt stack 0
   784  00002A                     	ds	1
   785  00002B                     _returnAddress:
   786                           	opt stack 0
   787  00002B                     	ds	1
   788  00002C                     _rx_address:
   789                           	opt stack 0
   790  00002C                     	ds	1
   791  00002D                     _rx_array_inx:
   792                           	opt stack 0
   793  00002D                     	ds	1
   794  00002E                     _rx_len:
   795                           	opt stack 0
   796  00002E                     	ds	1
   797                           tblptru	equ	0xFF8
   798                           tblptrh	equ	0xFF7
   799                           tblptrl	equ	0xFF6
   800                           tablat	equ	0xFF5
   801                           postinc0	equ	0xFEE
   802                           wreg	equ	0xFE8
   803                           postdec1	equ	0xFE5
   804                           fsr1l	equ	0xFE1
   805                           
   806                           	psect	dataCOMRAM
   807  000049                     __pdataCOMRAM:
   808                           	opt stack 0
   809  000049                     _Transmit_stall:
   810                           	opt stack 0
   811  000049                     	ds	1
   812  00004A                     _ChargerData:
   813                           	opt stack 0
   814  00004A                     	ds	9
   815                           tblptru	equ	0xFF8
   816                           tblptrh	equ	0xFF7
   817                           tblptrl	equ	0xFF6
   818                           tablat	equ	0xFF5
   819                           postinc0	equ	0xFEE
   820                           wreg	equ	0xFE8
   821                           postdec1	equ	0xFE5
   822                           fsr1l	equ	0xFE1
   823                           
   824                           	psect	bssBANK0
   825  000060                     __pbssBANK0:
   826                           	opt stack 0
   827  000060                     _receiveArray:
   828                           	opt stack 0
   829  000060                     	ds	40
   830  000088                     _ddata:
   831                           	opt stack 0
   832  000088                     	ds	11
   833  000093                     _eusart2RxBuffer:
   834                           	opt stack 0
   835  000093                     	ds	8
   836  00009B                     _crc_buffer:
   837                           	opt stack 0
   838  00009B                     	ds	17
   839                           tblptru	equ	0xFF8
   840                           tblptrh	equ	0xFF7
   841                           tblptrl	equ	0xFF6
   842                           tablat	equ	0xFF5
   843                           postinc0	equ	0xFEE
   844                           wreg	equ	0xFE8
   845                           postdec1	equ	0xFE5
   846                           fsr1l	equ	0xFE1
   847                           
   848                           	psect	bssBANK1
   849  000100                     __pbssBANK1:
   850                           	opt stack 0
   851  000100                     _ring_buffer:
   852                           	opt stack 0
   853  000100                     	ds	206
   854                           tblptru	equ	0xFF8
   855                           tblptrh	equ	0xFF7
   856                           tblptrl	equ	0xFF6
   857                           tablat	equ	0xFF5
   858                           postinc0	equ	0xFEE
   859                           wreg	equ	0xFE8
   860                           postdec1	equ	0xFE5
   861                           fsr1l	equ	0xFE1
   862                           
   863                           	psect	bssBANK2
   864  000200                     __pbssBANK2:
   865                           	opt stack 0
   866  000200                     _input_buffer:
   867                           	opt stack 0
   868  000200                     	ds	206
   869                           tblptru	equ	0xFF8
   870                           tblptrh	equ	0xFF7
   871                           tblptrl	equ	0xFF6
   872                           tablat	equ	0xFF5
   873                           postinc0	equ	0xFEE
   874                           wreg	equ	0xFE8
   875                           postdec1	equ	0xFE5
   876                           fsr1l	equ	0xFE1
   877                           
   878                           	psect	bssBANK3
   879  000300                     __pbssBANK3:
   880                           	opt stack 0
   881  000300                     _output_buffer:
   882                           	opt stack 0
   883  000300                     	ds	206
   884                           tblptru	equ	0xFF8
   885                           tblptrh	equ	0xFF7
   886                           tblptrl	equ	0xFF6
   887                           tablat	equ	0xFF5
   888                           postinc0	equ	0xFEE
   889                           wreg	equ	0xFE8
   890                           postdec1	equ	0xFE5
   891                           fsr1l	equ	0xFE1
   892                           
   893                           	psect	bssBANK4
   894  000400                     __pbssBANK4:
   895                           	opt stack 0
   896  000400                     _rx_buffer:
   897                           	opt stack 0
   898  000400                     	ds	200
   899                           tblptru	equ	0xFF8
   900                           tblptrh	equ	0xFF7
   901                           tblptrl	equ	0xFF6
   902                           tablat	equ	0xFF5
   903                           postinc0	equ	0xFEE
   904                           wreg	equ	0xFE8
   905                           postdec1	equ	0xFE5
   906                           fsr1l	equ	0xFE1
   907                           
   908                           	psect	cstackBANK0
   909  0000AC                     __pcstackBANK0:
   910                           	opt stack 0
   911  0000AC                     SPI1_Exchange8bit@data:
   912                           	opt stack 0
   913  0000AC                     Delay@wait:
   914                           	opt stack 0
   915                           
   916                           ; 4 bytes @ 0x0
   917  0000AC                     	ds	1
   918  0000AD                     clearLcd@res:
   919                           	opt stack 0
   920  0000AD                     blackLcd@res:
   921                           	opt stack 0
   922                           
   923                           ; 2 bytes @ 0x1
   924  0000AD                     	ds	3
   925  0000B0                     ??_Delay:
   926                           
   927                           ; 0 bytes @ 0x4
   928  0000B0                     	ds	1
   929  0000B1                     Delay@i:
   930                           	opt stack 0
   931                           
   932                           ; 4 bytes @ 0x5
   933  0000B1                     	ds	4
   934  0000B5                     tblptru	equ	0xFF8
   935                           tblptrh	equ	0xFF7
   936                           tblptrl	equ	0xFF6
   937                           tablat	equ	0xFF5
   938                           postinc0	equ	0xFEE
   939                           wreg	equ	0xFE8
   940                           postdec1	equ	0xFE5
   941                           fsr1l	equ	0xFE1
   942                           
   943                           ; 0 bytes @ 0x9
   944                           
   945                           	psect	cstackCOMRAM
   946  00002F                     __pcstackCOMRAM:
   947                           	opt stack 0
   948  00002F                     ?_UART_buff_modulo_inc:
   949                           	opt stack 0
   950  00002F                     ?_UART_buff_size:
   951                           	opt stack 0
   952  00002F                     UART_buff_size@_this:
   953                           	opt stack 0
   954  00002F                     UART_buff_modulo_inc@value:
   955                           	opt stack 0
   956                           
   957                           ; 2 bytes @ 0x0
   958  00002F                     	ds	2
   959  000031                     UART_buff_modulo_inc@modulus:
   960                           	opt stack 0
   961                           
   962                           ; 2 bytes @ 0x2
   963  000031                     	ds	2
   964  000033                     UART_buff_modulo_inc@my_value:
   965                           	opt stack 0
   966                           
   967                           ; 2 bytes @ 0x4
   968  000033                     	ds	2
   969  000035                     UART_buff_put@_this:
   970                           	opt stack 0
   971  000035                     UART_buff_get@_this:
   972                           	opt stack 0
   973                           
   974                           ; 2 bytes @ 0x6
   975  000035                     	ds	2
   976  000037                     ??_UART_buff_get:
   977  000037                     UART_buff_put@c:
   978                           	opt stack 0
   979                           
   980                           ; 1 bytes @ 0x8
   981  000037                     	ds	1
   982  000038                     ??_UART_buff_put:
   983                           
   984                           ; 0 bytes @ 0x9
   985  000038                     	ds	1
   986  000039                     UART_buff_get@c:
   987                           	opt stack 0
   988                           
   989                           ; 1 bytes @ 0xA
   990  000039                     	ds	1
   991  00003A                     EUSART1_Receive_ISR@data:
   992                           	opt stack 0
   993                           
   994                           ; 1 bytes @ 0xB
   995  00003A                     	ds	1
   996  00003B                     ??_INTERRUPT_InterruptManager:
   997                           
   998                           ; 0 bytes @ 0xC
   999  00003B                     	ds	14
  1000                           tblptru	equ	0xFF8
  1001                           tblptrh	equ	0xFF7
  1002                           tblptrl	equ	0xFF6
  1003                           tablat	equ	0xFF5
  1004                           postinc0	equ	0xFEE
  1005                           wreg	equ	0xFE8
  1006                           postdec1	equ	0xFE5
  1007                           fsr1l	equ	0xFE1
  1008                           
  1009 ;;
  1010 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1011 ;;
  1012 ;; *************** function _main *****************
  1013 ;; Defined at:
  1014 ;;		line 16 in file "main.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;		None
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;		None
  1019 ;; Return value:  Size  Location     Type
  1020 ;;		None               void
  1021 ;; Registers used:
  1022 ;;		wreg, status,2, status,0, cstack
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1028 ;;      Params:         0       0       0       0       0       0       0
  1029 ;;      Locals:         0       0       0       0       0       0       0
  1030 ;;      Temps:          0       0       0       0       0       0       0
  1031 ;;      Totals:         0       0       0       0       0       0       0
  1032 ;;Total ram usage:        0 bytes
  1033 ;; Hardware stack levels required when called:    7
  1034 ;; This function calls:
  1035 ;;		_Delay
  1036 ;;		_NokiaStart
  1037 ;;		_SYSTEM_Initialize
  1038 ;; This function is called by:
  1039 ;;		Startup code after reset
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043                           	psect	text0
  1044  0003A8                     __ptext0:
  1045                           	opt stack 0
  1046  0003A8                     _main:
  1047                           	opt stack 24
  1048                           
  1049                           ;main.c: 18: SYSTEM_Initialize();
  1050                           
  1051                           ;incstack = 0
  1052  0003A8  ECEA  F002         	call	_SYSTEM_Initialize	;wreg free
  1053                           
  1054                           ;main.c: 37: (INTCONbits.GIE = 1);
  1055  0003AC  8EF2               	bsf	intcon,7,c	;volatile
  1056                           
  1057                           ;main.c: 40: (INTCONbits.PEIE = 1);
  1058  0003AE  8CF2               	bsf	intcon,6,c	;volatile
  1059                           
  1060                           ;main.c: 47: NokiaStart();
  1061  0003B0  EC69  F001         	call	_NokiaStart	;wreg free
  1062                           
  1063                           ;main.c: 48: do { TRISA3 = 0; } while(0);
  1064  0003B4  9692               	bcf	3986,3,c	;volatile
  1065  0003B6  D01C               	goto	u1851
  1066  0003B8                     l2895:
  1067                           
  1068                           ;main.c: 69: Delay(1000);
  1069  0003B8  0EE8               	movlw	232
  1070  0003BA  0100               	movlb	0	; () banked
  1071  0003BC  6FAC               	movwf	Delay@wait& (0+255),b
  1072  0003BE  0E03               	movlw	3
  1073  0003C0  6FAD               	movwf	(Delay@wait+1)& (0+255),b
  1074  0003C2  0E00               	movlw	0
  1075  0003C4  6FAE               	movwf	(Delay@wait+2)& (0+255),b
  1076  0003C6  0E00               	movlw	0
  1077  0003C8  6FAF               	movwf	(Delay@wait+3)& (0+255),b
  1078  0003CA  ECA1  F001         	call	_Delay	;wreg free
  1079                           
  1080                           ;main.c: 70: do { LATA6 = ~LATA6; } while(0);
  1081  0003CE  BC89               	btfsc	3977,6,c	;volatile
  1082  0003D0  D002               	goto	u1790
  1083  0003D2  8C89               	bsf	3977,6,c	;volatile
  1084  0003D4  D001               	goto	l2899
  1085  0003D6                     u1790:
  1086  0003D6  9C89               	bcf	3977,6,c	;volatile
  1087  0003D8                     l2899:
  1088  0003D8  B08B               	btfsc	3979,0,c	;volatile
  1089  0003DA  D002               	goto	u1810
  1090  0003DC  808B               	bsf	3979,0,c	;volatile
  1091  0003DE  D001               	goto	l2901
  1092  0003E0                     u1810:
  1093  0003E0  908B               	bcf	3979,0,c	;volatile
  1094  0003E2                     l2901:
  1095  0003E2  B28B               	btfsc	3979,1,c	;volatile
  1096  0003E4  D002               	goto	u1830
  1097  0003E6  828B               	bsf	3979,1,c	;volatile
  1098  0003E8  D001               	goto	l2903
  1099  0003EA                     u1830:
  1100  0003EA  928B               	bcf	3979,1,c	;volatile
  1101  0003EC                     l2903:
  1102  0003EC  B689               	btfsc	3977,3,c	;volatile
  1103  0003EE  D002               	goto	u1850
  1104  0003F0                     u1851:
  1105  0003F0  8689               	bsf	3977,3,c	;volatile
  1106  0003F2  D7E2               	goto	l2895
  1107  0003F4                     u1850:
  1108  0003F4  9689               	bcf	3977,3,c	;volatile
  1109  0003F6  D7E0               	goto	l2895
  1110  0003F8                     __end_of_main:
  1111                           	opt stack 0
  1112                           tblptru	equ	0xFF8
  1113                           tblptrh	equ	0xFF7
  1114                           tblptrl	equ	0xFF6
  1115                           tablat	equ	0xFF5
  1116                           intcon	equ	0xFF2
  1117                           postinc0	equ	0xFEE
  1118                           wreg	equ	0xFE8
  1119                           postdec1	equ	0xFE5
  1120                           fsr1l	equ	0xFE1
  1121                           
  1122 ;; *************** function _SYSTEM_Initialize *****************
  1123 ;; Defined at:
  1124 ;;		line 112 in file "mcc_generated_files/mcc.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;		None
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;		None
  1129 ;; Return value:  Size  Location     Type
  1130 ;;		None               void
  1131 ;; Registers used:
  1132 ;;		wreg, status,2, cstack
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1138 ;;      Params:         0       0       0       0       0       0       0
  1139 ;;      Locals:         0       0       0       0       0       0       0
  1140 ;;      Temps:          0       0       0       0       0       0       0
  1141 ;;      Totals:         0       0       0       0       0       0       0
  1142 ;;Total ram usage:        0 bytes
  1143 ;; Hardware stack levels used:    1
  1144 ;; Hardware stack levels required when called:    6
  1145 ;; This function calls:
  1146 ;;		_EUSART2_Initialize
  1147 ;;		_INTERRUPT_Initialize
  1148 ;;		_OSCILLATOR_Initialize
  1149 ;;		_PIN_MANAGER_Initialize
  1150 ;;		_TMR0_Initialize
  1151 ;; This function is called by:
  1152 ;;		_main
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text1
  1157  0005D4                     __ptext1:
  1158                           	opt stack 0
  1159  0005D4                     _SYSTEM_Initialize:
  1160                           	opt stack 24
  1161                           
  1162                           ;mcc.c: 113: OSCILLATOR_Initialize();
  1163                           
  1164                           ;incstack = 0
  1165  0005D4  EC09  F003         	call	_OSCILLATOR_Initialize	;wreg free
  1166                           
  1167                           ;mcc.c: 114: PIN_MANAGER_Initialize();
  1168  0005D8  ECFC  F001         	call	_PIN_MANAGER_Initialize	;wreg free
  1169                           
  1170                           ;mcc.c: 115: INTERRUPT_Initialize();
  1171  0005DC  EC17  F003         	call	_INTERRUPT_Initialize	;wreg free
  1172                           
  1173                           ;mcc.c: 117: EUSART2_Initialize();
  1174  0005E0  EC5A  F002         	call	_EUSART2_Initialize	;wreg free
  1175                           
  1176                           ;mcc.c: 118: TMR0_Initialize();
  1177  0005E4  ECDE  F002         	call	_TMR0_Initialize	;wreg free
  1178  0005E8  0012               	return		;funcret
  1179  0005EA                     __end_of_SYSTEM_Initialize:
  1180                           	opt stack 0
  1181                           tblptru	equ	0xFF8
  1182                           tblptrh	equ	0xFF7
  1183                           tblptrl	equ	0xFF6
  1184                           tablat	equ	0xFF5
  1185                           intcon	equ	0xFF2
  1186                           postinc0	equ	0xFEE
  1187                           wreg	equ	0xFE8
  1188                           postdec1	equ	0xFE5
  1189                           fsr1l	equ	0xFE1
  1190                           
  1191 ;; *************** function _TMR0_Initialize *****************
  1192 ;; Defined at:
  1193 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;		None
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;		None
  1198 ;; Return value:  Size  Location     Type
  1199 ;;		None               void
  1200 ;; Registers used:
  1201 ;;		wreg, status,2, cstack
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1207 ;;      Params:         0       0       0       0       0       0       0
  1208 ;;      Locals:         0       0       0       0       0       0       0
  1209 ;;      Temps:          0       0       0       0       0       0       0
  1210 ;;      Totals:         0       0       0       0       0       0       0
  1211 ;;Total ram usage:        0 bytes
  1212 ;; Hardware stack levels used:    1
  1213 ;; Hardware stack levels required when called:    5
  1214 ;; This function calls:
  1215 ;;		_TMR0_StartTimer
  1216 ;; This function is called by:
  1217 ;;		_SYSTEM_Initialize
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221                           	psect	text2
  1222  0005BC                     __ptext2:
  1223                           	opt stack 0
  1224  0005BC                     _TMR0_Initialize:
  1225                           	opt stack 24
  1226                           
  1227                           ;tmr0.c: 68: T0CON = 0x91;
  1228                           
  1229                           ;incstack = 0
  1230  0005BC  0E91               	movlw	145
  1231  0005BE  6ED5               	movwf	4053,c	;volatile
  1232                           
  1233                           ;tmr0.c: 71: TMR0H = 0x0A;
  1234  0005C0  0E0A               	movlw	10
  1235  0005C2  6ED7               	movwf	4055,c	;volatile
  1236                           
  1237                           ;tmr0.c: 74: TMR0L = 0xFF;
  1238  0005C4  68D6               	setf	4054,c	;volatile
  1239                           
  1240                           ;tmr0.c: 77: timer0ReloadVal16bit = 2815;
  1241  0005C6  0E0A               	movlw	10
  1242  0005C8  6E54               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  1243  0005CA  6853               	setf	_timer0ReloadVal16bit,c	;volatile
  1244                           
  1245                           ;tmr0.c: 80: INTCONbits.TMR0IF = 0;
  1246  0005CC  94F2               	bcf	intcon,2,c	;volatile
  1247                           
  1248                           ;tmr0.c: 83: TMR0_StartTimer();
  1249  0005CE  EC22  F003         	call	_TMR0_StartTimer	;wreg free
  1250  0005D2  0012               	return		;funcret
  1251  0005D4                     __end_of_TMR0_Initialize:
  1252                           	opt stack 0
  1253                           tblptru	equ	0xFF8
  1254                           tblptrh	equ	0xFF7
  1255                           tblptrl	equ	0xFF6
  1256                           tablat	equ	0xFF5
  1257                           intcon	equ	0xFF2
  1258                           postinc0	equ	0xFEE
  1259                           wreg	equ	0xFE8
  1260                           postdec1	equ	0xFE5
  1261                           fsr1l	equ	0xFE1
  1262                           
  1263 ;; *************** function _TMR0_StartTimer *****************
  1264 ;; Defined at:
  1265 ;;		line 86 in file "mcc_generated_files/tmr0.c"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;		None
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;		None
  1270 ;; Return value:  Size  Location     Type
  1271 ;;		None               void
  1272 ;; Registers used:
  1273 ;;		None
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1279 ;;      Params:         0       0       0       0       0       0       0
  1280 ;;      Locals:         0       0       0       0       0       0       0
  1281 ;;      Temps:          0       0       0       0       0       0       0
  1282 ;;      Totals:         0       0       0       0       0       0       0
  1283 ;;Total ram usage:        0 bytes
  1284 ;; Hardware stack levels used:    1
  1285 ;; Hardware stack levels required when called:    4
  1286 ;; This function calls:
  1287 ;;		Nothing
  1288 ;; This function is called by:
  1289 ;;		_TMR0_Initialize
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           
  1293                           	psect	text3
  1294  000644                     __ptext3:
  1295                           	opt stack 0
  1296  000644                     _TMR0_StartTimer:
  1297                           	opt stack 24
  1298                           
  1299                           ;tmr0.c: 88: T0CONbits.TMR0ON = 1;
  1300                           
  1301                           ;incstack = 0
  1302  000644  8ED5               	bsf	4053,7,c	;volatile
  1303  000646  0012               	return		;funcret
  1304  000648                     __end_of_TMR0_StartTimer:
  1305                           	opt stack 0
  1306                           tblptru	equ	0xFF8
  1307                           tblptrh	equ	0xFF7
  1308                           tblptrl	equ	0xFF6
  1309                           tablat	equ	0xFF5
  1310                           intcon	equ	0xFF2
  1311                           postinc0	equ	0xFEE
  1312                           wreg	equ	0xFE8
  1313                           postdec1	equ	0xFE5
  1314                           fsr1l	equ	0xFE1
  1315                           
  1316 ;; *************** function _PIN_MANAGER_Initialize *****************
  1317 ;; Defined at:
  1318 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;		None
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;		None
  1323 ;; Return value:  Size  Location     Type
  1324 ;;		None               void
  1325 ;; Registers used:
  1326 ;;		wreg, status,2
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1332 ;;      Params:         0       0       0       0       0       0       0
  1333 ;;      Locals:         0       0       0       0       0       0       0
  1334 ;;      Temps:          0       0       0       0       0       0       0
  1335 ;;      Totals:         0       0       0       0       0       0       0
  1336 ;;Total ram usage:        0 bytes
  1337 ;; Hardware stack levels used:    1
  1338 ;; Hardware stack levels required when called:    4
  1339 ;; This function calls:
  1340 ;;		Nothing
  1341 ;; This function is called by:
  1342 ;;		_SYSTEM_Initialize
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           	psect	text4
  1347  0003F8                     __ptext4:
  1348                           	opt stack 0
  1349  0003F8                     _PIN_MANAGER_Initialize:
  1350                           	opt stack 25
  1351                           
  1352                           ;pin_manager.c: 51: LATB = 0x0;
  1353                           
  1354                           ;incstack = 0
  1355  0003F8  0E00               	movlw	0
  1356  0003FA  6E8A               	movwf	3978,c	;volatile
  1357                           
  1358                           ;pin_manager.c: 52: LATA = 0x0;
  1359  0003FC  0E00               	movlw	0
  1360  0003FE  6E89               	movwf	3977,c	;volatile
  1361                           
  1362                           ;pin_manager.c: 53: ANSELE = 0x7;
  1363  000400  0E07               	movlw	7
  1364  000402  010F               	movlb	15	; () banked
  1365  000404  6F3C               	movwf	60,b	;volatile
  1366                           
  1367                           ;pin_manager.c: 54: LATE = 0x0;
  1368  000406  0E00               	movlw	0
  1369  000408  6E8D               	movwf	3981,c	;volatile
  1370                           
  1371                           ;pin_manager.c: 55: LATD = 0x0;
  1372  00040A  0E00               	movlw	0
  1373  00040C  6E8C               	movwf	3980,c	;volatile
  1374                           
  1375                           ;pin_manager.c: 56: LATC = 0x0;
  1376  00040E  0E00               	movlw	0
  1377  000410  6E8B               	movwf	3979,c	;volatile
  1378                           
  1379                           ;pin_manager.c: 57: ANSELA = 0x2F;
  1380  000412  0E2F               	movlw	47
  1381  000414  010F               	movlb	15	; () banked
  1382  000416  6F38               	movwf	56,b	;volatile
  1383                           
  1384                           ;pin_manager.c: 58: ANSELB = 0x3F;
  1385  000418  0E3F               	movlw	63
  1386  00041A  010F               	movlb	15	; () banked
  1387  00041C  6F39               	movwf	57,b	;volatile
  1388                           
  1389                           ;pin_manager.c: 59: ANSELC = 0xCC;
  1390  00041E  0ECC               	movlw	204
  1391  000420  010F               	movlb	15	; () banked
  1392  000422  6F3A               	movwf	58,b	;volatile
  1393                           
  1394                           ;pin_manager.c: 60: ANSELD = 0x3F;
  1395  000424  0E3F               	movlw	63
  1396  000426  010F               	movlb	15	; () banked
  1397  000428  6F3B               	movwf	59,b	;volatile
  1398                           
  1399                           ;pin_manager.c: 61: WPUB = 0xFC;
  1400  00042A  0EFC               	movlw	252
  1401  00042C  6E61               	movwf	3937,c	;volatile
  1402                           
  1403                           ;pin_manager.c: 62: TRISD = 0xF2;
  1404  00042E  0EF2               	movlw	242
  1405  000430  6E95               	movwf	3989,c	;volatile
  1406                           
  1407                           ;pin_manager.c: 63: TRISE = 0x7;
  1408  000432  0E07               	movlw	7
  1409  000434  6E96               	movwf	3990,c	;volatile
  1410                           
  1411                           ;pin_manager.c: 64: TRISB = 0xC4;
  1412  000436  0EC4               	movlw	196
  1413  000438  6E93               	movwf	3987,c	;volatile
  1414                           
  1415                           ;pin_manager.c: 65: TRISC = 0xD4;
  1416  00043A  0ED4               	movlw	212
  1417  00043C  6E94               	movwf	3988,c	;volatile
  1418                           
  1419                           ;pin_manager.c: 66: TRISA = 0x37;
  1420  00043E  0E37               	movlw	55
  1421  000440  6E92               	movwf	3986,c	;volatile
  1422                           
  1423                           ; BSR set to: 15
  1424                           ;pin_manager.c: 68: INTCON2bits.nRBPU = 0x0;
  1425  000442  9EF1               	bcf	intcon2,7,c	;volatile
  1426                           
  1427                           ; BSR set to: 15
  1428                           ;pin_manager.c: 72: INTCONbits.RBIE = 0;
  1429  000444  96F2               	bcf	intcon,3,c	;volatile
  1430                           
  1431                           ; BSR set to: 15
  1432  000446  0012               	return		;funcret
  1433  000448                     __end_of_PIN_MANAGER_Initialize:
  1434                           	opt stack 0
  1435                           tblptru	equ	0xFF8
  1436                           tblptrh	equ	0xFF7
  1437                           tblptrl	equ	0xFF6
  1438                           tablat	equ	0xFF5
  1439                           intcon	equ	0xFF2
  1440                           intcon2	equ	0xFF1
  1441                           postinc0	equ	0xFEE
  1442                           wreg	equ	0xFE8
  1443                           postdec1	equ	0xFE5
  1444                           fsr1l	equ	0xFE1
  1445                           
  1446 ;; *************** function _OSCILLATOR_Initialize *****************
  1447 ;; Defined at:
  1448 ;;		line 121 in file "mcc_generated_files/mcc.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;		None
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;		None
  1453 ;; Return value:  Size  Location     Type
  1454 ;;		None               void
  1455 ;; Registers used:
  1456 ;;		wreg, status,2
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1462 ;;      Params:         0       0       0       0       0       0       0
  1463 ;;      Locals:         0       0       0       0       0       0       0
  1464 ;;      Temps:          0       0       0       0       0       0       0
  1465 ;;      Totals:         0       0       0       0       0       0       0
  1466 ;;Total ram usage:        0 bytes
  1467 ;; Hardware stack levels used:    1
  1468 ;; Hardware stack levels required when called:    4
  1469 ;; This function calls:
  1470 ;;		Nothing
  1471 ;; This function is called by:
  1472 ;;		_SYSTEM_Initialize
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476                           	psect	text5
  1477  000612                     __ptext5:
  1478                           	opt stack 0
  1479  000612                     _OSCILLATOR_Initialize:
  1480                           	opt stack 25
  1481                           
  1482                           ;mcc.c: 123: OSCCON = 0x70;
  1483                           
  1484                           ; BSR set to: 15
  1485                           ;incstack = 0
  1486  000612  0E70               	movlw	112
  1487  000614  6ED3               	movwf	4051,c	;volatile
  1488                           
  1489                           ;mcc.c: 125: OSCCON2 = 0x04;
  1490  000616  0E04               	movlw	4
  1491  000618  6ED2               	movwf	4050,c	;volatile
  1492                           
  1493                           ;mcc.c: 127: OSCTUNE = 0x00;
  1494  00061A  0E00               	movlw	0
  1495  00061C  6E9B               	movwf	3995,c	;volatile
  1496  00061E  0012               	return		;funcret
  1497  000620                     __end_of_OSCILLATOR_Initialize:
  1498                           	opt stack 0
  1499                           tblptru	equ	0xFF8
  1500                           tblptrh	equ	0xFF7
  1501                           tblptrl	equ	0xFF6
  1502                           tablat	equ	0xFF5
  1503                           intcon	equ	0xFF2
  1504                           intcon2	equ	0xFF1
  1505                           postinc0	equ	0xFEE
  1506                           wreg	equ	0xFE8
  1507                           postdec1	equ	0xFE5
  1508                           fsr1l	equ	0xFE1
  1509                           
  1510 ;; *************** function _INTERRUPT_Initialize *****************
  1511 ;; Defined at:
  1512 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;		None
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;		None
  1517 ;; Return value:  Size  Location     Type
  1518 ;;		None               void
  1519 ;; Registers used:
  1520 ;;		None
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1526 ;;      Params:         0       0       0       0       0       0       0
  1527 ;;      Locals:         0       0       0       0       0       0       0
  1528 ;;      Temps:          0       0       0       0       0       0       0
  1529 ;;      Totals:         0       0       0       0       0       0       0
  1530 ;;Total ram usage:        0 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    4
  1533 ;; This function calls:
  1534 ;;		Nothing
  1535 ;; This function is called by:
  1536 ;;		_SYSTEM_Initialize
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text6
  1541  00062E                     __ptext6:
  1542                           	opt stack 0
  1543  00062E                     _INTERRUPT_Initialize:
  1544                           	opt stack 25
  1545                           
  1546                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1547                           
  1548                           ;incstack = 0
  1549  00062E  9ED0               	bcf	4048,7,c	;volatile
  1550                           
  1551                           ;interrupt_manager.c: 59: IPR3bits.RC2IP = 0;
  1552  000630  9AA5               	bcf	4005,5,c	;volatile
  1553                           
  1554                           ;interrupt_manager.c: 61: IPR3bits.TX2IP = 0;
  1555  000632  98A5               	bcf	4005,4,c	;volatile
  1556                           
  1557                           ;interrupt_manager.c: 63: IPR1bits.RC1IP = 0;
  1558  000634  9A9F               	bcf	3999,5,c	;volatile
  1559                           
  1560                           ;interrupt_manager.c: 65: IPR1bits.TX1IP = 0;
  1561  000636  989F               	bcf	3999,4,c	;volatile
  1562  000638  0012               	return		;funcret
  1563  00063A                     __end_of_INTERRUPT_Initialize:
  1564                           	opt stack 0
  1565                           tblptru	equ	0xFF8
  1566                           tblptrh	equ	0xFF7
  1567                           tblptrl	equ	0xFF6
  1568                           tablat	equ	0xFF5
  1569                           intcon	equ	0xFF2
  1570                           intcon2	equ	0xFF1
  1571                           postinc0	equ	0xFEE
  1572                           wreg	equ	0xFE8
  1573                           postdec1	equ	0xFE5
  1574                           fsr1l	equ	0xFE1
  1575                           
  1576 ;; *************** function _EUSART2_Initialize *****************
  1577 ;; Defined at:
  1578 ;;		line 76 in file "mcc_generated_files/eusart2.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;		None
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;		None
  1583 ;; Return value:  Size  Location     Type
  1584 ;;		None               void
  1585 ;; Registers used:
  1586 ;;		wreg, status,2
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1592 ;;      Params:         0       0       0       0       0       0       0
  1593 ;;      Locals:         0       0       0       0       0       0       0
  1594 ;;      Temps:          0       0       0       0       0       0       0
  1595 ;;      Totals:         0       0       0       0       0       0       0
  1596 ;;Total ram usage:        0 bytes
  1597 ;; Hardware stack levels used:    1
  1598 ;; Hardware stack levels required when called:    4
  1599 ;; This function calls:
  1600 ;;		Nothing
  1601 ;; This function is called by:
  1602 ;;		_SYSTEM_Initialize
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text7
  1607  0004B4                     __ptext7:
  1608                           	opt stack 0
  1609  0004B4                     _EUSART2_Initialize:
  1610                           	opt stack 25
  1611                           
  1612                           ;eusart2.c: 78: PIE3bits.RC2IE = 0;
  1613                           
  1614                           ;incstack = 0
  1615  0004B4  9AA3               	bcf	4003,5,c	;volatile
  1616                           
  1617                           ;eusart2.c: 79: PIE3bits.TX2IE = 0;
  1618  0004B6  98A3               	bcf	4003,4,c	;volatile
  1619                           
  1620                           ;eusart2.c: 84: BAUD2CON = 0x48;
  1621  0004B8  0E48               	movlw	72
  1622  0004BA  6E70               	movwf	3952,c	;volatile
  1623                           
  1624                           ;eusart2.c: 87: RC2STA = 0x90;
  1625  0004BC  0E90               	movlw	144
  1626  0004BE  6E71               	movwf	3953,c	;volatile
  1627                           
  1628                           ;eusart2.c: 90: TX2STA = 0x26;
  1629  0004C0  0E26               	movlw	38
  1630  0004C2  6E72               	movwf	3954,c	;volatile
  1631                           
  1632                           ;eusart2.c: 93: SPBRG2 = 0xA0;
  1633  0004C4  0EA0               	movlw	160
  1634  0004C6  6E75               	movwf	3957,c	;volatile
  1635                           
  1636                           ;eusart2.c: 96: SPBRGH2 = 0x01;
  1637  0004C8  0E01               	movlw	1
  1638  0004CA  6E76               	movwf	3958,c	;volatile
  1639                           
  1640                           ;eusart2.c: 100: eusart2TxHead = 0;
  1641  0004CC  0E00               	movlw	0
  1642  0004CE  6E26               	movwf	_eusart2TxHead,c
  1643                           
  1644                           ;eusart2.c: 101: eusart2TxTail = 0;
  1645  0004D0  0E00               	movlw	0
  1646  0004D2  6E27               	movwf	_eusart2TxTail,c
  1647                           
  1648                           ;eusart2.c: 102: eusart2TxBufferRemaining = sizeof (eusart2TxBuffer);
  1649  0004D4  0E08               	movlw	8
  1650  0004D6  6E55               	movwf	_eusart2TxBufferRemaining,c	;volatile
  1651                           
  1652                           ;eusart2.c: 104: eusart2RxHead = 0;
  1653  0004D8  0E00               	movlw	0
  1654  0004DA  6E24               	movwf	_eusart2RxHead,c
  1655                           
  1656                           ;eusart2.c: 105: eusart2RxTail = 0;
  1657  0004DC  0E00               	movlw	0
  1658  0004DE  6E25               	movwf	_eusart2RxTail,c
  1659                           
  1660                           ;eusart2.c: 106: eusart2RxCount = 0;
  1661  0004E0  0E00               	movlw	0
  1662  0004E2  6E23               	movwf	_eusart2RxCount,c	;volatile
  1663                           
  1664                           ;eusart2.c: 109: PIE3bits.RC2IE = 1;
  1665  0004E4  8AA3               	bsf	4003,5,c	;volatile
  1666  0004E6  0012               	return		;funcret
  1667  0004E8                     __end_of_EUSART2_Initialize:
  1668                           	opt stack 0
  1669                           tblptru	equ	0xFF8
  1670                           tblptrh	equ	0xFF7
  1671                           tblptrl	equ	0xFF6
  1672                           tablat	equ	0xFF5
  1673                           intcon	equ	0xFF2
  1674                           intcon2	equ	0xFF1
  1675                           postinc0	equ	0xFEE
  1676                           wreg	equ	0xFE8
  1677                           postdec1	equ	0xFE5
  1678                           fsr1l	equ	0xFE1
  1679                           
  1680 ;; *************** function _NokiaStart *****************
  1681 ;; Defined at:
  1682 ;;		line 7 in file "NokiaLCD.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;		None
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;		None
  1687 ;; Return value:  Size  Location     Type
  1688 ;;		None               void
  1689 ;; Registers used:
  1690 ;;		wreg, status,2, status,0, cstack
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1696 ;;      Params:         0       0       0       0       0       0       0
  1697 ;;      Locals:         0       0       0       0       0       0       0
  1698 ;;      Temps:          0       0       0       0       0       0       0
  1699 ;;      Totals:         0       0       0       0       0       0       0
  1700 ;;Total ram usage:        0 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; Hardware stack levels required when called:    6
  1703 ;; This function calls:
  1704 ;;		_Delay
  1705 ;;		_SPI1_Exchange8bit
  1706 ;;		_SPI1_Initialize
  1707 ;;		_blackLcd
  1708 ;;		_clearLcd
  1709 ;; This function is called by:
  1710 ;;		_main
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           	psect	text8
  1715  0002D2                     __ptext8:
  1716                           	opt stack 0
  1717  0002D2                     _NokiaStart:
  1718                           	opt stack 24
  1719                           
  1720                           ;incstack = 0
  1721                           ;NokiaLCD.c: 8: do { TRISD0 = 0; } while(0);
  1722  0002D2  9095               	bcf	3989,0,c	;volatile
  1723                           
  1724                           ;NokiaLCD.c: 9: do { TRISD3 = 0; } while(0);
  1725  0002D4  9695               	bcf	3989,3,c	;volatile
  1726                           
  1727                           ;NokiaLCD.c: 10: do { TRISD2 = 0; } while(0);
  1728  0002D6  9495               	bcf	3989,2,c	;volatile
  1729                           
  1730                           ;NokiaLCD.c: 11: SPI1_Initialize();
  1731  0002D8  EC10  F003         	call	_SPI1_Initialize	;wreg free
  1732                           
  1733                           ;NokiaLCD.c: 12: do { LATD2 = 1; } while(0);
  1734  0002DC  848C               	bsf	3980,2,c	;volatile
  1735                           
  1736                           ;NokiaLCD.c: 13: Delay(100);
  1737  0002DE  0E64               	movlw	100
  1738  0002E0  0100               	movlb	0	; () banked
  1739  0002E2  6FAC               	movwf	Delay@wait& (0+255),b
  1740  0002E4  0E00               	movlw	0
  1741  0002E6  6FAD               	movwf	(Delay@wait+1)& (0+255),b
  1742  0002E8  0E00               	movlw	0
  1743  0002EA  6FAE               	movwf	(Delay@wait+2)& (0+255),b
  1744  0002EC  0E00               	movlw	0
  1745  0002EE  6FAF               	movwf	(Delay@wait+3)& (0+255),b
  1746  0002F0  ECA1  F001         	call	_Delay	;wreg free
  1747                           
  1748                           ;NokiaLCD.c: 14: do { LATD2 = 0; } while(0);
  1749  0002F4  948C               	bcf	3980,2,c	;volatile
  1750                           
  1751                           ;NokiaLCD.c: 15: Delay(100);
  1752  0002F6  0E64               	movlw	100
  1753  0002F8  0100               	movlb	0	; () banked
  1754  0002FA  6FAC               	movwf	Delay@wait& (0+255),b
  1755  0002FC  0E00               	movlw	0
  1756  0002FE  6FAD               	movwf	(Delay@wait+1)& (0+255),b
  1757  000300  0E00               	movlw	0
  1758  000302  6FAE               	movwf	(Delay@wait+2)& (0+255),b
  1759  000304  0E00               	movlw	0
  1760  000306  6FAF               	movwf	(Delay@wait+3)& (0+255),b
  1761  000308  ECA1  F001         	call	_Delay	;wreg free
  1762                           
  1763                           ;NokiaLCD.c: 16: do { LATD2 = 1; } while(0);
  1764  00030C  848C               	bsf	3980,2,c	;volatile
  1765                           
  1766                           ;NokiaLCD.c: 17: do { LATD3 = 0; } while(0);
  1767  00030E  968C               	bcf	3980,3,c	;volatile
  1768                           
  1769                           ;NokiaLCD.c: 18: do { LATD0 = 0; } while(0);
  1770  000310  908C               	bcf	3980,0,c	;volatile
  1771                           
  1772                           ;NokiaLCD.c: 19: SPI1_Exchange8bit(0x21);
  1773  000312  0E21               	movlw	33
  1774  000314  EC00  F003         	call	_SPI1_Exchange8bit
  1775                           
  1776                           ;NokiaLCD.c: 20: SPI1_Exchange8bit(0xC8);
  1777  000318  0EC8               	movlw	200
  1778  00031A  EC00  F003         	call	_SPI1_Exchange8bit
  1779                           
  1780                           ;NokiaLCD.c: 21: SPI1_Exchange8bit(0x06);
  1781  00031E  0E06               	movlw	6
  1782  000320  EC00  F003         	call	_SPI1_Exchange8bit
  1783                           
  1784                           ;NokiaLCD.c: 22: SPI1_Exchange8bit(0x13);
  1785  000324  0E13               	movlw	19
  1786  000326  EC00  F003         	call	_SPI1_Exchange8bit
  1787                           
  1788                           ;NokiaLCD.c: 23: SPI1_Exchange8bit(0x20);
  1789  00032A  0E20               	movlw	32
  1790  00032C  EC00  F003         	call	_SPI1_Exchange8bit
  1791                           
  1792                           ;NokiaLCD.c: 24: SPI1_Exchange8bit(0x0C);
  1793  000330  0E0C               	movlw	12
  1794  000332  EC00  F003         	call	_SPI1_Exchange8bit
  1795                           
  1796                           ;NokiaLCD.c: 25: do { LATD0 = 1; } while(0);
  1797  000336  808C               	bsf	3980,0,c	;volatile
  1798                           
  1799                           ;NokiaLCD.c: 26: clearLcd();
  1800  000338  EC24  F002         	call	_clearLcd	;wreg free
  1801                           
  1802                           ;NokiaLCD.c: 27: blackLcd();
  1803  00033C  EC3F  F002         	call	_blackLcd	;wreg free
  1804  000340  0012               	return		;funcret
  1805  000342                     __end_of_NokiaStart:
  1806                           	opt stack 0
  1807                           tblptru	equ	0xFF8
  1808                           tblptrh	equ	0xFF7
  1809                           tblptrl	equ	0xFF6
  1810                           tablat	equ	0xFF5
  1811                           intcon	equ	0xFF2
  1812                           intcon2	equ	0xFF1
  1813                           postinc0	equ	0xFEE
  1814                           wreg	equ	0xFE8
  1815                           postdec1	equ	0xFE5
  1816                           fsr1l	equ	0xFE1
  1817                           
  1818 ;; *************** function _clearLcd *****************
  1819 ;; Defined at:
  1820 ;;		line 31 in file "NokiaLCD.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;		None
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;  res             2    1[BANK0 ] int 
  1825 ;; Return value:  Size  Location     Type
  1826 ;;		None               void
  1827 ;; Registers used:
  1828 ;;		wreg, status,2, status,0, cstack
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1834 ;;      Params:         0       0       0       0       0       0       0
  1835 ;;      Locals:         0       2       0       0       0       0       0
  1836 ;;      Temps:          0       0       0       0       0       0       0
  1837 ;;      Totals:         0       2       0       0       0       0       0
  1838 ;;Total ram usage:        2 bytes
  1839 ;; Hardware stack levels used:    1
  1840 ;; Hardware stack levels required when called:    5
  1841 ;; This function calls:
  1842 ;;		_SPI1_Exchange8bit
  1843 ;; This function is called by:
  1844 ;;		_NokiaStart
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text9
  1849  000448                     __ptext9:
  1850                           	opt stack 0
  1851  000448                     _clearLcd:
  1852                           	opt stack 24
  1853                           
  1854                           ;incstack = 0
  1855                           ;NokiaLCD.c: 32: int res;
  1856                           ;NokiaLCD.c: 33: do { LATD0 = 0; } while(0);
  1857  000448  908C               	bcf	3980,0,c	;volatile
  1858                           
  1859                           ;NokiaLCD.c: 34: do { LATD3 = 1; } while(0);
  1860  00044A  868C               	bsf	3980,3,c	;volatile
  1861                           
  1862                           ;NokiaLCD.c: 35: for(res=0;res<504;res++){
  1863  00044C  0E00               	movlw	0
  1864  00044E  0100               	movlb	0	; () banked
  1865  000450  6FAE               	movwf	(clearLcd@res+1)& (0+255),b
  1866  000452  0E00               	movlw	0
  1867  000454  6FAD               	movwf	clearLcd@res& (0+255),b
  1868  000456                     l2831:
  1869                           
  1870                           ; BSR set to: 0
  1871  000456  0100               	movlb	0	; () banked
  1872  000458  BFAE               	btfsc	(clearLcd@res+1)& (0+255),7,b
  1873  00045A  D008               	goto	l2835
  1874  00045C  0EF8               	movlw	248
  1875  00045E  0100               	movlb	0	; () banked
  1876  000460  5DAD               	subwf	clearLcd@res& (0+255),w,b
  1877  000462  0E01               	movlw	1
  1878  000464  0100               	movlb	0	; () banked
  1879  000466  59AE               	subwfb	(clearLcd@res+1)& (0+255),w,b
  1880  000468  B0D8               	btfsc	status,0,c
  1881  00046A  D007               	goto	l682
  1882  00046C                     l2835:
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;NokiaLCD.c: 36: SPI1_Exchange8bit(0x00);
  1886  00046C  0E00               	movlw	0
  1887  00046E  EC00  F003         	call	_SPI1_Exchange8bit
  1888  000472  0100               	movlb	0	; () banked
  1889  000474  4BAD               	infsnz	clearLcd@res& (0+255),f,b
  1890  000476  2BAE               	incf	(clearLcd@res+1)& (0+255),f,b
  1891  000478  D7EE               	goto	l2831
  1892  00047A                     l682:
  1893                           
  1894                           ; BSR set to: 0
  1895  00047A  808C               	bsf	3980,0,c	;volatile
  1896  00047C  0012               	return	
  1897  00047E                     __end_of_clearLcd:
  1898                           	opt stack 0
  1899                           tblptru	equ	0xFF8
  1900                           tblptrh	equ	0xFF7
  1901                           tblptrl	equ	0xFF6
  1902                           tablat	equ	0xFF5
  1903                           intcon	equ	0xFF2
  1904                           intcon2	equ	0xFF1
  1905                           postinc0	equ	0xFEE
  1906                           wreg	equ	0xFE8
  1907                           postdec1	equ	0xFE5
  1908                           fsr1l	equ	0xFE1
  1909                           status	equ	0xFD8
  1910                           
  1911 ;; *************** function _blackLcd *****************
  1912 ;; Defined at:
  1913 ;;		line 41 in file "NokiaLCD.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;		None
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;  res             2    1[BANK0 ] int 
  1918 ;; Return value:  Size  Location     Type
  1919 ;;		None               void
  1920 ;; Registers used:
  1921 ;;		wreg, status,2, status,0, cstack
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1927 ;;      Params:         0       0       0       0       0       0       0
  1928 ;;      Locals:         0       2       0       0       0       0       0
  1929 ;;      Temps:          0       0       0       0       0       0       0
  1930 ;;      Totals:         0       2       0       0       0       0       0
  1931 ;;Total ram usage:        2 bytes
  1932 ;; Hardware stack levels used:    1
  1933 ;; Hardware stack levels required when called:    5
  1934 ;; This function calls:
  1935 ;;		_SPI1_Exchange8bit
  1936 ;; This function is called by:
  1937 ;;		_NokiaStart
  1938 ;; This function uses a non-reentrant model
  1939 ;;
  1940                           
  1941                           	psect	text10
  1942  00047E                     __ptext10:
  1943                           	opt stack 0
  1944  00047E                     _blackLcd:
  1945                           	opt stack 24
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;incstack = 0
  1949                           ;NokiaLCD.c: 42: int res;
  1950                           ;NokiaLCD.c: 43: do { LATD0 = 0; } while(0);
  1951  00047E  908C               	bcf	3980,0,c	;volatile
  1952                           
  1953                           ;NokiaLCD.c: 44: do { LATD3 = 1; } while(0);
  1954  000480  868C               	bsf	3980,3,c	;volatile
  1955                           
  1956                           ;NokiaLCD.c: 45: for(res=0;res<504;res++){
  1957  000482  0E00               	movlw	0
  1958  000484  0100               	movlb	0	; () banked
  1959  000486  6FAE               	movwf	(blackLcd@res+1)& (0+255),b
  1960  000488  0E00               	movlw	0
  1961  00048A  6FAD               	movwf	blackLcd@res& (0+255),b
  1962  00048C                     l2843:
  1963                           
  1964                           ; BSR set to: 0
  1965  00048C  0100               	movlb	0	; () banked
  1966  00048E  BFAE               	btfsc	(blackLcd@res+1)& (0+255),7,b
  1967  000490  D008               	goto	l2847
  1968  000492  0EF8               	movlw	248
  1969  000494  0100               	movlb	0	; () banked
  1970  000496  5DAD               	subwf	blackLcd@res& (0+255),w,b
  1971  000498  0E01               	movlw	1
  1972  00049A  0100               	movlb	0	; () banked
  1973  00049C  59AE               	subwfb	(blackLcd@res+1)& (0+255),w,b
  1974  00049E  B0D8               	btfsc	status,0,c
  1975  0004A0  D007               	goto	l693
  1976  0004A2                     l2847:
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;NokiaLCD.c: 46: SPI1_Exchange8bit(0xFF);
  1980  0004A2  0EFF               	movlw	255
  1981  0004A4  EC00  F003         	call	_SPI1_Exchange8bit
  1982  0004A8  0100               	movlb	0	; () banked
  1983  0004AA  4BAD               	infsnz	blackLcd@res& (0+255),f,b
  1984  0004AC  2BAE               	incf	(blackLcd@res+1)& (0+255),f,b
  1985  0004AE  D7EE               	goto	l2843
  1986  0004B0                     l693:
  1987                           
  1988                           ; BSR set to: 0
  1989  0004B0  808C               	bsf	3980,0,c	;volatile
  1990  0004B2  0012               	return	
  1991  0004B4                     __end_of_blackLcd:
  1992                           	opt stack 0
  1993                           tblptru	equ	0xFF8
  1994                           tblptrh	equ	0xFF7
  1995                           tblptrl	equ	0xFF6
  1996                           tablat	equ	0xFF5
  1997                           intcon	equ	0xFF2
  1998                           intcon2	equ	0xFF1
  1999                           postinc0	equ	0xFEE
  2000                           wreg	equ	0xFE8
  2001                           postdec1	equ	0xFE5
  2002                           fsr1l	equ	0xFE1
  2003                           status	equ	0xFD8
  2004                           
  2005 ;; *************** function _SPI1_Exchange8bit *****************
  2006 ;; Defined at:
  2007 ;;		line 78 in file "mcc_generated_files/spi1.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;  data            1    wreg     unsigned char 
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;  data            1    0[BANK0 ] unsigned char 
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      unsigned char 
  2014 ;; Registers used:
  2015 ;;		wreg, status,2
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2021 ;;      Params:         0       0       0       0       0       0       0
  2022 ;;      Locals:         0       1       0       0       0       0       0
  2023 ;;      Temps:          0       0       0       0       0       0       0
  2024 ;;      Totals:         0       1       0       0       0       0       0
  2025 ;;Total ram usage:        1 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; Hardware stack levels required when called:    4
  2028 ;; This function calls:
  2029 ;;		Nothing
  2030 ;; This function is called by:
  2031 ;;		_NokiaStart
  2032 ;;		_clearLcd
  2033 ;;		_blackLcd
  2034 ;;		_gotoXy
  2035 ;;		_NokiaStr
  2036 ;;		_SPI1_Exchange8bitBuffer
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text11
  2041  000600                     __ptext11:
  2042                           	opt stack 0
  2043  000600                     _SPI1_Exchange8bit:
  2044                           	opt stack 24
  2045                           
  2046                           ; BSR set to: 0
  2047                           ;incstack = 0
  2048                           ;SPI1_Exchange8bit@data stored from wreg
  2049  000600  0100               	movlb	0	; () banked
  2050  000602  6FAC               	movwf	SPI1_Exchange8bit@data& (0+255),b
  2051                           
  2052                           ;spi1.c: 81: SSP1CON1bits.WCOL = 0;
  2053  000604  9EC6               	bcf	4038,7,c	;volatile
  2054                           
  2055                           ;spi1.c: 83: SSP1BUF = data;
  2056  000606  C0AC  FFC9         	movff	SPI1_Exchange8bit@data,4041	;volatile
  2057  00060A                     l735:
  2058  00060A  A0C7               	btfss	4039,0,c	;volatile
  2059  00060C  D7FE               	goto	l735
  2060                           
  2061                           ;spi1.c: 87: }
  2062                           ;spi1.c: 89: return (SSP1BUF);
  2063  00060E  50C9               	movf	4041,w,c	;volatile
  2064  000610  0012               	return		;funcret
  2065  000612                     __end_of_SPI1_Exchange8bit:
  2066                           	opt stack 0
  2067                           tblptru	equ	0xFF8
  2068                           tblptrh	equ	0xFF7
  2069                           tblptrl	equ	0xFF6
  2070                           tablat	equ	0xFF5
  2071                           intcon	equ	0xFF2
  2072                           intcon2	equ	0xFF1
  2073                           postinc0	equ	0xFEE
  2074                           wreg	equ	0xFE8
  2075                           postdec1	equ	0xFE5
  2076                           fsr1l	equ	0xFE1
  2077                           status	equ	0xFD8
  2078                           
  2079 ;; *************** function _SPI1_Initialize *****************
  2080 ;; Defined at:
  2081 ;;		line 64 in file "mcc_generated_files/spi1.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;		None
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;		None
  2086 ;; Return value:  Size  Location     Type
  2087 ;;		None               void
  2088 ;; Registers used:
  2089 ;;		wreg, status,2
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2095 ;;      Params:         0       0       0       0       0       0       0
  2096 ;;      Locals:         0       0       0       0       0       0       0
  2097 ;;      Temps:          0       0       0       0       0       0       0
  2098 ;;      Totals:         0       0       0       0       0       0       0
  2099 ;;Total ram usage:        0 bytes
  2100 ;; Hardware stack levels used:    1
  2101 ;; Hardware stack levels required when called:    4
  2102 ;; This function calls:
  2103 ;;		Nothing
  2104 ;; This function is called by:
  2105 ;;		_NokiaStart
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           	psect	text12
  2110  000620                     __ptext12:
  2111                           	opt stack 0
  2112  000620                     _SPI1_Initialize:
  2113                           	opt stack 25
  2114                           
  2115                           ;spi1.c: 69: SSP1STAT = 0x00;
  2116                           
  2117                           ;incstack = 0
  2118  000620  0E00               	movlw	0
  2119  000622  6EC7               	movwf	4039,c	;volatile
  2120                           
  2121                           ;spi1.c: 72: SSP1CON1 = 0x32;
  2122  000624  0E32               	movlw	50
  2123  000626  6EC6               	movwf	4038,c	;volatile
  2124                           
  2125                           ;spi1.c: 75: SSP1ADD = 0x00;
  2126  000628  0E00               	movlw	0
  2127  00062A  6EC8               	movwf	4040,c	;volatile
  2128  00062C  0012               	return		;funcret
  2129  00062E                     __end_of_SPI1_Initialize:
  2130                           	opt stack 0
  2131                           tblptru	equ	0xFF8
  2132                           tblptrh	equ	0xFF7
  2133                           tblptrl	equ	0xFF6
  2134                           tablat	equ	0xFF5
  2135                           intcon	equ	0xFF2
  2136                           intcon2	equ	0xFF1
  2137                           postinc0	equ	0xFEE
  2138                           wreg	equ	0xFE8
  2139                           postdec1	equ	0xFE5
  2140                           fsr1l	equ	0xFE1
  2141                           status	equ	0xFD8
  2142                           
  2143 ;; *************** function _Delay *****************
  2144 ;; Defined at:
  2145 ;;		line 11 in file "Functions.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;  wait            4    0[BANK0 ] long 
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;  i               4    5[BANK0 ] long 
  2150 ;; Return value:  Size  Location     Type
  2151 ;;		None               void
  2152 ;; Registers used:
  2153 ;;		wreg, status,2, status,0
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2159 ;;      Params:         0       4       0       0       0       0       0
  2160 ;;      Locals:         0       4       0       0       0       0       0
  2161 ;;      Temps:          0       1       0       0       0       0       0
  2162 ;;      Totals:         0       9       0       0       0       0       0
  2163 ;;Total ram usage:        9 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; Hardware stack levels required when called:    4
  2166 ;; This function calls:
  2167 ;;		Nothing
  2168 ;; This function is called by:
  2169 ;;		_main
  2170 ;;		_NokiaStart
  2171 ;;		_respondECU
  2172 ;;		_Precharge
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           	psect	text13
  2177  000342                     __ptext13:
  2178                           	opt stack 0
  2179  000342                     _Delay:
  2180                           	opt stack 25
  2181                           
  2182                           ;Functions.c: 12: long int i = 0;
  2183                           
  2184                           ;incstack = 0
  2185  000342  0E00               	movlw	0
  2186  000344  0100               	movlb	0	; () banked
  2187  000346  6FB1               	movwf	Delay@i& (0+255),b
  2188  000348  0E00               	movlw	0
  2189  00034A  6FB2               	movwf	(Delay@i+1)& (0+255),b
  2190  00034C  0E00               	movlw	0
  2191  00034E  6FB3               	movwf	(Delay@i+2)& (0+255),b
  2192  000350  0E00               	movlw	0
  2193  000352  6FB4               	movwf	(Delay@i+3)& (0+255),b
  2194                           
  2195                           ;Functions.c: 13: for (; wait > i; i++) {
  2196  000354  D010               	goto	l2825
  2197  000356                     l2821:
  2198                           
  2199                           ; BSR set to: 0
  2200                           ;Functions.c: 14: _delay((unsigned long)((1)*(16000000/4000.0)));
  2201  000356  0E06               	movlw	6
  2202  000358  0100               	movlb	0	; () banked
  2203  00035A  6FB0               	movwf	??_Delay& (0+255),b
  2204  00035C  0E30               	movlw	48
  2205  00035E                     u2037:
  2206  00035E  2EE8               	decfsz	wreg,f,c
  2207  000360  D7FE               	goto	u2037
  2208  000362  2FB0               	decfsz	??_Delay& (0+255),f,b
  2209  000364  D7FC               	goto	u2037
  2210  000366  D000               	nop2	
  2211  000368  0E01               	movlw	1
  2212  00036A  0100               	movlb	0	; () banked
  2213  00036C  27B1               	addwf	Delay@i& (0+255),f,b
  2214  00036E  0E00               	movlw	0
  2215  000370  23B2               	addwfc	(Delay@i+1)& (0+255),f,b
  2216  000372  23B3               	addwfc	(Delay@i+2)& (0+255),f,b
  2217  000374  23B4               	addwfc	(Delay@i+3)& (0+255),f,b
  2218  000376                     l2825:
  2219                           
  2220                           ; BSR set to: 0
  2221  000376  0100               	movlb	0	; () banked
  2222  000378  51AC               	movf	Delay@wait& (0+255),w,b
  2223  00037A  0100               	movlb	0	; () banked
  2224  00037C  5DB1               	subwf	Delay@i& (0+255),w,b
  2225  00037E  0100               	movlb	0	; () banked
  2226  000380  51AD               	movf	(Delay@wait+1)& (0+255),w,b
  2227  000382  0100               	movlb	0	; () banked
  2228  000384  59B2               	subwfb	(Delay@i+1)& (0+255),w,b
  2229  000386  0100               	movlb	0	; () banked
  2230  000388  51AE               	movf	(Delay@wait+2)& (0+255),w,b
  2231  00038A  0100               	movlb	0	; () banked
  2232  00038C  59B3               	subwfb	(Delay@i+2)& (0+255),w,b
  2233  00038E  0100               	movlb	0	; () banked
  2234  000390  51B4               	movf	(Delay@i+3)& (0+255),w,b
  2235  000392  0A80               	xorlw	128
  2236  000394  0100               	movlb	0	; () banked
  2237  000396  6FB0               	movwf	??_Delay& (0+255),b
  2238  000398  0100               	movlb	0	; () banked
  2239  00039A  51AF               	movf	(Delay@wait+3)& (0+255),w,b
  2240  00039C  0A80               	xorlw	128
  2241  00039E  0100               	movlb	0	; () banked
  2242  0003A0  59B0               	subwfb	??_Delay& (0+255),w,b
  2243  0003A2  B0D8               	btfsc	status,0,c
  2244  0003A4  0012               	return	
  2245  0003A6  D7D7               	goto	l2821
  2246  0003A8                     __end_of_Delay:
  2247                           	opt stack 0
  2248                           tblptru	equ	0xFF8
  2249                           tblptrh	equ	0xFF7
  2250                           tblptrl	equ	0xFF6
  2251                           tablat	equ	0xFF5
  2252                           intcon	equ	0xFF2
  2253                           intcon2	equ	0xFF1
  2254                           postinc0	equ	0xFEE
  2255                           wreg	equ	0xFE8
  2256                           postdec1	equ	0xFE5
  2257                           fsr1l	equ	0xFE1
  2258                           status	equ	0xFD8
  2259                           
  2260 ;; *************** function _INTERRUPT_InterruptManager *****************
  2261 ;; Defined at:
  2262 ;;		line 68 in file "mcc_generated_files/interrupt_manager.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;		None
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;		None
  2267 ;; Return value:  Size  Location     Type
  2268 ;;		None               void
  2269 ;; Registers used:
  2270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2276 ;;      Params:         0       0       0       0       0       0       0
  2277 ;;      Locals:         0       0       0       0       0       0       0
  2278 ;;      Temps:         14       0       0       0       0       0       0
  2279 ;;      Totals:        14       0       0       0       0       0       0
  2280 ;;Total ram usage:       14 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; Hardware stack levels required when called:    3
  2283 ;; This function calls:
  2284 ;;		_EUSART1_Receive_ISR
  2285 ;;		_EUSART1_Transmit_ISR
  2286 ;;		_EUSART2_Receive_ISR
  2287 ;;		_EUSART2_Transmit_ISR
  2288 ;; This function is called by:
  2289 ;;		Interrupt level 2
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293                           	psect	intcode
  2294  000008                     __pintcode:
  2295                           	opt stack 0
  2296  000008                     _INTERRUPT_InterruptManager:
  2297                           	opt stack 24
  2298                           
  2299                           ; BSR set to: 0
  2300                           ;incstack = 0
  2301  000008  8256               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2302  00000A  CFFA F03B          	movff	pclath,??_INTERRUPT_InterruptManager
  2303  00000E  CFFB F03C          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2304  000012  CFE9 F03D          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  2305  000016  CFEA F03E          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  2306  00001A  CFE1 F03F          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  2307  00001E  CFE2 F040          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  2308  000022  CFD9 F041          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  2309  000026  CFDA F042          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  2310  00002A  CFF3 F043          	movff	prodl,??_INTERRUPT_InterruptManager+8
  2311  00002E  CFF4 F044          	movff	prodh,??_INTERRUPT_InterruptManager+9
  2312  000032  CFF6 F045          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  2313  000036  CFF7 F046          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  2314  00003A  CFF8 F047          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  2315  00003E  CFF5 F048          	movff	tablat,??_INTERRUPT_InterruptManager+13
  2316                           
  2317                           ;interrupt_manager.c: 70: if (PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1) {
  2318  000042  BAA3               	btfsc	4003,5,c	;volatile
  2319  000044  AAA4               	btfss	4004,5,c	;volatile
  2320  000046  D003               	goto	i2l175
  2321                           
  2322                           ;interrupt_manager.c: 71: EUSART2_Receive_ISR();
  2323  000048  ECA4  F002         	call	_EUSART2_Receive_ISR	;wreg free
  2324                           
  2325                           ;interrupt_manager.c: 72: } else if (PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1) {
  2326  00004C  D011               	goto	i2l183
  2327  00004E                     i2l175:
  2328  00004E  B8A3               	btfsc	4003,4,c	;volatile
  2329  000050  A8A4               	btfss	4004,4,c	;volatile
  2330  000052  D003               	goto	i2l177
  2331                           
  2332                           ;interrupt_manager.c: 73: EUSART2_Transmit_ISR();
  2333  000054  EC8D  F002         	call	_EUSART2_Transmit_ISR	;wreg free
  2334                           
  2335                           ;interrupt_manager.c: 74: } else if (PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1) {
  2336  000058  D00B               	goto	i2l183
  2337  00005A                     i2l177:
  2338  00005A  BA9D               	btfsc	3997,5,c	;volatile
  2339  00005C  AA9E               	btfss	3998,5,c	;volatile
  2340  00005E  D003               	goto	i2l179
  2341                           
  2342                           ;interrupt_manager.c: 75: EUSART1_Receive_ISR();
  2343  000060  ECCF  F002         	call	_EUSART1_Receive_ISR	;wreg free
  2344                           
  2345                           ;interrupt_manager.c: 76: } else if (PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1) {
  2346  000064  D005               	goto	i2l183
  2347  000066                     i2l179:
  2348  000066  B89D               	btfsc	3997,4,c	;volatile
  2349  000068  A89E               	btfss	3998,4,c	;volatile
  2350  00006A  D002               	goto	i2l183
  2351                           
  2352                           ;interrupt_manager.c: 77: EUSART1_Transmit_ISR();
  2353  00006C  EC74  F002         	call	_EUSART1_Transmit_ISR	;wreg free
  2354  000070                     i2l183:
  2355  000070  C048  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  2356  000074  C047  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  2357  000078  C046  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  2358  00007C  C045  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  2359  000080  C044  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  2360  000084  C043  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  2361  000088  C042  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  2362  00008C  C041  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  2363  000090  C040  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  2364  000094  C03F  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  2365  000098  C03E  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  2366  00009C  C03D  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  2367  0000A0  C03C  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2368  0000A4  C03B  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2369  0000A8  9256               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2370  0000AA  0011               	retfie		f
  2371  0000AC                     __end_of_INTERRUPT_InterruptManager:
  2372                           	opt stack 0
  2373                           pclatu	equ	0xFFB
  2374                           pclath	equ	0xFFA
  2375                           tblptru	equ	0xFF8
  2376                           tblptrh	equ	0xFF7
  2377                           tblptrl	equ	0xFF6
  2378                           tablat	equ	0xFF5
  2379                           prodh	equ	0xFF4
  2380                           prodl	equ	0xFF3
  2381                           intcon	equ	0xFF2
  2382                           intcon2	equ	0xFF1
  2383                           postinc0	equ	0xFEE
  2384                           fsr0h	equ	0xFEA
  2385                           fsr0l	equ	0xFE9
  2386                           wreg	equ	0xFE8
  2387                           postdec1	equ	0xFE5
  2388                           fsr1h	equ	0xFE2
  2389                           fsr1l	equ	0xFE1
  2390                           fsr2h	equ	0xFDA
  2391                           fsr2l	equ	0xFD9
  2392                           status	equ	0xFD8
  2393                           
  2394 ;; *************** function _EUSART2_Transmit_ISR *****************
  2395 ;; Defined at:
  2396 ;;		line 155 in file "mcc_generated_files/eusart2.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;		None
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;		None
  2401 ;; Return value:  Size  Location     Type
  2402 ;;		None               void
  2403 ;; Registers used:
  2404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2410 ;;      Params:         0       0       0       0       0       0       0
  2411 ;;      Locals:         0       0       0       0       0       0       0
  2412 ;;      Temps:          0       0       0       0       0       0       0
  2413 ;;      Totals:         0       0       0       0       0       0       0
  2414 ;;Total ram usage:        0 bytes
  2415 ;; Hardware stack levels used:    1
  2416 ;; This function calls:
  2417 ;;		Nothing
  2418 ;; This function is called by:
  2419 ;;		_INTERRUPT_InterruptManager
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text15
  2424  00051A                     __ptext15:
  2425                           	opt stack 0
  2426  00051A                     _EUSART2_Transmit_ISR:
  2427                           	opt stack 26
  2428                           
  2429                           ;eusart2.c: 158: if (sizeof (eusart2TxBuffer) > eusart2TxBufferRemaining) {
  2430                           
  2431                           ;incstack = 0
  2432  00051A  0E08               	movlw	8
  2433  00051C  6055               	cpfslt	_eusart2TxBufferRemaining,c	;volatile
  2434  00051E  D012               	goto	i2l97
  2435                           
  2436                           ;eusart2.c: 159: TXREG2 = eusart2TxBuffer[eusart2TxTail++];
  2437  000520  5027               	movf	_eusart2TxTail,w,c
  2438  000522  0D01               	mullw	1
  2439  000524  0E01               	movlw	low _eusart2TxBuffer
  2440  000526  24F3               	addwf	prodl,w,c
  2441  000528  6ED9               	movwf	fsr2l,c
  2442  00052A  0E00               	movlw	high _eusart2TxBuffer
  2443  00052C  20F4               	addwfc	prodh,w,c
  2444  00052E  6EDA               	movwf	fsr2h,c
  2445  000530  50DF               	movf	indf2,w,c
  2446  000532  6E73               	movwf	3955,c	;volatile
  2447  000534  2A27               	incf	_eusart2TxTail,f,c
  2448                           
  2449                           ;eusart2.c: 160: if (sizeof (eusart2TxBuffer) <= eusart2TxTail) {
  2450  000536  0E07               	movlw	7
  2451  000538  6427               	cpfsgt	_eusart2TxTail,c
  2452  00053A  D002               	goto	i2l1557
  2453                           
  2454                           ;eusart2.c: 161: eusart2TxTail = 0;
  2455  00053C  0E00               	movlw	0
  2456  00053E  6E27               	movwf	_eusart2TxTail,c
  2457  000540                     i2l1557:
  2458                           
  2459                           ;eusart2.c: 162: }
  2460                           ;eusart2.c: 163: eusart2TxBufferRemaining++;
  2461  000540  2A55               	incf	_eusart2TxBufferRemaining,f,c	;volatile
  2462                           
  2463                           ;eusart2.c: 164: } else {
  2464  000542  0012               	return	
  2465  000544                     i2l97:
  2466                           
  2467                           ;eusart2.c: 165: PIE3bits.TX2IE = 0;
  2468  000544  98A3               	bcf	4003,4,c	;volatile
  2469  000546  0012               	return	
  2470  000548                     __end_of_EUSART2_Transmit_ISR:
  2471                           	opt stack 0
  2472                           pclatu	equ	0xFFB
  2473                           pclath	equ	0xFFA
  2474                           tblptru	equ	0xFF8
  2475                           tblptrh	equ	0xFF7
  2476                           tblptrl	equ	0xFF6
  2477                           tablat	equ	0xFF5
  2478                           prodh	equ	0xFF4
  2479                           prodl	equ	0xFF3
  2480                           intcon	equ	0xFF2
  2481                           intcon2	equ	0xFF1
  2482                           postinc0	equ	0xFEE
  2483                           fsr0h	equ	0xFEA
  2484                           fsr0l	equ	0xFE9
  2485                           wreg	equ	0xFE8
  2486                           postdec1	equ	0xFE5
  2487                           fsr1h	equ	0xFE2
  2488                           fsr1l	equ	0xFE1
  2489                           indf2	equ	0xFDF
  2490                           fsr2h	equ	0xFDA
  2491                           fsr2l	equ	0xFD9
  2492                           status	equ	0xFD8
  2493                           
  2494 ;; *************** function _EUSART2_Receive_ISR *****************
  2495 ;; Defined at:
  2496 ;;		line 169 in file "mcc_generated_files/eusart2.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;		None
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;		None
  2501 ;; Return value:  Size  Location     Type
  2502 ;;		None               void
  2503 ;; Registers used:
  2504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2510 ;;      Params:         0       0       0       0       0       0       0
  2511 ;;      Locals:         0       0       0       0       0       0       0
  2512 ;;      Temps:          0       0       0       0       0       0       0
  2513 ;;      Totals:         0       0       0       0       0       0       0
  2514 ;;Total ram usage:        0 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; This function calls:
  2517 ;;		Nothing
  2518 ;; This function is called by:
  2519 ;;		_INTERRUPT_InterruptManager
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text16
  2524  000548                     __ptext16:
  2525                           	opt stack 0
  2526  000548                     _EUSART2_Receive_ISR:
  2527                           	opt stack 26
  2528                           
  2529                           ;eusart2.c: 170: if (1 == RC2STAbits.OERR) {
  2530                           
  2531                           ;incstack = 0
  2532  000548  A271               	btfss	3953,1,c	;volatile
  2533  00054A  D002               	goto	i2l2259
  2534                           
  2535                           ;eusart2.c: 173: RC2STAbits.CREN = 0;
  2536  00054C  9871               	bcf	3953,4,c	;volatile
  2537                           
  2538                           ;eusart2.c: 174: RC2STAbits.CREN = 1;
  2539  00054E  8871               	bsf	3953,4,c	;volatile
  2540  000550                     i2l2259:
  2541                           
  2542                           ;eusart2.c: 175: }
  2543                           ;eusart2.c: 178: eusart2RxBuffer[eusart2RxHead++] = RCREG2;
  2544  000550  5024               	movf	_eusart2RxHead,w,c
  2545  000552  0D01               	mullw	1
  2546  000554  0E93               	movlw	low _eusart2RxBuffer
  2547  000556  24F3               	addwf	prodl,w,c
  2548  000558  6ED9               	movwf	fsr2l,c
  2549  00055A  0E00               	movlw	high _eusart2RxBuffer
  2550  00055C  20F4               	addwfc	prodh,w,c
  2551  00055E  6EDA               	movwf	fsr2h,c
  2552  000560  CF74 FFDF          	movff	3956,indf2	;volatile
  2553  000564  2A24               	incf	_eusart2RxHead,f,c
  2554                           
  2555                           ;eusart2.c: 179: if (sizeof (eusart2RxBuffer) <= eusart2RxHead) {
  2556  000566  0E07               	movlw	7
  2557  000568  6424               	cpfsgt	_eusart2RxHead,c
  2558  00056A  D002               	goto	i2l2267
  2559                           
  2560                           ;eusart2.c: 180: eusart2RxHead = 0;
  2561  00056C  0E00               	movlw	0
  2562  00056E  6E24               	movwf	_eusart2RxHead,c
  2563  000570                     i2l2267:
  2564                           
  2565                           ;eusart2.c: 181: }
  2566                           ;eusart2.c: 182: eusart2RxCount++;
  2567  000570  2A23               	incf	_eusart2RxCount,f,c	;volatile
  2568  000572  0012               	return		;funcret
  2569  000574                     __end_of_EUSART2_Receive_ISR:
  2570                           	opt stack 0
  2571                           pclatu	equ	0xFFB
  2572                           pclath	equ	0xFFA
  2573                           tblptru	equ	0xFF8
  2574                           tblptrh	equ	0xFF7
  2575                           tblptrl	equ	0xFF6
  2576                           tablat	equ	0xFF5
  2577                           prodh	equ	0xFF4
  2578                           prodl	equ	0xFF3
  2579                           intcon	equ	0xFF2
  2580                           intcon2	equ	0xFF1
  2581                           postinc0	equ	0xFEE
  2582                           fsr0h	equ	0xFEA
  2583                           fsr0l	equ	0xFE9
  2584                           wreg	equ	0xFE8
  2585                           postdec1	equ	0xFE5
  2586                           fsr1h	equ	0xFE2
  2587                           fsr1l	equ	0xFE1
  2588                           indf2	equ	0xFDF
  2589                           fsr2h	equ	0xFDA
  2590                           fsr2l	equ	0xFD9
  2591                           status	equ	0xFD8
  2592                           
  2593 ;; *************** function _EUSART1_Transmit_ISR *****************
  2594 ;; Defined at:
  2595 ;;		line 150 in file "UART.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;		None
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;		None
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  2  169[None  ] int 
  2602 ;; Registers used:
  2603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2609 ;;      Params:         0       0       0       0       0       0       0
  2610 ;;      Locals:         0       0       0       0       0       0       0
  2611 ;;      Temps:          0       0       0       0       0       0       0
  2612 ;;      Totals:         0       0       0       0       0       0       0
  2613 ;;Total ram usage:        0 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; Hardware stack levels required when called:    2
  2616 ;; This function calls:
  2617 ;;		_UART_buff_get
  2618 ;;		_UART_buff_size
  2619 ;; This function is called by:
  2620 ;;		_INTERRUPT_InterruptManager
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           	psect	text17
  2625  0004E8                     __ptext17:
  2626                           	opt stack 0
  2627  0004E8                     _EUSART1_Transmit_ISR:
  2628                           	opt stack 24
  2629                           
  2630                           ;UART.c: 152: if (UART_buff_size(&output_buffer) > 0) {
  2631                           
  2632                           ;incstack = 0
  2633  0004E8  0E00               	movlw	low _output_buffer
  2634  0004EA  6E2F               	movwf	UART_buff_size@_this,c
  2635  0004EC  0E03               	movlw	high _output_buffer
  2636  0004EE  6E30               	movwf	UART_buff_size@_this+1,c
  2637  0004F0  ECF5  F002         	call	_UART_buff_size	;wreg free
  2638  0004F4  BE30               	btfsc	?_UART_buff_size+1,7,c
  2639  0004F6  D00D               	goto	i2l2279
  2640  0004F8  5030               	movf	?_UART_buff_size+1,w,c
  2641  0004FA  E103               	bnz	i2u104_40
  2642  0004FC  042F               	decf	?_UART_buff_size,w,c
  2643  0004FE  A0D8               	btfss	status,0,c
  2644  000500  D008               	goto	i2l2279
  2645  000502                     i2u104_40:
  2646                           
  2647                           ;UART.c: 153: TXREG1 = UART_buff_get(&output_buffer);
  2648  000502  0E00               	movlw	low _output_buffer
  2649  000504  6E35               	movwf	UART_buff_get@_this,c
  2650  000506  0E03               	movlw	high _output_buffer
  2651  000508  6E36               	movwf	UART_buff_get@_this+1,c
  2652  00050A  ECE5  F000         	call	_UART_buff_get	;wreg free
  2653  00050E  6EAD               	movwf	4013,c	;volatile
  2654                           
  2655                           ;UART.c: 154: } else {
  2656  000510  0012               	return	
  2657  000512                     i2l2279:
  2658                           
  2659                           ;UART.c: 155: Transmit_stall = 1;
  2660  000512  0E01               	movlw	1
  2661  000514  6E49               	movwf	_Transmit_stall,c
  2662                           
  2663                           ;UART.c: 156: PIE1bits.TX1IE = 0;
  2664  000516  989D               	bcf	3997,4,c	;volatile
  2665  000518  0012               	return	
  2666  00051A                     __end_of_EUSART1_Transmit_ISR:
  2667                           	opt stack 0
  2668                           pclatu	equ	0xFFB
  2669                           pclath	equ	0xFFA
  2670                           tblptru	equ	0xFF8
  2671                           tblptrh	equ	0xFF7
  2672                           tblptrl	equ	0xFF6
  2673                           tablat	equ	0xFF5
  2674                           prodh	equ	0xFF4
  2675                           prodl	equ	0xFF3
  2676                           intcon	equ	0xFF2
  2677                           intcon2	equ	0xFF1
  2678                           postinc0	equ	0xFEE
  2679                           fsr0h	equ	0xFEA
  2680                           fsr0l	equ	0xFE9
  2681                           wreg	equ	0xFE8
  2682                           postdec1	equ	0xFE5
  2683                           fsr1h	equ	0xFE2
  2684                           fsr1l	equ	0xFE1
  2685                           indf2	equ	0xFDF
  2686                           fsr2h	equ	0xFDA
  2687                           fsr2l	equ	0xFD9
  2688                           status	equ	0xFD8
  2689                           
  2690 ;; *************** function _UART_buff_size *****************
  2691 ;; Defined at:
  2692 ;;		line 102 in file "UART.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  _this           2    0[COMRAM] PTR struct UART_ring_buf
  2695 ;;		 -> output_buffer(206), input_buffer(206), 
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;		None
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  2    0[COMRAM] int 
  2700 ;; Registers used:
  2701 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2707 ;;      Params:         2       0       0       0       0       0       0
  2708 ;;      Locals:         0       0       0       0       0       0       0
  2709 ;;      Temps:          0       0       0       0       0       0       0
  2710 ;;      Totals:         2       0       0       0       0       0       0
  2711 ;;Total ram usage:        2 bytes
  2712 ;; Hardware stack levels used:    1
  2713 ;; This function calls:
  2714 ;;		Nothing
  2715 ;; This function is called by:
  2716 ;;		_EUSART1_Transmit_ISR
  2717 ;;		_Receive_available
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721                           	psect	text18
  2722  0005EA                     __ptext18:
  2723                           	opt stack 0
  2724  0005EA                     _UART_buff_size:
  2725                           	opt stack 25
  2726                           
  2727                           ;UART.c: 103: return (_this->count);
  2728                           
  2729                           ;incstack = 0
  2730  0005EA  EE20 F0CC          	lfsr	2,204
  2731  0005EE  502F               	movf	UART_buff_size@_this,w,c
  2732  0005F0  26D9               	addwf	fsr2l,f,c
  2733  0005F2  5030               	movf	UART_buff_size@_this+1,w,c
  2734  0005F4  22DA               	addwfc	fsr2h,f,c
  2735  0005F6  CFDE F02F          	movff	postinc2,?_UART_buff_size
  2736  0005FA  CFDD F030          	movff	postdec2,?_UART_buff_size+1
  2737  0005FE  0012               	return	
  2738  000600                     __end_of_UART_buff_size:
  2739                           	opt stack 0
  2740                           pclatu	equ	0xFFB
  2741                           pclath	equ	0xFFA
  2742                           tblptru	equ	0xFF8
  2743                           tblptrh	equ	0xFF7
  2744                           tblptrl	equ	0xFF6
  2745                           tablat	equ	0xFF5
  2746                           prodh	equ	0xFF4
  2747                           prodl	equ	0xFF3
  2748                           intcon	equ	0xFF2
  2749                           intcon2	equ	0xFF1
  2750                           postinc0	equ	0xFEE
  2751                           fsr0h	equ	0xFEA
  2752                           fsr0l	equ	0xFE9
  2753                           wreg	equ	0xFE8
  2754                           postdec1	equ	0xFE5
  2755                           fsr1h	equ	0xFE2
  2756                           fsr1l	equ	0xFE1
  2757                           indf2	equ	0xFDF
  2758                           postinc2	equ	0xFDE
  2759                           postdec2	equ	0xFDD
  2760                           fsr2h	equ	0xFDA
  2761                           fsr2l	equ	0xFD9
  2762                           status	equ	0xFD8
  2763                           
  2764 ;; *************** function _UART_buff_get *****************
  2765 ;; Defined at:
  2766 ;;		line 81 in file "UART.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
  2769 ;;		 -> output_buffer(206), input_buffer(206), 
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;  c               1   10[COMRAM] unsigned char 
  2772 ;; Return value:  Size  Location     Type
  2773 ;;                  1    wreg      unsigned char 
  2774 ;; Registers used:
  2775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2776 ;; Tracked objects:
  2777 ;;		On entry : 0/0
  2778 ;;		On exit  : 0/0
  2779 ;;		Unchanged: 0/0
  2780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2781 ;;      Params:         2       0       0       0       0       0       0
  2782 ;;      Locals:         1       0       0       0       0       0       0
  2783 ;;      Temps:          2       0       0       0       0       0       0
  2784 ;;      Totals:         5       0       0       0       0       0       0
  2785 ;;Total ram usage:        5 bytes
  2786 ;; Hardware stack levels used:    1
  2787 ;; Hardware stack levels required when called:    1
  2788 ;; This function calls:
  2789 ;;		_UART_buff_modulo_inc
  2790 ;; This function is called by:
  2791 ;;		_EUSART1_Transmit_ISR
  2792 ;;		_Receive_get
  2793 ;;		_Send_put
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           	psect	text19
  2798  0001CA                     __ptext19:
  2799                           	opt stack 0
  2800  0001CA                     _UART_buff_get:
  2801                           	opt stack 24
  2802                           
  2803                           ;UART.c: 82: unsigned char c;
  2804                           ;UART.c: 83: if (_this->count > 0) {
  2805                           
  2806                           ;incstack = 0
  2807  0001CA  EE20 F0CC          	lfsr	2,204
  2808  0001CE  5035               	movf	UART_buff_get@_this,w,c
  2809  0001D0  26D9               	addwf	fsr2l,f,c
  2810  0001D2  5036               	movf	UART_buff_get@_this+1,w,c
  2811  0001D4  22DA               	addwfc	fsr2h,f,c
  2812  0001D6  0E01               	movlw	1
  2813  0001D8  BEDB               	btfsc	plusw2,7,c
  2814  0001DA  D03C               	goto	i2l2225
  2815  0001DC  0E01               	movlw	1
  2816  0001DE  50DB               	movf	plusw2,w,c
  2817  0001E0  E103               	bnz	i2u98_40
  2818  0001E2  04DE               	decf	postinc2,w,c
  2819  0001E4  A0D8               	btfss	status,0,c
  2820  0001E6  D036               	goto	i2l2225
  2821  0001E8                     i2u98_40:
  2822                           
  2823                           ;UART.c: 84: c = _this->buf[_this->tail];
  2824  0001E8  EE20 F0CA          	lfsr	2,202
  2825  0001EC  5035               	movf	UART_buff_get@_this,w,c
  2826  0001EE  26D9               	addwf	fsr2l,f,c
  2827  0001F0  5036               	movf	UART_buff_get@_this+1,w,c
  2828  0001F2  22DA               	addwfc	fsr2h,f,c
  2829  0001F4  CFDE F037          	movff	postinc2,??_UART_buff_get
  2830  0001F8  CFDD F038          	movff	postdec2,??_UART_buff_get+1
  2831  0001FC  5037               	movf	??_UART_buff_get,w,c
  2832  0001FE  2435               	addwf	UART_buff_get@_this,w,c
  2833  000200  6ED9               	movwf	fsr2l,c
  2834  000202  5038               	movf	??_UART_buff_get+1,w,c
  2835  000204  2036               	addwfc	UART_buff_get@_this+1,w,c
  2836  000206  6EDA               	movwf	fsr2h,c
  2837  000208  50DF               	movf	indf2,w,c
  2838  00020A  6E39               	movwf	UART_buff_get@c,c
  2839                           
  2840                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  2841  00020C  EE20 F0CA          	lfsr	2,202
  2842  000210  5035               	movf	UART_buff_get@_this,w,c
  2843  000212  26D9               	addwf	fsr2l,f,c
  2844  000214  5036               	movf	UART_buff_get@_this+1,w,c
  2845  000216  22DA               	addwfc	fsr2h,f,c
  2846  000218  CFDE F02F          	movff	postinc2,UART_buff_modulo_inc@value
  2847  00021C  CFDD F030          	movff	postdec2,UART_buff_modulo_inc@value+1
  2848  000220  0E00               	movlw	0
  2849  000222  6E32               	movwf	UART_buff_modulo_inc@modulus+1,c
  2850  000224  0EC8               	movlw	200
  2851  000226  6E31               	movwf	UART_buff_modulo_inc@modulus,c
  2852  000228  ECBA  F002         	call	_UART_buff_modulo_inc	;wreg free
  2853  00022C  EE20 F0CA          	lfsr	2,202
  2854  000230  5035               	movf	UART_buff_get@_this,w,c
  2855  000232  26D9               	addwf	fsr2l,f,c
  2856  000234  5036               	movf	UART_buff_get@_this+1,w,c
  2857  000236  22DA               	addwfc	fsr2h,f,c
  2858  000238  C02F  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  2859  00023C  C030  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  2860                           
  2861                           ;UART.c: 86: --_this->count;
  2862  000240  EE20 F0CC          	lfsr	2,204
  2863  000244  5035               	movf	UART_buff_get@_this,w,c
  2864  000246  26D9               	addwf	fsr2l,f,c
  2865  000248  5036               	movf	UART_buff_get@_this+1,w,c
  2866  00024A  22DA               	addwfc	fsr2h,f,c
  2867  00024C  06DE               	decf	postinc2,f,c
  2868  00024E  0E00               	movlw	0
  2869  000250  5ADD               	subwfb	postdec2,f,c
  2870                           
  2871                           ;UART.c: 87: } else {
  2872  000252  D002               	goto	i2l503
  2873  000254                     i2l2225:
  2874                           
  2875                           ;UART.c: 88: c = 0;
  2876  000254  0E00               	movlw	0
  2877  000256  6E39               	movwf	UART_buff_get@c,c
  2878  000258                     i2l503:
  2879                           
  2880                           ;UART.c: 89: }
  2881                           ;UART.c: 90: return (c);
  2882  000258  5039               	movf	UART_buff_get@c,w,c
  2883  00025A  0012               	return	
  2884  00025C                     __end_of_UART_buff_get:
  2885                           	opt stack 0
  2886                           pclatu	equ	0xFFB
  2887                           pclath	equ	0xFFA
  2888                           tblptru	equ	0xFF8
  2889                           tblptrh	equ	0xFF7
  2890                           tblptrl	equ	0xFF6
  2891                           tablat	equ	0xFF5
  2892                           prodh	equ	0xFF4
  2893                           prodl	equ	0xFF3
  2894                           intcon	equ	0xFF2
  2895                           intcon2	equ	0xFF1
  2896                           postinc0	equ	0xFEE
  2897                           fsr0h	equ	0xFEA
  2898                           fsr0l	equ	0xFE9
  2899                           wreg	equ	0xFE8
  2900                           postdec1	equ	0xFE5
  2901                           fsr1h	equ	0xFE2
  2902                           fsr1l	equ	0xFE1
  2903                           indf2	equ	0xFDF
  2904                           postinc2	equ	0xFDE
  2905                           postdec2	equ	0xFDD
  2906                           plusw2	equ	0xFDB
  2907                           fsr2h	equ	0xFDA
  2908                           fsr2l	equ	0xFD9
  2909                           status	equ	0xFD8
  2910                           
  2911 ;; *************** function _EUSART1_Receive_ISR *****************
  2912 ;; Defined at:
  2913 ;;		line 139 in file "UART.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;		None
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;  data            1   11[COMRAM] unsigned char 
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  2  167[None  ] int 
  2920 ;; Registers used:
  2921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2927 ;;      Params:         0       0       0       0       0       0       0
  2928 ;;      Locals:         1       0       0       0       0       0       0
  2929 ;;      Temps:          0       0       0       0       0       0       0
  2930 ;;      Totals:         1       0       0       0       0       0       0
  2931 ;;Total ram usage:        1 bytes
  2932 ;; Hardware stack levels used:    1
  2933 ;; Hardware stack levels required when called:    2
  2934 ;; This function calls:
  2935 ;;		_UART_buff_put
  2936 ;; This function is called by:
  2937 ;;		_INTERRUPT_InterruptManager
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           
  2941                           	psect	text20
  2942  00059E                     __ptext20:
  2943                           	opt stack 0
  2944  00059E                     _EUSART1_Receive_ISR:
  2945                           	opt stack 24
  2946                           
  2947                           ;UART.c: 140: if (1 == RC1STAbits.OERR) {
  2948                           
  2949                           ;incstack = 0
  2950  00059E  A2AB               	btfss	4011,1,c	;volatile
  2951  0005A0  D002               	goto	i2l534
  2952                           
  2953                           ;UART.c: 143: RC1STAbits.CREN = 0;
  2954  0005A2  98AB               	bcf	4011,4,c	;volatile
  2955                           
  2956                           ;UART.c: 144: RC1STAbits.CREN = 1;
  2957  0005A4  88AB               	bsf	4011,4,c	;volatile
  2958  0005A6                     i2l534:
  2959                           
  2960                           ;UART.c: 145: }
  2961                           ;UART.c: 146: unsigned char data = RCREG1;
  2962  0005A6  CFAE F03A          	movff	4014,EUSART1_Receive_ISR@data	;volatile
  2963                           
  2964                           ;UART.c: 147: UART_buff_put(&input_buffer, data);
  2965  0005AA  0E00               	movlw	low _input_buffer
  2966  0005AC  6E35               	movwf	UART_buff_put@_this,c
  2967  0005AE  0E02               	movlw	high _input_buffer
  2968  0005B0  6E36               	movwf	UART_buff_put@_this+1,c
  2969  0005B2  C03A  F037         	movff	EUSART1_Receive_ISR@data,UART_buff_put@c
  2970  0005B6  EC58  F000         	call	_UART_buff_put	;wreg free
  2971  0005BA  0012               	return		;funcret
  2972  0005BC                     __end_of_EUSART1_Receive_ISR:
  2973                           	opt stack 0
  2974                           pclatu	equ	0xFFB
  2975                           pclath	equ	0xFFA
  2976                           tblptru	equ	0xFF8
  2977                           tblptrh	equ	0xFF7
  2978                           tblptrl	equ	0xFF6
  2979                           tablat	equ	0xFF5
  2980                           prodh	equ	0xFF4
  2981                           prodl	equ	0xFF3
  2982                           intcon	equ	0xFF2
  2983                           intcon2	equ	0xFF1
  2984                           postinc0	equ	0xFEE
  2985                           fsr0h	equ	0xFEA
  2986                           fsr0l	equ	0xFE9
  2987                           wreg	equ	0xFE8
  2988                           postdec1	equ	0xFE5
  2989                           fsr1h	equ	0xFE2
  2990                           fsr1l	equ	0xFE1
  2991                           indf2	equ	0xFDF
  2992                           postinc2	equ	0xFDE
  2993                           postdec2	equ	0xFDD
  2994                           plusw2	equ	0xFDB
  2995                           fsr2h	equ	0xFDA
  2996                           fsr2l	equ	0xFD9
  2997                           status	equ	0xFD8
  2998                           
  2999 ;; *************** function _UART_buff_put *****************
  3000 ;; Defined at:
  3001 ;;		line 68 in file "UART.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
  3004 ;;		 -> output_buffer(206), input_buffer(206), 
  3005 ;;  c               1    8[COMRAM] const unsigned char 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;		None
  3008 ;; Return value:  Size  Location     Type
  3009 ;;		None               void
  3010 ;; Registers used:
  3011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3017 ;;      Params:         3       0       0       0       0       0       0
  3018 ;;      Locals:         0       0       0       0       0       0       0
  3019 ;;      Temps:          2       0       0       0       0       0       0
  3020 ;;      Totals:         5       0       0       0       0       0       0
  3021 ;;Total ram usage:        5 bytes
  3022 ;; Hardware stack levels used:    1
  3023 ;; Hardware stack levels required when called:    1
  3024 ;; This function calls:
  3025 ;;		_UART_buff_modulo_inc
  3026 ;; This function is called by:
  3027 ;;		_EUSART1_Receive_ISR
  3028 ;;		_Send_put
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           	psect	text21
  3033  0000B0                     __ptext21:
  3034                           	opt stack 0
  3035  0000B0                     _UART_buff_put:
  3036                           	opt stack 24
  3037                           
  3038                           ;UART.c: 69: if (_this->count < 200) {
  3039                           
  3040                           ;incstack = 0
  3041  0000B0  EE20 F0CC          	lfsr	2,204
  3042  0000B4  5035               	movf	UART_buff_put@_this,w,c
  3043  0000B6  26D9               	addwf	fsr2l,f,c
  3044  0000B8  5036               	movf	UART_buff_put@_this+1,w,c
  3045  0000BA  22DA               	addwfc	fsr2h,f,c
  3046  0000BC  0E01               	movlw	1
  3047  0000BE  BEDB               	btfsc	plusw2,7,c
  3048  0000C0  D007               	goto	i2l2205
  3049  0000C2  0E01               	movlw	1
  3050  0000C4  50DB               	movf	plusw2,w,c
  3051  0000C6  E13A               	bnz	i2l2211
  3052  0000C8  0EC8               	movlw	200
  3053  0000CA  5CDE               	subwf	postinc2,w,c
  3054  0000CC  B0D8               	btfsc	status,0,c
  3055  0000CE  D036               	goto	i2l2211
  3056  0000D0                     i2l2205:
  3057                           
  3058                           ;UART.c: 70: _this->buf[_this->head] = c;
  3059  0000D0  EE20 F0C8          	lfsr	2,200
  3060  0000D4  5035               	movf	UART_buff_put@_this,w,c
  3061  0000D6  26D9               	addwf	fsr2l,f,c
  3062  0000D8  5036               	movf	UART_buff_put@_this+1,w,c
  3063  0000DA  22DA               	addwfc	fsr2h,f,c
  3064  0000DC  CFDE F038          	movff	postinc2,??_UART_buff_put
  3065  0000E0  CFDD F039          	movff	postdec2,??_UART_buff_put+1
  3066  0000E4  5038               	movf	??_UART_buff_put,w,c
  3067  0000E6  2435               	addwf	UART_buff_put@_this,w,c
  3068  0000E8  6ED9               	movwf	fsr2l,c
  3069  0000EA  5039               	movf	??_UART_buff_put+1,w,c
  3070  0000EC  2036               	addwfc	UART_buff_put@_this+1,w,c
  3071  0000EE  6EDA               	movwf	fsr2h,c
  3072  0000F0  C037  FFDF         	movff	UART_buff_put@c,indf2
  3073                           
  3074                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
  3075  0000F4  EE20 F0C8          	lfsr	2,200
  3076  0000F8  5035               	movf	UART_buff_put@_this,w,c
  3077  0000FA  26D9               	addwf	fsr2l,f,c
  3078  0000FC  5036               	movf	UART_buff_put@_this+1,w,c
  3079  0000FE  22DA               	addwfc	fsr2h,f,c
  3080  000100  CFDE F02F          	movff	postinc2,UART_buff_modulo_inc@value
  3081  000104  CFDD F030          	movff	postdec2,UART_buff_modulo_inc@value+1
  3082  000108  0E00               	movlw	0
  3083  00010A  6E32               	movwf	UART_buff_modulo_inc@modulus+1,c
  3084  00010C  0EC8               	movlw	200
  3085  00010E  6E31               	movwf	UART_buff_modulo_inc@modulus,c
  3086  000110  ECBA  F002         	call	_UART_buff_modulo_inc	;wreg free
  3087  000114  EE20 F0C8          	lfsr	2,200
  3088  000118  5035               	movf	UART_buff_put@_this,w,c
  3089  00011A  26D9               	addwf	fsr2l,f,c
  3090  00011C  5036               	movf	UART_buff_put@_this+1,w,c
  3091  00011E  22DA               	addwfc	fsr2h,f,c
  3092  000120  C02F  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  3093  000124  C030  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  3094                           
  3095                           ;UART.c: 72: ++_this->count;
  3096  000128  EE20 F0CC          	lfsr	2,204
  3097  00012C  5035               	movf	UART_buff_put@_this,w,c
  3098  00012E  26D9               	addwf	fsr2l,f,c
  3099  000130  5036               	movf	UART_buff_put@_this+1,w,c
  3100  000132  22DA               	addwfc	fsr2h,f,c
  3101  000134  2ADE               	incf	postinc2,f,c
  3102  000136  0E00               	movlw	0
  3103  000138  22DD               	addwfc	postdec2,f,c
  3104                           
  3105                           ;UART.c: 73: } else {
  3106  00013A  0012               	return	
  3107  00013C                     i2l2211:
  3108                           
  3109                           ;UART.c: 74: _this->buf[_this->head] = c;
  3110  00013C  EE20 F0C8          	lfsr	2,200
  3111  000140  5035               	movf	UART_buff_put@_this,w,c
  3112  000142  26D9               	addwf	fsr2l,f,c
  3113  000144  5036               	movf	UART_buff_put@_this+1,w,c
  3114  000146  22DA               	addwfc	fsr2h,f,c
  3115  000148  CFDE F038          	movff	postinc2,??_UART_buff_put
  3116  00014C  CFDD F039          	movff	postdec2,??_UART_buff_put+1
  3117  000150  5038               	movf	??_UART_buff_put,w,c
  3118  000152  2435               	addwf	UART_buff_put@_this,w,c
  3119  000154  6ED9               	movwf	fsr2l,c
  3120  000156  5039               	movf	??_UART_buff_put+1,w,c
  3121  000158  2036               	addwfc	UART_buff_put@_this+1,w,c
  3122  00015A  6EDA               	movwf	fsr2h,c
  3123  00015C  C037  FFDF         	movff	UART_buff_put@c,indf2
  3124                           
  3125                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
  3126  000160  EE20 F0C8          	lfsr	2,200
  3127  000164  5035               	movf	UART_buff_put@_this,w,c
  3128  000166  26D9               	addwf	fsr2l,f,c
  3129  000168  5036               	movf	UART_buff_put@_this+1,w,c
  3130  00016A  22DA               	addwfc	fsr2h,f,c
  3131  00016C  CFDE F02F          	movff	postinc2,UART_buff_modulo_inc@value
  3132  000170  CFDD F030          	movff	postdec2,UART_buff_modulo_inc@value+1
  3133  000174  0E00               	movlw	0
  3134  000176  6E32               	movwf	UART_buff_modulo_inc@modulus+1,c
  3135  000178  0EC8               	movlw	200
  3136  00017A  6E31               	movwf	UART_buff_modulo_inc@modulus,c
  3137  00017C  ECBA  F002         	call	_UART_buff_modulo_inc	;wreg free
  3138  000180  EE20 F0C8          	lfsr	2,200
  3139  000184  5035               	movf	UART_buff_put@_this,w,c
  3140  000186  26D9               	addwf	fsr2l,f,c
  3141  000188  5036               	movf	UART_buff_put@_this+1,w,c
  3142  00018A  22DA               	addwfc	fsr2h,f,c
  3143  00018C  C02F  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  3144  000190  C030  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  3145                           
  3146                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  3147  000194  EE20 F0CA          	lfsr	2,202
  3148  000198  5035               	movf	UART_buff_put@_this,w,c
  3149  00019A  26D9               	addwf	fsr2l,f,c
  3150  00019C  5036               	movf	UART_buff_put@_this+1,w,c
  3151  00019E  22DA               	addwfc	fsr2h,f,c
  3152  0001A0  CFDE F02F          	movff	postinc2,UART_buff_modulo_inc@value
  3153  0001A4  CFDD F030          	movff	postdec2,UART_buff_modulo_inc@value+1
  3154  0001A8  0E00               	movlw	0
  3155  0001AA  6E32               	movwf	UART_buff_modulo_inc@modulus+1,c
  3156  0001AC  0EC8               	movlw	200
  3157  0001AE  6E31               	movwf	UART_buff_modulo_inc@modulus,c
  3158  0001B0  ECBA  F002         	call	_UART_buff_modulo_inc	;wreg free
  3159  0001B4  EE20 F0CA          	lfsr	2,202
  3160  0001B8  5035               	movf	UART_buff_put@_this,w,c
  3161  0001BA  26D9               	addwf	fsr2l,f,c
  3162  0001BC  5036               	movf	UART_buff_put@_this+1,w,c
  3163  0001BE  22DA               	addwfc	fsr2h,f,c
  3164  0001C0  C02F  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  3165  0001C4  C030  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  3166  0001C8  0012               	return	
  3167  0001CA                     __end_of_UART_buff_put:
  3168                           	opt stack 0
  3169                           pclatu	equ	0xFFB
  3170                           pclath	equ	0xFFA
  3171                           tblptru	equ	0xFF8
  3172                           tblptrh	equ	0xFF7
  3173                           tblptrl	equ	0xFF6
  3174                           tablat	equ	0xFF5
  3175                           prodh	equ	0xFF4
  3176                           prodl	equ	0xFF3
  3177                           intcon	equ	0xFF2
  3178                           intcon2	equ	0xFF1
  3179                           postinc0	equ	0xFEE
  3180                           fsr0h	equ	0xFEA
  3181                           fsr0l	equ	0xFE9
  3182                           wreg	equ	0xFE8
  3183                           postdec1	equ	0xFE5
  3184                           fsr1h	equ	0xFE2
  3185                           fsr1l	equ	0xFE1
  3186                           indf2	equ	0xFDF
  3187                           postinc2	equ	0xFDE
  3188                           postdec2	equ	0xFDD
  3189                           plusw2	equ	0xFDB
  3190                           fsr2h	equ	0xFDA
  3191                           fsr2l	equ	0xFD9
  3192                           status	equ	0xFD8
  3193                           
  3194 ;; *************** function _UART_buff_modulo_inc *****************
  3195 ;; Defined at:
  3196 ;;		line 106 in file "UART.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;  value           2    0[COMRAM] const unsigned int 
  3199 ;;  modulus         2    2[COMRAM] const unsigned int 
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;  my_value        2    4[COMRAM] unsigned int 
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  2    0[COMRAM] unsigned int 
  3204 ;; Registers used:
  3205 ;;		wreg, status,2, status,0
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3211 ;;      Params:         4       0       0       0       0       0       0
  3212 ;;      Locals:         2       0       0       0       0       0       0
  3213 ;;      Temps:          0       0       0       0       0       0       0
  3214 ;;      Totals:         6       0       0       0       0       0       0
  3215 ;;Total ram usage:        6 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; This function calls:
  3218 ;;		Nothing
  3219 ;; This function is called by:
  3220 ;;		_UART_buff_put
  3221 ;;		_UART_buff_get
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225                           	psect	text22
  3226  000574                     __ptext22:
  3227                           	opt stack 0
  3228  000574                     _UART_buff_modulo_inc:
  3229                           	opt stack 24
  3230                           
  3231                           ;UART.c: 107: unsigned int my_value = value + 1;
  3232                           
  3233                           ;incstack = 0
  3234  000574  0E01               	movlw	1
  3235  000576  242F               	addwf	UART_buff_modulo_inc@value,w,c
  3236  000578  6E33               	movwf	UART_buff_modulo_inc@my_value,c
  3237  00057A  0E00               	movlw	0
  3238  00057C  2030               	addwfc	UART_buff_modulo_inc@value+1,w,c
  3239  00057E  6E34               	movwf	UART_buff_modulo_inc@my_value+1,c
  3240                           
  3241                           ;UART.c: 108: if (my_value >= modulus) {
  3242  000580  5031               	movf	UART_buff_modulo_inc@modulus,w,c
  3243  000582  5C33               	subwf	UART_buff_modulo_inc@my_value,w,c
  3244  000584  5032               	movf	UART_buff_modulo_inc@modulus+1,w,c
  3245  000586  5834               	subwfb	UART_buff_modulo_inc@my_value+1,w,c
  3246  000588  A0D8               	btfss	status,0,c
  3247  00058A  D004               	goto	i2l2173
  3248                           
  3249                           ;UART.c: 109: my_value = 0;
  3250  00058C  0E00               	movlw	0
  3251  00058E  6E34               	movwf	UART_buff_modulo_inc@my_value+1,c
  3252  000590  0E00               	movlw	0
  3253  000592  6E33               	movwf	UART_buff_modulo_inc@my_value,c
  3254  000594                     i2l2173:
  3255                           
  3256                           ;UART.c: 110: }
  3257                           ;UART.c: 111: return (my_value);
  3258  000594  C033  F02F         	movff	UART_buff_modulo_inc@my_value,?_UART_buff_modulo_inc
  3259  000598  C034  F030         	movff	UART_buff_modulo_inc@my_value+1,?_UART_buff_modulo_inc+1
  3260  00059C  0012               	return	
  3261  00059E                     __end_of_UART_buff_modulo_inc:
  3262                           	opt stack 0
  3263                           pclatu	equ	0xFFB
  3264                           pclath	equ	0xFFA
  3265                           tblptru	equ	0xFF8
  3266                           tblptrh	equ	0xFF7
  3267                           tblptrl	equ	0xFF6
  3268                           tablat	equ	0xFF5
  3269                           prodh	equ	0xFF4
  3270                           prodl	equ	0xFF3
  3271                           intcon	equ	0xFF2
  3272                           intcon2	equ	0xFF1
  3273                           postinc0	equ	0xFEE
  3274                           fsr0h	equ	0xFEA
  3275                           fsr0l	equ	0xFE9
  3276                           wreg	equ	0xFE8
  3277                           postdec1	equ	0xFE5
  3278                           fsr1h	equ	0xFE2
  3279                           fsr1l	equ	0xFE1
  3280                           indf2	equ	0xFDF
  3281                           postinc2	equ	0xFDE
  3282                           postdec2	equ	0xFDD
  3283                           plusw2	equ	0xFDB
  3284                           fsr2h	equ	0xFDA
  3285                           fsr2l	equ	0xFD9
  3286                           status	equ	0xFD8
  3287                           pclatu	equ	0xFFB
  3288                           pclath	equ	0xFFA
  3289                           tblptru	equ	0xFF8
  3290                           tblptrh	equ	0xFF7
  3291                           tblptrl	equ	0xFF6
  3292                           tablat	equ	0xFF5
  3293                           prodh	equ	0xFF4
  3294                           prodl	equ	0xFF3
  3295                           intcon	equ	0xFF2
  3296                           intcon2	equ	0xFF1
  3297                           postinc0	equ	0xFEE
  3298                           fsr0h	equ	0xFEA
  3299                           fsr0l	equ	0xFE9
  3300                           wreg	equ	0xFE8
  3301                           postdec1	equ	0xFE5
  3302                           fsr1h	equ	0xFE2
  3303                           fsr1l	equ	0xFE1
  3304                           indf2	equ	0xFDF
  3305                           postinc2	equ	0xFDE
  3306                           postdec2	equ	0xFDD
  3307                           plusw2	equ	0xFDB
  3308                           fsr2h	equ	0xFDA
  3309                           fsr2l	equ	0xFD9
  3310                           status	equ	0xFD8
  3311                           
  3312                           	psect	rparam
  3313  0000                     pclatu	equ	0xFFB
  3314                           pclath	equ	0xFFA
  3315                           tblptru	equ	0xFF8
  3316                           tblptrh	equ	0xFF7
  3317                           tblptrl	equ	0xFF6
  3318                           tablat	equ	0xFF5
  3319                           prodh	equ	0xFF4
  3320                           prodl	equ	0xFF3
  3321                           intcon	equ	0xFF2
  3322                           intcon2	equ	0xFF1
  3323                           postinc0	equ	0xFEE
  3324                           fsr0h	equ	0xFEA
  3325                           fsr0l	equ	0xFE9
  3326                           wreg	equ	0xFE8
  3327                           postdec1	equ	0xFE5
  3328                           fsr1h	equ	0xFE2
  3329                           fsr1l	equ	0xFE1
  3330                           indf2	equ	0xFDF
  3331                           postinc2	equ	0xFDE
  3332                           postdec2	equ	0xFDD
  3333                           plusw2	equ	0xFDB
  3334                           fsr2h	equ	0xFDA
  3335                           fsr2l	equ	0xFD9
  3336                           status	equ	0xFD8
  3337                           
  3338                           	psect	temp
  3339  000056                     btemp:
  3340                           	opt stack 0
  3341  000056                     	ds	1
  3342  0000                     int$flags	set	btemp
  3343                           pclatu	equ	0xFFB
  3344                           pclath	equ	0xFFA
  3345                           tblptru	equ	0xFF8
  3346                           tblptrh	equ	0xFF7
  3347                           tblptrl	equ	0xFF6
  3348                           tablat	equ	0xFF5
  3349                           prodh	equ	0xFF4
  3350                           prodl	equ	0xFF3
  3351                           intcon	equ	0xFF2
  3352                           intcon2	equ	0xFF1
  3353                           postinc0	equ	0xFEE
  3354                           fsr0h	equ	0xFEA
  3355                           fsr0l	equ	0xFE9
  3356                           wreg	equ	0xFE8
  3357                           postdec1	equ	0xFE5
  3358                           fsr1h	equ	0xFE2
  3359                           fsr1l	equ	0xFE1
  3360                           indf2	equ	0xFDF
  3361                           postinc2	equ	0xFDE
  3362                           postdec2	equ	0xFDD
  3363                           plusw2	equ	0xFDB
  3364                           fsr2h	equ	0xFDA
  3365                           fsr2l	equ	0xFD9
  3366                           status	equ	0xFD8


Data Sizes:
    Strings     10
    Constant    455
    Data        10
    BSS         940
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      85
    BANK0           160      9      85
    BANK1           256      0     206
    BANK2           256      0     206
    BANK3           256      0     206
    BANK4           256      0     200
    BANK5           256      0       0

Pointer List with Targets:

    UART_buff_size@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK3[206]), input_buffer(BANK2[206]), 

    UART_buff_get@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK3[206]), input_buffer(BANK2[206]), 

    UART_buff_put@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK3[206]), input_buffer(BANK2[206]), 

    sp__memset	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK3[206]), input_buffer(BANK2[206]), ring_buffer(BANK1[206]), 

    sendStructAddress	PTR unsigned char  size(2) Largest target is 206
		 -> NULL(NULL[0]), ring_buffer(BANK1[206]), 

    serial_read	PTR FTN()unsigned char  size(2) Largest target is 0
		 -> Absolute function(), 

    serial_peek	PTR FTN()unsigned char  size(2) Largest target is 0
		 -> Absolute function(), 

    serial_available	PTR FTN()int  size(2) Largest target is 0
		 -> Absolute function(), 

    serial_write	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    receiveArrayAddress	PTR volatile int  size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _EUSART1_Transmit_ISR->_UART_buff_get
    _UART_buff_get->_UART_buff_modulo_inc
    _EUSART1_Receive_ISR->_UART_buff_put
    _UART_buff_put->_UART_buff_modulo_inc

Critical Paths under _main in BANK0

    _main->_Delay
    _NokiaStart->_Delay
    _clearLcd->_SPI1_Exchange8bit
    _blackLcd->_SPI1_Exchange8bit

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1372
                              _Delay
                         _NokiaStart
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _NokiaStart                                           0     0      0     765
                              _Delay
                  _SPI1_Exchange8bit
                    _SPI1_Initialize
                           _blackLcd
                           _clearLcd
 ---------------------------------------------------------------------------------
 (2) _clearLcd                                             2     2      0      68
                                              1 BANK0      2     2      0
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _blackLcd                                             2     2      0      68
                                              1 BANK0      2     2      0
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Delay                                                9     5      4     607
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0    2289
                                             12 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                _EUSART2_Receive_ISR
               _EUSART2_Transmit_ISR
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 0     0      0    1100
                      _UART_buff_get
                     _UART_buff_size
 ---------------------------------------------------------------------------------
 (6) _UART_buff_size                                       2     0      2     150
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _UART_buff_get                                        5     3      2     950
                                              6 COMRAM     5     3      2
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  1     1      0    1189
                                             11 COMRAM     1     1      0
                      _UART_buff_put
 ---------------------------------------------------------------------------------
 (6) _UART_buff_put                                        5     2      3    1166
                                              6 COMRAM     5     2      3
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (7) _UART_buff_modulo_inc                                 6     2      4     602
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay
   _NokiaStart
     _Delay
     _SPI1_Exchange8bit
     _SPI1_Initialize
     _blackLcd
       _SPI1_Exchange8bit
     _clearLcd
       _SPI1_Exchange8bit
   _SYSTEM_Initialize
     _EUSART2_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
     _UART_buff_put
       _UART_buff_modulo_inc
   _EUSART1_Transmit_ISR
     _UART_buff_get
       _UART_buff_modulo_inc
     _UART_buff_size
   _EUSART2_Receive_ISR
   _EUSART2_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C8      13       78.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      CE      11       80.5%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      CE       8       80.5%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      CE       6       80.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      9      55       4       53.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1A      55       1       90.4%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3DC       9        0.0%
DATA                 0      0     3DC      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Apr 23 02:38:51 2016

                  _SPI1_Exchange8bit 0600                                    _i 0028  
                       _rx_array_inx 002D                   ?_SPI1_Exchange8bit 002F  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                                l735 060A                                  l682 047A  
                                l693 04B0                         __CFG_CPB$OFF 000000  
                       __CFG_CPD$OFF 000000                  ??_SPI1_Exchange8bit 00AC  
                                prod 000FF3                                  wreg 000FE8  
                       __CFG_LVP$OFF 000000                                 l2821 0356  
                               l2901 03E2                                 l2831 0456  
                               l2903 03EC                                 l2825 0376  
                               l2843 048C                                 l2835 046C  
                               l2847 04A2                                 l2895 03B8  
                               l2899 03D8                                 STR_1 7FFB  
                               STR_3 7FF4                                 u2037 035E  
                               _LATA 000F89                                 _LATB 000F8A  
                               _LATC 000F8B                                 _LATD 000F8C  
                               _LATE 000F8D                                 u1810 03E0  
                               u1830 03EA                                 u1850 03F4  
                               u1851 03F0                                 u1790 03D6  
                               i2l97 0544                                 _WPUB 000F61  
              ??_EUSART2_Receive_ISR 002F                                 _main 03A8  
                    _TMR0_StartTimer 0644                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                               btemp 0056                        __CFG_BORV$190 000000  
                               pclat 000FFA                                 prodh 000FF4  
                               prodl 000FF3                                 start 00AC  
          __end_of_SPI1_Exchange8bit 0612                        __CFG_IESO$OFF 000000  
       __end_of_EUSART2_Transmit_ISR 0548                         ___param_bank 000010  
            __end_of_TMR0_Initialize 05D4       __size_of_OSCILLATOR_Initialize 000E  
      __end_of_OSCILLATOR_Initialize 0620                                ?_main 002F  
                              _T0CON 000FD5                                _LATB0 007C50  
                              _LATB1 007C51                                _LATA3 007C4B  
                              _LATC0 007C58                                _LATC1 007C59  
                              _LATB3 007C53                                _LATD0 007C60  
                              _LATB4 007C54                                _LATA6 007C4E  
                              _LATB5 007C55                                _LATD2 007C62  
                              _LATD3 007C63                       __CFG_DEBUG$OFF 000000  
                              i2l503 0258                                i2l183 0070  
                              i2l175 004E                                i2l177 005A  
                              i2l179 0066                                i2l534 05A6  
                              _TMR0H 000FD7                                _TMR0L 000FD6  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                                _TRISD 000F95  
                              _TRISE 000F96                                _Delay 0342  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                          _ChargerData 004A  
                      __CFG_WRT3$OFF 000000                 _EUSART1_Transmit_ISR 04E8  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                                _Start 0009  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                                _ddata 0088  
                     __CFG_EBTRB$OFF 000000                                _group 0013  
                 __CFG_MCLRE$EXTMCLR 000000                                tablat 000FF5  
                              plusw2 000FDB                                status 000FD8  
                     __CFG_HFOFST$ON 000000             __size_of_SPI1_Initialize 000E  
                     __CFG_PBADEN$ON 000000                      __initialization 025C  
                       __end_of_main 03F8          ?_INTERRUPT_InterruptManager 002F  
                             ??_main 00B5                        __activetblptr 000002  
                             ?_Delay 00AC                ?_EUSART1_Transmit_ISR 002F  
            __end_of_TMR0_StartTimer 0648           __end_of_EUSART2_Initialize 04E8  
           _eusart2TxBufferRemaining 0055                               _ANSELA 000F38  
                             _ANSELB 000F39                               _ANSELC 000F3A  
                             _ANSELD 000F3B                               _ANSELE 000F3C  
                         _NokiaStart 02D2                               _RC1STA 000FAB  
                             _RC2STA 000F71                               i2l2211 013C  
                             i2l2205 00D0                               i2l2225 0254  
                             i2l2173 0594                               Delay@i 00B1  
                             i2l2267 0570                               i2l2259 0550  
                             i2l1557 0540                       __CFG_WDTEN$OFF 000000  
                             i2l2279 0512          UART_buff_modulo_inc@modulus 0031  
                             _RCREG1 000FAE                               _RCREG2 000F74  
                             _OSCCON 000FD3                               _SPBRG1 000FAF  
                             _SPBRG2 000F75                               _TX1STA 000FAC  
                             _TX2STA 000F72                               _TRISA3 007C93  
                             _TRISD0 007CA8                               _TRISD2 007CAA  
                             _TRISD3 007CAB                     __end_of_blackLcd 04B4  
                             _TXREG1 000FAD                               _TXREG2 000F73  
              SPI1_Exchange8bit@data 00AC                     __end_of_clearLcd 047E  
         __size_of_SPI1_Exchange8bit 0012                       __CFG_XINST$OFF 000000  
                      _output_buffer 0300                       __CFG_STVREN$ON 000000  
                   ?_TMR0_Initialize 002F                               clear_0 0262  
                             clear_1 026E                               clear_2 027A  
                             clear_3 0286                               clear_4 0292  
                             clear_5 029E                               _rx_len 002E  
                       __pdataCOMRAM 0049                         __mediumconst 7E2C  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                 _EUSART2_Transmit_ISR 051A  
       __end_of_UART_buff_modulo_inc 059E        __size_of_INTERRUPT_Initialize 000C  
                    _eusart2RxBuffer 0093                    _SYSTEM_Initialize 05D4  
                    _eusart2TxBuffer 0001                           __accesstop 0060  
            __end_of__initialization 02C4                   ?_SYSTEM_Initialize 002F  
                      ___rparam_used 000001                        __end_of_Delay 03A8  
                     __pcstackCOMRAM 002F                  ??_SYSTEM_Initialize 00AC  
                  ??_SPI1_Initialize 00AC                   UART_buff_get@_this 0035  
              __end_of_UART_buff_get 025C               ??_EUSART1_Transmit_ISR 003A  
              __end_of_UART_buff_put 01CA                              ??_Delay 00B0  
              ?_EUSART2_Transmit_ISR 002F          __end_of_EUSART1_Receive_ISR 05BC  
                   ?_TMR0_StartTimer 002F            __end_of_SYSTEM_Initialize 05EA  
                _addressErrorCounter 000B                          ?_NokiaStart 002F  
                      _eusart2RxHead 0024                        _eusart2TxHead 0026  
                         __pbssBANK0 0060                           __pbssBANK1 0100  
                         __pbssBANK2 0200                           __pbssBANK3 0300  
                         __pbssBANK4 0400                   __end_of_FONTLOOKUP 7FF4  
                      _eusart2RxTail 0025                        _eusart2TxTail 0027  
                    __CFG_PLLCFG$OFF 000000                           __pnvCOMRAM 0053  
            __size_of_UART_buff_size 0016                   __CFG_CCP2MX$PORTC1 000000  
                 __CFG_CCP3MX$PORTB5 000000                           _crc_buffer 009B  
                 UART_buff_put@_this 0035                            ?_blackLcd 002F  
                          ?_clearLcd 002F                              _OSCCON2 000FD2  
        __end_of_EUSART2_Receive_ISR 0574         UART_buff_modulo_inc@my_value 0033  
                  __CFG_PRICLKEN$OFF 000000                              _OSCTUNE 000F9B  
                            _SPBRGH1 000FB0                              _SPBRGH2 000F76  
                            _SSP1ADD 000FC8                              i2u98_40 01E8  
                _receiveArrayAddress 0015                              _SSP1BUF 000FC9  
                  _alignErrorCounter 000D                      __CFG_PWRTEN$OFF 000000  
                            __Hparam 0000                              __Lparam 0000  
                          _AKNAKsend 0021                 _UART_buff_modulo_inc 0574  
                            _calc_CS 0022                              __pcinit 025C  
                __size_of_NokiaStart 0070                              __ramtop 0600  
                            __ptext0 03A8                              __ptext1 05D4  
                            __ptext2 05BC                              __ptext3 0644  
                            __ptext4 03F8                              __ptext5 0612  
                            __ptext6 062E                              __ptext7 04B4  
                            __ptext8 02D2                              __ptext9 0448  
                          _T0CONbits 000FD5                _OSCILLATOR_Initialize 0612  
             ??_EUSART2_Transmit_ISR 002F                           ??_blackLcd 00AD  
           ??_PIN_MANAGER_Initialize 00AC                           ??_clearLcd 00AD  
         __size_of_SYSTEM_Initialize 0016                 end_of_initialization 02C4  
                          Delay@wait 00AC                        __Lmediumconst 7E2C  
                 _EUSART2_Initialize 04B4                ?_UART_buff_modulo_inc 002F  
                            postdec1 000FE5                              postdec2 000FDD  
                            postinc0 000FEE                              postinc2 000FDE  
                ?_EUSART2_Initialize 002F               _dataAdressErrorCounter 0011  
                         _rx_address 002C                 ??_EUSART2_Initialize 00AC  
                    _SPI1_Initialize 0620                       _UART_buff_size 05EA  
                      _moduleAddress 002A                 _timer0ReloadVal16bit 0053  
       __end_of_INTERRUPT_Initialize 063A                      _crcErrorCounter 000F  
                      __pidataCOMRAM 063A               ?_OSCILLATOR_Initialize 002F  
                start_initialization 025C             __size_of_TMR0_Initialize 0018  
    __size_of_PIN_MANAGER_Initialize 0050                         ??_NokiaStart 00B5  
                     UART_buff_get@c 0039               __end_of_UART_buff_size 0600  
                     UART_buff_put@c 0037               ??_UART_buff_modulo_inc 0033  
                 __end_of_NokiaStart 0342                       _eusart2RxCount 0023  
                        __pbssCOMRAM 0001        __size_of_EUSART1_Transmit_ISR 0032  
                      __pcstackBANK0 00AC                    __size_of_blackLcd 0036  
            __end_of_SPI1_Initialize 062E                    __size_of_clearLcd 0036  
                    ?_UART_buff_size 002F         __size_of_EUSART1_Receive_ISR 001E  
           __size_of_TMR0_StartTimer 0004               __size_of_UART_buff_get 0092  
             __size_of_UART_buff_put 011A               _PIN_MANAGER_Initialize 03F8  
                          __pintcode 0008                        __pmediumconst 7E2C  
       ??_INTERRUPT_InterruptManager 003B                             _BAUD1CON 000FB8  
                           _BAUD2CON 000F70                       __size_of_Delay 0066  
               _INTERRUPT_Initialize 062E                         _receiveArray 0060  
                  ??_TMR0_Initialize 00AC         __size_of_EUSART2_Receive_ISR 002C  
                           _LATCbits 000F8B                  UART_buff_size@_this 002F  
                           _IPR1bits 000F9F                             _PIE1bits 000F9D  
                           _IPR3bits 000FA5                             _PIE3bits 000FA3  
                           i2u104_40 0502  __size_of_INTERRUPT_InterruptManager 00A4  
                           _PIR1bits 000F9E                             _PIR3bits 000FA4  
                           _RCONbits 000FD0                     __CFG_WDTPS$32768 000000  
                           _SSP1CON1 000FC6                             _SSP1STAT 000FC7  
                       _input_buffer 0200                            _rx_buffer 0400  
                      _UART_buff_get 01CA                        _UART_buff_put 00B0  
      __size_of_EUSART2_Transmit_ISR 002E                     ?_SPI1_Initialize 002F  
                        _INTCON2bits 000FF1                            copy_data0 02B8  
              ?_INTERRUPT_Initialize 002F                    _sendStructAddress 0017  
                        blackLcd@res 00AD                             __Hrparam 0000  
                           __Lrparam 0000                   __CFG_BOREN$SBORDIS 000000  
                  __CFG_P2BMX$PORTD2 000000              ??_OSCILLATOR_Initialize 00AC  
                  ??_TMR0_StartTimer 00AC                       ?_UART_buff_get 0035  
                     ?_UART_buff_put 0035                             _blackLcd 047E  
                           _clearLcd 0448                             __ptext10 047E  
                           __ptext11 0600                             __ptext20 059E  
                           __ptext12 0620                             __ptext21 00B0  
                           __ptext13 0342                             __ptext22 0574  
                           __ptext15 051A                             __ptext16 0548  
                           __ptext17 04E8                             __ptext18 05EA  
                           __ptext19 01CA                         _SSP1CON1bits 000FC6  
            EUSART1_Receive_ISR@data 003A          __size_of_EUSART2_Initialize 0034  
                      _returnAddress 002B                        __size_of_main 0050  
                     _Transmit_stall 0049                           _RC1STAbits 000FAB  
                         _RC2STAbits 000F71                          clearLcd@res 00AD  
                         _FONTLOOKUP 7E2D                             int$flags 0056  
                       _serial_write 001F   __end_of_INTERRUPT_InterruptManager 00AC  
         _INTERRUPT_InterruptManager 0008                         _SSP1STATbits 000FC7  
                _EUSART1_Receive_ISR 059E                           _INTCONbits 000FF2  
          UART_buff_modulo_inc@value 002F                     ??_UART_buff_size 0031  
             ??_INTERRUPT_Initialize 00AC                     _serial_available 0019  
                           intlevel2 0000                 ?_EUSART1_Receive_ISR 002F  
            ?_PIN_MANAGER_Initialize 002F         __end_of_EUSART1_Transmit_ISR 051A  
                        _ring_buffer 0100                          _serial_peek 001B  
                        _serial_read 001D        __size_of_UART_buff_modulo_inc 002A  
                    ??_UART_buff_get 0037                      ??_UART_buff_put 0038  
                _EUSART2_Receive_ISR 0548                      _TMR0_Initialize 05BC  
                  __CFG_T3CMX$PORTC0 000000                       _maxDataAddress 0029  
              ??_EUSART1_Receive_ISR 003A       __end_of_PIN_MANAGER_Initialize 0448  
               ?_EUSART2_Receive_ISR 002F                    __CFG_FOSC$INTIO67 000000  
