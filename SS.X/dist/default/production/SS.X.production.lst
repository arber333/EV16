

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sun Aug 21 23:49:09 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35  0000                     
    36 ;; Function _Receive_peek is unused but had its address taken
    37  0000                     
    38 ;; Function _Receive_available is unused but had its address taken
    39  0000                     
    40 ;; Function _Receive_get is unused but had its address taken
    41  0000                     
    42 ;; Function _Send_put is unused but had its address taken
    43  0000                     
    44                           	psect	idataCOMRAM
    45  00042C                     __pidataCOMRAM:
    46                           	opt stack 0
    47                           
    48                           ;initializer for _Transmit_stall
    49  00042C  01                 	db	1
    50                           
    51                           	psect	nvCOMRAM
    52  000050                     __pnvCOMRAM:
    53                           	opt stack 0
    54  000050                     _timer0ReloadVal16bit:
    55                           	opt stack 0
    56  000050                     	ds	2
    57  0000                     _ANSELA	set	3896
    58  0000                     _ANSELC	set	3898
    59  0000                     _ANSELD	set	3899
    60  0000                     _BAUD1CON	set	4024
    61  0000                     _INTCON2bits	set	4081
    62  0000                     _INTCONbits	set	4082
    63  0000                     _IPR1bits	set	3999
    64  0000                     _IPR2bits	set	4002
    65  0000                     _LATAbits	set	3977
    66  0000                     _LATCbits	set	3979
    67  0000                     _LATDbits	set	3980
    68  0000                     _OSCCON	set	4051
    69  0000                     _OSCCON2	set	4050
    70  0000                     _OSCTUNE	set	3995
    71  0000                     _PIE1bits	set	3997
    72  0000                     _PIR1bits	set	3998
    73  0000                     _RC1STA	set	4011
    74  0000                     _RC1STAbits	set	4011
    75  0000                     _RCONbits	set	4048
    76  0000                     _RCREG1	set	4014
    77  0000                     _SPBRG1	set	4015
    78  0000                     _SPBRGH1	set	4016
    79  0000                     _T0CON	set	4053
    80  0000                     _T0CONbits	set	4053
    81  0000                     _TMR0H	set	4055
    82  0000                     _TMR0L	set	4054
    83  0000                     _TRISAbits	set	3986
    84  0000                     _TRISCbits	set	3988
    85  0000                     _TRISDbits	set	3989
    86  0000                     _TX1STA	set	4012
    87  0000                     _TXREG1	set	4013
    88                           
    89                           ; #config settings
    90  0000                     
    91                           	psect	cinit
    92  000250                     __pcinit:
    93                           	opt stack 0
    94  000250                     start_initialization:
    95                           	opt stack 0
    96  000250                     __initialization:
    97                           	opt stack 0
    98                           
    99                           ; Clear objects allocated to BANK4 (206 bytes)
   100  000250  EE04  F000         	lfsr	0,__pbssBANK4
   101  000254  0ECE               	movlw	206
   102  000256                     clear_0:
   103  000256  6AEE               	clrf	postinc0,c
   104  000258  06E8               	decf	wreg,f,c
   105  00025A  E1FD               	bnz	clear_0
   106                           
   107                           ; Clear objects allocated to BANK3 (206 bytes)
   108  00025C  EE03  F000         	lfsr	0,__pbssBANK3
   109  000260  0ECE               	movlw	206
   110  000262                     clear_1:
   111  000262  6AEE               	clrf	postinc0,c
   112  000264  06E8               	decf	wreg,f,c
   113  000266  E1FD               	bnz	clear_1
   114                           
   115                           ; Clear objects allocated to BANK2 (200 bytes)
   116  000268  EE02  F000         	lfsr	0,__pbssBANK2
   117  00026C  0EC8               	movlw	200
   118  00026E                     clear_2:
   119  00026E  6AEE               	clrf	postinc0,c
   120  000270  06E8               	decf	wreg,f,c
   121  000272  E1FD               	bnz	clear_2
   122                           
   123                           ; Clear objects allocated to BANK1 (206 bytes)
   124  000274  EE01  F000         	lfsr	0,__pbssBANK1
   125  000278  0ECE               	movlw	206
   126  00027A                     clear_3:
   127  00027A  6AEE               	clrf	postinc0,c
   128  00027C  06E8               	decf	wreg,f,c
   129  00027E  E1FD               	bnz	clear_3
   130                           
   131                           ; Clear objects allocated to BANK0 (10 bytes)
   132  000280  EE00  F060         	lfsr	0,__pbssBANK0
   133  000284  0E0A               	movlw	10
   134  000286                     clear_4:
   135  000286  6AEE               	clrf	postinc0,c
   136  000288  06E8               	decf	wreg,f,c
   137  00028A  E1FD               	bnz	clear_4
   138                           
   139                           ; Clear objects allocated to COMRAM (53 bytes)
   140  00028C  EE00  F001         	lfsr	0,__pbssCOMRAM
   141  000290  0E35               	movlw	53
   142  000292                     clear_5:
   143  000292  6AEE               	clrf	postinc0,c
   144  000294  06E8               	decf	wreg,f,c
   145  000296  E1FD               	bnz	clear_5
   146                           
   147                           ; Initialize objects allocated to COMRAM (1 bytes)
   148                           ; load TBLPTR registers with __pidataCOMRAM
   149  000298  0E2C               	movlw	low __pidataCOMRAM
   150  00029A  6EF6               	movwf	tblptrl,c
   151  00029C  0E04               	movlw	high __pidataCOMRAM
   152  00029E  6EF7               	movwf	tblptrh,c
   153  0002A0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   154  0002A2  6EF8               	movwf	tblptru,c
   155  0002A4  0009               	tblrd		*+	;fetch initializer
   156  0002A6  CFF5 F052          	movff	tablat,__pdataCOMRAM
   157  0002AA                     end_of_initialization:
   158                           	opt stack 0
   159  0002AA                     __end_of__initialization:
   160                           	opt stack 0
   161  0002AA  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   162  0002AC  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   163  0002AE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   164  0002B0  6EF8               	movwf	tblptru,c
   165  0002B2  0100               	movlb	0
   166  0002B4  EF97  F001         	goto	_main	;jump to C main() function
   167                           tblptru	equ	0xFF8
   168                           tblptrh	equ	0xFF7
   169                           tblptrl	equ	0xFF6
   170                           tablat	equ	0xFF5
   171                           postinc0	equ	0xFEE
   172                           wreg	equ	0xFE8
   173                           
   174                           	psect	bssCOMRAM
   175  000001                     __pbssCOMRAM:
   176                           	opt stack 0
   177  000001                     _time:
   178                           	opt stack 0
   179  000001                     	ds	4
   180  000005                     _addressErrorCounter:
   181                           	opt stack 0
   182  000005                     	ds	2
   183  000007                     _alignErrorCounter:
   184                           	opt stack 0
   185  000007                     	ds	2
   186  000009                     _crcErrorCounter:
   187                           	opt stack 0
   188  000009                     	ds	2
   189  00000B                     _dataAdressErrorCounter:
   190                           	opt stack 0
   191  00000B                     	ds	2
   192  00000D                     _group:
   193                           	opt stack 0
   194  00000D                     	ds	2
   195  00000F                     _receiveArrayAddress:
   196                           	opt stack 0
   197  00000F                     	ds	2
   198  000011                     _sendStructAddress:
   199                           	opt stack 0
   200  000011                     	ds	2
   201  000013                     _serial_available:
   202                           	opt stack 0
   203  000013                     	ds	2
   204  000015                     _serial_peek:
   205                           	opt stack 0
   206  000015                     	ds	2
   207  000017                     _serial_read:
   208                           	opt stack 0
   209  000017                     	ds	2
   210  000019                     _serial_write:
   211                           	opt stack 0
   212  000019                     	ds	2
   213  00001B                     _AKNAKsend:
   214                           	opt stack 0
   215  00001B                     	ds	1
   216  00001C                     _ByteHigh:
   217                           	opt stack 0
   218  00001C                     	ds	1
   219  00001D                     _ByteLow:
   220                           	opt stack 0
   221  00001D                     	ds	1
   222  00001E                     _calc_CS:
   223                           	opt stack 0
   224  00001E                     	ds	1
   225  00001F                     _maxDataAddress:
   226                           	opt stack 0
   227  00001F                     	ds	1
   228  000020                     _moduleAddress:
   229                           	opt stack 0
   230  000020                     	ds	1
   231  000021                     _returnAddress:
   232                           	opt stack 0
   233  000021                     	ds	1
   234  000022                     _rx_address:
   235                           	opt stack 0
   236  000022                     	ds	1
   237  000023                     _rx_array_inx:
   238                           	opt stack 0
   239  000023                     	ds	1
   240  000024                     _rx_len:
   241                           	opt stack 0
   242  000024                     	ds	1
   243  000025                     _crc_buffer:
   244                           	opt stack 0
   245  000025                     	ds	17
   246                           tblptru	equ	0xFF8
   247                           tblptrh	equ	0xFF7
   248                           tblptrl	equ	0xFF6
   249                           tablat	equ	0xFF5
   250                           postinc0	equ	0xFEE
   251                           wreg	equ	0xFE8
   252                           
   253                           	psect	dataCOMRAM
   254  000052                     __pdataCOMRAM:
   255                           	opt stack 0
   256  000052                     _Transmit_stall:
   257                           	opt stack 0
   258  000052                     	ds	1
   259                           tblptru	equ	0xFF8
   260                           tblptrh	equ	0xFF7
   261                           tblptrl	equ	0xFF6
   262                           tablat	equ	0xFF5
   263                           postinc0	equ	0xFEE
   264                           wreg	equ	0xFE8
   265                           
   266                           	psect	bssBANK0
   267  000060                     __pbssBANK0:
   268                           	opt stack 0
   269  000060                     _receiveArray:
   270                           	opt stack 0
   271  000060                     	ds	10
   272                           tblptru	equ	0xFF8
   273                           tblptrh	equ	0xFF7
   274                           tblptrl	equ	0xFF6
   275                           tablat	equ	0xFF5
   276                           postinc0	equ	0xFEE
   277                           wreg	equ	0xFE8
   278                           
   279                           	psect	bssBANK1
   280  000100                     __pbssBANK1:
   281                           	opt stack 0
   282  000100                     _ring_buffer:
   283                           	opt stack 0
   284  000100                     	ds	206
   285                           tblptru	equ	0xFF8
   286                           tblptrh	equ	0xFF7
   287                           tblptrl	equ	0xFF6
   288                           tablat	equ	0xFF5
   289                           postinc0	equ	0xFEE
   290                           wreg	equ	0xFE8
   291                           
   292                           	psect	bssBANK2
   293  000200                     __pbssBANK2:
   294                           	opt stack 0
   295  000200                     _rx_buffer:
   296                           	opt stack 0
   297  000200                     	ds	200
   298                           tblptru	equ	0xFF8
   299                           tblptrh	equ	0xFF7
   300                           tblptrl	equ	0xFF6
   301                           tablat	equ	0xFF5
   302                           postinc0	equ	0xFEE
   303                           wreg	equ	0xFE8
   304                           
   305                           	psect	bssBANK3
   306  000300                     __pbssBANK3:
   307                           	opt stack 0
   308  000300                     _input_buffer:
   309                           	opt stack 0
   310  000300                     	ds	206
   311                           tblptru	equ	0xFF8
   312                           tblptrh	equ	0xFF7
   313                           tblptrl	equ	0xFF6
   314                           tablat	equ	0xFF5
   315                           postinc0	equ	0xFEE
   316                           wreg	equ	0xFE8
   317                           
   318                           	psect	bssBANK4
   319  000400                     __pbssBANK4:
   320                           	opt stack 0
   321  000400                     _output_buffer:
   322                           	opt stack 0
   323  000400                     	ds	206
   324                           tblptru	equ	0xFF8
   325                           tblptrh	equ	0xFF7
   326                           tblptrl	equ	0xFF6
   327                           tablat	equ	0xFF5
   328                           postinc0	equ	0xFEE
   329                           wreg	equ	0xFE8
   330                           
   331                           	psect	cstackBANK0
   332  00006A                     __pcstackBANK0:
   333                           	opt stack 0
   334  00006A                     ?_GetTime:
   335                           	opt stack 0
   336                           
   337                           ; 4 bytes @ 0x0
   338  00006A                     	ds	4
   339  00006E                     tblptru	equ	0xFF8
   340                           tblptrh	equ	0xFF7
   341                           tblptrl	equ	0xFF6
   342                           tablat	equ	0xFF5
   343                           postinc0	equ	0xFEE
   344                           wreg	equ	0xFE8
   345                           
   346                           ; 1 bytes @ 0x4
   347                           
   348                           	psect	cstackCOMRAM
   349  000036                     __pcstackCOMRAM:
   350                           	opt stack 0
   351  000036                     ?_UART_buff_modulo_inc:
   352                           	opt stack 0
   353  000036                     ?_UART_buff_size:
   354                           	opt stack 0
   355  000036                     UART_buff_size@_this:
   356                           	opt stack 0
   357  000036                     UART_buff_modulo_inc@value:
   358                           	opt stack 0
   359                           
   360                           ; 2 bytes @ 0x0
   361  000036                     	ds	2
   362  000038                     UART_buff_modulo_inc@modulus:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0x2
   366  000038                     	ds	2
   367  00003A                     UART_buff_modulo_inc@my_value:
   368                           	opt stack 0
   369                           
   370                           ; 2 bytes @ 0x4
   371  00003A                     	ds	2
   372  00003C                     UART_buff_put@_this:
   373                           	opt stack 0
   374  00003C                     UART_buff_get@_this:
   375                           	opt stack 0
   376                           
   377                           ; 2 bytes @ 0x6
   378  00003C                     	ds	2
   379  00003E                     ??_UART_buff_get:
   380  00003E                     UART_buff_put@c:
   381                           	opt stack 0
   382                           
   383                           ; 1 bytes @ 0x8
   384  00003E                     	ds	1
   385  00003F                     ??_UART_buff_put:
   386                           
   387                           ; 1 bytes @ 0x9
   388  00003F                     	ds	1
   389  000040                     UART_buff_get@c:
   390                           	opt stack 0
   391                           
   392                           ; 1 bytes @ 0xA
   393  000040                     	ds	1
   394  000041                     EUSART1_Receive_ISR@data:
   395                           	opt stack 0
   396                           
   397                           ; 1 bytes @ 0xB
   398  000041                     	ds	1
   399  000042                     ??_INTERRUPT_InterruptManager:
   400                           
   401                           ; 1 bytes @ 0xC
   402  000042                     	ds	14
   403                           tblptru	equ	0xFF8
   404                           tblptrh	equ	0xFF7
   405                           tblptrl	equ	0xFF6
   406                           tablat	equ	0xFF5
   407                           postinc0	equ	0xFEE
   408                           wreg	equ	0xFE8
   409                           
   410 ;;
   411 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   412 ;;
   413 ;; *************** function _main *****************
   414 ;; Defined at:
   415 ;;		line 23 in file "Main.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;		None
   418 ;; Auto vars:     Size  Location     Type
   419 ;;		None
   420 ;; Return value:  Size  Location     Type
   421 ;;                  1    wreg      void 
   422 ;; Registers used:
   423 ;;		wreg, status,2, status,0, cstack
   424 ;; Tracked objects:
   425 ;;		On entry : 0/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   429 ;;      Params:         0       0       0       0       0       0       0
   430 ;;      Locals:         0       0       0       0       0       0       0
   431 ;;      Temps:          0       0       0       0       0       0       0
   432 ;;      Totals:         0       0       0       0       0       0       0
   433 ;;Total ram usage:        0 bytes
   434 ;; Hardware stack levels required when called:    7
   435 ;; This function calls:
   436 ;;		_GetTime
   437 ;;		_SetTime
   438 ;;		_Start
   439 ;; This function is called by:
   440 ;;		Startup code after reset
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           	psect	text0
   445  00032E                     __ptext0:
   446                           	opt stack 0
   447  00032E                     _main:
   448                           	opt stack 24
   449                           
   450                           ;Main.c: 24: Start();
   451                           
   452                           ;incstack = 0
   453  00032E  EC5C  F001         	call	_Start	;wreg free
   454  000332                     l2191:
   455                           
   456                           ;Main.c: 27: if(GetTime() > 1000){
   457  000332  EC0B  F002         	call	_GetTime	;wreg free
   458  000336  0100               	movlb	0	; () banked
   459  000338  BF6D               	btfsc	(?_GetTime+3)& (0+255),7,b
   460  00033A  D7FB               	goto	l2191
   461  00033C  0100               	movlb	0	; () banked
   462  00033E  516D               	movf	(?_GetTime+3)& (0+255),w,b
   463  000340  0100               	movlb	0	; () banked
   464  000342  116C               	iorwf	(?_GetTime+2)& (0+255),w,b
   465  000344  E108               	bnz	u2230
   466  000346  0EE9               	movlw	233
   467  000348  0100               	movlb	0	; () banked
   468  00034A  5D6A               	subwf	?_GetTime& (0+255),w,b
   469  00034C  0E03               	movlw	3
   470  00034E  0100               	movlb	0	; () banked
   471  000350  596B               	subwfb	(?_GetTime+1)& (0+255),w,b
   472  000352  A0D8               	btfss	status,0,c
   473  000354  D7EE               	goto	l2191
   474  000356                     u2230:
   475                           
   476                           ; BSR set to: 0
   477                           ;Main.c: 31: LATAbits.LATA3 ^= 1;
   478  000356  7689               	btg	3977,3,c	;volatile
   479                           
   480                           ; BSR set to: 0
   481                           ;Main.c: 32: SetTime();
   482  000358  EC02  F002         	call	_SetTime	;wreg free
   483  00035C  D7EA               	goto	l2191
   484  00035E                     __end_of_main:
   485                           	opt stack 0
   486                           tblptru	equ	0xFF8
   487                           tblptrh	equ	0xFF7
   488                           tblptrl	equ	0xFF6
   489                           tablat	equ	0xFF5
   490                           postinc0	equ	0xFEE
   491                           wreg	equ	0xFE8
   492                           status	equ	0xFD8
   493                           
   494 ;; *************** function _Start *****************
   495 ;; Defined at:
   496 ;;		line 32 in file "Function.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;		None
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		wreg, status,2, cstack
   505 ;; Tracked objects:
   506 ;;		On entry : 0/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   510 ;;      Params:         0       0       0       0       0       0       0
   511 ;;      Locals:         0       0       0       0       0       0       0
   512 ;;      Temps:          0       0       0       0       0       0       0
   513 ;;      Totals:         0       0       0       0       0       0       0
   514 ;;Total ram usage:        0 bytes
   515 ;; Hardware stack levels used:    1
   516 ;; Hardware stack levels required when called:    6
   517 ;; This function calls:
   518 ;;		_INTERRUPT_Initialize
   519 ;;		_TMR0_Initialize
   520 ;; This function is called by:
   521 ;;		_main
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           	psect	text1
   526  0002B8                     __ptext1:
   527                           	opt stack 0
   528  0002B8                     _Start:
   529                           	opt stack 24
   530                           
   531                           ;Function.c: 97: TRISCbits.TRISC5 = 1;
   532                           
   533                           ;incstack = 0
   534  0002B8  8A94               	bsf	3988,5,c	;volatile
   535                           
   536                           ;Function.c: 98: TRISCbits.TRISC4 = 1;
   537  0002BA  8894               	bsf	3988,4,c	;volatile
   538                           
   539                           ;Function.c: 99: TRISDbits.TRISD3 = 1;
   540  0002BC  8695               	bsf	3989,3,c	;volatile
   541                           
   542                           ;Function.c: 100: TRISDbits.TRISD2 = 1;
   543  0002BE  8495               	bsf	3989,2,c	;volatile
   544                           
   545                           ;Function.c: 101: TRISDbits.TRISD1 = 1;
   546  0002C0  8295               	bsf	3989,1,c	;volatile
   547                           
   548                           ;Function.c: 102: TRISDbits.TRISD0 = 1;
   549  0002C2  8095               	bsf	3989,0,c	;volatile
   550                           
   551                           ;Function.c: 103: TRISCbits.TRISC3 = 1;
   552  0002C4  8694               	bsf	3988,3,c	;volatile
   553                           
   554                           ;Function.c: 104: TRISCbits.TRISC2 = 1;
   555  0002C6  8494               	bsf	3988,2,c	;volatile
   556                           
   557                           ;Function.c: 105: TRISCbits.TRISC1 = 1;
   558  0002C8  8294               	bsf	3988,1,c	;volatile
   559                           
   560                           ;Function.c: 106: TRISAbits.TRISA7 = 1;
   561  0002CA  8E92               	bsf	3986,7,c	;volatile
   562                           
   563                           ;Function.c: 107: TRISCbits.TRISC0 = 1;
   564  0002CC  8094               	bsf	3988,0,c	;volatile
   565                           
   566                           ;Function.c: 109: TRISAbits.TRISA4 = 1;
   567  0002CE  8892               	bsf	3986,4,c	;volatile
   568                           
   569                           ;Function.c: 110: TRISAbits.TRISA6 = 1;
   570  0002D0  8C92               	bsf	3986,6,c	;volatile
   571                           
   572                           ;Function.c: 111: TRISAbits.TRISA3 = 0;
   573  0002D2  9692               	bcf	3986,3,c	;volatile
   574                           
   575                           ;Function.c: 116: ANSELA = 0;
   576  0002D4  0E00               	movlw	0
   577  0002D6  010F               	movlb	15	; () banked
   578  0002D8  6F38               	movwf	56,b	;volatile
   579                           
   580                           ;Function.c: 117: ANSELC = 0;
   581  0002DA  0E00               	movlw	0
   582  0002DC  010F               	movlb	15	; () banked
   583  0002DE  6F3A               	movwf	58,b	;volatile
   584                           
   585                           ;Function.c: 118: ANSELD = 0;
   586  0002E0  0E00               	movlw	0
   587  0002E2  010F               	movlb	15	; () banked
   588  0002E4  6F3B               	movwf	59,b	;volatile
   589                           
   590                           ;Function.c: 121: OSCCON = 0x72;
   591  0002E6  0E72               	movlw	114
   592  0002E8  6ED3               	movwf	4051,c	;volatile
   593                           
   594                           ;Function.c: 123: OSCCON2 = 0x04;
   595  0002EA  0E04               	movlw	4
   596  0002EC  6ED2               	movwf	4050,c	;volatile
   597                           
   598                           ;Function.c: 125: OSCTUNE = 0x00;
   599  0002EE  0E00               	movlw	0
   600  0002F0  6E9B               	movwf	3995,c	;volatile
   601                           
   602                           ; BSR set to: 15
   603                           ;Function.c: 129: INTERRUPT_Initialize();
   604  0002F2  ECF9  F001         	call	_INTERRUPT_Initialize	;wreg free
   605                           
   606                           ;Function.c: 130: TMR0_Initialize();
   607  0002F6  ECC4  F001         	call	_TMR0_Initialize	;wreg free
   608  0002FA  0012               	return		;funcret
   609  0002FC                     __end_of_Start:
   610                           	opt stack 0
   611                           tblptru	equ	0xFF8
   612                           tblptrh	equ	0xFF7
   613                           tblptrl	equ	0xFF6
   614                           tablat	equ	0xFF5
   615                           postinc0	equ	0xFEE
   616                           wreg	equ	0xFE8
   617                           status	equ	0xFD8
   618                           
   619 ;; *************** function _TMR0_Initialize *****************
   620 ;; Defined at:
   621 ;;		line 23 in file "tmr0.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, status,2, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   635 ;;      Params:         0       0       0       0       0       0       0
   636 ;;      Locals:         0       0       0       0       0       0       0
   637 ;;      Temps:          0       0       0       0       0       0       0
   638 ;;      Totals:         0       0       0       0       0       0       0
   639 ;;Total ram usage:        0 bytes
   640 ;; Hardware stack levels used:    1
   641 ;; Hardware stack levels required when called:    5
   642 ;; This function calls:
   643 ;;		_TMR0_StartTimer
   644 ;; This function is called by:
   645 ;;		_Start
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649                           	psect	text2
   650  000388                     __ptext2:
   651                           	opt stack 0
   652  000388                     _TMR0_Initialize:
   653                           	opt stack 24
   654                           
   655                           ;tmr0.c: 27: T0CON = 0x94;
   656                           
   657                           ;incstack = 0
   658  000388  0E94               	movlw	148
   659  00038A  6ED5               	movwf	4053,c	;volatile
   660                           
   661                           ;tmr0.c: 30: TMR0H = 0xCF;
   662  00038C  0ECF               	movlw	207
   663  00038E  6ED7               	movwf	4055,c	;volatile
   664                           
   665                           ;tmr0.c: 33: TMR0L = 0x2C;
   666  000390  0E2C               	movlw	44
   667  000392  6ED6               	movwf	4054,c	;volatile
   668                           
   669                           ;tmr0.c: 36: timer0ReloadVal16bit = 53036;
   670  000394  0ECF               	movlw	207
   671  000396  6E51               	movwf	_timer0ReloadVal16bit+1,c	;volatile
   672  000398  0E2C               	movlw	44
   673  00039A  6E50               	movwf	_timer0ReloadVal16bit,c	;volatile
   674                           
   675                           ;tmr0.c: 39: INTCONbits.TMR0IF = 0;
   676  00039C  94F2               	bcf	intcon,2,c	;volatile
   677                           
   678                           ;tmr0.c: 42: INTCONbits.TMR0IE = 1;
   679  00039E  8AF2               	bsf	intcon,5,c	;volatile
   680                           
   681                           ;tmr0.c: 45: TMR0_StartTimer();
   682  0003A0  EC14  F002         	call	_TMR0_StartTimer	;wreg free
   683  0003A4  0012               	return		;funcret
   684  0003A6                     __end_of_TMR0_Initialize:
   685                           	opt stack 0
   686                           tblptru	equ	0xFF8
   687                           tblptrh	equ	0xFF7
   688                           tblptrl	equ	0xFF6
   689                           tablat	equ	0xFF5
   690                           intcon	equ	0xFF2
   691                           postinc0	equ	0xFEE
   692                           wreg	equ	0xFE8
   693                           status	equ	0xFD8
   694                           
   695 ;; *************** function _TMR0_StartTimer *****************
   696 ;; Defined at:
   697 ;;		line 48 in file "tmr0.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;		None
   700 ;; Auto vars:     Size  Location     Type
   701 ;;		None
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		None
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   711 ;;      Params:         0       0       0       0       0       0       0
   712 ;;      Locals:         0       0       0       0       0       0       0
   713 ;;      Temps:          0       0       0       0       0       0       0
   714 ;;      Totals:         0       0       0       0       0       0       0
   715 ;;Total ram usage:        0 bytes
   716 ;; Hardware stack levels used:    1
   717 ;; Hardware stack levels required when called:    4
   718 ;; This function calls:
   719 ;;		Nothing
   720 ;; This function is called by:
   721 ;;		_TMR0_Initialize
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           	psect	text3
   726  000428                     __ptext3:
   727                           	opt stack 0
   728  000428                     _TMR0_StartTimer:
   729                           	opt stack 24
   730                           
   731                           ;tmr0.c: 50: T0CONbits.TMR0ON = 1;
   732                           
   733                           ;incstack = 0
   734  000428  8ED5               	bsf	4053,7,c	;volatile
   735  00042A  0012               	return		;funcret
   736  00042C                     __end_of_TMR0_StartTimer:
   737                           	opt stack 0
   738                           tblptru	equ	0xFF8
   739                           tblptrh	equ	0xFF7
   740                           tblptrl	equ	0xFF6
   741                           tablat	equ	0xFF5
   742                           intcon	equ	0xFF2
   743                           postinc0	equ	0xFEE
   744                           wreg	equ	0xFE8
   745                           status	equ	0xFD8
   746                           
   747 ;; *************** function _INTERRUPT_Initialize *****************
   748 ;; Defined at:
   749 ;;		line 133 in file "Function.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;		None
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		None
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   763 ;;      Params:         0       0       0       0       0       0       0
   764 ;;      Locals:         0       0       0       0       0       0       0
   765 ;;      Temps:          0       0       0       0       0       0       0
   766 ;;      Totals:         0       0       0       0       0       0       0
   767 ;;Total ram usage:        0 bytes
   768 ;; Hardware stack levels used:    1
   769 ;; Hardware stack levels required when called:    4
   770 ;; This function calls:
   771 ;;		Nothing
   772 ;; This function is called by:
   773 ;;		_Start
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           	psect	text4
   778  0003F2                     __ptext4:
   779                           	opt stack 0
   780  0003F2                     _INTERRUPT_Initialize:
   781                           	opt stack 25
   782                           
   783                           ;Function.c: 136: RCONbits.IPEN = 0;
   784                           
   785                           ;incstack = 0
   786  0003F2  9ED0               	bcf	4048,7,c	;volatile
   787                           
   788                           ;Function.c: 141: IPR1bits.RC1IP = 0;
   789  0003F4  9A9F               	bcf	3999,5,c	;volatile
   790                           
   791                           ;Function.c: 143: IPR1bits.TX1IP = 0;
   792  0003F6  989F               	bcf	3999,4,c	;volatile
   793                           
   794                           ;Function.c: 145: INTCON2bits.TMR0IP = 0;
   795  0003F8  94F1               	bcf	intcon2,2,c	;volatile
   796                           
   797                           ;Function.c: 147: IPR1bits.ADIP = 0;
   798  0003FA  9C9F               	bcf	3999,6,c	;volatile
   799                           
   800                           ;Function.c: 149: IPR1bits.SSP1IP = 0;
   801  0003FC  969F               	bcf	3999,3,c	;volatile
   802                           
   803                           ;Function.c: 151: IPR2bits.BCL1IP = 0;
   804  0003FE  96A2               	bcf	4002,3,c	;volatile
   805                           
   806                           ;Function.c: 152: IPR1bits.TMR2IP=0;
   807  000400  929F               	bcf	3999,1,c	;volatile
   808  000402  0012               	return		;funcret
   809  000404                     __end_of_INTERRUPT_Initialize:
   810                           	opt stack 0
   811                           tblptru	equ	0xFF8
   812                           tblptrh	equ	0xFF7
   813                           tblptrl	equ	0xFF6
   814                           tablat	equ	0xFF5
   815                           intcon	equ	0xFF2
   816                           intcon2	equ	0xFF1
   817                           postinc0	equ	0xFEE
   818                           wreg	equ	0xFE8
   819                           status	equ	0xFD8
   820                           
   821 ;; *************** function _SetTime *****************
   822 ;; Defined at:
   823 ;;		line 98 in file "tmr0.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;		None
   828 ;; Return value:  Size  Location     Type
   829 ;;                  1    wreg      void 
   830 ;; Registers used:
   831 ;;		wreg, status,2
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   837 ;;      Params:         0       0       0       0       0       0       0
   838 ;;      Locals:         0       0       0       0       0       0       0
   839 ;;      Temps:          0       0       0       0       0       0       0
   840 ;;      Totals:         0       0       0       0       0       0       0
   841 ;;Total ram usage:        0 bytes
   842 ;; Hardware stack levels used:    1
   843 ;; Hardware stack levels required when called:    4
   844 ;; This function calls:
   845 ;;		Nothing
   846 ;; This function is called by:
   847 ;;		_main
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851                           	psect	text5
   852  000404                     __ptext5:
   853                           	opt stack 0
   854  000404                     _SetTime:
   855                           	opt stack 26
   856                           
   857                           ;tmr0.c: 99: time = 0;
   858                           
   859                           ;incstack = 0
   860  000404  0E00               	movlw	0
   861  000406  6E01               	movwf	_time,c
   862  000408  0E00               	movlw	0
   863  00040A  6E02               	movwf	_time+1,c
   864  00040C  0E00               	movlw	0
   865  00040E  6E03               	movwf	_time+2,c
   866  000410  0E00               	movlw	0
   867  000412  6E04               	movwf	_time+3,c
   868  000414  0012               	return		;funcret
   869  000416                     __end_of_SetTime:
   870                           	opt stack 0
   871                           tblptru	equ	0xFF8
   872                           tblptrh	equ	0xFF7
   873                           tblptrl	equ	0xFF6
   874                           tablat	equ	0xFF5
   875                           intcon	equ	0xFF2
   876                           intcon2	equ	0xFF1
   877                           postinc0	equ	0xFEE
   878                           wreg	equ	0xFE8
   879                           status	equ	0xFD8
   880                           
   881 ;; *************** function _GetTime *****************
   882 ;; Defined at:
   883 ;;		line 94 in file "tmr0.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;		None
   886 ;; Auto vars:     Size  Location     Type
   887 ;;		None
   888 ;; Return value:  Size  Location     Type
   889 ;;                  4    0[BANK0 ] long 
   890 ;; Registers used:
   891 ;;		None
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   897 ;;      Params:         0       4       0       0       0       0       0
   898 ;;      Locals:         0       0       0       0       0       0       0
   899 ;;      Temps:          0       0       0       0       0       0       0
   900 ;;      Totals:         0       4       0       0       0       0       0
   901 ;;Total ram usage:        4 bytes
   902 ;; Hardware stack levels used:    1
   903 ;; Hardware stack levels required when called:    4
   904 ;; This function calls:
   905 ;;		Nothing
   906 ;; This function is called by:
   907 ;;		_main
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           	psect	text6
   912  000416                     __ptext6:
   913                           	opt stack 0
   914  000416                     _GetTime:
   915                           	opt stack 26
   916                           
   917                           ;tmr0.c: 95: return time;
   918                           
   919                           ;incstack = 0
   920  000416  C001  F06A         	movff	_time,?_GetTime
   921  00041A  C002  F06B         	movff	_time+1,?_GetTime+1
   922  00041E  C003  F06C         	movff	_time+2,?_GetTime+2
   923  000422  C004  F06D         	movff	_time+3,?_GetTime+3
   924  000426  0012               	return		;funcret
   925  000428                     __end_of_GetTime:
   926                           	opt stack 0
   927                           tblptru	equ	0xFF8
   928                           tblptrh	equ	0xFF7
   929                           tblptrl	equ	0xFF6
   930                           tablat	equ	0xFF5
   931                           intcon	equ	0xFF2
   932                           intcon2	equ	0xFF1
   933                           postinc0	equ	0xFEE
   934                           wreg	equ	0xFE8
   935                           status	equ	0xFD8
   936                           
   937 ;; *************** function _INTERRUPT_InterruptManager *****************
   938 ;; Defined at:
   939 ;;		line 156 in file "Function.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;		None
   942 ;; Auto vars:     Size  Location     Type
   943 ;;		None
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   953 ;;      Params:         0       0       0       0       0       0       0
   954 ;;      Locals:         0       0       0       0       0       0       0
   955 ;;      Temps:         14       0       0       0       0       0       0
   956 ;;      Totals:        14       0       0       0       0       0       0
   957 ;;Total ram usage:       14 bytes
   958 ;; Hardware stack levels used:    1
   959 ;; Hardware stack levels required when called:    3
   960 ;; This function calls:
   961 ;;		_EUSART1_Receive_ISR
   962 ;;		_EUSART1_Transmit_ISR
   963 ;;		_TMR0_ISR
   964 ;; This function is called by:
   965 ;;		Interrupt level 2
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           	psect	intcode
   970  000008                     __pintcode:
   971                           	opt stack 0
   972  000008                     _INTERRUPT_InterruptManager:
   973                           	opt stack 24
   974                           
   975                           ;incstack = 0
   976  000008  8253               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   977  00000A  CFFA F042          	movff	pclath,??_INTERRUPT_InterruptManager
   978  00000E  CFFB F043          	movff	pclatu,??_INTERRUPT_InterruptManager+1
   979  000012  CFE9 F044          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
   980  000016  CFEA F045          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
   981  00001A  CFE1 F046          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
   982  00001E  CFE2 F047          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
   983  000022  CFD9 F048          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
   984  000026  CFDA F049          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
   985  00002A  CFF3 F04A          	movff	prodl,??_INTERRUPT_InterruptManager+8
   986  00002E  CFF4 F04B          	movff	prodh,??_INTERRUPT_InterruptManager+9
   987  000032  CFF6 F04C          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
   988  000036  CFF7 F04D          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
   989  00003A  CFF8 F04E          	movff	tblptru,??_INTERRUPT_InterruptManager+12
   990  00003E  CFF5 F04F          	movff	tablat,??_INTERRUPT_InterruptManager+13
   991                           
   992                           ;Function.c: 159: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
   993  000042  BA9D               	btfsc	3997,5,c	;volatile
   994  000044  AA9E               	btfss	3998,5,c	;volatile
   995  000046  D003               	goto	i2l449
   996                           
   997                           ;Function.c: 160: {
   998                           ;Function.c: 161: EUSART1_Receive_ISR();
   999  000048  ECD3  F001         	call	_EUSART1_Receive_ISR	;wreg free
  1000                           
  1001                           ;Function.c: 162: }
  1002  00004C  D00B               	goto	i2l455
  1003  00004E                     i2l449:
  1004                           
  1005                           ;Function.c: 163: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  1006  00004E  B89D               	btfsc	3997,4,c	;volatile
  1007  000050  A89E               	btfss	3998,4,c	;volatile
  1008  000052  D003               	goto	i2l451
  1009                           
  1010                           ;Function.c: 164: {
  1011                           ;Function.c: 165: EUSART1_Transmit_ISR();
  1012  000054  EC7E  F001         	call	_EUSART1_Transmit_ISR	;wreg free
  1013                           
  1014                           ;Function.c: 166: }
  1015  000058  D005               	goto	i2l455
  1016  00005A                     i2l451:
  1017                           
  1018                           ;Function.c: 167: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  1019  00005A  BAF2               	btfsc	intcon,5,c	;volatile
  1020  00005C  A4F2               	btfss	intcon,2,c	;volatile
  1021  00005E  D002               	goto	i2l455
  1022                           
  1023                           ;Function.c: 168: {
  1024                           ;Function.c: 169: TMR0_ISR();
  1025  000060  ECE2  F001         	call	_TMR0_ISR	;wreg free
  1026  000064                     i2l455:
  1027  000064  C04F  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1028  000068  C04E  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1029  00006C  C04D  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1030  000070  C04C  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1031  000074  C04B  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1032  000078  C04A  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1033  00007C  C049  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1034  000080  C048  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1035  000084  C047  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1036  000088  C046  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1037  00008C  C045  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1038  000090  C044  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1039  000094  C043  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1040  000098  C042  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1041  00009C  9253               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1042  00009E  0011               	retfie		f
  1043  0000A0                     __end_of_INTERRUPT_InterruptManager:
  1044                           	opt stack 0
  1045                           pclatu	equ	0xFFB
  1046                           pclath	equ	0xFFA
  1047                           tblptru	equ	0xFF8
  1048                           tblptrh	equ	0xFF7
  1049                           tblptrl	equ	0xFF6
  1050                           tablat	equ	0xFF5
  1051                           prodh	equ	0xFF4
  1052                           prodl	equ	0xFF3
  1053                           intcon	equ	0xFF2
  1054                           intcon2	equ	0xFF1
  1055                           postinc0	equ	0xFEE
  1056                           fsr0h	equ	0xFEA
  1057                           fsr0l	equ	0xFE9
  1058                           wreg	equ	0xFE8
  1059                           fsr1h	equ	0xFE2
  1060                           fsr1l	equ	0xFE1
  1061                           fsr2h	equ	0xFDA
  1062                           fsr2l	equ	0xFD9
  1063                           status	equ	0xFD8
  1064                           
  1065 ;; *************** function _TMR0_ISR *****************
  1066 ;; Defined at:
  1067 ;;		line 82 in file "tmr0.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;		None
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;		None
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  1    wreg      void 
  1074 ;; Registers used:
  1075 ;;		wreg, status,2, status,0
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1081 ;;      Params:         0       0       0       0       0       0       0
  1082 ;;      Locals:         0       0       0       0       0       0       0
  1083 ;;      Temps:          0       0       0       0       0       0       0
  1084 ;;      Totals:         0       0       0       0       0       0       0
  1085 ;;Total ram usage:        0 bytes
  1086 ;; Hardware stack levels used:    1
  1087 ;; This function calls:
  1088 ;;		Nothing
  1089 ;; This function is called by:
  1090 ;;		_INTERRUPT_InterruptManager
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           	psect	text8
  1095  0003C4                     __ptext8:
  1096                           	opt stack 0
  1097  0003C4                     _TMR0_ISR:
  1098                           	opt stack 26
  1099                           
  1100                           ;tmr0.c: 85: TMR0H = timer0ReloadVal16bit >> 8;
  1101                           
  1102                           ;incstack = 0
  1103  0003C4  5051               	movf	_timer0ReloadVal16bit+1,w,c	;volatile
  1104  0003C6  6ED7               	movwf	4055,c	;volatile
  1105                           
  1106                           ;tmr0.c: 86: TMR0L = (uint8_t) timer0ReloadVal16bit;
  1107  0003C8  C050  FFD6         	movff	_timer0ReloadVal16bit,4054	;volatile
  1108                           
  1109                           ;tmr0.c: 88: time++;
  1110  0003CC  0E01               	movlw	1
  1111  0003CE  2601               	addwf	_time,f,c
  1112  0003D0  0E00               	movlw	0
  1113  0003D2  2202               	addwfc	_time+1,f,c
  1114  0003D4  2203               	addwfc	_time+2,f,c
  1115  0003D6  2204               	addwfc	_time+3,f,c
  1116                           
  1117                           ;tmr0.c: 91: INTCONbits.TMR0IF = 0;
  1118  0003D8  94F2               	bcf	intcon,2,c	;volatile
  1119  0003DA  0012               	return		;funcret
  1120  0003DC                     __end_of_TMR0_ISR:
  1121                           	opt stack 0
  1122                           pclatu	equ	0xFFB
  1123                           pclath	equ	0xFFA
  1124                           tblptru	equ	0xFF8
  1125                           tblptrh	equ	0xFF7
  1126                           tblptrl	equ	0xFF6
  1127                           tablat	equ	0xFF5
  1128                           prodh	equ	0xFF4
  1129                           prodl	equ	0xFF3
  1130                           intcon	equ	0xFF2
  1131                           intcon2	equ	0xFF1
  1132                           postinc0	equ	0xFEE
  1133                           fsr0h	equ	0xFEA
  1134                           fsr0l	equ	0xFE9
  1135                           wreg	equ	0xFE8
  1136                           fsr1h	equ	0xFE2
  1137                           fsr1l	equ	0xFE1
  1138                           fsr2h	equ	0xFDA
  1139                           fsr2l	equ	0xFD9
  1140                           status	equ	0xFD8
  1141                           
  1142 ;; *************** function _EUSART1_Transmit_ISR *****************
  1143 ;; Defined at:
  1144 ;;		line 150 in file "UART.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;		None
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;		None
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1158 ;;      Params:         0       0       0       0       0       0       0
  1159 ;;      Locals:         0       0       0       0       0       0       0
  1160 ;;      Temps:          0       0       0       0       0       0       0
  1161 ;;      Totals:         0       0       0       0       0       0       0
  1162 ;;Total ram usage:        0 bytes
  1163 ;; Hardware stack levels used:    1
  1164 ;; Hardware stack levels required when called:    2
  1165 ;; This function calls:
  1166 ;;		_UART_buff_get
  1167 ;;		_UART_buff_size
  1168 ;; This function is called by:
  1169 ;;		_INTERRUPT_InterruptManager
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           	psect	text9
  1174  0002FC                     __ptext9:
  1175                           	opt stack 0
  1176  0002FC                     _EUSART1_Transmit_ISR:
  1177                           	opt stack 24
  1178                           
  1179                           ;UART.c: 152: if (UART_buff_size(&output_buffer) > 0) {
  1180                           
  1181                           ;incstack = 0
  1182  0002FC  0E00               	movlw	low _output_buffer
  1183  0002FE  6E36               	movwf	UART_buff_size@_this,c
  1184  000300  0E04               	movlw	high _output_buffer
  1185  000302  6E37               	movwf	UART_buff_size@_this+1,c
  1186  000304  ECEE  F001         	call	_UART_buff_size	;wreg free
  1187  000308  BE37               	btfsc	?_UART_buff_size+1,7,c
  1188  00030A  D00D               	goto	i2l1781
  1189  00030C  5037               	movf	?_UART_buff_size+1,w,c
  1190  00030E  E103               	bnz	i2u132_40
  1191  000310  0436               	decf	?_UART_buff_size,w,c
  1192  000312  A0D8               	btfss	status,0,c
  1193  000314  D008               	goto	i2l1781
  1194  000316                     i2u132_40:
  1195                           
  1196                           ;UART.c: 153: TXREG1 = UART_buff_get(&output_buffer);
  1197  000316  0E00               	movlw	low _output_buffer
  1198  000318  6E3C               	movwf	UART_buff_get@_this,c
  1199  00031A  0E04               	movlw	high _output_buffer
  1200  00031C  6E3D               	movwf	UART_buff_get@_this+1,c
  1201  00031E  ECDF  F000         	call	_UART_buff_get	;wreg free
  1202  000322  6EAD               	movwf	4013,c	;volatile
  1203                           
  1204                           ;UART.c: 154: } else {
  1205  000324  0012               	return	
  1206  000326                     i2l1781:
  1207                           
  1208                           ;UART.c: 155: Transmit_stall = 1;
  1209  000326  0E01               	movlw	1
  1210  000328  6E52               	movwf	_Transmit_stall,c
  1211                           
  1212                           ;UART.c: 156: PIE1bits.TX1IE = 0;
  1213  00032A  989D               	bcf	3997,4,c	;volatile
  1214  00032C  0012               	return	
  1215  00032E                     __end_of_EUSART1_Transmit_ISR:
  1216                           	opt stack 0
  1217                           pclatu	equ	0xFFB
  1218                           pclath	equ	0xFFA
  1219                           tblptru	equ	0xFF8
  1220                           tblptrh	equ	0xFF7
  1221                           tblptrl	equ	0xFF6
  1222                           tablat	equ	0xFF5
  1223                           prodh	equ	0xFF4
  1224                           prodl	equ	0xFF3
  1225                           intcon	equ	0xFF2
  1226                           intcon2	equ	0xFF1
  1227                           postinc0	equ	0xFEE
  1228                           fsr0h	equ	0xFEA
  1229                           fsr0l	equ	0xFE9
  1230                           wreg	equ	0xFE8
  1231                           fsr1h	equ	0xFE2
  1232                           fsr1l	equ	0xFE1
  1233                           fsr2h	equ	0xFDA
  1234                           fsr2l	equ	0xFD9
  1235                           status	equ	0xFD8
  1236                           
  1237 ;; *************** function _UART_buff_size *****************
  1238 ;; Defined at:
  1239 ;;		line 102 in file "UART.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;  _this           2    0[COMRAM] PTR struct UART_ring_buf
  1242 ;;		 -> output_buffer(206), input_buffer(206), 
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;		None
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  2    0[COMRAM] int 
  1247 ;; Registers used:
  1248 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1254 ;;      Params:         2       0       0       0       0       0       0
  1255 ;;      Locals:         0       0       0       0       0       0       0
  1256 ;;      Temps:          0       0       0       0       0       0       0
  1257 ;;      Totals:         2       0       0       0       0       0       0
  1258 ;;Total ram usage:        2 bytes
  1259 ;; Hardware stack levels used:    1
  1260 ;; This function calls:
  1261 ;;		Nothing
  1262 ;; This function is called by:
  1263 ;;		_EUSART1_Transmit_ISR
  1264 ;;		_Receive_available
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           	psect	text10
  1269  0003DC                     __ptext10:
  1270                           	opt stack 0
  1271  0003DC                     _UART_buff_size:
  1272                           	opt stack 25
  1273                           
  1274                           ;UART.c: 103: return (_this->count);
  1275                           
  1276                           ;incstack = 0
  1277  0003DC  EE20 F0CC          	lfsr	2,204
  1278  0003E0  5036               	movf	UART_buff_size@_this,w,c
  1279  0003E2  26D9               	addwf	fsr2l,f,c
  1280  0003E4  5037               	movf	UART_buff_size@_this+1,w,c
  1281  0003E6  22DA               	addwfc	fsr2h,f,c
  1282  0003E8  CFDE F036          	movff	postinc2,?_UART_buff_size
  1283  0003EC  CFDD F037          	movff	postdec2,?_UART_buff_size+1
  1284  0003F0  0012               	return	
  1285  0003F2                     __end_of_UART_buff_size:
  1286                           	opt stack 0
  1287                           pclatu	equ	0xFFB
  1288                           pclath	equ	0xFFA
  1289                           tblptru	equ	0xFF8
  1290                           tblptrh	equ	0xFF7
  1291                           tblptrl	equ	0xFF6
  1292                           tablat	equ	0xFF5
  1293                           prodh	equ	0xFF4
  1294                           prodl	equ	0xFF3
  1295                           intcon	equ	0xFF2
  1296                           intcon2	equ	0xFF1
  1297                           postinc0	equ	0xFEE
  1298                           fsr0h	equ	0xFEA
  1299                           fsr0l	equ	0xFE9
  1300                           wreg	equ	0xFE8
  1301                           fsr1h	equ	0xFE2
  1302                           fsr1l	equ	0xFE1
  1303                           postinc2	equ	0xFDE
  1304                           postdec2	equ	0xFDD
  1305                           fsr2h	equ	0xFDA
  1306                           fsr2l	equ	0xFD9
  1307                           status	equ	0xFD8
  1308                           
  1309 ;; *************** function _UART_buff_get *****************
  1310 ;; Defined at:
  1311 ;;		line 81 in file "UART.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
  1314 ;;		 -> output_buffer(206), input_buffer(206), 
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;  c               1   10[COMRAM] unsigned char 
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  1    wreg      unsigned char 
  1319 ;; Registers used:
  1320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1326 ;;      Params:         2       0       0       0       0       0       0
  1327 ;;      Locals:         1       0       0       0       0       0       0
  1328 ;;      Temps:          2       0       0       0       0       0       0
  1329 ;;      Totals:         5       0       0       0       0       0       0
  1330 ;;Total ram usage:        5 bytes
  1331 ;; Hardware stack levels used:    1
  1332 ;; Hardware stack levels required when called:    1
  1333 ;; This function calls:
  1334 ;;		_UART_buff_modulo_inc
  1335 ;; This function is called by:
  1336 ;;		_EUSART1_Transmit_ISR
  1337 ;;		_Receive_get
  1338 ;;		_Send_put
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text11
  1343  0001BE                     __ptext11:
  1344                           	opt stack 0
  1345  0001BE                     _UART_buff_get:
  1346                           	opt stack 24
  1347                           
  1348                           ;UART.c: 82: unsigned char c;
  1349                           ;UART.c: 83: if (_this->count > 0) {
  1350                           
  1351                           ;incstack = 0
  1352  0001BE  EE20 F0CC          	lfsr	2,204
  1353  0001C2  503C               	movf	UART_buff_get@_this,w,c
  1354  0001C4  26D9               	addwf	fsr2l,f,c
  1355  0001C6  503D               	movf	UART_buff_get@_this+1,w,c
  1356  0001C8  22DA               	addwfc	fsr2h,f,c
  1357  0001CA  0E01               	movlw	1
  1358  0001CC  BEDB               	btfsc	plusw2,7,c
  1359  0001CE  D03C               	goto	i2l1681
  1360  0001D0  0E01               	movlw	1
  1361  0001D2  50DB               	movf	plusw2,w,c
  1362  0001D4  E103               	bnz	i2u121_40
  1363  0001D6  04DE               	decf	postinc2,w,c
  1364  0001D8  A0D8               	btfss	status,0,c
  1365  0001DA  D036               	goto	i2l1681
  1366  0001DC                     i2u121_40:
  1367                           
  1368                           ;UART.c: 84: c = _this->buf[_this->tail];
  1369  0001DC  EE20 F0CA          	lfsr	2,202
  1370  0001E0  503C               	movf	UART_buff_get@_this,w,c
  1371  0001E2  26D9               	addwf	fsr2l,f,c
  1372  0001E4  503D               	movf	UART_buff_get@_this+1,w,c
  1373  0001E6  22DA               	addwfc	fsr2h,f,c
  1374  0001E8  CFDE F03E          	movff	postinc2,??_UART_buff_get
  1375  0001EC  CFDD F03F          	movff	postdec2,??_UART_buff_get+1
  1376  0001F0  503E               	movf	??_UART_buff_get,w,c
  1377  0001F2  243C               	addwf	UART_buff_get@_this,w,c
  1378  0001F4  6ED9               	movwf	fsr2l,c
  1379  0001F6  503F               	movf	??_UART_buff_get+1,w,c
  1380  0001F8  203D               	addwfc	UART_buff_get@_this+1,w,c
  1381  0001FA  6EDA               	movwf	fsr2h,c
  1382  0001FC  50DF               	movf	indf2,w,c
  1383  0001FE  6E40               	movwf	UART_buff_get@c,c
  1384                           
  1385                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  1386  000200  EE20 F0CA          	lfsr	2,202
  1387  000204  503C               	movf	UART_buff_get@_this,w,c
  1388  000206  26D9               	addwf	fsr2l,f,c
  1389  000208  503D               	movf	UART_buff_get@_this+1,w,c
  1390  00020A  22DA               	addwfc	fsr2h,f,c
  1391  00020C  CFDE F036          	movff	postinc2,UART_buff_modulo_inc@value
  1392  000210  CFDD F037          	movff	postdec2,UART_buff_modulo_inc@value+1
  1393  000214  0E00               	movlw	0
  1394  000216  6E39               	movwf	UART_buff_modulo_inc@modulus+1,c
  1395  000218  0EC8               	movlw	200
  1396  00021A  6E38               	movwf	UART_buff_modulo_inc@modulus,c
  1397  00021C  ECAF  F001         	call	_UART_buff_modulo_inc	;wreg free
  1398  000220  EE20 F0CA          	lfsr	2,202
  1399  000224  503C               	movf	UART_buff_get@_this,w,c
  1400  000226  26D9               	addwf	fsr2l,f,c
  1401  000228  503D               	movf	UART_buff_get@_this+1,w,c
  1402  00022A  22DA               	addwfc	fsr2h,f,c
  1403  00022C  C036  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  1404  000230  C037  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  1405                           
  1406                           ;UART.c: 86: --_this->count;
  1407  000234  EE20 F0CC          	lfsr	2,204
  1408  000238  503C               	movf	UART_buff_get@_this,w,c
  1409  00023A  26D9               	addwf	fsr2l,f,c
  1410  00023C  503D               	movf	UART_buff_get@_this+1,w,c
  1411  00023E  22DA               	addwfc	fsr2h,f,c
  1412  000240  06DE               	decf	postinc2,f,c
  1413  000242  0E00               	movlw	0
  1414  000244  5ADD               	subwfb	postdec2,f,c
  1415                           
  1416                           ;UART.c: 87: } else {
  1417  000246  D002               	goto	i2l286
  1418  000248                     i2l1681:
  1419                           
  1420                           ;UART.c: 88: c = 0;
  1421  000248  0E00               	movlw	0
  1422  00024A  6E40               	movwf	UART_buff_get@c,c
  1423  00024C                     i2l286:
  1424                           
  1425                           ;UART.c: 89: }
  1426                           ;UART.c: 90: return (c);
  1427  00024C  5040               	movf	UART_buff_get@c,w,c
  1428  00024E  0012               	return	
  1429  000250                     __end_of_UART_buff_get:
  1430                           	opt stack 0
  1431                           pclatu	equ	0xFFB
  1432                           pclath	equ	0xFFA
  1433                           tblptru	equ	0xFF8
  1434                           tblptrh	equ	0xFF7
  1435                           tblptrl	equ	0xFF6
  1436                           tablat	equ	0xFF5
  1437                           prodh	equ	0xFF4
  1438                           prodl	equ	0xFF3
  1439                           intcon	equ	0xFF2
  1440                           intcon2	equ	0xFF1
  1441                           postinc0	equ	0xFEE
  1442                           fsr0h	equ	0xFEA
  1443                           fsr0l	equ	0xFE9
  1444                           wreg	equ	0xFE8
  1445                           fsr1h	equ	0xFE2
  1446                           fsr1l	equ	0xFE1
  1447                           indf2	equ	0xFDF
  1448                           postinc2	equ	0xFDE
  1449                           postdec2	equ	0xFDD
  1450                           plusw2	equ	0xFDB
  1451                           fsr2h	equ	0xFDA
  1452                           fsr2l	equ	0xFD9
  1453                           status	equ	0xFD8
  1454                           
  1455 ;; *************** function _EUSART1_Receive_ISR *****************
  1456 ;; Defined at:
  1457 ;;		line 139 in file "UART.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;		None
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;  data            1   11[COMRAM] unsigned char 
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      void 
  1464 ;; Registers used:
  1465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1471 ;;      Params:         0       0       0       0       0       0       0
  1472 ;;      Locals:         1       0       0       0       0       0       0
  1473 ;;      Temps:          0       0       0       0       0       0       0
  1474 ;;      Totals:         1       0       0       0       0       0       0
  1475 ;;Total ram usage:        1 bytes
  1476 ;; Hardware stack levels used:    1
  1477 ;; Hardware stack levels required when called:    2
  1478 ;; This function calls:
  1479 ;;		_UART_buff_put
  1480 ;; This function is called by:
  1481 ;;		_INTERRUPT_InterruptManager
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           	psect	text12
  1486  0003A6                     __ptext12:
  1487                           	opt stack 0
  1488  0003A6                     _EUSART1_Receive_ISR:
  1489                           	opt stack 24
  1490                           
  1491                           ;UART.c: 140: if (1 == RC1STAbits.OERR) {
  1492                           
  1493                           ;incstack = 0
  1494  0003A6  A2AB               	btfss	4011,1,c	;volatile
  1495  0003A8  D002               	goto	i2l317
  1496                           
  1497                           ;UART.c: 143: RC1STAbits.CREN = 0;
  1498  0003AA  98AB               	bcf	4011,4,c	;volatile
  1499                           
  1500                           ;UART.c: 144: RC1STAbits.CREN = 1;
  1501  0003AC  88AB               	bsf	4011,4,c	;volatile
  1502  0003AE                     i2l317:
  1503                           
  1504                           ;UART.c: 145: }
  1505                           ;UART.c: 146: unsigned char data = RCREG1;
  1506  0003AE  CFAE F041          	movff	4014,EUSART1_Receive_ISR@data	;volatile
  1507                           
  1508                           ;UART.c: 147: UART_buff_put(&input_buffer, data);
  1509  0003B2  0E00               	movlw	low _input_buffer
  1510  0003B4  6E3C               	movwf	UART_buff_put@_this,c
  1511  0003B6  0E03               	movlw	high _input_buffer
  1512  0003B8  6E3D               	movwf	UART_buff_put@_this+1,c
  1513  0003BA  C041  F03E         	movff	EUSART1_Receive_ISR@data,UART_buff_put@c
  1514  0003BE  EC52  F000         	call	_UART_buff_put	;wreg free
  1515  0003C2  0012               	return		;funcret
  1516  0003C4                     __end_of_EUSART1_Receive_ISR:
  1517                           	opt stack 0
  1518                           pclatu	equ	0xFFB
  1519                           pclath	equ	0xFFA
  1520                           tblptru	equ	0xFF8
  1521                           tblptrh	equ	0xFF7
  1522                           tblptrl	equ	0xFF6
  1523                           tablat	equ	0xFF5
  1524                           prodh	equ	0xFF4
  1525                           prodl	equ	0xFF3
  1526                           intcon	equ	0xFF2
  1527                           intcon2	equ	0xFF1
  1528                           postinc0	equ	0xFEE
  1529                           fsr0h	equ	0xFEA
  1530                           fsr0l	equ	0xFE9
  1531                           wreg	equ	0xFE8
  1532                           fsr1h	equ	0xFE2
  1533                           fsr1l	equ	0xFE1
  1534                           indf2	equ	0xFDF
  1535                           postinc2	equ	0xFDE
  1536                           postdec2	equ	0xFDD
  1537                           plusw2	equ	0xFDB
  1538                           fsr2h	equ	0xFDA
  1539                           fsr2l	equ	0xFD9
  1540                           status	equ	0xFD8
  1541                           
  1542 ;; *************** function _UART_buff_put *****************
  1543 ;; Defined at:
  1544 ;;		line 68 in file "UART.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
  1547 ;;		 -> output_buffer(206), input_buffer(206), 
  1548 ;;  c               1    8[COMRAM] const unsigned char 
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;		None
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  1    wreg      void 
  1553 ;; Registers used:
  1554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1560 ;;      Params:         3       0       0       0       0       0       0
  1561 ;;      Locals:         0       0       0       0       0       0       0
  1562 ;;      Temps:          2       0       0       0       0       0       0
  1563 ;;      Totals:         5       0       0       0       0       0       0
  1564 ;;Total ram usage:        5 bytes
  1565 ;; Hardware stack levels used:    1
  1566 ;; Hardware stack levels required when called:    1
  1567 ;; This function calls:
  1568 ;;		_UART_buff_modulo_inc
  1569 ;; This function is called by:
  1570 ;;		_EUSART1_Receive_ISR
  1571 ;;		_Send_put
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           	psect	text13
  1576  0000A4                     __ptext13:
  1577                           	opt stack 0
  1578  0000A4                     _UART_buff_put:
  1579                           	opt stack 24
  1580                           
  1581                           ;UART.c: 69: if (_this->count < 200) {
  1582                           
  1583                           ;incstack = 0
  1584  0000A4  EE20 F0CC          	lfsr	2,204
  1585  0000A8  503C               	movf	UART_buff_put@_this,w,c
  1586  0000AA  26D9               	addwf	fsr2l,f,c
  1587  0000AC  503D               	movf	UART_buff_put@_this+1,w,c
  1588  0000AE  22DA               	addwfc	fsr2h,f,c
  1589  0000B0  0E01               	movlw	1
  1590  0000B2  BEDB               	btfsc	plusw2,7,c
  1591  0000B4  D007               	goto	i2l1661
  1592  0000B6  0E01               	movlw	1
  1593  0000B8  50DB               	movf	plusw2,w,c
  1594  0000BA  E13A               	bnz	i2l1667
  1595  0000BC  0EC8               	movlw	200
  1596  0000BE  5CDE               	subwf	postinc2,w,c
  1597  0000C0  B0D8               	btfsc	status,0,c
  1598  0000C2  D036               	goto	i2l1667
  1599  0000C4                     i2l1661:
  1600                           
  1601                           ;UART.c: 70: _this->buf[_this->head] = c;
  1602  0000C4  EE20 F0C8          	lfsr	2,200
  1603  0000C8  503C               	movf	UART_buff_put@_this,w,c
  1604  0000CA  26D9               	addwf	fsr2l,f,c
  1605  0000CC  503D               	movf	UART_buff_put@_this+1,w,c
  1606  0000CE  22DA               	addwfc	fsr2h,f,c
  1607  0000D0  CFDE F03F          	movff	postinc2,??_UART_buff_put
  1608  0000D4  CFDD F040          	movff	postdec2,??_UART_buff_put+1
  1609  0000D8  503F               	movf	??_UART_buff_put,w,c
  1610  0000DA  243C               	addwf	UART_buff_put@_this,w,c
  1611  0000DC  6ED9               	movwf	fsr2l,c
  1612  0000DE  5040               	movf	??_UART_buff_put+1,w,c
  1613  0000E0  203D               	addwfc	UART_buff_put@_this+1,w,c
  1614  0000E2  6EDA               	movwf	fsr2h,c
  1615  0000E4  C03E  FFDF         	movff	UART_buff_put@c,indf2
  1616                           
  1617                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
  1618  0000E8  EE20 F0C8          	lfsr	2,200
  1619  0000EC  503C               	movf	UART_buff_put@_this,w,c
  1620  0000EE  26D9               	addwf	fsr2l,f,c
  1621  0000F0  503D               	movf	UART_buff_put@_this+1,w,c
  1622  0000F2  22DA               	addwfc	fsr2h,f,c
  1623  0000F4  CFDE F036          	movff	postinc2,UART_buff_modulo_inc@value
  1624  0000F8  CFDD F037          	movff	postdec2,UART_buff_modulo_inc@value+1
  1625  0000FC  0E00               	movlw	0
  1626  0000FE  6E39               	movwf	UART_buff_modulo_inc@modulus+1,c
  1627  000100  0EC8               	movlw	200
  1628  000102  6E38               	movwf	UART_buff_modulo_inc@modulus,c
  1629  000104  ECAF  F001         	call	_UART_buff_modulo_inc	;wreg free
  1630  000108  EE20 F0C8          	lfsr	2,200
  1631  00010C  503C               	movf	UART_buff_put@_this,w,c
  1632  00010E  26D9               	addwf	fsr2l,f,c
  1633  000110  503D               	movf	UART_buff_put@_this+1,w,c
  1634  000112  22DA               	addwfc	fsr2h,f,c
  1635  000114  C036  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  1636  000118  C037  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  1637                           
  1638                           ;UART.c: 72: ++_this->count;
  1639  00011C  EE20 F0CC          	lfsr	2,204
  1640  000120  503C               	movf	UART_buff_put@_this,w,c
  1641  000122  26D9               	addwf	fsr2l,f,c
  1642  000124  503D               	movf	UART_buff_put@_this+1,w,c
  1643  000126  22DA               	addwfc	fsr2h,f,c
  1644  000128  2ADE               	incf	postinc2,f,c
  1645  00012A  0E00               	movlw	0
  1646  00012C  22DD               	addwfc	postdec2,f,c
  1647                           
  1648                           ;UART.c: 73: } else {
  1649  00012E  0012               	return	
  1650  000130                     i2l1667:
  1651                           
  1652                           ;UART.c: 74: _this->buf[_this->head] = c;
  1653  000130  EE20 F0C8          	lfsr	2,200
  1654  000134  503C               	movf	UART_buff_put@_this,w,c
  1655  000136  26D9               	addwf	fsr2l,f,c
  1656  000138  503D               	movf	UART_buff_put@_this+1,w,c
  1657  00013A  22DA               	addwfc	fsr2h,f,c
  1658  00013C  CFDE F03F          	movff	postinc2,??_UART_buff_put
  1659  000140  CFDD F040          	movff	postdec2,??_UART_buff_put+1
  1660  000144  503F               	movf	??_UART_buff_put,w,c
  1661  000146  243C               	addwf	UART_buff_put@_this,w,c
  1662  000148  6ED9               	movwf	fsr2l,c
  1663  00014A  5040               	movf	??_UART_buff_put+1,w,c
  1664  00014C  203D               	addwfc	UART_buff_put@_this+1,w,c
  1665  00014E  6EDA               	movwf	fsr2h,c
  1666  000150  C03E  FFDF         	movff	UART_buff_put@c,indf2
  1667                           
  1668                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
  1669  000154  EE20 F0C8          	lfsr	2,200
  1670  000158  503C               	movf	UART_buff_put@_this,w,c
  1671  00015A  26D9               	addwf	fsr2l,f,c
  1672  00015C  503D               	movf	UART_buff_put@_this+1,w,c
  1673  00015E  22DA               	addwfc	fsr2h,f,c
  1674  000160  CFDE F036          	movff	postinc2,UART_buff_modulo_inc@value
  1675  000164  CFDD F037          	movff	postdec2,UART_buff_modulo_inc@value+1
  1676  000168  0E00               	movlw	0
  1677  00016A  6E39               	movwf	UART_buff_modulo_inc@modulus+1,c
  1678  00016C  0EC8               	movlw	200
  1679  00016E  6E38               	movwf	UART_buff_modulo_inc@modulus,c
  1680  000170  ECAF  F001         	call	_UART_buff_modulo_inc	;wreg free
  1681  000174  EE20 F0C8          	lfsr	2,200
  1682  000178  503C               	movf	UART_buff_put@_this,w,c
  1683  00017A  26D9               	addwf	fsr2l,f,c
  1684  00017C  503D               	movf	UART_buff_put@_this+1,w,c
  1685  00017E  22DA               	addwfc	fsr2h,f,c
  1686  000180  C036  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  1687  000184  C037  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  1688                           
  1689                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  1690  000188  EE20 F0CA          	lfsr	2,202
  1691  00018C  503C               	movf	UART_buff_put@_this,w,c
  1692  00018E  26D9               	addwf	fsr2l,f,c
  1693  000190  503D               	movf	UART_buff_put@_this+1,w,c
  1694  000192  22DA               	addwfc	fsr2h,f,c
  1695  000194  CFDE F036          	movff	postinc2,UART_buff_modulo_inc@value
  1696  000198  CFDD F037          	movff	postdec2,UART_buff_modulo_inc@value+1
  1697  00019C  0E00               	movlw	0
  1698  00019E  6E39               	movwf	UART_buff_modulo_inc@modulus+1,c
  1699  0001A0  0EC8               	movlw	200
  1700  0001A2  6E38               	movwf	UART_buff_modulo_inc@modulus,c
  1701  0001A4  ECAF  F001         	call	_UART_buff_modulo_inc	;wreg free
  1702  0001A8  EE20 F0CA          	lfsr	2,202
  1703  0001AC  503C               	movf	UART_buff_put@_this,w,c
  1704  0001AE  26D9               	addwf	fsr2l,f,c
  1705  0001B0  503D               	movf	UART_buff_put@_this+1,w,c
  1706  0001B2  22DA               	addwfc	fsr2h,f,c
  1707  0001B4  C036  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  1708  0001B8  C037  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  1709  0001BC  0012               	return	
  1710  0001BE                     __end_of_UART_buff_put:
  1711                           	opt stack 0
  1712                           pclatu	equ	0xFFB
  1713                           pclath	equ	0xFFA
  1714                           tblptru	equ	0xFF8
  1715                           tblptrh	equ	0xFF7
  1716                           tblptrl	equ	0xFF6
  1717                           tablat	equ	0xFF5
  1718                           prodh	equ	0xFF4
  1719                           prodl	equ	0xFF3
  1720                           intcon	equ	0xFF2
  1721                           intcon2	equ	0xFF1
  1722                           postinc0	equ	0xFEE
  1723                           fsr0h	equ	0xFEA
  1724                           fsr0l	equ	0xFE9
  1725                           wreg	equ	0xFE8
  1726                           fsr1h	equ	0xFE2
  1727                           fsr1l	equ	0xFE1
  1728                           indf2	equ	0xFDF
  1729                           postinc2	equ	0xFDE
  1730                           postdec2	equ	0xFDD
  1731                           plusw2	equ	0xFDB
  1732                           fsr2h	equ	0xFDA
  1733                           fsr2l	equ	0xFD9
  1734                           status	equ	0xFD8
  1735                           
  1736 ;; *************** function _UART_buff_modulo_inc *****************
  1737 ;; Defined at:
  1738 ;;		line 106 in file "UART.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;  value           2    0[COMRAM] const unsigned int 
  1741 ;;  modulus         2    2[COMRAM] const unsigned int 
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;  my_value        2    4[COMRAM] unsigned int 
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  2    0[COMRAM] unsigned int 
  1746 ;; Registers used:
  1747 ;;		wreg, status,2, status,0
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1753 ;;      Params:         4       0       0       0       0       0       0
  1754 ;;      Locals:         2       0       0       0       0       0       0
  1755 ;;      Temps:          0       0       0       0       0       0       0
  1756 ;;      Totals:         6       0       0       0       0       0       0
  1757 ;;Total ram usage:        6 bytes
  1758 ;; Hardware stack levels used:    1
  1759 ;; This function calls:
  1760 ;;		Nothing
  1761 ;; This function is called by:
  1762 ;;		_UART_buff_put
  1763 ;;		_UART_buff_get
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           	psect	text14
  1768  00035E                     __ptext14:
  1769                           	opt stack 0
  1770  00035E                     _UART_buff_modulo_inc:
  1771                           	opt stack 24
  1772                           
  1773                           ;UART.c: 107: unsigned int my_value = value + 1;
  1774                           
  1775                           ;incstack = 0
  1776  00035E  0E01               	movlw	1
  1777  000360  2436               	addwf	UART_buff_modulo_inc@value,w,c
  1778  000362  6E3A               	movwf	UART_buff_modulo_inc@my_value,c
  1779  000364  0E00               	movlw	0
  1780  000366  2037               	addwfc	UART_buff_modulo_inc@value+1,w,c
  1781  000368  6E3B               	movwf	UART_buff_modulo_inc@my_value+1,c
  1782                           
  1783                           ;UART.c: 108: if (my_value >= modulus) {
  1784  00036A  5038               	movf	UART_buff_modulo_inc@modulus,w,c
  1785  00036C  5C3A               	subwf	UART_buff_modulo_inc@my_value,w,c
  1786  00036E  5039               	movf	UART_buff_modulo_inc@modulus+1,w,c
  1787  000370  583B               	subwfb	UART_buff_modulo_inc@my_value+1,w,c
  1788  000372  A0D8               	btfss	status,0,c
  1789  000374  D004               	goto	i2l1655
  1790                           
  1791                           ;UART.c: 109: my_value = 0;
  1792  000376  0E00               	movlw	0
  1793  000378  6E3B               	movwf	UART_buff_modulo_inc@my_value+1,c
  1794  00037A  0E00               	movlw	0
  1795  00037C  6E3A               	movwf	UART_buff_modulo_inc@my_value,c
  1796  00037E                     i2l1655:
  1797                           
  1798                           ;UART.c: 110: }
  1799                           ;UART.c: 111: return (my_value);
  1800  00037E  C03A  F036         	movff	UART_buff_modulo_inc@my_value,?_UART_buff_modulo_inc
  1801  000382  C03B  F037         	movff	UART_buff_modulo_inc@my_value+1,?_UART_buff_modulo_inc+1
  1802  000386  0012               	return	
  1803  000388                     __end_of_UART_buff_modulo_inc:
  1804                           	opt stack 0
  1805  0000                     pclatu	equ	0xFFB
  1806                           pclath	equ	0xFFA
  1807                           tblptru	equ	0xFF8
  1808                           tblptrh	equ	0xFF7
  1809                           tblptrl	equ	0xFF6
  1810                           tablat	equ	0xFF5
  1811                           prodh	equ	0xFF4
  1812                           prodl	equ	0xFF3
  1813                           intcon	equ	0xFF2
  1814                           intcon2	equ	0xFF1
  1815                           postinc0	equ	0xFEE
  1816                           fsr0h	equ	0xFEA
  1817                           fsr0l	equ	0xFE9
  1818                           wreg	equ	0xFE8
  1819                           fsr1h	equ	0xFE2
  1820                           fsr1l	equ	0xFE1
  1821                           indf2	equ	0xFDF
  1822                           postinc2	equ	0xFDE
  1823                           postdec2	equ	0xFDD
  1824                           plusw2	equ	0xFDB
  1825                           fsr2h	equ	0xFDA
  1826                           fsr2l	equ	0xFD9
  1827                           status	equ	0xFD8
  1828                           pclatu	equ	0xFFB
  1829                           pclath	equ	0xFFA
  1830                           tblptru	equ	0xFF8
  1831                           tblptrh	equ	0xFF7
  1832                           tblptrl	equ	0xFF6
  1833                           tablat	equ	0xFF5
  1834                           prodh	equ	0xFF4
  1835                           prodl	equ	0xFF3
  1836                           intcon	equ	0xFF2
  1837                           intcon2	equ	0xFF1
  1838                           postinc0	equ	0xFEE
  1839                           fsr0h	equ	0xFEA
  1840                           fsr0l	equ	0xFE9
  1841                           wreg	equ	0xFE8
  1842                           fsr1h	equ	0xFE2
  1843                           fsr1l	equ	0xFE1
  1844                           indf2	equ	0xFDF
  1845                           postinc2	equ	0xFDE
  1846                           postdec2	equ	0xFDD
  1847                           plusw2	equ	0xFDB
  1848                           fsr2h	equ	0xFDA
  1849                           fsr2l	equ	0xFD9
  1850                           status	equ	0xFD8
  1851                           
  1852                           	psect	rparam
  1853  0000                     pclatu	equ	0xFFB
  1854                           pclath	equ	0xFFA
  1855                           tblptru	equ	0xFF8
  1856                           tblptrh	equ	0xFF7
  1857                           tblptrl	equ	0xFF6
  1858                           tablat	equ	0xFF5
  1859                           prodh	equ	0xFF4
  1860                           prodl	equ	0xFF3
  1861                           intcon	equ	0xFF2
  1862                           intcon2	equ	0xFF1
  1863                           postinc0	equ	0xFEE
  1864                           fsr0h	equ	0xFEA
  1865                           fsr0l	equ	0xFE9
  1866                           wreg	equ	0xFE8
  1867                           fsr1h	equ	0xFE2
  1868                           fsr1l	equ	0xFE1
  1869                           indf2	equ	0xFDF
  1870                           postinc2	equ	0xFDE
  1871                           postdec2	equ	0xFDD
  1872                           plusw2	equ	0xFDB
  1873                           fsr2h	equ	0xFDA
  1874                           fsr2l	equ	0xFD9
  1875                           status	equ	0xFD8
  1876                           
  1877                           	psect	temp
  1878  000053                     btemp:
  1879                           	opt stack 0
  1880  000053                     	ds	1
  1881  0000                     int$flags	set	btemp
  1882                           pclatu	equ	0xFFB
  1883                           pclath	equ	0xFFA
  1884                           tblptru	equ	0xFF8
  1885                           tblptrh	equ	0xFF7
  1886                           tblptrl	equ	0xFF6
  1887                           tablat	equ	0xFF5
  1888                           prodh	equ	0xFF4
  1889                           prodl	equ	0xFF3
  1890                           intcon	equ	0xFF2
  1891                           intcon2	equ	0xFF1
  1892                           postinc0	equ	0xFEE
  1893                           fsr0h	equ	0xFEA
  1894                           fsr0l	equ	0xFE9
  1895                           wreg	equ	0xFE8
  1896                           fsr1h	equ	0xFE2
  1897                           fsr1l	equ	0xFE1
  1898                           indf2	equ	0xFDF
  1899                           postinc2	equ	0xFDE
  1900                           postdec2	equ	0xFDD
  1901                           plusw2	equ	0xFDB
  1902                           fsr2h	equ	0xFDA
  1903                           fsr2l	equ	0xFD9
  1904                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         881
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      82
    BANK0           160      4      14
    BANK1           256      0     206
    BANK2           256      0     200
    BANK3           256      0     206
    BANK4           256      0     206
    BANK5           256      0       0

Pointer List with Targets:

    UART_buff_size@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    UART_buff_get@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    UART_buff_put@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    sp__memset	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), ring_buffer(BANK1[206]), 

    sendStructAddress	PTR unsigned char  size(2) Largest target is 206
		 -> NULL(NULL[0]), ring_buffer(BANK1[206]), 

    serial_read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_get(), 

    serial_peek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_peek(), 

    serial_available	PTR FTN()int  size(2) Largest target is 2
		 -> Absolute function(), Receive_available(), 

    serial_write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), Send_put(), 

    receiveArrayAddress	PTR volatile int  size(2) Largest target is 10
		 -> NULL(NULL[0]), receiveArray(BANK0[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _EUSART1_Transmit_ISR->_UART_buff_get
    _UART_buff_get->_UART_buff_modulo_inc
    _EUSART1_Receive_ISR->_UART_buff_put
    _UART_buff_put->_UART_buff_modulo_inc

Critical Paths under _main in BANK0

    _main->_GetTime

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                            _GetTime
                            _SetTime
                              _Start
 ---------------------------------------------------------------------------------
 (1) _Start                                                0     0      0       0
               _INTERRUPT_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetTime                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetTime                                              4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0    2289
                                             12 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 0     0      0    1100
                      _UART_buff_get
                     _UART_buff_size
 ---------------------------------------------------------------------------------
 (6) _UART_buff_size                                       2     0      2     150
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _UART_buff_get                                        5     3      2     950
                                              6 COMRAM     5     3      2
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  1     1      0    1189
                                             11 COMRAM     1     1      0
                      _UART_buff_put
 ---------------------------------------------------------------------------------
 (6) _UART_buff_put                                        5     2      3    1166
                                              6 COMRAM     5     2      3
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (7) _UART_buff_modulo_inc                                 6     2      4     602
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetTime
   _SetTime
   _Start
     _INTERRUPT_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
     _UART_buff_put
       _UART_buff_modulo_inc
   _EUSART1_Transmit_ISR
     _UART_buff_get
       _UART_buff_modulo_inc
     _UART_buff_size
   _TMR0_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      CE      13       80.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      CE      11       80.5%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      C8       8       78.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      CE       6       80.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      4       E       4        8.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1A      52       1       87.2%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     392       9        0.0%
DATA                 0      0     392      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sun Aug 21 23:49:09 2016

                       _rx_array_inx 0023                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                         __CFG_CPB$OFF 000000  
                       __CFG_CPD$OFF 000000                                  wreg 000FE8  
                       __CFG_LVP$OFF 000000                                 l2191 0332  
                               u2230 0356                                 _main 032E  
                    _TMR0_StartTimer 0428                                 _time 0001  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                                 btemp 0053  
                      __CFG_BORV$190 000000                                 pclat 000FFA  
                               prodh 000FF4                                 prodl 000FF3  
                               start 00A0                        __CFG_IESO$OFF 000000  
                    __end_of_GetTime 0428                         ___param_bank 000010  
                    __end_of_SetTime 0416              __end_of_TMR0_Initialize 03A6  
                              ?_main 0036                                _T0CON 000FD5  
                     __CFG_DEBUG$OFF 000000                                i2l317 03AE  
                              i2l451 005A                                i2l286 024C  
                              i2l455 0064                                i2l449 004E  
                              _TMR0H 000FD7                                _TMR0L 000FD6  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
               _EUSART1_Transmit_ISR 02FC                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                   __end_of_TMR0_ISR 03DC                                _Start 02B8  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                              _group 000D                   __CFG_MCLRE$EXTMCLR 000000  
                              tablat 000FF5                                plusw2 000FDB  
                              status 000FD8                       __CFG_HFOFST$ON 000000  
                     __CFG_PBADEN$ON 000000                      __initialization 0250  
                       __end_of_main 035E          ?_INTERRUPT_InterruptManager 0036  
                             ??_main 006E                        __activetblptr 000002  
              ?_EUSART1_Transmit_ISR 0036                               ?_Start 0036  
            __end_of_TMR0_StartTimer 042C                               _ANSELA 000F38  
                             _ANSELC 000F3A                               _ANSELD 000F3B  
                             _RC1STA 000FAB                               i2l1661 00C4  
                     __CFG_WDTEN$OFF 000000                               i2l1655 037E  
                             i2l1681 0248                               i2l1667 0130  
                             i2l1781 0326          UART_buff_modulo_inc@modulus 0038  
                             _RCREG1 000FAE                               _OSCCON 000FD3  
                             _SPBRG1 000FAF                            ??_GetTime 006E  
                             _TX1STA 000FAC                               _TXREG1 000FAD  
                          ??_SetTime 006A                       __CFG_XINST$OFF 000000  
                      _output_buffer 0400                       __CFG_STVREN$ON 000000  
                   ?_TMR0_Initialize 0036                               clear_0 0256  
                             clear_1 0262                               clear_2 026E  
                             clear_3 027A                               clear_4 0286  
                             clear_5 0292                               _rx_len 0024  
                       __pdataCOMRAM 0052                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
       __end_of_UART_buff_modulo_inc 0388        __size_of_INTERRUPT_Initialize 0012  
                         __accesstop 0060              __end_of__initialization 02AA  
                      ___rparam_used 000001                       __pcstackCOMRAM 0036  
                      __end_of_Start 02FC                            ?_TMR0_ISR 0036  
                 UART_buff_get@_this 003C                __end_of_UART_buff_get 0250  
             ??_EUSART1_Transmit_ISR 0041                __end_of_UART_buff_put 01BE  
        __end_of_EUSART1_Receive_ISR 03C4                              ??_Start 006A  
                   ?_TMR0_StartTimer 0036                  _addressErrorCounter 0005  
                         __pbssBANK0 0060                           __pbssBANK1 0100  
                         __pbssBANK2 0200                           __pbssBANK3 0300  
                         __pbssBANK4 0400                      __CFG_PLLCFG$OFF 000000  
                        _Receive_get 000000                           __pnvCOMRAM 0050  
            __size_of_UART_buff_size 0016                   __CFG_CCP2MX$PORTC1 000000  
                         ??_TMR0_ISR 0036                   __CFG_CCP3MX$PORTB5 000000  
                         _crc_buffer 0025                   UART_buff_put@_this 003C  
                            _OSCCON2 000FD2                    _Receive_available 000000  
       UART_buff_modulo_inc@my_value 003A                    __CFG_PRICLKEN$OFF 000000  
                            _OSCTUNE 000F9B                              _SPBRGH1 000FB0  
                _receiveArrayAddress 000F                              _GetTime 0416  
                            _ByteLow 001D                    _alignErrorCounter 0007  
                    __CFG_PWRTEN$OFF 000000                              __Hparam 0000  
                            _SetTime 0404                              __Lparam 0000  
                          _AKNAKsend 001B                 _UART_buff_modulo_inc 035E  
                            _calc_CS 001E                              __pcinit 0250  
                            __ramtop 0600                              __ptext0 032E  
                            __ptext1 02B8                              __ptext2 0388  
                            __ptext3 0428                              __ptext4 03F2  
                            __ptext5 0404                              __ptext6 0416  
                            __ptext8 03C4                              __ptext9 02FC  
                          _T0CONbits 000FD5                 end_of_initialization 02AA  
                      __Lmediumconst 0000                ?_UART_buff_modulo_inc 0036  
                            postdec2 000FDD                              postinc0 000FEE  
                            postinc2 000FDE               _dataAdressErrorCounter 000B  
                         _rx_address 0022                            _TRISAbits 000F92  
                          _TRISCbits 000F94                            _TRISDbits 000F95  
                     _UART_buff_size 03DC                        _moduleAddress 0020  
               _timer0ReloadVal16bit 0050         __end_of_INTERRUPT_Initialize 0404  
                    _crcErrorCounter 0009                        __pidataCOMRAM 042C  
                  __size_of_TMR0_ISR 0018                  start_initialization 0250  
           __size_of_TMR0_Initialize 001E                       UART_buff_get@c 0040  
             __end_of_UART_buff_size 03F2                       UART_buff_put@c 003E  
             ??_UART_buff_modulo_inc 003A                          __pbssCOMRAM 0001  
      __size_of_EUSART1_Transmit_ISR 0032                        __pcstackBANK0 006A  
                       _Receive_peek 000000                      ?_UART_buff_size 0036  
       __size_of_EUSART1_Receive_ISR 001E                             ?_GetTime 006A  
           __size_of_TMR0_StartTimer 0004               __size_of_UART_buff_get 0092  
             __size_of_UART_buff_put 011A                             ?_SetTime 0036  
                          __pintcode 0008         ??_INTERRUPT_InterruptManager 0042  
                           _BAUD1CON 000FB8                       __size_of_Start 0044  
               _INTERRUPT_Initialize 03F2                         _receiveArray 0060  
                  ??_TMR0_Initialize 006A                             _LATAbits 000F89  
                           _LATCbits 000F8B                             _LATDbits 000F8C  
                UART_buff_size@_this 0036                             _IPR1bits 000F9F  
                           _IPR2bits 000FA2                             _PIE1bits 000F9D  
                           i2u121_40 01DC                             i2u132_40 0316  
__size_of_INTERRUPT_InterruptManager 0098                             _PIR1bits 000F9E  
                           _RCONbits 000FD0                     __CFG_WDTPS$32768 000000  
                           _TMR0_ISR 03C4                         _input_buffer 0300  
                          _rx_buffer 0200                        _UART_buff_get 01BE  
                      _UART_buff_put 00A4                          _INTCON2bits 000FF1  
              ?_INTERRUPT_Initialize 0036                    _sendStructAddress 0011  
                           _ByteHigh 001C                     __size_of_GetTime 0012  
                           __Hrparam 0000                             _Send_put 000000  
                           __Lrparam 0000                   __CFG_BOREN$SBORDIS 000000  
                   __size_of_SetTime 0012                    __CFG_P2BMX$PORTD2 000000  
                  ??_TMR0_StartTimer 006A                       ?_UART_buff_get 003C  
                     ?_UART_buff_put 003C                             __ptext10 03DC  
                           __ptext11 01BE                             __ptext12 03A6  
                           __ptext13 00A4                             __ptext14 035E  
            EUSART1_Receive_ISR@data 0041                        _returnAddress 0021  
                      __size_of_main 0030                       _Transmit_stall 0052  
                         _RC1STAbits 000FAB                             int$flags 0053  
                       _serial_write 0019   __end_of_INTERRUPT_InterruptManager 00A0  
         _INTERRUPT_InterruptManager 0008                  _EUSART1_Receive_ISR 03A6  
                         _INTCONbits 000FF2            UART_buff_modulo_inc@value 0036  
                   ??_UART_buff_size 0038               ??_INTERRUPT_Initialize 006A  
                   _serial_available 0013                             intlevel2 0000  
               ?_EUSART1_Receive_ISR 0036         __end_of_EUSART1_Transmit_ISR 032E  
                        _ring_buffer 0100                          _serial_peek 0015  
                        _serial_read 0017        __size_of_UART_buff_modulo_inc 002A  
                    ??_UART_buff_get 003E                      ??_UART_buff_put 003F  
                    _TMR0_Initialize 0388                    __CFG_T3CMX$PORTC0 000000  
                     _maxDataAddress 001F                ??_EUSART1_Receive_ISR 0041  
                  __CFG_FOSC$INTIO67 000000  
