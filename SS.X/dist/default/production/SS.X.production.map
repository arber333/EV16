Microchip MPLAB XC8 Compiler V1.37 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.37\dat\en_msgs.txt -cs \
  -h+dist/default/production\SS.X.production.sym \
  --cmf=dist/default/production\SS.X.production.cmf -z -Q18F45K22 \
  -oC:\Users\richc\AppData\Local\Temp\s3ao.2 \
  -Mdist/default/production/SS.X.production.map -E1 -ver=XC8 \
  -ASTACK=04C8h-05ffh -pstack=STACK -ACODE=00h-07FFFh -ACONST=00h-07FFFh \
  -ASMALLCONST=0600h-06FFhx122 -AMEDIUMCONST=0600h-07FFFh -ACOMRAM=01h-05Fh \
  -AABS1=00h-05FFh -ABIGRAM=01h-05FFh -ARAM=060h-0FFh,0100h-01FFhx5 \
  -ABANK0=060h-0FFh -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh \
  -ABANK3=0300h-03FFh -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh \
  -ASFR=0F38h-0F5Fh,0F60h-0FFFh \
  -preset_vec=00h,intcode,intcodelo,powerup,init,end_init -pramtop=0600h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\richc\AppData\Local\Temp\s3ao.obj \
  dist/default/production\SS.X.production.obj 

Object code version is 3.11

Machine type is 18F45K22

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\richc\AppData\Local\Temp\s3ao.obj
                end_init                              0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\SS.X.production.obj
                text14                             7814     7814       4A     3C0A       0
                text13                             7BC2     7BC2       E2     3DE1       0
                text12                             7A14     7A14       D6     3D0A       0
                text11                             798C     798C       88     3CC6       0
                text10                             7E0C     7E0C      1F4     3F06       0
                text9                              77BE     77BE       2A     3BDF       0
                text8                              7CA4     7CA4      168     3E52       0
                text7                              777A     777A       1C     3BBD       0
                text6                              77E8     77E8       2C     3BF4       0
                text5                              785E     785E       62     3C2F       0
                text4                              7AEA     7AEA       D8     3D75       0
                text3                              7924     7924       68     3C92       0
                text2                              7796     7796       28     3BCB       0
                text1                              776A     776A       10     3BB5       0
                text0                              7764     7764        6     3BB2       0
                cstackCOMRAM                         30       30       25        1       1
                bssBANK4                            400      400       C8      400       1
                bssBANK3                            300      300       CE      300       1
                bssBANK2                            200      200       CE      200       1
                bssBANK1                            100      100       CE      100       1
                bssBANK0                             60       60       28       60       1
                dataCOMRAM                           55       55        1        1       1
                bssCOMRAM                             1        1       2F        1       1
                cinit                              78C0     78C0       64     3C60       0
                idataCOMRAM                        7763     7763        1     7763       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              0        0        4         0
                text14                             7814     7814       4A         0
                text13                             7BC2     7BC2       E2         0
                text12                             7A14     7A14       D6         0
                text11                             798C     798C       88         0
                text10                             7E0C     7E0C      1F4         0
                text9                              77BE     77BE       2A         0
                text8                              7CA4     7CA4      168         0
                text7                              777A     777A       1C         0
                text6                              77E8     77E8       2C         0
                text5                              785E     785E       62         0
                text4                              7AEA     7AEA       D8         0
                text3                              7924     7924       68         0
                text2                              7796     7796       28         0
                text1                              776A     776A       10         0
                text0                              7764     7764        6         0
                cinit                              78C0     78C0       64         0
                idataCOMRAM                        7763     7763        1         0

        CLASS   CONST          

        CLASS   SMALLCONST     

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                cstackCOMRAM                         30       30       25         1
                dataCOMRAM                           55       55        1         1
                bssCOMRAM                             1        1       2F         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                bssBANK0                             60       60       28         1

        CLASS   BANK1          
                bssBANK1                            100      100       CE         1

        CLASS   BANK2          
                bssBANK2                            200      200       CE         1

        CLASS   BANK3          
                bssBANK3                            300      300       CE         1

        CLASS   BANK4          
                bssBANK4                            400      400       C8         1

        CLASS   BANK5          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                bssCOMRAM                      000001  000055  000056         1       1  COMRAM  
                bssBANK0                       000060  000028  000088        60       1  BANK0   
                bssBANK1                       000100  0000CE  0001CE       100       1  BANK1   
                bssBANK2                       000200  0000CE  0002CE       200       1  BANK2   
                bssBANK3                       000300  0000CE  0003CE       300       1  BANK3   
                bssBANK4                       000400  0000C8  0004C8       400       1  BANK4   
                idataCOMRAM                    007763  000001  007764      7763       0  CODE    
                text0                          007764  000006  00776A      3BB2       0  CODE    
                text1                          00776A  000010  00777A      3BB5       0  CODE    
                text7                          00777A  00001C  007796      3BBD       0  CODE    
                text2                          007796  000028  0077BE      3BCB       0  CODE    
                text9                          0077BE  00002A  0077E8      3BDF       0  CODE    
                text6                          0077E8  00002C  007814      3BF4       0  CODE    
                text14                         007814  00004A  00785E      3C0A       0  CODE    
                text5                          00785E  000062  0078C0      3C2F       0  CODE    
                cinit                          0078C0  000064  007924      3C60       0  CODE    
                text3                          007924  000068  00798C      3C92       0  CODE    
                text11                         00798C  000088  007A14      3CC6       0  CODE    
                text12                         007A14  0000D6  007AEA      3D0A       0  CODE    
                text4                          007AEA  0000D8  007BC2      3D75       0  CODE    
                text13                         007BC2  0000E2  007CA4      3DE1       0  CODE    
                text8                          007CA4  000168  007E0C      3E52       0  CODE    
                text10                         007E0C  0001F4  008000      3F06       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000088-0000FF               78
        BANK1            0001CE-0001FF               32
        BANK2            0002CE-0002FF               32
        BANK3            0003CE-0003FF               32
        BANK4            0004C8-0004FF               38
        BANK5            000500-0005FF              100
        BIGRAM           000056-00005F                A
                         000088-0000FF               78
                         0001CE-0001FF               32
                         0002CE-0002FF               32
                         0003CE-0003FF               32
                         0004C8-0005FF              138
        CODE             000004-007762             775F
        COMRAM           000056-00005F                A
        CONST            000004-007762             775F
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000600-007762             7163
        RAM              000088-0000FF               78
                         0001CE-0001FF               32
                         0002CE-0002FF               32
                         0003CE-0003FF               32
                         0004C8-0005FF               38
        SFR              000F38-000FFF               28
        SMALLCONST       000600-007762              100
        STACK            0004C8-0005FF              138

                                  Symbol Table

?_FastTransfer_buffer_modulo_inc         cstackCOMRAM 000030
CRC8@crc                                 cstackCOMRAM 000036
CRC8@data                                cstackCOMRAM 000030
CRC8@extract                             cstackCOMRAM 000034
CRC8@len                                 cstackCOMRAM 000032
CRC8@sum                                 cstackCOMRAM 000033
CRC8@tempI                               cstackCOMRAM 000035
CRCcheck@SentCRC                         cstackCOMRAM 00003C
CRCcheck@arrayHolder                     cstackCOMRAM 00003E
CRCcheck@calculatedCRC                   cstackCOMRAM 00003D
CRCcheck@rt                              cstackCOMRAM 000041
FastTransfer_buffer_flush@_this          cstackCOMRAM 000038
FastTransfer_buffer_flush@clearBuffer    cstackCOMRAM 00003A
FastTransfer_buffer_modulo_inc@modulus   cstackCOMRAM 000032
FastTransfer_buffer_modulo_inc@my_value  cstackCOMRAM 000034
FastTransfer_buffer_modulo_inc@value     cstackCOMRAM 000030
FastTransfer_buffer_put@_this            cstackCOMRAM 000036
FastTransfer_buffer_put@towhat           cstackCOMRAM 000039
FastTransfer_buffer_put@towhere          cstackCOMRAM 000038
ToSend@what                              cstackCOMRAM 00003D
ToSend@where                             cstackCOMRAM 00003F
_AKNAKsend                               bssCOMRAM    000017
_BAUD1CON                                (abs)        000FB8
_CRC8                                    text14       007814
_CRCcheck                                text11       00798C
_FastTransfer_buffer_flush               text5        00785E
_FastTransfer_buffer_modulo_inc          text9        0077BE
_FastTransfer_buffer_put                 text8        007CA4
_LATCbits                                (abs)        000F8B
_PIE1bits                                (abs)        000F9D
_RC1STA                                  (abs)        000FAB
_RC1STAbits                              (abs)        000FAB
_RCREG1                                  (abs)        000FAE
_SPBRG1                                  (abs)        000FAF
_SPBRGH1                                 (abs)        000FB0
_TX1STA                                  (abs)        000FAC
_TXREG1                                  (abs)        000FAD
_ToSend                                  text7        00777A
_Transmit_stall                          dataCOMRAM   000055
__HRAM                                   (abs)        000000
__Habs1                                  abs1         000000
__Hbank0                                 bank0        000000
__Hbank1                                 bank1        000000
__Hbank2                                 bank2        000000
__Hbank3                                 bank3        000000
__Hbank4                                 bank4        000000
__Hbank5                                 bank5        000000
__Hbigbss                                bigbss       000000
__Hbigdata                               bigdata      000000
__Hbigram                                bigram       000000
__Hbss                                   bss          000000
__HbssBANK0                              bssBANK0     000000
__HbssBANK1                              bssBANK1     000000
__HbssBANK2                              bssBANK2     000000
__HbssBANK3                              bssBANK3     000000
__HbssBANK4                              bssBANK4     000000
__HbssCOMRAM                             bssCOMRAM    000000
__Hcinit                                 cinit        000000
__Hclrtext                               clrtext      000000
__Hcomram                                comram       000000
__Hconfig                                config       30000E
__Hconst                                 const        000000
__HcstackCOMRAM                          cstackCOMRAM 000000
__Hdata                                  data         000000
__HdataCOMRAM                            dataCOMRAM   000000
__Heeprom_data                           eeprom_data  000000
__Hend_init                              end_init     000004
__Hfarbss                                farbss       000000
__Hfardata                               fardata      000000
__Hibigdata                              ibigdata     000000
__Hidata                                 idata        000000
__HidataCOMRAM                           idataCOMRAM  000000
__Hidloc                                 idloc        200008
__Hifardata                              ifardata     000000
__Hinit                                  init         000000
__Hintcode                               intcode      000000
__Hintcode_body                          intcode_body 000000
__Hintcodelo                             intcodelo    000000
__Hintentry                              intentry     000000
__Hintret                                intret       000000
__Hintsave_regs                          intsave_regs 000000
__Hirdata                                irdata       000000
__Hmediumconst                           mediumconst  000000
__HnvFARRAM                              nvFARRAM     000000
__Hnvbit                                 nvbit        000000
__Hnvrram                                nvrram       000000
__Hparam                                 rparam       000000
__Hpowerup                               powerup      000000
__Hram                                   ram          000000
__Hramtop                                ramtop       000600
__Hrbit                                  rbit         000000
__Hrbss                                  rbss         000000
__Hrdata                                 rdata        000000
__Hreset_vec                             reset_vec    000000
__Hrparam                                rparam       000000
__Hsfr                                   sfr          000000
__Hsmallconst                            smallconst   000000
__Hspace_0                               (abs)        30000E
__Hspace_1                               (abs)        0004C8
__Hspace_2                               (abs)        000000
__Hstack                                 stack        000000
__Hstruct                                struct       000000
__Htemp                                  temp         000000
__Htext                                  text         000000
__Htext0                                 text0        000000
__Htext1                                 text1        000000
__Htext10                                text10       000000
__Htext11                                text11       000000
__Htext12                                text12       000000
__Htext13                                text13       000000
__Htext14                                text14       000000
__Htext2                                 text2        000000
__Htext3                                 text3        000000
__Htext4                                 text4        000000
__Htext5                                 text5        000000
__Htext6                                 text6        000000
__Htext7                                 text7        000000
__Htext8                                 text8        000000
__Htext9                                 text9        000000
__LRAM                                   (abs)        000001
__Labs1                                  abs1         000000
__Lbank0                                 bank0        000000
__Lbank1                                 bank1        000000
__Lbank2                                 bank2        000000
__Lbank3                                 bank3        000000
__Lbank4                                 bank4        000000
__Lbank5                                 bank5        000000
__Lbigbss                                bigbss       000000
__Lbigdata                               bigdata      000000
__Lbigram                                bigram       000000
__Lbss                                   bss          000000
__LbssBANK0                              bssBANK0     000000
__LbssBANK1                              bssBANK1     000000
__LbssBANK2                              bssBANK2     000000
__LbssBANK3                              bssBANK3     000000
__LbssBANK4                              bssBANK4     000000
__LbssCOMRAM                             bssCOMRAM    000000
__Lcinit                                 cinit        000000
__Lclrtext                               clrtext      000000
__Lcomram                                comram       000000
__Lconfig                                config       300000
__Lconst                                 const        000000
__LcstackCOMRAM                          cstackCOMRAM 000000
__Ldata                                  data         000000
__LdataCOMRAM                            dataCOMRAM   000000
__Leeprom_data                           eeprom_data  000000
__Lend_init                              end_init     000000
__Lfarbss                                farbss       000000
__Lfardata                               fardata      000000
__Libigdata                              ibigdata     000000
__Lidata                                 idata        000000
__LidataCOMRAM                           idataCOMRAM  000000
__Lidloc                                 idloc        200000
__Lifardata                              ifardata     000000
__Linit                                  init         000000
__Lintcode                               intcode      000000
__Lintcode_body                          intcode_body 000000
__Lintcodelo                             intcodelo    000000
__Lintentry                              intentry     000000
__Lintret                                intret       000000
__Lintsave_regs                          intsave_regs 000000
__Lirdata                                irdata       000000
__Lmediumconst                           mediumconst  000000
__LnvFARRAM                              nvFARRAM     000000
__Lnvbit                                 nvbit        000000
__Lnvrram                                nvrram       000000
__Lparam                                 rparam       000000
__Lpowerup                               powerup      000000
__Lram                                   ram          000000
__Lramtop                                ramtop       000600
__Lrbit                                  rbit         000000
__Lrbss                                  rbss         000000
__Lrdata                                 rdata        000000
__Lreset_vec                             reset_vec    000000
__Lrparam                                rparam       000000
__Lsfr                                   sfr          000000
__Lsmallconst                            smallconst   000000
__Lspace_0                               (abs)        000000
__Lspace_1                               (abs)        000000
__Lspace_2                               (abs)        000000
__Lstack                                 stack        000000
__Lstruct                                struct       000000
__Ltemp                                  temp         000000
__Ltext                                  text         000000
__Ltext0                                 text0        000000
__Ltext1                                 text1        000000
__Ltext10                                text10       000000
__Ltext11                                text11       000000
__Ltext12                                text12       000000
__Ltext13                                text13       000000
__Ltext14                                text14       000000
__Ltext2                                 text2        000000
__Ltext3                                 text3        000000
__Ltext4                                 text4        000000
__Ltext5                                 text5        000000
__Ltext6                                 text6        000000
__Ltext7                                 text7        000000
__Ltext8                                 text8        000000
__Ltext9                                 text9        000000
__S0                                     (abs)        30000E
__S1                                     (abs)        0004C8
__S2                                     (abs)        000000
___inthi_sp                              stack        000000
___intlo_sp                              stack        000000
___param_bank                            (abs)        000010
___rparam_used                           (abs)        000001
___sp                                    stack        000000
__accesstop                              (abs)        000060
__activetblptr                           (abs)        000002
__end_of_CRC8                            text14       00785E
__end_of_CRCcheck                        text11       007A14
__end_of_FastTransfer_buffer_flush       text5        0078C0
__end_of_FastTransfer_buffer_modulo_inc  text9        0077E8
__end_of_FastTransfer_buffer_put         text8        007E0C
__end_of_ToSend                          text7        007796
__end_of__initialization                 cinit        00791A
__end_of_crcBufS_get                     text13       007CA4
__end_of_crcBufS_put                     text4        007BC2
__end_of_crcBufS_status_put              text12       007AEA
__end_of_main                            text0        00776A
__end_of_memset                          text6        007814
__end_of_receiveData                     text10       008000
__end_of_respondECU                      text2        0077BE
__end_of_sendData                        text3        00798C
__end_of_updateComms                     text1        00777A
__initialization                         cinit        0078C0
__mediumconst                            mediumconst  000000
__pbssBANK0                              bssBANK0     000060
__pbssBANK1                              bssBANK1     000100
__pbssBANK2                              bssBANK2     000200
__pbssBANK3                              bssBANK3     000300
__pbssBANK4                              bssBANK4     000400
__pbssCOMRAM                             bssCOMRAM    000001
__pcinit                                 cinit        0078C0
__pcstackCOMRAM                          cstackCOMRAM 000030
__pdataCOMRAM                            dataCOMRAM   000055
__pidataCOMRAM                           idataCOMRAM  007763
__ptext0                                 text0        007764
__ptext1                                 text1        00776A
__ptext10                                text10       007E0C
__ptext11                                text11       00798C
__ptext12                                text12       007A14
__ptext13                                text13       007BC2
__ptext14                                text14       007814
__ptext2                                 text2        007796
__ptext3                                 text3        007924
__ptext4                                 text4        007AEA
__ptext5                                 text5        00785E
__ptext6                                 text6        0077E8
__ptext7                                 text7        00777A
__ptext8                                 text8        007CA4
__ptext9                                 text9        0077BE
__ramtop                                 ramtop       000600
__size_of_CRC8                           (abs)        000000
__size_of_CRCcheck                       (abs)        000000
__size_of_FastTransfer_buffer_flush      (abs)        000000
__size_of_FastTransfer_buffer_modulo_inc (abs)        000000
__size_of_FastTransfer_buffer_put        (abs)        000000
__size_of_ToSend                         (abs)        000000
__size_of_crcBufS_get                    (abs)        000000
__size_of_crcBufS_put                    (abs)        000000
__size_of_crcBufS_status_put             (abs)        000000
__size_of_main                           (abs)        000000
__size_of_memset                         (abs)        000000
__size_of_receiveData                    (abs)        000000
__size_of_respondECU                     (abs)        000000
__size_of_sendData                       (abs)        000000
__size_of_updateComms                    (abs)        000000
__smallconst                             smallconst   000000
_addressErrorCounter                     bssCOMRAM    000001
_alignErrorCounter                       bssCOMRAM    000003
_calc_CS                                 bssCOMRAM    000018
_crcBufS_get                             text13       007BC2
_crcBufS_put                             text4        007AEA
_crcBufS_status_put                      text12       007A14
_crcErrorCounter                         bssCOMRAM    000005
_crc_buffer                              bssCOMRAM    00001F
_dataAdressErrorCounter                  bssCOMRAM    000007
_group                                   bssCOMRAM    000009
_input_buffer                            bssBANK2     000200
_main                                    text0        007764
_maxDataAddress                          bssCOMRAM    000019
_memset                                  text6        0077E8
_moduleAddress                           bssCOMRAM    00001A
_output_buffer                           bssBANK3     000300
_receiveArray                            bssBANK0     000060
_receiveArrayAddress                     bssCOMRAM    00000B
_receiveData                             text10       007E0C
_respondECU                              text2        007796
_returnAddress                           bssCOMRAM    00001B
_ring_buffer                             bssBANK1     000100
_rx_address                              bssCOMRAM    00001C
_rx_array_inx                            bssCOMRAM    00001D
_rx_buffer                               bssBANK4     000400
_rx_len                                  bssCOMRAM    00001E
_sendData                                text3        007924
_sendStructAddress                       bssCOMRAM    00000D
_serial_available                        bssCOMRAM    00000F
_serial_peek                             bssCOMRAM    000011
_serial_read                             bssCOMRAM    000013
_serial_write                            bssCOMRAM    000015
_updateComms                             text1        00776A
crcBufS_get@_this                        cstackCOMRAM 000030
crcBufS_get@space                        cstackCOMRAM 000033
crcBufS_get@time                         cstackCOMRAM 000032
crcBufS_get@wantedTime                   cstackCOMRAM 00003A
crcBufS_put@_this                        cstackCOMRAM 000030
crcBufS_put@address                      cstackCOMRAM 000032
crcBufS_put@oldCRC                       cstackCOMRAM 000033
crcBufS_put@status                       cstackCOMRAM 000034
crcBufS_status_put@_this                 cstackCOMRAM 000030
crcBufS_status_put@status                cstackCOMRAM 000033
crcBufS_status_put@time                  cstackCOMRAM 000032
crcBufS_status_put@wantedTime            cstackCOMRAM 000038
end_of_initialization                    cinit        00791A
intlevel0                                text         000000
intlevel1                                text         000000
intlevel2                                text         000000
intlevel3                                text         000000
memset@c                                 cstackCOMRAM 000032
memset@n                                 cstackCOMRAM 000034
memset@p                                 cstackCOMRAM 000036
memset@p1                                cstackCOMRAM 000030
receiveData@crcHolder                    cstackCOMRAM 000049
receiveData@crcHolder_308                cstackCOMRAM 00004A
receiveData@holder                       cstackCOMRAM 00004B
receiveData@holder_307                   cstackCOMRAM 00004E
receiveData@r                            cstackCOMRAM 000053
receiveData@u                            cstackCOMRAM 000051
sendData@CS                              cstackCOMRAM 000040
sendData@i                               cstackCOMRAM 00003E
sendData@whereToSend                     cstackCOMRAM 00003D
stackhi                                  (abs)        0005FF
stacklo                                  (abs)        0004C8
start                                    init         000000
start_initialization                     cinit        0078C0


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 25 in file "Main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    5
 This function calls:
		_updateComms
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _updateComms *****************
 Defined at:
		line 8 in file "Communications.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_receiveData
		_respondECU
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _respondECU *****************
 Defined at:
		line 16 in file "Communications.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_ToSend
		_sendData
 This function is called by:
		_updateComms
 This function uses a non-reentrant model


 *************** function _sendData *****************
 Defined at:
		line 50 in file "FastTransfer.c"
 Parameters:    Size  Location     Type
  whereToSend     1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  whereToSend     1   13[COMRAM] unsigned char 
  i               2   14[COMRAM] int 
  CS              1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_CRC8
		_FastTransfer_buffer_flush
		_crcBufS_put
 This function is called by:
		_respondECU
 This function uses a non-reentrant model


 *************** function _crcBufS_put *****************
 Defined at:
		line 319 in file "FastTransfer.c"
 Parameters:    Size  Location     Type
  _this           2    0[COMRAM] PTR struct crcBufS
		 -> crc_buffer(17), 
  address         1    2[COMRAM] unsigned char 
  oldCRC          1    3[COMRAM] unsigned char 
  status          1    4[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         5       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_sendData
 This function uses a non-reentrant model


 *************** function _FastTransfer_buffer_flush *****************
 Defined at:
		line 259 in file "FastTransfer.c"
 Parameters:    Size  Location     Type
  _this           2    8[COMRAM] PTR struct ringBufS
		 -> ring_buffer(206), 
  clearBuffer     2   10[COMRAM] const int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_memset
 This function is called by:
		_sendData
 This function uses a non-reentrant model


 *************** function _memset *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memset.c"
 Parameters:    Size  Location     Type
  p1              2    0[COMRAM] PTR void 
		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  c               2    2[COMRAM] int 
  n               2    4[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  p               2    6[COMRAM] PTR unsigned char 
		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
 Return value:  Size  Location     Type
                  2    0[COMRAM] PTR void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_FastTransfer_buffer_flush
		_UART_buff_init
		_UART_buff_flush
 This function uses a non-reentrant model


 *************** function _ToSend *****************
 Defined at:
		line 214 in file "FastTransfer.c"
 Parameters:    Size  Location     Type
  where           1    wreg     unsigned char 
  what            2   13[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  where           1   15[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_FastTransfer_buffer_put
 This function is called by:
		_respondECU
 This function uses a non-reentrant model


 *************** function _FastTransfer_buffer_put *****************
 Defined at:
		line 221 in file "FastTransfer.c"
 Parameters:    Size  Location     Type
  _this           2    6[COMRAM] PTR struct ringBufS
		 -> ring_buffer(206), 
  towhere         1    8[COMRAM] unsigned char 
  towhat          2    9[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         5       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_FastTransfer_buffer_modulo_inc
 This function is called by:
		_ToSend
 This function uses a non-reentrant model


 *************** function _FastTransfer_buffer_modulo_inc *****************
 Defined at:
		line 271 in file "FastTransfer.c"
 Parameters:    Size  Location     Type
  value           2    0[COMRAM] const unsigned int 
  modulus         2    2[COMRAM] const unsigned int 
 Auto vars:     Size  Location     Type
  my_value        2    4[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2    0[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_FastTransfer_buffer_put
		_FastTransfer_buffer_get
 This function uses a non-reentrant model


 *************** function _receiveData *****************
 Defined at:
		line 79 in file "FastTransfer.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  holder          3   30[COMRAM] unsigned char [3]
  crcHolder       1   26[COMRAM] unsigned char 
  holder          3   27[COMRAM] unsigned char [3]
  crcHolder       1   25[COMRAM] unsigned char 
  u               2   33[COMRAM] int 
  r               2   35[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:        12       0       0       0       0       0       0
      Temps:          6       0       0       0       0       0       0
      Totals:        18       0       0       0       0       0       0
Total ram usage:       18 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_CRC8
		_CRCcheck
 This function is called by:
		_updateComms
 This function uses a non-reentrant model


 *************** function _CRCcheck *****************
 Defined at:
		line 371 in file "FastTransfer.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  rt              2   17[COMRAM] int 
  arrayHolder     3   14[COMRAM] unsigned char [3]
  calculatedCR    1   13[COMRAM] unsigned char 
  SentCRC         1   12[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         7       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_CRC8
		_crcBufS_get
		_crcBufS_status_put
 This function is called by:
		_receiveData
 This function uses a non-reentrant model


 *************** function _crcBufS_status_put *****************
 Defined at:
		line 334 in file "FastTransfer.c"
 Parameters:    Size  Location     Type
  _this           2    0[COMRAM] PTR struct crcBufS
		 -> crc_buffer(17), 
  time            1    2[COMRAM] unsigned char 
  status          1    3[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  wantedTime      2    8[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_CRCcheck
 This function uses a non-reentrant model


 *************** function _crcBufS_get *****************
 Defined at:
		line 351 in file "FastTransfer.c"
 Parameters:    Size  Location     Type
  _this           2    0[COMRAM] PTR struct crcBufS
		 -> crc_buffer(17), 
  time            1    2[COMRAM] unsigned char 
  space           1    3[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  wantedTime      2   10[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          6       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_CRCcheck
		_AKNAK
 This function uses a non-reentrant model


 *************** function _CRC8 *****************
 Defined at:
		line 31 in file "FastTransfer.c"
 Parameters:    Size  Location     Type
  data            2    0[COMRAM] PTR const unsigned char 
		 -> NULL(0), CRCcheck@arrayHolder(3), receiveData@holder_307(3), receiveData@holder(3), 
		 -> rx_buffer(200), ring_buffer(206), 
  len             1    2[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  sum             1    3[COMRAM] unsigned char 
  tempI           1    5[COMRAM] unsigned char 
  extract         1    4[COMRAM] unsigned char 
  crc             1    6[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         3       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_sendData
		_receiveData
		_CRCcheck
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memset.c
		_memset        		CODE           	77E8	0000	45

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memset.c estimated size: 45

FastTransfer.c
		_FastTransfer_buffer_put		CODE           	7CA4	0000	361
		_CRC8          		CODE           	7814	0000	75
		_receiveData   		CODE           	7E0C	0000	501
		_sendData      		CODE           	7924	0000	105
		_CRCcheck      		CODE           	798C	0000	137
		_FastTransfer_buffer_modulo_inc		CODE           	77BE	0000	43
		_crcBufS_status_put		CODE           	7A14	0000	215
		_crcBufS_get   		CODE           	7BC2	0000	227
		_crcBufS_put   		CODE           	7AEA	0000	217
		_FastTransfer_buffer_flush		CODE           	785E	0000	99
		_ToSend        		CODE           	777A	0000	29

FastTransfer.c estimated size: 2009

Communications.c
		_updateComms   		CODE           	776A	0000	17
		_respondECU    		CODE           	7796	0000	41

Communications.c estimated size: 58

Main.c
		_main          		CODE           	7764	0000	7

Main.c estimated size: 7

shared
		__initialization		CODE           	78C0	0000	91

shared estimated size: 91

