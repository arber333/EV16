

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Jun 12 02:53:12 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    66                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    67  0000                     
    68                           	psect	idataBANK0
    69  001634                     __pidataBANK0:
    70                           	opt stack 0
    71                           
    72                           ;initializer for _Over_Voltage_Value
    73  001634  09C4               	dw	2500
    74                           
    75                           ;initializer for _Under_Voltage_Value
    76  001636  07CF               	dw	1999
    77                           
    78                           ;initializer for _CarOn
    79  001638  01                 	db	1
    80                           
    81                           ;initializer for _CurrentDir
    82  001639  01                 	db	1
    83                           
    84                           	psect	mediumconst
    85  007BA8                     __pmediumconst:
    86                           	opt stack 0
    87  007BA8  00                 	db	0
    88  007BA9                     LT6804@crc15Table:
    89                           	opt stack 0
    90  007BA9  0000               	dw	0
    91  007BAB  C599               	dw	50585
    92  007BAD  CEAB               	dw	52907
    93  007BAF  0B32               	dw	2866
    94  007BB1  D8CF               	dw	55503
    95  007BB3  1D56               	dw	7510
    96  007BB5  1664               	dw	5732
    97  007BB7  D3FD               	dw	54269
    98  007BB9  F407               	dw	62471
    99  007BBB  319E               	dw	12702
   100  007BBD  3AAC               	dw	15020
   101  007BBF  FF35               	dw	65333
   102  007BC1  2CC8               	dw	11464
   103  007BC3  E951               	dw	59729
   104  007BC5  E263               	dw	57955
   105  007BC7  27FA               	dw	10234
   106  007BC9  AD97               	dw	44439
   107  007BCB  680E               	dw	26638
   108  007BCD  633C               	dw	25404
   109  007BCF  A6A5               	dw	42661
   110  007BD1  7558               	dw	30040
   111  007BD3  B0C1               	dw	45249
   112  007BD5  BBF3               	dw	48115
   113  007BD7  7E6A               	dw	32362
   114  007BD9  5990               	dw	22928
   115  007BDB  9C09               	dw	39945
   116  007BDD  973B               	dw	38715
   117  007BDF  52A2               	dw	21154
   118  007BE1  815F               	dw	33119
   119  007BE3  44C6               	dw	17606
   120  007BE5  4FF4               	dw	20468
   121  007BE7  8A6D               	dw	35437
   122  007BE9  5B2E               	dw	23342
   123  007BEB  9EB7               	dw	40631
   124  007BED  9585               	dw	38277
   125  007BEF  501C               	dw	20508
   126  007BF1  83E1               	dw	33761
   127  007BF3  4678               	dw	18040
   128  007BF5  4D4A               	dw	19786
   129  007BF7  88D3               	dw	35027
   130  007BF9  AF29               	dw	44841
   131  007BFB  6AB0               	dw	27312
   132  007BFD  6182               	dw	24962
   133  007BFF  A41B               	dw	42011
   134  007C01  77E6               	dw	30694
   135  007C03  B27F               	dw	45695
   136  007C05  B94D               	dw	47437
   137  007C07  7CD4               	dw	31956
   138  007C09  F6B9               	dw	63161
   139  007C0B  3320               	dw	13088
   140  007C0D  3812               	dw	14354
   141  007C0F  FD8B               	dw	64907
   142  007C11  2E76               	dw	11894
   143  007C13  EBEF               	dw	60399
   144  007C15  E0DD               	dw	57565
   145  007C17  2544               	dw	9540
   146  007C19  02BE               	dw	702
   147  007C1B  C727               	dw	50983
   148  007C1D  CC15               	dw	52245
   149  007C1F  098C               	dw	2444
   150  007C21  DA71               	dw	55921
   151  007C23  1FE8               	dw	8168
   152  007C25  14DA               	dw	5338
   153  007C27  D143               	dw	53571
   154  007C29  F3C5               	dw	62405
   155  007C2B  365C               	dw	13916
   156  007C2D  3D6E               	dw	15726
   157  007C2F  F8F7               	dw	63735
   158  007C31  2B0A               	dw	11018
   159  007C33  EE93               	dw	61075
   160  007C35  E5A1               	dw	58785
   161  007C37  2038               	dw	8248
   162  007C39  07C2               	dw	1986
   163  007C3B  C25B               	dw	49755
   164  007C3D  C969               	dw	51561
   165  007C3F  0CF0               	dw	3312
   166  007C41  DF0D               	dw	57101
   167  007C43  1A94               	dw	6804
   168  007C45  11A6               	dw	4518
   169  007C47  D43F               	dw	54335
   170  007C49  5E52               	dw	24146
   171  007C4B  9BCB               	dw	39883
   172  007C4D  90F9               	dw	37113
   173  007C4F  5560               	dw	21856
   174  007C51  869D               	dw	34461
   175  007C53  4304               	dw	17156
   176  007C55  4836               	dw	18486
   177  007C57  8DAF               	dw	36271
   178  007C59  AA55               	dw	43605
   179  007C5B  6FCC               	dw	28620
   180  007C5D  64FE               	dw	25854
   181  007C5F  A167               	dw	41319
   182  007C61  729A               	dw	29338
   183  007C63  B703               	dw	46851
   184  007C65  BC31               	dw	48177
   185  007C67  79A8               	dw	31144
   186  007C69  A8EB               	dw	43243
   187  007C6B  6D72               	dw	28018
   188  007C6D  6640               	dw	26176
   189  007C6F  A3D9               	dw	41945
   190  007C71  7024               	dw	28708
   191  007C73  B5BD               	dw	46525
   192  007C75  BE8F               	dw	48783
   193  007C77  7B16               	dw	31510
   194  007C79  5CEC               	dw	23788
   195  007C7B  9975               	dw	39285
   196  007C7D  9247               	dw	37447
   197  007C7F  57DE               	dw	22494
   198  007C81  8423               	dw	33827
   199  007C83  41BA               	dw	16826
   200  007C85  4A88               	dw	19080
   201  007C87  8F11               	dw	36625
   202  007C89  057C               	dw	1404
   203  007C8B  C0E5               	dw	49381
   204  007C8D  CBD7               	dw	52183
   205  007C8F  0E4E               	dw	3662
   206  007C91  DDB3               	dw	56755
   207  007C93  182A               	dw	6186
   208  007C95  1318               	dw	4888
   209  007C97  D681               	dw	54913
   210  007C99  F17B               	dw	61819
   211  007C9B  34E2               	dw	13538
   212  007C9D  3FD0               	dw	16336
   213  007C9F  FA49               	dw	64073
   214  007CA1  29B4               	dw	10676
   215  007CA3  EC2D               	dw	60461
   216  007CA5  E71F               	dw	59167
   217  007CA7  2286               	dw	8838
   218  007CA9  A213               	dw	41491
   219  007CAB  678A               	dw	26506
   220  007CAD  6CB8               	dw	27832
   221  007CAF  A921               	dw	43297
   222  007CB1  7ADC               	dw	31452
   223  007CB3  BF45               	dw	48965
   224  007CB5  B477               	dw	46199
   225  007CB7  71EE               	dw	29166
   226  007CB9  5614               	dw	22036
   227  007CBB  938D               	dw	37773
   228  007CBD  98BF               	dw	39103
   229  007CBF  5D26               	dw	23846
   230  007CC1  8EDB               	dw	36571
   231  007CC3  4B42               	dw	19266
   232  007CC5  4070               	dw	16496
   233  007CC7  85E9               	dw	34281
   234  007CC9  0F84               	dw	3972
   235  007CCB  CA1D               	dw	51741
   236  007CCD  C12F               	dw	49455
   237  007CCF  04B6               	dw	1206
   238  007CD1  D74B               	dw	55115
   239  007CD3  12D2               	dw	4818
   240  007CD5  19E0               	dw	6624
   241  007CD7  DC79               	dw	56441
   242  007CD9  FB83               	dw	64387
   243  007CDB  3E1A               	dw	15898
   244  007CDD  3528               	dw	13608
   245  007CDF  F0B1               	dw	61617
   246  007CE1  234C               	dw	9036
   247  007CE3  E6D5               	dw	59093
   248  007CE5  EDE7               	dw	60903
   249  007CE7  287E               	dw	10366
   250  007CE9  F93D               	dw	63805
   251  007CEB  3CA4               	dw	15524
   252  007CED  3796               	dw	14230
   253  007CEF  F20F               	dw	61967
   254  007CF1  21F2               	dw	8690
   255  007CF3  E46B               	dw	58475
   256  007CF5  EF59               	dw	61273
   257  007CF7  2AC0               	dw	10944
   258  007CF9  0D3A               	dw	3386
   259  007CFB  C8A3               	dw	51363
   260  007CFD  C391               	dw	50065
   261  007CFF  0608               	dw	1544
   262  007D01  D5F5               	dw	54773
   263  007D03  106C               	dw	4204
   264  007D05  1B5E               	dw	7006
   265  007D07  DEC7               	dw	57031
   266  007D09  54AA               	dw	21674
   267  007D0B  9133               	dw	37171
   268  007D0D  9A01               	dw	39425
   269  007D0F  5F98               	dw	24472
   270  007D11  8C65               	dw	35941
   271  007D13  49FC               	dw	18940
   272  007D15  42CE               	dw	17102
   273  007D17  8757               	dw	34647
   274  007D19  A0AD               	dw	41133
   275  007D1B  6534               	dw	25908
   276  007D1D  6E06               	dw	28166
   277  007D1F  AB9F               	dw	43935
   278  007D21  7862               	dw	30818
   279  007D23  BDFB               	dw	48635
   280  007D25  B6C9               	dw	46793
   281  007D27  7350               	dw	29520
   282  007D29  51D6               	dw	20950
   283  007D2B  944F               	dw	37967
   284  007D2D  9F7D               	dw	40829
   285  007D2F  5AE4               	dw	23268
   286  007D31  8919               	dw	35097
   287  007D33  4C80               	dw	19584
   288  007D35  47B2               	dw	18354
   289  007D37  822B               	dw	33323
   290  007D39  A5D1               	dw	42449
   291  007D3B  6048               	dw	24648
   292  007D3D  6B7A               	dw	27514
   293  007D3F  AEE3               	dw	44771
   294  007D41  7D1E               	dw	32030
   295  007D43  B887               	dw	47239
   296  007D45  B3B5               	dw	46005
   297  007D47  762C               	dw	30252
   298  007D49  FC41               	dw	64577
   299  007D4B  39D8               	dw	14808
   300  007D4D  32EA               	dw	13034
   301  007D4F  F773               	dw	63347
   302  007D51  248E               	dw	9358
   303  007D53  E117               	dw	57623
   304  007D55  EA25               	dw	59941
   305  007D57  2FBC               	dw	12220
   306  007D59  0846               	dw	2118
   307  007D5B  CDDF               	dw	52703
   308  007D5D  C6ED               	dw	50925
   309  007D5F  0374               	dw	884
   310  007D61  D089               	dw	53385
   311  007D63  1510               	dw	5392
   312  007D65  1E22               	dw	7714
   313  007D67  DBBB               	dw	56251
   314  007D69  0AF8               	dw	2808
   315  007D6B  CF61               	dw	53089
   316  007D6D  C453               	dw	50259
   317  007D6F  01CA               	dw	458
   318  007D71  D237               	dw	53815
   319  007D73  17AE               	dw	6062
   320  007D75  1C9C               	dw	7324
   321  007D77  D905               	dw	55557
   322  007D79  FEFF               	dw	65279
   323  007D7B  3B66               	dw	15206
   324  007D7D  3054               	dw	12372
   325  007D7F  F5CD               	dw	62925
   326  007D81  2630               	dw	9776
   327  007D83  E3A9               	dw	58281
   328  007D85  E89B               	dw	59547
   329  007D87  2D02               	dw	11522
   330  007D89  A76F               	dw	42863
   331  007D8B  62F6               	dw	25334
   332  007D8D  69C4               	dw	27076
   333  007D8F  AC5D               	dw	44125
   334  007D91  7FA0               	dw	32672
   335  007D93  BA39               	dw	47673
   336  007D95  B10B               	dw	45323
   337  007D97  7492               	dw	29842
   338  007D99  5368               	dw	21352
   339  007D9B  96F1               	dw	38641
   340  007D9D  9DC3               	dw	40387
   341  007D9F  585A               	dw	22618
   342  007DA1  8BA7               	dw	35751
   343  007DA3  4E3E               	dw	20030
   344  007DA5  450C               	dw	17676
   345  007DA7  8095               	dw	32917
   346  007DA9                     __end_ofLT6804@crc15Table:
   347                           	opt stack 0
   348  007DA9  0000               	dw	0
   349  007DAB  C599               	dw	50585
   350  007DAD  CEAB               	dw	52907
   351  007DAF  0B32               	dw	2866
   352  007DB1  D8CF               	dw	55503
   353  007DB3  1D56               	dw	7510
   354  007DB5  1664               	dw	5732
   355  007DB7  D3FD               	dw	54269
   356  007DB9  F407               	dw	62471
   357  007DBB  319E               	dw	12702
   358  007DBD  3AAC               	dw	15020
   359  007DBF  FF35               	dw	65333
   360  007DC1  2CC8               	dw	11464
   361  007DC3  E951               	dw	59729
   362  007DC5  E263               	dw	57955
   363  007DC7  27FA               	dw	10234
   364  007DC9  AD97               	dw	44439
   365  007DCB  680E               	dw	26638
   366  007DCD  633C               	dw	25404
   367  007DCF  A6A5               	dw	42661
   368  007DD1  7558               	dw	30040
   369  007DD3  B0C1               	dw	45249
   370  007DD5  BBF3               	dw	48115
   371  007DD7  7E6A               	dw	32362
   372  007DD9  5990               	dw	22928
   373  007DDB  9C09               	dw	39945
   374  007DDD  973B               	dw	38715
   375  007DDF  52A2               	dw	21154
   376  007DE1  815F               	dw	33119
   377  007DE3  44C6               	dw	17606
   378  007DE5  4FF4               	dw	20468
   379  007DE7  8A6D               	dw	35437
   380  007DE9  5B2E               	dw	23342
   381  007DEB  9EB7               	dw	40631
   382  007DED  9585               	dw	38277
   383  007DEF  501C               	dw	20508
   384  007DF1  83E1               	dw	33761
   385  007DF3  4678               	dw	18040
   386  007DF5  4D4A               	dw	19786
   387  007DF7  88D3               	dw	35027
   388  007DF9  AF29               	dw	44841
   389  007DFB  6AB0               	dw	27312
   390  007DFD  6182               	dw	24962
   391  007DFF  A41B               	dw	42011
   392  007E01  77E6               	dw	30694
   393  007E03  B27F               	dw	45695
   394  007E05  B94D               	dw	47437
   395  007E07  7CD4               	dw	31956
   396  007E09  F6B9               	dw	63161
   397  007E0B  3320               	dw	13088
   398  007E0D  3812               	dw	14354
   399  007E0F  FD8B               	dw	64907
   400  007E11  2E76               	dw	11894
   401  007E13  EBEF               	dw	60399
   402  007E15  E0DD               	dw	57565
   403  007E17  2544               	dw	9540
   404  007E19  02BE               	dw	702
   405  007E1B  C727               	dw	50983
   406  007E1D  CC15               	dw	52245
   407  007E1F  098C               	dw	2444
   408  007E21  DA71               	dw	55921
   409  007E23  1FE8               	dw	8168
   410  007E25  14DA               	dw	5338
   411  007E27  D143               	dw	53571
   412  007E29  F3C5               	dw	62405
   413  007E2B  365C               	dw	13916
   414  007E2D  3D6E               	dw	15726
   415  007E2F  F8F7               	dw	63735
   416  007E31  2B0A               	dw	11018
   417  007E33  EE93               	dw	61075
   418  007E35  E5A1               	dw	58785
   419  007E37  2038               	dw	8248
   420  007E39  07C2               	dw	1986
   421  007E3B  C25B               	dw	49755
   422  007E3D  C969               	dw	51561
   423  007E3F  0CF0               	dw	3312
   424  007E41  DF0D               	dw	57101
   425  007E43  1A94               	dw	6804
   426  007E45  11A6               	dw	4518
   427  007E47  D43F               	dw	54335
   428  007E49  5E52               	dw	24146
   429  007E4B  9BCB               	dw	39883
   430  007E4D  90F9               	dw	37113
   431  007E4F  5560               	dw	21856
   432  007E51  869D               	dw	34461
   433  007E53  4304               	dw	17156
   434  007E55  4836               	dw	18486
   435  007E57  8DAF               	dw	36271
   436  007E59  AA55               	dw	43605
   437  007E5B  6FCC               	dw	28620
   438  007E5D  64FE               	dw	25854
   439  007E5F  A167               	dw	41319
   440  007E61  729A               	dw	29338
   441  007E63  B703               	dw	46851
   442  007E65  BC31               	dw	48177
   443  007E67  79A8               	dw	31144
   444  007E69  A8EB               	dw	43243
   445  007E6B  6D72               	dw	28018
   446  007E6D  6640               	dw	26176
   447  007E6F  A3D9               	dw	41945
   448  007E71  7024               	dw	28708
   449  007E73  B5BD               	dw	46525
   450  007E75  BE8F               	dw	48783
   451  007E77  7B16               	dw	31510
   452  007E79  5CEC               	dw	23788
   453  007E7B  9975               	dw	39285
   454  007E7D  9247               	dw	37447
   455  007E7F  57DE               	dw	22494
   456  007E81  8423               	dw	33827
   457  007E83  41BA               	dw	16826
   458  007E85  4A88               	dw	19080
   459  007E87  8F11               	dw	36625
   460  007E89  057C               	dw	1404
   461  007E8B  C0E5               	dw	49381
   462  007E8D  CBD7               	dw	52183
   463  007E8F  0E4E               	dw	3662
   464  007E91  DDB3               	dw	56755
   465  007E93  182A               	dw	6186
   466  007E95  1318               	dw	4888
   467  007E97  D681               	dw	54913
   468  007E99  F17B               	dw	61819
   469  007E9B  34E2               	dw	13538
   470  007E9D  3FD0               	dw	16336
   471  007E9F  FA49               	dw	64073
   472  007EA1  29B4               	dw	10676
   473  007EA3  EC2D               	dw	60461
   474  007EA5  E71F               	dw	59167
   475  007EA7  2286               	dw	8838
   476  007EA9  A213               	dw	41491
   477  007EAB  678A               	dw	26506
   478  007EAD  6CB8               	dw	27832
   479  007EAF  A921               	dw	43297
   480  007EB1  7ADC               	dw	31452
   481  007EB3  BF45               	dw	48965
   482  007EB5  B477               	dw	46199
   483  007EB7  71EE               	dw	29166
   484  007EB9  5614               	dw	22036
   485  007EBB  938D               	dw	37773
   486  007EBD  98BF               	dw	39103
   487  007EBF  5D26               	dw	23846
   488  007EC1  8EDB               	dw	36571
   489  007EC3  4B42               	dw	19266
   490  007EC5  4070               	dw	16496
   491  007EC7  85E9               	dw	34281
   492  007EC9  0F84               	dw	3972
   493  007ECB  CA1D               	dw	51741
   494  007ECD  C12F               	dw	49455
   495  007ECF  04B6               	dw	1206
   496  007ED1  D74B               	dw	55115
   497  007ED3  12D2               	dw	4818
   498  007ED5  19E0               	dw	6624
   499  007ED7  DC79               	dw	56441
   500  007ED9  FB83               	dw	64387
   501  007EDB  3E1A               	dw	15898
   502  007EDD  3528               	dw	13608
   503  007EDF  F0B1               	dw	61617
   504  007EE1  234C               	dw	9036
   505  007EE3  E6D5               	dw	59093
   506  007EE5  EDE7               	dw	60903
   507  007EE7  287E               	dw	10366
   508  007EE9  F93D               	dw	63805
   509  007EEB  3CA4               	dw	15524
   510  007EED  3796               	dw	14230
   511  007EEF  F20F               	dw	61967
   512  007EF1  21F2               	dw	8690
   513  007EF3  E46B               	dw	58475
   514  007EF5  EF59               	dw	61273
   515  007EF7  2AC0               	dw	10944
   516  007EF9  0D3A               	dw	3386
   517  007EFB  C8A3               	dw	51363
   518  007EFD  C391               	dw	50065
   519  007EFF  0608               	dw	1544
   520  007F01  D5F5               	dw	54773
   521  007F03  106C               	dw	4204
   522  007F05  1B5E               	dw	7006
   523  007F07  DEC7               	dw	57031
   524  007F09  54AA               	dw	21674
   525  007F0B  9133               	dw	37171
   526  007F0D  9A01               	dw	39425
   527  007F0F  5F98               	dw	24472
   528  007F11  8C65               	dw	35941
   529  007F13  49FC               	dw	18940
   530  007F15  42CE               	dw	17102
   531  007F17  8757               	dw	34647
   532  007F19  A0AD               	dw	41133
   533  007F1B  6534               	dw	25908
   534  007F1D  6E06               	dw	28166
   535  007F1F  AB9F               	dw	43935
   536  007F21  7862               	dw	30818
   537  007F23  BDFB               	dw	48635
   538  007F25  B6C9               	dw	46793
   539  007F27  7350               	dw	29520
   540  007F29  51D6               	dw	20950
   541  007F2B  944F               	dw	37967
   542  007F2D  9F7D               	dw	40829
   543  007F2F  5AE4               	dw	23268
   544  007F31  8919               	dw	35097
   545  007F33  4C80               	dw	19584
   546  007F35  47B2               	dw	18354
   547  007F37  822B               	dw	33323
   548  007F39  A5D1               	dw	42449
   549  007F3B  6048               	dw	24648
   550  007F3D  6B7A               	dw	27514
   551  007F3F  AEE3               	dw	44771
   552  007F41  7D1E               	dw	32030
   553  007F43  B887               	dw	47239
   554  007F45  B3B5               	dw	46005
   555  007F47  762C               	dw	30252
   556  007F49  FC41               	dw	64577
   557  007F4B  39D8               	dw	14808
   558  007F4D  32EA               	dw	13034
   559  007F4F  F773               	dw	63347
   560  007F51  248E               	dw	9358
   561  007F53  E117               	dw	57623
   562  007F55  EA25               	dw	59941
   563  007F57  2FBC               	dw	12220
   564  007F59  0846               	dw	2118
   565  007F5B  CDDF               	dw	52703
   566  007F5D  C6ED               	dw	50925
   567  007F5F  0374               	dw	884
   568  007F61  D089               	dw	53385
   569  007F63  1510               	dw	5392
   570  007F65  1E22               	dw	7714
   571  007F67  DBBB               	dw	56251
   572  007F69  0AF8               	dw	2808
   573  007F6B  CF61               	dw	53089
   574  007F6D  C453               	dw	50259
   575  007F6F  01CA               	dw	458
   576  007F71  D237               	dw	53815
   577  007F73  17AE               	dw	6062
   578  007F75  1C9C               	dw	7324
   579  007F77  D905               	dw	55557
   580  007F79  FEFF               	dw	65279
   581  007F7B  3B66               	dw	15206
   582  007F7D  3054               	dw	12372
   583  007F7F  F5CD               	dw	62925
   584  007F81  2630               	dw	9776
   585  007F83  E3A9               	dw	58281
   586  007F85  E89B               	dw	59547
   587  007F87  2D02               	dw	11522
   588  007F89  A76F               	dw	42863
   589  007F8B  62F6               	dw	25334
   590  007F8D  69C4               	dw	27076
   591  007F8F  AC5D               	dw	44125
   592  007F91  7FA0               	dw	32672
   593  007F93  BA39               	dw	47673
   594  007F95  B10B               	dw	45323
   595  007F97  7492               	dw	29842
   596  007F99  5368               	dw	21352
   597  007F9B  96F1               	dw	38641
   598  007F9D  9DC3               	dw	40387
   599  007F9F  585A               	dw	22618
   600  007FA1  8BA7               	dw	35751
   601  007FA3  4E3E               	dw	20030
   602  007FA5  450C               	dw	17676
   603  007FA7  8095               	dw	32917
   604  007FA9                     __end_of_crc15Table:
   605                           	opt stack 0
   606  007FA9                     _dpowers:
   607                           	opt stack 0
   608  007FA9  0001               	dw	1
   609  007FAB  000A               	dw	10
   610  007FAD  0064               	dw	100
   611  007FAF  03E8               	dw	1000
   612  007FB1  2710               	dw	10000
   613  007FB3                     __end_of_dpowers:
   614                           	opt stack 0
   615  007FB3                     exp@coeff:
   616                           	opt stack 0
   617  007FB3  00                 	db	0
   618  007FB4  80                 	db	128
   619  007FB5  3F                 	db	63
   620  007FB6  72                 	db	114
   621  007FB7  31                 	db	49
   622  007FB8  3F                 	db	63
   623  007FB9  FE                 	db	254
   624  007FBA  75                 	db	117
   625  007FBB  3E                 	db	62
   626  007FBC  58                 	db	88
   627  007FBD  63                 	db	99
   628  007FBE  3D                 	db	61
   629  007FBF  95                 	db	149
   630  007FC0  1D                 	db	29
   631  007FC1  3C                 	db	60
   632  007FC2  C5                 	db	197
   633  007FC3  AE                 	db	174
   634  007FC4  3A                 	db	58
   635  007FC5  79                 	db	121
   636  007FC6  21                 	db	33
   637  007FC7  39                 	db	57
   638  007FC8  94                 	db	148
   639  007FC9  80                 	db	128
   640  007FCA  37                 	db	55
   641  007FCB  93                 	db	147
   642  007FCC  A7                 	db	167
   643  007FCD  35                 	db	53
   644  007FCE  56                 	db	86
   645  007FCF  15                 	db	21
   646  007FD0  34                 	db	52
   647  007FD1                     __end_ofexp@coeff:
   648                           	opt stack 0
   649  007FD1                     log@coeff:
   650                           	opt stack 0
   651  007FD1  00                 	db	0
   652  007FD2  00                 	db	0
   653  007FD3  00                 	db	0
   654  007FD4  00                 	db	0
   655  007FD5  80                 	db	128
   656  007FD6  3F                 	db	63
   657  007FD7  F0                 	db	240
   658  007FD8  FF                 	db	255
   659  007FD9  BE                 	db	190
   660  007FDA  E2                 	db	226
   661  007FDB  A9                 	db	169
   662  007FDC  3E                 	db	62
   663  007FDD  83                 	db	131
   664  007FDE  76                 	db	118
   665  007FDF  BE                 	db	190
   666  007FE0  AE                 	db	174
   667  007FE1  2B                 	db	43
   668  007FE2  3E                 	db	62
   669  007FE3  3C                 	db	60
   670  007FE4  C3                 	db	195
   671  007FE5  BD                 	db	189
   672  007FE6  D2                 	db	210
   673  007FE7  13                 	db	19
   674  007FE8  3D                 	db	61
   675  007FE9  78                 	db	120
   676  007FEA  D3                 	db	211
   677  007FEB  BB                 	db	187
   678  007FEC                     __end_oflog@coeff:
   679                           	opt stack 0
   680  007FEC                     STR_2:
   681  007FEC  56                 	db	86	;'V'
   682  007FED  6F                 	db	111	;'o'
   683  007FEE  6C                 	db	108	;'l'
   684  007FEF  74                 	db	116	;'t'
   685  007FF0  61                 	db	97	;'a'
   686  007FF1  67                 	db	103	;'g'
   687  007FF2  65                 	db	101	;'e'
   688  007FF3  3A                 	db	58	;':'
   689  007FF4  20                 	db	32
   690  007FF5  25                 	db	37
   691  007FF6  69                 	db	105	;'i'
   692  007FF7  20                 	db	32
   693  007FF8  0A                 	db	10
   694  007FF9  00                 	db	0
   695  007FFA                     STR_1:
   696  007FFA  42                 	db	66	;'B'
   697  007FFB  4F                 	db	79	;'O'
   698  007FFC  4F                 	db	79	;'O'
   699  007FFD  54                 	db	84	;'T'
   700  007FFE  00                 	db	0
   701                           
   702                           ; #config settings
   703  007FFF  00                 	db	0	; dummy byte at the end
   704  0000                     
   705                           	psect	nvCOMRAM
   706  00004F                     __pnvCOMRAM:
   707                           	opt stack 0
   708  00004F                     _timer0ReloadVal16bit:
   709                           	opt stack 0
   710  00004F                     	ds	2
   711                           
   712                           	psect	nvBANK0
   713  0000FF                     __pnvBANK0:
   714                           	opt stack 0
   715  0000FF                     _eusart1TxBufferRemaining:
   716                           	opt stack 0
   717  0000FF                     	ds	1
   718  0000                     _ANSELA	set	3896
   719  0000                     _ANSELB	set	3897
   720  0000                     _ANSELC	set	3898
   721  0000                     _ANSELD	set	3899
   722  0000                     _ANSELE	set	3900
   723  0000                     _ADCON0	set	4034
   724  0000                     _ADCON0bits	set	4034
   725  0000                     _ADCON1	set	4033
   726  0000                     _ADCON2	set	4032
   727  0000                     _ADRESH	set	4036
   728  0000                     _ADRESL	set	4035
   729  0000                     _BAUDCON1	set	4024
   730  0000                     _INTCON2bits	set	4081
   731  0000                     _INTCONbits	set	4082
   732  0000                     _IPR1bits	set	3999
   733  0000                     _LATA	set	3977
   734  0000                     _LATB	set	3978
   735  0000                     _LATC	set	3979
   736  0000                     _LATCbits	set	3979
   737  0000                     _LATD	set	3980
   738  0000                     _LATE	set	3981
   739  0000                     _OSCCON	set	4051
   740  0000                     _OSCCON2	set	4050
   741  0000                     _OSCTUNE	set	3995
   742  0000                     _PIE1bits	set	3997
   743  0000                     _PIR1bits	set	3998
   744  0000                     _RCONbits	set	4048
   745  0000                     _RCREG1	set	4014
   746  0000                     _RCSTA1	set	4011
   747  0000                     _RCSTA1bits	set	4011
   748  0000                     _SPBRG1	set	4015
   749  0000                     _SPBRGH1	set	4016
   750  0000                     _SSP2ADD	set	3950
   751  0000                     _SSP2BUF	set	3951
   752  0000                     _SSP2CON1	set	3948
   753  0000                     _SSP2CON1bits	set	3948
   754  0000                     _SSP2STAT	set	3949
   755  0000                     _SSP2STATbits	set	3949
   756  0000                     _T0CON	set	4053
   757  0000                     _T0CONbits	set	4053
   758  0000                     _TMR0H	set	4055
   759  0000                     _TMR0L	set	4054
   760  0000                     _TRISA	set	3986
   761  0000                     _TRISB	set	3987
   762  0000                     _TRISC	set	3988
   763  0000                     _TRISD	set	3989
   764  0000                     _TRISDbits	set	3989
   765  0000                     _TRISE	set	3990
   766  0000                     _TXREG1	set	4013
   767  0000                     _TXSTA1	set	4012
   768  0000                     _WPUB	set	3937
   769  0000                     _LATD3	set	31843
   770  0000                     _LATD6	set	31846
   771  0000                     _TRISD3	set	31915
   772                           
   773                           	psect	cinit
   774  0010BC                     __pcinit:
   775                           	opt stack 0
   776  0010BC                     start_initialization:
   777                           	opt stack 0
   778  0010BC                     __initialization:
   779                           	opt stack 0
   780                           
   781                           ; Clear objects allocated to BANK2 (162 bytes)
   782  0010BC  EE02  F000         	lfsr	0,__pbssBANK2
   783  0010C0  0EA2               	movlw	162
   784  0010C2                     clear_0:
   785  0010C2  6AEE               	clrf	postinc0,c
   786  0010C4  06E8               	decf	wreg,f,c
   787  0010C6  E1FD               	bnz	clear_0
   788                           
   789                           ; Clear objects allocated to BANK1 (15 bytes)
   790  0010C8  EE01  F0F0         	lfsr	0,__pbssBANK1
   791  0010CC  0E0F               	movlw	15
   792  0010CE                     clear_1:
   793  0010CE  6AEE               	clrf	postinc0,c
   794  0010D0  06E8               	decf	wreg,f,c
   795  0010D2  E1FD               	bnz	clear_1
   796                           
   797                           ; Clear objects allocated to BANK0 (125 bytes)
   798  0010D4  EE00  F060         	lfsr	0,__pbssBANK0
   799  0010D8  0E7D               	movlw	125
   800  0010DA                     clear_2:
   801  0010DA  6AEE               	clrf	postinc0,c
   802  0010DC  06E8               	decf	wreg,f,c
   803  0010DE  E1FD               	bnz	clear_2
   804                           
   805                           ; Clear objects allocated to COMRAM (13 bytes)
   806  0010E0  EE00  F042         	lfsr	0,__pbssCOMRAM
   807  0010E4  0E0D               	movlw	13
   808  0010E6                     clear_3:
   809  0010E6  6AEE               	clrf	postinc0,c
   810  0010E8  06E8               	decf	wreg,f,c
   811  0010EA  E1FD               	bnz	clear_3
   812                           
   813                           ; Initialize objects allocated to BANK0 (6 bytes)
   814                           ; load TBLPTR registers with __pidataBANK0
   815  0010EC  0E34               	movlw	low __pidataBANK0
   816  0010EE  6EF6               	movwf	tblptrl,c
   817  0010F0  0E16               	movlw	high __pidataBANK0
   818  0010F2  6EF7               	movwf	tblptrh,c
   819  0010F4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   820  0010F6  6EF8               	movwf	tblptru,c
   821  0010F8  EE00  F0F9         	lfsr	0,__pdataBANK0
   822  0010FC  EE10 F006          	lfsr	1,6
   823  001100                     copy_data0:
   824  001100  0009               	tblrd		*+
   825  001102  CFF5 FFEE          	movff	tablat,postinc0
   826  001106  50E5               	movf	postdec1,w,c
   827  001108  50E1               	movf	fsr1l,w,c
   828  00110A  E1FA               	bnz	copy_data0
   829  00110C                     end_of_initialization:
   830                           	opt stack 0
   831  00110C                     __end_of__initialization:
   832                           	opt stack 0
   833  00110C  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   834  00110E  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   835  001110  0E00               	movlw	low (__Lmediumconst shr (0+16))
   836  001112  6EF8               	movwf	tblptru,c
   837  001114  0100               	movlb	0
   838  001116  EFB1  F009         	goto	_main	;jump to C main() function
   839                           tblptru	equ	0xFF8
   840                           tblptrh	equ	0xFF7
   841                           tblptrl	equ	0xFF6
   842                           tablat	equ	0xFF5
   843                           postinc0	equ	0xFEE
   844                           wreg	equ	0xFE8
   845                           postdec1	equ	0xFE5
   846                           fsr1l	equ	0xFE1
   847                           
   848                           	psect	bssCOMRAM
   849  000042                     __pbssCOMRAM:
   850                           	opt stack 0
   851  000042                     _current_byte:
   852                           	opt stack 0
   853  000042                     	ds	2
   854  000044                     _i:
   855                           	opt stack 0
   856  000044                     	ds	2
   857  000046                     _CFGR0:
   858                           	opt stack 0
   859  000046                     	ds	1
   860  000047                     _CFGR4:
   861                           	opt stack 0
   862  000047                     	ds	1
   863  000048                     _CFGR5:
   864                           	opt stack 0
   865  000048                     	ds	1
   866  000049                     _eusart1RxHead:
   867                           	opt stack 0
   868  000049                     	ds	1
   869  00004A                     _eusart1RxTail:
   870                           	opt stack 0
   871  00004A                     	ds	1
   872  00004B                     _eusart1TxHead:
   873                           	opt stack 0
   874  00004B                     	ds	1
   875  00004C                     _eusart1TxTail:
   876                           	opt stack 0
   877  00004C                     	ds	1
   878  00004D                     _current_ic:
   879                           	opt stack 0
   880  00004D                     	ds	2
   881                           tblptru	equ	0xFF8
   882                           tblptrh	equ	0xFF7
   883                           tblptrl	equ	0xFF6
   884                           tablat	equ	0xFF5
   885                           postinc0	equ	0xFEE
   886                           wreg	equ	0xFE8
   887                           postdec1	equ	0xFE5
   888                           fsr1l	equ	0xFE1
   889                           
   890                           	psect	bssBANK0
   891  000060                     __pbssBANK0:
   892                           	opt stack 0
   893  000060                     _Temp_DegF:
   894                           	opt stack 0
   895  000060                     	ds	24
   896  000078                     _CVolt:
   897                           	opt stack 0
   898  000078                     	ds	18
   899  00008A                     _Aux_data:
   900                           	opt stack 0
   901  00008A                     	ds	12
   902  000096                     _Current:
   903                           	opt stack 0
   904  000096                     	ds	12
   905  0000A2                     _eusart1RxBuffer:
   906                           	opt stack 0
   907  0000A2                     	ds	8
   908  0000AA                     _eusart1TxBuffer:
   909                           	opt stack 0
   910  0000AA                     	ds	8
   911  0000B2                     _CC1:
   912                           	opt stack 0
   913  0000B2                     	ds	3
   914  0000B5                     _CC2:
   915                           	opt stack 0
   916  0000B5                     	ds	3
   917  0000B8                     _CC3:
   918                           	opt stack 0
   919  0000B8                     	ds	3
   920  0000BB                     _Volt1:
   921                           	opt stack 0
   922  0000BB                     	ds	3
   923  0000BE                     _Volt2:
   924                           	opt stack 0
   925  0000BE                     	ds	3
   926  0000C1                     _fault:
   927                           	opt stack 0
   928  0000C1                     	ds	3
   929  0000C4                     _Read_Status_INC:
   930                           	opt stack 0
   931  0000C4                     	ds	2
   932  0000C6                     _errno:
   933                           	opt stack 0
   934  0000C6                     	ds	2
   935  0000C8                     _faultvalue:
   936                           	opt stack 0
   937  0000C8                     	ds	2
   938  0000CA                     _j:
   939                           	opt stack 0
   940  0000CA                     	ds	2
   941  0000CC                     _k:
   942                           	opt stack 0
   943  0000CC                     	ds	2
   944  0000CE                     _eusart1RxCount:
   945                           	opt stack 0
   946  0000CE                     	ds	1
   947  0000CF                     _fault_flag:
   948                           	opt stack 0
   949  0000CF                     	ds	1
   950  0000D0                     _infault:
   951                           	opt stack 0
   952  0000D0                     	ds	1
   953  0000D1                     _ADAX:
   954                           	opt stack 0
   955  0000D1                     	ds	4
   956  0000D5                     _ADCV:
   957                           	opt stack 0
   958  0000D5                     	ds	4
   959  0000D9                     _ADSTAT:
   960                           	opt stack 0
   961  0000D9                     	ds	4
   962                           tblptru	equ	0xFF8
   963                           tblptrh	equ	0xFF7
   964                           tblptrl	equ	0xFF6
   965                           tablat	equ	0xFF5
   966                           postinc0	equ	0xFEE
   967                           wreg	equ	0xFE8
   968                           postdec1	equ	0xFE5
   969                           fsr1l	equ	0xFE1
   970                           
   971                           	psect	dataBANK0
   972  0000F9                     __pdataBANK0:
   973                           	opt stack 0
   974  0000F9                     _Over_Voltage_Value:
   975                           	opt stack 0
   976  0000F9                     	ds	2
   977  0000FB                     _Under_Voltage_Value:
   978                           	opt stack 0
   979  0000FB                     	ds	2
   980  0000FD                     _CarOn:
   981                           	opt stack 0
   982  0000FD                     	ds	1
   983  0000FE                     _CurrentDir:
   984                           	opt stack 0
   985  0000FE                     	ds	1
   986                           tblptru	equ	0xFF8
   987                           tblptrh	equ	0xFF7
   988                           tblptrl	equ	0xFF6
   989                           tablat	equ	0xFF5
   990                           postinc0	equ	0xFEE
   991                           wreg	equ	0xFE8
   992                           postdec1	equ	0xFE5
   993                           fsr1l	equ	0xFE1
   994                           
   995                           	psect	bssBANK1
   996  0001F0                     __pbssBANK1:
   997                           	opt stack 0
   998  0001F0                     _CFGR1:
   999                           	opt stack 0
  1000  0001F0                     	ds	1
  1001  0001F1                     _CFGR2:
  1002                           	opt stack 0
  1003  0001F1                     	ds	1
  1004  0001F2                     _CFGR3:
  1005                           	opt stack 0
  1006  0001F2                     	ds	1
  1007  0001F3                     _LTC6804_DATA_ConfigBank:
  1008                           	opt stack 0
  1009  0001F3                     	ds	12
  1010                           tblptru	equ	0xFF8
  1011                           tblptrh	equ	0xFF7
  1012                           tblptrl	equ	0xFF6
  1013                           tablat	equ	0xFF5
  1014                           postinc0	equ	0xFEE
  1015                           wreg	equ	0xFE8
  1016                           postdec1	equ	0xFE5
  1017                           fsr1l	equ	0xFE1
  1018                           
  1019                           	psect	bssBANK2
  1020  000200                     __pbssBANK2:
  1021                           	opt stack 0
  1022  000200                     _PrevTemp_DegF:
  1023                           	opt stack 0
  1024  000200                     	ds	24
  1025  000218                     _Voltage_data:
  1026                           	opt stack 0
  1027  000218                     	ds	24
  1028  000230                     _CurrentOffset:
  1029                           	opt stack 0
  1030  000230                     	ds	18
  1031  000242                     _Aux_codes_Bank:
  1032                           	opt stack 0
  1033  000242                     	ds	12
  1034  00024E                     _Stat_codes_Bank:
  1035                           	opt stack 0
  1036  00024E                     	ds	12
  1037  00025A                     _aux_codes_Bank1:
  1038                           	opt stack 0
  1039  00025A                     	ds	12
  1040  000266                     _aux_codes_Bank2:
  1041                           	opt stack 0
  1042  000266                     	ds	12
  1043  000272                     _TmpTemp_DegF:
  1044                           	opt stack 0
  1045  000272                     	ds	24
  1046  00028A                     _cell_codes_Bank:
  1047                           	opt stack 0
  1048  00028A                     	ds	24
  1049                           tblptru	equ	0xFF8
  1050                           tblptrh	equ	0xFF7
  1051                           tblptrl	equ	0xFF6
  1052                           tablat	equ	0xFF5
  1053                           postinc0	equ	0xFEE
  1054                           wreg	equ	0xFE8
  1055                           postdec1	equ	0xFE5
  1056                           fsr1l	equ	0xFE1
  1057                           
  1058                           	psect	cstackBANK2
  1059  0002A2                     __pcstackBANK2:
  1060                           	opt stack 0
  1061  0002A2                     Read_Battery@Read_Status:
  1062                           	opt stack 0
  1063                           
  1064                           ; 2 bytes @ 0x0
  1065  0002A2                     	ds	2
  1066  0002A4                     
  1067                           ; 2 bytes @ 0x2
  1068  0002A4                     	ds	2
  1069  0002A6                     
  1070                           ; 3 bytes @ 0x4
  1071  0002A6                     	ds	3
  1072                           tblptru	equ	0xFF8
  1073                           tblptrh	equ	0xFF7
  1074                           tblptrl	equ	0xFF6
  1075                           tablat	equ	0xFF5
  1076                           postinc0	equ	0xFEE
  1077                           wreg	equ	0xFE8
  1078                           postdec1	equ	0xFE5
  1079                           fsr1l	equ	0xFE1
  1080                           
  1081                           	psect	cstackBANK1
  1082  000100                     __pcstackBANK1:
  1083                           	opt stack 0
  1084  000100                     LTC6804_wrcfg@cmd:
  1085                           	opt stack 0
  1086  000100                     LTC6804_rdcv@cell_data:
  1087                           	opt stack 0
  1088                           
  1089                           ; 240 bytes @ 0x0
  1090  000100                     	ds	200
  1091  0001C8                     LTC6804_wrcfg@BYTES_IN_REG:
  1092                           	opt stack 0
  1093                           
  1094                           ; 2 bytes @ 0xC8
  1095  0001C8                     	ds	2
  1096  0001CA                     LTC6804_wrcfg@temp_pec:
  1097                           	opt stack 0
  1098                           
  1099                           ; 2 bytes @ 0xCA
  1100  0001CA                     	ds	2
  1101  0001CC                     LTC6804_wrcfg@cmd_index:
  1102                           	opt stack 0
  1103                           
  1104                           ; 2 bytes @ 0xCC
  1105  0001CC                     	ds	36
  1106                           tblptru	equ	0xFF8
  1107                           tblptrh	equ	0xFF7
  1108                           tblptrl	equ	0xFF6
  1109                           tablat	equ	0xFF5
  1110                           postinc0	equ	0xFEE
  1111                           wreg	equ	0xFE8
  1112                           postdec1	equ	0xFE5
  1113                           fsr1l	equ	0xFE1
  1114                           
  1115                           	psect	cstackBANK0
  1116  0000DD                     __pcstackBANK0:
  1117                           	opt stack 0
  1118  0000DD                     _LTC6804_rdcv$2731:
  1119                           	opt stack 0
  1120                           
  1121                           ; 2 bytes @ 0x0
  1122  0000DD                     	ds	2
  1123  0000DF                     LTC6804_rdcv@pec_error:
  1124                           	opt stack 0
  1125                           
  1126                           ; 2 bytes @ 0x2
  1127  0000DF                     	ds	2
  1128  0000E1                     LTC6804_rdcv@NUM_RX_BYT:
  1129                           	opt stack 0
  1130                           
  1131                           ; 2 bytes @ 0x4
  1132  0000E1                     	ds	2
  1133  0000E3                     LTC6804_rdcv@BYT_IN_REG:
  1134                           	opt stack 0
  1135                           
  1136                           ; 2 bytes @ 0x6
  1137  0000E3                     	ds	2
  1138  0000E5                     LTC6804_rdcv@parsed_cell:
  1139                           	opt stack 0
  1140                           
  1141                           ; 2 bytes @ 0x8
  1142  0000E5                     	ds	2
  1143  0000E7                     LTC6804_rdcv@received_pec:
  1144                           	opt stack 0
  1145                           
  1146                           ; 2 bytes @ 0xA
  1147  0000E7                     	ds	2
  1148  0000E9                     LTC6804_rdcv@data_pec:
  1149                           	opt stack 0
  1150                           
  1151                           ; 2 bytes @ 0xC
  1152  0000E9                     	ds	2
  1153  0000EB                     LTC6804_rdcv@cell_reg:
  1154                           	opt stack 0
  1155                           
  1156                           ; 2 bytes @ 0xE
  1157  0000EB                     	ds	2
  1158  0000ED                     LTC6804_rdcv@CELL_IN_REG:
  1159                           	opt stack 0
  1160                           
  1161                           ; 2 bytes @ 0x10
  1162  0000ED                     	ds	2
  1163  0000EF                     LTC6804_rdcv@current_cell:
  1164                           	opt stack 0
  1165                           
  1166                           ; 2 bytes @ 0x12
  1167  0000EF                     	ds	2
  1168  0000F1                     LTC6804_rdcv@data_counter:
  1169                           	opt stack 0
  1170                           
  1171                           ; 2 bytes @ 0x14
  1172  0000F1                     	ds	2
  1173  0000F3                     ?_Read_Battery:
  1174                           	opt stack 0
  1175  0000F3                     Read_Battery@BatteryPlacement:
  1176                           	opt stack 0
  1177                           
  1178                           ; 2 bytes @ 0x16
  1179  0000F3                     	ds	2
  1180  0000F5                     Read_Battery@cell_codes:
  1181                           	opt stack 0
  1182                           
  1183                           ; 2 bytes @ 0x18
  1184  0000F5                     	ds	2
  1185  0000F7                     ??_Read_Battery:
  1186                           
  1187                           ; 0 bytes @ 0x1A
  1188  0000F7                     	ds	2
  1189                           tblptru	equ	0xFF8
  1190                           tblptrh	equ	0xFF7
  1191                           tblptrl	equ	0xFF6
  1192                           tablat	equ	0xFF5
  1193                           postinc0	equ	0xFEE
  1194                           wreg	equ	0xFE8
  1195                           postdec1	equ	0xFE5
  1196                           fsr1l	equ	0xFE1
  1197                           
  1198                           	psect	cstackCOMRAM
  1199  000001                     __pcstackCOMRAM:
  1200                           	opt stack 0
  1201  000001                     ??_INTERRUPT_InterruptManager:
  1202  000001                     
  1203                           ; 2 bytes @ 0x0
  1204  000001                     	ds	14
  1205  00000F                     ??_TMR0_Initialize:
  1206  00000F                     ?___wmul:
  1207                           	opt stack 0
  1208  00000F                     ?___lwdiv:
  1209                           	opt stack 0
  1210  00000F                     SPI2_Exchange8bit@stuff:
  1211                           	opt stack 0
  1212  00000F                     EUSART1_Write@txData:
  1213                           	opt stack 0
  1214  00000F                     Delay@wait:
  1215                           	opt stack 0
  1216  00000F                     DelayMicro@wait:
  1217                           	opt stack 0
  1218  00000F                     set_adc@MD:
  1219                           	opt stack 0
  1220  00000F                     ___wmul@multiplier:
  1221                           	opt stack 0
  1222  00000F                     ___lwdiv@dividend:
  1223                           	opt stack 0
  1224                           
  1225                           ; 2 bytes @ 0xE
  1226  00000F                     	ds	1
  1227  000010                     putch@txData:
  1228                           	opt stack 0
  1229  000010                     spi_write_array@len:
  1230                           	opt stack 0
  1231  000010                     spi_write_read@tx_Data:
  1232                           	opt stack 0
  1233                           
  1234                           ; 2 bytes @ 0xF
  1235  000010                     	ds	1
  1236  000011                     ??_Delay:
  1237  000011                     ??_DelayMicro:
  1238  000011                     set_adc@DCP:
  1239                           	opt stack 0
  1240  000011                     ___wmul@multiplicand:
  1241                           	opt stack 0
  1242  000011                     ___lwdiv@divisor:
  1243                           	opt stack 0
  1244                           
  1245                           ; 2 bytes @ 0x10
  1246  000011                     	ds	1
  1247  000012                     Delay@x:
  1248                           	opt stack 0
  1249  000012                     DelayMicro@x:
  1250                           	opt stack 0
  1251  000012                     spi_write_array@data:
  1252                           	opt stack 0
  1253  000012                     spi_write_read@tx_len:
  1254                           	opt stack 0
  1255                           
  1256                           ; 2 bytes @ 0x11
  1257  000012                     	ds	1
  1258  000013                     set_adc@CH:
  1259                           	opt stack 0
  1260  000013                     ___wmul@product:
  1261                           	opt stack 0
  1262  000013                     ___lwdiv@quotient:
  1263                           	opt stack 0
  1264                           
  1265                           ; 2 bytes @ 0x12
  1266  000013                     	ds	1
  1267  000014                     ??_spi_write_array:
  1268  000014                     spi_write_read@rx_data:
  1269                           	opt stack 0
  1270                           
  1271                           ; 2 bytes @ 0x13
  1272  000014                     	ds	1
  1273  000015                     ?_pec15_calc:
  1274                           	opt stack 0
  1275  000015                     ___lwdiv@counter:
  1276                           	opt stack 0
  1277  000015                     SetTempEnable@ic:
  1278                           	opt stack 0
  1279  000015                     Set_ADC_Mode@ic:
  1280                           	opt stack 0
  1281  000015                     Set_DCC_Mode_OFF@ic:
  1282                           	opt stack 0
  1283  000015                     Set_DCTO_Mode_OFF@ic:
  1284                           	opt stack 0
  1285  000015                     Set_REFON_Pin@ic:
  1286                           	opt stack 0
  1287  000015                     set_adc@CHG:
  1288                           	opt stack 0
  1289  000015                     pec15_calc@len:
  1290                           	opt stack 0
  1291                           
  1292                           ; 2 bytes @ 0x14
  1293  000015                     	ds	1
  1294  000016                     ?___lwmod:
  1295                           	opt stack 0
  1296  000016                     spi_write_read@rx_len:
  1297                           	opt stack 0
  1298  000016                     ___lwmod@dividend:
  1299                           	opt stack 0
  1300                           
  1301                           ; 2 bytes @ 0x15
  1302  000016                     	ds	1
  1303  000017                     ??_Set_DCC_Mode_OFF:
  1304  000017                     ??_Set_DCTO_Mode_OFF:
  1305  000017                     ??_set_adc:
  1306  000017                     SetTempEnable@value:
  1307                           	opt stack 0
  1308  000017                     Set_ADC_Mode@ADCOPT_Mode:
  1309                           	opt stack 0
  1310  000017                     Set_REFON_Pin@REFON_Mode:
  1311                           	opt stack 0
  1312  000017                     pec15_calc@data:
  1313                           	opt stack 0
  1314                           
  1315                           ; 2 bytes @ 0x16
  1316  000017                     	ds	1
  1317  000018                     ??_Set_REFON_Pin:
  1318  000018                     ??_Set_ADC_Mode:
  1319  000018                     ??_SetTempEnable:
  1320  000018                     ??_spi_write_read:
  1321  000018                     ___lwmod@divisor:
  1322                           	opt stack 0
  1323                           
  1324                           ; 2 bytes @ 0x17
  1325  000018                     	ds	1
  1326  000019                     ??_pec15_calc:
  1327  000019                     Set_DCC_Mode_OFF@fault_value:
  1328                           	opt stack 0
  1329  000019                     Set_DCTO_Mode_OFF@fault_value:
  1330                           	opt stack 0
  1331  000019                     set_adc@md_bits:
  1332                           	opt stack 0
  1333                           
  1334                           ; 2 bytes @ 0x18
  1335  000019                     	ds	1
  1336  00001A                     ___lwmod@counter:
  1337                           	opt stack 0
  1338  00001A                     SetTempEnable@fault_value:
  1339                           	opt stack 0
  1340  00001A                     Set_ADC_Mode@fault_value:
  1341                           	opt stack 0
  1342  00001A                     Set_REFON_Pin@fault_value:
  1343                           	opt stack 0
  1344  00001A                     spi_write_read@i:
  1345                           	opt stack 0
  1346                           
  1347                           ; 2 bytes @ 0x19
  1348  00001A                     	ds	1
  1349  00001B                     ?_printf:
  1350                           	opt stack 0
  1351  00001B                     printf@f:
  1352                           	opt stack 0
  1353                           
  1354                           ; 2 bytes @ 0x1A
  1355  00001B                     	ds	3
  1356  00001E                     pec15_calc@addr:
  1357                           	opt stack 0
  1358                           
  1359                           ; 2 bytes @ 0x1D
  1360  00001E                     	ds	1
  1361  00001F                     ??_printf:
  1362                           
  1363                           ; 0 bytes @ 0x1E
  1364  00001F                     	ds	1
  1365  000020                     pec15_calc@remainder:
  1366                           	opt stack 0
  1367  000020                     printf@ap:
  1368                           	opt stack 0
  1369                           
  1370                           ; 2 bytes @ 0x1F
  1371  000020                     	ds	2
  1372  000022                     ??_LTC6804_adcv:
  1373  000022                     printf@flag:
  1374                           	opt stack 0
  1375  000022                     LTC6804_rdcv_reg@reg:
  1376                           	opt stack 0
  1377  000022                     LTC6804_wrcfg@total_ic:
  1378                           	opt stack 0
  1379                           
  1380                           ; 2 bytes @ 0x21
  1381  000022                     	ds	1
  1382  000023                     printf@prec:
  1383                           	opt stack 0
  1384                           
  1385                           ; 1 bytes @ 0x22
  1386  000023                     	ds	1
  1387  000024                     LTC6804_rdcv_reg@total_ic:
  1388                           	opt stack 0
  1389  000024                     LTC6804_wrcfg@config:
  1390                           	opt stack 0
  1391  000024                     printf@val:
  1392                           	opt stack 0
  1393  000024                     LTC6804_adcv@cmd:
  1394                           	opt stack 0
  1395                           
  1396                           ; 8 bytes @ 0x23
  1397  000024                     	ds	2
  1398  000026                     ??_LTC6804_wrcfg:
  1399  000026                     printf@c:
  1400                           	opt stack 0
  1401  000026                     LTC6804_rdcv_reg@data:
  1402                           	opt stack 0
  1403                           
  1404                           ; 2 bytes @ 0x25
  1405  000026                     	ds	2
  1406  000028                     ??_LTC6804_rdcv_reg:
  1407  000028                     Initalize_LT6804b@IC:
  1408                           	opt stack 0
  1409                           
  1410                           ; 2 bytes @ 0x27
  1411  000028                     	ds	2
  1412  00002A                     LTC6804_rdcv_reg@temp_pec:
  1413                           	opt stack 0
  1414                           
  1415                           ; 2 bytes @ 0x29
  1416  00002A                     	ds	2
  1417  00002C                     LTC6804_adcv@temp_pec:
  1418                           	opt stack 0
  1419  00002C                     LTC6804_rdcv_reg@cmd:
  1420                           	opt stack 0
  1421                           
  1422                           ; 8 bytes @ 0x2B
  1423  00002C                     	ds	8
  1424  000034                     ?_LTC6804_rdcv:
  1425                           	opt stack 0
  1426  000034                     LTC6804_rdcv@reg:
  1427                           	opt stack 0
  1428                           
  1429                           ; 2 bytes @ 0x33
  1430  000034                     	ds	2
  1431  000036                     LTC6804_rdcv@total_ic:
  1432                           	opt stack 0
  1433                           
  1434                           ; 2 bytes @ 0x35
  1435  000036                     	ds	2
  1436  000038                     LTC6804_rdcv@cell_codes:
  1437                           	opt stack 0
  1438                           
  1439                           ; 2 bytes @ 0x37
  1440  000038                     	ds	2
  1441  00003A                     ??_LTC6804_rdcv:
  1442                           
  1443                           ; 0 bytes @ 0x39
  1444  00003A                     	ds	6
  1445  000040                     LTC6804_rdcv@hi:
  1446                           	opt stack 0
  1447                           
  1448                           ; 2 bytes @ 0x3F
  1449  000040                     	ds	2
  1450  000042                     tblptru	equ	0xFF8
  1451                           tblptrh	equ	0xFF7
  1452                           tblptrl	equ	0xFF6
  1453                           tablat	equ	0xFF5
  1454                           postinc0	equ	0xFEE
  1455                           wreg	equ	0xFE8
  1456                           postdec1	equ	0xFE5
  1457                           fsr1l	equ	0xFE1
  1458                           
  1459                           ; 0 bytes @ 0x41
  1460 ;;
  1461 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1462 ;;
  1463 ;; *************** function _main *****************
  1464 ;; Defined at:
  1465 ;;		line 33 in file "Main.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;  argc            2    2[BANK2 ] int 
  1468 ;;  argv            3    4[BANK2 ] PTR PTR unsigned char 
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;		None
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  2    2[BANK2 ] int 
  1473 ;; Registers used:
  1474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1480 ;;      Params:         0       0       0       5       0       0       0
  1481 ;;      Locals:         0       0       0       0       0       0       0
  1482 ;;      Temps:          0       0       0       0       0       0       0
  1483 ;;      Totals:         0       0       0       5       0       0       0
  1484 ;;Total ram usage:        5 bytes
  1485 ;; Hardware stack levels required when called:    9
  1486 ;; This function calls:
  1487 ;;		_Delay
  1488 ;;		_Run_Mode
  1489 ;;		_SYSTEM_Initialize
  1490 ;;		_Start_BMS
  1491 ;;		_printf
  1492 ;; This function is called by:
  1493 ;;		Startup code after reset
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           	psect	text0
  1498  001362                     __ptext0:
  1499                           	opt stack 0
  1500  001362                     _main:
  1501                           	opt stack 22
  1502                           
  1503                           ;Main.c: 35: SYSTEM_Initialize();
  1504                           
  1505                           ;incstack = 0
  1506  001362  ECC0  F00A         	call	_SYSTEM_Initialize	;wreg free
  1507                           
  1508                           ;Main.c: 36: do { LATD6 = 1; } while(0);
  1509  001366  8C8C               	bsf	3980,6,c	;volatile
  1510                           
  1511                           ;Main.c: 37: Delay(120);
  1512  001368  0E00               	movlw	0
  1513  00136A  6E10               	movwf	Delay@wait+1,c
  1514  00136C  0E78               	movlw	120
  1515  00136E  6E0F               	movwf	Delay@wait,c
  1516  001370  EC26  F00A         	call	_Delay	;wreg free
  1517                           
  1518                           ;Main.c: 38: do { LATD6 = 0; } while(0);
  1519  001374  9C8C               	bcf	3980,6,c	;volatile
  1520                           
  1521                           ;Main.c: 56: (INTCONbits.GIE = 1);
  1522  001376  8EF2               	bsf	intcon,7,c	;volatile
  1523                           
  1524                           ;Main.c: 59: (INTCONbits.PEIE = 1);
  1525  001378  8CF2               	bsf	intcon,6,c	;volatile
  1526                           
  1527                           ;Main.c: 68: LATCbits.LATC5 =1;
  1528  00137A  8A8B               	bsf	3979,5,c	;volatile
  1529                           
  1530                           ;Main.c: 69: printf("BOOT");
  1531  00137C  0EFA               	movlw	low STR_1
  1532  00137E  6E1B               	movwf	printf@f,c
  1533  001380  0E7F               	movlw	high STR_1
  1534  001382  6E1C               	movwf	printf@f+1,c
  1535  001384  EC13  F006         	call	_printf	;wreg free
  1536                           
  1537                           ;Main.c: 70: Start_BMS();
  1538  001388  EC1D  F00B         	call	_Start_BMS	;wreg free
  1539  00138C                     l5991:
  1540                           
  1541                           ;Main.c: 73: {
  1542                           ;Main.c: 74: Run_Mode();
  1543  00138C  ECED  F009         	call	_Run_Mode	;wreg free
  1544                           
  1545                           ;Main.c: 75: Delay(500);
  1546  001390  0E01               	movlw	1
  1547  001392  6E10               	movwf	Delay@wait+1,c
  1548  001394  0EF4               	movlw	244
  1549  001396  6E0F               	movwf	Delay@wait,c
  1550  001398  EC26  F00A         	call	_Delay	;wreg free
  1551  00139C  D7F7               	goto	l5991
  1552  00139E                     __end_of_main:
  1553                           	opt stack 0
  1554                           tblptru	equ	0xFF8
  1555                           tblptrh	equ	0xFF7
  1556                           tblptrl	equ	0xFF6
  1557                           tablat	equ	0xFF5
  1558                           intcon	equ	0xFF2
  1559                           postinc0	equ	0xFEE
  1560                           wreg	equ	0xFE8
  1561                           postdec1	equ	0xFE5
  1562                           fsr1l	equ	0xFE1
  1563                           
  1564 ;; *************** function _Start_BMS *****************
  1565 ;; Defined at:
  1566 ;;		line 31 in file "BatteryManagment.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;		None
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;		None
  1571 ;; Return value:  Size  Location     Type
  1572 ;;		None               void
  1573 ;; Registers used:
  1574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1580 ;;      Params:         0       0       0       0       0       0       0
  1581 ;;      Locals:         0       0       0       0       0       0       0
  1582 ;;      Temps:          0       0       0       0       0       0       0
  1583 ;;      Totals:         0       0       0       0       0       0       0
  1584 ;;Total ram usage:        0 bytes
  1585 ;; Hardware stack levels used:    1
  1586 ;; Hardware stack levels required when called:    8
  1587 ;; This function calls:
  1588 ;;		_Initalize_LT6804b
  1589 ;; This function is called by:
  1590 ;;		_main
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text1
  1595  00163A                     __ptext1:
  1596                           	opt stack 0
  1597  00163A                     _Start_BMS:
  1598                           	opt stack 22
  1599                           
  1600                           ;BatteryManagment.c: 34: Initalize_LT6804b();
  1601                           
  1602                           ;incstack = 0
  1603  00163A  EC62  F007         	call	_Initalize_LT6804b	;wreg free
  1604  00163E  0012               	return		;funcret
  1605  001640                     __end_of_Start_BMS:
  1606                           	opt stack 0
  1607                           tblptru	equ	0xFF8
  1608                           tblptrh	equ	0xFF7
  1609                           tblptrl	equ	0xFF6
  1610                           tablat	equ	0xFF5
  1611                           intcon	equ	0xFF2
  1612                           postinc0	equ	0xFEE
  1613                           wreg	equ	0xFE8
  1614                           postdec1	equ	0xFE5
  1615                           fsr1l	equ	0xFE1
  1616                           
  1617 ;; *************** function _Initalize_LT6804b *****************
  1618 ;; Defined at:
  1619 ;;		line 54 in file "BatteryManagment.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;		None
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  IC              2   39[COMRAM] int 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;		None               void
  1626 ;; Registers used:
  1627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1633 ;;      Params:         0       0       0       0       0       0       0
  1634 ;;      Locals:         2       0       0       0       0       0       0
  1635 ;;      Temps:          0       0       0       0       0       0       0
  1636 ;;      Totals:         2       0       0       0       0       0       0
  1637 ;;Total ram usage:        2 bytes
  1638 ;; Hardware stack levels used:    1
  1639 ;; Hardware stack levels required when called:    7
  1640 ;; This function calls:
  1641 ;;		_SetTempEnable
  1642 ;;		_Set_ADC_Mode
  1643 ;;		_Set_DCC_Mode_OFF
  1644 ;;		_Set_DCTO_Mode_OFF
  1645 ;;		_Set_REFON_Pin
  1646 ;;		_UpdateLT6804
  1647 ;;		_wakeup_sleep
  1648 ;; This function is called by:
  1649 ;;		_Start_BMS
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           	psect	text2
  1654  000EC4                     __ptext2:
  1655                           	opt stack 0
  1656  000EC4                     _Initalize_LT6804b:
  1657                           	opt stack 22
  1658                           
  1659                           ;BatteryManagment.c: 55: int IC = 0;
  1660                           
  1661                           ;incstack = 0
  1662  000EC4  0E00               	movlw	0
  1663  000EC6  6E29               	movwf	Initalize_LT6804b@IC+1,c
  1664  000EC8  0E00               	movlw	0
  1665  000ECA  6E28               	movwf	Initalize_LT6804b@IC,c
  1666                           
  1667                           ;BatteryManagment.c: 57: CFGR0=0xFE;
  1668  000ECC  0EFE               	movlw	254
  1669  000ECE  6E46               	movwf	_CFGR0,c
  1670                           
  1671                           ;BatteryManagment.c: 58: CFGR1=0;
  1672  000ED0  0E00               	movlw	0
  1673  000ED2  0101               	movlb	1	; () banked
  1674  000ED4  6FF0               	movwf	_CFGR1& (0+255),b
  1675                           
  1676                           ;BatteryManagment.c: 59: CFGR2=0;
  1677  000ED6  0E00               	movlw	0
  1678  000ED8  0101               	movlb	1	; () banked
  1679  000EDA  6FF1               	movwf	_CFGR2& (0+255),b
  1680                           
  1681                           ;BatteryManagment.c: 60: CFGR3=0;
  1682  000EDC  0E00               	movlw	0
  1683  000EDE  0101               	movlb	1	; () banked
  1684  000EE0  6FF2               	movwf	_CFGR3& (0+255),b
  1685                           
  1686                           ;BatteryManagment.c: 61: CFGR4=0;
  1687  000EE2  0E00               	movlw	0
  1688  000EE4  6E47               	movwf	_CFGR4,c
  1689                           
  1690                           ;BatteryManagment.c: 62: CFGR5=0;
  1691  000EE6  0E00               	movlw	0
  1692  000EE8  6E48               	movwf	_CFGR5,c
  1693                           
  1694                           ;BatteryManagment.c: 65: while (IC < 1) {
  1695  000EEA  D026               	goto	l5697
  1696  000EEC                     l5693:
  1697                           
  1698                           ;BatteryManagment.c: 66: Set_REFON_Pin(IC, 1);
  1699  000EEC  C028  F015         	movff	Initalize_LT6804b@IC,Set_REFON_Pin@ic
  1700  000EF0  C029  F016         	movff	Initalize_LT6804b@IC+1,Set_REFON_Pin@ic+1
  1701  000EF4  0E01               	movlw	1
  1702  000EF6  6E17               	movwf	Set_REFON_Pin@REFON_Mode,c
  1703  000EF8  ECDF  F008         	call	_Set_REFON_Pin	;wreg free
  1704                           
  1705                           ;BatteryManagment.c: 67: Set_ADC_Mode(IC, 1);
  1706  000EFC  C028  F015         	movff	Initalize_LT6804b@IC,Set_ADC_Mode@ic
  1707  000F00  C029  F016         	movff	Initalize_LT6804b@IC+1,Set_ADC_Mode@ic+1
  1708  000F04  0E01               	movlw	1
  1709  000F06  6E17               	movwf	Set_ADC_Mode@ADCOPT_Mode,c
  1710  000F08  EC04  F009         	call	_Set_ADC_Mode	;wreg free
  1711                           
  1712                           ;BatteryManagment.c: 68: Set_DCC_Mode_OFF(IC);
  1713  000F0C  C028  F015         	movff	Initalize_LT6804b@IC,Set_DCC_Mode_OFF@ic
  1714  000F10  C029  F016         	movff	Initalize_LT6804b@IC+1,Set_DCC_Mode_OFF@ic+1
  1715  000F14  ECE9  F007         	call	_Set_DCC_Mode_OFF	;wreg free
  1716                           
  1717                           ;BatteryManagment.c: 69: Set_DCTO_Mode_OFF(IC);
  1718  000F18  C028  F015         	movff	Initalize_LT6804b@IC,Set_DCTO_Mode_OFF@ic
  1719  000F1C  C029  F016         	movff	Initalize_LT6804b@IC+1,Set_DCTO_Mode_OFF@ic+1
  1720  000F20  EC4E  F009         	call	_Set_DCTO_Mode_OFF	;wreg free
  1721                           
  1722                           ;BatteryManagment.c: 70: SetTempEnable(IC, 0);
  1723  000F24  C028  F015         	movff	Initalize_LT6804b@IC,SetTempEnable@ic
  1724  000F28  C029  F016         	movff	Initalize_LT6804b@IC+1,SetTempEnable@ic+1
  1725  000F2C  0E00               	movlw	0
  1726  000F2E  6E17               	movwf	SetTempEnable@value,c
  1727  000F30  EC29  F009         	call	_SetTempEnable	;wreg free
  1728                           
  1729                           ;BatteryManagment.c: 72: IC++;
  1730  000F34  4A28               	infsnz	Initalize_LT6804b@IC,f,c
  1731  000F36  2A29               	incf	Initalize_LT6804b@IC+1,f,c
  1732  000F38                     l5697:
  1733  000F38  BE29               	btfsc	Initalize_LT6804b@IC+1,7,c
  1734  000F3A  D7D8               	goto	l5693
  1735  000F3C  5029               	movf	Initalize_LT6804b@IC+1,w,c
  1736  000F3E  E103               	bnz	l5699
  1737  000F40  0428               	decf	Initalize_LT6804b@IC,w,c
  1738  000F42  A0D8               	btfss	status,0,c
  1739  000F44  D7D3               	goto	l5693
  1740  000F46                     l5699:
  1741                           
  1742                           ;BatteryManagment.c: 73: };
  1743                           ;BatteryManagment.c: 75: wakeup_sleep();
  1744  000F46  EC9A  F00A         	call	_wakeup_sleep	;wreg free
  1745                           
  1746                           ;BatteryManagment.c: 76: UpdateLT6804();
  1747  000F4A  ECDE  F00A         	call	_UpdateLT6804	;wreg free
  1748  000F4E  0012               	return		;funcret
  1749  000F50                     __end_of_Initalize_LT6804b:
  1750                           	opt stack 0
  1751                           tblptru	equ	0xFF8
  1752                           tblptrh	equ	0xFF7
  1753                           tblptrl	equ	0xFF6
  1754                           tablat	equ	0xFF5
  1755                           intcon	equ	0xFF2
  1756                           postinc0	equ	0xFEE
  1757                           wreg	equ	0xFE8
  1758                           postdec1	equ	0xFE5
  1759                           fsr1l	equ	0xFE1
  1760                           status	equ	0xFD8
  1761                           
  1762 ;; *************** function _wakeup_sleep *****************
  1763 ;; Defined at:
  1764 ;;		line 1159 in file "LT6804.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;		None
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;		None
  1769 ;; Return value:  Size  Location     Type
  1770 ;;		None               void
  1771 ;; Registers used:
  1772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1778 ;;      Params:         0       0       0       0       0       0       0
  1779 ;;      Locals:         0       0       0       0       0       0       0
  1780 ;;      Temps:          0       0       0       0       0       0       0
  1781 ;;      Totals:         0       0       0       0       0       0       0
  1782 ;;Total ram usage:        0 bytes
  1783 ;; Hardware stack levels used:    1
  1784 ;; Hardware stack levels required when called:    5
  1785 ;; This function calls:
  1786 ;;		_Delay
  1787 ;;		_spi_write_array
  1788 ;; This function is called by:
  1789 ;;		_Initalize_LT6804b
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           	psect	text3
  1794  001534                     __ptext3:
  1795                           	opt stack 0
  1796  001534                     _wakeup_sleep:
  1797                           	opt stack 23
  1798                           
  1799                           ;LT6804.c: 1163: LATD3 = 0;
  1800                           
  1801                           ;incstack = 0
  1802  001534  968C               	bcf	3980,3,c	;volatile
  1803                           
  1804                           ;LT6804.c: 1164: spi_write_array(1,0);
  1805  001536  0E00               	movlw	0
  1806  001538  6E11               	movwf	spi_write_array@len+1,c
  1807  00153A  0E01               	movlw	1
  1808  00153C  6E10               	movwf	spi_write_array@len,c
  1809  00153E  0E00               	movlw	0
  1810  001540  6E12               	movwf	spi_write_array@data,c
  1811  001542  0E00               	movlw	0
  1812  001544  6E13               	movwf	spi_write_array@data+1,c
  1813  001546  ECCF  F009         	call	_spi_write_array	;wreg free
  1814                           
  1815                           ;LT6804.c: 1165: Delay(1);
  1816  00154A  0E00               	movlw	0
  1817  00154C  6E10               	movwf	Delay@wait+1,c
  1818  00154E  0E01               	movlw	1
  1819  001550  6E0F               	movwf	Delay@wait,c
  1820  001552  EC26  F00A         	call	_Delay	;wreg free
  1821                           
  1822                           ;LT6804.c: 1166: LATD3 = 1;
  1823  001556  868C               	bsf	3980,3,c	;volatile
  1824  001558  0012               	return		;funcret
  1825  00155A                     __end_of_wakeup_sleep:
  1826                           	opt stack 0
  1827                           tblptru	equ	0xFF8
  1828                           tblptrh	equ	0xFF7
  1829                           tblptrl	equ	0xFF6
  1830                           tablat	equ	0xFF5
  1831                           intcon	equ	0xFF2
  1832                           postinc0	equ	0xFEE
  1833                           wreg	equ	0xFE8
  1834                           postdec1	equ	0xFE5
  1835                           fsr1l	equ	0xFE1
  1836                           status	equ	0xFD8
  1837                           
  1838 ;; *************** function _UpdateLT6804 *****************
  1839 ;; Defined at:
  1840 ;;		line 713 in file "BatteryManagment.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;		None
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;		None
  1845 ;; Return value:  Size  Location     Type
  1846 ;;		None               void
  1847 ;; Registers used:
  1848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1854 ;;      Params:         0       0       0       0       0       0       0
  1855 ;;      Locals:         0       0       0       0       0       0       0
  1856 ;;      Temps:          0       0       0       0       0       0       0
  1857 ;;      Totals:         0       0       0       0       0       0       0
  1858 ;;Total ram usage:        0 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; Hardware stack levels required when called:    6
  1861 ;; This function calls:
  1862 ;;		_LTC6804_wrcfg
  1863 ;; This function is called by:
  1864 ;;		_Initalize_LT6804b
  1865 ;;		_RunBypass_Set
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           	psect	text4
  1870  0015BC                     __ptext4:
  1871                           	opt stack 0
  1872  0015BC                     _UpdateLT6804:
  1873                           	opt stack 22
  1874                           
  1875                           ;BatteryManagment.c: 715: LTC6804_wrcfg(1, LTC6804_DATA_ConfigBank);
  1876                           
  1877                           ;incstack = 0
  1878  0015BC  0E00               	movlw	0
  1879  0015BE  6E23               	movwf	LTC6804_wrcfg@total_ic+1,c
  1880  0015C0  0E01               	movlw	1
  1881  0015C2  6E22               	movwf	LTC6804_wrcfg@total_ic,c
  1882  0015C4  0EF3               	movlw	low _LTC6804_DATA_ConfigBank
  1883  0015C6  6E24               	movwf	LTC6804_wrcfg@config,c
  1884  0015C8  0E01               	movlw	high _LTC6804_DATA_ConfigBank
  1885  0015CA  6E25               	movwf	LTC6804_wrcfg@config+1,c
  1886  0015CC  EC4E  F004         	call	_LTC6804_wrcfg	;wreg free
  1887  0015D0  0012               	return		;funcret
  1888  0015D2                     __end_of_UpdateLT6804:
  1889                           	opt stack 0
  1890                           tblptru	equ	0xFF8
  1891                           tblptrh	equ	0xFF7
  1892                           tblptrl	equ	0xFF6
  1893                           tablat	equ	0xFF5
  1894                           intcon	equ	0xFF2
  1895                           postinc0	equ	0xFEE
  1896                           wreg	equ	0xFE8
  1897                           postdec1	equ	0xFE5
  1898                           fsr1l	equ	0xFE1
  1899                           status	equ	0xFD8
  1900                           
  1901 ;; *************** function _LTC6804_wrcfg *****************
  1902 ;; Defined at:
  1903 ;;		line 1001 in file "LT6804.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;  total_ic        2   33[COMRAM] int 
  1906 ;;  config          2   35[COMRAM] PTR int [6]
  1907 ;;		 -> LTC6804_DATA_ConfigBank(12), 
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;  cmd           200    0[BANK1 ] int [100]
  1910 ;;  cmd_index       2  204[BANK1 ] int 
  1911 ;;  temp_pec        2  202[BANK1 ] int 
  1912 ;;  BYTES_IN_REG    2  200[BANK1 ] const int 
  1913 ;; Return value:  Size  Location     Type
  1914 ;;		None               void
  1915 ;; Registers used:
  1916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1922 ;;      Params:         4       0       0       0       0       0       0
  1923 ;;      Locals:         0       0     206       0       0       0       0
  1924 ;;      Temps:          2       0       0       0       0       0       0
  1925 ;;      Totals:         6       0     206       0       0       0       0
  1926 ;;Total ram usage:      212 bytes
  1927 ;; Hardware stack levels used:    1
  1928 ;; Hardware stack levels required when called:    5
  1929 ;; This function calls:
  1930 ;;		___wmul
  1931 ;;		_pec15_calc
  1932 ;;		_spi_write_array
  1933 ;;		_wakeup_idle
  1934 ;; This function is called by:
  1935 ;;		_UpdateLT6804
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           	psect	text5
  1940  00089C                     __ptext5:
  1941                           	opt stack 0
  1942  00089C                     _LTC6804_wrcfg:
  1943                           	opt stack 22
  1944                           
  1945                           ;LT6804.c: 1003: const int BYTES_IN_REG = 6;
  1946                           
  1947                           ;incstack = 0
  1948  00089C  0E00               	movlw	0
  1949  00089E  0101               	movlb	1	; () banked
  1950  0008A0  6FC9               	movwf	(LTC6804_wrcfg@BYTES_IN_REG+1)& (0+255),b
  1951  0008A2  0E06               	movlw	6
  1952  0008A4  6FC8               	movwf	LTC6804_wrcfg@BYTES_IN_REG& (0+255),b
  1953                           
  1954                           ;LT6804.c: 1004: int cmd[100];
  1955                           ;LT6804.c: 1005: int temp_pec;
  1956                           ;LT6804.c: 1006: int cmd_index;
  1957                           ;LT6804.c: 1009: cmd[0] = 0x00;
  1958  0008A6  0E00               	movlw	0
  1959  0008A8  0101               	movlb	1	; () banked
  1960  0008AA  6F01               	movwf	(LTC6804_wrcfg@cmd+1)& (0+255),b
  1961  0008AC  0E00               	movlw	0
  1962  0008AE  6F00               	movwf	LTC6804_wrcfg@cmd& (0+255),b
  1963                           
  1964                           ;LT6804.c: 1010: cmd[1] = 0x01;
  1965  0008B0  0E00               	movlw	0
  1966  0008B2  0101               	movlb	1	; () banked
  1967  0008B4  6F03               	movwf	(LTC6804_wrcfg@cmd+3)& (0+255),b
  1968  0008B6  0E01               	movlw	1
  1969  0008B8  6F02               	movwf	(LTC6804_wrcfg@cmd+2)& (0+255),b
  1970                           
  1971                           ;LT6804.c: 1011: cmd[2] = 0x3d;
  1972  0008BA  0E00               	movlw	0
  1973  0008BC  0101               	movlb	1	; () banked
  1974  0008BE  6F05               	movwf	(LTC6804_wrcfg@cmd+5)& (0+255),b
  1975  0008C0  0E3D               	movlw	61
  1976  0008C2  6F04               	movwf	(LTC6804_wrcfg@cmd+4)& (0+255),b
  1977                           
  1978                           ;LT6804.c: 1012: cmd[3] = 0x6e;
  1979  0008C4  0E00               	movlw	0
  1980  0008C6  0101               	movlb	1	; () banked
  1981  0008C8  6F07               	movwf	(LTC6804_wrcfg@cmd+7)& (0+255),b
  1982  0008CA  0E6E               	movlw	110
  1983  0008CC  6F06               	movwf	(LTC6804_wrcfg@cmd+6)& (0+255),b
  1984                           
  1985                           ;LT6804.c: 1015: cmd_index = 4;
  1986  0008CE  0E00               	movlw	0
  1987  0008D0  0101               	movlb	1	; () banked
  1988  0008D2  6FCD               	movwf	(LTC6804_wrcfg@cmd_index+1)& (0+255),b
  1989  0008D4  0E04               	movlw	4
  1990  0008D6  6FCC               	movwf	LTC6804_wrcfg@cmd_index& (0+255),b
  1991                           
  1992                           ; BSR set to: 1
  1993                           ;LT6804.c: 1016: for (current_ic = total_ic; current_ic > 0; current_ic--)
  1994  0008D8  C022  F04D         	movff	LTC6804_wrcfg@total_ic,_current_ic
  1995  0008DC  C023  F04E         	movff	LTC6804_wrcfg@total_ic+1,_current_ic+1
  1996  0008E0  D09B               	goto	l5449
  1997  0008E2                     l5425:
  1998                           
  1999                           ; BSR set to: 1
  2000                           ;LT6804.c: 1017: {
  2001                           ;LT6804.c: 1018: for (current_byte = 0; current_byte < BYTES_IN_REG; current_byte++)
  2002  0008E2  0E00               	movlw	0
  2003  0008E4  6E43               	movwf	_current_byte+1,c
  2004  0008E6  0E00               	movlw	0
  2005  0008E8  6E42               	movwf	_current_byte,c
  2006  0008EA                     l5427:
  2007                           
  2008                           ; BSR set to: 1
  2009  0008EA  0101               	movlb	1	; () banked
  2010  0008EC  51C8               	movf	LTC6804_wrcfg@BYTES_IN_REG& (0+255),w,b
  2011  0008EE  5C42               	subwf	_current_byte,w,c
  2012  0008F0  5043               	movf	_current_byte+1,w,c
  2013  0008F2  0A80               	xorlw	128
  2014  0008F4  6E26               	movwf	??_LTC6804_wrcfg& (0+255),c
  2015  0008F6  0101               	movlb	1	; () banked
  2016  0008F8  51C9               	movf	(LTC6804_wrcfg@BYTES_IN_REG+1)& (0+255),w,b
  2017  0008FA  0A80               	xorlw	128
  2018  0008FC  5826               	subwfb	??_LTC6804_wrcfg& (0+255),w,c
  2019  0008FE  B0D8               	btfsc	status,0,c
  2020  000900  D039               	goto	l5439
  2021                           
  2022                           ; BSR set to: 1
  2023                           ;LT6804.c: 1019: {
  2024                           ;LT6804.c: 1021: cmd[cmd_index] = config[current_ic-1][current_byte];
  2025                           
  2026                           ; BSR set to: 1
  2027                           
  2028                           ; BSR set to: 1
  2029  000902  0EFF               	movlw	255
  2030  000904  244D               	addwf	_current_ic,w,c
  2031  000906  6E0F               	movwf	___wmul@multiplier,c
  2032  000908  0EFF               	movlw	255
  2033  00090A  204E               	addwfc	_current_ic+1,w,c
  2034  00090C  6E10               	movwf	___wmul@multiplier+1,c
  2035  00090E  0E00               	movlw	0
  2036  000910  6E12               	movwf	___wmul@multiplicand+1,c
  2037  000912  0E0C               	movlw	12
  2038  000914  6E11               	movwf	___wmul@multiplicand,c
  2039  000916  ECAD  F00A         	call	___wmul	;wreg free
  2040  00091A  C024  F026         	movff	LTC6804_wrcfg@config,??_LTC6804_wrcfg
  2041  00091E  C025  F027         	movff	LTC6804_wrcfg@config+1,??_LTC6804_wrcfg+1
  2042  000922  500F               	movf	?___wmul,w,c
  2043  000924  2626               	addwf	??_LTC6804_wrcfg,f,c
  2044  000926  5010               	movf	?___wmul+1,w,c
  2045  000928  2227               	addwfc	??_LTC6804_wrcfg+1,f,c
  2046  00092A  90D8               	bcf	status,0,c
  2047  00092C  3442               	rlcf	_current_byte,w,c
  2048  00092E  6ED9               	movwf	fsr2l,c
  2049  000930  3443               	rlcf	_current_byte+1,w,c
  2050  000932  6EDA               	movwf	fsr2h,c
  2051  000934  5026               	movf	??_LTC6804_wrcfg,w,c
  2052  000936  26D9               	addwf	fsr2l,f,c
  2053  000938  5027               	movf	??_LTC6804_wrcfg+1,w,c
  2054  00093A  22DA               	addwfc	fsr2h,f,c
  2055  00093C  90D8               	bcf	status,0,c
  2056  00093E  0101               	movlb	1	; () banked
  2057  000940  35CC               	rlcf	LTC6804_wrcfg@cmd_index& (0+255),w,b
  2058  000942  6EE1               	movwf	fsr1l,c
  2059  000944  0101               	movlb	1	; () banked
  2060  000946  35CD               	rlcf	(LTC6804_wrcfg@cmd_index+1)& (0+255),w,b
  2061  000948  6EE2               	movwf	fsr1h,c
  2062  00094A  0E00               	movlw	low LTC6804_wrcfg@cmd
  2063  00094C  26E1               	addwf	fsr1l,f,c
  2064  00094E  0E01               	movlw	high LTC6804_wrcfg@cmd
  2065  000950  22E2               	addwfc	fsr1h,f,c
  2066  000952  CFDE FFE6          	movff	postinc2,postinc1
  2067  000956  CFDD FFE5          	movff	postdec2,postdec1
  2068                           
  2069                           ; BSR set to: 1
  2070                           ;LT6804.c: 1022: cmd_index = cmd_index + 1;
  2071  00095A  0E01               	movlw	1
  2072  00095C  0101               	movlb	1	; () banked
  2073  00095E  25CC               	addwf	LTC6804_wrcfg@cmd_index& (0+255),w,b
  2074  000960  0101               	movlb	1	; () banked
  2075  000962  6FCC               	movwf	LTC6804_wrcfg@cmd_index& (0+255),b
  2076  000964  0E00               	movlw	0
  2077  000966  0101               	movlb	1	; () banked
  2078  000968  21CD               	addwfc	(LTC6804_wrcfg@cmd_index+1)& (0+255),w,b
  2079  00096A  0101               	movlb	1	; () banked
  2080  00096C  6FCD               	movwf	(LTC6804_wrcfg@cmd_index+1)& (0+255),b
  2081                           
  2082                           ; BSR set to: 1
  2083  00096E  4A42               	infsnz	_current_byte,f,c
  2084  000970  2A43               	incf	_current_byte+1,f,c
  2085  000972  D7BB               	goto	l5427
  2086  000974                     l5439:
  2087                           
  2088                           ; BSR set to: 1
  2089                           ;LT6804.c: 1023: }
  2090                           ;LT6804.c: 1025: temp_pec = (int)pec15_calc(BYTES_IN_REG, &config[current_ic-1][0]);
  2091  000974  C1C8  F015         	movff	LTC6804_wrcfg@BYTES_IN_REG,pec15_calc@len
  2092  000978  C1C9  F016         	movff	LTC6804_wrcfg@BYTES_IN_REG+1,pec15_calc@len+1
  2093  00097C  0EFF               	movlw	255
  2094  00097E  244D               	addwf	_current_ic,w,c
  2095  000980  6E0F               	movwf	___wmul@multiplier,c
  2096  000982  0EFF               	movlw	255
  2097  000984  204E               	addwfc	_current_ic+1,w,c
  2098  000986  6E10               	movwf	___wmul@multiplier+1,c
  2099  000988  0E00               	movlw	0
  2100  00098A  6E12               	movwf	___wmul@multiplicand+1,c
  2101  00098C  0E0C               	movlw	12
  2102  00098E  6E11               	movwf	___wmul@multiplicand,c
  2103  000990  ECAD  F00A         	call	___wmul	;wreg free
  2104  000994  500F               	movf	?___wmul,w,c
  2105  000996  2424               	addwf	LTC6804_wrcfg@config,w,c
  2106  000998  6E17               	movwf	pec15_calc@data,c
  2107  00099A  5010               	movf	?___wmul+1,w,c
  2108  00099C  2025               	addwfc	LTC6804_wrcfg@config+1,w,c
  2109  00099E  6E18               	movwf	pec15_calc@data+1,c
  2110  0009A0  EC10  F007         	call	_pec15_calc	;wreg free
  2111  0009A4  C015  F1CA         	movff	?_pec15_calc,LTC6804_wrcfg@temp_pec
  2112  0009A8  C016  F1CB         	movff	?_pec15_calc+1,LTC6804_wrcfg@temp_pec+1
  2113                           
  2114                           ;LT6804.c: 1026: cmd[cmd_index] = (int)(temp_pec >> 8);
  2115  0009AC  C1CB  F026         	movff	LTC6804_wrcfg@temp_pec+1,??_LTC6804_wrcfg
  2116  0009B0  6A27               	clrf	(??_LTC6804_wrcfg+1)& (0+255),c
  2117  0009B2  BE26               	btfsc	??_LTC6804_wrcfg& (0+255),7,c
  2118  0009B4  6827               	setf	(??_LTC6804_wrcfg+1)& (0+255),c
  2119  0009B6  90D8               	bcf	status,0,c
  2120  0009B8  0101               	movlb	1	; () banked
  2121  0009BA  35CC               	rlcf	LTC6804_wrcfg@cmd_index& (0+255),w,b
  2122  0009BC  6ED9               	movwf	fsr2l,c
  2123  0009BE  0101               	movlb	1	; () banked
  2124  0009C0  35CD               	rlcf	(LTC6804_wrcfg@cmd_index+1)& (0+255),w,b
  2125  0009C2  6EDA               	movwf	fsr2h,c
  2126  0009C4  0E00               	movlw	low LTC6804_wrcfg@cmd
  2127  0009C6  26D9               	addwf	fsr2l,f,c
  2128  0009C8  0E01               	movlw	high LTC6804_wrcfg@cmd
  2129  0009CA  22DA               	addwfc	fsr2h,f,c
  2130  0009CC  C026  FFDE         	movff	??_LTC6804_wrcfg,postinc2
  2131  0009D0  C027  FFDD         	movff	??_LTC6804_wrcfg+1,postdec2
  2132                           
  2133                           ; BSR set to: 1
  2134                           ;LT6804.c: 1027: cmd[cmd_index + 1] = (int)temp_pec;
  2135  0009D4  C1CC  F026         	movff	LTC6804_wrcfg@cmd_index,??_LTC6804_wrcfg
  2136  0009D8  C1CD  F027         	movff	LTC6804_wrcfg@cmd_index+1,??_LTC6804_wrcfg+1
  2137  0009DC  90D8               	bcf	status,0,c
  2138  0009DE  3626               	rlcf	??_LTC6804_wrcfg,f,c
  2139  0009E0  3627               	rlcf	??_LTC6804_wrcfg+1,f,c
  2140  0009E2  0E02               	movlw	2
  2141  0009E4  2626               	addwf	??_LTC6804_wrcfg,f,c
  2142  0009E6  0E00               	movlw	0
  2143  0009E8  2227               	addwfc	??_LTC6804_wrcfg+1,f,c
  2144  0009EA  0E00               	movlw	low LTC6804_wrcfg@cmd
  2145  0009EC  2426               	addwf	??_LTC6804_wrcfg,w,c
  2146  0009EE  6ED9               	movwf	fsr2l,c
  2147  0009F0  0E01               	movlw	high LTC6804_wrcfg@cmd
  2148  0009F2  2027               	addwfc	??_LTC6804_wrcfg+1,w,c
  2149  0009F4  6EDA               	movwf	fsr2h,c
  2150  0009F6  C1CA  FFDE         	movff	LTC6804_wrcfg@temp_pec,postinc2
  2151  0009FA  C1CB  FFDD         	movff	LTC6804_wrcfg@temp_pec+1,postdec2
  2152                           
  2153                           ; BSR set to: 1
  2154                           ;LT6804.c: 1028: cmd_index = cmd_index + 2;
  2155  0009FE  0E02               	movlw	2
  2156  000A00  0101               	movlb	1	; () banked
  2157  000A02  25CC               	addwf	LTC6804_wrcfg@cmd_index& (0+255),w,b
  2158  000A04  0101               	movlb	1	; () banked
  2159  000A06  6FCC               	movwf	LTC6804_wrcfg@cmd_index& (0+255),b
  2160  000A08  0E00               	movlw	0
  2161  000A0A  0101               	movlb	1	; () banked
  2162  000A0C  21CD               	addwfc	(LTC6804_wrcfg@cmd_index+1)& (0+255),w,b
  2163  000A0E  0101               	movlb	1	; () banked
  2164  000A10  6FCD               	movwf	(LTC6804_wrcfg@cmd_index+1)& (0+255),b
  2165                           
  2166                           ; BSR set to: 1
  2167  000A12  064D               	decf	_current_ic,f,c
  2168  000A14  A0D8               	btfss	status,0,c
  2169  000A16  064E               	decf	_current_ic+1,f,c
  2170  000A18                     l5449:
  2171                           
  2172                           ; BSR set to: 1
  2173  000A18  BE4E               	btfsc	_current_ic+1,7,c
  2174  000A1A  D005               	goto	l5451
  2175  000A1C  504E               	movf	_current_ic+1,w,c
  2176  000A1E  E102               	bnz	u4541
  2177  000A20  044D               	decf	_current_ic,w,c
  2178  000A22  B0D8               	btfsc	status,0,c
  2179  000A24                     u4541:
  2180  000A24  D75E               	goto	l5425
  2181  000A26                     l5451:
  2182                           
  2183                           ; BSR set to: 1
  2184                           ;LT6804.c: 1029: }
  2185                           ;LT6804.c: 1032: wakeup_idle ();
  2186  000A26  ECE9  F00A         	call	_wakeup_idle	;wreg free
  2187                           
  2188                           ;LT6804.c: 1034: for(current_ic = 0; current_ic<total_ic; current_ic++)
  2189  000A2A  0E00               	movlw	0
  2190  000A2C  6E4E               	movwf	_current_ic+1,c
  2191  000A2E  0E00               	movlw	0
  2192  000A30  6E4D               	movwf	_current_ic,c
  2193  000A32  D05E               	goto	l5473
  2194  000A34                     l5455:
  2195                           
  2196                           ;LT6804.c: 1035: {
  2197                           ;LT6804.c: 1036: cmd[0] = 0x80 + (current_ic<<3);
  2198  000A34  C04D  F026         	movff	_current_ic,??_LTC6804_wrcfg
  2199  000A38  C04E  F027         	movff	_current_ic+1,??_LTC6804_wrcfg+1
  2200  000A3C  90D8               	bcf	status,0,c
  2201  000A3E  3626               	rlcf	??_LTC6804_wrcfg,f,c
  2202  000A40  3627               	rlcf	??_LTC6804_wrcfg+1,f,c
  2203  000A42  90D8               	bcf	status,0,c
  2204  000A44  3626               	rlcf	??_LTC6804_wrcfg,f,c
  2205  000A46  3627               	rlcf	??_LTC6804_wrcfg+1,f,c
  2206  000A48  90D8               	bcf	status,0,c
  2207  000A4A  3626               	rlcf	??_LTC6804_wrcfg,f,c
  2208  000A4C  3627               	rlcf	??_LTC6804_wrcfg+1,f,c
  2209  000A4E  0E80               	movlw	128
  2210  000A50  2426               	addwf	??_LTC6804_wrcfg,w,c
  2211  000A52  0101               	movlb	1	; () banked
  2212  000A54  6F00               	movwf	LTC6804_wrcfg@cmd& (0+255),b
  2213  000A56  0E00               	movlw	0
  2214  000A58  2027               	addwfc	??_LTC6804_wrcfg+1,w,c
  2215  000A5A  0101               	movlb	1	; () banked
  2216  000A5C  6F01               	movwf	(LTC6804_wrcfg@cmd+1)& (0+255),b
  2217                           
  2218                           ; BSR set to: 1
  2219                           ;LT6804.c: 1037: temp_pec = pec15_calc(2, cmd);
  2220  000A5E  0E00               	movlw	0
  2221  000A60  6E16               	movwf	pec15_calc@len+1,c
  2222  000A62  0E02               	movlw	2
  2223  000A64  6E15               	movwf	pec15_calc@len,c
  2224  000A66  0E00               	movlw	low LTC6804_wrcfg@cmd
  2225  000A68  6E17               	movwf	pec15_calc@data,c
  2226  000A6A  0E01               	movlw	high LTC6804_wrcfg@cmd
  2227  000A6C  6E18               	movwf	pec15_calc@data+1,c
  2228  000A6E  EC10  F007         	call	_pec15_calc	;wreg free
  2229  000A72  C015  F1CA         	movff	?_pec15_calc,LTC6804_wrcfg@temp_pec
  2230  000A76  C016  F1CB         	movff	?_pec15_calc+1,LTC6804_wrcfg@temp_pec+1
  2231                           
  2232                           ;LT6804.c: 1038: cmd[2] = (int)(temp_pec >> 8);
  2233  000A7A  C1CB  F026         	movff	LTC6804_wrcfg@temp_pec+1,??_LTC6804_wrcfg
  2234  000A7E  6A27               	clrf	(??_LTC6804_wrcfg+1)& (0+255),c
  2235  000A80  BE26               	btfsc	??_LTC6804_wrcfg& (0+255),7,c
  2236  000A82  6827               	setf	(??_LTC6804_wrcfg+1)& (0+255),c
  2237  000A84  C026  F104         	movff	??_LTC6804_wrcfg,LTC6804_wrcfg@cmd+4
  2238  000A88  C027  F105         	movff	??_LTC6804_wrcfg+1,LTC6804_wrcfg@cmd+5
  2239                           
  2240                           ;LT6804.c: 1039: cmd[3] = (int)(temp_pec);
  2241  000A8C  C1CA  F106         	movff	LTC6804_wrcfg@temp_pec,LTC6804_wrcfg@cmd+6
  2242  000A90  C1CB  F107         	movff	LTC6804_wrcfg@temp_pec+1,LTC6804_wrcfg@cmd+7
  2243                           
  2244                           ;LT6804.c: 1040: LATD3 = 0;
  2245  000A94  968C               	bcf	3980,3,c	;volatile
  2246                           
  2247                           ;LT6804.c: 1041: spi_write_array(4,cmd);
  2248  000A96  0E00               	movlw	0
  2249  000A98  6E11               	movwf	spi_write_array@len+1,c
  2250  000A9A  0E04               	movlw	4
  2251  000A9C  6E10               	movwf	spi_write_array@len,c
  2252  000A9E  0E00               	movlw	low LTC6804_wrcfg@cmd
  2253  000AA0  6E12               	movwf	spi_write_array@data,c
  2254  000AA2  0E01               	movlw	high LTC6804_wrcfg@cmd
  2255  000AA4  6E13               	movwf	spi_write_array@data+1,c
  2256  000AA6  ECCF  F009         	call	_spi_write_array	;wreg free
  2257                           
  2258                           ;LT6804.c: 1042: spi_write_array(8,&cmd[4+(8*current_ic)]);
  2259  000AAA  0E00               	movlw	0
  2260  000AAC  6E11               	movwf	spi_write_array@len+1,c
  2261  000AAE  0E08               	movlw	8
  2262  000AB0  6E10               	movwf	spi_write_array@len,c
  2263  000AB2  C04D  F026         	movff	_current_ic,??_LTC6804_wrcfg
  2264  000AB6  C04E  F027         	movff	_current_ic+1,??_LTC6804_wrcfg+1
  2265  000ABA  90D8               	bcf	status,0,c
  2266  000ABC  3626               	rlcf	??_LTC6804_wrcfg,f,c
  2267  000ABE  3627               	rlcf	??_LTC6804_wrcfg+1,f,c
  2268  000AC0  90D8               	bcf	status,0,c
  2269  000AC2  3626               	rlcf	??_LTC6804_wrcfg,f,c
  2270  000AC4  3627               	rlcf	??_LTC6804_wrcfg+1,f,c
  2271  000AC6  90D8               	bcf	status,0,c
  2272  000AC8  3626               	rlcf	??_LTC6804_wrcfg,f,c
  2273  000ACA  3627               	rlcf	??_LTC6804_wrcfg+1,f,c
  2274  000ACC  90D8               	bcf	status,0,c
  2275  000ACE  3626               	rlcf	??_LTC6804_wrcfg,f,c
  2276  000AD0  3627               	rlcf	??_LTC6804_wrcfg+1,f,c
  2277  000AD2  0E08               	movlw	8
  2278  000AD4  2626               	addwf	??_LTC6804_wrcfg,f,c
  2279  000AD6  0E00               	movlw	0
  2280  000AD8  2227               	addwfc	??_LTC6804_wrcfg+1,f,c
  2281  000ADA  0E00               	movlw	low LTC6804_wrcfg@cmd
  2282  000ADC  2426               	addwf	??_LTC6804_wrcfg,w,c
  2283  000ADE  6E12               	movwf	spi_write_array@data,c
  2284  000AE0  0E01               	movlw	high LTC6804_wrcfg@cmd
  2285  000AE2  2027               	addwfc	??_LTC6804_wrcfg+1,w,c
  2286  000AE4  6E13               	movwf	spi_write_array@data+1,c
  2287  000AE6  ECCF  F009         	call	_spi_write_array	;wreg free
  2288                           
  2289                           ;LT6804.c: 1043: LATD3 = 1;
  2290  000AEA  868C               	bsf	3980,3,c	;volatile
  2291  000AEC  4A4D               	infsnz	_current_ic,f,c
  2292  000AEE  2A4E               	incf	_current_ic+1,f,c
  2293  000AF0                     l5473:
  2294  000AF0  5022               	movf	LTC6804_wrcfg@total_ic,w,c
  2295  000AF2  5C4D               	subwf	_current_ic,w,c
  2296  000AF4  504E               	movf	_current_ic+1,w,c
  2297  000AF6  0A80               	xorlw	128
  2298  000AF8  6E26               	movwf	??_LTC6804_wrcfg& (0+255),c
  2299  000AFA  5023               	movf	LTC6804_wrcfg@total_ic+1,w,c
  2300  000AFC  0A80               	xorlw	128
  2301  000AFE  5826               	subwfb	??_LTC6804_wrcfg& (0+255),w,c
  2302  000B00  B0D8               	btfsc	status,0,c
  2303  000B02  0012               	return	
  2304  000B04  D797               	goto	l5455
  2305  000B06                     __end_of_LTC6804_wrcfg:
  2306                           	opt stack 0
  2307                           tblptru	equ	0xFF8
  2308                           tblptrh	equ	0xFF7
  2309                           tblptrl	equ	0xFF6
  2310                           tablat	equ	0xFF5
  2311                           intcon	equ	0xFF2
  2312                           postinc0	equ	0xFEE
  2313                           wreg	equ	0xFE8
  2314                           postinc1	equ	0xFE6
  2315                           postdec1	equ	0xFE5
  2316                           fsr1h	equ	0xFE2
  2317                           fsr1l	equ	0xFE1
  2318                           postinc2	equ	0xFDE
  2319                           postdec2	equ	0xFDD
  2320                           fsr2h	equ	0xFDA
  2321                           fsr2l	equ	0xFD9
  2322                           status	equ	0xFD8
  2323                           
  2324 ;; *************** function _Set_REFON_Pin *****************
  2325 ;; Defined at:
  2326 ;;		line 701 in file "BatteryManagment.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;  ic              2   20[COMRAM] int 
  2329 ;;  REFON_Mode      1   22[COMRAM] unsigned char 
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;  fault_value     2   25[COMRAM] int 
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  2   20[COMRAM] int 
  2334 ;; Registers used:
  2335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2341 ;;      Params:         3       0       0       0       0       0       0
  2342 ;;      Locals:         2       0       0       0       0       0       0
  2343 ;;      Temps:          2       0       0       0       0       0       0
  2344 ;;      Totals:         7       0       0       0       0       0       0
  2345 ;;Total ram usage:        7 bytes
  2346 ;; Hardware stack levels used:    1
  2347 ;; Hardware stack levels required when called:    4
  2348 ;; This function calls:
  2349 ;;		___wmul
  2350 ;; This function is called by:
  2351 ;;		_Initalize_LT6804b
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355                           	psect	text6
  2356  0011BE                     __ptext6:
  2357                           	opt stack 0
  2358  0011BE                     _Set_REFON_Pin:
  2359                           	opt stack 24
  2360                           
  2361                           ;BatteryManagment.c: 702: int fault_value = 0;
  2362                           
  2363                           ;incstack = 0
  2364  0011BE  0E00               	movlw	0
  2365  0011C0  6E1B               	movwf	Set_REFON_Pin@fault_value+1,c
  2366  0011C2  0E00               	movlw	0
  2367  0011C4  6E1A               	movwf	Set_REFON_Pin@fault_value,c
  2368                           
  2369                           ;BatteryManagment.c: 703: if (REFON_Mode) {
  2370  0011C6  5017               	movf	Set_REFON_Pin@REFON_Mode,w,c
  2371  0011C8  B4D8               	btfsc	status,2,c
  2372  0011CA  D003               	goto	l5519
  2373                           
  2374                           ;BatteryManagment.c: 704: CFGR0 = CFGR0 | 0x4;
  2375  0011CC  5046               	movf	_CFGR0,w,c
  2376  0011CE  0904               	iorlw	4
  2377  0011D0  D002               	goto	L1
  2378  0011D2                     l5519:
  2379                           
  2380                           ;BatteryManagment.c: 706: CFGR0 = CFGR0 & ~0x4;
  2381  0011D2  5046               	movf	_CFGR0,w,c
  2382  0011D4  0BFB               	andlw	251
  2383  0011D6                     L1:
  2384  0011D6  6E46               	movwf	_CFGR0,c
  2385                           
  2386                           ;BatteryManagment.c: 707: }
  2387                           ;BatteryManagment.c: 709: LTC6804_DATA_ConfigBank[ic][0] = CFGR0;
  2388  0011D8  5046               	movf	_CFGR0,w,c
  2389  0011DA  6E18               	movwf	??_Set_REFON_Pin& (0+255),c
  2390  0011DC  6A19               	clrf	(??_Set_REFON_Pin+1)& (0+255),c
  2391  0011DE  C015  F00F         	movff	Set_REFON_Pin@ic,___wmul@multiplier
  2392  0011E2  C016  F010         	movff	Set_REFON_Pin@ic+1,___wmul@multiplier+1
  2393  0011E6  0E00               	movlw	0
  2394  0011E8  6E12               	movwf	___wmul@multiplicand+1,c
  2395  0011EA  0E0C               	movlw	12
  2396  0011EC  6E11               	movwf	___wmul@multiplicand,c
  2397  0011EE  ECAD  F00A         	call	___wmul	;wreg free
  2398  0011F2  0EF3               	movlw	low _LTC6804_DATA_ConfigBank
  2399  0011F4  240F               	addwf	?___wmul,w,c
  2400  0011F6  6ED9               	movwf	fsr2l,c
  2401  0011F8  0E01               	movlw	high _LTC6804_DATA_ConfigBank
  2402  0011FA  2010               	addwfc	?___wmul+1,w,c
  2403  0011FC  6EDA               	movwf	fsr2h,c
  2404  0011FE  C018  FFDE         	movff	??_Set_REFON_Pin,postinc2
  2405  001202  C019  FFDD         	movff	??_Set_REFON_Pin+1,postdec2
  2406  001206  0012               	return	
  2407  001208                     __end_of_Set_REFON_Pin:
  2408                           	opt stack 0
  2409                           tblptru	equ	0xFF8
  2410                           tblptrh	equ	0xFF7
  2411                           tblptrl	equ	0xFF6
  2412                           tablat	equ	0xFF5
  2413                           intcon	equ	0xFF2
  2414                           postinc0	equ	0xFEE
  2415                           wreg	equ	0xFE8
  2416                           postinc1	equ	0xFE6
  2417                           postdec1	equ	0xFE5
  2418                           fsr1h	equ	0xFE2
  2419                           fsr1l	equ	0xFE1
  2420                           postinc2	equ	0xFDE
  2421                           postdec2	equ	0xFDD
  2422                           fsr2h	equ	0xFDA
  2423                           fsr2l	equ	0xFD9
  2424                           status	equ	0xFD8
  2425                           
  2426 ;; *************** function _Set_DCTO_Mode_OFF *****************
  2427 ;; Defined at:
  2428 ;;		line 692 in file "BatteryManagment.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  ic              2   20[COMRAM] int 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  fault_value     2   24[COMRAM] int 
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  2   20[COMRAM] int 
  2435 ;; Registers used:
  2436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2442 ;;      Params:         2       0       0       0       0       0       0
  2443 ;;      Locals:         2       0       0       0       0       0       0
  2444 ;;      Temps:          2       0       0       0       0       0       0
  2445 ;;      Totals:         6       0       0       0       0       0       0
  2446 ;;Total ram usage:        6 bytes
  2447 ;; Hardware stack levels used:    1
  2448 ;; Hardware stack levels required when called:    4
  2449 ;; This function calls:
  2450 ;;		___wmul
  2451 ;; This function is called by:
  2452 ;;		_Initalize_LT6804b
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           	psect	text7
  2457  00129C                     __ptext7:
  2458                           	opt stack 0
  2459  00129C                     _Set_DCTO_Mode_OFF:
  2460                           	opt stack 24
  2461                           
  2462                           ;BatteryManagment.c: 693: int fault_value = 0;
  2463                           
  2464                           ;incstack = 0
  2465  00129C  0E00               	movlw	0
  2466  00129E  6E1A               	movwf	Set_DCTO_Mode_OFF@fault_value+1,c
  2467  0012A0  0E00               	movlw	0
  2468  0012A2  6E19               	movwf	Set_DCTO_Mode_OFF@fault_value,c
  2469                           
  2470                           ;BatteryManagment.c: 694: CFGR5 = CFGR5 &~(0xF0);
  2471  0012A4  5048               	movf	_CFGR5,w,c
  2472  0012A6  0B0F               	andlw	15
  2473  0012A8  6E48               	movwf	_CFGR5,c
  2474                           
  2475                           ;BatteryManagment.c: 695: LTC6804_DATA_ConfigBank[ic][5] = CFGR5;
  2476  0012AA  5048               	movf	_CFGR5,w,c
  2477  0012AC  6E17               	movwf	??_Set_DCTO_Mode_OFF& (0+255),c
  2478  0012AE  6A18               	clrf	(??_Set_DCTO_Mode_OFF+1)& (0+255),c
  2479  0012B0  C015  F00F         	movff	Set_DCTO_Mode_OFF@ic,___wmul@multiplier
  2480  0012B4  C016  F010         	movff	Set_DCTO_Mode_OFF@ic+1,___wmul@multiplier+1
  2481  0012B8  0E00               	movlw	0
  2482  0012BA  6E12               	movwf	___wmul@multiplicand+1,c
  2483  0012BC  0E0C               	movlw	12
  2484  0012BE  6E11               	movwf	___wmul@multiplicand,c
  2485  0012C0  ECAD  F00A         	call	___wmul	;wreg free
  2486  0012C4  0E0A               	movlw	10
  2487  0012C6  260F               	addwf	?___wmul,f,c
  2488  0012C8  0E00               	movlw	0
  2489  0012CA  2210               	addwfc	?___wmul+1,f,c
  2490  0012CC  0EF3               	movlw	low _LTC6804_DATA_ConfigBank
  2491  0012CE  240F               	addwf	?___wmul,w,c
  2492  0012D0  6ED9               	movwf	fsr2l,c
  2493  0012D2  0E01               	movlw	high _LTC6804_DATA_ConfigBank
  2494  0012D4  2010               	addwfc	?___wmul+1,w,c
  2495  0012D6  6EDA               	movwf	fsr2h,c
  2496  0012D8  C017  FFDE         	movff	??_Set_DCTO_Mode_OFF,postinc2
  2497  0012DC  C018  FFDD         	movff	??_Set_DCTO_Mode_OFF+1,postdec2
  2498  0012E0  0012               	return	
  2499  0012E2                     __end_of_Set_DCTO_Mode_OFF:
  2500                           	opt stack 0
  2501                           tblptru	equ	0xFF8
  2502                           tblptrh	equ	0xFF7
  2503                           tblptrl	equ	0xFF6
  2504                           tablat	equ	0xFF5
  2505                           intcon	equ	0xFF2
  2506                           postinc0	equ	0xFEE
  2507                           wreg	equ	0xFE8
  2508                           postinc1	equ	0xFE6
  2509                           postdec1	equ	0xFE5
  2510                           fsr1h	equ	0xFE2
  2511                           fsr1l	equ	0xFE1
  2512                           postinc2	equ	0xFDE
  2513                           postdec2	equ	0xFDD
  2514                           fsr2h	equ	0xFDA
  2515                           fsr2l	equ	0xFD9
  2516                           status	equ	0xFD8
  2517                           
  2518 ;; *************** function _Set_DCC_Mode_OFF *****************
  2519 ;; Defined at:
  2520 ;;		line 682 in file "BatteryManagment.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;  ic              2   20[COMRAM] int 
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;  fault_value     2   24[COMRAM] int 
  2525 ;; Return value:  Size  Location     Type
  2526 ;;		None               void
  2527 ;; Registers used:
  2528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2529 ;; Tracked objects:
  2530 ;;		On entry : 0/0
  2531 ;;		On exit  : 0/0
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2534 ;;      Params:         2       0       0       0       0       0       0
  2535 ;;      Locals:         2       0       0       0       0       0       0
  2536 ;;      Temps:          2       0       0       0       0       0       0
  2537 ;;      Totals:         6       0       0       0       0       0       0
  2538 ;;Total ram usage:        6 bytes
  2539 ;; Hardware stack levels used:    1
  2540 ;; Hardware stack levels required when called:    4
  2541 ;; This function calls:
  2542 ;;		___wmul
  2543 ;; This function is called by:
  2544 ;;		_Initalize_LT6804b
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           	psect	text8
  2549  000FD2                     __ptext8:
  2550                           	opt stack 0
  2551  000FD2                     _Set_DCC_Mode_OFF:
  2552                           	opt stack 24
  2553                           
  2554                           ;BatteryManagment.c: 683: int fault_value = 0;
  2555                           
  2556                           ;incstack = 0
  2557  000FD2  0E00               	movlw	0
  2558  000FD4  6E1A               	movwf	Set_DCC_Mode_OFF@fault_value+1,c
  2559  000FD6  0E00               	movlw	0
  2560  000FD8  6E19               	movwf	Set_DCC_Mode_OFF@fault_value,c
  2561                           
  2562                           ;BatteryManagment.c: 684: CFGR4 = 0;
  2563  000FDA  0E00               	movlw	0
  2564  000FDC  6E47               	movwf	_CFGR4,c
  2565                           
  2566                           ;BatteryManagment.c: 685: CFGR5 = CFGR5 &~(0xF);
  2567  000FDE  5048               	movf	_CFGR5,w,c
  2568  000FE0  0BF0               	andlw	240
  2569  000FE2  6E48               	movwf	_CFGR5,c
  2570                           
  2571                           ;BatteryManagment.c: 686: LTC6804_DATA_ConfigBank[ic][4] = CFGR4;
  2572  000FE4  5047               	movf	_CFGR4,w,c
  2573  000FE6  6E17               	movwf	??_Set_DCC_Mode_OFF& (0+255),c
  2574  000FE8  6A18               	clrf	(??_Set_DCC_Mode_OFF+1)& (0+255),c
  2575  000FEA  C015  F00F         	movff	Set_DCC_Mode_OFF@ic,___wmul@multiplier
  2576  000FEE  C016  F010         	movff	Set_DCC_Mode_OFF@ic+1,___wmul@multiplier+1
  2577  000FF2  0E00               	movlw	0
  2578  000FF4  6E12               	movwf	___wmul@multiplicand+1,c
  2579  000FF6  0E0C               	movlw	12
  2580  000FF8  6E11               	movwf	___wmul@multiplicand,c
  2581  000FFA  ECAD  F00A         	call	___wmul	;wreg free
  2582  000FFE  0E08               	movlw	8
  2583  001000  260F               	addwf	?___wmul,f,c
  2584  001002  0E00               	movlw	0
  2585  001004  2210               	addwfc	?___wmul+1,f,c
  2586  001006  0EF3               	movlw	low _LTC6804_DATA_ConfigBank
  2587  001008  240F               	addwf	?___wmul,w,c
  2588  00100A  6ED9               	movwf	fsr2l,c
  2589  00100C  0E01               	movlw	high _LTC6804_DATA_ConfigBank
  2590  00100E  2010               	addwfc	?___wmul+1,w,c
  2591  001010  6EDA               	movwf	fsr2h,c
  2592  001012  C017  FFDE         	movff	??_Set_DCC_Mode_OFF,postinc2
  2593  001016  C018  FFDD         	movff	??_Set_DCC_Mode_OFF+1,postdec2
  2594                           
  2595                           ;BatteryManagment.c: 687: LTC6804_DATA_ConfigBank[ic][5] = CFGR5;
  2596  00101A  5048               	movf	_CFGR5,w,c
  2597  00101C  6E17               	movwf	??_Set_DCC_Mode_OFF& (0+255),c
  2598  00101E  6A18               	clrf	(??_Set_DCC_Mode_OFF+1)& (0+255),c
  2599  001020  C015  F00F         	movff	Set_DCC_Mode_OFF@ic,___wmul@multiplier
  2600  001024  C016  F010         	movff	Set_DCC_Mode_OFF@ic+1,___wmul@multiplier+1
  2601  001028  0E00               	movlw	0
  2602  00102A  6E12               	movwf	___wmul@multiplicand+1,c
  2603  00102C  0E0C               	movlw	12
  2604  00102E  6E11               	movwf	___wmul@multiplicand,c
  2605  001030  ECAD  F00A         	call	___wmul	;wreg free
  2606  001034  0E0A               	movlw	10
  2607  001036  260F               	addwf	?___wmul,f,c
  2608  001038  0E00               	movlw	0
  2609  00103A  2210               	addwfc	?___wmul+1,f,c
  2610  00103C  0EF3               	movlw	low _LTC6804_DATA_ConfigBank
  2611  00103E  240F               	addwf	?___wmul,w,c
  2612  001040  6ED9               	movwf	fsr2l,c
  2613  001042  0E01               	movlw	high _LTC6804_DATA_ConfigBank
  2614  001044  2010               	addwfc	?___wmul+1,w,c
  2615  001046  6EDA               	movwf	fsr2h,c
  2616  001048  C017  FFDE         	movff	??_Set_DCC_Mode_OFF,postinc2
  2617  00104C  C018  FFDD         	movff	??_Set_DCC_Mode_OFF+1,postdec2
  2618  001050  0012               	return		;funcret
  2619  001052                     __end_of_Set_DCC_Mode_OFF:
  2620                           	opt stack 0
  2621                           tblptru	equ	0xFF8
  2622                           tblptrh	equ	0xFF7
  2623                           tblptrl	equ	0xFF6
  2624                           tablat	equ	0xFF5
  2625                           intcon	equ	0xFF2
  2626                           postinc0	equ	0xFEE
  2627                           wreg	equ	0xFE8
  2628                           postinc1	equ	0xFE6
  2629                           postdec1	equ	0xFE5
  2630                           fsr1h	equ	0xFE2
  2631                           fsr1l	equ	0xFE1
  2632                           postinc2	equ	0xFDE
  2633                           postdec2	equ	0xFDD
  2634                           fsr2h	equ	0xFDA
  2635                           fsr2l	equ	0xFD9
  2636                           status	equ	0xFD8
  2637                           
  2638 ;; *************** function _Set_ADC_Mode *****************
  2639 ;; Defined at:
  2640 ;;		line 669 in file "BatteryManagment.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;  ic              2   20[COMRAM] int 
  2643 ;;  ADCOPT_Mode     1   22[COMRAM] unsigned char 
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;  fault_value     2   25[COMRAM] int 
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  2   20[COMRAM] int 
  2648 ;; Registers used:
  2649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2655 ;;      Params:         3       0       0       0       0       0       0
  2656 ;;      Locals:         2       0       0       0       0       0       0
  2657 ;;      Temps:          2       0       0       0       0       0       0
  2658 ;;      Totals:         7       0       0       0       0       0       0
  2659 ;;Total ram usage:        7 bytes
  2660 ;; Hardware stack levels used:    1
  2661 ;; Hardware stack levels required when called:    4
  2662 ;; This function calls:
  2663 ;;		___wmul
  2664 ;; This function is called by:
  2665 ;;		_Initalize_LT6804b
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669                           	psect	text9
  2670  001208                     __ptext9:
  2671                           	opt stack 0
  2672  001208                     _Set_ADC_Mode:
  2673                           	opt stack 24
  2674                           
  2675                           ;BatteryManagment.c: 670: int fault_value = 0;
  2676                           
  2677                           ;incstack = 0
  2678  001208  0E00               	movlw	0
  2679  00120A  6E1B               	movwf	Set_ADC_Mode@fault_value+1,c
  2680  00120C  0E00               	movlw	0
  2681  00120E  6E1A               	movwf	Set_ADC_Mode@fault_value,c
  2682                           
  2683                           ;BatteryManagment.c: 671: if (ADCOPT_Mode) {
  2684  001210  5017               	movf	Set_ADC_Mode@ADCOPT_Mode,w,c
  2685  001212  B4D8               	btfsc	status,2,c
  2686  001214  D003               	goto	l5529
  2687                           
  2688                           ;BatteryManagment.c: 672: CFGR0 = CFGR0 | 0x01;
  2689  001216  5046               	movf	_CFGR0,w,c
  2690  001218  0901               	iorlw	1
  2691  00121A  D002               	goto	L2
  2692  00121C                     l5529:
  2693                           
  2694                           ;BatteryManagment.c: 674: CFGR0 = CFGR0 & ~0x01;
  2695  00121C  5046               	movf	_CFGR0,w,c
  2696  00121E  0BFE               	andlw	254
  2697  001220                     L2:
  2698  001220  6E46               	movwf	_CFGR0,c
  2699                           
  2700                           ;BatteryManagment.c: 675: }
  2701                           ;BatteryManagment.c: 677: LTC6804_DATA_ConfigBank[ic][0] = CFGR0;
  2702  001222  5046               	movf	_CFGR0,w,c
  2703  001224  6E18               	movwf	??_Set_ADC_Mode& (0+255),c
  2704  001226  6A19               	clrf	(??_Set_ADC_Mode+1)& (0+255),c
  2705  001228  C015  F00F         	movff	Set_ADC_Mode@ic,___wmul@multiplier
  2706  00122C  C016  F010         	movff	Set_ADC_Mode@ic+1,___wmul@multiplier+1
  2707  001230  0E00               	movlw	0
  2708  001232  6E12               	movwf	___wmul@multiplicand+1,c
  2709  001234  0E0C               	movlw	12
  2710  001236  6E11               	movwf	___wmul@multiplicand,c
  2711  001238  ECAD  F00A         	call	___wmul	;wreg free
  2712  00123C  0EF3               	movlw	low _LTC6804_DATA_ConfigBank
  2713  00123E  240F               	addwf	?___wmul,w,c
  2714  001240  6ED9               	movwf	fsr2l,c
  2715  001242  0E01               	movlw	high _LTC6804_DATA_ConfigBank
  2716  001244  2010               	addwfc	?___wmul+1,w,c
  2717  001246  6EDA               	movwf	fsr2h,c
  2718  001248  C018  FFDE         	movff	??_Set_ADC_Mode,postinc2
  2719  00124C  C019  FFDD         	movff	??_Set_ADC_Mode+1,postdec2
  2720  001250  0012               	return	
  2721  001252                     __end_of_Set_ADC_Mode:
  2722                           	opt stack 0
  2723                           tblptru	equ	0xFF8
  2724                           tblptrh	equ	0xFF7
  2725                           tblptrl	equ	0xFF6
  2726                           tablat	equ	0xFF5
  2727                           intcon	equ	0xFF2
  2728                           postinc0	equ	0xFEE
  2729                           wreg	equ	0xFE8
  2730                           postinc1	equ	0xFE6
  2731                           postdec1	equ	0xFE5
  2732                           fsr1h	equ	0xFE2
  2733                           fsr1l	equ	0xFE1
  2734                           postinc2	equ	0xFDE
  2735                           postdec2	equ	0xFDD
  2736                           fsr2h	equ	0xFDA
  2737                           fsr2l	equ	0xFD9
  2738                           status	equ	0xFD8
  2739                           
  2740 ;; *************** function _SetTempEnable *****************
  2741 ;; Defined at:
  2742 ;;		line 609 in file "BatteryManagment.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;  ic              2   20[COMRAM] int 
  2745 ;;  value           1   22[COMRAM] unsigned char 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  fault_value     2   25[COMRAM] int 
  2748 ;; Return value:  Size  Location     Type
  2749 ;;                  2   20[COMRAM] int 
  2750 ;; Registers used:
  2751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2757 ;;      Params:         3       0       0       0       0       0       0
  2758 ;;      Locals:         2       0       0       0       0       0       0
  2759 ;;      Temps:          2       0       0       0       0       0       0
  2760 ;;      Totals:         7       0       0       0       0       0       0
  2761 ;;Total ram usage:        7 bytes
  2762 ;; Hardware stack levels used:    1
  2763 ;; Hardware stack levels required when called:    4
  2764 ;; This function calls:
  2765 ;;		___wmul
  2766 ;; This function is called by:
  2767 ;;		_Initalize_LT6804b
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           	psect	text10
  2772  001252                     __ptext10:
  2773                           	opt stack 0
  2774  001252                     _SetTempEnable:
  2775                           	opt stack 24
  2776                           
  2777                           ;BatteryManagment.c: 610: int fault_value = 0;
  2778                           
  2779                           ;incstack = 0
  2780  001252  0E00               	movlw	0
  2781  001254  6E1B               	movwf	SetTempEnable@fault_value+1,c
  2782  001256  0E00               	movlw	0
  2783  001258  6E1A               	movwf	SetTempEnable@fault_value,c
  2784                           
  2785                           ;BatteryManagment.c: 611: if (value) {
  2786  00125A  5017               	movf	SetTempEnable@value,w,c
  2787  00125C  B4D8               	btfsc	status,2,c
  2788  00125E  D003               	goto	l5555
  2789                           
  2790                           ;BatteryManagment.c: 612: CFGR0 = CFGR0 | (1 << 7);
  2791  001260  5046               	movf	_CFGR0,w,c
  2792  001262  0980               	iorlw	128
  2793  001264  D002               	goto	L3
  2794  001266                     l5555:
  2795                           
  2796                           ;BatteryManagment.c: 614: CFGR0 = CFGR0 & ~(1 << 7);
  2797  001266  5046               	movf	_CFGR0,w,c
  2798  001268  0B7F               	andlw	127
  2799  00126A                     L3:
  2800  00126A  6E46               	movwf	_CFGR0,c
  2801                           
  2802                           ;BatteryManagment.c: 615: }
  2803                           ;BatteryManagment.c: 617: LTC6804_DATA_ConfigBank[ic][0] = CFGR0;
  2804  00126C  5046               	movf	_CFGR0,w,c
  2805  00126E  6E18               	movwf	??_SetTempEnable& (0+255),c
  2806  001270  6A19               	clrf	(??_SetTempEnable+1)& (0+255),c
  2807  001272  C015  F00F         	movff	SetTempEnable@ic,___wmul@multiplier
  2808  001276  C016  F010         	movff	SetTempEnable@ic+1,___wmul@multiplier+1
  2809  00127A  0E00               	movlw	0
  2810  00127C  6E12               	movwf	___wmul@multiplicand+1,c
  2811  00127E  0E0C               	movlw	12
  2812  001280  6E11               	movwf	___wmul@multiplicand,c
  2813  001282  ECAD  F00A         	call	___wmul	;wreg free
  2814  001286  0EF3               	movlw	low _LTC6804_DATA_ConfigBank
  2815  001288  240F               	addwf	?___wmul,w,c
  2816  00128A  6ED9               	movwf	fsr2l,c
  2817  00128C  0E01               	movlw	high _LTC6804_DATA_ConfigBank
  2818  00128E  2010               	addwfc	?___wmul+1,w,c
  2819  001290  6EDA               	movwf	fsr2h,c
  2820  001292  C018  FFDE         	movff	??_SetTempEnable,postinc2
  2821  001296  C019  FFDD         	movff	??_SetTempEnable+1,postdec2
  2822  00129A  0012               	return	
  2823  00129C                     __end_of_SetTempEnable:
  2824                           	opt stack 0
  2825                           tblptru	equ	0xFF8
  2826                           tblptrh	equ	0xFF7
  2827                           tblptrl	equ	0xFF6
  2828                           tablat	equ	0xFF5
  2829                           intcon	equ	0xFF2
  2830                           postinc0	equ	0xFEE
  2831                           wreg	equ	0xFE8
  2832                           postinc1	equ	0xFE6
  2833                           postdec1	equ	0xFE5
  2834                           fsr1h	equ	0xFE2
  2835                           fsr1l	equ	0xFE1
  2836                           postinc2	equ	0xFDE
  2837                           postdec2	equ	0xFDD
  2838                           fsr2h	equ	0xFDA
  2839                           fsr2l	equ	0xFD9
  2840                           status	equ	0xFD8
  2841                           
  2842 ;; *************** function _SYSTEM_Initialize *****************
  2843 ;; Defined at:
  2844 ;;		line 112 in file "mcc_generated_files/mcc.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;		None
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;		None
  2849 ;; Return value:  Size  Location     Type
  2850 ;;		None               void
  2851 ;; Registers used:
  2852 ;;		wreg, status,2, status,0, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2858 ;;      Params:         0       0       0       0       0       0       0
  2859 ;;      Locals:         0       0       0       0       0       0       0
  2860 ;;      Temps:          0       0       0       0       0       0       0
  2861 ;;      Totals:         0       0       0       0       0       0       0
  2862 ;;Total ram usage:        0 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:    5
  2865 ;; This function calls:
  2866 ;;		_ADC_Initialize
  2867 ;;		_EUSART1_Initialize
  2868 ;;		_INTERRUPT_Initialize
  2869 ;;		_OSCILLATOR_Initialize
  2870 ;;		_PIN_MANAGER_Initialize
  2871 ;;		_SPI2_Initialize
  2872 ;;		_TMR0_Initialize
  2873 ;; This function is called by:
  2874 ;;		_main
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           	psect	text11
  2879  001580                     __ptext11:
  2880                           	opt stack 0
  2881  001580                     _SYSTEM_Initialize:
  2882                           	opt stack 25
  2883                           
  2884                           ;mcc.c: 115: INTERRUPT_Initialize();
  2885                           
  2886                           ;incstack = 0
  2887  001580  EC0F  F00B         	call	_INTERRUPT_Initialize	;wreg free
  2888                           
  2889                           ;mcc.c: 116: PIN_MANAGER_Initialize();
  2890  001584  EC8D  F008         	call	_PIN_MANAGER_Initialize	;wreg free
  2891                           
  2892                           ;mcc.c: 117: OSCILLATOR_Initialize();
  2893  001588  EC01  F00B         	call	_OSCILLATOR_Initialize	;wreg free
  2894                           
  2895                           ;mcc.c: 118: SPI2_Initialize();
  2896  00158C  ECFA  F00A         	call	_SPI2_Initialize	;wreg free
  2897                           
  2898                           ;mcc.c: 119: ADC_Initialize();
  2899  001590  ECD2  F00A         	call	_ADC_Initialize	;wreg free
  2900                           
  2901                           ;mcc.c: 120: TMR0_Initialize();
  2902  001594  EC70  F00A         	call	_TMR0_Initialize	;wreg free
  2903                           
  2904                           ;mcc.c: 121: EUSART1_Initialize();
  2905  001598  EC0A  F00A         	call	_EUSART1_Initialize	;wreg free
  2906                           
  2907                           ;mcc.c: 123: TRISDbits.RD4 = 0;
  2908  00159C  9895               	bcf	3989,4,c	;volatile
  2909                           
  2910                           ;mcc.c: 124: TRISDbits.RD1 = 1;
  2911  00159E  8295               	bsf	3989,1,c	;volatile
  2912                           
  2913                           ;mcc.c: 125: TRISDbits.RD0 = 0;
  2914  0015A0  9095               	bcf	3989,0,c	;volatile
  2915  0015A2  0012               	return		;funcret
  2916  0015A4                     __end_of_SYSTEM_Initialize:
  2917                           	opt stack 0
  2918                           tblptru	equ	0xFF8
  2919                           tblptrh	equ	0xFF7
  2920                           tblptrl	equ	0xFF6
  2921                           tablat	equ	0xFF5
  2922                           intcon	equ	0xFF2
  2923                           postinc0	equ	0xFEE
  2924                           wreg	equ	0xFE8
  2925                           postinc1	equ	0xFE6
  2926                           postdec1	equ	0xFE5
  2927                           fsr1h	equ	0xFE2
  2928                           fsr1l	equ	0xFE1
  2929                           postinc2	equ	0xFDE
  2930                           postdec2	equ	0xFDD
  2931                           fsr2h	equ	0xFDA
  2932                           fsr2l	equ	0xFD9
  2933                           status	equ	0xFD8
  2934                           
  2935 ;; *************** function _TMR0_Initialize *****************
  2936 ;; Defined at:
  2937 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;		None
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;		None
  2942 ;; Return value:  Size  Location     Type
  2943 ;;		None               void
  2944 ;; Registers used:
  2945 ;;		wreg, status,2, status,0, cstack
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/0
  2948 ;;		On exit  : 0/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2951 ;;      Params:         0       0       0       0       0       0       0
  2952 ;;      Locals:         0       0       0       0       0       0       0
  2953 ;;      Temps:          2       0       0       0       0       0       0
  2954 ;;      Totals:         2       0       0       0       0       0       0
  2955 ;;Total ram usage:        2 bytes
  2956 ;; Hardware stack levels used:    1
  2957 ;; Hardware stack levels required when called:    4
  2958 ;; This function calls:
  2959 ;;		_TMR0_StartTimer
  2960 ;; This function is called by:
  2961 ;;		_SYSTEM_Initialize
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964                           
  2965                           	psect	text12
  2966  0014E0                     __ptext12:
  2967                           	opt stack 0
  2968  0014E0                     _TMR0_Initialize:
  2969                           	opt stack 25
  2970                           
  2971                           ;tmr0.c: 69: T0CON = 0x9F;
  2972                           
  2973                           ;incstack = 0
  2974  0014E0  0E9F               	movlw	159
  2975  0014E2  6ED5               	movwf	4053,c	;volatile
  2976                           
  2977                           ;tmr0.c: 72: TMR0H = 0x63;
  2978  0014E4  0E63               	movlw	99
  2979  0014E6  6ED7               	movwf	4055,c	;volatile
  2980                           
  2981                           ;tmr0.c: 75: TMR0L = 0xBF;
  2982  0014E8  0EBF               	movlw	191
  2983  0014EA  6ED6               	movwf	4054,c	;volatile
  2984                           
  2985                           ;tmr0.c: 78: timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  2986  0014EC  50D6               	movf	4054,w,c	;volatile
  2987  0014EE  CFD7 F00F          	movff	4055,??_TMR0_Initialize	;volatile
  2988  0014F2  6A10               	clrf	(??_TMR0_Initialize+1)& (0+255),c
  2989  0014F4  C00F  F010         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  2990  0014F8  6A0F               	clrf	??_TMR0_Initialize,c
  2991  0014FA  100F               	iorwf	??_TMR0_Initialize,w,c
  2992  0014FC  6E4F               	movwf	_timer0ReloadVal16bit,c	;volatile
  2993  0014FE  5010               	movf	??_TMR0_Initialize+1,w,c
  2994  001500  6E50               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  2995                           
  2996                           ;tmr0.c: 81: INTCONbits.TMR0IF = 0;
  2997  001502  94F2               	bcf	intcon,2,c	;volatile
  2998                           
  2999                           ;tmr0.c: 84: INTCONbits.TMR0IE = 1;
  3000  001504  8AF2               	bsf	intcon,5,c	;volatile
  3001                           
  3002                           ;tmr0.c: 87: TMR0_StartTimer();
  3003  001506  EC20  F00B         	call	_TMR0_StartTimer	;wreg free
  3004  00150A  0012               	return		;funcret
  3005  00150C                     __end_of_TMR0_Initialize:
  3006                           	opt stack 0
  3007                           tblptru	equ	0xFF8
  3008                           tblptrh	equ	0xFF7
  3009                           tblptrl	equ	0xFF6
  3010                           tablat	equ	0xFF5
  3011                           intcon	equ	0xFF2
  3012                           postinc0	equ	0xFEE
  3013                           wreg	equ	0xFE8
  3014                           postinc1	equ	0xFE6
  3015                           postdec1	equ	0xFE5
  3016                           fsr1h	equ	0xFE2
  3017                           fsr1l	equ	0xFE1
  3018                           postinc2	equ	0xFDE
  3019                           postdec2	equ	0xFDD
  3020                           fsr2h	equ	0xFDA
  3021                           fsr2l	equ	0xFD9
  3022                           status	equ	0xFD8
  3023                           
  3024 ;; *************** function _TMR0_StartTimer *****************
  3025 ;; Defined at:
  3026 ;;		line 90 in file "mcc_generated_files/tmr0.c"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;		None
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;		None
  3031 ;; Return value:  Size  Location     Type
  3032 ;;		None               void
  3033 ;; Registers used:
  3034 ;;		None
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3040 ;;      Params:         0       0       0       0       0       0       0
  3041 ;;      Locals:         0       0       0       0       0       0       0
  3042 ;;      Temps:          0       0       0       0       0       0       0
  3043 ;;      Totals:         0       0       0       0       0       0       0
  3044 ;;Total ram usage:        0 bytes
  3045 ;; Hardware stack levels used:    1
  3046 ;; Hardware stack levels required when called:    3
  3047 ;; This function calls:
  3048 ;;		Nothing
  3049 ;; This function is called by:
  3050 ;;		_TMR0_Initialize
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054                           	psect	text13
  3055  001640                     __ptext13:
  3056                           	opt stack 0
  3057  001640                     _TMR0_StartTimer:
  3058                           	opt stack 25
  3059                           
  3060                           ;tmr0.c: 93: T0CONbits.TMR0ON = 1;
  3061                           
  3062                           ;incstack = 0
  3063  001640  8ED5               	bsf	4053,7,c	;volatile
  3064  001642  0012               	return		;funcret
  3065  001644                     __end_of_TMR0_StartTimer:
  3066                           	opt stack 0
  3067                           tblptru	equ	0xFF8
  3068                           tblptrh	equ	0xFF7
  3069                           tblptrl	equ	0xFF6
  3070                           tablat	equ	0xFF5
  3071                           intcon	equ	0xFF2
  3072                           postinc0	equ	0xFEE
  3073                           wreg	equ	0xFE8
  3074                           postinc1	equ	0xFE6
  3075                           postdec1	equ	0xFE5
  3076                           fsr1h	equ	0xFE2
  3077                           fsr1l	equ	0xFE1
  3078                           postinc2	equ	0xFDE
  3079                           postdec2	equ	0xFDD
  3080                           fsr2h	equ	0xFDA
  3081                           fsr2l	equ	0xFD9
  3082                           status	equ	0xFD8
  3083                           
  3084 ;; *************** function _SPI2_Initialize *****************
  3085 ;; Defined at:
  3086 ;;		line 64 in file "mcc_generated_files/spi2.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;		None
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;		None
  3091 ;; Return value:  Size  Location     Type
  3092 ;;		None               void
  3093 ;; Registers used:
  3094 ;;		wreg, status,2
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3100 ;;      Params:         0       0       0       0       0       0       0
  3101 ;;      Locals:         0       0       0       0       0       0       0
  3102 ;;      Temps:          0       0       0       0       0       0       0
  3103 ;;      Totals:         0       0       0       0       0       0       0
  3104 ;;Total ram usage:        0 bytes
  3105 ;; Hardware stack levels used:    1
  3106 ;; Hardware stack levels required when called:    3
  3107 ;; This function calls:
  3108 ;;		Nothing
  3109 ;; This function is called by:
  3110 ;;		_SYSTEM_Initialize
  3111 ;;		_LTC6804_initialize
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115                           	psect	text14
  3116  0015F4                     __ptext14:
  3117                           	opt stack 0
  3118  0015F4                     _SPI2_Initialize:
  3119                           	opt stack 26
  3120                           
  3121                           ;spi2.c: 69: SSP2STAT = 0x40;
  3122                           
  3123                           ;incstack = 0
  3124  0015F4  0E40               	movlw	64
  3125  0015F6  6E6D               	movwf	3949,c	;volatile
  3126                           
  3127                           ;spi2.c: 72: SSP2CON1 = 0x22;
  3128  0015F8  0E22               	movlw	34
  3129  0015FA  6E6C               	movwf	3948,c	;volatile
  3130                           
  3131                           ;spi2.c: 75: SSP2ADD = 0x00;
  3132  0015FC  0E00               	movlw	0
  3133  0015FE  6E6E               	movwf	3950,c	;volatile
  3134  001600  0012               	return		;funcret
  3135  001602                     __end_of_SPI2_Initialize:
  3136                           	opt stack 0
  3137                           tblptru	equ	0xFF8
  3138                           tblptrh	equ	0xFF7
  3139                           tblptrl	equ	0xFF6
  3140                           tablat	equ	0xFF5
  3141                           intcon	equ	0xFF2
  3142                           postinc0	equ	0xFEE
  3143                           wreg	equ	0xFE8
  3144                           postinc1	equ	0xFE6
  3145                           postdec1	equ	0xFE5
  3146                           fsr1h	equ	0xFE2
  3147                           fsr1l	equ	0xFE1
  3148                           postinc2	equ	0xFDE
  3149                           postdec2	equ	0xFDD
  3150                           fsr2h	equ	0xFDA
  3151                           fsr2l	equ	0xFD9
  3152                           status	equ	0xFD8
  3153                           
  3154 ;; *************** function _PIN_MANAGER_Initialize *****************
  3155 ;; Defined at:
  3156 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;		None
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;		None
  3161 ;; Return value:  Size  Location     Type
  3162 ;;		None               void
  3163 ;; Registers used:
  3164 ;;		wreg, status,2
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3170 ;;      Params:         0       0       0       0       0       0       0
  3171 ;;      Locals:         0       0       0       0       0       0       0
  3172 ;;      Temps:          0       0       0       0       0       0       0
  3173 ;;      Totals:         0       0       0       0       0       0       0
  3174 ;;Total ram usage:        0 bytes
  3175 ;; Hardware stack levels used:    1
  3176 ;; Hardware stack levels required when called:    3
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		_SYSTEM_Initialize
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           	psect	text15
  3185  00111A                     __ptext15:
  3186                           	opt stack 0
  3187  00111A                     _PIN_MANAGER_Initialize:
  3188                           	opt stack 26
  3189                           
  3190                           ;pin_manager.c: 51: LATB = 0x0;
  3191                           
  3192                           ;incstack = 0
  3193  00111A  0E00               	movlw	0
  3194  00111C  6E8A               	movwf	3978,c	;volatile
  3195                           
  3196                           ;pin_manager.c: 52: LATA = 0x0;
  3197  00111E  0E00               	movlw	0
  3198  001120  6E89               	movwf	3977,c	;volatile
  3199                           
  3200                           ;pin_manager.c: 53: ANSELE = 0x7;
  3201  001122  0E07               	movlw	7
  3202  001124  010F               	movlb	15	; () banked
  3203  001126  6F3C               	movwf	60,b	;volatile
  3204                           
  3205                           ;pin_manager.c: 54: LATE = 0x0;
  3206  001128  0E00               	movlw	0
  3207  00112A  6E8D               	movwf	3981,c	;volatile
  3208                           
  3209                           ;pin_manager.c: 55: LATD = 0x0;
  3210  00112C  0E00               	movlw	0
  3211  00112E  6E8C               	movwf	3980,c	;volatile
  3212                           
  3213                           ;pin_manager.c: 56: LATC = 0x0;
  3214  001130  0E00               	movlw	0
  3215  001132  6E8B               	movwf	3979,c	;volatile
  3216                           
  3217                           ;pin_manager.c: 57: ANSELA = 0x2E;
  3218  001134  0E2E               	movlw	46
  3219  001136  010F               	movlb	15	; () banked
  3220  001138  6F38               	movwf	56,b	;volatile
  3221                           
  3222                           ;pin_manager.c: 58: ANSELB = 0x3F;
  3223  00113A  0E3F               	movlw	63
  3224  00113C  010F               	movlb	15	; () banked
  3225  00113E  6F39               	movwf	57,b	;volatile
  3226                           
  3227                           ;pin_manager.c: 59: ANSELC = 0x3C;
  3228  001140  0E3C               	movlw	60
  3229  001142  010F               	movlb	15	; () banked
  3230  001144  6F3A               	movwf	58,b	;volatile
  3231                           
  3232                           ;pin_manager.c: 60: ANSELD = 0xF7;
  3233  001146  0EF7               	movlw	247
  3234  001148  010F               	movlb	15	; () banked
  3235  00114A  6F3B               	movwf	59,b	;volatile
  3236                           
  3237                           ;pin_manager.c: 61: WPUB = 0xE7;
  3238  00114C  0EE7               	movlw	231
  3239  00114E  6E61               	movwf	3937,c	;volatile
  3240                           
  3241                           ;pin_manager.c: 62: TRISD = 0x37;
  3242  001150  0E37               	movlw	55
  3243  001152  6E95               	movwf	3989,c	;volatile
  3244                           
  3245                           ;pin_manager.c: 63: TRISE = 0x7;
  3246  001154  0E07               	movlw	7
  3247  001156  6E96               	movwf	3990,c	;volatile
  3248                           
  3249                           ; BSR set to: 15
  3250                           ;pin_manager.c: 64: TRISB = 0xFF;
  3251  001158  6893               	setf	3987,c	;volatile
  3252                           
  3253                           ;pin_manager.c: 65: TRISC = 0x9F;
  3254  00115A  0E9F               	movlw	159
  3255  00115C  6E94               	movwf	3988,c	;volatile
  3256                           
  3257                           ;pin_manager.c: 66: TRISA = 0xFE;
  3258  00115E  0EFE               	movlw	254
  3259  001160  6E92               	movwf	3986,c	;volatile
  3260                           
  3261                           ; BSR set to: 15
  3262                           ;pin_manager.c: 67: TRISD3=0;
  3263  001162  9695               	bcf	3989,3,c	;volatile
  3264                           
  3265                           ; BSR set to: 15
  3266                           
  3267                           ; BSR set to: 15
  3268                           
  3269                           ;pin_manager.c: 68: do { LATD3 = 1; } while(0);
  3270  001164  868C               	bsf	3980,3,c	;volatile
  3271                           
  3272                           ; BSR set to: 15
  3273                           ;pin_manager.c: 69: INTCON2bits.nRBPU = 0x1;
  3274                           
  3275                           ; BSR set to: 15
  3276  001166  8EF1               	bsf	intcon2,7,c	;volatile
  3277                           
  3278                           ; BSR set to: 15
  3279                           ;pin_manager.c: 73: INTCONbits.RBIE = 0;
  3280  001168  96F2               	bcf	intcon,3,c	;volatile
  3281                           
  3282                           ; BSR set to: 15
  3283  00116A  0012               	return		;funcret
  3284  00116C                     __end_of_PIN_MANAGER_Initialize:
  3285                           	opt stack 0
  3286                           tblptru	equ	0xFF8
  3287                           tblptrh	equ	0xFF7
  3288                           tblptrl	equ	0xFF6
  3289                           tablat	equ	0xFF5
  3290                           intcon	equ	0xFF2
  3291                           intcon2	equ	0xFF1
  3292                           postinc0	equ	0xFEE
  3293                           wreg	equ	0xFE8
  3294                           postinc1	equ	0xFE6
  3295                           postdec1	equ	0xFE5
  3296                           fsr1h	equ	0xFE2
  3297                           fsr1l	equ	0xFE1
  3298                           postinc2	equ	0xFDE
  3299                           postdec2	equ	0xFDD
  3300                           fsr2h	equ	0xFDA
  3301                           fsr2l	equ	0xFD9
  3302                           status	equ	0xFD8
  3303                           
  3304 ;; *************** function _OSCILLATOR_Initialize *****************
  3305 ;; Defined at:
  3306 ;;		line 129 in file "mcc_generated_files/mcc.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;		None
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;		None
  3311 ;; Return value:  Size  Location     Type
  3312 ;;		None               void
  3313 ;; Registers used:
  3314 ;;		wreg, status,2
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3320 ;;      Params:         0       0       0       0       0       0       0
  3321 ;;      Locals:         0       0       0       0       0       0       0
  3322 ;;      Temps:          0       0       0       0       0       0       0
  3323 ;;      Totals:         0       0       0       0       0       0       0
  3324 ;;Total ram usage:        0 bytes
  3325 ;; Hardware stack levels used:    1
  3326 ;; Hardware stack levels required when called:    3
  3327 ;; This function calls:
  3328 ;;		Nothing
  3329 ;; This function is called by:
  3330 ;;		_SYSTEM_Initialize
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334                           	psect	text16
  3335  001602                     __ptext16:
  3336                           	opt stack 0
  3337  001602                     _OSCILLATOR_Initialize:
  3338                           	opt stack 26
  3339                           
  3340                           ;mcc.c: 132: OSCCON = 0x70;
  3341                           
  3342                           ; BSR set to: 15
  3343                           ;incstack = 0
  3344  001602  0E70               	movlw	112
  3345  001604  6ED3               	movwf	4051,c	;volatile
  3346                           
  3347                           ;mcc.c: 134: OSCCON2 = 0x04;
  3348  001606  0E04               	movlw	4
  3349  001608  6ED2               	movwf	4050,c	;volatile
  3350                           
  3351                           ;mcc.c: 136: OSCTUNE = 0x00;
  3352  00160A  0E00               	movlw	0
  3353  00160C  6E9B               	movwf	3995,c	;volatile
  3354  00160E  0012               	return		;funcret
  3355  001610                     __end_of_OSCILLATOR_Initialize:
  3356                           	opt stack 0
  3357                           tblptru	equ	0xFF8
  3358                           tblptrh	equ	0xFF7
  3359                           tblptrl	equ	0xFF6
  3360                           tablat	equ	0xFF5
  3361                           intcon	equ	0xFF2
  3362                           intcon2	equ	0xFF1
  3363                           postinc0	equ	0xFEE
  3364                           wreg	equ	0xFE8
  3365                           postinc1	equ	0xFE6
  3366                           postdec1	equ	0xFE5
  3367                           fsr1h	equ	0xFE2
  3368                           fsr1l	equ	0xFE1
  3369                           postinc2	equ	0xFDE
  3370                           postdec2	equ	0xFDD
  3371                           fsr2h	equ	0xFDA
  3372                           fsr2l	equ	0xFD9
  3373                           status	equ	0xFD8
  3374                           
  3375 ;; *************** function _INTERRUPT_Initialize *****************
  3376 ;; Defined at:
  3377 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;		None
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;		None
  3382 ;; Return value:  Size  Location     Type
  3383 ;;		None               void
  3384 ;; Registers used:
  3385 ;;		None
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3391 ;;      Params:         0       0       0       0       0       0       0
  3392 ;;      Locals:         0       0       0       0       0       0       0
  3393 ;;      Temps:          0       0       0       0       0       0       0
  3394 ;;      Totals:         0       0       0       0       0       0       0
  3395 ;;Total ram usage:        0 bytes
  3396 ;; Hardware stack levels used:    1
  3397 ;; Hardware stack levels required when called:    3
  3398 ;; This function calls:
  3399 ;;		Nothing
  3400 ;; This function is called by:
  3401 ;;		_SYSTEM_Initialize
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405                           	psect	text17
  3406  00161E                     __ptext17:
  3407                           	opt stack 0
  3408  00161E                     _INTERRUPT_Initialize:
  3409                           	opt stack 26
  3410                           
  3411                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  3412                           
  3413                           ;incstack = 0
  3414  00161E  9ED0               	bcf	4048,7,c	;volatile
  3415                           
  3416                           ;interrupt_manager.c: 60: IPR1bits.ADIP = 0;
  3417  001620  9C9F               	bcf	3999,6,c	;volatile
  3418                           
  3419                           ;interrupt_manager.c: 62: INTCON2bits.TMR0IP = 0;
  3420  001622  94F1               	bcf	intcon2,2,c	;volatile
  3421                           
  3422                           ;interrupt_manager.c: 64: IPR1bits.TX1IP = 0;
  3423  001624  989F               	bcf	3999,4,c	;volatile
  3424                           
  3425                           ;interrupt_manager.c: 66: IPR1bits.RC1IP = 0;
  3426  001626  9A9F               	bcf	3999,5,c	;volatile
  3427  001628  0012               	return		;funcret
  3428  00162A                     __end_of_INTERRUPT_Initialize:
  3429                           	opt stack 0
  3430                           tblptru	equ	0xFF8
  3431                           tblptrh	equ	0xFF7
  3432                           tblptrl	equ	0xFF6
  3433                           tablat	equ	0xFF5
  3434                           intcon	equ	0xFF2
  3435                           intcon2	equ	0xFF1
  3436                           postinc0	equ	0xFEE
  3437                           wreg	equ	0xFE8
  3438                           postinc1	equ	0xFE6
  3439                           postdec1	equ	0xFE5
  3440                           fsr1h	equ	0xFE2
  3441                           fsr1l	equ	0xFE1
  3442                           postinc2	equ	0xFDE
  3443                           postdec2	equ	0xFDD
  3444                           fsr2h	equ	0xFDA
  3445                           fsr2l	equ	0xFD9
  3446                           status	equ	0xFD8
  3447                           
  3448 ;; *************** function _EUSART1_Initialize *****************
  3449 ;; Defined at:
  3450 ;;		line 76 in file "mcc_generated_files/eusart1.c"
  3451 ;; Parameters:    Size  Location     Type
  3452 ;;		None
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;		None
  3455 ;; Return value:  Size  Location     Type
  3456 ;;		None               void
  3457 ;; Registers used:
  3458 ;;		wreg, status,2
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3464 ;;      Params:         0       0       0       0       0       0       0
  3465 ;;      Locals:         0       0       0       0       0       0       0
  3466 ;;      Temps:          0       0       0       0       0       0       0
  3467 ;;      Totals:         0       0       0       0       0       0       0
  3468 ;;Total ram usage:        0 bytes
  3469 ;; Hardware stack levels used:    1
  3470 ;; Hardware stack levels required when called:    3
  3471 ;; This function calls:
  3472 ;;		Nothing
  3473 ;; This function is called by:
  3474 ;;		_SYSTEM_Initialize
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           	psect	text18
  3479  001414                     __ptext18:
  3480                           	opt stack 0
  3481  001414                     _EUSART1_Initialize:
  3482                           	opt stack 26
  3483                           
  3484                           ;eusart1.c: 79: PIE1bits.RC1IE = 0;
  3485                           
  3486                           ;incstack = 0
  3487  001414  9A9D               	bcf	3997,5,c	;volatile
  3488                           
  3489                           ;eusart1.c: 80: PIE1bits.TX1IE = 0;
  3490  001416  989D               	bcf	3997,4,c	;volatile
  3491                           
  3492                           ;eusart1.c: 85: BAUDCON1 = 0x08;
  3493  001418  0E08               	movlw	8
  3494  00141A  6EB8               	movwf	4024,c	;volatile
  3495                           
  3496                           ;eusart1.c: 88: RCSTA1 = 0x90;
  3497  00141C  0E90               	movlw	144
  3498  00141E  6EAB               	movwf	4011,c	;volatile
  3499                           
  3500                           ;eusart1.c: 91: TXSTA1 = 0x24;
  3501  001420  0E24               	movlw	36
  3502  001422  6EAC               	movwf	4012,c	;volatile
  3503                           
  3504                           ;eusart1.c: 94: SPBRG1 = 0x67;
  3505  001424  0E67               	movlw	103
  3506  001426  6EAF               	movwf	4015,c	;volatile
  3507                           
  3508                           ;eusart1.c: 97: SPBRGH1 = 0x00;
  3509  001428  0E00               	movlw	0
  3510  00142A  6EB0               	movwf	4016,c	;volatile
  3511                           
  3512                           ;eusart1.c: 101: eusart1TxHead = 0;
  3513  00142C  0E00               	movlw	0
  3514  00142E  6E4B               	movwf	_eusart1TxHead,c
  3515                           
  3516                           ;eusart1.c: 102: eusart1TxTail = 0;
  3517  001430  0E00               	movlw	0
  3518  001432  6E4C               	movwf	_eusart1TxTail,c
  3519                           
  3520                           ;eusart1.c: 103: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  3521  001434  0E08               	movlw	8
  3522  001436  0100               	movlb	0	; () banked
  3523  001438  6FFF               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  3524                           
  3525                           ;eusart1.c: 105: eusart1RxHead = 0;
  3526  00143A  0E00               	movlw	0
  3527  00143C  6E49               	movwf	_eusart1RxHead,c
  3528                           
  3529                           ;eusart1.c: 106: eusart1RxTail = 0;
  3530  00143E  0E00               	movlw	0
  3531  001440  6E4A               	movwf	_eusart1RxTail,c
  3532                           
  3533                           ;eusart1.c: 107: eusart1RxCount = 0;
  3534  001442  0E00               	movlw	0
  3535  001444  0100               	movlb	0	; () banked
  3536  001446  6FCE               	movwf	_eusart1RxCount& (0+255),b	;volatile
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;eusart1.c: 110: PIE1bits.RC1IE = 1;
  3540  001448  8A9D               	bsf	3997,5,c	;volatile
  3541                           
  3542                           ; BSR set to: 0
  3543  00144A  0012               	return		;funcret
  3544  00144C                     __end_of_EUSART1_Initialize:
  3545                           	opt stack 0
  3546                           tblptru	equ	0xFF8
  3547                           tblptrh	equ	0xFF7
  3548                           tblptrl	equ	0xFF6
  3549                           tablat	equ	0xFF5
  3550                           intcon	equ	0xFF2
  3551                           intcon2	equ	0xFF1
  3552                           postinc0	equ	0xFEE
  3553                           wreg	equ	0xFE8
  3554                           postinc1	equ	0xFE6
  3555                           postdec1	equ	0xFE5
  3556                           fsr1h	equ	0xFE2
  3557                           fsr1l	equ	0xFE1
  3558                           postinc2	equ	0xFDE
  3559                           postdec2	equ	0xFDD
  3560                           fsr2h	equ	0xFDA
  3561                           fsr2l	equ	0xFD9
  3562                           status	equ	0xFD8
  3563                           
  3564 ;; *************** function _ADC_Initialize *****************
  3565 ;; Defined at:
  3566 ;;		line 59 in file "mcc_generated_files/adc.c"
  3567 ;; Parameters:    Size  Location     Type
  3568 ;;		None
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;		None
  3571 ;; Return value:  Size  Location     Type
  3572 ;;		None               void
  3573 ;; Registers used:
  3574 ;;		wreg, status,2
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3580 ;;      Params:         0       0       0       0       0       0       0
  3581 ;;      Locals:         0       0       0       0       0       0       0
  3582 ;;      Temps:          0       0       0       0       0       0       0
  3583 ;;      Totals:         0       0       0       0       0       0       0
  3584 ;;Total ram usage:        0 bytes
  3585 ;; Hardware stack levels used:    1
  3586 ;; Hardware stack levels required when called:    3
  3587 ;; This function calls:
  3588 ;;		Nothing
  3589 ;; This function is called by:
  3590 ;;		_SYSTEM_Initialize
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           	psect	text19
  3595  0015A4                     __ptext19:
  3596                           	opt stack 0
  3597  0015A4                     _ADC_Initialize:
  3598                           	opt stack 26
  3599                           
  3600                           ;adc.c: 64: ADCON0 = 0x01;
  3601                           
  3602                           ; BSR set to: 0
  3603                           ;incstack = 0
  3604  0015A4  0E01               	movlw	1
  3605  0015A6  6EC2               	movwf	4034,c	;volatile
  3606                           
  3607                           ;adc.c: 67: ADCON1 = 0x00;
  3608  0015A8  0E00               	movlw	0
  3609  0015AA  6EC1               	movwf	4033,c	;volatile
  3610                           
  3611                           ;adc.c: 70: ADCON2 = 0x02;
  3612  0015AC  0E02               	movlw	2
  3613  0015AE  6EC0               	movwf	4032,c	;volatile
  3614                           
  3615                           ;adc.c: 73: ADRESL = 0x00;
  3616  0015B0  0E00               	movlw	0
  3617  0015B2  6EC3               	movwf	4035,c	;volatile
  3618                           
  3619                           ;adc.c: 76: ADRESH = 0x00;
  3620  0015B4  0E00               	movlw	0
  3621  0015B6  6EC4               	movwf	4036,c	;volatile
  3622                           
  3623                           ;adc.c: 79: PIE1bits.ADIE = 1;
  3624  0015B8  8C9D               	bsf	3997,6,c	;volatile
  3625  0015BA  0012               	return		;funcret
  3626  0015BC                     __end_of_ADC_Initialize:
  3627                           	opt stack 0
  3628                           tblptru	equ	0xFF8
  3629                           tblptrh	equ	0xFF7
  3630                           tblptrl	equ	0xFF6
  3631                           tablat	equ	0xFF5
  3632                           intcon	equ	0xFF2
  3633                           intcon2	equ	0xFF1
  3634                           postinc0	equ	0xFEE
  3635                           wreg	equ	0xFE8
  3636                           postinc1	equ	0xFE6
  3637                           postdec1	equ	0xFE5
  3638                           fsr1h	equ	0xFE2
  3639                           fsr1l	equ	0xFE1
  3640                           postinc2	equ	0xFDE
  3641                           postdec2	equ	0xFDD
  3642                           fsr2h	equ	0xFDA
  3643                           fsr2l	equ	0xFD9
  3644                           status	equ	0xFD8
  3645                           
  3646 ;; *************** function _Run_Mode *****************
  3647 ;; Defined at:
  3648 ;;		line 44 in file "BatteryManagment.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;		None
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;		None
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  2  362[None  ] int 
  3655 ;; Registers used:
  3656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3662 ;;      Params:         0       0       0       0       0       0       0
  3663 ;;      Locals:         0       0       0       0       0       0       0
  3664 ;;      Temps:          0       0       0       0       0       0       0
  3665 ;;      Totals:         0       0       0       0       0       0       0
  3666 ;;Total ram usage:        0 bytes
  3667 ;; Hardware stack levels used:    1
  3668 ;; Hardware stack levels required when called:    8
  3669 ;; This function calls:
  3670 ;;		_Read_Battery
  3671 ;;		_printf
  3672 ;; This function is called by:
  3673 ;;		_main
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           	psect	text20
  3678  0013DA                     __ptext20:
  3679                           	opt stack 0
  3680  0013DA                     _Run_Mode:
  3681                           	opt stack 22
  3682                           
  3683                           ;BatteryManagment.c: 45: cell_codes_Bank[0][0]=4535;
  3684                           
  3685                           ;incstack = 0
  3686  0013DA  0E11               	movlw	17
  3687  0013DC  0102               	movlb	2	; () banked
  3688  0013DE  6F8B               	movwf	(_cell_codes_Bank+1)& (0+255),b
  3689  0013E0  0EB7               	movlw	183
  3690  0013E2  6F8A               	movwf	_cell_codes_Bank& (0+255),b
  3691                           
  3692                           ; BSR set to: 2
  3693                           ;BatteryManagment.c: 46: Read_Battery(0,cell_codes_Bank);
  3694  0013E4  0E00               	movlw	0
  3695  0013E6  0100               	movlb	0	; () banked
  3696  0013E8  6FF4               	movwf	(Read_Battery@BatteryPlacement+1)& (0+255),b
  3697  0013EA  0E00               	movlw	0
  3698  0013EC  6FF3               	movwf	Read_Battery@BatteryPlacement& (0+255),b
  3699  0013EE  0E8A               	movlw	low _cell_codes_Bank
  3700  0013F0  0100               	movlb	0	; () banked
  3701  0013F2  6FF5               	movwf	Read_Battery@cell_codes& (0+255),b
  3702  0013F4  0E02               	movlw	high _cell_codes_Bank
  3703  0013F6  0100               	movlb	0	; () banked
  3704  0013F8  6FF6               	movwf	(Read_Battery@cell_codes+1)& (0+255),b
  3705  0013FA  EC9A  F002         	call	_Read_Battery	;wreg free
  3706                           
  3707                           ;BatteryManagment.c: 49: printf ("Voltage: %i \n", cell_codes_Bank[0][0]);
  3708  0013FE  0EEC               	movlw	low STR_2
  3709  001400  6E1B               	movwf	printf@f,c
  3710  001402  0E7F               	movlw	high STR_2
  3711  001404  6E1C               	movwf	printf@f+1,c
  3712  001406  C28A  F01D         	movff	_cell_codes_Bank,?_printf+2
  3713  00140A  C28B  F01E         	movff	_cell_codes_Bank+1,?_printf+3
  3714  00140E  EC13  F006         	call	_printf	;wreg free
  3715  001412  0012               	return		;funcret
  3716  001414                     __end_of_Run_Mode:
  3717                           	opt stack 0
  3718                           tblptru	equ	0xFF8
  3719                           tblptrh	equ	0xFF7
  3720                           tblptrl	equ	0xFF6
  3721                           tablat	equ	0xFF5
  3722                           intcon	equ	0xFF2
  3723                           intcon2	equ	0xFF1
  3724                           postinc0	equ	0xFEE
  3725                           wreg	equ	0xFE8
  3726                           postinc1	equ	0xFE6
  3727                           postdec1	equ	0xFE5
  3728                           fsr1h	equ	0xFE2
  3729                           fsr1l	equ	0xFE1
  3730                           postinc2	equ	0xFDE
  3731                           postdec2	equ	0xFDD
  3732                           fsr2h	equ	0xFDA
  3733                           fsr2l	equ	0xFD9
  3734                           status	equ	0xFD8
  3735                           
  3736 ;; *************** function _printf *****************
  3737 ;; Defined at:
  3738 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;  f               2   26[COMRAM] PTR const unsigned char 
  3741 ;;		 -> STR_2(14), STR_1(5), 
  3742 ;; Auto vars:     Size  Location     Type
  3743 ;;  tmpval          4    0        struct .
  3744 ;;  cp              3    0        PTR const unsigned char 
  3745 ;;  val             2   35[COMRAM] unsigned int 
  3746 ;;  ap              2   31[COMRAM] PTR void [1]
  3747 ;;		 -> ?_printf(2), 
  3748 ;;  len             2    0        unsigned int 
  3749 ;;  c               1   37[COMRAM] char 
  3750 ;;  prec            1   34[COMRAM] char 
  3751 ;;  flag            1   33[COMRAM] unsigned char 
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  2   26[COMRAM] int 
  3754 ;; Registers used:
  3755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3761 ;;      Params:         4       0       0       0       0       0       0
  3762 ;;      Locals:         7       0       0       0       0       0       0
  3763 ;;      Temps:          1       0       0       0       0       0       0
  3764 ;;      Totals:        12       0       0       0       0       0       0
  3765 ;;Total ram usage:       12 bytes
  3766 ;; Hardware stack levels used:    1
  3767 ;; Hardware stack levels required when called:    5
  3768 ;; This function calls:
  3769 ;;		___lwdiv
  3770 ;;		___lwmod
  3771 ;;		_putch
  3772 ;; This function is called by:
  3773 ;;		_main
  3774 ;;		_Run_Mode
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           
  3778                           	psect	text21
  3779  000C26                     __ptext21:
  3780                           	opt stack 0
  3781  000C26                     _printf:
  3782                           	opt stack 25
  3783                           
  3784                           ;doprnt.c: 466: va_list ap;
  3785                           ;doprnt.c: 499: signed char c;
  3786                           ;doprnt.c: 506: signed char prec;
  3787                           ;doprnt.c: 508: unsigned char flag;
  3788                           ;doprnt.c: 523: union {
  3789                           ;doprnt.c: 524: unsigned long vd;
  3790                           ;doprnt.c: 525: double integ;
  3791                           ;doprnt.c: 526: } tmpval;
  3792                           ;doprnt.c: 528: unsigned int val;
  3793                           ;doprnt.c: 529: unsigned len;
  3794                           ;doprnt.c: 530: const char * cp;
  3795                           ;doprnt.c: 533: *ap = __va_start();
  3796                           
  3797                           ;incstack = 0
  3798  000C26  0E1D               	movlw	low (?_printf+2)
  3799  000C28  6E20               	movwf	printf@ap,c
  3800  000C2A  0E00               	movlw	high (?_printf+2)
  3801  000C2C  6E21               	movwf	printf@ap+1,c
  3802                           
  3803                           ;doprnt.c: 536: while(c = *f++) {
  3804  000C2E  D07D               	goto	l3863
  3805  000C30                     l3817:
  3806                           
  3807                           ;doprnt.c: 538: if(c != '%')
  3808  000C30  0E25               	movlw	37
  3809  000C32  1826               	xorwf	printf@c,w,c
  3810  000C34  B4D8               	btfsc	status,2,c
  3811  000C36  D004               	goto	l3821
  3812                           
  3813                           ;doprnt.c: 540: {
  3814                           ;doprnt.c: 541: (putch(c) );
  3815  000C38  5026               	movf	printf@c,w,c
  3816  000C3A  EC15  F00B         	call	_putch
  3817                           
  3818                           ;doprnt.c: 542: continue;
  3819  000C3E  D075               	goto	l3863
  3820  000C40                     l3821:
  3821                           
  3822                           ;doprnt.c: 543: }
  3823                           ;doprnt.c: 548: flag = 0;
  3824  000C40  0E00               	movlw	0
  3825  000C42  6E22               	movwf	printf@flag,c
  3826                           
  3827                           ;doprnt.c: 822: }
  3828                           
  3829                           ;doprnt.c: 813: continue;
  3830                           
  3831                           ;doprnt.c: 802: default:
  3832                           
  3833                           ;doprnt.c: 698: case 'i':
  3834                           ;doprnt.c: 699: break;
  3835                           
  3836                           ;doprnt.c: 697: case 'd':
  3837                           
  3838                           ;doprnt.c: 638: goto alldone;
  3839                           
  3840                           ;doprnt.c: 637: case 0:
  3841                           
  3842                           ;doprnt.c: 635: switch(c = *f++) {
  3843  000C44  C01B  FFF6         	movff	printf@f,tblptrl
  3844  000C48  C01C  FFF7         	movff	printf@f+1,tblptrh
  3845  000C4C  4A1B               	infsnz	printf@f,f,c
  3846  000C4E  2A1C               	incf	printf@f+1,f,c
  3847  000C50                     	if	0	;tblptru may be non-zero
  3848  000C50                     	endif
  3849  000C50                     	if	0	;tblptru may be non-zero
  3850  000C50                     	endif
  3851  000C50  0008               	tblrd		*
  3852  000C52  CFF5 F026          	movff	tablat,printf@c
  3853  000C56  5026               	movf	printf@c,w,c
  3854                           
  3855                           ; Switch size 1, requested type "space"
  3856                           ; Number of cases is 3, Range of values is 0 to 105
  3857                           ; switch strategies available:
  3858                           ; Name         Instructions Cycles
  3859                           ; simple_byte           10     6 (average)
  3860                           ;	Chosen strategy is simple_byte
  3861  000C58  0A00               	xorlw	0	; case 0
  3862  000C5A  B4D8               	btfsc	status,2,c
  3863  000C5C  0012               	return	
  3864  000C5E  0A64               	xorlw	100	; case 100
  3865  000C60  B4D8               	btfsc	status,2,c
  3866  000C62  D003               	goto	l3827
  3867  000C64  0A0D               	xorlw	13	; case 105
  3868  000C66  A4D8               	btfss	status,2,c
  3869  000C68  D060               	goto	l3863
  3870  000C6A                     l3827:
  3871                           
  3872                           ;doprnt.c: 1253: {
  3873                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3874  000C6A  C020  FFD9         	movff	printf@ap,fsr2l
  3875  000C6E  C021  FFDA         	movff	printf@ap+1,fsr2h
  3876  000C72  CFDE F024          	movff	postinc2,printf@val
  3877  000C76  CFDD F025          	movff	postdec2,printf@val+1
  3878  000C7A  0E02               	movlw	2
  3879  000C7C  2620               	addwf	printf@ap,f,c
  3880  000C7E  0E00               	movlw	0
  3881  000C80  2221               	addwfc	printf@ap+1,f,c
  3882                           
  3883                           ;doprnt.c: 1261: if((int)val < 0) {
  3884  000C82  AE25               	btfss	printf@val+1,7,c
  3885  000C84  D006               	goto	l3837
  3886                           
  3887                           ;doprnt.c: 1262: flag |= 0x03;
  3888  000C86  0E03               	movlw	3
  3889  000C88  1222               	iorwf	printf@flag,f,c
  3890                           
  3891                           ;doprnt.c: 1263: val = -val;
  3892  000C8A  6C24               	negf	printf@val,c
  3893  000C8C  1E25               	comf	printf@val+1,f,c
  3894  000C8E  B0D8               	btfsc	status,0,c
  3895  000C90  2A25               	incf	printf@val+1,f,c
  3896  000C92                     l3837:
  3897                           
  3898                           ;doprnt.c: 1264: }
  3899                           ;doprnt.c: 1266: }
  3900                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3901  000C92  0E01               	movlw	1
  3902  000C94  6E26               	movwf	printf@c,c
  3903  000C96                     l3839:
  3904  000C96  0E05               	movlw	5
  3905  000C98  1826               	xorwf	printf@c,w,c
  3906  000C9A  B4D8               	btfsc	status,2,c
  3907  000C9C  D012               	goto	l3851
  3908                           
  3909                           ;doprnt.c: 1306: if(val < dpowers[c])
  3910  000C9E  5026               	movf	printf@c,w,c
  3911  000CA0  0D02               	mullw	2
  3912  000CA2  0EA9               	movlw	low _dpowers
  3913  000CA4  24F3               	addwf	prodl,w,c
  3914  000CA6  6EF6               	movwf	tblptrl,c
  3915  000CA8  0E7F               	movlw	high _dpowers
  3916  000CAA  20F4               	addwfc	prodh,w,c
  3917  000CAC  6EF7               	movwf	tblptrh,c
  3918  000CAE                     	if	0	;There are less than 3 active tblptr bytes
  3919  000CAE                     	endif
  3920  000CAE  0009               	tblrd		*+
  3921  000CB0  50F5               	movf	tablat,w,c
  3922  000CB2  5C24               	subwf	printf@val,w,c
  3923  000CB4  0009               	tblrd		*+
  3924  000CB6  50F5               	movf	tablat,w,c
  3925  000CB8  5825               	subwfb	printf@val+1,w,c
  3926  000CBA  A0D8               	btfss	status,0,c
  3927  000CBC  D002               	goto	l3851
  3928                           
  3929                           ;doprnt.c: 1307: break;
  3930  000CBE  2A26               	incf	printf@c,f,c
  3931  000CC0  D7EA               	goto	l3839
  3932  000CC2                     l3851:
  3933                           
  3934                           ;doprnt.c: 1422: {
  3935                           ;doprnt.c: 1438: if(flag & 0x03)
  3936  000CC2  C022  F01F         	movff	printf@flag,??_printf
  3937  000CC6  0E03               	movlw	3
  3938  000CC8  161F               	andwf	??_printf,f,c
  3939  000CCA  B4D8               	btfsc	status,2,c
  3940  000CCC  D003               	goto	l3855
  3941                           
  3942                           ;doprnt.c: 1439: (putch('-') );
  3943  000CCE  0E2D               	movlw	45
  3944  000CD0  EC15  F00B         	call	_putch
  3945  000CD4                     l3855:
  3946                           
  3947                           ;doprnt.c: 1469: }
  3948                           ;doprnt.c: 1472: prec = c;
  3949  000CD4  C026  F023         	movff	printf@c,printf@prec
  3950                           
  3951                           ;doprnt.c: 1474: while(prec--) {
  3952  000CD8  D024               	goto	l3861
  3953  000CDA                     l3857:
  3954                           
  3955                           ;doprnt.c: 1478: {
  3956                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3957  000CDA  5023               	movf	printf@prec,w,c
  3958  000CDC  0D02               	mullw	2
  3959  000CDE  0EA9               	movlw	low _dpowers
  3960  000CE0  24F3               	addwf	prodl,w,c
  3961  000CE2  6EF6               	movwf	tblptrl,c
  3962  000CE4  0E7F               	movlw	high _dpowers
  3963  000CE6  20F4               	addwfc	prodh,w,c
  3964  000CE8  6EF7               	movwf	tblptrh,c
  3965  000CEA                     	if	0	;There are less than 3 active tblptr bytes
  3966  000CEA                     	endif
  3967  000CEA  0009               	tblrd		*+
  3968  000CEC  CFF5 F011          	movff	tablat,___lwdiv@divisor
  3969  000CF0  000A               	tblrd		*-
  3970  000CF2  CFF5 F012          	movff	tablat,___lwdiv@divisor+1
  3971  000CF6  C024  F00F         	movff	printf@val,___lwdiv@dividend
  3972  000CFA  C025  F010         	movff	printf@val+1,___lwdiv@dividend+1
  3973  000CFE  ECB6  F008         	call	___lwdiv	;wreg free
  3974  000D02  C00F  F016         	movff	?___lwdiv,___lwmod@dividend
  3975  000D06  C010  F017         	movff	?___lwdiv+1,___lwmod@dividend+1
  3976  000D0A  0E00               	movlw	0
  3977  000D0C  6E19               	movwf	___lwmod@divisor+1,c
  3978  000D0E  0E0A               	movlw	10
  3979  000D10  6E18               	movwf	___lwmod@divisor,c
  3980  000D12  EC71  F009         	call	___lwmod	;wreg free
  3981  000D16  5016               	movf	?___lwmod,w,c
  3982  000D18  0F30               	addlw	48
  3983  000D1A  6E26               	movwf	printf@c,c
  3984                           
  3985                           ;doprnt.c: 1523: }
  3986                           ;doprnt.c: 1524: (putch(c) );
  3987  000D1C  5026               	movf	printf@c,w,c
  3988  000D1E  EC15  F00B         	call	_putch
  3989  000D22                     l3861:
  3990  000D22  0623               	decf	printf@prec,f,c
  3991  000D24  2823               	incf	printf@prec,w,c
  3992  000D26  A4D8               	btfss	status,2,c
  3993  000D28  D7D8               	goto	l3857
  3994  000D2A                     l3863:
  3995  000D2A  C01B  FFF6         	movff	printf@f,tblptrl
  3996  000D2E  C01C  FFF7         	movff	printf@f+1,tblptrh
  3997  000D32  4A1B               	infsnz	printf@f,f,c
  3998  000D34  2A1C               	incf	printf@f+1,f,c
  3999  000D36                     	if	0	;tblptru may be non-zero
  4000  000D36                     	endif
  4001  000D36                     	if	0	;tblptru may be non-zero
  4002  000D36                     	endif
  4003  000D36  0008               	tblrd		*
  4004  000D38  CFF5 F026          	movff	tablat,printf@c
  4005  000D3C  5026               	movf	printf@c,w,c
  4006  000D3E  B4D8               	btfsc	status,2,c
  4007  000D40  0012               	return	
  4008  000D42  D776               	goto	l3817
  4009  000D44                     __end_of_printf:
  4010                           	opt stack 0
  4011                           tblptru	equ	0xFF8
  4012                           tblptrh	equ	0xFF7
  4013                           tblptrl	equ	0xFF6
  4014                           tablat	equ	0xFF5
  4015                           prodh	equ	0xFF4
  4016                           prodl	equ	0xFF3
  4017                           intcon	equ	0xFF2
  4018                           intcon2	equ	0xFF1
  4019                           postinc0	equ	0xFEE
  4020                           wreg	equ	0xFE8
  4021                           postinc1	equ	0xFE6
  4022                           postdec1	equ	0xFE5
  4023                           fsr1h	equ	0xFE2
  4024                           fsr1l	equ	0xFE1
  4025                           postinc2	equ	0xFDE
  4026                           postdec2	equ	0xFDD
  4027                           fsr2h	equ	0xFDA
  4028                           fsr2l	equ	0xFD9
  4029                           status	equ	0xFD8
  4030                           
  4031 ;; *************** function _putch *****************
  4032 ;; Defined at:
  4033 ;;		line 162 in file "mcc_generated_files/eusart1.c"
  4034 ;; Parameters:    Size  Location     Type
  4035 ;;  txData          1    wreg     unsigned char 
  4036 ;; Auto vars:     Size  Location     Type
  4037 ;;  txData          1   15[COMRAM] unsigned char 
  4038 ;; Return value:  Size  Location     Type
  4039 ;;		None               void
  4040 ;; Registers used:
  4041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4042 ;; Tracked objects:
  4043 ;;		On entry : 0/0
  4044 ;;		On exit  : 0/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4047 ;;      Params:         0       0       0       0       0       0       0
  4048 ;;      Locals:         1       0       0       0       0       0       0
  4049 ;;      Temps:          0       0       0       0       0       0       0
  4050 ;;      Totals:         1       0       0       0       0       0       0
  4051 ;;Total ram usage:        1 bytes
  4052 ;; Hardware stack levels used:    1
  4053 ;; Hardware stack levels required when called:    4
  4054 ;; This function calls:
  4055 ;;		_EUSART1_Write
  4056 ;; This function is called by:
  4057 ;;		_printf
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           	psect	text22
  4062  00162A                     __ptext22:
  4063                           	opt stack 0
  4064  00162A                     _putch:
  4065                           	opt stack 25
  4066                           
  4067                           ;incstack = 0
  4068                           ;putch@txData stored from wreg
  4069  00162A  6E10               	movwf	putch@txData,c
  4070                           
  4071                           ;eusart1.c: 164: EUSART1_Write(txData);
  4072  00162C  5010               	movf	putch@txData,w,c
  4073  00162E  EC92  F009         	call	_EUSART1_Write
  4074  001632  0012               	return		;funcret
  4075  001634                     __end_of_putch:
  4076                           	opt stack 0
  4077                           tblptru	equ	0xFF8
  4078                           tblptrh	equ	0xFF7
  4079                           tblptrl	equ	0xFF6
  4080                           tablat	equ	0xFF5
  4081                           prodh	equ	0xFF4
  4082                           prodl	equ	0xFF3
  4083                           intcon	equ	0xFF2
  4084                           intcon2	equ	0xFF1
  4085                           postinc0	equ	0xFEE
  4086                           wreg	equ	0xFE8
  4087                           postinc1	equ	0xFE6
  4088                           postdec1	equ	0xFE5
  4089                           fsr1h	equ	0xFE2
  4090                           fsr1l	equ	0xFE1
  4091                           postinc2	equ	0xFDE
  4092                           postdec2	equ	0xFDD
  4093                           fsr2h	equ	0xFDA
  4094                           fsr2l	equ	0xFD9
  4095                           status	equ	0xFD8
  4096                           
  4097 ;; *************** function _EUSART1_Write *****************
  4098 ;; Defined at:
  4099 ;;		line 134 in file "mcc_generated_files/eusart1.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;  txData          1    wreg     unsigned char 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  txData          1   14[COMRAM] unsigned char 
  4104 ;; Return value:  Size  Location     Type
  4105 ;;		None               void
  4106 ;; Registers used:
  4107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4113 ;;      Params:         0       0       0       0       0       0       0
  4114 ;;      Locals:         1       0       0       0       0       0       0
  4115 ;;      Temps:          0       0       0       0       0       0       0
  4116 ;;      Totals:         1       0       0       0       0       0       0
  4117 ;;Total ram usage:        1 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; Hardware stack levels required when called:    3
  4120 ;; This function calls:
  4121 ;;		Nothing
  4122 ;; This function is called by:
  4123 ;;		_putch
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           	psect	text23
  4128  001324                     __ptext23:
  4129                           	opt stack 0
  4130  001324                     _EUSART1_Write:
  4131                           	opt stack 25
  4132                           
  4133                           ;incstack = 0
  4134                           ;EUSART1_Write@txData stored from wreg
  4135  001324  6E0F               	movwf	EUSART1_Write@txData,c
  4136  001326                     l3477:
  4137  001326  0100               	movlb	0	; () banked
  4138  001328  51FF               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  4139  00132A  B4D8               	btfsc	status,2,c
  4140  00132C  D7FC               	goto	l3477
  4141                           
  4142                           ; BSR set to: 0
  4143                           ;eusart1.c: 138: }
  4144                           ;eusart1.c: 140: if(0 == PIE1bits.TX1IE)
  4145  00132E  B89D               	btfsc	3997,4,c	;volatile
  4146  001330  D003               	goto	l282
  4147                           
  4148                           ; BSR set to: 0
  4149                           ;eusart1.c: 141: {
  4150                           ;eusart1.c: 142: TXREG1 = txData;
  4151  001332  C00F  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4152                           
  4153                           ;eusart1.c: 143: }
  4154  001336  D013               	goto	l3491
  4155  001338                     l282:
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;eusart1.c: 144: else
  4159                           ;eusart1.c: 145: {
  4160                           ;eusart1.c: 146: PIE1bits.TX1IE = 0;
  4161  001338  989D               	bcf	3997,4,c	;volatile
  4162                           
  4163                           ; BSR set to: 0
  4164                           ;eusart1.c: 147: eusart1TxBuffer[eusart1TxHead++] = txData;
  4165  00133A  504B               	movf	_eusart1TxHead,w,c
  4166  00133C  0D01               	mullw	1
  4167  00133E  0EAA               	movlw	low _eusart1TxBuffer
  4168  001340  24F3               	addwf	prodl,w,c
  4169  001342  6ED9               	movwf	fsr2l,c
  4170  001344  0E00               	movlw	high _eusart1TxBuffer
  4171  001346  20F4               	addwfc	prodh,w,c
  4172  001348  6EDA               	movwf	fsr2h,c
  4173  00134A  C00F  FFDF         	movff	EUSART1_Write@txData,indf2
  4174                           
  4175                           ; BSR set to: 0
  4176  00134E  2A4B               	incf	_eusart1TxHead,f,c
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;eusart1.c: 148: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  4180  001350  0E07               	movlw	7
  4181  001352  644B               	cpfsgt	_eusart1TxHead,c
  4182  001354  D002               	goto	l3489
  4183                           
  4184                           ; BSR set to: 0
  4185                           ;eusart1.c: 149: {
  4186                           ;eusart1.c: 150: eusart1TxHead = 0;
  4187  001356  0E00               	movlw	0
  4188  001358  6E4B               	movwf	_eusart1TxHead,c
  4189  00135A                     l3489:
  4190                           
  4191                           ; BSR set to: 0
  4192                           ;eusart1.c: 151: }
  4193                           ;eusart1.c: 152: eusart1TxBufferRemaining--;
  4194  00135A  0100               	movlb	0	; () banked
  4195  00135C  07FF               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  4196  00135E                     l3491:
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;eusart1.c: 153: }
  4200                           ;eusart1.c: 154: PIE1bits.TX1IE = 1;
  4201  00135E  889D               	bsf	3997,4,c	;volatile
  4202                           
  4203                           ; BSR set to: 0
  4204  001360  0012               	return		;funcret
  4205  001362                     __end_of_EUSART1_Write:
  4206                           	opt stack 0
  4207                           tblptru	equ	0xFF8
  4208                           tblptrh	equ	0xFF7
  4209                           tblptrl	equ	0xFF6
  4210                           tablat	equ	0xFF5
  4211                           prodh	equ	0xFF4
  4212                           prodl	equ	0xFF3
  4213                           intcon	equ	0xFF2
  4214                           intcon2	equ	0xFF1
  4215                           postinc0	equ	0xFEE
  4216                           wreg	equ	0xFE8
  4217                           postinc1	equ	0xFE6
  4218                           postdec1	equ	0xFE5
  4219                           fsr1h	equ	0xFE2
  4220                           fsr1l	equ	0xFE1
  4221                           indf2	equ	0xFDF
  4222                           postinc2	equ	0xFDE
  4223                           postdec2	equ	0xFDD
  4224                           fsr2h	equ	0xFDA
  4225                           fsr2l	equ	0xFD9
  4226                           status	equ	0xFD8
  4227                           
  4228 ;; *************** function ___lwmod *****************
  4229 ;; Defined at:
  4230 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;  dividend        2   21[COMRAM] unsigned int 
  4233 ;;  divisor         2   23[COMRAM] unsigned int 
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;  counter         1   25[COMRAM] unsigned char 
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  2   21[COMRAM] unsigned int 
  4238 ;; Registers used:
  4239 ;;		wreg, status,2, status,0
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4245 ;;      Params:         4       0       0       0       0       0       0
  4246 ;;      Locals:         1       0       0       0       0       0       0
  4247 ;;      Temps:          0       0       0       0       0       0       0
  4248 ;;      Totals:         5       0       0       0       0       0       0
  4249 ;;Total ram usage:        5 bytes
  4250 ;; Hardware stack levels used:    1
  4251 ;; Hardware stack levels required when called:    3
  4252 ;; This function calls:
  4253 ;;		Nothing
  4254 ;; This function is called by:
  4255 ;;		_printf
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           	psect	text24
  4260  0012E2                     __ptext24:
  4261                           	opt stack 0
  4262  0012E2                     ___lwmod:
  4263                           	opt stack 26
  4264                           
  4265                           ; BSR set to: 0
  4266                           ;incstack = 0
  4267  0012E2  5018               	movf	___lwmod@divisor,w,c
  4268  0012E4  1019               	iorwf	___lwmod@divisor+1,w,c
  4269  0012E6  B4D8               	btfsc	status,2,c
  4270  0012E8  D018               	goto	l1423
  4271  0012EA  0E01               	movlw	1
  4272  0012EC  6E1A               	movwf	___lwmod@counter,c
  4273  0012EE  D004               	goto	l3799
  4274  0012F0                     l3797:
  4275  0012F0  90D8               	bcf	status,0,c
  4276  0012F2  3618               	rlcf	___lwmod@divisor,f,c
  4277  0012F4  3619               	rlcf	___lwmod@divisor+1,f,c
  4278  0012F6  2A1A               	incf	___lwmod@counter,f,c
  4279  0012F8                     l3799:
  4280  0012F8  AE19               	btfss	___lwmod@divisor+1,7,c
  4281  0012FA  D7FA               	goto	l3797
  4282  0012FC                     l3801:
  4283  0012FC  5018               	movf	___lwmod@divisor,w,c
  4284  0012FE  5C16               	subwf	___lwmod@dividend,w,c
  4285  001300  5019               	movf	___lwmod@divisor+1,w,c
  4286  001302  5817               	subwfb	___lwmod@dividend+1,w,c
  4287  001304  A0D8               	btfss	status,0,c
  4288  001306  D004               	goto	l3805
  4289  001308  5018               	movf	___lwmod@divisor,w,c
  4290  00130A  5E16               	subwf	___lwmod@dividend,f,c
  4291  00130C  5019               	movf	___lwmod@divisor+1,w,c
  4292  00130E  5A17               	subwfb	___lwmod@dividend+1,f,c
  4293  001310                     l3805:
  4294  001310  90D8               	bcf	status,0,c
  4295  001312  3219               	rrcf	___lwmod@divisor+1,f,c
  4296  001314  3218               	rrcf	___lwmod@divisor,f,c
  4297  001316  2E1A               	decfsz	___lwmod@counter,f,c
  4298  001318  D7F1               	goto	l3801
  4299  00131A                     l1423:
  4300  00131A  C016  F016         	movff	___lwmod@dividend,?___lwmod
  4301  00131E  C017  F017         	movff	___lwmod@dividend+1,?___lwmod+1
  4302  001322  0012               	return		;funcret
  4303  001324                     __end_of___lwmod:
  4304                           	opt stack 0
  4305                           tblptru	equ	0xFF8
  4306                           tblptrh	equ	0xFF7
  4307                           tblptrl	equ	0xFF6
  4308                           tablat	equ	0xFF5
  4309                           prodh	equ	0xFF4
  4310                           prodl	equ	0xFF3
  4311                           intcon	equ	0xFF2
  4312                           intcon2	equ	0xFF1
  4313                           postinc0	equ	0xFEE
  4314                           wreg	equ	0xFE8
  4315                           postinc1	equ	0xFE6
  4316                           postdec1	equ	0xFE5
  4317                           fsr1h	equ	0xFE2
  4318                           fsr1l	equ	0xFE1
  4319                           indf2	equ	0xFDF
  4320                           postinc2	equ	0xFDE
  4321                           postdec2	equ	0xFDD
  4322                           fsr2h	equ	0xFDA
  4323                           fsr2l	equ	0xFD9
  4324                           status	equ	0xFD8
  4325                           
  4326 ;; *************** function ___lwdiv *****************
  4327 ;; Defined at:
  4328 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;  dividend        2   14[COMRAM] unsigned int 
  4331 ;;  divisor         2   16[COMRAM] unsigned int 
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;  quotient        2   18[COMRAM] unsigned int 
  4334 ;;  counter         1   20[COMRAM] unsigned char 
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  2   14[COMRAM] unsigned int 
  4337 ;; Registers used:
  4338 ;;		wreg, status,2, status,0
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4344 ;;      Params:         4       0       0       0       0       0       0
  4345 ;;      Locals:         3       0       0       0       0       0       0
  4346 ;;      Temps:          0       0       0       0       0       0       0
  4347 ;;      Totals:         7       0       0       0       0       0       0
  4348 ;;Total ram usage:        7 bytes
  4349 ;; Hardware stack levels used:    1
  4350 ;; Hardware stack levels required when called:    3
  4351 ;; This function calls:
  4352 ;;		Nothing
  4353 ;; This function is called by:
  4354 ;;		_printf
  4355 ;;		_ReadVolt
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           	psect	text25
  4360  00116C                     __ptext25:
  4361                           	opt stack 0
  4362  00116C                     ___lwdiv:
  4363                           	opt stack 26
  4364                           
  4365                           ;incstack = 0
  4366  00116C  0E00               	movlw	0
  4367  00116E  6E14               	movwf	___lwdiv@quotient+1,c
  4368  001170  0E00               	movlw	0
  4369  001172  6E13               	movwf	___lwdiv@quotient,c
  4370  001174  5011               	movf	___lwdiv@divisor,w,c
  4371  001176  1012               	iorwf	___lwdiv@divisor+1,w,c
  4372  001178  B4D8               	btfsc	status,2,c
  4373  00117A  D01C               	goto	l1413
  4374  00117C  0E01               	movlw	1
  4375  00117E  6E15               	movwf	___lwdiv@counter,c
  4376  001180  D004               	goto	l3779
  4377  001182                     l3777:
  4378  001182  90D8               	bcf	status,0,c
  4379  001184  3611               	rlcf	___lwdiv@divisor,f,c
  4380  001186  3612               	rlcf	___lwdiv@divisor+1,f,c
  4381  001188  2A15               	incf	___lwdiv@counter,f,c
  4382  00118A                     l3779:
  4383  00118A  AE12               	btfss	___lwdiv@divisor+1,7,c
  4384  00118C  D7FA               	goto	l3777
  4385  00118E                     l3781:
  4386  00118E  90D8               	bcf	status,0,c
  4387  001190  3613               	rlcf	___lwdiv@quotient,f,c
  4388  001192  3614               	rlcf	___lwdiv@quotient+1,f,c
  4389  001194  5011               	movf	___lwdiv@divisor,w,c
  4390  001196  5C0F               	subwf	___lwdiv@dividend,w,c
  4391  001198  5012               	movf	___lwdiv@divisor+1,w,c
  4392  00119A  5810               	subwfb	___lwdiv@dividend+1,w,c
  4393  00119C  A0D8               	btfss	status,0,c
  4394  00119E  D005               	goto	l3789
  4395  0011A0  5011               	movf	___lwdiv@divisor,w,c
  4396  0011A2  5E0F               	subwf	___lwdiv@dividend,f,c
  4397  0011A4  5012               	movf	___lwdiv@divisor+1,w,c
  4398  0011A6  5A10               	subwfb	___lwdiv@dividend+1,f,c
  4399  0011A8  8013               	bsf	___lwdiv@quotient,0,c
  4400  0011AA                     l3789:
  4401  0011AA  90D8               	bcf	status,0,c
  4402  0011AC  3212               	rrcf	___lwdiv@divisor+1,f,c
  4403  0011AE  3211               	rrcf	___lwdiv@divisor,f,c
  4404  0011B0  2E15               	decfsz	___lwdiv@counter,f,c
  4405  0011B2  D7ED               	goto	l3781
  4406  0011B4                     l1413:
  4407  0011B4  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  4408  0011B8  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4409  0011BC  0012               	return		;funcret
  4410  0011BE                     __end_of___lwdiv:
  4411                           	opt stack 0
  4412                           tblptru	equ	0xFF8
  4413                           tblptrh	equ	0xFF7
  4414                           tblptrl	equ	0xFF6
  4415                           tablat	equ	0xFF5
  4416                           prodh	equ	0xFF4
  4417                           prodl	equ	0xFF3
  4418                           intcon	equ	0xFF2
  4419                           intcon2	equ	0xFF1
  4420                           postinc0	equ	0xFEE
  4421                           wreg	equ	0xFE8
  4422                           postinc1	equ	0xFE6
  4423                           postdec1	equ	0xFE5
  4424                           fsr1h	equ	0xFE2
  4425                           fsr1l	equ	0xFE1
  4426                           indf2	equ	0xFDF
  4427                           postinc2	equ	0xFDE
  4428                           postdec2	equ	0xFDD
  4429                           fsr2h	equ	0xFDA
  4430                           fsr2l	equ	0xFD9
  4431                           status	equ	0xFD8
  4432                           
  4433 ;; *************** function _Read_Battery *****************
  4434 ;; Defined at:
  4435 ;;		line 411 in file "BatteryManagment.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;  BatteryPlace    2   22[BANK0 ] int 
  4438 ;;  cell_codes      2   24[BANK0 ] PTR int [12]
  4439 ;;		 -> cell_codes_Bank(24), 
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;  Read_Status     2    0[BANK2 ] int 
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  2   22[BANK0 ] int 
  4444 ;; Registers used:
  4445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4451 ;;      Params:         0       4       0       0       0       0       0
  4452 ;;      Locals:         0       0       0       2       0       0       0
  4453 ;;      Temps:          0       2       0       0       0       0       0
  4454 ;;      Totals:         0       6       0       2       0       0       0
  4455 ;;Total ram usage:        8 bytes
  4456 ;; Hardware stack levels used:    1
  4457 ;; Hardware stack levels required when called:    7
  4458 ;; This function calls:
  4459 ;;		_Delay
  4460 ;;		_LTC6804_adcv
  4461 ;;		_LTC6804_rdcv
  4462 ;;		_set_adc
  4463 ;; This function is called by:
  4464 ;;		_Run_Mode
  4465 ;;		_Run_ByPass
  4466 ;;		_Read_Total_Voltage
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469                           
  4470                           	psect	text26
  4471  000534                     __ptext26:
  4472                           	opt stack 0
  4473  000534                     _Read_Battery:
  4474                           	opt stack 22
  4475                           
  4476                           ;BatteryManagment.c: 412: int Read_Status = 0;
  4477                           
  4478                           ;incstack = 0
  4479  000534  0E00               	movlw	0
  4480  000536  0102               	movlb	2	; () banked
  4481  000538  6FA3               	movwf	(Read_Battery@Read_Status+1)& (0+255),b
  4482  00053A  0E00               	movlw	0
  4483  00053C  6FA2               	movwf	Read_Battery@Read_Status& (0+255),b
  4484                           
  4485                           ;BatteryManagment.c: 414: switch (BatteryPlacement) {
  4486  00053E  D189               	goto	l5773
  4487  000540                     l5705:
  4488                           
  4489                           ;BatteryManagment.c: 416: set_adc(2, 0, 0, 0);
  4490  000540  0E00               	movlw	0
  4491  000542  6E10               	movwf	set_adc@MD+1,c
  4492  000544  0E02               	movlw	2
  4493  000546  6E0F               	movwf	set_adc@MD,c
  4494  000548  0E00               	movlw	0
  4495  00054A  6E12               	movwf	set_adc@DCP+1,c
  4496  00054C  0E00               	movlw	0
  4497  00054E  6E11               	movwf	set_adc@DCP,c
  4498  000550  0E00               	movlw	0
  4499  000552  6E14               	movwf	set_adc@CH+1,c
  4500  000554  0E00               	movlw	0
  4501  000556  6E13               	movwf	set_adc@CH,c
  4502  000558  0E00               	movlw	0
  4503  00055A  6E16               	movwf	set_adc@CHG+1,c
  4504  00055C  0E00               	movlw	0
  4505  00055E  6E15               	movwf	set_adc@CHG,c
  4506  000560  ECA2  F006         	call	_set_adc	;wreg free
  4507                           
  4508                           ;BatteryManagment.c: 417: LTC6804_adcv();
  4509  000564  EC29  F008         	call	_LTC6804_adcv	;wreg free
  4510                           
  4511                           ;BatteryManagment.c: 418: Delay(10);
  4512  000568  0E00               	movlw	0
  4513  00056A  6E10               	movwf	Delay@wait+1,c
  4514  00056C  0E0A               	movlw	10
  4515  00056E  6E0F               	movwf	Delay@wait,c
  4516  000570  EC26  F00A         	call	_Delay	;wreg free
  4517                           
  4518                           ;BatteryManagment.c: 419: Read_Status = LTC6804_rdcv(0, 1, cell_codes);
  4519  000574  0E00               	movlw	0
  4520  000576  6E35               	movwf	LTC6804_rdcv@reg+1,c
  4521  000578  0E00               	movlw	0
  4522  00057A  6E34               	movwf	LTC6804_rdcv@reg,c
  4523  00057C  0E00               	movlw	0
  4524  00057E  6E37               	movwf	LTC6804_rdcv@total_ic+1,c
  4525  000580  0E01               	movlw	1
  4526  000582  6E36               	movwf	LTC6804_rdcv@total_ic,c
  4527  000584  C0F5  F038         	movff	Read_Battery@cell_codes,LTC6804_rdcv@cell_codes
  4528  000588  C0F6  F039         	movff	Read_Battery@cell_codes+1,LTC6804_rdcv@cell_codes+1
  4529  00058C  EC58  F000         	call	_LTC6804_rdcv	;wreg free
  4530  000590  D15B               	goto	L9
  4531  000592                     l5713:
  4532                           
  4533                           ;BatteryManagment.c: 422: set_adc(2, 0, 1, 0);
  4534  000592  0E00               	movlw	0
  4535  000594  6E10               	movwf	set_adc@MD+1,c
  4536  000596  0E02               	movlw	2
  4537  000598  6E0F               	movwf	set_adc@MD,c
  4538  00059A  0E00               	movlw	0
  4539  00059C  6E12               	movwf	set_adc@DCP+1,c
  4540  00059E  0E00               	movlw	0
  4541  0005A0  6E11               	movwf	set_adc@DCP,c
  4542  0005A2  0E00               	movlw	0
  4543  0005A4  6E14               	movwf	set_adc@CH+1,c
  4544  0005A6  0E01               	movlw	1
  4545  0005A8  6E13               	movwf	set_adc@CH,c
  4546  0005AA  0E00               	movlw	0
  4547  0005AC  6E16               	movwf	set_adc@CHG+1,c
  4548  0005AE  0E00               	movlw	0
  4549  0005B0  6E15               	movwf	set_adc@CHG,c
  4550  0005B2  ECA2  F006         	call	_set_adc	;wreg free
  4551                           
  4552                           ;BatteryManagment.c: 423: LTC6804_adcv();
  4553  0005B6  EC29  F008         	call	_LTC6804_adcv	;wreg free
  4554                           
  4555                           ;BatteryManagment.c: 424: Delay(10);
  4556  0005BA  0E00               	movlw	0
  4557  0005BC  6E10               	movwf	Delay@wait+1,c
  4558  0005BE  0E0A               	movlw	10
  4559  0005C0  6E0F               	movwf	Delay@wait,c
  4560  0005C2  EC26  F00A         	call	_Delay	;wreg free
  4561                           
  4562                           ;BatteryManagment.c: 425: Read_Status = LTC6804_rdcv(1, 3, cell_codes);
  4563  0005C6  0E00               	movlw	0
  4564  0005C8  6E35               	movwf	LTC6804_rdcv@reg+1,c
  4565  0005CA  0E01               	movlw	1
  4566  0005CC  6E34               	movwf	LTC6804_rdcv@reg,c
  4567  0005CE  0E00               	movlw	0
  4568  0005D0  6E37               	movwf	LTC6804_rdcv@total_ic+1,c
  4569  0005D2  0E03               	movlw	3
  4570  0005D4  6E36               	movwf	LTC6804_rdcv@total_ic,c
  4571  0005D6  C0F5  F038         	movff	Read_Battery@cell_codes,LTC6804_rdcv@cell_codes
  4572  0005DA  C0F6  F039         	movff	Read_Battery@cell_codes+1,LTC6804_rdcv@cell_codes+1
  4573  0005DE  EC58  F000         	call	_LTC6804_rdcv	;wreg free
  4574  0005E2  C034  F2A2         	movff	?_LTC6804_rdcv,Read_Battery@Read_Status
  4575  0005E6  C035  F2A3         	movff	?_LTC6804_rdcv+1,Read_Battery@Read_Status+1
  4576                           
  4577                           ;BatteryManagment.c: 426: Read_Status = LTC6804_rdcv(3, 3, cell_codes);
  4578  0005EA  0E00               	movlw	0
  4579  0005EC  6E35               	movwf	LTC6804_rdcv@reg+1,c
  4580  0005EE  0E03               	movlw	3
  4581  0005F0  6E34               	movwf	LTC6804_rdcv@reg,c
  4582  0005F2  0E00               	movlw	0
  4583  0005F4  6E37               	movwf	LTC6804_rdcv@total_ic+1,c
  4584  0005F6  0E03               	movlw	3
  4585  0005F8  6E36               	movwf	LTC6804_rdcv@total_ic,c
  4586  0005FA  C0F5  F038         	movff	Read_Battery@cell_codes,LTC6804_rdcv@cell_codes
  4587  0005FE  C0F6  F039         	movff	Read_Battery@cell_codes+1,LTC6804_rdcv@cell_codes+1
  4588  000602  EC58  F000         	call	_LTC6804_rdcv	;wreg free
  4589  000606  D120               	goto	L9
  4590  000608                     l5723:
  4591                           
  4592                           ;BatteryManagment.c: 429: set_adc(2, 0, 2, 0);
  4593  000608  0E00               	movlw	0
  4594  00060A  6E10               	movwf	set_adc@MD+1,c
  4595  00060C  0E02               	movlw	2
  4596  00060E  6E0F               	movwf	set_adc@MD,c
  4597  000610  0E00               	movlw	0
  4598  000612  6E12               	movwf	set_adc@DCP+1,c
  4599  000614  0E00               	movlw	0
  4600  000616  6E11               	movwf	set_adc@DCP,c
  4601  000618  0E00               	movlw	0
  4602  00061A  6E14               	movwf	set_adc@CH+1,c
  4603  00061C  0E02               	movlw	2
  4604  00061E  6E13               	movwf	set_adc@CH,c
  4605  000620  0E00               	movlw	0
  4606  000622  6E16               	movwf	set_adc@CHG+1,c
  4607  000624  0E00               	movlw	0
  4608  000626  6E15               	movwf	set_adc@CHG,c
  4609  000628  ECA2  F006         	call	_set_adc	;wreg free
  4610                           
  4611                           ;BatteryManagment.c: 430: LTC6804_adcv();
  4612  00062C  EC29  F008         	call	_LTC6804_adcv	;wreg free
  4613                           
  4614                           ;BatteryManagment.c: 431: Delay(10);
  4615  000630  0E00               	movlw	0
  4616  000632  6E10               	movwf	Delay@wait+1,c
  4617  000634  0E0A               	movlw	10
  4618  000636  6E0F               	movwf	Delay@wait,c
  4619  000638  EC26  F00A         	call	_Delay	;wreg free
  4620                           
  4621                           ;BatteryManagment.c: 432: Read_Status = LTC6804_rdcv(0, 1, cell_codes);
  4622  00063C  0E00               	movlw	0
  4623  00063E  6E35               	movwf	LTC6804_rdcv@reg+1,c
  4624  000640  0E00               	movlw	0
  4625  000642  6E34               	movwf	LTC6804_rdcv@reg,c
  4626  000644  0E00               	movlw	0
  4627  000646  6E37               	movwf	LTC6804_rdcv@total_ic+1,c
  4628  000648  0E01               	movlw	1
  4629  00064A  6E36               	movwf	LTC6804_rdcv@total_ic,c
  4630  00064C  C0F5  F038         	movff	Read_Battery@cell_codes,LTC6804_rdcv@cell_codes
  4631  000650  C0F6  F039         	movff	Read_Battery@cell_codes+1,LTC6804_rdcv@cell_codes+1
  4632  000654  EC58  F000         	call	_LTC6804_rdcv	;wreg free
  4633  000658  C034  F2A2         	movff	?_LTC6804_rdcv,Read_Battery@Read_Status
  4634  00065C  C035  F2A3         	movff	?_LTC6804_rdcv+1,Read_Battery@Read_Status+1
  4635                           
  4636                           ;BatteryManagment.c: 433: Read_Status = LTC6804_rdcv(3, 1, cell_codes);
  4637  000660  0E00               	movlw	0
  4638  000662  6E35               	movwf	LTC6804_rdcv@reg+1,c
  4639  000664  0E03               	movlw	3
  4640  000666  6E34               	movwf	LTC6804_rdcv@reg,c
  4641  000668  0E00               	movlw	0
  4642  00066A  6E37               	movwf	LTC6804_rdcv@total_ic+1,c
  4643  00066C  0E01               	movlw	1
  4644  00066E  6E36               	movwf	LTC6804_rdcv@total_ic,c
  4645  000670  C0F5  F038         	movff	Read_Battery@cell_codes,LTC6804_rdcv@cell_codes
  4646  000674  C0F6  F039         	movff	Read_Battery@cell_codes+1,LTC6804_rdcv@cell_codes+1
  4647  000678  EC58  F000         	call	_LTC6804_rdcv	;wreg free
  4648  00067C  D0E5               	goto	L9
  4649  00067E                     l5733:
  4650                           
  4651                           ;BatteryManagment.c: 436: set_adc(2, 0, 3, 0);
  4652  00067E  0E00               	movlw	0
  4653  000680  6E10               	movwf	set_adc@MD+1,c
  4654  000682  0E02               	movlw	2
  4655  000684  6E0F               	movwf	set_adc@MD,c
  4656  000686  0E00               	movlw	0
  4657  000688  6E12               	movwf	set_adc@DCP+1,c
  4658  00068A  0E00               	movlw	0
  4659  00068C  6E11               	movwf	set_adc@DCP,c
  4660  00068E  0E00               	movlw	0
  4661  000690  6E14               	movwf	set_adc@CH+1,c
  4662  000692  0E03               	movlw	3
  4663  000694  6E13               	movwf	set_adc@CH,c
  4664  000696  0E00               	movlw	0
  4665  000698  6E16               	movwf	set_adc@CHG+1,c
  4666  00069A  0E00               	movlw	0
  4667  00069C  6E15               	movwf	set_adc@CHG,c
  4668  00069E  ECA2  F006         	call	_set_adc	;wreg free
  4669                           
  4670                           ;BatteryManagment.c: 437: LTC6804_adcv();
  4671  0006A2  EC29  F008         	call	_LTC6804_adcv	;wreg free
  4672                           
  4673                           ;BatteryManagment.c: 438: Delay(10);
  4674  0006A6  0E00               	movlw	0
  4675  0006A8  6E10               	movwf	Delay@wait+1,c
  4676  0006AA  0E0A               	movlw	10
  4677  0006AC  6E0F               	movwf	Delay@wait,c
  4678  0006AE  EC26  F00A         	call	_Delay	;wreg free
  4679                           
  4680                           ;BatteryManagment.c: 439: Read_Status = LTC6804_rdcv(0, 1, cell_codes);
  4681  0006B2  0E00               	movlw	0
  4682  0006B4  6E35               	movwf	LTC6804_rdcv@reg+1,c
  4683  0006B6  0E00               	movlw	0
  4684  0006B8  6E34               	movwf	LTC6804_rdcv@reg,c
  4685  0006BA  0E00               	movlw	0
  4686  0006BC  6E37               	movwf	LTC6804_rdcv@total_ic+1,c
  4687  0006BE  0E01               	movlw	1
  4688  0006C0  6E36               	movwf	LTC6804_rdcv@total_ic,c
  4689  0006C2  C0F5  F038         	movff	Read_Battery@cell_codes,LTC6804_rdcv@cell_codes
  4690  0006C6  C0F6  F039         	movff	Read_Battery@cell_codes+1,LTC6804_rdcv@cell_codes+1
  4691  0006CA  EC58  F000         	call	_LTC6804_rdcv	;wreg free
  4692  0006CE  C034  F2A2         	movff	?_LTC6804_rdcv,Read_Battery@Read_Status
  4693  0006D2  C035  F2A3         	movff	?_LTC6804_rdcv+1,Read_Battery@Read_Status+1
  4694                           
  4695                           ;BatteryManagment.c: 440: Read_Status = LTC6804_rdcv(3, 1, cell_codes);
  4696  0006D6  0E00               	movlw	0
  4697  0006D8  6E35               	movwf	LTC6804_rdcv@reg+1,c
  4698  0006DA  0E03               	movlw	3
  4699  0006DC  6E34               	movwf	LTC6804_rdcv@reg,c
  4700  0006DE  0E00               	movlw	0
  4701  0006E0  6E37               	movwf	LTC6804_rdcv@total_ic+1,c
  4702  0006E2  0E01               	movlw	1
  4703  0006E4  6E36               	movwf	LTC6804_rdcv@total_ic,c
  4704  0006E6  C0F5  F038         	movff	Read_Battery@cell_codes,LTC6804_rdcv@cell_codes
  4705  0006EA  C0F6  F039         	movff	Read_Battery@cell_codes+1,LTC6804_rdcv@cell_codes+1
  4706  0006EE  EC58  F000         	call	_LTC6804_rdcv	;wreg free
  4707  0006F2  D0AA               	goto	L9
  4708  0006F4                     l5743:
  4709                           
  4710                           ;BatteryManagment.c: 443: set_adc(2, 0, 4, 0);
  4711  0006F4  0E00               	movlw	0
  4712  0006F6  6E10               	movwf	set_adc@MD+1,c
  4713  0006F8  0E02               	movlw	2
  4714  0006FA  6E0F               	movwf	set_adc@MD,c
  4715  0006FC  0E00               	movlw	0
  4716  0006FE  6E12               	movwf	set_adc@DCP+1,c
  4717  000700  0E00               	movlw	0
  4718  000702  6E11               	movwf	set_adc@DCP,c
  4719  000704  0E00               	movlw	0
  4720  000706  6E14               	movwf	set_adc@CH+1,c
  4721  000708  0E04               	movlw	4
  4722  00070A  6E13               	movwf	set_adc@CH,c
  4723  00070C  0E00               	movlw	0
  4724  00070E  6E16               	movwf	set_adc@CHG+1,c
  4725  000710  0E00               	movlw	0
  4726  000712  6E15               	movwf	set_adc@CHG,c
  4727  000714  ECA2  F006         	call	_set_adc	;wreg free
  4728                           
  4729                           ;BatteryManagment.c: 444: LTC6804_adcv();
  4730  000718  EC29  F008         	call	_LTC6804_adcv	;wreg free
  4731                           
  4732                           ;BatteryManagment.c: 445: Read_Status = LTC6804_rdcv(2, 1, cell_codes);
  4733  00071C  0E00               	movlw	0
  4734  00071E  6E35               	movwf	LTC6804_rdcv@reg+1,c
  4735  000720  0E02               	movlw	2
  4736  000722  6E34               	movwf	LTC6804_rdcv@reg,c
  4737  000724  0E00               	movlw	0
  4738  000726  6E37               	movwf	LTC6804_rdcv@total_ic+1,c
  4739  000728  0E01               	movlw	1
  4740  00072A  6E36               	movwf	LTC6804_rdcv@total_ic,c
  4741  00072C  C0F5  F038         	movff	Read_Battery@cell_codes,LTC6804_rdcv@cell_codes
  4742  000730  C0F6  F039         	movff	Read_Battery@cell_codes+1,LTC6804_rdcv@cell_codes+1
  4743  000734  EC58  F000         	call	_LTC6804_rdcv	;wreg free
  4744  000738  C034  F2A2         	movff	?_LTC6804_rdcv,Read_Battery@Read_Status
  4745  00073C  C035  F2A3         	movff	?_LTC6804_rdcv+1,Read_Battery@Read_Status+1
  4746                           
  4747                           ;BatteryManagment.c: 446: Read_Status = LTC6804_rdcv(4, 1, cell_codes);
  4748  000740  0E00               	movlw	0
  4749  000742  6E35               	movwf	LTC6804_rdcv@reg+1,c
  4750  000744  0E04               	movlw	4
  4751  000746  6E34               	movwf	LTC6804_rdcv@reg,c
  4752  000748  0E00               	movlw	0
  4753  00074A  6E37               	movwf	LTC6804_rdcv@total_ic+1,c
  4754  00074C  0E01               	movlw	1
  4755  00074E  6E36               	movwf	LTC6804_rdcv@total_ic,c
  4756  000750  C0F5  F038         	movff	Read_Battery@cell_codes,LTC6804_rdcv@cell_codes
  4757  000754  C0F6  F039         	movff	Read_Battery@cell_codes+1,LTC6804_rdcv@cell_codes+1
  4758  000758  EC58  F000         	call	_LTC6804_rdcv	;wreg free
  4759  00075C  D075               	goto	L9
  4760  00075E                     l5751:
  4761                           
  4762                           ;BatteryManagment.c: 449: set_adc(2, 0, 5, 0);
  4763  00075E  0E00               	movlw	0
  4764  000760  6E10               	movwf	set_adc@MD+1,c
  4765  000762  0E02               	movlw	2
  4766  000764  6E0F               	movwf	set_adc@MD,c
  4767  000766  0E00               	movlw	0
  4768  000768  6E12               	movwf	set_adc@DCP+1,c
  4769  00076A  0E00               	movlw	0
  4770  00076C  6E11               	movwf	set_adc@DCP,c
  4771  00076E  0E00               	movlw	0
  4772  000770  6E14               	movwf	set_adc@CH+1,c
  4773  000772  0E05               	movlw	5
  4774  000774  6E13               	movwf	set_adc@CH,c
  4775  000776  0E00               	movlw	0
  4776  000778  6E16               	movwf	set_adc@CHG+1,c
  4777  00077A  0E00               	movlw	0
  4778  00077C  6E15               	movwf	set_adc@CHG,c
  4779  00077E  ECA2  F006         	call	_set_adc	;wreg free
  4780                           
  4781                           ;BatteryManagment.c: 450: LTC6804_adcv();
  4782  000782  EC29  F008         	call	_LTC6804_adcv	;wreg free
  4783                           
  4784                           ;BatteryManagment.c: 451: Delay(10);
  4785  000786  0E00               	movlw	0
  4786  000788  6E10               	movwf	Delay@wait+1,c
  4787  00078A  0E0A               	movlw	10
  4788  00078C  6E0F               	movwf	Delay@wait,c
  4789  00078E  EC26  F00A         	call	_Delay	;wreg free
  4790                           
  4791                           ;BatteryManagment.c: 452: Read_Status = LTC6804_rdcv(2, 1, cell_codes);
  4792  000792  0E00               	movlw	0
  4793  000794  6E35               	movwf	LTC6804_rdcv@reg+1,c
  4794  000796  0E02               	movlw	2
  4795  000798  6E34               	movwf	LTC6804_rdcv@reg,c
  4796  00079A  0E00               	movlw	0
  4797  00079C  6E37               	movwf	LTC6804_rdcv@total_ic+1,c
  4798  00079E  0E01               	movlw	1
  4799  0007A0  6E36               	movwf	LTC6804_rdcv@total_ic,c
  4800  0007A2  C0F5  F038         	movff	Read_Battery@cell_codes,LTC6804_rdcv@cell_codes
  4801  0007A6  C0F6  F039         	movff	Read_Battery@cell_codes+1,LTC6804_rdcv@cell_codes+1
  4802  0007AA  EC58  F000         	call	_LTC6804_rdcv	;wreg free
  4803  0007AE  C034  F2A2         	movff	?_LTC6804_rdcv,Read_Battery@Read_Status
  4804  0007B2  C035  F2A3         	movff	?_LTC6804_rdcv+1,Read_Battery@Read_Status+1
  4805                           
  4806                           ;BatteryManagment.c: 453: Read_Status = LTC6804_rdcv(4, 1, cell_codes);
  4807  0007B6  0E00               	movlw	0
  4808  0007B8  6E35               	movwf	LTC6804_rdcv@reg+1,c
  4809  0007BA  0E04               	movlw	4
  4810  0007BC  6E34               	movwf	LTC6804_rdcv@reg,c
  4811  0007BE  0E00               	movlw	0
  4812  0007C0  6E37               	movwf	LTC6804_rdcv@total_ic+1,c
  4813  0007C2  0E01               	movlw	1
  4814  0007C4  6E36               	movwf	LTC6804_rdcv@total_ic,c
  4815  0007C6  C0F5  F038         	movff	Read_Battery@cell_codes,LTC6804_rdcv@cell_codes
  4816  0007CA  C0F6  F039         	movff	Read_Battery@cell_codes+1,LTC6804_rdcv@cell_codes+1
  4817  0007CE  EC58  F000         	call	_LTC6804_rdcv	;wreg free
  4818  0007D2  D03A               	goto	L9
  4819  0007D4                     l5761:
  4820                           
  4821                           ;BatteryManagment.c: 456: set_adc(2, 0, 6, 0);
  4822  0007D4  0E00               	movlw	0
  4823  0007D6  6E10               	movwf	set_adc@MD+1,c
  4824  0007D8  0E02               	movlw	2
  4825  0007DA  6E0F               	movwf	set_adc@MD,c
  4826  0007DC  0E00               	movlw	0
  4827  0007DE  6E12               	movwf	set_adc@DCP+1,c
  4828  0007E0  0E00               	movlw	0
  4829  0007E2  6E11               	movwf	set_adc@DCP,c
  4830  0007E4  0E00               	movlw	0
  4831  0007E6  6E14               	movwf	set_adc@CH+1,c
  4832  0007E8  0E06               	movlw	6
  4833  0007EA  6E13               	movwf	set_adc@CH,c
  4834  0007EC  0E00               	movlw	0
  4835  0007EE  6E16               	movwf	set_adc@CHG+1,c
  4836  0007F0  0E00               	movlw	0
  4837  0007F2  6E15               	movwf	set_adc@CHG,c
  4838  0007F4  ECA2  F006         	call	_set_adc	;wreg free
  4839                           
  4840                           ;BatteryManagment.c: 457: LTC6804_adcv();
  4841  0007F8  EC29  F008         	call	_LTC6804_adcv	;wreg free
  4842                           
  4843                           ;BatteryManagment.c: 458: Delay(10);
  4844  0007FC  0E00               	movlw	0
  4845  0007FE  6E10               	movwf	Delay@wait+1,c
  4846  000800  0E0A               	movlw	10
  4847  000802  6E0F               	movwf	Delay@wait,c
  4848  000804  EC26  F00A         	call	_Delay	;wreg free
  4849                           
  4850                           ;BatteryManagment.c: 459: Read_Status = LTC6804_rdcv(2, 1, cell_codes);
  4851  000808  0E00               	movlw	0
  4852  00080A  6E35               	movwf	LTC6804_rdcv@reg+1,c
  4853  00080C  0E02               	movlw	2
  4854  00080E  6E34               	movwf	LTC6804_rdcv@reg,c
  4855  000810  0E00               	movlw	0
  4856  000812  6E37               	movwf	LTC6804_rdcv@total_ic+1,c
  4857  000814  0E01               	movlw	1
  4858  000816  6E36               	movwf	LTC6804_rdcv@total_ic,c
  4859  000818  C0F5  F038         	movff	Read_Battery@cell_codes,LTC6804_rdcv@cell_codes
  4860  00081C  C0F6  F039         	movff	Read_Battery@cell_codes+1,LTC6804_rdcv@cell_codes+1
  4861  000820  EC58  F000         	call	_LTC6804_rdcv	;wreg free
  4862  000824  C034  F2A2         	movff	?_LTC6804_rdcv,Read_Battery@Read_Status
  4863  000828  C035  F2A3         	movff	?_LTC6804_rdcv+1,Read_Battery@Read_Status+1
  4864                           
  4865                           ;BatteryManagment.c: 460: Read_Status = LTC6804_rdcv(4, 1, cell_codes);
  4866  00082C  0E00               	movlw	0
  4867  00082E  6E35               	movwf	LTC6804_rdcv@reg+1,c
  4868  000830  0E04               	movlw	4
  4869  000832  6E34               	movwf	LTC6804_rdcv@reg,c
  4870  000834  0E00               	movlw	0
  4871  000836  6E37               	movwf	LTC6804_rdcv@total_ic+1,c
  4872  000838  0E01               	movlw	1
  4873  00083A  6E36               	movwf	LTC6804_rdcv@total_ic,c
  4874  00083C  C0F5  F038         	movff	Read_Battery@cell_codes,LTC6804_rdcv@cell_codes
  4875  000840  C0F6  F039         	movff	Read_Battery@cell_codes+1,LTC6804_rdcv@cell_codes+1
  4876  000844  EC58  F000         	call	_LTC6804_rdcv	;wreg free
  4877  000848                     L9:
  4878  000848  C034  F2A2         	movff	?_LTC6804_rdcv,Read_Battery@Read_Status
  4879  00084C  C035  F2A3         	movff	?_LTC6804_rdcv+1,Read_Battery@Read_Status+1
  4880                           
  4881                           ;BatteryManagment.c: 464: }
  4882                           
  4883                           ;BatteryManagment.c: 463: break;
  4884                           
  4885                           ;BatteryManagment.c: 462: default:
  4886                           
  4887                           ;BatteryManagment.c: 461: break;
  4888  000850  D020               	goto	l659
  4889  000852                     l5773:
  4890  000852  C0F3  F0F7         	movff	Read_Battery@BatteryPlacement,??_Read_Battery
  4891  000856  C0F4  F0F8         	movff	Read_Battery@BatteryPlacement+1,??_Read_Battery+1
  4892                           
  4893                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4894                           ; Switch size 1, requested type "space"
  4895                           ; Number of cases is 1, Range of values is 0 to 0
  4896                           ; switch strategies available:
  4897                           ; Name         Instructions Cycles
  4898                           ; simple_byte            4     3 (average)
  4899                           ;	Chosen strategy is simple_byte
  4900  00085A  0100               	movlb	0	; () banked
  4901  00085C  51F8               	movf	(??_Read_Battery+1)& (0+255),w,b
  4902  00085E  0A00               	xorlw	0	; case 0
  4903  000860  A4D8               	btfss	status,2,c
  4904  000862  D017               	goto	l659
  4905                           
  4906                           ; BSR set to: 0
  4907                           ; Switch size 1, requested type "space"
  4908                           ; Number of cases is 7, Range of values is 0 to 6
  4909                           ; switch strategies available:
  4910                           ; Name         Instructions Cycles
  4911                           ; simple_byte           22    12 (average)
  4912                           ;	Chosen strategy is simple_byte
  4913  000864  0100               	movlb	0	; () banked
  4914  000866  51F7               	movf	??_Read_Battery& (0+255),w,b
  4915  000868  0A00               	xorlw	0	; case 0
  4916  00086A  B4D8               	btfsc	status,2,c
  4917  00086C  D669               	goto	l5705
  4918  00086E  0A01               	xorlw	1	; case 1
  4919  000870  B4D8               	btfsc	status,2,c
  4920  000872  D68F               	goto	l5713
  4921  000874  0A03               	xorlw	3	; case 2
  4922  000876  B4D8               	btfsc	status,2,c
  4923  000878  D6C7               	goto	l5723
  4924  00087A  0A01               	xorlw	1	; case 3
  4925  00087C  B4D8               	btfsc	status,2,c
  4926  00087E  D6FF               	goto	l5733
  4927  000880  0A07               	xorlw	7	; case 4
  4928  000882  B4D8               	btfsc	status,2,c
  4929  000884  D737               	goto	l5743
  4930  000886  0A01               	xorlw	1	; case 5
  4931  000888  B4D8               	btfsc	status,2,c
  4932  00088A  D769               	goto	l5751
  4933  00088C  0A03               	xorlw	3	; case 6
  4934  00088E  B4D8               	btfsc	status,2,c
  4935  000890  D7A1               	goto	l5761
  4936  000892                     l659:
  4937                           
  4938                           ;BatteryManagment.c: 465: return Read_Status;
  4939  000892  C2A2  F0F3         	movff	Read_Battery@Read_Status,?_Read_Battery
  4940  000896  C2A3  F0F4         	movff	Read_Battery@Read_Status+1,?_Read_Battery+1
  4941  00089A  0012               	return		;funcret
  4942  00089C                     __end_of_Read_Battery:
  4943                           	opt stack 0
  4944                           tblptru	equ	0xFF8
  4945                           tblptrh	equ	0xFF7
  4946                           tblptrl	equ	0xFF6
  4947                           tablat	equ	0xFF5
  4948                           prodh	equ	0xFF4
  4949                           prodl	equ	0xFF3
  4950                           intcon	equ	0xFF2
  4951                           intcon2	equ	0xFF1
  4952                           postinc0	equ	0xFEE
  4953                           wreg	equ	0xFE8
  4954                           postinc1	equ	0xFE6
  4955                           postdec1	equ	0xFE5
  4956                           fsr1h	equ	0xFE2
  4957                           fsr1l	equ	0xFE1
  4958                           indf2	equ	0xFDF
  4959                           postinc2	equ	0xFDE
  4960                           postdec2	equ	0xFDD
  4961                           fsr2h	equ	0xFDA
  4962                           fsr2l	equ	0xFD9
  4963                           status	equ	0xFD8
  4964                           
  4965 ;; *************** function _set_adc *****************
  4966 ;; Defined at:
  4967 ;;		line 116 in file "LT6804.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;  MD              2   14[COMRAM] int 
  4970 ;;  DCP             2   16[COMRAM] int 
  4971 ;;  CH              2   18[COMRAM] int 
  4972 ;;  CHG             2   20[COMRAM] int 
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;  md_bits         2   24[COMRAM] int 
  4975 ;; Return value:  Size  Location     Type
  4976 ;;		None               void
  4977 ;; Registers used:
  4978 ;;		wreg, status,2, status,0
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4984 ;;      Params:         8       0       0       0       0       0       0
  4985 ;;      Locals:         2       0       0       0       0       0       0
  4986 ;;      Temps:          2       0       0       0       0       0       0
  4987 ;;      Totals:        12       0       0       0       0       0       0
  4988 ;;Total ram usage:       12 bytes
  4989 ;; Hardware stack levels used:    1
  4990 ;; Hardware stack levels required when called:    3
  4991 ;; This function calls:
  4992 ;;		Nothing
  4993 ;; This function is called by:
  4994 ;;		_Read_Battery
  4995 ;;		_Read_GPIO
  4996 ;;		_LTC6804_initialize
  4997 ;; This function uses a non-reentrant model
  4998 ;;
  4999                           
  5000                           	psect	text27
  5001  000D44                     __ptext27:
  5002                           	opt stack 0
  5003  000D44                     _set_adc:
  5004                           	opt stack 25
  5005                           
  5006                           ;LT6804.c: 122: int md_bits;
  5007                           ;LT6804.c: 124: md_bits = (MD & 0x02) >> 1;
  5008                           
  5009                           ;incstack = 0
  5010  000D44  3410               	rlcf	set_adc@MD+1,w,c
  5011  000D46  3010               	rrcf	set_adc@MD+1,w,c
  5012  000D48  6E18               	movwf	(??_set_adc+1)& (0+255),c
  5013  000D4A  300F               	rrcf	set_adc@MD,w,c
  5014  000D4C  6E17               	movwf	??_set_adc& (0+255),c
  5015  000D4E  0E01               	movlw	1
  5016  000D50  1417               	andwf	??_set_adc,w,c
  5017  000D52  6E19               	movwf	set_adc@md_bits,c
  5018  000D54  6A1A               	clrf	set_adc@md_bits+1,c
  5019                           
  5020                           ;LT6804.c: 125: ADCV[0] = md_bits + 0x02;
  5021  000D56  0E02               	movlw	2
  5022  000D58  2419               	addwf	set_adc@md_bits,w,c
  5023  000D5A  0100               	movlb	0	; () banked
  5024  000D5C  6FD5               	movwf	_ADCV& (0+255),b
  5025  000D5E  0E00               	movlw	0
  5026  000D60  201A               	addwfc	set_adc@md_bits+1,w,c
  5027  000D62  0100               	movlb	0	; () banked
  5028  000D64  6FD6               	movwf	(_ADCV+1)& (0+255),b
  5029                           
  5030                           ;LT6804.c: 126: md_bits = (MD & 0x01) << 7;
  5031  000D66  0E01               	movlw	1
  5032  000D68  140F               	andwf	set_adc@MD,w,c
  5033  000D6A  6E17               	movwf	??_set_adc& (0+255),c
  5034  000D6C  0E00               	movlw	0
  5035  000D6E  1410               	andwf	set_adc@MD+1,w,c
  5036  000D70  6E18               	movwf	(??_set_adc+1)& (0+255),c
  5037  000D72  0E07               	movlw	7
  5038  000D74                     u4645:
  5039  000D74  90D8               	bcf	status,0,c
  5040  000D76  3617               	rlcf	??_set_adc,f,c
  5041  000D78  3618               	rlcf	??_set_adc+1,f,c
  5042  000D7A  2EE8               	decfsz	wreg,f,c
  5043  000D7C  D7FB               	goto	u4645
  5044  000D7E  C017  F019         	movff	??_set_adc,set_adc@md_bits
  5045  000D82  C018  F01A         	movff	??_set_adc+1,set_adc@md_bits+1
  5046                           
  5047                           ;LT6804.c: 127: ADCV[1] = md_bits + 0x60 + (DCP<<4) + CH;
  5048  000D86  C011  F017         	movff	set_adc@DCP,??_set_adc
  5049  000D8A  C012  F018         	movff	set_adc@DCP+1,??_set_adc+1
  5050  000D8E  3A17               	swapf	??_set_adc,f,c
  5051  000D90  3A18               	swapf	??_set_adc+1,f,c
  5052  000D92  0EF0               	movlw	240
  5053  000D94  1618               	andwf	??_set_adc+1,f,c
  5054  000D96  5017               	movf	??_set_adc,w,c
  5055  000D98  0B0F               	andlw	15
  5056  000D9A  1218               	iorwf	??_set_adc+1,f,c
  5057  000D9C  0EF0               	movlw	240
  5058  000D9E  1617               	andwf	??_set_adc,f,c
  5059  000DA0  5019               	movf	set_adc@md_bits,w,c
  5060  000DA2  2617               	addwf	??_set_adc,f,c
  5061  000DA4  501A               	movf	set_adc@md_bits+1,w,c
  5062  000DA6  2218               	addwfc	??_set_adc+1,f,c
  5063  000DA8  5013               	movf	set_adc@CH,w,c
  5064  000DAA  2617               	addwf	??_set_adc,f,c
  5065  000DAC  5014               	movf	set_adc@CH+1,w,c
  5066  000DAE  2218               	addwfc	??_set_adc+1,f,c
  5067  000DB0  0E60               	movlw	96
  5068  000DB2  2417               	addwf	??_set_adc,w,c
  5069  000DB4  0100               	movlb	0	; () banked
  5070  000DB6  6FD7               	movwf	(_ADCV+2)& (0+255),b
  5071  000DB8  0E00               	movlw	0
  5072  000DBA  2018               	addwfc	??_set_adc+1,w,c
  5073  000DBC  0100               	movlb	0	; () banked
  5074  000DBE  6FD8               	movwf	(_ADCV+3)& (0+255),b
  5075                           
  5076                           ;LT6804.c: 129: md_bits = (MD & 0x02) >> 1;
  5077  000DC0  3410               	rlcf	set_adc@MD+1,w,c
  5078  000DC2  3010               	rrcf	set_adc@MD+1,w,c
  5079  000DC4  6E18               	movwf	(??_set_adc+1)& (0+255),c
  5080  000DC6  300F               	rrcf	set_adc@MD,w,c
  5081  000DC8  6E17               	movwf	??_set_adc& (0+255),c
  5082  000DCA  0E01               	movlw	1
  5083  000DCC  1417               	andwf	??_set_adc,w,c
  5084  000DCE  6E19               	movwf	set_adc@md_bits,c
  5085  000DD0  6A1A               	clrf	set_adc@md_bits+1,c
  5086                           
  5087                           ;LT6804.c: 130: ADAX[0] = md_bits + 0x04;
  5088  000DD2  0E04               	movlw	4
  5089  000DD4  2419               	addwf	set_adc@md_bits,w,c
  5090  000DD6  0100               	movlb	0	; () banked
  5091  000DD8  6FD1               	movwf	_ADAX& (0+255),b
  5092  000DDA  0E00               	movlw	0
  5093  000DDC  201A               	addwfc	set_adc@md_bits+1,w,c
  5094  000DDE  0100               	movlb	0	; () banked
  5095  000DE0  6FD2               	movwf	(_ADAX+1)& (0+255),b
  5096                           
  5097                           ;LT6804.c: 131: md_bits = (MD & 0x01) << 7;
  5098  000DE2  0E01               	movlw	1
  5099  000DE4  140F               	andwf	set_adc@MD,w,c
  5100  000DE6  6E17               	movwf	??_set_adc& (0+255),c
  5101  000DE8  0E00               	movlw	0
  5102  000DEA  1410               	andwf	set_adc@MD+1,w,c
  5103  000DEC  6E18               	movwf	(??_set_adc+1)& (0+255),c
  5104  000DEE  0E07               	movlw	7
  5105  000DF0                     u4655:
  5106  000DF0  90D8               	bcf	status,0,c
  5107  000DF2  3617               	rlcf	??_set_adc,f,c
  5108  000DF4  3618               	rlcf	??_set_adc+1,f,c
  5109  000DF6  2EE8               	decfsz	wreg,f,c
  5110  000DF8  D7FB               	goto	u4655
  5111  000DFA  C017  F019         	movff	??_set_adc,set_adc@md_bits
  5112  000DFE  C018  F01A         	movff	??_set_adc+1,set_adc@md_bits+1
  5113                           
  5114                           ;LT6804.c: 132: ADAX[1] = md_bits + 0x60 + CHG ;
  5115  000E02  5015               	movf	set_adc@CHG,w,c
  5116  000E04  2419               	addwf	set_adc@md_bits,w,c
  5117  000E06  6E17               	movwf	??_set_adc& (0+255),c
  5118  000E08  5016               	movf	set_adc@CHG+1,w,c
  5119  000E0A  201A               	addwfc	set_adc@md_bits+1,w,c
  5120  000E0C  6E18               	movwf	(??_set_adc+1)& (0+255),c
  5121  000E0E  0E60               	movlw	96
  5122  000E10  2417               	addwf	??_set_adc,w,c
  5123  000E12  0100               	movlb	0	; () banked
  5124  000E14  6FD3               	movwf	(_ADAX+2)& (0+255),b
  5125  000E16  0E00               	movlw	0
  5126  000E18  2018               	addwfc	??_set_adc+1,w,c
  5127  000E1A  0100               	movlb	0	; () banked
  5128  000E1C  6FD4               	movwf	(_ADAX+3)& (0+255),b
  5129                           
  5130                           ; BSR set to: 0
  5131  000E1E  0012               	return		;funcret
  5132  000E20                     __end_of_set_adc:
  5133                           	opt stack 0
  5134                           tblptru	equ	0xFF8
  5135                           tblptrh	equ	0xFF7
  5136                           tblptrl	equ	0xFF6
  5137                           tablat	equ	0xFF5
  5138                           prodh	equ	0xFF4
  5139                           prodl	equ	0xFF3
  5140                           intcon	equ	0xFF2
  5141                           intcon2	equ	0xFF1
  5142                           postinc0	equ	0xFEE
  5143                           wreg	equ	0xFE8
  5144                           postinc1	equ	0xFE6
  5145                           postdec1	equ	0xFE5
  5146                           fsr1h	equ	0xFE2
  5147                           fsr1l	equ	0xFE1
  5148                           indf2	equ	0xFDF
  5149                           postinc2	equ	0xFDE
  5150                           postdec2	equ	0xFDD
  5151                           fsr2h	equ	0xFDA
  5152                           fsr2l	equ	0xFD9
  5153                           status	equ	0xFD8
  5154                           
  5155 ;; *************** function _LTC6804_rdcv *****************
  5156 ;; Defined at:
  5157 ;;		line 339 in file "LT6804.c"
  5158 ;; Parameters:    Size  Location     Type
  5159 ;;  reg             2   51[COMRAM] int 
  5160 ;;  total_ic        2   53[COMRAM] int 
  5161 ;;  cell_codes      2   55[COMRAM] PTR int [12]
  5162 ;;		 -> cell_codes_Bank(24), 
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;  cell_data     240    0[BANK1 ] int [120]
  5165 ;;  data_counter    2   20[BANK0 ] int 
  5166 ;;  current_cell    2   18[BANK0 ] int 
  5167 ;;  CELL_IN_REG     2   16[BANK0 ] const int 
  5168 ;;  cell_reg        2   14[BANK0 ] int 
  5169 ;;  data_pec        2   12[BANK0 ] int 
  5170 ;;  received_pec    2   10[BANK0 ] int 
  5171 ;;  parsed_cell     2    8[BANK0 ] int 
  5172 ;;  BYT_IN_REG      2    6[BANK0 ] const int 
  5173 ;;  NUM_RX_BYT      2    4[BANK0 ] const int 
  5174 ;;  pec_error       2    2[BANK0 ] int 
  5175 ;;  hi              2   63[COMRAM] int 
  5176 ;; Return value:  Size  Location     Type
  5177 ;;                  2   51[COMRAM] int 
  5178 ;; Registers used:
  5179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5180 ;; Tracked objects:
  5181 ;;		On entry : 0/0
  5182 ;;		On exit  : 0/0
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5185 ;;      Params:         6       0       0       0       0       0       0
  5186 ;;      Locals:         2      22     240       0       0       0       0
  5187 ;;      Temps:          6       0       0       0       0       0       0
  5188 ;;      Totals:        14      22     240       0       0       0       0
  5189 ;;Total ram usage:      276 bytes
  5190 ;; Hardware stack levels used:    1
  5191 ;; Hardware stack levels required when called:    6
  5192 ;; This function calls:
  5193 ;;		_LTC6804_rdcv_reg
  5194 ;;		_SPI2_Exchange8bit
  5195 ;;		___wmul
  5196 ;;		_pec15_calc
  5197 ;; This function is called by:
  5198 ;;		_Read_Battery
  5199 ;; This function uses a non-reentrant model
  5200 ;;
  5201                           
  5202                           	psect	text28
  5203  0000B0                     __ptext28:
  5204                           	opt stack 0
  5205  0000B0                     _LTC6804_rdcv:
  5206                           	opt stack 22
  5207                           
  5208                           ;LT6804.c: 344: int hi=cell_codes[0][0];
  5209                           
  5210                           ; BSR set to: 0
  5211                           ;incstack = 0
  5212  0000B0  C038  FFD9         	movff	LTC6804_rdcv@cell_codes,fsr2l
  5213  0000B4  C039  FFDA         	movff	LTC6804_rdcv@cell_codes+1,fsr2h
  5214  0000B8  CFDE F040          	movff	postinc2,LTC6804_rdcv@hi
  5215  0000BC  CFDD F041          	movff	postdec2,LTC6804_rdcv@hi+1
  5216                           
  5217                           ;LT6804.c: 345: int cell_reg = 0;
  5218  0000C0  0E00               	movlw	0
  5219  0000C2  0100               	movlb	0	; () banked
  5220  0000C4  6FEC               	movwf	(LTC6804_rdcv@cell_reg+1)& (0+255),b
  5221  0000C6  0E00               	movlw	0
  5222  0000C8  6FEB               	movwf	LTC6804_rdcv@cell_reg& (0+255),b
  5223                           
  5224                           ; BSR set to: 0
  5225                           ;LT6804.c: 346: int current_cell = 0;
  5226  0000CA  0E00               	movlw	0
  5227  0000CC  0100               	movlb	0	; () banked
  5228  0000CE  6FF0               	movwf	(LTC6804_rdcv@current_cell+1)& (0+255),b
  5229  0000D0  0E00               	movlw	0
  5230  0000D2  6FEF               	movwf	LTC6804_rdcv@current_cell& (0+255),b
  5231                           
  5232                           ; BSR set to: 0
  5233                           ;LT6804.c: 347: const int NUM_RX_BYT = 8;
  5234  0000D4  0E00               	movlw	0
  5235  0000D6  0100               	movlb	0	; () banked
  5236  0000D8  6FE2               	movwf	(LTC6804_rdcv@NUM_RX_BYT+1)& (0+255),b
  5237  0000DA  0E08               	movlw	8
  5238  0000DC  6FE1               	movwf	LTC6804_rdcv@NUM_RX_BYT& (0+255),b
  5239                           
  5240                           ; BSR set to: 0
  5241                           ;LT6804.c: 348: const int BYT_IN_REG = 6;
  5242  0000DE  0E00               	movlw	0
  5243  0000E0  0100               	movlb	0	; () banked
  5244  0000E2  6FE4               	movwf	(LTC6804_rdcv@BYT_IN_REG+1)& (0+255),b
  5245  0000E4  0E06               	movlw	6
  5246  0000E6  6FE3               	movwf	LTC6804_rdcv@BYT_IN_REG& (0+255),b
  5247                           
  5248                           ; BSR set to: 0
  5249                           ;LT6804.c: 349: const int CELL_IN_REG = 3;
  5250  0000E8  0E00               	movlw	0
  5251  0000EA  0100               	movlb	0	; () banked
  5252  0000EC  6FEE               	movwf	(LTC6804_rdcv@CELL_IN_REG+1)& (0+255),b
  5253  0000EE  0E03               	movlw	3
  5254  0000F0  6FED               	movwf	LTC6804_rdcv@CELL_IN_REG& (0+255),b
  5255                           
  5256                           ; BSR set to: 0
  5257                           ;LT6804.c: 351: int cell_data[120];
  5258                           ;LT6804.c: 352: int pec_error = 0;
  5259  0000F2  0E00               	movlw	0
  5260  0000F4  0100               	movlb	0	; () banked
  5261  0000F6  6FE0               	movwf	(LTC6804_rdcv@pec_error+1)& (0+255),b
  5262  0000F8  0E00               	movlw	0
  5263  0000FA  6FDF               	movwf	LTC6804_rdcv@pec_error& (0+255),b
  5264                           
  5265                           ; BSR set to: 0
  5266                           ;LT6804.c: 353: int parsed_cell;
  5267                           ;LT6804.c: 354: int received_pec;
  5268                           ;LT6804.c: 355: int data_pec;
  5269                           ;LT6804.c: 356: int data_counter=0;
  5270  0000FC  0E00               	movlw	0
  5271  0000FE  0100               	movlb	0	; () banked
  5272  000100  6FF2               	movwf	(LTC6804_rdcv@data_counter+1)& (0+255),b
  5273  000102  0E00               	movlw	0
  5274  000104  6FF1               	movwf	LTC6804_rdcv@data_counter& (0+255),b
  5275                           
  5276                           ; BSR set to: 0
  5277                           ;LT6804.c: 358: if (reg == 0)
  5278  000106  5034               	movf	LTC6804_rdcv@reg,w,c
  5279  000108  1035               	iorwf	LTC6804_rdcv@reg+1,w,c
  5280  00010A  A4D8               	btfss	status,2,c
  5281  00010C  D103               	goto	l5659
  5282                           
  5283                           ; BSR set to: 0
  5284                           ;LT6804.c: 359: {LATD3 = 0;
  5285  00010E  968C               	bcf	3980,3,c	;volatile
  5286                           
  5287                           ; BSR set to: 0
  5288                           ;LT6804.c: 360: SPI2_Exchange8bit(0);
  5289  000110  0E00               	movlw	0
  5290  000112  EC08  F00B         	call	_SPI2_Exchange8bit
  5291                           
  5292                           ;LT6804.c: 361: LATD3 = 1;
  5293  000116  868C               	bsf	3980,3,c	;volatile
  5294                           
  5295                           ;LT6804.c: 363: for(cell_reg = 1; cell_reg<5; cell_reg++)
  5296  000118  0E00               	movlw	0
  5297  00011A  0100               	movlb	0	; () banked
  5298  00011C  6FEC               	movwf	(LTC6804_rdcv@cell_reg+1)& (0+255),b
  5299  00011E  0E01               	movlw	1
  5300  000120  6FEB               	movwf	LTC6804_rdcv@cell_reg& (0+255),b
  5301                           
  5302                           ; BSR set to: 0
  5303  000122  0100               	movlb	0	; () banked
  5304  000124  BFEC               	btfsc	(LTC6804_rdcv@cell_reg+1)& (0+255),7,b
  5305  000126  D00A               	goto	l5623
  5306  000128  0100               	movlb	0	; () banked
  5307  00012A  51EC               	movf	(LTC6804_rdcv@cell_reg+1)& (0+255),w,b
  5308  00012C  E106               	bnz	u4670
  5309  00012E  0E05               	movlw	5
  5310  000130  0100               	movlb	0	; () banked
  5311  000132  5DEB               	subwf	LTC6804_rdcv@cell_reg& (0+255),w,b
  5312  000134  B0D8               	btfsc	status,0,c
  5313  000136  D1F9               	goto	l831
  5314  000138  D001               	goto	l5623
  5315  00013A                     u4670:
  5316                           
  5317                           ; BSR set to: 0
  5318  00013A  D1F7               	goto	l831
  5319  00013C                     l5623:
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;LT6804.c: 364: {
  5323                           ;LT6804.c: 365: data_counter = 0;
  5324  00013C  0E00               	movlw	0
  5325  00013E  0100               	movlb	0	; () banked
  5326  000140  6FF2               	movwf	(LTC6804_rdcv@data_counter+1)& (0+255),b
  5327  000142  0E00               	movlw	0
  5328  000144  6FF1               	movwf	LTC6804_rdcv@data_counter& (0+255),b
  5329                           
  5330                           ; BSR set to: 0
  5331                           ;LT6804.c: 366: LTC6804_rdcv_reg(cell_reg, total_ic,cell_data);
  5332  000146  C0EB  F022         	movff	LTC6804_rdcv@cell_reg,LTC6804_rdcv_reg@reg
  5333  00014A  C0EC  F023         	movff	LTC6804_rdcv@cell_reg+1,LTC6804_rdcv_reg@reg+1
  5334  00014E  C036  F024         	movff	LTC6804_rdcv@total_ic,LTC6804_rdcv_reg@total_ic
  5335  000152  C037  F025         	movff	LTC6804_rdcv@total_ic+1,LTC6804_rdcv_reg@total_ic+1
  5336  000156  0E00               	movlw	low LTC6804_rdcv@cell_data
  5337  000158  6E26               	movwf	LTC6804_rdcv_reg@data,c
  5338  00015A  0E01               	movlw	high LTC6804_rdcv@cell_data
  5339  00015C  6E27               	movwf	LTC6804_rdcv_reg@data+1,c
  5340  00015E  EC83  F005         	call	_LTC6804_rdcv_reg	;wreg free
  5341                           
  5342                           ;LT6804.c: 367: for (current_ic = 0 ; current_ic < total_ic; current_ic++)
  5343  000162  0E00               	movlw	0
  5344  000164  6E4E               	movwf	_current_ic+1,c
  5345  000166  0E00               	movlw	0
  5346  000168  6E4D               	movwf	_current_ic,c
  5347  00016A  D0BF               	goto	l825
  5348  00016C                     l5629:
  5349                           
  5350                           ;LT6804.c: 368: {
  5351                           ;LT6804.c: 370: for(current_cell = 0; current_cell<CELL_IN_REG; current_cell++)
  5352  00016C  0E00               	movlw	0
  5353  00016E  0100               	movlb	0	; () banked
  5354  000170  6FF0               	movwf	(LTC6804_rdcv@current_cell+1)& (0+255),b
  5355  000172  0E00               	movlw	0
  5356  000174  6FEF               	movwf	LTC6804_rdcv@current_cell& (0+255),b
  5357  000176                     l5631:
  5358                           
  5359                           ; BSR set to: 0
  5360  000176  0100               	movlb	0	; () banked
  5361  000178  51ED               	movf	LTC6804_rdcv@CELL_IN_REG& (0+255),w,b
  5362  00017A  0100               	movlb	0	; () banked
  5363  00017C  5DEF               	subwf	LTC6804_rdcv@current_cell& (0+255),w,b
  5364  00017E  0100               	movlb	0	; () banked
  5365  000180  51F0               	movf	(LTC6804_rdcv@current_cell+1)& (0+255),w,b
  5366  000182  0A80               	xorlw	128
  5367  000184  6E3A               	movwf	??_LTC6804_rdcv& (0+255),c
  5368  000186  0100               	movlb	0	; () banked
  5369  000188  51EE               	movf	(LTC6804_rdcv@CELL_IN_REG+1)& (0+255),w,b
  5370  00018A  0A80               	xorlw	128
  5371  00018C  583A               	subwfb	??_LTC6804_rdcv& (0+255),w,c
  5372  00018E  B0D8               	btfsc	status,0,c
  5373  000190  D045               	goto	l5643
  5374                           
  5375                           ; BSR set to: 0
  5376                           ;LT6804.c: 371: {
  5377                           ;LT6804.c: 372: parsed_cell = cell_data[data_counter] + (cell_data[data_counter + 1] << 
      +                          8);
  5378                           
  5379                           ; BSR set to: 0
  5380                           
  5381                           ; BSR set to: 0
  5382  000192  90D8               	bcf	status,0,c
  5383  000194  0100               	movlb	0	; () banked
  5384  000196  35F1               	rlcf	LTC6804_rdcv@data_counter& (0+255),w,b
  5385  000198  6ED9               	movwf	fsr2l,c
  5386  00019A  0100               	movlb	0	; () banked
  5387  00019C  35F2               	rlcf	(LTC6804_rdcv@data_counter+1)& (0+255),w,b
  5388  00019E  6EDA               	movwf	fsr2h,c
  5389  0001A0  0E00               	movlw	low LTC6804_rdcv@cell_data
  5390  0001A2  26D9               	addwf	fsr2l,f,c
  5391  0001A4  0E01               	movlw	high LTC6804_rdcv@cell_data
  5392  0001A6  22DA               	addwfc	fsr2h,f,c
  5393  0001A8  CFDE F03A          	movff	postinc2,??_LTC6804_rdcv
  5394  0001AC  CFDD F03B          	movff	postdec2,??_LTC6804_rdcv+1
  5395  0001B0  C0F1  F03C         	movff	LTC6804_rdcv@data_counter,??_LTC6804_rdcv+2
  5396  0001B4  C0F2  F03D         	movff	LTC6804_rdcv@data_counter+1,??_LTC6804_rdcv+3
  5397  0001B8  90D8               	bcf	status,0,c
  5398  0001BA  363C               	rlcf	??_LTC6804_rdcv+2,f,c
  5399  0001BC  363D               	rlcf	??_LTC6804_rdcv+3,f,c
  5400  0001BE  0E02               	movlw	2
  5401  0001C0  263C               	addwf	??_LTC6804_rdcv+2,f,c
  5402  0001C2  0E00               	movlw	0
  5403  0001C4  223D               	addwfc	??_LTC6804_rdcv+3,f,c
  5404  0001C6  0E00               	movlw	low LTC6804_rdcv@cell_data
  5405  0001C8  243C               	addwf	??_LTC6804_rdcv+2,w,c
  5406  0001CA  6ED9               	movwf	fsr2l,c
  5407  0001CC  0E01               	movlw	high LTC6804_rdcv@cell_data
  5408  0001CE  203D               	addwfc	??_LTC6804_rdcv+3,w,c
  5409  0001D0  6EDA               	movwf	fsr2h,c
  5410  0001D2  CFDE F03E          	movff	postinc2,??_LTC6804_rdcv+4
  5411  0001D6  CFDD F03F          	movff	postdec2,??_LTC6804_rdcv+5
  5412  0001DA  C03E  F03F         	movff	??_LTC6804_rdcv+4,??_LTC6804_rdcv+5
  5413  0001DE  6A3E               	clrf	??_LTC6804_rdcv+4,c
  5414  0001E0  503A               	movf	??_LTC6804_rdcv,w,c
  5415  0001E2  243E               	addwf	??_LTC6804_rdcv+4,w,c
  5416  0001E4  0100               	movlb	0	; () banked
  5417  0001E6  6FE5               	movwf	LTC6804_rdcv@parsed_cell& (0+255),b
  5418  0001E8  503B               	movf	??_LTC6804_rdcv+1,w,c
  5419  0001EA  203F               	addwfc	??_LTC6804_rdcv+5,w,c
  5420  0001EC  0100               	movlb	0	; () banked
  5421  0001EE  6FE6               	movwf	(LTC6804_rdcv@parsed_cell+1)& (0+255),b
  5422                           
  5423                           ; BSR set to: 0
  5424                           ;LT6804.c: 374: cell_codes[0][0]=parsed_cell;
  5425  0001F0  C038  FFD9         	movff	LTC6804_rdcv@cell_codes,fsr2l
  5426  0001F4  C039  FFDA         	movff	LTC6804_rdcv@cell_codes+1,fsr2h
  5427  0001F8  C0E5  FFDE         	movff	LTC6804_rdcv@parsed_cell,postinc2
  5428  0001FC  C0E6  FFDD         	movff	LTC6804_rdcv@parsed_cell+1,postdec2
  5429                           
  5430                           ;LT6804.c: 375: data_counter = data_counter + 2;
  5431  000200  0E02               	movlw	2
  5432  000202  0100               	movlb	0	; () banked
  5433  000204  25F1               	addwf	LTC6804_rdcv@data_counter& (0+255),w,b
  5434  000206  0100               	movlb	0	; () banked
  5435  000208  6FF1               	movwf	LTC6804_rdcv@data_counter& (0+255),b
  5436  00020A  0E00               	movlw	0
  5437  00020C  0100               	movlb	0	; () banked
  5438  00020E  21F2               	addwfc	(LTC6804_rdcv@data_counter+1)& (0+255),w,b
  5439  000210  0100               	movlb	0	; () banked
  5440  000212  6FF2               	movwf	(LTC6804_rdcv@data_counter+1)& (0+255),b
  5441                           
  5442                           ; BSR set to: 0
  5443  000214  0100               	movlb	0	; () banked
  5444  000216  4BEF               	infsnz	LTC6804_rdcv@current_cell& (0+255),f,b
  5445  000218  2BF0               	incf	(LTC6804_rdcv@current_cell+1)& (0+255),f,b
  5446  00021A  D7AD               	goto	l5631
  5447  00021C                     l5643:
  5448                           
  5449                           ; BSR set to: 0
  5450                           ;LT6804.c: 376: }
  5451                           ;LT6804.c: 378: received_pec = (cell_data[data_counter] << 8) + cell_data[data_counter+1
      +                          ];
  5452  00021C  C0F1  F03A         	movff	LTC6804_rdcv@data_counter,??_LTC6804_rdcv
  5453  000220  C0F2  F03B         	movff	LTC6804_rdcv@data_counter+1,??_LTC6804_rdcv+1
  5454  000224  90D8               	bcf	status,0,c
  5455  000226  363A               	rlcf	??_LTC6804_rdcv,f,c
  5456  000228  363B               	rlcf	??_LTC6804_rdcv+1,f,c
  5457  00022A  0E02               	movlw	2
  5458  00022C  263A               	addwf	??_LTC6804_rdcv,f,c
  5459  00022E  0E00               	movlw	0
  5460  000230  223B               	addwfc	??_LTC6804_rdcv+1,f,c
  5461  000232  0E00               	movlw	low LTC6804_rdcv@cell_data
  5462  000234  243A               	addwf	??_LTC6804_rdcv,w,c
  5463  000236  6ED9               	movwf	fsr2l,c
  5464  000238  0E01               	movlw	high LTC6804_rdcv@cell_data
  5465  00023A  203B               	addwfc	??_LTC6804_rdcv+1,w,c
  5466  00023C  6EDA               	movwf	fsr2h,c
  5467  00023E  CFDE F03C          	movff	postinc2,??_LTC6804_rdcv+2
  5468  000242  CFDD F03D          	movff	postdec2,??_LTC6804_rdcv+3
  5469  000246  90D8               	bcf	status,0,c
  5470  000248  0100               	movlb	0	; () banked
  5471  00024A  35F1               	rlcf	LTC6804_rdcv@data_counter& (0+255),w,b
  5472  00024C  6ED9               	movwf	fsr2l,c
  5473  00024E  0100               	movlb	0	; () banked
  5474  000250  35F2               	rlcf	(LTC6804_rdcv@data_counter+1)& (0+255),w,b
  5475  000252  6EDA               	movwf	fsr2h,c
  5476  000254  0E00               	movlw	low LTC6804_rdcv@cell_data
  5477  000256  26D9               	addwf	fsr2l,f,c
  5478  000258  0E01               	movlw	high LTC6804_rdcv@cell_data
  5479  00025A  22DA               	addwfc	fsr2h,f,c
  5480  00025C  CFDE F03E          	movff	postinc2,??_LTC6804_rdcv+4
  5481  000260  CFDD F03F          	movff	postdec2,??_LTC6804_rdcv+5
  5482  000264  C03E  F03F         	movff	??_LTC6804_rdcv+4,??_LTC6804_rdcv+5
  5483  000268  6A3E               	clrf	??_LTC6804_rdcv+4,c
  5484  00026A  503C               	movf	??_LTC6804_rdcv+2,w,c
  5485  00026C  243E               	addwf	??_LTC6804_rdcv+4,w,c
  5486  00026E  0100               	movlb	0	; () banked
  5487  000270  6FE7               	movwf	LTC6804_rdcv@received_pec& (0+255),b
  5488  000272  503D               	movf	??_LTC6804_rdcv+3,w,c
  5489  000274  203F               	addwfc	??_LTC6804_rdcv+5,w,c
  5490  000276  0100               	movlb	0	; () banked
  5491  000278  6FE8               	movwf	(LTC6804_rdcv@received_pec+1)& (0+255),b
  5492                           
  5493                           ; BSR set to: 0
  5494                           ;LT6804.c: 379: data_pec = pec15_calc(BYT_IN_REG, &cell_data[current_ic * NUM_RX_BYT ]);
  5495  00027A  C0E3  F015         	movff	LTC6804_rdcv@BYT_IN_REG,pec15_calc@len
  5496  00027E  C0E4  F016         	movff	LTC6804_rdcv@BYT_IN_REG+1,pec15_calc@len+1
  5497  000282  C04D  F00F         	movff	_current_ic,___wmul@multiplier
  5498  000286  C04E  F010         	movff	_current_ic+1,___wmul@multiplier+1
  5499  00028A  C0E1  F011         	movff	LTC6804_rdcv@NUM_RX_BYT,___wmul@multiplicand
  5500  00028E  C0E2  F012         	movff	LTC6804_rdcv@NUM_RX_BYT+1,___wmul@multiplicand+1
  5501  000292  ECAD  F00A         	call	___wmul	;wreg free
  5502  000296  90D8               	bcf	status,0,c
  5503  000298  360F               	rlcf	?___wmul,f,c
  5504  00029A  3610               	rlcf	?___wmul+1,f,c
  5505  00029C  0E00               	movlw	low LTC6804_rdcv@cell_data
  5506  00029E  240F               	addwf	?___wmul,w,c
  5507  0002A0  6E17               	movwf	pec15_calc@data,c
  5508  0002A2  0E01               	movlw	high LTC6804_rdcv@cell_data
  5509  0002A4  2010               	addwfc	?___wmul+1,w,c
  5510  0002A6  6E18               	movwf	pec15_calc@data+1,c
  5511  0002A8  EC10  F007         	call	_pec15_calc	;wreg free
  5512  0002AC  C015  F0E9         	movff	?_pec15_calc,LTC6804_rdcv@data_pec
  5513  0002B0  C016  F0EA         	movff	?_pec15_calc+1,LTC6804_rdcv@data_pec+1
  5514                           
  5515                           ;LT6804.c: 380: if(received_pec != data_pec)
  5516  0002B4  0100               	movlb	0	; () banked
  5517  0002B6  51E9               	movf	LTC6804_rdcv@data_pec& (0+255),w,b
  5518  0002B8  0100               	movlb	0	; () banked
  5519  0002BA  19E7               	xorwf	LTC6804_rdcv@received_pec& (0+255),w,b
  5520  0002BC  E106               	bnz	u4700
  5521  0002BE  0100               	movlb	0	; () banked
  5522  0002C0  51EA               	movf	(LTC6804_rdcv@data_pec+1)& (0+255),w,b
  5523  0002C2  0100               	movlb	0	; () banked
  5524  0002C4  19E8               	xorwf	(LTC6804_rdcv@received_pec+1)& (0+255),w,b
  5525  0002C6  B4D8               	btfsc	status,2,c
  5526  0002C8  D004               	goto	l5651
  5527  0002CA                     u4700:
  5528                           
  5529                           ; BSR set to: 0
  5530                           ;LT6804.c: 381: {
  5531                           ;LT6804.c: 382: pec_error--;
  5532  0002CA  0100               	movlb	0	; () banked
  5533  0002CC  07DF               	decf	LTC6804_rdcv@pec_error& (0+255),f,b
  5534  0002CE  A0D8               	btfss	status,0,c
  5535  0002D0  07E0               	decf	(LTC6804_rdcv@pec_error+1)& (0+255),f,b
  5536  0002D2                     l5651:
  5537                           
  5538                           ; BSR set to: 0
  5539                           ;LT6804.c: 383: }
  5540                           ;LT6804.c: 384: data_counter=data_counter+2;
  5541  0002D2  0E02               	movlw	2
  5542  0002D4  0100               	movlb	0	; () banked
  5543  0002D6  25F1               	addwf	LTC6804_rdcv@data_counter& (0+255),w,b
  5544  0002D8  0100               	movlb	0	; () banked
  5545  0002DA  6FF1               	movwf	LTC6804_rdcv@data_counter& (0+255),b
  5546  0002DC  0E00               	movlw	0
  5547  0002DE  0100               	movlb	0	; () banked
  5548  0002E0  21F2               	addwfc	(LTC6804_rdcv@data_counter+1)& (0+255),w,b
  5549  0002E2  0100               	movlb	0	; () banked
  5550  0002E4  6FF2               	movwf	(LTC6804_rdcv@data_counter+1)& (0+255),b
  5551                           
  5552                           ; BSR set to: 0
  5553  0002E6  4A4D               	infsnz	_current_ic,f,c
  5554  0002E8  2A4E               	incf	_current_ic+1,f,c
  5555  0002EA                     l825:
  5556  0002EA  5036               	movf	LTC6804_rdcv@total_ic,w,c
  5557  0002EC  5C4D               	subwf	_current_ic,w,c
  5558  0002EE  504E               	movf	_current_ic+1,w,c
  5559  0002F0  0A80               	xorlw	128
  5560  0002F2  6E3A               	movwf	??_LTC6804_rdcv& (0+255),c
  5561  0002F4  5037               	movf	LTC6804_rdcv@total_ic+1,w,c
  5562  0002F6  0A80               	xorlw	128
  5563  0002F8  583A               	subwfb	??_LTC6804_rdcv& (0+255),w,c
  5564  0002FA  A0D8               	btfss	status,0,c
  5565  0002FC  D737               	goto	l5629
  5566  0002FE  0100               	movlb	0	; () banked
  5567  000300  4BEB               	infsnz	LTC6804_rdcv@cell_reg& (0+255),f,b
  5568  000302  2BEC               	incf	(LTC6804_rdcv@cell_reg+1)& (0+255),f,b
  5569                           
  5570                           ; BSR set to: 0
  5571  000304  0100               	movlb	0	; () banked
  5572  000306  BFEC               	btfsc	(LTC6804_rdcv@cell_reg+1)& (0+255),7,b
  5573  000308  D719               	goto	l5623
  5574  00030A  0100               	movlb	0	; () banked
  5575  00030C  51EC               	movf	(LTC6804_rdcv@cell_reg+1)& (0+255),w,b
  5576  00030E  E101               	bnz	u4720
  5577  000310  D70E               	goto	L10
  5578  000312                     u4720:
  5579                           
  5580                           ; BSR set to: 0
  5581                           ;LT6804.c: 385: }
  5582                           ;LT6804.c: 386: }
  5583                           ;LT6804.c: 387: }
  5584  000312  D10B               	goto	l831
  5585  000314                     l5659:
  5586                           
  5587                           ; BSR set to: 0
  5588                           ;LT6804.c: 389: else
  5589                           ;LT6804.c: 390: {
  5590                           ;LT6804.c: 393: LTC6804_rdcv_reg(reg, total_ic,cell_data);
  5591  000314  C034  F022         	movff	LTC6804_rdcv@reg,LTC6804_rdcv_reg@reg
  5592  000318  C035  F023         	movff	LTC6804_rdcv@reg+1,LTC6804_rdcv_reg@reg+1
  5593  00031C  C036  F024         	movff	LTC6804_rdcv@total_ic,LTC6804_rdcv_reg@total_ic
  5594  000320  C037  F025         	movff	LTC6804_rdcv@total_ic+1,LTC6804_rdcv_reg@total_ic+1
  5595  000324  0E00               	movlw	low LTC6804_rdcv@cell_data
  5596  000326  6E26               	movwf	LTC6804_rdcv_reg@data,c
  5597  000328  0E01               	movlw	high LTC6804_rdcv@cell_data
  5598  00032A  6E27               	movwf	LTC6804_rdcv_reg@data+1,c
  5599  00032C  EC83  F005         	call	_LTC6804_rdcv_reg	;wreg free
  5600                           
  5601                           ;LT6804.c: 394: for (current_ic = 0 ; current_ic < total_ic; current_ic++)
  5602  000330  0E00               	movlw	0
  5603  000332  6E4E               	movwf	_current_ic+1,c
  5604  000334  0E00               	movlw	0
  5605  000336  6E4D               	movwf	_current_ic,c
  5606  000338  D0EE               	goto	l5689
  5607  00033A                     l5663:
  5608                           
  5609                           ;LT6804.c: 395: {
  5610                           ;LT6804.c: 397: for(current_cell = 0; current_cell < CELL_IN_REG; current_cell++)
  5611  00033A  0E00               	movlw	0
  5612  00033C  0100               	movlb	0	; () banked
  5613  00033E  6FF0               	movwf	(LTC6804_rdcv@current_cell+1)& (0+255),b
  5614  000340  0E00               	movlw	0
  5615  000342  6FEF               	movwf	LTC6804_rdcv@current_cell& (0+255),b
  5616  000344                     l5665:
  5617                           
  5618                           ; BSR set to: 0
  5619  000344  0100               	movlb	0	; () banked
  5620  000346  51ED               	movf	LTC6804_rdcv@CELL_IN_REG& (0+255),w,b
  5621  000348  0100               	movlb	0	; () banked
  5622  00034A  5DEF               	subwf	LTC6804_rdcv@current_cell& (0+255),w,b
  5623  00034C  0100               	movlb	0	; () banked
  5624  00034E  51F0               	movf	(LTC6804_rdcv@current_cell+1)& (0+255),w,b
  5625  000350  0A80               	xorlw	128
  5626  000352  6E3A               	movwf	??_LTC6804_rdcv& (0+255),c
  5627  000354  0100               	movlb	0	; () banked
  5628  000356  51EE               	movf	(LTC6804_rdcv@CELL_IN_REG+1)& (0+255),w,b
  5629  000358  0A80               	xorlw	128
  5630  00035A  583A               	subwfb	??_LTC6804_rdcv& (0+255),w,c
  5631  00035C  B0D8               	btfsc	status,0,c
  5632  00035E  D06E               	goto	l5679
  5633                           
  5634                           ; BSR set to: 0
  5635                           ;LT6804.c: 398: {
  5636                           ;LT6804.c: 399: parsed_cell = cell_data[data_counter] + (cell_data[data_counter+1]<<8);
  5637                           
  5638                           ; BSR set to: 0
  5639                           
  5640                           ; BSR set to: 0
  5641  000360  90D8               	bcf	status,0,c
  5642  000362  0100               	movlb	0	; () banked
  5643  000364  35F1               	rlcf	LTC6804_rdcv@data_counter& (0+255),w,b
  5644  000366  6ED9               	movwf	fsr2l,c
  5645  000368  0100               	movlb	0	; () banked
  5646  00036A  35F2               	rlcf	(LTC6804_rdcv@data_counter+1)& (0+255),w,b
  5647  00036C  6EDA               	movwf	fsr2h,c
  5648  00036E  0E00               	movlw	low LTC6804_rdcv@cell_data
  5649  000370  26D9               	addwf	fsr2l,f,c
  5650  000372  0E01               	movlw	high LTC6804_rdcv@cell_data
  5651  000374  22DA               	addwfc	fsr2h,f,c
  5652  000376  CFDE F03A          	movff	postinc2,??_LTC6804_rdcv
  5653  00037A  CFDD F03B          	movff	postdec2,??_LTC6804_rdcv+1
  5654  00037E  C0F1  F03C         	movff	LTC6804_rdcv@data_counter,??_LTC6804_rdcv+2
  5655  000382  C0F2  F03D         	movff	LTC6804_rdcv@data_counter+1,??_LTC6804_rdcv+3
  5656  000386  90D8               	bcf	status,0,c
  5657  000388  363C               	rlcf	??_LTC6804_rdcv+2,f,c
  5658  00038A  363D               	rlcf	??_LTC6804_rdcv+3,f,c
  5659  00038C  0E02               	movlw	2
  5660  00038E  263C               	addwf	??_LTC6804_rdcv+2,f,c
  5661  000390  0E00               	movlw	0
  5662  000392  223D               	addwfc	??_LTC6804_rdcv+3,f,c
  5663  000394  0E00               	movlw	low LTC6804_rdcv@cell_data
  5664  000396  243C               	addwf	??_LTC6804_rdcv+2,w,c
  5665  000398  6ED9               	movwf	fsr2l,c
  5666  00039A  0E01               	movlw	high LTC6804_rdcv@cell_data
  5667  00039C  203D               	addwfc	??_LTC6804_rdcv+3,w,c
  5668  00039E  6EDA               	movwf	fsr2h,c
  5669  0003A0  CFDE F03E          	movff	postinc2,??_LTC6804_rdcv+4
  5670  0003A4  CFDD F03F          	movff	postdec2,??_LTC6804_rdcv+5
  5671  0003A8  C03E  F03F         	movff	??_LTC6804_rdcv+4,??_LTC6804_rdcv+5
  5672  0003AC  6A3E               	clrf	??_LTC6804_rdcv+4,c
  5673  0003AE  503A               	movf	??_LTC6804_rdcv,w,c
  5674  0003B0  243E               	addwf	??_LTC6804_rdcv+4,w,c
  5675  0003B2  0100               	movlb	0	; () banked
  5676  0003B4  6FE5               	movwf	LTC6804_rdcv@parsed_cell& (0+255),b
  5677  0003B6  503B               	movf	??_LTC6804_rdcv+1,w,c
  5678  0003B8  203F               	addwfc	??_LTC6804_rdcv+5,w,c
  5679  0003BA  0100               	movlb	0	; () banked
  5680  0003BC  6FE6               	movwf	(LTC6804_rdcv@parsed_cell+1)& (0+255),b
  5681                           
  5682                           ; BSR set to: 0
  5683                           ;LT6804.c: 400: cell_codes[current_ic][current_cell + ((reg - 1) * CELL_IN_REG)] = 0x000
      +                          0FFFF & parsed_cell;
  5684  0003BE  C04D  F00F         	movff	_current_ic,___wmul@multiplier
  5685  0003C2  C04E  F010         	movff	_current_ic+1,___wmul@multiplier+1
  5686  0003C6  0E00               	movlw	0
  5687  0003C8  6E12               	movwf	___wmul@multiplicand+1,c
  5688  0003CA  0E18               	movlw	24
  5689  0003CC  6E11               	movwf	___wmul@multiplicand,c
  5690  0003CE  ECAD  F00A         	call	___wmul	;wreg free
  5691  0003D2  C038  F03A         	movff	LTC6804_rdcv@cell_codes,??_LTC6804_rdcv
  5692  0003D6  C039  F03B         	movff	LTC6804_rdcv@cell_codes+1,??_LTC6804_rdcv+1
  5693  0003DA  500F               	movf	?___wmul,w,c
  5694  0003DC  263A               	addwf	??_LTC6804_rdcv,f,c
  5695  0003DE  5010               	movf	?___wmul+1,w,c
  5696  0003E0  223B               	addwfc	??_LTC6804_rdcv+1,f,c
  5697  0003E2  0EFF               	movlw	255
  5698  0003E4  2434               	addwf	LTC6804_rdcv@reg,w,c
  5699  0003E6  6E0F               	movwf	___wmul@multiplier,c
  5700  0003E8  0EFF               	movlw	255
  5701  0003EA  2035               	addwfc	LTC6804_rdcv@reg+1,w,c
  5702  0003EC  6E10               	movwf	___wmul@multiplier+1,c
  5703  0003EE  C0ED  F011         	movff	LTC6804_rdcv@CELL_IN_REG,___wmul@multiplicand
  5704  0003F2  C0EE  F012         	movff	LTC6804_rdcv@CELL_IN_REG+1,___wmul@multiplicand+1
  5705  0003F6  ECAD  F00A         	call	___wmul	;wreg free
  5706  0003FA  0100               	movlb	0	; () banked
  5707  0003FC  51EF               	movf	LTC6804_rdcv@current_cell& (0+255),w,b
  5708  0003FE  260F               	addwf	?___wmul,f,c
  5709  000400  0100               	movlb	0	; () banked
  5710  000402  51F0               	movf	(LTC6804_rdcv@current_cell+1)& (0+255),w,b
  5711  000404  2210               	addwfc	?___wmul+1,f,c
  5712  000406  90D8               	bcf	status,0,c
  5713  000408  360F               	rlcf	?___wmul,f,c
  5714  00040A  3610               	rlcf	?___wmul+1,f,c
  5715  00040C  500F               	movf	?___wmul,w,c
  5716  00040E  243A               	addwf	??_LTC6804_rdcv,w,c
  5717  000410  6ED9               	movwf	fsr2l,c
  5718  000412  5010               	movf	?___wmul+1,w,c
  5719  000414  203B               	addwfc	??_LTC6804_rdcv+1,w,c
  5720  000416  6EDA               	movwf	fsr2h,c
  5721  000418  C0E5  FFDE         	movff	LTC6804_rdcv@parsed_cell,postinc2
  5722  00041C  C0E6  FFDD         	movff	LTC6804_rdcv@parsed_cell+1,postdec2
  5723                           
  5724                           ; BSR set to: 0
  5725                           ;LT6804.c: 401: data_counter= data_counter + 2;
  5726  000420  0E02               	movlw	2
  5727  000422  0100               	movlb	0	; () banked
  5728  000424  25F1               	addwf	LTC6804_rdcv@data_counter& (0+255),w,b
  5729  000426  0100               	movlb	0	; () banked
  5730  000428  6FF1               	movwf	LTC6804_rdcv@data_counter& (0+255),b
  5731  00042A  0E00               	movlw	0
  5732  00042C  0100               	movlb	0	; () banked
  5733  00042E  21F2               	addwfc	(LTC6804_rdcv@data_counter+1)& (0+255),w,b
  5734  000430  0100               	movlb	0	; () banked
  5735  000432  6FF2               	movwf	(LTC6804_rdcv@data_counter+1)& (0+255),b
  5736                           
  5737                           ; BSR set to: 0
  5738  000434  0100               	movlb	0	; () banked
  5739  000436  4BEF               	infsnz	LTC6804_rdcv@current_cell& (0+255),f,b
  5740  000438  2BF0               	incf	(LTC6804_rdcv@current_cell+1)& (0+255),f,b
  5741  00043A  D784               	goto	l5665
  5742  00043C                     l5679:
  5743                           
  5744                           ; BSR set to: 0
  5745                           ;LT6804.c: 402: }
  5746                           ;LT6804.c: 404: received_pec = (cell_data[data_counter] << 8 )+ cell_data[data_counter +
      +                           1];
  5747  00043C  C0F1  F03A         	movff	LTC6804_rdcv@data_counter,??_LTC6804_rdcv
  5748  000440  C0F2  F03B         	movff	LTC6804_rdcv@data_counter+1,??_LTC6804_rdcv+1
  5749  000444  90D8               	bcf	status,0,c
  5750  000446  363A               	rlcf	??_LTC6804_rdcv,f,c
  5751  000448  363B               	rlcf	??_LTC6804_rdcv+1,f,c
  5752  00044A  0E02               	movlw	2
  5753  00044C  263A               	addwf	??_LTC6804_rdcv,f,c
  5754  00044E  0E00               	movlw	0
  5755  000450  223B               	addwfc	??_LTC6804_rdcv+1,f,c
  5756  000452  0E00               	movlw	low LTC6804_rdcv@cell_data
  5757  000454  243A               	addwf	??_LTC6804_rdcv,w,c
  5758  000456  6ED9               	movwf	fsr2l,c
  5759  000458  0E01               	movlw	high LTC6804_rdcv@cell_data
  5760  00045A  203B               	addwfc	??_LTC6804_rdcv+1,w,c
  5761  00045C  6EDA               	movwf	fsr2h,c
  5762  00045E  CFDE F03C          	movff	postinc2,??_LTC6804_rdcv+2
  5763  000462  CFDD F03D          	movff	postdec2,??_LTC6804_rdcv+3
  5764  000466  90D8               	bcf	status,0,c
  5765  000468  0100               	movlb	0	; () banked
  5766  00046A  35F1               	rlcf	LTC6804_rdcv@data_counter& (0+255),w,b
  5767  00046C  6ED9               	movwf	fsr2l,c
  5768  00046E  0100               	movlb	0	; () banked
  5769  000470  35F2               	rlcf	(LTC6804_rdcv@data_counter+1)& (0+255),w,b
  5770  000472  6EDA               	movwf	fsr2h,c
  5771  000474  0E00               	movlw	low LTC6804_rdcv@cell_data
  5772  000476  26D9               	addwf	fsr2l,f,c
  5773  000478  0E01               	movlw	high LTC6804_rdcv@cell_data
  5774  00047A  22DA               	addwfc	fsr2h,f,c
  5775  00047C  CFDE F03E          	movff	postinc2,??_LTC6804_rdcv+4
  5776  000480  CFDD F03F          	movff	postdec2,??_LTC6804_rdcv+5
  5777  000484  C03E  F03F         	movff	??_LTC6804_rdcv+4,??_LTC6804_rdcv+5
  5778  000488  6A3E               	clrf	??_LTC6804_rdcv+4,c
  5779  00048A  503C               	movf	??_LTC6804_rdcv+2,w,c
  5780  00048C  243E               	addwf	??_LTC6804_rdcv+4,w,c
  5781  00048E  0100               	movlb	0	; () banked
  5782  000490  6FE7               	movwf	LTC6804_rdcv@received_pec& (0+255),b
  5783  000492  503D               	movf	??_LTC6804_rdcv+3,w,c
  5784  000494  203F               	addwfc	??_LTC6804_rdcv+5,w,c
  5785  000496  0100               	movlb	0	; () banked
  5786  000498  6FE8               	movwf	(LTC6804_rdcv@received_pec+1)& (0+255),b
  5787                           
  5788                           ; BSR set to: 0
  5789                           ;LT6804.c: 405: data_pec = pec15_calc(BYT_IN_REG, &cell_data[current_ic * NUM_RX_BYT * (
      +                          reg-1)]);
  5790  00049A  C04D  F00F         	movff	_current_ic,___wmul@multiplier
  5791  00049E  C04E  F010         	movff	_current_ic+1,___wmul@multiplier+1
  5792  0004A2  C0E1  F011         	movff	LTC6804_rdcv@NUM_RX_BYT,___wmul@multiplicand
  5793  0004A6  C0E2  F012         	movff	LTC6804_rdcv@NUM_RX_BYT+1,___wmul@multiplicand+1
  5794  0004AA  ECAD  F00A         	call	___wmul	;wreg free
  5795  0004AE  C00F  F0DD         	movff	?___wmul,_LTC6804_rdcv$2731
  5796  0004B2  C010  F0DE         	movff	?___wmul+1,_LTC6804_rdcv$2731+1
  5797                           
  5798                           ;LT6804.c: 405: data_pec = pec15_calc(BYT_IN_REG, &cell_data[current_ic * NUM_RX_BYT * (
      +                          reg-1)]);
  5799  0004B6  C0E3  F015         	movff	LTC6804_rdcv@BYT_IN_REG,pec15_calc@len
  5800  0004BA  C0E4  F016         	movff	LTC6804_rdcv@BYT_IN_REG+1,pec15_calc@len+1
  5801  0004BE  0EFF               	movlw	255
  5802  0004C0  2434               	addwf	LTC6804_rdcv@reg,w,c
  5803  0004C2  6E0F               	movwf	___wmul@multiplier,c
  5804  0004C4  0EFF               	movlw	255
  5805  0004C6  2035               	addwfc	LTC6804_rdcv@reg+1,w,c
  5806  0004C8  6E10               	movwf	___wmul@multiplier+1,c
  5807  0004CA  C0DD  F011         	movff	_LTC6804_rdcv$2731,___wmul@multiplicand
  5808  0004CE  C0DE  F012         	movff	_LTC6804_rdcv$2731+1,___wmul@multiplicand+1
  5809  0004D2  ECAD  F00A         	call	___wmul	;wreg free
  5810  0004D6  90D8               	bcf	status,0,c
  5811  0004D8  360F               	rlcf	?___wmul,f,c
  5812  0004DA  3610               	rlcf	?___wmul+1,f,c
  5813  0004DC  0E00               	movlw	low LTC6804_rdcv@cell_data
  5814  0004DE  240F               	addwf	?___wmul,w,c
  5815  0004E0  6E17               	movwf	pec15_calc@data,c
  5816  0004E2  0E01               	movlw	high LTC6804_rdcv@cell_data
  5817  0004E4  2010               	addwfc	?___wmul+1,w,c
  5818  0004E6  6E18               	movwf	pec15_calc@data+1,c
  5819  0004E8  EC10  F007         	call	_pec15_calc	;wreg free
  5820  0004EC  C015  F0E9         	movff	?_pec15_calc,LTC6804_rdcv@data_pec
  5821  0004F0  C016  F0EA         	movff	?_pec15_calc+1,LTC6804_rdcv@data_pec+1
  5822                           
  5823                           ;LT6804.c: 406: if(received_pec != data_pec)
  5824  0004F4  0100               	movlb	0	; () banked
  5825  0004F6  51E9               	movf	LTC6804_rdcv@data_pec& (0+255),w,b
  5826  0004F8  0100               	movlb	0	; () banked
  5827  0004FA  19E7               	xorwf	LTC6804_rdcv@received_pec& (0+255),w,b
  5828  0004FC  E106               	bnz	u4750
  5829  0004FE  0100               	movlb	0	; () banked
  5830  000500  51EA               	movf	(LTC6804_rdcv@data_pec+1)& (0+255),w,b
  5831  000502  0100               	movlb	0	; () banked
  5832  000504  19E8               	xorwf	(LTC6804_rdcv@received_pec+1)& (0+255),w,b
  5833  000506  B4D8               	btfsc	status,2,c
  5834  000508  D004               	goto	l836
  5835  00050A                     u4750:
  5836                           
  5837                           ; BSR set to: 0
  5838                           ;LT6804.c: 407: {
  5839                           ;LT6804.c: 408: pec_error--;
  5840  00050A  0100               	movlb	0	; () banked
  5841  00050C  07DF               	decf	LTC6804_rdcv@pec_error& (0+255),f,b
  5842  00050E  A0D8               	btfss	status,0,c
  5843  000510  07E0               	decf	(LTC6804_rdcv@pec_error+1)& (0+255),f,b
  5844  000512                     l836:
  5845                           
  5846                           ; BSR set to: 0
  5847  000512  4A4D               	infsnz	_current_ic,f,c
  5848  000514  2A4E               	incf	_current_ic+1,f,c
  5849  000516                     l5689:
  5850  000516  5036               	movf	LTC6804_rdcv@total_ic,w,c
  5851  000518  5C4D               	subwf	_current_ic,w,c
  5852  00051A  504E               	movf	_current_ic+1,w,c
  5853  00051C  0A80               	xorlw	128
  5854  00051E  6E3A               	movwf	??_LTC6804_rdcv& (0+255),c
  5855  000520  5037               	movf	LTC6804_rdcv@total_ic+1,w,c
  5856  000522  0A80               	xorlw	128
  5857  000524  583A               	subwfb	??_LTC6804_rdcv& (0+255),w,c
  5858  000526  A0D8               	btfss	status,0,c
  5859  000528  D708               	goto	l5663
  5860  00052A                     l831:
  5861                           
  5862                           ;LT6804.c: 409: }
  5863                           ;LT6804.c: 410: }
  5864                           ;LT6804.c: 411: }
  5865                           ;LT6804.c: 413: return(pec_error);
  5866  00052A  C0DF  F034         	movff	LTC6804_rdcv@pec_error,?_LTC6804_rdcv
  5867  00052E  C0E0  F035         	movff	LTC6804_rdcv@pec_error+1,?_LTC6804_rdcv+1
  5868  000532  0012               	return		;funcret
  5869  000534                     __end_of_LTC6804_rdcv:
  5870                           	opt stack 0
  5871                           tblptru	equ	0xFF8
  5872                           tblptrh	equ	0xFF7
  5873                           tblptrl	equ	0xFF6
  5874                           tablat	equ	0xFF5
  5875                           prodh	equ	0xFF4
  5876                           prodl	equ	0xFF3
  5877                           intcon	equ	0xFF2
  5878                           intcon2	equ	0xFF1
  5879                           postinc0	equ	0xFEE
  5880                           wreg	equ	0xFE8
  5881                           postinc1	equ	0xFE6
  5882                           postdec1	equ	0xFE5
  5883                           fsr1h	equ	0xFE2
  5884                           fsr1l	equ	0xFE1
  5885                           indf2	equ	0xFDF
  5886                           postinc2	equ	0xFDE
  5887                           postdec2	equ	0xFDD
  5888                           fsr2h	equ	0xFDA
  5889                           fsr2l	equ	0xFD9
  5890                           status	equ	0xFD8
  5891                           
  5892 ;; *************** function ___wmul *****************
  5893 ;; Defined at:
  5894 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;  multiplier      2   14[COMRAM] unsigned int 
  5897 ;;  multiplicand    2   16[COMRAM] unsigned int 
  5898 ;; Auto vars:     Size  Location     Type
  5899 ;;  product         2   18[COMRAM] unsigned int 
  5900 ;; Return value:  Size  Location     Type
  5901 ;;                  2   14[COMRAM] unsigned int 
  5902 ;; Registers used:
  5903 ;;		wreg, status,2, status,0, prodl, prodh
  5904 ;; Tracked objects:
  5905 ;;		On entry : 0/0
  5906 ;;		On exit  : 0/0
  5907 ;;		Unchanged: 0/0
  5908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5909 ;;      Params:         4       0       0       0       0       0       0
  5910 ;;      Locals:         2       0       0       0       0       0       0
  5911 ;;      Temps:          0       0       0       0       0       0       0
  5912 ;;      Totals:         6       0       0       0       0       0       0
  5913 ;;Total ram usage:        6 bytes
  5914 ;; Hardware stack levels used:    1
  5915 ;; Hardware stack levels required when called:    3
  5916 ;; This function calls:
  5917 ;;		Nothing
  5918 ;; This function is called by:
  5919 ;;		_SetTempEnable
  5920 ;;		_Set_ADC_Mode
  5921 ;;		_Set_DCC_Mode_OFF
  5922 ;;		_Set_DCTO_Mode_OFF
  5923 ;;		_Set_REFON_Pin
  5924 ;;		_LTC6804_rdcv
  5925 ;;		_LTC6804_wrcfg
  5926 ;;		_Temp_Fault
  5927 ;;		_Temp_Filter
  5928 ;;		_Temp_Convert
  5929 ;;		_Tempeture_Get
  5930 ;;		_CheckThresholdsBank
  5931 ;;		_SetBypass
  5932 ;;		_SetUnderOverVoltage
  5933 ;;		_ReadCurrentVolt
  5934 ;;		_ReadVolt
  5935 ;;		_CurrentCoulombCount
  5936 ;;		_LTC6804_rdaux
  5937 ;;		_LTC6804_rdStat
  5938 ;;		_LTC6804_rdcfg
  5939 ;;		_eval_poly
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943                           	psect	text29
  5944  00155A                     __ptext29:
  5945                           	opt stack 0
  5946  00155A                     ___wmul:
  5947                           	opt stack 23
  5948                           
  5949                           ;incstack = 0
  5950  00155A  500F               	movf	___wmul@multiplier,w,c
  5951  00155C  0211               	mulwf	___wmul@multiplicand,c
  5952  00155E  CFF3 F013          	movff	prodl,___wmul@product
  5953  001562  CFF4 F014          	movff	prodh,___wmul@product+1
  5954  001566  500F               	movf	___wmul@multiplier,w,c
  5955  001568  0212               	mulwf	___wmul@multiplicand+1,c
  5956  00156A  50F3               	movf	prodl,w,c
  5957  00156C  2614               	addwf	___wmul@product+1,f,c
  5958  00156E  5010               	movf	___wmul@multiplier+1,w,c
  5959  001570  0211               	mulwf	___wmul@multiplicand,c
  5960  001572  50F3               	movf	prodl,w,c
  5961  001574  2614               	addwf	___wmul@product+1,f,c
  5962  001576  C013  F00F         	movff	___wmul@product,?___wmul
  5963  00157A  C014  F010         	movff	___wmul@product+1,?___wmul+1
  5964  00157E  0012               	return	
  5965  001580                     __end_of___wmul:
  5966                           	opt stack 0
  5967                           tblptru	equ	0xFF8
  5968                           tblptrh	equ	0xFF7
  5969                           tblptrl	equ	0xFF6
  5970                           tablat	equ	0xFF5
  5971                           prodh	equ	0xFF4
  5972                           prodl	equ	0xFF3
  5973                           intcon	equ	0xFF2
  5974                           intcon2	equ	0xFF1
  5975                           postinc0	equ	0xFEE
  5976                           wreg	equ	0xFE8
  5977                           postinc1	equ	0xFE6
  5978                           postdec1	equ	0xFE5
  5979                           fsr1h	equ	0xFE2
  5980                           fsr1l	equ	0xFE1
  5981                           indf2	equ	0xFDF
  5982                           postinc2	equ	0xFDE
  5983                           postdec2	equ	0xFDD
  5984                           fsr2h	equ	0xFDA
  5985                           fsr2l	equ	0xFD9
  5986                           status	equ	0xFD8
  5987                           
  5988 ;; *************** function _LTC6804_rdcv_reg *****************
  5989 ;; Defined at:
  5990 ;;		line 452 in file "LT6804.c"
  5991 ;; Parameters:    Size  Location     Type
  5992 ;;  reg             2   33[COMRAM] int 
  5993 ;;  total_ic        2   35[COMRAM] int 
  5994 ;;  data            2   37[COMRAM] PTR int 
  5995 ;;		 -> LTC6804_rdcv@cell_data(240), 
  5996 ;; Auto vars:     Size  Location     Type
  5997 ;;  cmd             8   43[COMRAM] int [4]
  5998 ;;  temp_pec        2   41[COMRAM] int 
  5999 ;; Return value:  Size  Location     Type
  6000 ;;		None               void
  6001 ;; Registers used:
  6002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6008 ;;      Params:         6       0       0       0       0       0       0
  6009 ;;      Locals:        10       0       0       0       0       0       0
  6010 ;;      Temps:          2       0       0       0       0       0       0
  6011 ;;      Totals:        18       0       0       0       0       0       0
  6012 ;;Total ram usage:       18 bytes
  6013 ;; Hardware stack levels used:    1
  6014 ;; Hardware stack levels required when called:    5
  6015 ;; This function calls:
  6016 ;;		_pec15_calc
  6017 ;;		_spi_write_read
  6018 ;;		_wakeup_idle
  6019 ;; This function is called by:
  6020 ;;		_LTC6804_rdcv
  6021 ;; This function uses a non-reentrant model
  6022 ;;
  6023                           
  6024                           	psect	text30
  6025  000B06                     __ptext30:
  6026                           	opt stack 0
  6027  000B06                     _LTC6804_rdcv_reg:
  6028                           	opt stack 22
  6029                           
  6030                           ;LT6804.c: 457: int cmd[4];
  6031                           ;LT6804.c: 458: int temp_pec;
  6032                           ;LT6804.c: 461: if (reg == 1)
  6033                           
  6034                           ;incstack = 0
  6035  000B06  0422               	decf	LTC6804_rdcv_reg@reg,w,c
  6036  000B08  1023               	iorwf	LTC6804_rdcv_reg@reg+1,w,c
  6037  000B0A  A4D8               	btfss	status,2,c
  6038  000B0C  D004               	goto	l5479
  6039                           
  6040                           ;LT6804.c: 462: {
  6041                           ;LT6804.c: 463: cmd[1] = 0x04;
  6042  000B0E  0E00               	movlw	0
  6043  000B10  6E2F               	movwf	LTC6804_rdcv_reg@cmd+3,c
  6044  000B12  0E04               	movlw	4
  6045  000B14  D01A               	goto	L13
  6046  000B16                     l5479:
  6047                           
  6048                           ;LT6804.c: 466: else if(reg == 2)
  6049  000B16  0E02               	movlw	2
  6050  000B18  1822               	xorwf	LTC6804_rdcv_reg@reg,w,c
  6051  000B1A  1023               	iorwf	LTC6804_rdcv_reg@reg+1,w,c
  6052  000B1C  A4D8               	btfss	status,2,c
  6053  000B1E  D004               	goto	l5483
  6054                           
  6055                           ;LT6804.c: 467: {
  6056                           ;LT6804.c: 468: cmd[1] = 0x06;
  6057  000B20  0E00               	movlw	0
  6058  000B22  6E2F               	movwf	LTC6804_rdcv_reg@cmd+3,c
  6059  000B24  0E06               	movlw	6
  6060  000B26  D011               	goto	L13
  6061  000B28                     l5483:
  6062                           
  6063                           ;LT6804.c: 471: else if(reg == 3)
  6064  000B28  0E03               	movlw	3
  6065  000B2A  1822               	xorwf	LTC6804_rdcv_reg@reg,w,c
  6066  000B2C  1023               	iorwf	LTC6804_rdcv_reg@reg+1,w,c
  6067  000B2E  A4D8               	btfss	status,2,c
  6068  000B30  D004               	goto	l5487
  6069                           
  6070                           ;LT6804.c: 472: {
  6071                           ;LT6804.c: 473: cmd[1] = 0x08;
  6072  000B32  0E00               	movlw	0
  6073  000B34  6E2F               	movwf	LTC6804_rdcv_reg@cmd+3,c
  6074  000B36  0E08               	movlw	8
  6075  000B38  D008               	goto	L13
  6076  000B3A                     l5487:
  6077                           
  6078                           ;LT6804.c: 476: else if(reg == 4)
  6079  000B3A  0E04               	movlw	4
  6080  000B3C  1822               	xorwf	LTC6804_rdcv_reg@reg,w,c
  6081  000B3E  1023               	iorwf	LTC6804_rdcv_reg@reg+1,w,c
  6082  000B40  A4D8               	btfss	status,2,c
  6083  000B42  D008               	goto	l5491
  6084                           
  6085                           ;LT6804.c: 477: {
  6086                           ;LT6804.c: 478: cmd[1] = 0x0A;
  6087  000B44  0E00               	movlw	0
  6088  000B46  6E2F               	movwf	LTC6804_rdcv_reg@cmd+3,c
  6089  000B48  0E0A               	movlw	10
  6090  000B4A                     L13:
  6091  000B4A  6E2E               	movwf	LTC6804_rdcv_reg@cmd+2,c
  6092                           
  6093                           ;LT6804.c: 479: cmd[0] = 0x00;
  6094  000B4C  0E00               	movlw	0
  6095  000B4E  6E2D               	movwf	LTC6804_rdcv_reg@cmd+1,c
  6096  000B50  0E00               	movlw	0
  6097  000B52  6E2C               	movwf	LTC6804_rdcv_reg@cmd,c
  6098  000B54                     l5491:
  6099                           
  6100                           ;LT6804.c: 480: }
  6101                           ;LT6804.c: 486: wakeup_idle ();
  6102  000B54  ECE9  F00A         	call	_wakeup_idle	;wreg free
  6103                           
  6104                           ;LT6804.c: 487: LATD3 = 1;
  6105  000B58  868C               	bsf	3980,3,c	;volatile
  6106                           
  6107                           ;LT6804.c: 489: for(current_ic = 0; current_ic<total_ic; current_ic++)
  6108  000B5A  0E00               	movlw	0
  6109  000B5C  6E4E               	movwf	_current_ic+1,c
  6110  000B5E  0E00               	movlw	0
  6111  000B60  6E4D               	movwf	_current_ic,c
  6112  000B62  D056               	goto	l5513
  6113  000B64                     l5497:
  6114                           
  6115                           ;LT6804.c: 490: {
  6116                           ;LT6804.c: 491: cmd[0] = 0x80 + (current_ic<<3);
  6117  000B64  C04D  F028         	movff	_current_ic,??_LTC6804_rdcv_reg
  6118  000B68  C04E  F029         	movff	_current_ic+1,??_LTC6804_rdcv_reg+1
  6119  000B6C  90D8               	bcf	status,0,c
  6120  000B6E  3628               	rlcf	??_LTC6804_rdcv_reg,f,c
  6121  000B70  3629               	rlcf	??_LTC6804_rdcv_reg+1,f,c
  6122  000B72  90D8               	bcf	status,0,c
  6123  000B74  3628               	rlcf	??_LTC6804_rdcv_reg,f,c
  6124  000B76  3629               	rlcf	??_LTC6804_rdcv_reg+1,f,c
  6125  000B78  90D8               	bcf	status,0,c
  6126  000B7A  3628               	rlcf	??_LTC6804_rdcv_reg,f,c
  6127  000B7C  3629               	rlcf	??_LTC6804_rdcv_reg+1,f,c
  6128  000B7E  0E80               	movlw	128
  6129  000B80  2428               	addwf	??_LTC6804_rdcv_reg,w,c
  6130  000B82  6E2C               	movwf	LTC6804_rdcv_reg@cmd,c
  6131  000B84  0E00               	movlw	0
  6132  000B86  2029               	addwfc	??_LTC6804_rdcv_reg+1,w,c
  6133  000B88  6E2D               	movwf	LTC6804_rdcv_reg@cmd+1,c
  6134                           
  6135                           ;LT6804.c: 492: temp_pec = pec15_calc(2, cmd);
  6136  000B8A  0E00               	movlw	0
  6137  000B8C  6E16               	movwf	pec15_calc@len+1,c
  6138  000B8E  0E02               	movlw	2
  6139  000B90  6E15               	movwf	pec15_calc@len,c
  6140  000B92  0E2C               	movlw	low LTC6804_rdcv_reg@cmd
  6141  000B94  6E17               	movwf	pec15_calc@data,c
  6142  000B96  0E00               	movlw	high LTC6804_rdcv_reg@cmd
  6143  000B98  6E18               	movwf	pec15_calc@data+1,c
  6144  000B9A  EC10  F007         	call	_pec15_calc	;wreg free
  6145  000B9E  C015  F02A         	movff	?_pec15_calc,LTC6804_rdcv_reg@temp_pec
  6146  000BA2  C016  F02B         	movff	?_pec15_calc+1,LTC6804_rdcv_reg@temp_pec+1
  6147                           
  6148                           ;LT6804.c: 493: cmd[2] = (int)(temp_pec >> 8);
  6149  000BA6  C02B  F028         	movff	LTC6804_rdcv_reg@temp_pec+1,??_LTC6804_rdcv_reg
  6150  000BAA  6A29               	clrf	(??_LTC6804_rdcv_reg+1)& (0+255),c
  6151  000BAC  BE28               	btfsc	??_LTC6804_rdcv_reg& (0+255),7,c
  6152  000BAE  6829               	setf	(??_LTC6804_rdcv_reg+1)& (0+255),c
  6153  000BB0  C028  F030         	movff	??_LTC6804_rdcv_reg,LTC6804_rdcv_reg@cmd+4
  6154  000BB4  C029  F031         	movff	??_LTC6804_rdcv_reg+1,LTC6804_rdcv_reg@cmd+5
  6155                           
  6156                           ;LT6804.c: 494: cmd[3] = (int)(temp_pec);
  6157  000BB8  C02A  F032         	movff	LTC6804_rdcv_reg@temp_pec,LTC6804_rdcv_reg@cmd+6
  6158  000BBC  C02B  F033         	movff	LTC6804_rdcv_reg@temp_pec+1,LTC6804_rdcv_reg@cmd+7
  6159                           
  6160                           ;LT6804.c: 495: LATD3 = 0;
  6161  000BC0  968C               	bcf	3980,3,c	;volatile
  6162                           
  6163                           ;LT6804.c: 496: spi_write_read(cmd,4,&data[current_ic*8],8);
  6164  000BC2  0E2C               	movlw	low LTC6804_rdcv_reg@cmd
  6165  000BC4  6E10               	movwf	spi_write_read@tx_Data,c
  6166  000BC6  0E00               	movlw	high LTC6804_rdcv_reg@cmd
  6167  000BC8  6E11               	movwf	spi_write_read@tx_Data+1,c
  6168  000BCA  0E00               	movlw	0
  6169  000BCC  6E13               	movwf	spi_write_read@tx_len+1,c
  6170  000BCE  0E04               	movlw	4
  6171  000BD0  6E12               	movwf	spi_write_read@tx_len,c
  6172  000BD2  C04D  F028         	movff	_current_ic,??_LTC6804_rdcv_reg
  6173  000BD6  C04E  F029         	movff	_current_ic+1,??_LTC6804_rdcv_reg+1
  6174  000BDA  90D8               	bcf	status,0,c
  6175  000BDC  3628               	rlcf	??_LTC6804_rdcv_reg,f,c
  6176  000BDE  3629               	rlcf	??_LTC6804_rdcv_reg+1,f,c
  6177  000BE0  90D8               	bcf	status,0,c
  6178  000BE2  3628               	rlcf	??_LTC6804_rdcv_reg,f,c
  6179  000BE4  3629               	rlcf	??_LTC6804_rdcv_reg+1,f,c
  6180  000BE6  90D8               	bcf	status,0,c
  6181  000BE8  3628               	rlcf	??_LTC6804_rdcv_reg,f,c
  6182  000BEA  3629               	rlcf	??_LTC6804_rdcv_reg+1,f,c
  6183  000BEC  90D8               	bcf	status,0,c
  6184  000BEE  3628               	rlcf	??_LTC6804_rdcv_reg,f,c
  6185  000BF0  3629               	rlcf	??_LTC6804_rdcv_reg+1,f,c
  6186  000BF2  5028               	movf	??_LTC6804_rdcv_reg,w,c
  6187  000BF4  2426               	addwf	LTC6804_rdcv_reg@data,w,c
  6188  000BF6  6E14               	movwf	spi_write_read@rx_data,c
  6189  000BF8  5029               	movf	??_LTC6804_rdcv_reg+1,w,c
  6190  000BFA  2027               	addwfc	LTC6804_rdcv_reg@data+1,w,c
  6191  000BFC  6E15               	movwf	spi_write_read@rx_data+1,c
  6192  000BFE  0E00               	movlw	0
  6193  000C00  6E17               	movwf	spi_write_read@rx_len+1,c
  6194  000C02  0E08               	movlw	8
  6195  000C04  6E16               	movwf	spi_write_read@rx_len,c
  6196  000C06  ECA8  F007         	call	_spi_write_read	;wreg free
  6197                           
  6198                           ;LT6804.c: 497: LATD3 = 1;
  6199  000C0A  868C               	bsf	3980,3,c	;volatile
  6200  000C0C  4A4D               	infsnz	_current_ic,f,c
  6201  000C0E  2A4E               	incf	_current_ic+1,f,c
  6202  000C10                     l5513:
  6203  000C10  5024               	movf	LTC6804_rdcv_reg@total_ic,w,c
  6204  000C12  5C4D               	subwf	_current_ic,w,c
  6205  000C14  504E               	movf	_current_ic+1,w,c
  6206  000C16  0A80               	xorlw	128
  6207  000C18  6E28               	movwf	??_LTC6804_rdcv_reg& (0+255),c
  6208  000C1A  5025               	movf	LTC6804_rdcv_reg@total_ic+1,w,c
  6209  000C1C  0A80               	xorlw	128
  6210  000C1E  5828               	subwfb	??_LTC6804_rdcv_reg& (0+255),w,c
  6211  000C20  B0D8               	btfsc	status,0,c
  6212  000C22  0012               	return	
  6213  000C24  D79F               	goto	l5497
  6214  000C26                     __end_of_LTC6804_rdcv_reg:
  6215                           	opt stack 0
  6216                           tblptru	equ	0xFF8
  6217                           tblptrh	equ	0xFF7
  6218                           tblptrl	equ	0xFF6
  6219                           tablat	equ	0xFF5
  6220                           prodh	equ	0xFF4
  6221                           prodl	equ	0xFF3
  6222                           intcon	equ	0xFF2
  6223                           intcon2	equ	0xFF1
  6224                           postinc0	equ	0xFEE
  6225                           wreg	equ	0xFE8
  6226                           postinc1	equ	0xFE6
  6227                           postdec1	equ	0xFE5
  6228                           fsr1h	equ	0xFE2
  6229                           fsr1l	equ	0xFE1
  6230                           indf2	equ	0xFDF
  6231                           postinc2	equ	0xFDE
  6232                           postdec2	equ	0xFDD
  6233                           fsr2h	equ	0xFDA
  6234                           fsr2l	equ	0xFD9
  6235                           status	equ	0xFD8
  6236                           
  6237 ;; *************** function _wakeup_idle *****************
  6238 ;; Defined at:
  6239 ;;		line 1140 in file "LT6804.c"
  6240 ;; Parameters:    Size  Location     Type
  6241 ;;		None
  6242 ;; Auto vars:     Size  Location     Type
  6243 ;;		None
  6244 ;; Return value:  Size  Location     Type
  6245 ;;		None               void
  6246 ;; Registers used:
  6247 ;;		wreg, status,2, status,0, cstack
  6248 ;; Tracked objects:
  6249 ;;		On entry : 0/0
  6250 ;;		On exit  : 0/0
  6251 ;;		Unchanged: 0/0
  6252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6253 ;;      Params:         0       0       0       0       0       0       0
  6254 ;;      Locals:         0       0       0       0       0       0       0
  6255 ;;      Temps:          0       0       0       0       0       0       0
  6256 ;;      Totals:         0       0       0       0       0       0       0
  6257 ;;Total ram usage:        0 bytes
  6258 ;; Hardware stack levels used:    1
  6259 ;; Hardware stack levels required when called:    4
  6260 ;; This function calls:
  6261 ;;		_DelayMicro
  6262 ;; This function is called by:
  6263 ;;		_LTC6804_rdcv_reg
  6264 ;;		_LTC6804_wrcfg
  6265 ;;		_LTC6804_adax
  6266 ;;		_LTC6804_ADSTAT
  6267 ;;		_LTC6804_rdaux_reg
  6268 ;;		_LTC6804_rdStat_reg
  6269 ;;		_LTC6804_clrcell
  6270 ;;		_LTC6804_clraux
  6271 ;;		_LTC6804_rdcfg
  6272 ;; This function uses a non-reentrant model
  6273 ;;
  6274                           
  6275                           	psect	text31
  6276  0015D2                     __ptext31:
  6277                           	opt stack 0
  6278  0015D2                     _wakeup_idle:
  6279                           	opt stack 22
  6280                           
  6281                           ;LT6804.c: 1143: LATD3 = 0;
  6282                           
  6283                           ;incstack = 0
  6284  0015D2  968C               	bcf	3980,3,c	;volatile
  6285                           
  6286                           ;LT6804.c: 1145: DelayMicro(10);
  6287  0015D4  0E00               	movlw	0
  6288  0015D6  6E10               	movwf	DelayMicro@wait+1,c
  6289  0015D8  0E0A               	movlw	10
  6290  0015DA  6E0F               	movwf	DelayMicro@wait,c
  6291  0015DC  EC86  F00A         	call	_DelayMicro	;wreg free
  6292                           
  6293                           ;LT6804.c: 1146: LATD3 = 1;
  6294  0015E0  868C               	bsf	3980,3,c	;volatile
  6295  0015E2  0012               	return		;funcret
  6296  0015E4                     __end_of_wakeup_idle:
  6297                           	opt stack 0
  6298                           tblptru	equ	0xFF8
  6299                           tblptrh	equ	0xFF7
  6300                           tblptrl	equ	0xFF6
  6301                           tablat	equ	0xFF5
  6302                           prodh	equ	0xFF4
  6303                           prodl	equ	0xFF3
  6304                           intcon	equ	0xFF2
  6305                           intcon2	equ	0xFF1
  6306                           postinc0	equ	0xFEE
  6307                           wreg	equ	0xFE8
  6308                           postinc1	equ	0xFE6
  6309                           postdec1	equ	0xFE5
  6310                           fsr1h	equ	0xFE2
  6311                           fsr1l	equ	0xFE1
  6312                           indf2	equ	0xFDF
  6313                           postinc2	equ	0xFDE
  6314                           postdec2	equ	0xFDD
  6315                           fsr2h	equ	0xFDA
  6316                           fsr2l	equ	0xFD9
  6317                           status	equ	0xFD8
  6318                           
  6319 ;; *************** function _DelayMicro *****************
  6320 ;; Defined at:
  6321 ;;		line 17 in file "Functions.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;  wait            2   14[COMRAM] int 
  6324 ;; Auto vars:     Size  Location     Type
  6325 ;;  x               2   17[COMRAM] int 
  6326 ;; Return value:  Size  Location     Type
  6327 ;;		None               void
  6328 ;; Registers used:
  6329 ;;		wreg, status,2, status,0
  6330 ;; Tracked objects:
  6331 ;;		On entry : 0/0
  6332 ;;		On exit  : 0/0
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6335 ;;      Params:         2       0       0       0       0       0       0
  6336 ;;      Locals:         2       0       0       0       0       0       0
  6337 ;;      Temps:          1       0       0       0       0       0       0
  6338 ;;      Totals:         5       0       0       0       0       0       0
  6339 ;;Total ram usage:        5 bytes
  6340 ;; Hardware stack levels used:    1
  6341 ;; Hardware stack levels required when called:    3
  6342 ;; This function calls:
  6343 ;;		Nothing
  6344 ;; This function is called by:
  6345 ;;		_wakeup_idle
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349                           	psect	text32
  6350  00150C                     __ptext32:
  6351                           	opt stack 0
  6352  00150C                     _DelayMicro:
  6353                           	opt stack 22
  6354                           
  6355                           ;Functions.c: 19: int x;
  6356                           ;Functions.c: 20: for(x = 0;x<wait;x++)
  6357                           
  6358                           ;incstack = 0
  6359  00150C  0E00               	movlw	0
  6360  00150E  6E13               	movwf	DelayMicro@x+1,c
  6361  001510  0E00               	movlw	0
  6362  001512  6E12               	movwf	DelayMicro@x,c
  6363  001514  D004               	goto	l5363
  6364  001516                     l314:
  6365                           
  6366                           ;Functions.c: 21: {
  6367                           ;Functions.c: 22: _delay((unsigned long)((1)*(16000000/4000000.0)));
  6368  001516  D000               	nop2		;2 cycle nop
  6369  001518  D000               	nop2		;2 cycle nop
  6370  00151A  4A12               	infsnz	DelayMicro@x,f,c
  6371  00151C  2A13               	incf	DelayMicro@x+1,f,c
  6372  00151E                     l5363:
  6373  00151E  500F               	movf	DelayMicro@wait,w,c
  6374  001520  5C12               	subwf	DelayMicro@x,w,c
  6375  001522  5013               	movf	DelayMicro@x+1,w,c
  6376  001524  0A80               	xorlw	128
  6377  001526  6E11               	movwf	??_DelayMicro& (0+255),c
  6378  001528  5010               	movf	DelayMicro@wait+1,w,c
  6379  00152A  0A80               	xorlw	128
  6380  00152C  5811               	subwfb	??_DelayMicro& (0+255),w,c
  6381  00152E  B0D8               	btfsc	status,0,c
  6382  001530  0012               	return	
  6383  001532  D7F1               	goto	l314
  6384  001534                     __end_of_DelayMicro:
  6385                           	opt stack 0
  6386                           tblptru	equ	0xFF8
  6387                           tblptrh	equ	0xFF7
  6388                           tblptrl	equ	0xFF6
  6389                           tablat	equ	0xFF5
  6390                           prodh	equ	0xFF4
  6391                           prodl	equ	0xFF3
  6392                           intcon	equ	0xFF2
  6393                           intcon2	equ	0xFF1
  6394                           postinc0	equ	0xFEE
  6395                           wreg	equ	0xFE8
  6396                           postinc1	equ	0xFE6
  6397                           postdec1	equ	0xFE5
  6398                           fsr1h	equ	0xFE2
  6399                           fsr1l	equ	0xFE1
  6400                           indf2	equ	0xFDF
  6401                           postinc2	equ	0xFDE
  6402                           postdec2	equ	0xFDD
  6403                           fsr2h	equ	0xFDA
  6404                           fsr2l	equ	0xFD9
  6405                           status	equ	0xFD8
  6406                           
  6407 ;; *************** function _spi_write_read *****************
  6408 ;; Defined at:
  6409 ;;		line 1219 in file "LT6804.c"
  6410 ;; Parameters:    Size  Location     Type
  6411 ;;  tx_Data         2   15[COMRAM] PTR int 
  6412 ;;		 -> LTC6804_rdcfg@cmd(8), LTC6804_clrcell@cmd(8), LTC6804_rdStat_reg@cmd(8), LTC6804_rdaux_reg@cmd(8), 
  6413 ;;		 -> LTC6804_rdcv_reg@cmd(8), 
  6414 ;;  tx_len          2   17[COMRAM] int 
  6415 ;;  rx_data         2   19[COMRAM] PTR int 
  6416 ;;		 -> RAM(1535), LTC6804_rdStat@data(150), LTC6804_rdcv@cell_data(240), NULL(0), 
  6417 ;;  rx_len          2   21[COMRAM] int 
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;  i               2   25[COMRAM] int 
  6420 ;; Return value:  Size  Location     Type
  6421 ;;		None               void
  6422 ;; Registers used:
  6423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6424 ;; Tracked objects:
  6425 ;;		On entry : 0/0
  6426 ;;		On exit  : 0/0
  6427 ;;		Unchanged: 0/0
  6428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6429 ;;      Params:         8       0       0       0       0       0       0
  6430 ;;      Locals:         2       0       0       0       0       0       0
  6431 ;;      Temps:          2       0       0       0       0       0       0
  6432 ;;      Totals:        12       0       0       0       0       0       0
  6433 ;;Total ram usage:       12 bytes
  6434 ;; Hardware stack levels used:    1
  6435 ;; Hardware stack levels required when called:    4
  6436 ;; This function calls:
  6437 ;;		_SPI2_Exchange8bit
  6438 ;; This function is called by:
  6439 ;;		_LTC6804_rdcv_reg
  6440 ;;		_LTC6804_rdaux_reg
  6441 ;;		_LTC6804_rdStat_reg
  6442 ;;		_LTC6804_clrcell
  6443 ;;		_LTC6804_rdcfg
  6444 ;; This function uses a non-reentrant model
  6445 ;;
  6446                           
  6447                           	psect	text33
  6448  000F50                     __ptext33:
  6449                           	opt stack 0
  6450  000F50                     _spi_write_read:
  6451                           	opt stack 22
  6452                           
  6453                           ;LT6804.c: 1226: for(i = 0; i < tx_len; i++)
  6454                           
  6455                           ;incstack = 0
  6456  000F50  0E00               	movlw	0
  6457  000F52  6E45               	movwf	_i+1,c
  6458  000F54  0E00               	movlw	0
  6459  000F56  6E44               	movwf	_i,c
  6460  000F58  D00E               	goto	l5399
  6461  000F5A                     l5395:
  6462                           
  6463                           ;LT6804.c: 1227: {
  6464                           ;LT6804.c: 1228: SPI2_Exchange8bit(tx_Data[i]);
  6465  000F5A  90D8               	bcf	status,0,c
  6466  000F5C  3444               	rlcf	_i,w,c
  6467  000F5E  6ED9               	movwf	fsr2l,c
  6468  000F60  3445               	rlcf	_i+1,w,c
  6469  000F62  6EDA               	movwf	fsr2h,c
  6470  000F64  5010               	movf	spi_write_read@tx_Data,w,c
  6471  000F66  26D9               	addwf	fsr2l,f,c
  6472  000F68  5011               	movf	spi_write_read@tx_Data+1,w,c
  6473  000F6A  22DA               	addwfc	fsr2h,f,c
  6474  000F6C  50DF               	movf	indf2,w,c
  6475  000F6E  EC08  F00B         	call	_SPI2_Exchange8bit
  6476  000F72  4A44               	infsnz	_i,f,c
  6477  000F74  2A45               	incf	_i+1,f,c
  6478  000F76                     l5399:
  6479  000F76  5012               	movf	spi_write_read@tx_len,w,c
  6480  000F78  5C44               	subwf	_i,w,c
  6481  000F7A  5045               	movf	_i+1,w,c
  6482  000F7C  0A80               	xorlw	128
  6483  000F7E  6E18               	movwf	??_spi_write_read& (0+255),c
  6484  000F80  5013               	movf	spi_write_read@tx_len+1,w,c
  6485  000F82  0A80               	xorlw	128
  6486  000F84  5818               	subwfb	??_spi_write_read& (0+255),w,c
  6487  000F86  A0D8               	btfss	status,0,c
  6488  000F88  D7E8               	goto	l5395
  6489                           
  6490                           ;LT6804.c: 1230: }
  6491                           ;LT6804.c: 1232: for(int i = 0; i < rx_len; i++)
  6492  000F8A  0E00               	movlw	0
  6493  000F8C  6E1B               	movwf	spi_write_read@i+1,c
  6494  000F8E  0E00               	movlw	0
  6495  000F90  6E1A               	movwf	spi_write_read@i,c
  6496  000F92  D014               	goto	l5407
  6497  000F94                     l5403:
  6498                           
  6499                           ;LT6804.c: 1233: {
  6500                           ;LT6804.c: 1234: rx_data[i] =SPI2_Exchange8bit(0xFF);
  6501  000F94  0EFF               	movlw	255
  6502  000F96  EC08  F00B         	call	_SPI2_Exchange8bit
  6503  000F9A  6E18               	movwf	??_spi_write_read& (0+255),c
  6504  000F9C  6A19               	clrf	(??_spi_write_read+1)& (0+255),c
  6505  000F9E  90D8               	bcf	status,0,c
  6506  000FA0  341A               	rlcf	spi_write_read@i,w,c
  6507  000FA2  6ED9               	movwf	fsr2l,c
  6508  000FA4  341B               	rlcf	spi_write_read@i+1,w,c
  6509  000FA6  6EDA               	movwf	fsr2h,c
  6510  000FA8  5014               	movf	spi_write_read@rx_data,w,c
  6511  000FAA  26D9               	addwf	fsr2l,f,c
  6512  000FAC  5015               	movf	spi_write_read@rx_data+1,w,c
  6513  000FAE  22DA               	addwfc	fsr2h,f,c
  6514  000FB0  C018  FFDE         	movff	??_spi_write_read,postinc2
  6515  000FB4  C019  FFDD         	movff	??_spi_write_read+1,postdec2
  6516  000FB8  4A1A               	infsnz	spi_write_read@i,f,c
  6517  000FBA  2A1B               	incf	spi_write_read@i+1,f,c
  6518  000FBC                     l5407:
  6519  000FBC  5016               	movf	spi_write_read@rx_len,w,c
  6520  000FBE  5C1A               	subwf	spi_write_read@i,w,c
  6521  000FC0  501B               	movf	spi_write_read@i+1,w,c
  6522  000FC2  0A80               	xorlw	128
  6523  000FC4  6E18               	movwf	??_spi_write_read& (0+255),c
  6524  000FC6  5017               	movf	spi_write_read@rx_len+1,w,c
  6525  000FC8  0A80               	xorlw	128
  6526  000FCA  5818               	subwfb	??_spi_write_read& (0+255),w,c
  6527  000FCC  B0D8               	btfsc	status,0,c
  6528  000FCE  0012               	return	
  6529  000FD0  D7E1               	goto	l5403
  6530  000FD2                     __end_of_spi_write_read:
  6531                           	opt stack 0
  6532                           tblptru	equ	0xFF8
  6533                           tblptrh	equ	0xFF7
  6534                           tblptrl	equ	0xFF6
  6535                           tablat	equ	0xFF5
  6536                           prodh	equ	0xFF4
  6537                           prodl	equ	0xFF3
  6538                           intcon	equ	0xFF2
  6539                           intcon2	equ	0xFF1
  6540                           postinc0	equ	0xFEE
  6541                           wreg	equ	0xFE8
  6542                           postinc1	equ	0xFE6
  6543                           postdec1	equ	0xFE5
  6544                           fsr1h	equ	0xFE2
  6545                           fsr1l	equ	0xFE1
  6546                           indf2	equ	0xFDF
  6547                           postinc2	equ	0xFDE
  6548                           postdec2	equ	0xFDD
  6549                           fsr2h	equ	0xFDA
  6550                           fsr2l	equ	0xFD9
  6551                           status	equ	0xFD8
  6552                           
  6553 ;; *************** function _LTC6804_adcv *****************
  6554 ;; Defined at:
  6555 ;;		line 177 in file "LT6804.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;		None
  6558 ;; Auto vars:     Size  Location     Type
  6559 ;;  cmd             8   35[COMRAM] int [4]
  6560 ;;  temp_pec        2   43[COMRAM] int 
  6561 ;; Return value:  Size  Location     Type
  6562 ;;		None               void
  6563 ;; Registers used:
  6564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6565 ;; Tracked objects:
  6566 ;;		On entry : 0/0
  6567 ;;		On exit  : 0/0
  6568 ;;		Unchanged: 0/0
  6569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6570 ;;      Params:         0       0       0       0       0       0       0
  6571 ;;      Locals:        10       0       0       0       0       0       0
  6572 ;;      Temps:          2       0       0       0       0       0       0
  6573 ;;      Totals:        12       0       0       0       0       0       0
  6574 ;;Total ram usage:       12 bytes
  6575 ;; Hardware stack levels used:    1
  6576 ;; Hardware stack levels required when called:    5
  6577 ;; This function calls:
  6578 ;;		_SPI2_Exchange8bit
  6579 ;;		_pec15_calc
  6580 ;;		_spi_write_array
  6581 ;; This function is called by:
  6582 ;;		_Read_Battery
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586                           	psect	text34
  6587  001052                     __ptext34:
  6588                           	opt stack 0
  6589  001052                     _LTC6804_adcv:
  6590                           	opt stack 23
  6591                           
  6592                           ;LT6804.c: 180: int cmd[4];
  6593                           ;LT6804.c: 181: int temp_pec;
  6594                           ;LT6804.c: 184: cmd[0] = ADCV[0];
  6595                           
  6596                           ;incstack = 0
  6597  001052  C0D5  F024         	movff	_ADCV,LTC6804_adcv@cmd
  6598  001056  C0D6  F025         	movff	_ADCV+1,LTC6804_adcv@cmd+1
  6599                           
  6600                           ;LT6804.c: 185: cmd[1] = ADCV[1];
  6601  00105A  C0D7  F026         	movff	_ADCV+2,LTC6804_adcv@cmd+2
  6602  00105E  C0D8  F027         	movff	_ADCV+3,LTC6804_adcv@cmd+3
  6603                           
  6604                           ;LT6804.c: 188: temp_pec = pec15_calc(2, ADCV);
  6605  001062  0E00               	movlw	0
  6606  001064  6E16               	movwf	pec15_calc@len+1,c
  6607  001066  0E02               	movlw	2
  6608  001068  6E15               	movwf	pec15_calc@len,c
  6609  00106A  0ED5               	movlw	low _ADCV
  6610  00106C  6E17               	movwf	pec15_calc@data,c
  6611  00106E  0E00               	movlw	high _ADCV
  6612  001070  6E18               	movwf	pec15_calc@data+1,c
  6613  001072  EC10  F007         	call	_pec15_calc	;wreg free
  6614  001076  C015  F02C         	movff	?_pec15_calc,LTC6804_adcv@temp_pec
  6615  00107A  C016  F02D         	movff	?_pec15_calc+1,LTC6804_adcv@temp_pec+1
  6616                           
  6617                           ;LT6804.c: 189: cmd[2] = (int)(temp_pec >> 8);
  6618  00107E  C02D  F022         	movff	LTC6804_adcv@temp_pec+1,??_LTC6804_adcv
  6619  001082  6A23               	clrf	(??_LTC6804_adcv+1)& (0+255),c
  6620  001084  BE22               	btfsc	??_LTC6804_adcv& (0+255),7,c
  6621  001086  6823               	setf	(??_LTC6804_adcv+1)& (0+255),c
  6622  001088  C022  F028         	movff	??_LTC6804_adcv,LTC6804_adcv@cmd+4
  6623  00108C  C023  F029         	movff	??_LTC6804_adcv+1,LTC6804_adcv@cmd+5
  6624                           
  6625                           ;LT6804.c: 190: cmd[3] = (int)(temp_pec);
  6626  001090  C02C  F02A         	movff	LTC6804_adcv@temp_pec,LTC6804_adcv@cmd+6
  6627  001094  C02D  F02B         	movff	LTC6804_adcv@temp_pec+1,LTC6804_adcv@cmd+7
  6628                           
  6629                           ;LT6804.c: 193: LATD3 = 0;
  6630  001098  968C               	bcf	3980,3,c	;volatile
  6631                           
  6632                           ;LT6804.c: 194: SPI2_Exchange8bit(0);
  6633  00109A  0E00               	movlw	0
  6634  00109C  EC08  F00B         	call	_SPI2_Exchange8bit
  6635                           
  6636                           ;LT6804.c: 195: LATD3 = 1;
  6637  0010A0  868C               	bsf	3980,3,c	;volatile
  6638                           
  6639                           ;LT6804.c: 199: LATD3 = 0;
  6640  0010A2  968C               	bcf	3980,3,c	;volatile
  6641                           
  6642                           ;LT6804.c: 200: spi_write_array(4,cmd);
  6643  0010A4  0E00               	movlw	0
  6644  0010A6  6E11               	movwf	spi_write_array@len+1,c
  6645  0010A8  0E04               	movlw	4
  6646  0010AA  6E10               	movwf	spi_write_array@len,c
  6647  0010AC  0E24               	movlw	low LTC6804_adcv@cmd
  6648  0010AE  6E12               	movwf	spi_write_array@data,c
  6649  0010B0  0E00               	movlw	high LTC6804_adcv@cmd
  6650  0010B2  6E13               	movwf	spi_write_array@data+1,c
  6651  0010B4  ECCF  F009         	call	_spi_write_array	;wreg free
  6652                           
  6653                           ;LT6804.c: 201: LATD3 = 1;
  6654  0010B8  868C               	bsf	3980,3,c	;volatile
  6655  0010BA  0012               	return		;funcret
  6656  0010BC                     __end_of_LTC6804_adcv:
  6657                           	opt stack 0
  6658                           tblptru	equ	0xFF8
  6659                           tblptrh	equ	0xFF7
  6660                           tblptrl	equ	0xFF6
  6661                           tablat	equ	0xFF5
  6662                           prodh	equ	0xFF4
  6663                           prodl	equ	0xFF3
  6664                           intcon	equ	0xFF2
  6665                           intcon2	equ	0xFF1
  6666                           postinc0	equ	0xFEE
  6667                           wreg	equ	0xFE8
  6668                           postinc1	equ	0xFE6
  6669                           postdec1	equ	0xFE5
  6670                           fsr1h	equ	0xFE2
  6671                           fsr1l	equ	0xFE1
  6672                           indf2	equ	0xFDF
  6673                           postinc2	equ	0xFDE
  6674                           postdec2	equ	0xFDD
  6675                           fsr2h	equ	0xFDA
  6676                           fsr2l	equ	0xFD9
  6677                           status	equ	0xFD8
  6678                           
  6679 ;; *************** function _spi_write_array *****************
  6680 ;; Defined at:
  6681 ;;		line 1200 in file "LT6804.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;  len             2   15[COMRAM] int 
  6684 ;;  data            2   17[COMRAM] PTR int 
  6685 ;;		 -> LTC6804_wrcfg@cmd(200), LTC6804_ADSTAT@cmd(8), LTC6804_adax@cmd(8), LTC6804_adcv@cmd(8), 
  6686 ;;		 -> NULL(0), 
  6687 ;; Auto vars:     Size  Location     Type
  6688 ;;		None
  6689 ;; Return value:  Size  Location     Type
  6690 ;;		None               void
  6691 ;; Registers used:
  6692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/0
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6698 ;;      Params:         4       0       0       0       0       0       0
  6699 ;;      Locals:         0       0       0       0       0       0       0
  6700 ;;      Temps:          1       0       0       0       0       0       0
  6701 ;;      Totals:         5       0       0       0       0       0       0
  6702 ;;Total ram usage:        5 bytes
  6703 ;; Hardware stack levels used:    1
  6704 ;; Hardware stack levels required when called:    4
  6705 ;; This function calls:
  6706 ;;		_SPI2_Exchange8bit
  6707 ;; This function is called by:
  6708 ;;		_LTC6804_adcv
  6709 ;;		_LTC6804_wrcfg
  6710 ;;		_wakeup_sleep
  6711 ;;		_LTC6804_adax
  6712 ;;		_LTC6804_ADSTAT
  6713 ;; This function uses a non-reentrant model
  6714 ;;
  6715                           
  6716                           	psect	text35
  6717  00139E                     __ptext35:
  6718                           	opt stack 0
  6719  00139E                     _spi_write_array:
  6720                           	opt stack 23
  6721                           
  6722                           ;LT6804.c: 1204: for(i = 0; i < len; i++)
  6723                           
  6724                           ;incstack = 0
  6725  00139E  0E00               	movlw	0
  6726  0013A0  6E45               	movwf	_i+1,c
  6727  0013A2  0E00               	movlw	0
  6728  0013A4  6E44               	movwf	_i,c
  6729  0013A6  D00E               	goto	l5385
  6730  0013A8                     l5381:
  6731                           
  6732                           ;LT6804.c: 1205: {
  6733                           ;LT6804.c: 1206: SPI2_Exchange8bit((char)data[i]);
  6734  0013A8  90D8               	bcf	status,0,c
  6735  0013AA  3444               	rlcf	_i,w,c
  6736  0013AC  6ED9               	movwf	fsr2l,c
  6737  0013AE  3445               	rlcf	_i+1,w,c
  6738  0013B0  6EDA               	movwf	fsr2h,c
  6739  0013B2  5012               	movf	spi_write_array@data,w,c
  6740  0013B4  26D9               	addwf	fsr2l,f,c
  6741  0013B6  5013               	movf	spi_write_array@data+1,w,c
  6742  0013B8  22DA               	addwfc	fsr2h,f,c
  6743  0013BA  50DF               	movf	indf2,w,c
  6744  0013BC  EC08  F00B         	call	_SPI2_Exchange8bit
  6745  0013C0  4A44               	infsnz	_i,f,c
  6746  0013C2  2A45               	incf	_i+1,f,c
  6747  0013C4                     l5385:
  6748  0013C4  5010               	movf	spi_write_array@len,w,c
  6749  0013C6  5C44               	subwf	_i,w,c
  6750  0013C8  5045               	movf	_i+1,w,c
  6751  0013CA  0A80               	xorlw	128
  6752  0013CC  6E14               	movwf	??_spi_write_array& (0+255),c
  6753  0013CE  5011               	movf	spi_write_array@len+1,w,c
  6754  0013D0  0A80               	xorlw	128
  6755  0013D2  5814               	subwfb	??_spi_write_array& (0+255),w,c
  6756  0013D4  B0D8               	btfsc	status,0,c
  6757  0013D6  0012               	return	
  6758  0013D8  D7E7               	goto	l5381
  6759  0013DA                     __end_of_spi_write_array:
  6760                           	opt stack 0
  6761                           tblptru	equ	0xFF8
  6762                           tblptrh	equ	0xFF7
  6763                           tblptrl	equ	0xFF6
  6764                           tablat	equ	0xFF5
  6765                           prodh	equ	0xFF4
  6766                           prodl	equ	0xFF3
  6767                           intcon	equ	0xFF2
  6768                           intcon2	equ	0xFF1
  6769                           postinc0	equ	0xFEE
  6770                           wreg	equ	0xFE8
  6771                           postinc1	equ	0xFE6
  6772                           postdec1	equ	0xFE5
  6773                           fsr1h	equ	0xFE2
  6774                           fsr1l	equ	0xFE1
  6775                           indf2	equ	0xFDF
  6776                           postinc2	equ	0xFDE
  6777                           postdec2	equ	0xFDD
  6778                           fsr2h	equ	0xFDA
  6779                           fsr2l	equ	0xFD9
  6780                           status	equ	0xFD8
  6781                           
  6782 ;; *************** function _SPI2_Exchange8bit *****************
  6783 ;; Defined at:
  6784 ;;		line 78 in file "mcc_generated_files/spi2.c"
  6785 ;; Parameters:    Size  Location     Type
  6786 ;;  stuff           1    wreg     unsigned char 
  6787 ;; Auto vars:     Size  Location     Type
  6788 ;;  stuff           1   14[COMRAM] unsigned char 
  6789 ;; Return value:  Size  Location     Type
  6790 ;;                  1    wreg      unsigned char 
  6791 ;; Registers used:
  6792 ;;		wreg, status,2
  6793 ;; Tracked objects:
  6794 ;;		On entry : 0/0
  6795 ;;		On exit  : 0/0
  6796 ;;		Unchanged: 0/0
  6797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6798 ;;      Params:         0       0       0       0       0       0       0
  6799 ;;      Locals:         1       0       0       0       0       0       0
  6800 ;;      Temps:          0       0       0       0       0       0       0
  6801 ;;      Totals:         1       0       0       0       0       0       0
  6802 ;;Total ram usage:        1 bytes
  6803 ;; Hardware stack levels used:    1
  6804 ;; Hardware stack levels required when called:    3
  6805 ;; This function calls:
  6806 ;;		Nothing
  6807 ;; This function is called by:
  6808 ;;		_LTC6804_adcv
  6809 ;;		_LTC6804_rdcv
  6810 ;;		_spi_write_array
  6811 ;;		_spi_write_read
  6812 ;;		_SPI2_Exchange8bitBuffer
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815                           
  6816                           	psect	text36
  6817  001610                     __ptext36:
  6818                           	opt stack 0
  6819  001610                     _SPI2_Exchange8bit:
  6820                           	opt stack 23
  6821                           
  6822                           ;incstack = 0
  6823                           ;SPI2_Exchange8bit@stuff stored from wreg
  6824  001610  6E0F               	movwf	SPI2_Exchange8bit@stuff,c
  6825                           
  6826                           ;spi2.c: 82: SSP2BUF = stuff;
  6827  001612  C00F  FF6F         	movff	SPI2_Exchange8bit@stuff,3951	;volatile
  6828  001616                     l18:
  6829  001616  A06D               	btfss	3949,0,c	;volatile
  6830  001618  D7FE               	goto	l18
  6831                           
  6832                           ;spi2.c: 86: }
  6833                           ;spi2.c: 88: return (SSP2BUF);
  6834  00161A  506F               	movf	3951,w,c	;volatile
  6835  00161C  0012               	return		;funcret
  6836  00161E                     __end_of_SPI2_Exchange8bit:
  6837                           	opt stack 0
  6838                           tblptru	equ	0xFF8
  6839                           tblptrh	equ	0xFF7
  6840                           tblptrl	equ	0xFF6
  6841                           tablat	equ	0xFF5
  6842                           prodh	equ	0xFF4
  6843                           prodl	equ	0xFF3
  6844                           intcon	equ	0xFF2
  6845                           intcon2	equ	0xFF1
  6846                           postinc0	equ	0xFEE
  6847                           wreg	equ	0xFE8
  6848                           postinc1	equ	0xFE6
  6849                           postdec1	equ	0xFE5
  6850                           fsr1h	equ	0xFE2
  6851                           fsr1l	equ	0xFE1
  6852                           indf2	equ	0xFDF
  6853                           postinc2	equ	0xFDE
  6854                           postdec2	equ	0xFDD
  6855                           fsr2h	equ	0xFDA
  6856                           fsr2l	equ	0xFD9
  6857                           status	equ	0xFD8
  6858                           
  6859 ;; *************** function _pec15_calc *****************
  6860 ;; Defined at:
  6861 ;;		line 1179 in file "LT6804.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;  len             2   20[COMRAM] int 
  6864 ;;  data            2   22[COMRAM] PTR int 
  6865 ;;		 -> RAM(1535), LTC6804_rdcfg@cmd(8), LTC6804_wrcfg@cmd(200), LTC6804_clraux@cmd(8), 
  6866 ;;		 -> LTC6804_clrcell@cmd(8), LTC6804_rdStat_reg@cmd(8), LTC6804_rdStat@data(150), LTC6804_rdaux_reg@cmd(8), 
  6867 ;;		 -> LTC6804_rdcv_reg@cmd(8), LTC6804_rdcv@cell_data(240), ADSTAT(4), ADAX(4), 
  6868 ;;		 -> ADCV(4), LTC6804_DATA_ConfigBank(12), 
  6869 ;; Auto vars:     Size  Location     Type
  6870 ;;  remainder       2   31[COMRAM] int 
  6871 ;;  addr            2   29[COMRAM] int 
  6872 ;; Return value:  Size  Location     Type
  6873 ;;                  2   20[COMRAM] int 
  6874 ;; Registers used:
  6875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6876 ;; Tracked objects:
  6877 ;;		On entry : 0/0
  6878 ;;		On exit  : 0/0
  6879 ;;		Unchanged: 0/0
  6880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6881 ;;      Params:         4       0       0       0       0       0       0
  6882 ;;      Locals:         4       0       0       0       0       0       0
  6883 ;;      Temps:          5       0       0       0       0       0       0
  6884 ;;      Totals:        13       0       0       0       0       0       0
  6885 ;;Total ram usage:       13 bytes
  6886 ;; Hardware stack levels used:    1
  6887 ;; Hardware stack levels required when called:    3
  6888 ;; This function calls:
  6889 ;;		Nothing
  6890 ;; This function is called by:
  6891 ;;		_LTC6804_adcv
  6892 ;;		_LTC6804_rdcv
  6893 ;;		_LTC6804_rdcv_reg
  6894 ;;		_LTC6804_wrcfg
  6895 ;;		_LTC6804_adax
  6896 ;;		_LTC6804_ADSTAT
  6897 ;;		_LTC6804_rdaux
  6898 ;;		_LTC6804_rdaux_reg
  6899 ;;		_LTC6804_rdStat
  6900 ;;		_LTC6804_rdStat_reg
  6901 ;;		_LTC6804_clrcell
  6902 ;;		_LTC6804_clraux
  6903 ;;		_LTC6804_rdcfg
  6904 ;; This function uses a non-reentrant model
  6905 ;;
  6906                           
  6907                           	psect	text37
  6908  000E20                     __ptext37:
  6909                           	opt stack 0
  6910  000E20                     _pec15_calc:
  6911                           	opt stack 23
  6912                           
  6913                           ;LT6804.c: 1181: int remainder,addr;
  6914                           ;LT6804.c: 1183: remainder = 16;
  6915                           
  6916                           ;incstack = 0
  6917  000E20  0E00               	movlw	0
  6918  000E22  6E21               	movwf	pec15_calc@remainder+1,c
  6919  000E24  0E10               	movlw	16
  6920  000E26  6E20               	movwf	pec15_calc@remainder,c
  6921                           
  6922                           ;LT6804.c: 1184: for(i = 0; i<len;i++)
  6923  000E28  0E00               	movlw	0
  6924  000E2A  6E45               	movwf	_i+1,c
  6925  000E2C  0E00               	movlw	0
  6926  000E2E  6E44               	movwf	_i,c
  6927  000E30  D039               	goto	l5373
  6928  000E32                     l5367:
  6929                           
  6930                           ;LT6804.c: 1185: {
  6931                           ;LT6804.c: 1186: addr = ((remainder>>7)^data[i])&0xff;
  6932  000E32  90D8               	bcf	status,0,c
  6933  000E34  3444               	rlcf	_i,w,c
  6934  000E36  6ED9               	movwf	fsr2l,c
  6935  000E38  3445               	rlcf	_i+1,w,c
  6936  000E3A  6EDA               	movwf	fsr2h,c
  6937  000E3C  5017               	movf	pec15_calc@data,w,c
  6938  000E3E  26D9               	addwf	fsr2l,f,c
  6939  000E40  5018               	movf	pec15_calc@data+1,w,c
  6940  000E42  22DA               	addwfc	fsr2h,f,c
  6941  000E44  CFDE F019          	movff	postinc2,??_pec15_calc
  6942  000E48  CFDD F01A          	movff	postdec2,??_pec15_calc+1
  6943  000E4C  C020  F01B         	movff	pec15_calc@remainder,??_pec15_calc+2
  6944  000E50  C021  F01C         	movff	pec15_calc@remainder+1,??_pec15_calc+3
  6945  000E54  0E07               	movlw	7
  6946  000E56  6E1D               	movwf	(??_pec15_calc+4)& (0+255),c
  6947  000E58                     u4465:
  6948  000E58  341C               	rlcf	??_pec15_calc+3,w,c
  6949  000E5A  321C               	rrcf	??_pec15_calc+3,f,c
  6950  000E5C  321B               	rrcf	??_pec15_calc+2,f,c
  6951  000E5E  2E1D               	decfsz	(??_pec15_calc+4)& (0+255),f,c
  6952  000E60  D7FB               	goto	u4465
  6953  000E62  5019               	movf	??_pec15_calc,w,c
  6954  000E64  1A1B               	xorwf	??_pec15_calc+2,f,c
  6955  000E66  501A               	movf	??_pec15_calc+1,w,c
  6956  000E68  1A1C               	xorwf	??_pec15_calc+3,f,c
  6957  000E6A  501B               	movf	??_pec15_calc+2,w,c
  6958  000E6C  6E1E               	movwf	pec15_calc@addr,c
  6959  000E6E  6A1F               	clrf	pec15_calc@addr+1,c
  6960                           
  6961                           ;LT6804.c: 1187: remainder = (remainder<<8)^crc15Table[addr];
  6962  000E70  90D8               	bcf	status,0,c
  6963  000E72  341E               	rlcf	pec15_calc@addr,w,c
  6964  000E74  6EF6               	movwf	tblptrl,c
  6965  000E76  341F               	rlcf	pec15_calc@addr+1,w,c
  6966  000E78  6EF7               	movwf	tblptrh,c
  6967  000E7A  0EA9               	movlw	low LT6804@crc15Table
  6968  000E7C  26F6               	addwf	tblptrl,f,c
  6969  000E7E  0E7B               	movlw	high LT6804@crc15Table
  6970  000E80  22F7               	addwfc	tblptrh,f,c
  6971  000E82                     	if	0	;There are less than 3 active tblptr bytes
  6972  000E82                     	endif
  6973  000E82  0009               	tblrd		*+
  6974  000E84  CFF5 F019          	movff	tablat,??_pec15_calc
  6975  000E88  0009               	tblrd		*+
  6976  000E8A  CFF5 F01A          	movff	tablat,??_pec15_calc+1
  6977  000E8E  5020               	movf	pec15_calc@remainder,w,c
  6978  000E90  6E1C               	movwf	(??_pec15_calc+3)& (0+255),c
  6979  000E92  6A1B               	clrf	(??_pec15_calc+2)& (0+255),c
  6980  000E94  5019               	movf	??_pec15_calc,w,c
  6981  000E96  181B               	xorwf	??_pec15_calc+2,w,c
  6982  000E98  6E20               	movwf	pec15_calc@remainder,c
  6983  000E9A  501A               	movf	??_pec15_calc+1,w,c
  6984  000E9C  181C               	xorwf	??_pec15_calc+3,w,c
  6985  000E9E  6E21               	movwf	pec15_calc@remainder+1,c
  6986  000EA0  4A44               	infsnz	_i,f,c
  6987  000EA2  2A45               	incf	_i+1,f,c
  6988  000EA4                     l5373:
  6989  000EA4  5015               	movf	pec15_calc@len,w,c
  6990  000EA6  5C44               	subwf	_i,w,c
  6991  000EA8  5045               	movf	_i+1,w,c
  6992  000EAA  0A80               	xorlw	128
  6993  000EAC  6E19               	movwf	??_pec15_calc& (0+255),c
  6994  000EAE  5016               	movf	pec15_calc@len+1,w,c
  6995  000EB0  0A80               	xorlw	128
  6996  000EB2  5819               	subwfb	??_pec15_calc& (0+255),w,c
  6997  000EB4  A0D8               	btfss	status,0,c
  6998  000EB6  D7BD               	goto	l5367
  6999                           
  7000                           ;LT6804.c: 1188: }
  7001                           ;LT6804.c: 1189: return(remainder*2);
  7002  000EB8  90D8               	bcf	status,0,c
  7003  000EBA  3420               	rlcf	pec15_calc@remainder,w,c
  7004  000EBC  6E15               	movwf	?_pec15_calc,c
  7005  000EBE  3421               	rlcf	pec15_calc@remainder+1,w,c
  7006  000EC0  6E16               	movwf	?_pec15_calc+1,c
  7007  000EC2  0012               	return	
  7008  000EC4                     __end_of_pec15_calc:
  7009                           	opt stack 0
  7010                           tblptru	equ	0xFF8
  7011                           tblptrh	equ	0xFF7
  7012                           tblptrl	equ	0xFF6
  7013                           tablat	equ	0xFF5
  7014                           prodh	equ	0xFF4
  7015                           prodl	equ	0xFF3
  7016                           intcon	equ	0xFF2
  7017                           intcon2	equ	0xFF1
  7018                           postinc0	equ	0xFEE
  7019                           wreg	equ	0xFE8
  7020                           postinc1	equ	0xFE6
  7021                           postdec1	equ	0xFE5
  7022                           fsr1h	equ	0xFE2
  7023                           fsr1l	equ	0xFE1
  7024                           indf2	equ	0xFDF
  7025                           postinc2	equ	0xFDE
  7026                           postdec2	equ	0xFDD
  7027                           fsr2h	equ	0xFDA
  7028                           fsr2l	equ	0xFD9
  7029                           status	equ	0xFD8
  7030                           
  7031 ;; *************** function _Delay *****************
  7032 ;; Defined at:
  7033 ;;		line 9 in file "Functions.c"
  7034 ;; Parameters:    Size  Location     Type
  7035 ;;  wait            2   14[COMRAM] int 
  7036 ;; Auto vars:     Size  Location     Type
  7037 ;;  x               2   17[COMRAM] int 
  7038 ;; Return value:  Size  Location     Type
  7039 ;;		None               void
  7040 ;; Registers used:
  7041 ;;		wreg, status,2, status,0
  7042 ;; Tracked objects:
  7043 ;;		On entry : 0/0
  7044 ;;		On exit  : 0/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7047 ;;      Params:         2       0       0       0       0       0       0
  7048 ;;      Locals:         2       0       0       0       0       0       0
  7049 ;;      Temps:          1       0       0       0       0       0       0
  7050 ;;      Totals:         5       0       0       0       0       0       0
  7051 ;;Total ram usage:        5 bytes
  7052 ;; Hardware stack levels used:    1
  7053 ;; Hardware stack levels required when called:    3
  7054 ;; This function calls:
  7055 ;;		Nothing
  7056 ;; This function is called by:
  7057 ;;		_main
  7058 ;;		_Read_Battery
  7059 ;;		_wakeup_sleep
  7060 ;;		_addressFault
  7061 ;; This function uses a non-reentrant model
  7062 ;;
  7063                           
  7064                           	psect	text38
  7065  00144C                     __ptext38:
  7066                           	opt stack 0
  7067  00144C                     _Delay:
  7068                           	opt stack 24
  7069                           
  7070                           ;Functions.c: 11: int x;
  7071                           ;Functions.c: 12: for(x = 0;x<wait;x++)
  7072                           
  7073                           ;incstack = 0
  7074  00144C  0E00               	movlw	0
  7075  00144E  6E13               	movwf	Delay@x+1,c
  7076  001450  0E00               	movlw	0
  7077  001452  6E12               	movwf	Delay@x,c
  7078  001454  D00A               	goto	l307
  7079  001456                     l5417:
  7080                           
  7081                           ;Functions.c: 13: {
  7082                           ;Functions.c: 14: _delay((unsigned long)((1)*(16000000/4000.0)));
  7083  001456  0E06               	movlw	6
  7084  001458  6E11               	movwf	??_Delay& (0+255),c
  7085  00145A  0E30               	movlw	48
  7086  00145C                     u5677:
  7087  00145C  2EE8               	decfsz	wreg,f,c
  7088  00145E  D7FE               	goto	u5677
  7089  001460  2E11               	decfsz	??_Delay& (0+255),f,c
  7090  001462  D7FC               	goto	u5677
  7091  001464  D000               	nop2	
  7092  001466  4A12               	infsnz	Delay@x,f,c
  7093  001468  2A13               	incf	Delay@x+1,f,c
  7094  00146A                     l307:
  7095  00146A  500F               	movf	Delay@wait,w,c
  7096  00146C  5C12               	subwf	Delay@x,w,c
  7097  00146E  5013               	movf	Delay@x+1,w,c
  7098  001470  0A80               	xorlw	128
  7099  001472  6E11               	movwf	??_Delay& (0+255),c
  7100  001474  5010               	movf	Delay@wait+1,w,c
  7101  001476  0A80               	xorlw	128
  7102  001478  5811               	subwfb	??_Delay& (0+255),w,c
  7103  00147A  B0D8               	btfsc	status,0,c
  7104  00147C  0012               	return	
  7105  00147E  D7EB               	goto	l5417
  7106  001480                     __end_of_Delay:
  7107                           	opt stack 0
  7108                           tblptru	equ	0xFF8
  7109                           tblptrh	equ	0xFF7
  7110                           tblptrl	equ	0xFF6
  7111                           tablat	equ	0xFF5
  7112                           prodh	equ	0xFF4
  7113                           prodl	equ	0xFF3
  7114                           intcon	equ	0xFF2
  7115                           intcon2	equ	0xFF1
  7116                           postinc0	equ	0xFEE
  7117                           wreg	equ	0xFE8
  7118                           postinc1	equ	0xFE6
  7119                           postdec1	equ	0xFE5
  7120                           fsr1h	equ	0xFE2
  7121                           fsr1l	equ	0xFE1
  7122                           indf2	equ	0xFDF
  7123                           postinc2	equ	0xFDE
  7124                           postdec2	equ	0xFDD
  7125                           fsr2h	equ	0xFDA
  7126                           fsr2l	equ	0xFD9
  7127                           status	equ	0xFD8
  7128                           
  7129 ;; *************** function _INTERRUPT_InterruptManager *****************
  7130 ;; Defined at:
  7131 ;;		line 69 in file "mcc_generated_files/interrupt_manager.c"
  7132 ;; Parameters:    Size  Location     Type
  7133 ;;		None
  7134 ;; Auto vars:     Size  Location     Type
  7135 ;;		None
  7136 ;; Return value:  Size  Location     Type
  7137 ;;		None               void
  7138 ;; Registers used:
  7139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7140 ;; Tracked objects:
  7141 ;;		On entry : 0/0
  7142 ;;		On exit  : 0/0
  7143 ;;		Unchanged: 0/0
  7144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7145 ;;      Params:         0       0       0       0       0       0       0
  7146 ;;      Locals:         0       0       0       0       0       0       0
  7147 ;;      Temps:         14       0       0       0       0       0       0
  7148 ;;      Totals:        14       0       0       0       0       0       0
  7149 ;;Total ram usage:       14 bytes
  7150 ;; Hardware stack levels used:    1
  7151 ;; Hardware stack levels required when called:    2
  7152 ;; This function calls:
  7153 ;;		_ADC_ISR
  7154 ;;		_EUSART1_Receive_ISR
  7155 ;;		_EUSART1_Transmit_ISR
  7156 ;;		_TMR0_ISR
  7157 ;; This function is called by:
  7158 ;;		Interrupt level 2
  7159 ;; This function uses a non-reentrant model
  7160 ;;
  7161                           
  7162                           	psect	intcode
  7163  000008                     __pintcode:
  7164                           	opt stack 0
  7165  000008                     _INTERRUPT_InterruptManager:
  7166                           	opt stack 22
  7167                           
  7168                           ;incstack = 0
  7169  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7170  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  7171  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  7172  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  7173  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  7174  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  7175  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  7176  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  7177  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  7178  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManager+8
  7179  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  7180  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  7181  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  7182  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  7183  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  7184                           
  7185                           ;interrupt_manager.c: 72: if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  7186  000042  BC9D               	btfsc	3997,6,c	;volatile
  7187  000044  AC9E               	btfss	3998,6,c	;volatile
  7188  000046  D003               	goto	i2l196
  7189                           
  7190                           ;interrupt_manager.c: 73: {
  7191                           ;interrupt_manager.c: 74: ADC_ISR();
  7192  000048  EC22  F00B         	call	_ADC_ISR	;wreg free
  7193                           
  7194                           ;interrupt_manager.c: 75: }
  7195  00004C  D011               	goto	i2l204
  7196  00004E                     i2l196:
  7197                           
  7198                           ;interrupt_manager.c: 76: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  7199  00004E  BAF2               	btfsc	intcon,5,c	;volatile
  7200  000050  A4F2               	btfss	intcon,2,c	;volatile
  7201  000052  D003               	goto	i2l198
  7202                           
  7203                           ;interrupt_manager.c: 77: {
  7204                           ;interrupt_manager.c: 78: TMR0_ISR();
  7205  000054  ECF2  F00A         	call	_TMR0_ISR	;wreg free
  7206                           
  7207                           ;interrupt_manager.c: 79: }
  7208  000058  D00B               	goto	i2l204
  7209  00005A                     i2l198:
  7210                           
  7211                           ;interrupt_manager.c: 80: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  7212  00005A  B89D               	btfsc	3997,4,c	;volatile
  7213  00005C  A89E               	btfss	3998,4,c	;volatile
  7214  00005E  D003               	goto	i2l200
  7215                           
  7216                           ;interrupt_manager.c: 81: {
  7217                           ;interrupt_manager.c: 82: EUSART1_Transmit_ISR();
  7218  000060  EC40  F00A         	call	_EUSART1_Transmit_ISR	;wreg free
  7219                           
  7220                           ;interrupt_manager.c: 83: }
  7221  000064  D005               	goto	i2l204
  7222  000066                     i2l200:
  7223                           
  7224                           ;interrupt_manager.c: 84: else if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  7225  000066  BA9D               	btfsc	3997,5,c	;volatile
  7226  000068  AA9E               	btfss	3998,5,c	;volatile
  7227  00006A  D002               	goto	i2l204
  7228                           
  7229                           ;interrupt_manager.c: 85: {
  7230                           ;interrupt_manager.c: 86: EUSART1_Receive_ISR();
  7231  00006C  EC59  F00A         	call	_EUSART1_Receive_ISR	;wreg free
  7232  000070                     i2l204:
  7233  000070  C00E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  7234  000074  C00D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  7235  000078  C00C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  7236  00007C  C00B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  7237  000080  C00A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  7238  000084  C009  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  7239  000088  C008  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  7240  00008C  C007  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  7241  000090  C006  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  7242  000094  C005  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  7243  000098  C004  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  7244  00009C  C003  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  7245  0000A0  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  7246  0000A4  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  7247  0000A8  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7248  0000AA  0011               	retfie		f
  7249  0000AC                     __end_of_INTERRUPT_InterruptManager:
  7250                           	opt stack 0
  7251                           pclatu	equ	0xFFB
  7252                           pclath	equ	0xFFA
  7253                           tblptru	equ	0xFF8
  7254                           tblptrh	equ	0xFF7
  7255                           tblptrl	equ	0xFF6
  7256                           tablat	equ	0xFF5
  7257                           prodh	equ	0xFF4
  7258                           prodl	equ	0xFF3
  7259                           intcon	equ	0xFF2
  7260                           intcon2	equ	0xFF1
  7261                           postinc0	equ	0xFEE
  7262                           fsr0h	equ	0xFEA
  7263                           fsr0l	equ	0xFE9
  7264                           wreg	equ	0xFE8
  7265                           postinc1	equ	0xFE6
  7266                           postdec1	equ	0xFE5
  7267                           fsr1h	equ	0xFE2
  7268                           fsr1l	equ	0xFE1
  7269                           indf2	equ	0xFDF
  7270                           postinc2	equ	0xFDE
  7271                           postdec2	equ	0xFDD
  7272                           fsr2h	equ	0xFDA
  7273                           fsr2l	equ	0xFD9
  7274                           status	equ	0xFD8
  7275                           
  7276 ;; *************** function _TMR0_ISR *****************
  7277 ;; Defined at:
  7278 ;;		line 131 in file "mcc_generated_files/tmr0.c"
  7279 ;; Parameters:    Size  Location     Type
  7280 ;;		None
  7281 ;; Auto vars:     Size  Location     Type
  7282 ;;		None
  7283 ;; Return value:  Size  Location     Type
  7284 ;;		None               void
  7285 ;; Registers used:
  7286 ;;		wreg, status,2, cstack
  7287 ;; Tracked objects:
  7288 ;;		On entry : 0/0
  7289 ;;		On exit  : 0/0
  7290 ;;		Unchanged: 0/0
  7291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7292 ;;      Params:         0       0       0       0       0       0       0
  7293 ;;      Locals:         0       0       0       0       0       0       0
  7294 ;;      Temps:          0       0       0       0       0       0       0
  7295 ;;      Totals:         0       0       0       0       0       0       0
  7296 ;;Total ram usage:        0 bytes
  7297 ;; Hardware stack levels used:    1
  7298 ;; Hardware stack levels required when called:    1
  7299 ;; This function calls:
  7300 ;;		_TMR0_CallBack
  7301 ;; This function is called by:
  7302 ;;		_INTERRUPT_InterruptManager
  7303 ;; This function uses a non-reentrant model
  7304 ;;
  7305                           
  7306                           	psect	text40
  7307  0015E4                     __ptext40:
  7308                           	opt stack 0
  7309  0015E4                     _TMR0_ISR:
  7310                           	opt stack 22
  7311                           
  7312                           ;tmr0.c: 135: INTCONbits.TMR0IF = 0;
  7313                           
  7314                           ;incstack = 0
  7315  0015E4  94F2               	bcf	intcon,2,c	;volatile
  7316                           
  7317                           ;tmr0.c: 139: TMR0H = timer0ReloadVal16bit >> 8;
  7318  0015E6  5050               	movf	_timer0ReloadVal16bit+1,w,c	;volatile
  7319  0015E8  6ED7               	movwf	4055,c	;volatile
  7320                           
  7321                           ;tmr0.c: 140: TMR0L = (uint8_t) timer0ReloadVal16bit;
  7322  0015EA  C04F  FFD6         	movff	_timer0ReloadVal16bit,4054	;volatile
  7323                           
  7324                           ;tmr0.c: 144: TMR0_CallBack();
  7325  0015EE  EC24  F00B         	call	_TMR0_CallBack	;wreg free
  7326  0015F2  0012               	return		;funcret
  7327  0015F4                     __end_of_TMR0_ISR:
  7328                           	opt stack 0
  7329                           pclatu	equ	0xFFB
  7330                           pclath	equ	0xFFA
  7331                           tblptru	equ	0xFF8
  7332                           tblptrh	equ	0xFF7
  7333                           tblptrl	equ	0xFF6
  7334                           tablat	equ	0xFF5
  7335                           prodh	equ	0xFF4
  7336                           prodl	equ	0xFF3
  7337                           intcon	equ	0xFF2
  7338                           intcon2	equ	0xFF1
  7339                           postinc0	equ	0xFEE
  7340                           fsr0h	equ	0xFEA
  7341                           fsr0l	equ	0xFE9
  7342                           wreg	equ	0xFE8
  7343                           postinc1	equ	0xFE6
  7344                           postdec1	equ	0xFE5
  7345                           fsr1h	equ	0xFE2
  7346                           fsr1l	equ	0xFE1
  7347                           indf2	equ	0xFDF
  7348                           postinc2	equ	0xFDE
  7349                           postdec2	equ	0xFDD
  7350                           fsr2h	equ	0xFDA
  7351                           fsr2l	equ	0xFD9
  7352                           status	equ	0xFD8
  7353                           
  7354 ;; *************** function _TMR0_CallBack *****************
  7355 ;; Defined at:
  7356 ;;		line 149 in file "mcc_generated_files/tmr0.c"
  7357 ;; Parameters:    Size  Location     Type
  7358 ;;		None
  7359 ;; Auto vars:     Size  Location     Type
  7360 ;;		None
  7361 ;; Return value:  Size  Location     Type
  7362 ;;		None               void
  7363 ;; Registers used:
  7364 ;;		None
  7365 ;; Tracked objects:
  7366 ;;		On entry : 0/0
  7367 ;;		On exit  : 0/0
  7368 ;;		Unchanged: 0/0
  7369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7370 ;;      Params:         0       0       0       0       0       0       0
  7371 ;;      Locals:         0       0       0       0       0       0       0
  7372 ;;      Temps:          0       0       0       0       0       0       0
  7373 ;;      Totals:         0       0       0       0       0       0       0
  7374 ;;Total ram usage:        0 bytes
  7375 ;; Hardware stack levels used:    1
  7376 ;; This function calls:
  7377 ;;		Nothing
  7378 ;; This function is called by:
  7379 ;;		_TMR0_ISR
  7380 ;; This function uses a non-reentrant model
  7381 ;;
  7382                           
  7383                           	psect	text41
  7384  001648                     __ptext41:
  7385                           	opt stack 0
  7386  001648                     _TMR0_CallBack:
  7387                           	opt stack 22
  7388                           
  7389                           ;incstack = 0
  7390  001648  0012               	return		;funcret
  7391  00164A                     __end_of_TMR0_CallBack:
  7392                           	opt stack 0
  7393                           pclatu	equ	0xFFB
  7394                           pclath	equ	0xFFA
  7395                           tblptru	equ	0xFF8
  7396                           tblptrh	equ	0xFF7
  7397                           tblptrl	equ	0xFF6
  7398                           tablat	equ	0xFF5
  7399                           prodh	equ	0xFF4
  7400                           prodl	equ	0xFF3
  7401                           intcon	equ	0xFF2
  7402                           intcon2	equ	0xFF1
  7403                           postinc0	equ	0xFEE
  7404                           fsr0h	equ	0xFEA
  7405                           fsr0l	equ	0xFE9
  7406                           wreg	equ	0xFE8
  7407                           postinc1	equ	0xFE6
  7408                           postdec1	equ	0xFE5
  7409                           fsr1h	equ	0xFE2
  7410                           fsr1l	equ	0xFE1
  7411                           indf2	equ	0xFDF
  7412                           postinc2	equ	0xFDE
  7413                           postdec2	equ	0xFDD
  7414                           fsr2h	equ	0xFDA
  7415                           fsr2l	equ	0xFD9
  7416                           status	equ	0xFD8
  7417                           
  7418 ;; *************** function _EUSART1_Transmit_ISR *****************
  7419 ;; Defined at:
  7420 ;;		line 167 in file "mcc_generated_files/eusart1.c"
  7421 ;; Parameters:    Size  Location     Type
  7422 ;;		None
  7423 ;; Auto vars:     Size  Location     Type
  7424 ;;		None
  7425 ;; Return value:  Size  Location     Type
  7426 ;;		None               void
  7427 ;; Registers used:
  7428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7429 ;; Tracked objects:
  7430 ;;		On entry : 0/0
  7431 ;;		On exit  : 0/0
  7432 ;;		Unchanged: 0/0
  7433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7434 ;;      Params:         0       0       0       0       0       0       0
  7435 ;;      Locals:         0       0       0       0       0       0       0
  7436 ;;      Temps:          0       0       0       0       0       0       0
  7437 ;;      Totals:         0       0       0       0       0       0       0
  7438 ;;Total ram usage:        0 bytes
  7439 ;; Hardware stack levels used:    1
  7440 ;; This function calls:
  7441 ;;		Nothing
  7442 ;; This function is called by:
  7443 ;;		_INTERRUPT_InterruptManager
  7444 ;; This function uses a non-reentrant model
  7445 ;;
  7446                           
  7447                           	psect	text42
  7448  001480                     __ptext42:
  7449                           	opt stack 0
  7450  001480                     _EUSART1_Transmit_ISR:
  7451                           	opt stack 23
  7452                           
  7453                           ;eusart1.c: 171: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  7454                           
  7455                           ;incstack = 0
  7456  001480  0E08               	movlw	8
  7457  001482  0100               	movlb	0	; () banked
  7458  001484  61FF               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
  7459  001486  D013               	goto	i2l294
  7460                           
  7461                           ; BSR set to: 0
  7462                           ;eusart1.c: 172: {
  7463                           ;eusart1.c: 173: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  7464  001488  504C               	movf	_eusart1TxTail,w,c
  7465  00148A  0D01               	mullw	1
  7466  00148C  0EAA               	movlw	low _eusart1TxBuffer
  7467  00148E  24F3               	addwf	prodl,w,c
  7468  001490  6ED9               	movwf	fsr2l,c
  7469  001492  0E00               	movlw	high _eusart1TxBuffer
  7470  001494  20F4               	addwfc	prodh,w,c
  7471  001496  6EDA               	movwf	fsr2h,c
  7472  001498  50DF               	movf	indf2,w,c
  7473  00149A  6EAD               	movwf	4013,c	;volatile
  7474                           
  7475                           ; BSR set to: 0
  7476  00149C  2A4C               	incf	_eusart1TxTail,f,c
  7477                           
  7478                           ; BSR set to: 0
  7479                           ;eusart1.c: 174: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  7480  00149E  0E07               	movlw	7
  7481  0014A0  644C               	cpfsgt	_eusart1TxTail,c
  7482  0014A2  D002               	goto	i2l4075
  7483                           
  7484                           ; BSR set to: 0
  7485                           ;eusart1.c: 175: {
  7486                           ;eusart1.c: 176: eusart1TxTail = 0;
  7487  0014A4  0E00               	movlw	0
  7488  0014A6  6E4C               	movwf	_eusart1TxTail,c
  7489  0014A8                     i2l4075:
  7490                           
  7491                           ; BSR set to: 0
  7492                           ;eusart1.c: 177: }
  7493                           ;eusart1.c: 178: eusart1TxBufferRemaining++;
  7494  0014A8  0100               	movlb	0	; () banked
  7495  0014AA  2BFF               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  7496                           
  7497                           ;eusart1.c: 179: }
  7498  0014AC  0012               	return	
  7499  0014AE                     i2l294:
  7500                           
  7501                           ; BSR set to: 0
  7502                           ;eusart1.c: 180: else
  7503                           ;eusart1.c: 181: {
  7504                           ;eusart1.c: 182: PIE1bits.TX1IE = 0;
  7505  0014AE  989D               	bcf	3997,4,c	;volatile
  7506  0014B0  0012               	return	
  7507  0014B2                     __end_of_EUSART1_Transmit_ISR:
  7508                           	opt stack 0
  7509                           pclatu	equ	0xFFB
  7510                           pclath	equ	0xFFA
  7511                           tblptru	equ	0xFF8
  7512                           tblptrh	equ	0xFF7
  7513                           tblptrl	equ	0xFF6
  7514                           tablat	equ	0xFF5
  7515                           prodh	equ	0xFF4
  7516                           prodl	equ	0xFF3
  7517                           intcon	equ	0xFF2
  7518                           intcon2	equ	0xFF1
  7519                           postinc0	equ	0xFEE
  7520                           fsr0h	equ	0xFEA
  7521                           fsr0l	equ	0xFE9
  7522                           wreg	equ	0xFE8
  7523                           postinc1	equ	0xFE6
  7524                           postdec1	equ	0xFE5
  7525                           fsr1h	equ	0xFE2
  7526                           fsr1l	equ	0xFE1
  7527                           indf2	equ	0xFDF
  7528                           postinc2	equ	0xFDE
  7529                           postdec2	equ	0xFDD
  7530                           fsr2h	equ	0xFDA
  7531                           fsr2l	equ	0xFD9
  7532                           status	equ	0xFD8
  7533                           
  7534 ;; *************** function _EUSART1_Receive_ISR *****************
  7535 ;; Defined at:
  7536 ;;		line 186 in file "mcc_generated_files/eusart1.c"
  7537 ;; Parameters:    Size  Location     Type
  7538 ;;		None
  7539 ;; Auto vars:     Size  Location     Type
  7540 ;;		None
  7541 ;; Return value:  Size  Location     Type
  7542 ;;		None               void
  7543 ;; Registers used:
  7544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7545 ;; Tracked objects:
  7546 ;;		On entry : 0/0
  7547 ;;		On exit  : 0/0
  7548 ;;		Unchanged: 0/0
  7549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7550 ;;      Params:         0       0       0       0       0       0       0
  7551 ;;      Locals:         0       0       0       0       0       0       0
  7552 ;;      Temps:          0       0       0       0       0       0       0
  7553 ;;      Totals:         0       0       0       0       0       0       0
  7554 ;;Total ram usage:        0 bytes
  7555 ;; Hardware stack levels used:    1
  7556 ;; This function calls:
  7557 ;;		Nothing
  7558 ;; This function is called by:
  7559 ;;		_INTERRUPT_InterruptManager
  7560 ;; This function uses a non-reentrant model
  7561 ;;
  7562                           
  7563                           	psect	text43
  7564  0014B2                     __ptext43:
  7565                           	opt stack 0
  7566  0014B2                     _EUSART1_Receive_ISR:
  7567                           	opt stack 23
  7568                           
  7569                           ;eusart1.c: 188: if(1 == RCSTA1bits.OERR)
  7570                           
  7571                           ; BSR set to: 0
  7572                           ;incstack = 0
  7573  0014B2  A2AB               	btfss	4011,1,c	;volatile
  7574  0014B4  D002               	goto	i2l4081
  7575                           
  7576                           ;eusart1.c: 189: {
  7577                           ;eusart1.c: 192: RCSTA1bits.CREN = 0;
  7578  0014B6  98AB               	bcf	4011,4,c	;volatile
  7579                           
  7580                           ;eusart1.c: 193: RCSTA1bits.CREN = 1;
  7581  0014B8  88AB               	bsf	4011,4,c	;volatile
  7582  0014BA                     i2l4081:
  7583                           
  7584                           ;eusart1.c: 194: }
  7585                           ;eusart1.c: 197: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  7586  0014BA  5049               	movf	_eusart1RxHead,w,c
  7587  0014BC  0D01               	mullw	1
  7588  0014BE  0EA2               	movlw	low _eusart1RxBuffer
  7589  0014C0  24F3               	addwf	prodl,w,c
  7590  0014C2  6ED9               	movwf	fsr2l,c
  7591  0014C4  0E00               	movlw	high _eusart1RxBuffer
  7592  0014C6  20F4               	addwfc	prodh,w,c
  7593  0014C8  6EDA               	movwf	fsr2h,c
  7594  0014CA  CFAE FFDF          	movff	4014,indf2	;volatile
  7595  0014CE  2A49               	incf	_eusart1RxHead,f,c
  7596                           
  7597                           ;eusart1.c: 198: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  7598  0014D0  0E07               	movlw	7
  7599  0014D2  6449               	cpfsgt	_eusart1RxHead,c
  7600  0014D4  D002               	goto	i2l4089
  7601                           
  7602                           ;eusart1.c: 199: {
  7603                           ;eusart1.c: 200: eusart1RxHead = 0;
  7604  0014D6  0E00               	movlw	0
  7605  0014D8  6E49               	movwf	_eusart1RxHead,c
  7606  0014DA                     i2l4089:
  7607                           
  7608                           ;eusart1.c: 201: }
  7609                           ;eusart1.c: 202: eusart1RxCount++;
  7610  0014DA  0100               	movlb	0	; () banked
  7611  0014DC  2BCE               	incf	_eusart1RxCount& (0+255),f,b	;volatile
  7612                           
  7613                           ; BSR set to: 0
  7614  0014DE  0012               	return		;funcret
  7615  0014E0                     __end_of_EUSART1_Receive_ISR:
  7616                           	opt stack 0
  7617                           pclatu	equ	0xFFB
  7618                           pclath	equ	0xFFA
  7619                           tblptru	equ	0xFF8
  7620                           tblptrh	equ	0xFF7
  7621                           tblptrl	equ	0xFF6
  7622                           tablat	equ	0xFF5
  7623                           prodh	equ	0xFF4
  7624                           prodl	equ	0xFF3
  7625                           intcon	equ	0xFF2
  7626                           intcon2	equ	0xFF1
  7627                           postinc0	equ	0xFEE
  7628                           fsr0h	equ	0xFEA
  7629                           fsr0l	equ	0xFE9
  7630                           wreg	equ	0xFE8
  7631                           postinc1	equ	0xFE6
  7632                           postdec1	equ	0xFE5
  7633                           fsr1h	equ	0xFE2
  7634                           fsr1l	equ	0xFE1
  7635                           indf2	equ	0xFDF
  7636                           postinc2	equ	0xFDE
  7637                           postdec2	equ	0xFDD
  7638                           fsr2h	equ	0xFDA
  7639                           fsr2l	equ	0xFD9
  7640                           status	equ	0xFD8
  7641                           
  7642 ;; *************** function _ADC_ISR *****************
  7643 ;; Defined at:
  7644 ;;		line 128 in file "mcc_generated_files/adc.c"
  7645 ;; Parameters:    Size  Location     Type
  7646 ;;		None
  7647 ;; Auto vars:     Size  Location     Type
  7648 ;;		None
  7649 ;; Return value:  Size  Location     Type
  7650 ;;		None               void
  7651 ;; Registers used:
  7652 ;;		None
  7653 ;; Tracked objects:
  7654 ;;		On entry : 0/0
  7655 ;;		On exit  : 0/0
  7656 ;;		Unchanged: 0/0
  7657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7658 ;;      Params:         0       0       0       0       0       0       0
  7659 ;;      Locals:         0       0       0       0       0       0       0
  7660 ;;      Temps:          0       0       0       0       0       0       0
  7661 ;;      Totals:         0       0       0       0       0       0       0
  7662 ;;Total ram usage:        0 bytes
  7663 ;; Hardware stack levels used:    1
  7664 ;; This function calls:
  7665 ;;		Nothing
  7666 ;; This function is called by:
  7667 ;;		_INTERRUPT_InterruptManager
  7668 ;; This function uses a non-reentrant model
  7669 ;;
  7670                           
  7671                           	psect	text44
  7672  001644                     __ptext44:
  7673                           	opt stack 0
  7674  001644                     _ADC_ISR:
  7675                           	opt stack 23
  7676                           
  7677                           ;adc.c: 131: PIR1bits.ADIF = 0;
  7678                           
  7679                           ; BSR set to: 0
  7680                           ;incstack = 0
  7681  001644  9C9E               	bcf	3998,6,c	;volatile
  7682  001646  0012               	return		;funcret
  7683  001648                     __end_of_ADC_ISR:
  7684                           	opt stack 0
  7685                           pclatu	equ	0xFFB
  7686                           pclath	equ	0xFFA
  7687                           tblptru	equ	0xFF8
  7688                           tblptrh	equ	0xFF7
  7689                           tblptrl	equ	0xFF6
  7690                           tablat	equ	0xFF5
  7691                           prodh	equ	0xFF4
  7692                           prodl	equ	0xFF3
  7693                           intcon	equ	0xFF2
  7694                           intcon2	equ	0xFF1
  7695                           postinc0	equ	0xFEE
  7696                           fsr0h	equ	0xFEA
  7697                           fsr0l	equ	0xFE9
  7698                           wreg	equ	0xFE8
  7699                           postinc1	equ	0xFE6
  7700                           postdec1	equ	0xFE5
  7701                           fsr1h	equ	0xFE2
  7702                           fsr1l	equ	0xFE1
  7703                           indf2	equ	0xFDF
  7704                           postinc2	equ	0xFDE
  7705                           postdec2	equ	0xFDD
  7706                           fsr2h	equ	0xFDA
  7707                           fsr2l	equ	0xFD9
  7708                           status	equ	0xFD8
  7709                           pclatu	equ	0xFFB
  7710                           pclath	equ	0xFFA
  7711                           tblptru	equ	0xFF8
  7712                           tblptrh	equ	0xFF7
  7713                           tblptrl	equ	0xFF6
  7714                           tablat	equ	0xFF5
  7715                           prodh	equ	0xFF4
  7716                           prodl	equ	0xFF3
  7717                           intcon	equ	0xFF2
  7718                           intcon2	equ	0xFF1
  7719                           postinc0	equ	0xFEE
  7720                           fsr0h	equ	0xFEA
  7721                           fsr0l	equ	0xFE9
  7722                           wreg	equ	0xFE8
  7723                           postinc1	equ	0xFE6
  7724                           postdec1	equ	0xFE5
  7725                           fsr1h	equ	0xFE2
  7726                           fsr1l	equ	0xFE1
  7727                           indf2	equ	0xFDF
  7728                           postinc2	equ	0xFDE
  7729                           postdec2	equ	0xFDD
  7730                           fsr2h	equ	0xFDA
  7731                           fsr2l	equ	0xFD9
  7732                           status	equ	0xFD8
  7733                           
  7734                           	psect	rparam
  7735  0000                     pclatu	equ	0xFFB
  7736                           pclath	equ	0xFFA
  7737                           tblptru	equ	0xFF8
  7738                           tblptrh	equ	0xFF7
  7739                           tblptrl	equ	0xFF6
  7740                           tablat	equ	0xFF5
  7741                           prodh	equ	0xFF4
  7742                           prodl	equ	0xFF3
  7743                           intcon	equ	0xFF2
  7744                           intcon2	equ	0xFF1
  7745                           postinc0	equ	0xFEE
  7746                           fsr0h	equ	0xFEA
  7747                           fsr0l	equ	0xFE9
  7748                           wreg	equ	0xFE8
  7749                           postinc1	equ	0xFE6
  7750                           postdec1	equ	0xFE5
  7751                           fsr1h	equ	0xFE2
  7752                           fsr1l	equ	0xFE1
  7753                           indf2	equ	0xFDF
  7754                           postinc2	equ	0xFDE
  7755                           postdec2	equ	0xFDD
  7756                           fsr2h	equ	0xFDA
  7757                           fsr2l	equ	0xFD9
  7758                           status	equ	0xFD8
  7759                           
  7760                           	psect	temp
  7761  000051                     btemp:
  7762                           	opt stack 0
  7763  000051                     	ds	1
  7764  0000                     int$flags	set	btemp
  7765                           pclatu	equ	0xFFB
  7766                           pclath	equ	0xFFA
  7767                           tblptru	equ	0xFF8
  7768                           tblptrh	equ	0xFF7
  7769                           tblptrl	equ	0xFF6
  7770                           tablat	equ	0xFF5
  7771                           prodh	equ	0xFF4
  7772                           prodl	equ	0xFF3
  7773                           intcon	equ	0xFF2
  7774                           intcon2	equ	0xFF1
  7775                           postinc0	equ	0xFEE
  7776                           fsr0h	equ	0xFEA
  7777                           fsr0l	equ	0xFE9
  7778                           wreg	equ	0xFE8
  7779                           postinc1	equ	0xFE6
  7780                           postdec1	equ	0xFE5
  7781                           fsr1h	equ	0xFE2
  7782                           fsr1l	equ	0xFE1
  7783                           indf2	equ	0xFDF
  7784                           postinc2	equ	0xFDE
  7785                           postdec2	equ	0xFDD
  7786                           fsr2h	equ	0xFDA
  7787                           fsr2l	equ	0xFD9
  7788                           status	equ	0xFD8


Data Sizes:
    Strings     19
    Constant    1091
    Data        6
    BSS         315
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     65      80
    BANK0           160     28     160
    BANK1           256    240     255
    BANK2           256      7     169
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    free$0	PTR void  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), STR_1(CODE[5]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    spi_write_read@rx_data	PTR int  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), LTC6804_rdStat@data(BANK0[150]), LTC6804_rdcv@cell_data(BANK1[240]), NULL(NULL[0]), 

    spi_write_read@tx_Data	PTR int  size(2) Largest target is 8
		 -> LTC6804_rdcfg@cmd(COMRAM[8]), LTC6804_clrcell@cmd(COMRAM[8]), LTC6804_rdStat_reg@cmd(COMRAM[8]), LTC6804_rdaux_reg@cmd(COMRAM[8]), 
		 -> LTC6804_rdcv_reg@cmd(COMRAM[8]), 

    spi_write_array@data	PTR int  size(2) Largest target is 200
		 -> LTC6804_wrcfg@cmd(BANK1[200]), LTC6804_ADSTAT@cmd(COMRAM[8]), LTC6804_adax@cmd(COMRAM[8]), LTC6804_adcv@cmd(COMRAM[8]), 
		 -> NULL(NULL[0]), 

    pec15_calc@data	PTR int  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), LTC6804_rdcfg@cmd(COMRAM[8]), LTC6804_wrcfg@cmd(BANK1[200]), LTC6804_clraux@cmd(COMRAM[8]), 
		 -> LTC6804_clrcell@cmd(COMRAM[8]), LTC6804_rdStat_reg@cmd(COMRAM[8]), LTC6804_rdStat@data(BANK0[150]), LTC6804_rdaux_reg@cmd(COMRAM[8]), 
		 -> LTC6804_rdcv_reg@cmd(COMRAM[8]), LTC6804_rdcv@cell_data(BANK1[240]), ADSTAT(BANK0[4]), ADAX(BANK0[4]), 
		 -> ADCV(BANK0[4]), LTC6804_DATA_ConfigBank(BANK1[12]), 

    LTC6804_wrcfg@config	PTR int [6] size(2) Largest target is 12
		 -> LTC6804_DATA_ConfigBank(BANK1[12]), 

    sp__malloc	PTR void  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    LTC6804_rdcv_reg@data	PTR int  size(2) Largest target is 240
		 -> LTC6804_rdcv@cell_data(BANK1[240]), 

    LTC6804_rdcv@cell_codes	PTR int [12] size(2) Largest target is 24
		 -> cell_codes_Bank(BANK2[24]), 

    Read_Battery@cell_codes	PTR int [12] size(2) Largest target is 24
		 -> cell_codes_Bank(BANK2[24]), 


Critical Paths under _main in COMRAM

    _Start_BMS->_Initalize_LT6804b
    _wakeup_sleep->_spi_write_array
    _UpdateLT6804->_LTC6804_wrcfg
    _LTC6804_wrcfg->_pec15_calc
    _Set_REFON_Pin->___wmul
    _Set_DCTO_Mode_OFF->___wmul
    _Set_DCC_Mode_OFF->___wmul
    _Set_ADC_Mode->___wmul
    _SetTempEnable->___wmul
    _SYSTEM_Initialize->_TMR0_Initialize
    _printf->___lwmod
    _putch->_EUSART1_Write
    ___lwmod->___lwdiv
    _Read_Battery->_LTC6804_rdcv
    _LTC6804_rdcv->_LTC6804_rdcv_reg
    _LTC6804_rdcv_reg->_pec15_calc
    _wakeup_idle->_DelayMicro
    _spi_write_read->_SPI2_Exchange8bit
    _LTC6804_adcv->_pec15_calc
    _spi_write_array->_SPI2_Exchange8bit
    _pec15_calc->___wmul

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _Run_Mode->_Read_Battery
    _Read_Battery->_LTC6804_rdcv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _UpdateLT6804->_LTC6804_wrcfg
    _Read_Battery->_LTC6804_rdcv

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _Run_Mode->_Read_Battery

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5  101984
                                              2 BANK2      5     0      5
                              _Delay
                           _Run_Mode
                  _SYSTEM_Initialize
                          _Start_BMS
                             _printf
 ---------------------------------------------------------------------------------
 (1) _Start_BMS                                            0     0      0   63861
                  _Initalize_LT6804b
 ---------------------------------------------------------------------------------
 (2) _Initalize_LT6804b                                    2     2      0   63861
                                             39 COMRAM     2     2      0
                      _SetTempEnable
                       _Set_ADC_Mode
                   _Set_DCC_Mode_OFF
                  _Set_DCTO_Mode_OFF
                      _Set_REFON_Pin
                       _UpdateLT6804
                       _wakeup_sleep
 ---------------------------------------------------------------------------------
 (3) _wakeup_sleep                                         0     0      0    1855
                              _Delay
                    _spi_write_array
 ---------------------------------------------------------------------------------
 (3) _UpdateLT6804                                         0     0      0   14606
                      _LTC6804_wrcfg
 ---------------------------------------------------------------------------------
 (4) _LTC6804_wrcfg                                      212   208      4   14606
                                             33 COMRAM     6     2      4
                                              0 BANK1    206   206      0
                             ___wmul
                         _pec15_calc
                    _spi_write_array
                        _wakeup_idle
 ---------------------------------------------------------------------------------
 (3) _Set_REFON_Pin                                        7     4      3    9480
                                             20 COMRAM     7     4      3
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _Set_DCTO_Mode_OFF                                    6     4      2    9372
                                             20 COMRAM     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _Set_DCC_Mode_OFF                                     6     4      2    9396
                                             20 COMRAM     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _Set_ADC_Mode                                         7     4      3    9480
                                             20 COMRAM     7     4      3
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _SetTempEnable                                        7     4      3    9480
                                             20 COMRAM     7     4      3
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                             14 COMRAM     2     2      0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Run_Mode                                             0     0      0   36000
                       _Read_Battery
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              21    17      4    1285
                                             26 COMRAM    12     8      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      66
                                             15 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      44
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     287
                                             21 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     418
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _Read_Battery                                         8     4      4   34715
                                             22 BANK0      6     2      4
                                              0 BANK2      2     2      0
                              _Delay
                       _LTC6804_adcv
                       _LTC6804_rdcv
                            _set_adc
 ---------------------------------------------------------------------------------
 (3) _set_adc                                             12     4      8    4973
                                             14 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _LTC6804_rdcv                                       276   270      6   23399
                                             51 COMRAM    14     8      6
                                              0 BANK0     22    22      0
                                              0 BANK1    240   240      0
                   _LTC6804_rdcv_reg
                  _SPI2_Exchange8bit
                             ___wmul
                         _pec15_calc
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    9254
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _LTC6804_rdcv_reg                                    18    12      6    6047
                                             33 COMRAM    18    12      6
                         _pec15_calc
                     _spi_write_read
                        _wakeup_idle
 ---------------------------------------------------------------------------------
 (5) _wakeup_idle                                          0     0      0     145
                         _DelayMicro
 ---------------------------------------------------------------------------------
 (6) _DelayMicro                                           5     3      2     145
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) _spi_write_read                                      12     4      8    1763
                                             15 COMRAM    12     4      8
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _LTC6804_adcv                                        12    12      0    4382
                                             33 COMRAM    12    12      0
                  _SPI2_Exchange8bit
                         _pec15_calc
                    _spi_write_array
 ---------------------------------------------------------------------------------
 (4) _spi_write_array                                      5     1      4    1017
                                             15 COMRAM     5     1      4
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (5) _SPI2_Exchange8bit                                    1     1      0      31
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _pec15_calc                                          13     9      4    3121
                                             20 COMRAM    13     9      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _Delay                                                5     3      2     838
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR0_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay
   _Run_Mode
     _Read_Battery
       _Delay
       _LTC6804_adcv
         _SPI2_Exchange8bit
         _pec15_calc
           ___wmul (ARG)
         _spi_write_array
           _SPI2_Exchange8bit
       _LTC6804_rdcv
         _LTC6804_rdcv_reg
           _pec15_calc
             ___wmul (ARG)
           _spi_write_read
             _SPI2_Exchange8bit
           _wakeup_idle
             _DelayMicro
         _SPI2_Exchange8bit
         ___wmul
         _pec15_calc
           ___wmul (ARG)
       _set_adc
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _EUSART1_Write
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI2_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
   _Start_BMS
     _Initalize_LT6804b
       _SetTempEnable
         ___wmul
       _Set_ADC_Mode
         ___wmul
       _Set_DCC_Mode_OFF
         ___wmul
       _Set_DCTO_Mode_OFF
         ___wmul
       _Set_REFON_Pin
         ___wmul
       _UpdateLT6804
         _LTC6804_wrcfg
           ___wmul
           _pec15_calc
             ___wmul (ARG)
           _spi_write_array
             _SPI2_Exchange8bit
           _wakeup_idle
             _DelayMicro
       _wakeup_sleep
         _Delay
         _spi_write_array
           _SPI2_Exchange8bit
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR
   _TMR0_ISR
     _TMR0_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      7      A9       8       66.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     F0      FF       6       99.6%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     1C      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     41      50       1       85.1%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     298       9        0.0%
DATA                 0      0     298      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Jun 12 02:53:12 2016

                      ?_LTC6804_adcv 0001                        ?_LTC6804_rdcv 0034  
           _eusart1TxBufferRemaining 00FF                                    _i 0044  
                                  _j 00CA                                    _k 00CC  
                                 l18 1616                       ?_LTC6804_wrcfg 0022  
                ___wmul@multiplicand 0011                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                          __CFG_LVP$ON 000000  
                                _CC1 00B2                                  _CC2 00B5  
                                _CC3 00B8                                  l314 1516  
                                l307 146A                                  l282 1338  
                                l831 052A                                  l825 02EA  
                                l659 0892                                  l836 0512  
                       __CFG_CPB$OFF 000000                         __CFG_CPD$OFF 000000  
                    __end_of_ADC_ISR 1648                                  prod 000FF3  
                                wreg 000FE8             __end_ofLT6804@crc15Table 7DA9  
                               l1413 11B4                                 l1423 131A  
                               l3801 12FC                                 l5403 0F94  
                               l3491 135E                                 l3805 1310  
                               l3477 1326                                 l3821 0C40  
                               l5407 0FBC                                 l5417 1456  
                               l5513 0C10                                 l3489 135A  
                               l3817 0C30                                 l5425 08E2  
                               l5363 151E                                 l3851 0CC2  
                               l3827 0C6A                                 l5451 0A26  
                               l5427 08EA                                 l5373 0EA4  
                               l5381 13A8                                 l3781 118E  
                               l3861 0D22                                 l3837 0C92  
                               l5367 0E32                                 l5631 0176  
                               l5623 013C                                 l3855 0CD4  
                               l3839 0C96                                 l3863 0D2A  
                               l5519 11D2                                 l5455 0A34  
                               l5439 0974                                 l5385 13C4  
                               l5713 0592                                 l5705 0540  
                               l3777 1182                                 l3857 0CDA  
                               l5529 121C                                 l5473 0AF0  
                               l5449 0A18                                 l5395 0F5A  
                               l5483 0B28                                 l5491 0B54  
                               l5651 02D2                                 l5643 021C  
                               l5723 0608                                 l3779 118A  
                               l5555 1266                                 l5629 016C  
                               l5733 067E                                 l3789 11AA  
                               l3797 12F0                                 l5399 0F76  
                               l5487 0B3A                                 l5479 0B16  
                               l5663 033A                                 l5751 075E  
                               l5743 06F4                                 l3799 12F8  
                               l5497 0B64                                 l5665 0344  
                               l5761 07D4                                 _ADAX 00D1  
                               l5659 0314                                 _ADCV 00D5  
                               l5773 0852                                 l5693 0EEC  
                               l5679 043C                                 l5689 0516  
                               l5697 0F38                                 l5699 0F46  
                    spi_write_read@i 001A                                 l5991 138C  
                               STR_1 7FFA                                 STR_2 7FEC  
                               _LATA 000F89                                 _LATB 000F8A  
                               _LATC 000F8B                                 _LATD 000F8C  
                               _LATE 000F8D                                 u4700 02CA  
                               u4541 0A24                                 u4720 0312  
                               u4465 0E58                                 u4645 0D74  
                               u4750 050A                                 u4670 013A  
                               u4655 0DF0                                 u5677 145C  
                       _Voltage_data 0218                                 _WPUB 000F61  
                      _EUSART1_Write 1324               __end_of_spi_write_read 0FD2  
                               _main 1362                      _TMR0_StartTimer 1640  
                         _DelayMicro 150C                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                               btemp 0051               SPI2_Exchange8bit@stuff 000F  
                      __CFG_BORV$190 000000                  _Under_Voltage_Value 00FB  
                               pclat 000FFA                                 prodh 000FF4  
                               prodl 000FF3                                 start 00AC  
                      __CFG_IESO$OFF 000000                       ??_LTC6804_adcv 0022  
                     ??_LTC6804_rdcv 003A                         ___param_bank 000010  
                      ?_Read_Battery 00F3                  Initalize_LT6804b@IC 0028  
            __end_of_TMR0_Initialize 150C                    ?_LTC6804_rdcv_reg 0022  
     __size_of_OSCILLATOR_Initialize 000E        __end_of_OSCILLATOR_Initialize 1610  
                              ?_main 02A4                                _CFGR0 0046  
                              _CFGR1 01F0                                _CFGR2 01F1  
                              _CFGR3 01F2                                _CFGR4 0047  
                              _CFGR5 0048                   ??_LTC6804_rdcv_reg 0028  
                              _T0CON 000FD5                                _LATD3 007C63  
                              _LATD6 007C66                       __CFG_DEBUG$OFF 000000  
                    __end_of___lwdiv 11BE                                i2l200 0066  
                    __end_of___lwmod 1324                                i2l204 0070  
                              i2l196 004E                                i2l294 14AE  
                              i2l198 005A                                _TMR0H 000FD7  
                              _TMR0L 000FD6                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                                _TRISE 000F96  
                              _CVolt 0078                                _CarOn 00FD  
                              _Delay 144C                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000              __end_of_spi_write_array 13DA  
               _EUSART1_Transmit_ISR 1480                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                   __end_of_TMR0_ISR 15F4                                _Volt1 00BB  
                              _Volt2 00BE                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                                _fault 00C1  
                    __end_of_dpowers 7FB3                                _errno 00C6  
                 __CFG_MCLRE$EXTMCLR 000000                                _putch 162A  
                     ?_EUSART1_Write 0001                      __end_of_set_adc 0E20  
                              tablat 000FF5         Set_DCTO_Mode_OFF@fault_value 0019  
                    ?_spi_write_read 0010                                status 000FD8  
                     __CFG_HFOFST$ON 000000                    _LTC6804_rdcv$2731 00DD  
                     __CFG_PBADEN$ON 000000                      __initialization 10BC  
                      _CurrentOffset 0230                    _SPI2_Exchange8bit 1610  
         __end_of_EUSART1_Initialize 144C                         __end_of_main 139E  
                    ??_LTC6804_wrcfg 0026                       ??_Read_Battery 00F7  
                         _CurrentDir 00FE                   ?_SPI2_Exchange8bit 0001  
                          ??_ADC_ISR 0001          ?_INTERRUPT_InterruptManager 0001  
                             ??_main 0042         Read_Battery@BatteryPlacement 00F3  
                      __activetblptr 000002                       set_adc@md_bits 0019  
           __size_of_SPI2_Initialize 000E                  ??_SPI2_Exchange8bit 000F  
                      ?_Set_ADC_Mode 0015                               ?_Delay 000F  
              ?_EUSART1_Transmit_ISR 0001                     _Set_DCC_Mode_OFF 0FD2  
                   __end_of_Run_Mode 1414              __end_of_TMR0_StartTimer 1644  
                pec15_calc@remainder 0020                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
                             _ADRESH 000FC4                               _ADRESL 000FC3  
                             _ADSTAT 00D9                               _ANSELA 000F38  
                             ?_putch 0001                               _ANSELB 000F39  
                             _ANSELC 000F3A                               _ANSELD 000F3B  
                             _ANSELE 000F3C                       __CFG_WDTEN$OFF 000000  
                             i2l4081 14BA                               i2l4075 14A8  
                             Delay@x 0012                               i2l4089 14DA  
                             _RCREG1 000FAE                               _RCSTA1 000FAB  
                             _OSCCON 000FD3                               _SPBRG1 000FAF  
                             _TRISD3 007CAB                          ?_DelayMicro 000F  
                             _TXREG1 000FAD                               _TXSTA1 000FAC  
          __end_of_SPI2_Exchange8bit 161E                       __CFG_XINST$OFF 000000  
                             ___wmul 155A                       __CFG_STVREN$ON 000000  
                          ??___lwdiv 0013                            ??___lwmod 001A  
                   ?_TMR0_Initialize 0001                               clear_0 10C2  
                             clear_1 10CE                               clear_2 10DA  
                             clear_3 10E6                               _printf 0C26  
                       ?_wakeup_idle 0001                       ??_Set_ADC_Mode 0018  
             __size_of_Set_REFON_Pin 004A                         __mediumconst 7BA8  
                          ??_set_adc 0017                               tblptrh 000FF7  
                   ?_spi_write_array 0010                               tblptrl 000FF6  
                             tblptru 000FF8                LTC6804_wrcfg@temp_pec 01CA  
                 __size_of_Start_BMS 0006                 __end_of_LTC6804_adcv 10BC  
              __end_of_TMR0_CallBack 164A                      ??_EUSART1_Write 000F  
               __end_of_LTC6804_rdcv 0534                      _eusart1RxBuffer 00A2  
              LTC6804_wrcfg@total_ic 0022        __size_of_INTERRUPT_Initialize 000C  
                    _eusart1TxBuffer 00AA                     __end_ofexp@coeff 7FD1  
                  _SYSTEM_Initialize 1580                     __end_oflog@coeff 7FEC  
                 SetTempEnable@value 0017                           __accesstop 0060  
            __end_of__initialization 110C                   ?_SYSTEM_Initialize 0001  
                      ___rparam_used 000001                      _cell_codes_Bank 028A  
                      __end_of_Delay 1480                           _crc15Table 7DA9  
                     __pcstackCOMRAM 0001                       DelayMicro@wait 000F  
                       __pidataBANK0 1634                  ??_SYSTEM_Initialize 0011  
                          ?_TMR0_ISR 0001                  Set_DCTO_Mode_OFF@ic 0015  
                      __end_of_putch 1634              Read_Battery@Read_Status 02A2  
           Set_REFON_Pin@fault_value 001A               ??_EUSART1_Transmit_ISR 0001  
                __size_of_DelayMicro 0028                              ??_Delay 0011  
        __end_of_EUSART1_Receive_ISR 14E0                     ?_TMR0_StartTimer 0001  
          __end_of_SYSTEM_Initialize 15A4                 __end_of_Read_Battery 089C  
                            ??_putch 0010                        _eusart1RxHead 0049  
                      _eusart1TxHead 004B                    ??_SPI2_Initialize 000F  
                      _eusart1RxTail 004A                           __pbssBANK0 0060  
                         __pbssBANK1 01F0                           __pbssBANK2 0200  
                      _eusart1TxTail 004C                      __CFG_PLLCFG$OFF 000000  
                         __pnvCOMRAM 004F               Read_Battery@cell_codes 00F5  
                         _pec15_calc 0E20                       LTC6804_rdcv@hi 0040  
                      _Set_REFON_Pin 11BE           __size_of_SPI2_Exchange8bit 000E  
                 spi_write_array@len 0010                   __CFG_CCP2MX$PORTC1 000000  
                  __end_of_Start_BMS 1640               LTC6804_rdcv@cell_codes 0038  
                            ?___wmul 000F                            ?_Run_Mode 0001  
                         ??_TMR0_ISR 0001                   __CFG_CCP3MX$PORTB5 000000  
            _LTC6804_DATA_ConfigBank 01F3             LTC6804_rdcv@data_counter 00F1  
                            _ADC_ISR 1644               __size_of_SetTempEnable 004A  
                   LTC6804_wrcfg@cmd 0100                              ?_printf 001B  
            __size_of_ADC_Initialize 0018                           _fault_flag 00CF  
                         _faultvalue 00C8                   _Over_Voltage_Value 00F9  
                            _OSCCON2 000FD2                              _OSCTUNE 000F9B  
                            _SPBRGH1 000FB0                     ??_spi_write_read 0018  
                            _SSP2ADD 000F6E                              _SSP2BUF 000F6F  
          __size_of_LTC6804_rdcv_reg 0120                      _aux_codes_Bank1 025A  
                    _aux_codes_Bank2 0266                       ?_Set_REFON_Pin 0015  
                            _Current 0096                      __CFG_PWRTEN$OFF 000000  
               __end_of_Set_ADC_Mode 1252                              __Hparam 0000  
             LTC6804_wrcfg@cmd_index 01CC             __end_of_Set_DCC_Mode_OFF 1052  
                            __Lparam 0000                           ??_Run_Mode 0042  
               spi_write_read@rx_len 0016                 spi_write_read@tx_len 0012  
                    __size_of___wmul 0026                              ___lwdiv 116C  
                            ___lwmod 12E2                           _current_ic 004D  
                            __pcinit 10BC                              __ramtop 0600  
                            __ptext0 1362                              __ptext1 163A  
                            __ptext2 0EC4                              __ptext3 1534  
                            __ptext4 15BC                              __ptext5 089C  
                            __ptext6 11BE                              __ptext7 129C  
                            __ptext8 0FD2                              __ptext9 1208  
                    __size_of_printf 011E                            _T0CONbits 000FD5  
              __size_of_LTC6804_adcv 006A                        ?_UpdateLT6804 0001  
              __size_of_LTC6804_rdcv 0484                              _infault 00D0  
                            _dpowers 7FA9                _OSCILLATOR_Initialize 1602  
               __size_of_wakeup_idle 0012                   _EUSART1_Initialize 1414  
           ??_PIN_MANAGER_Initialize 000F                              _set_adc 0D44  
         __size_of_SYSTEM_Initialize 0024                        ?_wakeup_sleep 0001  
               end_of_initialization 110C                            Delay@wait 000F  
                ?_EUSART1_Initialize 0001                        _SetTempEnable 1252  
            Set_ADC_Mode@ADCOPT_Mode 0017                        __Lmediumconst 7BA8  
                       ??_DelayMicro 0011                        pec15_calc@len 0015  
                        ?_pec15_calc 0015                              printf@c 0026  
                            printf@f 001B                         _LTC6804_adcv 1052  
                            postdec1 000FE5                              postdec2 000FDD  
                            postinc0 000FEE                              postinc1 000FE6  
                            postinc2 000FDE                         _LTC6804_rdcv 00B0  
                  _Initalize_LT6804b 0EC4                 ??_EUSART1_Initialize 000F  
              __end_of_LTC6804_wrcfg 0B06                   ?_Initalize_LT6804b 0001  
                    _Stat_codes_Bank 024E                       ??_UpdateLT6804 0028  
                LTC6804_rdcv_reg@cmd 002C                  LTC6804_rdcv_reg@reg 0022  
              __size_of_Read_Battery 0368                   __end_of_DelayMicro 1534  
                ??_Initalize_LT6804b 0028                    _Set_DCTO_Mode_OFF 129C  
                          _TRISDbits 000F95                       ??_wakeup_sleep 0015  
                 ?_Set_DCTO_Mode_OFF 0015                  EUSART1_Write@txData 000F  
                     ?_SetTempEnable 0015                      ??_Set_REFON_Pin 0018  
                ??_Set_DCTO_Mode_OFF 0017            __end_of_Initalize_LT6804b 0F50  
               _timer0ReloadVal16bit 004F         __end_of_INTERRUPT_Initialize 162A  
                    _Read_Status_INC 00C4                         _Read_Battery 0534  
                     __end_of___wmul 1580                    __size_of_TMR0_ISR 0010  
                     _ADC_Initialize 15A4               ?_OSCILLATOR_Initialize 0001  
                    _SPI2_Initialize 15F4            __end_of_Set_DCTO_Mode_OFF 12E2  
                     __end_of_printf 0D44                  __size_of_pec15_calc 00A4  
                start_initialization 10BC             __size_of_TMR0_Initialize 002C  
    __size_of_PIN_MANAGER_Initialize 0052                     _LTC6804_rdcv_reg 0B06  
                        putch@txData 0010                __end_of_EUSART1_Write 1362  
                     Set_ADC_Mode@ic 0015                __size_of_Set_ADC_Mode 004A  
           __size_of_spi_write_array 003C                            _Temp_DegF 0060  
                           ??___wmul 0013               __size_of_TMR0_CallBack 0002  
             __end_of_ADC_Initialize 15BC                          __pdataBANK0 00F9  
                           ?_ADC_ISR 0001                      LTC6804_adcv@cmd 0024  
                  __size_of_Run_Mode 003A                            _Start_BMS 163A  
                           ??_printf 001F                       _eusart1RxCount 00CE  
                        __pbssCOMRAM 0042                         _Set_ADC_Mode 1208  
      __size_of_EUSART1_Transmit_ISR 0032                        __pcstackBANK0 00DD  
                      __pcstackBANK1 0100                        __pcstackBANK2 02A2  
            LTC6804_rdcv@CELL_IN_REG 00ED                      ??_SetTempEnable 0018  
                      _PrevTemp_DegF 0200              Set_ADC_Mode@fault_value 001A  
       __size_of_EUSART1_Receive_ISR 002E                      LTC6804_rdcv@reg 0034  
                    SetTempEnable@ic 0015                         _current_byte 0042  
               __end_of_UpdateLT6804 15D2                            __pnvBANK0 00FF  
           __size_of_TMR0_StartTimer 0004                  spi_write_array@data 0012  
                   ___lwdiv@dividend 000F               _PIN_MANAGER_Initialize 111A  
         __size_of_Initalize_LT6804b 008C                    ?_Set_DCC_Mode_OFF 0015  
              LTC6804_rdcv@cell_data 0100                            __pintcode 0008  
                      __pmediumconst 7BA8              __end_of_SPI2_Initialize 1602  
               __end_of_wakeup_sleep 155A                   ??_Set_DCC_Mode_OFF 0017  
                           ?___lwdiv 000F                             ?___lwmod 0016  
                    ?_ADC_Initialize 0001                           ?_Start_BMS 0001  
       ??_INTERRUPT_InterruptManager 0001                     __CFG_PRICLKEN$ON 000000  
                    Set_REFON_Pin@ic 0015           __size_of_Set_DCTO_Mode_OFF 0046  
                           _BAUDCON1 000FB8                           set_adc@CHG 0015  
                         set_adc@DCP 0011                       __size_of_Delay 0034  
                           ?_set_adc 000F              Set_REFON_Pin@REFON_Mode 0017  
                   ___lwdiv@quotient 0013                   __end_of_crc15Table 7FA9  
                      _TMR0_CallBack 1648                       __size_of_putch 000A  
              LTC6804_rdcv@pec_error 00DF                 _INTERRUPT_Initialize 161E  
                  ??_TMR0_Initialize 000F                       ___wmul@product 0013  
                           _LATCbits 000F8B                 LTC6804_adcv@temp_pec 002C  
           LTC6804_rdcv@current_cell 00EF                         ??_pec15_calc 0019  
           SetTempEnable@fault_value 001A                             _IPR1bits 000F9F  
                           _PIE1bits 000F9D  __size_of_INTERRUPT_InterruptManager 00A4  
                           _PIR1bits 000F9E                             _RCONbits 000FD0  
                  ??_spi_write_array 0014                     __CFG_WDTPS$32768 000000  
                           _SSP2CON1 000F6C                             _TMR0_ISR 15E4  
                           _SSP2STAT 000F6D                        ??_wakeup_idle 0014  
                   __size_of_ADC_ISR 0004                           _ADCON0bits 000FC2  
                  ___wmul@multiplier 000F                           printf@flag 0022  
                         printf@prec 0023                   __end_of_pec15_calc 0EC4  
                     ?_TMR0_CallBack 0001                          _INTCON2bits 000FF1  
                          copy_data0 1100                ?_INTERRUPT_Initialize 0001  
           LTC6804_rdcv_reg@temp_pec 002A                             _Aux_data 008A  
                        DelayMicro@x 0012             LTC6804_rdcv@received_pec 00E7  
           LTC6804_rdcv_reg@total_ic 0024              __size_of_spi_write_read 0082  
                           __Hrparam 0000                     LT6804@crc15Table 7BA9  
                           __Lrparam 0000                  LTC6804_wrcfg@config 0024  
                 __CFG_BOREN$SBORDIS 000000                    __CFG_P2BMX$PORTD2 000000  
                           _Run_Mode 13DA                     ?_SPI2_Initialize 0001  
            ??_OSCILLATOR_Initialize 000F             __end_of_LTC6804_rdcv_reg 0C26  
              spi_write_read@tx_Data 0010                    ??_TMR0_StartTimer 000F  
              spi_write_read@rx_data 0014          __size_of_EUSART1_Initialize 0038  
                   __size_of___lwdiv 0052                     __size_of___lwmod 0042  
                        ??_Start_BMS 002A                      ___lwdiv@divisor 0011  
               LTC6804_rdcv@data_pec 00E9                 LTC6804_rdcv@cell_reg 00EB  
                    ___lwdiv@counter 0015                  __end_of_wakeup_idle 15E4  
                   __size_of_set_adc 00DC                             __ptext10 1252  
                           __ptext11 1580                             __ptext20 13DA  
                           __ptext12 14E0                             __ptext21 0C26  
                           __ptext13 1640                             __ptext30 0B06  
                           __ptext22 162A                             __ptext14 15F4  
                           __ptext31 15D2                             __ptext23 1324  
                           __ptext15 111A                             __ptext40 15E4  
                           __ptext32 150C                             __ptext24 12E2  
                           __ptext16 1602                             __ptext41 1648  
                           __ptext33 0F50                             __ptext25 116C  
                           __ptext17 161E                             __ptext42 1480  
                           __ptext34 1052                             __ptext26 0534  
                           __ptext18 1414                             __ptext43 14B2  
                           __ptext35 139E                             __ptext27 0D44  
                           __ptext19 15A4                             __ptext44 1644  
                           __ptext36 1610                             __ptext28 00B0  
                           __ptext37 0E20                             __ptext29 155A  
                           __ptext38 144C                         _SSP2CON1bits 000F6C  
              __size_of_UpdateLT6804 0016                            set_adc@CH 0013  
                          set_adc@MD 000F               __size_of_LTC6804_wrcfg 026A  
                      __size_of_main 003C                __end_of_Set_REFON_Pin 1208  
                     _Aux_codes_Bank 0242                         _TmpTemp_DegF 0272  
              __size_of_wakeup_sleep 0026                             int$flags 0051  
 __end_of_INTERRUPT_InterruptManager 00AC           _INTERRUPT_InterruptManager 0008  
                           main@argc 02A4                             main@argv 02A6  
                          printf@val 0024                 LTC6804_rdcv@total_ic 0036  
                _EUSART1_Receive_ISR 14B2                         _SSP2STATbits 000F6D  
                           exp@coeff 7FB3                             log@coeff 7FD1  
                       _UpdateLT6804 15BC                           _INTCONbits 000FF2  
                    ??_TMR0_CallBack 0001               ??_INTERRUPT_Initialize 000F  
            LTC6804_rdcv@parsed_cell 00E5                       pec15_calc@addr 001E  
                     pec15_calc@data 0017                         _wakeup_sleep 1534  
                           intlevel2 0000                 ?_EUSART1_Receive_ISR 0001  
                   ___lwmod@dividend 0016              ?_PIN_MANAGER_Initialize 0001  
             LTC6804_rdcv@BYT_IN_REG 00E3                           _RCSTA1bits 000FAB  
       __end_of_EUSART1_Transmit_ISR 14B2                     ??_ADC_Initialize 000F  
                           printf@ap 0020                        _LTC6804_wrcfg 089C  
             __size_of_EUSART1_Write 003E                   Set_DCC_Mode_OFF@ic 0015  
                        _wakeup_idle 15D2                      ___lwmod@divisor 0018  
                    _TMR0_Initialize 14E0                      ___lwmod@counter 001A  
          __size_of_Set_DCC_Mode_OFF 0080                    __CFG_T3CMX$PORTC0 000000  
          LTC6804_wrcfg@BYTES_IN_REG 01C8                __end_of_SetTempEnable 129C  
              ??_EUSART1_Receive_ISR 0001       __end_of_PIN_MANAGER_Initialize 116C  
                    _spi_write_array 139E                 LTC6804_rdcv_reg@data 0026  
                  __CFG_FOSC$INTIO67 000000                       _spi_write_read 0F50  
             LTC6804_rdcv@NUM_RX_BYT 00E1          Set_DCC_Mode_OFF@fault_value 0019  
